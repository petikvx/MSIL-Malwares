// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.SendingReportFeedbackEventArgs
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Shared;
using SmartAssembly.Zip;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Xml;

namespace SmartAssembly.SmartExceptionsCore
{
  public class SendingReportFeedbackEventArgs : EventArgs
  {
    private SimpleZip.ႭႳ Ⴅ;

    public SendingReportStep Step
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴄ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public bool Failed
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴐ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public string ErrorMessage
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴃ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public string ReportID
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴍ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    internal SendingReportFeedbackEventArgs(SendingReportStep Ⴓ, string Ⴃ)
      : this(Ⴓ, Ⴃ, string.Empty)
    {
      try
      {
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep> o2 = (Enum) Ⴓ;
        string o3 = Ⴃ;
        StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
        throw;
      }
    }

    internal SendingReportFeedbackEventArgs(SendingReportStep Ⴈ, string Ⴅ, string Ⴀ)
    {
      string empty1 = string.Empty;
      this.Ⴅ.Ⴃ = empty1;
      string empty2 = string.Empty;
      this.Ⴅ.Ⴍ = empty2;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      SendingReportStep sendingReportStep;
      bool flag;
      string str1;
      string str2;
      try
      {
        sendingReportStep = Ⴈ;
        this.Ⴅ.Ⴄ = sendingReportStep;
        flag = Ⴅ != null && AppPathFinder.Ⴐ(Ⴅ, 18, 37) > 0;
        this.Ⴅ.Ⴐ = flag;
        str1 = Ⴅ;
        this.Ⴅ.Ⴃ = str1;
        str2 = Ⴀ;
        this.Ⴅ.Ⴍ = str2;
      }
      catch (Exception ex)
      {
        string o1 = empty1;
        string o2 = empty2;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep> o3 = (Enum) sendingReportStep;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) flag;
        string o5 = str1;
        string o6 = str2;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep> o8 = (Enum) Ⴈ;
        string o9 = Ⴅ;
        string o10 = Ⴀ;
        StackFrameHelper.CreateException10(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this, (object) o8, (object) o9, (object) o10);
        throw;
      }
    }

    static SendingReportFeedbackEventArgs()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static PropertyInfo Ⴈ([In] Type obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 51:
            num2 = 7;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = 0;
              continue;
            case 2:
              num1 = 0;
              continue;
            case 5:
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs.Ⴈ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.GetProperty(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Type o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static byte Ⴓ([In] ref Color obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 118:
            num2 = 5;
            break;
          case 119:
            num2 = 3;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
              goto label_3;
            case 2:
            case 6:
            case 8:
              num1 = 1;
              continue;
            case 3:
              goto label_10;
            case 4:
            case 5:
              goto label_9;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs.Ⴓ);
              num1 = 1;
              continue;
          }
        }
label_9:
        return obj0.B;
label_10:
        return obj0.G;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<Color> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static bool Ⴀ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 126:
            num2 = 3;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
            case 5:
              num1 = 1;
              continue;
            case 1:
              goto label_3;
            case 2:
            case 3:
              goto label_8;
            case 7:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs.Ⴀ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return Convert.ToBoolean(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴅ
    {
      internal Exception Ⴐ;
      internal Guid Ⴈ;
      internal char[] Ⴅ;
      internal Dictionary<string, object> Ⴍ;
      internal XmlWriter Ⴀ;
      internal List<Ⴈ.Ⴈ> Ⴃ;
      internal List<string> Ⴗ;
      internal Dictionary<string, int> Ⴓ;
      internal Dictionary<string, int> Ⴄ;
      internal MemoryStream Ⴜ;
      internal byte[] ႨႰ;
      internal FatalExceptionEventHandler ႨႨ;
      internal EventHandler ႨႥ;
    }
  }
}
