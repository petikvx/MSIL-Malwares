// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0002;
using \u0004;
using \u0014;
using \u0015;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal sealed class \u0003 : \u0011
  {
    internal string \u0001;
    private readonly List<\u0013> \u0001 = new List<\u0013>();
    [NonSerialized]
    internal static GetString \u0019;

    [SpecialName]
    protected override IList<\u0013> \u0001() => (IList<\u0013>) this.\u0001;

    [SpecialName]
    public override JTokenType \u0001() => JTokenType.Constructor;

    public \u0003()
    {
    }

    public \u0003([In] \u0003 obj0)
      : base((\u0011) obj0)
    {
      this.\u0001 = obj0.\u0001;
    }

    public \u0003([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          throw new ArgumentException(\u0003.\u0019(25476), \u0003.\u0019(25467));
        case null:
          throw new ArgumentNullException(\u0003.\u0019(25467));
        default:
          this.\u0001 = obj0;
          break;
      }
    }

    internal override \u0013 \u0001() => (\u0013) new \u0003(this);

    public override void \u0001([In] JsonWriter obj0, [In] \u0005.\u0005[] obj1)
    {
      obj0.\u0001(this.\u0001);
      IEnumerator<\u0013> enumerator = ((\u0013) this).\u0001().\u0001();
      try
      {
        if (false)
          ;
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
        {
          if (true)
            enumerator.Current.\u0001(obj0, obj1);
        }
      }
      finally
      {
        while (enumerator != null)
        {
          if (true)
          {
            \u0011.\u007E\u0007\u0002((object) enumerator);
            break;
          }
        }
      }
      do
      {
        if (true)
          obj0.\u0010();
      }
      while (false);
    }

    public override \u0013 this[[In] object obj0]
    {
      get
      {
        \u0006.\u0001(obj0, \u0003.\u0019(6884));
        return obj0 is int num ? this.\u0001(num) : throw new ArgumentException(\u0002.\u0002.\u0001(\u0003.\u0019(25521), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0006.\u0001(obj0)));
      }
      [param: In] set
      {
        object obj = obj0;
        string str = \u0003.\u0019(6884);
        if (true)
          \u0006.\u0001(obj, str);
        if (!(obj0 is int num))
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0003.\u0019(25646), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0006.\u0001(obj0)));
        this.\u0001(num, value);
      }
    }

    static \u0003() => Strings.CreateGetStringDelegate(typeof (\u0003));
  }
}
