// Decompiled with JetBrains decompiler
// Type:  
// Assembly: IUnknownSafeHand, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8A634AAB-5188-4D51-8A9B-F2BFECF380AF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.PowerShell.gen-9395c1e6ca8f59400a742d292ba944d420396fec84d0dcbec9f2e4f0aeff02b0.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;

internal sealed class \u000F\u2008 : IEnumerable<object>, IEnumerable
{
  public readonly object \u0002;
  public readonly object \u0003;

  public \u000F\u2008(object _param1, object _param2)
  {
    this.\u0002 = _param1;
    this.\u0003 = _param2;
  }

  public IEnumerator<object> GetEnumerator() => (IEnumerator<object>) new \u000F\u2008.\u0002(0)
  {
    \u0005 = this
  };

  public override string ToString()
  {
    StringBuilder stringBuilder = new StringBuilder(\u0005\u2004\u2000.\u0002(737667747));
    stringBuilder.Append(this.\u0002);
    object obj = this.\u0003;
    while (true)
    {
      switch (obj)
      {
        case \u000F\u2008 _:
          stringBuilder.Append(' ');
          stringBuilder.Append(((\u000F\u2008) obj).\u0002);
          obj = ((\u000F\u2008) obj).\u0003;
          continue;
        case \u000E\u2007 _:
          goto label_4;
        default:
          goto label_3;
      }
    }
label_3:
    stringBuilder.Append(\u0005\u2004\u2000.\u0002(737667755));
    stringBuilder.Append(obj);
label_4:
    stringBuilder.Append(')');
    return stringBuilder.ToString();
  }

  IEnumerator IEnumerable.\u000F\u2008\u2006\u2004\u2002\u2000\u0002() => (IEnumerator) this.GetEnumerator();

  private sealed class \u0002 : IEnumerator<object>, IDisposable, IEnumerator
  {
    private int \u0002;
    private object \u0003;
    public \u000F\u2008 \u0005;
    private object \u0008;

    [DebuggerHidden]
    public \u0002(int _param1) => this.\u0002 = _param1;

    [DebuggerHidden]
    void IDisposable.\u0002\u2006\u2004\u2002\u2000\u0002()
    {
    }

    bool IEnumerator.MoveNext()
    {
      switch (this.\u0002)
      {
        case 0:
          this.\u0002 = -1;
          this.\u0003 = this.\u0005.\u0002;
          this.\u0002 = 1;
          return true;
        case 1:
          this.\u0002 = -1;
          this.\u0008 = this.\u0005.\u0003;
          break;
        case 2:
          this.\u0002 = -1;
          this.\u0008 = ((\u000F\u2008) this.\u0008).\u0003;
          break;
        case 3:
          this.\u0002 = -1;
          goto label_10;
        default:
          return false;
      }
      if (this.\u0008 is \u000F\u2008)
      {
        this.\u0003 = ((\u000F\u2008) this.\u0008).\u0002;
        this.\u0002 = 2;
        return true;
      }
      if (!(this.\u0008 is \u000E\u2007))
      {
        this.\u0003 = this.\u0008;
        this.\u0002 = 3;
        return true;
      }
label_10:
      this.\u0008 = (object) null;
      return false;
    }

    [DebuggerHidden]
    object IEnumerator<object>.\u0002\u2006\u2004\u2002\u2000\u0002() => this.\u0003;

    [DebuggerHidden]
    void IEnumerator.\u0002\u2006\u2004\u2002\u2000\u0003() => throw new NotSupportedException();

    [DebuggerHidden]
    object IEnumerator.\u0002\u2006\u2004\u2002\u2000\u0003() => this.\u0003;
  }
}
