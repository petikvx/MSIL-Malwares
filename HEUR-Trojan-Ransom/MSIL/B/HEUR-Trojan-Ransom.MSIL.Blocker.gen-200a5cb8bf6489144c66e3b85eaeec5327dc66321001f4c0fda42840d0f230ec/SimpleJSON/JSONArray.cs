// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ClaimTyp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 6CD146E8-0143-4099-A2FD-F452B55D5FF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-200a5cb8bf6489144c66e3b85eaeec5327dc66321001f4c0fda42840d0f230ec.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -1003598624;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -381095408)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = this.m_List[aIndex];
              num1 = -1804836886;
              continue;
            case 2:
              num1 = (int) num2 * -689914169 ^ 622948673;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 130045355 ^ 271527712;
              continue;
            case 4:
              goto label_6;
            default:
              goto label_9;
          }
        }
label_6:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_9:
        return jsonNode;
label_7:
        num3 = 1;
label_8:
        num1 = num3 != 0 ? -1022831947 : (num1 = -94510099);
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 1787083304;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1139475249)) % 7U)
          {
            case 0:
              int num4 = !flag ? -386427605 : (num4 = -1380368198);
              num1 = num4 ^ (int) num2 * 1385541815;
              continue;
            case 1:
              goto label_3;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -97948746 ^ 255481446;
              continue;
            case 3:
              this.m_List[aIndex] = value;
              num1 = 723650934;
              continue;
            case 4:
              goto label_1;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -505759381 ^ -1501206509;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 1553699380;
        }
label_3:
        return;
label_12:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 1894015619;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 556629708)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -69769969 ^ 1428400125;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        this.m_List.Add(value);
label_1:
        int num1 = 161023442;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1350173591)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 178848254 ^ -1862314485;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count => this.m_List.Count;

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_6;
label_1:
      int num1 = 1545874418;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 846238517)) % 9U)
        {
          case 0:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -826456336 ^ -2101852120;
            continue;
          case 2:
            num1 = (int) num2 * -1511929902 ^ -369513622;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 694208559 ^ 660989535;
            continue;
          case 4:
            goto label_5;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = 2044128026;
            continue;
          case 6:
            goto label_1;
          case 7:
            int num3 = flag ? 1330216522 : (num3 = 984299009);
            num1 = num3 ^ (int) num2 * 1955272973;
            continue;
          case 8:
            num1 = (int) num2 * -948675659 ^ 1324029560;
            continue;
          default:
            goto label_12;
        }
      }
label_5:
      int num4 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_7;
label_12:
      return jsonNode1;
label_6:
      num4 = 1;
label_7:
      flag = num4 != 0;
      num1 = 469688992;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 450218218;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1822706393)) % 4U)
        {
          case 0:
            jsonNode = aNode;
            num1 = (int) num2 * 937205324 ^ 1169789528;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * 1077210916 ^ -1530698447;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 349063745;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 102250691)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1549259940 ^ 1061324600;
              continue;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -1050118110 ^ -446853220;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -567665368;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1421645499)) % 19U)
          {
            case 0:
              num2 = (int) num3 * 1716039355 ^ 813126146;
              continue;
            case 1:
              enumerator = this.m_List.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 829786273 ^ 1366902815;
              continue;
            case 2:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = -1649765839;
              continue;
            case 3:
              goto label_1;
            case 4:
              goto label_14;
            case 5:
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -1557926626;
              continue;
            case 7:
              int num4;
              num2 = num4 = num1 == 1 ? -719257259 : (num4 = -655843497);
              continue;
            case 8:
              int num5 = num1 == 0 ? 161882490 : (num5 = 1601846856);
              num2 = num5 ^ (int) num3 * 1276518817;
              continue;
            case 9:
              num2 = (int) num3 * 219919105 ^ 1484945789;
              continue;
            case 10:
              N = (JSONNode) null;
              num2 = (int) num3 * 525927355 ^ -1650107125;
              continue;
            case 11:
              enumerator1 = false;
              num2 = -1429260038;
              continue;
            case 12:
              goto label_19;
            case 13:
              num2 = (int) num3 * -1390813861 ^ -991449789;
              continue;
            case 15:
              int num6;
              num2 = num6 = enumerator.MoveNext() ? -1464758548 : (num6 = -952503013);
              continue;
            case 16:
              num2 = (int) num3 * -1987623747 ^ -1082716345;
              continue;
            case 17:
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -855939411;
              continue;
            default:
              goto label_17;
          }
        }
label_14:
        enumerator1 = true;
        goto label_19;
label_17:
        // ISSUE: reference to a compiler-generated method
        this.\u003C\u003Em__Finally1();
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_7:
        int num1 = !enumerator.MoveNext() ? -830058508 : (num1 = -873157482);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -433016262)) % 8U)
          {
            case 0:
              goto label_7;
            case 1:
              str1 = JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(str1, JSONArray.\u206D‮‎‪‌⁪‪‏⁮‫⁪​‍⁫‮‪‬‌‎‌⁫⁫⁫‍⁪⁬‍⁬‏‭‬‏⁯⁫⁭‌⁬‌⁪‎‮((object) current));
              num1 = -1160650875;
              continue;
            case 2:
              str1 = JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(str1, ", ");
              num1 = (int) num2 * 1736172788 ^ -1581810965;
              continue;
            case 3:
              int num3 = flag ? -1189065581 : (num3 = -913694760);
              num1 = num3 ^ (int) num2 * -112310207;
              continue;
            case 4:
              current = enumerator.Current;
              flag = JSONArray.\u202B‌‬‪‫‌‮⁫⁬‫⁭‎⁭‏⁬⁪‫‪⁬⁬⁭⁬⁮‫‭‎‬‏‍⁯‭⁪‏‫‪‏‪‮‫‮‮(str1) > 2;
              num1 = -1827388959;
              continue;
            case 5:
              num1 = -873157482;
              continue;
            case 7:
              num1 = (int) num2 * -1226960319 ^ -1676751179;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = -1270651283;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -433016262)) % 3U)
          {
            case 0:
              goto label_11;
            case 1:
              num4 = (int) num5 * -702574607 ^ 15720920;
              continue;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      string str2 = JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(str1, " ]");
label_16:
      int num6 = -796261627;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -433016262)) % 4U)
        {
          case 0:
            goto label_16;
          case 2:
            num6 = (int) num7 * 1190498443 ^ -1470950179;
            continue;
          case 3:
            str3 = str2;
            num6 = (int) num7 * -620555815 ^ 1446733339;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1497700928;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2000014086)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1176487114 ^ 716281167;
            continue;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1898067428 ^ -376076473;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num3 = enumerator.MoveNext() ? 2091909816 : (num3 = 1571411615);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 2000014086)) % 8U)
          {
            case 0:
              int num5 = flag ? 311265738 : (num5 = 47315373);
              num3 = num5 ^ (int) num4 * -1515937239;
              continue;
            case 2:
              num3 = 2091909816;
              continue;
            case 3:
              str1 = JSONArray.\u200B​⁭⁮‏‏⁯⁬⁫⁮⁮⁮‭⁮​⁯​⁪‬⁮⁮‫‌⁫‌⁮‌⁬‌‮⁭‎‎⁪‪⁪⁪‎‬‬‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(str1, current.ToString(JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(aPrefix, "   ")));
              num3 = 1271716331;
              continue;
            case 4:
              str1 = JSONArray.\u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮(str1, ", ");
              num3 = (int) num4 * -1218741101 ^ 1543523593;
              continue;
            case 5:
              num3 = (int) num4 * 472688503 ^ -1549249542;
              continue;
            case 6:
              current = enumerator.Current;
              flag = JSONArray.\u202B‌‬‪‫‌‮⁫⁬‫⁭‎⁭‏⁬⁪‫‪⁬⁬⁭⁬⁮‫‭‎‬‏‍⁯‭⁪‏‫‪‏‪‮‫‮‮(str1) > 3;
              num3 = 1750832294;
              continue;
            case 7:
              goto label_9;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u200B​⁭⁮‏‏⁯⁬⁫⁮⁮⁮‭⁮​⁯​⁪‬⁮⁮‫‌⁫‌⁮‌⁬‌‮⁭‎‎⁪‪⁪⁪‎‬‬‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = 10294957;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 2000014086)) % 4U)
        {
          case 0:
            goto label_17;
          case 1:
            num6 = (int) num7 * -950582620 ^ -1803531960;
            continue;
          case 3:
            str3 = str2;
            num6 = (int) num7 * 1447954607 ^ 172064962;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1164149651;
      bool flag;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2036527505)) % 12U)
        {
          case 0:
            flag = index < this.m_List.Count;
            num1 = -852564635;
            continue;
          case 1:
            JSONArray.\u206E‎⁮‏‬⁪‭‏‍​⁯​‎⁯‭⁬⁫⁮‪⁭⁪‫‎⁭⁫​​‏​​‬‮‭⁫‌​‎⁮⁯⁮‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 2004921233 ^ 1791421212;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * -927750787 ^ -36161039;
            continue;
          case 3:
            num1 = (int) num2 * 832355323 ^ -99545454;
            continue;
          case 4:
            goto label_1;
          case 5:
            ++index;
            num1 = (int) num2 * -171876277 ^ -952483004;
            continue;
          case 6:
            JSONArray.\u200E⁫‍‫⁮⁯‎‮‬‌⁯⁭⁪⁫‍⁮‏⁪⁪‍⁭⁬⁫⁭‌​‫‭‌‮⁬⁪⁭⁯⁯⁮⁬‎⁭⁬‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1285162406 ^ -944824516;
            continue;
          case 7:
            this.m_List[index].Serialize(aWriter);
            num1 = -509277732;
            continue;
          case 8:
            num1 = (int) num2 * 1970085006 ^ -99445818;
            continue;
          case 9:
            goto label_3;
          case 10:
            int num3 = !flag ? -1371545620 : (num3 = -879540290);
            num1 = num3 ^ (int) num2 * -455114719;
            continue;
          case 11:
            num1 = (int) num2 * 281699689 ^ 884535341;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202B‌‬‪‫‌‮⁫⁬‫⁭‎⁭‏⁬⁪‫‪⁬⁬⁭⁬⁮‫‭‎‬‏‍⁯‭⁪‏‫‪‏‪‮‫‮‮([In] string obj0) => obj0.Length;

    static string \u202C‍⁫​⁮⁪⁫⁮⁯⁬‬⁯⁫‬‭‭‬​⁬‏‬⁯‭⁯⁭‪⁯⁫‍⁫‫​‍⁮‍⁪‏⁮⁯⁮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D‮‎‪‌⁪‪‏⁮‫⁪​‍⁫‮‪‬‌‎‌⁫⁫⁫‍⁪⁬‍⁬‏‭‬‏⁯⁫⁭‌⁬‌⁪‎‮([In] object obj0) => obj0.ToString();

    static string \u200B​⁭⁮‏‏⁯⁬⁫⁮⁮⁮‭⁮​⁯​⁪‬⁮⁮‫‌⁫‌⁮‌⁬‌‮⁭‎‎⁪‪⁪⁪‎‬‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200E⁫‍‫⁮⁯‎‮‬‌⁯⁭⁪⁫‍⁮‏⁪⁪‍⁭⁬⁫⁭‌​‫‭‌‮⁬⁪⁭⁯⁯⁮⁬‎⁭⁬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E‎⁮‏‬⁪‭‏‍​⁯​‎⁯‭⁬⁫⁮‪⁭⁪‫‎⁭⁫​​‏​​‬‮‭⁫‌​‎⁮⁯⁮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
