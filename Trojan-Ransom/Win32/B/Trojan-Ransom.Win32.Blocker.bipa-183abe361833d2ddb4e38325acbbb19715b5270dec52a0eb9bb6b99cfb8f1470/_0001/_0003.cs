// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Server.packed, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 712FD340-1A8D-4ADA-8620-0D072E5BB482
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bipa-183abe361833d2ddb4e38325acbbb19715b5270dec52a0eb9bb6b99cfb8f1470.exe

using \u0003;
using System;
using System.Runtime.InteropServices;
using Ⴈ;

namespace \u0001
{
  internal sealed class \u0003 : ApplicationException
  {
    public \u0003()
      : base(\u0004.\u0001.\u0001(623032995, 8))
    {
    }

    static \u0003() => \u0004.\u0001.\u0001();

    internal static int \u0001([In] string obj0, [In] int obj1, [In] int obj2)
    {
      if (false)
        goto label_7;
      else
        goto label_12;
label_1:
      int num1;
      int num2;
      if (true)
        num2 = num1;
      else
        goto label_8;
label_2:
      switch (num2)
      {
        case 0:
        case 2:
        case 4:
        case 6:
          return obj0.Length;
        case 1:
          goto label_10;
        case 3:
          num1 = 7;
          goto label_1;
        case 7:
          goto label_12;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0001.\u0003.\u0001);
          num1 = 7;
          goto label_1;
      }
label_7:
      int num3 = 3;
      goto label_14;
label_8:
      num3 = 0;
      goto label_14;
label_10:
      num1 = 7;
      goto label_1;
label_12:
      int num4 = obj2;
      if (false)
      {
        num2 = num4;
        goto label_2;
      }
      else
      {
        if (true)
          goto label_13;
label_6:
        switch (num4)
        {
          case 0:
            goto label_8;
          default:
            goto label_7;
        }
label_13:
        int num5 = obj1;
        num4 = (num4 ^ num5) - 81;
        goto label_6;
      }
label_14:
      num1 = num3;
      if (false)
        goto label_10;
      else
        goto label_1;
    }

    internal static AppDomain \u0001([In] int obj0, [In] int obj1)
    {
label_0:
      int num1 = obj1;
      int num2;
      while (true)
      {
        int num3;
        do
        {
          if (true)
            goto label_8;
label_3:
          continue;
label_8:
          num3 = obj0;
          if (true)
          {
            num1 ^= num3;
            goto label_3;
          }
          else
            goto label_10;
        }
        while (false);
        int num4 = 3;
label_5:
        num2 = num1 - num4;
        if (false)
        {
          num1 = num2;
          continue;
        }
        break;
label_10:
        num4 = num3;
        goto label_5;
      }
      switch (num2)
      {
        case 0:
          return AppDomain.CurrentDomain;
        default:
          goto label_0;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct \u0001
    {
      internal uint \u0001;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct \u0002
    {
      internal Ⴐ \u0001;
      internal Ⴐ \u0002;
      internal \u0002[] \u0001;
      internal \u0002[] \u0002;
      internal \u0002 \u0001;
      internal uint \u0001;
    }
  }
}
