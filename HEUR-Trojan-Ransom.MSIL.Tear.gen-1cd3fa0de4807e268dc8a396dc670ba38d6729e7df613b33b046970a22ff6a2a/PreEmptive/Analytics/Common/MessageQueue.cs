// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.MessageQueue
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Messages;
using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Collections.Generic;
using System.Threading;

namespace PreEmptive.Analytics.Common
{
  public class MessageQueue : IMessageQueue, IMessageDequeuer
  {
    private IQueueTransmitter a;
    private IQueuePersister b;
    private bool c;
    internal IFlowController d;
    private IClientToolsProvider e;
    private IFlowController f;
    private object g;

    protected IList<Message> Messages
    {
      get
      {
        int num1 = 17798;
        int num2 = num1;
        num1 = 17798;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 0;
            if (num4 == 0)
              ;
            num4 = 1;
            if (num4 == 0)
              ;
            return this.h;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = 915;
        int num2 = num1;
        num1 = 915;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.h = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public bool Stopped
    {
      get
      {
        int num1 = 1;
        if (num1 == 0)
          ;
        num1 = -13716;
        int num2 = num1;
        num1 = -13716;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            num1 = 0;
            if (num1 == 0)
              ;
            return this.i;
          default:
            goto case 1;
        }
      }
      private set
      {
        int num1 = -5698;
        int num2 = num1;
        num1 = -5698;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 0;
            if (num4 == 0)
              ;
            num4 = 1;
            if (num4 == 0)
              ;
            this.i = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public virtual IQueueTransmitter TransmitterThread
    {
      get
      {
        int A_1 = 11;
        int num1 = 5;
        while (true)
        {
          int num2;
          AgentInfo info;
          AgentInfo agentInfo1;
          AgentInfo agentInfo2;
          switch (num1)
          {
            case 0:
              try
              {
                info = this.e.Platform.GetAgentInfo();
              }
              catch
              {
              }
              num1 = 4;
              continue;
            case 1:
              goto label_17;
            case 2:
              agentInfo2 = agentInfo1;
              break;
            case 3:
              info = (AgentInfo) null;
              num2 = 0;
              num1 = num2;
              continue;
            case 4:
              AgentInfo agentInfo3 = info;
              if (agentInfo3 != null)
              {
                agentInfo2 = agentInfo3;
                break;
              }
              agentInfo1 = new AgentInfo();
              agentInfo1.Name = Utils.a("\uEFBE胀胂꧄껆곈ꗊ만", A_1);
              agentInfo1.Version = Utils.a("达\uEFC0\uF3C2", A_1);
              agentInfo1.AdditionalInfo = Utils.a("諭돀뇂\uAAC4뗆", A_1);
              goto label_15;
            case 5:
              switch (0)
              {
                case 0:
                  goto label_3;
                default:
                  continue;
              }
            default:
label_3:
              num2 = 1;
              if (num2 == 0)
                ;
              num2 = -3978;
              int num3 = num2;
              num2 = -3978;
              int num4 = num2;
              switch (num3 == num4 ? 1 : 0)
              {
                case 0:
                case 2:
                  goto label_15;
                default:
                  num2 = 0;
                  if (num2 == 0)
                    ;
                  if (this.a == null)
                  {
                    num2 = 3;
                    num1 = num2;
                    continue;
                  }
                  goto label_17;
              }
          }
          info = agentInfo2;
          this.a = (IQueueTransmitter) new PreEmptive.Analytics.Common.TransmitterThread(info, (IMessageDequeuer) this, this.f, this.e);
          num2 = 1;
          num1 = num2;
          continue;
label_15:
          num2 = 2;
          num1 = num2;
        }
label_17:
        return this.a;
      }
    }

    public virtual IQueuePersister OfflineStorageThread
    {
      get
      {
        int A_1 = 5;
        int num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
              if (false)
                ;
              if (!this.c)
              {
                num1 = 4;
                continue;
              }
              goto label_22;
            case 1:
              if (this.b == null)
              {
                num1 = 2;
                continue;
              }
              goto label_22;
            case 2:
              num1 = 0;
              continue;
            case 3:
              num1 = 1;
              continue;
            case 4:
              goto label_5;
            case 5:
              switch (0)
              {
                case 0:
                  break;
                default:
                  continue;
              }
              break;
          }
          if (this.e.Configuration.SupportOfflineStorage)
            num1 = 3;
          else
            goto label_22;
        }
label_5:
        try
        {
          IOfflineDataStore offlineDataStore;
          int num2;
          switch (0)
          {
            case 0:
label_7:
              this.d = this.f.Copy();
              offlineDataStore = this.e.Platform.GetOfflineDataStore();
              num2 = 3;
              num1 = num2;
              goto default;
            default:
              while (true)
              {
                switch (num1)
                {
                  case 0:
label_13:
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 1:
                    goto label_22;
                  case 2:
                    this.b = (IQueuePersister) new PreEmptive.Analytics.Common.OfflineStorageThread(this.e.Platform.GetOfflineDataStore(), this.d, this.TransmitterThread, this.e.Configuration.AttributeLimiter, this.e.Logger, (IAsyncProvider) this.e.Platform);
                    this.TransmitterThread.TransmissionFailed += new Action<MessageBatch>(this.OfflineStorageThread.SaveDataOffline);
                    num2 = 0;
                    num1 = num2;
                    continue;
                  case 3:
                    if (offlineDataStore != null)
                    {
                      num2 = 31653;
                      int num3 = num2;
                      num2 = 31653;
                      int num4 = num2;
                      switch (num3 == num4 ? 1 : 0)
                      {
                        case 0:
                        case 2:
                          goto label_13;
                        default:
                          num2 = 0;
                          if (num2 == 0)
                            ;
                          num2 = 2;
                          num1 = num2;
                          continue;
                      }
                    }
                    else
                      goto case 0;
                  default:
                    goto label_7;
                }
              }
          }
        }
        catch (Exception ex)
        {
          this.e.Logger.LogException(ex, Utils.a("\uF8B8햺鶼쪾꿀ꛂ뷄럆곈\uA8CA만\uAACE뗐\uF3D2냔꿖뫘뻚규ꯞ裠賢诤쟦蛨裪軬髮菰雲釴", A_1));
          this.e.Logger.LogError(Utils.a("\uF6B8\uDDBA\uDBBC펾ꣀ귂ꃄ铆뷈\uA4CA뿌껎뛐뛒\uF5D4듖뛘껚뇜믞쇠跢諤鏦짨觪裬쿮飰鷲鳴菶郸髺釼雾笀昂愄⤆", A_1));
          this.c = true;
        }
label_22:
        return this.b;
      }
    }

    public MessageQueue(IClientToolsProvider client, IFlowController flowController)
    {
      this.e = client;
      this.f = flowController;
      this.Stopped = false;
      this.Messages = (IList<Message>) new List<Message>();
      this.g = new object();
    }

    public virtual void Start()
    {
      int A_1 = 9;
      bool lockTaken = false;
      object g;
      int num1;
      try
      {
        int num2;
        switch (0)
        {
          case 0:
label_3:
            Monitor.Enter(g = this.g, ref lockTaken);
            num1 = 3;
            num2 = num1;
            goto default;
          default:
            while (true)
            {
              switch (num2)
              {
                case 0:
                  num1 = 4;
                  num2 = num1;
                  continue;
                case 1:
                  if (this.OfflineStorageThread != null)
                  {
                    num1 = 2;
                    num2 = num1;
                    continue;
                  }
                  goto case 9;
                case 2:
                  this.OfflineStorageThread.Start();
                  this.e.Logger.LogInfo(Utils.a("\uE9BCힾ꓀\uE3C2\uAAC4ꇆ꿈\uA7CA\uA4CCꇎ듐\uF3D2ꛔꏖ뛘\uA9DA볜룞蓠쏢釤迦鯨軪賬诮퇰鯲铴蓶\uD9F8駺飼髾漀⌂瘄猆栈礊礌樎甐㴒", A_1));
                  num1 = 9;
                  num2 = num1;
                  continue;
                case 3:
                  if (!this.Stopped)
                  {
                    num1 = 0;
                    num2 = num1;
                    continue;
                  }
                  goto case 5;
                case 4:
                  if (this.TransmitterThread != null)
                  {
                    num1 = 10;
                    num2 = num1;
                    continue;
                  }
                  goto case 5;
                case 5:
                  num1 = 6;
                  num2 = num1;
                  continue;
                case 6:
                  if (!this.Stopped)
                  {
                    num1 = 7;
                    num2 = num1;
                    continue;
                  }
                  goto case 9;
                case 7:
                  num1 = 1;
                  num2 = num1;
                  continue;
                case 8:
                  goto label_29;
                case 9:
                  num1 = 8;
                  num2 = num1;
                  continue;
                case 10:
                  this.TransmitterThread.Start();
                  this.e.Logger.LogInfo(Utils.a("\uE9BCힾ꓀\uE3C2뇄뗆\uA8C8ꗊ뻌ꋎ룐\uA7D2ꇔ닖ꯘﯚ\uA9DC럞鏠蛢蓤菦짨菪賬鳮퇰釲郴鋶韸\uDBFA軼课怀焂焄戆洈┊", A_1));
                  num1 = 5;
                  num2 = num1;
                  continue;
                default:
                  goto label_3;
              }
            }
        }
      }
      finally
      {
        int num3 = 1;
        while (true)
        {
          int num4;
          switch (num3)
          {
            case 0:
              goto label_28;
            case 1:
              switch (0)
              {
                case 0:
                  break;
                default:
                  continue;
              }
              break;
            case 2:
              num4 = 28437;
              int num5 = num4;
              num4 = 28437;
              int num6 = num4;
              switch (num5 == num6 ? 1 : 0)
              {
                case 0:
                case 2:
                  goto label_28;
                default:
                  num4 = 0;
                  if (num4 == 0)
                    ;
                  Monitor.Exit(g);
                  num4 = 0;
                  num3 = num4;
                  continue;
              }
          }
          if (lockTaken)
          {
            num4 = 2;
            num3 = num4;
          }
          else
            break;
        }
label_28:;
      }
label_29:
      num1 = 1;
      if (num1 == 0)
        ;
    }

    public virtual void Stop()
    {
      int A_1 = 0;
      int num1;
      bool lockTaken;
      int num2;
      switch (0)
      {
        case 0:
label_2:
          lockTaken = false;
          num2 = 2;
          num1 = num2;
          goto default;
        default:
          bool flag;
          while (true)
          {
            switch (num1)
            {
              case 0:
                this.e.Logger.LogInfo(Utils.a("\uE7B3습ힷ쪹첻ힽ꺿ꗁ\uE4C3觅껇곉ꃋ\uA7CD뻏럑\uF4D3藕곗뗙껛뿝蟟蟡쓣蟥蛧軩쏫臭苯틱ꃳ蓵駷铹迻鏽槿瘁瀃挅稇⨉砋昍戏眑甓爕欗", A_1));
                this.a();
                this.Stopped = true;
                num2 = 1;
                if (num2 == 0)
                  ;
                num2 = 1;
                num1 = num2;
                continue;
              case 1:
                goto label_18;
              case 2:
                object g;
                try
                {
                  Monitor.Enter(g = this.g, ref lockTaken);
                  flag = !this.Stopped;
                }
                finally
                {
                  int num3 = 1;
                  while (true)
                  {
                    switch (num3)
                    {
                      case 0:
                        goto label_15;
                      case 1:
                        switch (0)
                        {
                          case 0:
                            break;
                          default:
                            continue;
                        }
                        break;
                      case 2:
                        switch (true ? 1 : 0)
                        {
                          case 0:
                          case 2:
                            goto label_15;
                          default:
                            if (true)
                              ;
                            Monitor.Exit(g);
                            num3 = 0;
                            continue;
                        }
                    }
                    if (lockTaken)
                      num3 = 2;
                    else
                      break;
                  }
label_15:;
                }
                num2 = 3;
                num1 = num2;
                continue;
              case 3:
                if (flag)
                {
                  num2 = 0;
                  num1 = num2;
                  continue;
                }
                goto label_18;
              default:
                goto label_2;
            }
          }
label_18:
          this.e.Logger.LogInfo(Utils.a("\uE0B3\uDEB5\uDDB7骹톻\uDBBD뎿뇁ꗃꇅ귇\uEAC9뷋믍뗏\uA7D1뇓\uF6D5냗믙꿛ﻝ苟蟡臣裥죧駩飫臭胯英釳鋵훷", A_1));
          break;
      }
    }

    private void a()
    {
      int A_1 = 12;
      int num1 = 0;
      switch (num1)
      {
        default:
          TimerCallback callback;
          int? stopTimeout;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              callback = (TimerCallback) null;
              stopTimeout = this.e.Configuration.StopBehavior.StopTimeout;
              num2 = 4;
              num1 = num2;
              goto default;
            default:
              Timer timer;
              while (true)
              {
                int? timeForSavingAtStop;
                int num3;
                int num4;
                int num5;
                int num6;
                switch (num1)
                {
                  case 0:
                    callback = (TimerCallback) (A_0 =>
                    {
                      int num7 = 2;
                      while (true)
                      {
                        int num8 = -28532;
                        int num9 = num8;
                        num8 = -28532;
                        int num10 = num8;
                        switch (num9 == num10 ? 1 : 0)
                        {
                          case 0:
                          case 2:
label_9:
                            this.TransmitterThread.FailTransmissionsNow();
                            num8 = 3;
                            num7 = num8;
                            continue;
                          default:
                            num8 = 0;
                            if (num8 == 0)
                              ;
                            switch (num7)
                            {
                              case 0:
                                if (this.OfflineStorageThread != null)
                                {
                                  num8 = 1;
                                  num7 = num8;
                                  continue;
                                }
                                goto label_10;
                              case 1:
                                goto label_9;
                              case 2:
                                num8 = 1;
                                if (num8 == 0)
                                  ;
                                switch (0)
                                {
                                  case 0:
                                    break;
                                  default:
                                    continue;
                                }
                                break;
                              case 3:
                                goto label_8;
                              case 4:
                                num8 = 0;
                                num7 = num8;
                                continue;
                            }
                            if (this.e.Configuration.SupportOfflineStorage)
                            {
                              num8 = 4;
                              num7 = num8;
                              continue;
                            }
                            goto label_14;
                        }
                      }
label_8:
                      return;
label_14:
                      return;
label_10:;
                    });
                    num2 = 1;
                    if (num2 == 0)
                      ;
                    num2 = 9;
                    num1 = num2;
                    continue;
                  case 1:
                    num5 = stopTimeout.GetValueOrDefault();
                    break;
                  case 2:
                    if (callback == null)
                    {
                      num2 = 0;
                      num1 = num2;
                      continue;
                    }
                    goto case 9;
                  case 3:
                    num2 = 10;
                    num1 = num2;
                    continue;
                  case 4:
                    if (!stopTimeout.HasValue)
                    {
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 5:
                    if (timeForSavingAtStop.HasValue)
                    {
                      num2 = 6;
                      num1 = num2;
                      continue;
                    }
                    num2 = 11;
                    num1 = num2;
                    continue;
                  case 6:
                    num6 = timeForSavingAtStop.GetValueOrDefault();
                    goto label_15;
                  case 7:
                    goto label_18;
                  case 8:
                    num6 = num3;
                    goto label_15;
                  case 9:
                    timer = new Timer(callback, (object) null, num3 - num4, -1);
                    num2 = 7;
                    num1 = num2;
                    continue;
                  case 10:
                    num5 = 1;
                    break;
                  case 11:
                    num2 = 8;
                    num1 = num2;
                    continue;
                  default:
                    goto label_3;
                }
                num3 = num5;
                timeForSavingAtStop = this.e.Configuration.StopBehavior.NeededTimeForSavingAtStop;
                num2 = 5;
                num1 = num2;
                continue;
label_15:
                num4 = num6;
                num2 = 2;
                num1 = num2;
              }
label_18:
              try
              {
                num2 = 1;
                int num11 = num2;
                while (true)
                {
                  switch (num11)
                  {
                    case 0:
                      goto label_43;
                    case 1:
                      switch (0)
                      {
                        case 0:
                          goto label_21;
                        default:
                          continue;
                      }
                    case 2:
                      num2 = 4;
                      num11 = num2;
                      continue;
                    case 3:
                      num2 = 0;
                      num11 = num2;
                      continue;
                    case 4:
                      if (this.OfflineStorageThread != null)
                      {
                        num2 = 6;
                        num11 = num2;
                        continue;
                      }
                      goto case 3;
                    case 5:
                      this.TransmitterThread.Stop();
                      this.e.Logger.LogInfo(Utils.a("钿꫁ꇃ\uE6C5볇룉귋ꃍꏏ뿑뷓ꋕ곗뿙껛ﻝ铟諡難菥觧軩쳫蛭釯臱퓳铵鷷\u9FF9鋻\uDEFD珿瘁欃瘅砇漉栋", A_1));
                      num2 = 2;
                      num11 = num2;
                      continue;
                    case 6:
                      this.OfflineStorageThread.Stop();
                      this.e.Logger.LogInfo(Utils.a("钿꫁ꇃ\uE6C5\uA7C7곉\uAACBꋍ맏병뇓\uF6D5ꯗ껙돛곝臟藡臣웥鳧苩黫语釯雱퓳黵駷觹\uDCFB鳽旿朁樃★笇縉挋縍怏眑瀓", A_1));
                      num2 = 3;
                      num11 = num2;
                      continue;
                    default:
label_21:
                      if (this.TransmitterThread != null)
                      {
                        num2 = 5;
                        num11 = num2;
                        continue;
                      }
                      goto case 2;
                  }
                }
label_43:
                return;
              }
              finally
              {
                int num12 = 1;
                while (true)
                {
                  int num13;
                  switch (num12)
                  {
                    case 0:
                      goto label_37;
                    case 1:
                      switch (0)
                      {
                        case 0:
                          break;
                        default:
                          continue;
                      }
                      break;
                    case 2:
                      num13 = -421;
                      int num14 = num13;
                      num13 = -421;
                      int num15 = num13;
                      switch (num14 == num15 ? 1 : 0)
                      {
                        case 0:
                        case 2:
                          goto label_37;
                        default:
                          num13 = 0;
                          if (num13 == 0)
                            ;
                          timer.Dispose();
                          num13 = 0;
                          num12 = num13;
                          continue;
                      }
                  }
                  if (timer != null)
                  {
                    num13 = 2;
                    num12 = num13;
                  }
                  else
                    break;
                }
label_37:;
              }
          }
      }
    }

    public virtual void Queue(Message message)
    {
      int A_1 = 17;
      int num1 = 0;
      switch (num1)
      {
        default:
          if (false)
            ;
          bool lockTaken = false;
          object g;
          try
          {
            int num2;
            switch (0)
            {
              case 0:
label_5:
                Monitor.Enter(g = this.g, ref lockTaken);
                num2 = 11;
                num1 = num2;
                goto default;
              default:
                int drop;
                int num3;
                while (true)
                {
                  switch (num1)
                  {
                    case 0:
                      if (message is ApplicationStop)
                      {
                        num2 = 10;
                        num1 = num2;
                        continue;
                      }
                      goto case 16;
                    case 1:
                      if (num3 < drop)
                      {
                        this.Messages.RemoveAt(0);
                        ++num3;
                        num2 = 8;
                        num1 = num2;
                        continue;
                      }
                      num2 = 14;
                      num1 = num2;
                      continue;
                    case 2:
                      if (!this.e.Configuration.OptIn)
                      {
                        num2 = 15;
                        num1 = num2;
                        continue;
                      }
                      goto case 10;
                    case 3:
                      num2 = 2;
                      num1 = num2;
                      continue;
                    case 4:
                      if (this.f.ShouldSendNow(this.Messages.Count))
                      {
                        num2 = 17;
                        num1 = num2;
                        continue;
                      }
                      goto case 16;
                    case 5:
                      if (drop > 0)
                      {
                        num2 = 18;
                        num1 = num2;
                        continue;
                      }
                      goto case 12;
                    case 6:
                      goto label_39;
                    case 7:
                      if (this.e.Configuration != null)
                      {
                        num2 = 3;
                        num1 = num2;
                        continue;
                      }
                      goto case 15;
                    case 8:
                    case 13:
                      num2 = 1;
                      num1 = num2;
                      continue;
                    case 9:
                      num2 = 7;
                      num1 = num2;
                      continue;
                    case 10:
                      this.Messages.Add(message);
                      this.e.Logger.LogInfo(string.Format(Utils.a("蓄\uEFC6\uA7C8\uE2CA\uEDCC듎\uE1D0껒\uF5D4뫖볘\uA8DA껜뻞蛠蛢엤迦裨飪췬跮铰雲鯴ퟶ飸\u9FFA駼髾攀⌂焄栆⤈缊攌樎ㄐ縒瀔搖樘稚稜稞Ġ刢値䈦尨个̬", A_1), new object[1]
                      {
                        (object) message.TagDescription
                      }));
                      drop = this.f.MessagesToDrop(this.Messages.Count);
                      num3 = 0;
                      num2 = 13;
                      num1 = num2;
                      continue;
                    case 11:
                      if (!this.Stopped)
                      {
                        num2 = 9;
                        num1 = num2;
                        continue;
                      }
                      goto case 16;
                    case 12:
                      num2 = 4;
                      num1 = num2;
                      continue;
                    case 14:
                      num2 = 5;
                      num1 = num2;
                      continue;
                    case 15:
                      num2 = 0;
                      num1 = num2;
                      continue;
                    case 16:
                      num2 = 6;
                      num1 = num2;
                      continue;
                    case 17:
                      this.TransmitterThread.ProcessQueueNow();
                      num2 = 16;
                      num1 = num2;
                      continue;
                    case 18:
                      this.e.Logger.LogWarning(string.Format(Utils.a("铄닆곈뻊\uA8CC\uEFCE말닒ꛔ\uF7D6뛘귚룜귞蟠迢諤郦賨迪쏬쿮諰쏲裴ퟶ铸黺軼賾怀搂怄⼆稈∊ⴌ朎瀐攒瀔㜖笘縚砜焞Ġ䜢圤䠦夨嬪䠬䬮ἰ", A_1), new object[1]
                      {
                        (object) drop
                      }));
                      num2 = 12;
                      num1 = num2;
                      continue;
                    default:
                      goto label_5;
                  }
                }
label_39:
                return;
            }
          }
          finally
          {
            int num4 = 1;
            while (true)
            {
              int num5;
              switch (num4)
              {
                case 0:
                  goto label_40;
                case 1:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
                case 2:
                  num5 = -3879;
                  int num6 = num5;
                  num5 = -3879;
                  int num7 = num5;
                  switch (num6 == num7 ? 1 : 0)
                  {
                    case 0:
                    case 2:
                      goto label_40;
                    default:
                      num5 = 0;
                      if (num5 == 0)
                        ;
                      Monitor.Exit(g);
                      num5 = 0;
                      num4 = num5;
                      continue;
                  }
              }
              if (lockTaken)
              {
                num5 = 2;
                num4 = num5;
              }
              else
                break;
            }
label_40:;
          }
      }
    }

    public virtual void SendDisabledChanged(bool stop)
    {
      int A_1 = 3;
      bool lockTaken = false;
      object g;
      int num1;
      try
      {
        int num2;
        switch (0)
        {
          case 0:
label_3:
            Monitor.Enter(g = this.g, ref lockTaken);
            num1 = 5;
            num2 = num1;
            goto default;
          default:
            while (true)
            {
              switch (num2)
              {
                case 0:
                  if (this.d != null)
                  {
                    num1 = 8;
                    num2 = num1;
                    continue;
                  }
                  goto case 9;
                case 1:
                  if (this.f.ShouldSendNow(this.Messages.Count))
                  {
                    num1 = 11;
                    num2 = num1;
                    continue;
                  }
                  goto case 7;
                case 2:
                  if (stop != this.d.SendDisabled)
                  {
                    num1 = 3;
                    num2 = num1;
                    continue;
                  }
                  goto case 9;
                case 3:
                  this.d.SendDisabled = stop;
                  num1 = 9;
                  num2 = num1;
                  continue;
                case 4:
                  num1 = 6;
                  num2 = num1;
                  continue;
                case 5:
                  if (!this.Stopped)
                  {
                    num1 = 4;
                    num2 = num1;
                    continue;
                  }
                  goto case 7;
                case 6:
                  if (!stop)
                  {
                    num1 = 12;
                    num2 = num1;
                    continue;
                  }
                  goto case 7;
                case 7:
                  num1 = 0;
                  num2 = num1;
                  continue;
                case 8:
                  num1 = 2;
                  num2 = num1;
                  continue;
                case 9:
                  num1 = 10;
                  num2 = num1;
                  continue;
                case 10:
                  goto label_32;
                case 11:
                  this.e.Logger.LogInfo(Utils.a("\uE4B6\uDCB8햺\uD9BC횾꿀꓂\uE5C4\uAAC6곈룊뻌껎뛐뛒ꛔ\uF7D6뇘뫚껜\uFFDE菠蛢胤触짨軪菬軮鏰\u9FF2郴鏶\uD9F8髺鏼鯾℀怂樄椆洈戊礌明縐紒昔㜖缘琚漜㼞删䘢䬤䌦䀨䔪䨬\u0F2E尰嘲䘴䐶堸尺堼䰾慀⭂⑄ㅆⱈ歊⽌⩎㑐㵒畔㩖㱘⽚獜罞\u2060ᝢᅤɦѨ᭪ᥬٮὰᑲ啴Ͷᙸ孺\u0E7C\u1A7E\uEF80\uE782ꖄ\uEA86\uEC88\uF88Aﺌ\uEE8E\uF690\uF692\uE694릖", A_1));
                  this.TransmitterThread.ProcessQueueNow();
                  num1 = 7;
                  num2 = num1;
                  continue;
                case 12:
                  num1 = 1;
                  num2 = num1;
                  continue;
                default:
                  goto label_3;
              }
            }
        }
      }
      finally
      {
        int num3 = 1;
        while (true)
        {
          int num4;
          switch (num3)
          {
            case 0:
              goto label_31;
            case 1:
              switch (0)
              {
                case 0:
                  break;
                default:
                  continue;
              }
              break;
            case 2:
              num4 = -11803;
              int num5 = num4;
              num4 = -11803;
              int num6 = num4;
              switch (num5 == num6 ? 1 : 0)
              {
                case 0:
                case 2:
                  goto label_31;
                default:
                  num4 = 0;
                  if (num4 == 0)
                    ;
                  Monitor.Exit(g);
                  num4 = 0;
                  num3 = num4;
                  continue;
              }
          }
          if (lockTaken)
          {
            num4 = 2;
            num3 = num4;
          }
          else
            break;
        }
label_31:;
      }
label_32:
      num1 = 1;
      if (num1 == 0)
        ;
    }

    public virtual void SendMessages()
    {
      int A_1 = 16;
      int num1 = 1;
      if (num1 == 0)
        ;
      bool lockTaken = false;
      object g;
      try
      {
        int num2;
        switch (0)
        {
          case 0:
label_4:
            Monitor.Enter(g = this.g, ref lockTaken);
            num1 = 2;
            num2 = num1;
            goto default;
          default:
            while (true)
            {
              switch (num2)
              {
                case 0:
                  num1 = 1;
                  num2 = num1;
                  continue;
                case 1:
                  goto label_17;
                case 2:
                  if (!this.Stopped)
                  {
                    num1 = 3;
                    num2 = num1;
                    continue;
                  }
                  goto case 0;
                case 3:
                  this.e.Logger.LogInfo(Utils.a("郃껅귇\uEAC9鿋ꯍ뻏뛑駓돕ꯗ꧙뷛망藟釡쳣쿥죧蟩觫髭飯鷱郳훵郷鯹迻\uDEFD拿朁愃栅⠇椉洋戍簏眑瀓㠕㠗嬙栛樝䔟伡吣別䄧䐩䬫อ䐯崱ᐳ䔵崷吹堻ḽⴿ❁㝃㕅⥇ⵉ⥋㵍繏", A_1));
                  this.TransmitterThread.ProcessQueueNow();
                  num1 = 0;
                  num2 = num1;
                  continue;
                default:
                  goto label_4;
              }
            }
label_17:
            break;
        }
      }
      finally
      {
        int num3 = 1;
        while (true)
        {
          int num4;
          switch (num3)
          {
            case 0:
              goto label_18;
            case 1:
              switch (0)
              {
                case 0:
                  break;
                default:
                  continue;
              }
              break;
            case 2:
              num4 = 17488;
              int num5 = num4;
              num4 = 17488;
              int num6 = num4;
              switch (num5 == num6 ? 1 : 0)
              {
                case 0:
                case 2:
                  goto label_18;
                default:
                  num4 = 0;
                  if (num4 == 0)
                    ;
                  Monitor.Exit(g);
                  num4 = 0;
                  num3 = num4;
                  continue;
              }
          }
          if (lockTaken)
          {
            num4 = 2;
            num3 = num4;
          }
          else
            break;
        }
label_18:;
      }
    }

    public virtual IList<Message> DequeueMessages()
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = 0;
      switch (num1)
      {
        default:
          bool lockTaken = false;
          object g;
          try
          {
            Monitor.Enter(g = this.g, ref lockTaken);
            IList<Message> messages = this.Messages;
            this.Messages = (IList<Message>) new List<Message>();
            return messages;
          }
          finally
          {
            int num2 = 1;
            int num3 = num2;
            while (true)
            {
              switch (num3)
              {
                case 0:
                  goto label_12;
                case 1:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
                case 2:
                  num2 = -28240;
                  int num4 = num2;
                  num2 = -28240;
                  int num5 = num2;
                  switch (num4 == num5 ? 1 : 0)
                  {
                    case 0:
                    case 2:
                      goto label_12;
                    default:
                      num2 = 0;
                      if (num2 == 0)
                        ;
                      Monitor.Exit(g);
                      num2 = 0;
                      num3 = num2;
                      continue;
                  }
              }
              if (lockTaken)
              {
                num2 = 2;
                num3 = num2;
              }
              else
                break;
            }
label_12:;
          }
      }
    }

    public virtual IList<Message> PeekMessages()
    {
      if (false)
        ;
      bool lockTaken = false;
      object g;
      try
      {
        Monitor.Enter(g = this.g, ref lockTaken);
        return (IList<Message>) new List<Message>((IEnumerable<Message>) this.Messages);
      }
      finally
      {
        int num1 = 1;
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_12;
            case 1:
              switch (0)
              {
                case 0:
                  break;
                default:
                  continue;
              }
              break;
            case 2:
              num1 = 14047;
              int num3 = num1;
              num1 = 14047;
              int num4 = num1;
              switch (num3 == num4 ? 1 : 0)
              {
                case 0:
                case 2:
                  num1 = 0;
                  num2 = num1;
                  continue;
                default:
                  num1 = 0;
                  if (num1 == 0)
                    ;
                  Monitor.Exit(g);
                  goto case 0;
              }
          }
          if (lockTaken)
          {
            num1 = 2;
            num2 = num1;
          }
          else
            break;
        }
label_12:;
      }
    }
  }
}
