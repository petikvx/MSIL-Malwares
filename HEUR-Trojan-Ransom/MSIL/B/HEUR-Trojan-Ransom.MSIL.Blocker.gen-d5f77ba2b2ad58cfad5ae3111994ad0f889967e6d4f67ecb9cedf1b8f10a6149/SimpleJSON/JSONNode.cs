// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: Encod, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DCFB260-FACB-496A-9BC9-FA9701DCBF71
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d5f77ba2b2ad58cfad5ae3111994ad0f889967e6d4f67ecb9cedf1b8f10a6149.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 132598350;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 336270704)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1532654623 ^ -1859703307;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1261231989;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1265615498)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -594710158 ^ 1565514010;
              continue;
            case 2:
              num1 = (int) num2 * 155881647 ^ 330567172;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 643961265;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 368246288)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1745928431 ^ 663620919;
              continue;
            case 1:
              count = 0;
              num1 = (int) num2 * -1711390444 ^ -249254660;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 624982595;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 609285837)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * -1648348301 ^ 718383746;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -469757587;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -570544847)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1425169297 ^ -601917486;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -265281592;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -149204679)) % 6U)
          {
            case 0:
              num2 = (int) num3 * -591458650 ^ -1552663403;
              continue;
            case 3:
              int num4 = num1 != 0 ? -1913501626 : (num4 = -1426084563);
              num2 = num4 ^ (int) num3 * -821275557;
              continue;
            case 4:
              goto label_4;
            case 5:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_4:
        return false;
label_6:
        this.\u003C\u003E1__state = -1;
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = -1147968506;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -592376369)) % 4U)
          {
            case 0:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 408890006 ^ 2070013809;
              continue;
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * -729883971 ^ 708931422;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 491770829;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 140481079)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1166623576 ^ -851888212;
            continue;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * 250028880 ^ 1869524950;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        if (!int.TryParse(this.Value, out result))
          goto label_5;
label_1:
        int num1 = -1676340237;
label_2:
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -830046978)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1522521375 ^ 283338096;
              continue;
            case 2:
              goto label_1;
            case 3:
              asInt = result;
              num1 = (int) num2 * -41308691 ^ -1382878583;
              continue;
            case 4:
              goto label_5;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
label_5:
        asInt = 0;
        num1 = -1030941234;
        goto label_2;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -1467467003;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1782152907)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 447292759 ^ -225353093;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -642707053;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -827271164)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200F‮⁮‍⁮‬‫⁯​⁯‬⁬‮‌‍‭​‎​⁭‪‏‬‫⁬⁯‪‪⁭⁬​⁪‏⁭‍​‭‭⁭‌‮(), out result);
              num1 = (int) num2 * -38869529 ^ 1046726696;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * 255991180 ^ 340048586;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = -2134255726;
              continue;
            case 5:
              int num3 = !flag ? 674167620 : (num3 = 1916148479);
              num1 = num3 ^ (int) num2 * 1406120525;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 900101750;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 602264180)) % 8U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * -1754003622 ^ 210894021;
              continue;
            case 1:
              num1 = (int) num2 * 565340816 ^ 514434527;
              continue;
            case 2:
              result = 0.0;
              num1 = (int) num2 * -1648214854 ^ -1991625819;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = 1727896570;
              continue;
            case 5:
              int num3 = double.TryParse(this.Value, out result) ? -1496187942 : (num3 = -1190578954);
              num1 = num3 ^ (int) num2 * -501314210;
              continue;
            case 6:
              num1 = (int) num2 * -1911039516 ^ 445841207;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = -2005817314;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -658518176)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -428561909 ^ 2121451562;
              continue;
            case 1:
              int num3 = bool.TryParse(this.Value, out result) ? 309892689 : (num3 = 483333919);
              num1 = num3 ^ (int) num2 * -872757778;
              continue;
            case 2:
              asBool = result;
              num1 = (int) num2 * 1410528982 ^ -1128084879;
              continue;
            case 3:
              num1 = (int) num2 * -859778886 ^ 1059267349;
              continue;
            case 4:
              asBool = !JSONNode.\u200D‌‪‏‎⁫‮‌‮⁯⁫‫⁪‪⁮‬⁯‏‏‬​‌‬‏⁬‏⁫⁭⁯‪⁮‏‏‌‏‪‫‪⁫‏‮(this.Value);
              num1 = -394298855;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1135670519;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1684082154)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 1246717628;
              continue;
            case 2:
              num1 = (int) num2 * 530238803 ^ 388410219;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -431860070;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -298972836)) % 3U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -1454773803 ^ 713912183;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject => this as JSONClass;

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -1080177501;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -320139342)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1284146809 ^ 351790524;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1853454744 ^ -1381999046;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 2059660076;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1991165107)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -159042053 ^ 1260119808;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = 1303705534;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 103859341;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 715489786)) % 7U)
        {
          case 0:
            flag = (object) a == b;
            num1 = 1881526214;
            continue;
          case 2:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 415107676 ^ -762349904;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 2046070812 ^ -2126930808;
            continue;
          case 5:
            flag = true;
            num1 = (int) num2 * 1133343491 ^ 1747317773;
            continue;
          case 6:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1048718077 : (num4 = 1786294119);
      }
label_11:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1821782619;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1829361889)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -982839096 ^ 1114156989;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -743608499;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2041216502)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -707119422 ^ -1700833213;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * 561778796 ^ 1933004928;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u202D‮⁭‪‏‪⁬⁮‪‮‎‎‏‏⁯⁭‭‫‍‏‭‬‪⁭‪‎‌‏‭⁫‪⁫‭‬‮‍‎‪‬⁮‮();
label_1:
      int num1 = -2066479711;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1924662181)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -909620340 ^ -1718712256;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 442010246;
      char ch1;
      char ch2;
      string str1;
      int num2;
      string str2;
      string str3;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1571764598)) % 32U)
        {
          case 0:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -1752991449 ^ 1372227037;
            continue;
          case 1:
            num1 = 1157883252;
            continue;
          case 2:
            ++num2;
            num1 = (int) num3 * 1663953376 ^ 499704925;
            continue;
          case 3:
            int num4;
            num1 = num4 = ch1 == '\\' ? 12380569 : (num4 = 1141901084);
            continue;
          case 4:
            num1 = (int) num3 * -1953453287 ^ -74542121;
            continue;
          case 5:
            int num5;
            num1 = num5 = ch1 == '"' ? 1922834097 : (num5 = 1200231695);
            continue;
          case 6:
            num1 = (int) num3 * 1866732926 ^ -367947307;
            continue;
          case 7:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\\"");
            num1 = 84190583;
            continue;
          case 8:
            ch2 = ch3;
            num1 = (int) num3 * 2006409476 ^ -1736277462;
            continue;
          case 9:
            num1 = (int) num3 * 724637757 ^ 237481970;
            continue;
          case 10:
            num1 = (int) num3 * -372752885 ^ -1391529270;
            continue;
          case 11:
            int num6;
            num1 = num6 = num2 < JSONNode.\u200F‮‫⁮‭‪‪‌‫​‫‏⁬‭⁪‎‪‫‏​⁯⁭⁯⁪‭​⁮⁫⁬​⁫‮⁭‮​‏‮‪⁯⁮‮(str2) ? 379066021 : (num6 = 1870472776);
            continue;
          case 12:
label_15:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\t");
            num1 = 329047437;
            continue;
          case 13:
            switch (ch1)
            {
              case '\b':
                goto label_19;
              case '\t':
                goto label_15;
              case '\n':
                goto label_8;
              case '\v':
                goto label_24;
              case '\f':
                goto label_28;
              case '\r':
                goto label_10;
              default:
                num1 = (int) num3 * 1805725901 ^ -2078522565;
                continue;
            }
          case 14:
            goto label_1;
          case 15:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\\\");
            num1 = 351250306;
            continue;
          case 16:
            str1 = "";
            num1 = (int) num3 * 1607394603 ^ -64556058;
            continue;
          case 17:
            num1 = (int) num3 * -648587352 ^ 1397635679;
            continue;
          case 18:
label_24:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, ch3.ToString());
            num1 = 1706463113;
            continue;
          case 19:
            ch3 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(str2, num2);
            num1 = 861951934;
            continue;
          case 20:
            num1 = (int) num3 * -441867978 ^ 1336434191;
            continue;
          case 21:
label_10:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\r");
            num1 = 1156034207;
            continue;
          case 22:
label_28:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\f");
            num1 = 578369095;
            continue;
          case 24:
label_19:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\b");
            num1 = 1444793867;
            continue;
          case 25:
            num1 = (int) num3 * -1605161923 ^ -83509472;
            continue;
          case 26:
label_8:
            str1 = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, "\\n");
            num1 = 84190583;
            continue;
          case 27:
            num1 = (int) num3 * -1664876946 ^ 1940572333;
            continue;
          case 28:
            ch1 = ch2;
            num1 = (int) num3 * -602149941 ^ 67589903;
            continue;
          case 29:
            num1 = (int) num3 * 1359392135 ^ 1938382492;
            continue;
          case 30:
            str3 = str1;
            num1 = (int) num3 * -1977164344 ^ 910224416;
            continue;
          case 31:
            num1 = (int) num3 * -403994220 ^ 1139140379;
            continue;
          default:
            goto label_34;
        }
      }
label_34:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -401352274;
      int num2;
      bool flag1;
      JSONNode jsonNode1;
      bool flag2;
      string aItem;
      char ch1;
      char ch2;
      bool flag3;
      char ch3;
      bool flag4;
      bool flag5;
      string aKey;
      Stack<JSONNode> jsonNodeStack;
      bool flag6;
      bool flag7;
      char ch4;
      bool flag8;
      bool flag9;
      char ch5;
      char ch6;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      bool flag17;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1569338878)) % 151U)
        {
          case 0:
            ch6 = ch5;
            num1 = (int) num3 * 1177038069 ^ -666291528;
            continue;
          case 1:
            flag11 = flag1;
            num1 = -1260226987;
            continue;
          case 2:
            num1 = (int) num3 * 997154659 ^ -685989064;
            continue;
          case 3:
            int num4 = !flag6 ? 1077056615 : (num4 = 1459686580);
            num1 = num4 ^ (int) num3 * 1894914592;
            continue;
          case 4:
            string str1 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str1, str2);
            num1 = (int) num3 * 536550717 ^ -784081343;
            continue;
          case 5:
            string str3 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str3, str4);
            num1 = (int) num3 * -434939141 ^ 711281314;
            continue;
          case 6:
            num1 = -151725137;
            continue;
          case 7:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1689234265 ^ 1152176544;
            continue;
          case 8:
            int num5 = flag2 ? 1744875019 : (num5 = 1570011557);
            num1 = num5 ^ (int) num3 * -997402753;
            continue;
          case 9:
            aKey = "";
            aItem = "";
            num1 = -1929997627;
            continue;
          case 10:
            num1 = (int) num3 * 407876906 ^ 1663578109;
            continue;
          case 11:
            flag15 = flag1;
            num1 = -502547952;
            continue;
          case 12:
            int num6 = jsonNode1 is JSONArray ? 70425295 : (num6 = 104014710);
            num1 = num6 ^ (int) num3 * -1646821992;
            continue;
          case 13:
            int num7 = flag10 ? 1715419062 : (num7 = 428711742);
            num1 = num7 ^ (int) num3 * 838540304;
            continue;
          case 14:
            ch2 = ch4;
            num1 = (int) num3 * 632826796 ^ -120338328;
            continue;
          case 15:
            int num8 = flag12 ? -1887650551 : (num8 = -1017063455);
            num1 = num8 ^ (int) num3 * -824242413;
            continue;
          case 16:
            int num9 = !flag16 ? 1981865864 : (num9 = 1881322234);
            num1 = num9 ^ (int) num3 * -44118115;
            continue;
          case 17:
            flag17 = JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aItem, "");
            num1 = (int) num3 * -1179488490 ^ 1191733577;
            continue;
          case 18:
            flag6 = num2 < JSONNode.\u200F‮‫⁮‭‪‪‌‫​‫‏⁬‭⁪‎‪‫‏​⁯⁭⁯⁪‭​⁮⁫⁬​⁫‮⁭‮​‏‮‪⁯⁮‮(aJSON);
            num1 = -260645071;
            continue;
          case 19:
            num1 = (int) num3 * 168880808 ^ -1825921144;
            continue;
          case 20:
            num1 = (int) num3 * 621901727 ^ -1830239024;
            continue;
          case 21:
            int num10;
            num1 = num10 = ch2 == ' ' ? -433629654 : (num10 = -1405680696);
            continue;
          case 22:
            ch4 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            num1 = (int) num3 * 695573289 ^ 1321166813;
            continue;
          case 23:
            num1 = (int) num3 * 1937580892 ^ -459313295;
            continue;
          case 24:
            int num11 = !flag7 ? 235320012 : (num11 = 9394032);
            num1 = num11 ^ (int) num3 * 2014439472;
            continue;
          case 25:
            int num12 = !flag9 ? -1613643864 : (num12 = -1424505810);
            num1 = num12 ^ (int) num3 * -1810306375;
            continue;
          case 26:
            num1 = (int) num3 * -1855890435 ^ -1436861193;
            continue;
          case 27:
            num1 = (int) num3 * -1059935828 ^ 932772601;
            continue;
          case 28:
            int num13;
            num1 = num13 = JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aKey, "") ? -1602947624 : (num13 = -313983338);
            continue;
          case 29:
            flag9 = JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aKey, "");
            num1 = -1146580705;
            continue;
          case 30:
            num1 = (int) num3 * 111155030 ^ 2028666455;
            continue;
          case 31:
            num1 = (int) num3 * -1413935161 ^ 1853287328;
            continue;
          case 32:
            num1 = (int) num3 * -1044136809 ^ 1693173063;
            continue;
          case 33:
            num1 = (int) num3 * -753585060 ^ 343788153;
            continue;
          case 34:
            flag16 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1416271731 ^ -631817374;
            continue;
          case 35:
            ch5 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            num1 = (int) num3 * 535313297 ^ -625141036;
            continue;
          case 36:
            num1 = (int) num3 * -331143776 ^ -127806830;
            continue;
          case 37:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -675605688 ^ 422458965;
            continue;
          case 38:
            flag2 = jsonNode1 != (object) null;
            num1 = (int) num3 * 524007308 ^ 1319884165;
            continue;
          case 39:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1080727982 ^ -1601471569;
            continue;
          case 40:
            string str5 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str5, str6);
            num1 = (int) num3 * -686704562 ^ -1211139083;
            continue;
          case 41:
            num2 += 4;
            num1 = (int) num3 * 433285139 ^ 538998210;
            continue;
          case 42:
            jsonNodeStack.Pop();
            num1 = -592086655;
            continue;
          case 43:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, "\n");
            num1 = -1239566189;
            continue;
          case 44:
            int num14 = flag3 ? 553247752 : (num14 = 824339883);
            num1 = num14 ^ (int) num3 * 76274409;
            continue;
          case 45:
            aKey = JSONNode.\u200F‭⁭⁫‫‎⁯⁭‎‮⁮⁯‎‍⁬‌​⁭⁯⁫‌‭‪‪‎⁮⁭‏⁯⁮⁪⁪‎‭‫‮⁬‌‌⁬‮(aKey);
            flag3 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 567192798 ^ 1455261756;
            continue;
          case 46:
            num1 = (int) num3 * 4735998 ^ -1594598187;
            continue;
          case 47:
            string str7 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str7, str8);
            num1 = (int) num3 * 1970735334 ^ 1775429189;
            continue;
          case 48:
            int num15;
            num1 = num15 = !JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aItem, "") ? -1189298739 : (num15 = -594102523);
            continue;
          case 49:
            num2 = 0;
            aItem = "";
            aKey = "";
            flag1 = false;
            num1 = (int) num3 * 1786507078 ^ -1024514313;
            continue;
          case 50:
            num1 = (int) num3 * 1383088085 ^ -656397492;
            continue;
          case 51:
            num1 = (int) num3 * 1681088851 ^ 2138879115;
            continue;
          case 52:
            int num16;
            num1 = num16 = ch2 != '{' ? -24476134 : (num16 = -584251539);
            continue;
          case 53:
            num1 = -1790841660;
            continue;
          case 54:
            aKey = JSONNode.\u200F‭⁭⁫‫‎⁯⁭‎‮⁮⁯‎‍⁬‌​⁭⁯⁫‌‭‪‪‎⁮⁭‏⁯⁮⁪⁪‎‭‫‮⁬‌‌⁬‮(aKey);
            num1 = (int) num3 * -801357880 ^ -2046061458;
            continue;
          case 55:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -457247971 ^ -1757595462;
            continue;
          case 56:
            int num17 = ch2 <= ',' ? -1751362339 : (num17 = -231959537);
            num1 = num17 ^ (int) num3 * 1805872455;
            continue;
          case 57:
            int num18 = !flag14 ? -1954870504 : (num18 = -617190598);
            num1 = num18 ^ (int) num3 * -801017834;
            continue;
          case 58:
            int num19;
            num1 = num19 = ch3 == 'f' ? -660518104 : (num19 = -965362001);
            continue;
          case 59:
            int num20 = flag8 ? -1952261082 : (num20 = -461170807);
            num1 = num20 ^ (int) num3 * -44524880;
            continue;
          case 60:
label_54:
            flag5 = flag1;
            num1 = -125210533;
            continue;
          case 61:
            flag4 = flag1;
            num1 = (int) num3 * 1839668822 ^ -1742694779;
            continue;
          case 62:
            switch (ch2)
            {
              case '\t':
                goto label_54;
              case '\n':
              case '\r':
                goto label_3;
              case '\v':
              case '\f':
                goto label_145;
              default:
                num1 = (int) num3 * -1567637290 ^ 106646280;
                continue;
            }
          case 63:
            num1 = (int) num3 * 1003898928 ^ -746214485;
            continue;
          case 64:
            num1 = -940520576;
            continue;
          case 65:
            int num21 = flag5 ? 1328453174 : (num21 = 1972797036);
            num1 = num21 ^ (int) num3 * -327361693;
            continue;
          case 66:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -690196667 ^ 1272889720;
            continue;
          case 67:
            flag7 = JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aKey, "");
            num1 = -1996129720;
            continue;
          case 68:
            num1 = (int) num3 * 2108543574 ^ 1874471805;
            continue;
          case 69:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, "\f");
            num1 = -1239566189;
            continue;
          case 70:
            num1 = (int) num3 * -216678368 ^ -759250115;
            continue;
          case 71:
          case 76:
          case 80:
          case 114:
          case 118:
label_3:
            ++num2;
            num1 = -1344027145;
            continue;
          case 72:
            aItem = "";
            num1 = (int) num3 * 1643368099 ^ -1324913493;
            continue;
          case 73:
            int num22;
            num1 = num22 = ch2 == '}' ? -719293004 : (num22 = -1260202004);
            continue;
          case 74:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1697800715 ^ 581985125;
            continue;
          case 75:
            aKey = "";
            num1 = -1370759938;
            continue;
          case 77:
            flag12 = jsonNodeStack.Count == 0;
            num1 = -805630109;
            continue;
          case 78:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 193804381 ^ 2022148484;
            continue;
          case 79:
            num1 = (int) num3 * -1565785672 ^ 458298269;
            continue;
          case 81:
            int num23 = ch2 != ':' ? -1759541065 : (num23 = -632377171);
            num1 = num23 ^ (int) num3 * 2110329870;
            continue;
          case 82:
            jsonNode2 = jsonNode1;
            num1 = -359520752;
            continue;
          case 83:
            int num24;
            num1 = num24 = ch2 > ']' ? -948133878 : (num24 = -1198316265);
            continue;
          case 84:
            int num25;
            num1 = num25 = ch2 == ',' ? -1792782445 : (num25 = -2076888603);
            continue;
          case 85:
            num1 = (int) num3 * 1743036926 ^ 920487385;
            continue;
          case 86:
            num1 = (int) num3 * 964210955 ^ 1786795150;
            continue;
          case 87:
label_95:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, "\r");
            num1 = -1239566189;
            continue;
          case 88:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, "\b");
            num1 = -1227853276;
            continue;
          case 89:
            int num26 = ch2 > ' ' ? 1826995547 : (num26 = 1775312112);
            num1 = num26 ^ (int) num3 * -1275201655;
            continue;
          case 90:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -693906749;
            continue;
          case 91:
            num1 = (int) num3 * 1297243336 ^ 734766298;
            continue;
          case 92:
            aItem = "";
            num1 = (int) num3 * 1143359086 ^ -829581515;
            continue;
          case 93:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 207615867 ^ 2044415270;
            continue;
          case 94:
            flag1 = !flag1;
            num1 = -672995711;
            continue;
          case 95:
            num1 = (int) num3 * -1413198981 ^ 1054103842;
            continue;
          case 96:
            aKey = aItem;
            aItem = "";
            num1 = -1840700204;
            continue;
          case 97:
label_121:
            int num27;
            num1 = num27 = !flag1 ? -2028716225 : (num27 = -848562749);
            continue;
          case 98:
            flag10 = JSONNode.\u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮(aKey, "");
            num1 = -2134573053;
            continue;
          case 99:
            goto label_1;
          case 100:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1436099055 ^ -1611711219;
            continue;
          case 101:
            num1 = (int) num3 * -608209904 ^ -1924613059;
            continue;
          case 102:
            int num28 = !flag15 ? -1453073988 : (num28 = -1072046977);
            num1 = num28 ^ (int) num3 * 1495621117;
            continue;
          case 103:
label_6:
            string s = JSONNode.\u206F‎⁮‬⁬⁬⁯‎‪⁪‏⁬‬‏⁬‭‭‎⁭‬‪‎‮⁮​⁫⁫⁬‪‫⁫‌‮‎‪‬‬⁬‮‮‮(aJSON, num2 + 1, 4);
            string str9 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str9, str10);
            num1 = -1839842789;
            continue;
          case 104:
            switch (ch2)
            {
              case '[':
                goto label_4;
              case '\\':
                goto label_77;
              case ']':
                goto label_121;
              default:
                num1 = -1892624210;
                continue;
            }
          case 105:
label_145:
            string str11 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str11, str12);
            num1 = -1971212010;
            continue;
          case 106:
            num1 = (int) num3 * -1290540380 ^ -1752115909;
            continue;
          case 107:
label_76:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, "\t");
            num1 = -1239566189;
            continue;
          case 108:
label_77:
            ++num2;
            flag14 = flag1;
            num1 = -1096892826;
            continue;
          case 109:
            switch (ch3)
            {
              case 'r':
                goto label_95;
              case 's':
                goto label_68;
              case 't':
                goto label_76;
              case 'u':
                goto label_6;
              default:
                num1 = -1305364359;
                continue;
            }
          case 110:
label_68:
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(aItem, ch5.ToString());
            num1 = -429975976;
            continue;
          case 111:
            num1 = -1401178435;
            continue;
          case 112:
            num1 = (int) num3 * 557583744 ^ 196801149;
            continue;
          case 113:
            goto label_113;
          case 115:
            num1 = (int) num3 * -1235364187 ^ 1268982594;
            continue;
          case 116:
            num1 = (int) num3 * -1757494044 ^ 1610148473;
            continue;
          case 117:
            int num29;
            num1 = num29 = ch2 != '"' ? -2030832879 : (num29 = -624611090);
            continue;
          case 119:
            int num30;
            num1 = num30 = ch3 != 'n' ? -582060841 : (num30 = -1559399729);
            continue;
          case 120:
            goto label_126;
          case 121:
label_4:
            int num31;
            num1 = num31 = !flag1 ? -746279587 : (num31 = -1788664930);
            continue;
          case 122:
            flag8 = flag1;
            num1 = -1706874063;
            continue;
          case 123:
            num1 = -1189298739;
            continue;
          case 124:
            ch3 = ch6;
            int num32 = ch3 <= 'f' ? -208869848 : (num32 = -896802432);
            num1 = num32 ^ (int) num3 * 719026089;
            continue;
          case 125:
            int num33 = !flag17 ? -1794242671 : (num33 = -1913975583);
            num1 = num33 ^ (int) num3 * -368132146;
            continue;
          case 126:
            string str13 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str13, str14);
            num1 = (int) num3 * -26942831 ^ -774598495;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1443272024 ^ -1472659933;
            continue;
          case 128:
            int num34 = ch3 == 'b' ? 11270611 : (num34 = 252508750);
            num1 = num34 ^ (int) num3 * -1814464648;
            continue;
          case 129:
            string str15 = aItem;
            ch1 = JSONNode.\u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮(aJSON, num2);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮(str15, str16);
            num1 = (int) num3 * -1612901534 ^ 371073823;
            continue;
          case 130:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1081535193;
            continue;
          case 131:
            num1 = (int) num3 * -100070150 ^ 915482345;
            continue;
          case 132:
            int num35 = flag13 ? 1888320273 : (num35 = 1334484083);
            num1 = num35 ^ (int) num3 * -492685906;
            continue;
          case 133:
            num1 = (int) num3 * 1644951845 ^ -1290165389;
            continue;
          case 134:
            num1 = (int) num3 * 135759708 ^ 724868560;
            continue;
          case 135:
            int num36 = !flag4 ? -396618086 : (num36 = -1110569341);
            num1 = num36 ^ (int) num3 * 1269580478;
            continue;
          case 136:
            int num37 = !flag11 ? -1446925737 : (num37 = -835963561);
            num1 = num37 ^ (int) num3 * 1167622259;
            continue;
          case 138:
            aKey = "";
            num1 = -625091955;
            continue;
          case 139:
            num1 = (int) num3 * 899550561 ^ 119638839;
            continue;
          case 140:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -1968095378;
            continue;
          case 141:
            num1 = (int) num3 * 2076776724 ^ 1259757956;
            continue;
          case 142:
            aKey = JSONNode.\u200F‭⁭⁫‫‎⁯⁭‎‮⁮⁯‎‍⁬‌​⁭⁯⁫‌‭‪‪‎⁮⁭‏⁯⁮⁪⁪‎‭‫‮⁬‌‌⁬‮(aKey);
            int num38 = !(jsonNode1 is JSONArray) ? 1932482386 : (num38 = 949603790);
            num1 = num38 ^ (int) num3 * -1471444386;
            continue;
          case 143:
            num1 = (int) num3 * -870678803 ^ 1407801173;
            continue;
          case 144:
            num1 = (int) num3 * -1780917868 ^ -637072364;
            continue;
          case 145:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -592035858 ^ -471654169;
            continue;
          case 146:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1643704261 ^ -1499454027;
            continue;
          case 147:
            num1 = (int) num3 * 1628898004 ^ -1965147418;
            continue;
          case 148:
            int num39 = !(jsonNode1 != (object) null) ? -858432465 : (num39 = -793857680);
            num1 = num39 ^ (int) num3 * 129134962;
            continue;
          case 149:
            num1 = (int) num3 * -1764731061 ^ -348368084;
            continue;
          case 150:
            num1 = -285085867;
            continue;
          default:
            goto label_151;
        }
      }
label_113:
      throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_126:
      throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("JSON Parse: Too many closing brackets");
label_151:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 2001635005;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1470916626)) % 4U)
        {
          case 0:
            this.Serialize(aWriter);
            num1 = (int) num2 * 409291059 ^ -633120613;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            aWriter = JSONNode.\u206E⁮‏‍‌‭‮‮‬‪⁯‏‏‫⁭⁭⁮⁭⁪‮‎‪⁪‌⁪⁭‌‭⁭‪‏⁯‌‮⁫⁮‎‫⁭⁫‮(aData);
            num1 = (int) num2 * -1970004460 ^ 2117487166;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206D⁬⁫⁮‭⁫‭‪⁯⁮⁭​⁭‎‌⁮‫⁬⁯‬⁪‫‌‍‍‭‭‎‪‍⁫‭‭⁪⁫‫‮‌⁬‎‮(JSONNode.\u202E‫‪‬⁫​⁯‭⁬‏⁭‫⁬‎⁭⁯⁫⁭⁯⁯⁪‫⁪​⁯‪‎‮‫‭‍‭‬‭‏‏‫⁫⁮⁯‮((FileSystemInfo) JSONNode.\u206F​‎⁫⁫‬⁫⁬‎⁭‌‎⁮⁯⁮‪⁪⁪‎⁪⁯‬⁯⁭‪‪⁯⁭‬‭‪⁭‫‭‌‫⁮‌‎⁯‮(JSONNode.\u202D‬⁮‍⁮⁪⁪‬⁭‭‮⁮⁯⁭⁪⁯⁪​⁮‮⁪‌⁭‍⁪‭‍⁯‪‬‍‍⁪⁭‌‬‌⁯⁪‍‮(aFileName))));
      FileStream aData = JSONNode.\u206D⁭‪⁯‍⁯​‏‌‪⁭‍‏‬‮⁬⁮‫‬⁯‫⁯‮‪⁬‪⁭‮‪⁭‌⁭‏⁫⁯‏‮⁭​‎‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -442442386;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -534355729)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * -683905085 ^ -1401528031;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1494140723;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -534355729)) % 4U)
            {
              case 1:
                num3 = (int) num4 * 2074702064 ^ -43431549;
                continue;
              case 2:
                JSONNode.\u206E⁯⁭‌‫‪‪‪‮‬‫‌‪⁮⁯‬‪⁪⁫‪⁭‏‌⁮‪⁪⁮⁬‌⁮⁯⁬⁮​⁪⁯⁯‪​⁪‮((IDisposable) aData);
                num3 = (int) num4 * -1366013140 ^ -1661653154;
                continue;
              case 3:
                goto label_7;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D⁪‪⁮​⁯⁯‫‬‌‏‪‮⁯‏⁮‮‭‫​⁭‏‪⁫‬​⁯⁫‍​‎​⁭⁯‏‪​‮⁮‌‮();
      string base64;
      try
      {
label_2:
        int num1 = 655950519;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1782200604)) % 7U)
          {
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1237550534 ^ 1477212760;
              continue;
            case 2:
              base64 = JSONNode.\u200F‭⁫‫‏⁫‌‎‪‬‍‍⁭⁭‭‪‮‏⁫⁬⁬‮⁬⁮‎⁮⁮⁫⁭‪⁫‬⁭​‪‮​⁫‫‌‮(JSONNode.\u200C‏‫⁫⁫‫⁬‍⁪⁯‫⁭‬​‏​‌​‬⁯⁬⁬⁯⁪⁮‫​‪​⁬‮⁪‍⁯​‏‫⁬‪⁪‮(aData));
              num1 = (int) num2 * -496429568 ^ 1124484711;
              continue;
            case 3:
              JSONNode.\u206E⁫⁮‌‫⁪‮‬‏‬‪‮‫‪‌⁪‬‪‏⁬‮⁯‭‮⁯‌⁭⁮⁮‭⁬⁭⁯⁪⁭‏⁯⁯‭⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * -1880455325 ^ 1369746577;
              continue;
            case 4:
              goto label_2;
            case 5:
              num1 = (int) num2 * -199190890 ^ 1049998068;
              continue;
            case 6:
              num1 = (int) num2 * -410204718 ^ -1895682548;
              continue;
            default:
              goto label_14;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_10:
          int num3 = 550294510;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1782200604)) % 3U)
            {
              case 0:
                goto label_10;
              case 1:
                JSONNode.\u206E⁯⁭‌‫‪‪‪‮‬‫‌‪⁮⁯‬‪⁪⁫‪⁭‏‌⁮‪⁪⁮⁬‌⁮⁯⁬⁮​⁪⁯⁯‪​⁪‮((IDisposable) aData);
                num3 = (int) num4 * -1509276026 ^ -799616872;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
label_14:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -187705853;
      JSONBinaryTag jsonBinaryTag1;
      bool flag1;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag2;
      bool flag2;
      int num2;
      string aKey;
      JSONClass jsonClass;
      int num3;
      JSONNode aItem;
      int num4;
      JSONArray jsonArray;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1661544798)) % 38U)
        {
          case 0:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1452267898 ^ -82586155;
            continue;
          case 1:
            int num7 = !flag2 ? 136191694 : (num7 = 1120337887);
            num1 = num7 ^ (int) num6 * 1080861534;
            continue;
          case 2:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁪⁮⁫⁫‍‮⁮‭⁯⁭‮‮‭​​‪⁮‏‌‌‏‎‌‮‪‮‫⁫‍‎⁮⁬‫⁯⁬⁮⁯‍‏‮(aReader));
            num1 = (int) num6 * -194811348 ^ 1066229522;
            continue;
          case 3:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = -492532118;
            continue;
          case 4:
            flag2 = num2 < num4;
            num1 = -1501958999;
            continue;
          case 5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‬‍⁮‬‫‬‮⁮‮‌⁭‪‪⁭⁮⁬‏‏⁫‫‭⁭‭⁭⁪⁯‌‍⁪⁪‮‬⁭⁭‮⁫‏‪‬‮(aReader));
            num1 = (int) num6 * 1943223371 ^ -1698776532;
            continue;
          case 6:
label_19:
            num1 = -1779698792;
            continue;
          case 7:
label_35:
            num1 = -126218415;
            continue;
          case 8:
            num3 = 0;
            num1 = (int) num6 * 852690990 ^ -988251934;
            continue;
          case 9:
label_38:
            num4 = JSONNode.\u200B‬‍⁮‬‫‬‮⁮‮‌⁭‪‪⁭⁮⁬‏‏⁫‫‭⁭‭⁭⁪⁯‌‍⁪⁪‮‬⁭⁭‮⁫‏‪‬‮(aReader);
            num1 = -578987893;
            continue;
          case 10:
            num5 = JSONNode.\u200B‬‍⁮‬‫‬‮⁮‮‌⁭‪‪⁭⁮⁬‏‏⁫‫‭⁭‭⁭⁪⁯‌‍⁪⁪‮‬⁭⁭‮⁫‏‪‬‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * 914259128 ^ -1948364062;
            continue;
          case 11:
            num2 = 0;
            num1 = (int) num6 * -1188004529 ^ 1154753277;
            continue;
          case 12:
            num1 = (int) num6 * 26825186 ^ -1488391283;
            continue;
          case 13:
            aKey = JSONNode.\u202B‭⁭‍‭⁫‭‬‎⁯⁬‎‍⁬‌‬⁭‍‮⁭‮‮⁬‫‌⁫⁭⁬⁮‫‏‬‪⁮⁪‌‏‫⁫‮‮(aReader);
            num1 = (int) num6 * -1039771868 ^ 1208306664;
            continue;
          case 14:
            num1 = (int) num6 * 2076619427 ^ -591519077;
            continue;
          case 15:
            jsonBinaryTag2 = (JSONBinaryTag) JSONNode.\u206F‫⁫⁮⁮‮‪‬⁮‏‮⁯‬‍‎‏⁫⁪⁬⁫‭⁪‮‌‮‬⁯​‫‍⁯‪‫‫‭⁯‪⁬⁪‍‮(aReader);
            jsonBinaryTag1 = jsonBinaryTag2;
            num1 = (int) num6 * 1439419254 ^ -1996969843;
            continue;
          case 16:
            flag1 = num3 < num5;
            num1 = -1180823618;
            continue;
          case 17:
            num1 = (int) num6 * -1294225416 ^ 2044792288;
            continue;
          case 18:
            goto label_1;
          case 19:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1928712840 ^ 1567381621;
            continue;
          case 20:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1251043903 ^ -1217047401;
            continue;
          case 21:
label_22:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‭⁭‍‭⁫‭‬‎⁯⁬‎‍⁬‌‬⁭‍‮⁭‮‮⁬‫‌⁫⁭⁬⁮‫‏‬‪⁮⁪‌‏‫⁫‮‮(aReader));
            num1 = -568364003;
            continue;
          case 22:
            goto label_21;
          case 23:
            num1 = (int) num6 * 2014036467 ^ 798657052;
            continue;
          case 24:
            int num8 = flag1 ? 633650074 : (num8 = 1640103073);
            num1 = num8 ^ (int) num6 * 1471119008;
            continue;
          case 25:
            switch (jsonBinaryTag1)
            {
              case JSONBinaryTag.Array:
                goto label_38;
              case JSONBinaryTag.Class:
                goto label_19;
              case JSONBinaryTag.Value:
                goto label_22;
              case JSONBinaryTag.IntValue:
                goto label_35;
              case JSONBinaryTag.DoubleValue:
                goto label_24;
              case JSONBinaryTag.BoolValue:
                goto label_20;
              case JSONBinaryTag.FloatValue:
                goto label_12;
              default:
                num1 = (int) num6 * -89809376 ^ 1423266315;
                continue;
            }
          case 26:
            num1 = -2111172799;
            continue;
          case 28:
            ++num3;
            num1 = (int) num6 * -2124732300 ^ -946715118;
            continue;
          case 29:
label_24:
            num1 = -102944479;
            continue;
          case 30:
label_20:
            num1 = -796394600;
            continue;
          case 31:
            num1 = (int) num6 * -341345974 ^ -1513730973;
            continue;
          case 32:
label_12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‮‮​⁮‎⁯​⁪‬⁬​⁪‏‬⁯‬⁮‬‮⁯⁯‭‍‍​⁬‌‫⁯‍‍‬‭‏‬‍‍‫⁮‮(aReader));
            num1 = -486498407;
            continue;
          case 33:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -2023215327 ^ 739118361;
            continue;
          case 34:
            num1 = (int) num6 * -22903139 ^ 1042460558;
            continue;
          case 35:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A⁪‏‫⁬​⁬⁫‫⁮‏‌‍⁪⁬‏‍⁪‌‌⁫‭⁪⁮‌⁪⁭​‌‬‍‪⁬‍‬⁮⁮⁬⁫‏‮(aReader));
            num1 = (int) num6 * 1319200266 ^ 170817150;
            continue;
          case 36:
            num1 = -780831232;
            continue;
          case 37:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 255760419 ^ 866470656;
            continue;
          default:
            goto label_40;
        }
      }
label_21:
      throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮(JSONNode.\u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag2.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202C⁮‬‮⁪‏‮⁬‭‫⁪‬‍‫⁬⁭‫⁮⁬⁭‍⁮‏⁪⁭‪​‭‏‏⁮⁬‌‮‮⁮‭‭‍‮‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -2030534910;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2097933564)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1552608575 ^ 1567339332;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1164396597;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -2097933564)) % 3U)
            {
              case 1:
                JSONNode.\u206E⁯⁭‌‫‪‪‪‮‬‫‌‪⁮⁯‬‪⁪⁫‪⁭‏‌⁮‪⁪⁮⁬‌⁮⁯⁬⁮​⁪⁯⁯‪​⁪‮((IDisposable) aReader);
                num3 = (int) num4 * -998141688 ^ 645835528;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206C⁮⁪⁫‪‫‌‪​‏⁬‪⁭‭⁭‫​‬‎‭‭⁬⁯⁫‫⁫‍‪‮‌‬⁫​⁮⁭‎‏⁫‏‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 395461670;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1465799757)) % 4U)
            {
              case 0:
                goto label_3;
              case 2:
                num1 = (int) num2 * -610683285 ^ -80220130;
                continue;
              case 3:
                JSONNode.\u206E⁯⁭‌‫‪‪‪‮‬‫‌‪⁮⁯‬‪⁪⁫‪⁭‏‌⁮‪⁪⁮⁬‌⁮⁯⁬⁮​⁪⁯⁯‪​⁪‮((IDisposable) aData);
                num1 = (int) num2 * 833053625 ^ -1905288636;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -44982802;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1331174433)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 523942075 ^ -1327878350;
            continue;
          case 3:
            aData = JSONNode.\u202C‌‮‪‮‭‫‭⁬⁮‍‪‮‏‎⁭‪‭‍⁫⁭‏⁭​⁭‌‪‮​‎⁭​⁪‎‫‭⁪‏‌‪‮(JSONNode.\u200E​‬​‌⁪‍⁫⁯‏⁪⁯‮⁯⁬‎‫‪‌⁯‍‪‌‌⁮‮‎⁯⁫‌‏‭‭‭‍‭⁮‮⁮⁯‮(aBase64));
            num1 = (int) num2 * 1096552338 ^ 200615789;
            continue;
          case 4:
            JSONNode.\u206E⁫⁮‌‫⁪‮‬‏‬‪‮‫‪‌⁪‬‪‏⁬‮⁯‭‮⁯‌⁭⁮⁮‭⁬⁭⁯⁪⁭‏⁯⁯‭⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * 1994962810 ^ -903297089;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -630277600;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -662685712)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 948555959 ^ -1806722351;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200F‮⁮‍⁮‬‫⁯​⁯‬⁬‮‌‍‭​‎​⁭‪‏‬‫⁬⁯‪‪⁭⁬​⁪‏⁭‍​‭‭⁭‌‮() => CultureInfo.InvariantCulture;

    static bool \u200D‌‪‏‎⁫‮‌‮⁯⁫‫⁪‪⁮‬⁯‏‏‬​‌‬‏⁬‏⁫⁭⁯‪⁮‏‏‌‏‪‫‪⁫‏‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202D‮⁭‪‏‪⁬⁮‪‮‎‎‏‏⁯⁭‭‫‍‏‭‬‪⁭‪‎‌‏‭⁫‪⁫‭‬‮‍‎‪‬⁮‮() => base.GetHashCode();

    static char \u206E‏‮‬⁯‍​⁪⁯⁮⁬​⁮‍‍‫‏‏‌⁮‮‏⁫⁯⁭⁯‌⁪⁫​⁯‭‮‎‏‫⁬⁭‭‌‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200B‬‭‎​‍‮⁬‮‭‌⁫‍⁭‮⁭⁫⁮‫‪‎‮⁮‎‫⁯​⁭‫⁪⁯‌‌‫‭⁫‏‮‮‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F‮‫⁮‭‪‪‌‫​‫‏⁬‭⁪‎‪‫‏​⁯⁭⁯⁪‭​⁮⁫⁬​⁫‮⁭‮​‏‮‪⁯⁮‮([In] string obj0) => obj0.Length;

    static string \u200F‭⁭⁫‫‎⁯⁭‎‮⁮⁯‎‍⁬‌​⁭⁯⁫‌‭‪‪‎⁮⁭‏⁯⁮⁪⁪‎‭‫‮⁬‌‌⁬‮([In] string obj0) => obj0.Trim();

    static bool \u206D‮⁭‫‏⁮‫‭​‫‮⁪‎‌‭⁫⁬​⁪⁫⁮⁮‬⁫​‫‌⁭⁬‎⁬⁯⁫⁯‏‭‍⁫‍‍‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200F‭‏⁪⁬‫⁬‍‍‭‭‭‮‫⁭‌‮‍⁭⁭‏​‬‎‪⁪‫​⁮‮⁫⁪‏⁮⁪‌‫‬‎‪‮([In] string obj0) => new Exception(obj0);

    static string \u206F‎⁮‬⁬⁬⁯‎‪⁪‏⁬‬‏⁬‭‭‎⁭‬‪‎‮⁮​⁫⁫⁬‪‫⁫‌‮‎‪‬‬⁬‮‮‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206E⁮‏‍‌‭‮‮‬‪⁯‏‏‫⁭⁭⁮⁭⁪‮‎‪⁪‌⁪⁭‌‭⁭‪‏⁯‌‮⁫⁮‎‫⁭⁫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202D‬⁮‍⁮⁪⁪‬⁭‭‮⁮⁯⁭⁪⁯⁪​⁮‮⁪‌⁭‍⁪‭‍⁯‪‬‍‍⁪⁭‌‬‌⁯⁪‍‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206F​‎⁫⁫‬⁫⁬‎⁭‌‎⁮⁯⁮‪⁪⁪‎⁪⁯‬⁯⁭‪‪⁯⁭‬‭‪⁭‫‭‌‫⁮‌‎⁯‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202E‫‪‬⁫​⁯‭⁬‏⁭‫⁬‎⁭⁯⁫⁭⁯⁯⁪‫⁪​⁯‪‎‮‫‭‍‭‬‭‏‏‫⁫⁮⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206D⁬⁫⁮‭⁫‭‪⁯⁮⁭​⁭‎‌⁮‫⁬⁯‬⁪‫‌‍‍‭‭‎‪‍⁫‭‭⁪⁫‫‮‌⁬‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206D⁭‪⁯‍⁯​‏‌‪⁭‍‏‬‮⁬⁮‫‬⁯‫⁯‮‪⁬‪⁭‮‪⁭‌⁭‏⁫⁯‏‮⁭​‎‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206E⁯⁭‌‫‪‪‪‮‬‫‌‪⁮⁯‬‪⁪⁫‪⁭‏‌⁮‪⁪⁮⁬‌⁮⁯⁬⁮​⁪⁯⁯‪​⁪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D⁪‪⁮​⁯⁯‫‬‌‏‪‮⁯‏⁮‮‭‫​⁭‏‪⁫‬​⁯⁫‍​‎​⁭⁯‏‪​‮⁮‌‮() => new MemoryStream();

    static void \u206E⁫⁮‌‫⁪‮‬‏‬‪‮‫‪‌⁪‬‪‏⁬‮⁯‭‮⁯‌⁭⁮⁮‭⁬⁭⁯⁪⁭‏⁯⁯‭⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200C‏‫⁫⁫‫⁬‍⁪⁯‫⁭‬​‏​‌​‬⁯⁬⁬⁯⁪⁮‫​‪​⁬‮⁪‍⁯​‏‫⁬‪⁪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‭⁫‫‏⁫‌‎‪‬‍‍⁭⁭‭‪‮‏⁫⁬⁬‮⁬⁮‎⁮⁮⁫⁭‪⁫‬⁭​‪‮​⁫‫‌‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206F‫⁫⁮⁮‮‪‬⁮‏‮⁯‬‍‎‏⁫⁪⁬⁫‭⁪‮‌‮‬⁯​‫‍⁯‪‫‫‭⁯‪⁬⁪‍‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200B‬‍⁮‬‫‬‮⁮‮‌⁭‪‪⁭⁮⁬‏‏⁫‫‭⁭‭⁭⁪⁯‌‍⁪⁪‮‬⁭⁭‮⁫‏‪‬‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202B‭⁭‍‭⁫‭‬‎⁯⁬‎‍⁬‌‬⁭‍‮⁭‮‮⁬‫‌⁫⁭⁬⁮‫‏‬‪⁮⁪‌‏‫⁫‮‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206A⁪‏‫⁬​⁬⁫‫⁮‏‌‍⁪⁬‏‍⁪‌‌⁫‭⁪⁮‌⁪⁭​‌‬‍‪⁬‍‬⁮⁮⁬⁫‏‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200C⁪⁮⁫⁫‍‮⁮‭⁯⁭‮‮‭​​‪⁮‏‌‌‏‎‌‮‪‮‫⁫‍‎⁮⁬‫⁯⁬⁮⁯‍‏‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200E‮‮​⁮‎⁯​⁪‬⁬​⁪‏‬⁯‬⁮‬‮⁯⁯‭‍‍​⁬‌‫⁯‍‍‬‭‏‬‍‍‫⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202C⁮‬‮⁪‏‮⁬‭‫⁪‬‍‫⁬⁭‫⁮⁬⁭‍⁮‏⁪⁭‪​‭‏‏⁮⁬‌‮‮⁮‭‭‍‮‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206C⁮⁪⁫‪‫‌‪​‏⁬‪⁭‭⁭‫​‬‎‭‭⁬⁯⁫‫⁫‍‪‮‌‬⁫​⁮⁭‎‏⁫‏‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200E​‬​‌⁪‍⁫⁯‏⁪⁯‮⁯⁬‎‫‪‌⁯‍‪‌‌⁮‮‎⁯⁫‌‏‭‭‭‍‭⁮‮⁮⁯‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202C‌‮‪‮‭‫‭⁬⁮‍‪‮‏‎⁭‪‭‍⁫⁭‏⁭​⁭‌‪‮​‎⁭​⁪‎‫‭⁪‏‌‪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
