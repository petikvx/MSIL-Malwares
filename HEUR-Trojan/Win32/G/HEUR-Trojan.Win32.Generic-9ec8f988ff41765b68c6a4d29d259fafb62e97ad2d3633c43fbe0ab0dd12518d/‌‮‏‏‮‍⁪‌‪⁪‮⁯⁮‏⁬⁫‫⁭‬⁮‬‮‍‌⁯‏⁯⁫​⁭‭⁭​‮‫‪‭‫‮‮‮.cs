// Decompiled with JetBrains decompiler
// Type: ‌‮‏‏‮‍⁪‌‪⁪‮⁯⁮‏⁬⁫‫⁭‬⁮‬‮‍‌⁯‏⁯⁫​⁭‭⁭​‮‫‪‭‫‮‮‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public class \u200C‮‏‏‮‍⁪‌‪⁪‮⁯⁮‏⁬⁫‫⁭‬⁮‬‮‍‌⁯‏⁯⁫​⁭‭⁭​‮‫‪‭‫‮‮‮
{
  private \u206B⁮⁭⁭‮‬‍‍‏‏⁮‮⁬⁬​⁫⁬⁮‏⁬‭⁭⁯‮⁪‪⁪‫‏⁬‎⁭⁫‬​‍⁬‭‪‮‮ \u200E‬‫⁪‎‏‫‪‭‬⁬‍⁫‫⁪​‏‌‏‏‮⁯⁯⁯‏‎⁫⁪⁬‍‍⁫​‏​‫‎⁮⁭‫‮;

  public \u200C‮‏‏‮‍⁪‌‪⁪‮⁯⁮‏⁬⁫‫⁭‬⁮‬‮‍‌⁯‏⁯⁫​⁭‭⁭​‮‫‪‭‫‮‮‮(byte[] _param1)
    : this(\u206B⁮⁭⁭‮‬‍‍‏‏⁮‮⁬⁬​⁫⁬⁮‏⁬‭⁭⁯‮⁪‪⁪‫‏⁬‎⁭⁫‬​‍⁬‭‪‮‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) _param1))
  {
  }

  public \u200C‮‏‏‮‍⁪‌‪⁪‮⁯⁮‏⁬⁫‫⁭‬⁮‬‮‍‌⁯‏⁯⁫​⁭‭⁭​‮‫‪‭‫‮‮‮(
    \u206B⁮⁭⁭‮‬‍‍‏‏⁮‮⁬⁬​⁫⁬⁮‏⁬‭⁭⁯‮⁪‪⁪‫‏⁬‎⁭⁫‬​‍⁬‭‪‮‮ _param1)
  {
    this.\u200E‬‫⁪‎‏‫‪‭‬⁬‍⁫‫⁪​‏‌‏‏‮⁯⁯⁯‏‎⁫⁪⁬‍‍⁫​‏​‫‎⁮⁭‫‮ = _param1;
  }

  public \u200D‭‭‌⁫⁭‫‫⁪⁪⁮⁮‫⁮‭‏⁮⁯‪‭‬⁬⁮‬⁭‌​‪‮‌​‪​‏‏​‪⁭‎‌‮ \u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(
    \u206A‌‬‍‌⁯⁫​​⁪‎⁯⁬‬⁮⁭‮‬⁪‍⁭⁮‎⁮⁫‏‪‪⁬‫‭‎⁪‮‌⁪⁬⁪⁯⁭‮ _param1)
  {
    try
    {
      MemoryStream memoryStream = (MemoryStream) new \u202E‍‫‫⁫⁭‏‍​⁯‍‍⁯⁬‎⁫‮⁬⁭‌⁯‎⁬‏‪⁫‬‮⁭‪⁪‏‫⁫‎⁯​⁯‏‏‮();
      \u202E‭⁬‬⁯⁭‫⁫⁭⁫⁫‏‮‍‏⁪‍‫⁮⁫‮‫‪‍​‮​‌​‫⁬⁬⁯‪‏‮‬‍‎⁮‮ obj = _param1.\u202C⁮‮⁬⁮⁮‪‪⁮‬‍⁭⁮⁯‌‬⁯‌⁬⁮​‬​⁬‏⁯‫‎⁫‎⁭⁪‫‌⁪⁪‪‫⁭⁯‮((Stream) memoryStream);
      byte[] encoded = this.\u200E‬‫⁪‎‏‫‪‭‬⁬‍⁫‫⁪​‏‌‏‏‮⁯⁯⁯‏‎⁫⁪⁬‍‍⁫​‏​‫‎⁮⁭‫‮.GetEncoded();
      Stream stream = obj.\u200F⁫‭‭‏‏⁬⁪‏‭‫⁬‭⁬⁫⁬‌⁮⁯‌‪⁭⁯‪‬​⁯⁭‏‌⁬⁮‭​⁫⁯‎⁫‍⁬‮;
      stream.Write(encoded, 0, encoded.Length);
      \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u202A‎​‬‌‎‬⁫​‭⁮​‍⁫‬‎‍‪‪⁮​⁪⁮‫⁯​​‎​‫‍⁬⁭‏‌​‎‏‏‮‮(stream);
      return new \u200D‭‭‌⁫⁭‫‫⁪⁪⁮⁮‫⁮‭‏⁮⁯‪‭‬⁬⁮‬⁭‌​‪‮‌​‪​‏‏​‪⁭‎‌‮(new \u206D⁬⁭​⁯‬⁫‬​⁪⁯⁫⁯⁬‍‮‭‍‮⁯‬‮‭⁮‍‌‎‭⁪⁮‪⁫⁪‮‮‭‫‪‪‭‮((\u206A​‏⁯⁭⁬⁭‍‌‌‪‮‪‏‬‪⁭⁯⁭⁫‍‍‍‏‭‍‫⁫⁫⁫⁪‭⁮⁫⁫⁬‍‌⁪‪‮) _param1.\u206B⁬⁭‬‮⁭⁪‫⁭​⁫⁬⁯⁫⁬‪‭⁮⁬⁯​⁮‮⁬‬‍‎‌⁪⁮‮‫⁮⁬‬⁪​‎‫‪‮, memoryStream.ToArray()));
    }
    catch (IOException ex)
    {
      throw new InvalidOperationException("cannot encode privateKeyInfo");
    }
  }
}
