// Decompiled with JetBrains decompiler
// Type: Mario_KS.Launcher
// Assembly: OnSerializingAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F72B5184-77D9-4DBB-B29C-2F3B04C48CCD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-8c2eb36fc68b33fc269eaa5f42a303b63ee25bccdd99c0c424285aee9317d94c.exe

using Mario_KS.My;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Mario_KS
{
  [DesignerGenerated]
  public class Launcher : Form
  {
    private IContainer components;

    public Launcher() => this.InitializeComponent();

    private void StartButton_Clicked(object sender, EventArgs e)
    {
      MyProject.Forms.Game.Show();
      this.Hide();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Launcher));
      this.startButton = new Button();
      this.players0 = new RadioButton();
      this.players2 = new RadioButton();
      this.players1 = new RadioButton();
      this.SuspendLayout();
      this.startButton.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.startButton.Location = new Point(147, 31);
      this.startButton.Name = "startButton";
      this.startButton.Size = new Size(121, 72);
      this.startButton.TabIndex = 0;
      this.startButton.Text = "START GAME";
      this.startButton.UseVisualStyleBackColor = true;
      this.players0.AutoSize = true;
      this.players0.Location = new Point(32, 31);
      this.players0.Name = "players0";
      this.players0.Size = new Size(68, 17);
      this.players0.TabIndex = 2;
      this.players0.TabStop = true;
      this.players0.Text = "0 Players";
      this.players0.UseVisualStyleBackColor = true;
      this.players2.AutoSize = true;
      this.players2.Checked = true;
      this.players2.Location = new Point(32, 77);
      this.players2.Name = "players2";
      this.players2.Size = new Size(68, 17);
      this.players2.TabIndex = 3;
      this.players2.TabStop = true;
      this.players2.Text = "2 Players";
      this.players2.UseVisualStyleBackColor = true;
      this.players1.AutoSize = true;
      this.players1.Location = new Point(32, 54);
      this.players1.Name = "players1";
      this.players1.Size = new Size(63, 17);
      this.players1.TabIndex = 4;
      this.players1.Text = "1 Player";
      this.players1.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(318, 148);
      this.Controls.Add((Control) this.players1);
      this.Controls.Add((Control) this.players2);
      this.Controls.Add((Control) this.players0);
      this.Controls.Add((Control) this.startButton);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Launcher);
      this.Text = nameof (Launcher);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button startButton
    {
      get => this._startButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.StartButton_Clicked);
        Button startButton1 = this._startButton;
        if (startButton1 != null)
          startButton1.Click -= eventHandler;
        this._startButton = value;
        Button startButton2 = this._startButton;
        if (startButton2 == null)
          return;
        startButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("players0")]
    internal virtual RadioButton players0 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("players2")]
    internal virtual RadioButton players2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("players1")]
    internal virtual RadioButton players1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }
  }
}
