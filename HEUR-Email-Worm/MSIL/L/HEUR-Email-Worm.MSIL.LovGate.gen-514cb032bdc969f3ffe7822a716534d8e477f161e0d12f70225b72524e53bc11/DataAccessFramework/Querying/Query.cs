// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.Querying.Query
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System.Collections.Generic;
using System.Data;

namespace DataAccessFramework.Querying
{
  public abstract class Query
  {
    internal abstract Query.ParseResult Parse(DataTool dataTool);

    protected Query()
    {
label_1:
      int num1 = 115931665;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 271117936)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1693920366 ^ -822175511;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    internal class ParseResult
    {
      private readonly string _sql;
      private readonly IList<IDataParameter> _parameters;

      public ParseResult(string sql, IList<IDataParameter> parameters)
      {
        this._sql = sql;
        this._parameters = parameters;
      }

      public string Sql
      {
        get
        {
label_1:
          int num1 = -1210291813;
          string sql;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -715576696)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -524651003 ^ -1794498647;
                continue;
              case 2:
                goto label_1;
              case 3:
                sql = this._sql;
                num1 = (int) num2 * -1130019925 ^ 85079565;
                continue;
              default:
                goto label_5;
            }
          }
label_5:
          return sql;
        }
      }

      public IList<IDataParameter> Parameters
      {
        get
        {
label_1:
          int num1 = 1403971948;
          IList<IDataParameter> parameters;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1827786699)) % 4U)
            {
              case 0:
                goto label_1;
              case 2:
                num1 = (int) num2 * -1331853945 ^ -740376672;
                continue;
              case 3:
                parameters = this._parameters;
                num1 = (int) num2 * -123621802 ^ 1476235195;
                continue;
              default:
                goto label_5;
            }
          }
label_5:
          return parameters;
        }
      }
    }
  }
}
