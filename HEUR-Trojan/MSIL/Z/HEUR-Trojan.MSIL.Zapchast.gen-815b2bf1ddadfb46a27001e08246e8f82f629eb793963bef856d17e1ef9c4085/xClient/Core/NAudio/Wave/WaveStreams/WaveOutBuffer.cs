// Decompiled with JetBrains decompiler
// Type: xClient.Core.NAudio.Wave.WaveStreams.WaveOutBuffer
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Runtime.InteropServices;

namespace xClient.Core.NAudio.Wave.WaveStreams
{
  internal class WaveOutBuffer : IDisposable
  {
    private readonly ㄇ\uF112穧箰咽\u31DC첞闩倕\uFFFD鵊\uE0C8糒믕㞠픟\u1AEF囲妛ꗢ header;
    private readonly int bufferSize;
    private readonly byte[] buffer;
    private readonly 벙灘ꩌ\uFFFDິњ晘\uF867ાⴏ䑛멀뀝譝愡埩\u2225똀覉겝 waveStream;
    private readonly object waveOutLock;
    private GCHandle hBuffer;
    private IntPtr hWaveOut;
    private GCHandle hHeader;
    private GCHandle hThis;

    public WaveOutBuffer(
      IntPtr hWaveOut,
      int bufferSize,
      벙灘ꩌ\uFFFDິњ晘\uF867ાⴏ䑛멀뀝譝愡埩\u2225똀覉겝 bufferFillStream,
      object waveOutLock)
    {
      this.bufferSize = bufferSize;
      this.buffer = new byte[bufferSize];
      this.hBuffer = GCHandle.Alloc((object) this.buffer, GCHandleType.Pinned);
      this.hWaveOut = hWaveOut;
      this.waveStream = bufferFillStream;
      this.waveOutLock = waveOutLock;
      this.header = new ㄇ\uF112穧箰咽\u31DC첞闩倕\uFFFD鵊\uE0C8糒믕㞠픟\u1AEF囲妛ꗢ();
      this.hHeader = GCHandle.Alloc((object) this.header, GCHandleType.Pinned);
      this.header.䦯ဩ륚䗪읖针ೂ爮\uF381ぇ퀾\u2532끸鳶ᄲ\u2831첊\uFAEC⵿\uF0F3 = this.hBuffer.AddrOfPinnedObject();
      this.header.蕳\uA4ABㄚ姣醪칎\u208B\u2205\u230D圖\u2433萖刯\uFFFD냫챤\u21F8㜮\u0BC5졟 = bufferSize;
      this.header.ᦒ\uEAEA銄眡鿂䖮\uEA4A\u087Cञ愽䬒똵ମጂ擌铫ꖛ\uFFFD瀱ॆ = 1;
      this.hThis = GCHandle.Alloc((object) this);
      this.header.\uE217\uF382ꕐ禤棣\uF695ऽ讏ꅆ䔘閖㸾\u2545㡌୫塊\u27D4먰扵ᯁ = (IntPtr) this.hThis;
      lock (waveOutLock)
        㵼眢謟ᱥ︦\u2B28؄秀ᶙᨱ벁蕿\uF60C校쌎흭ä䌾嶆\uE399.定뙟乗廓囿ꮆ\uEE08\u2A64윪웧晪鯫\u2AE1堢蝹\u258C\u0D56뱴ꗂ뺽(\uF22A폆幏\u2D77\uE703ꂀ䀣켨钕䠢㥧\u2D2Aი鄠쩘뢚놇燀쁱䧢.㞷렓椌㿨鈏\uFFFD赉䩵\uFFFD鉍\u2238\u1AD8觫၀繂圈햀㡣环经(hWaveOut, this.header, Marshal.SizeOf((object) this.header)), "waveOutPrepareHeader");
    }

    ~WaveOutBuffer() => this.Dispose(false);

    public void Dispose()
    {
      GC.SuppressFinalize((object) this);
      this.Dispose(true);
    }

    protected void Dispose(bool disposing)
    {
      int num1 = disposing ? 1 : 0;
      if (this.hHeader.IsAllocated)
        this.hHeader.Free();
      if (this.hBuffer.IsAllocated)
        this.hBuffer.Free();
      if (this.hThis.IsAllocated)
        this.hThis.Free();
      if (!(this.hWaveOut != IntPtr.Zero))
        return;
      lock (this.waveOutLock)
      {
        int num2 = (int) \uF22A폆幏\u2D77\uE703ꂀ䀣켨钕䠢㥧\u2D2Aი鄠쩘뢚놇燀쁱䧢.槬\u2E88逎ꭹ\uEB34䗢ƺ\u2940哚\u2FFE\uE13F홋䋙冄涫㻌妞섺䦳ᷙ(this.hWaveOut, this.header, Marshal.SizeOf((object) this.header));
      }
      this.hWaveOut = IntPtr.Zero;
    }

    internal bool OnDone()
    {
      int num;
      lock (this.waveStream)
        num = this.waveStream.Read(this.buffer, 0, this.buffer.Length);
      if (num == 0)
        return false;
      for (int index = num; index < this.buffer.Length; ++index)
        this.buffer[index] = (byte) 0;
      this.WriteToWaveOut();
      return true;
    }

    public bool InQueue => (this.header.\u27DD騝醝폆\u08DF㘮\u2AC3ᛞ䊜杨\u255E\uF7AA\u2B7E怪\uFFFD곫蛄濮뫣墘 & 쩷\uFFFD嗆\u2585\u2780肾些姂쨮鬏ᤱ\u2231\uFFFD뀻츬쭆ꅒ韄\uF2F2ൌ.䜫\uE6F3牬\uFFFDꬭ컝\u25DDꁆ\uE91A\uEFB9啾゙ჟ\u245Bﴉᷯ㕚\u00B6\u2BE8ᛵ) == 쩷\uFFFD嗆\u2585\u2780肾些姂쨮鬏ᤱ\u2231\uFFFD뀻츬쭆ꅒ韄\uF2F2ൌ.䜫\uE6F3牬\uFFFDꬭ컝\u25DDꁆ\uE91A\uEFB9啾゙ჟ\u245Bﴉᷯ㕚\u00B6\u2BE8ᛵ;

    public int BufferSize => this.bufferSize;

    private void WriteToWaveOut()
    {
      뭗옢嬿눱옙匭\uF6FE퓭쟛㓚솧匋䑘狸潍緓큂穄톜\u291E result;
      lock (this.waveOutLock)
        result = \uF22A폆幏\u2D77\uE703ꂀ䀣켨钕䠢㥧\u2D2Aი鄠쩘뢚놇燀쁱䧢.吤淾蘗ᤋ\uECB5מᥖ왊攔뒱鍲曁셆賐鴴ា젱\uA82F㦨\u2A9F(this.hWaveOut, this.header, Marshal.SizeOf((object) this.header));
      if (result != 뭗옢嬿눱옙匭\uF6FE퓭쟛㓚솧匋䑘狸潍緓큂穄톜\u291E.켖재\u203Eᥑ蹁\uA60E뾜䰊\uFFFDᵬﱧ趤嵛焞컯\uFFFD䐮眭쑨主)
        throw new 㵼眢謟ᱥ︦\u2B28؄秀ᶙᨱ벁蕿\uF60C校쌎흭ä䌾嶆\uE399(result, "waveOutWrite");
      GC.KeepAlive((object) this);
    }
  }
}
