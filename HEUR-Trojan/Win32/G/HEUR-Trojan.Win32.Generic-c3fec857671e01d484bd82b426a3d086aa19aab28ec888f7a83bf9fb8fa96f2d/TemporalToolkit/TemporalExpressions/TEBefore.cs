// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEBefore
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEBefore : TemporalExpression
  {
    public DateTime Date { get; set; }

    public TEBefore(DateTime aDate)
    {
label_1:
      int num1 = 291674746;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 922811298)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Date = aDate;
            num1 = (int) num2 * 1503751376 ^ 595186971;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 833090906 ^ 1339646881;
            continue;
          case 4:
            num1 = (int) num2 * 77397640 ^ 154884925;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override bool Includes(DateTime aDate)
    {
label_1:
      int num1 = -6264510;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -873015193)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = aDate < this.Date;
            num1 = (int) num2 * 1915005202 ^ -795641278;
            continue;
          case 3:
            num1 = (int) num2 * -1275590713 ^ -1420401088;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }
  }
}
