// Decompiled with JetBrains decompiler
// Type: Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit.frmAlias
// Assembly: alias, Version=18.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 30B32B4B-BB59-4BDE-A34F-3A89FA31757D
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Virus.Win32.Qvod.b-ac27f4b9ea6bdc870c5c3930c4f29eda3be51969560d72a79a191f4f50597cfb.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Printing;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit
{
  internal class frmAlias : Form
  {
    public ResourceManager resManager;
    private IContainer components;
    public ToolTip ToolTip1;
    [AccessedThroughProperty("cdgOpen")]
    private OpenFileDialog _cdgOpen;
    [AccessedThroughProperty("cmdOK")]
    private Button _cmdOK;
    [AccessedThroughProperty("chkConfirm")]
    private CheckBox _chkConfirm;
    [AccessedThroughProperty("cmdCancel")]
    private Button _cmdCancel;
    [AccessedThroughProperty("cmdApply")]
    private Button _cmdApply;
    [AccessedThroughProperty("_pctAlias_0")]
    private Panel __pctAlias_0;
    [AccessedThroughProperty("_cmdEdit_0")]
    private Button __cmdEdit_0;
    [AccessedThroughProperty("_cmdRemove_0")]
    private Button __cmdRemove_0;
    [AccessedThroughProperty("_cmdAdd_0")]
    private Button __cmdAdd_0;
    [AccessedThroughProperty("_fraMain_0")]
    private GroupBox __fraMain_0;
    [AccessedThroughProperty("_pctAlias_1")]
    private Panel __pctAlias_1;
    [AccessedThroughProperty("_cmdEdit_1")]
    private Button __cmdEdit_1;
    [AccessedThroughProperty("_cmdAdd_1")]
    private Button __cmdAdd_1;
    [AccessedThroughProperty("_cmdRemove_1")]
    private Button __cmdRemove_1;
    [AccessedThroughProperty("_fraMain_1")]
    private GroupBox __fraMain_1;
    [AccessedThroughProperty("tbsMain")]
    private TabControl _tbsMain;
    [AccessedThroughProperty("lblProgress")]
    private Label _lblProgress;
    public ArrayList cmdAdd;
    public ArrayList cmdEdit;
    public ArrayList cmdRemove;
    public ArrayList fraMain;
    public ArrayList pctAlias;
    [AccessedThroughProperty("mnuFileNew")]
    private MenuItem _mnuFileNew;
    [AccessedThroughProperty("mnuFileSep1")]
    private MenuItem _mnuFileSep1;
    [AccessedThroughProperty("mnuFileOpen")]
    private MenuItem _mnuFileOpen;
    [AccessedThroughProperty("mnuFileSave")]
    private MenuItem _mnuFileSave;
    [AccessedThroughProperty("mnuFileSep2")]
    private MenuItem _mnuFileSep2;
    [AccessedThroughProperty("mnuFileImport")]
    private MenuItem _mnuFileImport;
    [AccessedThroughProperty("mnuFileExport")]
    private MenuItem _mnuFileExport;
    [AccessedThroughProperty("mnuFileSep3")]
    private MenuItem _mnuFileSep3;
    [AccessedThroughProperty("mnuFileSetup")]
    private MenuItem _mnuFileSetup;
    [AccessedThroughProperty("mnuFilePrint")]
    private MenuItem _mnuFilePrint;
    [AccessedThroughProperty("mnuFileSep4")]
    private MenuItem _mnuFileSep4;
    [AccessedThroughProperty("mnuFileExit")]
    private MenuItem _mnuFileExit;
    [AccessedThroughProperty("mnuFile")]
    private MenuItem _mnuFile;
    [AccessedThroughProperty("mnuEditAdd")]
    private MenuItem _mnuEditAdd;
    [AccessedThroughProperty("mnuEditRemove")]
    private MenuItem _mnuEditRemove;
    [AccessedThroughProperty("mnuEditSep1")]
    private MenuItem _mnuEditSep1;
    [AccessedThroughProperty("mnuEditEdit")]
    private MenuItem _mnuEditEdit;
    [AccessedThroughProperty("mnuEdit")]
    private MenuItem _mnuEdit;
    [AccessedThroughProperty("mnuHelpSearch")]
    private MenuItem _mnuHelpSearch;
    [AccessedThroughProperty("mnuHelpSep1")]
    private MenuItem _mnuHelpSep1;
    [AccessedThroughProperty("mnuHelpAbout")]
    private MenuItem _mnuHelpAbout;
    [AccessedThroughProperty("mnuHelp")]
    private MenuItem _mnuHelp;
    public MainMenu MainMenu1;
    [AccessedThroughProperty("HelpProvider1")]
    private HelpProvider _HelpProvider1;
    public TabPage Tab0;
    public TabPage Tab1;
    public ArrayList lvwAlias;
    [AccessedThroughProperty("_lvwShell")]
    private ListView __lvwShell;
    [AccessedThroughProperty("_lvwAlias")]
    private ListView __lvwAlias;
    [AccessedThroughProperty("PageSetupDlg")]
    private PageSetupDialog _PageSetupDlg;
    [AccessedThroughProperty("cdgSave")]
    private SaveFileDialog _cdgSave;
    private static frmAlias m_vb6FormDefInstance;

    public frmAlias()
    {
      this.Load += new EventHandler(this.frmAlias_Load);
      this.Closed += new EventHandler(this.frmAlias_Closed);
      this.resManager = new ResourceManager(typeof (frmAlias));
      this.cmdAdd = new ArrayList();
      this.cmdEdit = new ArrayList();
      this.cmdRemove = new ArrayList();
      this.fraMain = new ArrayList();
      this.pctAlias = new ArrayList();
      this.lvwAlias = new ArrayList();
      frmAlias.m_vb6FormDefInstance = this;
      this.InitializeComponent();
    }

    protected override void Dispose(bool Disposing)
    {
      if (Disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(Disposing);
    }

    public virtual OpenFileDialog cdgOpen
    {
      get => this._cdgOpen;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._cdgOpen = value;
    }

    public virtual Button cmdOK
    {
      get => this._cmdOK;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdOK_Click);
        if (this._cmdOK != null)
          this._cmdOK.Click -= eventHandler;
        this._cmdOK = value;
        if (this._cmdOK == null)
          return;
        this._cmdOK.Click += eventHandler;
      }
    }

    public virtual CheckBox chkConfirm
    {
      get => this._chkConfirm;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._chkConfirm = value;
    }

    public virtual Button cmdCancel
    {
      get => this._cmdCancel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdCancel_Click);
        if (this._cmdCancel != null)
          this._cmdCancel.Click -= eventHandler;
        this._cmdCancel = value;
        if (this._cmdCancel == null)
          return;
        this._cmdCancel.Click += eventHandler;
      }
    }

    public virtual Button cmdApply
    {
      get => this._cmdApply;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdApply_Click);
        if (this._cmdApply != null)
          this._cmdApply.Click -= eventHandler;
        this._cmdApply = value;
        if (this._cmdApply == null)
          return;
        this._cmdApply.Click += eventHandler;
      }
    }

    public virtual Panel _pctAlias_0
    {
      get => this.__pctAlias_0;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this.__pctAlias_0 = value;
    }

    public virtual Button _cmdEdit_0
    {
      get => this.__cmdEdit_0;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdEdit_Click);
        if (this.__cmdEdit_0 != null)
          this.__cmdEdit_0.Click -= eventHandler;
        this.__cmdEdit_0 = value;
        if (this.__cmdEdit_0 == null)
          return;
        this.__cmdEdit_0.Click += eventHandler;
      }
    }

    public virtual Button _cmdRemove_0
    {
      get => this.__cmdRemove_0;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdRemove_Click);
        if (this.__cmdRemove_0 != null)
          this.__cmdRemove_0.Click -= eventHandler;
        this.__cmdRemove_0 = value;
        if (this.__cmdRemove_0 == null)
          return;
        this.__cmdRemove_0.Click += eventHandler;
      }
    }

    public virtual Button _cmdAdd_0
    {
      get => this.__cmdAdd_0;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdAdd_Click);
        if (this.__cmdAdd_0 != null)
          this.__cmdAdd_0.Click -= eventHandler;
        this.__cmdAdd_0 = value;
        if (this.__cmdAdd_0 == null)
          return;
        this.__cmdAdd_0.Click += eventHandler;
      }
    }

    public virtual GroupBox _fraMain_0
    {
      get => this.__fraMain_0;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this.__fraMain_0 = value;
    }

    public virtual Panel _pctAlias_1
    {
      get => this.__pctAlias_1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this.__pctAlias_1 = value;
    }

    public virtual Button _cmdEdit_1
    {
      get => this.__cmdEdit_1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdEdit_Click);
        if (this.__cmdEdit_1 != null)
          this.__cmdEdit_1.Click -= eventHandler;
        this.__cmdEdit_1 = value;
        if (this.__cmdEdit_1 == null)
          return;
        this.__cmdEdit_1.Click += eventHandler;
      }
    }

    public virtual Button _cmdAdd_1
    {
      get => this.__cmdAdd_1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdAdd_Click);
        if (this.__cmdAdd_1 != null)
          this.__cmdAdd_1.Click -= eventHandler;
        this.__cmdAdd_1 = value;
        if (this.__cmdAdd_1 == null)
          return;
        this.__cmdAdd_1.Click += eventHandler;
      }
    }

    public virtual Button _cmdRemove_1
    {
      get => this.__cmdRemove_1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.cmdRemove_Click);
        if (this.__cmdRemove_1 != null)
          this.__cmdRemove_1.Click -= eventHandler;
        this.__cmdRemove_1 = value;
        if (this.__cmdRemove_1 == null)
          return;
        this.__cmdRemove_1.Click += eventHandler;
      }
    }

    public virtual GroupBox _fraMain_1
    {
      get => this.__fraMain_1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this.__fraMain_1 = value;
    }

    public virtual TabControl tbsMain
    {
      get => this._tbsMain;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tbsMain_ClickEvent);
        if (this._tbsMain != null)
          this._tbsMain.Click -= eventHandler;
        this._tbsMain = value;
        if (this._tbsMain == null)
          return;
        this._tbsMain.Click += eventHandler;
      }
    }

    public virtual Label lblProgress
    {
      get => this._lblProgress;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._lblProgress = value;
    }

    public virtual MenuItem mnuFileNew
    {
      get => this._mnuFileNew;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileNew_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileNew_Popup);
        if (this._mnuFileNew != null)
        {
          this._mnuFileNew.Click -= eventHandler1;
          this._mnuFileNew.Popup -= eventHandler2;
        }
        this._mnuFileNew = value;
        if (this._mnuFileNew == null)
          return;
        this._mnuFileNew.Click += eventHandler1;
        this._mnuFileNew.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileSep1
    {
      get => this._mnuFileSep1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuFileSep1 = value;
    }

    public virtual MenuItem mnuFileOpen
    {
      get => this._mnuFileOpen;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileOpen_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileOpen_Popup);
        if (this._mnuFileOpen != null)
        {
          this._mnuFileOpen.Click -= eventHandler1;
          this._mnuFileOpen.Popup -= eventHandler2;
        }
        this._mnuFileOpen = value;
        if (this._mnuFileOpen == null)
          return;
        this._mnuFileOpen.Click += eventHandler1;
        this._mnuFileOpen.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileSave
    {
      get => this._mnuFileSave;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileSave_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileSave_Popup);
        if (this._mnuFileSave != null)
        {
          this._mnuFileSave.Click -= eventHandler1;
          this._mnuFileSave.Popup -= eventHandler2;
        }
        this._mnuFileSave = value;
        if (this._mnuFileSave == null)
          return;
        this._mnuFileSave.Click += eventHandler1;
        this._mnuFileSave.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileSep2
    {
      get => this._mnuFileSep2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuFileSep2 = value;
    }

    public virtual MenuItem mnuFileImport
    {
      get => this._mnuFileImport;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileImport_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileImport_Popup);
        if (this._mnuFileImport != null)
        {
          this._mnuFileImport.Click -= eventHandler1;
          this._mnuFileImport.Popup -= eventHandler2;
        }
        this._mnuFileImport = value;
        if (this._mnuFileImport == null)
          return;
        this._mnuFileImport.Click += eventHandler1;
        this._mnuFileImport.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileExport
    {
      get => this._mnuFileExport;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileExport_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileExport_Popup);
        if (this._mnuFileExport != null)
        {
          this._mnuFileExport.Click -= eventHandler1;
          this._mnuFileExport.Popup -= eventHandler2;
        }
        this._mnuFileExport = value;
        if (this._mnuFileExport == null)
          return;
        this._mnuFileExport.Click += eventHandler1;
        this._mnuFileExport.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileSep3
    {
      get => this._mnuFileSep3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuFileSep3 = value;
    }

    public virtual MenuItem mnuFileSetup
    {
      get => this._mnuFileSetup;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileSetup_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileSetup_Popup);
        if (this._mnuFileSetup != null)
        {
          this._mnuFileSetup.Click -= eventHandler1;
          this._mnuFileSetup.Popup -= eventHandler2;
        }
        this._mnuFileSetup = value;
        if (this._mnuFileSetup == null)
          return;
        this._mnuFileSetup.Click += eventHandler1;
        this._mnuFileSetup.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFilePrint
    {
      get => this._mnuFilePrint;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFilePrint_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFilePrint_Popup);
        if (this._mnuFilePrint != null)
        {
          this._mnuFilePrint.Click -= eventHandler1;
          this._mnuFilePrint.Popup -= eventHandler2;
        }
        this._mnuFilePrint = value;
        if (this._mnuFilePrint == null)
          return;
        this._mnuFilePrint.Click += eventHandler1;
        this._mnuFilePrint.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFileSep4
    {
      get => this._mnuFileSep4;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuFileSep4 = value;
    }

    public virtual MenuItem mnuFileExit
    {
      get => this._mnuFileExit;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuFileExit_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuFileExit_Popup);
        if (this._mnuFileExit != null)
        {
          this._mnuFileExit.Click -= eventHandler1;
          this._mnuFileExit.Popup -= eventHandler2;
        }
        this._mnuFileExit = value;
        if (this._mnuFileExit == null)
          return;
        this._mnuFileExit.Click += eventHandler1;
        this._mnuFileExit.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuFile
    {
      get => this._mnuFile;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuFile = value;
    }

    public virtual MenuItem mnuEditAdd
    {
      get => this._mnuEditAdd;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuEditAdd_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuEditAdd_Popup);
        if (this._mnuEditAdd != null)
        {
          this._mnuEditAdd.Click -= eventHandler1;
          this._mnuEditAdd.Popup -= eventHandler2;
        }
        this._mnuEditAdd = value;
        if (this._mnuEditAdd == null)
          return;
        this._mnuEditAdd.Click += eventHandler1;
        this._mnuEditAdd.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuEditRemove
    {
      get => this._mnuEditRemove;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuEditRemove_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuEditRemove_Popup);
        if (this._mnuEditRemove != null)
        {
          this._mnuEditRemove.Click -= eventHandler1;
          this._mnuEditRemove.Popup -= eventHandler2;
        }
        this._mnuEditRemove = value;
        if (this._mnuEditRemove == null)
          return;
        this._mnuEditRemove.Click += eventHandler1;
        this._mnuEditRemove.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuEditSep1
    {
      get => this._mnuEditSep1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuEditSep1 = value;
    }

    public virtual MenuItem mnuEditEdit
    {
      get => this._mnuEditEdit;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuEditEdit_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuEditEdit_Popup);
        if (this._mnuEditEdit != null)
        {
          this._mnuEditEdit.Click -= eventHandler1;
          this._mnuEditEdit.Popup -= eventHandler2;
        }
        this._mnuEditEdit = value;
        if (this._mnuEditEdit == null)
          return;
        this._mnuEditEdit.Click += eventHandler1;
        this._mnuEditEdit.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuEdit
    {
      get => this._mnuEdit;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuEdit = value;
    }

    public virtual MenuItem mnuHelpSearch
    {
      get => this._mnuHelpSearch;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuHelpSearch_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuHelpSearch_Popup);
        if (this._mnuHelpSearch != null)
        {
          this._mnuHelpSearch.Click -= eventHandler1;
          this._mnuHelpSearch.Popup -= eventHandler2;
        }
        this._mnuHelpSearch = value;
        if (this._mnuHelpSearch == null)
          return;
        this._mnuHelpSearch.Click += eventHandler1;
        this._mnuHelpSearch.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuHelpSep1
    {
      get => this._mnuHelpSep1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuHelpSep1 = value;
    }

    public virtual MenuItem mnuHelpAbout
    {
      get => this._mnuHelpAbout;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.mnuHelpAbout_Click);
        EventHandler eventHandler2 = new EventHandler(this.mnuHelpAbout_Popup);
        if (this._mnuHelpAbout != null)
        {
          this._mnuHelpAbout.Click -= eventHandler1;
          this._mnuHelpAbout.Popup -= eventHandler2;
        }
        this._mnuHelpAbout = value;
        if (this._mnuHelpAbout == null)
          return;
        this._mnuHelpAbout.Click += eventHandler1;
        this._mnuHelpAbout.Popup += eventHandler2;
      }
    }

    public virtual MenuItem mnuHelp
    {
      get => this._mnuHelp;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._mnuHelp = value;
    }

    public virtual HelpProvider HelpProvider1
    {
      get => this._HelpProvider1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._HelpProvider1 = value;
    }

    public virtual ListView _lvwShell
    {
      get => this.__lvwShell;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.lvwAlias_Leave);
        KeyEventHandler keyEventHandler = new KeyEventHandler(this.lvwAlias_KeyDownEvent);
        EventHandler eventHandler2 = new EventHandler(this.lvwAlias_ItemClick);
        EventHandler eventHandler3 = new EventHandler(this.lvwAlias_Enter);
        EventHandler eventHandler4 = new EventHandler(this.lvwAlias_DblClick);
        ColumnClickEventHandler clickEventHandler = new ColumnClickEventHandler(this.lvwAlias_ColumnClick);
        LabelEditEventHandler editEventHandler = new LabelEditEventHandler(this.lvwAlias_AfterLabelEdit);
        if (this.__lvwShell != null)
        {
          this.__lvwShell.Leave -= eventHandler1;
          this.__lvwShell.KeyDown -= keyEventHandler;
          this.__lvwShell.SelectedIndexChanged -= eventHandler2;
          this.__lvwShell.Enter -= eventHandler3;
          this.__lvwShell.DoubleClick -= eventHandler4;
          this.__lvwShell.ColumnClick -= clickEventHandler;
          this.__lvwShell.AfterLabelEdit -= editEventHandler;
        }
        this.__lvwShell = value;
        if (this.__lvwShell == null)
          return;
        this.__lvwShell.Leave += eventHandler1;
        this.__lvwShell.KeyDown += keyEventHandler;
        this.__lvwShell.SelectedIndexChanged += eventHandler2;
        this.__lvwShell.Enter += eventHandler3;
        this.__lvwShell.DoubleClick += eventHandler4;
        this.__lvwShell.ColumnClick += clickEventHandler;
        this.__lvwShell.AfterLabelEdit += editEventHandler;
      }
    }

    public virtual ListView _lvwAlias
    {
      get => this.__lvwAlias;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.lvwAlias_Leave);
        KeyEventHandler keyEventHandler = new KeyEventHandler(this.lvwAlias_KeyDownEvent);
        EventHandler eventHandler2 = new EventHandler(this.lvwAlias_ItemClick);
        EventHandler eventHandler3 = new EventHandler(this.lvwAlias_Enter);
        EventHandler eventHandler4 = new EventHandler(this.lvwAlias_DblClick);
        ColumnClickEventHandler clickEventHandler = new ColumnClickEventHandler(this.lvwAlias_ColumnClick);
        LabelEditEventHandler editEventHandler = new LabelEditEventHandler(this.lvwAlias_AfterLabelEdit);
        if (this.__lvwAlias != null)
        {
          this.__lvwAlias.Leave -= eventHandler1;
          this.__lvwAlias.KeyDown -= keyEventHandler;
          this.__lvwAlias.SelectedIndexChanged -= eventHandler2;
          this.__lvwAlias.Enter -= eventHandler3;
          this.__lvwAlias.DoubleClick -= eventHandler4;
          this.__lvwAlias.ColumnClick -= clickEventHandler;
          this.__lvwAlias.AfterLabelEdit -= editEventHandler;
        }
        this.__lvwAlias = value;
        if (this.__lvwAlias == null)
          return;
        this.__lvwAlias.Leave += eventHandler1;
        this.__lvwAlias.KeyDown += keyEventHandler;
        this.__lvwAlias.SelectedIndexChanged += eventHandler2;
        this.__lvwAlias.Enter += eventHandler3;
        this.__lvwAlias.DoubleClick += eventHandler4;
        this.__lvwAlias.ColumnClick += clickEventHandler;
        this.__lvwAlias.AfterLabelEdit += editEventHandler;
      }
    }

    internal virtual PageSetupDialog PageSetupDlg
    {
      get => this._PageSetupDlg;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._PageSetupDlg = value;
    }

    internal virtual SaveFileDialog cdgSave
    {
      get => this._cdgSave;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._cdgSave = value;
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      Application.EnableVisualStyles();
      this.components = (IContainer) new System.ComponentModel.Container();
      ResourceManager resourceManager = new ResourceManager(typeof (frmAlias));
      this.ToolTip1 = new ToolTip(this.components);
      this.cmdOK = new Button();
      this.chkConfirm = new CheckBox();
      this.cmdCancel = new Button();
      this.cmdApply = new Button();
      this._fraMain_0 = new GroupBox();
      this._pctAlias_0 = new Panel();
      this._lvwAlias = new ListView();
      this._cmdEdit_0 = new Button();
      this._cmdRemove_0 = new Button();
      this._cmdAdd_0 = new Button();
      this._fraMain_1 = new GroupBox();
      this._pctAlias_1 = new Panel();
      this._lvwShell = new ListView();
      this._cmdEdit_1 = new Button();
      this._cmdAdd_1 = new Button();
      this._cmdRemove_1 = new Button();
      this.tbsMain = new TabControl();
      this.Tab0 = new TabPage();
      this.Tab1 = new TabPage();
      this.lblProgress = new Label();
      this.cdgOpen = new OpenFileDialog();
      this.MainMenu1 = new MainMenu();
      this.mnuFile = new MenuItem();
      this.mnuFileNew = new MenuItem();
      this.mnuFileSep1 = new MenuItem();
      this.mnuFileOpen = new MenuItem();
      this.mnuFileSave = new MenuItem();
      this.mnuFileSep2 = new MenuItem();
      this.mnuFileImport = new MenuItem();
      this.mnuFileExport = new MenuItem();
      this.mnuFileSep3 = new MenuItem();
      this.mnuFileSetup = new MenuItem();
      this.mnuFilePrint = new MenuItem();
      this.mnuFileSep4 = new MenuItem();
      this.mnuFileExit = new MenuItem();
      this.mnuEdit = new MenuItem();
      this.mnuEditAdd = new MenuItem();
      this.mnuEditRemove = new MenuItem();
      this.mnuEditSep1 = new MenuItem();
      this.mnuEditEdit = new MenuItem();
      this.mnuHelp = new MenuItem();
      this.mnuHelpSearch = new MenuItem();
      this.mnuHelpSep1 = new MenuItem();
      this.mnuHelpAbout = new MenuItem();
      this.HelpProvider1 = new HelpProvider();
      this.PageSetupDlg = new PageSetupDialog();
      this.cdgSave = new SaveFileDialog();
      this._fraMain_0.SuspendLayout();
      this._pctAlias_0.SuspendLayout();
      this._fraMain_1.SuspendLayout();
      this._pctAlias_1.SuspendLayout();
      this.tbsMain.SuspendLayout();
      this.Tab0.SuspendLayout();
      this.Tab1.SuspendLayout();
      this.SuspendLayout();
      this.cmdOK.AccessibleDescription = resourceManager.GetString("cmdOK.AccessibleDescription");
      this.cmdOK.AccessibleName = resourceManager.GetString("cmdOK.AccessibleName");
      this.cmdOK.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("cmdOK.Anchor"));
      this.cmdOK.BackColor = SystemColors.Control;
      this.cmdOK.BackgroundImage = (Image) resourceManager.GetObject("cmdOK.BackgroundImage");
      this.cmdOK.Cursor = Cursors.Default;
      this.cmdOK.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("cmdOK.Dock"));
      this.cmdOK.Enabled = Conversions.ToBoolean(resourceManager.GetObject("cmdOK.Enabled"));
      this.cmdOK.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("cmdOK.FlatStyle"));
      this.cmdOK.Font = (Font) resourceManager.GetObject("cmdOK.Font");
      this.cmdOK.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this.cmdOK, resourceManager.GetString("cmdOK.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.cmdOK, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("cmdOK.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.cmdOK, resourceManager.GetString("cmdOK.HelpString"));
      this.cmdOK.Image = (Image) resourceManager.GetObject("cmdOK.Image");
      this.cmdOK.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdOK.ImageAlign"));
      this.cmdOK.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("cmdOK.ImageIndex"));
      this.cmdOK.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("cmdOK.ImeMode"));
      Button cmdOk1 = this.cmdOK;
      object obj1 = resourceManager.GetObject("cmdOK.Location");
      Point point1;
      Point point2 = obj1 != null ? (Point) obj1 : point1;
      cmdOk1.Location = point2;
      this.cmdOK.Name = "cmdOK";
      this.cmdOK.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("cmdOK.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.cmdOK, Conversions.ToBoolean(resourceManager.GetObject("cmdOK.ShowHelp")));
      Button cmdOk2 = this.cmdOK;
      object obj2 = resourceManager.GetObject("cmdOK.Size");
      Size size1;
      Size size2 = obj2 != null ? (Size) obj2 : size1;
      cmdOk2.Size = size2;
      this.cmdOK.TabIndex = Conversions.ToInteger(resourceManager.GetObject("cmdOK.TabIndex"));
      this.cmdOK.Tag = (object) "ok and dismiss";
      this.cmdOK.Text = resourceManager.GetString("cmdOK.Text");
      this.cmdOK.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdOK.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this.cmdOK, resourceManager.GetString("cmdOK.ToolTip"));
      this.cmdOK.Visible = Conversions.ToBoolean(resourceManager.GetObject("cmdOK.Visible"));
      this.chkConfirm.AccessibleDescription = resourceManager.GetString("chkConfirm.AccessibleDescription");
      this.chkConfirm.AccessibleName = resourceManager.GetString("chkConfirm.AccessibleName");
      this.chkConfirm.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.Anchor"));
      this.chkConfirm.Appearance = (Appearance) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.Appearance"));
      this.chkConfirm.BackColor = SystemColors.ControlLight;
      this.chkConfirm.BackgroundImage = (Image) resourceManager.GetObject("chkConfirm.BackgroundImage");
      this.chkConfirm.CheckAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.CheckAlign"));
      this.chkConfirm.Checked = true;
      this.chkConfirm.CheckState = CheckState.Checked;
      this.chkConfirm.Cursor = Cursors.Default;
      this.chkConfirm.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.Dock"));
      this.chkConfirm.Enabled = Conversions.ToBoolean(resourceManager.GetObject("chkConfirm.Enabled"));
      this.chkConfirm.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.FlatStyle"));
      this.chkConfirm.Font = (Font) resourceManager.GetObject("chkConfirm.Font");
      this.chkConfirm.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this.chkConfirm, resourceManager.GetString("chkConfirm.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.chkConfirm, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.chkConfirm, resourceManager.GetString("chkConfirm.HelpString"));
      this.chkConfirm.Image = (Image) resourceManager.GetObject("chkConfirm.Image");
      this.chkConfirm.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.ImageAlign"));
      this.chkConfirm.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("chkConfirm.ImageIndex"));
      this.chkConfirm.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.ImeMode"));
      CheckBox chkConfirm1 = this.chkConfirm;
      object obj3 = resourceManager.GetObject("chkConfirm.Location");
      Point point3 = obj3 != null ? (Point) obj3 : point1;
      chkConfirm1.Location = point3;
      this.chkConfirm.Name = "chkConfirm";
      this.chkConfirm.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.chkConfirm, Conversions.ToBoolean(resourceManager.GetObject("chkConfirm.ShowHelp")));
      CheckBox chkConfirm2 = this.chkConfirm;
      object obj4 = resourceManager.GetObject("chkConfirm.Size");
      Size size3 = obj4 != null ? (Size) obj4 : size1;
      chkConfirm2.Size = size3;
      this.chkConfirm.TabIndex = Conversions.ToInteger(resourceManager.GetObject("chkConfirm.TabIndex"));
      this.chkConfirm.Text = resourceManager.GetString("chkConfirm.Text");
      this.chkConfirm.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("chkConfirm.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this.chkConfirm, resourceManager.GetString("chkConfirm.ToolTip"));
      this.chkConfirm.Visible = Conversions.ToBoolean(resourceManager.GetObject("chkConfirm.Visible"));
      this.cmdCancel.AccessibleDescription = resourceManager.GetString("cmdCancel.AccessibleDescription");
      this.cmdCancel.AccessibleName = resourceManager.GetString("cmdCancel.AccessibleName");
      this.cmdCancel.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.Anchor"));
      this.cmdCancel.BackColor = SystemColors.Control;
      this.cmdCancel.BackgroundImage = (Image) resourceManager.GetObject("cmdCancel.BackgroundImage");
      this.cmdCancel.Cursor = Cursors.Default;
      this.cmdCancel.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.Dock"));
      this.cmdCancel.Enabled = Conversions.ToBoolean(resourceManager.GetObject("cmdCancel.Enabled"));
      this.cmdCancel.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.FlatStyle"));
      this.cmdCancel.Font = (Font) resourceManager.GetObject("cmdCancel.Font");
      this.cmdCancel.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this.cmdCancel, resourceManager.GetString("cmdCancel.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.cmdCancel, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.cmdCancel, resourceManager.GetString("cmdCancel.HelpString"));
      this.cmdCancel.Image = (Image) resourceManager.GetObject("cmdCancel.Image");
      this.cmdCancel.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.ImageAlign"));
      this.cmdCancel.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("cmdCancel.ImageIndex"));
      this.cmdCancel.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.ImeMode"));
      Button cmdCancel1 = this.cmdCancel;
      object obj5 = resourceManager.GetObject("cmdCancel.Location");
      Point point4 = obj5 != null ? (Point) obj5 : point1;
      cmdCancel1.Location = point4;
      this.cmdCancel.Name = "cmdCancel";
      this.cmdCancel.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.cmdCancel, Conversions.ToBoolean(resourceManager.GetObject("cmdCancel.ShowHelp")));
      Button cmdCancel2 = this.cmdCancel;
      object obj6 = resourceManager.GetObject("cmdCancel.Size");
      Size size4 = obj6 != null ? (Size) obj6 : size1;
      cmdCancel2.Size = size4;
      this.cmdCancel.TabIndex = Conversions.ToInteger(resourceManager.GetObject("cmdCancel.TabIndex"));
      this.cmdCancel.Tag = (object) "cancel and dismiss";
      this.cmdCancel.Text = resourceManager.GetString("cmdCancel.Text");
      this.cmdCancel.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdCancel.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this.cmdCancel, resourceManager.GetString("cmdCancel.ToolTip"));
      this.cmdCancel.Visible = Conversions.ToBoolean(resourceManager.GetObject("cmdCancel.Visible"));
      this.cmdApply.AccessibleDescription = resourceManager.GetString("cmdApply.AccessibleDescription");
      this.cmdApply.AccessibleName = resourceManager.GetString("cmdApply.AccessibleName");
      this.cmdApply.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("cmdApply.Anchor"));
      this.cmdApply.BackColor = SystemColors.Control;
      this.cmdApply.BackgroundImage = (Image) resourceManager.GetObject("cmdApply.BackgroundImage");
      this.cmdApply.Cursor = Cursors.Default;
      this.cmdApply.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("cmdApply.Dock"));
      this.cmdApply.Enabled = Conversions.ToBoolean(resourceManager.GetObject("cmdApply.Enabled"));
      this.cmdApply.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("cmdApply.FlatStyle"));
      this.cmdApply.Font = (Font) resourceManager.GetObject("cmdApply.Font");
      this.cmdApply.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this.cmdApply, resourceManager.GetString("cmdApply.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.cmdApply, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("cmdApply.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.cmdApply, resourceManager.GetString("cmdApply.HelpString"));
      this.cmdApply.Image = (Image) resourceManager.GetObject("cmdApply.Image");
      this.cmdApply.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdApply.ImageAlign"));
      this.cmdApply.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("cmdApply.ImageIndex"));
      this.cmdApply.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("cmdApply.ImeMode"));
      Button cmdApply1 = this.cmdApply;
      object obj7 = resourceManager.GetObject("cmdApply.Location");
      Point point5 = obj7 != null ? (Point) obj7 : point1;
      cmdApply1.Location = point5;
      this.cmdApply.Name = "cmdApply";
      this.cmdApply.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("cmdApply.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.cmdApply, Conversions.ToBoolean(resourceManager.GetObject("cmdApply.ShowHelp")));
      Button cmdApply2 = this.cmdApply;
      object obj8 = resourceManager.GetObject("cmdApply.Size");
      Size size5 = obj8 != null ? (Size) obj8 : size1;
      cmdApply2.Size = size5;
      this.cmdApply.TabIndex = Conversions.ToInteger(resourceManager.GetObject("cmdApply.TabIndex"));
      this.cmdApply.Tag = (object) "apply current changes";
      this.cmdApply.Text = resourceManager.GetString("cmdApply.Text");
      this.cmdApply.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("cmdApply.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this.cmdApply, resourceManager.GetString("cmdApply.ToolTip"));
      this.cmdApply.Visible = Conversions.ToBoolean(resourceManager.GetObject("cmdApply.Visible"));
      this._fraMain_0.AccessibleDescription = resourceManager.GetString("_fraMain_0.AccessibleDescription");
      this._fraMain_0.AccessibleName = resourceManager.GetString("_fraMain_0.AccessibleName");
      this._fraMain_0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.Anchor"));
      this._fraMain_0.BackColor = SystemColors.Control;
      this._fraMain_0.BackgroundImage = (Image) resourceManager.GetObject("_fraMain_0.BackgroundImage");
      this._fraMain_0.Controls.Add((Control) this._pctAlias_0);
      this._fraMain_0.Controls.Add((Control) this._cmdEdit_0);
      this._fraMain_0.Controls.Add((Control) this._cmdRemove_0);
      this._fraMain_0.Controls.Add((Control) this._cmdAdd_0);
      this._fraMain_0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.Dock"));
      this._fraMain_0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_fraMain_0.Enabled"));
      this._fraMain_0.Font = (Font) resourceManager.GetObject("_fraMain_0.Font");
      this._fraMain_0.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._fraMain_0, resourceManager.GetString("_fraMain_0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._fraMain_0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._fraMain_0, resourceManager.GetString("_fraMain_0.HelpString"));
      this._fraMain_0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.ImeMode"));
      GroupBox fraMain0_1 = this._fraMain_0;
      object obj9 = resourceManager.GetObject("_fraMain_0.Location");
      Point point6 = obj9 != null ? (Point) obj9 : point1;
      fraMain0_1.Location = point6;
      this._fraMain_0.Name = "_fraMain_0";
      this._fraMain_0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._fraMain_0, Conversions.ToBoolean(resourceManager.GetObject("_fraMain_0.ShowHelp")));
      GroupBox fraMain0_2 = this._fraMain_0;
      object obj10 = resourceManager.GetObject("_fraMain_0.Size");
      Size size6 = obj10 != null ? (Size) obj10 : size1;
      fraMain0_2.Size = size6;
      this._fraMain_0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_fraMain_0.TabIndex"));
      this._fraMain_0.TabStop = false;
      this._fraMain_0.Text = resourceManager.GetString("_fraMain_0.Text");
      this.ToolTip1.SetToolTip((Control) this._fraMain_0, resourceManager.GetString("_fraMain_0.ToolTip"));
      this._fraMain_0.Visible = Conversions.ToBoolean(resourceManager.GetObject("_fraMain_0.Visible"));
      this._pctAlias_0.AccessibleDescription = resourceManager.GetString("_pctAlias_0.AccessibleDescription");
      this._pctAlias_0.AccessibleName = resourceManager.GetString("_pctAlias_0.AccessibleName");
      this._pctAlias_0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.Anchor"));
      this._pctAlias_0.AutoScroll = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_0.AutoScroll"));
      Panel pctAlias0_1 = this._pctAlias_0;
      object obj11 = resourceManager.GetObject("_pctAlias_0.AutoScrollMargin");
      Size size7 = obj11 != null ? (Size) obj11 : size1;
      pctAlias0_1.AutoScrollMargin = size7;
      Panel pctAlias0_2 = this._pctAlias_0;
      object obj12 = resourceManager.GetObject("_pctAlias_0.AutoScrollMinSize");
      Size size8 = obj12 != null ? (Size) obj12 : size1;
      pctAlias0_2.AutoScrollMinSize = size8;
      this._pctAlias_0.BackColor = SystemColors.Control;
      this._pctAlias_0.BackgroundImage = (Image) resourceManager.GetObject("_pctAlias_0.BackgroundImage");
      this._pctAlias_0.BorderStyle = BorderStyle.Fixed3D;
      this._pctAlias_0.Controls.Add((Control) this._lvwAlias);
      this._pctAlias_0.Cursor = Cursors.Default;
      this._pctAlias_0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.Dock"));
      this._pctAlias_0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_0.Enabled"));
      this._pctAlias_0.Font = (Font) resourceManager.GetObject("_pctAlias_0.Font");
      this._pctAlias_0.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._pctAlias_0, resourceManager.GetString("_pctAlias_0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._pctAlias_0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._pctAlias_0, resourceManager.GetString("_pctAlias_0.HelpString"));
      this._pctAlias_0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.ImeMode"));
      Panel pctAlias0_3 = this._pctAlias_0;
      object obj13 = resourceManager.GetObject("_pctAlias_0.Location");
      Point point7 = obj13 != null ? (Point) obj13 : point1;
      pctAlias0_3.Location = point7;
      this._pctAlias_0.Name = "_pctAlias_0";
      this._pctAlias_0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._pctAlias_0, Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_0.ShowHelp")));
      Panel pctAlias0_4 = this._pctAlias_0;
      object obj14 = resourceManager.GetObject("_pctAlias_0.Size");
      Size size9 = obj14 != null ? (Size) obj14 : size1;
      pctAlias0_4.Size = size9;
      this._pctAlias_0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_pctAlias_0.TabIndex"));
      this._pctAlias_0.TabStop = true;
      this._pctAlias_0.Text = resourceManager.GetString("_pctAlias_0.Text");
      this.ToolTip1.SetToolTip((Control) this._pctAlias_0, resourceManager.GetString("_pctAlias_0.ToolTip"));
      this._pctAlias_0.Visible = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_0.Visible"));
      this._lvwAlias.AccessibleDescription = resourceManager.GetString("_lvwAlias.AccessibleDescription");
      this._lvwAlias.AccessibleName = resourceManager.GetString("_lvwAlias.AccessibleName");
      this._lvwAlias.Alignment = (ListViewAlignment) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.Alignment"));
      this._lvwAlias.AllowColumnReorder = true;
      this._lvwAlias.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.Anchor"));
      this._lvwAlias.BackgroundImage = (Image) resourceManager.GetObject("_lvwAlias.BackgroundImage");
      this._lvwAlias.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.Dock"));
      this._lvwAlias.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_lvwAlias.Enabled"));
      this._lvwAlias.Font = (Font) resourceManager.GetObject("_lvwAlias.Font");
      this.HelpProvider1.SetHelpKeyword((Control) this._lvwAlias, resourceManager.GetString("_lvwAlias.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._lvwAlias, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._lvwAlias, resourceManager.GetString("_lvwAlias.HelpString"));
      this._lvwAlias.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.ImeMode"));
      this._lvwAlias.LabelWrap = Conversions.ToBoolean(resourceManager.GetObject("_lvwAlias.LabelWrap"));
      ListView lvwAlias1 = this._lvwAlias;
      object obj15 = resourceManager.GetObject("_lvwAlias.Location");
      Point point8 = obj15 != null ? (Point) obj15 : point1;
      lvwAlias1.Location = point8;
      this._lvwAlias.MultiSelect = false;
      this._lvwAlias.Name = "_lvwAlias";
      this._lvwAlias.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._lvwAlias, Conversions.ToBoolean(resourceManager.GetObject("_lvwAlias.ShowHelp")));
      ListView lvwAlias2 = this._lvwAlias;
      object obj16 = resourceManager.GetObject("_lvwAlias.Size");
      Size size10 = obj16 != null ? (Size) obj16 : size1;
      lvwAlias2.Size = size10;
      this._lvwAlias.Sorting = SortOrder.Ascending;
      this._lvwAlias.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_lvwAlias.TabIndex"));
      this._lvwAlias.Text = resourceManager.GetString("_lvwAlias.Text");
      this.ToolTip1.SetToolTip((Control) this._lvwAlias, resourceManager.GetString("_lvwAlias.ToolTip"));
      this._lvwAlias.View = View.Details;
      this._lvwAlias.Visible = Conversions.ToBoolean(resourceManager.GetObject("_lvwAlias.Visible"));
      this._cmdEdit_0.AccessibleDescription = resourceManager.GetString("_cmdEdit_0.AccessibleDescription");
      this._cmdEdit_0.AccessibleName = resourceManager.GetString("_cmdEdit_0.AccessibleName");
      this._cmdEdit_0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.Anchor"));
      this._cmdEdit_0.BackColor = SystemColors.Control;
      this._cmdEdit_0.BackgroundImage = (Image) resourceManager.GetObject("_cmdEdit_0.BackgroundImage");
      this._cmdEdit_0.Cursor = Cursors.Default;
      this._cmdEdit_0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.Dock"));
      this._cmdEdit_0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_0.Enabled"));
      this._cmdEdit_0.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.FlatStyle"));
      this._cmdEdit_0.Font = (Font) resourceManager.GetObject("_cmdEdit_0.Font");
      this._cmdEdit_0.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdEdit_0, resourceManager.GetString("_cmdEdit_0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdEdit_0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdEdit_0, resourceManager.GetString("_cmdEdit_0.HelpString"));
      this._cmdEdit_0.Image = (Image) resourceManager.GetObject("_cmdEdit_0.Image");
      this._cmdEdit_0.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.ImageAlign"));
      this._cmdEdit_0.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.ImageIndex"));
      this._cmdEdit_0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.ImeMode"));
      Button cmdEdit0_1 = this._cmdEdit_0;
      object obj17 = resourceManager.GetObject("_cmdEdit_0.Location");
      Point point9 = obj17 != null ? (Point) obj17 : point1;
      cmdEdit0_1.Location = point9;
      this._cmdEdit_0.Name = "_cmdEdit_0";
      this._cmdEdit_0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdEdit_0, Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_0.ShowHelp")));
      Button cmdEdit0_2 = this._cmdEdit_0;
      object obj18 = resourceManager.GetObject("_cmdEdit_0.Size");
      Size size11 = obj18 != null ? (Size) obj18 : size1;
      cmdEdit0_2.Size = size11;
      this._cmdEdit_0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.TabIndex"));
      this._cmdEdit_0.TabStop = false;
      this._cmdEdit_0.Text = resourceManager.GetString("_cmdEdit_0.Text");
      this._cmdEdit_0.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_0.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdEdit_0, resourceManager.GetString("_cmdEdit_0.ToolTip"));
      this._cmdEdit_0.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_0.Visible"));
      this._cmdRemove_0.AccessibleDescription = resourceManager.GetString("_cmdRemove_0.AccessibleDescription");
      this._cmdRemove_0.AccessibleName = resourceManager.GetString("_cmdRemove_0.AccessibleName");
      this._cmdRemove_0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.Anchor"));
      this._cmdRemove_0.BackColor = SystemColors.Control;
      this._cmdRemove_0.BackgroundImage = (Image) resourceManager.GetObject("_cmdRemove_0.BackgroundImage");
      this._cmdRemove_0.Cursor = Cursors.Default;
      this._cmdRemove_0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.Dock"));
      this._cmdRemove_0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_0.Enabled"));
      this._cmdRemove_0.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.FlatStyle"));
      this._cmdRemove_0.Font = (Font) resourceManager.GetObject("_cmdRemove_0.Font");
      this._cmdRemove_0.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdRemove_0, resourceManager.GetString("_cmdRemove_0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdRemove_0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdRemove_0, resourceManager.GetString("_cmdRemove_0.HelpString"));
      this._cmdRemove_0.Image = (Image) resourceManager.GetObject("_cmdRemove_0.Image");
      this._cmdRemove_0.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.ImageAlign"));
      this._cmdRemove_0.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.ImageIndex"));
      this._cmdRemove_0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.ImeMode"));
      Button cmdRemove0_1 = this._cmdRemove_0;
      object obj19 = resourceManager.GetObject("_cmdRemove_0.Location");
      Point point10 = obj19 != null ? (Point) obj19 : point1;
      cmdRemove0_1.Location = point10;
      this._cmdRemove_0.Name = "_cmdRemove_0";
      this._cmdRemove_0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdRemove_0, Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_0.ShowHelp")));
      Button cmdRemove0_2 = this._cmdRemove_0;
      object obj20 = resourceManager.GetObject("_cmdRemove_0.Size");
      Size size12 = obj20 != null ? (Size) obj20 : size1;
      cmdRemove0_2.Size = size12;
      this._cmdRemove_0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.TabIndex"));
      this._cmdRemove_0.TabStop = false;
      this._cmdRemove_0.Text = resourceManager.GetString("_cmdRemove_0.Text");
      this._cmdRemove_0.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_0.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdRemove_0, resourceManager.GetString("_cmdRemove_0.ToolTip"));
      this._cmdRemove_0.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_0.Visible"));
      this._cmdAdd_0.AccessibleDescription = resourceManager.GetString("_cmdAdd_0.AccessibleDescription");
      this._cmdAdd_0.AccessibleName = resourceManager.GetString("_cmdAdd_0.AccessibleName");
      this._cmdAdd_0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.Anchor"));
      this._cmdAdd_0.BackColor = SystemColors.Control;
      this._cmdAdd_0.BackgroundImage = (Image) resourceManager.GetObject("_cmdAdd_0.BackgroundImage");
      this._cmdAdd_0.Cursor = Cursors.Default;
      this._cmdAdd_0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.Dock"));
      this._cmdAdd_0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_0.Enabled"));
      this._cmdAdd_0.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.FlatStyle"));
      this._cmdAdd_0.Font = (Font) resourceManager.GetObject("_cmdAdd_0.Font");
      this._cmdAdd_0.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdAdd_0, resourceManager.GetString("_cmdAdd_0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdAdd_0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdAdd_0, resourceManager.GetString("_cmdAdd_0.HelpString"));
      this._cmdAdd_0.Image = (Image) resourceManager.GetObject("_cmdAdd_0.Image");
      this._cmdAdd_0.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.ImageAlign"));
      this._cmdAdd_0.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.ImageIndex"));
      this._cmdAdd_0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.ImeMode"));
      Button cmdAdd0_1 = this._cmdAdd_0;
      object obj21 = resourceManager.GetObject("_cmdAdd_0.Location");
      Point point11 = obj21 != null ? (Point) obj21 : point1;
      cmdAdd0_1.Location = point11;
      this._cmdAdd_0.Name = "_cmdAdd_0";
      this._cmdAdd_0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdAdd_0, Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_0.ShowHelp")));
      Button cmdAdd0_2 = this._cmdAdd_0;
      object obj22 = resourceManager.GetObject("_cmdAdd_0.Size");
      Size size13 = obj22 != null ? (Size) obj22 : size1;
      cmdAdd0_2.Size = size13;
      this._cmdAdd_0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.TabIndex"));
      this._cmdAdd_0.Text = resourceManager.GetString("_cmdAdd_0.Text");
      this._cmdAdd_0.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_0.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdAdd_0, resourceManager.GetString("_cmdAdd_0.ToolTip"));
      this._cmdAdd_0.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_0.Visible"));
      this._fraMain_1.AccessibleDescription = resourceManager.GetString("_fraMain_1.AccessibleDescription");
      this._fraMain_1.AccessibleName = resourceManager.GetString("_fraMain_1.AccessibleName");
      this._fraMain_1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.Anchor"));
      this._fraMain_1.BackColor = SystemColors.Control;
      this._fraMain_1.BackgroundImage = (Image) resourceManager.GetObject("_fraMain_1.BackgroundImage");
      this._fraMain_1.Controls.Add((Control) this._pctAlias_1);
      this._fraMain_1.Controls.Add((Control) this._cmdEdit_1);
      this._fraMain_1.Controls.Add((Control) this._cmdAdd_1);
      this._fraMain_1.Controls.Add((Control) this._cmdRemove_1);
      this._fraMain_1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.Dock"));
      this._fraMain_1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_fraMain_1.Enabled"));
      this._fraMain_1.Font = (Font) resourceManager.GetObject("_fraMain_1.Font");
      this._fraMain_1.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._fraMain_1, resourceManager.GetString("_fraMain_1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._fraMain_1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._fraMain_1, resourceManager.GetString("_fraMain_1.HelpString"));
      this._fraMain_1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.ImeMode"));
      GroupBox fraMain1_1 = this._fraMain_1;
      object obj23 = resourceManager.GetObject("_fraMain_1.Location");
      Point point12 = obj23 != null ? (Point) obj23 : point1;
      fraMain1_1.Location = point12;
      this._fraMain_1.Name = "_fraMain_1";
      this._fraMain_1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._fraMain_1, Conversions.ToBoolean(resourceManager.GetObject("_fraMain_1.ShowHelp")));
      GroupBox fraMain1_2 = this._fraMain_1;
      object obj24 = resourceManager.GetObject("_fraMain_1.Size");
      Size size14 = obj24 != null ? (Size) obj24 : size1;
      fraMain1_2.Size = size14;
      this._fraMain_1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_fraMain_1.TabIndex"));
      this._fraMain_1.TabStop = false;
      this._fraMain_1.Text = resourceManager.GetString("_fraMain_1.Text");
      this.ToolTip1.SetToolTip((Control) this._fraMain_1, resourceManager.GetString("_fraMain_1.ToolTip"));
      this._fraMain_1.Visible = Conversions.ToBoolean(resourceManager.GetObject("_fraMain_1.Visible"));
      this._pctAlias_1.AccessibleDescription = resourceManager.GetString("_pctAlias_1.AccessibleDescription");
      this._pctAlias_1.AccessibleName = resourceManager.GetString("_pctAlias_1.AccessibleName");
      this._pctAlias_1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.Anchor"));
      this._pctAlias_1.AutoScroll = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_1.AutoScroll"));
      Panel pctAlias1_1 = this._pctAlias_1;
      object obj25 = resourceManager.GetObject("_pctAlias_1.AutoScrollMargin");
      Size size15 = obj25 != null ? (Size) obj25 : size1;
      pctAlias1_1.AutoScrollMargin = size15;
      Panel pctAlias1_2 = this._pctAlias_1;
      object obj26 = resourceManager.GetObject("_pctAlias_1.AutoScrollMinSize");
      Size size16 = obj26 != null ? (Size) obj26 : size1;
      pctAlias1_2.AutoScrollMinSize = size16;
      this._pctAlias_1.BackColor = SystemColors.Control;
      this._pctAlias_1.BackgroundImage = (Image) resourceManager.GetObject("_pctAlias_1.BackgroundImage");
      this._pctAlias_1.BorderStyle = BorderStyle.Fixed3D;
      this._pctAlias_1.Controls.Add((Control) this._lvwShell);
      this._pctAlias_1.Cursor = Cursors.Default;
      this._pctAlias_1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.Dock"));
      this._pctAlias_1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_1.Enabled"));
      this._pctAlias_1.Font = (Font) resourceManager.GetObject("_pctAlias_1.Font");
      this._pctAlias_1.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._pctAlias_1, resourceManager.GetString("_pctAlias_1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._pctAlias_1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._pctAlias_1, resourceManager.GetString("_pctAlias_1.HelpString"));
      this._pctAlias_1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.ImeMode"));
      Panel pctAlias1_3 = this._pctAlias_1;
      object obj27 = resourceManager.GetObject("_pctAlias_1.Location");
      Point point13 = obj27 != null ? (Point) obj27 : point1;
      pctAlias1_3.Location = point13;
      this._pctAlias_1.Name = "_pctAlias_1";
      this._pctAlias_1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._pctAlias_1, Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_1.ShowHelp")));
      Panel pctAlias1_4 = this._pctAlias_1;
      object obj28 = resourceManager.GetObject("_pctAlias_1.Size");
      Size size17 = obj28 != null ? (Size) obj28 : size1;
      pctAlias1_4.Size = size17;
      this._pctAlias_1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_pctAlias_1.TabIndex"));
      this._pctAlias_1.TabStop = true;
      this._pctAlias_1.Text = resourceManager.GetString("_pctAlias_1.Text");
      this.ToolTip1.SetToolTip((Control) this._pctAlias_1, resourceManager.GetString("_pctAlias_1.ToolTip"));
      this._pctAlias_1.Visible = Conversions.ToBoolean(resourceManager.GetObject("_pctAlias_1.Visible"));
      this._lvwShell.AccessibleDescription = resourceManager.GetString("_lvwShell.AccessibleDescription");
      this._lvwShell.AccessibleName = resourceManager.GetString("_lvwShell.AccessibleName");
      this._lvwShell.Alignment = (ListViewAlignment) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.Alignment"));
      this._lvwShell.AllowColumnReorder = true;
      this._lvwShell.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.Anchor"));
      this._lvwShell.BackgroundImage = (Image) resourceManager.GetObject("_lvwShell.BackgroundImage");
      this._lvwShell.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.Dock"));
      this._lvwShell.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_lvwShell.Enabled"));
      this._lvwShell.Font = (Font) resourceManager.GetObject("_lvwShell.Font");
      this.HelpProvider1.SetHelpKeyword((Control) this._lvwShell, resourceManager.GetString("_lvwShell.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._lvwShell, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._lvwShell, resourceManager.GetString("_lvwShell.HelpString"));
      this._lvwShell.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.ImeMode"));
      this._lvwShell.LabelWrap = Conversions.ToBoolean(resourceManager.GetObject("_lvwShell.LabelWrap"));
      ListView lvwShell1 = this._lvwShell;
      object obj29 = resourceManager.GetObject("_lvwShell.Location");
      Point point14 = obj29 != null ? (Point) obj29 : point1;
      lvwShell1.Location = point14;
      this._lvwShell.MultiSelect = false;
      this._lvwShell.Name = "_lvwShell";
      this._lvwShell.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_lvwShell.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._lvwShell, Conversions.ToBoolean(resourceManager.GetObject("_lvwShell.ShowHelp")));
      ListView lvwShell2 = this._lvwShell;
      object obj30 = resourceManager.GetObject("_lvwShell.Size");
      Size size18 = obj30 != null ? (Size) obj30 : size1;
      lvwShell2.Size = size18;
      this._lvwShell.Sorting = SortOrder.Ascending;
      this._lvwShell.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_lvwShell.TabIndex"));
      this._lvwShell.Text = resourceManager.GetString("_lvwShell.Text");
      this.ToolTip1.SetToolTip((Control) this._lvwShell, resourceManager.GetString("_lvwShell.ToolTip"));
      this._lvwShell.View = View.Details;
      this._lvwShell.Visible = Conversions.ToBoolean(resourceManager.GetObject("_lvwShell.Visible"));
      this._cmdEdit_1.AccessibleDescription = resourceManager.GetString("_cmdEdit_1.AccessibleDescription");
      this._cmdEdit_1.AccessibleName = resourceManager.GetString("_cmdEdit_1.AccessibleName");
      this._cmdEdit_1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.Anchor"));
      this._cmdEdit_1.BackColor = SystemColors.Control;
      this._cmdEdit_1.BackgroundImage = (Image) resourceManager.GetObject("_cmdEdit_1.BackgroundImage");
      this._cmdEdit_1.Cursor = Cursors.Default;
      this._cmdEdit_1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.Dock"));
      this._cmdEdit_1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_1.Enabled"));
      this._cmdEdit_1.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.FlatStyle"));
      this._cmdEdit_1.Font = (Font) resourceManager.GetObject("_cmdEdit_1.Font");
      this._cmdEdit_1.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdEdit_1, resourceManager.GetString("_cmdEdit_1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdEdit_1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdEdit_1, resourceManager.GetString("_cmdEdit_1.HelpString"));
      this._cmdEdit_1.Image = (Image) resourceManager.GetObject("_cmdEdit_1.Image");
      this._cmdEdit_1.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.ImageAlign"));
      this._cmdEdit_1.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.ImageIndex"));
      this._cmdEdit_1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.ImeMode"));
      Button cmdEdit1_1 = this._cmdEdit_1;
      object obj31 = resourceManager.GetObject("_cmdEdit_1.Location");
      Point point15 = obj31 != null ? (Point) obj31 : point1;
      cmdEdit1_1.Location = point15;
      this._cmdEdit_1.Name = "_cmdEdit_1";
      this._cmdEdit_1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdEdit_1, Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_1.ShowHelp")));
      Button cmdEdit1_2 = this._cmdEdit_1;
      object obj32 = resourceManager.GetObject("_cmdEdit_1.Size");
      Size size19 = obj32 != null ? (Size) obj32 : size1;
      cmdEdit1_2.Size = size19;
      this._cmdEdit_1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.TabIndex"));
      this._cmdEdit_1.Tag = (object) "edit an alias";
      this._cmdEdit_1.Text = resourceManager.GetString("_cmdEdit_1.Text");
      this._cmdEdit_1.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdEdit_1.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdEdit_1, resourceManager.GetString("_cmdEdit_1.ToolTip"));
      this._cmdEdit_1.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdEdit_1.Visible"));
      this._cmdAdd_1.AccessibleDescription = resourceManager.GetString("_cmdAdd_1.AccessibleDescription");
      this._cmdAdd_1.AccessibleName = resourceManager.GetString("_cmdAdd_1.AccessibleName");
      this._cmdAdd_1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.Anchor"));
      this._cmdAdd_1.BackColor = SystemColors.Control;
      this._cmdAdd_1.BackgroundImage = (Image) resourceManager.GetObject("_cmdAdd_1.BackgroundImage");
      this._cmdAdd_1.Cursor = Cursors.Default;
      this._cmdAdd_1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.Dock"));
      this._cmdAdd_1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_1.Enabled"));
      this._cmdAdd_1.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.FlatStyle"));
      this._cmdAdd_1.Font = (Font) resourceManager.GetObject("_cmdAdd_1.Font");
      this._cmdAdd_1.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdAdd_1, resourceManager.GetString("_cmdAdd_1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdAdd_1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdAdd_1, resourceManager.GetString("_cmdAdd_1.HelpString"));
      this._cmdAdd_1.Image = (Image) resourceManager.GetObject("_cmdAdd_1.Image");
      this._cmdAdd_1.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.ImageAlign"));
      this._cmdAdd_1.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.ImageIndex"));
      this._cmdAdd_1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.ImeMode"));
      Button cmdAdd1_1 = this._cmdAdd_1;
      object obj33 = resourceManager.GetObject("_cmdAdd_1.Location");
      Point point16 = obj33 != null ? (Point) obj33 : point1;
      cmdAdd1_1.Location = point16;
      this._cmdAdd_1.Name = "_cmdAdd_1";
      this._cmdAdd_1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdAdd_1, Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_1.ShowHelp")));
      Button cmdAdd1_2 = this._cmdAdd_1;
      object obj34 = resourceManager.GetObject("_cmdAdd_1.Size");
      Size size20 = obj34 != null ? (Size) obj34 : size1;
      cmdAdd1_2.Size = size20;
      this._cmdAdd_1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.TabIndex"));
      this._cmdAdd_1.Tag = (object) "add new alias";
      this._cmdAdd_1.Text = resourceManager.GetString("_cmdAdd_1.Text");
      this._cmdAdd_1.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdAdd_1.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdAdd_1, resourceManager.GetString("_cmdAdd_1.ToolTip"));
      this._cmdAdd_1.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdAdd_1.Visible"));
      this._cmdRemove_1.AccessibleDescription = resourceManager.GetString("_cmdRemove_1.AccessibleDescription");
      this._cmdRemove_1.AccessibleName = resourceManager.GetString("_cmdRemove_1.AccessibleName");
      this._cmdRemove_1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.Anchor"));
      this._cmdRemove_1.BackColor = SystemColors.Control;
      this._cmdRemove_1.BackgroundImage = (Image) resourceManager.GetObject("_cmdRemove_1.BackgroundImage");
      this._cmdRemove_1.Cursor = Cursors.Default;
      this._cmdRemove_1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.Dock"));
      this._cmdRemove_1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_1.Enabled"));
      this._cmdRemove_1.FlatStyle = (FlatStyle) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.FlatStyle"));
      this._cmdRemove_1.Font = (Font) resourceManager.GetObject("_cmdRemove_1.Font");
      this._cmdRemove_1.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this._cmdRemove_1, resourceManager.GetString("_cmdRemove_1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this._cmdRemove_1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this._cmdRemove_1, resourceManager.GetString("_cmdRemove_1.HelpString"));
      this._cmdRemove_1.Image = (Image) resourceManager.GetObject("_cmdRemove_1.Image");
      this._cmdRemove_1.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.ImageAlign"));
      this._cmdRemove_1.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.ImageIndex"));
      this._cmdRemove_1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.ImeMode"));
      Button cmdRemove1_1 = this._cmdRemove_1;
      object obj35 = resourceManager.GetObject("_cmdRemove_1.Location");
      Point point17 = obj35 != null ? (Point) obj35 : point1;
      cmdRemove1_1.Location = point17;
      this._cmdRemove_1.Name = "_cmdRemove_1";
      this._cmdRemove_1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this._cmdRemove_1, Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_1.ShowHelp")));
      Button cmdRemove1_2 = this._cmdRemove_1;
      object obj36 = resourceManager.GetObject("_cmdRemove_1.Size");
      Size size21 = obj36 != null ? (Size) obj36 : size1;
      cmdRemove1_2.Size = size21;
      this._cmdRemove_1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.TabIndex"));
      this._cmdRemove_1.Tag = (object) "remove an alias";
      this._cmdRemove_1.Text = resourceManager.GetString("_cmdRemove_1.Text");
      this._cmdRemove_1.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("_cmdRemove_1.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this._cmdRemove_1, resourceManager.GetString("_cmdRemove_1.ToolTip"));
      this._cmdRemove_1.Visible = Conversions.ToBoolean(resourceManager.GetObject("_cmdRemove_1.Visible"));
      this.tbsMain.AccessibleDescription = resourceManager.GetString("tbsMain.AccessibleDescription");
      this.tbsMain.AccessibleName = resourceManager.GetString("tbsMain.AccessibleName");
      this.tbsMain.Alignment = (TabAlignment) Conversions.ToInteger(resourceManager.GetObject("tbsMain.Alignment"));
      this.tbsMain.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("tbsMain.Anchor"));
      this.tbsMain.Appearance = (TabAppearance) Conversions.ToInteger(resourceManager.GetObject("tbsMain.Appearance"));
      this.tbsMain.BackgroundImage = (Image) resourceManager.GetObject("tbsMain.BackgroundImage");
      this.tbsMain.Controls.Add((Control) this.Tab0);
      this.tbsMain.Controls.Add((Control) this.Tab1);
      this.tbsMain.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("tbsMain.Dock"));
      this.tbsMain.Enabled = Conversions.ToBoolean(resourceManager.GetObject("tbsMain.Enabled"));
      this.tbsMain.Font = (Font) resourceManager.GetObject("tbsMain.Font");
      this.HelpProvider1.SetHelpKeyword((Control) this.tbsMain, resourceManager.GetString("tbsMain.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.tbsMain, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("tbsMain.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.tbsMain, resourceManager.GetString("tbsMain.HelpString"));
      this.tbsMain.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("tbsMain.ImeMode"));
      TabControl tbsMain1 = this.tbsMain;
      object obj37 = resourceManager.GetObject("tbsMain.ItemSize");
      Size size22 = obj37 != null ? (Size) obj37 : size1;
      tbsMain1.ItemSize = size22;
      TabControl tbsMain2 = this.tbsMain;
      object obj38 = resourceManager.GetObject("tbsMain.Location");
      Point point18 = obj38 != null ? (Point) obj38 : point1;
      tbsMain2.Location = point18;
      this.tbsMain.Name = "tbsMain";
      TabControl tbsMain3 = this.tbsMain;
      object obj39 = resourceManager.GetObject("tbsMain.Padding");
      Point point19 = obj39 != null ? (Point) obj39 : point1;
      tbsMain3.Padding = point19;
      this.tbsMain.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("tbsMain.RightToLeft"));
      this.tbsMain.SelectedIndex = 0;
      this.HelpProvider1.SetShowHelp((Control) this.tbsMain, Conversions.ToBoolean(resourceManager.GetObject("tbsMain.ShowHelp")));
      this.tbsMain.ShowToolTips = Conversions.ToBoolean(resourceManager.GetObject("tbsMain.ShowToolTips"));
      TabControl tbsMain4 = this.tbsMain;
      object obj40 = resourceManager.GetObject("tbsMain.Size");
      Size size23 = obj40 != null ? (Size) obj40 : size1;
      tbsMain4.Size = size23;
      this.tbsMain.TabIndex = Conversions.ToInteger(resourceManager.GetObject("tbsMain.TabIndex"));
      this.tbsMain.Text = resourceManager.GetString("tbsMain.Text");
      this.ToolTip1.SetToolTip((Control) this.tbsMain, resourceManager.GetString("tbsMain.ToolTip"));
      this.tbsMain.Visible = Conversions.ToBoolean(resourceManager.GetObject("tbsMain.Visible"));
      this.Tab0.AccessibleDescription = resourceManager.GetString("Tab0.AccessibleDescription");
      this.Tab0.AccessibleName = resourceManager.GetString("Tab0.AccessibleName");
      this.Tab0.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("Tab0.Anchor"));
      this.Tab0.AutoScroll = Conversions.ToBoolean(resourceManager.GetObject("Tab0.AutoScroll"));
      TabPage tab0_1 = this.Tab0;
      object obj41 = resourceManager.GetObject("Tab0.AutoScrollMargin");
      Size size24 = obj41 != null ? (Size) obj41 : size1;
      tab0_1.AutoScrollMargin = size24;
      TabPage tab0_2 = this.Tab0;
      object obj42 = resourceManager.GetObject("Tab0.AutoScrollMinSize");
      Size size25 = obj42 != null ? (Size) obj42 : size1;
      tab0_2.AutoScrollMinSize = size25;
      this.Tab0.BackgroundImage = (Image) resourceManager.GetObject("Tab0.BackgroundImage");
      this.Tab0.Controls.Add((Control) this._fraMain_0);
      this.Tab0.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("Tab0.Dock"));
      this.Tab0.Enabled = Conversions.ToBoolean(resourceManager.GetObject("Tab0.Enabled"));
      this.Tab0.Font = (Font) resourceManager.GetObject("Tab0.Font");
      this.HelpProvider1.SetHelpKeyword((Control) this.Tab0, resourceManager.GetString("Tab0.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.Tab0, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("Tab0.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.Tab0, resourceManager.GetString("Tab0.HelpString"));
      this.Tab0.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("Tab0.ImageIndex"));
      this.Tab0.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("Tab0.ImeMode"));
      TabPage tab0_3 = this.Tab0;
      object obj43 = resourceManager.GetObject("Tab0.Location");
      Point point20 = obj43 != null ? (Point) obj43 : point1;
      tab0_3.Location = point20;
      this.Tab0.Name = "Tab0";
      this.Tab0.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("Tab0.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.Tab0, Conversions.ToBoolean(resourceManager.GetObject("Tab0.ShowHelp")));
      TabPage tab0_4 = this.Tab0;
      object obj44 = resourceManager.GetObject("Tab0.Size");
      Size size26 = obj44 != null ? (Size) obj44 : size1;
      tab0_4.Size = size26;
      this.Tab0.TabIndex = Conversions.ToInteger(resourceManager.GetObject("Tab0.TabIndex"));
      this.Tab0.Text = resourceManager.GetString("Tab0.Text");
      this.ToolTip1.SetToolTip((Control) this.Tab0, resourceManager.GetString("Tab0.ToolTip"));
      this.Tab0.ToolTipText = resourceManager.GetString("Tab0.ToolTipText");
      this.Tab0.Visible = Conversions.ToBoolean(resourceManager.GetObject("Tab0.Visible"));
      this.Tab1.AccessibleDescription = resourceManager.GetString("Tab1.AccessibleDescription");
      this.Tab1.AccessibleName = resourceManager.GetString("Tab1.AccessibleName");
      this.Tab1.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("Tab1.Anchor"));
      this.Tab1.AutoScroll = Conversions.ToBoolean(resourceManager.GetObject("Tab1.AutoScroll"));
      TabPage tab1_1 = this.Tab1;
      object obj45 = resourceManager.GetObject("Tab1.AutoScrollMargin");
      Size size27 = obj45 != null ? (Size) obj45 : size1;
      tab1_1.AutoScrollMargin = size27;
      TabPage tab1_2 = this.Tab1;
      object obj46 = resourceManager.GetObject("Tab1.AutoScrollMinSize");
      Size size28 = obj46 != null ? (Size) obj46 : size1;
      tab1_2.AutoScrollMinSize = size28;
      this.Tab1.BackgroundImage = (Image) resourceManager.GetObject("Tab1.BackgroundImage");
      this.Tab1.Controls.Add((Control) this._fraMain_1);
      this.Tab1.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("Tab1.Dock"));
      this.Tab1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("Tab1.Enabled"));
      this.Tab1.Font = (Font) resourceManager.GetObject("Tab1.Font");
      this.HelpProvider1.SetHelpKeyword((Control) this.Tab1, resourceManager.GetString("Tab1.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.Tab1, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("Tab1.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.Tab1, resourceManager.GetString("Tab1.HelpString"));
      this.Tab1.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("Tab1.ImageIndex"));
      this.Tab1.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("Tab1.ImeMode"));
      TabPage tab1_3 = this.Tab1;
      object obj47 = resourceManager.GetObject("Tab1.Location");
      Point point21 = obj47 != null ? (Point) obj47 : point1;
      tab1_3.Location = point21;
      this.Tab1.Name = "Tab1";
      this.Tab1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("Tab1.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.Tab1, Conversions.ToBoolean(resourceManager.GetObject("Tab1.ShowHelp")));
      TabPage tab1_4 = this.Tab1;
      object obj48 = resourceManager.GetObject("Tab1.Size");
      Size size29 = obj48 != null ? (Size) obj48 : size1;
      tab1_4.Size = size29;
      this.Tab1.TabIndex = Conversions.ToInteger(resourceManager.GetObject("Tab1.TabIndex"));
      this.Tab1.Text = resourceManager.GetString("Tab1.Text");
      this.ToolTip1.SetToolTip((Control) this.Tab1, resourceManager.GetString("Tab1.ToolTip"));
      this.Tab1.ToolTipText = resourceManager.GetString("Tab1.ToolTipText");
      this.Tab1.Visible = Conversions.ToBoolean(resourceManager.GetObject("Tab1.Visible"));
      this.lblProgress.AccessibleDescription = resourceManager.GetString("lblProgress.AccessibleDescription");
      this.lblProgress.AccessibleName = resourceManager.GetString("lblProgress.AccessibleName");
      this.lblProgress.Anchor = (AnchorStyles) Conversions.ToInteger(resourceManager.GetObject("lblProgress.Anchor"));
      this.lblProgress.AutoSize = Conversions.ToBoolean(resourceManager.GetObject("lblProgress.AutoSize"));
      this.lblProgress.BackColor = SystemColors.Control;
      this.lblProgress.Cursor = Cursors.Default;
      this.lblProgress.Dock = (DockStyle) Conversions.ToInteger(resourceManager.GetObject("lblProgress.Dock"));
      this.lblProgress.Enabled = Conversions.ToBoolean(resourceManager.GetObject("lblProgress.Enabled"));
      this.lblProgress.Font = (Font) resourceManager.GetObject("lblProgress.Font");
      this.lblProgress.ForeColor = SystemColors.ControlText;
      this.HelpProvider1.SetHelpKeyword((Control) this.lblProgress, resourceManager.GetString("lblProgress.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this.lblProgress, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("lblProgress.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this.lblProgress, resourceManager.GetString("lblProgress.HelpString"));
      this.lblProgress.Image = (Image) resourceManager.GetObject("lblProgress.Image");
      this.lblProgress.ImageAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("lblProgress.ImageAlign"));
      this.lblProgress.ImageIndex = Conversions.ToInteger(resourceManager.GetObject("lblProgress.ImageIndex"));
      this.lblProgress.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("lblProgress.ImeMode"));
      Label lblProgress1 = this.lblProgress;
      object obj49 = resourceManager.GetObject("lblProgress.Location");
      Point point22 = obj49 != null ? (Point) obj49 : point1;
      lblProgress1.Location = point22;
      this.lblProgress.Name = "lblProgress";
      this.lblProgress.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("lblProgress.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this.lblProgress, Conversions.ToBoolean(resourceManager.GetObject("lblProgress.ShowHelp")));
      Label lblProgress2 = this.lblProgress;
      object obj50 = resourceManager.GetObject("lblProgress.Size");
      Size size30 = obj50 != null ? (Size) obj50 : size1;
      lblProgress2.Size = size30;
      this.lblProgress.TabIndex = Conversions.ToInteger(resourceManager.GetObject("lblProgress.TabIndex"));
      this.lblProgress.Text = resourceManager.GetString("lblProgress.Text");
      this.lblProgress.TextAlign = (ContentAlignment) Conversions.ToInteger(resourceManager.GetObject("lblProgress.TextAlign"));
      this.ToolTip1.SetToolTip((Control) this.lblProgress, resourceManager.GetString("lblProgress.ToolTip"));
      this.lblProgress.Visible = Conversions.ToBoolean(resourceManager.GetObject("lblProgress.Visible"));
      this.cdgOpen.Filter = resourceManager.GetString("cdgOpen.Filter");
      this.cdgOpen.Title = resourceManager.GetString("cdgOpen.Title");
      this.MainMenu1.MenuItems.AddRange(new MenuItem[3]
      {
        this.mnuFile,
        this.mnuEdit,
        this.mnuHelp
      });
      this.MainMenu1.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("MainMenu1.RightToLeft"));
      this.mnuFile.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFile.Enabled"));
      this.mnuFile.Index = 0;
      this.mnuFile.MenuItems.AddRange(new MenuItem[12]
      {
        this.mnuFileNew,
        this.mnuFileSep1,
        this.mnuFileOpen,
        this.mnuFileSave,
        this.mnuFileSep2,
        this.mnuFileImport,
        this.mnuFileExport,
        this.mnuFileSep3,
        this.mnuFileSetup,
        this.mnuFilePrint,
        this.mnuFileSep4,
        this.mnuFileExit
      });
      this.mnuFile.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFile.Shortcut"));
      this.mnuFile.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFile.ShowShortcut"));
      this.mnuFile.Text = resourceManager.GetString("mnuFile.Text");
      this.mnuFile.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFile.Visible"));
      this.mnuFileNew.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileNew.Enabled"));
      this.mnuFileNew.Index = 0;
      this.mnuFileNew.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileNew.Shortcut"));
      this.mnuFileNew.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileNew.ShowShortcut"));
      this.mnuFileNew.Text = resourceManager.GetString("mnuFileNew.Text");
      this.mnuFileNew.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileNew.Visible"));
      this.mnuFileSep1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep1.Enabled"));
      this.mnuFileSep1.Index = 1;
      this.mnuFileSep1.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSep1.Shortcut"));
      this.mnuFileSep1.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep1.ShowShortcut"));
      this.mnuFileSep1.Text = resourceManager.GetString("mnuFileSep1.Text");
      this.mnuFileSep1.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep1.Visible"));
      this.mnuFileOpen.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileOpen.Enabled"));
      this.mnuFileOpen.Index = 2;
      this.mnuFileOpen.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileOpen.Shortcut"));
      this.mnuFileOpen.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileOpen.ShowShortcut"));
      this.mnuFileOpen.Text = resourceManager.GetString("mnuFileOpen.Text");
      this.mnuFileOpen.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileOpen.Visible"));
      this.mnuFileSave.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSave.Enabled"));
      this.mnuFileSave.Index = 3;
      this.mnuFileSave.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSave.Shortcut"));
      this.mnuFileSave.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSave.ShowShortcut"));
      this.mnuFileSave.Text = resourceManager.GetString("mnuFileSave.Text");
      this.mnuFileSave.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSave.Visible"));
      this.mnuFileSep2.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep2.Enabled"));
      this.mnuFileSep2.Index = 4;
      this.mnuFileSep2.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSep2.Shortcut"));
      this.mnuFileSep2.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep2.ShowShortcut"));
      this.mnuFileSep2.Text = resourceManager.GetString("mnuFileSep2.Text");
      this.mnuFileSep2.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep2.Visible"));
      this.mnuFileImport.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileImport.Enabled"));
      this.mnuFileImport.Index = 5;
      this.mnuFileImport.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileImport.Shortcut"));
      this.mnuFileImport.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileImport.ShowShortcut"));
      this.mnuFileImport.Text = resourceManager.GetString("mnuFileImport.Text");
      this.mnuFileImport.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileImport.Visible"));
      this.mnuFileExport.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExport.Enabled"));
      this.mnuFileExport.Index = 6;
      this.mnuFileExport.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileExport.Shortcut"));
      this.mnuFileExport.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExport.ShowShortcut"));
      this.mnuFileExport.Text = resourceManager.GetString("mnuFileExport.Text");
      this.mnuFileExport.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExport.Visible"));
      this.mnuFileSep3.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep3.Enabled"));
      this.mnuFileSep3.Index = 7;
      this.mnuFileSep3.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSep3.Shortcut"));
      this.mnuFileSep3.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep3.ShowShortcut"));
      this.mnuFileSep3.Text = resourceManager.GetString("mnuFileSep3.Text");
      this.mnuFileSep3.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep3.Visible"));
      this.mnuFileSetup.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSetup.Enabled"));
      this.mnuFileSetup.Index = 8;
      this.mnuFileSetup.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSetup.Shortcut"));
      this.mnuFileSetup.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSetup.ShowShortcut"));
      this.mnuFileSetup.Text = resourceManager.GetString("mnuFileSetup.Text");
      this.mnuFileSetup.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSetup.Visible"));
      this.mnuFilePrint.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFilePrint.Enabled"));
      this.mnuFilePrint.Index = 9;
      this.mnuFilePrint.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFilePrint.Shortcut"));
      this.mnuFilePrint.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFilePrint.ShowShortcut"));
      this.mnuFilePrint.Text = resourceManager.GetString("mnuFilePrint.Text");
      this.mnuFilePrint.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFilePrint.Visible"));
      this.mnuFileSep4.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep4.Enabled"));
      this.mnuFileSep4.Index = 10;
      this.mnuFileSep4.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileSep4.Shortcut"));
      this.mnuFileSep4.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep4.ShowShortcut"));
      this.mnuFileSep4.Text = resourceManager.GetString("mnuFileSep4.Text");
      this.mnuFileSep4.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileSep4.Visible"));
      this.mnuFileExit.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExit.Enabled"));
      this.mnuFileExit.Index = 11;
      this.mnuFileExit.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuFileExit.Shortcut"));
      this.mnuFileExit.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExit.ShowShortcut"));
      this.mnuFileExit.Text = resourceManager.GetString("mnuFileExit.Text");
      this.mnuFileExit.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuFileExit.Visible"));
      this.mnuEdit.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuEdit.Enabled"));
      this.mnuEdit.Index = 1;
      this.mnuEdit.MenuItems.AddRange(new MenuItem[4]
      {
        this.mnuEditAdd,
        this.mnuEditRemove,
        this.mnuEditSep1,
        this.mnuEditEdit
      });
      this.mnuEdit.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuEdit.Shortcut"));
      this.mnuEdit.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuEdit.ShowShortcut"));
      this.mnuEdit.Text = resourceManager.GetString("mnuEdit.Text");
      this.mnuEdit.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuEdit.Visible"));
      this.mnuEditAdd.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuEditAdd.Enabled"));
      this.mnuEditAdd.Index = 0;
      this.mnuEditAdd.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuEditAdd.Shortcut"));
      this.mnuEditAdd.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuEditAdd.ShowShortcut"));
      this.mnuEditAdd.Text = resourceManager.GetString("mnuEditAdd.Text");
      this.mnuEditAdd.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuEditAdd.Visible"));
      this.mnuEditRemove.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuEditRemove.Enabled"));
      this.mnuEditRemove.Index = 1;
      this.mnuEditRemove.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuEditRemove.Shortcut"));
      this.mnuEditRemove.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuEditRemove.ShowShortcut"));
      this.mnuEditRemove.Text = resourceManager.GetString("mnuEditRemove.Text");
      this.mnuEditRemove.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuEditRemove.Visible"));
      this.mnuEditSep1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuEditSep1.Enabled"));
      this.mnuEditSep1.Index = 2;
      this.mnuEditSep1.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuEditSep1.Shortcut"));
      this.mnuEditSep1.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuEditSep1.ShowShortcut"));
      this.mnuEditSep1.Text = resourceManager.GetString("mnuEditSep1.Text");
      this.mnuEditSep1.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuEditSep1.Visible"));
      this.mnuEditEdit.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuEditEdit.Enabled"));
      this.mnuEditEdit.Index = 3;
      this.mnuEditEdit.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuEditEdit.Shortcut"));
      this.mnuEditEdit.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuEditEdit.ShowShortcut"));
      this.mnuEditEdit.Text = resourceManager.GetString("mnuEditEdit.Text");
      this.mnuEditEdit.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuEditEdit.Visible"));
      this.mnuHelp.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuHelp.Enabled"));
      this.mnuHelp.Index = 2;
      this.mnuHelp.MenuItems.AddRange(new MenuItem[3]
      {
        this.mnuHelpSearch,
        this.mnuHelpSep1,
        this.mnuHelpAbout
      });
      this.mnuHelp.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuHelp.Shortcut"));
      this.mnuHelp.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuHelp.ShowShortcut"));
      this.mnuHelp.Text = resourceManager.GetString("mnuHelp.Text");
      this.mnuHelp.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuHelp.Visible"));
      this.mnuHelpSearch.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSearch.Enabled"));
      this.mnuHelpSearch.Index = 0;
      this.mnuHelpSearch.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuHelpSearch.Shortcut"));
      this.mnuHelpSearch.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSearch.ShowShortcut"));
      this.mnuHelpSearch.Text = resourceManager.GetString("mnuHelpSearch.Text");
      this.mnuHelpSearch.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSearch.Visible"));
      this.mnuHelpSep1.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSep1.Enabled"));
      this.mnuHelpSep1.Index = 1;
      this.mnuHelpSep1.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuHelpSep1.Shortcut"));
      this.mnuHelpSep1.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSep1.ShowShortcut"));
      this.mnuHelpSep1.Text = resourceManager.GetString("mnuHelpSep1.Text");
      this.mnuHelpSep1.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpSep1.Visible"));
      this.mnuHelpAbout.Enabled = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpAbout.Enabled"));
      this.mnuHelpAbout.Index = 2;
      this.mnuHelpAbout.Shortcut = (Shortcut) Conversions.ToInteger(resourceManager.GetObject("mnuHelpAbout.Shortcut"));
      this.mnuHelpAbout.ShowShortcut = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpAbout.ShowShortcut"));
      this.mnuHelpAbout.Text = resourceManager.GetString("mnuHelpAbout.Text");
      this.mnuHelpAbout.Visible = Conversions.ToBoolean(resourceManager.GetObject("mnuHelpAbout.Visible"));
      this.HelpProvider1.HelpNamespace = resourceManager.GetString("HelpProvider1.HelpNamespace");
      this.cdgSave.Filter = resourceManager.GetString("cdgSave.Filter");
      this.cdgSave.Title = resourceManager.GetString("cdgSave.Title");
      this.AccessibleDescription = resourceManager.GetString("$this.AccessibleDescription");
      this.AccessibleName = resourceManager.GetString("$this.AccessibleName");
      object obj51 = resourceManager.GetObject("$this.AutoScaleBaseSize");
      this.AutoScaleBaseSize = obj51 != null ? (Size) obj51 : size1;
      this.AutoScroll = Conversions.ToBoolean(resourceManager.GetObject("$this.AutoScroll"));
      object obj52 = resourceManager.GetObject("$this.AutoScrollMargin");
      this.AutoScrollMargin = obj52 != null ? (Size) obj52 : size1;
      object obj53 = resourceManager.GetObject("$this.AutoScrollMinSize");
      this.AutoScrollMinSize = obj53 != null ? (Size) obj53 : size1;
      this.BackColor = SystemColors.ControlLight;
      this.BackgroundImage = (Image) resourceManager.GetObject("$this.BackgroundImage");
      object obj54 = resourceManager.GetObject("$this.ClientSize");
      this.ClientSize = obj54 != null ? (Size) obj54 : size1;
      this.Controls.Add((Control) this.cmdOK);
      this.Controls.Add((Control) this.chkConfirm);
      this.Controls.Add((Control) this.cmdCancel);
      this.Controls.Add((Control) this.cmdApply);
      this.Controls.Add((Control) this.tbsMain);
      this.Controls.Add((Control) this.lblProgress);
      this.Cursor = Cursors.Default;
      this.Enabled = Conversions.ToBoolean(resourceManager.GetObject("$this.Enabled"));
      this.Font = (Font) resourceManager.GetObject("$this.Font");
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.HelpProvider1.SetHelpKeyword((Control) this, resourceManager.GetString("$this.HelpKeyword"));
      this.HelpProvider1.SetHelpNavigator((Control) this, (HelpNavigator) Conversions.ToInteger(resourceManager.GetObject("$this.HelpNavigator")));
      this.HelpProvider1.SetHelpString((Control) this, resourceManager.GetString("$this.HelpString"));
      this.Icon = (Icon) resourceManager.GetObject("$this.Icon");
      this.ImeMode = (ImeMode) Conversions.ToInteger(resourceManager.GetObject("$this.ImeMode"));
      object obj55 = resourceManager.GetObject("$this.Location");
      this.Location = obj55 != null ? (Point) obj55 : point1;
      this.MaximizeBox = false;
      object obj56 = resourceManager.GetObject("$this.MaximumSize");
      this.MaximumSize = obj56 != null ? (Size) obj56 : size1;
      this.Menu = this.MainMenu1;
      object obj57 = resourceManager.GetObject("$this.MinimumSize");
      this.MinimumSize = obj57 != null ? (Size) obj57 : size1;
      this.Name = nameof (frmAlias);
      this.RightToLeft = (RightToLeft) Conversions.ToInteger(resourceManager.GetObject("$this.RightToLeft"));
      this.HelpProvider1.SetShowHelp((Control) this, Conversions.ToBoolean(resourceManager.GetObject("$this.ShowHelp")));
      this.StartPosition = (FormStartPosition) Conversions.ToInteger(resourceManager.GetObject("$this.StartPosition"));
      this.Text = resourceManager.GetString("$this.Text");
      this.ToolTip1.SetToolTip((Control) this, resourceManager.GetString("$this.ToolTip"));
      this._fraMain_0.ResumeLayout(false);
      this._pctAlias_0.ResumeLayout(false);
      this._fraMain_1.ResumeLayout(false);
      this._pctAlias_1.ResumeLayout(false);
      this.tbsMain.ResumeLayout(false);
      this.Tab0.ResumeLayout(false);
      this.Tab1.ResumeLayout(false);
      this.ResumeLayout(false);
    }

    public static frmAlias DefInstance
    {
      get => frmAlias.m_vb6FormDefInstance;
      set => frmAlias.m_vb6FormDefInstance = value;
    }

    public void StartBrowse(ref bool Import)
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        if (!Import)
        {
          short num3 = 7;
          if (((uint) Main.nChange & (uint) (short) -(Operators.CompareString(Main.sFname, "", false) != 0 ? 1 : 0)) > 0U)
          {
            string sFileInMemory = this.resManager.GetString("STR_UNNAMED");
            if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
              sFileInMemory = Main.sFileInMemory;
            num3 = checked ((short) Interaction.MsgBox((object) (this.resManager.GetString("STR_SAVECHANGES") + sFileInMemory + this.resManager.GetString("STR_?")), MsgBoxStyle.YesNoCancel | MsgBoxStyle.Question | MsgBoxStyle.DefaultButton2, (object) this.resManager.GetString("STR_SAVETITLE")));
            if (num3 == (short) 2)
              goto label_24;
          }
          if (num3 == (short) 6)
          {
            if (Operators.CompareString(Main.sFileInMemory, "", false) == 0)
            {
              string str1 = this.resManager.GetString("STR_SAVEEXTENSION");
              ref string local1 = ref str1;
              string str2 = Main.sACADPGP + "\\acad.pgp";
              ref string local2 = ref str2;
              Main.sFileInMemory = Main.GetSaveFile(ref local1, ref local2);
              if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
                Main.sFname = this.cdgOpen.Title;
              else
                goto label_24;
            }
            ref string local3 = ref Main.sFileInMemory;
            ref string local4 = ref Main.sFname;
            bool flag = true;
            ref bool local5 = ref flag;
            Main.SavePGP(ref local3, ref local4, ref local5);
          }
        }
        string sFileInMemory1 = Main.sFileInMemory;
        string Filter_Renamed = this.resManager.GetString("STR_SAVEEXTENSION");
        Main.sFileInMemory = Main.GetOpenFile(ref Filter_Renamed, ref Main.sFileInMemory);
        Main.sFname = this.cdgOpen.Title;
        if (Operators.CompareString(Main.sFileInMemory, "", false) == 0 | Operators.CompareString(sFileInMemory1, Main.sFileInMemory, false) == 0)
        {
          Main.sFileInMemory = sFileInMemory1;
          goto label_24;
        }
        else
        {
          if (Import)
          {
            short num4 = 6;
            if (this.chkConfirm.CheckState != 0)
              num4 = checked ((short) Interaction.MsgBox((object) (this.resManager.GetString("STR_IMPORT1") + Main.sFileInMemory + this.resManager.GetString("STR_IMPORT2")), MsgBoxStyle.YesNo | MsgBoxStyle.Information, (object) this.resManager.GetString("STR_IMPORT3")));
            if (num4 == (short) 6)
            {
              Main.ParsePGP(ref Main.sFileInMemory, ref Import);
              this.FillInListView(ref Import);
              Main.nChange = (short) 1;
            }
            else
              goto label_24;
          }
          else
          {
            Main.sFname = Main.sFileInMemory;
            Main.CleanUpForm();
            Main.ParsePGP(ref Main.sFileInMemory, ref Import);
            this.FillInListView(ref Import);
          }
          Main.ChkApply();
          goto label_24;
        }
label_19:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_24;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num5;
        if (ex is Exception & num1 != 0 & num5 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_19;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_24:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void StartEdit(ref short Index)
    {
      ListView lvwAlia = (ListView) this.lvwAlias[(int) Index];
      ListViewItem listViewItem = (ListViewItem) null;
      if (Operators.ConditionalCompareObjectGreater(NewLateBinding.LateGet(NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "SelectedItems", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 0, false))
        listViewItem = (ListViewItem) NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "SelectedItems", new object[1]
        {
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null);
      if (listViewItem == null)
        listViewItem = (ListViewItem) NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "Items", new object[1]
        {
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null);
      Main.sEditAlias = listViewItem.Text;
      Main.sEditRep = listViewItem.SubItems[1].Text;
      if (Operators.CompareString(Main.sEditAlias, "---", false) == 0)
        Main.sEditAlias = "";
      if (Index == (short) 1)
      {
        Main.sEditPrompt = listViewItem.SubItems[3].Text;
        Main.sEditFlag = listViewItem.SubItems[2].Text;
      }
      Main.nEdit = (short) 1;
      this.cmdAdd_Click(RuntimeHelpers.GetObjectValue(this.cmdAdd[(int) Index]), new EventArgs());
      if (Main.bEditCancel == (short) -1)
      {
        Main.bEditCancel = (short) 0;
        Main.nEdit = (short) 0;
        switch (Index)
        {
          case 0:
            frmNewAlias.DefInstance.txtAlias.Text = "";
            frmNewAlias.DefInstance.cmbRep.Text = "";
            break;
          case 1:
            frmNewShell.DefInstance.txtAlias.Text = "";
            frmNewShell.DefInstance.txtCommand.Text = "";
            frmNewShell.DefInstance.comboFlag.Text = "0";
            frmNewShell.DefInstance.txtPrompt.Text = "";
            break;
        }
      }
      else
      {
        if (Main.nEdit == (short) 1)
          this.cmdRemove_Click(RuntimeHelpers.GetObjectValue(this.cmdRemove[(int) Index]), new EventArgs());
        Main.AppendAlias();
        Main.nEdit = (short) 0;
        NewLateBinding.LateCall(this.lvwAlias[(int) Index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      }
    }

    public void StartRemove(ref short Index)
    {
      ListViewItem listViewItem1 = (ListViewItem) null;
      if (Operators.ConditionalCompareObjectGreater(NewLateBinding.LateGet(NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "SelectedItems", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 0, false))
        listViewItem1 = (ListViewItem) NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "SelectedItems", new object[1]
        {
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null);
      if (listViewItem1 == null)
        listViewItem1 = (ListViewItem) NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "Items", new object[1]
        {
          (object) 0
        }, (string[]) null, (System.Type[]) null, (bool[]) null);
      short num1 = 6;
      int num2 = (int) (this.chkConfirm.CheckState & (CheckState) -(Main.nEdit == (short) 0 ? 1 : 0));
      ListViewItem listViewItem2 = listViewItem1;
      string text1 = listViewItem2.Text;
      string Left1 = Main.Capitalize(ref text1);
      listViewItem2.Text = text1;
      int num3 = -(Operators.CompareString(Left1, "---", false) != 0 ? 1 : 0);
      if ((num2 & num3) != 0)
      {
        string text2 = listViewItem1.Text;
        string Left2 = listViewItem1.SubItems[1].Text;
        if (Operators.CompareString(Left2, "", false) != 0)
          Left2 = this.resManager.GetString("STR_FOR") + Left2;
        num1 = checked ((short) Interaction.MsgBox((object) (this.resManager.GetString("STR_SUREREMOVE") + Left2 + this.resManager.GetString("STR_?")), MsgBoxStyle.YesNo | MsgBoxStyle.Question, (object) (this.resManager.GetString("STR_REMOVE") + text2 + this.resManager.GetString("STR_?"))));
      }
      if (Conversions.ToBoolean(Operators.AndObject((object) (num1 == (short) 6), Operators.CompareObjectGreater(NewLateBinding.LateGet(NewLateBinding.LateGet(this.lvwAlias[(int) Index], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 0, false))))
      {
        string Right = "";
        switch (Index)
        {
          case 0:
            Right = frmNewAlias.DefInstance.txtAlias.Text;
            break;
          case 1:
            Right = frmNewShell.DefInstance.txtAlias.Text;
            break;
        }
        if (Main.nEdit == (short) 1 & Operators.CompareString(listViewItem1.Text, Right, false) != 0)
        {
          ref ListViewItem local1 = ref listViewItem1;
          int num4 = (int) Index;
          ref int local2 = ref num4;
          Main.RemoveAlias(ref local1, ref local2, false, false);
          Index = checked ((short) num4);
        }
        else
        {
          ref ListViewItem local3 = ref listViewItem1;
          int num5 = (int) Index;
          ref int local4 = ref num5;
          Main.RemoveAlias(ref local3, ref local4, true, true);
          Index = checked ((short) num5);
        }
      }
      if (!this.cmdApply.Enabled)
        Main.ChkApply();
      NewLateBinding.LateCall(this.lvwAlias[(int) Index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    private void cmdAdd_Click(object eventSender, EventArgs eventArgs)
    {
      short index = checked ((short) this.cmdAdd.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      switch (index)
      {
        case 0:
          if (Main.nEdit == (short) 0)
          {
            frmNewAlias defInstance = frmNewAlias.DefInstance;
            defInstance.cmbRep.Text = "";
            defInstance.txtAlias.Text = "";
            defInstance.Text = this.resManager.GetString("STR_NEWCOM");
          }
          else
          {
            frmNewAlias defInstance = frmNewAlias.DefInstance;
            defInstance.Text = this.resManager.GetString("STR_EDITCOM");
            defInstance.txtAlias.Text = Main.sEditAlias;
            defInstance.txtAlias.Enabled = true;
            defInstance.cmbRep.Text = Main.sEditRep;
            defInstance.txtAlias.SelectionStart = 0;
            defInstance.txtAlias.SelectionLength = Strings.Len(Main.sEditAlias);
          }
          int num1 = (int) frmNewAlias.DefInstance.ShowDialog((IWin32Window) this);
          string text1 = frmNewAlias.DefInstance.txtAlias.Text;
          ListViewItem duplicate1 = Main.FindDuplicate(ref text1);
          if (Main.nEdit == (short) 0 & duplicate1 == null)
          {
            Main.AppendAlias();
            break;
          }
          if (Main.nEdit == (short) 0)
          {
            ref ListViewItem local1 = ref duplicate1;
            int num2 = 0;
            ref int local2 = ref num2;
            Main.RemoveAlias(ref local1, ref local2, true, true);
            Main.AppendAlias();
            break;
          }
          break;
        case 1:
          if (Main.nEdit == (short) 0)
          {
            frmNewShell defInstance = frmNewShell.DefInstance;
            defInstance.Text = this.resManager.GetString("STR_NEWSHELL");
            defInstance.txtPrompt.Text = "";
            defInstance.txtAlias.Text = "";
            defInstance.txtAlias.Enabled = true;
            defInstance.txtCommand.Text = "";
            defInstance.comboFlag.SelectedIndex = 0;
          }
          else
          {
            frmNewShell defInstance = frmNewShell.DefInstance;
            defInstance.Text = this.resManager.GetString("STR_EDITSHELL");
            defInstance.txtAlias.Text = Main.sEditAlias;
            defInstance.txtCommand.Text = Main.sEditRep;
            defInstance.txtPrompt.Text = Main.sEditPrompt;
            defInstance.comboFlag.Text = Main.sEditFlag;
            defInstance.txtAlias.Enabled = true;
            defInstance.txtAlias.SelectionStart = 0;
            defInstance.txtAlias.SelectionLength = Strings.Len(Main.sEditAlias);
          }
          int num3 = (int) frmNewShell.DefInstance.ShowDialog((IWin32Window) this);
          string text2 = frmNewShell.DefInstance.txtAlias.Text;
          ListViewItem duplicate2 = Main.FindDuplicate(ref text2);
          if (Main.nEdit == (short) 0 & duplicate2 == null)
          {
            Main.AppendAlias();
            break;
          }
          if (Main.nEdit == (short) 0)
          {
            ref ListViewItem local3 = ref duplicate2;
            int num4 = 1;
            ref int local4 = ref num4;
            Main.RemoveAlias(ref local3, ref local4, false, true);
            Main.AppendAlias();
            break;
          }
          break;
        case 2:
          object FileName = (object) (Strings.Left(Main.sACADPGP, checked (Strings.Len(Main.sACADPGP) - Strings.Len("acad.pgp"))) + "acad.mnu");
          Main.ParseMNU(ref FileName);
          break;
      }
      NewLateBinding.LateCall(this.lvwAlias[(int) index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    private void cmdApply_Click(object eventSender, EventArgs eventArgs)
    {
      bool Cancel = false;
      this.StartApply(ref Cancel);
    }

    public void StartApply(ref bool Cancel)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        if (!(Main.nChange == (short) 0 & Operators.CompareString(Strings.LCase(Main.sACADPGP), Strings.LCase(Main.sFileInMemory), false) == 0))
          goto label_4;
label_2:
        num3 = 3;
        this.cmdApply.Enabled = false;
label_3:
        num3 = 4;
        this.mnuFileSave.Enabled = false;
        goto label_45;
label_4:
        num3 = 7;
        string F = Main.sFileInMemory;
label_5:
        num3 = 8;
        string path = Main.sFname;
label_6:
        num3 = 9;
        bool flag1 = false;
label_7:
        num3 = 10;
        if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
          goto label_9;
label_8:
        num3 = 11;
        flag1 = true;
        goto label_15;
label_9:
        num3 = 13;
label_10:
        num3 = 14;
        if ((this.chkConfirm.CheckState & (CheckState) -(Main.nChange > (short) 0 ? 1 : 0)) == 0)
          goto label_15;
label_11:
        num3 = 15;
        if (!(Operators.CompareString(F, "", false) != 0 & Main.Exist(ref F)))
          goto label_13;
label_12:
        num3 = 16;
        short num4 = checked ((short) Interaction.MsgBox((object) (F + "\r\n\r\n" + this.resManager.GetString("STR_OVERWRITE")), MsgBoxStyle.YesNoCancel | MsgBoxStyle.Exclamation | MsgBoxStyle.DefaultButton2, (object) (this.resManager.GetString("STR_OVERWRITETITLE") + Main.sFname + this.resManager.GetString("STR_?"))));
label_13:
        num3 = 18;
        if (!(num4 == (short) 7 | Operators.CompareString(F, "", false) == 0))
          goto label_15;
label_14:
        num3 = 19;
        flag1 = true;
label_15:
        num3 = 23;
        if (!flag1)
          goto label_23;
label_16:
        num3 = 24;
        string StartFileName = "";
label_17:
        num3 = 25;
        if (!Main.Exist(ref Main.sACADPGP))
          goto label_19;
label_18:
        num3 = 26;
        StartFileName = Main.sACADPGP;
label_19:
        num3 = 28;
        string Filter_Renamed = this.resManager.GetString("STR_SAVEFILEFILTER");
        F = Main.GetSaveFile(ref Filter_Renamed, ref StartFileName);
label_20:
        num3 = 29;
        if (Operators.CompareString(F, "", false) != 0)
          goto label_22;
label_21:
        num3 = 30;
        Cancel = true;
        goto label_45;
label_22:
        num3 = 33;
        path = this.cdgSave.Title;
        goto label_24;
label_23:
        num3 = 35;
        if (num4 == (short) 2)
          goto label_45;
label_24:
        num3 = 38;
        path = Path.GetFileName(path);
label_25:
        num3 = 39;
        ref string local1 = ref F;
        ref string local2 = ref path;
        bool flag2 = false;
        ref bool local3 = ref flag2;
        Main.SavePGP(ref local1, ref local2, ref local3);
        goto label_45;
label_40:
        num2 = num3;
        int num5;
        switch (num1)
        {
          case 1:
label_38:
            num5 = num2 + 1;
            goto label_39;
          case 2:
label_26:
            num3 = 41;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_44;
        }
label_27:
        num3 = 42;
        if (Information.Err().Number == 32755)
          goto label_45;
label_28:
        num3 = 45;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num6 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num7 = (short) num6;
label_29:
        num3 = 46;
        switch (num7)
        {
          case 0:
            break;
          case 1:
            goto label_31;
          case 2:
            goto label_45;
          case 3:
            goto label_33;
          default:
            goto label_34;
        }
label_30:
        num3 = 50;
        this.cmdApply_Click((object) this.cmdApply, new EventArgs());
        goto label_35;
label_31:
        num3 = 53;
        ProjectData.ClearProjectError();
        num5 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_39;
label_33:
        num3 = 60;
        ErrorHandler.ShowError();
        goto label_35;
label_34:
        num3 = 63;
        int num8 = (int) Interaction.MsgBox((object) this.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_35:
        num3 = 66;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_38;
label_39:
        num2 = 0;
        switch (num5)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
          case 31:
          case 36:
          case 40:
          case 43:
          case 56:
          case 57:
          case 67:
            goto label_45;
          case 6:
          case 7:
            goto label_4;
          case 8:
            goto label_5;
          case 9:
            goto label_6;
          case 10:
            goto label_7;
          case 11:
            goto label_8;
          case 12:
          case 20:
          case 21:
          case 22:
          case 23:
            goto label_15;
          case 13:
            goto label_9;
          case 14:
            goto label_10;
          case 15:
            goto label_11;
          case 16:
            goto label_12;
          case 17:
          case 18:
            goto label_13;
          case 19:
            goto label_14;
          case 24:
            goto label_16;
          case 25:
            goto label_17;
          case 26:
            goto label_18;
          case 27:
          case 28:
            goto label_19;
          case 29:
            goto label_20;
          case 30:
            goto label_21;
          case 32:
          case 33:
            goto label_22;
          case 34:
          case 37:
          case 38:
            goto label_24;
          case 35:
            goto label_23;
          case 39:
            goto label_25;
          case 41:
            goto label_26;
          case 42:
            goto label_27;
          case 44:
          case 45:
            goto label_28;
          case 46:
            goto label_29;
          case 47:
          case 51:
          case 54:
          case 55:
          case 58:
          case 61:
          case 64:
          case 65:
          case 66:
            goto label_35;
          case 48:
          case 50:
            goto label_30;
          case 52:
          case 53:
            goto label_31;
          case 59:
          case 60:
            goto label_33;
          case 62:
          case 63:
            goto label_34;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_40;
      }
label_44:
      throw ProjectData.CreateProjectError(-2146828237);
label_45:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void cmdOK_Click(object eventSender, EventArgs eventArgs)
    {
      bool Cancel;
      this.StartApply(ref Cancel);
      if (Cancel)
        this.StartCancel();
      else
        ProjectData.EndApp();
    }

    private void cmdCancel_Click(object eventSender, EventArgs eventArgs) => this.StartCancel();

    public void StartCancel()
    {
      if (Main.nChange > (short) 0)
      {
        short num = checked ((short) Interaction.MsgBox((object) this.resManager.GetString("STR_MADECHANGES"), MsgBoxStyle.YesNoCancel | MsgBoxStyle.Exclamation, (object) (this.resManager.GetString("STR_SAVECHG") + Main.sFname + this.resManager.GetString("STR_?"))));
        if (num == (short) 7)
          this.Close();
        if (num == (short) 6)
          this.cmdApply_Click((object) this.cmdApply, new EventArgs());
        if (num != (short) 2)
          ;
      }
      else
      {
        this.Close();
        ProjectData.EndApp();
      }
    }

    private void cmdEdit_Click(object eventSender, EventArgs eventArgs)
    {
      short Index = checked ((short) this.cmdEdit.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      this.StartEdit(ref Index);
    }

    private void cmdRemove_Click(object eventSender, EventArgs eventArgs)
    {
      short Index = checked ((short) this.cmdRemove.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      this.StartRemove(ref Index);
    }

    private void InitializeListViews()
    {
      this._lvwAlias.Columns.Add(this.resManager.GetString("STR_ACOL1"), 80, HorizontalAlignment.Left);
      this._lvwAlias.Columns.Add(this.resManager.GetString("STR_ACOL2"), 120, HorizontalAlignment.Left);
      this._lvwShell.Columns.Add(this.resManager.GetString("STR_CCOL1"), 80, HorizontalAlignment.Left);
      this._lvwShell.Columns.Add(this.resManager.GetString("STR_CCOL2"), 80, HorizontalAlignment.Left);
      this._lvwShell.Columns.Add(this.resManager.GetString("STR_CCOL3"), 80, HorizontalAlignment.Left);
      this._lvwShell.Columns.Add(this.resManager.GetString("STR_CCOL4"), 80, HorizontalAlignment.Left);
      this.lvwAlias.Clear();
      this.lvwAlias.Add((object) this._lvwAlias);
      this.lvwAlias.Add((object) this._lvwShell);
      this.fraMain.Clear();
      this.fraMain.Add((object) this._fraMain_0);
      this.fraMain.Add((object) this._fraMain_1);
      this.cmdAdd.Clear();
      this.cmdAdd.Add((object) this._cmdAdd_0);
      this.cmdAdd.Add((object) this._cmdAdd_1);
      this.cmdRemove.Clear();
      this.cmdRemove.Add((object) this._cmdRemove_0);
      this.cmdRemove.Add((object) this._cmdRemove_1);
      this.cmdEdit.Clear();
      this.cmdEdit.Add((object) this._cmdEdit_0);
      this.cmdEdit.Add((object) this._cmdEdit_1);
      this.pctAlias.Clear();
      this.pctAlias.Add((object) this._pctAlias_0);
      this.pctAlias.Add((object) this._pctAlias_1);
    }

    private void getProductInfoFromRegistryString(string productReg, ref string prodInfo)
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        char[] separator = new char[1]{ '\\' };
        string[] strArray = productReg.Split(separator, 5);
        if (strArray.GetLength(0) == 5)
        {
          prodInfo = strArray[4].Substring(checked (strArray[4].IndexOf(":") + 1));
          goto label_7;
        }
        else
          goto label_7;
label_2:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_7;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num3;
        if (ex is Exception & num1 != 0 & num3 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_2;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_7:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void LoadResource()
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        string location = Assembly.GetEntryAssembly().Location;
        string path = location.Substring(0, checked (location.LastIndexOf("\\") + 1)) + "..\\identity.ini";
        if (File.Exists(path))
        {
          StreamReader streamReader = File.OpenText(path);
          if (streamReader.ReadLine().Equals("[ProductIdentity]"))
          {
            string str = streamReader.ReadLine();
            streamReader.Close();
            int num3 = str.IndexOf("=");
            if (num3 >= 0)
            {
              string productReg = str.Substring(checked (num3 + 1));
              char[] separator = new char[1]{ '\\' };
              if (productReg.Split(separator, 5).Length == 5)
              {
                string prodInfo = "";
                this.getProductInfoFromRegistryString(productReg, ref prodInfo);
                if (Conversions.ToDouble(prodInfo) <= 3.0)
                {
                  Thread.CurrentThread.CurrentUICulture = new CultureInfo(int.Parse(prodInfo, NumberStyles.HexNumber, (IFormatProvider) CultureInfo.InvariantCulture), true);
                  goto label_11;
                }
                else
                  goto label_11;
              }
              else
                goto label_11;
            }
            else
              goto label_11;
          }
          else
            goto label_11;
        }
        else
          goto label_11;
label_6:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_11;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num4;
        if (ex is Exception & num1 != 0 & num4 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void frmAlias_Load(object eventSender, EventArgs eventArgs)
    {
      this.LoadResource();
      this.HelpProvider1.HelpNamespace = Path.GetDirectoryName(Application.ExecutablePath) + "\\acet.chm";
      this.InitializeListViews();
      short index = 0;
      do
      {
        NewLateBinding.LateSetComplex(this.lvwAlias[(int) index], (System.Type) null, "Font", new object[1]
        {
          (object) new Font("FixedSys", 8f)
        }, (string[]) null, (System.Type[]) null, false, true);
        checked { ++index; }
      }
      while (index <= (short) 1);
      this.chkConfirm.CheckState = (CheckState) Conversions.ToShort(Interaction.GetSetting("Autodesk Applications", "AutoCAD Alias Editor", "Confirm", "1"));
      Cursor.Current = Cursors.WaitCursor;
      Main.sFileInMemory = Main.GetPath();
      Main.sFname = Main.sFileInMemory;
      Main.CleanUpForm();
      this.Show();
      NewLateBinding.LateCall(this.fraMain[0], (System.Type) null, "BringToFront", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
      {
        ref string local1 = ref Main.sFileInMemory;
        bool Import = false;
        ref bool local2 = ref Import;
        Main.ParsePGP(ref local1, ref local2);
        Import = false;
        this.FillInListView(ref Import);
      }
      else
      {
        bool Import = false;
        this.StartBrowse(ref Import);
      }
      Main.nChange = (short) 0;
      Cursor.Current = Cursors.Default;
    }

    public void FillInListView(ref bool Import)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        Cursor.Current = Cursors.WaitCursor;
label_2:
        num3 = 3;
        this.lblProgress.Visible = true;
label_3:
        num3 = 4;
        frmAlias.DefInstance.Refresh();
label_4:
        num3 = 5;
        if (Import)
          goto label_8;
label_5:
        num3 = 6;
        NewLateBinding.LateCall(NewLateBinding.LateGet(this.lvwAlias[0], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Clear", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_6:
        num3 = 7;
        NewLateBinding.LateCall(NewLateBinding.LateGet(this.lvwAlias[1], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Clear", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_7:
        num3 = 8;
        short num4 = 0;
        goto label_10;
label_8:
        num3 = 10;
label_9:
        num3 = 11;
        num4 = Conversions.ToShort(NewLateBinding.LateGet(NewLateBinding.LateGet(this.lvwAlias[0], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_10:
        num3 = 13;
        short nTotalAlias = Main.nTotalAlias;
        short index = 0;
        goto label_19;
label_11:
        num3 = 14;
        if (Operators.CompareString(Main.sAlias[(int) index], "---", false) == 0)
          goto label_18;
label_12:
        num3 = 15;
        checked { ++num4; }
label_13:
        num3 = 16;
        ListViewItem listViewItem1 = new ListViewItem(Strings.Trim(Strings.UCase(Main.sAlias[(int) index])));
label_14:
        num3 = 17;
        listViewItem1.SubItems.Add(Strings.Trim(Main.sRep[(int) index]));
label_15:
        num3 = 18;
        object Instance1 = NewLateBinding.LateGet(this.lvwAlias[0], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
        object[] objArray1 = new object[1]
        {
          (object) listViewItem1
        };
        object[] Arguments1 = objArray1;
        bool[] flagArray1 = new bool[1]{ true };
        bool[] CopyBack1 = flagArray1;
        object obj1 = NewLateBinding.LateGet(Instance1, (System.Type) null, "Add", Arguments1, (string[]) null, (System.Type[]) null, CopyBack1);
        if (flagArray1[0])
          listViewItem1 = (ListViewItem) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray1[0]), typeof (ListViewItem));
        ListViewItem listViewItem2 = (ListViewItem) obj1;
label_18:
        num3 = 20;
        checked { ++index; }
label_19:
        if ((int) index <= (int) nTotalAlias)
          goto label_11;
label_20:
        num3 = 21;
        Main.SelectAListItem((short) 1, (short) 0);
label_21:
        num3 = 22;
        this.lblProgress.Visible = false;
label_22:
        num3 = 23;
        frmAlias.DefInstance.Refresh();
label_23:
        num3 = 24;
        if (!Import)
          goto label_25;
label_24:
        num3 = 25;
        num4 = Conversions.ToShort(NewLateBinding.LateGet(NewLateBinding.LateGet(this.lvwAlias[1], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
        goto label_27;
label_25:
        num3 = 27;
label_26:
        num3 = 28;
        num4 = (short) 0;
label_27:
        num3 = 30;
        short nTotalShell = Main.nTotalShell;
        index = (short) 0;
        goto label_37;
label_28:
        num3 = 31;
        checked { ++num4; }
label_29:
        num3 = 32;
        ListViewItem listViewItem3 = new ListViewItem(Strings.Trim(Strings.UCase(Main.sShell[(int) index])));
label_30:
        num3 = 33;
        listViewItem3.SubItems.Add(Strings.Trim(Main.sCommand[(int) index]));
label_31:
        num3 = 34;
        listViewItem3.SubItems.Add(Strings.Trim(Strings.LCase(Main.sFlag[(int) index])));
label_32:
        num3 = 35;
        listViewItem3.SubItems.Add(Strings.Trim(Main.sPrompt[(int) index]));
label_33:
        num3 = 36;
        object Instance2 = NewLateBinding.LateGet(this.lvwAlias[1], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
        object[] objArray2 = new object[1]
        {
          (object) listViewItem3
        };
        object[] Arguments2 = objArray2;
        bool[] flagArray2 = new bool[1]{ true };
        bool[] CopyBack2 = flagArray2;
        object obj2 = NewLateBinding.LateGet(Instance2, (System.Type) null, "Add", Arguments2, (string[]) null, (System.Type[]) null, CopyBack2);
        if (flagArray2[0])
          listViewItem3 = (ListViewItem) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray2[0]), typeof (ListViewItem));
        listViewItem2 = (ListViewItem) obj2;
label_36:
        num3 = 37;
        checked { ++index; }
label_37:
        if ((int) index <= (int) nTotalShell)
          goto label_28;
label_38:
        num3 = 38;
        object WhichTab1 = (object) (short) 0;
        Main.CheckForDuplicates(ref WhichTab1, ref Import);
label_39:
        num3 = 39;
        object WhichTab2 = (object) (short) 1;
        Main.CheckForDuplicates(ref WhichTab2, ref Import);
label_40:
        num3 = 40;
        Cursor.Current = Cursors.Default;
        goto label_47;
label_42:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
              case 12:
              case 13:
                goto label_10;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 14:
                goto label_11;
              case 15:
                goto label_12;
              case 16:
                goto label_13;
              case 17:
                goto label_14;
              case 18:
                goto label_15;
              case 19:
              case 20:
                goto label_18;
              case 21:
                goto label_20;
              case 22:
                goto label_21;
              case 23:
                goto label_22;
              case 24:
                goto label_23;
              case 25:
                goto label_24;
              case 26:
              case 29:
              case 30:
                goto label_27;
              case 27:
                goto label_25;
              case 28:
                goto label_26;
              case 31:
                goto label_28;
              case 32:
                goto label_29;
              case 33:
                goto label_30;
              case 34:
                goto label_31;
              case 35:
                goto label_32;
              case 36:
                goto label_33;
              case 37:
                goto label_36;
              case 38:
                goto label_38;
              case 39:
                goto label_39;
              case 40:
                goto label_40;
              case 41:
                goto label_47;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_42;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_47:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void frmAlias_Closed(object eventSender, EventArgs eventArgs)
    {
      Interaction.SaveSetting("Autodesk Applications", "AutoCAD Alias Editor", "Confirm", Conversions.ToString((int) this.chkConfirm.CheckState));
      ProjectData.EndApp();
    }

    private void lvwAlias_AfterLabelEdit(object eventSender, LabelEditEventArgs e)
    {
      short index = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      string Left = Strings.LCase("");
      System.Type Type = typeof (Strings);
      object[] objArray1 = new object[1];
      object[] objArray2 = objArray1;
      object lvwAlia = this.lvwAlias[(int) index];
      object Instance = lvwAlia;
      object[] Arguments1 = new object[0];
      object[] Arguments2 = Arguments1;
      string[] ArgumentNames1 = (string[]) null;
      string[] ArgumentNames2 = ArgumentNames1;
      object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(NewLateBinding.LateGet(Instance, (System.Type) null, "SelectedItem", Arguments2, ArgumentNames2, (System.Type[]) null, (bool[]) null), (System.Type) null, "Default", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
      objArray2[0] = objectValue;
      object[] objArray3 = objArray1;
      object[] Arguments3 = objArray3;
      bool[] flagArray = new bool[1]{ true };
      bool[] CopyBack = flagArray;
      object Right = NewLateBinding.LateGet((object) null, Type, "LCase", Arguments3, (string[]) null, (System.Type[]) null, CopyBack);
      if (flagArray[0])
        NewLateBinding.LateSetComplex(NewLateBinding.LateGet(lvwAlia, (System.Type) null, "SelectedItem", Arguments1, ArgumentNames1, (System.Type[]) null, (bool[]) null), (System.Type) null, "Default", new object[1]
        {
          RuntimeHelpers.GetObjectValue(objArray3[0])
        }, (string[]) null, (System.Type[]) null, true, true);
      if (!Operators.ConditionalCompareObjectNotEqual((object) Left, Right, false))
        return;
      this.cmdRemove_Click(RuntimeHelpers.GetObjectValue(this.cmdRemove[(int) index]), new EventArgs());
      Main.AppendAlias();
      Main.nEdit = (short) 0;
      NewLateBinding.LateCall(this.lvwAlias[(int) index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    public void lvwAlias_ColumnClick(object eventSender, ColumnClickEventArgs eventArgs)
    {
      ListView lvwAlia = (ListView) this.lvwAlias[(int) checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)))];
      Cursor.Current = Cursors.WaitCursor;
      lvwAlia.Sorting = lvwAlia.Sorting != SortOrder.Ascending ? SortOrder.Ascending : SortOrder.Descending;
      ListViewItem Expression = (ListViewItem) null;
      if (lvwAlia.SelectedItems.Count > 0)
        Expression = lvwAlia.SelectedItems[0];
      lvwAlia.ListViewItemSorter = (IComparer) new frmAlias.ColumnSort(eventArgs.Column);
      if (!Information.IsNothing((object) Expression))
        Expression.EnsureVisible();
      Cursor.Current = Cursors.Default;
    }

    private void lvwAlias_DblClick(object eventSender, EventArgs eventArgs)
    {
      short Index = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      this.StartEdit(ref Index);
    }

    private void lvwAlias_Enter(object eventSender, EventArgs eventArgs)
    {
      short index = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      NewLateBinding.LateSetComplex(this.cmdEdit[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) true
      }, (string[]) null, (System.Type[]) null, false, true);
      NewLateBinding.LateSetComplex(this.cmdRemove[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) true
      }, (string[]) null, (System.Type[]) null, false, true);
    }

    private void lvwAlias_ItemClick(object eventSender, EventArgs eventArgs)
    {
      int num1;
      int num2;
      try
      {
        short index = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
        ProjectData.ClearProjectError();
        num1 = 2;
        NewLateBinding.LateSetComplex(this.cmdRemove[(int) index], (System.Type) null, "Enabled", new object[1]
        {
          (object) true
        }, (string[]) null, (System.Type[]) null, false, true);
        NewLateBinding.LateCall(this.lvwAlias[(int) index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        goto label_6;
label_1:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_6;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num3;
        if (ex is Exception & num1 != 0 & num3 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_1;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_6:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void lvwAlias_KeyDownEvent(object eventSender, KeyEventArgs eventArgs)
    {
      short index = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
      if (eventArgs.KeyCode == Keys.Delete)
        this.cmdRemove_Click(RuntimeHelpers.GetObjectValue(this.cmdRemove[(int) index]), new EventArgs());
      if (eventArgs.KeyCode != Keys.Space)
        return;
      this.cmdEdit_Click(RuntimeHelpers.GetObjectValue(this.cmdEdit[(int) index]), new EventArgs());
    }

    private void lvwAlias_Leave(object eventSender, EventArgs eventArgs)
    {
      short num = checked ((short) this.lvwAlias.IndexOf(RuntimeHelpers.GetObjectValue(eventSender)));
    }

    public void mnuEditAdd_Popup(object eventSender, EventArgs eventArgs) => this.mnuEditAdd_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuEditAdd_Click(object eventSender, EventArgs eventArgs) => this.cmdAdd_Click(RuntimeHelpers.GetObjectValue(this.cmdAdd[(int) Main.CurrentTab()]), new EventArgs());

    public void mnuEditEdit_Popup(object eventSender, EventArgs eventArgs) => this.mnuEditEdit_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuEditEdit_Click(object eventSender, EventArgs eventArgs) => this.cmdEdit_Click(RuntimeHelpers.GetObjectValue(this.cmdEdit[(int) Main.CurrentTab()]), new EventArgs());

    public void mnuEditRemove_Popup(object eventSender, EventArgs eventArgs) => this.mnuEditRemove_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuEditRemove_Click(object eventSender, EventArgs eventArgs) => this.cmdRemove_Click(RuntimeHelpers.GetObjectValue(this.cmdRemove[(int) Main.CurrentTab()]), new EventArgs());

    public void mnuFileExit_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileExit_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileExit_Click(object eventSender, EventArgs eventArgs) => this.cmdCancel_Click((object) this.cmdCancel, new EventArgs());

    public void mnuFileExport_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileExport_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileExport_Click(object eventSender, EventArgs eventArgs)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        Main.sAliases = "";
label_2:
        num3 = 3;
        Main.sShells = "";
label_3:
        num3 = 4;
        short WhichTab1 = 0;
        Main.sAliases = Main.PGPString(ref WhichTab1);
label_4:
        num3 = 5;
        short WhichTab2 = 1;
        Main.sShells = Main.PGPString(ref WhichTab2);
label_5:
        num3 = 6;
        string str = "; This PGP file was created with the AutoCAD Alias Editor.\r\n; Last modified " + Strings.Format((object) DateAndTime.Today.ToOADate()) + "   " + Conversion.Str((object) DateAndTime.TimeOfDay.ToOADate()) + "\r\n\r\n; Use the Alias Editor (ALIASEDIT command) to edit this file.\r\n\r\n; [Operating System Commands]\r\n\r\n" + Main.sShells + "\r\n\r\n; [AutoCAD Command Aliases]\r\n\r\n" + Main.sAliases;
label_6:
        num3 = 7;
        string StartFileName = "";
label_7:
        num3 = 8;
        if (Strings.Len(Main.sFileInMemory) <= 4)
          goto label_9;
label_8:
        num3 = 9;
        StartFileName = Strings.Left(Main.sFileInMemory, checked (Strings.Len(Main.sFileInMemory) - 4)) + ".pgp";
label_9:
        num3 = 11;
        string Filter_Renamed = this.resManager.GetString("STR_SAVEEXTENSION");
        StartFileName = Main.GetSaveFile(ref Filter_Renamed, ref StartFileName);
label_10:
        num3 = 12;
        if (Operators.CompareString(StartFileName, "", false) == 0)
          goto label_31;
label_11:
        num3 = 15;
        Cursor.Current = Cursors.WaitCursor;
label_12:
        num3 = 16;
        ref string local1 = ref StartFileName;
        object obj = (object) str;
        ref object local2 = ref obj;
        Main.WriteOut(ref local1, ref local2);
        str = Conversions.ToString(obj);
label_13:
        num3 = 17;
        Cursor.Current = Cursors.Default;
        goto label_31;
label_26:
        num2 = num3;
        int num4;
        switch (num1)
        {
          case 1:
            num4 = num2 + 1;
            goto label_25;
          case 2:
label_14:
            num3 = 19;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_30;
        }
label_15:
        num3 = 20;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num5 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num6 = (short) num5;
label_16:
        num3 = 21;
        switch (num6)
        {
          case 0:
            break;
          case 1:
            goto label_19;
          case 2:
            goto label_31;
          case 3:
            goto label_21;
          default:
            goto label_22;
        }
label_17:
        num3 = 25;
        int num7 = (int) frmAlias.DefInstance.cdgSave.ShowDialog();
label_18:
        num3 = 26;
        SaveFileDialog cdgSave1 = frmAlias.DefInstance.cdgSave;
        string fileName = cdgSave1.FileName;
        ref string local3 = ref fileName;
        SaveFileDialog cdgSave2 = frmAlias.DefInstance.cdgSave;
        string title = cdgSave2.Title;
        ref string local4 = ref title;
        CheckBox chkConfirm = frmAlias.DefInstance.chkConfirm;
        bool flag = chkConfirm.Checked;
        ref bool local5 = ref flag;
        Main.SavePGP(ref local3, ref local4, ref local5);
        chkConfirm.Checked = flag;
        cdgSave2.Title = title;
        cdgSave1.FileName = fileName;
        goto label_31;
label_19:
        num3 = 29;
        ProjectData.ClearProjectError();
        num4 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_25;
label_21:
        num3 = 36;
        ErrorHandler.ShowError();
        goto label_31;
label_22:
        num3 = 39;
        int num8 = (int) Interaction.MsgBox((object) this.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
        goto label_31;
label_25:
        num2 = 0;
        switch (num4)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
            goto label_8;
          case 10:
          case 11:
            goto label_9;
          case 12:
            goto label_10;
          case 13:
          case 18:
          case 22:
          case 27:
          case 30:
          case 31:
          case 32:
          case 33:
          case 34:
          case 37:
          case 40:
          case 41:
          case 42:
            goto label_31;
          case 14:
          case 15:
            goto label_11;
          case 16:
            goto label_12;
          case 17:
            goto label_13;
          case 19:
            goto label_14;
          case 20:
            goto label_15;
          case 21:
            goto label_16;
          case 23:
          case 25:
            goto label_17;
          case 26:
            goto label_18;
          case 28:
          case 29:
            goto label_19;
          case 35:
          case 36:
            goto label_21;
          case 38:
          case 39:
            goto label_22;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_26;
      }
label_30:
      throw ProjectData.CreateProjectError(-2146828237);
label_31:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void mnuFileImport_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileImport_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileImport_Click(object eventSender, EventArgs eventArgs)
    {
      string sFileInMemory = Main.sFileInMemory;
      string sFname = Main.sFname;
      bool Import = true;
      this.StartBrowse(ref Import);
      Main.sFileInMemory = sFileInMemory;
      Main.sFname = sFname;
      Main.CleanUpForm();
    }

    public void mnuFileNew_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileNew_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileNew_Click(object eventSender, EventArgs eventArgs)
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        int num3 = 7;
        if (((uint) Main.nChange & (uint) (short) -(Operators.CompareString(Main.sFname, "", false) != 0 ? 1 : 0)) > 0U)
        {
          string sFileInMemory = this.resManager.GetString("STR_UNNAMED");
          if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
            sFileInMemory = Main.sFileInMemory;
          num3 = (int) Interaction.MsgBox((object) (this.resManager.GetString("STR_SAVECHG") + sFileInMemory + this.resManager.GetString("STR_?")), MsgBoxStyle.YesNoCancel | MsgBoxStyle.Question | MsgBoxStyle.DefaultButton2, (object) this.resManager.GetString("STR_SAVETITLE"));
          if (num3 == 2)
            goto label_15;
        }
        if (num3 == 6)
        {
          if (Operators.CompareString(Main.sFileInMemory, "", false) == 0)
          {
            string str1 = this.resManager.GetString("STR_SAVEEXTENSION");
            ref string local1 = ref str1;
            string str2 = Main.sACADPGP + "\\acad.pgp";
            ref string local2 = ref str2;
            Main.sFileInMemory = Main.GetSaveFile(ref local1, ref local2);
            if (Operators.CompareString(Main.sFileInMemory, "", false) != 0)
              Main.sFname = this.cdgOpen.Title;
            else
              goto label_15;
          }
          ref string local3 = ref Main.sFileInMemory;
          ref string local4 = ref Main.sFname;
          bool flag = true;
          ref bool local5 = ref flag;
          Main.SavePGP(ref local3, ref local4, ref local5);
        }
        Main.sFileInMemory = "";
        Main.sFname = this.resManager.GetString("STR_UNNAMED");
        NewLateBinding.LateCall(NewLateBinding.LateGet(this.lvwAlias[0], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Clear", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        NewLateBinding.LateCall(NewLateBinding.LateGet(this.lvwAlias[1], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Clear", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        Main.nChange = (short) 0;
        Main.CleanUpForm();
        goto label_15;
label_10:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_15;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num4;
        if (ex is Exception & num1 != 0 & num4 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_10;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_15:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void mnuFileOpen_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileOpen_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileOpen_Click(object eventSender, EventArgs eventArgs)
    {
      bool Import = false;
      this.StartBrowse(ref Import);
    }

    public void mnuFilePrint_Popup(object eventSender, EventArgs eventArgs) => this.mnuFilePrint_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFilePrint_Click(object eventSender, EventArgs eventArgs)
    {
      try
      {
        Main.pd.PrintPage += new PrintPageEventHandler(Main.PrintMe);
        PrintDialog printDialog = new PrintDialog();
        Main.Index = (short) 0;
        Main.count = 0;
        Main.y = 0;
        Main.nPage = 1;
        printDialog.Document = Main.pd;
        printDialog.AllowSomePages = false;
        if (printDialog.ShowDialog() != DialogResult.OK)
          return;
        Main.pd.Print();
      }
      finally
      {
      }
    }

    public void mnuFileSave_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileSave_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileSave_Click(object eventSender, EventArgs eventArgs)
    {
      Main.nChange = (short) 1;
      bool Cancel = false;
      this.StartApply(ref Cancel);
    }

    public void mnuFileSetup_Popup(object eventSender, EventArgs eventArgs) => this.mnuFileSetup_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuFileSetup_Click(object eventSender, EventArgs eventArgs)
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        this.PageSetupDlg.Document = Main.pd;
        int num3 = (int) this.PageSetupDlg.ShowDialog();
        goto label_6;
label_1:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_6;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num4;
        if (ex is Exception & num1 != 0 & num4 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_1;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_6:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void mnuHelpAbout_Popup(object eventSender, EventArgs eventArgs) => this.mnuHelpAbout_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuHelpAbout_Click(object eventSender, EventArgs eventArgs) => frmAbout.DefInstance.Show();

    public void mnuHelpSearch_Popup(object eventSender, EventArgs eventArgs) => this.mnuHelpSearch_Click(RuntimeHelpers.GetObjectValue(eventSender), eventArgs);

    public void mnuHelpSearch_Click(object eventSender, EventArgs eventArgs) => SendKeys.Send("{F1}");

    private void tbsMain_ClickEvent(object eventSender, EventArgs eventArgs)
    {
      short index = Main.CurrentTab();
      NewLateBinding.LateSetComplex(this.cmdAdd[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) true
      }, (string[]) null, (System.Type[]) null, false, true);
      NewLateBinding.LateSetComplex(this.cmdEdit[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) false
      }, (string[]) null, (System.Type[]) null, false, true);
      NewLateBinding.LateSetComplex(this.cmdRemove[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) false
      }, (string[]) null, (System.Type[]) null, false, true);
      NewLateBinding.LateSetComplex(this.lvwAlias[(int) index], (System.Type) null, "Enabled", new object[1]
      {
        (object) true
      }, (string[]) null, (System.Type[]) null, false, true);
      NewLateBinding.LateCall(this.fraMain[(int) index], (System.Type) null, "BringToFront", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      switch (index)
      {
        case 0:
          NewLateBinding.LateSetComplex(this.cmdAdd[1], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.cmdEdit[1], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.cmdRemove[1], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.lvwAlias[1], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          break;
        case 1:
          NewLateBinding.LateSetComplex(this.cmdAdd[0], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.cmdEdit[0], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.cmdRemove[0], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          NewLateBinding.LateSetComplex(this.lvwAlias[0], (System.Type) null, "Enabled", new object[1]
          {
            (object) false
          }, (string[]) null, (System.Type[]) null, false, true);
          break;
      }
      NewLateBinding.LateCall(this.cmdAdd[(int) index], (System.Type) null, "Focus", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    public class ColumnSort : IComparer
    {
      private int colNum;

      public ColumnSort(int column_to_sort) => this.colNum = column_to_sort;

      public int Compare(object x, object y)
      {
        ListViewItem listViewItem1 = (ListViewItem) x;
        ListViewItem listViewItem2 = (ListViewItem) y;
        return listViewItem1.ListView.Sorting != SortOrder.Ascending ? string.Compare(listViewItem1.SubItems[this.colNum].Text, listViewItem2.SubItems[this.colNum].Text) : checked (string.Compare(listViewItem1.SubItems[this.colNum].Text, listViewItem2.SubItems[this.colNum].Text) * -1);
      }
    }
  }
}
