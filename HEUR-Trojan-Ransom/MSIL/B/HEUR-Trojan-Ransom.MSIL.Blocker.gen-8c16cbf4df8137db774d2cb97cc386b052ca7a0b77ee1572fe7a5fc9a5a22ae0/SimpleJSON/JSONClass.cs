// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: SZGenericArrayEnumerat, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E834FD24-872B-47C0-BFE1-9B14E3D5CFBB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8c16cbf4df8137db774d2cb97cc386b052ca7a0b77ee1572fe7a5fc9a5a22ae0.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1725398112;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -732294982)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -1341236433;
              continue;
            case 2:
              int num3 = flag ? 406599671 : (num3 = 1516981229);
              num1 = num3 ^ (int) num2 * 1937589319;
              continue;
            case 4:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -2137403831 ^ -172219764;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -263112265 ^ 587300224;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_5;
label_1:
        int num1 = 1657317568;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 621282341)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 1469519369 ^ 1581787702;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              goto label_5;
            case 4:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -438095432 ^ -872552943;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:
        return;
label_5:
        this.m_Dict.Add(aKey, value);
        num1 = 1669741474;
        goto label_2;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -994576342;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -727728486)) % 9U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = -1355497767;
              continue;
            case 1:
              num1 = (int) num2 * 438770257 ^ -1478680892;
              continue;
            case 2:
              int num4 = flag ? 1700534599 : (num4 = 1025356151);
              num1 = num4 ^ (int) num2 * 443163168;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1704087834 ^ -1017617781;
              continue;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 447538649 ^ -210255056;
                continue;
              }
              num3 = 1;
              break;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * 857229081 ^ 153819100;
              continue;
            case 8:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = -172179916;
        }
label_13:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -1060651194;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1230798917)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              goto label_4;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 904388112 ^ -995943493;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_4:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 != 0 ? -477559172 : (num1 = -110086709);
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -226833771;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1455912606)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -508522739 ^ 1147581989;
              continue;
            case 3:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1800757973 ^ 288350322;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -634148113;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2051971915)) % 13U)
        {
          case 0:
            this.m_Dict.Add(aKey, aItem);
            num1 = -117174081;
            continue;
          case 1:
            num1 = (int) num2 * -327238215 ^ 147588980;
            continue;
          case 2:
            num1 = (int) num2 * -1508582175 ^ 1065291372;
            continue;
          case 3:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -2089820244 ^ 2106863538;
            continue;
          case 4:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1847587625 ^ 758593605;
            continue;
          case 5:
            num1 = (int) num2 * 370405612 ^ 2016088678;
            continue;
          case 6:
            num1 = (int) num2 * -484762608 ^ -624900707;
            continue;
          case 7:
            goto label_3;
          case 8:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -490083244;
            continue;
          case 9:
            num1 = -1967021918;
            continue;
          case 10:
            goto label_1;
          case 11:
            int num3 = JSONClass.\u206A‍⁯‏⁮⁪⁫‏‪‍‬⁯‎⁬‮‭‏‫‍‏‍⁮⁯⁬⁪‌‎⁪‭​⁮‪⁫⁮⁬‮⁪⁯‏‎‮(aKey) ? 1822931755 : (num3 = 92140490);
            num1 = num3 ^ (int) num2 * 417913579;
            continue;
          case 12:
            int num4 = flag ? 2055173684 : (num4 = 714907340);
            num1 = num4 ^ (int) num2 * 1770529942;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -2017889929;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -839125260)) % 8U)
        {
          case 0:
            jsonNode1 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = -665599774;
            continue;
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1925281207 ^ 1760302168;
            continue;
          case 2:
            int num3 = !flag ? 1561920168 : (num3 = 1408295969);
            num1 = num3 ^ (int) num2 * 1522748226;
            continue;
          case 3:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1532730753 ^ -651815181;
            continue;
          case 5:
            num1 = (int) num2 * -1074024703 ^ 356044053;
            continue;
          case 6:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1266662812 ^ 1728011320;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1543651042;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -17453389)) % 8U)
        {
          case 0:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1691081893 ^ -894086869;
            continue;
          case 3:
            num1 = (int) num2 * -1243043084 ^ -309833403;
            continue;
          case 4:
            int num4 = flag ? -1094285766 : (num4 = -1361967603);
            num1 = num4 ^ (int) num2 * 867290632;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -836563881 ^ -349174648;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = -1986147783;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -1805704529;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 481830432;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1337969633)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 382110942 ^ -511265802;
            continue;
          case 1:
            str = "{";
            num1 = (int) num2 * -151374006 ^ 1471652811;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? 1666133622 : (num3 = 1153530860);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1337969633)) % 8U)
          {
            case 0:
              int num5 = JSONClass.\u200E‭‫⁬⁮‎‎‏‭‮‮‌⁮‪‬‎⁯⁫⁯‭‍‌⁮‍‪‎⁮‌⁮‌‫‮‏‬‬‍‫‭⁮‏‮(str) <= 2 ? 1909128277 : (num5 = 400192175);
              num3 = num5 ^ (int) num4 * 615276234;
              continue;
            case 1:
              num3 = (int) num4 * 590781971 ^ -1560877656;
              continue;
            case 2:
              goto label_12;
            case 3:
              num3 = 1666133622;
              continue;
            case 4:
              str = JSONClass.\u206A⁮‭⁭⁭⁮⁪‫‫⁮‏⁬‫‫⁮‌‍​‏⁪‍‭‎‎‬⁫‌‬⁮‬‮‌‮‪‏⁬​‭⁮‭‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200F‍‫‮‭‍‎‫​​‪​⁪⁪‌‌⁯‎⁪⁫‭⁫⁫‮⁫⁪⁯‭‎‍‬‬⁮⁭⁬⁬‌⁭⁪⁭‮((object) current.Value)
              });
              num3 = 1055434704;
              continue;
            case 6:
              str = JSONClass.\u202E⁫⁮​⁬‍⁮​⁭⁪⁭‭⁪‪‬‬⁭⁮​‏‌‬‎⁮‎‍⁭‫​‬⁫‭⁫⁯‪‌‭‎⁫⁪‮(str, ", ");
              num3 = (int) num4 * -172966551 ^ -374576693;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = 2060672649;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      return JSONClass.\u202E⁫⁮​⁬‍⁮​⁭⁪⁭‭⁪‪‬‬⁭⁮​‏‌‬‎⁮‎‍⁭‫​‬⁫‭⁫⁯‪‌‭‎⁫⁪‮(str, "}");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1372427650;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 237173723)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * 1812271105 ^ 1789277360;
            continue;
          case 2:
            num1 = (int) num2 * 1142088916 ^ -2065225780;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_10:
        int num3 = !enumerator.MoveNext() ? 1263560580 : (num3 = 799528903);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 237173723)) % 7U)
          {
            case 0:
              str1 = JSONClass.\u200B‏‍‭‫‌‌‏⁫⁬​⁫‮‫‪​‎‭‬⁮‭‌‫‬‌⁬‎⁮‮‏‮‭‍‮⁯⁫⁯‭‍‭‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u206A⁮‭⁭⁭⁮⁪‫‫⁮‏⁬‫‫⁮‌‍​‏⁪‍‭‎‎‬⁫‌‬⁮‬‮‌‮‪‏⁬​‭⁮‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202E⁫⁮​⁬‍⁮​⁭⁪⁭‭⁪‪‬‬⁭⁮​‏‌‬‎⁮‎‍⁭‫​‬⁫‭⁫⁯‪‌‭‎⁫⁪‮(aPrefix, "   "))
              });
              num3 = 275128912;
              continue;
            case 2:
              goto label_10;
            case 3:
              str1 = JSONClass.\u202E⁫⁮​⁬‍⁮​⁭⁪⁭‭⁪‪‬‬⁭⁮​‏‌‬‎⁮‎‍⁭‫​‬⁫‭⁫⁯‪‌‭‎⁫⁪‮(str1, ", ");
              num3 = (int) num4 * -1009613826 ^ 605198486;
              continue;
            case 4:
              num3 = (int) num4 * 333321295 ^ -1939861370;
              continue;
            case 5:
              num3 = 799528903;
              continue;
            case 6:
              current = enumerator.Current;
              int num5;
              num3 = num5 = JSONClass.\u200E‭‫⁬⁮‎‎‏‭‮‮‌⁮‪‬‎⁯⁫⁯‭‍‌⁮‍‪‎⁮‌⁮‌‫‮‏‬‬‍‫‭⁮‏‮(str1) <= 3 ? 1119525294 : (num5 = 1110785215);
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 1647164038;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 237173723)) % 3U)
          {
            case 0:
              goto label_15;
            case 2:
              num6 = (int) num7 * 1654579727 ^ -1509292058;
              continue;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u200B‏‍‭‫‌‌‏⁫⁬​⁫‮‫‪​‎‭‬⁮‭‌‫‬‌⁬‎⁮‮‏‮‭‍‮⁯⁫⁯‭‍‭‮(str1, "\n", aPrefix, "}");
label_20:
      int num8 = 1567132559;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 237173723)) % 3U)
        {
          case 0:
            goto label_20;
          case 2:
            num8 = (int) num9 * -2016824446 ^ -302584421;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -168065580;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -402621069)) % 6U)
        {
          case 0:
            num1 = (int) num2 * -1665330555 ^ 487660592;
            continue;
          case 1:
            JSONClass.\u206F⁮⁮‭‮⁯​‫⁫⁭⁫⁭‮‏‮⁫‫⁮⁪‪‮⁭‏‮⁮‎‬‭‭‭‬‪‫‭‫⁪⁪‮‎‮‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1607268427 ^ 2059045732;
            continue;
          case 2:
            num1 = (int) num2 * 1680466042 ^ -881247555;
            continue;
          case 4:
            goto label_1;
          case 5:
            JSONClass.\u202E‍​​‍​⁯⁭⁫​‍‏‫‏⁮⁬‪‭⁮‌‭⁫‬‪‏⁬‏‍⁯‫‏‏⁮‪‪‫‎‏⁭‮‮(aWriter, (byte) 2);
            num1 = (int) num2 * -1221724838 ^ 82082096;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_15:
        int num3 = enumerator.MoveNext() ? -1294146619 : (num3 = -143762406);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -402621069)) % 6U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -412070912 ^ -133869473;
              continue;
            case 1:
              JSONClass.\u206F‮⁫⁯‏⁫⁪‬⁫‏‏‪⁯‮‬⁭⁭‫⁮‮‏​⁪‮‌​⁪​‌⁮‎⁪⁭⁯⁮⁭‍​‭‬‮(aWriter, current);
              num3 = (int) num4 * 1655637452 ^ -1683309441;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -923496010;
              continue;
            case 3:
              goto label_16;
            case 4:
              goto label_15;
            case 5:
              num3 = -1294146619;
              continue;
            default:
              goto label_11;
          }
        }
label_16:
        return;
label_11:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 1957124260;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 533538256)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1924930339 ^ 1351703156;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u206A‍⁯‏⁮⁪⁫‏‪‍‬⁯‎⁬‮‭‏‫‍‏‍⁮⁯⁬⁪‌‎⁪‭​⁮‪⁫⁮⁬‮⁪⁯‏‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200E‭‫⁬⁮‎‎‏‭‮‮‌⁮‪‬‎⁯⁫⁯‭‍‌⁮‍‪‎⁮‌⁮‌‫‮‏‬‬‍‫‭⁮‏‮([In] string obj0) => obj0.Length;

    static string \u202E⁫⁮​⁬‍⁮​⁭⁪⁭‭⁪‪‬‬⁭⁮​‏‌‬‎⁮‎‍⁭‫​‬⁫‭⁫⁯‪‌‭‎⁫⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200F‍‫‮‭‍‎‫​​‪​⁪⁪‌‌⁯‎⁪⁫‭⁫⁫‮⁫⁪⁯‭‎‍‬‬⁮⁭⁬⁬‌⁭⁪⁭‮([In] object obj0) => obj0.ToString();

    static string \u206A⁮‭⁭⁭⁮⁪‫‫⁮‏⁬‫‫⁮‌‍​‏⁪‍‭‎‎‬⁫‌‬⁮‬‮‌‮‪‏⁬​‭⁮‭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200B‏‍‭‫‌‌‏⁫⁬​⁫‮‫‪​‎‭‬⁮‭‌‫‬‌⁬‎⁮‮‏‮‭‍‮⁯⁫⁯‭‍‭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202E‍​​‍​⁯⁭⁫​‍‏‫‏⁮⁬‪‭⁮‌‭⁫‬‪‏⁬‏‍⁯‫‏‏⁮‪‪‫‎‏⁭‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F⁮⁮‭‮⁯​‫⁫⁭⁫⁭‮‏‮⁫‫⁮⁪‪‮⁭‏‮⁮‎‬‭‭‭‬‪‫‭‫⁪⁪‮‎‮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206F‮⁫⁯‏⁫⁪‬⁫‏‏‪⁯‮‬⁭⁭‫⁮‮‏​⁪‮‌​⁪​‌⁮‎⁪⁭⁯⁮⁭‍​‭‬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
