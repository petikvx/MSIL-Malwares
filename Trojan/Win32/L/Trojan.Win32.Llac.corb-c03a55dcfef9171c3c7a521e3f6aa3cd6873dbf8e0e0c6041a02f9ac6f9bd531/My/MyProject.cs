// Decompiled with JetBrains decompiler
// Type: Sk1dZ__Crypter_Stub.My.MyProject
// Assembly: Sk1dZ™ Crypter Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 765DE0A6-3ADE-4E57-B9F8-38E417A60863
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.corb-c03a55dcfef9171c3c7a521e3f6aa3cd6873dbf8e0e0c6041a02f9ac6f9bd531.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Forms;

namespace Sk1dZ__Crypter_Stub.My
{
  [GeneratedCode("MyTemplate", "10.0.0.0")]
  [HideModuleName]
  [StandardModule]
  internal sealed class MyProject
  {
    private static readonly MyProject.Ⴍ<MyComputer> Ⴄ;
    private static readonly MyProject.Ⴍ<MyApplication> Ⴄ;
    private static readonly MyProject.Ⴍ<User> Ⴀ;
    private static MyProject.Ⴍ<MyProject.Ⴄ> Ⴓ;
    private static readonly MyProject.Ⴍ<MyProject.Ⴃ> Ⴓ;

    [SecuritySafeCritical]
    static MyProject()
    {
      Ⴈ.Ⴓ.ႣႼ();
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 0:
            num = 1;
            continue;
          case 1:
            goto label_6;
          case 2:
            MyProject.Ⴀ = new MyProject.Ⴍ<User>();
            MyProject.Ⴓ = new MyProject.Ⴍ<MyProject.Ⴄ>();
            MyProject.Ⴓ = new MyProject.Ⴍ<MyProject.Ⴃ>();
            goto case 0;
          case 3:
            MyProject.Ⴄ = new MyProject.Ⴍ<MyApplication>();
            goto case 2;
          default:
            MyProject.Ⴄ = new MyProject.Ⴍ<MyComputer>();
            goto case 3;
        }
      }
label_6:;
    }

    [HelpKeyword("My.Computer")]
    internal static MyComputer Ⴗ => MyProject.Ⴄ.Ⴍ();

    [HelpKeyword("My.Application")]
    internal static MyApplication Ⴐ => MyProject.Ⴄ.Ⴍ();

    [HelpKeyword("My.User")]
    internal static User Ⴄ => MyProject.Ⴀ.Ⴍ();

    [HelpKeyword("My.Forms")]
    internal static MyProject.Ⴄ Ⴄ => MyProject.Ⴓ.Ⴍ();

    [HelpKeyword("My.WebServices")]
    internal static MyProject.Ⴃ Ⴀ => MyProject.Ⴓ.Ⴍ();

    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class Ⴄ
    {
      public Form1 Ⴈ;
      [ThreadStatic]
      private static Hashtable Ⴄ;

      [SpecialName]
      public Form1 Ⴐ()
      {
        this.Ⴈ = MyProject.Ⴄ.Ⴃ<Form1>(this.Ⴈ);
        return this.Ⴈ;
      }

      [SpecialName]
      public void Ⴅ(Form1 Ⴄ)
      {
        int num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_7;
            case 1:
            case 4:
              goto label_5;
            case 3:
              goto label_8;
            case 6:
              this.Ⴄ<Form1>(ref this.Ⴈ);
              num = 3;
              continue;
            case 7:
              num = 3;
              continue;
            case 8:
              num = Ⴄ == null ? 6 : 4;
              continue;
            default:
              num = Ⴄ != this.Ⴈ ? 8 : 7;
              continue;
          }
        }
label_7:
        return;
label_8:
        return;
label_5:
        throw new ArgumentException(Ⴈ.Ⴓ.Ⴜ(1257221756, 6));
      }

      private static T Ⴃ<T>(T Ⴀ) where T : Form, new()
      {
label_3:
        int num1 = (object) Ⴀ == null ? 10 : 3;
        while (true)
        {
          bool flag;
          int num2;
          switch (num1)
          {
            case 0:
              num1 = !flag ? 7 : 1;
              continue;
            case 1:
              goto label_12;
            case 2:
              num2 = 0;
              break;
            case 3:
              num1 = Ⴀ.IsDisposed ? 10 : 2;
              continue;
            case 4:
              num1 = MyProject.Ⴄ.Ⴄ == null ? 9 : 6;
              continue;
            case 5:
            case 13:
            case 15:
              // ISSUE: type reference
              MyComputer.ႥႳ(MyProject.Ⴄ.Ⴄ, (object) Ⴈ.Ⴗ.Ⴅ(__typeref (T), 954, 976), (object) null, 955, 998);
              goto case 14;
            case 6:
              // ISSUE: type reference
              flag = Ⴈ.Ⴈ.ႠႠ(MyProject.Ⴄ.Ⴄ, (object) Ⴈ.Ⴗ.Ⴅ(__typeref (T), 684, 710), 813, 796);
              num1 = 0;
              continue;
            case 7:
              num1 = 15;
              continue;
            case 9:
              MyProject.Ⴄ.Ⴄ = new Hashtable();
              num1 = 15;
              continue;
            case 10:
              num2 = 1;
              break;
            case 11:
              goto label_3;
            case 12:
              goto label_17;
            case 14:
              num1 = 12;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MyProject.Ⴄ.Ⴃ);
              num1 = 11;
              continue;
          }
          if (num2 != 0)
            num1 = 4;
          else
            goto label_27;
        }
label_12:
        throw new InvalidOperationException(Ⴈ.Ⴓ.ႣႷ(Ⴈ.Ⴓ.Ⴜ(1257221780, 8), new string[0], 342, 331));
label_17:
        T obj;
        try
        {
          switch (0)
          {
            case 3:
            case 4:
              break;
            default:
              obj = new T();
              goto label_29;
          }
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          Ⴈ.Ⴓ.ႣႠ((Exception) ex, 444, 426);
          if (Ⴈ.Ⴓ.Ⴍ.ႤႤ((Exception) ex, 317, 358) != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString(Ⴈ.Ⴓ.Ⴜ(1257221823, 0), Ⴈ.Ⴗ.ႷႠ(Ⴈ.Ⴓ.Ⴍ.ႤႤ((Exception) ex, 142, 213), 483, 389)), ex.InnerException);
        }
        finally
        {
          switch (0)
          {
            case 2:
            case 3:
            default:
              MyProject.Ⴄ.Ⴄ.Remove((object) typeof (T));
              goto case 2;
          }
        }
        int num3 = 6;
label_25:
        while (true)
        {
          switch (num3)
          {
            case 0:
            case 3:
            case 7:
              goto label_27;
            case 2:
              goto label_29;
            case 5:
              num3 = 2;
              continue;
            default:
              num3 = 5;
              continue;
          }
        }
label_27:
        obj = Ⴀ;
        num3 = 2;
        goto label_25;
label_29:
        return obj;
      }

      private void Ⴄ<T>(ref T Ⴐ) where T : Form
      {
        int num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_4;
            case 3:
              num = 4;
              continue;
            case 4:
              goto label_5;
            default:
              Ⴐ.Dispose();
              Ⴐ = default (T);
              goto case 3;
          }
        }
label_4:
        return;
label_5:;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴄ()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object Ⴐ) => base.Equals(Ⴈ.Ⴗ.Ⴄ(Ⴐ, 426, 497));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type Ⴀ() => Ⴈ.Ⴗ.Ⴅ(__typeref (MyProject.Ⴄ), 831, 853);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [SecuritySafeCritical]
      static Ⴄ() => Ⴈ.Ⴓ.ႣႼ();
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class Ⴃ
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object Ⴅ) => base.Equals(Ⴈ.Ⴗ.Ⴄ(Ⴅ, 15, 84));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type Ⴃ() => Ⴈ.Ⴗ.Ⴅ(__typeref (MyProject.Ⴃ), 30, 116);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      private static T Ⴍ<T>(T Ⴍ) where T : new()
      {
label_3:
        int num = (object) Ⴍ != null ? 8 : 7;
        T obj;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 9:
              goto label_8;
            case 1:
            case 4:
              goto label_3;
            case 2:
              num = 0;
              continue;
            case 3:
            case 7:
              obj = new T();
              num = 0;
              continue;
            case 6:
              num = 2;
              continue;
            case 8:
              obj = Ⴍ;
              num = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MyProject.Ⴃ.Ⴍ);
              num = 4;
              continue;
          }
        }
label_8:
        return obj;
      }

      private void Ⴅ<T>(ref T Ⴓ) => Ⴓ = default (T);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴃ()
      {
      }

      [SecuritySafeCritical]
      static Ⴃ() => Ⴈ.Ⴓ.ႣႼ();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class Ⴍ<Ⴅ> where Ⴅ : new()
    {
      [ThreadStatic]
      private static Ⴅ Ⴍ;

      [SpecialName]
      internal Ⴅ Ⴍ()
      {
label_3:
        int num = (object) MyProject.Ⴍ<Ⴅ>.Ⴍ != null ? 2 : 5;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 2:
            case 4:
              goto label_5;
            case 1:
              goto label_3;
            case 3:
              goto label_6;
            case 5:
              MyProject.Ⴍ<Ⴅ>.Ⴍ = new Ⴅ();
              num = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MyProject.Ⴍ<>.Ⴍ);
              num = 1;
              continue;
          }
        }
label_5:
        Ⴅ ⴍ = MyProject.Ⴍ<Ⴅ>.Ⴍ;
label_6:
        return ⴍ;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴍ()
      {
      }

      [SecuritySafeCritical]
      static Ⴍ() => Ⴈ.Ⴓ.ႣႼ();
    }
  }
}
