// Decompiled with JetBrains decompiler
// Type: Tetris.Managers.Mock
// Assembly: SMALLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6D2A6844-DF52-4C3E-A39E-6BCAB729CFBF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-cb64837983ad6cdbc07df3dc8272a72b4d1b41314b797cc4f9bb67cd37f7b0f5.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Tetris.Managers
{
  public class Mock : IDisposable
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Mock(int max_config, int reg_max)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              // ISSUE: reference to a compiler-generated method
              this.SearchServer(Mock.\u202B⁫‫⁬⁫⁬⁪‬⁮‪⁯⁬‮⁫‌‏‏‍‪‏‭‪⁭⁬⁯‌‏⁬‌⁭​⁯⁭‎‭‭​‫‬‪‮(this.IncludeServer()));
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_7;
            case 1:
            case 3:
              // ISSUE: reference to a compiler-generated method
              this.CalculateServer((Image) Mock.\u202D‭‍‮‬‌⁪‫‎⁬⁮‬⁭⁪⁭‮‮‬⁪‮‮‍⁯⁫‌⁮⁭‪⁫⁬‪​‫​‌‌‭‬‬‍‮(max_config, reg_max));
              goto case 0;
            case 4:
              goto label_5;
            case 5:
              goto label_9;
            default:
              num2 = 0;
              continue;
          }
        }
label_5:
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num1 = 3;
      }
label_9:
      return;
label_7:;
    }

    [CompilerGenerated]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Image IncludeServer() => this.state;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Dispose()
    {
      // ISSUE: reference to a compiler-generated method
      Mock.\u206A‮⁫‮‌‪‪‪‌‌⁫⁭⁫‪⁯‏‍‪‬‫⁮‬‏⁯‪‬​‭‍‪⁪⁯⁪⁮‬‭⁪⁮​‏‮(this.InvokeServer());
label_1:
      int num1 = 312989746;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1004092903)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            // ISSUE: reference to a compiler-generated method
            this.CalculateServer((Image) null);
            num1 = (int) num2 * -1054946620 ^ 351289713;
            continue;
          case 2:
            num1 = (int) num2 * 592449791 ^ -26716655;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void GetServer(Image reference, Point result) => Mock.\u206D‭⁪‭⁬⁮‍⁫‏‏⁯‭‏‭‫‫⁫‎⁪‍‪⁮⁫‎‌‍‎⁬‏⁯‮‪‍⁬⁫​‬⁭‫⁯‮(this.InvokeServer(), reference, result.X, result.Y, Mock.\u202A⁮‎‍‫‌⁪‬‭⁫‏⁫⁪⁭‏‭⁬⁯⁭‍‬‍‭‍‬‌⁪⁮‪‎‪‮‮‭‌⁬‫‮⁯‍‮(reference), Mock.\u200D⁮‮⁮‪‎‍⁫‪‬⁬‫⁮⁬‫⁭⁮⁫‭‍‪‬‫⁮​​‫‬​‫‪‮‍⁮‎⁪‭⁭⁪⁪‮(reference));

    internal static bool RunPrototype() => true;

    internal static bool VerifyPrototype() => false;

    static Bitmap \u202D‭‍‮‬‌⁪‫‎⁬⁮‬⁭⁪⁭‮‮‬⁪‮‮‍⁯⁫‌⁮⁭‪⁫⁬‪​‫​‌‌‭‬‬‍‮([In] int obj0, [In] int obj1) => new Bitmap(obj0, obj1);

    static Graphics \u202B⁫‫⁬⁫⁬⁪‬⁮‪⁯⁬‮⁫‌‏‏‍‪‏‭‪⁭⁬⁯‌‏⁬‌⁭​⁯⁭‎‭‭​‫‬‪‮([In] Image obj0) => Graphics.FromImage(obj0);

    static void \u206A‮⁫‮‌‪‪‪‌‌⁫⁭⁫‪⁯‏‍‪‬‫⁮‬‏⁯‪‬​‭‍‪⁪⁯⁪⁮‬‭⁪⁮​‏‮([In] Graphics obj0) => obj0.Dispose();

    static int \u202A⁮‎‍‫‌⁪‬‭⁫‏⁫⁪⁭‏‭⁬⁯⁭‍‬‍‭‍‬‌⁪⁮‪‎‪‮‮‭‌⁬‫‮⁯‍‮([In] Image obj0) => obj0.Width;

    static int \u200D⁮‮⁮‪‎‍⁫‪‬⁬‫⁮⁬‫⁭⁮⁫‭‍‪‬‫⁮​​‫‬​‫‪‮‍⁮‎⁪‭⁭⁪⁪‮([In] Image obj0) => obj0.Height;

    static void \u206D‭⁪‭⁬⁮‍⁫‏‏⁯‭‏‭‫‫⁫‎⁪‍‪⁮⁫‎‌‍‎⁬‏⁯‮‪‍⁬⁫​‬⁭‫⁯‮(
      [In] Graphics obj0,
      [In] Image obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5)
    {
      obj0.DrawImage(obj1, obj2, obj3, obj4, obj5);
    }
  }
}
