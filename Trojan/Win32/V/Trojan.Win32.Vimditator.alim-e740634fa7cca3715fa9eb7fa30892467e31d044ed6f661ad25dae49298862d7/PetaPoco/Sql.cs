// Decompiled with JetBrains decompiler
// Type: PetaPoco.Sql
// Assembly: PolicyExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 52F55652-F9DF-416D-B2DD-AA6DA3298B76
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan.Win32.Vimditator.alim-e740634fa7cca3715fa9eb7fa30892467e31d044ed6f661ad25dae49298862d7.exe

using System.Collections.Generic;
using System.Text;

namespace PetaPoco
{
  public class Sql
  {
    private string _sql;
    private object[] _args;
    private Sql _rhs;
    private string _sqlFinal;
    private object[] _argsFinal;

    public Sql()
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql(string sql, params object[] args)
    {
      // ISSUE: unable to decompile the method.
    }

    public static Sql Builder
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
    }

    private void Build()
    {
      // ISSUE: unable to decompile the method.
    }

    public string SQL
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public object[] Arguments
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public Sql Append(Sql sql)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql Append(string sql, params object[] args)
    {
      // ISSUE: unable to decompile the method.
    }

    private static bool Is(Sql sql, string sqltype)
    {
      // ISSUE: unable to decompile the method.
    }

    private void Build(StringBuilder sb, List<object> args, Sql lhs)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql Where(string sql, params object[] args)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql OrderBy(params object[] columns)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql Select(params object[] columns)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql From(params object[] tables)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql GroupBy(params object[] columns)
    {
      // ISSUE: unable to decompile the method.
    }

    private Sql.SqlJoinClause Join(string JoinType, string table)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql.SqlJoinClause InnerJoin(string table)
    {
      // ISSUE: unable to decompile the method.
    }

    public Sql.SqlJoinClause LeftJoin(string table)
    {
      // ISSUE: unable to decompile the method.
    }

    public class SqlJoinClause
    {
      private readonly Sql _sql;

      public SqlJoinClause(Sql sql)
      {
        // ISSUE: unable to decompile the method.
      }

      public Sql On(string onClause, params object[] args)
      {
        // ISSUE: unable to decompile the method.
      }
    }
  }
}
