// Decompiled with JetBrains decompiler
// Type: B15.A8K
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using KtU;
using l1C;
using OT8;
using Q8f;
using r6A;
using S8D;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace B15
{
  internal sealed class A8K : Stream
  {
    private static readonly int \u0037o9 = 65536;
    private static readonly int ECP = 4;
    private List<t44> \u003613;
    private bool QKx;
    private bool Z31;
    private Stream \u003544;
    private int \u0037O7;
    private int \u00395C = A8K.\u0037o9;
    private AutoResetEvent cTj;
    private object \u003365 = new object();
    private bool To4;
    private bool \u003627;
    private int \u00356q;
    private int \u0037U2;
    private int Vj6;
    private int Pn7;
    private int tB3;
    private ov2 K1p;
    private object J44 = new object();
    private Queue<int> \u00332Y;
    private Queue<int> Q7H;
    private long c3K;
    private PIJ \u0035R3;
    private volatile Exception \u0033E6;
    private bool \u00318X;
    private object R8b = new object();
    private A8K.vRB \u003364 = A8K.vRB.\u0023h | A8K.vRB.\u0023d | A8K.vRB.\u0023k | A8K.vRB.\u0023n | A8K.vRB.\u0023p | A8K.vRB.\u0023q;
    private YNv r1S;

    public A8K([In] Stream obj0, [In] PIJ obj1, [In] YNv obj2, [In] bool obj3)
    {
      this.\u003544 = obj0;
      this.\u0035R3 = obj1;
      this.\u003676(obj2);
      this.QKx = obj3;
      this.\u00394C(16);
    }

    [SpecialName]
    public YNv Nq6() => this.r1S;

    [SpecialName]
    private void \u003676([In] YNv obj0) => this.r1S = obj0;

    [SpecialName]
    public void \u00394C([In] int obj0) => this.\u0037O7 = obj0 >= 4 ? obj0 : throw new ArgumentException("MaxBufferPairs", "Value must be 4 or greater.");

    [SpecialName]
    public void WZ6([In] int obj0) => this.\u00395C = obj0 >= 1024 ? obj0 : throw new ArgumentOutOfRangeException("BufferSize", "BufferSize must be greater than 1024 bytes");

    private void KjP()
    {
      this.\u00332Y = new Queue<int>();
      this.Q7H = new Queue<int>();
      this.\u003613 = new List<t44>();
      int num = Math.Min(A8K.ECP * Environment.ProcessorCount, this.\u0037O7);
      for (int index = 0; index < num; ++index)
      {
        this.\u003613.Add(new t44(this.\u00395C, this.\u0035R3, this.Nq6(), index));
        this.Q7H.Enqueue(index);
      }
      this.cTj = new AutoResetEvent(false);
      this.K1p = new ov2();
      this.\u00356q = -1;
      this.\u0037U2 = -1;
      this.Vj6 = -1;
      this.Pn7 = -1;
    }

    void Stream.i4y([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      bool flag = false;
      if (this.To4)
        throw new InvalidOperationException();
      if (this.\u0033E6 != null)
      {
        this.\u00318X = true;
        Exception exception = this.\u0033E6;
        this.\u0033E6 = (Exception) null;
        throw exception;
      }
      if (obj2 == 0)
        return;
      if (!this.\u003627)
      {
        this.KjP();
        this.\u003627 = true;
      }
      do
      {
        this.\u003341(false, flag);
        flag = false;
        int index;
        if (this.\u00356q >= 0)
          index = this.\u00356q;
        else if (this.Q7H.Count == 0)
        {
          flag = true;
          goto label_19;
        }
        else
        {
          index = this.Q7H.Dequeue();
          ++this.\u0037U2;
        }
        t44 state = this.\u003613[index];
        int count = state.B74.Length - state.l31 > obj2 ? obj2 : state.B74.Length - state.l31;
        state.\u00363w = this.\u0037U2;
        Buffer.BlockCopy((Array) obj0, obj1, (Array) state.B74, state.l31, count);
        obj2 -= count;
        obj1 += count;
        state.l31 += count;
        if (state.l31 == state.B74.Length)
        {
          if (!ThreadPool.QueueUserWorkItem(new WaitCallback(this.If7), (object) state))
            throw new Exception("Cannot enqueue workitem");
          this.\u00356q = -1;
        }
        else
          this.\u00356q = index;
label_19:;
      }
      while (obj2 > 0);
    }

    private void RxD()
    {
      byte[] buffer = new byte[128];
      \u0033t2 obj = new \u0033t2();
      obj.\u003873(this.\u0035R3, false);
      obj.\u0033Dp = (byte[]) null;
      obj.X7k = 0;
      obj.\u0032Dc = 0;
      obj.H2D = buffer;
      obj.\u00338b = 0;
      obj.\u0031G5 = buffer.Length;
      switch (obj.\u0039E2(F9i.\u0023e))
      {
        case 0:
        case 1:
          if (buffer.Length - obj.\u0031G5 > 0)
            this.\u003544.Write(buffer, 0, buffer.Length - obj.\u0031G5);
          obj.\u003477();
          this.tB3 = this.K1p.\u0033D4;
          break;
        default:
          throw new Exception("deflating: " + obj.\u00335v);
      }
    }

    private void Wk2([In] bool obj0)
    {
      if (this.To4)
        throw new InvalidOperationException();
      if (this.Z31)
        return;
      if (this.\u00356q >= 0)
      {
        this.If7((object) this.\u003613[this.\u00356q]);
        this.\u00356q = -1;
      }
      if (obj0)
      {
        this.\u003341(true, false);
        this.RxD();
      }
      else
        this.\u003341(false, false);
    }

    void Stream.Od3()
    {
      if (this.\u0033E6 != null)
      {
        this.\u00318X = true;
        Exception exception = this.\u0033E6;
        this.\u0033E6 = (Exception) null;
        throw exception;
      }
      if (this.\u00318X)
        return;
      this.Wk2(false);
    }

    void Stream.\u0035H4() => this.\u0039Bh();

    private void \u0039Bh()
    {
      if (this.\u0033E6 != null)
      {
        this.\u00318X = true;
        Exception exception = this.\u0033E6;
        this.\u0033E6 = (Exception) null;
        throw exception;
      }
      if (this.\u00318X || this.To4)
        return;
      this.Wk2(true);
      if (!this.QKx)
        this.\u003544.Dispose();
      this.To4 = true;
    }

    public void j2y()
    {
      this.\u003613 = (List<t44>) null;
      ((Stream) this).Dispose(true);
    }

    void Stream.\u00371T([In] bool obj0)
    {
      // ISSUE: explicit non-virtual call
      __nonvirtual (((Stream) this).Dispose(obj0));
      this.\u0039Bh();
    }

    public void \u00324I([In] Stream obj0)
    {
      if (!this.\u003627)
        return;
      this.\u00332Y.Clear();
      this.Q7H.Clear();
      foreach (t44 t44 in this.\u003613)
      {
        this.Q7H.Enqueue(t44.W89);
        t44.\u00363w = -1;
      }
      this.\u003627 = false;
      this.c3K = 0L;
      this.K1p = new ov2();
      this.To4 = false;
      this.\u00356q = -1;
      this.\u0037U2 = -1;
      this.Vj6 = -1;
      this.Pn7 = -1;
      this.\u003544 = obj0;
    }

    private void \u003341([In] bool obj0, [In] bool obj1)
    {
      if (this.Z31)
        return;
      this.Z31 = true;
      if (((!obj0 ? 0 : (this.Pn7 != this.\u0037U2 ? 1 : 0)) | (obj1 ? 1 : 0)) != 0)
        this.cTj.WaitOne();
      do
      {
        int num = -1;
        int millisecondsTimeout = obj0 ? 200 : (obj1 ? -1 : 0);
        int index;
        do
        {
          if (Monitor.TryEnter((object) this.\u00332Y, millisecondsTimeout))
          {
            index = -1;
            try
            {
              if (this.\u00332Y.Count > 0)
                index = this.\u00332Y.Dequeue();
            }
            finally
            {
              Monitor.Exit((object) this.\u00332Y);
            }
            if (index >= 0)
            {
              t44 t44 = this.\u003613[index];
              if (t44.\u00363w != this.Vj6 + 1)
              {
                lock (this.\u00332Y)
                  this.\u00332Y.Enqueue(index);
                if (num == index)
                {
                  this.cTj.WaitOne();
                  num = -1;
                }
                else if (num == -1)
                  num = index;
              }
              else
              {
                num = -1;
                this.\u003544.Write(t44.\u003269, 0, t44.c2h);
                this.K1p.pa2(t44.I3K, t44.l31);
                this.c3K += (long) t44.l31;
                t44.l31 = 0;
                this.Vj6 = t44.\u00363w;
                this.Q7H.Enqueue(t44.W89);
                if (millisecondsTimeout == -1)
                  millisecondsTimeout = 0;
              }
            }
          }
          else
            index = -1;
        }
        while (index >= 0);
      }
      while (obj0 && (this.Vj6 != this.Pn7 || this.Vj6 != this.\u0037U2));
      this.Z31 = false;
    }

    private void If7([In] object obj0)
    {
      t44 t44 = (t44) obj0;
      try
      {
        int w89 = t44.W89;
        ov2 ov2 = new ov2();
        ov2.x74(t44.B74, 0, t44.l31);
        this.B4M(t44);
        t44.I3K = ov2.\u0033D4;
        lock (this.J44)
        {
          if (t44.\u00363w > this.Pn7)
            this.Pn7 = t44.\u00363w;
        }
        lock (this.\u00332Y)
          this.\u00332Y.Enqueue(t44.W89);
        this.cTj.Set();
      }
      catch (Exception ex)
      {
        lock (this.R8b)
        {
          if (this.\u0033E6 == null)
            return;
          this.\u0033E6 = ex;
        }
      }
    }

    private bool B4M([In] t44 obj0)
    {
      \u0033t2 obj = obj0.\u0038Mn;
      obj.\u0032I2();
      obj.X7k = 0;
      obj.\u0032Dc = obj0.l31;
      obj.\u00338b = 0;
      obj.\u0031G5 = obj0.\u003269.Length;
      do
      {
        obj.\u0039E2(F9i.\u0023a);
      }
      while (obj.\u0032Dc > 0 || obj.\u0031G5 == 0);
      obj.\u0039E2(F9i.\u0023c);
      obj0.c2h = (int) obj.\u00314Z;
      return true;
    }

    [SpecialName]
    bool Stream.H3m() => false;

    [SpecialName]
    bool Stream.\u0034p9() => false;

    [SpecialName]
    bool Stream.\u0036Is() => this.\u003544.CanWrite;

    [SpecialName]
    long Stream.Rl5() => throw new NotSupportedException();

    [SpecialName]
    long Stream.MsM() => this.\u003544.Position;

    [SpecialName]
    void Stream.u47([In] long obj0) => throw new NotSupportedException();

    int Stream.Jak([In] byte[] obj0, [In] int obj1, [In] int obj2) => throw new NotSupportedException();

    long Stream.MXh([In] long obj0, [In] SeekOrigin obj1) => throw new NotSupportedException();

    void Stream.\u00313G([In] long obj0) => throw new NotSupportedException();

    [System.Flags]
    private enum vRB : uint
    {
      \u0023a = 0,
      \u0023b = 1,
      \u0023c = 2,
      \u0023d = 4,
      \u0023e = 8,
      \u0023f = 16, // 0x00000010
      \u0023g = 32, // 0x00000020
      \u0023h = \u0023g | \u0023f | \u0023e | \u0023c, // 0x0000003A
      \u0023i = 64, // 0x00000040
      \u0023j = 128, // 0x00000080
      \u0023k = 256, // 0x00000100
      \u0023l = 512, // 0x00000200
      \u0023m = 1024, // 0x00000400
      \u0023n = 2048, // 0x00000800
      \u0023o = 4096, // 0x00001000
      \u0023p = 8192, // 0x00002000
      \u0023q = 16384, // 0x00004000
      \u0023r = 4294967295, // 0xFFFFFFFF
    }
  }
}
