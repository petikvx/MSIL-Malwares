// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.BuildDataFetcher
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Config;
using Cradiator.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;

namespace Cradiator.Model
{
  public class BuildDataFetcher : IConfigObserver
  {
    private readonly ViewUrl _viewUrl;
    private readonly IWebClientFactory _webClientFactory;
    private IWebClient _webClient;

    public BuildDataFetcher(
      ViewUrl viewUrl,
      IConfigSettings configSettings,
      IWebClientFactory webClientFactory)
    {
      this._viewUrl = viewUrl;
      this._webClientFactory = webClientFactory;
      this._webClient = webClientFactory.GetWebClient(configSettings.URL);
      configSettings.AddObserver((IConfigObserver) this);
    }

    public IEnumerable<string> Fetch() => (IEnumerable<string>) this._viewUrl.UriList.Select<string, string>((Func<string, string>) (url =>
    {
      try
      {
        return this._webClient.DownloadString(url);
      }
      catch (WebException ex)
      {
        throw new FetchException(url, (Exception) ex);
      }
    })).ToList<string>();

    public void ConfigUpdated(ConfigSettings newSettings)
    {
      this._viewUrl.Url = newSettings.URL;
      this._webClient = this._webClientFactory.GetWebClient(newSettings.URL);
    }
  }
}
