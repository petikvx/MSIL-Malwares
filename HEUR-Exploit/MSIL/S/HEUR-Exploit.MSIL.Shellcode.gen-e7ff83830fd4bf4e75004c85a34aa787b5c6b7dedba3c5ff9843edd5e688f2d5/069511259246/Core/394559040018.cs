// Decompiled with JetBrains decompiler
// Type: 069511259246.Core.394559040018
// Assembly: 069511259246, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 6D0FD131-484D-4146-B8A3-FCA5C0E4E111
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-e7ff83830fd4bf4e75004c85a34aa787b5c6b7dedba3c5ff9843edd5e688f2d5.exe

using \u003069511259246.Models;
using \u003069511259246.Utils;
using \u003181733712633;
using \u003648212741611;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003069511259246.Core
{
  public static class \u003394559040018
  {
    private static \u003098472891168 \u003086967892253(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003098472891168) null;
      FileInfo fileInfo;
      if (\u003260266606962.\u003512697489482)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003098472891168) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003757499740026) path.\u003629916060826<\u003640062040418>()).get_image().\u003246718848356;
        }
        catch
        {
        }
      }
      \u003098472891168 obj = new \u003098472891168();
      ((\u003623761106756) obj).set_ImageFileName(fullName);
      obj.\u003128686339732 = str;
      obj.\u003760922524763 = "";
      return obj;
    }

    public static IList<\u003756220430457> \u003113905360364()
    {
      List<\u003756220430457> objList1 = new List<\u003756220430457>();
      string path = Path.Combine(\u003792907266257.\u003135826589093(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003756220430457>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003756220430457> objList2 = objList1;
              \u003756220430457 obj = new \u003756220430457();
              obj.\u003446485846600 = str2;
              obj.\u003282731392897 = int.Parse(strArray2[0]);
              obj.\u003186553683853 = int.Parse(strArray2[1]);
              ((\u003066386111273) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003756220430457>) objList1;
    }
  }
}
