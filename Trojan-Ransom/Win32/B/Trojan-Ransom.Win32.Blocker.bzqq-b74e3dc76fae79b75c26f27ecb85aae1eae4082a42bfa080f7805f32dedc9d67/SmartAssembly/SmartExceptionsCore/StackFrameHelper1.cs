// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.StackFrameHelper1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace SmartAssembly.SmartExceptionsCore
{
  public class StackFrameHelper1
  {
    public const string DataEntryName = "SmartStackFrames";

    public static void CreateException0(Exception exception) => StackFrameHelper1.CreateExceptionN(exception, new object[0]);

    public static void CreateException1(Exception exception, object o1) => StackFrameHelper1.CreateExceptionN(exception, new object[1]
    {
      o1
    });

    public static void CreateException2(Exception exception, object o1, object o2) => StackFrameHelper1.CreateExceptionN(exception, new object[2]
    {
      o1,
      o2
    });

    public static void CreateException3(Exception exception, object o1, object o2, object o3) => StackFrameHelper1.CreateExceptionN(exception, new object[3]
    {
      o1,
      o2,
      o3
    });

    public static void CreateException4(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[4]
      {
        o1,
        o2,
        o3,
        o4
      });
    }

    public static void CreateException5(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[5]
      {
        o1,
        o2,
        o3,
        o4,
        o5
      });
    }

    public static void CreateException6(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5,
      object o6)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[6]
      {
        o1,
        o2,
        o3,
        o4,
        o5,
        o6
      });
    }

    public static void CreateException7(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5,
      object o6,
      object o7)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[7]
      {
        o1,
        o2,
        o3,
        o4,
        o5,
        o6,
        o7
      });
    }

    public static void CreateException8(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5,
      object o6,
      object o7,
      object o8)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[8]
      {
        o1,
        o2,
        o3,
        o4,
        o5,
        o6,
        o7,
        o8
      });
    }

    public static void CreateException9(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5,
      object o6,
      object o7,
      object o8,
      object o9)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[9]
      {
        o1,
        o2,
        o3,
        o4,
        o5,
        o6,
        o7,
        o8,
        o9
      });
    }

    public static void CreateException10(
      Exception exception,
      object o1,
      object o2,
      object o3,
      object o4,
      object o5,
      object o6,
      object o7,
      object o8,
      object o9,
      object o10)
    {
      StackFrameHelper1.CreateExceptionN(exception, new object[10]
      {
        o1,
        o2,
        o3,
        o4,
        o5,
        o6,
        o7,
        o8,
        o9,
        o10
      });
    }

    public static void CreateExceptionN(Exception caughtException, object[] objects)
    {
      int methodID = -1;
      int ilOffset = -1;
      int exceptionStackDepth = 0;
      StackTrace stackTrace1 = new StackTrace(caughtException);
      try
      {
        if (caughtException.StackTrace != null)
        {
          string stackTrace2 = caughtException.StackTrace;
          char[] chArray = new char[2]{ '\r', '\n' };
          foreach (string str in stackTrace2.Split(chArray))
          {
            if (str.Length > 0)
              ++exceptionStackDepth;
          }
        }
      }
      catch
      {
        exceptionStackDepth = -1;
      }
      try
      {
        if (stackTrace1.FrameCount > 0)
        {
          StackFrame frame = stackTrace1.GetFrame(stackTrace1.FrameCount - 1);
          methodID = (frame.GetMethod().MetadataToken & 16777215) - 1;
          ilOffset = frame.GetILOffset();
        }
      }
      catch
      {
      }
      try
      {
        SmartStackFrame1 smartStackFrame1 = new SmartStackFrame1(methodID, objects, ilOffset, exceptionStackDepth);
        LinkedList<object> linkedList;
        if (!caughtException.Data.Contains((object) "SmartStackFrames"))
        {
          linkedList = new LinkedList<object>();
          caughtException.Data[(object) "SmartStackFrames"] = (object) linkedList;
        }
        else
          linkedList = (LinkedList<object>) caughtException.Data[(object) "SmartStackFrames"];
        linkedList.AddLast((object) smartStackFrame1);
      }
      catch
      {
      }
    }
  }
}
