// Decompiled with JetBrains decompiler
// Type: rw.Hw0
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace rw
{
  public class Hw0
  {
    private List<string> CHe;
    private static Hw0 gL1;

    public Hw0(string _param1)
    {
      ccw.xFvA3V();
      this.CHe = new List<string>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.tHT(_param1);
    }

    [CompilerGenerated]
    [SpecialName]
    public string LHW() => this.VHF;

    [CompilerGenerated]
    [SpecialName]
    public void tHT(string _param1) => this.VHF = _param1;

    [SpecialName]
    public List<string> yHN() => this.CHe;

    public void jHx(string _param1)
    {
      string[] strArray = _param1.Split('\n', '\r');
      int index = 0;
      while (true)
      {
        if (index < strArray.Length)
          goto label_6;
        else
          goto label_5;
label_1:
        string str;
        bool flag;
        int num1;
        switch (num1)
        {
          case 0:
            goto label_10;
          case 1:
            if (flag)
              this.CHe.Add(str);
            ++index;
            continue;
          default:
            goto label_8;
        }
label_5:
        num1 = !Hw0.YLu() ? 0 : 0;
        goto label_1;
label_6:
        str = strArray[index];
        flag = str.Trim() != string.Empty;
        num1 = 1;
        if (!Hw0.YLu())
        {
          int num2;
          num1 = num2;
          goto label_1;
        }
        else
          goto label_1;
      }
label_10:
      return;
label_8:;
    }

    public override string ToString()
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      StringBuilder stringBuilder;
      while (true)
      {
        switch (num2)
        {
          case 1:
            stringBuilder = new StringBuilder();
            if (Hw0.bLW() == null)
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          case 2:
            goto label_6;
          default:
            string str1 = !this.LHW().StartsWith("override") ? "static " : "";
            stringBuilder.AppendLine("\t\tpublic " + str1 + this.LHW());
            if (Hw0.YLu())
            {
              num2 = 2;
              continue;
            }
            goto label_1;
        }
      }
label_6:
      stringBuilder.AppendLine("\t\t{");
      foreach (string str2 in this.CHe)
        stringBuilder.AppendLine("\t\t\t" + str2);
      stringBuilder.AppendLine("\t\t}");
      return stringBuilder.ToString();
    }

    internal static bool YLu() => Hw0.gL1 == null;

    internal static Hw0 bLW() => Hw0.gL1;
  }
}
