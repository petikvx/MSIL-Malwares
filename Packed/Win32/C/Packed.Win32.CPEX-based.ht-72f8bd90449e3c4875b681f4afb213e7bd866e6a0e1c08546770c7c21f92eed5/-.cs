// Decompiled with JetBrains decompiler
// Type: -
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C369EE2-0F8E-40F6-BD9C-ED440A7013AE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Packed.Win32.CPEX-based.ht-72f8bd90449e3c4875b681f4afb213e7bd866e6a0e1c08546770c7c21f92eed5.exe

using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

[SuppressIldasm]
[StructLayout(LayoutKind.Auto, CharSet = CharSet.Auto)]
internal sealed class \u002D
{
  internal static \u002D.\u002A \u0040;
  internal static byte[] \u0040;
  internal static string[] \u0040;

  private static string \u0040([In] int obj0, [In] int obj1, [In] int obj2)
  {
    if (false)
      ;
    string str = Encoding.Default.GetString(\u002D.\u0040, obj1, obj2);
    \u002D.\u0040[obj0] = str;
    return str;
  }

  public static string \u0040()
  {
    if (false)
      ;
    return \u002D.\u0040[0] ?? \u002D.\u0040(0, 0, 27);
  }

  static \u002D()
  {
    if (false)
      ;
    \u002D.\u0040 = new string[1];
    \u002D.\u0040 = new byte[27]
    {
      (byte) 242,
      (byte) 249,
      (byte) 237,
      (byte) 225,
      (byte) 240,
      (byte) 237,
      (byte) 169,
      (byte) 214,
      (byte) 251,
      (byte) 231,
      (byte) 251,
      (byte) 239,
      byte.MaxValue,
      (byte) 248,
      (byte) 230,
      (byte) 235,
      (byte) 226,
      (byte) 190,
      (byte) 193,
      (byte) 247,
      (byte) 230,
      (byte) 251,
      (byte) 226,
      (byte) 228,
      (byte) 250,
      (byte) 253,
      (byte) 232
    };
    for (int index = 0; index < \u002D.\u0040.Length; ++index)
      \u002D.\u0040[index] = (byte) ((int) \u002D.\u0040[index] ^ index ^ 319987073);
  }

  [SuppressIldasm]
  [StructLayout(LayoutKind.Explicit, Size = 27, Pack = 1)]
  private struct \u002A
  {
  }
}
