// Decompiled with JetBrains decompiler
// Type: DefaultPackage.Fleet
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

namespace DefaultPackage
{
  public class Fleet
  {
    private int owner;
    private int numShips;
    private int sourcePlanet;
    private int destinationPlanet;
    private int totalTripLength;
    private int turnsRemaining;

    public Fleet(
      int owner,
      int numShips,
      int sourcePlanet,
      int destinationPlanet,
      int totalTripLength,
      int turnsRemaining)
    {
label_1:
      int num1 = -1999646647;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1812738285)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            this.owner = owner;
            this.numShips = numShips;
            this.sourcePlanet = sourcePlanet;
            num1 = (int) num2 * -656293420 ^ -1639311357;
            continue;
          case 3:
            num1 = (int) num2 * 2121140077 ^ -520056884;
            continue;
          case 4:
            this.destinationPlanet = destinationPlanet;
            this.totalTripLength = totalTripLength;
            num1 = (int) num2 * 166436080 ^ 1599991279;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      this.turnsRemaining = turnsRemaining;
    }

    public Fleet(int owner, int numShips)
    {
label_1:
      int num1 = 1023078682;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 553047059)) % 8U)
        {
          case 0:
            this.totalTripLength = -1;
            num1 = (int) num2 * 571511026 ^ -669001874;
            continue;
          case 1:
            num1 = (int) num2 * -438400702 ^ -579381125;
            continue;
          case 2:
            this.owner = owner;
            num1 = (int) num2 * 633991000 ^ -1738840619;
            continue;
          case 3:
            this.sourcePlanet = -1;
            num1 = (int) num2 * -688439166 ^ -300077503;
            continue;
          case 4:
            this.destinationPlanet = -1;
            num1 = (int) num2 * 2078330881 ^ -2487441;
            continue;
          case 6:
            this.numShips = numShips;
            num1 = (int) num2 * 1301639628 ^ 855640912;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_9:
      this.turnsRemaining = -1;
    }

    public int Owner()
    {
      int owner = this.owner;
label_1:
      int num1 = 44372453;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1351809751)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1708360544 ^ 176526817;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return owner;
    }

    public int NumShips()
    {
      int numShips = this.numShips;
label_1:
      int num1 = -333205479;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1994935853)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1512432790 ^ 1259535681;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return numShips;
    }

    public int SourcePlanet() => this.sourcePlanet;

    public int DestinationPlanet()
    {
label_1:
      int num1 = 805612994;
      int destinationPlanet;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1960143264)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            destinationPlanet = this.destinationPlanet;
            num1 = (int) num2 * 790274901 ^ 1169967001;
            continue;
          case 3:
            num1 = (int) num2 * -2091446523 ^ 1098678194;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return destinationPlanet;
    }

    public int TotalTripLength() => this.totalTripLength;

    public int TurnsRemaining() => this.turnsRemaining;

    public void RemoveShips(int amount) => this.numShips -= amount;

    public void TimeStep()
    {
      bool flag = this.turnsRemaining > 0;
label_1:
      int num1 = -1236343220;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -139116933)) % 7U)
        {
          case 0:
            this.turnsRemaining = 0;
            num1 = -8702181;
            continue;
          case 1:
            goto label_3;
          case 2:
            int num3 = flag ? 588290421 : (num3 = 401534784);
            num1 = num3 ^ (int) num2 * -162891409;
            continue;
          case 3:
            num1 = (int) num2 * -1777225289 ^ -503330369;
            continue;
          case 4:
            goto label_1;
          case 5:
            --this.turnsRemaining;
            num1 = (int) num2 * -45205678 ^ 2018881078;
            continue;
          case 6:
            num1 = (int) num2 * 569317837 ^ -446179412;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    private Fleet(Fleet _f)
    {
label_1:
      int num1 = -386358346;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -611150085)) % 6U)
        {
          case 0:
            this.numShips = _f.numShips;
            this.sourcePlanet = _f.sourcePlanet;
            num1 = (int) num2 * 922456684 ^ 1140165423;
            continue;
          case 1:
            goto label_3;
          case 2:
            this.owner = _f.owner;
            num1 = (int) num2 * 37753971 ^ -987263123;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.destinationPlanet = _f.destinationPlanet;
            this.totalTripLength = _f.totalTripLength;
            this.turnsRemaining = _f.turnsRemaining;
            num1 = (int) num2 * 862971293 ^ 838753566;
            continue;
          case 5:
            num1 = (int) num2 * 1930550314 ^ 523881693;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }
  }
}
