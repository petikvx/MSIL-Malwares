// Decompiled with JetBrains decompiler
// Type: BatchRunner.Planet
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using botDebug;

namespace BatchRunner
{
  public class Planet : IPlanet
  {
    private int planetID;
    private int owner;
    private int numShips;
    private int growthRate;
    private double x;
    private double y;

    public Planet(int planetID, int owner, int numShips, int growthRate, double x, double y)
    {
label_1:
      int num1 = 1853676476;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 233057060)) % 9U)
        {
          case 0:
            goto label_3;
          case 1:
            this.y = y;
            num1 = (int) num2 * 1256712060 ^ -1747823241;
            continue;
          case 2:
            this.planetID = planetID;
            num1 = (int) num2 * -2018645508 ^ -522219763;
            continue;
          case 3:
            this.owner = owner;
            this.numShips = numShips;
            num1 = (int) num2 * -1518499341 ^ -1097245514;
            continue;
          case 4:
            this.growthRate = growthRate;
            num1 = (int) num2 * -1311117544 ^ -1791282381;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -749337430 ^ -2091253030;
            continue;
          case 7:
            num1 = (int) num2 * 1857311177 ^ 2010123209;
            continue;
          case 8:
            this.x = x;
            num1 = (int) num2 * 1226363470 ^ -1434963468;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    public int PlanetID => this.planetID;

    public int Owner
    {
      get
      {
label_1:
        int num1 = -1243632213;
        int owner;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -887492304)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              owner = this.owner;
              num1 = (int) num2 * 912694972 ^ -974556520;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return owner;
      }
    }

    public int NumShips
    {
      get
      {
        int numShips = this.numShips;
label_1:
        int num1 = 2041522213;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1807968290)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -38433543 ^ 1323012894;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return numShips;
      }
    }

    public int GrowthRate
    {
      get
      {
label_1:
        int num1 = 1053795678;
        int growthRate;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 195243276)) % 3U)
          {
            case 1:
              growthRate = this.growthRate;
              num1 = (int) num2 * 444570064 ^ 1026312853;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return growthRate;
      }
    }

    public double X
    {
      get
      {
label_1:
        int num1 = 591169278;
        double x;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1200354263)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              x = this.x;
              num1 = (int) num2 * 356373712 ^ 1283738001;
              continue;
            case 2:
              num1 = (int) num2 * -1056865511 ^ -965215350;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return x;
      }
    }

    public double Y
    {
      get
      {
        double y = this.y;
label_1:
        int num1 = -1440218019;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -830181720)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -285649662 ^ 1474274652;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return y;
      }
    }

    public void SetOwner(int newOwner) => this.owner = newOwner;

    public void SetNumShips(int newNumShips)
    {
label_1:
      int num1 = 1049571369;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1655066364)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.numShips = newNumShips;
            num1 = (int) num2 * -1474898419 ^ 1721748594;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void AddShips(int amount) => this.numShips += amount;

    public void RemoveShips(int amount) => this.numShips -= amount;

    private Planet(Planet _p)
    {
label_1:
      int num1 = 48515175;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 706743324)) % 7U)
        {
          case 0:
            this.owner = _p.owner;
            this.numShips = _p.numShips;
            num1 = (int) num2 * 347888079 ^ -720040243;
            continue;
          case 1:
            num1 = (int) num2 * -2036244995 ^ 400874607;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.planetID = _p.planetID;
            num1 = (int) num2 * 150483903 ^ -544216267;
            continue;
          case 4:
            this.x = _p.x;
            this.y = _p.y;
            num1 = (int) num2 * -451534048 ^ -1183874028;
            continue;
          case 5:
            this.growthRate = _p.growthRate;
            num1 = (int) num2 * -1766329794 ^ -325770697;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    internal Planet clone()
    {
label_1:
      int num1 = -1293014054;
      Planet planet;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1493982433)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -417313315 ^ 346735488;
            continue;
          case 1:
            planet = new Planet(this);
            num1 = (int) num2 * 1124947660 ^ -2030073213;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return planet;
    }
  }
}
