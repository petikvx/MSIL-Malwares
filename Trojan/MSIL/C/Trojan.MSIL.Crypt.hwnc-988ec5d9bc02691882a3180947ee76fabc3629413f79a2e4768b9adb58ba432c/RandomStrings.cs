// Decompiled with JetBrains decompiler
// Type: Winter_Sports_Rental.RandomStrings
// Assembly: CLRIPropertyValueImpl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 890FDB68-4B7D-4035-A759-8056CF611D6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\Trojan.MSIL.Crypt.hwnc-988ec5d9bc02691882a3180947ee76fabc3629413f79a2e4768b9adb58ba432c.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.CompilerServices;
using System.Threading;

namespace Winter_Sports_Rental
{
  public class RandomStrings
  {
    private static Random rand = new Random();
    private static int randomInt;
    [SpecialName]
    private static string[] \u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames;
    [SpecialName]
    private static StaticLocalInitFlag \u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init;
    [SpecialName]
    private static string[] \u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames;
    [SpecialName]
    private static StaticLocalInitFlag \u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init;
    [SpecialName]
    private static string[] \u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes;
    [SpecialName]
    private static StaticLocalInitFlag \u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init;

    public static string RandomFirstName()
    {
      if (RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init == null)
        Interlocked.CompareExchange<StaticLocalInitFlag>(ref RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init, new StaticLocalInitFlag(), (StaticLocalInitFlag) null);
      bool lockTaken = false;
      try
      {
        Monitor.Enter((object) RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init, ref lockTaken);
        if (RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init.State == (short) 0)
        {
          RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init.State = (short) 2;
          RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames = new string[300]
          {
            "Anderson",
            "Oswaldo",
            "Valentino",
            "Odin",
            "Malaki",
            "Whitney",
            "Peter",
            "Maryjane",
            "Darrell",
            "Wendy",
            "Alfonso",
            "Tyson",
            "Talon",
            "Skyla",
            "Kimora",
            "Perla",
            "Dorian",
            "Thaddeus",
            "Elias",
            "Tyrone",
            "Samson",
            "Virginia",
            "Messiah",
            "Nathan",
            "Serenity",
            "Dean",
            "Simon",
            "Alex",
            "Hailie",
            "Emanuel",
            "Kianna",
            "Emilie",
            "Marlie",
            "Rubi",
            "Rowan",
            "Landin",
            "Raven",
            "Fletcher",
            "Ayden",
            "Angela",
            "Nathaly",
            "Gabriela",
            "Thomas",
            "Guadalupe",
            "Ainsley",
            "Javon",
            "Adriel",
            "Diya",
            "Cecelia",
            "Karli",
            "Jasmine",
            "Jayla",
            "Nasir",
            "Jacey",
            "Gauge",
            "Walker",
            "Rachel",
            "Ezekiel",
            "Carter",
            "Brooke",
            "Kelvin",
            "Adeline",
            "Deborah",
            "Kyson",
            "Nylah",
            "Titus",
            "Cassie",
            "Ada",
            "Issac",
            "Andrew",
            "Abraham",
            "Janiya",
            "Seth",
            "Kaylynn",
            "Diego",
            "Heidy",
            "Ryland",
            "Sophie",
            "Elizabeth",
            "Katelynn",
            "Keegan",
            "Salvador",
            "Neil",
            "Jamir",
            "Isaiah",
            "Trevon",
            "Alyvia",
            "Madeline",
            "Darian",
            "Addyson",
            "Callie",
            "Nayeli",
            "Janessa",
            "Maya",
            "Sammy",
            "Baylee",
            "Dominic",
            "Darius",
            "Wesley",
            "Jean",
            "Alana",
            "Reese",
            "Chandler",
            "Kristopher",
            "Lea",
            "Tobias",
            "Caleb",
            "Aidyn",
            "Derick",
            "Harper",
            "Myles",
            "Abril",
            "Lena",
            "Addisyn",
            "Jaidyn",
            "Lilian",
            "Jack",
            "Ariana",
            "Maeve",
            "Dane",
            "Zaria",
            "Isaias",
            "Destiny",
            "Janae",
            "Vanessa",
            "Ciara",
            "Joslyn",
            "Payton",
            "Ian",
            "Cristopher",
            "Darnell",
            "Anne",
            "Giovanni",
            "Mark",
            "Hector",
            "Karter",
            "Nikolas",
            "James",
            "Sherlyn",
            "Maia",
            "Kennedy",
            "Justice",
            "Brendan",
            "Trinity",
            "Mireya",
            "Riley",
            "Cooper",
            "Tabitha",
            "Sonny",
            "Jarrett",
            "Janet",
            "Leyla",
            "Jade",
            "Martha",
            "Paul",
            "Alina",
            "Dalton",
            "Lizbeth",
            "Keenan",
            "Derrick",
            "Michael",
            "Edith",
            "Lennon",
            "Barrett",
            "Mya",
            "Kaylah",
            "Leon",
            "Aiyana",
            "Leonel",
            "Cash",
            "Simone",
            "Genevieve",
            "Braylon",
            "Adyson",
            "Abbie",
            "Kiersten",
            "Brayden",
            "Karly",
            "Grace",
            "Ramiro",
            "Dana",
            "Britney",
            "Jordyn",
            "Kolby",
            "Johan",
            "Hailey",
            "Rayne",
            "Aditya",
            "Jovanni",
            "Kali",
            "Laci",
            "Rosa",
            "Mayra",
            "Zariah",
            "Terrell",
            "Randy",
            "August",
            "Collin",
            "Livia",
            "Kyler",
            "Ismael",
            "Leia",
            "Jerry",
            "Areli",
            "Lailah",
            "Guillermo",
            "Samir",
            "Kayley",
            "Charlie",
            "Brielle",
            "Ty",
            "Aniyah",
            "Gavin",
            "Kason",
            "Kelly",
            "Rory",
            "Romeo",
            "Ellie",
            "Leandro",
            "Cale",
            "Demarcus",
            "Mila",
            "Kira",
            "Fisher",
            "Gordon",
            "Jaden",
            "Arianna",
            "Lia",
            "Erika",
            "Luis",
            "Kaleigh",
            "Shirley",
            "Willie",
            "Tiana",
            "Rocco",
            "Justine",
            "Crystal",
            "Jocelyn",
            "Denzel",
            "Braylen",
            "Aiden",
            "Nehemiah",
            "Toby",
            "Easton",
            "Karlie",
            "Arabella",
            "Jaylen",
            "Marley",
            "Catalina",
            "Monserrat",
            "Davin",
            "Larissa",
            "Bailey",
            "Briana",
            "Jaylin",
            "Kyra",
            "Magdalena",
            "Yadira",
            "Lacey",
            "Gilbert",
            "Aleena",
            "Diamond",
            "Dallas",
            "Brianna",
            "Joy",
            "Killian",
            "Alexandria",
            "Devon",
            "Holden",
            "Carley",
            "Campbell",
            "Paxton",
            "Lindsey",
            "Marquis",
            "Tanner",
            "Ayla",
            "Abdiel",
            "Tyree",
            "Liana",
            "Krista",
            "Gabriel",
            "Kiera",
            "Kaden",
            "Amelie",
            "Alexia",
            "Mariah",
            "Kara",
            "Kirsten",
            "Semaj",
            "Fernando",
            "Jessica",
            "Jamiya",
            "Deshawn",
            "Arthur",
            "Tommy",
            "Hayden",
            "Damari",
            "Nash",
            "Ivan",
            "Jayleen"
          };
        }
        else if (RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init.State == (short) 2)
          throw new IncompleteInitialization();
      }
      finally
      {
        RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init.State = (short) 1;
        if (lockTaken)
          Monitor.Exit((object) RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames\u0024Init);
      }
      return RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames[RandomStrings.rand.Next(0, checked (RandomStrings.\u0024STATIC\u0024RandomFirstName\u002400E\u0024firstNames.Length - 1))];
    }

    public static string RandomLastName()
    {
      if (RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init == null)
        Interlocked.CompareExchange<StaticLocalInitFlag>(ref RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init, new StaticLocalInitFlag(), (StaticLocalInitFlag) null);
      bool lockTaken = false;
      try
      {
        Monitor.Enter((object) RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init, ref lockTaken);
        if (RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init.State == (short) 0)
        {
          RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init.State = (short) 2;
          RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames = new string[300]
          {
            "Jarvis",
            "Bryan",
            "Herring",
            "Lam",
            "Eaton",
            "Doyle",
            "Hudson",
            "Gutierrez",
            "Mathews",
            "Daniels",
            "Smith",
            "Pitts",
            "Carpenter",
            "Moses",
            "Conrad",
            "Deleon",
            "Mayer",
            "Wang",
            "Bruce",
            "Booker",
            "Bird",
            "Thompson",
            "Hunt",
            "Wilkinson",
            "Callahan",
            "Black",
            "Davila",
            "Davies",
            "Hicks",
            "Irwin",
            "Peck",
            "Lucas",
            "Horton",
            "Clark",
            "Garrison",
            "Mack",
            "Hull",
            "Mooney",
            "Richardson",
            "Woodard",
            "Choi",
            "Shah",
            "Buchanan",
            "Gonzales",
            "Pineda",
            "Griffith",
            "Glenn",
            "Wolf",
            "Bartlett",
            "Norris",
            "Guerrero",
            "Raymond",
            "Hurst",
            "Mendez",
            "Mueller",
            "Blackburn",
            "Estrada",
            "Monroe",
            "Nunez",
            "Craig",
            "Freeman",
            "Hart",
            "Proctor",
            "Schmidt",
            "Pruitt",
            "Villegas",
            "Peters",
            "Hunter",
            "Douglas",
            "Gill",
            "Blanchard",
            "Holmes",
            "Weaver",
            "Neal",
            "Fitzpatrick",
            "Gilmore",
            "Edwards",
            "Dickerson",
            "Hayden",
            "Hebert",
            "Nash",
            "Hays",
            "Elliott",
            "Rowe",
            "Rosario",
            "Donaldson",
            "Hansen",
            "Santiago",
            "Allen",
            "Maddox",
            "Sullivan",
            "Wong",
            "Bishop",
            "Sanders",
            "Norman",
            "Kirk",
            "Cunningham",
            "Cohen",
            "Hogan",
            "Hinton",
            "Cline",
            "Charles",
            "Shaffer",
            "Christian",
            "Marshall",
            "Hensley",
            "Huber",
            "Huerta",
            "Lynch",
            "Whitney",
            "Hester",
            "Larsen",
            "Khan",
            "Ramirez",
            "Jordan",
            "Frazier",
            "Mccarty",
            "Chen",
            "Farmer",
            "Meyer",
            "Ho",
            "Hess",
            "Armstrong",
            "Blankenship",
            "Winters",
            "Chambers",
            "Herrera",
            "Wells",
            "Huang",
            "Mills",
            "Gilbert",
            "Crane",
            "Mcdowell",
            "Middleton",
            "Rice",
            "Aguilar",
            "Mcintosh",
            "Ross",
            "Hendrix",
            "Madden",
            "Schaefer",
            "Richards",
            "Clay",
            "Blackwell",
            "Ashley",
            "Rangel",
            "Fry",
            "Camacho",
            "Blevins",
            "Hale",
            "Key",
            "Parks",
            "Leach",
            "Velasquez",
            "Morrow",
            "Everett",
            "Williamson",
            "Cordova",
            "Pace",
            "Dickson",
            "Roman",
            "Robbins",
            "Villa",
            "Sandoval",
            "Beltran",
            "Salas",
            "White",
            "Medina",
            "Preston",
            "Perry",
            "Spears",
            "Farrell",
            "Baker",
            "Logan",
            "Williams",
            "Hardy",
            "Nelson",
            "Kaufman",
            "Cowan",
            "Parsons",
            "Griffin",
            "Coffey",
            "Merritt",
            "Mays",
            "Harrell",
            "Le",
            "Galloway",
            "Bowen",
            "Horne",
            "Floyd",
            "Miles",
            "Steele",
            "Fowler",
            "Combs",
            "Yang",
            "Perkins",
            "Werner",
            "Knapp",
            "Olson",
            "Stewart",
            "Brock",
            "Hobbs",
            "Best",
            "Bean",
            "Cabrera",
            "Blake",
            "Zimmerman",
            "Stokes",
            "Humphrey",
            "Sparks",
            "Howard",
            "Golden",
            "Salazar",
            "Alvarado",
            "Hines",
            "Drake",
            "Oneill",
            "Decker",
            "Conway",
            "Walters",
            "Frye",
            "Barber",
            "Ellison",
            "Arnold",
            "Singh",
            "Branch",
            "English",
            "Lyons",
            "Soto",
            "Mckenzie",
            "Rosales",
            "Levy",
            "Hernandez",
            "Mccormick",
            "Cantrell",
            "Levine",
            "Welch",
            "Zhang",
            "Stone",
            "Woodward",
            "Fletcher",
            "Barrera",
            "Harrison",
            "Bass",
            "Valencia",
            "Reed",
            "Hubbard",
            "Gonzalez",
            "Thomas",
            "Goodman",
            "Fuentes",
            "Harding",
            "Anderson",
            "Martin",
            "Tate",
            "Acosta",
            "Mcconnell",
            "Ibarra",
            "Brooks",
            "Lozano",
            "Mccall",
            "Fleming",
            "Lindsey",
            "Lara",
            "Harmon",
            "Jefferson",
            "Meyers",
            "Mann",
            "Zuniga",
            "Gallagher",
            "Ingram",
            "Barrett",
            "Barker",
            "Roy",
            "Villarreal",
            "Lee",
            "Romero",
            "Mcbride",
            "Reynolds",
            "Larson",
            "Maynard",
            "Mccarthy",
            "Franklin",
            "Krueger",
            "Kim",
            "Holder",
            "Tyler",
            "Murillo",
            "Lowe",
            "Randall",
            "Arroyo",
            "Wilson",
            "Lawson",
            "Flynn",
            "Olsen",
            "Ayers",
            "Wolfe",
            "Durham",
            "Gibbs",
            "Bond"
          };
        }
        else if (RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init.State == (short) 2)
          throw new IncompleteInitialization();
      }
      finally
      {
        RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init.State = (short) 1;
        if (lockTaken)
          Monitor.Exit((object) RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames\u0024Init);
      }
      return RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames[RandomStrings.rand.Next(0, checked (RandomStrings.\u0024STATIC\u0024RandomLastName\u002400E\u0024lastNames.Length - 1))];
    }

    public static string RandomMiddleName()
    {
      RandomStrings.randomInt = RandomStrings.rand.Next(1, 100);
      if (RandomStrings.randomInt <= 30)
        return RandomStrings.RandomFirstName().Substring(0, 1);
      return RandomStrings.randomInt <= 80 ? RandomStrings.RandomFirstName() : "";
    }

    public static string RandomChicagoAreaCode()
    {
      if (RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init == null)
        Interlocked.CompareExchange<StaticLocalInitFlag>(ref RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init, new StaticLocalInitFlag(), (StaticLocalInitFlag) null);
      bool lockTaken = false;
      try
      {
        Monitor.Enter((object) RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init, ref lockTaken);
        if (RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init.State == (short) 0)
        {
          RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init.State = (short) 2;
          RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes = new string[11]
          {
            "630",
            "630",
            "630",
            "630",
            "847",
            "847",
            "708",
            "708",
            "815",
            "312",
            "331"
          };
        }
        else if (RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init.State == (short) 2)
          throw new IncompleteInitialization();
      }
      finally
      {
        RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init.State = (short) 1;
        if (lockTaken)
          Monitor.Exit((object) RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes\u0024Init);
      }
      return RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes[RandomStrings.rand.Next(0, checked (RandomStrings.\u0024STATIC\u0024RandomChicagoAreaCode\u002400E\u0024areaCodes.Length - 1))];
    }

    public static string RandomEmployeeNumber() => RandomStrings.rand.Next(1, 999999).ToString("000000");

    public static string RandomSsn() => RandomStrings.rand.Next(200, 999).ToString("000") + "-" + RandomStrings.rand.Next(0, 99).ToString("00") + "-" + RandomStrings.rand.Next(0, 9999).ToString("0000");

    public static DateTime RandomBirthDateEmpOrSpouse()
    {
      DateTime dateTime = DateTime.Now;
      dateTime = dateTime.AddYears(-65);
      return dateTime.AddDays((double) RandomStrings.rand.Next(0, 14610));
    }

    public static DateTime RandomBirthDateChild()
    {
      DateTime dateTime = DateTime.Now;
      dateTime = dateTime.AddYears(-65);
      return dateTime.AddDays((double) RandomStrings.rand.Next(0, 14610));
    }

    public static DateTime RandomHireDate()
    {
      DateTime dateTime = DateTime.Now;
      dateTime = dateTime.AddYears(-16);
      dateTime = dateTime.AddDays((double) RandomStrings.rand.Next(0, 5840));
      return Conversions.ToDate(dateTime.ToString("yyyyMMdd"));
    }

    public static string RandomWorkPhone() => "630-555-9" + RandomStrings.rand.Next(0, 999).ToString("000");

    public static string RandomPersonalPhone()
    {
      RandomStrings.randomInt = RandomStrings.rand.Next(1, 100);
      if (RandomStrings.randomInt > 50)
        return "";
      return RandomStrings.RandomChicagoAreaCode() + "-" + RandomStrings.rand.Next(200, 999).ToString("000") + "-" + RandomStrings.rand.Next(0, 9999).ToString("0000");
    }

    public static string RandomPersonalMobilePhone()
    {
      RandomStrings.randomInt = RandomStrings.rand.Next(1, 100);
      if (RandomStrings.randomInt > 75)
        return "";
      return RandomStrings.RandomChicagoAreaCode() + "-" + RandomStrings.rand.Next(200, 999).ToString("000") + "-" + RandomStrings.rand.Next(0, 9999).ToString("0000");
    }

    public static string WorkEmail(string FirstName, string LastName) => FirstName + "." + LastName.ToLower() + "@example.com";

    public static string PersonalEmail(string FirstName, string LastName)
    {
      RandomStrings.randomInt = RandomStrings.rand.Next(1, 100);
      return RandomStrings.randomInt <= 50 ? FirstName.ToLower() + LastName.Substring(0, 1).ToLower() + Conversions.ToString(RandomStrings.rand.Next(0, 300)) + "@example.net" : "";
    }

    public static string RandomFullTimeAnnualSalary() => RandomStrings.rand.Next(40000, 400000).ToString("N2");

    public static string RandomFullTimeHourlySalary() => (RandomStrings.rand.NextDouble() * 30.0 + 16.25).ToString("N2");

    public static string RandomPartTimeHourlySalary() => (RandomStrings.rand.NextDouble() * 10.0 + 9.25).ToString("N2");

    public static string RandomOfficeLocation() => Conversions.ToString(RandomStrings.rand.Next(0, 9)) + Conversions.ToString(Strings.Chr(checked (65 + RandomStrings.rand.Next(0, 9)))) + RandomStrings.rand.Next(0, 999).ToString("000");
  }
}
