// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncuiLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F112AE9C-7564-463C-8834-3BB2BC4FBE1B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Llac.aamy-d1153c91831872cfeacf510426d9b4752eab5933102816559dcd2628b12a7253.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0004
{
  internal sealed class \u0005 : Control
  {
    private Label \u0001 = new Label();
    private Image \u0001;
    private bool \u0001;
    private Timer \u0001 = new Timer();
    private bool \u0002 = true;
    private string \u0001 = string.Empty;
    private float \u0001 = 1f;
    private float \u0002 = 1f;

    [SpecialName]
    public override string get_Text() => base.Text;

    [SpecialName]
    public override void set_Text([In] string obj0)
    {
      base.Text = obj0;
      this.Refresh();
    }

    public void \u0003()
    {
      this.\u0001.Enabled = false;
      this.\u0001 = (Image) null;
      this.\u0001 = false;
      this.\u0001 = string.Empty;
      this.Refresh();
      this.Height = 16;
    }

    public void \u0004()
    {
      this.\u0001.Enabled = true;
      this.\u0001 = (Image) \u0005.\u0005.\u0003("current");
      this.\u0001 = true;
      this.Refresh();
    }

    public void \u0005() => this.\u0003(string.Empty);

    public void \u0003([In] string obj0)
    {
      this.\u0001 = obj0;
      this.\u0001.Enabled = false;
      this.\u0001 = (Image) \u0005.\u0005.\u0003(obj0.Length > 0 ? "error" : "ok");
      this.\u0002 = true;
      this.\u0001 = true;
      if (obj0.Length > 0)
        this.Height = 100;
      this.Refresh();
    }

    protected override void OnResize([In] EventArgs obj0)
    {
      this.\u0001.SetBounds(Convert.ToInt32(22f * this.\u0001), Convert.ToInt32(this.\u0002), this.Width - Convert.ToInt32(22f * this.\u0001), this.Height - Convert.ToInt32(this.\u0002));
      base.OnResize(obj0);
    }

    protected override void ScaleCore([In] float obj0, [In] float obj1)
    {
      this.\u0001 = obj0;
      this.\u0002 = obj1;
      base.ScaleCore(obj0, obj1);
      this.OnResize(EventArgs.Empty);
    }

    protected override void OnPaint([In] PaintEventArgs obj0)
    {
      base.OnPaint(obj0);
      if (this.DesignMode)
      {
        this.\u0001 = (Image) \u0005.\u0005.\u0003("current");
        this.\u0001 = true;
      }
      if (this.\u0001 != null && this.\u0002)
        obj0.Graphics.DrawImage(this.\u0001, new Rectangle(0, 0, Convert.ToInt32(16f * this.\u0001), Convert.ToInt32(16f * this.\u0002)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel);
      if (this.\u0001)
        this.\u0001.Text = this.\u0001.Length > 0 ? base.Text + " (" + this.\u0001 + ")" : base.Text;
      else
        this.\u0001.Text = string.Empty;
    }

    public \u0005()
    {
      this.\u0001.Interval = 250;
      this.\u0001.Tick += new EventHandler(this.\u0003);
      this.\u0001.FlatStyle = FlatStyle.System;
      this.Controls.Add((Control) this.\u0001);
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
      this.TabStop = false;
    }

    public \u0005([In] string obj0)
      : this()
    {
      base.Text = " " + obj0;
    }

    protected override void Dispose([In] bool obj0)
    {
      if (obj0 && this.\u0001 != null)
        goto label_2;
label_1:
      base.Dispose(obj0);
      return;
label_2:
      this.\u0001.Dispose();
      goto label_1;
    }

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      this.\u0002 = !this.\u0002;
      this.Refresh();
    }
  }
}
