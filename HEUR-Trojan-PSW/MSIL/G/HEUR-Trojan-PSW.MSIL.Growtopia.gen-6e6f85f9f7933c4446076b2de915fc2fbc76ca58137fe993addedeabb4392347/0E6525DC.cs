// Decompiled with JetBrains decompiler
// Type: 0E6525DC
// Assembly: SpinHack_PC, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 65E7A0C4-9AD9-4435-B85F-DA409F1EDFB9
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-PSW.MSIL.Growtopia.gen-6e6f85f9f7933c4446076b2de915fc2fbc76ca58137fe993addedeabb4392347.exe

using System;
using System.Runtime.InteropServices;

public static class \u0030E6525DC
{
  private static readonly byte[] \u00319533B8E = new byte[30]
  {
    (byte) 85,
    (byte) 139,
    (byte) 236,
    (byte) 83,
    (byte) 87,
    (byte) 139,
    (byte) 69,
    (byte) 8,
    (byte) 15,
    (byte) 162,
    (byte) 139,
    (byte) 125,
    (byte) 12,
    (byte) 137,
    (byte) 7,
    (byte) 137,
    (byte) 95,
    (byte) 4,
    (byte) 137,
    (byte) 79,
    (byte) 8,
    (byte) 137,
    (byte) 87,
    (byte) 12,
    (byte) 95,
    (byte) 91,
    (byte) 139,
    (byte) 229,
    (byte) 93,
    (byte) 195
  };
  private static readonly byte[] \u0031A02086A = new byte[26]
  {
    (byte) 83,
    (byte) 73,
    (byte) 137,
    (byte) 208,
    (byte) 137,
    (byte) 200,
    (byte) 15,
    (byte) 162,
    (byte) 65,
    (byte) 137,
    (byte) 64,
    (byte) 0,
    (byte) 65,
    (byte) 137,
    (byte) 88,
    (byte) 4,
    (byte) 65,
    (byte) 137,
    (byte) 72,
    (byte) 8,
    (byte) 65,
    (byte) 137,
    (byte) 80,
    (byte) 12,
    (byte) 91,
    (byte) 195
  };

  public static int[] \u00313B03237(int _param0)
  {
    IntPtr num = IntPtr.Zero;
    try
    {
      byte[] source = IntPtr.Size == 4 ? \u0030E6525DC.\u00319533B8E : \u0030E6525DC.\u0031A02086A;
      num = \u0037E5D0D1E.\u0036C2A097B(IntPtr.Zero, new UIntPtr((uint) source.Length), \u0037E5D0D1E.\u0036A5C3545.\u0031DF24354 | \u0037E5D0D1E.\u0036A5C3545.\u0035EAD4FD9, \u0037E5D0D1E.\u00341A02F99.\u00348F80FEF);
      Marshal.Copy(source, 0, num, source.Length);
      \u0030E6525DC.\u0031A7E2E4A forFunctionPointer = (\u0030E6525DC.\u0031A7E2E4A) Marshal.GetDelegateForFunctionPointer(num, typeof (\u0030E6525DC.\u0031A7E2E4A));
      GCHandle gcHandle = new GCHandle();
      int[] numArray = new int[4];
      try
      {
        gcHandle = GCHandle.Alloc((object) numArray, GCHandleType.Pinned);
        forFunctionPointer(_param0, numArray);
      }
      finally
      {
        if (gcHandle != new GCHandle())
          gcHandle.Free();
      }
      return numArray;
    }
    finally
    {
      if (num != IntPtr.Zero)
        \u0037E5D0D1E.\u0033C4A5F45(num, 0U, 32768U);
    }
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  private delegate void \u0031A7E2E4A(int _param1, int[] _param2);
}
