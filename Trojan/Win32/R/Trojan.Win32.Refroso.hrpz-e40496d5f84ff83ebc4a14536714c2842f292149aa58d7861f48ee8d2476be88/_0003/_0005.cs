// Decompiled with JetBrains decompiler
// Type: .
// Assembly: C, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F25E1EAB-EB04-4ECD-A70E-0143E63DFF03
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Refroso.hrpz-e40496d5f84ff83ebc4a14536714c2842f292149aa58d7861f48ee8d2476be88.exe

using \u0003;
using \u0008;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0003
{
  internal sealed class \u0005
  {
    public static string \u0001;

    public static byte[] \u0002([In] byte[] obj0, [In] string obj1)
    {
      RijndaelManaged rijndaelManaged1;
      byte[] numArray1;
      MemoryStream memoryStream;
      RSACryptoServiceProvider cryptoServiceProvider1;
      byte[] numArray2;
      byte[] numArray3;
      byte[] numArray4;
      byte[] numArray5;
      byte[] numArray6;
      byte[] numArray7;
      byte[] numArray8;
      CryptoStream cryptoStream;
      try
      {
        if (obj1.StartsWith("{"))
        {
          \u0005.\u0001 = "ERR 2006: This template was not properly processed by SmartAssembly";
          return (byte[]) null;
        }
        if (true)
          goto label_42;
label_3:
        if (true)
          goto label_43;
label_4:
        do
        {
          if (true)
            goto label_44;
label_5:
          continue;
label_44:
          memoryStream = (MemoryStream) null;
          goto label_5;
        }
        while (false);
        if (true)
          goto label_45;
label_7:
        try
        {
          if (true)
          {
            if (true)
            {
              do
              {
                RijndaelManaged rijndaelManaged2 = new RijndaelManaged();
                if (true)
                  rijndaelManaged1 = rijndaelManaged2;
                else
                  break;
              }
              while (false);
              goto label_25;
            }
          }
          else
            goto label_25;
label_21:
          \u0014\u0003.\u007E\u0090\u0007((object) cryptoStream);
          numArray8 = \u0003\u0005.\u007E\u0015\u0007((object) memoryStream);
          goto label_41;
label_25:
          do
          {
            RSACryptoServiceProvider cryptoServiceProvider2 = new RSACryptoServiceProvider();
            if (true)
              cryptoServiceProvider1 = cryptoServiceProvider2;
            cryptoServiceProvider1.FromXmlString(obj1);
            rijndaelManaged1.GenerateKey();
            \u0014\u0003.\u007E\u0097\u0007((object) rijndaelManaged1);
            do
            {
              numArray1 = new byte[48];
              \u0083\u0003.\u0019\u0003((Array) \u0003\u0005.\u007E\u0093\u0007((object) rijndaelManaged1), 0, (Array) numArray1, 0, 32);
              \u0083\u0003.\u0019\u0003((Array) \u0003\u0005.\u007E\u0092\u0007((object) rijndaelManaged1), 0, (Array) numArray1, 32, 16);
              memoryStream = new MemoryStream();
              try
              {
                if (false)
                  goto label_12;
label_11:
                numArray2 = \u0096\u0005.\u007E\u009C\u0007((object) cryptoServiceProvider1, numArray1, false);
                \u0082\u0005.\u007E\u0001\u0007((object) memoryStream, (byte) 1);
label_12:
                \u0082\u0005.\u007E\u0001\u0007((object) memoryStream, \u0014\u0004.\u001D\u0003(numArray2.Length / 8));
                \u0018\u0003.\u007E\u009F\u0006((object) memoryStream, numArray2, 0, numArray2.Length);
                if (false)
                  goto label_11;
              }
              catch (CryptographicException ex1)
              {
                try
                {
                  numArray3 = new byte[16];
                  numArray4 = new byte[16];
                  \u0083\u0003.\u0019\u0003((Array) \u0003\u0005.\u007E\u0093\u0007((object) rijndaelManaged1), 0, (Array) numArray3, 0, 16);
                  \u0083\u0003.\u0019\u0003((Array) \u0003\u0005.\u007E\u0093\u0007((object) rijndaelManaged1), 16, (Array) numArray4, 0, 16);
                  numArray5 = \u0096\u0005.\u007E\u009C\u0007((object) cryptoServiceProvider1, numArray3, false);
                  numArray6 = \u0096\u0005.\u007E\u009C\u0007((object) cryptoServiceProvider1, numArray4, false);
                  numArray7 = \u0096\u0005.\u007E\u009C\u0007((object) cryptoServiceProvider1, \u0003\u0005.\u007E\u0092\u0007((object) rijndaelManaged1), false);
                  \u0082\u0005.\u007E\u0001\u0007((object) memoryStream, (byte) 2);
                  \u0082\u0005.\u007E\u0001\u0007((object) memoryStream, \u0014\u0004.\u001D\u0003(numArray5.Length / 8));
                  \u0018\u0003.\u007E\u009F\u0006((object) memoryStream, numArray5, 0, numArray5.Length);
                  \u0018\u0003.\u007E\u009F\u0006((object) memoryStream, numArray6, 0, numArray6.Length);
                  \u0018\u0003.\u007E\u009F\u0006((object) memoryStream, numArray7, 0, numArray7.Length);
                }
                catch (CryptographicException ex2)
                {
                  do
                  {
                    \u0005.\u0001 = "ERR 2005: The 128-bit encryption is not available on this computer. You need to install the High Encryption Pack in order to use the reporting feature.";
                  }
                  while (false);
                  numArray8 = (byte[]) null;
                  goto label_41;
                }
              }
            }
            while (false);
          }
          while (false);
          cryptoStream = new CryptoStream((Stream) memoryStream, \u0093\u0005.\u007E\u0094\u0007((object) rijndaelManaged1), CryptoStreamMode.Write);
          \u0018\u0003.\u007E\u009F\u0006((object) cryptoStream, obj0, 0, obj0.Length);
          goto label_21;
        }
        catch (Exception ex)
        {
          if (true)
            \u0005.\u0001 = \u0098\u0003.\u0087\u0002("ERR 2004: ", \u001E\u0003.\u007E\u0091\u0002((object) ex));
          numArray8 = (byte[]) null;
        }
        finally
        {
          if (rijndaelManaged1 != null)
            \u0014\u0003.\u007E\u0091\u0007((object) rijndaelManaged1);
          if (cryptoServiceProvider1 != null)
            \u0014\u0003.\u007E\u008D\u0007((object) cryptoServiceProvider1);
          if (true)
          {
            if (memoryStream != null)
              \u0014\u0003.\u007E\u0099\u0006((object) memoryStream);
            if (cryptoStream == null)
              goto label_40;
          }
          if (true)
            \u0014\u0003.\u007E\u0099\u0006((object) cryptoStream);
label_40:;
        }
label_41:
        return numArray8;
label_45:
        cryptoStream = (CryptoStream) null;
        goto label_7;
label_43:
        cryptoServiceProvider1 = (RSACryptoServiceProvider) null;
        goto label_4;
label_42:
        rijndaelManaged1 = (RijndaelManaged) null;
        goto label_3;
      }
      catch (Exception ex)
      {
        object[] objArray = new object[15]
        {
          (object) rijndaelManaged1,
          (object) cryptoServiceProvider1,
          (object) memoryStream,
          (object) cryptoStream,
          (object) numArray1,
          (object) numArray2,
          (object) numArray3,
          (object) numArray4,
          (object) numArray5,
          (object) numArray6,
          (object) numArray7,
          (object) ex,
          (object) numArray8,
          (object) obj0,
          (object) obj1
        };
        \u0005.\u0002(ex, objArray);
        throw;
      }
    }
  }
}
