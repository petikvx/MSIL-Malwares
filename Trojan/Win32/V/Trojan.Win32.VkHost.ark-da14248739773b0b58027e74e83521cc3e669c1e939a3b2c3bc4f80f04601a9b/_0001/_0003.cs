// Decompiled with JetBrains decompiler
// Type: .
// Assembly: itzsparta, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F0D3E75E-11A1-406D-AF2E-9B1491797EF1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.VkHost.ark-da14248739773b0b58027e74e83521cc3e669c1e939a3b2c3bc4f80f04601a9b.exe

using \u0001;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal sealed class \u0003
  {
    private static string \u0001;
    private static string \u0002;
    private static byte[] \u0001;
    private static Hashtable \u0001;
    private static bool \u0001;
    private static int \u0001;

    public static string \u0002([In] int obj0)
    {
      string str1;
      int num1;
      int num2;
      int num3;
      byte[] numArray1;
      string str2;
      try
      {
        obj0 -= \u0003.\u0001;
        if (\u0003.\u0001)
        {
          str1 = (string) \u0001\u0002.\u007E\u0007\u0004((object) \u0003.\u0001, (object) obj0);
          if (str1 != null)
            return str1;
        }
        num1 = 0;
        num2 = obj0;
        num3 = (int) \u0003.\u0001[num2++];
        if ((num3 & 128) == 0)
        {
          num1 = num3;
          if (num1 == 0)
            return string.Empty;
        }
        else
          num1 = (num3 & 64) != 0 ? ((num3 & 31) << 24) + ((int) \u0003.\u0001[num2++] << 16) + ((int) \u0003.\u0001[num2++] << 8) + (int) \u0003.\u0001[num2++] : ((num3 & 63) << 8) + (int) \u0003.\u0001[num2++];
        string str3;
        try
        {
          numArray1 = \u0091.\u009E\u0002(\u0096.\u007E\u009C\u0004((object) \u009B\u0003.\u009D\u0004(), \u0003.\u0001, num2, num1));
          str2 = \u009B\u0002.\u001D\u0002(\u0096.\u007E\u009C\u0004((object) \u009B\u0003.\u009D\u0004(), numArray1, 0, numArray1.Length));
          if (\u0003.\u0001)
          {
            try
            {
              \u0099\u0002.\u007E\u0004\u0004((object) \u0003.\u0001, (object) obj0, (object) str2);
            }
            catch
            {
            }
          }
          str3 = str2;
        }
        catch
        {
          str3 = (string) null;
        }
        return str3;
      }
      catch (Exception ex)
      {
        string str4 = str1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num3;
        byte[] numArray2 = numArray1;
        string str5 = str2;
        string str6;
        string str7 = str6;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        throw UnhandledException.\u0002(ex, (object) str4, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str5, (object) str7, (object) local4);
      }
    }

    static \u0003()
    {
      Assembly assembly1;
      Stream stream1;
      int length;
      try
      {
        \u0003.\u0001 = "0";
        \u0003.\u0002 = "151";
        \u0003.\u0001 = (byte[]) null;
        \u0003.\u0001 = (Hashtable) null;
        \u0003.\u0001 = false;
        \u0003.\u0001 = 0;
        if (\u009D\u0002.\u0004\u0002(\u0003.\u0001, "1"))
        {
          \u0003.\u0001 = true;
          \u0003.\u0001 = new Hashtable();
        }
        \u0003.\u0001 = \u0010\u0002.\u009D\u0002(\u0003.\u0002);
        assembly1 = \u001D\u0002.\u007F\u0004();
        stream1 = \u008D\u0003.\u007E\u001D\u0004((object) assembly1, "{f0d3e75e-11a1-406d-af2e-9b1491797ef1}");
        try
        {
          length = \u0007\u0002.\u009C\u0002(\u0098\u0002.\u007E\u0005\u0005((object) stream1));
          \u0003.\u0001 = new byte[length];
          int num = \u008A\u0003.\u007E\u0010\u0005((object) stream1, \u0003.\u0001, 0, length);
          \u009C\u0002.\u007E\u0008\u0005((object) stream1);
        }
        finally
        {
          if (stream1 != null)
            \u009C\u0002.\u007E\u0002\u0002((object) stream1);
        }
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream2 = stream1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) length;
        throw UnhandledException.\u0002(ex, (object) assembly2, (object) stream2, (object) local);
      }
    }
  }
}
