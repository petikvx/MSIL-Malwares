// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Identifiers.ContextParamsID
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System.Runtime.CompilerServices;

namespace TYPELIBA.Identifiers
{
  public class ContextParamsID
  {
    private string algo;
    private double m_Getter;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ContextParamsID(string item, double pol)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            this.algo = item;
            goto case 2;
          case 2:
          case 4:
            this.m_Getter = pol;
            int num2 = 5;
            num1 = ContextParamsID.EnableDescriptor() ? num2 : num2;
            continue;
          case 3:
            ManagerParamsID.NewExpression();
            if (true)
            {
              num1 = 0;
              continue;
            }
            goto case 0;
          case 5:
            goto label_6;
          default:
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 2;
        }
      }
label_6:;
    }

    public string Name
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.algo;
      [MethodImpl(MethodImplOptions.NoInlining)] set => this.algo = value;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double CalculateProcess() => this.m_Getter;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void CustomizeProcess(double config) => this.m_Getter = config;

    internal static bool ConcatDescriptor() => true;

    internal static bool EnableDescriptor() => false;
  }
}
