// Decompiled with JetBrains decompiler
// Type: BlackNET_Builder.KachClazz
// Assembly: BlackNET Builder, Version=3.7.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B8A14F4-2444-48A4-BCEA-3077100A9E22
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Agent.gen-f4461e8b0f3831b6ee77d57f52dd74f28e79114bc5bb29d6b7ab5ca3adbf27f6.exe

using System.Drawing;
using System.Drawing.Text;
using System.Windows.Forms;

namespace BlackNET_Builder
{
  internal class KachClazz : Control
  {
    private string _Value1;
    private string _Value2;
    private SolidBrush B1;
    private PointF PT1;
    private PointF PT2;
    private SizeF SZ1;
    private SizeF SZ2;

    public KachClazz()
    {
      this._Value1 = "Black";
      this._Value2 = "Hacker";
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.Opaque | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer, true);
      this.SetStyle(ControlStyles.Selectable, false);
      this.Font = new Font("Segoe UI", 11.25f, FontStyle.Bold);
      this.B1 = new SolidBrush(Color.FromArgb(51, 181, 229));
    }

    public string Value1
    {
      get => this._Value1;
      set
      {
        this._Value1 = value;
        this.Invalidate();
      }
    }

    public string Value2
    {
      get => this._Value2;
      set
      {
        this._Value2 = value;
        this.Invalidate();
      }
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      ThemeModule.G = e.Graphics;
      ThemeModule.G.TextRenderingHint = TextRenderingHint.ClearTypeGridFit;
      ThemeModule.G.Clear(this.BackColor);
      this.SZ1 = ThemeModule.G.MeasureString(this.Value1, this.Font, this.Width, StringFormat.GenericTypographic);
      this.SZ2 = ThemeModule.G.MeasureString(this.Value2, this.Font, this.Width, StringFormat.GenericTypographic);
      this.PT1 = new PointF(0.0f, (float) (this.Height / 2) - this.SZ1.Height / 2f);
      this.PT2 = new PointF(this.SZ1.Width + 1f, (float) (this.Height / 2) - this.SZ1.Height / 2f);
      ThemeModule.G.DrawString(this.Value1, this.Font, Brushes.Black, this.PT1.X + 1f, this.PT1.Y + 1f);
      ThemeModule.G.DrawString(this.Value1, this.Font, Brushes.WhiteSmoke, this.PT1);
      ThemeModule.G.DrawString(this.Value2, this.Font, Brushes.Black, this.PT2.X + 1f, this.PT2.Y + 1f);
      ThemeModule.G.DrawString(this.Value2, this.Font, (Brush) this.B1, this.PT2);
    }
  }
}
