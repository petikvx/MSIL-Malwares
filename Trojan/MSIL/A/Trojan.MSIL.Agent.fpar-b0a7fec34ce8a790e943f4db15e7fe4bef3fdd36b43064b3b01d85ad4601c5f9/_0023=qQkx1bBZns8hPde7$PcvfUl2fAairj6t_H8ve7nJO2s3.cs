// Decompiled with JetBrains decompiler
// Type: #=qQkx1bBZns8hPde7$PcvfUl2fAairj6t_H8ve7nJO2s3BIB3t7PXd4ZR9h0JHyxrX
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 426FFF4D-C208-4BDC-B784-E45B84513C2D
// Assembly location: C:\Users\Administrateur\Downloads\toto\Trojan.MSIL.Agent.fpar-b0a7fec34ce8a790e943f4db15e7fe4bef3fdd36b43064b3b01d85ad4601c5f9.exe

using NanoCore;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Threading;

public sealed class \u0023\u003DqQkx1bBZns8hPde7\u0024PcvfUl2fAairj6t_H8ve7nJO2s3BIB3t7PXd4ZR9h0JHyxrX : 
  IClientReadOnlyNameObjectCollection
{
  private Dictionary<string, object> \u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D;

  public \u0023\u003DqQkx1bBZns8hPde7\u0024PcvfUl2fAairj6t_H8ve7nJO2s3BIB3t7PXd4ZR9h0JHyxrX(
    Dictionary<string, object> _param1)
  {
    Dictionary<string, object> dictionary = _param1;
    if (false)
      return;
    this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D = dictionary;
  }

  public object GetValue(string _param1, object _param2)
  {
    Dictionary<string, object> oqaSyr5PwElvgkBxFw = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D;
    if (true)
      goto label_2;
label_1:
    Dictionary<string, object> dictionary;
    Monitor.Enter((object) dictionary);
    object obj1;
    try
    {
      if (this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D.ContainsKey(_param1))
      {
        object obj2 = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D[_param1];
        if (true)
          obj1 = obj2;
      }
      else
      {
        object obj3 = _param2;
        if (true)
          obj1 = obj3;
      }
    }
    finally
    {
      Monitor.Exit((object) dictionary);
    }
    return obj1;
label_2:
    dictionary = oqaSyr5PwElvgkBxFw;
    goto label_1;
  }

  public void \u0023\u003Dq1ZcUbkVKv7wahbk_Am8y6A\u003D\u003D(string _param1, object _param2)
  {
    Dictionary<string, object> oqaSyr5PwElvgkBxFw = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D;
    if (true)
      goto label_2;
label_1:
    Dictionary<string, object> dictionary;
    Monitor.Enter((object) dictionary);
    try
    {
      if (this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D.ContainsKey(_param1))
      {
        if (this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D[_param1].Equals(RuntimeHelpers.GetObjectValue(_param2)))
          return;
        this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D[_param1] = RuntimeHelpers.GetObjectValue(_param2);
        return;
      }
      this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D.Add(_param1, RuntimeHelpers.GetObjectValue(_param2));
      return;
    }
    finally
    {
      Monitor.Exit((object) dictionary);
    }
label_2:
    dictionary = oqaSyr5PwElvgkBxFw;
    goto label_1;
  }

  public bool EntryExists(string _param1)
  {
    Dictionary<string, object> oqaSyr5PwElvgkBxFw = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D;
    if (true)
      goto label_2;
label_1:
    Dictionary<string, object> dictionary;
    Monitor.Enter((object) dictionary);
    bool flag;
    try
    {
      int num = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D.ContainsKey(_param1) ? 1 : 0;
      if (true)
        flag = num != 0;
    }
    finally
    {
      Monitor.Exit((object) dictionary);
    }
    return flag;
label_2:
    dictionary = oqaSyr5PwElvgkBxFw;
    goto label_1;
  }

  public KeyValuePair<string, object>[] GetEntries()
  {
    Dictionary<string, object> oqaSyr5PwElvgkBxFw = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D;
    if (true)
      goto label_2;
label_1:
    Dictionary<string, object> dictionary;
    Monitor.Enter((object) dictionary);
    try
    {
      List<KeyValuePair<string, object>> keyValuePairList1 = new List<KeyValuePair<string, object>>();
      if (true)
        goto label_5;
label_4:
      Dictionary<string, object>.Enumerator enumerator1 = this.\u0023\u003Dqhv_9OQaSyr5PWElvgkBxFw\u003D\u003D.GetEnumerator();
      Dictionary<string, object>.Enumerator enumerator2;
      if (true)
        enumerator2 = enumerator1;
      List<KeyValuePair<string, object>> keyValuePairList2;
      while (enumerator2.MoveNext())
        keyValuePairList2.Add(new KeyValuePair<string, object>(enumerator2.Current.Key, RuntimeHelpers.GetObjectValue(enumerator2.Current.Value)));
      return keyValuePairList2.ToArray();
label_5:
      keyValuePairList2 = keyValuePairList1;
      goto label_4;
    }
    finally
    {
      Monitor.Exit((object) dictionary);
    }
label_2:
    dictionary = oqaSyr5PwElvgkBxFw;
    goto label_1;
  }
}
