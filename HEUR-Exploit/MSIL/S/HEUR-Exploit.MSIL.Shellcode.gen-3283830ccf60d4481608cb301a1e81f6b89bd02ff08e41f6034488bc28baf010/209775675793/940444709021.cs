// Decompiled with JetBrains decompiler
// Type: 209775675793.940444709021
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003019644258292;
using \u003172935711858;
using \u003208825527781;
using \u003233524418126;
using \u003587801749628;
using \u003672161515360;
using \u003772444843072;
using \u003875721769422;
using \u003896202856669;
using \u003903860872383;
using \u003991227119410;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;

namespace \u003209775675793
{
  internal class \u003940444709021 : \u003876199235996
  {
    public object \u003467240421157 { get; set; }

    public object \u003971770715217 { get; set; }

    private IEnumerable<\u003057567207975> \u003319737992182(
      \u003057567207975 _param1,
      \u003057567207975 _param2,
      object _param3)
    {
      switch (_param3)
      {
        case \u003057567207975 obj:
          return (IEnumerable<\u003057567207975>) new \u003057567207975[1]
          {
            obj
          };
        case List<\u003893580205035> objList:
          return \u003036551049228.\u003884115096798(objList, _param1, _param2, false);
        default:
          return (IEnumerable<\u003057567207975>) \u003141440380044.\u003458829377194<\u003057567207975>();
      }
    }

    public virtual bool \u003375465830376(\u003057567207975 _param1, \u003057567207975 _param2)
    {
      if (this.\u003669977872252 == \u003101519331266.Exists)
        return this.\u003319737992182(_param1, _param2, this.\u003467240421157).Any<\u003057567207975>();
      using (IEnumerator<\u003057567207975> enumerator = this.\u003319737992182(_param1, _param2, this.\u003467240421157).GetEnumerator())
      {
        if (enumerator.MoveNext())
        {
          IEnumerable<\u003057567207975> source = this.\u003319737992182(_param1, _param2, this.\u003971770715217);
          if (!(source is ICollection<\u003057567207975> objs1))
            objs1 = (ICollection<\u003057567207975>) source.ToList<\u003057567207975>();
          ICollection<\u003057567207975> objs2 = objs1;
          do
          {
            \u003057567207975 current = enumerator.Current;
            foreach (\u003057567207975 obj in (IEnumerable<\u003057567207975>) objs2)
            {
              if (this.\u003754884921766(current, obj))
                return true;
            }
          }
          while (enumerator.MoveNext());
        }
      }
      return false;
    }

    private bool \u003754884921766(\u003057567207975 _param1, \u003057567207975 _param2)
    {
      \u003666167056623 obj1 = _param1 as \u003666167056623;
      \u003666167056623 obj2 = _param2 as \u003666167056623;
      if (obj1 != null && obj2 != null)
      {
        switch (this.\u003669977872252)
        {
          case \u003101519331266.Equals:
            if (this.\u003368594782508(obj1, obj2))
              return true;
            break;
          case \u003101519331266.NotEquals:
            if (!this.\u003368594782508(obj1, obj2))
              return true;
            break;
          case \u003101519331266.Exists:
            return true;
          case \u003101519331266.LessThan:
            if (obj1.\u003690224521336(obj2) < 0)
              return true;
            break;
          case \u003101519331266.LessThanOrEquals:
            if (obj1.\u003690224521336(obj2) <= 0)
              return true;
            break;
          case \u003101519331266.GreaterThan:
            if (obj1.\u003690224521336(obj2) > 0)
              return true;
            break;
          case \u003101519331266.GreaterThanOrEquals:
            if (obj1.\u003690224521336(obj2) >= 0)
              return true;
            break;
        }
      }
      else
      {
        switch (this.\u003669977872252)
        {
          case \u003101519331266.NotEquals:
          case \u003101519331266.Exists:
            return true;
        }
      }
      return false;
    }

    private bool \u003368594782508(\u003666167056623 _param1, \u003666167056623 _param2)
    {
      if (_param1.\u003639866288691(_param2))
        return true;
      if (_param2.\u003626381970874 != \u003205973939318.String)
        return false;
      string b = (string) _param2.\u003512918373207;
      string a;
      switch (_param1.\u003626381970874)
      {
        case \u003205973939318.Date:
          using (StringWriter stringWriter = \u003591722725384.\u003991602511256(64))
          {
            if (_param1.\u003512918373207 is DateTimeOffset)
              \u003519131386819.\u003210217066356((TextWriter) stringWriter, (DateTimeOffset) _param1.\u003512918373207, \u003015461100840.IsoDateFormat, (string) null, CultureInfo.InvariantCulture);
            else
              \u003519131386819.\u003781367547111((TextWriter) stringWriter, (DateTime) _param1.\u003512918373207, \u003015461100840.IsoDateFormat, (string) null, CultureInfo.InvariantCulture);
            a = stringWriter.ToString();
            break;
          }
        case \u003205973939318.Bytes:
          a = Convert.ToBase64String((byte[]) _param1.\u003512918373207);
          break;
        case \u003205973939318.Guid:
        case \u003205973939318.TimeSpan:
          a = _param1.\u003512918373207.ToString();
          break;
        case \u003205973939318.Uri:
          a = ((Uri) _param1.\u003512918373207).OriginalString;
          break;
        default:
          return false;
      }
      return string.Equals(a, b, StringComparison.Ordinal);
    }
  }
}
