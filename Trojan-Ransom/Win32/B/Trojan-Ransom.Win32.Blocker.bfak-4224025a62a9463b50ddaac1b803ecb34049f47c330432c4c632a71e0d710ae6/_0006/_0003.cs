// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Server - Copie.packed, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b2ee9c3ad9ebe06b
// MVID: 464A3559-2CEF-42C3-ACF6-93589CCAE5E5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.bfak-4224025a62a9463b50ddaac1b803ecb34049f47c330432c4c632a71e0d710ae6.exe

using System;
using System.IO;
using System.Reflection;
using System.Security.Cryptography;

namespace \u0006
{
  internal sealed class \u0003 : IDisposable
  {
    private readonly Type \u0001;
    private readonly object \u0001;

    public \u0003()
    {
      try
      {
        this.\u0001 = Assembly.Load("System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e").GetType("System.Security.Cryptography.AesManaged");
      }
      catch (FileNotFoundException ex)
      {
        this.\u0001 = Assembly.Load("mscorlib").GetType("System.Security.Cryptography.RijndaelManaged");
      }
      this.\u0001 = Activator.CreateInstance(this.\u0001);
    }

    public ICryptoTransform \u0001(byte[] key, byte[] iv, bool decrypt)
    {
      this.\u0001.GetProperty("Key").GetSetMethod().Invoke(this.\u0001, new object[1]
      {
        (object) key
      });
      this.\u0001.GetProperty("IV").GetSetMethod().Invoke(this.\u0001, new object[1]
      {
        (object) iv
      });
      return (ICryptoTransform) this.\u0001.GetMethod(decrypt ? "CreateDecryptor" : "CreateEncryptor", new Type[0]).Invoke(this.\u0001, new object[0]);
    }

    public void \u0001()
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        this.\u0001.GetMethod("Clear").Invoke(this.\u0001, new object[0]);
        goto label_2;
      }
      while (false);
    }

    public void Dispose() => this.\u0001();
  }
}
