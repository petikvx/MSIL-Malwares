// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Common.BrowserCredendtial
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf;
using System.Collections.Generic;
using System.ComponentModel;

namespace NoiseMe.Drags.App.Models.Common
{
  [ProtoContract(Name = "BrowserCredendtial")]
  public class BrowserCredendtial : INotifyPropertyChanged, IEqualityComparer<BrowserCredendtial>
  {
    private string _login;
    private string _password;
    private string _uRL;

    [ProtoMember(1, Name = "Login")]
    public string Login
    {
      get => this._login;
      set
      {
        this._login = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Login)));
      }
    }

    [ProtoMember(2, Name = "Password")]
    public string Password
    {
      get => this._password;
      set
      {
        this._password = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Password)));
      }
    }

    [ProtoMember(3, Name = "URL")]
    public string URL
    {
      get => this._uRL;
      set
      {
        this._uRL = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (URL)));
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public bool Equals(BrowserCredendtial x, BrowserCredendtial y) => x.Login == y.Login && x.Password == y.Password && x.URL == y.URL;

    public int GetHashCode(BrowserCredendtial obj)
    {
      int hashCode = 37 * 397;
      if (!string.IsNullOrEmpty(obj.Login))
        hashCode += obj.Login.GetHashCode();
      if (!string.IsNullOrEmpty(obj.Password))
        hashCode += obj.Password.GetHashCode();
      if (!string.IsNullOrEmpty(obj.URL))
        hashCode += obj.URL.GetHashCode();
      return hashCode;
    }
  }
}
