// Decompiled with JetBrains decompiler
// Type: Se3.Ew7
// Assembly: Nc4r, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 21272C9C-E4CA-4424-BD4A-4D5E5B0E05DA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-20e9c3ad420ffd76094590adced58f056d38e5d6afe3ee9e21e7b29ff5a80da7.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Windows.Controls;

namespace Se3
{
  [StandardModule]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  [HideModuleName]
  internal sealed class Ew7
  {
    [SecuritySafeCritical]
    internal static int z0E<Wi3, a7K>([In] a7K obj0, [In] Wi3 obj1, [In] int obj2, [In] int obj3)
      where Wi3 : object
      where a7K : ItemCollection
    {
label_3:
      int num1 = 0;
      int num2 = 3;
      int num3;
      int num4;
      int num5;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            int num6;
            switch ((obj2 ^ obj3) - 57 ^ num1)
            {
              case 0:
                num6 = 11;
                break;
              default:
                num6 = 7;
                break;
            }
            num2 = num6;
            continue;
          case 1:
            goto label_3;
          case 2:
            num2 = 6;
            continue;
          case 4:
          case 5:
            goto label_13;
          case 6:
            num5 = num4 + num5;
            num2 = num5 % 2 != 0 ? 3 : 4;
            continue;
          case 7:
            num3 = 13;
            num2 = 9;
            continue;
          case 9:
            ++num1;
            num4 = 996;
            int num7 = num4;
            num5 = num7 * num7;
            goto case 2;
          case 10:
            num2 = 3;
            continue;
          case 11:
            num3 = obj0.Add((object) obj1);
            num2 = 9;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ew7.z0E);
            num2 = 1;
            continue;
        }
      }
label_13:
      return num3;
    }

    [SecuritySafeCritical]
    internal static void f5S<x0W, t7Z>([In] t7Z obj0, [In] x0W obj1, [In] int obj2, [In] short obj3)
      where x0W : string
      where t7Z : TextBox
    {
      int num1 = 9;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_11;
          case 1:
          case 2:
          case 6:
            num1 = 5;
            continue;
          case 3:
            goto label_12;
          case 4:
            ++num2;
            int num3 = (int) obj3;
            num1 = (num3 * num3 + (int) obj3) % 2 == 0 ? 0 : 1;
            continue;
          case 5:
            int num4;
            switch ((obj2 ^ (int) obj3) - 55 ^ num2)
            {
              case 0:
                num4 = 7;
                break;
              default:
                num4 = 8;
                break;
            }
            num1 = num4;
            continue;
          case 7:
            obj0.Text = (string) obj1;
            goto case 4;
          case 8:
            num1 = 4;
            continue;
          default:
            num2 = 0;
            num1 = 5;
            continue;
        }
      }
label_11:
      return;
label_12:;
    }

    [SecuritySafeCritical]
    internal static string Px3<b5Y>([In] b5Y obj0, [In] char obj1, [In] short obj2) where b5Y : PasswordBox
    {
label_3:
      int num1 = 0;
      int num2 = 9;
      IComparable comparable;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 5:
            num2 = 9;
            continue;
          case 2:
            ++num1;
            num2 = 510 > (int) byte.MaxValue - 11 * 2 ? 4 : 11;
            continue;
          case 3:
            comparable = (IComparable) obj0.Password;
            num2 = 2;
            continue;
          case 4:
          case 6:
            goto label_12;
          case 7:
            goto label_3;
          case 8:
            comparable = (IComparable) null;
            num2 = 2;
            continue;
          case 9:
            int num3;
            switch (((int) obj2 ^ (int) obj1) - 61 ^ num1)
            {
              case 0:
                num3 = 3;
                break;
              default:
                num3 = 8;
                break;
            }
            num2 = num3;
            continue;
          case 11:
            num2 = 9;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ew7.Px3);
            num2 = 7;
            continue;
        }
      }
label_12:
      return comparable as string;
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class d0S<c7J> where c7J : new()
    {
      [ThreadStatic]
      private static c7J m_ThreadStaticValue;

      [SpecialName]
      internal c7J z4H()
      {
        int num = 4;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
            case 3:
            case 5:
              Ew7.d0S<c7J>.m_ThreadStaticValue = new c7J();
              num = 0;
              continue;
            case 2:
              num = !flag ? 0 : 3;
              continue;
            default:
              flag = (object) Ew7.d0S<c7J>.m_ThreadStaticValue == null;
              goto case 2;
          }
        }
label_5:
        return Ew7.d0S<c7J>.m_ThreadStaticValue;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public d0S()
      {
      }
    }
  }
}
