// Decompiled with JetBrains decompiler
// Type: wG.cGu
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System;
using System.Runtime.InteropServices;

namespace wG
{
  public class cGu
  {
    private static cGu uHT;

    public static byte[] cRd(string _param0)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      char[] chArray;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_6;
          case 2:
            chArray = (char[]) cGu.uNm((object) _param0.Substring(1, cGu.yNb((object) _param0) - 2));
            if (cGu.FHz())
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      int index;
      byte[] numArray;
      numArray[index] = (byte) chArray[index];
      ++index;
      goto label_7;
label_6:
      numArray = new byte[chArray.Length];
      index = 0;
label_7:
      if (index >= chArray.Length)
        return numArray;
      goto label_5;
    }

    public static byte[] FRH(string _param0)
    {
      if (!_param0.StartsWith("0x"))
        RG2.e9p("Could not convert hex string to byte array!");
      _param0 = _param0.Substring(2);
      int length = _param0.Length;
      byte[] numArray1 = new byte[length / 2];
      int startIndex = 0;
      byte[] numArray2;
      while (true)
      {
        if (startIndex < length)
          goto label_2;
        else
          goto label_3;
label_1:
        int num1;
        switch (num1)
        {
          case 2:
            startIndex += 2;
            continue;
          default:
            goto label_6;
        }
label_2:
        numArray1[startIndex / 2] = Convert.ToByte(_param0.Substring(startIndex, 2), 16);
        num1 = 2;
        goto label_1;
label_3:
        numArray2 = numArray1;
        int num2;
        num1 = cGu.vN6() == null ? 1 : num2;
        goto label_1;
      }
label_6:
      return numArray2;
    }

    public cGu()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static int yNb([In] object obj0) => ((string) obj0).Length;

    internal static object uNm([In] object obj0) => (object) ((string) obj0).ToCharArray();

    internal static bool FHz() => cGu.uHT == null;

    internal static cGu vN6() => cGu.uHT;
  }
}
