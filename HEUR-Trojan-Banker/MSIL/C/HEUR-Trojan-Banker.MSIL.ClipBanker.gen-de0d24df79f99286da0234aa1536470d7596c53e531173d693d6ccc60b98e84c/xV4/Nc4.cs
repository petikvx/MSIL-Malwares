// Decompiled with JetBrains decompiler
// Type: xV4.Nc4
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Runtime.InteropServices;

namespace xV4
{
  internal static class Nc4
  {
    public static Image \u003492([In] Image obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      if (obj3 >= 100)
        return obj0;
      using (Image image1 = (Image) new Bitmap(obj0, obj1, obj2))
      {
        ImageCodecInfo encoder = Nc4.\u0032t8("image/jpeg");
        Encoder quality = Encoder.Quality;
        EncoderParameters encoderParams = new EncoderParameters(1);
        EncoderParameter encoderParameter = new EncoderParameter(quality, (long) obj3);
        encoderParams.Param[0] = encoderParameter;
        MemoryStream memoryStream = new MemoryStream();
        image1.Save((Stream) memoryStream, encoder, encoderParams);
        Image image2 = Image.FromStream((Stream) memoryStream);
        ImageAttributes imageAttr = new ImageAttributes();
        using (Graphics graphics = Graphics.FromImage(image2))
        {
          graphics.InterpolationMode = InterpolationMode.NearestNeighbor;
          graphics.DrawImage(image2, new Rectangle(Point.Empty, image2.Size), 0, 0, image2.Width, image2.Height, GraphicsUnit.Pixel, imageAttr);
        }
        return image2;
      }
    }

    private static ImageCodecInfo \u0032t8([In] string obj0)
    {
      foreach (ImageCodecInfo imageEncoder in ImageCodecInfo.GetImageEncoders())
      {
        if (imageEncoder.MimeType == obj0)
          return imageEncoder;
      }
      return (ImageCodecInfo) null;
    }

    public static byte[] BLg([In] Image obj0)
    {
      using (MemoryStream memoryStream = new MemoryStream())
      {
        obj0.Save((Stream) memoryStream, ImageFormat.Jpeg);
        return memoryStream.ToArray();
      }
    }
  }
}
