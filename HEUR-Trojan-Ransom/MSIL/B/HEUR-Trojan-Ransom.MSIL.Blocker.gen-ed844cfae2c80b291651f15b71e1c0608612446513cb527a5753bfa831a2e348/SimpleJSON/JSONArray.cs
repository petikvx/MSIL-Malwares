// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = 1412794508;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 69570419)) % 6U)
          {
            case 1:
              goto label_6;
            case 2:
              jsonNode = this.m_List[aIndex];
              num1 = 1872278645;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 762501798 ^ 207106627;
              continue;
            case 4:
              num1 = (int) num2 * -1500932479 ^ -178739645;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_6:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_9:
        return jsonNode;
label_7:
        num3 = 1;
label_8:
        num1 = num3 != 0 ? 964111074 : (num1 = 643636007);
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 1343148098;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1477226483)) % 9U)
          {
            case 0:
              this.m_List.Add(value);
              num1 = (int) num2 * 480010814 ^ -698353726;
              continue;
            case 1:
              this.m_List[aIndex] = value;
              num1 = 933365413;
              continue;
            case 2:
              int num4 = !flag ? 230897202 : (num4 = 1453303305);
              num1 = num4 ^ (int) num2 * -1597568650;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_1;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1806177372 ^ 610033321;
                continue;
              }
              num3 = 1;
              break;
            case 6:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 7:
              num1 = (int) num2 * 837216319 ^ 1510406704;
              continue;
            case 8:
              num1 = (int) num2 * -373922806 ^ -230335355;
              continue;
            default:
              goto label_14;
          }
          flag = num3 != 0;
          num1 = 729186143;
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1083284499;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1404927721)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -211654617 ^ -2016659080;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1478243977;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1369430853)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -1829054240 ^ -1591629958;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1130753407;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 897599766)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 996101762 ^ -2081830376;
              continue;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * -1995633518 ^ 1742400908;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -2041965449;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -428548998)) % 11U)
        {
          case 0:
            num1 = (int) num2 * -671116481 ^ 1151087908;
            continue;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1358218260 ^ -2136525864;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            goto label_1;
          case 3:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * -467024960 ^ -182186126;
            continue;
          case 5:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1678725646 ^ -678988165;
            continue;
          case 6:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 65126474 ^ -101542505;
            continue;
          case 7:
            num1 = (int) num2 * 1275493189 ^ -1649309918;
            continue;
          case 8:
            jsonNode2 = this.m_List[aIndex];
            num1 = -1432353718;
            continue;
          case 9:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 10:
            int num4 = flag ? -1734671858 : (num4 = -460268322);
            num1 = num4 ^ (int) num2 * 1487770537;
            continue;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = -258843488;
      }
label_15:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -463455386;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1982402026)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1741003340 ^ -1037253156;
            continue;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * -1809632701 ^ 37919702;
            continue;
          case 4:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * 1713932845 ^ 798231402;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -2031889964;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -738589640)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -2033882584 ^ -434858538;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -739346137;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1837570040)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1883195106 ^ 798925116;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num3 = enumerator.MoveNext() ? -1233034466 : (num3 = -278462197);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1837570040)) % 8U)
          {
            case 0:
              str1 = JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(str1, ", ");
              num3 = (int) num4 * -2084160469 ^ 1159935343;
              continue;
            case 1:
              num3 = (int) num4 * -2050897080 ^ 88198477;
              continue;
            case 2:
              num3 = -1233034466;
              continue;
            case 4:
              int num5 = JSONArray.\u206A​‏⁪​‬⁫‎‌⁮⁭‍‎‍‫‬⁫‮⁫‎‬‍‪⁬⁮‬‍‏‮‬‬‬⁬‪‭⁬‮‏⁮‮‮(str1) > 2 ? -1289054424 : (num5 = -1044616673);
              num3 = num5 ^ (int) num4 * 480987154;
              continue;
            case 5:
              goto label_9;
            case 6:
              current = enumerator.Current;
              num3 = -415675972;
              continue;
            case 7:
              str1 = JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(str1, JSONArray.\u202A⁭‮‫‭‌‌‏‍⁬‮‬‪‬‬​‪‭‫⁭‎‪‏​‎‫⁭‬‬‏⁯⁫‫‪‭‭‫‭‮⁬‮((object) current));
              num3 = -1080465407;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(str1, " ]");
label_16:
      int num6 = -1982428134;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1837570040)) % 3U)
        {
          case 0:
            goto label_16;
          case 1:
            num6 = (int) num7 * 7798418 ^ 548679093;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -2113335883;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -484849698)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 535433239 ^ 1952768719;
            continue;
          case 3:
            str1 = "[ ";
            num1 = (int) num2 * 1004705180 ^ -1000073013;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num3 = !enumerator.MoveNext() ? -238820014 : (num3 = -1154066316);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -484849698)) % 11U)
          {
            case 0:
              str1 = JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(str1, current.ToString(JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(aPrefix, "   ")));
              num3 = (int) num4 * 1254818348 ^ -1325293387;
              continue;
            case 1:
              int num5 = flag ? -1226579685 : (num5 = -1993878265);
              num3 = num5 ^ (int) num4 * -1792925649;
              continue;
            case 2:
              num3 = (int) num4 * 740931602 ^ 433484801;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -1200586648;
              continue;
            case 4:
              str1 = JSONArray.\u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮(str1, ", ");
              num3 = (int) num4 * -1972339236 ^ 1640406056;
              continue;
            case 5:
              num3 = (int) num4 * -1501871954 ^ 1189311287;
              continue;
            case 7:
              str1 = JSONArray.\u200B⁯‎⁭‏⁮‍‭‪‫⁭‪‫‭‎‍‪⁬‫⁫⁭‬‪‭⁯‍⁬‌‪‫⁫⁯‪⁬‪⁪⁬‫⁬‬‮(str1, "\n", aPrefix, "   ");
              num3 = -192932649;
              continue;
            case 8:
              goto label_9;
            case 9:
              flag = JSONArray.\u206A​‏⁪​‬⁫‎‌⁮⁭‍‎‍‫‬⁫‮⁫‎‬‍‪⁬⁮‬‍‏‮‬‬‬⁬‪‭⁬‮‏⁮‮‮(str1) > 3;
              num3 = (int) num4 * -265900309 ^ -1512293386;
              continue;
            case 10:
              num3 = -1154066316;
              continue;
            default:
              goto label_19;
          }
        }
      }
label_19:
      string str2 = JSONArray.\u200B⁯‎⁭‏⁮‍‭‪‫⁭‪‫‭‎‍‪⁬‫⁫⁭‬‪‭⁯‍⁬‌‪‫⁫⁯‪⁬‪⁪⁬‫⁬‬‮(str1, "\n", aPrefix, "]");
label_20:
      int num6 = -516918493;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -484849698)) % 4U)
        {
          case 0:
            goto label_20;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -887610445 ^ 989933095;
            continue;
          case 2:
            num6 = (int) num7 * 795677224 ^ 2095064957;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1942484942;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1668126451)) % 10U)
        {
          case 0:
            index = 0;
            num1 = (int) num2 * 756573520 ^ -1031015433;
            continue;
          case 1:
            JSONArray.\u200B​‍‬‍‌⁮‮‬‮‌‭‭‭⁬‌​‮‪‪‌⁫‫‍‮⁮‫⁬⁭‎‪‌⁫⁭⁫⁮‮⁭⁮‮(aWriter, (byte) 1);
            num1 = (int) num2 * 266332579 ^ -497106269;
            continue;
          case 2:
            JSONArray.\u206D‍⁭⁯‪⁮⁭‪‌‍‫⁫‭‏‭⁬‬‭‌⁮‮⁭‮⁬‭⁬‪⁪‎⁮‬​⁯⁮‪‍⁫‪‍‏‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1112318619 ^ 864668191;
            continue;
          case 3:
            num1 = (int) num2 * -815569629 ^ 1290190924;
            continue;
          case 4:
            goto label_3;
          case 5:
            this.m_List[index].Serialize(aWriter);
            num1 = -2112725695;
            continue;
          case 6:
            num1 = (int) num2 * -1280337648 ^ -1205094914;
            continue;
          case 7:
            ++index;
            num1 = (int) num2 * -1387479165 ^ 1634425038;
            continue;
          case 8:
            int num3;
            num1 = num3 = index < this.m_List.Count ? -286240448 : (num3 = -596124787);
            continue;
          case 9:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public JSONArray()
    {
label_1:
      int num1 = 273965214;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1893215011)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1490679049 ^ 238571604;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u206A​‏⁪​‬⁫‎‌⁮⁭‍‎‍‫‬⁫‮⁫‎‬‍‪⁬⁮‬‍‏‮‬‬‬⁬‪‭⁬‮‏⁮‮‮([In] string obj0) => obj0.Length;

    static string \u206F​​​‮‬⁬‭‏‌‏‫‪‮⁪⁪⁪‫​⁪‏‍‬‮‮‏‬‭‬‭‭‫⁭‪⁪‍⁬⁮⁬‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A⁭‮‫‭‌‌‏‍⁬‮‬‪‬‬​‪‭‫⁭‎‪‏​‎‫⁭‬‬‏⁯⁫‫‪‭‭‫‭‮⁬‮([In] object obj0) => obj0.ToString();

    static string \u200B⁯‎⁭‏⁮‍‭‪‫⁭‪‫‭‎‍‪⁬‫⁫⁭‬‪‭⁯‍⁬‌‪‫⁫⁯‪⁬‪⁪⁬‫⁬‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200B​‍‬‍‌⁮‮‬‮‌‭‭‭⁬‌​‮‪‪‌⁫‫‍‮⁮‫⁬⁭‎‪‌⁫⁭⁫⁮‮⁭⁮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D‍⁭⁯‪⁮⁭‪‌‍‫⁫‭‏‭⁬‬‭‌⁮‮⁭‮⁬‭⁬‪⁪‎⁮‬​⁯⁮‪‍⁫‪‍‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
