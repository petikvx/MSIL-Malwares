// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: SafeArrayTypeMismatchExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: FE98C20D-A437-4C5F-9849-D190358A66A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c0f665918f4ea75327960ddf58cf37e415a6bf6569a4c22aa6291fbac9d171ce.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1208043675;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 945704845)) % 4U)
        {
          case 1:
            this.m_Node = aNode;
            num1 = (int) num2 * 558424334 ^ -1470080941;
            continue;
          case 2:
            num1 = (int) num2 * -1449450844 ^ 1127202380;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1110198715;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2001117140)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1660191978 ^ -180994344;
            continue;
          case 2:
            num1 = (int) num2 * 242800773 ^ -91420200;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -1526406481 ^ -890100095;
            continue;
          case 5:
            this.m_Key = aKey;
            num1 = (int) num2 * -63023012 ^ 1784279287;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = 46878076;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1573360735)) % 12U)
        {
          case 0:
            num1 = 1943157438;
            continue;
          case 1:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 2020897025 ^ 407051371;
            continue;
          case 2:
            num1 = (int) num2 * 11845912 ^ 1634659037;
            continue;
          case 3:
            num1 = (int) num2 * -750455177 ^ -994817072;
            continue;
          case 4:
            num1 = (int) num2 * 159882863 ^ 1556058319;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 259855740 ^ -1924712973;
            continue;
          case 7:
            goto label_3;
          case 8:
            this.m_Node = (JSONNode) null;
            num1 = 434988728;
            continue;
          case 9:
            num1 = (int) num2 * -1160963974 ^ 161394017;
            continue;
          case 10:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1053529595 ^ -1122764942;
            continue;
          case 11:
            int num3 = flag ? -799850217 : (num3 = -1659505611);
            num1 = num3 ^ (int) num2 * 106053514;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -261795701;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1939562580)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1816767690 ^ 772004021;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1272468531 ^ -1457870937;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
        this.Set((JSONNode) aVal);
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1421134441;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1659579474)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 2077206843 ^ 340881351;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1487582300 ^ -1017764681;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 345920109;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1143376071)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 191933405 ^ 259352998;
              continue;
            case 3:
              num1 = (int) num2 * 1743838244 ^ 90858226;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1126239824;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1311350139)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONArray();
            num1 = (int) num2 * -1989013680 ^ -1978123637;
            continue;
          case 2:
            goto label_1;
          case 3:
            aVal.Add(aItem);
            num1 = (int) num2 * -1393535126 ^ 469596029;
            continue;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1598954453 ^ 1467682219;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = 731386856;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1209653504)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aVal.Add(aKey, aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -240176263 ^ 236964509;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 201188387;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1954350537)) % 7U)
        {
          case 0:
            int num3 = flag2 ? 1169280316 : (num3 = 802811293);
            num1 = num3 ^ (int) num2 * -1544253171;
            continue;
          case 1:
            flag1 = true;
            num1 = (int) num2 * -1548855567 ^ -1263701190;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 150270445 ^ 835345025;
            continue;
          case 5:
            flag2 = b == null;
            num1 = (int) num2 * -349433202 ^ 1339452569;
            continue;
          case 6:
            flag1 = (object) a == b;
            num1 = 1460157555;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -142962285;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1109572082)) % 3U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1472299366 ^ -1421724299;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -520418855;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -250917132)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = obj == null ? 2092571609 : (num3 = 1352142778);
            num1 = num3 ^ (int) num2 * 686162599;
            continue;
          case 2:
            num1 = (int) num2 * -1580836778 ^ 22253771;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = -1892983173;
            continue;
          case 4:
            flag = true;
            num1 = (int) num2 * -1958444387 ^ 830349730;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -1004435851;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2124628711)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -94066059 ^ 798228971;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -927865591;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1668422880)) % 4U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * 962153066 ^ -2094365064;
            continue;
          case 2:
            num1 = (int) num2 * -2002995063 ^ 694075338;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix) => "";

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = 1082936676;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 990583575)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = (int) num2 * 1414086900 ^ -788727038;
              continue;
            case 2:
              num1 = (int) num2 * -1445723564 ^ -727120506;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1507327084 ^ 1689878828;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 566800438;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 679526636)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 120901357 ^ -512362319;
              continue;
            case 3:
              num1 = (int) num2 * -810768712 ^ 299485493;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 387183088;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 707446445)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1896309730 ^ -184615989;
              continue;
            case 2:
              num1 = (int) num2 * -1864138401 ^ -1405118001;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = (int) num2 * 174235503 ^ -812686404;
              continue;
            case 5:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * -783084506 ^ 2045315544;
              continue;
            case 6:
              num1 = (int) num2 * -95266946 ^ -1974175236;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -877030276;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -909503263)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -875012060 ^ 1626674715;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1149194850 ^ -2006384362;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0));
label_1:
        int num1 = -1559201723;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -960965965)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 677632836 ^ -102714773;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = (int) num2 * 1695565852 ^ -1496046530;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 912454838;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1003552322)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -499189734 ^ -1275683629;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 1611831401;
        bool asBool;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1664497180)) % 7U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * 1199357756 ^ -1457121009;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -361647807 ^ -1528643413;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1288820785 ^ -1577805538;
              continue;
            case 5:
              num1 = (int) num2 * 623013972 ^ 892161202;
              continue;
            case 6:
              aVal = new JSONData(false);
              num1 = (int) num2 * 1538311202 ^ 1881157379;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -934696158;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1199754688)) % 4U)
          {
            case 1:
              asArray = aVal;
              num1 = (int) num2 * 1672740762 ^ -1152880410;
              continue;
            case 2:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -928051976 ^ 267641497;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1825175486;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1293343146)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1087336513 ^ 621266857;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1102229866 ^ -1472653723;
              continue;
            case 4:
              aVal = new JSONClass();
              num1 = (int) num2 * -920636137 ^ -919071036;
              continue;
            case 5:
              asObject = aVal;
              num1 = (int) num2 * 623533969 ^ 1135301008;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
