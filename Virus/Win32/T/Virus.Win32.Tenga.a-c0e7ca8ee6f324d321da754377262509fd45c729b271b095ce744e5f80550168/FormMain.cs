// Decompiled with JetBrains decompiler
// Type: AutonomousTracer.FormMain
// Assembly: AutonomousTracer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BF3A307C-FE44-495D-87B6-D463E5260761
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Tenga.a-c0e7ca8ee6f324d321da754377262509fd45c729b271b095ce744e5f80550168.exe

using CommonSupport;
using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace AutonomousTracer
{
  public class FormMain : Form
  {
    private IContainer components = (IContainer) null;
    private TracerControl tracerControl1;
    private ToolStrip toolStrip1;
    private ToolStripButton toolStripButtonLoad;
    private ToolStripButton toolStripButtonUpdate;
    private ToolStripSeparator toolStripSeparator1;
    private ToolStripLabel toolStripLabelFile;
    private string _filePath = (string) null;
    private FileSystemWatcher _watcher = new FileSystemWatcher();
    private long _lastFilePos = 0;
    private FileStream _fs = (FileStream) null;
    private Tracer _tracer = new Tracer();
    private StreamReader _reader = (StreamReader) null;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      Tracer tracer = new Tracer();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (FormMain));
      this.tracerControl1 = new TracerControl();
      this.toolStrip1 = new ToolStrip();
      this.toolStripButtonLoad = new ToolStripButton();
      this.toolStripButtonUpdate = new ToolStripButton();
      this.toolStripSeparator1 = new ToolStripSeparator();
      this.toolStripLabelFile = new ToolStripLabel();
      this.toolStrip1.SuspendLayout();
      this.SuspendLayout();
      this.tracerControl1.DetailsVisible = false;
      ((Control) this.tracerControl1).Dock = DockStyle.Fill;
      ((Control) this.tracerControl1).Location = new Point(0, 25);
      ((Control) this.tracerControl1).Name = "tracerControl1";
      this.tracerControl1.ShowDetails = false;
      this.tracerControl1.ShowMethodFilter = true;
      ((Control) this.tracerControl1).Size = new Size(928, 641);
      ((Control) this.tracerControl1).TabIndex = 0;
      tracer.Enabled = true;
      this.tracerControl1.Tracer = tracer;
      this.toolStrip1.Items.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.toolStripButtonLoad,
        (ToolStripItem) this.toolStripButtonUpdate,
        (ToolStripItem) this.toolStripSeparator1,
        (ToolStripItem) this.toolStripLabelFile
      });
      this.toolStrip1.Location = new Point(0, 0);
      this.toolStrip1.Name = "toolStrip1";
      this.toolStrip1.Size = new Size(928, 25);
      this.toolStrip1.TabIndex = 1;
      this.toolStrip1.Text = "toolStrip1";
      this.toolStripButtonLoad.Image = (Image) componentResourceManager.GetObject("toolStripButtonLoad.Image");
      this.toolStripButtonLoad.ImageTransparentColor = Color.Magenta;
      this.toolStripButtonLoad.Name = "toolStripButtonLoad";
      this.toolStripButtonLoad.Size = new Size(50, 22);
      this.toolStripButtonLoad.Text = "Load";
      this.toolStripButtonLoad.Click += new EventHandler(this.toolStripButtonLoad_Click);
      this.toolStripButtonUpdate.Image = (Image) componentResourceManager.GetObject("toolStripButtonUpdate.Image");
      this.toolStripButtonUpdate.ImageTransparentColor = Color.Magenta;
      this.toolStripButtonUpdate.Name = "toolStripButtonUpdate";
      this.toolStripButtonUpdate.Size = new Size(62, 22);
      this.toolStripButtonUpdate.Text = "Update";
      this.toolStripButtonUpdate.Click += new EventHandler(this.toolStripButtonUpdate_Click);
      this.toolStripSeparator1.Name = "toolStripSeparator1";
      this.toolStripSeparator1.Size = new Size(6, 25);
      this.toolStripLabelFile.Name = "toolStripLabelFile";
      this.toolStripLabelFile.Size = new Size(23, 22);
      this.toolStripLabelFile.Text = "File";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(928, 666);
      this.Controls.Add((Control) this.tracerControl1);
      this.Controls.Add((Control) this.toolStrip1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (FormMain);
      this.Text = "Autonomous Tracer v.0.8";
      this.Load += new EventHandler(this.FormMain_Load);
      this.toolStrip1.ResumeLayout(false);
      this.toolStrip1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    public FormMain()
    {
      this.InitializeComponent();
      this._tracer.Add((ITracerItemSink) new TracerItemKeeperSink(this._tracer)
      {
        MaxItems = 1000000
      });
      this._watcher.NotifyFilter = NotifyFilters.Attributes | NotifyFilters.Size | NotifyFilters.LastWrite | NotifyFilters.LastAccess | NotifyFilters.CreationTime;
      this._watcher.Changed += new FileSystemEventHandler(this._watcher_Changed);
    }

    private void FormMain_Load(object sender, EventArgs e) => this.tracerControl1.Tracer = this._tracer;

    private void toolStripButtonLoad_Click(object sender, EventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.Filter = "Assemblies (*.log; *.txt)|*.log;*.txt";
      if (openFileDialog.ShowDialog() != DialogResult.OK)
        return;
      this._tracer.Clear(false);
      this._filePath = openFileDialog.FileName;
      this._watcher.Path = Path.GetDirectoryName(this._filePath);
      this._watcher.Filter = Path.GetFileName(this._filePath);
      this._watcher.EnableRaisingEvents = true;
      if (this._fs != null)
        this._fs.Dispose();
      this._lastFilePos = 0L;
      this.toolStripLabelFile.Text = this._filePath;
      this.toolStripButtonUpdate_Click((object) this, EventArgs.Empty);
    }

    private void _watcher_Changed(object sender, FileSystemEventArgs e)
    {
      if (this._fs == null || e.ChangeType == WatcherChangeTypes.Deleted || e.ChangeType == WatcherChangeTypes.Created)
      {
        if (this._reader != null)
        {
          this._reader.Dispose();
          this._reader = (StreamReader) null;
        }
        if (this._fs != null)
        {
          this._fs.Dispose();
          this._fs = (FileStream) null;
        }
        if (e.ChangeType == WatcherChangeTypes.Deleted)
          return;
        try
        {
          this._fs = new FileStream(this._filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
          this._reader = new StreamReader((Stream) this._fs);
        }
        catch (Exception ex)
        {
          SystemMonitor.Error(ex.Message);
          this._reader = (StreamReader) null;
          this._fs.Dispose();
          this._fs = (FileStream) null;
          return;
        }
      }
      if (this._fs == null || !this._fs.CanRead)
        return;
      if (this._fs.Length < this._lastFilePos - 10L)
        this._lastFilePos = 0L;
      this._fs.Seek(this._lastFilePos, SeekOrigin.Begin);
      for (string str = this._reader.ReadLine(); str != null; str = this._reader.ReadLine())
      {
        TracerItem fileItem = TracerItem.ParseFileItem(str);
        if (fileItem != null)
          this._tracer.Add(fileItem);
      }
      this._lastFilePos = this._fs.Position;
    }

    private void toolStripButtonUpdate_Click(object sender, EventArgs e) => GeneralHelper.FireAndForget(new GeneralHelper.DefaultDelegate((object) this, __methodptr(\u003CtoolStripButtonUpdate_Click\u003Eb__0)));
  }
}
