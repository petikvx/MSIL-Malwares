// Decompiled with JetBrains decompiler
// Type: 052709057542.Utils.977352532210
// Assembly: 052709057542, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 359C9CB9-9F6B-407E-806A-B212EE061A4B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-863aa9d936ae1e503405345248a0f92c12efaa795df31afd30568cac9e6c7a0e.exe

using \u003052709057542.Utils;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.NetworkInformation;
using System.Runtime.CompilerServices;

namespace \u003052709057542.Utils
{
  public class \u003977352532210 : WebClient
  {
    public static readonly string[] \u003551108655722;

    public TimeSpan \u003707186072676
    {
      [CompilerGenerated, SpecialName] get => this.\u003424732603477;
      set => ((\u003857880491262) this).\u003424732603477 = value;
    }

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = base.GetWebRequest(uri);
      webRequest.Timeout = (int) ((\u003857880491262) this).get_Timeout().TotalMilliseconds;
      ((HttpWebRequest) webRequest).ReadWriteTimeout = (int) ((\u003857880491262) this).get_Timeout().TotalMilliseconds;
      return webRequest;
    }

    public static bool \u003783641160479(int _param0 = 1000, string[] _param1 = null)
    {
      if (!NetworkInterface.GetIsNetworkAvailable())
        return false;
      string[] strArray1 = _param1;
      if (strArray1 == null)
        strArray1 = new string[2]
        {
          "www.google.com",
          "http://www.google.com"
        };
      string[] strArray2 = strArray1;
      return \u003149723988217.\u003663671592327(_param0, (IEnumerable<string>) strArray2) || \u003149723988217.\u003429269735607((IEnumerable<string>) strArray2);
    }
  }
}
