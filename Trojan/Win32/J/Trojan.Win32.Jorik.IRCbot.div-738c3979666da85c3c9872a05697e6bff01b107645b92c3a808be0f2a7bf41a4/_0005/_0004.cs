// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Refx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0A6501CE-651B-49EF-9CD4-6837233ABDB4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Jorik.IRCbot.div-738c3979666da85c3c9872a05697e6bff01b107645b92c3a808be0f2a7bf41a4.exe

using \u0003;
using \u0017;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Reflection.Emit;

namespace \u0005
{
  internal static class \u0004
  {
    public static void \u008E()
    {
      Type declaringType = new StackTrace().GetFrame(1).GetMethod().DeclaringType;
      foreach (FieldInfo field in declaringType.GetFields(BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.GetField))
      {
        try
        {
          if ((object) field.FieldType == (object) typeof (\u0002))
          {
            DynamicMethod dynamicMethod = new DynamicMethod(string.Empty, typeof (string), new Type[1]
            {
              typeof (int)
            }, declaringType, true);
            ILGenerator ilGenerator = dynamicMethod.GetILGenerator();
            ilGenerator.Emit(OpCodes.Ldarg_0);
            foreach (MethodInfo method in typeof (\u0004).GetMethods(BindingFlags.Static | BindingFlags.Public))
            {
              if ((object) method.ReturnType == (object) typeof (string))
              {
                ilGenerator.Emit(OpCodes.Ldc_I4, field.MetadataToken & 16777215);
                ilGenerator.Emit(OpCodes.Sub);
                ilGenerator.Emit(OpCodes.Call, method);
                break;
              }
            }
            ilGenerator.Emit(OpCodes.Ret);
            field.SetValue((object) null, (object) (\u0002) dynamicMethod.CreateDelegate(typeof (\u0002)));
            break;
          }
        }
        catch
        {
        }
      }
    }
  }
}
