// Decompiled with JetBrains decompiler
// Type: 家BMMBvdv她Wv.ek顾EXsdyi行J氏
// Assembly: zr太顾DDP izGC氏官, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3E60E20-DA1E-427E-85AF-7B8FBB134143
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Crypt.gen-1b3da0f883c24b91508fa490013c10763b6dc410a322cf31b8eb53916037add1.exe

using c顾太j氏Y的Ra的HTB;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;
using 城gS成官z的Jg顾城是;
using 太太LA顾I成pyze;
using 的席CtTX顾氏BMh;

namespace 家BMMBvdv她Wv
{
  [DesignerCategory("code")]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  [ToolboxItem(true)]
  [HelpKeyword("vs.data.TableAdapterManager")]
  public class ek顾EXsdyi行J氏 : Component
  {
    private ek顾EXsdyi行J氏.UpdateOrderOption vOKNXgbYJJ;
    private aQK公Mbe席dp执r JwhRNZUEZa顾;
    private 顾泽gh物希她官nQ成n 行XjYV顾kksL城G;
    private 孙族顾GUUc她商顾k司p 顾EYq太是太物jua;
    private bool 公H顾U的孙bnf;
    private IDbConnection po顾成YZZNym;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public ek顾EXsdyi行J氏.UpdateOrderOption UpdateOrder
    {
      get => this.vOKNXgbYJJ;
      set => this.vOKNXgbYJJ = value;
    }

    [DebuggerNonUserCode]
    [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public aQK公Mbe席dp执r ItemTableAdapter
    {
      get => this.JwhRNZUEZa顾;
      set => this.JwhRNZUEZa顾 = value;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
    public 顾泽gh物希她官nQ成n OrderTableAdapter
    {
      get => this.行XjYV顾kksL城G;
      set => this.行XjYV顾kksL城G = value;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
    public 孙族顾GUUc她商顾k司p OrderDetailTableAdapter
    {
      get => this.顾EYq太是太物jua;
      set => this.顾EYq太是太物jua = value;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public bool BackupDataSetBeforeUpdate
    {
      get => this.公H顾U的孙bnf;
      set => this.公H顾U的孙bnf = value;
    }

    [DebuggerNonUserCode]
    [Browsable(false)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public IDbConnection Connection
    {
      get
      {
        if (this.po顾成YZZNym != null)
          return this.po顾成YZZNym;
        if (this.JwhRNZUEZa顾 != null && this.JwhRNZUEZa顾.Connection != null)
          return (IDbConnection) this.JwhRNZUEZa顾.Connection;
        if (this.行XjYV顾kksL城G != null && this.行XjYV顾kksL城G.Connection != null)
          return (IDbConnection) this.行XjYV顾kksL城G.Connection;
        return this.顾EYq太是太物jua != null && this.顾EYq太是太物jua.Connection != null ? (IDbConnection) this.顾EYq太是太物jua.Connection : (IDbConnection) null;
      }
      set => this.po顾成YZZNym = value;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    [Browsable(false)]
    public int TableAdapterInstanceCount
    {
      get
      {
        int num = 0;
        if (this.JwhRNZUEZa顾 != null)
          ++num;
        if (this.行XjYV顾kksL城G != null)
          ++num;
        if (this.顾EYq太是太物jua != null)
          ++num;
        return num;
      }
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private int 她U司V司UWx族kf(
      K望的OmcaM首物 顾X的KdKEAfE孙Q,
      List<DataRow> T司Ba顾公Z她泽f首望,
      List<DataRow> hC望家L的rJDa)
    {
      int num = 0;
      if (this.JwhRNZUEZa顾 != null)
      {
        DataRow[] dataRowArray = this.c的d的泽K首M泽族(顾X的KdKEAfE孙Q.Item.Select((string) null, (string) null, DataViewRowState.ModifiedCurrent), hC望家L的rJDa);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.JwhRNZUEZa顾.太d她o希太cO太NW生(dataRowArray);
          T司Ba顾公Z她泽f首望.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.行XjYV顾kksL城G != null)
      {
        DataRow[] dataRowArray = this.c的d的泽K首M泽族(顾X的KdKEAfE孙Q.Order.Select((string) null, (string) null, DataViewRowState.ModifiedCurrent), hC望家L的rJDa);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.行XjYV顾kksL城G.YMsF执p是b希yum(dataRowArray);
          T司Ba顾公Z她泽f首望.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.顾EYq太是太物jua != null)
      {
        DataRow[] dataRowArray = this.c的d的泽K首M泽族(顾X的KdKEAfE孙Q.OrderDetail.Select((string) null, (string) null, DataViewRowState.ModifiedCurrent), hC望家L的rJDa);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.顾EYq太是太物jua.pJYUMvKr的r物c(dataRowArray);
          T司Ba顾公Z她泽f首望.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      return num;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private int xSo她氏jr太SxQH太(K望的OmcaM首物 族Y泽H氏sz执Jd, List<DataRow> 成dt望Z席执JD)
    {
      int num = 0;
      if (this.JwhRNZUEZa顾 != null)
      {
        DataRow[] dataRowArray = 族Y泽H氏sz执Jd.Item.Select((string) null, (string) null, DataViewRowState.Added);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.JwhRNZUEZa顾.太d她o希太cO太NW生(dataRowArray);
          成dt望Z席执JD.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.行XjYV顾kksL城G != null)
      {
        DataRow[] dataRowArray = 族Y泽H氏sz执Jd.Order.Select((string) null, (string) null, DataViewRowState.Added);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.行XjYV顾kksL城G.YMsF执p是b希yum(dataRowArray);
          成dt望Z席执JD.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.顾EYq太是太物jua != null)
      {
        DataRow[] dataRowArray = 族Y泽H氏sz执Jd.OrderDetail.Select((string) null, (string) null, DataViewRowState.Added);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.顾EYq太是太物jua.pJYUMvKr的r物c(dataRowArray);
          成dt望Z席执JD.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      return num;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int F望A希望otc望行u家(K望的OmcaM首物 IDk家Chyh顾城望v, List<DataRow> xysi孙yoRU)
    {
      int num = 0;
      if (this.顾EYq太是太物jua != null)
      {
        DataRow[] dataRowArray = IDk家Chyh顾城望v.OrderDetail.Select((string) null, (string) null, DataViewRowState.Deleted);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.顾EYq太是太物jua.pJYUMvKr的r物c(dataRowArray);
          xysi孙yoRU.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.行XjYV顾kksL城G != null)
      {
        DataRow[] dataRowArray = IDk家Chyh顾城望v.Order.Select((string) null, (string) null, DataViewRowState.Deleted);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.行XjYV顾kksL城G.YMsF执p是b希yum(dataRowArray);
          xysi孙yoRU.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      if (this.JwhRNZUEZa顾 != null)
      {
        DataRow[] dataRowArray = IDk家Chyh顾城望v.Item.Select((string) null, (string) null, DataViewRowState.Deleted);
        if (dataRowArray != null && dataRowArray.Length != 0)
        {
          num += this.JwhRNZUEZa顾.太d她o希太cO太NW生(dataRowArray);
          xysi孙yoRU.AddRange((IEnumerable<DataRow>) dataRowArray);
        }
      }
      return num;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private DataRow[] c的d的泽K首M泽族(DataRow[] Hqo司lbEw的司泽生行, List<DataRow> ujMow首的n家顾pYd)
    {
      if (Hqo司lbEw的司泽生行 == null || Hqo司lbEw的司泽生行.Length < 1 || ujMow首的n家顾pYd == null || ujMow首的n家顾pYd.Count < 1)
        return Hqo司lbEw的司泽生行;
      List<DataRow> dataRowList = new List<DataRow>();
      for (int index = 0; index < Hqo司lbEw的司泽生行.Length; ++index)
      {
        DataRow dataRow = Hqo司lbEw的司泽生行[index];
        if (!ujMow首的n家顾pYd.Contains(dataRow))
          dataRowList.Add(dataRow);
      }
      return dataRowList.ToArray();
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public virtual int 希uV执s泽N是族VO望G(K望的OmcaM首物 她行WmM的公bZX城o)
    {
      if (她行WmM的公bZX城o == null)
        throw new ArgumentNullException("dataSet");
      if (!她行WmM的公bZX城o.HasChanges())
        return 0;
      if (this.JwhRNZUEZa顾 != null && !this.vi物I城太的家望顾((IDbConnection) this.JwhRNZUEZa顾.Connection))
        throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
      if (this.行XjYV顾kksL城G != null && !this.vi物I城太的家望顾((IDbConnection) this.行XjYV顾kksL城G.Connection))
        throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
      if (this.顾EYq太是太物jua != null && !this.vi物I城太的家望顾((IDbConnection) this.顾EYq太是太物jua.Connection))
        throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
      IDbConnection connection = this.Connection;
      if (connection == null)
        throw new ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterManager TableAdapter property to a valid TableAdapter instance.");
      bool flag = false;
      if ((connection.State & ConnectionState.Broken) == ConnectionState.Broken)
        connection.Close();
      if (connection.State == ConnectionState.Closed)
      {
        connection.Open();
        flag = true;
      }
      IDbTransaction dbTransaction = connection.BeginTransaction();
      if (dbTransaction == null)
        throw new ApplicationException("The transaction cannot begin. The current data connection does not support transactions or the current state is not allowing the transaction to begin.");
      List<DataRow> dataRowList1 = new List<DataRow>();
      List<DataRow> dataRowList2 = new List<DataRow>();
      List<DataAdapter> dataAdapterList = new List<DataAdapter>();
      Dictionary<object, IDbConnection> dictionary = new Dictionary<object, IDbConnection>();
      int num = 0;
      DataSet dataSet = (DataSet) null;
      if (this.BackupDataSetBeforeUpdate)
      {
        dataSet = new DataSet();
        dataSet.Merge((DataSet) 她行WmM的公bZX城o);
      }
      try
      {
        if (this.JwhRNZUEZa顾 != null)
        {
          dictionary.Add((object) this.JwhRNZUEZa顾, (IDbConnection) this.JwhRNZUEZa顾.Connection);
          this.JwhRNZUEZa顾.Connection = (SqlConnection) connection;
          this.JwhRNZUEZa顾.Transaction = (SqlTransaction) dbTransaction;
          if (this.JwhRNZUEZa顾.Adapter.AcceptChangesDuringUpdate)
          {
            this.JwhRNZUEZa顾.Adapter.AcceptChangesDuringUpdate = false;
            dataAdapterList.Add((DataAdapter) this.JwhRNZUEZa顾.Adapter);
          }
        }
        if (this.行XjYV顾kksL城G != null)
        {
          dictionary.Add((object) this.行XjYV顾kksL城G, (IDbConnection) this.行XjYV顾kksL城G.Connection);
          this.行XjYV顾kksL城G.Connection = (SqlConnection) connection;
          this.行XjYV顾kksL城G.Transaction = (SqlTransaction) dbTransaction;
          if (this.行XjYV顾kksL城G.Adapter.AcceptChangesDuringUpdate)
          {
            this.行XjYV顾kksL城G.Adapter.AcceptChangesDuringUpdate = false;
            dataAdapterList.Add((DataAdapter) this.行XjYV顾kksL城G.Adapter);
          }
        }
        if (this.顾EYq太是太物jua != null)
        {
          dictionary.Add((object) this.顾EYq太是太物jua, (IDbConnection) this.顾EYq太是太物jua.Connection);
          this.顾EYq太是太物jua.Connection = (SqlConnection) connection;
          this.顾EYq太是太物jua.Transaction = (SqlTransaction) dbTransaction;
          if (this.顾EYq太是太物jua.Adapter.AcceptChangesDuringUpdate)
          {
            this.顾EYq太是太物jua.Adapter.AcceptChangesDuringUpdate = false;
            dataAdapterList.Add((DataAdapter) this.顾EYq太是太物jua.Adapter);
          }
        }
        if (this.UpdateOrder == ek顾EXsdyi行J氏.UpdateOrderOption.UpdateInsertDelete)
        {
          num += this.她U司V司UWx族kf(她行WmM的公bZX城o, dataRowList1, dataRowList2);
          num += this.xSo她氏jr太SxQH太(她行WmM的公bZX城o, dataRowList2);
        }
        else
        {
          num += this.xSo她氏jr太SxQH太(她行WmM的公bZX城o, dataRowList2);
          num += this.她U司V司UWx族kf(她行WmM的公bZX城o, dataRowList1, dataRowList2);
        }
        num += this.F望A希望otc望行u家(她行WmM的公bZX城o, dataRowList1);
        dbTransaction.Commit();
        if (0 < dataRowList2.Count)
        {
          DataRow[] array = new DataRow[dataRowList2.Count];
          dataRowList2.CopyTo(array);
          for (int index = 0; index < array.Length; ++index)
            array[index].AcceptChanges();
        }
        if (0 < dataRowList1.Count)
        {
          DataRow[] array = new DataRow[dataRowList1.Count];
          dataRowList1.CopyTo(array);
          for (int index = 0; index < array.Length; ++index)
            array[index].AcceptChanges();
        }
      }
      catch (Exception ex)
      {
        dbTransaction.Rollback();
        if (this.BackupDataSetBeforeUpdate)
        {
          Debug.Assert(dataSet != null);
          她行WmM的公bZX城o.Clear();
          她行WmM的公bZX城o.Merge(dataSet);
        }
        else if (0 < dataRowList2.Count)
        {
          DataRow[] array = new DataRow[dataRowList2.Count];
          dataRowList2.CopyTo(array);
          for (int index = 0; index < array.Length; ++index)
          {
            DataRow dataRow = array[index];
            dataRow.AcceptChanges();
            dataRow.SetAdded();
          }
        }
        throw ex;
      }
      finally
      {
        if (flag)
          connection.Close();
        if (this.JwhRNZUEZa顾 != null)
        {
          this.JwhRNZUEZa顾.Connection = (SqlConnection) dictionary[(object) this.JwhRNZUEZa顾];
          this.JwhRNZUEZa顾.Transaction = (SqlTransaction) null;
        }
        if (this.行XjYV顾kksL城G != null)
        {
          this.行XjYV顾kksL城G.Connection = (SqlConnection) dictionary[(object) this.行XjYV顾kksL城G];
          this.行XjYV顾kksL城G.Transaction = (SqlTransaction) null;
        }
        if (this.顾EYq太是太物jua != null)
        {
          this.顾EYq太是太物jua.Connection = (SqlConnection) dictionary[(object) this.顾EYq太是太物jua];
          this.顾EYq太是太物jua.Transaction = (SqlTransaction) null;
        }
        if (0 < dataAdapterList.Count)
        {
          DataAdapter[] array = new DataAdapter[dataAdapterList.Count];
          dataAdapterList.CopyTo(array);
          for (int index = 0; index < array.Length; ++index)
            array[index].AcceptChangesDuringUpdate = true;
        }
      }
      return num;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    protected virtual void Tog希司yMaBOpF城(
      DataRow[] ngq的ZePPlJ,
      DataRelation 司PgR太x泽族太,
      bool 顾望物B她uutagEBj)
    {
      Array.Sort<DataRow>(ngq的ZePPlJ, (IComparer<DataRow>) new ek顾EXsdyi行J氏.SelfReferenceComparer(司PgR太x泽族太, 顾望物B她uutagEBj));
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    protected virtual bool vi物I城太的家望顾(IDbConnection Ff顾商QiBpH) => this.po顾成YZZNym != null || this.Connection == null || Ff顾商QiBpH == null || string.Equals(this.Connection.ConnectionString, Ff顾商QiBpH.ConnectionString, StringComparison.Ordinal);

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public enum UpdateOrderOption
    {
      InsertUpdateDelete,
      UpdateInsertDelete,
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private class SelfReferenceComparer : IComparer<DataRow>
    {
      private DataRelation _relation;
      private int _childFirst;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      internal SelfReferenceComparer(DataRelation relation, bool childFirst)
      {
        this._relation = relation;
        if (childFirst)
          this._childFirst = -1;
        else
          this._childFirst = 1;
      }

      [DebuggerNonUserCode]
      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      private DataRow GetRoot(DataRow row, out int distance)
      {
        Debug.Assert(row != null);
        DataRow root = row;
        distance = 0;
        IDictionary<DataRow, DataRow> dictionary = (IDictionary<DataRow, DataRow>) new Dictionary<DataRow, DataRow>();
        dictionary[row] = row;
        for (DataRow parentRow = row.GetParentRow(this._relation, DataRowVersion.Default); parentRow != null && !dictionary.ContainsKey(parentRow); parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Default))
        {
          ++distance;
          root = parentRow;
          dictionary[parentRow] = parentRow;
        }
        if (distance == 0)
        {
          dictionary.Clear();
          dictionary[row] = row;
          for (DataRow parentRow = row.GetParentRow(this._relation, DataRowVersion.Original); parentRow != null && !dictionary.ContainsKey(parentRow); parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Original))
          {
            ++distance;
            root = parentRow;
            dictionary[parentRow] = parentRow;
          }
        }
        return root;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      public int Compare(DataRow row1, DataRow row2)
      {
        if (row1 == row2)
          return 0;
        if (row1 == null)
          return -1;
        if (row2 == null)
          return 1;
        int distance1 = 0;
        DataRow root1 = this.GetRoot(row1, out distance1);
        int distance2 = 0;
        DataRow root2 = this.GetRoot(row2, out distance2);
        if (root1 == root2)
          return this._childFirst * distance1.CompareTo(distance2);
        Debug.Assert(root1.Table != null && root2.Table != null);
        return root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2) ? -1 : 1;
      }
    }
  }
}
