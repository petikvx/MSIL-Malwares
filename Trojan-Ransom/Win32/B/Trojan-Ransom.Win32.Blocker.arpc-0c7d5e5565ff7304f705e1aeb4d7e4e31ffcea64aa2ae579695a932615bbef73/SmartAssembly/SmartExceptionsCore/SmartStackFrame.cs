// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.SmartStackFrame
// Assembly: 5555, Version=0.0.0.0, Culture=neutral, PublicKeyToken=f1fbbd7db53bfdb4
// MVID: 0D11B329-2752-44F3-ACE5-4122455C2392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.arpc-0c7d5e5565ff7304f705e1aeb4d7e4e31ffcea64aa2ae579695a932615bbef73.exe

using System;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [Serializable]
  public sealed class SmartStackFrame : ISerializable
  {
    public readonly int MethodID;
    public readonly object[] Objects;
    public readonly int ILOffset;
    public readonly int ExceptionStackDepth;

    public virtual void GetObjectData([In] SerializationInfo obj0, [In] StreamingContext obj1)
    {
      obj0.AddValue("UnhandledException.MethodID", (object) this.MethodID, typeof (int));
      obj0.AddValue("UnhandledException.ILOffset", (object) this.ILOffset, typeof (int));
      // ISSUE: type reference
      obj0.AddValue("UnhandledException.ExceptionStackDepth", (object) this.ExceptionStackDepth, \u0016\u0004.\u001B\u0003(__typeref (int)));
      int num1;
      int num2;
      int num3;
      if (this.Objects != null)
      {
        int length = this.Objects.Length;
        if (true)
        {
          if (true)
          {
            num1 = length;
          }
          else
          {
            num2 = length;
            goto label_17;
          }
        }
        else
        {
          num3 = length;
          goto label_15;
        }
      }
      else
        num1 = 0;
      if (true)
        goto label_18;
label_6:
      int num4;
      // ISSUE: type reference
      \u0099\u0004.\u007E\u008F\u0005((object) obj0, "UnhandledException.Objects.Length", (object) num4, \u0016\u0004.\u001B\u0003(__typeref (int)));
      int index;
      if (true)
      {
        index = 0;
        goto label_16;
      }
      else
        goto label_16;
label_18:
      num4 = num1;
      goto label_6;
label_15:
      index = num3 + 1;
label_16:
      num2 = index;
label_17:
      int num5 = num4;
      if (num2 >= num5)
        return;
      string str1 = \u0083\u0003.\u0099("UnhandledException.Objects[{0}]", (object) index);
      if (true)
        goto label_20;
label_8:
      string str2;
      try
      {
        if (this.Objects[index] == null)
        {
          // ISSUE: type reference
          \u0099\u0004.\u007E\u008F\u0005((object) obj0, str2, (object) null, \u0016\u0004.\u001B\u0003(__typeref (object)));
        }
        else if (true)
        {
          // ISSUE: type reference
          \u0099\u0004.\u007E\u008F\u0005((object) obj0, str2, (object) \u0087\u0003.\u009C((object) \u000F\u0003.\u007E\u0019(this.Objects[index]), (object) " - ", this.Objects[index]), \u0016\u0004.\u001B\u0003(__typeref (string)));
        }
      }
      catch (Exception ex)
      {
      }
      num3 = index;
      goto label_15;
label_20:
      str2 = str1;
      goto label_8;
    }

    internal SmartStackFrame([In] SerializationInfo obj0, [In] StreamingContext obj1)
    {
      this.MethodID = \u0080\u0003.\u007E\u0091\u0005((object) obj0, "UnhandledException.MethodID");
      this.ILOffset = \u0080\u0003.\u007E\u0091\u0005((object) obj0, "UnhandledException.ILOffset");
      this.ExceptionStackDepth = \u0080\u0003.\u007E\u0091\u0005((object) obj0, "UnhandledException.ExceptionStackDepth");
      int length = \u0080\u0003.\u007E\u0091\u0005((object) obj0, "UnhandledException.Objects.Length");
      this.Objects = new object[length];
      for (int index = 0; index < length; ++index)
      {
        try
        {
          // ISSUE: type reference
          this.Objects[index] = \u009A\u0004.\u007E\u0090\u0005((object) obj0, \u0083\u0003.\u0099("UnhandledException.Objects[{0}]", (object) index), \u0016\u0004.\u001B\u0003(__typeref (string)));
        }
        catch (Exception ex)
        {
          this.Objects[index] = (object) "Could not deserialize the obect";
        }
      }
    }

    internal SmartStackFrame([In] int obj0, [In] object[] obj1, [In] int obj2, [In] int obj3)
    {
      this.MethodID = obj0;
      this.ExceptionStackDepth = obj3;
      this.ILOffset = obj2;
      this.Objects = obj1;
    }
  }
}
