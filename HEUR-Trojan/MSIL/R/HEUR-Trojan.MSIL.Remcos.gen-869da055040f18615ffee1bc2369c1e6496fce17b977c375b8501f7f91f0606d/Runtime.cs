// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Runtime
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Threading;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Runtime
  {
    private static Runtime.Platforms? mPlatform;
    private static char? mPathSeparator;

    public static Runtime.Platforms Platform
    {
      get
      {
        if ((Runtime.mPlatform.HasValue ? 1 : 0) == 0)
          Runtime.\uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F2();
        return Runtime.mPlatform.Value;
      }
    }

    public static char PathSeparator
    {
      get
      {
        if ((Runtime.mPathSeparator.HasValue ? 1 : 0) == 0)
          Runtime.\uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F2();
        return Runtime.mPathSeparator.Value;
      }
    }

    private static void \uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F2()
    {
label_2:
      int num1 = 2;
      PlatformID platform;
      while (true)
      {
        switch (num1 ^ 62)
        {
          case 57:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Runtime.get_Platform);
            num1 = 7;
            continue;
          case 58:
            switch (platform)
            {
              case PlatformID.Win32S:
              case PlatformID.Win32Windows:
              case PlatformID.Win32NT:
              case PlatformID.WinCE:
              case PlatformID.Xbox:
                goto label_9;
              case PlatformID.Unix:
                goto label_11;
              case PlatformID.MacOSX:
                goto label_10;
              default:
                num1 = 0;
                continue;
            }
          case 59:
            platform = Environment.OSVersion.Platform;
            num1 = 4;
            continue;
          case 60:
            Runtime.mPathSeparator = new char?(Conversions.ToChar("/"));
            num1 = 3;
            continue;
          case 61:
            num1 = 5;
            continue;
          case 62:
            goto label_11;
          default:
            goto label_2;
        }
      }
label_9:
      Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.Windows);
      Runtime.mPathSeparator = new char?(Conversions.ToChar("\\"));
      return;
label_10:
      Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.Mac);
      return;
label_11:
      if (((!Directory.Exists("/Applications") ? 1 : 0) != 0 || (!Directory.Exists("/System") ? 1 : 0) != 0 || (!Directory.Exists("/Users") ? 1 : 0) != 0 || !Directory.Exists("/Volumes") ? 1 : 0) == 0)
      {
        Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.Mac);
      }
      else
      {
label_14:
        // ISSUE: reference to a compiler-generated method
        int num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
        string lower;
        bool flag;
        while (true)
        {
          switch ((num2 ^ 58) + 53)
          {
            case 0:
              flag = lower.Contains("raspberrypi");
              num2 = -11;
              continue;
            case 1:
              lower = Runtime.\uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F3().ToLower();
              num2 = -15;
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Runtime.\uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F3);
              num2 = -9;
              continue;
            case 3:
              Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.Linux);
              num2 = -10;
              continue;
            case 4:
              if (flag)
              {
                num2 = -22;
                continue;
              }
              goto label_22;
            case 5:
              goto label_21;
            default:
              goto label_14;
          }
        }
label_21:
        int num3 = 0;
        goto label_23;
label_22:
        num3 = 1;
label_23:
        if (num3 == 0)
        {
          Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.ARMSoft);
          if ((!lower.Contains("armv7l") ? 1 : 0) == 0)
            Runtime.mPlatform = new Runtime.Platforms?(Runtime.Platforms.ARMHard);
        }
      }
    }

    private static string \uE1C8\uE8BD\uEE87\uF510\uE40C\uEB27\uED8B\uEAD2\uF3FA\uF278\uE4D8\uE5F3()
    {
label_2:
      int num1 = 114;
      ProcessStartInfo processStartInfo;
      // ISSUE: variable of a compiler-generated type
      Runtime.\uF58F\uF330\uEBD5\uE1E1\uED8C\uEB58\uF51C\uF515\uE88D\uE500\uEF0A\uF151 obj;
      Process process;
      while (true)
      {
        switch (num1 ^ 57)
        {
          case 64:
            num1 = 115;
            continue;
          case 65:
            num1 = 116;
            continue;
          case 66:
            num1 = 120;
            continue;
          case 67:
            num1 = 107;
            continue;
          case 68:
            num1 = 117;
            continue;
          case 69:
            processStartInfo.UseShellExecute = false;
            num1 = 122;
            continue;
          case 70:
            num1 = 108;
            continue;
          case 71:
            processStartInfo.Arguments = "-a";
            num1 = 109;
            continue;
          case 72:
            processStartInfo.FileName = "uname";
            num1 = 119;
            continue;
          case 73:
            // ISSUE: reference to a compiler-generated field
            obj.\u0024VB\u0024Local_lines = new List<string>();
            num1 = 118;
            continue;
          case 74:
            processStartInfo = process.StartInfo;
            num1 = 113;
            continue;
          case 75:
            // ISSUE: object of a compiler-generated type is created
            obj = new Runtime.\uF58F\uF330\uEBD5\uE1E1\uED8C\uEB58\uF51C\uF515\uE88D\uE500\uEF0A\uF151();
            num1 = 112;
            continue;
          case 76:
            processStartInfo.RedirectStandardError = true;
            num1 = (int) sbyte.MaxValue;
            continue;
          case 77:
            processStartInfo = (ProcessStartInfo) null;
            num1 = 111;
            continue;
          case 78:
            num1 = 126;
            continue;
          case 79:
            process = new Process();
            num1 = 121;
            continue;
          case 80:
            num1 = 124;
            continue;
          case 81:
            processStartInfo.CreateNoWindow = true;
            num1 = 105;
            continue;
          case 82:
            processStartInfo.RedirectStandardOutput = true;
            num1 = 125;
            continue;
          case 83:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Runtime.get_Platform);
            num1 = 106;
            continue;
          case 84:
            num1 = 104;
            continue;
          case 85:
            processStartInfo.RedirectStandardInput = false;
            num1 = 123;
            continue;
          case 86:
            // ISSUE: reference to a compiler-generated method
            process.OutputDataReceived += new DataReceivedEventHandler(obj._Lambda\u0024__0);
            num1 = 110;
            continue;
          case 87:
            goto label_26;
          default:
            goto label_2;
        }
      }
label_26:
      string str;
      try
      {
        process.Start();
label_28:
        int num2 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(44);
        while (true)
        {
          switch ((num2 ^ 61) + 57)
          {
            case 0:
              Thread.Sleep(500);
              num2 = -14;
              continue;
            case 1:
              process.WaitForExit();
              num2 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(35);
              continue;
            case 2:
              process.Dispose();
              num2 = -9;
              continue;
            case 3:
              num2 = -6;
              continue;
            case 4:
              process.BeginOutputReadLine();
              num2 = -15;
              continue;
            case 5:
              num2 = -11;
              continue;
            case 6:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Runtime.\u002Ector);
              num2 = -16;
              continue;
            case 7:
              num2 = -12;
              continue;
            case 8:
              num2 = -19;
              continue;
            case 9:
              goto label_39;
            default:
              goto label_28;
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = Environment.OSVersion.Platform.ToString();
        ProjectData.ClearProjectError();
      }
label_39:
      return str;
    }

    public enum Platforms
    {
      Windows,
      Linux,
      Mac,
      ARMSoft,
      ARMHard,
    }
  }
}
