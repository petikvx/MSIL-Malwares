// Decompiled with JetBrains decompiler
// Type: 253358266500.764798047079
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using \u003253358266500;
using \u003594208694676;
using \u003644301880632;
using \u003828327059910;
using Microsoft.Build.Framework;
using System;
using System.Diagnostics;

namespace \u003253358266500
{
  internal abstract class \u003764798047079
  {
    public bool \u003700094655109 { get; private set; }

    public void \u003371947554914(string _param1, params string[] _param2)
    {
      \u003609835428327 obj = \u003764798047079.\u003723648795354(\u003368230637660.NormalImportance, _param1, _param2);
      this.\u003778194593139(in obj);
    }

    public void \u003970517661288(
      MessageImportance _param1,
      string _param2,
      params string[] _param3)
    {
      \u003609835428327 obj = \u003764798047079.\u003723648795354(_param1.\u003532650738536(), _param2, _param3);
      this.\u003778194593139(in obj);
    }

    public void \u003588109117808(string _param1, params string[] _param2)
    {
      \u003609835428327 obj = \u003764798047079.\u003723648795354(\u003368230637660.Warning, _param1, _param2);
      this.\u003778194593139(in obj);
    }

    public void \u003546249343367(string _param1, params string[] _param2)
    {
      \u003609835428327 obj = \u003764798047079.\u003723648795354(\u003368230637660.Error, _param1, _param2);
      this.\u003778194593139(in obj);
    }

    public void \u003778194593139(in \u003609835428327 _param1)
    {
      this.\u003700094655109 |= _param1.\u003212787262722 == \u003368230637660.Error;
      this.LogCore(in _param1);
    }

    protected abstract void LogCore(in \u003609835428327 message);

    private static \u003609835428327 \u003723648795354(
      \u003368230637660 _param0,
      string _param1,
      string[] _param2)
    {
      string code;
      if (_param1.Length >= 12 && _param1[0] == 'N' && _param1[1] == 'E' && _param1[2] == 'T' && _param1[3] == 'S' && _param1[4] == 'D' && _param1[5] == 'K' && \u003764798047079.\u003089109690296(_param1[6]) && \u003764798047079.\u003089109690296(_param1[7]) && \u003764798047079.\u003089109690296(_param1[8]) && \u003764798047079.\u003089109690296(_param1[9]) && _param1[10] == ':' && _param1[11] == ' ')
      {
        code = _param1.Substring(0, 10);
        _param1 = _param1.Substring(12);
      }
      else
        code = (string) null;
      return new \u003609835428327(_param0, string.Format(_param1, (object[]) _param2), code);
    }

    [Conditional("DEBUG")]
    private static void \u003352605375488(
      string _param0,
      string _param1,
      \u003368230637660 _param2)
    {
      switch (_param2)
      {
        case \u003368230637660.Error:
        case \u003368230637660.Warning:
          if (_param0 != null)
            break;
          throw new ArgumentException("Message is not prefixed with NETSDK error code or error code is formatted incorrectly: " + _param1);
        default:
          if (_param0 == null)
            break;
          throw new ArgumentException("Message is prefixed with NETSDK error, but error codes should not be used for informational messages: " + _param0 + ":" + _param1);
      }
    }

    private static bool \u003089109690296(char _param0) => _param0 >= '0' && _param0 <= '9';
  }
}
