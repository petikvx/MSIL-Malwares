// Decompiled with JetBrains decompiler
// Type: xClient.Core.MouseKeyHook.Implementation.MouseListener
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Windows.Forms;

namespace xClient.Core.MouseKeyHook.Implementation
{
  internal abstract class MouseListener : BaseListener, \uFFFDᄵⱚꅋ췙ᕒ区ﭙ쪛首\u0DCDᙺ\uFFFDٽ\u1F17픵읉ꌞ짗ꁪ
  {
    private readonly 艇屭쾺殁ꙛ悧ល몇\uF057ힻ摌쉇鵇ᅙ䌡틯\u2AAE\u32C9\uFFFD쐫 m_DoubleDown;
    private readonly 艇屭쾺殁ꙛ悧ល몇\uF057ힻ摌쉇鵇ᅙ䌡틯\u2AAE\u32C9\uFFFD쐫 m_SingleDown;
    private 䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃 m_PreviousPosition;

    protected MouseListener(
      \uFFFD̡ｨ\uAA3Cᘹ浏糺怆곽唠\uF724ﺿ윐뿣涘愞\uF41D뚤㪯\uFFFD subscribe)
      : base(subscribe)
    {
      this.m_PreviousPosition = new 䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃(-1, -1);
      this.m_DoubleDown = new 艇屭쾺殁ꙛ悧ល몇\uF057ힻ摌쉇鵇ᅙ䌡틯\u2AAE\u32C9\uFFFD쐫();
      this.m_SingleDown = new 艇屭쾺殁ꙛ悧ល몇\uF057ힻ摌쉇鵇ᅙ䌡틯\u2AAE\u32C9\uFFFD쐫();
    }

    protected override bool Callback(㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data)
    {
      㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 eventArgs = this.GetEventArgs(data);
      if (eventArgs.IsMouseKeyDown)
        this.ProcessDown(ref eventArgs);
      if (eventArgs.IsMouseKeyUp)
        this.ProcessUp(ref eventArgs);
      if (eventArgs.WheelScrolled)
        this.ProcessWheel(ref eventArgs);
      if (this.HasMoved(eventArgs.Point))
        this.ProcessMove(ref eventArgs);
      return !eventArgs.Handled;
    }

    protected abstract 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 GetEventArgs(
      㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data);

    protected virtual void ProcessWheel(
      ref 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      this.OnWheel((MouseEventArgs) e);
    }

    protected virtual void ProcessDown(
      ref 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      this.OnDown((MouseEventArgs) e);
      this.OnDownExt(e);
      if (e.Handled)
        return;
      if (e.Clicks == 2)
        this.m_DoubleDown.퍘\u2BD8\uFFFD盯쿵㷲豻븰붓뚂穽ᴇ붞ࢰ\u2691촆棰덋鏾硵(e.Button);
      if (e.Clicks != 1)
        return;
      this.m_SingleDown.퍘\u2BD8\uFFFD盯쿵㷲豻븰붓뚂穽ᴇ붞ࢰ\u2691촆棰덋鏾硵(e.Button);
    }

    protected virtual void ProcessUp(
      ref 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      if (this.m_SingleDown.络ᵸ栗䁟芁ⰸ豶囪㝊扙렸\uEA7E䢘ᖙ뎅锍嵇\uE252\uE6CF㼗(e.Button))
      {
        this.OnUp((MouseEventArgs) e);
        this.OnUpExt(e);
        if (e.Handled)
          return;
        this.OnClick((MouseEventArgs) e);
        this.m_SingleDown.䚏隻\u2BC4쎥萟䇢羵룚회㹀쀗羨颮\uFFFD屣\u1AE0ힻᧈ떿Ἔ(e.Button);
      }
      if (!this.m_DoubleDown.络ᵸ栗䁟芁ⰸ豶囪㝊扙렸\uEA7E䢘ᖙ뎅锍嵇\uE252\uE6CF㼗(e.Button))
        return;
      e = e.㡵\u2EC0歟૨\uA7E3歊\uFFFD퉹\uE1D6\uFFFD붎贱悀淙ꎜꋦĒ姮툸뤸();
      this.OnUp((MouseEventArgs) e);
      this.OnDoubleClick((MouseEventArgs) e);
      this.m_DoubleDown.䚏隻\u2BC4쎥萟䇢羵룚회㹀쀗羨颮\uFFFD屣\u1AE0ힻᧈ떿Ἔ(e.Button);
    }

    private void ProcessMove(
      ref 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      this.m_PreviousPosition = e.Point;
      this.OnMove((MouseEventArgs) e);
      this.OnMoveExt(e);
    }

    private bool HasMoved(
      䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃 actualPoint)
    {
      return 䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃.뇼嬈벇\u2BC4\uFFFDꐡ\uEFD8붥\u2890\u2127ӭ셡ⴄ퍦횆\u0FBD\uF249ኳ풁멸(this.m_PreviousPosition, actualPoint);
    }

    public event MouseEventHandler MouseMove;

    public event EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> MouseMoveExt;

    public event MouseEventHandler MouseClick;

    public event MouseEventHandler MouseDown;

    public event EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> MouseDownExt;

    public event MouseEventHandler MouseUp;

    public event EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> MouseUpExt;

    public event MouseEventHandler MouseWheel;

    public event MouseEventHandler MouseDoubleClick;

    protected virtual void OnMove(MouseEventArgs e)
    {
      MouseEventHandler mouseMove = this.MouseMove;
      if (mouseMove == null)
        return;
      mouseMove((object) this, e);
    }

    protected virtual void OnMoveExt(
      㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> mouseMoveExt = this.MouseMoveExt;
      if (mouseMoveExt == null)
        return;
      mouseMoveExt((object) this, e);
    }

    protected virtual void OnClick(MouseEventArgs e)
    {
      MouseEventHandler mouseClick = this.MouseClick;
      if (mouseClick == null)
        return;
      mouseClick((object) this, e);
    }

    protected virtual void OnDown(MouseEventArgs e)
    {
      MouseEventHandler mouseDown = this.MouseDown;
      if (mouseDown == null)
        return;
      mouseDown((object) this, e);
    }

    protected virtual void OnDownExt(
      㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> mouseDownExt = this.MouseDownExt;
      if (mouseDownExt == null)
        return;
      mouseDownExt((object) this, e);
    }

    protected virtual void OnUp(MouseEventArgs e)
    {
      MouseEventHandler mouseUp = this.MouseUp;
      if (mouseUp == null)
        return;
      mouseUp((object) this, e);
    }

    protected virtual void OnUpExt(
      㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 e)
    {
      EventHandler<㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙> mouseUpExt = this.MouseUpExt;
      if (mouseUpExt == null)
        return;
      mouseUpExt((object) this, e);
    }

    protected virtual void OnWheel(MouseEventArgs e)
    {
      MouseEventHandler mouseWheel = this.MouseWheel;
      if (mouseWheel == null)
        return;
      mouseWheel((object) this, e);
    }

    protected virtual void OnDoubleClick(MouseEventArgs e)
    {
      MouseEventHandler mouseDoubleClick = this.MouseDoubleClick;
      if (mouseDoubleClick == null)
        return;
      mouseDoubleClick((object) this, e);
    }
  }
}
