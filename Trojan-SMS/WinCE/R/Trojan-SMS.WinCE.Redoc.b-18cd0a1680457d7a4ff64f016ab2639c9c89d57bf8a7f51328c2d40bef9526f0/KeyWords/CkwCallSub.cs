// Decompiled with JetBrains decompiler
// Type: Dbasic.KeyWords.CkwCallSub
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

using System;
using System.Collections;

namespace Dbasic.KeyWords
{
  public class CkwCallSub : CkeyWords
  {
    public CkwCallSub(CRunner CRunner)
      : base(CRunner)
    {
    }

    public override MethodReturn Method(Place place, ref Locals locals)
    {
      ++place.WordI;
      RunReturn runReturn1 = this.CRunner.RunCode(place, true, true, ref locals);
      place = runReturn1.place;
      Hashtable localsReg = new Hashtable();
      Place htSub = (Place) this.CRunner.htSubs[(object) runReturn1.vString.ToLower(CRunner.cul)];
      Word word1 = (Word) ((Line) this.CRunner.lines[htSub.LineI]).words[1];
      int num = 1;
      if (word1.KeyWord < 0)
      {
        for (int index = 0; index < -word1.KeyWord; ++index)
        {
          ++place.WordI;
          RunReturn runReturn2 = this.CRunner.RunCode(place, true, true, ref locals);
          place = runReturn2.place;
          Word word2 = (Word) ((Line) this.CRunner.lines[htSub.LineI]).words[++num];
          localsReg.Add((object) word2.Value, (object) runReturn2.vString);
        }
        ++place.WordI;
      }
      else
        ++place.WordI;
      if (place.WordI >= ((Line) this.CRunner.lines[place.LineI]).words.Count)
        throw new Exception("Missing parameters.");
      return new MethodReturn(place, this.CRunner.StartSub(htSub, localsReg), 0.0);
    }
  }
}
