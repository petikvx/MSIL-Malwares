// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u000F;
using \u0014;
using Newtonsoft.Json;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0011
{
  internal struct \u0002
  {
    private static readonly char[] \u0001;
    internal JsonContainerType \u0001;
    internal int \u0001;
    internal string \u0001;
    internal bool \u0001;
    [NonSerialized]
    internal static GetString \u008D;

    public \u0002([In] JsonContainerType obj0)
    {
      this.\u0001 = obj0;
      this.\u0001 = \u0011.\u0002.\u0001(obj0);
      this.\u0001 = -1;
      this.\u0001 = (string) null;
    }

    internal int \u0001()
    {
      if (false)
        goto label_7;
      else
        goto label_10;
label_1:
      int num1;
      int num2;
      switch (num2)
      {
        case 0:
          break;
        case 1:
        case 2:
          num1 = this.\u0001;
          goto label_5;
        default:
          goto label_7;
      }
label_2:
      num1 = \u001F.\u007E\u0011\u0003((object) this.\u0001);
      if (true)
        num2 = num1 + 5;
      else
        goto label_5;
label_4:
      if (true)
        return num2;
      goto label_1;
label_5:
      num2 = \u0006.\u0001((ulong) num1);
      if (true)
        return num2 + 2;
      goto label_4;
label_7:
      if (true)
        throw new ArgumentOutOfRangeException(\u0011.\u0002.\u008D(2855));
      goto label_2;
label_10:
      num2 = (int) (this.\u0001 - 1);
      goto label_1;
    }

    internal void \u0001([In] StringBuilder obj0)
    {
      int num = (int) this.\u0001;
      JsonContainerType jsonContainerType;
      if (true)
        jsonContainerType = (JsonContainerType) num;
      switch (jsonContainerType)
      {
        case JsonContainerType.Object:
          string str = this.\u0001;
          if (\u0093.\u007E\u009B\u0003((object) str, \u0011.\u0002.\u0001) != -1)
          {
            StringBuilder stringBuilder1 = \u0094.\u007E\u009C\u0003((object) obj0, \u0011.\u0002.\u008D(2864));
            if (false)
              break;
            StringBuilder stringBuilder2 = \u0094.\u007E\u009C\u0003((object) obj0, str);
            StringBuilder stringBuilder3 = \u0094.\u007E\u009C\u0003((object) obj0, \u0011.\u0002.\u008D(2869));
            break;
          }
          if (\u001F.\u007E\u0012\u0003((object) obj0) > 0)
          {
            StringBuilder stringBuilder4 = \u0095.\u007E\u009D\u0003((object) obj0, '.');
          }
          StringBuilder stringBuilder5 = \u0094.\u007E\u009C\u0003((object) obj0, str);
          break;
        case JsonContainerType.Array:
        case JsonContainerType.Constructor:
          StringBuilder stringBuilder6 = \u0095.\u007E\u009D\u0003((object) obj0, '[');
          StringBuilder stringBuilder7 = \u0096.\u007E\u009E\u0003((object) obj0, this.\u0001);
          StringBuilder stringBuilder8 = \u0095.\u007E\u009D\u0003((object) obj0, ']');
          break;
      }
    }

    internal static bool \u0001([In] JsonContainerType obj0) => obj0 == JsonContainerType.Array || obj0 == JsonContainerType.Constructor;

    internal static unsafe string \u0001([In] List<\u0011.\u0002> obj0, [In] \u0011.\u0002? obj1)
    {
label_0:
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      *(int*) voidPtr = 0;
      StringBuilder stringBuilder;
      do
      {
        if (obj0 != null)
        {
          if (true)
          {
            *(int*) ((IntPtr) voidPtr + 4) = 0;
            if (true)
            {
              while (*(int*) ((IntPtr) voidPtr + 4) < obj0.Count)
              {
                *(int*) voidPtr = *(int*) voidPtr + obj0[*(int*) ((IntPtr) voidPtr + 4)].\u0001();
                *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
              }
            }
            else
              goto label_0;
          }
          else
            goto label_7;
        }
        if (!obj1.HasValue)
          goto label_5;
label_4:
        *(int*) voidPtr = *(int*) voidPtr + obj1.GetValueOrDefault().\u0001();
label_5:
        if (true)
        {
          stringBuilder = new StringBuilder(*(int*) voidPtr);
          if (obj0 == null)
            goto label_14;
        }
        else
          goto label_4;
label_7:;
      }
      while (false);
      using (List<\u0011.\u0002>.Enumerator enumerator = obj0.GetEnumerator())
      {
        while (true)
        {
          if (enumerator.MoveNext())
            enumerator.Current.\u0001(stringBuilder);
          else
            break;
        }
      }
label_14:
      if (obj1.HasValue)
      {
        \u0011.\u0002 valueOrDefault;
        do
        {
          valueOrDefault = obj1.GetValueOrDefault();
        }
        while (false);
        valueOrDefault.\u0001(stringBuilder);
      }
      return stringBuilder.ToString();
    }

    internal static string \u0001([In] \u0001 obj0, [In] string obj1, [In] string obj2)
    {
      if (!\u0097.\u007E\u009F\u0003((object) obj2, \u0004.\u0097(), StringComparison.Ordinal))
      {
        obj2 = \u0001.\u007E\u0004((object) obj2);
        if (!\u0002.\u0002.\u0002(obj2, '.'))
          obj2 = \u0006.\u009B(obj2, \u0011.\u0002.\u008D(2874));
        obj2 = \u0006.\u009B(obj2, \u0011.\u0002.\u008D(2755));
      }
      obj2 = \u0006.\u009B(obj2, \u0002.\u0002.\u0001(\u0011.\u0002.\u008D(2879), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));
      if (obj0 != null && obj0.\u0002())
        obj2 = \u0006.\u009B(obj2, \u0002.\u0002.\u0001(\u0011.\u0002.\u008D(2896), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0002(), (object) obj0.\u0003()));
      obj2 = \u0006.\u009B(obj2, \u0011.\u0002.\u008D(2874));
      return obj2;
    }

    static \u0002()
    {
      Strings.CreateGetStringDelegate(typeof (\u0011.\u0002));
      \u0011.\u0002.\u0001 = new char[6]
      {
        '.',
        ' ',
        '[',
        ']',
        '(',
        ')'
      };
    }
  }
}
