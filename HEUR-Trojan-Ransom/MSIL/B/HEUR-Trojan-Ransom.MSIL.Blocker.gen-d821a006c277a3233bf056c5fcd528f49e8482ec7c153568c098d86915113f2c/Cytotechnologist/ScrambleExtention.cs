// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: BaseConfigHandl, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D741A15-4AC4-4AEF-B040-FB58D745B7BF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d821a006c277a3233bf056c5fcd528f49e8482ec7c153568c098d86915113f2c.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200F⁭⁫‏⁬​⁬‭‭‮‏‪‍‫‬‫​‫‪‭‮‮​‮⁮‪‏⁪‍‫⁭⁫‫‭⁮‭‫‏‪⁬‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 33165751;
      int count;
      T obj;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 716046587)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1727538350 ^ 1141077651;
            continue;
          case 2:
            list[index] = list[count];
            num1 = (int) num2 * -1801140903 ^ 131783055;
            continue;
          case 3:
            num1 = (int) num2 * 710046174 ^ -2135394407;
            continue;
          case 4:
            --count;
            num1 = 1258759857;
            continue;
          case 5:
            index = ScrambleExtention.\u200E⁬‎⁭‭‪‍⁭‬‫‌​⁫⁭⁯⁮‪⁪‎‏⁪⁮​⁮​⁫⁫‬​‎‫‫‏⁯⁭‮‎‫⁯‮‮(ScrambleExtention.Random, count + 1);
            obj = list[index];
            num1 = (int) num2 * 1057870871 ^ 1139504854;
            continue;
          case 6:
            list[count] = obj;
            num1 = (int) num2 * 1708587574 ^ -794104276;
            continue;
          case 7:
            num1 = (int) num2 * -755120136 ^ 1705718949;
            continue;
          case 8:
            int num3;
            num1 = num3 = count <= 1 ? 1869847840 : (num3 = 999118132);
            continue;
          case 9:
            count = list.Count;
            num1 = (int) num2 * 1904873920 ^ -371058936;
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u200E⁬‎⁭‭‪‍⁭‬‫‌​⁫⁭⁯⁮‪⁪‎‏⁪⁮​⁮​⁫⁫‬​‎‫‫‏⁯⁭‮‎‫⁯‮‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200F⁭⁫‏⁬​⁬‭‭‮‏‪‍‫‬‫​‫‪‭‮‮​‮⁮‪‏⁪‍‫⁭⁫‫‭⁮‭‫‏‪⁬‮() => new Random();
  }
}
