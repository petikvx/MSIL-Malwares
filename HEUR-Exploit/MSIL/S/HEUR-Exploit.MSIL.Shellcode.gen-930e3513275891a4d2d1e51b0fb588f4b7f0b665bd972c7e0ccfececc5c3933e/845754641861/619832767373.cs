// Decompiled with JetBrains decompiler
// Type: 845754641861.619832767373
// Assembly: 903211523809, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 9299602E-5CAC-472E-8784-954A0E70F0DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-930e3513275891a4d2d1e51b0fb588f4b7f0b665bd972c7e0ccfececc5c3933e.exe

using \u003112706448168;
using \u003442459406356;
using \u003565349116216;
using \u003748518633509;
using \u003794378439523;
using \u003845754641861;
using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace \u003845754641861
{
  internal class \u003619832767373 : ITaskRunnerOutputParser
  {
    private static Regex \u003795941871315 = new Regex("^\\s*(?<FILEPATH>([^\\\\]+\\\\)+[^\\\\\\.]+(\\.\\w+)+)\\:\\s+line\\s+(?<LINE>[0-9]*),\\s+col\\s+(?<COLUMN>[0-9]*),\\s*(?<TEXT>[^\\(]+)(?<ERRORCODE>\\([^\\)]+\\))?\\s*$", RegexOptions.IgnoreCase);
    private static Regex \u003556054217571 = new Regex("\\u001b\\[\\d+m");
    private static Regex \u003634134172248 = new Regex("[\\r\\n\\t]");

    public \u003787271880604 \u003648248874541(IEnumerable<string> _param1)
    {
      \u003787271880604 obj1 = new \u003787271880604();
      if (_param1 == null)
        return obj1;
      List<string> stringList1 = new List<string>();
      List<string> stringList2 = new List<string>();
      stringList2.AddRange(_param1);
      foreach (string str in stringList2)
      {
        \u003868366740580 obj2 = this.\u003038734924774(str);
        if (obj2 != null)
          obj1.\u003336514195501.Add((IErrorListItem) obj2);
        else
          stringList1.Add(str);
      }
      obj1.\u003051045864808 = (IEnumerable<string>) stringList1;
      return obj1;
    }

    private \u003868366740580 \u003038734924774(string _param1)
    {
      \u003868366740580 obj = (\u003868366740580) null;
      string input1 = \u003619832767373.\u003556054217571.Replace(_param1, "");
      string input2 = \u003619832767373.\u003634134172248.Replace(input1, "");
      Match match = \u003619832767373.\u003795941871315.Match(input2);
      if (match.Success)
      {
        string str1 = match.Groups["FILEPATH"].Value;
        string s1 = match.Groups["LINE"].Value;
        string s2 = match.Groups["COLUMN"].Value;
        string str2 = match.Groups["TEXT"].Value.TrimEnd(' ');
        string str3 = match.Groups["ERRORCODE"].Value;
        string str4 = str1.Replace('/', '\\');
        int result1;
        int.TryParse(s1, out result1);
        int result2;
        int.TryParse(s2, out result2);
        obj = new \u003868366740580()
        {
          \u003542028917286 = result1,
          \u003507348189802 = result2,
          \u003053454428124 = str2,
          \u003067396601390 = str4,
          \u003147896306475 = \u003407927968715.Error,
          \u003390684500447 = (object) str3
        };
      }
      return obj;
    }
  }
}
