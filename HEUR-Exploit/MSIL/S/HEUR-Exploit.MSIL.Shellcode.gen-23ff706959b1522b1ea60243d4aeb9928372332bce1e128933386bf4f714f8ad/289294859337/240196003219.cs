// Decompiled with JetBrains decompiler
// Type: 289294859337.240196003219
// Assembly: 569990687827, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 58118FF0-4F0E-4F7B-A626-B24D4B565FEB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-23ff706959b1522b1ea60243d4aeb9928372332bce1e128933386bf4f714f8ad.exe

using \u003058024371533;
using Microsoft.VisualStudio.Utilities.Internal;
using System;
using System.Globalization;
using System.IO;

namespace \u003289294859337
{
  internal class \u003240196003219 : IFileReader
  {
    private string \u003430490167794;
    private string \u003239952455659;
    private const int \u003477584890935 = 248;

    public \u003240196003219(string filePath)
    {
      CodeContract.RequiresArgumentNotNull<string>(filePath, nameof (filePath));
      this.\u003430490167794 = filePath.Length <= 248 ? filePath : throw new ArgumentException(string.Format((IFormatProvider) CultureInfo.CurrentCulture, "File path can be a maximum of {0} characters", new object[1]
      {
        (object) 248
      }), filePath);
      this.\u003239952455659 = Path.GetDirectoryName(filePath);
    }

    public Stream \u003967754471687() => (Stream) File.OpenRead(this.\u003430490167794);
  }
}
