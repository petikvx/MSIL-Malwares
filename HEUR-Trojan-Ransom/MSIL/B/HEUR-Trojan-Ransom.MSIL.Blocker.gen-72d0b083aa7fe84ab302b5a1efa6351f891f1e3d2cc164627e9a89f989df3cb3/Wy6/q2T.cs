// Decompiled with JetBrains decompiler
// Type: Wy6.q2T
// Assembly: Po0, Version=1.0.7962.23557, Culture=neutral, PublicKeyToken=null
// MVID: 64F19321-F9A8-4C19-950E-E10776B41F0D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-72d0b083aa7fe84ab302b5a1efa6351f891f1e3d2cc164627e9a89f989df3cb3.exe

using Am0a;
using b5E;
using d5L;
using Ef5i;
using f8JT;
using g9B4;
using Gn9;
using Ht8c;
using Jr2;
using Lp6;
using Nc56;
using Sg7;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Globalization;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Threading;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using t2E;
using Tc1;
using x5J6;

namespace Wy6
{
  [XmlSchemaProvider("GetTypedDataSetSchema")]
  [ToolboxItem(true)]
  [DesignerCategory("code")]
  [HelpKeyword("vs.data.DataSet")]
  [XmlRoot("dsBatches")]
  [Serializable]
  public class q2T : DataSet
  {
    private q2T.Cb3 tableBATCHES;
    private SchemaSerializationMode _schemaSerializationMode;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public q2T()
    {
      this._schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
      this.BeginInit();
      this.Mn8();
      CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Lw4);
      y4T2.s7XT<DataTableCollection, CollectionChangeEventHandler>(w0DB.Mw68<DataSet>((DataSet) this, (short) 144, '¨'), changeEventHandler, (short) 547, (short) 532);
      w0DB.z0RC<DataSet>((DataSet) this, 'Ķ', (short) 258).CollectionChanged += changeEventHandler;
      this.EndInit();
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected q2T(SerializationInfo info, StreamingContext context)
      : base(info, context, false)
    {
      this._schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
      if (this.IsBinarySerialized(info, context))
      {
        this.x9Q(false);
        CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Lw4);
        y4T2.s7XT<DataTableCollection, CollectionChangeEventHandler>(this.Tables, changeEventHandler, (short) 564, (short) 515);
        y4T2.n7D6<DataRelationCollection, CollectionChangeEventHandler>(this.Relations, changeEventHandler, (short) 445, 501);
      }
      else
      {
        string s = e3F.Td3<object>(c8T.m5A<Type, SerializationInfo, string>(info, Cm9.Qj5(0, (byte) 10, 574087232), typeof (string), 250, (short) 210), (short) 953, 'φ');
        if (this.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.IncludeSchema)
        {
          DataSet dataSet = new DataSet();
          Pa8.z1Y<XmlReader, DataSet>(dataSet, (XmlReader) new XmlTextReader((TextReader) new StringReader(s)), (short) 132, 184);
          if (j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 169, '\u0090'), Cm9.Qj5(4, (byte) 12, 574088047), 'ɦ', 'ɂ') != null)
            w0DB.Jt13<DataTable, DataTableCollection>(w0DB.Mw68<DataSet>((DataSet) this, (short) 624, 'Ɉ'), (DataTable) new q2T.Cb3(j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 142, '·'), Cm9.Qj5(7, (byte) 3, 574088044), '\u0018', '<')), 759, 'ʆ');
          f5B.s5T<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 367, 'ā'), (short) 65, '\u0013');
          w0DB.Dq3f<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 78, '!'), (short) 479, 'Ǻ');
          f5B.s5T<string, DataSet>((DataSet) this, j6D2.g3NC<DataSet>(dataSet, 193, (short) 235), (short) 772, '͗');
          this.Locale = j6D2.Sx23<DataSet>(dataSet, 960, 'Ϻ');
          this.CaseSensitive = dataSet.CaseSensitive;
          this.EnforceConstraints = dataSet.EnforceConstraints;
          this.Merge(dataSet, false, MissingSchemaAction.Add);
          this.Yw7();
        }
        else
          this.ReadXmlSchema((XmlReader) new XmlTextReader((TextReader) new StringReader(s)));
        this.GetSerializationData(info, context);
        CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Lw4);
        this.Tables.CollectionChanged += changeEventHandler;
        this.Relations.CollectionChanged += changeEventHandler;
      }
    }

    [Browsable(false)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
    public q2T.Cb3 BATCHES => this.tableBATCHES;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
    [Browsable(true)]
    public override SchemaSerializationMode SchemaSerializationMode
    {
      get => this._schemaSerializationMode;
      set => this._schemaSerializationMode = value;
    }

    [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public new DataTableCollection Tables => w0DB.Mw68<DataSet>((DataSet) this, (short) 908, 'δ');

    [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public new DataRelationCollection Relations => w0DB.z0RC<DataSet>((DataSet) this, '\n', (short) 62);

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void Gf4()
    {
      this.BeginInit();
      this.Mn8();
      this.EndInit();
      Sb1p.V[59] = (char) ((int) Sb1p.V[59] & (int) Sb1p.V[174] & 3);
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public virtual DataSet f3W()
    {
      int num = 4;
      q2T q2T;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_3;
          case 3:
            goto label_4;
          default:
            q2T = (q2T) this.Clone();
            q2T.Yw7();
            q2T.SchemaSerializationMode = this.SchemaSerializationMode;
            num = 0;
            continue;
        }
      }
label_3:
      DataSet dataSet1 = (DataSet) q2T;
label_4:
      DataSet dataSet2 = dataSet1;
      Sb1p.V[206] = (char) ((int) Sb1p.V[206] + (int) Sb1p.V[238] & 87);
      return dataSet2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual bool Wf0() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual bool m8R() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void g5P(XmlReader He1)
    {
      int num1 = 9;
      DataSet dataSet;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 8;
            continue;
          case 1:
            flag = j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 57, char.MinValue), Cm9.Qj5(3, (byte) 8, 574088040), 'ǳ', 'Ǘ') != null;
            num1 = 12;
            continue;
          case 2:
            int num2 = (int) this.ReadXml(He1);
            this.Yw7();
            goto case 0;
          case 3:
          case 10:
            this.Merge(dataSet, false, MissingSchemaAction.Add);
            this.Yw7();
            num1 = 15;
            continue;
          case 4:
            c8T.j9G<DataSet>((DataSet) this, 'Ț', (short) 636);
            dataSet = new DataSet();
            int num3 = (int) y4T2.Ae4x<DataSet, XmlReader>(dataSet, He1, 884, (short) 839);
            num1 = 1;
            continue;
          case 5:
            w0DB.Dq3f<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 711, 'ʨ'), (short) 530, 'ȷ');
            num1 = 16;
            continue;
          case 6:
            this.CaseSensitive = dataSet.CaseSensitive;
            this.EnforceConstraints = dataSet.EnforceConstraints;
            num1 = 10;
            continue;
          case 7:
            w0DB.Jt13<DataTable, DataTableCollection>(w0DB.Mw68<DataSet>((DataSet) this, (short) 935, 'Ο'), (DataTable) new q2T.Cb3(j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 349, 'Ť'), Cm9.Qj5(6, (byte) 2, 574088045), 'Ħ', 'Ă')), 837, '̴');
            num1 = 14;
            continue;
          case 8:
            goto label_16;
          case 11:
          case 16:
            this.Namespace = j6D2.g3NC<DataSet>(dataSet, 739, (short) 713);
            this.Locale = dataSet.Locale;
            num1 = 6;
            continue;
          case 12:
            num1 = !flag ? 13 : 7;
            continue;
          case 13:
            f5B.s5T<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 355, 'č'), (short) 1013, 'Χ');
            num1 = 5;
            continue;
          case 14:
            num1 = 13;
            continue;
          case 15:
            num1 = 8;
            continue;
          default:
            num1 = this.DetermineSchemaSerializationMode(He1) != SchemaSerializationMode.IncludeSchema ? 2 : 4;
            continue;
        }
      }
label_16:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual XmlSchema Hp3()
    {
      int num = 3;
      MemoryStream memoryStream;
      XmlSchema xmlSchema;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 5:
            goto label_4;
          case 1:
          case 2:
          case 4:
            y4T2.m3A0<MemoryStream>(memoryStream, 0L, 'ȫ', (short) 554);
            xmlSchema = XmlSchema.Read((XmlReader) new XmlTextReader((Stream) memoryStream), (ValidationEventHandler) null);
            num = 0;
            continue;
          default:
            memoryStream = new MemoryStream();
            j6D2.j9XR<XmlWriter, DataSet>((DataSet) this, (XmlWriter) new XmlTextWriter((Stream) memoryStream, (Encoding) null), '\u0019', 120);
            num = 2;
            continue;
        }
      }
label_4:
      return xmlSchema;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    internal void Yw7() => this.x9Q(true);

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    internal void x9Q(bool Te2)
    {
      int num = 6;
      while (true)
      {
        switch (num)
        {
          case 0:
            num = 4;
            continue;
          case 2:
            num = !Te2 ? 7 : 3;
            continue;
          case 3:
            num = this.tableBATCHES == null ? 4 : 8;
            continue;
          case 4:
            num = 7;
            continue;
          case 7:
            goto label_8;
          case 8:
            this.tableBATCHES.Wy1();
            goto case 0;
          default:
            this.tableBATCHES = (q2T.Cb3) j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>((DataSet) this, (short) 849, 'ͩ'), Cm9.Qj5(0, (byte) 7, 574088043), 'À', 'ä');
            num = 2;
            continue;
        }
      }
label_8:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private void Mn8()
    {
      int num = 7;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 5:
            e3F.w9P<DataSet>((DataSet) this, true, (short) 780, '̈́');
            goto case 1;
          case 1:
            this.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            num = 4;
            continue;
          case 3:
            f5B.s5T<string, DataSet>((DataSet) this, Cm9.Qj5(0, (byte) 6, 574089157), (short) 902, 'ϕ');
            num = 5;
            continue;
          case 4:
            goto label_7;
          case 6:
            w0DB.Dq3f<string, DataSet>((DataSet) this, Cm9.Qj5(4, (byte) 3, 574088073), (short) 623, 'Ɋ');
            num = 3;
            continue;
          default:
            f5B.s5T<string, DataSet>((DataSet) this, Cm9.Qj5(8, (byte) 25, 574089201), (short) 399, 'ǝ');
            num = 6;
            continue;
        }
      }
label_7:
      this.tableBATCHES = new q2T.Cb3();
      this.Tables.Add((DataTable) this.tableBATCHES);
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private bool f4S() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private void Lw4(object p3W, CollectionChangeEventArgs i5T)
    {
      int num = 3;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_4;
          case 2:
          case 4:
          case 5:
            this.Yw7();
            num = 0;
            continue;
          default:
            num = Cm9.z6J<CollectionChangeEventArgs>(i5T, (short) 720, (short) 725) != CollectionChangeAction.Remove ? 0 : 4;
            continue;
        }
      }
label_4:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public static XmlSchemaComplexType Pj0(XmlSchemaSet Qk4)
    {
      char[] v = Sb1p.V;
      int num1 = 8;
      q2T q2T;
      XmlSchemaComplexType schemaComplexType1;
      XmlSchemaSequence xmlSchemaSequence;
      XmlSchemaAny xmlSchemaAny;
      XmlSchema schema;
      bool flag1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
          case 6:
            flag1 = f5B.Ta3<string, XmlSchemaSet>(Qk4, Yc9.Mf3<XmlSchema>(schema, '̚', '͟'), '<', 53);
            goto case 7;
          case 1:
            goto label_9;
          case 3:
            Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 440, (short) 442), (XmlSchemaObject) xmlSchemaAny, 'Ϧ', 985);
            num1 = 4;
            continue;
          case 4:
            Pa8.a8L<XmlSchemaComplexType, XmlSchemaParticle>(schemaComplexType1, (XmlSchemaParticle) xmlSchemaSequence, (short) 972, 'Α');
            schema = q2T.Hp3();
            num1 = 0;
            continue;
          case 5:
            if (flag1)
            {
              num1 = 1;
              continue;
            }
            goto label_42;
          case 7:
            num1 = 5;
            continue;
          default:
            q2T = new q2T();
            schemaComplexType1 = new XmlSchemaComplexType();
            xmlSchemaSequence = new XmlSchemaSequence();
            xmlSchemaAny = new XmlSchemaAny();
            Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny, j6D2.g3NC<DataSet>((DataSet) q2T, 553, (short) 515), (short) 84, 9);
            num1 = 3;
            continue;
        }
      }
label_9:
      MemoryStream memoryStream1 = new MemoryStream();
      MemoryStream memoryStream2 = new MemoryStream();
      XmlSchemaComplexType schemaComplexType2;
      try
      {
        int num2 = 10;
        while (true)
        {
          XmlSchema xmlSchema;
          IEnumerator enumerator;
          bool flag2;
          bool flag3;
          int num3;
          switch (num2)
          {
            case 0:
              num3 = 0;
              break;
            case 1:
              xmlSchema = (XmlSchema) enumerator.Current;
              y4T2.m3A0<MemoryStream>(memoryStream2, 0L, 'ó', (short) 243);
              num2 = 14;
              continue;
            case 3:
              goto label_39;
            case 4:
label_24:
              num2 = flag3 ? 20 : 5;
              continue;
            case 5:
              num2 = memoryStream1.Position != memoryStream1.Length ? 18 : 15;
              continue;
            case 6:
              num2 = 16;
              continue;
            case 7:
              num2 = 9;
              continue;
            case 8:
            case 14:
              n8F.Yy6<XmlSchema, Stream>(xmlSchema, (Stream) memoryStream2, 'Ȝ', (short) 521);
              flag2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 790, '̛') == Cm9.Yp1<MemoryStream>(memoryStream2, (short) 694, 'ʻ');
              num2 = 13;
              continue;
            case 9:
              num2 = enumerator.MoveNext() ? 1 : 3;
              continue;
            case 11:
              enumerator = y4T2.Sm24<XmlSchemaSet, string>(Qk4, Yc9.Mf3<XmlSchema>(schema, '\u00B3', 'ö'), 'Â', 'ä').GetEnumerator();
              num2 = 9;
              continue;
            case 12:
              y4T2.m3A0<MemoryStream>(memoryStream1, 0L, 'Ǵ', (short) 501);
              y4T2.m3A0<MemoryStream>(memoryStream2, 0L, '̢', (short) 803);
              num2 = (int) v[239] - 10678;
              continue;
            case 13:
              num2 = !flag2 ? 7 : 12;
              continue;
            case 15:
              goto label_26;
            case 16:
              num2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 23, '\u0019') == Cm9.Yp1<MemoryStream>(memoryStream1, (short) 857, '͔') ? 0 : 17;
              continue;
            case 17:
              num3 = p3P.Cm6<MemoryStream>(memoryStream1, (short) 996, 'Ύ') == p3P.Cm6<MemoryStream>(memoryStream2, (short) 871, '̍') ? 1 : 0;
              break;
            case 18:
              num2 = (int) v[78] - 55953;
              continue;
            case 20:
              num2 = 16;
              continue;
            default:
              xmlSchema = (XmlSchema) null;
              n8F.Yy6<XmlSchema, Stream>(schema, (Stream) memoryStream1, 'ͪ', (short) 895);
              num2 = 11;
              continue;
          }
          flag3 = num3 != 0;
          goto label_24;
        }
label_26:
        schemaComplexType2 = schemaComplexType1;
        goto label_44;
      }
      finally
      {
        int num4 = 7;
        bool flag4;
        while (true)
        {
          switch (num4)
          {
            case 0:
              num4 = !flag4 ? 2 : 5;
              continue;
            case 1:
              num4 = 3;
              continue;
            case 2:
            case 6:
              num4 = memoryStream2 == null ? 3 : 8;
              continue;
            case 3:
              goto label_38;
            case 5:
              memoryStream1.Close();
              num4 = 2;
              continue;
            case 8:
              memoryStream2.Close();
              goto case 1;
            default:
              flag4 = memoryStream1 != null;
              goto case 0;
          }
        }
label_38:;
      }
label_39:
      int num5 = 3;
label_40:
      while (true)
      {
        switch (num5)
        {
          case 0:
            goto label_43;
          case 1:
          case 5:
            goto label_42;
          case 2:
            goto label_44;
          default:
            num5 = 5;
            continue;
        }
      }
label_42:
      Qk4.Add(schema);
label_43:
      schemaComplexType2 = schemaComplexType1;
      num5 = 2;
      goto label_40;
label_44:
      return schemaComplexType2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public delegate void z7E(object sender, q2T.Tg8 e);

    [XmlSchemaProvider("GetTypedTableSchema")]
    [Serializable]
    public class Cb3 : TypedTableBase<q2T.Ny2>
    {
      private DataColumn columnBCODE;
      private DataColumn columnSUBJECT;
      private DataColumn columnSTDATE;
      private DataColumn columnENDDATE;
      private DataColumn columnTIMING;
      private DataColumn columnNOSESSIONS;
      private DataColumn columnTFEE;
      private DataColumn columnLFEE;
      private q2T.z7E BATCHESRowChangingEvent;
      private q2T.z7E BATCHESRowChangedEvent;
      private q2T.z7E BATCHESRowDeletingEvent;
      private q2T.z7E BATCHESRowDeletedEvent;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Cb3()
      {
        Pa8.Bp1<DataTable, string>((DataTable) this, Cm9.Qj5(1, (byte) 8, 574088042), 846, 793);
        e3F.e6P<DataTable>((DataTable) this, 'ȫ', (short) 550);
        this.Gk2();
        this.EndInit();
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal Cb3(DataTable table)
      {
        Pa8.Bp1<DataTable, string>((DataTable) this, f5B.a6X<DataTable>(table, 89, (short) 81), 942, 1017);
        if (Qx0y.Ac6a<DataTable>(table, ']', 25) != e3F.Ec6<DataSet>(He52.Hn09<DataTable>(table, (short) 21, (short) 57), 333, 378))
          n8F.q9D<DataTable>((DataTable) this, Qx0y.Ac6a<DataTable>(table, '͐', 788), 'ɭ', 'Ɇ');
        if (w0DB.c6BC<string, string>(w0DB.Ma89<CultureInfo>(e3F.Xi4<DataTable>(table, '0', 65), 322, 330), w0DB.Ma89<CultureInfo>(j6D2.Sx23<DataSet>(He52.Hn09<DataTable>(table, (short) 438, (short) 410), 698, 'ʀ'), 157, 149), false, 610, 590) != 0)
          this.Locale = table.Locale;
        if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(table.Namespace, table.DataSet.Namespace, false) != 0)
          this.Namespace = table.Namespace;
        this.Prefix = table.Prefix;
        this.MinimumCapacity = table.MinimumCapacity;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected Cb3(SerializationInfo info, StreamingContext context)
        : base(info, context)
      {
        this.Wy1();
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn BCODEColumn => this.columnBCODE;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn SUBJECTColumn => this.columnSUBJECT;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn STDATEColumn => this.columnSTDATE;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn ENDDATEColumn => this.columnENDDATE;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn TIMINGColumn => this.columnTIMING;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn NOSESSIONSColumn => this.columnNOSESSIONS;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn TFEEColumn => this.columnTFEE;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn LFEEColumn => this.columnLFEE;

      [Browsable(false)]
      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public int Count
      {
        get
        {
          int num1 = 3;
          int num2;
          while (true)
          {
            switch (num1)
            {
              case 1:
                num1 = 2;
                continue;
              case 2:
              case 4:
                goto label_4;
              default:
                num2 = w0DB.Ft9w<DataRowCollection>(n8F.p0P<DataTable>((DataTable) this, 'ν', (short) 994), 'ǿ', 431);
                goto case 1;
            }
          }
label_4:
          int num3 = num2;
          Sb1p.V[17] = (char) ((int) Sb1p.V[17] + (int) Sb1p.V[151] & 115);
          return num3;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public q2T.Ny2 this[int Tk0]
      {
        get
        {
          int num = 1;
          q2T.Ny2 ny2;
          while (true)
          {
            switch (num)
            {
              case 3:
                num = 4;
                continue;
              case 4:
                goto label_4;
              default:
                ny2 = (q2T.Ny2) n8F.k1L<DataRowCollection>(n8F.p0P<DataTable>((DataTable) this, 'ų', (short) 300), Tk0, 'ɼ', 'Ⱥ');
                goto case 3;
            }
          }
label_4:
          return ny2;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event q2T.z7E BATCHESRowChanging
      {
        add
        {
          int num = 4;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 1:
              case 3:
              case 5:
                comparand = z7E1;
                z7E2 = (q2T.z7E) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 929, 'ϭ');
                num = 2;
                continue;
              case 2:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowChangingEvent, z7E2, comparand);
                num = z7E1 != comparand ? 5 : 6;
                continue;
              case 6:
                goto label_5;
              default:
                z7E1 = this.BATCHESRowChangingEvent;
                num = 5;
                continue;
            }
          }
label_5:;
        }
        remove
        {
          int num = 2;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
                comparand = z7E1;
                goto case 5;
              case 1:
              case 3:
                num = 4;
                continue;
              case 4:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowChangingEvent, z7E2, comparand);
                num = z7E1 != comparand ? 0 : 6;
                continue;
              case 5:
                z7E2 = (q2T.z7E) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 670, '˫');
                goto case 1;
              case 6:
                goto label_7;
              default:
                z7E1 = this.BATCHESRowChangingEvent;
                num = 0;
                continue;
            }
          }
label_7:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event q2T.z7E BATCHESRowChanged
      {
        add
        {
          int num = 0;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 1:
                goto label_6;
              case 2:
              case 6:
                comparand = z7E1;
                z7E2 = (q2T.z7E) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 382, 'Ĳ');
                num = 3;
                continue;
              case 3:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowChangedEvent, z7E2, comparand);
                goto case 5;
              case 4:
                goto label_7;
              case 5:
                num = z7E1 != comparand ? 6 : 1;
                continue;
              default:
                z7E1 = this.BATCHESRowChangedEvent;
                num = 6;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
        remove
        {
          int num = 1;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowChangedEvent, z7E2, comparand);
                num = z7E1 != comparand ? 3 : 5;
                continue;
              case 2:
              case 3:
                comparand = z7E1;
                z7E2 = (q2T.z7E) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 42, '_');
                goto case 4;
              case 4:
                num = 0;
                continue;
              case 5:
                goto label_6;
              case 6:
                goto label_7;
              default:
                z7E1 = this.BATCHESRowChangedEvent;
                num = 3;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event q2T.z7E BATCHESRowDeleting
      {
        add
        {
          int num = 2;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowDeletingEvent, z7E2, comparand);
                goto case 6;
              case 1:
                goto label_6;
              case 3:
              case 5:
                comparand = z7E1;
                z7E2 = (q2T.z7E) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 393, 'ǅ');
                num = 0;
                continue;
              case 4:
                goto label_7;
              case 6:
                num = z7E1 != comparand ? 3 : 4;
                continue;
              default:
                z7E1 = this.BATCHESRowDeletingEvent;
                num = 3;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
        remove
        {
          int num = 4;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
                z7E2 = (q2T.z7E) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 659, '˦');
                num = 5;
                continue;
              case 1:
                comparand = z7E1;
                goto case 0;
              case 2:
                goto label_6;
              case 5:
              case 6:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowDeletingEvent, z7E2, comparand);
                num = z7E1 != comparand ? 1 : 2;
                continue;
              default:
                z7E1 = this.BATCHESRowDeletingEvent;
                num = 1;
                continue;
            }
          }
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event q2T.z7E BATCHESRowDeleted
      {
        add
        {
          int num = 6;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 2:
                comparand = z7E1;
                z7E2 = (q2T.z7E) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 635, 'ȷ');
                goto case 3;
              case 1:
                goto label_6;
              case 3:
                num = 4;
                continue;
              case 4:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowDeletedEvent, z7E2, comparand);
                num = z7E1 != comparand ? 0 : 5;
                continue;
              case 5:
                goto label_7;
              default:
                z7E1 = this.BATCHESRowDeletedEvent;
                num = 0;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
        remove
        {
          int num = 6;
          q2T.z7E z7E1;
          q2T.z7E comparand;
          q2T.z7E z7E2;
          while (true)
          {
            switch (num)
            {
              case 0:
                z7E1 = Interlocked.CompareExchange<q2T.z7E>(ref this.BATCHESRowDeletedEvent, z7E2, comparand);
                num = z7E1 != comparand ? 4 : 2;
                continue;
              case 2:
                goto label_6;
              case 3:
                z7E2 = (q2T.z7E) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 128, 'õ');
                num = 0;
                continue;
              case 4:
              case 5:
                comparand = z7E1;
                goto case 3;
              default:
                z7E1 = this.BATCHESRowDeletedEvent;
                num = 4;
                continue;
            }
          }
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Xj9(q2T.Ny2 En1) => n8F.p0P<DataTable>((DataTable) this, 'O', (short) 16).Add((DataRow) En1);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public q2T.Ny2 Eq6(
        string n9Y,
        string f0E,
        DateTime m7K,
        DateTime Ys1,
        string y4Y,
        Decimal x3R,
        Decimal j8Z,
        Decimal Cj8)
      {
        int num = 5;
        q2T.Ny2 row;
        object[] objArray;
        while (true)
        {
          switch (num)
          {
            case 0:
              y4T2.s3RA<DataRow>((DataRow) row, objArray, 'ǘ', 433);
              n8F.p0P<DataTable>((DataTable) this, '!', (short) 126).Add((DataRow) row);
              num = 1;
              continue;
            case 1:
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            default:
              row = (q2T.Ny2) Yc9.Yd5<DataTable>((DataTable) this, 'ɦ', 632);
              objArray = new object[8]
              {
                (object) n9Y,
                (object) f0E,
                (object) m7K,
                (object) Ys1,
                (object) y4Y,
                (object) x3R,
                (object) j8Z,
                (object) Cj8
              };
              num = 0;
              continue;
          }
        }
label_4:
        q2T.Ny2 ny2 = row;
label_5:
        return ny2;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public q2T.Ny2 Kw3(string Jf1)
      {
        int num = 4;
        q2T.Ny2 ny2;
        while (true)
        {
          switch (num)
          {
            case 3:
              goto label_3;
            default:
              ny2 = (q2T.Ny2) c8T.Dj5<DataRowCollection>(n8F.p0P<DataTable>((DataTable) this, '=', (short) 98), new object[1]
              {
                (object) Jf1
              }, (short) 1019, (short) 989);
              num = 3;
              continue;
          }
        }
label_3:
        return ny2;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public virtual DataTable a1H()
      {
        int num = 2;
        q2T.Cb3 cb3;
        DataTable dataTable1;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 3:
              goto label_5;
            case 1:
              dataTable1 = (DataTable) cb3;
              goto case 4;
            case 4:
              num = 3;
              continue;
            default:
              cb3 = (q2T.Cb3) this.Clone();
              cb3.Wy1();
              goto case 1;
          }
        }
label_5:
        DataTable dataTable2 = dataTable1;
        Sb1p.V[13] = (char) (((int) Sb1p.V[13] | (int) Sb1p.V[222]) & 32);
        return dataTable2;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual DataTable i0Q() => (DataTable) new q2T.Cb3();

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal void Wy1()
      {
        int[] y = f7Y9.Y;
        int num = 7;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 8:
              this.columnTIMING = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, 'ȿ', 'Ȧ'), p3P.Ay5((p3P) null, 5, 850350101), '\u0380', (short) 917);
              num = 6;
              continue;
            case 1:
              this.columnSTDATE = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, 'Ƌ', 'ƒ'), p3P.Ay5((p3P) null, 0, 850350169), '˚', (short) 719);
              num = 2;
              continue;
            case 2:
              this.columnENDDATE = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, 'ʕ', 'ʌ'), p3P.Ay5((p3P) null, 3, 850350093), 'ų', (short) 358);
              num = y[139] - 29073;
              continue;
            case 3:
              goto label_10;
            case 4:
              num = 9;
              continue;
            case 5:
            case 9:
              this.columnTFEE = this.Columns[p3P.Ay5((p3P) null, 8, 850350118)];
              num = 3;
              continue;
            case 6:
              this.columnNOSESSIONS = this.Columns[p3P.Ay5((p3P) null, 5, 850350110)];
              goto case 4;
            case 10:
              this.columnSUBJECT = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, 'q', 'h'), p3P.Ay5((p3P) null, 7, 850350160), 'σ', (short) 982);
              num = 1;
              continue;
            default:
              this.columnBCODE = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, '˓', 'ˊ'), p3P.Ay5((p3P) null, 7, 850350233), 'Ό', (short) 921);
              num = 10;
              continue;
          }
        }
label_10:
        this.columnLFEE = this.Columns[p3P.Ay5((p3P) null, 5, 850350130)];
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      private void Gk2()
      {
        int num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              this.columnNOSESSIONS = new DataColumn(p3P.Ay5((p3P) null, 0, 850350107), typeof (Decimal), (string) null, MappingType.Element);
              num = 2;
              continue;
            case 1:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, 'Ŝ', 'Ņ'), this.columnSTDATE, (short) 57, 84);
              num = 20;
              continue;
            case 2:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, '\v', '\u0012'), this.columnNOSESSIONS, (short) 44, 65);
              num = 5;
              continue;
            case 4:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, 'Ǘ', 'ǎ'), this.columnSUBJECT, (short) 828, 849);
              num = 14;
              continue;
            case 5:
              this.columnTFEE = new DataColumn(p3P.Ay5((p3P) null, 3, 850350125), typeof (Decimal), (string) null, MappingType.Element);
              num = 18;
              continue;
            case 6:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, 'Ĵ', 'ĭ'), this.columnTIMING, (short) 380, 273);
              num = 0;
              continue;
            case 7:
              this.columnSUBJECT = new DataColumn(p3P.Ay5((p3P) null, 3, 850350164), typeof (string), (string) null, MappingType.Element);
              goto case 17;
            case 8:
              goto label_22;
            case 9:
              this.columnBCODE.AllowDBNull = false;
              this.columnBCODE.Unique = true;
              num = 8;
              continue;
            case 10:
              this.columnTIMING = new DataColumn(p3P.Ay5((p3P) null, 5, 850350101), typeof (string), (string) null, MappingType.Element);
              num = 6;
              continue;
            case 11:
              num = 13;
              continue;
            case 12:
              num = 15;
              continue;
            case 13:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, '̓', '͚'), this.columnENDDATE, (short) 577, 556);
              num = 10;
              continue;
            case 14:
              this.columnSTDATE = new DataColumn(p3P.Ay5((p3P) null, 0, 850350169), typeof (DateTime), (string) null, MappingType.Element);
              num = 1;
              continue;
            case 15:
              this.columnLFEE = new DataColumn(p3P.Ay5((p3P) null, 0, 850350135), typeof (Decimal), (string) null, MappingType.Element);
              num = 19;
              continue;
            case 16:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, 'Ű', 'ũ'), this.columnBCODE, (short) 521, 612);
              num = 7;
              continue;
            case 17:
              num = 4;
              continue;
            case 18:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, '˵', 'ˬ'), this.columnTFEE, (short) 958, 979);
              goto case 12;
            case 19:
              this.Columns.Add(this.columnLFEE);
              this.Constraints.Add((Constraint) new UniqueConstraint(p3P.Ay5((p3P) null, 6, 850350138), new DataColumn[1]
              {
                this.columnBCODE
              }, true));
              num = 9;
              continue;
            case 20:
              this.columnENDDATE = new DataColumn(p3P.Ay5((p3P) null, 5, 850350091), typeof (DateTime), (string) null, MappingType.Element);
              goto case 11;
            default:
              this.columnBCODE = new DataColumn(p3P.Ay5((p3P) null, 3, 850350237), typeof (string), (string) null, MappingType.Element);
              num = 16;
              continue;
          }
        }
label_22:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public q2T.Ny2 k6Y() => (q2T.Ny2) Yc9.Yd5<DataTable>((DataTable) this, 'K', 85);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual DataRow t0R(DataRowBuilder Qy1) => (DataRow) new q2T.Ny2(Qy1);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual Type b3Z() => typeof (q2T.Ny2);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void Ex7(DataRowChangeEventArgs Zn5)
      {
        int num = 4;
        bool flag;
        q2T.z7E batchesRowChangedEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = batchesRowChangedEvent == null ? 1 : 7;
              continue;
            case 1:
              num = 6;
              continue;
            case 3:
              num = !flag ? 6 : 5;
              continue;
            case 5:
              batchesRowChangedEvent = this.BATCHESRowChangedEvent;
              goto case 0;
            case 6:
              goto label_9;
            case 7:
              batchesRowChangedEvent((object) this, new q2T.Tg8((q2T.Ny2) Qx0y.j7AD<DataRowChangeEventArgs>(Zn5, 'ȵ', 531), y4T2.g4XE<DataRowChangeEventArgs>(Zn5, (short) 558, 'Ɋ')));
              num = 1;
              continue;
            case 8:
              num = 3;
              continue;
            default:
              this.OnRowChanged(Zn5);
              flag = this.BATCHESRowChangedEvent != null;
              goto case 8;
          }
        }
label_9:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void n8J(DataRowChangeEventArgs z4M)
      {
        int num = 7;
        bool flag;
        q2T.z7E rowChangingEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = rowChangingEvent == null ? 5 : 8;
              continue;
            case 1:
              goto label_8;
            case 2:
            case 5:
              num = 1;
              continue;
            case 3:
              rowChangingEvent = this.BATCHESRowChangingEvent;
              goto case 0;
            case 4:
              num = !flag ? 1 : 3;
              continue;
            case 8:
              rowChangingEvent((object) this, new q2T.Tg8((q2T.Ny2) Qx0y.j7AD<DataRowChangeEventArgs>(z4M, 'R', 116), y4T2.g4XE<DataRowChangeEventArgs>(z4M, (short) 340, 'İ')));
              num = 5;
              continue;
            default:
              this.OnRowChanging(z4M);
              flag = this.BATCHESRowChangingEvent != null;
              num = 4;
              continue;
          }
        }
label_8:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void x4X(DataRowChangeEventArgs q6K)
      {
        int[] y = f7Y9.Y;
        int num = 5;
        bool flag;
        q2T.z7E batchesRowDeletedEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 8:
              flag = this.BATCHESRowDeletedEvent != null;
              num = 6;
              continue;
            case 1:
              goto label_8;
            case 2:
              goto label_9;
            case 3:
              batchesRowDeletedEvent = this.BATCHESRowDeletedEvent;
              num = batchesRowDeletedEvent == null ? 4 : 7;
              continue;
            case 4:
              num = y[279] - 38929;
              continue;
            case 6:
              num = !flag ? 2 : 3;
              continue;
            case 7:
              batchesRowDeletedEvent((object) this, new q2T.Tg8((q2T.Ny2) Qx0y.j7AD<DataRowChangeEventArgs>(q6K, 'ʪ', 652), y4T2.g4XE<DataRowChangeEventArgs>(q6K, (short) 707, 'ʧ')));
              num = 4;
              continue;
            default:
              this.OnRowDeleted(q6K);
              goto case 0;
          }
        }
label_8:
        return;
label_9:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void k1F(DataRowChangeEventArgs k1S)
      {
        int num = 7;
        bool flag;
        q2T.z7E rowDeletingEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_9;
            case 1:
              rowDeletingEvent((object) this, new q2T.Tg8((q2T.Ny2) Qx0y.j7AD<DataRowChangeEventArgs>(k1S, 'η', 913), y4T2.g4XE<DataRowChangeEventArgs>(k1S, (short) 135, 'ã')));
              num = 8;
              continue;
            case 2:
              num = 3;
              continue;
            case 3:
            case 5:
              num = !flag ? 0 : 6;
              continue;
            case 4:
              flag = this.BATCHESRowDeletingEvent != null;
              goto case 2;
            case 6:
              rowDeletingEvent = this.BATCHESRowDeletingEvent;
              num = rowDeletingEvent == null ? 8 : 1;
              continue;
            case 8:
              num = 0;
              continue;
            default:
              this.OnRowDeleting(k1S);
              goto case 4;
          }
        }
label_9:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void k2Z(q2T.Ny2 z1N) => n8F.p0P<DataTable>((DataTable) this, 'Æ', (short) 153).Remove((DataRow) z1N);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public static XmlSchemaComplexType a9S(XmlSchemaSet f4G)
      {
        char[] v = Sb1p.V;
        int num1 = 16;
        XmlSchemaComplexType schemaComplexType1;
        XmlSchemaSequence xmlSchemaSequence;
        q2T q2T;
        XmlSchemaAny xmlSchemaAny1;
        XmlSchemaAny xmlSchemaAny2;
        XmlSchemaAttribute xmlSchemaAttribute1;
        XmlSchemaAttribute xmlSchemaAttribute2;
        XmlSchema schema;
        bool flag1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(f5B.Gb6<XmlSchemaComplexType>(schemaComplexType1, 848, 769), (XmlSchemaObject) xmlSchemaAttribute2, '˦', 729);
              num1 = (int) v[112] - 8869;
              continue;
            case 1:
              j6D2.o1S3<XmlSchemaAny>(xmlSchemaAny2, XmlSchemaContentProcessing.Lax, 729, 'ʧ');
              num1 = 2;
              continue;
            case 2:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 952, (short) 954), (XmlSchemaObject) xmlSchemaAny2, '˅', 762);
              num1 = 3;
              continue;
            case 3:
              xmlSchemaAttribute1 = new XmlSchemaAttribute();
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute1, p3P.Ay5((p3P) null, 2, 850350573), '\u0002', 72);
              num1 = 8;
              continue;
            case 4:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(f5B.Gb6<XmlSchemaComplexType>(schemaComplexType1, 11, 90), (XmlSchemaObject) xmlSchemaAttribute1, 'ĩ', 278);
              num1 = 13;
              continue;
            case 5:
              j6D2.o1S3<XmlSchemaAny>(xmlSchemaAny1, XmlSchemaContentProcessing.Lax, 847, '̱');
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 193, (short) 195), (XmlSchemaObject) xmlSchemaAny1, 'ɥ', 602);
              num1 = 17;
              continue;
            case 6:
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny1, 0M, (short) 71, 108);
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny1, Decimal.MaxValue, (short) 312, 276);
              num1 = 5;
              continue;
            case 7:
              goto label_21;
            case 8:
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute1, j6D2.g3NC<DataSet>((DataSet) q2T, 357, (short) 335), '˯', 676);
              num1 = 4;
              continue;
            case 9:
              Pa8.a8L<XmlSchemaComplexType, XmlSchemaParticle>(schemaComplexType1, (XmlSchemaParticle) xmlSchemaSequence, (short) 970, 'Η');
              schema = q2T.Hp3();
              num1 = 12;
              continue;
            case 10:
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny2, 1M, (short) 173, 134);
              goto case 1;
            case 11:
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute2, Cm9.Qj5(4, (byte) 12, 574087994), 'ϝ', 918);
              num1 = 0;
              continue;
            case 12:
              flag1 = f5B.Ta3<string, XmlSchemaSet>(f4G, Yc9.Mf3<XmlSchema>(schema, 'ʝ', '˘'), '¥', 172);
              num1 = 15;
              continue;
            case 13:
              xmlSchemaAttribute2 = new XmlSchemaAttribute();
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute2, p3P.Ay5((p3P) null, 4, 850350583), '\u001A', 80);
              num1 = 11;
              continue;
            case 14:
              num1 = 10;
              continue;
            case 15:
              if (flag1)
              {
                num1 = 7;
                continue;
              }
              goto label_53;
            case 17:
              xmlSchemaAny2 = new XmlSchemaAny();
              Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny2, Cm9.Qj5(3, (byte) 18, 574088017), (short) 903, 986);
              goto case 14;
            case 18:
              q2T = new q2T();
              xmlSchemaAny1 = new XmlSchemaAny();
              Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny1, p3P.Ay5((p3P) null, 6, 850350532), (short) 628, 553);
              num1 = 6;
              continue;
            default:
              schemaComplexType1 = new XmlSchemaComplexType();
              xmlSchemaSequence = new XmlSchemaSequence();
              goto case 18;
          }
        }
label_21:
        MemoryStream memoryStream1 = new MemoryStream();
        MemoryStream memoryStream2 = new MemoryStream();
        XmlSchemaComplexType schemaComplexType2;
        try
        {
          int num2 = 7;
          while (true)
          {
            XmlSchema xmlSchema;
            IEnumerator enumerator;
            bool flag2;
            int num3;
            switch (num2)
            {
              case 0:
                num2 = 13;
                continue;
              case 1:
                goto label_50;
              case 2:
                num2 = memoryStream1.Position == memoryStream1.Length ? 6 : 8;
                continue;
              case 3:
                num2 = 2;
                continue;
              case 4:
                num2 = enumerator.MoveNext() ? 10 : 1;
                continue;
              case 6:
                num3 = 0;
                break;
              case 8:
                num3 = memoryStream1.ReadByte() == memoryStream2.ReadByte() ? 1 : 0;
                break;
              case 9:
                num2 = memoryStream1.Position != memoryStream1.Length ? 0 : 19;
                continue;
              case 10:
                xmlSchema = (XmlSchema) enumerator.Current;
                y4T2.m3A0<MemoryStream>(memoryStream2, 0L, '\u0084', (short) 132);
                num2 = 15;
                continue;
              case 11:
              case 15:
                n8F.Yy6<XmlSchema, Stream>(xmlSchema, (Stream) memoryStream2, 'Ȃ', (short) 535);
                goto case 17;
              case 12:
                num2 = !flag2 ? 13 : 16;
                continue;
              case 13:
                num2 = 4;
                continue;
              case 14:
                enumerator = y4T2.Sm24<XmlSchemaSet, string>(f4G, Yc9.Mf3<XmlSchema>(schema, '\u038B', 'ώ'), '͙', 'Ϳ').GetEnumerator();
                num2 = 4;
                continue;
              case 16:
                memoryStream1.Position = 0L;
                memoryStream2.Position = 0L;
                num2 = 2;
                continue;
              case 17:
                flag2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 56, '5') == Cm9.Yp1<MemoryStream>(memoryStream2, (short) 919, 'Κ');
                num2 = 12;
                continue;
              case 19:
                goto label_37;
              default:
                xmlSchema = (XmlSchema) null;
                n8F.Yy6<XmlSchema, Stream>(schema, (Stream) memoryStream1, '¿', (short) 170);
                num2 = 14;
                continue;
            }
            num2 = num3 != 0 ? (int) v[215] - 62925 : 9;
          }
label_37:
          schemaComplexType2 = schemaComplexType1;
          goto label_54;
        }
        finally
        {
          int num4 = 4;
          bool flag3;
          while (true)
          {
            switch (num4)
            {
              case 0:
              case 2:
                num4 = !flag3 ? 6 : 8;
                continue;
              case 1:
                memoryStream2.Close();
                num4 = 7;
                continue;
              case 3:
                num4 = 6;
                continue;
              case 6:
                num4 = memoryStream2 == null ? 7 : 1;
                continue;
              case 7:
                goto label_49;
              case 8:
                memoryStream1.Close();
                goto case 3;
              default:
                flag3 = memoryStream1 != null;
                goto case 0;
            }
          }
label_49:;
        }
label_50:
        int num5 = 5;
label_51:
        while (true)
        {
          switch (num5)
          {
            case 1:
            case 2:
              goto label_53;
            case 4:
              goto label_54;
            default:
              num5 = 1;
              continue;
          }
        }
label_53:
        f4G.Add(schema);
        schemaComplexType2 = schemaComplexType1;
        num5 = 4;
        goto label_51;
label_54:
        return schemaComplexType2;
      }
    }

    public class Ny2 : DataRow
    {
      private q2T.Cb3 tableBATCHES;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal Ny2(DataRowBuilder rb)
        : base(rb)
      {
        this.tableBATCHES = (q2T.Cb3) Qx0y.n9B3<DataRow>((DataRow) this, '\n', 13);
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public string BCODE
      {
        get
        {
          int num = 1;
          string str;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 2:
              case 3:
                goto label_3;
              default:
                str = e3F.Td3<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.BCODEColumn, 427, 384), (short) 712, 'ʷ');
                num = 3;
                continue;
            }
          }
label_3:
          return str;
        }
        set
        {
          int num = 1;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_3;
              case 2:
                goto label_4;
              case 3:
                goto label_5;
              case 4:
                goto label_6;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.BCODEColumn, (object) value, 'Ǖ', 'Ƣ');
                num = 4;
                continue;
            }
          }
label_3:
          return;
label_4:
          return;
label_5:
          return;
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public string SUBJECT
      {
        get
        {
          try
          {
            return e3F.Td3<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, 935, 908), (short) 339, 'Ĭ');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 820, '̃');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 2, 850351323), (Exception) innerException);
          }
        }
        set
        {
          int num = 2;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_3;
              case 1:
                goto label_4;
              case 4:
                goto label_5;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, (object) value, '\u008F', 'ø');
                num = 4;
                continue;
            }
          }
label_3:
          return;
label_4:
          return;
label_5:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DateTime STDATE
      {
        get
        {
          try
          {
            return c8T.a6J<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.STDATEColumn, 41, 2), 195, (short) 248);
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 934, 'Α');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 4, 850351258), (Exception) innerException);
          }
        }
        set
        {
          int num = 1;
          while (true)
          {
            switch (num)
            {
              case 2:
                goto label_4;
              case 3:
                num = 4;
                continue;
              case 4:
                goto label_5;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.STDATEColumn, (object) value, '\u001E', 'i');
                goto case 3;
            }
          }
label_4:
          return;
label_5:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DateTime ENDDATE
      {
        get
        {
          try
          {
            return c8T.a6J<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.ENDDATEColumn, 44, 7), 571, (short) 512);
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 784, '̧');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 2, 850351198), (Exception) innerException);
          }
        }
        set
        {
          int num = 4;
          while (true)
          {
            switch (num)
            {
              case 1:
                goto label_3;
              case 2:
                goto label_4;
              case 3:
                goto label_5;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.ENDDATEColumn, (object) value, '6', 'A');
                num = 3;
                continue;
            }
          }
label_3:
          return;
label_4:
          return;
label_5:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public string TIMING
      {
        get
        {
          try
          {
            return e3F.Td3<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.TIMINGColumn, 470, 509), (short) 206, '±');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 908, 'λ');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 2, 850351135), (Exception) innerException);
          }
        }
        set
        {
          int num = 2;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_3;
              case 3:
                goto label_4;
              case 4:
                goto label_5;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.TIMINGColumn, (object) value, 'η', 'π');
                num = 0;
                continue;
            }
          }
label_3:
          return;
label_4:
          return;
label_5:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Decimal NOSESSIONS
      {
        get
        {
          Decimal num1;
          try
          {
            num1 = Cm9.Bw2<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.NOSESSIONSColumn, 66, 105), 931, 'τ');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 321, 'Ŷ');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 2, 850351569), (Exception) innerException);
          }
          Decimal num2 = num1;
          f7Y9.Y[326] = f7Y9.Y[326] * (int) Sb1p.V[10] & 192;
          return num2;
        }
        set
        {
          int num = 0;
          while (true)
          {
            switch (num)
            {
              case 1:
              case 2:
                num = 4;
                continue;
              case 4:
                goto label_4;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.NOSESSIONSColumn, (object) value, 'Ɨ', 'Ǡ');
                goto case 1;
            }
          }
label_4:
          Sb1p.V[174] = (char) ((int) Sb1p.V[174] + (int) Sb1p.V[242] & 120);
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Decimal TFEE
      {
        get
        {
          try
          {
            return Cm9.Bw2<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.TFEEColumn, 489, 450), 55, 'P');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 830, '̉');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 1, 850351516), (Exception) innerException);
          }
        }
        set
        {
          int num = 2;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_4;
              case 1:
              case 3:
                num = 4;
                continue;
              case 4:
                goto label_5;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.TFEEColumn, (object) value, 'ʾ', 'ˉ');
                goto case 1;
            }
          }
label_4:
          return;
label_5:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Decimal LFEE
      {
        get
        {
          try
          {
            return Cm9.Bw2<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.LFEEColumn, 197, 238), 836, '̣');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 26, '-');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 7, 850351446), (Exception) innerException);
          }
        }
        set
        {
          int num = 0;
          while (true)
          {
            switch (num)
            {
              case 1:
                num = 3;
                continue;
              case 3:
                goto label_4;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.LFEEColumn, (object) value, 'Ǧ', 'Ƒ');
                goto case 1;
            }
          }
label_4:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool r4B()
      {
        int num = 2;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 4;
              continue;
            case 4:
              goto label_4;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, 813, (short) 819);
              goto case 0;
          }
        }
label_4:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Py1()
      {
        char[] v = Sb1p.V;
        int num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 2:
              goto label_4;
            case 4:
              int num2 = (int) v[139];
              f7Y9.Y[186] = f7Y9.Y[186] + f7Y9.Y[348] & 57;
              num1 = num2 - 50452;
              continue;
            default:
              this[this.tableBATCHES.SUBJECTColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 515, 599);
              goto case 4;
          }
        }
label_4:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool r4K()
      {
        int num = 2;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 3:
            case 4:
              goto label_3;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.STDATEColumn, 88, (short) 70);
              num = 4;
              continue;
          }
        }
label_3:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void y5G()
      {
        int num = 0;
        while (true)
        {
          switch (num)
          {
            case 2:
              goto label_4;
            case 3:
              num = 2;
              continue;
            case 4:
              goto label_5;
            default:
              this[this.tableBATCHES.STDATEColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 534, 578);
              goto case 3;
          }
        }
label_4:
        return;
label_5:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool e7R()
      {
        int num = 2;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 4:
              goto label_3;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.ENDDATEColumn, 153, (short) 135);
              num = 4;
              continue;
          }
        }
label_3:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Xb7()
      {
        int num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_3;
            case 3:
              goto label_4;
            default:
              this[this.tableBATCHES.ENDDATEColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 324, 272);
              num = 3;
              continue;
          }
        }
label_3:
        return;
label_4:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool Df7()
      {
        int num = 0;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 2:
              goto label_4;
            case 3:
              num = 2;
              continue;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.TIMINGColumn, 32, (short) 62);
              goto case 3;
          }
        }
label_4:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Xy8()
      {
        int num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 1:
            case 2:
              num = 3;
              continue;
            case 3:
              goto label_4;
            default:
              this[this.tableBATCHES.TIMINGColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 329, 285);
              goto case 0;
          }
        }
label_4:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool s0Y()
      {
        int num1 = 0;
        bool flag;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
              goto label_4;
            case 2:
            case 4:
              num1 = 3;
              continue;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.NOSESSIONSColumn, 361, (short) 375);
              goto case 2;
          }
        }
label_4:
        int num2 = flag ? 1 : 0;
        Sb1p.V[129] = (char) (((int) Sb1p.V[129] ^ (int) Sb1p.V[30]) & 194);
        return num2 != 0;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void j5Y()
      {
        int num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_3;
            case 3:
              goto label_4;
            default:
              this[this.tableBATCHES.NOSESSIONSColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 945, 997);
              num = 3;
              continue;
          }
        }
label_3:
        return;
label_4:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool Za9()
      {
        int num = 2;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 4:
              goto label_3;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.TFEEColumn, 918, (short) 904);
              num = 4;
              continue;
          }
        }
label_3:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Pd2()
      {
        int num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_4;
            case 2:
              goto label_5;
            case 3:
              num = 0;
              continue;
            case 4:
              goto label_6;
            default:
              this[this.tableBATCHES.TFEEColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 699, 751);
              goto case 3;
          }
        }
label_4:
        return;
label_5:
        return;
label_6:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool y0S()
      {
        int num = 3;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 1:
              num = 4;
              continue;
            case 4:
              goto label_4;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.LFEEColumn, 192, (short) 222);
              goto case 0;
          }
        }
label_4:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Bc7()
      {
        int num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_4;
            case 1:
            case 2:
              num = 0;
              continue;
            case 3:
              goto label_5;
            default:
              this[this.tableBATCHES.LFEEColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 430, 506);
              goto case 1;
          }
        }
label_4:
        return;
label_5:;
      }
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public class Tg8 : EventArgs
    {
      private q2T.Ny2 eventRow;
      private DataRowAction eventAction;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Tg8(q2T.Ny2 row, DataRowAction action)
      {
        this.eventRow = row;
        this.eventAction = action;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public q2T.Ny2 Row => this.eventRow;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataRowAction Action => this.eventAction;
    }
  }
}
