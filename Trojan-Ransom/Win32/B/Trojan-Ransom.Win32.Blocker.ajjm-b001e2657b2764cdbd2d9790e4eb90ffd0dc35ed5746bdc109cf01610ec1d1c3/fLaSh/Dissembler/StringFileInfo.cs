// Decompiled with JetBrains decompiler
// Type: fLaSh.Dissembler.StringFileInfo
// Assembly: Pass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B2D05123-D1EE-4E11-B4EC-79932D637F25
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ajjm-b001e2657b2764cdbd2d9790e4eb90ffd0dc35ed5746bdc109cf01610ec1d1c3.exe

using In2aXkPRwyNprNdGJT;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;

namespace fLaSh.Dissembler
{
  public class StringFileInfo : ResourceTable
  {
    private Dictionary<string, StringTable> q7L49da7sA;

    public Dictionary<string, StringTable> Strings
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.q7L49da7sA;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public StringFileInfo(IntPtr lpRes)
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Read(lpRes);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override IntPtr Read(IntPtr lpRes)
    {
      this.q7L49da7sA = new Dictionary<string, StringTable>();
      StringTable stringTable;
      for (IntPtr lpRes1 = base.Read(lpRes); lpRes1.ToInt32() < lpRes.ToInt32() + (int) this._header.wLength; lpRes1 = ResourceUtil.Align(lpRes1.ToInt32() + (int) stringTable.Header.wLength))
      {
        stringTable = new StringTable(lpRes1);
        this.q7L49da7sA.Add(stringTable.Key, stringTable);
      }
      return new IntPtr(lpRes.ToInt32() + (int) this._header.wLength);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override void Write(BinaryWriter w)
    {
      long position = w.BaseStream.Position;
      base.Write(w);
      Dictionary<string, StringTable>.Enumerator enumerator = this.q7L49da7sA.GetEnumerator();
      while (enumerator.MoveNext())
        enumerator.Current.Value.Write(w);
      ResourceUtil.WriteAt(w, w.BaseStream.Position - position, position);
    }

    public StringTable Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        Dictionary<string, StringTable>.Enumerator enumerator = this.q7L49da7sA.GetEnumerator();
        return enumerator.MoveNext() ? enumerator.Current.Value : (StringTable) null;
      }
    }

    public string this[string key]
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.Default[key];
      [MethodImpl(MethodImplOptions.NoInlining)] set => this.Default[key] = value;
    }
  }
}
