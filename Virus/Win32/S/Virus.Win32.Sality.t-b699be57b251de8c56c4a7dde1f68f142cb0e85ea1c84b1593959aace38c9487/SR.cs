// Decompiled with JetBrains decompiler
// Type: System.Web.RegBrowsers.SR
// Assembly: aspnet_regbrowsers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 47E0B7AA-8190-4F0E-A943-3E87CF0C3AC8
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Sality.t-b699be57b251de8c56c4a7dde1f68f142cb0e85ea1c84b1593959aace38c9487.exe

using System.Globalization;
using System.Resources;
using System.Threading;

namespace System.Web.RegBrowsers
{
  internal sealed class SR
  {
    internal const string _sep01_ = "_sep01_";
    internal const string Header_text = "Header_text";
    internal const string Copyright = "Copyright";
    internal const string Short_usage_text = "Short_usage_text";
    internal const string Usage = "Usage";
    internal const string Directory_does_not_exist = "Directory_does_not_exist";
    internal const string Directory_has_no_browser_files = "Directory_has_no_browser_files";
    internal const string BrowserAssembly_Not_Installed = "BrowserAssembly_Not_Installed";
    internal const string Uninstallation_failed = "Uninstallation_failed";
    internal const string questionmark_help = "questionmark_help";
    internal const string RegBrowser_install_usage = "RegBrowser_install_usage";
    internal const string RegBrowser_uninstall_usage = "RegBrowser_uninstall_usage";
    internal const string RegBrowser_installed = "RegBrowser_installed";
    internal const string RegBrowser_uninstalled = "RegBrowser_uninstalled";
    private static SR loader;
    private ResourceManager resources;
    private static object s_InternalSyncObject;

    private static object InternalSyncObject
    {
      get
      {
        if (SR.s_InternalSyncObject == null)
        {
          object obj = new object();
          Interlocked.CompareExchange(ref SR.s_InternalSyncObject, obj, (object) null);
        }
        return SR.s_InternalSyncObject;
      }
    }

    internal SR() => this.resources = new ResourceManager("aspnet_regbrowsers", this.GetType().Assembly);

    private static SR GetLoader()
    {
      if (SR.loader == null)
      {
        lock (SR.InternalSyncObject)
        {
          if (SR.loader == null)
            SR.loader = new SR();
        }
      }
      return SR.loader;
    }

    private static CultureInfo Culture => (CultureInfo) null;

    public static ResourceManager Resources => SR.GetLoader().resources;

    public static string GetString(string name, params object[] args)
    {
      SR loader = SR.GetLoader();
      if (loader == null)
        return (string) null;
      string format = loader.resources.GetString(name, SR.Culture);
      if (args == null || args.Length <= 0)
        return format;
      for (int index = 0; index < args.Length; ++index)
      {
        if (args[index] is string str && str.Length > 1024)
          args[index] = (object) (str.Substring(0, 1021) + "...");
      }
      return string.Format((IFormatProvider) CultureInfo.CurrentCulture, format, args);
    }

    public static string GetString(string name) => SR.GetLoader()?.resources.GetString(name, SR.Culture);

    public static object GetObject(string name) => SR.GetLoader()?.resources.GetObject(name, SR.Culture);
  }
}
