// Decompiled with JetBrains decompiler
// Type: ib.GbP
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ib
{
  public class GbP : j7, Ho
  {
    internal static GbP i2V;

    [CompilerGenerated]
    [SpecialName]
    public Hi aSZ() => this.rwB;

    [CompilerGenerated]
    [SpecialName]
    public void cSE(Hi _param1) => this.rwB = _param1;

    [CompilerGenerated]
    [SpecialName]
    public IList<string> Mwk() => this.Ywn;

    [CompilerGenerated]
    [SpecialName]
    public void wwq(IList<string> _param1) => this.Ywn = _param1;

    [SpecialName]
    public string Vwu() => this.Mwk()[this.Mwk().Count - 1];

    public GbP()
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.wwq((IList<string>) new List<string>());
    }

    public override string ToString()
    {
      string str1 = "";
      using (IEnumerator<string> enumerator = this.Mwk().GetEnumerator())
      {
        while (GbP.Vrx((object) enumerator))
        {
          string current = enumerator.Current;
          str1 = (string) GbP.yrc((object) str1, (object) current, (object) ".");
        }
      }
      string str2 = str1.TrimEnd((char[]) GbP.ar2((object) "."));
      int num = 0;
      if (GbP.fri() == null)
        goto label_4;
label_1:
      switch (num)
      {
        default:
          return str2;
      }
label_4:
      num = 0;
      goto label_1;
    }

    internal static bool I2z() => GbP.i2V == null;

    internal static GbP fri() => GbP.i2V;

    internal static object yrc([In] object obj0, [In] object obj1, [In] object obj2) => (object) ((string) obj0 + (string) obj1 + (string) obj2);

    internal static bool Vrx([In] object obj0) => ((IEnumerator) obj0).MoveNext();

    internal static object ar2([In] object obj0) => (object) ((string) obj0).ToCharArray();
  }
}
