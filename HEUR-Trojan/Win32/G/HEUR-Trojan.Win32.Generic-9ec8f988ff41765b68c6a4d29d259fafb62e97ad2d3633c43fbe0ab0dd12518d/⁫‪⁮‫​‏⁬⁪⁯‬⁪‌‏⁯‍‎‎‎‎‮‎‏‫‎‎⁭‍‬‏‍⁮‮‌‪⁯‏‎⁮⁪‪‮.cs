// Decompiled with JetBrains decompiler
// Type: ⁫‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

internal sealed class \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮
{
  static \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮()
  {
    ((\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg) \u202C‭⁮‮⁭⁬‎‌‭‌‮‫‭‍‏‌‫‬‬‭⁬‪‪‭‫⁯‭‌‏⁮⁯​‮⁫‍‪‪⁪⁬‎‮.\u202E‫⁮⁬‎‏⁪‎⁬‍⁮‬‬‫‎‭⁬‮‫‭‍‌⁫​‮​‌⁭‌‪⁬⁭‫‭⁭​‌‍⁪⁫‮(typeof (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg))).ToString();
    ((\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode) \u202C‭⁮‮⁭⁬‎‌‭‌‮‫‭‍‏‌‫‬‬‭⁬‪‪‭‫⁯‭‌‏⁮⁯​‮⁫‍‪‪⁪⁬‎‮.\u202E‫⁮⁬‎‏⁪‎⁬‍⁮‬‬‫‎‭⁬‮‫‭‍‌⁫​‮​‌⁭‌‪⁬⁭‫‭⁭​‌‍⁪⁫‮(typeof (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode))).ToString();
  }

  private static void \u206B‫‌⁮‫⁫⁮‭‌‌‫‌‫‫⁯‮⁮‮‬​‍‮‏‎‎⁯⁬‬‏‭⁬​‫‬⁯‍⁮⁮‪‌‮(
    string _param0,
    out \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg _param1,
    out \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode _param2)
  {
    try
    {
      _param2 = \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.ECB;
      if (_param0 == "DES-EDE" || _param0 == "DES-EDE3")
      {
        _param1 = (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg) \u202C‭⁮‮⁭⁬‎‌‭‌‮‫‭‍‏‌‫‬‬‭⁬‪‪‭‫⁯‭‌‏⁮⁯​‮⁫‍‪‪⁪⁬‎‮.\u202A‍⁪‍⁯⁮⁪‍‍⁬‎‬‎‌⁪⁪⁪⁪⁫‫‍‍⁭⁬‏‍⁪‏‫‬⁯​⁪⁭‮‎‮​⁯‍‮(typeof (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg), _param0);
        return;
      }
      int length = _param0.LastIndexOf('-');
      if (length >= 0)
      {
        _param1 = (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg) \u202C‭⁮‮⁭⁬‎‌‭‌‮‫‭‍‏‌‫‬‬‭⁬‪‪‭‫⁯‭‌‏⁮⁯​‮⁫‍‪‪⁪⁬‎‮.\u202A‍⁪‍⁯⁮⁪‍‍⁬‎‬‎‌⁪⁪⁪⁪⁫‫‍‍⁭⁬‏‍⁪‏‫‬⁯​⁪⁭‮‎‮​⁯‍‮(typeof (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg), _param0.Substring(0, length));
        _param2 = (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode) \u202C‭⁮‮⁭⁬‎‌‭‌‮‫‭‍‏‌‫‬‬‭⁬‪‪‭‫⁯‭‌‏⁮⁯​‮⁫‍‪‪⁪⁬‎‮.\u202A‍⁪‍⁯⁮⁪‍‍⁬‎‬‎‌⁪⁪⁪⁪⁫‫‍‍⁭⁬‏‍⁪‏‫‬⁯​⁪⁭‮‎‮​⁯‍‮(typeof (\u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode), _param0.Substring(length + 1));
        return;
      }
    }
    catch (ArgumentException ex)
    {
    }
    throw new \u200D‍⁬⁯‮‌‎‎‏⁪⁪‌⁯⁯⁯​⁯⁭‌⁬‮‏⁪​‍‮⁬‏‎⁪⁪⁪⁬​‮⁯‏‌⁬‭‮("Unknown DEK algorithm: " + _param0);
  }

  internal static byte[] \u206A‏‮⁭‬⁪⁭‎‪⁭⁫‭⁮‎⁬⁫‮‌⁪‭‭⁭⁮‭‬‌‪⁭⁮‎⁮⁬‎⁯⁯⁪⁬‍‍⁭‮(
    bool _param0,
    byte[] _param1,
    char[] _param2,
    string _param3,
    byte[] _param4)
  {
    \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg pemBaseAlg;
    \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode pemMode;
    \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.\u206B‫‌⁮‫⁫⁮‭‌‌‫‌‫‫⁯‮⁮‮‬​‍‮‏‎‎⁯⁬‬‏‭⁬​‫‬⁯‍⁮⁮‪‌‮(_param3, out pemBaseAlg, out pemMode);
    string str1;
    switch (pemMode)
    {
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.CBC:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.ECB:
        str1 = "PKCS5Padding";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.CFB:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.OFB:
        str1 = "NoPadding";
        break;
      default:
        throw new \u200D‍⁬⁯‮‌‎‎‏⁪⁪‌⁯⁯⁯​⁯⁭‌⁬‮‏⁪​‍‮⁬‏‎⁪⁪⁪⁬​‮⁯‏‌⁬‭‮("Unknown DEK algorithm: " + _param3);
    }
    byte[] destinationArray = _param4;
    string str2;
    switch (pemBaseAlg)
    {
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_128:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_192:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_256:
        str2 = "AES";
        if (destinationArray.Length > 8)
        {
          destinationArray = new byte[8];
          Array.Copy((Array) _param4, 0, (Array) destinationArray, 0, destinationArray.Length);
          break;
        }
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.BF:
        str2 = "BLOWFISH";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES:
        str2 = "DES";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES_EDE:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES_EDE3:
        str2 = "DESede";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2_40:
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2_64:
        str2 = "RC2";
        break;
      default:
        throw new \u200D‍⁬⁯‮‌‎‎‏⁪⁪‌⁯⁯⁯​⁯⁭‌⁬‮‏⁪​‍‮⁬‏‎⁪⁪⁪⁬​‮⁯‏‌⁬‭‮("Unknown DEK algorithm: " + _param3);
    }
    \u202B‫​⁪‍⁪‍‍‌‏‪⁫‭​‌⁫‮‭⁫‍‎‏‎‬‭⁭‫‮⁫‪‮‫‬‫‎⁮‮⁫⁮‏‮ obj1 = \u206F‫⁮‮​‍‫⁯⁮‌⁭​‮‏‪‪⁪‎⁬‌‫⁭‌⁬‭‌‮⁯‎‎‬‮⁬⁫‭​‬‬⁫‫‮.\u200D⁮‮⁭‭⁭‏⁬‬‍‍‭‏‍​‏‏‬⁭⁭‫​‫‪‪⁪‬⁯‫⁭⁫‏‎‬⁯⁪⁪⁮⁪⁫‮(str2 + "/" + pemMode.ToString() + "/" + str1);
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ obj2 = \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.\u202A⁭‫‭‭‏​⁫‌⁫‏⁬⁬⁮‌‌⁬⁯⁪‮‪⁮‮⁮⁯‪‎‌‪‍⁭‮⁭‫⁯‎⁬‌⁪‏‮(_param2, pemBaseAlg, destinationArray);
    if (pemMode != \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemMode.ECB)
      obj2 = (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁯‭‏⁯‬‌‌‏​‌‫⁬‮⁮⁫‬⁬‮⁪‍​⁯‮⁭‏‫‪‍‬⁮​‬⁭⁯‍⁭‭‪⁬‮(obj2, _param4);
    obj1.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(_param0, obj2);
    return obj1.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param1);
  }

  private static \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ \u202A⁭‫‭‭‏​⁫‌⁫‏⁬⁬⁮‌‌⁬⁯⁪‮‪⁮‮⁮⁯‪‎‌‪‍⁭‮⁭‫⁯‎⁬‌⁪‏‮(
    char[] _param0,
    \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg _param1,
    byte[] _param2)
  {
    int num;
    string str;
    switch (_param1)
    {
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_128:
        num = 128;
        str = "AES128";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_192:
        num = 192;
        str = "AES192";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.AES_256:
        num = 256;
        str = "AES256";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.BF:
        num = 128;
        str = "BLOWFISH";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES:
        num = 64;
        str = "DES";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES_EDE:
        num = 128;
        str = "DESEDE";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.DES_EDE3:
        num = 192;
        str = "DESEDE3";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2:
        num = 128;
        str = "RC2";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2_40:
        num = 40;
        str = "RC2";
        break;
      case \u206B‪⁮‫​‏⁬⁪⁯‬⁪‌‏⁯‍‎‎‎‎‮‎‏‫‎‎⁭‍‬‏‍⁮‮‌‪⁯‏‎⁮⁪‪‮.PemBaseAlg.RC2_64:
        num = 64;
        str = "RC2";
        break;
      default:
        return (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) null;
    }
    \u206A⁪⁫‏​‪​‌‮⁮‌⁪⁭‮⁫​⁫⁯⁮⁬⁬‎⁯‌‎⁭⁭‌‌‭⁪⁪‎⁮‎‌‬‪‪‪‮ obj = new \u206A⁪⁫‏​‪​‌‮⁮‌⁪⁭‮⁫​⁫⁯⁮⁬⁬‎⁯‌‎⁭⁭‌‌‭⁪⁪‎⁮‎‌‬‪‪‪‮();
    obj.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(\u206A‏‭⁮⁪‫⁪⁫‌⁫‪⁭⁭‫‭‎​⁫⁪‌‌‏⁫⁪‪⁪⁯⁭⁬‪‮⁫‮‌‌‪‍‍‭⁭‮.\u206D‎‍‪‪⁪‮‏‭⁭‌⁮‫‏‪‍‫‏‏‭⁮‭‌‫‏⁬‌‫‍‮‬⁪‎‎‬⁯‏⁯⁭‍‮(_param0), _param2);
    return ((\u206A‏‭⁮⁪‫⁪⁫‌⁫‪⁭⁭‫‭‎​⁫⁪‌‌‏⁫⁪‪⁪⁯⁭⁬‪‮⁫‮‌‌‪‍‍‭⁭‮) obj).\u200E⁭⁬⁫⁮‮‫‌‫⁫‬‬‬‫‪‫​‮‪⁮⁫‎⁪‪⁭⁫‭⁪‪⁬‍⁬‫‬‫‫⁪‪‫‎‮(str, num);
  }

  private enum PemBaseAlg
  {
    AES_128,
    AES_192,
    AES_256,
    BF,
    DES,
    DES_EDE,
    DES_EDE3,
    RC2,
    RC2_40,
    RC2_64,
  }

  private enum PemMode
  {
    CBC,
    CFB,
    ECB,
    OFB,
  }
}
