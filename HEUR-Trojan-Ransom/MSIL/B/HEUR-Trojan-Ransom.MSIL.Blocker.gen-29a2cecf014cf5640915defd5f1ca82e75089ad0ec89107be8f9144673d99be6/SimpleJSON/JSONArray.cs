// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ConcurrentS, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BBECA65A-DDC9-4285-A0F3-1DAD9BE0ED87
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-29a2cecf014cf5640915defd5f1ca82e75089ad0ec89107be8f9144673d99be6.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1530886934;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 664158804)) % 8U)
          {
            case 0:
              num1 = (int) num2 * 2047196603 ^ 1564605256;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -2071353365 ^ -1755202741;
              continue;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1200524788 ^ 2108166683;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              jsonNode = this.m_List[aIndex];
              num1 = 1176333164;
              continue;
            case 5:
              int num4 = !flag ? -1630469147 : (num4 = -1580316401);
              num1 = num4 ^ (int) num2 * -875225390;
              continue;
            case 6:
              goto label_1;
            case 7:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 452871153;
        }
label_12:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 1251592265;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1910587796)) % 6U)
          {
            case 0:
              this.m_List[aIndex] = value;
              num1 = 779310480;
              continue;
            case 1:
              int num3 = !flag ? -563239806 : (num3 = -1137810364);
              num1 = num3 ^ (int) num2 * 366771584;
              continue;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -854540810 ^ 645234544;
              continue;
            case 3:
              goto label_4;
            case 4:
              goto label_3;
            case 5:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:
        return;
label_4:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 1438392423;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 557647243;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1856704500)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1498396372 ^ 644805986;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 2061871721 ^ 1927950618;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 662033962;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1878816892)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 824034732 ^ -164965517;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -2663302;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -272033645)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * 632827906 ^ -227117686;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1779618695;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 719732147)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -322203214 ^ -1112516828;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -88254507;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -326521328)) % 7U)
        {
          case 0:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 2:
            goto label_1;
          case 3:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -137141230 ^ -1460236577;
            continue;
          case 4:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1460406075 ^ 475733484;
            continue;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -38961858;
            continue;
          case 6:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1814745353 ^ -117429204;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1322735146 : (num4 = -1155655812);
      }
label_11:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1988636116;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1106316288)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * 97344513 ^ -1058778719;
            continue;
          case 2:
            num1 = (int) num2 * 1481046861 ^ -734071953;
            continue;
          case 4:
            jsonNode = aNode;
            num1 = (int) num2 * 501074260 ^ 1279021;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = 313235730;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1209196677)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -429060332 ^ 1694245832;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_5:
        int num1 = enumerator.MoveNext() ? -1757082204 : (num1 = -1698921736);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -616235911)) % 8U)
          {
            case 0:
              int num3 = JSONArray.\u200F⁪⁫‪‫⁮‫‮‍⁫⁪‏‬⁯‬‭​‏‪⁫⁭⁬‫⁪‮‪‍‬‭‭‎‬⁮⁫​‮⁬‍⁬‫‮(str) <= 2 ? 841694299 : (num3 = 827101138);
              num1 = num3 ^ (int) num2 * -1971008018;
              continue;
            case 2:
              str = JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(str, JSONArray.\u202A‪‎‌‏‏⁯‍⁮​​⁪⁪‎‍⁮‌‎⁯⁬‎‍⁯⁯‫⁭‪‪​‭​⁫‫‍‍⁮‬‍‫‎‮((object) current));
              num1 = -415351066;
              continue;
            case 3:
              str = JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(str, ", ");
              num1 = (int) num2 * -869695658 ^ 765858041;
              continue;
            case 4:
              num1 = -1757082204;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = -748891249;
              continue;
            case 6:
              num1 = (int) num2 * 1958803152 ^ -1859238415;
              continue;
            case 7:
              goto label_5;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = -651001855;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -616235911)) % 3U)
          {
            case 1:
              num4 = (int) num5 * -117947601 ^ -271105968;
              continue;
            case 2:
              goto label_11;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      return JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -693841617;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2141785398)) % 4U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 1384133810 ^ 524616930;
            continue;
          case 2:
            num1 = (int) num2 * 1579405274 ^ -1991923670;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_10:
        int num3 = !enumerator.MoveNext() ? -805679720 : (num3 = -159289351);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -2141785398)) % 10U)
          {
            case 0:
              int num5 = flag ? 1054272165 : (num5 = 2028471747);
              num3 = num5 ^ (int) num4 * 93276348;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -1681129837;
              continue;
            case 2:
              num3 = (int) num4 * -1761693432 ^ -1931847516;
              continue;
            case 3:
              str1 = JSONArray.\u202D‌‬‏‬‏⁭‏‬‪⁭⁮‮⁭‬⁪‮⁭⁮‮⁫‎‏⁫‭‌‬‫⁯⁬⁬‪‬⁯⁯‬⁮‫⁪‎‮(str1, "\n", aPrefix, "   ");
              num3 = -2010327563;
              continue;
            case 5:
              flag = JSONArray.\u200F⁪⁫‪‫⁮‫‮‍⁫⁪‏‬⁯‬‭​‏‪⁫⁭⁬‫⁪‮‪‍‬‭‭‎‬⁮⁫​‮⁬‍⁬‫‮(str1) > 3;
              num3 = (int) num4 * -1893831364 ^ 360967636;
              continue;
            case 6:
              num3 = -159289351;
              continue;
            case 7:
              str1 = JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(str1, current.ToString(JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(aPrefix, "   ")));
              num3 = (int) num4 * -966438459 ^ -1617050713;
              continue;
            case 8:
              goto label_10;
            case 9:
              str1 = JSONArray.\u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮(str1, ", ");
              num3 = (int) num4 * 1546435102 ^ 2016542473;
              continue;
            default:
              goto label_22;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_18:
        int num6 = -732810275;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -2141785398)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1164318180 ^ -978976583;
              continue;
            case 2:
              goto label_18;
            default:
              goto label_21;
          }
        }
label_21:;
      }
label_22:
      string str2 = JSONArray.\u202D‌‬‏‬‏⁭‏‬‪⁭⁮‮⁭‬⁪‮⁭⁮‮⁫‎‏⁫‭‌‬‫⁯⁬⁬‪‬⁯⁯‬⁮‫⁪‎‮(str1, "\n", aPrefix, "]");
label_23:
      int num8 = -1856739860;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -2141785398)) % 3U)
        {
          case 0:
            goto label_23;
          case 1:
            str3 = str2;
            num8 = (int) num9 * 284815216 ^ -1183122651;
            continue;
          default:
            goto label_26;
        }
      }
label_26:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 851301872;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 503010365)) % 10U)
        {
          case 0:
            int num3 = flag ? 1443564089 : (num3 = 163666289);
            num1 = num3 ^ (int) num2 * 162086939;
            continue;
          case 1:
            JSONArray.\u202A‮‪‌⁬⁭‬⁫⁫‫‪‭‏‌⁮⁪‪‏‪‍‫‫⁯‮⁬⁬‍⁮‪⁭‍‮‭‪​‎⁮​‌‏‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1704021018 ^ 602002882;
            continue;
          case 2:
            num1 = 1988535620;
            continue;
          case 3:
            JSONArray.\u206D⁬‌‍‮‭‮⁮‮⁪‌‪‫‮‎⁭⁬⁪⁯⁬⁬​‏⁮‫⁬‏‮‭‬‫‫⁮⁭‫⁯‮⁪⁬‬‮(aWriter, this.m_List.Count);
            index = 0;
            num1 = (int) num2 * -351100945 ^ 1255867098;
            continue;
          case 4:
            goto label_3;
          case 5:
            ++index;
            num1 = (int) num2 * 6970832 ^ -872890807;
            continue;
          case 6:
            flag = index < this.m_List.Count;
            num1 = 1190813735;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * 868534153 ^ -857759464;
            continue;
          case 9:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 75868239 ^ 459296754;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u200F⁪⁫‪‫⁮‫‮‍⁫⁪‏‬⁯‬‭​‏‪⁫⁭⁬‫⁪‮‪‍‬‭‭‎‬⁮⁫​‮⁬‍⁬‫‮([In] string obj0) => obj0.Length;

    static string \u200F⁭‫​‍‭⁫⁪‮‌⁭‮⁪‪‭⁮‎‎​⁭‌‪‌⁫⁯‬​⁪‪‫⁭‎⁪‮⁬‍⁬‍⁫‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A‪‎‌‏‏⁯‍⁮​​⁪⁪‎‍⁮‌‎⁯⁬‎‍⁯⁯‫⁭‪‪​‭​⁫‫‍‍⁮‬‍‫‎‮([In] object obj0) => obj0.ToString();

    static string \u202D‌‬‏‬‏⁭‏‬‪⁭⁮‮⁭‬⁪‮⁭⁮‮⁫‎‏⁫‭‌‬‫⁯⁬⁬‪‬⁯⁯‬⁮‫⁪‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202A‮‪‌⁬⁭‬⁫⁫‫‪‭‏‌⁮⁪‪‏‪‍‫‫⁯‮⁬⁬‍⁮‪⁭‍‮‭‪​‎⁮​‌‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D⁬‌‍‮‭‮⁮‮⁪‌‪‫‮‎⁭⁬⁪⁯⁬⁬​‏⁮‫⁬‏‮‭‬‫‫⁮⁭‫⁯‮⁪⁬‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
