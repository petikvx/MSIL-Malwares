// Decompiled with JetBrains decompiler
// Type: VMS.OSP.Inventory.Inventory
// Assembly: VMS.OSP.Service, Version=1.4.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B29B897-26BF-407B-B0D0-14253383A174
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Patched.mf-06a1c79ea1bf078d9f5816243d6887697530720ed581c2975d99154e2a24648f.exe

using System;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;

namespace VMS.OSP.Inventory
{
  [WebServiceBinding(Name = "InventorySoap", Namespace = "http://varian.com/vms.osp.webservices/2006/03/inventory.asmx")]
  [DebuggerStepThrough]
  [DesignerCategory("code")]
  public class Inventory : SoapHttpClientProtocol
  {
    public Inventory()
    {
      string appSetting = ConfigurationManager.AppSettings["VMS.OSP.Service.Inventory.Inventory"];
      if (appSetting != null)
        this.Url = appSetting + "";
      else
        this.Url = "http://localhost/OSPServices/Inventory.asmx";
    }

    [SoapDocumentMethod("http://varian.com/vms.osp.webservices/2006/03/inventory.asmx/MergeLocalInventory", ParameterStyle = SoapParameterStyle.Wrapped, RequestNamespace = "http://varian.com/vms.osp.webservices/2006/03/inventory.asmx", ResponseNamespace = "http://varian.com/vms.osp.webservices/2006/03/inventory.asmx", Use = SoapBindingUse.Literal)]
    public bool MergeLocalInventory(InventoryDataSet clientInventoryDS) => (bool) this.Invoke(nameof (MergeLocalInventory), new object[1]
    {
      (object) clientInventoryDS
    })[0];

    public IAsyncResult BeginMergeLocalInventory(
      InventoryDataSet clientInventoryDS,
      AsyncCallback callback,
      object asyncState)
    {
      return this.BeginInvoke("MergeLocalInventory", new object[1]
      {
        (object) clientInventoryDS
      }, callback, asyncState);
    }

    public bool EndMergeLocalInventory(IAsyncResult asyncResult) => (bool) this.EndInvoke(asyncResult)[0];
  }
}
