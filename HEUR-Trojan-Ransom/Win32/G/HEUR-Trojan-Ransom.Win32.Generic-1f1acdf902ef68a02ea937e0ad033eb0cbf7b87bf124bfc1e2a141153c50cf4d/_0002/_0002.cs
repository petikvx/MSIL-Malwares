// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Microsoft, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 812CF5F4-80B3-4F9B-A390-E995C930E6CD
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-1f1acdf902ef68a02ea937e0ad033eb0cbf7b87bf124bfc1e2a141153c50cf4d.exe

using \u0001;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0002
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class \u0002
  {
    private static readonly \u0002.\u0002.\u0003<\u0004.\u0001> \u0001;
    private static readonly \u0002.\u0002.\u0003<\u0006.\u0001> \u0001;
    private static readonly \u0002.\u0002.\u0003<User> \u0001;
    private static \u0002.\u0002.\u0003<\u0002.\u0002.\u0001> \u0001;
    private static readonly \u0002.\u0002.\u0003<\u0002.\u0002.\u0002> \u0001;

    [DebuggerNonUserCode]
    static \u0002()
    {
label_0:
      if (true)
      {
        \u0002.\u0002.\u0001 = new \u0002.\u0002.\u0003<\u0004.\u0001>();
        \u0002.\u0002.\u0001 = new \u0002.\u0002.\u0003<\u0006.\u0001>();
      }
      do
      {
        do
        {
          \u0002.\u0002.\u0001 = new \u0002.\u0002.\u0003<User>();
          \u0002.\u0002.\u0001 = new \u0002.\u0002.\u0003<\u0002.\u0002.\u0001>();
          if (false)
            goto label_0;
        }
        while (false);
        \u0002.\u0002.\u0001 = new \u0002.\u0002.\u0003<\u0002.\u0002.\u0002>();
      }
      while (false);
    }

    [SpecialName]
    internal static \u0004.\u0001 \u0001() => \u0002.\u0002.\u0001.\u0001();

    [SpecialName]
    internal static \u0006.\u0001 \u0001() => \u0002.\u0002.\u0001.\u0001();

    [SpecialName]
    internal static \u0002.\u0002.\u0001 \u0001() => \u0002.\u0002.\u0001.\u0001();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0001
    {
      public \u0003 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;
      [NonSerialized]
      internal static \u0007.\u0002 \u0092;

      [DebuggerNonUserCode]
      [SpecialName]
      public \u0003 \u0001()
      {
label_0:
        if (true)
          this.\u0001 = \u0002.\u0002.\u0001.\u0001<\u0003>(this.\u0001);
        \u0003 obj;
        do
        {
          if (true)
          {
            obj = this.\u0001;
            do
              ;
            while (false);
          }
          else
            goto label_0;
        }
        while (false);
        return obj;
      }

      private static unsafe \u0001 \u0001<\u0001>([In] \u0001 obj0) where \u0001 : Form, new()
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(2);
label_19:
        if ((object) obj0 == null)
          goto label_3;
label_1:
        int num1;
        if (!obj0.IsDisposed)
        {
          num1 = 0;
          goto label_20;
        }
label_3:
        if (true)
        {
          num1 = 1;
          goto label_20;
        }
        else
          goto label_12;
label_8:
        if (false)
          goto label_1;
label_10:
        \u0002.\u0002.\u0001.\u0001.Add((object) typeof (\u0001), (object) null);
        if (true)
        {
          if (false)
            goto label_19;
        }
        else
          goto label_1;
label_12:
        if (true)
        {
          try
          {
            return new \u0001();
          }
          catch (TargetInvocationException ex) when (
          {
            // ISSUE: unable to correctly present filter
            ProjectData.SetProjectError((Exception) ex);
            if (ex.InnerException != null)
            {
              SuccessfulFiltering;
            }
            else
              throw;
          }
          )
          {
            throw new InvalidOperationException(Utils.GetResourceString(\u0002.\u0002.\u0001.\u0092(132), ex.InnerException.Message), ex.InnerException);
          }
          finally
          {
            do
            {
              \u0002.\u0002.\u0001.\u0001.Remove((object) typeof (\u0001));
            }
            while (false);
          }
        }
        else
          goto label_8;
label_20:
        int num2;
        for (; num1 != 0; num1 = num2)
        {
          *(sbyte*) voidPtr = (sbyte) (\u0002.\u0002.\u0001.\u0001 != null);
          if (*(sbyte*) voidPtr == (sbyte) 0)
          {
            \u0002.\u0002.\u0001.\u0001 = new Hashtable();
            goto label_10;
          }
          else
          {
            *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) \u0002.\u0002.\u0001.\u0001.ContainsKey((object) typeof (\u0001));
            num2 = (int) *(sbyte*) ((IntPtr) voidPtr + 1);
            if (true)
            {
              if (num2 != 0)
                throw new InvalidOperationException(Utils.GetResourceString(\u0002.\u0002.\u0001.\u0092(91)));
              goto label_8;
            }
          }
        }
        return obj0;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0001()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      bool object.\u0001([In] object obj0)
      {
        if (true)
        {
          if (false)
            ;
        }
        else
          goto label_4;
label_2:
        bool flag;
        if (true)
          flag = \u0008.\u0012((object) this, \u0003.\u0008(obj0));
label_4:
        if (true)
          return flag;
        goto label_2;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      int object.\u0001() => \u000E.\u0013((object) this);

      [EditorBrowsable(EditorBrowsableState.Never)]
      string object.\u0001() => \u000F.\u0016((object) this);

      static \u0001() => \u0006.\u0006.\u0001(typeof (\u0002.\u0002.\u0001));
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0002
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      bool object.\u0001([In] object obj0)
      {
        if (true)
        {
          if (false)
            ;
        }
        else
          goto label_4;
label_2:
        bool flag;
        if (true)
          flag = \u0008.\u0012((object) this, \u0003.\u0008(obj0));
label_4:
        if (true)
          return flag;
        goto label_2;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      int object.\u0001() => \u000E.\u0013((object) this);

      [EditorBrowsable(EditorBrowsableState.Never)]
      string object.\u0001() => \u000F.\u0016((object) this);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0002()
      {
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class \u0003<\u0001> where \u0001 : new()
    {
      [SpecialName]
      internal \u0001 \u0001()
      {
label_1:
        // ISSUE: reference to a compiler-generated field
        int num1 = (object) \u0002.\u0002.\u0003<\u0001>.\u0001 == null ? 1 : 0;
        \u0001 obj;
        while (true)
        {
          bool flag;
          if (true)
            flag = num1 != 0;
          int num2;
          do
          {
            num2 = flag ? 1 : 0;
            if (true)
            {
              if (num2 == 0)
                goto label_5;
label_4:
              if (true)
              {
                // ISSUE: reference to a compiler-generated field
                \u0002.\u0002.\u0003<\u0001>.\u0001 = new \u0001();
              }
              else
                goto label_1;
label_5:
              if (true)
              {
                // ISSUE: reference to a compiler-generated field
                obj = \u0002.\u0002.\u0003<\u0001>.\u0001;
              }
              else
                goto label_4;
            }
            else
              goto label_7;
          }
          while (false);
          break;
label_7:
          num1 = num2;
        }
        return obj;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public \u0003()
      {
      }
    }
  }
}
