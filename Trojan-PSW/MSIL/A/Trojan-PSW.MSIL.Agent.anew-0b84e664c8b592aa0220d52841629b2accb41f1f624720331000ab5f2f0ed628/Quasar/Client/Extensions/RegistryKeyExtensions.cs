// Decompiled with JetBrains decompiler
// Type: Quasar.Client.Extensions.RegistryKeyExtensions
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using Microsoft.Win32;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

namespace Quasar.Client.Extensions
{
  public static class RegistryKeyExtensions
  {
    private static bool IsNameOrValueNull(this string keyName, RegistryKey key);
    public static string GetValueSafe(this RegistryKey key, string keyName, string defaultValue = "");
    public static RegistryKey OpenReadonlySubKeySafe(this RegistryKey key, string name);
    public static RegistryKey OpenWritableSubKeySafe(this RegistryKey key, string name);
    public static RegistryKey CreateSubKeySafe(this RegistryKey key, string name);
    public static bool DeleteSubKeyTreeSafe(this RegistryKey key, string name);
    public static bool RenameSubKeySafe(this RegistryKey key, string oldName, string newName);
    public static void CopyKey(this RegistryKey key, string oldName, string newName);
    private static void RecursiveCopyKey(RegistryKey sourceKey, RegistryKey destKey);
    public static bool SetValueSafe(
      this RegistryKey key,
      string name,
      object data,
      RegistryValueKind kind);
    public static bool DeleteValueSafe(this RegistryKey key, string name);
    public static bool RenameValueSafe(this RegistryKey key, string oldName, string newName);
    public static void CopyValue(this RegistryKey key, string oldName, string newName);
    public static bool ContainsSubKey(this RegistryKey key, string name);
    public static bool ContainsValue(this RegistryKey key, string name);
    [IteratorStateMachine(typeof (RegistryKeyExtensions.\u003CGetKeyValues\u003Ed__15))]
    public static IEnumerable<Tuple<string, string>> GetKeyValues(this RegistryKey key);
    public static object GetDefault(this RegistryValueKind valueKind);

    private sealed class \u003C\u003Ec__DisplayClass15_0
    {
    }

    private sealed class \u003C\u003Ec
    {
    }

    private sealed class \u003CGetKeyValues\u003Ed__15 : 
      IEnumerable<Tuple<string, string>>,
      IEnumerable,
      IEnumerator<Tuple<string, string>>,
      IDisposable,
      IEnumerator
    {
    }
  }
}
