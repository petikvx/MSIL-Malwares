// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: AppConte, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B8B5733-911E-457B-A55E-DDA2927F5FA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-60ba049b8af0c51a8dfbc45cacedef4180000b7739c937d22d8cbd66d4c6a8a8.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 881397802;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 896326752)) % 4U)
        {
          case 1:
            this.m_Node = aNode;
            num1 = (int) num2 * -956404083 ^ -1219483467;
            continue;
          case 2:
            num1 = (int) num2 * -1513122004 ^ -128828319;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 2018638777;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1125958226)) % 10U)
        {
          case 0:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -26395440 ^ -1558492810;
            continue;
          case 1:
            num1 = (int) num2 * 1035263061 ^ -182242810;
            continue;
          case 2:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 724697305 ^ -938458841;
            continue;
          case 3:
            int num3 = this.m_Key != null ? -1858403937 : (num3 = -879856163);
            num1 = num3 ^ (int) num2 * -887667765;
            continue;
          case 4:
            num1 = (int) num2 * -2041519757 ^ 1096963625;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 1400232882 ^ 690077877;
            continue;
          case 8:
            num1 = 1066314960;
            continue;
          case 9:
            num1 = (int) num2 * -866514939 ^ 173431293;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 2025887147;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 910537181)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -221866508 ^ 259048506;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1102199839 ^ -2017941230;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -1678969710;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -103291470)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 2142134350 ^ -1289376897;
              continue;
            case 2:
              aVal.Add(value);
              num1 = (int) num2 * -2021404109 ^ 101859985;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1351946415 ^ 99627312;
              continue;
            case 4:
              goto label_3;
            case 5:
              num1 = (int) num2 * -774503720 ^ -1738371176;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
label_1:
        int num1 = -2134733039;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -841130115)) % 3U)
          {
            case 1:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1957207168 ^ -558150042;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
      aVal.Add(aItem);
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1042501983;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1263017708)) % 5U)
        {
          case 0:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 590679999 ^ -390122969;
            continue;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1479262100 ^ -217773106;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 4:
            aVal = new JSONClass();
            num1 = (int) num2 * -917529466 ^ 1098044560;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 751326839;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1600124714)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 205468008 ^ -512453658;
            continue;
          case 2:
            num1 = (int) num2 * 1518202396 ^ -774928970;
            continue;
          case 3:
            flag2 = (object) a == b;
            num1 = 1746393272;
            continue;
          case 5:
            flag1 = b == null;
            num1 = (int) num2 * -1524573420 ^ -737751623;
            continue;
          case 6:
            flag2 = true;
            num1 = (int) num2 * 1128477275 ^ -2095921511;
            continue;
          case 7:
            int num3 = !flag1 ? -803733524 : (num3 = -180838839);
            num1 = num3 ^ (int) num2 * 2076819771;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -2060754573;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -434702968)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 511797618 ^ 603691837;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_4;
label_1:
      int num1 = 1960169131;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2141032548)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_4;
          case 3:
            flag = true;
            num1 = (int) num2 * 633529718 ^ -1688016328;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
label_4:
      flag = (object) this == obj;
      num1 = 795489362;
      goto label_2;
    }

    public override int GetHashCode() => base.GetHashCode();

    public override string ToString()
    {
label_1:
      int num1 = 182409541;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 651707724)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 308986388 ^ 29418058;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * -1690461192 ^ 2088750824;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -916116452;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -100433545)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1537507411 ^ 751516294;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = "";
            num1 = (int) num2 * 905990142 ^ -1394324367;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 171261163;
        int asInt;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1735940002)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = (int) num2 * 1217782175 ^ -344358619;
              continue;
            case 2:
              num1 = (int) num2 * 1258475845 ^ 1211616399;
              continue;
            case 3:
              aVal = new JSONData(0);
              num1 = (int) num2 * -1556308458 ^ -898170349;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 165182659 ^ -1468348921;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -1953466625;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1469808657)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -135796676 ^ -1026324161;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -1283744639;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -857353320)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * -1598421443 ^ 1678611026;
              continue;
            case 1:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * 2041967696 ^ 751318420;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -438424794;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -798039675)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1586514069 ^ -725295792;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1189178664 ^ 1360715313;
              continue;
            case 4:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1192638009 ^ 315809647;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -1088389929;
        double asDouble;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1853510497)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1424234227 ^ 1603295804;
              continue;
            case 1:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -2024677557 ^ 2119223529;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -1665948129 ^ 1223956959;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1789046118;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2134205360)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1259414816 ^ -995258533;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 47666512;
        bool asBool;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 399479168)) % 6U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 647862130 ^ -1962983311;
              continue;
            case 2:
              aVal = new JSONData(false);
              num1 = (int) num2 * 340594065 ^ -2042082801;
              continue;
            case 3:
              num1 = (int) num2 * -1261123578 ^ 504329441;
              continue;
            case 4:
              goto label_1;
            case 5:
              asBool = false;
              num1 = (int) num2 * -1823649881 ^ -1219901349;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -1943975054;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2066982489)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1136428350 ^ -1611339265;
              continue;
            case 2:
              num1 = (int) num2 * 1120963144 ^ -1485119852;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -2065423991;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1704712820)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1119196281 ^ -616039171;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -1211536076 ^ -508604841;
              continue;
            case 3:
              asArray = aVal;
              num1 = (int) num2 * 283084349 ^ -587523792;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2089828347;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 99289629)) % 4U)
          {
            case 1:
              asObject = aVal;
              num1 = (int) num2 * 863988736 ^ -37842219;
              continue;
            case 2:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -486256414 ^ -993202440;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
