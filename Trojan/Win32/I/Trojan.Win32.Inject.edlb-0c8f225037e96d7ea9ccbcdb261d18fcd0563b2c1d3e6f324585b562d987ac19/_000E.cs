// Decompiled with JetBrains decompiler
// Type: 
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 32BC53D7-A239-4C18-BE53-ECC907E1DE31
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Inject.edlb-0c8f225037e96d7ea9ccbcdb261d18fcd0563b2c1d3e6f324585b562d987ac19.exe

using System;
using System.IO;

public sealed class \u000E : \u0005, \u0006, \u0008
{
  private uint \u0002;
  private uint \u0003;
  private uint \u0005;
  private uint \u0008;
  private uint[] \u0006;
  private uint[] \u000E;
  private uint[] \u000F;
  private uint[] \u0002\u2000;
  private uint \u0003\u2000 = (uint) byte.MaxValue;
  private bool \u0005\u2000 = true;
  private bool \u0008\u2000;
  private new uint \u0006\u2000 = 1024;
  private uint \u000E\u2000;
  private uint \u000F\u2000 = 4;
  private uint \u0002\u2001 = 1048576;

  public void \u0002(int _param1, bool _param2)
  {
    this.\u0005\u2000 = _param1 > 2;
    this.\u0008\u2000 = _param2;
    if (this.\u0005\u2000)
    {
      this.\u0006\u2000 = 1024U;
      this.\u000E\u2000 = 0U;
      this.\u000F\u2000 = 4U;
      this.\u0002\u2001 = this.\u0008\u2000 ? 8388608U : 1048576U;
    }
    else
    {
      this.\u000E\u2000 = 2U;
      this.\u000F\u2000 = 2U;
      this.\u0002\u2001 = 65536U;
    }
  }

  private uint \u0002(uint _param1, out uint _param2, out uint _param3)
  {
    uint num1 = \u0008\u2001.\u0002[(int) base.\u0002[(IntPtr) _param1]] ^ (uint) base.\u0002[(IntPtr) (_param1 + 1U)];
    _param2 = num1 & this.\u0006\u2000 - 1U;
    uint num2 = num1 ^ (uint) base.\u0002[(IntPtr) (_param1 + 2U)] << 8;
    _param3 = num2 & 262143U;
    return (uint) (((int) num2 ^ (int) \u0008\u2001.\u0002[(int) base.\u0002[(IntPtr) (_param1 + 3U)]] << 5) & (int) this.\u0002\u2001 - 1);
  }

  private uint \u0002(uint _param1) => (uint) base.\u0002[(IntPtr) _param1] ^ (uint) base.\u0002[(IntPtr) (_param1 + 1U)] << 8;

  public new void \u0008\u2004\u2006\u2008\u2002\u0002(Stream _param1)
  {
    base.\u0008\u2004\u2006\u2008\u2002\u0002(_param1);
    for (uint index = 0; index < this.\u0002\u2001; ++index)
      this.\u000E[(IntPtr) index] = 0U;
    if (this.\u0005\u2000)
    {
      for (uint index = 0; index < this.\u0006\u2000; ++index)
        this.\u000F[(IntPtr) index] = 0U;
      for (uint index = 0; index < 262144U; ++index)
        this.\u0002\u2000[(IntPtr) index] = 0U;
    }
    this.\u0002 = 0U;
    this.\u0002(-1);
  }

  public new void \u0008\u2004\u2006\u2008\u2002\u0002() => base.\u0008\u2004\u2006\u2008\u2002\u0002();

  public new void \u0008\u2004\u2006\u2008\u2002\u0003()
  {
    ++this.\u0002;
    if (this.\u0002 >= this.\u0003)
      this.\u0002 = 0U;
    base.\u0008\u2004\u2006\u2008\u2002\u0003();
    if (base.\u0002\u2000 != (uint) int.MaxValue)
      return;
    this.\u0002();
  }

  public new byte \u0008\u2004\u2006\u2008\u2002\u0002(int _param1) => base.\u0008\u2004\u2006\u2008\u2002\u0002(_param1);

  public new uint \u0008\u2004\u2006\u2008\u2002\u0002(int _param1, uint _param2, uint _param3) => base.\u0008\u2004\u2006\u2008\u2002\u0002(_param1, _param2, _param3);

  public new uint \u0008\u2004\u2006\u2008\u2002\u0002() => base.\u0008\u2004\u2006\u2008\u2002\u0002();

  public void \u0006\u2004\u2006\u2008\u2002\u0002(
    uint _param1,
    uint _param2,
    uint _param3,
    uint _param4)
  {
    uint num = (_param1 + _param2 + _param3 + _param4) / 2U + 256U;
    this.\u0006 = (uint[]) null;
    this.\u000E = (uint[]) null;
    this.\u000F = (uint[]) null;
    this.\u0002\u2000 = (uint[]) null;
    this.\u0002(_param1 + _param2, _param3 + _param4, num);
    if (base.\u000F + 256U > (uint) int.MaxValue)
      throw new Exception();
    this.\u0005 = _param1;
    this.\u0008 = _param3;
    this.\u0003 = _param1 + 1U;
    this.\u0006 = new uint[(IntPtr) (this.\u0003 * 2U)];
    this.\u000E = new uint[(IntPtr) this.\u0002\u2001];
    if (!this.\u0005\u2000)
      return;
    this.\u000F = new uint[(IntPtr) this.\u0006\u2000];
    this.\u0002\u2000 = new uint[new IntPtr(262144)];
  }

  public uint \u0006\u2004\u2006\u2008\u2002\u0002(uint[] _param1)
  {
    uint num1;
    if (base.\u0002\u2000 + this.\u0008 <= base.\u0006\u2000)
    {
      num1 = this.\u0008;
    }
    else
    {
      num1 = base.\u0006\u2000 - base.\u0002\u2000;
      if (num1 < this.\u000F\u2000)
        return 0;
    }
    uint num2 = base.\u0002\u2000 > this.\u0005 ? base.\u0002\u2000 - this.\u0005 : 1U;
    uint index1 = base.\u000E + base.\u0002\u2000;
    uint num3 = 0;
    uint index2 = 0;
    uint index3 = 0;
    uint index4 = !this.\u0005\u2000 ? this.\u0002(index1) : this.\u0002(index1, out index2, out index3);
    uint num4 = this.\u000E[(IntPtr) index4];
    uint num5 = 0;
    uint num6 = 0;
    bool flag1 = false;
    bool flag2 = false;
    if (this.\u0005\u2000)
    {
      uint num7 = this.\u000F[(IntPtr) index2];
      uint num8 = this.\u0002\u2000[(IntPtr) index3];
      this.\u000F[(IntPtr) index2] = base.\u0002\u2000;
      if (num7 >= num2 && (int) base.\u0002[(IntPtr) (base.\u000E + num7)] == (int) base.\u0002[(IntPtr) index1])
      {
        num5 = (uint) ((int) base.\u0002\u2000 - (int) num7 - 1);
        num3 = 2U;
        flag1 = true;
      }
      this.\u0002\u2000[(IntPtr) index3] = base.\u0002\u2000;
      if (num8 >= num2 && (int) base.\u0002[(IntPtr) (base.\u000E + num8)] == (int) base.\u0002[(IntPtr) index1])
      {
        num6 = (uint) ((int) base.\u0002\u2000 - (int) num8 - 1);
        num3 = 3U;
        flag2 = true;
        if (flag1)
        {
          if (num6 < num5)
            num5 = num6;
        }
        else
        {
          num5 = num6;
          flag1 = true;
        }
      }
    }
    this.\u000E[(IntPtr) index4] = base.\u0002\u2000;
    if (num4 < num2)
    {
      this.\u0006[(IntPtr) (this.\u0002 << 1)] = 0U;
      this.\u0006[(IntPtr) (uint) (((int) this.\u0002 << 1) + 1)] = 0U;
      if (this.\u0005\u2000)
      {
        _param1[2] = num5;
        _param1[3] = num6;
      }
      return num3;
    }
    uint index5 = (uint) (((int) this.\u0002 << 1) + 1);
    uint index6 = this.\u0002 << 1;
    int num9;
    uint val2 = (uint) (num9 = (int) this.\u000E\u2000);
    uint val1 = (uint) num9;
    uint index7 = (uint) num9;
    _param1[(IntPtr) index7] = (uint) ((int) base.\u0002\u2000 - (int) num4 - 1);
    for (uint index8 = this.\u0003\u2000; index8 > 0U; --index8)
    {
      uint num10 = base.\u000E + num4;
      uint num11 = Math.Min(val1, val2);
      while (num11 < num1 && (int) base.\u0002[(IntPtr) (num10 + num11)] == (int) base.\u0002[(IntPtr) (index1 + num11)])
        ++num11;
      uint num12 = base.\u0002\u2000 - num4;
      while (num11 > index7)
        _param1[(IntPtr) ++index7] = num12 - 1U;
      uint index9 = (uint) ((num12 <= this.\u0002 ? (int) this.\u0002 - (int) num12 : (int) this.\u0002 - (int) num12 + (int) this.\u0003) << 1);
      if ((int) num11 != (int) num1)
      {
        if ((int) base.\u0002[(IntPtr) (num10 + num11)] < (int) base.\u0002[(IntPtr) (index1 + num11)])
        {
          this.\u0006[(IntPtr) index6] = num4;
          index6 = index9 + 1U;
          num4 = this.\u0006[(IntPtr) index6];
          if (num11 > val1)
            val1 = num11;
        }
        else
        {
          this.\u0006[(IntPtr) index5] = num4;
          index5 = index9;
          num4 = this.\u0006[(IntPtr) index5];
          if (num11 > val2)
            val2 = num11;
        }
      }
      else if (num11 < this.\u0008)
      {
        this.\u0006[(IntPtr) index5] = num4;
        index5 = index9;
        num4 = this.\u0006[(IntPtr) index5];
        if (num11 > val2)
          val2 = num11;
      }
      else
      {
        this.\u0006[(IntPtr) index5] = this.\u0006[(IntPtr) (index9 + 1U)];
        this.\u0006[(IntPtr) index6] = this.\u0006[(IntPtr) index9];
        if (this.\u0005\u2000)
        {
          if (flag1 && num5 < _param1[2])
            _param1[2] = num5;
          if (flag2 && num6 < _param1[3])
            _param1[3] = num6;
        }
        return index7;
      }
      if (num4 < num2)
        break;
    }
    this.\u0006[(IntPtr) index5] = 0U;
    this.\u0006[(IntPtr) index6] = 0U;
    if (this.\u0005\u2000)
    {
      if (flag1)
      {
        if (index7 < 2U)
        {
          _param1[2] = num5;
          index7 = 2U;
        }
        else if (num5 < _param1[2])
          _param1[2] = num5;
      }
      if (flag2)
      {
        if (index7 < 3U)
        {
          _param1[3] = num6;
          index7 = 3U;
        }
        else if (num6 < _param1[3])
          _param1[3] = num6;
      }
    }
    return index7;
  }

  public void \u0006\u2004\u2006\u2008\u2002\u0002()
  {
    uint num1;
    if (base.\u0002\u2000 + this.\u0008 <= base.\u0006\u2000)
    {
      num1 = this.\u0008;
    }
    else
    {
      num1 = base.\u0006\u2000 - base.\u0002\u2000;
      if (num1 < this.\u000F\u2000)
        return;
    }
    uint num2 = base.\u0002\u2000 > this.\u0005 ? base.\u0002\u2000 - this.\u0005 : 1U;
    uint num3 = base.\u000E + base.\u0002\u2000;
    uint index1 = 0;
    uint index2 = 0;
    uint index3 = !this.\u0005\u2000 ? this.\u0002(num3) : this.\u0002(num3, out index1, out index2);
    uint num4 = this.\u000E[(IntPtr) index3];
    if (this.\u0005\u2000)
    {
      int num5 = (int) this.\u000F[(IntPtr) index1];
      int num6 = (int) this.\u0002\u2000[(IntPtr) index2];
      this.\u000F[(IntPtr) index1] = base.\u0002\u2000;
      this.\u0002\u2000[(IntPtr) index2] = base.\u0002\u2000;
    }
    this.\u000E[(IntPtr) index3] = base.\u0002\u2000;
    if (num4 < num2)
    {
      this.\u0006[(IntPtr) (this.\u0002 << 1)] = 0U;
      this.\u0006[(IntPtr) (uint) (((int) this.\u0002 << 1) + 1)] = 0U;
    }
    else
    {
      uint index4 = (uint) (((int) this.\u0002 << 1) + 1);
      uint index5 = this.\u0002 << 1;
      uint val2;
      uint val1 = val2 = this.\u000E\u2000;
      for (uint index6 = this.\u0003\u2000; index6 > 0U; --index6)
      {
        uint num7 = base.\u000E + num4;
        uint num8 = Math.Min(val1, val2);
        while (num8 < num1 && (int) base.\u0002[(IntPtr) (num7 + num8)] == (int) base.\u0002[(IntPtr) (num3 + num8)])
          ++num8;
        uint num9 = base.\u0002\u2000 - num4;
        uint index7 = (uint) ((num9 <= this.\u0002 ? (int) this.\u0002 - (int) num9 : (int) this.\u0002 - (int) num9 + (int) this.\u0003) << 1);
        if ((int) num8 != (int) num1)
        {
          if ((int) base.\u0002[(IntPtr) (num7 + num8)] < (int) base.\u0002[(IntPtr) (num3 + num8)])
          {
            this.\u0006[(IntPtr) index5] = num4;
            index5 = index7 + 1U;
            num4 = this.\u0006[(IntPtr) index5];
            if (num8 > val1)
              val1 = num8;
          }
          else
          {
            this.\u0006[(IntPtr) index4] = num4;
            index4 = index7;
            num4 = this.\u0006[(IntPtr) index4];
            if (num8 > val2)
              val2 = num8;
          }
        }
        else if (num8 < this.\u0008)
        {
          this.\u0006[(IntPtr) index4] = num4;
          index4 = index7;
          num4 = this.\u0006[(IntPtr) index4];
          if (num8 > val2)
            val2 = num8;
        }
        else
        {
          this.\u0006[(IntPtr) index4] = this.\u0006[(IntPtr) (index7 + 1U)];
          this.\u0006[(IntPtr) index5] = this.\u0006[(IntPtr) index7];
          return;
        }
        if (num4 < num2)
          break;
      }
      this.\u0006[(IntPtr) index4] = 0U;
      this.\u0006[(IntPtr) index5] = 0U;
    }
  }

  private void \u0002(uint[] _param1, uint _param2, uint _param3)
  {
    for (uint index = 0; index < _param2; ++index)
    {
      uint num1 = _param1[(IntPtr) index];
      uint num2 = num1 > _param3 ? num1 - _param3 : 0U;
      _param1[(IntPtr) index] = num2;
    }
  }

  private void \u0002()
  {
    uint num = base.\u0002\u2000 - this.\u0005 - 1U;
    this.\u0002(this.\u0006, this.\u0003 * 2U, num);
    this.\u0002(this.\u000E, this.\u0002\u2001, num);
    if (this.\u0005\u2000)
    {
      this.\u0002(this.\u000F, this.\u0006\u2000, num);
      this.\u0002(this.\u0002\u2000, 262144U, num);
    }
    this.\u0002((int) num);
  }

  public void \u0002(uint _param1) => this.\u0003\u2000 = _param1;
}
