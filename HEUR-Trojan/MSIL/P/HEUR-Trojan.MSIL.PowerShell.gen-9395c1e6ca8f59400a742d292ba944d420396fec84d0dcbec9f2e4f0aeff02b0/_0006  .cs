// Decompiled with JetBrains decompiler
// Type:   
// Assembly: IUnknownSafeHand, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8A634AAB-5188-4D51-8A9B-F2BFECF380AF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.PowerShell.gen-9395c1e6ca8f59400a742d292ba944d420396fec84d0dcbec9f2e4f0aeff02b0.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Text;
using System.Threading;

internal sealed class \u0006\u2002\u2000
{
  private StringReader \u0002;

  public IEnumerable<object> \u0002(string _param1) => (IEnumerable<object>) new \u0006\u2002\u2000.\u0002(-2)
  {
    \u000E = this,
    \u0006 = _param1
  };

  private char \u0002() => (char) this.\u0002.Peek();

  private object \u0002()
  {
    this.\u0003();
    object obj;
    if (this.\u0002.Peek() == -1)
    {
      obj = (object) null;
    }
    else
    {
      switch (this.\u0002())
      {
        case '"':
          obj = this.\u0006();
          break;
        case '#':
          obj = this.\u0003();
          break;
        case '\'':
          this.\u0002.Read();
          obj = (object) new List<object>()
          {
            (object) \u0002\u2001\u2000.\u0002(\u0005\u2004\u2000.\u0002(737671092)),
            this.\u0002()
          };
          break;
        case '(':
          obj = this.\u0008();
          break;
        case ';':
          this.\u0002();
          obj = this.\u0002();
          break;
        default:
          obj = this.\u0002(string.Empty);
          break;
      }
    }
    return obj;
  }

  private void \u0002()
  {
    while (this.\u0002() != '\n')
      this.\u0002.Read();
  }

  private void \u0003()
  {
    while (char.IsWhiteSpace(this.\u0002()))
      this.\u0002.Read();
  }

  private object \u0003()
  {
    this.\u0002.Read();
    return this.\u0002() != '\\' ? this.\u0002(\u0005\u2004\u2000.\u0002(737670938)) : this.\u0005();
  }

  private object \u0005()
  {
    this.\u0002.Read();
    object obj;
    if (char.IsLetter(this.\u0002()))
    {
      string str = string.Empty;
      while (this.\u0002.Peek() != -1 && this.\u0002() != ')' && !char.IsWhiteSpace(this.\u0002()))
        str += ((char) this.\u0002.Read()).ToString();
      if (str == \u0005\u2004\u2000.\u0002(737670946))
        str = \u0005\u2004\u2000.\u0002(737666846);
      else if (str == \u0005\u2004\u2000.\u0002(737670958))
        str = \u0005\u2004\u2000.\u0002(737667456);
      else if (str == \u0005\u2004\u2000.\u0002(737670968))
        str = \u0005\u2004\u2000.\u0002(737667479);
      else if (str == \u0005\u2004\u2000.\u0002(737670983))
        str = \u0005\u2004\u2000.\u0002(737667494);
      else if (str.Length > 1)
        throw new \u000F\u2001(\u0005\u2004\u2000.\u0002(737670989) + str);
      obj = (object) str[0];
    }
    else
      obj = (object) (char) this.\u0002.Read();
    return obj;
  }

  private object \u0008()
  {
    List<object> objectList = new List<object>();
    this.\u0002.Read();
    this.\u0003();
    while (this.\u0002() != ')')
    {
      if (this.\u0002.Peek() == -1)
        throw new \u000F\u2001(\u0005\u2004\u2000.\u0002(737671025));
      objectList.Add(this.\u0002());
      this.\u0003();
    }
    this.\u0002.Read();
    return (object) objectList;
  }

  private object \u0002(string _param1)
  {
    string s = _param1 + ((char) this.\u0002.Read()).ToString();
    while (this.\u0002.Peek() != -1 && this.\u0002() != ')' && !char.IsWhiteSpace(this.\u0002()))
      s += ((char) this.\u0002.Read()).ToString();
    int result1;
    double result2;
    return !(s == \u0005\u2004\u2000.\u0002(737667768)) ? (!(s == \u0005\u2004\u2000.\u0002(737667761)) ? (s.Contains(\u0005\u2004\u2000.\u0002(737667509)) || !int.TryParse(s, NumberStyles.Any, (IFormatProvider) CultureInfo.InvariantCulture, out result1) ? (!double.TryParse(s, NumberStyles.Any, (IFormatProvider) CultureInfo.InvariantCulture, out result2) ? (object) \u0002\u2001\u2000.\u0002(s) : (object) result2) : (object) result1) : (object) false) : (object) true;
  }

  private object \u0006()
  {
    StringBuilder stringBuilder = new StringBuilder();
    this.\u0002.Read();
    while (this.\u0002() != '"')
    {
      char ch = this.\u0002.Peek() != -1 ? (char) this.\u0002.Read() : throw new \u000F\u2001(\u0005\u2004\u2000.\u0002(737671025));
      if (ch == '\\')
      {
        ch = (char) this.\u0002.Read();
        if (ch == 'n')
          ch = '\n';
      }
      stringBuilder.Append(ch);
    }
    this.\u0002.Read();
    return (object) stringBuilder.ToString();
  }

  private sealed class \u0002 : 
    IEnumerable<object>,
    IEnumerable,
    IEnumerator<object>,
    IDisposable,
    IEnumerator
  {
    private int \u0002;
    private object \u0003;
    private int \u0005;
    private string \u0008;
    public string \u0006;
    public \u0006\u2002\u2000 \u000E;
    private object \u000F;

    [DebuggerHidden]
    public \u0002(int _param1)
    {
      this.\u0002 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    void IDisposable.\u0002\u2006\u2004\u2002\u2000\u0002()
    {
    }

    bool IEnumerator.MoveNext()
    {
      switch (this.\u0002)
      {
        case 0:
          this.\u0002 = -1;
          this.\u000E.\u0002 = new StringReader(this.\u0008);
          break;
        case 1:
          this.\u0002 = -1;
          this.\u000F = (object) null;
          break;
        default:
          return false;
      }
      if (this.\u000E.\u0002.Peek() == -1)
        return false;
      this.\u000F = this.\u000E.\u0002();
      if (this.\u000F == null)
        return false;
      this.\u0003 = this.\u000F;
      this.\u0002 = 1;
      return true;
    }

    [DebuggerHidden]
    object IEnumerator<object>.\u0002\u2006\u2004\u2002\u2000\u0002() => this.\u0003;

    [DebuggerHidden]
    void IEnumerator.\u0002\u2006\u2004\u2002\u2000\u0003() => throw new NotSupportedException();

    [DebuggerHidden]
    object IEnumerator.\u0002\u2006\u2004\u2002\u2000\u0003() => this.\u0003;

    [DebuggerHidden]
    IEnumerator<object> IEnumerable<object>.\u0002\u2006\u2004\u2002\u2000\u0002()
    {
      \u0006\u2002\u2000.\u0002 obj;
      if (this.\u0002 == -2 && this.\u0005 == Thread.CurrentThread.ManagedThreadId)
      {
        this.\u0002 = 0;
        obj = this;
      }
      else
      {
        obj = new \u0006\u2002\u2000.\u0002(0);
        obj.\u000E = this.\u000E;
      }
      obj.\u0008 = this.\u0006;
      return (IEnumerator<object>) obj;
    }

    [DebuggerHidden]
    IEnumerator IEnumerable.\u0002\u2006\u2004\u2002\u2000\u0002() => (IEnumerator) this.\u0002\u2006\u2004\u2002\u2000\u0002();
  }
}
