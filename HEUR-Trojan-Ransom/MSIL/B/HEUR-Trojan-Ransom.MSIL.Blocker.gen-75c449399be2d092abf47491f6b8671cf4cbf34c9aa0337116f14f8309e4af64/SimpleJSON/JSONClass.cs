// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: SystemThreadingSpinLockDebugVi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4BC7AA9F-A353-4AE7-9558-F3A117D261BE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75c449399be2d092abf47491f6b8671cf4cbf34c9aa0337116f14f8309e4af64.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1915122348;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2145286443)) % 8U)
          {
            case 0:
              int num3 = !flag ? 202781995 : (num3 = 85193937);
              num1 = num3 ^ (int) num2 * -1057697182;
              continue;
            case 1:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -59704257 ^ 1786457170;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1837250235 ^ 1584582111;
              continue;
            case 4:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 450493142 ^ -1186946990;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -1463937146;
              continue;
            case 7:
              num1 = (int) num2 * 200350602 ^ 795482870;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_6;
label_1:
        int num1 = -775953090;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -361259412)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1544540149 ^ -790865984;
              continue;
            case 2:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1465977795 ^ -1859363362;
              continue;
            case 3:
              goto label_3;
            case 4:
              num1 = (int) num2 * -397203857 ^ 1204529829;
              continue;
            case 5:
              goto label_6;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_6:
        this.m_Dict.Add(aKey, value);
        num1 = -1378234315;
        goto label_2;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1574819047;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1279293438)) % 6U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 332646087 ^ -470944408;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = 14288260;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              goto label_1;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -2066291677 ^ 505499395;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 346889290 : (num4 = 935081237);
        }
label_10:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -221374989;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -218984248)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              goto label_6;
            case 3:
              int num3 = !flag ? 86648340 : (num3 = 1942120396);
              num1 = num3 ^ (int) num2 * 2051689654;
              continue;
            case 4:
              num1 = (int) num2 * 1393846541 ^ 1139452312;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_6:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_8;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = -1541401901;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -980900554;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1807256017)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 2132461538 ^ 2054453797;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1754708974;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 200587295)) % 14U)
        {
          case 0:
            int num3 = flag ? 74941948 : (num3 = 717292353);
            num1 = num3 ^ (int) num2 * -1307150336;
            continue;
          case 1:
            num1 = 962446927;
            continue;
          case 2:
            goto label_3;
          case 3:
            int num4 = !this.m_Dict.ContainsKey(aKey) ? 214536417 : (num4 = 2109257801);
            num1 = num4 ^ (int) num2 * 817265742;
            continue;
          case 4:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1771195796;
            continue;
          case 5:
            num1 = (int) num2 * 1753530605 ^ 1539523335;
            continue;
          case 6:
            num1 = (int) num2 * 1983624600 ^ -1023770727;
            continue;
          case 7:
            num1 = (int) num2 * 488795162 ^ -333814777;
            continue;
          case 8:
            this.m_Dict.Add(aKey, aItem);
            num1 = 853887448;
            continue;
          case 9:
            flag = !JSONClass.\u206B⁯⁫‫⁯⁭‮‏‎‫⁪‭⁮⁭​⁬‪‍‬⁯‭‍‫‭‎⁭‬‎​⁫⁯⁬⁬​⁬⁪⁮‌⁯‎‮(aKey);
            num1 = (int) num2 * 911808302 ^ -1889411981;
            continue;
          case 10:
            num1 = (int) num2 * 1550042672 ^ -1118238410;
            continue;
          case 11:
            num1 = (int) num2 * 1814122000 ^ 516276552;
            continue;
          case 12:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -577963847 ^ -836826285;
            continue;
          case 13:
            goto label_1;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -939019174;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -704517356)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            int num3 = !flag ? -822292586 : (num3 = -1414912050);
            num1 = num3 ^ (int) num2 * -114370284;
            continue;
          case 3:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1217336075 ^ -865753152;
            continue;
          case 4:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -1483470791;
            continue;
          case 5:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 580785041 ^ -1025203948;
            continue;
          case 6:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 332483768 ^ 1978343710;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1368921491;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1733592976)) % 8U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 699006672 ^ 2000825238;
            continue;
          case 2:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 3:
            goto label_1;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = -233675104;
            continue;
          case 5:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 453322265 ^ 331216007;
            continue;
          case 6:
            num1 = (int) num2 * -1704969685 ^ 1464683570;
            continue;
          case 7:
            int num4 = flag ? -42891254 : (num4 = -1861252905);
            num1 = num4 ^ (int) num2 * -171958779;
            continue;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -1666688185;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 1887288932;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1657914188)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 883311587 ^ -3059098;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -720757572;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1630150031)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1200507146 ^ 2144227076;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_4:
        int num1 = enumerator.MoveNext() ? 375881500 : (num1 = 872217754);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 487810413)) % 10U)
          {
            case 0:
              str1 = JSONClass.\u202B⁭‌‍‬‍‏⁭⁭⁭⁫⁯​‬‏‮⁫‬‪‭⁪⁪​⁬⁫‌‫⁭⁪⁯‬‏‬‍‬‮‭‫⁫⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202C‪‏‫⁫‫‌‎‌​‎⁯​⁪‌‭​‭‍⁬⁪‪⁯⁪⁪‭‮⁭‪‭‮⁭‬​⁪⁫⁯‭‭⁪‮((object) current.Value)
              });
              num1 = 2074879637;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = 1679270843;
              continue;
            case 2:
              num1 = (int) num2 * -724992482 ^ -2058470576;
              continue;
            case 3:
              flag = JSONClass.\u200D⁫‮⁪‫‫‌‫⁭‪‭‭⁫‭‏‪‫‎‎‪⁭⁭⁫⁯⁮⁫‭⁮‫⁮‏⁮‬‭‬​‭‫‫⁭‮(str1) > 2;
              num1 = (int) num2 * 1022058129 ^ 783746508;
              continue;
            case 4:
              int num3 = flag ? 1577094289 : (num3 = 2030253493);
              num1 = num3 ^ (int) num2 * 908245163;
              continue;
            case 6:
              str1 = JSONClass.\u206D‭‫⁭‏‭⁯⁬‭‮⁬‌⁭⁬⁯⁪⁭‫⁮⁬‫⁬⁯⁫‌‎‬⁭⁬‮‍‬‪‎⁬‬⁫⁬‏‮‮(str1, ", ");
              num1 = (int) num2 * -1943613817 ^ 1098062097;
              continue;
            case 7:
              num1 = 375881500;
              continue;
            case 8:
              num1 = (int) num2 * 816218019 ^ -480625416;
              continue;
            case 9:
              goto label_4;
            default:
              goto label_17;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_13:
        int num4 = 925439550;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 487810413)) % 3U)
          {
            case 0:
              goto label_13;
            case 1:
              num4 = (int) num5 * -68916827 ^ 556666485;
              continue;
            default:
              goto label_16;
          }
        }
label_16:;
      }
label_17:
      string str2 = JSONClass.\u206D‭‫⁭‏‭⁯⁬‭‮⁬‌⁭⁬⁯⁪⁭‫⁮⁬‫⁬⁯⁫‌‎‬⁭⁬‮‍‬‪‎⁬‬⁫⁬‏‮‮(str1, "}");
label_18:
      int num6 = 766922930;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 487810413)) % 4U)
        {
          case 0:
            goto label_18;
          case 1:
            num6 = (int) num7 * -464600497 ^ 1951796920;
            continue;
          case 3:
            str3 = str2;
            num6 = (int) num7 * 1247456093 ^ 905510603;
            continue;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1981875962;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1271693127)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1107979922 ^ 1793487409;
            continue;
          case 3:
            str1 = "{ ";
            num1 = (int) num2 * -1960971237 ^ -333065231;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_15:
        int num3 = !enumerator.MoveNext() ? -984582047 : (num3 = -1002839370);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1271693127)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u202B⁭‌‍‬‍‏⁭⁭⁭⁫⁯​‬‏‮⁫‬‪‭⁪⁪​⁬⁫‌‫⁭⁪⁯‬‏‬‍‬‮‭‫⁫⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206D‭‫⁭‏‭⁯⁬‭‮⁬‌⁭⁬⁯⁪⁭‫⁮⁬‫⁬⁯⁫‌‎‬⁭⁬‮‍‬‪‎⁬‬⁫⁬‏‮‮(aPrefix, "   "))
              });
              num3 = (int) num4 * 1773759308 ^ 842848027;
              continue;
            case 1:
              str1 = JSONClass.\u206D‭‫⁭‏‭⁯⁬‭‮⁬‌⁭⁬⁯⁪⁭‫⁮⁬‫⁬⁯⁫‌‎‬⁭⁬‮‍‬‪‎⁬‬⁫⁬‏‮‮(str1, ", ");
              num3 = (int) num4 * 239541343 ^ 405397209;
              continue;
            case 2:
              str1 = JSONClass.\u202C‌‬‌⁪‫⁫⁫‍‏⁪⁪‫‭‌‌⁭‏⁬⁭‍‫⁮‬‎‪‫‬‎⁪⁮​‪​⁯⁫‌⁪⁭⁮‮(str1, "\n", aPrefix, "   ");
              num3 = -1608333536;
              continue;
            case 3:
              num3 = -1002839370;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = -334749893;
              continue;
            case 5:
              goto label_15;
            case 6:
              int num5 = flag ? 1929807967 : (num5 = 1607410435);
              num3 = num5 ^ (int) num4 * -1706621956;
              continue;
            case 8:
              flag = JSONClass.\u200D⁫‮⁪‫‫‌‫⁭‪‭‭⁫‭‏‪‫‎‎‪⁭⁭⁫⁯⁮⁫‭⁮‫⁮‏⁮‬‭‬​‭‫‫⁭‮(str1) > 3;
              num3 = (int) num4 * 1462701742 ^ 716224461;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = -668084471;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -1271693127)) % 3U)
          {
            case 0:
              goto label_17;
            case 2:
              num6 = (int) num7 * -1059830939 ^ -1392572834;
              continue;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONClass.\u202C‌‬‌⁪‫⁫⁫‍‏⁪⁪‫‭‌‌⁭‏⁬⁭‍‫⁮‬‎‪‫‬‎⁪⁮​‪​⁯⁫‌⁪⁭⁮‮(str1, "\n", aPrefix, "}");
label_22:
      int num8 = -1793787738;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -1271693127)) % 3U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * -2084382331 ^ 1886956382;
            continue;
          case 2:
            goto label_22;
          default:
            goto label_25;
        }
      }
label_25:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206F‭‭​‌‪​‏‭​⁬‌‭‭‭‫⁪‎⁮⁫‫‫⁭⁮⁮⁬​​‮‌⁮⁮‮‏⁮‮⁭‮‏⁯‮(aWriter, (byte) 2);
label_1:
      int num1 = 1119928434;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1319465608)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 5531499 ^ 172616096;
            continue;
          case 2:
            JSONClass.\u200C‬⁪‬⁮⁯⁪‍‬⁪‬⁪‪‏‭​‏⁫‎⁫‏‏⁬‮⁮‮‭⁫‌⁯⁭⁮‏‍‭‎‭‎‭‍‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -393514664 ^ -891538487;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? 938384667 : (num3 = 1521510103);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1319465608)) % 8U)
          {
            case 0:
              goto label_14;
            case 1:
              num3 = (int) num4 * -1608346079 ^ 117491596;
              continue;
            case 2:
              JSONClass.\u200F⁫​‌‬‏‫‍⁫⁫⁬‍⁯‪⁭⁮‭⁫​‪⁪​‬‎‎‪⁯‫‫‍‍‏‫‍⁮‫⁬⁮⁫‫‮(aWriter, current);
              num3 = (int) num4 * -1697748565 ^ -165903742;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 754489186;
              continue;
            case 4:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 573877123 ^ 1110231973;
              continue;
            case 5:
              num3 = (int) num4 * -1459235728 ^ -2056893696;
              continue;
            case 6:
              num3 = 938384667;
              continue;
            case 7:
              goto label_16;
            default:
              goto label_9;
          }
        }
label_16:
        return;
label_9:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 265342411;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1098524687)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1296818188 ^ 566457396;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u206B⁯⁫‫⁯⁭‮‏‎‫⁪‭⁮⁭​⁬‪‍‬⁯‭‍‫‭‎⁭‬‎​⁫⁯⁬⁬​⁬⁪⁮‌⁯‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200D⁫‮⁪‫‫‌‫⁭‪‭‭⁫‭‏‪‫‎‎‪⁭⁭⁫⁯⁮⁫‭⁮‫⁮‏⁮‬‭‬​‭‫‫⁭‮([In] string obj0) => obj0.Length;

    static string \u206D‭‫⁭‏‭⁯⁬‭‮⁬‌⁭⁬⁯⁪⁭‫⁮⁬‫⁬⁯⁫‌‎‬⁭⁬‮‍‬‪‎⁬‬⁫⁬‏‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C‪‏‫⁫‫‌‎‌​‎⁯​⁪‌‭​‭‍⁬⁪‪⁯⁪⁪‭‮⁭‪‭‮⁭‬​⁪⁫⁯‭‭⁪‮([In] object obj0) => obj0.ToString();

    static string \u202B⁭‌‍‬‍‏⁭⁭⁭⁫⁯​‬‏‮⁫‬‪‭⁪⁪​⁬⁫‌‫⁭⁪⁯‬‏‬‍‬‮‭‫⁫⁯‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202C‌‬‌⁪‫⁫⁫‍‏⁪⁪‫‭‌‌⁭‏⁬⁭‍‫⁮‬‎‪‫‬‎⁪⁮​‪​⁯⁫‌⁪⁭⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F‭‭​‌‪​‏‭​⁬‌‭‭‭‫⁪‎⁮⁫‫‫⁭⁮⁮⁬​​‮‌⁮⁮‮‏⁮‮⁭‮‏⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‬⁪‬⁮⁯⁪‍‬⁪‬⁪‪‏‭​‏⁫‎⁫‏‏⁬‮⁮‮‭⁫‌⁯⁭⁮‏‍‭‎‭‎‭‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F⁫​‌‬‏‫‍⁫⁫⁬‍⁯‪⁭⁮‭⁫​‪⁪​‬‎‎‪⁯‫‫‍‍‏‫‍⁮‫⁬⁮⁫‫‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
