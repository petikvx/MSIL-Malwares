// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Common.BrowserCreditCard
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf;
using System.Collections.Generic;
using System.ComponentModel;

namespace NoiseMe.Drags.App.Models.Common
{
  [ProtoContract(Name = "BrowserCreditCard")]
  public class BrowserCreditCard : INotifyPropertyChanged, IEqualityComparer<BrowserCreditCard>
  {
    private string _holder;
    private string _cardNumber;
    private int _expirationMonth;
    private int _expirationYear;

    [ProtoMember(1, Name = "Holder")]
    public string Holder
    {
      get => this._holder;
      set
      {
        this._holder = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Holder)));
      }
    }

    [ProtoMember(2, Name = "ExpirationMonth")]
    public int ExpirationMonth
    {
      get => this._expirationMonth;
      set
      {
        this._expirationMonth = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (ExpirationMonth)));
      }
    }

    [ProtoMember(3, Name = "ExpirationYear")]
    public int ExpirationYear
    {
      get => this._expirationYear;
      set
      {
        this._expirationYear = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (ExpirationYear)));
      }
    }

    [ProtoMember(4, Name = "CardNumber")]
    public string CardNumber
    {
      get => this._cardNumber;
      set
      {
        this._cardNumber = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (CardNumber)));
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public bool Equals(BrowserCreditCard x, BrowserCreditCard y) => x.Holder == y.Holder && x.CardNumber == y.CardNumber;

    public int GetHashCode(BrowserCreditCard obj)
    {
      int hashCode = 37 * 397;
      if (!string.IsNullOrEmpty(obj.Holder))
        hashCode += obj.Holder.GetHashCode();
      if (!string.IsNullOrEmpty(obj.CardNumber))
        hashCode += obj.CardNumber.GetHashCode();
      return hashCode;
    }
  }
}
