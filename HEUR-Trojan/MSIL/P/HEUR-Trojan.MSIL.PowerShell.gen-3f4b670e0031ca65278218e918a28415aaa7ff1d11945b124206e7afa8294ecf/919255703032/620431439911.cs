// Decompiled with JetBrains decompiler
// Type: 919255703032.620431439911
// Assembly: 919255703032, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-3f4b670e0031ca65278218e918a28415aaa7ff1d11945b124206e7afa8294ecf.exe

using \u003169024187478;
using \u003919255703032;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003919255703032
{
  public class \u003620431439911
  {
    private \u003531070416204 \u003995212566699;

    public \u003620431439911(\u003531070416204 settings) => this.\u003995212566699 = settings;

    public \u003885688287016 \u003181768179700(string _param1)
    {
      \u003885688287016 obj = this.\u003947514040916(_param1);
      if (obj == null)
        return (\u003885688287016) null;
      List<\u003788217974714> objList = this.\u003217373608664(obj);
      obj.\u003214595452904 = objList.ToArray();
      long totalSeconds = (long) (DateTime.UtcNow - new DateTime(1970, 1, 1)).TotalSeconds;
      string directoryName = Path.GetDirectoryName(_param1);
      string withoutExtension = Path.GetFileNameWithoutExtension(_param1);
      string extension = Path.GetExtension(_param1);
      string destFileName = Path.Combine(directoryName, withoutExtension + "_" + totalSeconds.ToString() + extension);
      File.Move(_param1, destFileName);
      string contents = JsonConvert.SerializeObject((object) obj, (Formatting) 1);
      File.WriteAllText(_param1, contents);
      return obj;
    }

    public \u003885688287016 \u003947514040916(string _param1)
    {
      using (StreamReader streamReader = new StreamReader(_param1))
        return JsonConvert.DeserializeObject<\u003885688287016>(streamReader.ReadToEnd());
    }

    public List<\u003788217974714> \u003217373608664(\u003885688287016 _param1)
    {
      List<\u003788217974714> objList = new List<\u003788217974714>();
      if (this.\u003995212566699.\u003421449884654)
        this.\u003936430162882(_param1, objList);
      if (this.\u003995212566699.\u003933410148558)
        this.\u003516532441305(_param1, objList);
      if (((\u003166748966739) this.\u003995212566699).\u003011075724717)
        this.\u003878114528622(_param1, objList);
      this.\u003799337439520(objList);
      return objList;
    }

    private void \u003799337439520(List<\u003788217974714> _param1)
    {
      _param1.Add(new \u003788217974714(0.0, 12, this.\u003995212566699.\u003221391567484));
      _param1.Add(new \u003788217974714(0.0, 13, this.\u003995212566699.\u003221391567484));
    }

    private void \u003936430162882(\u003885688287016 _param1_1, List<\u003788217974714> _param2)
    {
      double num = ((IEnumerable<\u003524873967675>) _param1_1.\u003085430861663).Max<\u003524873967675>((Func<\u003524873967675, double>) (_param1_2 => _param1_2.\u003574951931206));
      double? nullable = this.\u003738251908645((IEnumerable<\u003788217974714>) _param1_1.\u003214595452904);
      if (!nullable.HasValue)
        return;
      bool flag = true;
      for (double time = nullable.Value; time <= num; time += this.\u003995212566699.\u003323118074002)
      {
        if (num - time < this.\u003995212566699.\u003323118074002)
        {
          if (flag)
            _param2.Add(new \u003788217974714(time, 1, 7));
          else
            _param2.Add(new \u003788217974714(time, 1, 3));
        }
        else if (flag)
        {
          _param2.Add(new \u003788217974714(time, 1, 5));
          if (this.\u003995212566699.\u003669674557574 && time >= 1.0)
            _param2.Add(new \u003788217974714(time - 2.0, 1, 3));
        }
        else
        {
          _param2.Add(new \u003788217974714(time, 1, 1));
          if (this.\u003995212566699.\u003669674557574 && time >= 1.0)
            _param2.Add(new \u003788217974714(time - 2.0, 1, 7));
        }
        flag = !flag;
      }
    }

    private void \u003516532441305(\u003885688287016 _param1_1, List<\u003788217974714> _param2)
    {
      double num = ((IEnumerable<\u003524873967675>) _param1_1.\u003085430861663).Max<\u003524873967675>((Func<\u003524873967675, double>) (_param1_2 => _param1_2.\u003574951931206));
      double? nullable = this.\u003738251908645((IEnumerable<\u003788217974714>) _param1_1.\u003214595452904);
      if (!nullable.HasValue)
        return;
      for (double time = nullable.Value; time <= num; time += this.\u003995212566699.\u003323118074002)
        _param2.Add(new \u003788217974714(time, 8, 0));
    }

    private double? \u003738251908645(IEnumerable<\u003788217974714> _param1)
    {
      if (_param1 == null)
        return new double?();
      List<double> doubleList = new List<double>();
      foreach (\u003788217974714 obj in _param1)
      {
        if (obj.\u003195793369550 == 0)
          doubleList.Add(obj.\u003983758571604);
      }
      Dictionary<double, int> dictionary = this.\u003110967116641((IEnumerable<double>) doubleList);
      if (dictionary.Count == 0)
        return new double?();
      List<double> source = new List<double>();
      foreach (KeyValuePair<double, int> keyValuePair in dictionary)
      {
        if (keyValuePair.Value == 7)
          source.Add(keyValuePair.Key);
      }
      return source.Count == 0 ? new double?() : new double?(source.Min());
    }

    private Dictionary<double, int> \u003110967116641(IEnumerable<double> _param1)
    {
      Dictionary<double, int> dictionary = new Dictionary<double, int>();
      foreach (double key in _param1)
      {
        if (!dictionary.ContainsKey(key))
          dictionary[key] = 0;
        ++dictionary[key];
      }
      return dictionary;
    }

    private void \u003878114528622(\u003885688287016 _param1, List<\u003788217974714> _param2)
    {
      \u003524873967675[] objArray = _param1.\u003085430861663;
      if (this.\u003995212566699.\u003295196493771)
        objArray = this.\u003984355760295((IEnumerable<\u003524873967675>) _param1.\u003085430861663);
      foreach (\u003524873967675 obj in objArray)
      {
        Tuple<int, int> tuple = this.\u003774927520406(obj.\u003512242010828, obj.\u003065322698774);
        _param2.Add(new \u003788217974714(obj.\u003574951931206, tuple.Item1, tuple.Item2));
      }
    }

    private Tuple<int, int> \u003774927520406(int _param1, int _param2)
    {
      int num1 = 0;
      int num2 = 0;
      switch (_param1)
      {
        case 0:
        case 2:
        case 4:
        case 6:
          num1 = 7;
          break;
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
          num1 = 3;
          break;
      }
      switch (_param2)
      {
        case 0:
          num2 = 2;
          break;
        case 2:
          num2 = 3;
          break;
        case 3:
          num2 = 4;
          break;
      }
      return Tuple.Create<int, int>(num2, num1);
    }

    private \u003524873967675[] \u003984355760295(
      IEnumerable<\u003524873967675> _param1_1)
    {
      return _param1_1.GroupBy<\u003524873967675, int>((Func<\u003524873967675, int>) (_param1_2 => this.\u003828174055497(_param1_2.\u003574951931206, 2))).OrderByDescending<IGrouping<int, \u003524873967675>, int>((Func<IGrouping<int, \u003524873967675>, int>) (_param1_3 => _param1_3.Count<\u003524873967675>())).FirstOrDefault<IGrouping<int, \u003524873967675>>().ToArray<\u003524873967675>();
    }

    private int \u003828174055497(double _param1, int _param2)
    {
      Decimal num = (Decimal) _param1 % 1M;
      for (int index = 0; index < _param2; ++index)
        num *= 10M;
      return (int) num;
    }
  }
}
