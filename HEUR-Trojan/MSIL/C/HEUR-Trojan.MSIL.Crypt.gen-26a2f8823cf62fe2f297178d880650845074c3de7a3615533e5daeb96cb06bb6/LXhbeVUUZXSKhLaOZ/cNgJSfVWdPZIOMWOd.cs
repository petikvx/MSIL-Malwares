// Decompiled with JetBrains decompiler
// Type: LXhbeVUUZXSKhLaOZ.cNgJSfVWdPZIOMWOd
// Assembly: aQcPbbbdLQZSSTKIM, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 47E00139-9DB6-4FCB-A5FC-38C8169637E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.Crypt.gen-26a2f8823cf62fe2f297178d880650845074c3de7a3615533e5daeb96cb06bb6.exe

using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Host;
using Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem;
using Microsoft.VisualStudio.LanguageServices.Implementation.TaskList;
using Microsoft.VisualStudio.LanguageServices.Remote;
using Microsoft.VisualStudio.Shell;
using Microsoft.VisualStudio.Shell.Interop;
using Microsoft.VisualStudio.TextManager.Interop;
using System;
using System.ComponentModel.Composition;

namespace LXhbeVUUZXSKhLaOZ
{
  [Export]
  internal class cNgJSfVWdPZIOMWOd
  {
    private readonly SVsServiceProvider ZQbVIXJbSUUMcdWQX;
    private readonly RemoteLanguageServiceWorkspaceHost cVPYIeUNIUYSSJMMZ;

    [ImportingConstructor]
    public cNgJSfVWdPZIOMWOd(
      SVsServiceProvider serviceProvider,
      RemoteLanguageServiceWorkspaceHost remoteLanguageServiceWorkspaceHost)
    {
      this.ZQbVIXJbSUUMcdWQX = serviceProvider ?? throw new ArgumentNullException(nameof (serviceProvider));
      this.cVPYIeUNIUYSSJMMZ = remoteLanguageServiceWorkspaceHost ?? throw new ArgumentNullException(nameof (remoteLanguageServiceWorkspaceHost));
    }

    public cNgJSfVWdPZIOMWOd(
      VisualStudioProjectTracker projectTracker,
      Func<ProjectId, IVsReportExternalErrors> reportExternalErrorCreatorOpt,
      string projectSystemName,
      string projectFilePath,
      IVsHierarchy hierarchy,
      string language,
      Guid projectGuid,
      IServiceProvider serviceProvider,
      VisualStudioWorkspaceImpl visualStudioWorkspaceOpt,
      HostDiagnosticUpdateSource hostDiagnosticUpdateSourceOpt,
      ICommandLineParserService commandLineParserServiceOpt = null)
      : this(projectTracker, reportExternalErrorCreatorOpt, projectSystemName, projectFilePath, hierarchy, language, projectGuid, serviceProvider, visualStudioWorkspaceOpt, hostDiagnosticUpdateSourceOpt, commandLineParserServiceOpt)
    {
    }
  }
}
