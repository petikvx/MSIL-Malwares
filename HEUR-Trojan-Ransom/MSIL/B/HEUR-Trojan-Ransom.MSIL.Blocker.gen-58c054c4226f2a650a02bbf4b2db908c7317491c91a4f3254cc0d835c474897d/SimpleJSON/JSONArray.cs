// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: EraIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: DF309F35-9A6B-48AA-8FAD-6A916AD051A5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-58c054c4226f2a650a02bbf4b2db908c7317491c91a4f3254cc0d835c474897d.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1805902881;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1460759186)) % 8U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 192308513 ^ 149681271;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              goto label_1;
            case 3:
              int num4 = !flag ? -789139121 : (num4 = -1684521794);
              num1 = num4 ^ (int) num2 * -1740209532;
              continue;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 20219912 ^ -283152672;
              continue;
            case 5:
              jsonNode = this.m_List[aIndex];
              num1 = -274910231;
              continue;
            case 6:
              num1 = (int) num2 * 571050343 ^ 913992363;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = -1496935443;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 728624872;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 546582787)) % 10U)
          {
            case 0:
              num1 = (int) num2 * -1600668523 ^ 1757975138;
              continue;
            case 1:
              num1 = (int) num2 * 1157333136 ^ -270837408;
              continue;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -442770210 ^ -2034004588;
              continue;
            case 3:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1996020430 ^ 224642680;
              continue;
            case 4:
              int num4 = !flag ? 295407569 : (num4 = 1389690193);
              num1 = num4 ^ (int) num2 * 2074131685;
              continue;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * 151017402 ^ -62232793;
              continue;
            case 8:
              this.m_List[aIndex] = value;
              num1 = 669034894;
              continue;
            case 9:
              goto label_3;
            default:
              goto label_15;
          }
          flag = num3 != 0;
          num1 = 1430125911;
        }
label_3:
        return;
label_15:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 2017771288;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 378000237)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1711545441 ^ -1126231346;
              continue;
            case 2:
              num1 = (int) num2 * 866852364 ^ -340595363;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -629357435;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -823310256)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * 212214600 ^ 1902754768;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -616789690;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -962691731)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1051875580 ^ -1673276462;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 870746777;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1701334150)) % 11U)
        {
          case 0:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 490773475 ^ -1472385330;
            continue;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -569668841 ^ -496668487;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            num1 = (int) num2 * -2134763839 ^ 825496603;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1236349725 ^ 1841829939;
            continue;
          case 4:
            int num4 = flag ? -1192824253 : (num4 = -1550431073);
            num1 = num4 ^ (int) num2 * 1733622830;
            continue;
          case 5:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 1399467465 ^ -1183934290;
            continue;
          case 7:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 8:
            jsonNode2 = this.m_List[aIndex];
            num1 = 956518104;
            continue;
          case 9:
            goto label_1;
          case 10:
            num1 = (int) num2 * -1755664804 ^ 979339877;
            continue;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = 322556789;
      }
label_15:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1768369434;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1147036437)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1228275945 ^ 1553993852;
            continue;
          case 3:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * -1469298736 ^ 1944313568;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONArray.\u003Cget_Childs\u003Ed__13(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -899421756;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1698875922)) % 23U)
          {
            case 0:
              int num4;
              num2 = num4 = enumerator.MoveNext() ? -1521040771 : (num4 = -909090253);
              continue;
            case 1:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -2109161602 ^ 775507643;
              continue;
            case 2:
              int num5;
              num2 = num5 = num1 != 1 ? -1125416155 : (num5 = -793356286);
              continue;
            case 3:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 1095056490 ^ 524710695;
              continue;
            case 5:
              num2 = (int) num3 * -683889410 ^ -918850542;
              continue;
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 688643030 ^ -1903784732;
              continue;
            case 7:
              int num6 = num1 != 0 ? 2106240126 : (num6 = 1450486273);
              num2 = num6 ^ (int) num3 * -1666808564;
              continue;
            case 8:
            case 22:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -665998139;
              continue;
            case 9:
              enumerator1 = false;
              num2 = -983334292;
              continue;
            case 10:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * -934983659 ^ 2000060178;
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -976760797 ^ -1865341378;
              continue;
            case 12:
              N = enumerator.Current;
              num2 = -601390422;
              continue;
            case 13:
              goto label_7;
            case 14:
              num2 = (int) num3 * -735674762 ^ 1991311325;
              continue;
            case 15:
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -432174636;
              continue;
            case 16:
              N = (JSONNode) null;
              num2 = (int) num3 * -986996103 ^ 1666388427;
              continue;
            case 17:
              goto label_1;
            case 19:
              num2 = (int) num3 * -642752137 ^ -1436076987;
              continue;
            case 20:
              num2 = (int) num3 * -1354606990 ^ -332082741;
              continue;
            case 21:
              goto label_23;
            default:
              goto label_21;
          }
        }
label_7:
        enumerator1 = true;
        goto label_23;
label_21:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_23:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = 1226958232;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 643057434)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1716706426 ^ -1675777681;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_13:
        int num3 = enumerator.MoveNext() ? 502204392 : (num3 = 1150916435);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 643057434)) % 10U)
          {
            case 0:
              num3 = (int) num4 * -727653200 ^ -1930971525;
              continue;
            case 1:
              goto label_13;
            case 2:
              current = enumerator.Current;
              num3 = 1873166715;
              continue;
            case 3:
              num3 = (int) num4 * 531733473 ^ -1109430353;
              continue;
            case 4:
              str1 = JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(str1, JSONArray.\u202A⁯⁫‪‏‫⁬‭‮‫⁮⁪‍‌‎⁮⁯⁮‮⁬‪⁪‪⁪​⁮‮‮⁮‮⁫⁭‍‬⁪‏‍⁮⁫‎‮((object) current));
              num3 = 429736150;
              continue;
            case 5:
              int num5 = !flag ? 1284428121 : (num5 = 216577280);
              num3 = num5 ^ (int) num4 * 1823471733;
              continue;
            case 6:
              num3 = 502204392;
              continue;
            case 7:
              str1 = JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(str1, ", ");
              num3 = (int) num4 * -1291121457 ^ 1693044461;
              continue;
            case 8:
              flag = JSONArray.\u200C⁮‪‍⁬‍‮‍‏‫⁭⁬‭‌‌⁭⁬‎⁮⁪‎‎⁪⁬‮‭⁭‎⁮‫⁯‫‪‫⁭‬⁯⁪‮‬‮(str1) > 2;
              num3 = (int) num4 * 1006096149 ^ -1415608983;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(str1, " ]");
label_18:
      int num6 = 464065243;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 643057434)) % 3U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * -1325765857 ^ -575591790;
            continue;
          case 2:
            goto label_18;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_6:
        int num1 = enumerator.MoveNext() ? 1721260269 : (num1 = 917683433);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1415699926)) % 10U)
          {
            case 0:
              str1 = JSONArray.\u202C⁫‍⁬‪‬‍⁫‪⁮‫​‌‏‏⁮​​‌‮‎​‪⁯⁪⁫​‬‫‌‫‌‬‭⁮‭‭⁮‎‮‮(str1, "\n", aPrefix, "   ");
              num1 = 1949631319;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = 908936348;
              continue;
            case 2:
              str1 = JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(str1, ", ");
              num1 = (int) num2 * 87552358 ^ 1373247914;
              continue;
            case 3:
              num1 = (int) num2 * -1787416074 ^ -2120565338;
              continue;
            case 4:
              int num3 = flag ? 899834676 : (num3 = 1287294842);
              num1 = num3 ^ (int) num2 * 75926819;
              continue;
            case 5:
              num1 = 1721260269;
              continue;
            case 6:
              flag = JSONArray.\u200C⁮‪‍⁬‍‮‍‏‫⁭⁬‭‌‌⁭⁬‎⁮⁪‎‎⁪⁬‮‭⁭‎⁮‫⁯‫‪‫⁭‬⁯⁪‮‬‮(str1) > 3;
              num1 = (int) num2 * 1194229830 ^ 355991158;
              continue;
            case 7:
              str1 = JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(str1, current.ToString(JSONArray.\u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮(aPrefix, "   ")));
              num1 = (int) num2 * 184951827 ^ 1005249674;
              continue;
            case 8:
              goto label_6;
            default:
              goto label_13;
          }
        }
      }
label_13:
      string str2 = JSONArray.\u202C⁫‍⁬‪‬‍⁫‪⁮‫​‌‏‏⁮​​‌‮‎​‪⁯⁪⁫​‬‫‌‫‌‬‭⁮‭‭⁮‎‮‮(str1, "\n", aPrefix, "]");
label_14:
      int num4 = 436657696;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1415699926)) % 4U)
        {
          case 0:
            goto label_14;
          case 2:
            str3 = str2;
            num4 = (int) num5 * 966343311 ^ 226417335;
            continue;
          case 3:
            num4 = (int) num5 * -764927934 ^ -256148259;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -2056876174;
      bool flag;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1133266971)) % 13U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -50913898 ^ -1341725659;
            continue;
          case 2:
            num1 = -326967179;
            continue;
          case 3:
            goto label_3;
          case 4:
            flag = index < this.m_List.Count;
            num1 = -815010947;
            continue;
          case 5:
            index = 0;
            num1 = (int) num2 * -1183546093 ^ -544657509;
            continue;
          case 6:
            num1 = (int) num2 * -51683584 ^ 1709173545;
            continue;
          case 7:
            num1 = (int) num2 * -992330895 ^ 1488805900;
            continue;
          case 8:
            JSONArray.\u200F‮​‎‮⁭‫‮‮‎⁫‎‏⁮‫‌⁭‌‎‮​‪⁫‎‏‪⁭‪‫‏⁪‎‍‍‍‎⁯⁫⁬‮‮(aWriter, (byte) 1);
            num1 = (int) num2 * -1519679902 ^ 388318579;
            continue;
          case 9:
            num1 = (int) num2 * 605433015 ^ -267854216;
            continue;
          case 10:
            int num3 = flag ? -1743688546 : (num3 = -1115463026);
            num1 = num3 ^ (int) num2 * -1759229114;
            continue;
          case 11:
            JSONArray.\u200C‮‍⁭‬‪⁬⁭​‏‭‏‬‬⁭⁮‬⁯‭⁭‫‏‎‌‬⁪‏‭‭‭⁪‬‬​‬‎⁯⁭‮⁫‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1685953300 ^ 593693429;
            continue;
          case 12:
            ++index;
            num1 = (int) num2 * -1147495232 ^ -1140109690;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -504129796;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1351471638)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 820185970 ^ 1026815832;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u200C⁮‪‍⁬‍‮‍‏‫⁭⁬‭‌‌⁭⁬‎⁮⁪‎‎⁪⁬‮‭⁭‎⁮‫⁯‫‪‫⁭‬⁯⁪‮‬‮([In] string obj0) => obj0.Length;

    static string \u200B‬‭‍‬⁯‎‍⁫‪⁬⁭⁭​‎‎‪‮‬⁫⁮‍‮​⁯⁬‮⁭⁯‌‍⁮‫⁯⁮‌‮⁫‬‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A⁯⁫‪‏‫⁬‭‮‫⁮⁪‍‌‎⁮⁯⁮‮⁬‪⁪‪⁪​⁮‮‮⁮‮⁫⁭‍‬⁪‏‍⁮⁫‎‮([In] object obj0) => obj0.ToString();

    static string \u202C⁫‍⁬‪‬‍⁫‪⁮‫​‌‏‏⁮​​‌‮‎​‪⁯⁪⁫​‬‫‌‫‌‬‭⁮‭‭⁮‎‮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200F‮​‎‮⁭‫‮‮‎⁫‎‏⁮‫‌⁭‌‎‮​‪⁫‎‏‪⁭‪‫‏⁪‎‍‍‍‎⁯⁫⁬‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‮‍⁭‬‪⁬⁭​‏‭‏‬‬⁭⁮‬⁯‭⁭‫‏‎‌‬⁪‏‭‭‭⁪‬‬​‬‎⁯⁭‮⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
