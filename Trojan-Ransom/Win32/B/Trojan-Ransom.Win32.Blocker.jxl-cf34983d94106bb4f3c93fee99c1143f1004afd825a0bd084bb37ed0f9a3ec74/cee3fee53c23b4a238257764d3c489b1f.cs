// Decompiled with JetBrains decompiler
// Type: A.cee3fee53c23b4a238257764d3c489b1f
// Assembly: 32, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C93294FB-B676-4110-BC34-1BBFDCE71D12
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jxl-cf34983d94106bb4f3c93fee99c1143f1004afd825a0bd084bb37ed0f9a3ec74.exe

using System;
using System.Reflection;
using System.Reflection.Emit;

namespace A
{
  internal sealed class cee3fee53c23b4a238257764d3c489b1f
  {
    private static readonly int cb3729636f28fc51b69e1653db1503f09;
    private static readonly int c71cfb58b1058a2100f6e827b653a3b8c;
    private static readonly int c96d9687b640e0d110c769f19a6a527bf;
    private static readonly int c7c52e2bd9a41a507fa29fceef6a355ef;
    private static readonly ModuleHandle cf81094e860092b3f8dda622ff26c96a5;

    static cee3fee53c23b4a238257764d3c489b1f()
    {
      if ((object) typeof (MulticastDelegate) == null)
        return;
label_1:
      switch (6)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (cee3fee53c23b4a238257764d3c489b1f.\u002Ecctor);
          }
          cee3fee53c23b4a238257764d3c489b1f.cf81094e860092b3f8dda622ff26c96a5 = Assembly.GetExecutingAssembly().GetModules()[0].ModuleHandle;
          break;
      }
    }

    public static void c31213f45659794e8d66bf91b0932a38d(int _param0, int _param1, int _param2)
    {
      Type typeFromHandle;
      ConstructorInfo con;
      try
      {
        typeFromHandle = Type.GetTypeFromHandle(cee3fee53c23b4a238257764d3c489b1f.cf81094e860092b3f8dda622ff26c96a5.ResolveTypeHandle(_param0));
        object methodFromHandle;
        if (_param2 == 16777215)
        {
label_1:
          switch (1)
          {
            case 0:
              goto label_1;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (cee3fee53c23b4a238257764d3c489b1f.c31213f45659794e8d66bf91b0932a38d);
              }
              methodFromHandle = (object) MethodBase.GetMethodFromHandle(cee3fee53c23b4a238257764d3c489b1f.cf81094e860092b3f8dda622ff26c96a5.ResolveMethodHandle(_param1));
              break;
          }
        }
        else
          methodFromHandle = (object) MethodBase.GetMethodFromHandle(cee3fee53c23b4a238257764d3c489b1f.cf81094e860092b3f8dda622ff26c96a5.ResolveMethodHandle(_param1), cee3fee53c23b4a238257764d3c489b1f.cf81094e860092b3f8dda622ff26c96a5.ResolveTypeHandle(_param2));
        con = (ConstructorInfo) methodFromHandle;
      }
      catch (Exception ex)
      {
        throw;
      }
      foreach (FieldInfo field in typeFromHandle.GetFields(BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.GetField))
      {
        try
        {
          ParameterInfo[] parameters = con.GetParameters();
          int length = parameters.Length;
          Type[] parameterTypes = new Type[length];
          for (int index = 0; index < length; ++index)
            parameterTypes[index] = parameters[index].ParameterType;
label_13:
          switch (1)
          {
            case 0:
              goto label_13;
            default:
              DynamicMethod dynamicMethod = new DynamicMethod(string.Empty, con.DeclaringType, parameterTypes, typeFromHandle, true);
              ILGenerator ilGenerator = dynamicMethod.GetILGenerator();
              if (length > 0)
              {
label_15:
                switch (1)
                {
                  case 0:
                    goto label_15;
                  default:
                    ilGenerator.Emit(OpCodes.Ldarg_0);
                    break;
                }
              }
              if (length > 1)
              {
label_18:
                switch (5)
                {
                  case 0:
                    goto label_18;
                  default:
                    ilGenerator.Emit(OpCodes.Ldarg_1);
                    break;
                }
              }
              if (length > 2)
              {
label_21:
                switch (4)
                {
                  case 0:
                    goto label_21;
                  default:
                    ilGenerator.Emit(OpCodes.Ldarg_2);
                    break;
                }
              }
              if (length > 3)
              {
label_24:
                switch (1)
                {
                  case 0:
                    goto label_24;
                  default:
                    ilGenerator.Emit(OpCodes.Ldarg_3);
                    break;
                }
              }
              if (length > 4)
              {
label_27:
                switch (3)
                {
                  case 0:
                    goto label_27;
                  default:
                    for (int index = 4; index < length; ++index)
                      ilGenerator.Emit(OpCodes.Ldarg_S, index);
label_31:
                    switch (4)
                    {
                      case 0:
                        goto label_31;
                    }
                    break;
                }
              }
              ilGenerator.Emit(OpCodes.Newobj, con);
              ilGenerator.Emit(OpCodes.Ret);
              Delegate @delegate = dynamicMethod.CreateDelegate(typeFromHandle);
              field.SetValue((object) null, (object) @delegate);
              continue;
          }
        }
        catch (Exception ex)
        {
        }
      }
label_36:
      switch (6)
      {
        case 0:
          goto label_36;
      }
    }
  }
}
