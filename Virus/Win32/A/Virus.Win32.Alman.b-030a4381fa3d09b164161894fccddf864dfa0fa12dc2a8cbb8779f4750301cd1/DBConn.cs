// Decompiled with JetBrains decompiler
// Type: Egebimtes.EtiketBasimi.DBConn
// Assembly: EgebimtesEtiketBasim, Version=1.0.0.8, Culture=neutral, PublicKeyToken=null
// MVID: D0653F93-40B2-470A-A14A-758CB97E05C0
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Alman.b-030a4381fa3d09b164161894fccddf864dfa0fa12dc2a8cbb8779f4750301cd1.exe

using System;
using System.Data;
using System.Data.OleDb;

namespace Egebimtes.EtiketBasimi
{
  internal class DBConn
  {
    private OleDbConnection connDAL;
    private OleDbCommand cmdDAL;
    private OleDbDataAdapter daDAL;
    private string strCommand = "";

    public DBConn() => this.connDAL = new OleDbConnection(Program.strConnString);

    public DataTable BelgeKalemListele(
      string strBelgeNo,
      string strBelgeTipiGelen,
      bool blReceteGetir)
    {
      DataTable dataTable1 = new DataTable();
      DataTable dataTable2 = new DataTable();
      try
      {
        if (strBelgeTipiGelen == "1" || strBelgeTipiGelen == "2" || strBelgeTipiGelen == "3" || strBelgeTipiGelen == "4" || strBelgeTipiGelen == "8" || strBelgeTipiGelen == "9")
        {
          this.strCommand = "SELECT CONVERT(bit,0) as SEC, 1 AS [BASIM MIKTARI] ,TS.INCKEYNO AS [INCKEY], TS.STOK_KODU AS [STOK KODU], ST.STOK_ADI AS [STOK ADI],  TS.YAPKOD [ESNEK KOD], (SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD = TS.YAPKOD ) AS [ESNEK ACIKLAMA], ISNULL(CS.CARISTOK_KODU,'') [MUSTERI STOKKODU], ISNULL(CS.CARISTOKISMI,'') [MUSTERI STOKISMI], TS.STHAR_GCMIK AS [MIKTARI], ISNULL(EK.KULL8S,'') AS RECETEGETIR, TS.STHAR_TARIH AS TARIH  FROM TBLSTHAR TS WITH(NOLOCK)  INNER JOIN TBLSTSABIT ST WITH(NOLOCK) ON TS.STOK_KODU = ST.STOK_KODU  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON TS.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON TS.STOK_KODU = CS.STOK_KODU AND TS.STHAR_ACIKLAMA = CS.CARI_KOD  WHERE TS.STHAR_FTIRSIP ='" + strBelgeTipiGelen + "' AND TS.SUBE_KODU = ? AND TS.FISNO = ?";
          if (strBelgeTipiGelen == "8" || strBelgeTipiGelen == "9")
            this.strCommand += " AND TS.C_YEDEK6 = 'X'";
          this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
          this.cmdDAL.Parameters.Add("@SubeKodu", OleDbType.Integer);
          this.cmdDAL.Parameters.Add("@FisNo", OleDbType.VarChar);
          this.cmdDAL.Parameters["@SubeKodu"].Value = (object) Program.intSubeKodu;
          this.cmdDAL.Parameters["@FisNo"].Value = (object) strBelgeNo;
          this.daDAL = new OleDbDataAdapter(this.cmdDAL);
          this.daDAL.Fill(dataTable1);
        }
        else if (strBelgeTipiGelen == "6" || strBelgeTipiGelen == "7")
        {
          this.strCommand = "SELECT CONVERT(bit,0) as SEC, 1 AS [BASIM MIKTARI], SP.INCKEYNO AS [INCKEY], SP.STOK_KODU AS [STOK KODU], ST.STOK_ADI AS [STOK ADI], SP.YAPKOD [ESNEK KOD], (SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD = SP.YAPKOD ) AS [ESNEK ACIKLAMA], ISNULL(CS.CARISTOK_KODU,'') [MUSTERI STOKKODU], ISNULL(CS.CARISTOKISMI,'') [MUSTERI STOKISMI], SP.STHAR_GCMIK AS [MIKTARI], ISNULL(EK.KULL8S,'') AS RECETEGETIR  FROM TBLSIPATRA SP WITH(NOLOCK)  INNER JOIN TBLSTSABIT ST WITH(NOLOCK) ON SP.STOK_KODU = ST.STOK_KODU  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON SP.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON SP.STOK_KODU = CS.STOK_KODU AND SP.STHAR_ACIKLAMA = CS.CARI_KOD  WHERE SP.STHAR_FTIRSIP ='" + strBelgeTipiGelen + "' AND SP.SUBE_KODU = ? AND SP.FISNO = ?";
          this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
          this.cmdDAL.Parameters.Add("@SubeKodu", OleDbType.Integer);
          this.cmdDAL.Parameters.Add("@SiparisNo", OleDbType.VarChar);
          this.cmdDAL.Parameters["@SubeKodu"].Value = (object) Program.intSubeKodu;
          this.cmdDAL.Parameters["@SiparisNo"].Value = (object) strBelgeNo;
          this.daDAL = new OleDbDataAdapter(this.cmdDAL);
          this.daDAL.Fill(dataTable1);
        }
        else if (strBelgeTipiGelen == "9999")
        {
          this.strCommand = "SELECT CONVERT(bit,0) as SEC, 1 AS [BASIM MIKTARI], STHAR.STOK_KODU AS [STOK KODU], STSABIT.STOK_ADI AS [STOK ADI], STHAR_GCMIK AS [MIKTARI], STHAR_TARIH AS [TARIH], INCKEYNO AS [INCKEY] FROM TBLSTHAR STHAR INNER JOIN TBLSTSABIT STSABIT ON STSABIT.STOK_KODU = STHAR.STOK_KODU WHERE STHAR.FISNO = ? AND STHAR.STHAR_GCKOD = 'G' AND STHAR.STHAR_HTUR = 'C'";
          this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
          this.cmdDAL.Parameters.Add("@FisNo", OleDbType.VarChar);
          this.cmdDAL.Parameters["@FisNo"].Value = (object) strBelgeNo;
          this.daDAL = new OleDbDataAdapter(this.cmdDAL);
          this.daDAL.Fill(dataTable1);
        }
        return dataTable1;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable BelgeKalemOku(int intIncKey)
    {
      try
      {
        this.connDAL.Open();
        this.cmdDAL = new OleDbCommand("SELECT * FROM MOBILO_ETIKET_BELGEKALEM WHERE INCKEYNO=" + (object) intIncKey);
        this.cmdDAL.Connection = this.connDAL;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable StokBilgiOku(string strStokKodu)
    {
      try
      {
        this.connDAL.Open();
        this.cmdDAL = new OleDbCommand("SELECT STSABIT.*, EK.KULL1N, EK.KULL2N, EK.KULL3N, EK.KULL4N, EK.KULL5N, EK.KULL6N, EK.KULL7N, EK.KULL8N, EK.KULL1S, EK.KULL2S, EK.KULL3S, EK.KULL4S, EK.KULL5S, EK.KULL6S, EK.KULL7S, EK.KULL8S, EK.INGISIM FROM TBLSTSABIT STSABIT INNER JOIN TBLSTSABITEK EK ON EK.STOK_KODU = STSABIT.STOK_KODU WHERE STSABIT.STOK_KODU = ?");
        this.cmdDAL.Connection = this.connDAL;
        this.cmdDAL.Parameters.Add("@StokKodu", OleDbType.VarChar);
        this.cmdDAL.Parameters["@StokKodu"].Value = (object) strStokKodu;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable StoklariGetir(string strStokKodu, string strStokAdi)
    {
      try
      {
        this.connDAL.Open();
        string str = "SELECT STOK_KODU AS [STOK KODU], STOK_ADI AS [STOK ADI]FROM TBLSTSABIT ";
        this.cmdDAL = new OleDbCommand();
        this.cmdDAL.Connection = this.connDAL;
        if (strStokKodu != string.Empty || strStokAdi != string.Empty)
          str += "WHERE ";
        if (strStokKodu != string.Empty)
        {
          str += "STOK_KODU LIKE ?";
          this.cmdDAL.Parameters.Add("@StokKodu", OleDbType.VarChar);
          this.cmdDAL.Parameters["@StokKodu"].Value = (object) ('%'.ToString() + strStokKodu + (object) '%');
        }
        if (strStokAdi != string.Empty)
        {
          if (strStokKodu != string.Empty)
            str += " AND";
          str += " STOK_ADI LIKE ?";
          this.cmdDAL.Parameters.Add("@StokAdi", OleDbType.VarChar);
          this.cmdDAL.Parameters["@StokAdi"].Value = (object) ('%'.ToString() + strStokAdi + (object) '%');
        }
        this.cmdDAL.CommandText = str;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable SeriBilgiOku(int intIncKey)
    {
      try
      {
        this.connDAL.Open();
        this.cmdDAL = new OleDbCommand("SELECT * FROM TBLSERITRA WITH(NOLOCK) WHERE STRA_INC = ?");
        this.cmdDAL.Connection = this.connDAL;
        this.cmdDAL.Parameters.Add("@IncKey", OleDbType.Integer);
        this.cmdDAL.Parameters["@IncKey"].Value = (object) intIncKey;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataRow StokHareketOku(int intIncKey)
    {
      try
      {
        this.connDAL.Open();
        this.cmdDAL = new OleDbCommand("SELECT * FROM TBLSTHAR WITH(NOLOCK) WHERE INCKEYNO = ?");
        this.cmdDAL.Connection = this.connDAL;
        this.cmdDAL.Parameters.Add("@IncKey", OleDbType.Integer);
        this.cmdDAL.Parameters["@IncKey"].Value = (object) intIncKey;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable.Rows[0];
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable KalemBilgiOku(int intIncKey, string strBelgeTip)
    {
      try
      {
        this.connDAL.Open();
        this.cmdDAL = new OleDbCommand(!(strBelgeTip == "SIP") ? "SELECT SP.STOK_KODU,SP.STHAR_GCMIK,SP.FISNO,SP.STHAR_TARIH, ST.STOK_ADI,ST.PAY_1,ST.PAYDA_1,ST.PAY2,ST.PAYDA2,ST.GRUP_KODU,ST.SATIS_FIAT1,ST.SATIS_FIAT2,ST.SATIS_FIAT3,ST.SATIS_FIAT4, ISNULL(CS.CARISTOK_KODU,'') CARISTOK_KODU, ISNULL(CS.CARISTOKISMI,'') CARISTOKISMI, ISNULL(SP.YAPKOD,'') YAPKOD, ISNULL((SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD = SP.YAPKOD),'') AS YAPACIK, ISNULL(EK.INGISIM,'') INGISIM, EK.KULL1N,EK.KULL2N,EK.KULL3N,EK.KULL4N,EK.KULL5N,EK.KULL6N,EK.KULL7N,EK.KULL8N,  EK.KULL1S, EK.KULL2S, EK.KULL3S, EK.KULL4S, EK.KULL5S, EK.KULL6S, EK.KULL7S, EK.KULL8S  FROM TBLSTHAR SP WITH(NOLOCK)  INNER JOIN TBLSTSABIT ST WITH(NOLOCK) ON SP.STOK_KODU = ST.STOK_KODU  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON SP.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON SP.STOK_KODU = CS.STOK_KODU AND SP.STHAR_ACIKLAMA = CS.CARI_KOD AND (SP.YAPKOD = CS.YAPKOD OR CS.YAPKOD IS NULL) WHERE SP.INCKEYNO = " + (object) intIncKey : "SELECT SP.STOK_KODU,SP.STHAR_GCMIK,SP.FISNO,SP.STHAR_TARIH, ST.STOK_ADI,ST.PAY_1,ST.PAYDA_1,ST.PAY2,ST.PAYDA2,ST.GRUP_KODU,ST.SATIS_FIAT1,ST.SATIS_FIAT2,ST.SATIS_FIAT3,ST.SATIS_FIAT4, ISNULL(CS.CARISTOK_KODU,'') CARISTOK_KODU, ISNULL(CS.CARISTOKISMI,'') CARISTOKISMI, ISNULL(SP.YAPKOD,'') YAPKOD, ISNULL((SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD = SP.YAPKOD),'') AS YAPACIK, ISNULL(EK.INGISIM,'') INGISIM, EK.KULL1N,EK.KULL2N,EK.KULL3N,EK.KULL4N,EK.KULL5N,EK.KULL6N,EK.KULL7N,EK.KULL8N,  EK.KULL1S, EK.KULL2S, EK.KULL3S, EK.KULL4S, EK.KULL5S, EK.KULL6S, EK.KULL7S, EK.KULL8S  FROM TBLSIPATRA SP WITH(NOLOCK)  INNER JOIN TBLSTSABIT ST WITH(NOLOCK) ON SP.STOK_KODU = ST.STOK_KODU  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON SP.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON SP.STOK_KODU = CS.STOK_KODU AND SP.STHAR_ACIKLAMA = CS.CARI_KOD AND (SP.YAPKOD = CS.YAPKOD OR CS.YAPKOD IS NULL) WHERE SP.INCKEYNO = " + (object) intIncKey);
        this.cmdDAL.Connection = this.connDAL;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable BelgeUstOku(
      string strBelgeNo,
      string strFtirsip,
      string strSecBelgeCari)
    {
      try
      {
        this.connDAL.Open();
        string cmdText = "SELECT * FROM MOBILO_ETIKET_BELGEUST  WHERE FATIRS_NO='" + strBelgeNo + "' AND FTIRSIP='" + strFtirsip + "' AND SUBE_KODU=" + (object) Program.intSubeKodu;
        if (strFtirsip == "2" || strFtirsip == "4")
          cmdText = cmdText + " AND CARI_KODU='" + strSecBelgeCari + "'";
        this.cmdDAL = new OleDbCommand(cmdText);
        this.cmdDAL.Connection = this.connDAL;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable("EtiketBelgeUst");
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable BilesenBilgiOku(
      int intIncKey,
      string strBelgeTip,
      string strStokKod,
      string strYapKod,
      string strCariKod)
    {
      try
      {
        this.connDAL.Open();
        DataTable dataTable = new DataTable();
        string cmdText;
        if (strBelgeTip == "SIP")
          cmdText = "SELECT BIL.*,SIP.STHAR_GCMIK,SIP.FISNO,SIP.STHAR_TARIH FROM ( SELECT ST.STOK_KODU, ST.STOK_ADI,ST.PAY_1,ST.PAYDA_1,ST.PAY2,ST.PAYDA2,ST.GRUP_KODU,ST.SATIS_FIAT1,ST.SATIS_FIAT2,ST.SATIS_FIAT3,ST.SATIS_FIAT4, ISNULL(CS.CARISTOK_KODU,'') CARISTOK_KODU, ISNULL(CS.CARISTOKISMI,'') CARISTOKISMI,'" + strYapKod + "' as YAPKOD, ISNULL((SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD = '" + strYapKod + "'),'') AS YAPACIK, ISNULL(EK.INGISIM,'') INGISIM, EK.KULL1N,EK.KULL2N,EK.KULL3N,EK.KULL4N,EK.KULL5N,EK.KULL6N,EK.KULL7N,EK.KULL8N,  EK.KULL1S, EK.KULL2S, EK.KULL3S, EK.KULL4S, EK.KULL5S, EK.KULL6S, EK.KULL7S, EK.KULL8S  FROM TBLSTSABIT ST WITH(NOLOCK)  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON ST.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON ST.STOK_KODU = CS.STOK_KODU AND CS.CARI_KOD= ? AND (CS.YAPKOD= '" + strYapKod + "' OR CS.YAPKOD IS NULL) WHERE ST.STOK_KODU = ? ) BIL  INNER JOIN (SELECT * FROM TBLSIPATRA WHERE INCKEYNO=" + (object) intIncKey + " ) SIP ON 1=1 ";
        else
          cmdText = "SELECT BIL.*,SIP.STHAR_GCMIK,SIP.FISNO,SIP.STHAR_TARIH FROM ( SELECT ST.STOK_KODU, ST.STOK_ADI,ST.PAY_1,ST.PAYDA_1,ST.PAY2,ST.PAYDA2,ST.GRUP_KODU,ST.SATIS_FIAT1,ST.SATIS_FIAT2,ST.SATIS_FIAT3,ST.SATIS_FIAT4, ISNULL(CS.CARISTOK_KODU,'') CARISTOK_KODU, ISNULL(CS.CARISTOKISMI,'') CARISTOKISMI,'" + strYapKod + "' as YAPKOD, ISNULL((SELECT DBO.NSF_YAPACIK(YAPKOD,'A',YAPACIK) ACIKLAMA FROM TBLESNYAPMAS WITH(NOLOCK) WHERE  YAPKOD ='" + strYapKod + "'),'') AS YAPACIK, ISNULL(EK.INGISIM,'') INGISIM, EK.KULL1N,EK.KULL2N,EK.KULL3N,EK.KULL4N,EK.KULL5N,EK.KULL6N,EK.KULL7N,EK.KULL8N,  EK.KULL1S, EK.KULL2S, EK.KULL3S, EK.KULL4S, EK.KULL5S, EK.KULL6S, EK.KULL7S, EK.KULL8S  FROM TBLSTSABIT ST WITH(NOLOCK)  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON ST.STOK_KODU = EK.STOK_KODU  LEFT OUTER JOIN TBLCARISTOK CS ON ST.STOK_KODU = CS.STOK_KODU AND CS.CARI_KOD= ? AND (CS.YAPKOD= '" + strYapKod + "' OR CS.YAPKOD IS NULL) WHERE ST.STOK_KODU = ? ) BIL  INNER JOIN (SELECT * FROM TBLSTHAR WHERE INCKEYNO=" + (object) intIncKey + " ) SIP ON 1=1 ";
        this.cmdDAL = new OleDbCommand(cmdText);
        this.cmdDAL.Connection = this.connDAL;
        OleDbParameter oleDbParameter1 = new OleDbParameter("@CARI_KODU", OleDbType.VarChar);
        oleDbParameter1.Value = (object) strCariKod;
        this.cmdDAL.Parameters.Add(oleDbParameter1);
        OleDbParameter oleDbParameter2 = new OleDbParameter("@STOK_KODU", OleDbType.VarChar);
        oleDbParameter2.Value = (object) strStokKod;
        this.cmdDAL.Parameters.Add(oleDbParameter2);
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable BelgeListele(
      string strBelgeTipiGelen,
      string BelgeNo,
      string CariKodu,
      string CariAdi,
      DateTime Tarih)
    {
      try
      {
        this.cmdDAL = new OleDbCommand();
        if (strBelgeTipiGelen == "1" || strBelgeTipiGelen == "2" || strBelgeTipiGelen == "3" || strBelgeTipiGelen == "4" || strBelgeTipiGelen == "8" || strBelgeTipiGelen == "9")
        {
          this.strCommand = "SELECT FI.TARIH,FI.FATIRS_NO AS [BELGE NO],FI.CARI_KODU AS [CARI KODU],  ISNULL(CS.CARI_ISIM,'') AS [CARI ADI]  FROM TBLFATUIRS FI WITH(NOLOCK)  LEFT OUTER JOIN TBLCASABIT CS WITH(NOLOCK) ON FI.CARI_KODU = CS.CARI_KOD  WHERE FTIRSIP = '" + strBelgeTipiGelen + "' AND FI.SUBE_KODU = " + (object) Program.intSubeKodu;
          if (strBelgeTipiGelen == "8" || strBelgeTipiGelen == "9")
            this.strCommand += " AND YEDEK='X'";
          if (BelgeNo != "")
          {
            this.strCommand += " AND FI.FATIRS_NO LIKE ?";
            this.cmdDAL.Parameters.Add("@BelgeNo", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@BelgeNo"].Value = (object) BelgeNo;
          }
          if (CariKodu != "")
          {
            this.strCommand += " AND FI.CARI_KODU LIKE ?";
            this.cmdDAL.Parameters.Add("@CariKodu", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@CariKodu"].Value = (object) CariKodu;
          }
          if (CariAdi != "")
          {
            this.strCommand += " AND FI.CARI_ISIM LIKE ?";
            this.cmdDAL.Parameters.Add("@CariAdi", OleDbType.VarChar, 100);
            this.cmdDAL.Parameters["@CariAdi"].Value = (object) CariAdi;
          }
          if (Tarih != DateTime.MinValue)
          {
            this.strCommand += " AND FI.TARIH = ?";
            this.cmdDAL.Parameters.Add("@Tarih", OleDbType.Date);
            this.cmdDAL.Parameters["@Tarih"].Value = (object) Tarih.Date;
          }
        }
        else if (strBelgeTipiGelen == "6" || strBelgeTipiGelen == "7")
        {
          this.strCommand = "SELECT SP.TARIH,SP.FATIRS_NO AS [BELGE NO],SP.CARI_KODU AS [CARI KODU],  CS.CARI_ISIM AS [CARI ADI]  FROM TBLSIPAMAS SP WITH(NOLOCK)  INNER JOIN TBLCASABIT CS WITH(NOLOCK) ON SP.CARI_KODU = CS.CARI_KOD  WHERE FTIRSIP = '" + strBelgeTipiGelen + "' AND SP.SUBE_KODU =" + (object) Program.intSubeKodu;
          if (BelgeNo != "")
          {
            this.strCommand += " AND SP.FATIRS_NO LIKE ?";
            this.cmdDAL.Parameters.Add("@SiparisNo", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@SiparisNo"].Value = (object) BelgeNo;
          }
          if (CariKodu != "")
          {
            this.strCommand += " AND SP.CARI_KODU LIKE ?";
            this.cmdDAL.Parameters.Add("@CariKodu", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@CariKodu"].Value = (object) CariKodu;
          }
          if (CariAdi != "")
          {
            this.strCommand += " AND CS.CARI_ISIM LIKE ?";
            this.cmdDAL.Parameters.Add("@CariAdi", OleDbType.VarChar, 100);
            this.cmdDAL.Parameters["@CariAdi"].Value = (object) CariAdi;
          }
          if (Tarih != DateTime.MinValue)
          {
            this.strCommand += " AND SP.TARIH = ?";
            this.cmdDAL.Parameters.Add("@Tarih", OleDbType.Date);
            this.cmdDAL.Parameters["@Tarih"].Value = (object) Tarih.Date;
          }
        }
        else if (strBelgeTipiGelen == "9999")
        {
          this.strCommand = "SELECT  URETSON_FISNO AS [BELGE NO], URETSON_MAMUL AS [STOK KODU],S.STOK_ADI AS [STOK ADI], URETSON_TARIH AS [TARIH]FROM TBLSTOKURS U WITH(NOLOCK) INNER JOIN TBLSTSABIT S WITH(NOLOCK) ON S.STOK_KODU = U.URETSON_MAMUL ";
          if (BelgeNo != "")
          {
            this.strCommand += " WHERE URETSON_FISNO LIKE ?";
            this.cmdDAL.Parameters.Add("@FisNo", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@FisNo"].Value = (object) BelgeNo;
          }
          if (Tarih != DateTime.MinValue)
          {
            this.strCommand += " AND URETSON_TARIH = ?";
            this.cmdDAL.Parameters.Add("@Tarih", OleDbType.Date);
            this.cmdDAL.Parameters["@Tarih"].Value = (object) Tarih.Date;
          }
          if (CariKodu != "")
          {
            this.strCommand += " AND S.STOK_KODU LIKE ?";
            this.cmdDAL.Parameters.Add("@StokKodu", OleDbType.VarChar, 15);
            this.cmdDAL.Parameters["@StokKodu"].Value = (object) CariKodu;
          }
          if (CariAdi != "")
          {
            this.strCommand += " AND S.STOK_ADI LIKE ?";
            this.cmdDAL.Parameters.Add("@StokAdi", OleDbType.VarChar, 100);
            this.cmdDAL.Parameters["@StokAdi"].Value = (object) CariAdi;
          }
        }
        this.cmdDAL.CommandType = CommandType.Text;
        this.cmdDAL.CommandText = this.strCommand;
        this.cmdDAL.Connection = this.connDAL;
        if (this.connDAL.State != ConnectionState.Open)
          this.connDAL.Open();
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        DataTable dataTable = new DataTable();
        this.daDAL.Fill(dataTable);
        this.cmdDAL = (OleDbCommand) null;
        return dataTable ?? (DataTable) null;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable StokKoduListele(string strStokAdi, string strStokKodu)
    {
      DataTable dataTable = new DataTable();
      try
      {
        this.connDAL.Open();
        this.strCommand = "SELECT ST.STOK_KODU AS [STOK KODU], ST.STOK_ADI AS [STOK ADI], ST.GRUP_KODU AS [GRUP KODU], ST.KOD_1 AS [KOD 1] FROM TBLSTSABIT ST WITH(NOLOCK)  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON ST.STOK_KODU = EK.STOK_KODU WHERE ST.STOK_KODU = EK.STOK_KODU ";
        this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
        if (strStokKodu != "")
        {
          this.strCommand += " AND ST.STOK_KODU = ?";
          this.cmdDAL.Parameters.Add("@StokKodu", OleDbType.VarChar, 15);
          this.cmdDAL.Parameters["@StokKodu"].Value = (object) strStokKodu;
        }
        if (strStokAdi != "")
        {
          this.strCommand += " AND ST.STOK_ADI = ?";
          this.cmdDAL.Parameters.Add("@StokAdi", OleDbType.VarChar, 100);
          this.cmdDAL.Parameters["@StokAdi"].Value = (object) strStokAdi;
        }
        this.cmdDAL.CommandText = this.strCommand;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable GrupKod1Listele(
      string strKod,
      string strGrupIsim,
      string strTabloAdi,
      string strAlanAdi)
    {
      DataTable dataTable = new DataTable();
      string str = "KOD 1";
      try
      {
        this.connDAL.Open();
        if (strTabloAdi == "TBLSTGRUP")
          str = "GRUP KODU";
        this.strCommand = "SELECT ST." + strAlanAdi + " AS [" + str + "], ST.GRUP_ISIM AS [GRUP ISIM] FROM " + strTabloAdi + " ST WITH(NOLOCK)";
        if (strKod != "" && strGrupIsim != "")
        {
          DBConn dbConn = this;
          dbConn.strCommand = dbConn.strCommand + " WHERE ST." + strAlanAdi + " = '" + strKod + "' AND ST.GRUP_ISIM = '" + strGrupIsim + "'";
        }
        else if (strKod != "")
        {
          DBConn dbConn = this;
          dbConn.strCommand = dbConn.strCommand + " WHERE ST." + strAlanAdi + " = '" + strKod + "'";
        }
        else if (strGrupIsim != "")
        {
          DBConn dbConn = this;
          dbConn.strCommand = dbConn.strCommand + " WHERE ST.GRUP_ISIM = '" + strGrupIsim + "'";
        }
        this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
        this.cmdDAL.CommandText = this.strCommand;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }

    public DataTable StokKartListele(
      string strStokKoduBasla,
      string strStokKoduBitis,
      string strGrupKoduBasla,
      string strGrupKoduBitis,
      string strKod1Basla,
      string strKod1Bitis)
    {
      DataTable dataTable = new DataTable();
      try
      {
        this.connDAL.Open();
        this.strCommand = "SELECT CONVERT(bit,0) as SEC, ST.STOK_KODU AS [STOK KODU], ST.STOK_ADI AS [STOK ADI],  0 AS [BASIM MIKTARI]  FROM TBLSTSABIT ST WITH(NOLOCK)  LEFT OUTER JOIN TBLSTSABITEK EK WITH(NOLOCK) ON ST.STOK_KODU = EK.STOK_KODU WHERE ST.STOK_KODU = EK.STOK_KODU ";
        this.cmdDAL = new OleDbCommand(this.strCommand, this.connDAL);
        if (strStokKoduBasla != "" && strStokKoduBitis != "")
        {
          this.strCommand += "AND ST.STOK_KODU BETWEEN ?  AND ?";
          this.cmdDAL.Parameters.Add("@StokKoduBasla", OleDbType.VarChar, 35);
          this.cmdDAL.Parameters["@StokKoduBasla"].Value = (object) strStokKoduBasla;
          this.cmdDAL.Parameters.Add("@StokKoduBitis", OleDbType.VarChar, 35);
          this.cmdDAL.Parameters["@StokKoduBitis"].Value = (object) strStokKoduBitis;
        }
        if (strGrupKoduBasla != "" && strGrupKoduBitis != "")
        {
          this.strCommand += " AND ST.GRUP_KODU BETWEEN ? AND ? ";
          this.cmdDAL.Parameters.Add("@GrupKoduBasla", OleDbType.VarChar, 35);
          this.cmdDAL.Parameters["@GrupKoduBasla"].Value = (object) strGrupKoduBasla;
          this.cmdDAL.Parameters.Add("@GrupKoduBitis", OleDbType.VarChar, 35);
          this.cmdDAL.Parameters["@GrupKoduBitis"].Value = (object) strGrupKoduBitis;
        }
        if (strKod1Basla != "" && strKod1Bitis != "")
        {
          this.strCommand += " AND ST.KOD_1  BETWEEN ? AND ?";
          this.cmdDAL.Parameters.Add("@Kod1Basla", OleDbType.VarChar, 100);
          this.cmdDAL.Parameters["@Kod1Basla"].Value = (object) strKod1Basla;
          this.cmdDAL.Parameters.Add("@Kod1Bitis", OleDbType.VarChar, 100);
          this.cmdDAL.Parameters["@Kod1Bitis"].Value = (object) strKod1Bitis;
        }
        this.cmdDAL.CommandText = this.strCommand;
        this.daDAL = new OleDbDataAdapter(this.cmdDAL);
        this.daDAL.Fill(dataTable);
        return dataTable;
      }
      catch (Exception ex)
      {
        throw ex;
      }
      finally
      {
        if (this.connDAL.State == ConnectionState.Open)
          this.connDAL.Close();
      }
    }
  }
}
