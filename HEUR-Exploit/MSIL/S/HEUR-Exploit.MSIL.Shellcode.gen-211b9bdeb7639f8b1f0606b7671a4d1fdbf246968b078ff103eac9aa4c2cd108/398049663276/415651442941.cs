// Decompiled with JetBrains decompiler
// Type: 398049663276.415651442941
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003368293549471;
using \u003398049663276;
using \u003463056308027;
using \u003521629421529;
using \u003530686860610;
using \u003708529027770;
using \u003720905794659;
using \u003763242632939;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Text.RegularExpressions;
using System.Threading;

namespace \u003398049663276
{
  public class \u003415651442941 : \u003896586978368<\u003301664478184>
  {
    private Optional<Record<BigInteger, BigInteger>> \u003624748476107;
    private Optional<Record<int, int>> \u003239726741801;
    private const double \u003652461622682 = 0.5;
    private \u003004888194287? \u003416590792213;
    private static readonly Regex \u003091236250537 = new Regex("\\d", RegexOptions.Compiled);
    private static readonly Lazy<Dictionary<string, Token>> \u003604824843364 = new Lazy<Dictionary<string, Token>>(new Func<Dictionary<string, Token>>(\u003415651442941.\u003447042300028));
    private const string \u003369264232556 = "DecimalPoint";
    private const string \u003640428969368 = "\\d*";
    private const string \u003276452962090 = "\\d+";
    private static readonly Lazy<string> \u003358728307201 = new Lazy<string>(new Func<string>(\u003415651442941.\u003924419527678.\u003020534315270.\u003867924240063));
    private static readonly Lazy<Regex> \u003484652709165 = new Lazy<Regex>(new Func<Regex>(\u003415651442941.\u003924419527678.\u003020534315270.\u003352464398047));
    private static readonly Lazy<Regex> \u003603044561714 = new Lazy<Regex>(new Func<Regex>(\u003415651442941.\u003924419527678.\u003020534315270.\u003433873799412));
    private static readonly Lazy<Regex> \u003873353813521 = new Lazy<Regex>(new Func<Regex>(\u003415651442941.\u003924419527678.\u003020534315270.\u003259921755600));
    private static readonly Lazy<string> \u003561661386677 = new Lazy<string>(new Func<string>(\u003415651442941.\u003083322887589), LazyThreadSafetyMode.ExecutionAndPublication);
    private static readonly Lazy<Regex> \u003504287135449 = new Lazy<Regex>(new Func<Regex>(\u003415651442941.\u003924419527678.\u003020534315270.\u003922224775668));
    private static readonly Lazy<HashSet<string>> \u003728299195065 = new Lazy<HashSet<string>>(new Func<HashSet<string>>(\u003415651442941.\u003924419527678.\u003020534315270.\u003474781664749));
    private static readonly Lazy<HashSet<string>> \u003131883666592 = new Lazy<HashSet<string>>(new Func<HashSet<string>>(\u003415651442941.\u003924720185519));
    private static readonly Lazy<HashSet<string>> \u003648277837101 = new Lazy<HashSet<string>>(new Func<HashSet<string>>(\u003415651442941.\u003858016926615));
    private static readonly Lazy<HashSet<string>> \u003640371781886 = new Lazy<HashSet<string>>(new Func<HashSet<string>>(\u003415651442941.\u003938341354061));
    private static readonly Lazy<Dictionary<string, Dictionary<string, string>>> \u003129354799128 = new Lazy<Dictionary<string, Dictionary<string, string>>>(new Func<Dictionary<string, Dictionary<string, string>>>(\u003415651442941.\u003726408478239));
    private static readonly Lazy<Regex> \u003298716486109 = new Lazy<Regex>(new Func<Regex>(\u003415651442941.\u003924419527678.\u003020534315270.\u003935414770085));

    public Optional<BigInteger> \u003355410381240 => !this.\u003269808446558 || this.\u003758076372869 ? Optional<BigInteger>.Nothing : OptionalUtils.Select<Record<BigInteger, BigInteger>, BigInteger>(this.\u003624748476107, (Func<Record<BigInteger, BigInteger>, BigInteger>) (_param1 => _param1.Item2));

    public Optional<BigInteger> \u003574232386253 => !this.\u003269808446558 || this.\u003758076372869 ? Optional<BigInteger>.Nothing : OptionalUtils.Select<Record<BigInteger, BigInteger>, BigInteger>(this.\u003624748476107, (Func<Record<BigInteger, BigInteger>, BigInteger>) (_param1 => _param1.Item1));

    public Optional<int> \u003065332417396 => !this.\u003758076372869 || this.\u003269808446558 ? Optional<int>.Nothing : OptionalUtils.Select<Record<int, int>, int>(this.\u003239726741801, (Func<Record<int, int>, int>) (_param1 => _param1.Item1));

    public Optional<int> \u003473812983398 => !this.\u003758076372869 || this.\u003269808446558 ? Optional<int>.Nothing : OptionalUtils.Select<Record<int, int>, int>(this.\u003239726741801, (Func<Record<int, int>, int>) (_param1 => _param1.Item2));

    public IEnumerable<\u003301664478184> \u003245054004157 => this.\u003075871274016.SelectMany<\u003640858318621<\u003301664478184>, \u003301664478184>((Func<\u003640858318621<\u003301664478184>, IEnumerable<\u003301664478184>>) (_param1 => (IEnumerable<\u003301664478184>) _param1));

    public bool \u003269808446558 => this.\u003245054004157.Any<\u003301664478184>((Func<\u003301664478184, bool>) (_param1 => _param1.\u003027691008785));

    public bool \u003758076372869 => this.\u003245054004157.Any<\u003301664478184>((Func<\u003301664478184, bool>) (_param1 => _param1.\u003812963269535));

    public bool \u003234466120767 { get; private set; }

    public \u003004888194287 \u003259490537745 => (this.\u003416590792213 ?? (this.\u003416590792213 = new \u003004888194287?(this.\u003904802663101()))).Value;

    private \u003004888194287 \u003904802663101() => this.\u003245054004157.All<\u003301664478184>((Func<\u003301664478184, bool>) (_param1 => !_param1.\u003537179778093.HasValue)) ? this.\u003608360289520() : \u003004888194287.Real;

    private \u003004888194287 \u003608360289520()
    {
      BigInteger bigInteger1 = this.\u003574232386253.Value;
      BigInteger bigInteger2 = this.\u003355410381240.Value;
      if (bigInteger1 > 0L && bigInteger2 > 0L)
      {
        \u003004888194287 obj = \u003004888194287.Unsigned;
        if (bigInteger2 < 256L)
          return obj | \u003004888194287.Integer8;
        if (bigInteger2 < (long) ushort.MaxValue)
          return obj | \u003004888194287.Integer16;
        if (bigInteger2 < (long) uint.MaxValue)
          return obj | \u003004888194287.Integer32;
        return bigInteger2 < ulong.MaxValue ? obj | \u003004888194287.Integer64 : obj | \u003004888194287.BigInteger;
      }
      if (bigInteger1 >= (long) sbyte.MinValue && bigInteger2 <= (long) sbyte.MaxValue)
        return \u003004888194287.Integer8;
      if (bigInteger1 >= (long) short.MinValue && bigInteger2 <= (long) short.MaxValue)
        return \u003004888194287.Integer16;
      if (bigInteger1 >= (long) int.MinValue && bigInteger2 <= (long) int.MaxValue)
        return \u003004888194287.Integer32;
      return bigInteger1 >= long.MinValue && bigInteger2 <= long.MaxValue ? \u003004888194287.Integer64 : \u003004888194287.BigInteger;
    }

    public IEnumerable<string> \u003725740968468 => this.\u003075871274016.SelectMany<\u003640858318621<\u003301664478184>, \u003301664478184>((Func<\u003640858318621<\u003301664478184>, IEnumerable<\u003301664478184>>) (_param1 => (IEnumerable<\u003301664478184>) _param1)).Where<\u003301664478184>((Func<\u003301664478184, bool>) (_param1 => _param1.\u003841894037949.HasValue)).Select<\u003301664478184, string>((Func<\u003301664478184, string>) (_param1 => _param1.\u003841894037949.Value)).Distinct<string>();

    public \u003415651442941()
      : base(\u003547566135655.Numeric)
    {
    }

    public virtual bool \u003006788524439(\u003896586978368<\u003301664478184> _param1_1)
    {
      if (this == _param1_1)
        return true;
      return _param1_1 != null && _param1_1 is \u003415651442941 obj && Optional<BigInteger>.op_Equality(obj.\u003355410381240, this.\u003355410381240) && Optional<BigInteger>.op_Equality(obj.\u003574232386253, this.\u003574232386253) && obj.\u003101488058515.SetEquals((IEnumerable<string>) this.\u003101488058515) && CollectionUtils.ConvertToHashSet<\u003301664478184>(obj.\u003075871274016.SelectMany<\u003640858318621<\u003301664478184>, \u003301664478184>((Func<\u003640858318621<\u003301664478184>, IEnumerable<\u003301664478184>>) (_param1_2 => (IEnumerable<\u003301664478184>) _param1_2))).Equals((object) this.\u003075871274016.SelectMany<\u003640858318621<\u003301664478184>, \u003301664478184>((Func<\u003640858318621<\u003301664478184>, IEnumerable<\u003301664478184>>) (_param1_3 => (IEnumerable<\u003301664478184>) _param1_3)));
    }

    protected override void FinishImpl(long numSamples)
    {
      this.\u003416590792213 = new \u003004888194287?();
      this.\u003923546956631 = !this.\u003492451362301 && this.\u003918958449927 <= 0 && this.\u003046595673668 > 0 && this.\u003808985421630 < (int) Math.Floor((double) numSamples * Math.Max(Math.Pow(0.5, (double) this.\u003101488058515.Count), 0.005));
      if (this.\u003923546956631)
      {
        foreach (\u003640858318621<\u003301664478184> obj in this.\u003075871274016)
          obj.DropOptionsWithNoExamples();
      }
      else
        this.\u003075871274016.Clear();
    }

    private \u003640858318621<\u003301664478184> \u003107094377663(
      \u003640858318621<\u003301664478184> _param1,
      string _param2)
    {
      if (_param1 == null)
        return (\u003640858318621<\u003301664478184>) null;
      Optional<string> optional = _param1.First<\u003301664478184>().\u003818902709329(_param2);
      if (optional.HasValue)
        this.\u003409251695880(optional.Value);
      return _param1;
    }

    private void \u003409251695880(string _param1)
    {
      if (this.\u003269808446558 && this.\u003758076372869)
        return;
      BigInteger result;
      if (BigInteger.TryParse(_param1, NumberStyles.Integer, (IFormatProvider) CultureInfo.InvariantCulture, out result))
      {
        this.\u003624748476107 = OptionalUtils.Some<Record<BigInteger, BigInteger>>(Record.Create<BigInteger, BigInteger>(this.\u003574232386253.HasValue ? BigInteger.Min(this.\u003574232386253.Value, result) : result, this.\u003355410381240.HasValue ? BigInteger.Max(this.\u003355410381240.Value, result) : result));
      }
      else
      {
        if (this.\u003234466120767 || !\u003415651442941.\u003022889619072.IsMatch(_param1))
          return;
        this.\u003624748476107 = Optional<Record<BigInteger, BigInteger>>.Nothing;
        string[] strArray = _param1.Split('.');
        int num = strArray[0].Length + strArray[1].Length;
        int length = strArray[1].Length;
        if (this.\u003065332417396.HasValue && this.\u003065332417396.Value != num || this.\u003473812983398.HasValue && this.\u003473812983398.Value != length)
        {
          this.\u003234466120767 = true;
          this.\u003239726741801 = Optional<Record<int, int>>.Nothing;
        }
        this.\u003239726741801 = OptionalUtils.Some<Record<int, int>>(Record.Create<int, int>(num, length));
      }
    }

    private static \u003640858318621<\u003301664478184> \u003413107885197(
      IEnumerable<\u003301664478184> _param0)
    {
      return \u003463967682737.\u003290065528177<\u003301664478184>(_param0);
    }

    private static \u003640858318621<\u003301664478184> \u003025053203896(
      \u003301664478184 _param0)
    {
      return \u003463967682737.\u003164625029824<\u003301664478184>(_param0);
    }

    protected override \u003640858318621<\u003301664478184> ProcessSample(
      string sample)
    {
      string str1 = sample;
      this.\u003416590792213 = new \u003004888194287?();
      Dictionary<string, string> substitutions = new Dictionary<string, string>();
      string str2;
      string str3;
      sample = UnicodeUtils.UnquoteStringIfQuoted(sample, ref str2, ref str3);
      this.\u003953182690108(str2, string.Empty, substitutions);
      this.\u003953182690108(str3, string.Empty, substitutions);
      List<\u003301664478184> list1 = this.\u003850417112231(sample, str2, str3, substitutions).ToList<\u003301664478184>();
      if (list1.Any<\u003301664478184>())
        return this.\u003107094377663(\u003415651442941.\u003413107885197((IEnumerable<\u003301664478184>) list1), sample);
      List<\u003301664478184> list2 = this.\u003615410095882(sample, str2, str3, substitutions).ToList<\u003301664478184>();
      if (list2.Any<\u003301664478184>())
        return this.\u003107094377663(\u003415651442941.\u003413107885197((IEnumerable<\u003301664478184>) list2), sample);
      List<\u003301664478184> list3 = this.\u003708495703599(sample, str2, str3, substitutions).ToList<\u003301664478184>();
      if (list3.Any<\u003301664478184>())
        return \u003415651442941.\u003413107885197((IEnumerable<\u003301664478184>) list3);
      List<\u003301664478184> list4 = this.\u003837842267670(sample, str2, str3, substitutions).ToList<\u003301664478184>();
      if (list4.Any<\u003301664478184>())
        return \u003415651442941.\u003413107885197((IEnumerable<\u003301664478184>) list4);
      string str4;
      string str5;
      sample = UnicodeUtils.UnparenthesizeStringIfParenthesized(sample, ref str4, ref str5);
      this.\u003953182690108(str4, string.Empty, substitutions);
      this.\u003953182690108(str5, string.Empty, substitutions);
      StringRegion stringRegion = new StringRegion(sample, (IReadOnlyDictionary<string, Token>) \u003415651442941.\u003545700584595);
      \u003415651442941.\u003924419527678 obj1 = new \u003415651442941.\u003924419527678((IEnumerable<KeyValuePair<string, string>>) substitutions);
      if (this.\u003215741959054(stringRegion, obj1) && !obj1.\u003719349075059)
        return this.\u003107094377663(this.\u003906507331334(obj1, str4, str5, str2, str3), sample);
      \u003301664478184 obj2 = this.\u003480936599494(str1);
      return obj2 != null ? \u003415651442941.\u003413107885197(CollectionUtils.Yield<\u003301664478184>(obj2)) : (\u003640858318621<\u003301664478184>) null;
    }

    protected override void NotifySample(string sample)
    {
      Optional<string> optional = this.Canonicalize(sample);
      if (!optional.HasValue)
        return;
      this.\u003409251695880(optional.Value);
    }

    private \u003301664478184 \u003480936599494(string _param1) => !\u003415651442941.\u003091236250537.IsMatch(_param1) ? new \u003301664478184(_param1) : (\u003301664478184) null;

    private static Dictionary<string, Token> \u003545700584595 => \u003415651442941.\u003604824843364.Value;

    private static Dictionary<string, Token> \u003447042300028() => new Dictionary<string, Token>()
    {
      ["Digits"] = (Token) new RegexToken("\\d+", "Digits", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["CurrencyToken"] = (Token) new RegexToken(\u003415651442941.\u003943011236933, "CurrencyToken", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["PlusToken"] = (Token) new RegexToken(UnicodeUtils.PlusRegex, "PlusToken", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["MinusToken"] = (Token) new RegexToken(UnicodeUtils.MinusRegex, "MinusToken", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["WhiteSpaceToken"] = (Token) new RegexToken("\\s+", "WhiteSpaceToken", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["NonNumericToken"] = (Token) new RegexToken("[^\\d]", "NonNumericToken", 0, 0.0, (Func<string, double>) null, true, true, (string) null),
      ["NumericSeparator"] = (Token) new RegexToken(string.Join("|", \u003415651442941.\u003060133616807.Select<string, string>(new Func<string, string>(Regex.Escape))), "NumericSeparator", 0, 0.0, (Func<string, double>) null, true, true, (string) null)
    };

    private bool \u003037969003741(
      StringRegion _param1,
      Token _param2,
      out string _param3,
      out StringRegion _param4)
    {
      PositionMatch positionMatch;
      if (((LearningCacheSubstring) _param1).Cache.TryGetTokenMatchStartingAt(((Substring) _param1).Start, _param2, ref positionMatch))
      {
        _param3 = ((Substring) _param1.Slice(((Substring) _param1).Start, ((Substring) _param1).Start + positionMatch.Length)).Value;
        _param4 = _param1.Slice(((Substring) _param1).Start + positionMatch.Length, ((Substring) _param1).End);
        return true;
      }
      _param3 = (string) null;
      _param4 = (StringRegion) null;
      return false;
    }

    private bool \u003207803210995(
      StringRegion _param1,
      out string _param2,
      out StringRegion _param3)
    {
      return this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["CurrencyToken"], out _param2, out _param3);
    }

    private bool \u003359768157730(
      StringRegion _param1,
      out string _param2,
      out StringRegion _param3)
    {
      return this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["Digits"], out _param2, out _param3);
    }

    private bool \u003597293420868(
      StringRegion _param1,
      \u003415651442941.\u003924419527678 _param2,
      out string _param3,
      out StringRegion _param4)
    {
      return this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["WhiteSpaceToken"], out _param3, out _param4);
    }

    private bool \u003902688808983(
      StringRegion _param1,
      out string _param2,
      out StringRegion _param3)
    {
      return this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["PlusToken"], out _param2, out _param3) || this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["MinusToken"], out _param2, out _param3);
    }

    private bool \u003747149920454(
      StringRegion _param1,
      out string _param2,
      out StringRegion _param3)
    {
      return this.\u003037969003741(_param1, \u003415651442941.\u003545700584595["NumericSeparator"], out _param2, out _param3) && this.\u003359768157730(_param3, out string _, out StringRegion _);
    }

    private bool \u003215741959054(
      StringRegion _param1,
      \u003415651442941.\u003924419527678 _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private bool \u003538962229705(
      string _param1,
      StringRegion _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      if (((\u003415651442941.\u003133349971497) _param3).get_Separators().Distinct<string>().Count<string>() >= 2)
      {
        _param3.\u003219962471650();
        return false;
      }
      _param3.\u003389529017294.Add(new \u003415651442941.\u003133349971497((\u003415651442941.\u003818134983088) 3, _param1));
      string str;
      StringRegion stringRegion;
      if (this.\u003359768157730(_param2, out str, out stringRegion))
        return this.\u003137023272057(str, stringRegion, _param3);
      _param3.\u003219962471650();
      return false;
    }

    private bool \u003764105792667(
      string _param1,
      StringRegion _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      if (_param3.\u003769979096531.HasValue)
      {
        _param3.\u003219962471650();
        return false;
      }
      _param3.\u003769979096531 = OptionalUtils.Some<string>(_param1);
      _param3.\u003389529017294.Add(new \u003415651442941.\u003133349971497((\u003415651442941.\u003818134983088) 1, _param1));
      return this.\u003215741959054(_param2, _param3);
    }

    private bool \u003510253762741(
      string _param1,
      StringRegion _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      if (_param1.Length > 1)
      {
        _param3.\u003219962471650();
        return false;
      }
      _param3.\u003389529017294.Add(new \u003415651442941.\u003133349971497((\u003415651442941.\u003818134983088) 4, _param1));
      return this.\u003215741959054(_param2, _param3);
    }

    private bool \u003323980375989(
      string _param1,
      StringRegion _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      if (_param1.Length > 1 || !UnicodeUtils.SignChars.Contains(_param1[0]) || _param3.\u003496198460394.HasValue)
      {
        _param3.\u003219962471650();
        return false;
      }
      _param3.\u003496198460394 = OptionalUtils.Some<char>(_param1[0]);
      _param3.\u003389529017294.Add(new \u003415651442941.\u003133349971497((\u003415651442941.\u003818134983088) 2, _param1));
      return this.\u003215741959054(_param2, _param3);
    }

    private bool \u003137023272057(
      string _param1,
      StringRegion _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      // ISSUE: unable to decompile the method.
    }

    private void \u003953182690108(
      string _param1,
      string _param2,
      Dictionary<string, string> _param3)
    {
      if (_param1.Length <= 0)
        return;
      _param3[_param1] = _param2;
    }

    private static \u003640858318621<\u003301664478184> \u003072513411492(
      string _param0,
      Dictionary<string, string> _param1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      return \u003415651442941.\u003025053203896(new \u003301664478184(new Regex(string.Format(_param0, (object) "\\d+"), RegexOptions.Compiled), _param1, currencySymbol: OptionalUtils.OrElseDefault<string>(_param3.\u003769979096531), isNegated: (_param2 || _param3.\u003960862679861), hasLeadingSign: _param3.\u003259686458324));
    }

    private static \u003640858318621<\u003301664478184> \u003744505021010(
      string _param0,
      Dictionary<string, string> _param1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      string str = _param3.\u003389529017294.First<\u003415651442941.\u003133349971497>().\u003735425936812;
      if (str != ".")
        _param1[str] = ".";
      return \u003415651442941.\u003025053203896(new \u003301664478184(new Regex(string.Format(_param0, (object) \u003415651442941.\u003893238513421((string) null, str, false, false)), RegexOptions.Compiled), _param1, decimalSeparator: str, currencySymbol: OptionalUtils.OrElseDefault<string>(_param3.\u003769979096531), isNegated: (_param2 || _param3.\u003960862679861), hasLeadingSign: _param3.\u003259686458324));
    }

    private static \u003640858318621<\u003301664478184> \u003676379239586(
      string _param0,
      Dictionary<string, string> _param1_1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      List<string> list1 = ((\u003415651442941.\u003133349971497) _param3).get_Separators().ToList<string>();
      List<\u003415651442941.\u003133349971497> list2 = _param3.\u003389529017294.Where<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1_2 =>
      {
        // ISSUE: unable to decompile the method.
      })).ToList<\u003415651442941.\u003133349971497>();
      if (!list2.Skip<\u003415651442941.\u003133349971497>(1).All<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1_3 => _param1_3.\u003735425936812.Length >= 2 && _param1_3.\u003735425936812.Length <= 3)) || list2.Last<\u003415651442941.\u003133349971497>().\u003735425936812.Length != 3)
        return (\u003640858318621<\u003301664478184>) null;
      string pattern = string.Format(_param0, (object) \u003415651442941.\u003893238513421(list1.First<string>(), (string) null, true, false));
      _param1_1[list1.First<string>()] = string.Empty;
      return \u003415651442941.\u003025053203896(new \u003301664478184(new Regex(pattern, RegexOptions.Compiled), _param1_1, list1.First<string>(), currencySymbol: OptionalUtils.OrElseDefault<string>(_param3.\u003769979096531), isNegated: (_param2 || _param3.\u003960862679861), hasLeadingSign: _param3.\u003259686458324));
    }

    private static IEnumerable<\u003301664478184> \u003657894586716(
      string _param0,
      string _param1,
      Dictionary<string, string> _param2,
      bool _param3,
      \u003415651442941.\u003924419527678 _param4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003505928676172 obj = new \u003415651442941.\u003505928676172(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003469418192596) obj).\u003900689067680 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003469418192596) obj).\u003980634758495 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003469418192596) obj).\u003155934109322 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003469418192596) obj).\u003602725724158 = _param3;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003469418192596) obj).\u003895618444387 = _param4;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static IEnumerable<\u003301664478184> \u003902719334796(
      string _param0,
      Dictionary<string, string> _param1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003469418192596 obj = new \u003415651442941.\u003469418192596(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003082365814377) obj).\u003094387115101 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003082365814377) obj).\u003304444221913 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003082365814377) obj).\u003056834097395 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003082365814377) obj).\u003216727988904 = _param3;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static IEnumerable<\u003301664478184> \u003399047025883(
      string _param0,
      Dictionary<string, string> _param1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003225072425401 obj = new \u003415651442941.\u003225072425401(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003246831579385) obj).\u003111846056410 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003246831579385) obj).\u003389819357907 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003246831579385) obj).\u003972975540654 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003246831579385) obj).\u003235174709282 = _param3;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static IEnumerable<\u003301664478184> \u003324240969391(
      string _param0,
      Dictionary<string, string> _param1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003054339939826 obj = new \u003415651442941.\u003054339939826(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003509576667317) obj).\u003791639913744 = _param0;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003509576667317) obj).\u003396104178000 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003509576667317) obj).\u003458140404455 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003509576667317) obj).\u003889956664071 = _param3;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static \u003640858318621<\u003301664478184> \u003687107345801(
      string _param0,
      Dictionary<string, string> _param1_1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      List<string> list1 = ((\u003415651442941.\u003133349971497) _param3).get_Separators().ToList<string>();
      string str1 = list1.First<string>();
      string str2 = list1.Last<string>();
      List<\u003415651442941.\u003133349971497> list2 = _param3.\u003389529017294.Where<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1_2 =>
      {
        // ISSUE: unable to decompile the method.
      })).ToList<\u003415651442941.\u003133349971497>();
      int count = list2.Count;
      if (!list2.Skip<\u003415651442941.\u003133349971497>(1).Take<\u003415651442941.\u003133349971497>(count - 2).All<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1_3 => _param1_3.\u003735425936812.Length >= 2 && _param1_3.\u003735425936812.Length <= 3)))
        return (\u003640858318621<\u003301664478184>) null;
      string pattern = string.Format(_param0, (object) \u003415651442941.\u003893238513421(str1, str2, false, false));
      _param1_1[str1] = string.Empty;
      if (str2 != ".")
        _param1_1[str2] = ".";
      return \u003415651442941.\u003025053203896(new \u003301664478184(new Regex(pattern, RegexOptions.Compiled), _param1_1, str1, str2, OptionalUtils.OrElseDefault<string>(_param3.\u003769979096531), isNegated: (_param2 || _param3.\u003960862679861), hasLeadingSign: _param3.\u003259686458324));
    }

    private static \u003640858318621<\u003301664478184> \u003382070548489(
      string _param0,
      Dictionary<string, string> _param1_1,
      bool _param2,
      \u003415651442941.\u003924419527678 _param3)
    {
      string str = ((\u003415651442941.\u003133349971497) _param3).get_Separators().ToList<string>().First<string>();
      List<\u003301664478184> objList = new List<\u003301664478184>();
      IEnumerable<\u003301664478184> collection1 = \u003415651442941.\u003657894586716(_param0, str, _param1_1, _param2, _param3);
      IEnumerable<\u003301664478184> collection2 = \u003415651442941.\u003902719334796(_param0, _param1_1, _param2, _param3);
      int length = _param3.\u003389529017294.Where<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1_2 =>
      {
        // ISSUE: unable to decompile the method.
      })).Last<\u003415651442941.\u003133349971497>().\u003735425936812.Length;
      if (str == "." || length == 2)
      {
        objList.AddRange(collection1);
        objList.AddRange(collection2);
      }
      else
      {
        objList.AddRange(collection2);
        objList.AddRange(collection1);
      }
      objList.AddRange(\u003415651442941.\u003399047025883(_param0, _param1_1, _param2, _param3));
      objList.AddRange(\u003415651442941.\u003324240969391(_param0, _param1_1, _param2, _param3));
      return \u003463967682737.\u003290065528177<\u003301664478184>((IEnumerable<\u003301664478184>) objList);
    }

    private \u003640858318621<\u003301664478184> \u003906507331334(
      \u003415651442941.\u003924419527678 _param1,
      string _param2,
      string _param3,
      string _param4,
      string _param5)
    {
      // ISSUE: unable to decompile the method.
    }

    private static string \u003229463683068(string _param0, string _param1)
    {
      if (string.IsNullOrEmpty(_param1))
        return _param0;
      return FormattableString.Invariant(FormattableStringFactory.Create("(?:{0}){1}", (object) _param0, (object) _param1));
    }

    private static string \u003893238513421(
      string _param0,
      string _param1,
      bool _param2,
      bool _param3)
    {
      if (string.IsNullOrEmpty(_param0) && string.IsNullOrEmpty(_param1))
        throw new ArgumentException(FormattableString.Invariant(FormattableStringFactory.Create("{0} and {1} cannot both be null or empty.", (object) "groupSeparator", (object) "decimalSeparator")));
      string str1 = _param2 ? string.Empty : "?";
      string str2 = _param3 ? string.Empty : "?";
      if (!string.IsNullOrEmpty(_param0) && !string.IsNullOrEmpty(_param1))
      {
        string str3 = \u003415651442941.\u003229463683068(FormattableString.Invariant(FormattableStringFactory.Create("{0}\\d+", (object) Regex.Escape(_param1))), str2);
        return FormattableString.Invariant(FormattableStringFactory.Create("\\d+(?:{0}\\d{{2,3}})*(?:{1}\\d{{3}}){2}{3}", (object) Regex.Escape(_param0), (object) Regex.Escape(_param0), (object) str1, (object) str3));
      }
      if (!string.IsNullOrEmpty(_param1))
        return FormattableString.Invariant(FormattableStringFactory.Create("\\d*{0}", (object) \u003415651442941.\u003229463683068(FormattableString.Invariant(FormattableStringFactory.Create("{0}\\d+", (object) Regex.Escape(_param1))), str2)));
      if (string.IsNullOrEmpty(_param0))
        return (string) null;
      string str4 = \u003415651442941.\u003229463683068(FormattableString.Invariant(FormattableStringFactory.Create("{0}\\d{{3}}", (object) Regex.Escape(_param0))), str1);
      return FormattableString.Invariant(FormattableStringFactory.Create("\\d+(?:{0}\\d{{2,3}})*{1}", (object) Regex.Escape(_param0), (object) str4));
    }

    private IEnumerable<\u003301664478184> \u003850417112231(
      string _param1,
      string _param2,
      string _param3,
      Dictionary<string, string> _param4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003509576667317 obj = new \u003415651442941.\u003509576667317(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003843647513639) obj).\u003878032324550 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003843647513639) obj).\u003905601562367 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003843647513639) obj).\u003519126958334 = _param3;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003843647513639) obj).\u003878582722009 = _param4;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static Dictionary<string, string> \u003830743952475(string _param0)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003340664616559 obj = (\u003415651442941.\u003340664616559) new \u003415651442941.\u003843647513639();
      // ISSUE: reference to a compiler-generated field
      if (!\u003415651442941.\u003489589728470.TryGetValue(_param0.Substring(0, 1), out ((\u003415651442941.\u003843647513639) obj).\u003868897582172))
        throw new NotImplementedException(FormattableString.Invariant(FormattableStringFactory.Create("Unhandled numeric string: {0}", (object) _param0)));
      // ISSUE: reference to a compiler-generated method
      // ISSUE: reference to a compiler-generated field
      return !_param0.All<char>(new Func<char, bool>(obj.\u003188465064825)) ? (Dictionary<string, string>) null : ((\u003415651442941.\u003843647513639) obj).\u003868897582172;
    }

    private IEnumerable<\u003301664478184> \u003615410095882(
      string _param1,
      string _param2,
      string _param3,
      Dictionary<string, string> _param4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003340664616559 obj = new \u003415651442941.\u003340664616559(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003353412099273) obj).\u003562325325522 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003353412099273) obj).\u003542198226900 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003353412099273) obj).\u003081442896192 = _param3;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003353412099273) obj).\u003813195328773 = _param4;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private IEnumerable<\u003301664478184> \u003708495703599(
      string _param1,
      string _param2,
      string _param3,
      Dictionary<string, string> _param4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003353412099273 obj = new \u003415651442941.\u003353412099273(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003914990543209) obj).\u003942896876508 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003914990543209) obj).\u003296269877462 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003914990543209) obj).\u003557958044299 = _param3;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003914990543209) obj).\u003099897530922 = _param4;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private IEnumerable<\u003301664478184> \u003837842267670(
      string _param1,
      string _param2,
      string _param3,
      Dictionary<string, string> _param4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003914990543209 obj = new \u003415651442941.\u003914990543209(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003074110732853) obj).\u003504557845430 = _param1;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003074110732853) obj).\u003055200413633 = _param2;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003074110732853) obj).\u003891708618578 = _param3;
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003074110732853) obj).\u003099333571976 = _param4;
      return (IEnumerable<\u003301664478184>) obj;
    }

    private static string \u003282473102808 => \u003415651442941.\u003358728307201.Value;

    private static Regex \u003312810761191 => \u003415651442941.\u003484652709165.Value;

    private static Regex \u003063568145101 => \u003415651442941.\u003603044561714.Value;

    private static Regex \u003822415597794 => \u003415651442941.\u003873353813521.Value;

    private static string \u003593655935791 => \u003415651442941.\u003561661386677.Value;

    private static Regex \u003943011236933 => \u003415651442941.\u003504287135449.Value;

    private static string \u003083322887589()
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003415651442941.\u003370609042069 obj = (\u003415651442941.\u003370609042069) new \u003415651442941.\u003074110732853();
      // ISSUE: reference to a compiler-generated field
      ((\u003415651442941.\u003074110732853) obj).\u003959305845029 = new Regex("^\\p{Sc}$", RegexOptions.Compiled);
      // ISSUE: reference to a compiler-generated method
      return string.Join("|", CollectionUtils.Append<string>((IEnumerable<string>) ((IEnumerable<string>) \u003316606940260.\u003733393718990).Where<string>(new Func<string, bool>(obj.\u003661023582704)).Select<string, string>((Func<string, string>) (_param1 => FormattableString.Invariant(FormattableStringFactory.Create("({0})", (object) Regex.Escape(_param1))))).OrderByDescending<string, int>((Func<string, int>) (_param1 => _param1.Length)), "\\p{Sc}"));
    }

    internal static HashSet<string> \u003060133616807 => \u003415651442941.\u003728299195065.Value;

    private static HashSet<string> \u003149449802357 => \u003415651442941.\u003131883666592.Value;

    private static HashSet<string> \u003460382666847 => \u003415651442941.\u003648277837101.Value;

    private static HashSet<string> \u003934081935443 => \u003415651442941.\u003640371781886.Value;

    private static Dictionary<string, Dictionary<string, string>> \u003489589728470 => \u003415651442941.\u003129354799128.Value;

    private static Regex \u003022889619072 => \u003415651442941.\u003298716486109.Value;

    public virtual long \u003201226885654 => (long) ((double) this.\u003808985421630 / Math.Max(Math.Pow(0.5, (double) this.\u003101488058515.Count), 0.005));

    private static HashSet<string> \u003924720185519() => CollectionUtils.ConvertToHashSet<string>((IEnumerable<string>) \u003316606940260.\u003216142228878, (IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);

    private static HashSet<string> \u003858016926615() => CollectionUtils.ConvertToHashSet<string>((IEnumerable<string>) \u003316606940260.\u003371653011678, (IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);

    private static HashSet<string> \u003938341354061() => CollectionUtils.ConvertToHashSet<string>((IEnumerable<string>) \u003316606940260.\u003567301382430, (IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);

    private static Dictionary<string, Dictionary<string, string>> \u003726408478239()
    {
      Dictionary<string, Dictionary<string, string>> dictionary1 = new Dictionary<string, Dictionary<string, string>>();
      foreach (string[] strArray in \u003316606940260.\u003088798937801)
      {
        if (strArray.Length != 10)
          throw new NotImplementedException("Encountered more than 10 native digits in culture. This isn't supported.");
        Dictionary<string, string> dictionary2 = new Dictionary<string, string>();
        for (int index = 0; index < 10; ++index)
          dictionary2[strArray[index]] = index.ToString((IFormatProvider) CultureInfo.InvariantCulture);
        foreach (string key in strArray)
          dictionary1[key] = dictionary2;
      }
      return dictionary1;
    }

    private enum \u003818134983088
    {
      NumericSection,
      CurrencySymbol,
      SignString,
      NumericSeparator,
      WhiteSpaceString,
    }

    private class \u003133349971497
    {
      public \u003415651442941.\u003818134983088 \u003163022416425
      {
        [CompilerGenerated, SpecialName] get
        {
          // ISSUE: unable to decompile the method.
        }
      }

      public string \u003735425936812 { get; }

      public \u003133349971497(\u003415651442941.\u003818134983088 kind, string value)
      {
        // ISSUE: unable to decompile the method.
      }

      [SpecialName]
      public IEnumerable<string> get_Separators() => ((\u003415651442941.\u003924419527678) this).\u003389529017294.Where<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1 =>
      {
        // ISSUE: unable to decompile the method.
      })).Select<\u003415651442941.\u003133349971497, string>((Func<\u003415651442941.\u003133349971497, string>) (_param1 => _param1.\u003735425936812));
    }

    private class \u003924419527678
    {
      public static readonly \u003415651442941.\u003505928676172 \u003020534315270 = new \u003415651442941.\u003505928676172();

      public IEnumerable<string> \u003095395852503
      {
        [SpecialName] get => ((\u003415651442941.\u003924419527678) this).\u003389529017294.Where<\u003415651442941.\u003133349971497>((Func<\u003415651442941.\u003133349971497, bool>) (_param1 =>
        {
          // ISSUE: unable to decompile the method.
        })).Select<\u003415651442941.\u003133349971497, string>((Func<\u003415651442941.\u003133349971497, string>) (_param1 => _param1.\u003735425936812));
      }

      public Optional<string> \u003769979096531
      {
        get => ((\u003415651442941.\u003133349971497) this).\u003199850610906;
        set => ((\u003415651442941.\u003133349971497) this).\u003199850610906 = value;
      }

      public Optional<char> \u003496198460394 { get; set; }

      public bool \u003138807287285 { get; private set; }

      public bool \u003960862679861 => this.\u003496198460394.HasValue && UnicodeUtils.MinusChars.Contains(this.\u003496198460394.Value);

      public bool \u003259686458324
      {
        get
        {
          // ISSUE: unable to decompile the method.
        }
      }

      public Dictionary<string, string> \u003338532534121 { get; }

      public List<\u003415651442941.\u003133349971497> \u003389529017294 { get; }

      public bool \u003719349075059 { get; private set; }

      public \u003924419527678(
        IEnumerable<KeyValuePair<string, string>> substitutions)
      {
        this.\u003338532534121 = CollectionUtils.ToDictionary<string, string>(substitutions);
        this.\u003389529017294 = new List<\u003415651442941.\u003133349971497>();
      }

      public void \u003219962471650() => this.\u003719349075059 = true;

      public void \u003706601241662() => this.\u003138807287285 = true;
    }
  }
}
