// Decompiled with JetBrains decompiler
// Type: 110445016287.195906101425
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003056364933363;
using \u003110445016287;
using \u003293851335888;
using \u003398049663276;
using \u003475310219084;
using \u003521629421529;
using \u003534647440872;
using \u003715672977127;
using \u003763242632939;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Logging;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;

namespace \u003110445016287
{
  public class \u003195906101425
  {
    private readonly List<IRichDataType> \u003867043843918;
    public const int \u003065851659333 = 1;
    public const double \u003348707877322 = 0.001;
    private bool \u003247277929481;
    private const int \u003930666162284 = 256;
    private const string \u003066356546881 = "Detection.Datatype.RichDataTypeDetection";

    public IReadOnlyList<IRichDataType> \u003687510590622 => (IReadOnlyList<IRichDataType>) this.\u003867043843918;

    public int \u003665006485899 { get; }

    public double \u003809364650463 { get; }

    public double \u003798692346579 { get; private set; }

    public double \u003828332923617 { get; private set; }

    public double \u003422442181261 { get; private set; }

    public double \u003191781894183 { get; private set; } = double.MaxValue;

    public double \u003476629167452 { get; private set; }

    public double \u003669305810016 { get; private set; }

    public double \u003578205256439 { get; private set; }

    public double \u003661515744246 { get; private set; }

    public \u003195906101425(
      IEnumerable<IRichDataType> candidates,
      int rejectionThreshold = 1,
      double maxRejectionFraction = 0.001)
    {
      this.\u003867043843918 = candidates.ToList<IRichDataType>();
      this.\u003665006485899 = rejectionThreshold;
      this.\u003809364650463 = maxRejectionFraction;
    }

    public IEnumerable<IRichDataType> \u003840078633588(
      IEnumerable<string> _param1,
      long? _param2 = null,
      ILogger _param3 = null,
      Guid? _param4 = null)
    {
      this.\u003247277929481 = !this.\u003247277929481 ? true : throw new InvalidOperationException(FormattableString.Invariant(FormattableStringFactory.Create("Cannot call {0} more than once on the same instance of {1}.", (object) "DetectAll", (object) nameof (\u003195906101425))));
      try
      {
        return this.\u003969536912061(_param1, _param2, _param3, _param4);
      }
      catch (Exception ex)
      {
        _param3?.TrackException(ex);
        throw;
      }
    }

    private IEnumerable<IRichDataType> \u003969536912061(
      IEnumerable<string> _param1_1,
      long? _param2 = null,
      ILogger _param3 = null,
      Guid? _param4 = null)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003195906101425.\u003261491617856 obj = (\u003195906101425.\u003261491617856) new \u003896586978368<>.\u003535999040695();
      // ISSUE: reference to a compiler-generated field
      ((\u003896586978368<>.\u003535999040695) obj).\u003162446825840 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003899393076244 = _param2;
      bool flag = true;
      long num = 0;
      Stopwatch stopwatch = Stopwatch.StartNew();
      foreach (string str1 in _param1_1)
      {
        ++num;
        string str2 = str1 == null ? str1 : UnicodeUtils.NormalizeAndTrim(str1, NormalizationForm.FormC);
        if (str2 != str1)
          ++this.\u003578205256439;
        if (string.IsNullOrEmpty(str2))
        {
          if (str2 == null)
            ++this.\u003476629167452;
          else
            ++this.\u003669305810016;
        }
        else
        {
          if (str1.Length > 256)
            return CollectionUtils.Yield<IRichDataType>(this.\u003867043843918.FirstOrDefault<IRichDataType>((Func<IRichDataType, bool>) (_param1_2 => _param1_2 is \u003804667841946)));
          this.\u003798692346579 += (double) str1.Length;
          this.\u003828332923617 += (double) (str1.Length * str1.Length);
          this.\u003422442181261 = Math.Max(this.\u003422442181261, (double) str1.Length);
          this.\u003191781894183 = Math.Min(this.\u003191781894183, (double) str1.Length);
          flag = false;
          foreach (IRichDataType richDataType in this.\u003867043843918)
            richDataType.AddSample(str2);
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated method
          this.\u003867043843918.RemoveAll(obj.\u003707287231597 ?? (obj.\u003707287231597 = new Predicate<IRichDataType>(obj.\u003643054258104)));
        }
      }
      foreach (IRichDataType richDataType in this.\u003867043843918)
      {
        // ISSUE: reference to a compiler-generated field
        richDataType.Finish(obj.\u003899393076244 ?? num);
      }
      stopwatch.Stop();
      this.\u003661515744246 = (double) num;
      this.\u003798692346579 = num > 0L ? this.\u003798692346579 / (double) num : 0.0;
      this.\u003828332923617 = num > 0L ? this.\u003828332923617 / (double) num - this.\u003798692346579 * this.\u003798692346579 : 0.0;
      this.\u003828332923617 = Math.Sqrt(this.\u003828332923617);
      // ISSUE: reference to a compiler-generated method
      List<IRichDataType> richDataTypeList = flag ? Enumerable.Empty<IRichDataType>().ToList<IRichDataType>() : this.\u003867043843918.Where<IRichDataType>(new Func<IRichDataType, bool>(obj.\u003778151970268)).ToList<IRichDataType>();
      if (this.\u003669305810016 > 0.0)
        richDataTypeList.ForEach((Action<IRichDataType>) (_param1_3 => _param1_3.EmptyStringsExpectedInData = true));
      if (this.\u003578205256439 > 0.0)
        richDataTypeList.ForEach((Action<IRichDataType>) (_param1_4 => _param1_4.NormalizableStringsExpectedInData = true));
      if (this.\u003476629167452 > 0.0)
        richDataTypeList.ForEach((Action<IRichDataType>) (_param1_5 => _param1_5.NullsExpectedInData = true));
      this.\u003980370583686(_param3, _param4, (IReadOnlyList<IRichDataType>) richDataTypeList, stopwatch.Elapsed);
      return (IEnumerable<IRichDataType>) richDataTypeList;
    }

    private void \u003980370583686(
      ILogger _param1,
      Guid? _param2,
      IReadOnlyList<IRichDataType> _param3,
      TimeSpan _param4)
    {
      if (_param1 == null || !_param3.Any<IRichDataType>())
        return;
      Guid guid = _param2 ?? Guid.Empty;
      _param1.TrackEvent("LearnTopK", (IReadOnlyCollection<KeyValuePair<string, double>>) new KeyValuePair<string, double>[8]
      {
        KVP.Create<string, double>("LearnTime", _param4.TotalMilliseconds),
        KVP.Create<string, double>("MeanInputLength", this.\u003798692346579),
        KVP.Create<string, double>("StdDevInputLength", this.\u003828332923617),
        KVP.Create<string, double>("NumInputs", this.\u003661515744246),
        KVP.Create<string, double>("MaxInputLength", this.\u003422442181261),
        KVP.Create<string, double>("MinInputLength", this.\u003191781894183),
        KVP.Create<string, double>("NumNullInputs", this.\u003476629167452),
        KVP.Create<string, double>("NumEmptyInputs", this.\u003669305810016)
      }, (IReadOnlyCollection<KeyValuePair<string, string>>) new KeyValuePair<string, string>[3]
      {
        KVP.Create<string, string>("SessionType", "Detection.Datatype.RichDataTypeDetection"),
        KVP.Create<string, string>("Id", guid.ToString()),
        KVP.Create<string, string>("DetectedType", _param3.FirstOrDefault<IRichDataType>()?.Kind.ToString() ?? "null")
      }, (IReadOnlyCollection<KeyValuePair<string, string>>) new KeyValuePair<string, string>[0]);
    }

    private static IRichDataType \u003030330445992(
      \u003418950873144 _param0,
      \u003415651442941 _param1)
    {
      if (_param0.\u003677979328390)
        return (IRichDataType) _param0;
      return _param1.\u003355410381240.HasValue && _param1.\u003574232386253.HasValue && _param1.\u003355410381240.Value - _param1.\u003574232386253.Value < 60L ? (IRichDataType) _param1 : (IRichDataType) _param0;
    }

    public IRichDataType \u003053663824544(
      IEnumerable<string> _param1_1,
      IRichDataType _param2 = null,
      long? _param3 = null,
      ILogger _param4 = null,
      Guid? _param5 = null)
    {
      List<IRichDataType> list = this.\u003840078633588(_param1_1, _param3, _param4, _param5).OrderBy<IRichDataType, int>((Func<IRichDataType, int>) (_param1_2 => _param1_2.NaValueCount)).ToList<IRichDataType>();
      if (!list.Any<IRichDataType>())
        return _param2;
      if (list.Count == 1)
        return list.Single<IRichDataType>();
      list.OfType<\u003804667841946>().FirstOrDefault<\u003804667841946>();
      \u003180060136938 obj1 = list.OfType<\u003180060136938>().FirstOrDefault<\u003180060136938>();
      \u003415651442941 obj2 = list.OfType<\u003415651442941>().FirstOrDefault<\u003415651442941>();
      \u003418950873144 obj3 = list.OfType<\u003418950873144>().FirstOrDefault<\u003418950873144>();
      \u003477499562484 obj4 = list.OfType<\u003477499562484>().FirstOrDefault<\u003477499562484>();
      if (obj4 != null)
        return (IRichDataType) obj4;
      if (obj3 != null)
        return obj2 == null ? (IRichDataType) obj3 : \u003195906101425.\u003030330445992(obj3, obj2);
      if (obj2 == null)
        return (IRichDataType) obj1;
      return obj1 != null && obj2.\u003245054004157.Count<\u003301664478184>() == 1 && obj2.\u003245054004157.All<\u003301664478184>((Func<\u003301664478184, bool>) (_param1_3 => _param1_3.\u003027691008785 && !_param1_3.\u003537179778093.HasValue && !_param1_3.\u003093682913747.HasValue && !_param1_3.\u003213158464276)) ? (IRichDataType) obj1 : (IRichDataType) obj2;
    }

    public static \u003195906101425 \u003056382435216 => \u003195906101425.\u003221842426744();

    private static \u003195906101425 \u003221842426744() => new \u003195906101425((IEnumerable<IRichDataType>) new IRichDataType[4]
    {
      (IRichDataType) new \u003477499562484(),
      (IRichDataType) new \u003418950873144(),
      (IRichDataType) new \u003415651442941(),
      (IRichDataType) new \u003804667841946()
    });
  }
}
