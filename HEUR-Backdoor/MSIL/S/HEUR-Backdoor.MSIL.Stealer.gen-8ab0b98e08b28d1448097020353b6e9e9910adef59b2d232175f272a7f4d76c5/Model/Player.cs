// Decompiled with JetBrains decompiler
// Type: AutoJack.Model.Player
// Assembly: LSATRANSLATEDN, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 21C3335F-91C4-4C6A-BCF4-3830BBF13625
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Stealer.gen-8ab0b98e08b28d1448097020353b6e9e9910adef59b2d232175f272a7f4d76c5.exe

using System.Collections.Generic;

namespace AutoJack.Model
{
  public class Player : User
  {
    public int Bet { get; set; }

    public int Insurance { get; set; }

    internal List<Card> Hand1 { get; set; }

    internal List<Card> Hand2 { get; set; }

    public bool Hand1Flipped { get; set; }

    public bool Hand2Flipped { get; set; }

    public Player()
    {
    }

    public Player(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
      : base(id, UserName, Balance, WinStreak, WinCount, LoseCount, Games, Owing, AvgBet, MaxBet, MinBet, LastPlay, CurrentStreak)
    {
      this.Bet = 0;
      this.Insurance = 0;
      this.Hand1 = new List<Card>();
      this.Hand2 = new List<Card>();
      this.Hand1Flipped = false;
      this.Hand2Flipped = false;
    }

    internal void AddHand1(Card Card) => this.Hand1.Add(Card);

    internal void AddHand2(Card Card) => this.Hand2.Add(Card);
  }
}
