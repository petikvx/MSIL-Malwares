// Decompiled with JetBrains decompiler
// Type: BBSC_TIANHUI_Homework_DAY_1.Day_1
// Assembly: homework, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 999793B1-0771-4344-94F3-428963D941AF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Otwycal.a-e3854d3edc772415a8ef045a42a469f3d7aff20766c649a83b18d87ceb5cbf23.exe

using System;

namespace BBSC_TIANHUI_Homework_DAY_1
{
  internal class Day_1
  {
    private static void Main(string[] args)
    {
    }

    private static void typedemo()
    {
      if (int.TryParse("wr2342", out int _))
        Console.WriteLine("true");
      else
        Console.WriteLine("false");
      Console.WriteLine(int.Parse("2145"));
      Console.WriteLine((object) typeof (char));
      Console.WriteLine(4);
      Console.WriteLine((int) byte.MaxValue);
      Console.WriteLine(0);
      Console.WriteLine(int.MaxValue);
      Console.WriteLine(int.MinValue);
      Console.WriteLine((int) short.MaxValue);
      Console.WriteLine((int) short.MinValue);
      Console.WriteLine(long.MaxValue);
      Console.WriteLine(long.MinValue);
      Console.WriteLine(float.MaxValue);
      Console.WriteLine(float.MinValue);
      Console.WriteLine(double.MaxValue);
      Console.WriteLine(double.MinValue);
    }

    private static void Weekshow()
    {
      for (int index = 0; index < int.MaxValue; ++index)
      {
        switch (Console.ReadLine())
        {
          case "1":
            Console.WriteLine("星期一");
            break;
          case "2":
            Console.WriteLine("星期二");
            break;
          case "3":
            Console.WriteLine("星期三");
            break;
          case "4":
            Console.WriteLine("星期四");
            break;
          case "5":
            Console.WriteLine("星期五");
            break;
          case "6":
            Console.WriteLine("星期六");
            break;
          case "7":
            Console.WriteLine("星期天");
            break;
          case "exit":
            return;
          default:
            Console.WriteLine("非正确数字");
            break;
        }
      }
    }

    private static void SquareFunctionDemo()
    {
      double num = double.Parse(Console.ReadLine());
      Console.WriteLine(num * num);
    }

    private static void NumDemo()
    {
      for (int index = 2; index < 542; ++index)
      {
        int num = 2;
        while (num <= index / 2 && index % num != 0)
          ++num;
        if (num > index / 2)
          Console.WriteLine("质数: " + (object) index);
      }
    }

    private static void CharCalcDemo()
    {
      Console.WriteLine("请输入一段内容：");
      string s = Console.ReadLine();
      int num1 = 0;
      int num2 = 0;
      int num3 = 0;
      for (int index = 0; index < s.Length; ++index)
      {
        if (char.IsLetter(s, index))
          ++num2;
        else if (char.IsNumber(s, index))
          ++num1;
        else if (char.IsPunctuation(s, index))
          ++num3;
      }
      Console.Write("字符个数为：");
      Console.WriteLine(num2);
      Console.Write("数字个数为：");
      Console.WriteLine(num1);
      Console.Write("标点个数为：");
      Console.WriteLine(num3);
    }

    private static void CalcExcelColumn(int colnum)
    {
      for (int y = 1; y <= colnum; ++y)
      {
        if ((double) colnum <= Math.Pow(26.0, (double) y))
        {
          Console.WriteLine((char) (64 + colnum));
          Day_1.CalcExcelColumn(colnum - (int) Math.Pow(26.0, (double) y));
        }
      }
    }

    private static void QueeyASCII()
    {
      for (int index = 0; index < 256; ++index)
      {
        Console.Write((char) index);
        Console.Write(" ");
      }
      Console.WriteLine("请输入要查询的键盘字符：");
      char ch = char.Parse(Console.ReadLine());
      for (int index = 0; index < 256; ++index)
      {
        if ((int) ch == (int) (ushort) index)
        {
          Console.Write("你输入字符相应的ASSII码为：");
          Console.WriteLine(index);
        }
      }
    }

    private static void timeset()
    {
      DateTime now1 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> year1 = (ValueType) now1.Year;
      now1 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> month1 = (ValueType) now1.Month;
      now1 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> day1 = (ValueType) now1.Day;
      Console.WriteLine("现在的时间是{0}-{1}-{2}", (object) year1, (object) month1, (object) day1);
      DateTime now2 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> year2 = (ValueType) now2.Year;
      now2 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> month2 = (ValueType) now2.Month;
      now2 = DateTime.Now;
      // ISSUE: variable of a boxed type
      __Boxed<int> day2 = (ValueType) now2.Day;
      Console.WriteLine("现在的时间是{0}/{1}/{2}", (object) year2, (object) month2, (object) day2);
    }
  }
}
