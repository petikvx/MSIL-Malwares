// Decompiled with JetBrains decompiler
// Type: MiniGames_Team9.PowerItem
// Assembly: IdentityRefere, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9F5D51E6-71BD-43F4-AA35-8F19B20FF789
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-3cda0e34cd6f8adaabeeeb6e8bd08d80ba8d758bb3218c8058cd88353d253b61.exe

using System;
using System.Drawing;
using System.Windows.Forms;
using System.Windows.Forms.Layout;

namespace MiniGames_Team9
{
  internal class PowerItem : Item
  {
    public PowerItem()
    {
    }

    public PowerItem(PictureBox map)
      : base(map)
    {
      this.timeToDes = 5;
      this.item.Tag = (object) "power";
    }

    public override void CreateItem(PictureBox Map)
    {
      this.timeToDes = 2;
      Random random = new Random();
      int x;
      int y;
      do
      {
        x = random.Next(1, 650);
        y = random.Next(33, 550);
      }
      while (this.IsLocationPlayer(x, y, Map));
      this.item.Parent = (Control) Map;
      this.item.BackColor = Color.Transparent;
      this.item.Location = new Point(x, y);
      Map.Controls.Add((Control) this.item);
      this.time.Interval = 1000;
      this.time.Tick += new EventHandler(((Item) this).tm_Tick);
      this.time.Start();
    }

    private bool IsLocationPlayer(int x, int y, PictureBox Map)
    {
      PictureBox pictureBox = (PictureBox) null;
      foreach (Control control in (ArrangedElementCollection) Map.Controls)
      {
        if (control is PictureBox && object.Equals(control.Tag, (object) "player"))
        {
          pictureBox = (PictureBox) control;
          break;
        }
      }
      return pictureBox != null && x == pictureBox.Left && y == pictureBox.Top;
    }
  }
}
