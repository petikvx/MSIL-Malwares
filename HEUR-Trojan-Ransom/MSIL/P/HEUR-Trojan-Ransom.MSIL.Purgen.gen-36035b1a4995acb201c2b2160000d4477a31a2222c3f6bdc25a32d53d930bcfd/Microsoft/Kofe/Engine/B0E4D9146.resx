<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BreakpointTypeNotSupported" xml:space="preserve">
    <value>Breakpoint type not supported</value>
  </data>
  <data name="SyntaxError" xml:space="preserve">
    <value>Expression syntax error</value>
  </data>
  <data name="CommentFormatError" xml:space="preserve">
    <value>Comment not terminated</value>
  </data>
  <data name="ResumeProcessFailed" xml:space="preserve">
    <value>Unexpected problem during ResumeProcess: {0}</value>
  </data>
  <data name="UnmatchedParens" xml:space="preserve">
    <value>Unmatched parentheses</value>
  </data>
  <data name="HexLiteralError" xml:space="preserve">
    <value>Error in hex number format</value>
  </data>
  <data name="NameError" xml:space="preserve">
    <value>Name not found in scope: {0}</value>
  </data>
  <data name="FailedToGetValue" xml:space="preserve">
    <value>Failed to get a value for '{0}'</value>
  </data>
  <data name="NotAnArray" xml:space="preserve">
    <value>Object not an array: {0}</value>
  </data>
  <data name="StackFramesRequestFailed" xml:space="preserve">
    <value>Could not enumerate frames: {0}</value>
  </data>
  <data name="ParseError" xml:space="preserve">
    <value>Unable to parse expression</value>
  </data>
  <data name="AttachWasntCalled" xml:space="preserve">
    <value>Unexpected problem -- IDebugEngine2.Attach wasn't called</value>
  </data>
  <data name="EngineName" xml:space="preserve">
    <value>Java Engine</value>
  </data>
  <data name="WrongOperandType" xml:space="preserve">
    <value>Operator applied to operand of an invalid type</value>
  </data>
  <data name="ReferenceCastError" xml:space="preserve">
    <value>Cast to reference type not supported</value>
  </data>
  <data name="BreakpointInvalidLocation" xml:space="preserve">
    <value>Invalid location</value>
  </data>
  <data name="LaunchFailed" xml:space="preserve">
    <value>Launch failed: {0}</value>
  </data>
  <data name="EvaluationError" xml:space="preserve">
    <value>Unexpected evaluation error</value>
  </data>
  <data name="TokenError" xml:space="preserve">
    <value>Error finding token</value>
  </data>
  <data name="IndexOutOfRange" xml:space="preserve">
    <value>Index out of range: {0}</value>
  </data>
  <data name="IntegerLiteralError" xml:space="preserve">
    <value>Error in integer literal</value>
  </data>
  <data name="StepUnknownThread" xml:space="preserve">
    <value>Stepping is requested for a thread which was not registered via JDWP</value>
  </data>
  <data name="EscapeSequenceError" xml:space="preserve">
    <value>Error in escape sequence</value>
  </data>
  <data name="CharLiteralError" xml:space="preserve">
    <value>Error in character literal</value>
  </data>
  <data name="MaxStackFrameExceeded" xml:space="preserve">
    <value>The maximum number of stack frames supported by Visual Studio has been exceeded.</value>
  </data>
  <data name="JdwpInitFailed" xml:space="preserve">
    <value>Failed to initialize Java process: {0}</value>
  </data>
  <data name="DivideByZero" xml:space="preserve">
    <value>Arithmetic error: divide by zero</value>
  </data>
  <data name="BreakpointMethodNotFound" xml:space="preserve">
    <value>No methods matching name '{0}' found</value>
  </data>
  <data name="FloatingLiteralError" xml:space="preserve">
    <value>Error in floating literal</value>
  </data>
  <data name="StringLiteralError" xml:space="preserve">
    <value>Error in string literal</value>
  </data>
  <data name="BreakpointNoClassesLoaded" xml:space="preserve">
    <value>No classes loaded for this file</value>
  </data>
  <data name="LanguageName" xml:space="preserve">
    <value>Java</value>
  </data>
</root>