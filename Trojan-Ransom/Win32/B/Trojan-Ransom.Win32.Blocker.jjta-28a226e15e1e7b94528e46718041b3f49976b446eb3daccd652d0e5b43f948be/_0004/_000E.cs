// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0001;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal sealed class \u000E
  {
    private readonly ulong[] \u0001;
    private readonly Dictionary<string, ulong> \u0001;

    public \u000E([In] ulong[] obj0, [In] Dictionary<string, ulong> obj1)
    {
      try
      {
        this.\u0001 = obj0;
        this.\u0001 = obj1;
      }
      catch (Exception ex)
      {
        ulong[] numArray = obj0;
        Dictionary<string, ulong> dictionary = obj1;
        \u0003.\u0001(ex, (object) this, (object) numArray, (object) dictionary);
        throw;
      }
    }

    [SpecialName]
    public Dictionary<string, ulong> \u0001()
    {
      Dictionary<string, ulong> dictionary;
      try
      {
        dictionary = this.\u0001;
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex, (object) this);
        throw;
      }
      return dictionary;
    }

    [SpecialName]
    public ulong[] \u0001()
    {
      ulong[] numArray;
      try
      {
        numArray = this.\u0001;
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex, (object) this);
        throw;
      }
      return numArray;
    }

    [SpecialName]
    public bool \u0001()
    {
      bool flag;
      try
      {
        int num;
        do
        {
          num = this.\u0001.Length;
label_1:
          if (true)
            num = num;
          else
            goto label_5;
label_3:
          if (true)
          {
            if (num != 0)
              continue;
            num = this.\u0001.Count == 0 ? 1 : 0;
          }
          else
            goto label_1;
label_5:
          if (true)
          {
            if (true)
              goto label_10;
            else
              goto label_12;
          }
          else
            goto label_3;
        }
        while (false);
        flag = false;
        goto label_12;
label_10:
        flag = num != 0;
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex, (object) this);
        throw;
      }
label_12:
      return flag;
    }
  }
}
