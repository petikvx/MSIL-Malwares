// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ccy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc6f4431894d1c97
// MVID: 2A74CDCD-1E5F-40DD-90C8-12E38E6596C8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.Llac.cfi-7d3f633a775aae62503ba637b47672afca334a930966f3c35ac40563155370b2.exe

using \u0001;
using \u0006;
using \u0007;
using Microsoft.Win32;
using SmartAssembly.SmartUsageCore;
using System;
using System.Globalization;
using System.Runtime.InteropServices;

namespace \u0006
{
  internal static class \u0002
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    static \u0002() => \u0002.\u0002(typeof (\u0002));

    public static void \u0002()
    {
      try
      {
        while (\u0002.\u0002(\u0002.\u0001(1715)))
        {
          \u0002.\u0002(\u0002.\u0001(1720));
          if (true)
            goto label_15;
        }
label_2:
        int num1 = \u0002.\u0002(\u0002.\u0001(1761)) ? 1 : 0;
label_3:
        int num2;
        if (num1 != 0)
        {
          \u0002.\u0002(\u0002.\u0001(1770));
        }
        else
        {
          if (true)
          {
            int num3 = \u0002.\u0002(\u0002.\u0001(1811)) ? 1 : 0;
            if (true)
            {
              if (num3 != 0)
              {
                \u0002.\u0002(\u0002.\u0001(1820));
                goto label_15;
              }
              else if (\u0002.\u0002(\u0002.\u0001(1861)))
              {
                \u0002.\u0002(\u0002.\u0001(1878));
                goto label_15;
              }
              else if (true)
              {
                if (!\u0002.\u0002(\u0002.\u0001(1919)))
                  goto label_15;
              }
              else
                goto label_2;
            }
            else
            {
              num2 = num3;
              goto label_34;
            }
          }
          \u0002.\u0002(\u0002.\u0001(1932));
        }
label_15:
        int num4;
        do
        {
          do
          {
            int major = Environment.OSVersion.Version.Major;
            if (true)
              goto label_33;
            else
              goto label_37;
label_16:
            goto label_17;
label_37:
            num4 = major;
            goto label_16;
label_17:
            int num5;
            switch (num5)
            {
              case 5:
                if (true)
                {
                  num2 = Environment.OSVersion.Version.Minor;
                  if (true)
                    goto label_34;
                  else
                    goto label_20;
                }
                else
                  goto label_32;
              case 6:
                int minor = Environment.OSVersion.Version.Minor;
                if (true)
                  goto label_35;
label_26:
                int num6;
                num4 = num6;
                if (true)
                {
                  if (true)
                  {
                    switch (num4)
                    {
                      case 0:
                        continue;
                      case 1:
                        goto label_31;
                      default:
                        goto label_32;
                    }
                  }
                  else
                    goto label_16;
                }
                else
                  goto label_5;
label_35:
                num6 = minor;
                goto label_26;
              default:
                goto label_32;
            }
label_33:
            num5 = major;
            goto label_17;
          }
          while (false);
          \u0002.\u0002(\u0002.\u0001(2068));
        }
        while (false);
        goto label_32;
label_5:
        num1 = num4;
        goto label_3;
label_31:
        \u0002.\u0002(\u0002.\u0001(2109));
        goto label_32;
label_20:
        int num7;
        switch (num7)
        {
          case 0:
            \u0002.\u0002(\u0002.\u0001(1973));
            break;
          case 1:
            \u0002.\u0002(\u0002.\u0001(2006));
            break;
          case 2:
            \u0002.\u0002(\u0002.\u0001(2035));
            break;
          default:
            if (false)
              goto label_2;
            else
              break;
        }
label_32:
        \u0002.\u0003();
        \u0002.\u0004();
        \u0002.\u0005();
        return;
label_34:
        num7 = num2;
        goto label_20;
      }
      catch
      {
      }
    }

    public static void \u0003()
    {
      try
      {
        \u0002.\u0002(\u0002.\u0001(2146) + (object) Environment.ProcessorCount);
      }
      catch
      {
      }
    }

    public static void \u0004()
    {
      try
      {
        \u0002.\u0002(\u0002.\u0001(2175) + CultureInfo.CurrentCulture.Name);
      }
      catch
      {
      }
    }

    public static void \u0005()
    {
      try
      {
        \u0002.\u0002(\u0002.\u0001(2208) + (object) (\u0002.\u0002() ? 64 : 32));
      }
      catch
      {
      }
    }

    private static bool \u0002()
    {
      if (IntPtr.Size != 8)
        goto label_4;
label_1:
      int num1 = 0;
label_2:
      if (num1 != 0)
        goto label_6;
label_3:
      return true;
label_4:
      num1 = \u0002.\u0002(\u0002.\u0001(2237), \u0002.\u0001(2254)) ? 1 : 0;
      if (true)
      {
        if (num1 == 0)
          goto label_13;
        else
          goto label_14;
      }
      else
        goto label_2;
label_6:
      int num2;
      if (true)
      {
        if (true)
        {
          if (true)
          {
            if (true)
              num2 = 0;
            else
              goto label_3;
          }
          else
            goto label_14;
        }
        else
          goto label_4;
      }
      else
        goto label_1;
label_11:
      bool wow64Process;
      if (num2 == 0)
        return wow64Process;
      goto label_4;
label_13:
      num2 = 0;
      if (num2 == 0)
        return num2 != 0;
      goto label_11;
label_14:
      if (!\u0002.\u0002(\u0002.\u0002(), out wow64Process))
        goto label_13;
      else
        goto label_6;
    }

    private static bool \u0002([In] string obj0, [In] string obj1)
    {
      IntPtr hModule = \u0002.\u0002(obj0);
      IntPtr num1;
      IntPtr num2;
      IntPtr zero;
      if (true)
      {
        int num3 = 0;
        if (num3 == 0)
        {
          if (num3 == 0)
            goto label_22;
          else
            goto label_17;
        }
label_3:
        if (num3 != 0)
        {
          if (true)
          {
            zero = IntPtr.Zero;
            num2 = hModule;
            goto label_18;
          }
          else
          {
            num2 = hModule;
            goto label_13;
          }
        }
        else
          goto label_22;
label_17:
        IntPtr num4 = num1;
        num3 = 4;
        hModule = num4;
        goto label_3;
label_22:
        num1 = hModule;
        goto label_17;
      }
      else
        goto label_20;
label_6:
      int num5;
      int num6;
      if (num5 != 0)
      {
        num6 = 0;
      }
      else
      {
        hModule = num1;
        goto label_20;
      }
label_8:
      if (false)
        return num6 != 0;
      if (num6 == 0)
        return num6 != 0;
      num5 = num6;
      goto label_6;
label_13:
      zero = IntPtr.Zero;
      if (true)
      {
        int num7 = num2 != zero ? 1 : 0;
        if (true)
          return num7 != 0;
        num6 = num7;
        goto label_8;
      }
label_18:
      num5 = num2 == zero ? 1 : 0;
      goto label_6;
label_20:
      string procName = obj1;
      num2 = \u0002.\u0002(hModule, procName);
      goto label_13;
    }

    [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
    private static extern IntPtr \u0002();

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle", CharSet = CharSet.Auto)]
    private static extern IntPtr \u0002([In] string obj0);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern IntPtr \u0002(IntPtr hModule, [MarshalAs(UnmanagedType.LPStr)] string procName);

    [DllImport("kernel32.dll", EntryPoint = "IsWow64Process", CharSet = CharSet.Auto, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0002(IntPtr hProcess, out bool wow64Process);

    private static bool \u0002([In] string obj0)
    {
      bool flag;
      if (true)
      {
        if (true)
          goto label_23;
label_2:
        RegistryKey registryKey1;
        try
        {
          RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(\u0002.\u0001(2275) + obj0);
          if (true)
            goto label_18;
label_16:
          if (registryKey1 == null)
          {
            RegistryKey registryKey3 = Registry.LocalMachine.OpenSubKey(\u0002.\u0001(2336) + obj0);
            if (true)
              registryKey1 = registryKey3;
          }
          do
          {
            int num1;
            if (true)
            {
              if (true)
              {
                int num2 = registryKey1 == null ? 1 : 0;
                if (true)
                {
                  if (true)
                  {
                    int num3 = num2 == 0 ? 1 : 0;
                    if (false)
                    {
                      num2 = num3;
                    }
                    else
                    {
                      flag = num3 != 0;
                      goto label_10;
                    }
                  }
                }
                else
                {
                  num1 = num2;
                  goto label_12;
                }
              }
              else
                break;
            }
label_10:
            if (true)
              num1 = 2;
            else
              continue;
label_12:
            if (num1 == 0)
              break;
          }
          while (false);
          goto label_22;
label_18:
          registryKey1 = registryKey2;
          goto label_16;
        }
        finally
        {
          registryKey1?.Close();
        }
label_23:
        registryKey1 = (RegistryKey) null;
        goto label_2;
      }
label_22:
      return flag;
    }

    public static void \u0002([FeatureName] string featureName) => \u0005.\u0003(featureName);
  }
}
