// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: SystemThreadingSpinLockDebugVi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4BC7AA9F-A353-4AE7-9558-F3A117D261BE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75c449399be2d092abf47491f6b8671cf4cbf34c9aa0337116f14f8309e4af64.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200E‮‬‭⁮⁬‭‏‬⁬‌⁭⁫⁪⁫‫⁫‬​‭⁬⁯‫‬⁮​⁯‭⁮‎‎‎⁯‏⁮⁯‭⁭⁮‏‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_8:
      bool flag = count > 1;
      int num1 = -513404712;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2038767988)) % 8U)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_8;
          case 2:
            obj = list[index];
            num1 = (int) num2 * -177300226 ^ -132760573;
            continue;
          case 3:
            list[index] = list[count];
            num1 = (int) num2 * -2126104606 ^ -1740842188;
            continue;
          case 4:
            int num3 = !flag ? 982074272 : (num3 = 1687294045);
            num1 = num3 ^ (int) num2 * -181128675;
            continue;
          case 5:
            --count;
            index = ScrambleExtention.\u202C‎⁮‌‏‫‍‎‏⁭‫⁬⁯⁪⁯‪‭‌‭⁭​‍‌⁮‍‪‎⁫‏⁪​‫⁮‪‌‏⁭‏⁪⁮‮(ScrambleExtention.Random, count + 1);
            num1 = -1359496274;
            continue;
          case 6:
            list[count] = obj;
            num1 = (int) num2 * -2020109686 ^ -769161607;
            continue;
          case 7:
            num1 = -15869991;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    static int \u202C‎⁮‌‏‫‍‎‏⁭‫⁬⁯⁪⁯‪‭‌‭⁭​‍‌⁮‍‪‎⁫‏⁪​‫⁮‪‌‏⁭‏⁪⁮‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200E‮‬‭⁮⁬‭‏‬⁬‌⁭⁫⁪⁫‫⁫‬​‭⁬⁯‫‬⁮​⁯‭⁮‎‎‎⁯‏⁮⁯‭⁭⁮‏‮() => new Random();
  }
}
