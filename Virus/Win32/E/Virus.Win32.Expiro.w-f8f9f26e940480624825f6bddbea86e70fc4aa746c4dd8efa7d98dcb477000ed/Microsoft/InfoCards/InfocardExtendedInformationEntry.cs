// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.InfocardExtendedInformationEntry
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 1D4D5564-A025-490C-AF1D-DF4FBB709D1F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Virus.Win32.Expiro.w-f8f9f26e940480624825f6bddbea86e70fc4aa746c4dd8efa7d98dcb477000ed.exe

using Microsoft.InfoCards.Diagnostics;
using System;
using System.IO;
using System.Xml;
using System.Xml.Serialization;

namespace Microsoft.InfoCards
{
  internal class InfocardExtendedInformationEntry : IXmlSerializable
  {
    private string m_xmlElement;

    public void Serialize(BinaryWriter writer) => Utility.SerializeString(writer, this.m_xmlElement);

    public void Deserialize(BinaryReader reader) => this.m_xmlElement = Utility.DeserializeString(reader);

    public string GetXml() => this.m_xmlElement;

    public System.Xml.Schema.XmlSchema GetSchema() => (System.Xml.Schema.XmlSchema) null;

    public void WriteXml(XmlWriter writer)
    {
      if (writer == null)
        throw InfoCardTrace.ThrowHelperArgumentNull(nameof (writer));
      XmlReader reader = InfoCardSchemas.CreateReader(this.m_xmlElement);
      writer.WriteNode(reader, false);
    }

    public void ReadXml(XmlReader reader)
    {
      XmlReader xmlReader = reader.IsStartElement() ? reader.ReadSubtree() : throw InfoCardTrace.ThrowHelperError((Exception) new InvalidCardException(SR.GetString("UnexpectedElement")));
      xmlReader.Read();
      this.m_xmlElement = xmlReader.ReadOuterXml();
      xmlReader.Close();
    }
  }
}
