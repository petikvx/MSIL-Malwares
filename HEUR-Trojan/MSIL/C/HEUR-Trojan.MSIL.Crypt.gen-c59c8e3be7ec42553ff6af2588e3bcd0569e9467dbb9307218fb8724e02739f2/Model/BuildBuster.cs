// Decompiled with JetBrains decompiler
// Type: Cradiator.Model.BuildBuster
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Config;
using Cradiator.Extensions;

namespace Cradiator.Model
{
  public class BuildBuster : IBuildBuster, IConfigObserver
  {
    private BuildBusterStrategy _guiltStrategy;
    private readonly FixerStrategy _fixerStrategy;
    private readonly GuiltFactory _guiltFactory;

    public BuildBuster(
      IConfigSettings configSettings,
      FixerStrategy fixerStrategy,
      GuiltFactory guiltFactory)
    {
      this._fixerStrategy = fixerStrategy;
      this._guiltFactory = guiltFactory;
      this.SetGuiltStrategy(configSettings);
      configSettings.AddObserver((IConfigObserver) this);
    }

    private void SetGuiltStrategy(IConfigSettings configSettings) => this._guiltStrategy = this._guiltFactory.Get(configSettings.BreakerGuiltStrategy);

    public string FindBreaker(string currentMessage)
    {
      if (currentMessage.IsEmpty())
        return string.Empty;
      string breaker = currentMessage;
      if (this._fixerStrategy.IsMatch(currentMessage))
        breaker = this._fixerStrategy.Extract(currentMessage);
      else if (this._guiltStrategy.IsMatch(currentMessage))
        breaker = this._guiltStrategy.Extract(currentMessage);
      return breaker;
    }

    public void ConfigUpdated(ConfigSettings newSettings) => this.SetGuiltStrategy((IConfigSettings) newSettings);
  }
}
