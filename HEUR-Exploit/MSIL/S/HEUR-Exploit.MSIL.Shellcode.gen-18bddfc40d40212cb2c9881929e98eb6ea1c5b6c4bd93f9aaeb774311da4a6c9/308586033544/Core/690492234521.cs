// Decompiled with JetBrains decompiler
// Type: 308586033544.Core.690492234521
// Assembly: 308586033544, Version=1.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: CD78F8E3-E5F9-41CF-8142-5EDBF93F1FF3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-18bddfc40d40212cb2c9881929e98eb6ea1c5b6c4bd93f9aaeb774311da4a6c9.exe

using \u003076467872204;
using \u003218674215160;
using \u003308586033544.Models;
using \u003308586033544.Utils;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003308586033544.Core
{
  public static class \u003690492234521
  {
    private static \u003108620570429 \u003209948117012(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003108620570429) null;
      FileInfo fileInfo;
      if (\u003362254670253.\u003126573304250)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003108620570429) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003830722397552) path.\u003547245754524<\u003193116044608>()).get_image().\u003927695179882;
        }
        catch
        {
        }
      }
      \u003108620570429 obj = new \u003108620570429();
      ((\u003774085998324) obj).set_ImageFileName(fullName);
      obj.\u003012493689917 = str;
      obj.\u003405584990266 = "";
      return obj;
    }

    public static IList<\u003934160523651> \u003871929630831()
    {
      List<\u003934160523651> objList1 = new List<\u003934160523651>();
      string path = Path.Combine(\u003945417024083.\u003360957129638(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003934160523651>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003934160523651> objList2 = objList1;
              \u003934160523651 obj = new \u003934160523651();
              obj.\u003510703012097 = str2;
              obj.\u003562177761757 = int.Parse(strArray2[0]);
              obj.\u003263544266457 = int.Parse(strArray2[1]);
              ((\u003543059625139) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003934160523651>) objList1;
    }
  }
}
