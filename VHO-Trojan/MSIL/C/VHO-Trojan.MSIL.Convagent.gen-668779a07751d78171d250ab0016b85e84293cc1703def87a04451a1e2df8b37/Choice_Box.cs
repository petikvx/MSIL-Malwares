// Decompiled with JetBrains decompiler
// Type: ModuleNameSpace.Choice_Box
// Assembly: installer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BE36CCF7-21FD-4261-9C31-8B7F15D1A5A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\VHO-Trojan.MSIL.Convagent.gen-668779a07751d78171d250ab0016b85e84293cc1703def87a04451a1e2df8b37.exe

using System;
using System.Collections.ObjectModel;
using System.Drawing;
using System.Management.Automation.Host;
using System.Reflection;
using System.Windows.Forms;

namespace ModuleNameSpace
{
  public class Choice_Box
  {
    public static int Show(
      Collection<ChoiceDescription> arrChoice,
      int intDefault,
      string strTitle,
      string strPrompt)
    {
      if (arrChoice == null || arrChoice.Count < 1)
        return -1;
      Form form = new Form();
      form.AutoScaleDimensions = new SizeF(6f, 13f);
      form.AutoScaleMode = AutoScaleMode.Font;
      RadioButton[] radioButtonArray = new RadioButton[arrChoice.Count];
      ToolTip toolTip = new ToolTip();
      Button button = new Button();
      int y = 19;
      int num1 = 0;
      if (!string.IsNullOrEmpty(strPrompt))
      {
        Label label = new Label();
        label.Text = strPrompt;
        label.Location = new Point(9, 19);
        label.MaximumSize = new System.Drawing.Size(Screen.FromControl((Control) form).Bounds.Width * 5 / 8 - 18, 0);
        label.AutoSize = true;
        form.Controls.Add((Control) label);
        y = label.Bottom;
        num1 = label.Right;
      }
      int index1 = 0;
      int num2 = Screen.FromControl((Control) form).Bounds.Width * 5 / 8 - 18;
      foreach (ChoiceDescription choiceDescription in arrChoice)
      {
        radioButtonArray[index1] = new RadioButton();
        radioButtonArray[index1].Text = choiceDescription.Label;
        if (index1 == intDefault)
          radioButtonArray[index1].Checked = true;
        radioButtonArray[index1].Location = new Point(9, y);
        radioButtonArray[index1].AutoSize = true;
        form.Controls.Add((Control) radioButtonArray[index1]);
        if (radioButtonArray[index1].Width > num2)
        {
          int height = radioButtonArray[index1].Height;
          radioButtonArray[index1].Height = height * (1 + (radioButtonArray[index1].Width - 1) / num2);
          radioButtonArray[index1].Width = num2;
          radioButtonArray[index1].AutoSize = false;
        }
        y = radioButtonArray[index1].Bottom;
        if (radioButtonArray[index1].Right > num1)
          num1 = radioButtonArray[index1].Right;
        if (!string.IsNullOrEmpty(choiceDescription.HelpMessage))
          toolTip.SetToolTip((Control) radioButtonArray[index1], choiceDescription.HelpMessage);
        ++index1;
      }
      toolTip.ShowAlways = true;
      button.Text = "OK";
      button.DialogResult = DialogResult.OK;
      button.SetBounds(Math.Max(12, num1 - 77), y + 36, 75, 23);
      if (string.IsNullOrEmpty(strTitle))
        form.Text = AppDomain.CurrentDomain.FriendlyName;
      else
        form.Text = strTitle;
      form.ClientSize = new System.Drawing.Size(Math.Max(178, num1 + 10), y + 71);
      form.Controls.Add((Control) button);
      form.FormBorderStyle = FormBorderStyle.FixedDialog;
      form.StartPosition = FormStartPosition.CenterScreen;
      try
      {
        form.Icon = Icon.ExtractAssociatedIcon(Assembly.GetExecutingAssembly().Location);
      }
      catch
      {
      }
      form.MinimizeBox = false;
      form.MaximizeBox = false;
      form.AcceptButton = (IButtonControl) button;
      if (form.ShowDialog() != DialogResult.OK)
        return -1;
      int num3 = -1;
      for (int index2 = 0; index2 < arrChoice.Count; ++index2)
      {
        if (radioButtonArray[index2].Checked)
          num3 = index2;
      }
      return num3;
    }
  }
}
