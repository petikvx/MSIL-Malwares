// Decompiled with JetBrains decompiler
// Type: C3554254475.C2137352139
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.IO.Compression;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace C3554254475
{
  public static class C2137352139
  {
    internal static readonly byte[] C3554254475 = new byte[0];
    internal static readonly C856455061<char> C3554254475 = new C856455061<char>();
    private const MethodImplOptions C3554254475 = MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization;
    private static readonly uint[] C3554254475 = new uint[256]
    {
      3442453683U,
      3884613468U,
      1862796284U,
      3170296368U,
      976361234U,
      104873393U,
      3539487637U,
      3743590116U,
      130981467U,
      829983244U,
      4135843572U,
      3926269769U,
      4200344266U,
      1268664654U,
      2964006330U,
      1987523068U,
      639144871U,
      722072270U,
      73556452U,
      1094089547U,
      413659685U,
      2408725518U,
      1593025317U,
      684737374U,
      2227317017U,
      3982919484U,
      2364400708U,
      2143583268U,
      4244401059U,
      1735365261U,
      3021238663U,
      3640332910U,
      2105117975U,
      4286768164U,
      387119707U,
      2880478677U,
      2169944675U,
      2229590377U,
      3375889306U,
      790518780U,
      395233809U,
      242339167U,
      1386923764U,
      1911487631U,
      1888540489U,
      566938161U,
      2459526008U,
      154773672U,
      3924695348U,
      3530655254U,
      4065330499U,
      3104933692U,
      3553312492U,
      731962347U,
      3022850599U,
      3974528015U,
      808003056U,
      1628764217U,
      3550372615U,
      3800658134U,
      3952619417U,
      2484817119U,
      3309364560U,
      2166684741U,
      2561680839U,
      3804205290U,
      1331153270U,
      3478417380U,
      1498836424U,
      3824432653U,
      4126790193U,
      3591899938U,
      3041790090U,
      3051349670U,
      909615983U,
      91132548U,
      2952330181U,
      434116168U,
      2249322563U,
      3672392503U,
      4128991772U,
      628805022U,
      3711300871U,
      4010134266U,
      99306115U,
      4230335122U,
      172435686U,
      2633060591U,
      2934925278U,
      2840011575U,
      1472732926U,
      1046347935U,
      46859195U,
      732452468U,
      4062036561U,
      2026064436U,
      2880566719U,
      3109695421U,
      531920759U,
      2593581228U,
      1563240504U,
      1437255978U,
      2582524494U,
      284565835U,
      1487658929U,
      537426253U,
      3200811248U,
      3881718593U,
      2281790516U,
      892178367U,
      1647017836U,
      4123369122U,
      527801742U,
      2917491033U,
      3430632485U,
      1535886476U,
      3065845167U,
      1012617488U,
      3880418365U,
      3999347041U,
      359275623U,
      1925212183U,
      3926552425U,
      1290598803U,
      3399308620U,
      2384475679U,
      1121162937U,
      1499325816U,
      1956477269U,
      4246447613U,
      2180781582U,
      3684164236U,
      2096187639U,
      185285877U,
      1397614085U,
      1178734694U,
      3568733649U,
      2655493350U,
      2925951645U,
      3154649218U,
      2959988463U,
      552661567U,
      3114145105U,
      4101647930U,
      1910132934U,
      1740003193U,
      713864054U,
      514268910U,
      699125072U,
      3068857451U,
      599852305U,
      1866408260U,
      1794256914U,
      4137074078U,
      3108018648U,
      2908396673U,
      2047317242U,
      2128566742U,
      510846324U,
      2237763900U,
      1313691279U,
      4006320424U,
      2618445102U,
      138983468U,
      4056562015U,
      2645509084U,
      4152279843U,
      961452889U,
      2116028742U,
      2340494696U,
      383398661U,
      2878202563U,
      3871685476U,
      2562904865U,
      2292809089U,
      2802869273U,
      2387802047U,
      2396152495U,
      2093651790U,
      4036178497U,
      68015159U,
      3779310548U,
      807007599U,
      3074511389U,
      4050932578U,
      1279483807U,
      3022081293U,
      185349259U,
      1347539337U,
      1278231678U,
      1939068706U,
      2513362187U,
      3717811840U,
      3285331673U,
      1939659008U,
      320780740U,
      4010828466U,
      1326310454U,
      1385300083U,
      2592030080U,
      2305719067U,
      747355738U,
      3174059914U,
      2845041196U,
      323764640U,
      4204305920U,
      969840422U,
      4220124367U,
      3908807831U,
      3557179388U,
      2472160090U,
      1154018947U,
      3408644022U,
      43556498U,
      1967623146U,
      339966160U,
      3629367431U,
      2291639118U,
      3710083741U,
      3185746594U,
      1478332108U,
      1571335912U,
      4287279056U,
      3123433326U,
      1272548780U,
      4075665892U,
      4197304424U,
      1206404705U,
      3974831229U,
      1097882788U,
      1501750484U,
      3948020897U,
      3516320507U,
      1679065165U,
      985484102U,
      2336836646U,
      3023230251U,
      969225579U,
      1858604023U,
      1908298883U,
      3468993801U,
      3913358689U,
      1391673829U,
      3538295163U,
      1325564524U,
      2850326584U,
      3522753095U,
      3835002803U,
      1483524761U,
      2592827995U,
      1234762730U,
      4150443596U,
      2430591804U,
      2536591646U,
      2294720559U,
      3714426068U
    };

    public static byte[] C3554254475([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2013832146());
      }
      int length = obj0.Length;
      if ((length & 1) != 0)
      {
        Debug.Assert(false);
        return (byte[]) null;
      }
      byte[] numArray = new byte[length / 2];
      for (int index = 0; index < length; index += 2)
      {
        char ch1 = obj0[index];
        byte num1;
        if (ch1 >= '0' && ch1 <= '9')
          num1 = (byte) ((uint) ch1 - 48U);
        else if (ch1 >= 'a' && ch1 <= 'f')
          num1 = (byte) ((int) ch1 - 97 + 10);
        else if (ch1 >= 'A' && ch1 <= 'F')
        {
          num1 = (byte) ((int) ch1 - 65 + 10);
        }
        else
        {
          Debug.Assert(false);
          num1 = (byte) 0;
        }
        byte num2 = (byte) ((uint) num1 << 4);
        char ch2 = obj0[index + 1];
        if (ch2 >= '0' && ch2 <= '9')
          num2 += (byte) ((uint) ch2 - 48U);
        else if (ch2 >= 'a' && ch2 <= 'f')
          num2 += (byte) ((int) ch2 - 97 + 10);
        else if (ch2 >= 'A' && ch2 <= 'F')
          num2 += (byte) ((int) ch2 - 65 + 10);
        else
          Debug.Assert(false);
        numArray[index >> 1] = num2;
      }
      return numArray;
    }

    public static string C3554254475([In] byte[] obj0)
    {
      if (obj0 == null)
        return (string) null;
      int length = obj0.Length;
      if (length == 0)
        return string.Empty;
      StringBuilder stringBuilder = new StringBuilder();
      for (int index = 0; index < length; ++index)
      {
        byte num1 = obj0[index];
        byte num2 = (byte) ((uint) num1 >> 4);
        byte num3 = (byte) ((uint) num1 & 15U);
        if (num2 >= (byte) 10)
          stringBuilder.Append((char) (65 + (int) num2 - 10));
        else
          stringBuilder.Append((char) (48U + (uint) num2));
        if (num3 >= (byte) 10)
          stringBuilder.Append((char) (65 + (int) num3 - 10));
        else
          stringBuilder.Append((char) (48U + (uint) num3));
      }
      return stringBuilder.ToString();
    }

    public static byte[] C3904355907([In] string obj0)
    {
      if (obj0 == null || obj0.Length % 8 != 0)
      {
        Debug.Assert(false);
        return (byte[]) null;
      }
      List<byte> byteList = new List<byte>((int) ((ulong) obj0.Length * 5UL / 8UL) + 1);
      Debug.Assert(byteList.Count == 0);
      for (int index1 = 0; index1 < obj0.Length; index1 += 8)
      {
        ulong num1 = 0;
        int num2 = 0;
        for (int index2 = 0; index2 < 8; ++index2)
        {
          char ch = obj0[index1 + index2];
          if (ch != '=')
          {
            ulong num3;
            if (ch >= 'A' && ch <= 'Z')
              num3 = (ulong) ((int) ch - 65);
            else if (ch >= 'a' && ch <= 'z')
              num3 = (ulong) ((int) ch - 97);
            else if (ch >= '2' && ch <= '7')
            {
              num3 = (ulong) ((int) ch - 50) + 26UL;
            }
            else
            {
              Debug.Assert(false);
              return (byte[]) null;
            }
            num1 = (num1 << 5) + num3;
            num2 += 5;
          }
          else
            break;
        }
        int num4 = num2 % 8;
        ulong num5 = num1 >> num4;
        int num6 = num2 - num4;
        Debug.Assert(num6 % 8 == 0);
        int count = byteList.Count;
        for (; num6 > 0; num6 -= 8)
        {
          byteList.Add((byte) (num5 & (ulong) byte.MaxValue));
          num5 >>= 8;
        }
        byteList.Reverse(count, byteList.Count - count);
      }
      return byteList.ToArray();
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static void C3904355907([In] byte[] obj0)
    {
      if (obj0 == null)
        Debug.Assert(false);
      else
        Array.Clear((Array) obj0, 0, obj0.Length);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static void C3554254475<C3554254475>([In] C3554254475[] obj0)
    {
      if (obj0 == null)
        Debug.Assert(false);
      else
        Array.Clear((Array) obj0, 0, obj0.Length);
    }

    public static ushort C1255198513([In] byte[] obj0)
    {
      Debug.Assert(obj0 != null && obj0.Length == 2);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      if (obj0.Length != 2)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      return (ushort) ((uint) obj0[0] | (uint) obj0[1] << 8);
    }

    public static ushort C3554254475([In] byte[] obj0, [In] int obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      }
      if (obj1 < 0 || obj1 + 1 >= obj0.Length)
      {
        Debug.Assert(false);
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      }
      return (ushort) ((uint) obj0[obj1] | (uint) obj0[obj1 + 1] << 8);
    }

    public static uint C1908338681([In] byte[] obj0)
    {
      Debug.Assert(obj0 != null && obj0.Length == 4);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      if (obj0.Length != 4)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      return (uint) ((int) obj0[0] | (int) obj0[1] << 8 | (int) obj0[2] << 16 | (int) obj0[3] << 24);
    }

    public static uint C3904355907([In] byte[] obj0, [In] int obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      }
      if (obj1 < 0 || obj1 + 3 >= obj0.Length)
      {
        Debug.Assert(false);
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      }
      return (uint) ((int) obj0[obj1] | (int) obj0[obj1 + 1] << 8 | (int) obj0[obj1 + 2] << 16 | (int) obj0[obj1 + 3] << 24);
    }

    public static ulong C1037565863([In] byte[] obj0)
    {
      Debug.Assert(obj0 != null && obj0.Length == 8);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      if (obj0.Length != 8)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      return (ulong) ((long) obj0[0] | (long) obj0[1] << 8 | (long) obj0[2] << 16 | (long) obj0[3] << 24 | (long) obj0[4] << 32 | (long) obj0[5] << 40 | (long) obj0[6] << 48 | (long) obj0[7] << 56);
    }

    public static ulong C1255198513([In] byte[] obj0, [In] int obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      }
      if (obj1 < 0 || obj1 + 7 >= obj0.Length)
      {
        Debug.Assert(false);
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      }
      return (ulong) ((long) obj0[obj1] | (long) obj0[obj1 + 1] << 8 | (long) obj0[obj1 + 2] << 16 | (long) obj0[obj1 + 3] << 24 | (long) obj0[obj1 + 4] << 32 | (long) obj0[obj1 + 5] << 40 | (long) obj0[obj1 + 6] << 48 | (long) obj0[obj1 + 7] << 56);
    }

    public static int C112844655([In] byte[] obj0) => (int) C2137352139.C1908338681(obj0);

    public static int C1908338681([In] byte[] obj0, [In] int obj1) => (int) C2137352139.C3904355907(obj0, obj1);

    public static long C2746444292([In] byte[] obj0) => (long) C2137352139.C1037565863(obj0);

    public static long C1037565863([In] byte[] obj0, [In] int obj1) => (long) C2137352139.C1255198513(obj0, obj1);

    public static byte[] C3554254475([In] ushort obj0) => new byte[2]
    {
      (byte) obj0,
      (byte) ((uint) obj0 >> 8)
    };

    public static byte[] C3554254475([In] uint obj0) => new byte[4]
    {
      (byte) obj0,
      (byte) (obj0 >> 8),
      (byte) (obj0 >> 16),
      (byte) (obj0 >> 24)
    };

    public static void C3554254475([In] uint obj0, [In] byte[] obj1, [In] int obj2)
    {
      if (obj1 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      }
      if (obj2 < 0 || obj2 + 3 >= obj1.Length)
      {
        Debug.Assert(false);
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      }
      obj1[obj2] = (byte) obj0;
      obj1[obj2 + 1] = (byte) (obj0 >> 8);
      obj1[obj2 + 2] = (byte) (obj0 >> 16);
      obj1[obj2 + 3] = (byte) (obj0 >> 24);
    }

    public static byte[] C3554254475([In] ulong obj0) => new byte[8]
    {
      (byte) obj0,
      (byte) (obj0 >> 8),
      (byte) (obj0 >> 16),
      (byte) (obj0 >> 24),
      (byte) (obj0 >> 32),
      (byte) (obj0 >> 40),
      (byte) (obj0 >> 48),
      (byte) (obj0 >> 56)
    };

    public static void C3554254475([In] ulong obj0, [In] byte[] obj1, [In] int obj2)
    {
      if (obj1 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C878818188());
      }
      if (obj2 < 0 || obj2 + 7 >= obj1.Length)
      {
        Debug.Assert(false);
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      }
      obj1[obj2] = (byte) obj0;
      obj1[obj2 + 1] = (byte) (obj0 >> 8);
      obj1[obj2 + 2] = (byte) (obj0 >> 16);
      obj1[obj2 + 3] = (byte) (obj0 >> 24);
      obj1[obj2 + 4] = (byte) (obj0 >> 32);
      obj1[obj2 + 5] = (byte) (obj0 >> 40);
      obj1[obj2 + 6] = (byte) (obj0 >> 48);
      obj1[obj2 + 7] = (byte) (obj0 >> 56);
    }

    public static byte[] C3554254475([In] int obj0) => C2137352139.C3554254475((uint) obj0);

    public static void C3554254475([In] int obj0, [In] byte[] obj1, [In] int obj2) => C2137352139.C3554254475((uint) obj0, obj1, obj2);

    public static byte[] C3554254475([In] long obj0) => C2137352139.C3554254475((ulong) obj0);

    public static void C3554254475([In] long obj0, [In] byte[] obj1, [In] int obj2) => C2137352139.C3554254475((ulong) obj0, obj1, obj2);

    public static uint C3554254475([In] uint obj0, [In] int obj1) => obj0 << obj1 | obj0 >> 32 - obj1;

    public static uint C3904355907([In] uint obj0, [In] int obj1) => obj0 >> obj1 | obj0 << 32 - obj1;

    public static ulong C3554254475([In] ulong obj0, [In] int obj1) => obj0 << obj1 | obj0 >> 64 - obj1;

    public static ulong C3904355907([In] ulong obj0, [In] int obj1) => obj0 >> obj1 | obj0 << 64 - obj1;

    public static bool C3554254475([In] byte[] obj0, [In] byte[] obj1)
    {
      if (obj0 == null || obj1 == null)
      {
        Debug.Assert(false);
        return false;
      }
      if (obj0.Length != obj1.Length)
        return false;
      for (int index = 0; index < obj0.Length; ++index)
      {
        if ((int) obj0[index] != (int) obj1[index])
          return false;
      }
      return true;
    }

    public static void C3554254475([In] byte[] obj0, [In] int obj1, [In] byte[] obj2, [In] int obj3, [In] int obj4)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3110715001());
      if (obj1 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2181537457());
      if (obj2 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3463352047());
      if (obj3 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C4110462503());
      if (obj4 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1466425173());
      if (obj1 > obj0.Length - obj4)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1466425173());
      if (obj3 > obj2.Length - obj4)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1466425173());
      for (int index = 0; index < obj4; ++index)
        obj2[obj3 + index] ^= obj0[obj1 + index];
    }

    public static uint C3554254475([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      uint num1 = 846160763;
      if (obj0 == null)
      {
        Debug.Assert(false);
        return num1;
      }
      if (obj1 < 0)
      {
        Debug.Assert(false);
        return num1;
      }
      if (obj2 < 0)
      {
        Debug.Assert(false);
        return num1;
      }
      int num2 = obj1 + obj2;
      if (num2 > obj0.Length)
      {
        Debug.Assert(false);
        return num1;
      }
      for (int index = obj1; index < num2; ++index)
        num1 = (num1 ^ C2137352139.C3554254475[(int) obj0[index]]) * 3U;
      return num1;
    }

    public static void C3554254475([In] Stream obj0, [In] Stream obj1)
    {
      Debug.Assert(obj0 != null && obj1 != null);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1812594589());
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C543223747());
      byte[] buffer = new byte[4096];
      while (true)
      {
        int count = obj0.Read(buffer, 0, 4096);
        if (count != 0)
          obj1.Write(buffer, 0, count);
        else
          break;
      }
    }

    public static byte[] C3554254475([In] Stream obj0, [In] int obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C453955339());
      byte[] numArray = obj1 >= 0 ? new byte[obj1] : throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3187964512());
      int length = 0;
      int num;
      for (; obj1 > 0; obj1 -= num)
      {
        num = obj0.Read(numArray, length, obj1);
        if (num != 0)
          length += num;
        else
          break;
      }
      if (length == numArray.Length)
        return numArray;
      byte[] destinationArray = new byte[length];
      Array.Copy((Array) numArray, (Array) destinationArray, length);
      return destinationArray;
    }

    public static void C3554254475([In] Stream obj0, [In] byte[] obj1)
    {
      if (obj0 == null)
        Debug.Assert(false);
      else if (obj1 == null)
      {
        Debug.Assert(false);
      }
      else
      {
        Debug.Assert(obj1.Length >= 0);
        if (obj1.Length == 0)
          return;
        obj0.Write(obj1, 0, obj1.Length);
      }
    }

    public static byte[] C2564639436([In] byte[] obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());
      if (obj0.Length == 0)
        return obj0;
      byte[] array;
      using (MemoryStream memoryStream1 = new MemoryStream(obj0, false))
      {
        using (MemoryStream memoryStream2 = new MemoryStream())
        {
          using (GZipStream gzipStream = new GZipStream((Stream) memoryStream2, CompressionMode.Compress))
            C2137352139.C3554254475((Stream) memoryStream1, (Stream) gzipStream);
          array = memoryStream2.ToArray();
        }
      }
      return array;
    }

    public static byte[] C3568589458([In] byte[] obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3372436214());
      if (obj0.Length == 0)
        return obj0;
      byte[] array;
      using (MemoryStream memoryStream1 = new MemoryStream())
      {
        using (MemoryStream memoryStream2 = new MemoryStream(obj0, false))
        {
          using (GZipStream gzipStream = new GZipStream((Stream) memoryStream2, CompressionMode.Decompress))
            C2137352139.C3554254475((Stream) gzipStream, (Stream) memoryStream1);
        }
        array = memoryStream1.ToArray();
      }
      return array;
    }

    public static int C3904355907<C3554254475>([In] C3554254475[] obj0, [In] C3554254475[] obj1) where C3554254475 : IEquatable<C3554254475>
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C4067256894());
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1342839628());
      if (obj1.Length == 0)
        return 0;
      for (int index1 = 0; index1 <= obj0.Length - obj1.Length; ++index1)
      {
        bool flag = true;
        for (int index2 = 0; index2 < obj1.Length; ++index2)
        {
          if (!obj0[index1 + index2].Equals(obj1[index2]))
          {
            flag = false;
            break;
          }
        }
        if (flag)
          return index1;
      }
      return -1;
    }

    public static C3554254475[] C3554254475<C3554254475>([In] C3554254475[] obj0, [In] int obj1, [In] int obj2)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1801730948());
      if (obj1 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      if (obj2 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C655174618());
      if (obj1 + obj2 > obj0.Length)
        throw new ArgumentException();
      C3554254475[] destinationArray = new C3554254475[obj2];
      Array.Copy((Array) obj0, obj1, (Array) destinationArray, 0, obj2);
      return destinationArray;
    }

    public static IEnumerable<C3554254475> C3554254475<C3554254475>(
      [In] IEnumerable<C3554254475> obj0,
      [In] IEnumerable<C3554254475> obj1,
      [In] IEqualityComparer<C3554254475> obj2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      C2137352139.C1255198513<C3554254475> c1255198513 = new C2137352139.C1255198513<C3554254475>(-2)
      {
        C3904355907 = (int) obj0,
        C1908338681 = obj1
      };
      // ISSUE: reference to a compiler-generated field
      c1255198513.C3904355907 = (int) obj2;
      return (IEnumerable<C3554254475>) c1255198513;
    }

    public static IEnumerable<C3554254475> C3904355907<C3554254475>(
      [In] IEnumerable<C3554254475> obj0,
      [In] IEnumerable<C3554254475> obj1,
      [In] IEqualityComparer<C3554254475> obj2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      C2137352139.C3904355907<C3554254475> c3904355907 = new C2137352139.C3904355907<C3554254475>(-2)
      {
        C3904355907 = (int) obj0,
        C1908338681 = obj1
      };
      // ISSUE: reference to a compiler-generated field
      c3904355907.C3904355907 = (int) obj2;
      return (IEnumerable<C3554254475>) c3904355907;
    }

    public static IEnumerable<C3554254475> C1255198513<C3554254475>(
      [In] IEnumerable<C3554254475> obj0,
      [In] IEnumerable<C3554254475> obj1,
      [In] IEqualityComparer<C3554254475> obj2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      C2137352139.C3554254475<C3554254475> c3554254475 = new C2137352139.C3554254475<C3554254475>(-2)
      {
        C3904355907 = (int) obj0,
        C1908338681 = obj1
      };
      // ISSUE: reference to a compiler-generated field
      c3554254475.C3904355907 = (int) obj2;
      return (IEnumerable<C3554254475>) c3554254475;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    internal static void C3554254475([In] object obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
      }
      else
      {
        if (!(obj0 is IDisposable disposable))
          return;
        disposable.Dispose();
      }
    }
  }
}
