// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Player1
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Net.Sockets;
using System.Text;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Player1
  {
    public string Name;
    public TcpClient Client;
    public NetworkStream Stream;
    public bool Finished;

    public Player1() => this.Finished = false;

    public void Send(string Text)
    {
      try
      {
        Console.WriteLine("Skickar till " + this.Name + ": " + Text);
label_3:
        int num = 27;
        byte[] bytes;
        while (true)
        {
          switch (num ^ 44)
          {
            case 51:
              Text += "\0";
              num = 25;
              continue;
            case 52:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.\u002Ector);
              num = 24;
              continue;
            case 53:
              bytes = Encoding.UTF8.GetBytes(Text);
              num = 26;
              continue;
            case 54:
              this.Stream.Write(bytes, 0, bytes.Length);
              num = 20;
              continue;
            case 55:
              num = 31;
              continue;
            case 56:
              num = 21;
              continue;
            case 57:
              goto label_18;
            default:
              goto label_3;
          }
        }
label_18:;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
label_13:
        int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
        while (true)
        {
          switch ((num1 ^ 46) + 49)
          {
            case 0:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Player1.Recieve);
              num1 = -31;
              continue;
            case 1:
              num1 = -1;
              continue;
            case 2:
              int num2 = (int) Interaction.MsgBox((object) ("Gick inte att skicka datat till " + this.Name + "\r\n" + exception.Message));
              num1 = -4;
              continue;
            case 3:
              ProjectData.ClearProjectError();
              num1 = -3;
              continue;
            case 4:
              goto label_10;
            default:
              goto label_13;
          }
        }
label_10:;
      }
    }

    public string Recieve()
    {
      string str;
      try
      {
        byte[] numArray = new byte[checked (this.Client.ReceiveBufferSize + 1)];
label_5:
        int num1 = 25;
        int num2 = -5;
        while (true)
        {
          switch ((num2 ^ 44) + 44)
          {
            case 0:
              goto label_5;
            case 1:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.Recieve);
              num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
              continue;
            case 2:
              switch (num1)
              {
                case 50:
                  num1 = 31;
                  goto label_2;
                case 51:
                  str = Encoding.UTF8.GetString(numArray).Trim(new char[1]);
                  num1 = 27;
                  goto label_2;
                case 52:
                  Console.WriteLine(this.Name + " säger: " + Encoding.UTF8.GetString(numArray).Trim(new char[1]));
                  num1 = 30;
                  goto label_2;
                case 53:
                  this.Stream.Read(numArray, 0, this.Client.ReceiveBufferSize);
                  num1 = 24;
                  goto label_2;
                case 54:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.Send);
                  num1 = 26;
                  goto label_2;
                case 55:
                  goto label_15;
                default:
                  num2 = -8;
                  continue;
              }
            case 3:
label_2:
              num1 ^= 44;
              break;
          }
          num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = "";
        ProjectData.ClearProjectError();
      }
label_15:
      return str;
    }

    public void SendHandshake()
    {
label_4:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(53);
      int num2 = 10;
      while (true)
      {
        switch (num2 ^ 50)
        {
          case 53:
            goto label_4;
          case 54:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Player1.SendHandshake);
            num2 = 4;
            continue;
          case 55:
            string Text;
            switch (num1 + 47)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Player1.Send);
                num1 = -29;
                goto label_1;
              case 1:
                this.Send(Text);
                num1 = -26;
                goto label_1;
              case 2:
                Text = "<?xml version=\"1.0\"?><!DOCTYPE cross-domain-policy SYSTEM \"/xml/dtds/cross-domain-policy.dtd\"><cross-domain-policy><site-control permitted-cross-domain-policies=\"all\"/><allow-access-from domain=\"*\" to-ports=\"*\" /></cross-domain-policy>";
                num1 = -32;
                goto label_1;
              case 3:
                num1 = -25;
                goto label_1;
              case 4:
                goto label_10;
              default:
                num2 = 7;
                continue;
            }
          case 56:
label_1:
            num1 ^= 50;
            break;
        }
        num2 = 5;
      }
label_10:;
    }
  }
}
