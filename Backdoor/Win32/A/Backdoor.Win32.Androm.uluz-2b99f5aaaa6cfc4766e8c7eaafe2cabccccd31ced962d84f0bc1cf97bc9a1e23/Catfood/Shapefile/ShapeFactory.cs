// Decompiled with JetBrains decompiler
// Type: Catfood.Shapefile.ShapeFactory
// Assembly: 太城hضd氏bTنH, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FB883643-FAF4-44BB-B4FC-F1B0FC1059A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Backdoor.Win32.Androm.uluz-2b99f5aaaa6cfc4766e8c7eaafe2cabccccd31ced962d84f0bc1cf97bc9a1e23.exe

using System;
using System.Collections.Specialized;
using System.Data;

namespace Catfood.Shapefile
{
  internal static class ShapeFactory
  {
    public static Shape ParseShape(
      byte[] shapeData,
      StringDictionary metadata,
      IDataRecord dataRecord)
    {
      if (shapeData == null)
        throw new ArgumentNullException(nameof (shapeData));
      int recordNumber = shapeData.Length >= 12 ? EndianBitConverter.ToInt32(shapeData, 0, ProvidedOrder.Big) : throw new ArgumentException("shapeData must be at least 12 bytes long");
      int int32_1 = EndianBitConverter.ToInt32(shapeData, 4, ProvidedOrder.Big);
      ShapeType int32_2 = (ShapeType) EndianBitConverter.ToInt32(shapeData, 8, ProvidedOrder.Little);
      if (shapeData.Length != int32_1 * 2 + 8)
        throw new InvalidOperationException("Shape data length does not match shape header length");
      Shape shape;
      switch (int32_2)
      {
        case ShapeType.Null:
          shape = new Shape(int32_2, recordNumber, metadata, dataRecord);
          break;
        case ShapeType.Point:
          shape = (Shape) new ShapePoint(recordNumber, metadata, dataRecord, shapeData);
          break;
        case ShapeType.PolyLine:
          shape = (Shape) new ShapePolyLine(recordNumber, metadata, dataRecord, shapeData);
          break;
        case ShapeType.Polygon:
          shape = (Shape) new ShapePolygon(recordNumber, metadata, dataRecord, shapeData);
          break;
        case ShapeType.MultiPoint:
          shape = (Shape) new ShapeMultiPoint(recordNumber, metadata, dataRecord, shapeData);
          break;
        case ShapeType.PolyLineM:
          shape = (Shape) new ShapePolyLineM(recordNumber, metadata, dataRecord, shapeData);
          break;
        default:
          throw new NotImplementedException(string.Format("Shapetype {0} is not implemented", (object) int32_2));
      }
      return shape;
    }
  }
}
