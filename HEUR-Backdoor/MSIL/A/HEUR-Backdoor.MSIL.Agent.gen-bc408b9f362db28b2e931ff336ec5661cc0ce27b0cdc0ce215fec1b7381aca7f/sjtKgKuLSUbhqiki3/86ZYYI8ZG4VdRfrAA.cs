// Decompiled with JetBrains decompiler
// Type: sjtKgKuLSUbhqiki3.86ZYYI8ZG4VdRfrAA
// Assembly: bouNMGxVgGi4SRgWO, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60
// MVID: 3F6A2AF1-3CCB-4F01-AA36-FA31C2E4CFE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Agent.gen-bc408b9f362db28b2e931ff336ec5661cc0ce27b0cdc0ce215fec1b7381aca7f.exe

using \u0034yfeqGrzJG6yjGFYs;
using fZ13IzbFFLuZAsd83;
using LnzgqduGr5G7V9Evt;
using Microsoft.TemplateEngine.Abstractions;
using Microsoft.TemplateEngine.Abstractions.Mount;
using Microsoft.TemplateEngine.Core;
using Microsoft.TemplateEngine.Core.Contracts;
using Microsoft.TemplateEngine.Core.Operations;
using Newtonsoft.Json.Linq;
using PbFY3s3wSVKMQCLwl;
using sotdOA5olripUMXuF;
using System;
using System.Collections.Generic;
using yANFBEhXE4b0deTZD;
using zpdIRWbRp5AiZJa82;

namespace sjtKgKuLSUbhqiki3
{
  public class \u00386ZYYI8ZG4VdRfrAA : IOperationConfig, IIdentifiedComponent
  {
    public string \u0034mW9NWMO8XFeBwm73 => Conditional.OperationName;

    public Guid KI062LBtMQJfc5Pzx => new Guid("3E8BCBF0-D631-45BA-A12D-FBF1DE03AA38");

    public IEnumerable<IOperationProvider> k0XPJjcVEj0HrCsNj(
      JObject I0pjb71sLwvQQ01XY,
      IDirectory GZrZFpO8SZ8eNQimI)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      UzXVqDT5vPndVJFSS.aKpmr1GhXIlevTFXC kpmr1GhXilevTfxc = new UzXVqDT5vPndVJFSS.aKpmr1GhXIlevTFXC(-2);
      // ISSUE: reference to a compiler-generated field
      ((\u00386ZYYI8ZG4VdRfrAA.xGJtcniplNYyn6psF) kpmr1GhXilevTfxc).e6gmgRB3IJYSjtBkO = I0pjb71sLwvQQ01XY;
      return (IEnumerable<IOperationProvider>) kpmr1GhXilevTfxc;
    }

    public static IReadOnlyList<IOperationProvider> YYGEGbmpaJmhpJz4c(
      ConditionalType IGsD6NBnr5CNEm5A2,
      string L106aBaAkZAQI8NmM,
      bool ZzXy3Trw66vzqvwah,
      bool l4Dc8o5wSivwJgkCM,
      string T1rQ616DCBo2TqSLl)
    {
      List<IOperationProvider> ioperationProviderList;
      switch (IGsD6NBnr5CNEm5A2 - 1)
      {
        case 0:
          ioperationProviderList = O6Ma8QY5zD4t4vgcO.OqJgSYcgLyn55WekB("<!--", "-->");
          break;
        case 1:
          ioperationProviderList = O6Ma8QY5zD4t4vgcO.OqJgSYcgLyn55WekB("@*", "*@");
          break;
        case 2:
          ioperationProviderList = \u00386ZYYI8ZG4VdRfrAA.WuB5uZY5ddYftT7hF(L106aBaAkZAQI8NmM, ZzXy3Trw66vzqvwah, l4Dc8o5wSivwJgkCM, T1rQ616DCBo2TqSLl);
          break;
        case 3:
          ioperationProviderList = SVPmz1Ugq6nA9Ezr5.MwotDnDYo710S0Zw5("//");
          break;
        case 4:
          ioperationProviderList = O6Ma8QY5zD4t4vgcO.OqJgSYcgLyn55WekB("/*", "*/");
          break;
        case 5:
          ioperationProviderList = SVPmz1Ugq6nA9Ezr5.wqWSbzTVw8ps93wbK("#", new yJs6SC3vp2iu7d02O()
          {
            kfXjEroR7Qu4iFPT6 = string.Empty
          }, new N7BsYobQziYYHe4jY());
          break;
        case 6:
          ioperationProviderList = SVPmz1Ugq6nA9Ezr5.MwotDnDYo710S0Zw5("rem ");
          break;
        case 7:
          ioperationProviderList = new List<IOperationProvider>();
          ioperationProviderList.AddRange((IEnumerable<IOperationProvider>) \u00386ZYYI8ZG4VdRfrAA.m3GtQNYU9HwEKGFqA(L106aBaAkZAQI8NmM, ZzXy3Trw66vzqvwah, l4Dc8o5wSivwJgkCM, "msbuild-conditional"));
          ioperationProviderList.AddRange((IEnumerable<IOperationProvider>) O6Ma8QY5zD4t4vgcO.OqJgSYcgLyn55WekB("<!--", "-->"));
          break;
        case 8:
          ioperationProviderList = SVPmz1Ugq6nA9Ezr5.MwotDnDYo710S0Zw5("-#");
          break;
        case 9:
          ioperationProviderList = O6Ma8QY5zD4t4vgcO.OqJgSYcgLyn55WekB("{/*", "*/}");
          break;
        case 10:
          ioperationProviderList = SVPmz1Ugq6nA9Ezr5.wqWSbzTVw8ps93wbK("", new yJs6SC3vp2iu7d02O()
          {
            XEvS2uS6AiSAWBz32 = (IReadOnlyList<string>) new string[1]
            {
              "If"
            },
            wxPjXqjm26lCHzGVG = (IReadOnlyList<string>) new string[1]
            {
              "ElseIf"
            },
            ttD5RCqxmdlg45PcF = (IReadOnlyList<string>) new string[1]
            {
              "Else"
            },
            EcdODbGLj80mSdNZe = (IReadOnlyList<string>) new string[1]
            {
              "End If"
            },
            kfXjEroR7Qu4iFPT6 = "#"
          }, new N7BsYobQziYYHe4jY()
          {
            NiJSkdODUJpxIBvEw = "VB",
            Nsv35rd7ltn4azif9 = true
          });
          break;
        default:
          throw new Exception(string.Format("Unrecognized conditional type {0}", (object) IGsD6NBnr5CNEm5A2));
      }
      return (IReadOnlyList<IOperationProvider>) ioperationProviderList;
    }

    public static List<IOperationProvider> m3GtQNYU9HwEKGFqA(
      string qk1RWYS8Ro7PfA4e5,
      bool r0Tho1TPIcwitqxTq,
      bool al9nK8vKjwjJgtYc7,
      string HNB46pVhIx47g4oDJ)
    {
      ConditionEvaluator conditionEvaluator = HM7fHG9SqSJPjYb3N.bEgiIKupMFMDdf04i(qk1RWYS8Ro7PfA4e5);
      IOperationProvider ioperationProvider = (IOperationProvider) new InlineMarkupConditional(new MarkupTokens(TokenConfigExtensions.TokenConfig("<"), TokenConfigExtensions.TokenConfig("</"), TokenConfigExtensions.TokenConfig(">"), TokenConfigExtensions.TokenConfig("/>"), TokenConfigExtensions.TokenConfig("Condition=\""), TokenConfigExtensions.TokenConfig("\"")), r0Tho1TPIcwitqxTq, al9nK8vKjwjJgtYc7, conditionEvaluator, "$({0})", HNB46pVhIx47g4oDJ, true);
      List<IOperationProvider> ioperationProviderList = new List<IOperationProvider>();
      ioperationProviderList.Add(ioperationProvider);
      return ioperationProviderList;
    }

    public static List<IOperationProvider> WuB5uZY5ddYftT7hF(
      string _param0,
      bool FBR9l7fGDrVQK90Vr,
      bool hP5J9J2Ce3moHhvTB,
      string Kz0zS1cZspfw9pmz3)
    {
      yJs6SC3vp2iu7d02O js6Sc3vp2iu7d02O = new yJs6SC3vp2iu7d02O();
      List<ITokenConfig> itokenConfigList1 = new List<ITokenConfig>();
      List<ITokenConfig> itokenConfigList2 = new List<ITokenConfig>();
      List<ITokenConfig> itokenConfigList3 = new List<ITokenConfig>();
      List<ITokenConfig> itokenConfigList4 = new List<ITokenConfig>();
      foreach (string str in (IEnumerable<string>) js6Sc3vp2iu7d02O.XEvS2uS6AiSAWBz32)
        itokenConfigList1.Add(TokenConfigExtensions.TokenConfig(js6Sc3vp2iu7d02O.kfXjEroR7Qu4iFPT6 + str));
      foreach (string str in (IEnumerable<string>) js6Sc3vp2iu7d02O.wxPjXqjm26lCHzGVG)
        itokenConfigList2.Add(TokenConfigExtensions.TokenConfig(js6Sc3vp2iu7d02O.kfXjEroR7Qu4iFPT6 + str));
      foreach (string str in (IEnumerable<string>) js6Sc3vp2iu7d02O.ttD5RCqxmdlg45PcF)
        itokenConfigList3.Add(TokenConfigExtensions.TokenConfig(js6Sc3vp2iu7d02O.kfXjEroR7Qu4iFPT6 + str));
      foreach (string str in (IEnumerable<string>) js6Sc3vp2iu7d02O.EcdODbGLj80mSdNZe)
        itokenConfigList4.Add(TokenConfigExtensions.TokenConfig(js6Sc3vp2iu7d02O.kfXjEroR7Qu4iFPT6 + str));
      ConditionalTokens conditionalTokens = new ConditionalTokens();
      conditionalTokens.IfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList1;
      conditionalTokens.ElseTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList3;
      conditionalTokens.ElseIfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList2;
      conditionalTokens.EndIfTokens = (IReadOnlyList<ITokenConfig>) itokenConfigList4;
      ConditionEvaluator conditionEvaluator = HM7fHG9SqSJPjYb3N.bEgiIKupMFMDdf04i(_param0);
      IOperationProvider ioperationProvider = (IOperationProvider) new Conditional(conditionalTokens, FBR9l7fGDrVQK90Vr, hP5J9J2Ce3moHhvTB, conditionEvaluator, Kz0zS1cZspfw9pmz3, true);
      List<IOperationProvider> ioperationProviderList = new List<IOperationProvider>();
      ioperationProviderList.Add(ioperationProvider);
      return ioperationProviderList;
    }
  }
}
