// Decompiled with JetBrains decompiler
// Type: ICSharpCode.SharpZipLib.Zip.ExtendedUnixData
// Assembly: TheBot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E6D888C-8D83-46CE-907A-18F99381A0FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.an-523fbc7f8f4234f5b7e59adb51579626a43c55d41ac674e758828414fbdebd93.exe

using System;
using System.IO;

namespace ICSharpCode.SharpZipLib.Zip
{
  public class ExtendedUnixData : ITaggedData
  {
    private ExtendedUnixData.Flags \uE003;
    private DateTime \uE002 = new DateTime(1970, 1, 1);
    private DateTime \uE001 = new DateTime(1970, 1, 1);
    private DateTime \uE000 = new DateTime(1970, 1, 1);

    public short TagID => 21589;

    public void SetData(byte[] data, int index, int count)
    {
      using (MemoryStream memoryStream = new MemoryStream(data, index, count, false))
      {
        using (\uE00B obj = new \uE00B((Stream) memoryStream))
        {
          this.\uE003 = (ExtendedUnixData.Flags) obj.ReadByte();
          if ((this.\uE003 & ExtendedUnixData.Flags.ModificationTime) != (ExtendedUnixData.Flags) 0 && count >= 5)
          {
            int seconds = obj.\uE005();
            this.\uE002 = (new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime() + new TimeSpan(0, 0, 0, seconds, 0)).ToLocalTime();
          }
          if ((this.\uE003 & ExtendedUnixData.Flags.AccessTime) != (ExtendedUnixData.Flags) 0)
          {
            int seconds = obj.\uE005();
            this.\uE001 = (new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime() + new TimeSpan(0, 0, 0, seconds, 0)).ToLocalTime();
          }
          if ((this.\uE003 & ExtendedUnixData.Flags.CreateTime) == (ExtendedUnixData.Flags) 0)
            return;
          int seconds1 = obj.\uE005();
          this.\uE000 = (new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime() + new TimeSpan(0, 0, 0, seconds1, 0)).ToLocalTime();
        }
      }
    }

    public byte[] GetData()
    {
      using (MemoryStream memoryStream = new MemoryStream())
      {
        using (\uE00B obj = new \uE00B((Stream) memoryStream))
        {
          obj.\uE000 = false;
          obj.WriteByte((byte) this.\uE003);
          if ((this.\uE003 & ExtendedUnixData.Flags.ModificationTime) != (ExtendedUnixData.Flags) 0)
          {
            int totalSeconds = (int) (this.\uE002.ToUniversalTime() - new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime()).TotalSeconds;
            obj.\uE002(totalSeconds);
          }
          if ((this.\uE003 & ExtendedUnixData.Flags.AccessTime) != (ExtendedUnixData.Flags) 0)
          {
            int totalSeconds = (int) (this.\uE001.ToUniversalTime() - new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime()).TotalSeconds;
            obj.\uE002(totalSeconds);
          }
          if ((this.\uE003 & ExtendedUnixData.Flags.CreateTime) != (ExtendedUnixData.Flags) 0)
          {
            int totalSeconds = (int) (this.\uE000.ToUniversalTime() - new DateTime(1970, 1, 1, 0, 0, 0).ToUniversalTime()).TotalSeconds;
            obj.\uE002(totalSeconds);
          }
          return memoryStream.ToArray();
        }
      }
    }

    public static bool IsValidValue(DateTime value) => value >= new DateTime(1901, 12, 13, 20, 45, 52) || value <= new DateTime(2038, 1, 19, 3, 14, 7);

    public DateTime ModificationTime
    {
      get => this.\uE002;
      set
      {
        if (!ExtendedUnixData.IsValidValue(value))
          throw new ArgumentOutOfRangeException(\uE01B.\uE000("\uEA14\uEA03\uEA0E\uEA17\uEA07", 60002));
        this.\uE003 |= ExtendedUnixData.Flags.ModificationTime;
        this.\uE002 = value;
      }
    }

    public DateTime AccessTime
    {
      get => this.\uE001;
      set
      {
        if (!ExtendedUnixData.IsValidValue(value))
          throw new ArgumentOutOfRangeException(\uE01B.\uE000("\uEA14\uEA03\uEA0E\uEA17\uEA07", 60002));
        this.\uE003 |= ExtendedUnixData.Flags.AccessTime;
        this.\uE001 = value;
      }
    }

    public DateTime CreateTime
    {
      get => this.\uE000;
      set
      {
        if (!ExtendedUnixData.IsValidValue(value))
          throw new ArgumentOutOfRangeException(\uE01B.\uE000("\uEA14\uEA03\uEA0E\uEA17\uEA07", 60002));
        this.\uE003 |= ExtendedUnixData.Flags.CreateTime;
        this.\uE000 = value;
      }
    }

    private ExtendedUnixData.Flags \uE000
    {
      get => this.\uE003;
      set => this.\uE003 = value;
    }

    [System.Flags]
    public enum Flags : byte
    {
      ModificationTime = 1,
      AccessTime = 2,
      CreateTime = 4,
    }
  }
}
