// Decompiled with JetBrains decompiler
// Type: ‍⁯⁭⁮⁪‬⁮‌‬‪‮‬‬‮‌⁭‫⁯‎⁪⁯⁫‪⁭‌‮‎⁪⁬⁭‌‌‮‬‏‏‬‬‬‪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;

public abstract class \u200D⁯⁭⁮⁪‬⁮‌‬‪‮‬‬‮‌⁭‫⁯‎⁪⁯⁫‪⁭‌‮‎⁪⁬⁭‌‌‮‬‏‏‬‬‬‪‮
{
  public static byte[] \u206D‫⁮‫⁮‭‏‬​⁬‮‫⁯⁯‫‌‮‭‌‏‪⁫⁭⁯⁬⁮⁪‭⁮‍⁫‪‭‪‮⁭⁬⁯‏‬‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _param1,
    Stream _param2)
  {
    byte[] buffer1 = new byte[48];
    ((Random) _param0.\u206F⁭⁯⁪‭‫⁭​⁬‌⁫⁯‌‎‎⁬⁪⁬⁬‭⁯⁬⁯‎⁬‬‫​⁪‭‪‎‍​⁭⁯‌⁪‌⁮‮).NextBytes(buffer1);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(_param0.\u200D‮⁬‎‍‎​‍‍​⁪​‫⁮​‪⁬⁯⁪‍‏⁫‏‮‪‮⁭⁪‬⁮‍⁭⁫⁪‫‏⁫‮‌‎‮, buffer1, 0);
    \u200F‬‏‪⁬‎‫‪‏⁭⁫​‪​‍‏⁭‭⁬​⁭‮‍⁯‏‪‏‎‌‍‍‏​‍⁪⁯‬‮⁮⁬‮ obj = new \u200F‬‏‪⁬‎‫‪‏⁭⁫​‪​‍‏⁭‭⁬​⁭‮‍⁯‏‪‏‎‌‍‍‏​‍⁪⁯‬‮⁮⁬‮((\u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮) new \u202A‫⁫⁮‏‏‌⁭‏⁫‌⁫⁫⁮‮⁬​‬‭‮‪⁯⁮​⁯‭‎⁫⁭‫‪‪‪‪‬‏‌‎⁯‮‮());
    obj.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮((\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) _param1, _param0.\u206F⁭⁯⁪‭‫⁭​⁬‌⁫⁯‌‎‎⁬⁪⁬⁬‭⁯⁬⁯‎⁬‬‫​⁪‭‪‎‍​⁭⁯‌⁪‌⁮‮));
    try
    {
      byte[] buffer2 = obj.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(buffer1, 0, buffer1.Length);
      if (\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200E⁯‮‍​⁪⁬‫‫‏⁯⁪‍‬⁬⁮‭‬‏‍‍‫⁫⁪⁭⁯‬‭‪⁮⁯‌‮‌‍‎⁫‫‌‭‮(_param0))
        _param2.Write(buffer2, 0, buffer2.Length);
      else
        \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202B‪⁮‪⁮‌​‎⁫‍⁯‬​⁪⁮‮‬‭​‌‮⁮​⁮‏‮⁭‮⁫⁮⁭‎‪‎‏‪⁭‌‌‮‮(buffer2, _param2);
    }
    catch (\u206F⁭‭‫‎‍‏⁯‬‍‌​⁭⁮‬⁪⁬⁮⁯‪⁪‏‬‭⁬⁫‪​‬‬‎⁪‪⁪‭‏‫‬⁪‏‮ ex)
    {
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80, (Exception) ex);
    }
    return buffer1;
  }

  public static byte[] \u206F⁭⁪‌⁯⁪‫​‮‏⁯⁬‌⁮‍⁯⁪​​‍‌​‫‫‎​‏⁬⁪⁬⁮‭‭‍‎⁯⁯⁭​‭‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param0,
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ _param1,
    byte[] _param2)
  {
    \u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮ obj1 = _param0.\u200D‮⁬‎‍‎​‍‍​⁪​‫⁮​‪⁬⁯⁪‍‏⁫‏‮‪‮⁭⁪‬⁮‍⁭⁫⁪‫‏⁫‮‌‎‮;
    bool flag = false;
    byte[] buffer = new byte[48];
    ((Random) _param0.\u206F⁭⁯⁪‭‫⁭​⁬‌⁫⁯‌‎‎⁬⁪⁬⁬‭⁯⁬⁯‎⁬‬‫​⁪‭‪‎‍​⁭⁯‌⁪‌⁮‮).NextBytes(buffer);
    byte[] numArray = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(buffer);
    try
    {
      \u200F‬‏‪⁬‎‫‪‏⁭⁫​‪​‍‏⁭‭⁬​⁭‮‍⁯‏‪‏‎‌‍‍‏​‍⁪⁯‬‮⁮⁬‮ obj2 = new \u200F‬‏‪⁬‎‫‪‏⁭⁫​‪​‍‏⁭‭⁬​⁭‮‍⁯‏‪‏‎‌‍‍‏​‍⁪⁯‬‮⁮⁬‮((\u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮) new \u202A‫⁫⁮‏‏‌⁭‏⁫‌⁫⁫⁮‮⁬​‬‭‮‪⁯⁮​⁯‭‎⁫⁭‫‪‪‪‪‬‏‌‎⁯‮‮(), buffer);
      obj2.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(false, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮((\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) _param1, _param0.\u206F⁭⁯⁪‭‫⁭​⁬‌⁫⁯‌‎‎⁬⁪⁬⁬‭⁯⁬⁯‎⁬‬‫​⁪‭‪‎‍​⁭⁯‌⁪‌⁮‮));
      numArray = obj2.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param2, 0, _param2.Length);
    }
    catch (Exception ex)
    {
    }
    if (!flag || !obj1.\u200C‪‮‏​⁪‭‏⁪‫⁯‪‫‭⁫‪⁫⁮‎​⁫⁯‬‮‮⁫‬⁮‍⁯‮‍‭‌⁭⁭‍‌‬⁬‮(\u206F⁯‮‏‮‫‪‮⁬‬⁪‭‏‪‪‭⁫‌‫⁫‪​‮⁭‮‬⁮⁯‫‌‫‌⁯⁬⁬⁯⁪⁭⁭‪‮.\u206D⁭⁬⁯‬‏‏⁭‍‌​‎⁬⁯​‭⁬⁪‍⁯⁪‭⁭⁫⁫‪‭‬⁪⁬‌‏‪⁮‪⁫⁮‎‎⁬‮))
    {
      int num1 = obj1.\u206B‏⁭‫‭‫⁬⁭‬‮⁮​⁮‭⁪‭‎​⁪⁯‌⁪‬‮‫⁮⁮‪‮‌⁪‪‮⁫‎​⁫‮⁭⁭‮ ^ (int) numArray[0] & (int) byte.MaxValue | obj1.\u202E‍⁬‪‪⁬⁭⁫⁫⁫‬‭⁭‎‬​⁮​‮‪​‎‎‪⁫‎‌⁪⁫‮​‏⁭⁯‫⁬⁭​⁪‫‮ ^ (int) numArray[1] & (int) byte.MaxValue;
      int num2 = num1 | num1 >> 1;
      int num3 = num2 | num2 >> 2;
      int num4 = ~(((num3 | num3 >> 4) & 1) - 1);
      for (int index = 0; index < 48; ++index)
        numArray[index] = (byte) ((int) numArray[index] & ~num4 | (int) buffer[index] & num4);
    }
    return numArray;
  }
}
