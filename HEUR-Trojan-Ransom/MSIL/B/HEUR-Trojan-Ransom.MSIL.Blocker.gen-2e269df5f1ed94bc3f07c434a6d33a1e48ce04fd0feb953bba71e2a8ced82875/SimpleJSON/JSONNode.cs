// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -547809829;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -846993397)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -182293488 ^ -1936280912;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 402563339;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 66370968)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1175322250 ^ 596524706;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -1629234288;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -202068503)) % 4U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * 1500416261 ^ 1473816919;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1464839988 ^ 1675722957;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 720527012;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 998242367)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * 2138409119 ^ 1491033609;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 53836082;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 91027464)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -899725775 ^ -1881176470;
            continue;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * 1406619072 ^ 463349617;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1193602580;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1544283547)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1609268963 ^ -392561684;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1244996585 ^ 2121825243;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -469964062;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1794056836)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1644776504 ^ 428446759;
            continue;
          case 3:
            num1 = (int) num2 * -1214731996 ^ -1028816963;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -293975148;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1091706800)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2109716137 ^ 906480862;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
label_2:
        int num1 = 1208000062;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2125841621)) % 6U)
          {
            case 0:
            case 3:
              goto label_2;
            case 1:
              num1 = (int) num2 * -1649120707 ^ -1933787124;
              continue;
            case 2:
              goto label_7;
            case 4:
              num1 = 1196890350;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_7:
        yield break;
label_3:
        yield break;
label_6:;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 999414634;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 70232955)) % 4U)
          {
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1185796817 ^ 172671950;
              continue;
            case 2:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 127298915 ^ 397947001;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1990464881;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -623959249)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1746434513 ^ -1414857238;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -949350031;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -457744342)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 289386789 ^ 2088932548;
              continue;
            case 1:
              result = 0;
              num1 = (int) num2 * -1512886651 ^ 813412740;
              continue;
            case 2:
              num1 = (int) num2 * -1196139638 ^ -1713138196;
              continue;
            case 3:
              asInt = result;
              num1 = (int) num2 * -1967485871 ^ -838963307;
              continue;
            case 4:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -156878198 ^ 1051011049;
              continue;
            case 5:
              goto label_1;
            case 6:
              asInt = 0;
              num1 = -1563845982;
              continue;
            case 8:
              int num3 = flag ? -340000373 : (num3 = -372715797);
              num1 = num3 ^ (int) num2 * 179610014;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -2144549420;
        float result;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1199577433)) % 8U)
          {
            case 0:
              int num3 = flag ? -1775214314 : (num3 = -582569824);
              num1 = num3 ^ (int) num2 * 445635060;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -718309793 ^ 663983478;
              continue;
            case 3:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E⁫‎⁯‪‭‪‫‪‫‍‪‮‏⁬⁬‬⁯‭‬⁯‬‏‌‭‮‍‬‪‬⁪​‮⁬‪⁮⁮‌‍⁭‮(), out result);
              num1 = (int) num2 * -226863804 ^ -2000445877;
              continue;
            case 4:
              num1 = (int) num2 * -982128965 ^ 1967152537;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * 47633245 ^ -1255524813;
              continue;
            case 7:
              asFloat = 0.0f;
              num1 = -975678813;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -209077101;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1964488803)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -196438229 ^ 1208602813;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1290994227 ^ -1721787898;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -1697099355;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -218932809)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 548438965 ^ -219090254;
              continue;
            case 3:
              int num3 = flag ? 346036707 : (num3 = 1238277858);
              num1 = num3 ^ (int) num2 * 597770020;
              continue;
            case 4:
              asDouble = result;
              num1 = (int) num2 * -1423915915 ^ -1984868516;
              continue;
            case 5:
              num1 = (int) num2 * -834190168 ^ -940991756;
              continue;
            case 6:
              asDouble = 0.0;
              num1 = -1197163289;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1707051794;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1611839097)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1335214104 ^ 1635968632;
              continue;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1005317866 ^ 458405841;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1923460722;
        bool result;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -370336675)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 1126950914 ^ -1877817838;
              continue;
            case 1:
              result = false;
              num1 = (int) num2 * -1724178854 ^ 281121931;
              continue;
            case 3:
              num1 = (int) num2 * -168310145 ^ 740115847;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * -269995384 ^ 1976410674;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = !flag ? 292212392 : (num3 = 1345803003);
              num1 = num3 ^ (int) num2 * -1774595747;
              continue;
            case 7:
              asBool = !JSONNode.\u206E‮‌⁬⁭‏‪⁬‌⁫‮⁫‮⁮⁭‏⁪‬‌⁮⁫‍​‪⁬‬‫‫‏⁮⁮‫‫⁯‌‬⁭‎⁬‍‮(this.Value);
              num1 = -976022504;
              continue;
            case 8:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -2017395668 ^ -1957912216;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1426122132;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1763637671)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -919516997;
              continue;
            case 2:
              num1 = (int) num2 * 479837233 ^ -904460493;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1867264722;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -824325983)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -446364781 ^ 776658615;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject => this as JSONClass;

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -522918103;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1294626521)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 1267262551 ^ 208830434;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            str2 = d.Value;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -1362357642;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -221554611;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -186885601)) % 7U)
        {
          case 0:
            int num4 = !flag2 ? 1724682583 : (num4 = 1926632678);
            num1 = num4 ^ (int) num2 * 309113519;
            continue;
          case 1:
            flag1 = true;
            num1 = (int) num2 * 1671219966 ^ 989157873;
            continue;
          case 2:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 896389318 ^ -558504496;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag1 = (object) a == b;
            num1 = -182606235;
            continue;
          case 6:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        flag2 = num3 != 0;
        num1 = -1293287682;
      }
label_11:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = -169246814;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -845251109)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1938041360 ^ -312277852;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u202C⁮⁬‌⁭‮‎‌‎⁮‮⁯‪‎⁮⁪‍‬‫​‎⁪‪‏‌⁮‫‌‮‌⁬‬‍‍‏⁭⁭‮⁮‏‮();
label_1:
      int num1 = -478564228;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1145825289)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -837373009 ^ 844834023;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -2114147470;
      string str1;
      string str2;
      char ch1;
      char ch2;
      string str3;
      char ch3;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -624882025)) % 33U)
        {
          case 0:
            num1 = (int) num3 * -558588300 ^ -835422281;
            continue;
          case 1:
label_30:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\b");
            num1 = -370541233;
            continue;
          case 2:
            num1 = (int) num3 * -1324491479 ^ -1735901618;
            continue;
          case 3:
label_32:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\r");
            num1 = -370541233;
            continue;
          case 4:
label_14:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\f");
            num1 = -2066204311;
            continue;
          case 5:
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(str3, num2);
            num1 = -406213828;
            continue;
          case 6:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u202D‬‫‮‭‏⁫⁯⁯⁫‪⁮‮⁭‭‮‫‪⁮‭‏‏⁯‏‭‮‍‬‌‍‮‫⁫⁭‍‬‪‫⁪‎‮(str3) ? -800535030 : (num4 = -1522950792);
            continue;
          case 7:
            str3 = aText;
            num1 = (int) num3 * -361109243 ^ 1490154865;
            continue;
          case 8:
            num1 = (int) num3 * -2094547988 ^ 240269823;
            continue;
          case 9:
            ch2 = ch1;
            num1 = (int) num3 * 1856886078 ^ -2010898781;
            continue;
          case 10:
            num1 = (int) num3 * -1691849659 ^ 1514455063;
            continue;
          case 11:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\\\");
            num1 = -876401983;
            continue;
          case 12:
            str1 = "";
            num1 = (int) num3 * 433340806 ^ -592658144;
            continue;
          case 13:
            goto label_1;
          case 14:
            num1 = (int) num3 * 1268499044 ^ -956586377;
            continue;
          case 15:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\\"");
            num1 = -1014524589;
            continue;
          case 16:
            num1 = (int) num3 * -1421624835 ^ -1125533248;
            continue;
          case 17:
            num1 = (int) num3 * 1936253646 ^ -452215718;
            continue;
          case 19:
            num1 = (int) num3 * 212037574 ^ -1954450020;
            continue;
          case 20:
            num1 = (int) num3 * 513841362 ^ -2011314773;
            continue;
          case 21:
            int num5;
            num1 = num5 = ch3 == '"' ? -1277113645 : (num5 = -402081490);
            continue;
          case 22:
            num2 = 0;
            num1 = (int) num3 * 985924700 ^ -178657887;
            continue;
          case 23:
            num1 = (int) num3 * 1173276807 ^ -77956038;
            continue;
          case 24:
label_34:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\t");
            num1 = -1041754994;
            continue;
          case 25:
            str2 = str1;
            num1 = (int) num3 * -1203452823 ^ 434831593;
            continue;
          case 26:
label_23:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, ch1.ToString());
            num1 = -1736376396;
            continue;
          case 27:
label_6:
            str1 = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, "\\n");
            num1 = -831882187;
            continue;
          case 28:
            int num6;
            num1 = num6 = ch3 != '\\' ? -2040009258 : (num6 = -287288184);
            continue;
          case 29:
            num1 = (int) num3 * 1763191323 ^ 2062365518;
            continue;
          case 30:
            switch (ch3)
            {
              case '\b':
                goto label_30;
              case '\t':
                goto label_34;
              case '\n':
                goto label_6;
              case '\v':
                goto label_23;
              case '\f':
                goto label_14;
              case '\r':
                goto label_32;
              default:
                num1 = (int) num3 * -1091406622 ^ 263727498;
                continue;
            }
          case 31:
            ++num2;
            num1 = -1104134984;
            continue;
          case 32:
            ch3 = ch2;
            num1 = (int) num3 * 1324499522 ^ 2038556256;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
      int num1 = 0;
label_1:
      int num2 = 399463353;
      string aItem;
      string aKey;
      char ch1;
      bool flag1;
      bool flag2;
      char ch2;
      char ch3;
      bool flag3;
      bool flag4;
      char ch4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      bool flag17;
      char ch5;
      bool flag18;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ 1989871268)) % 150U)
        {
          case 0:
            num2 = (int) num3 * -1286589695 ^ 271267699;
            continue;
          case 1:
            switch (ch5)
            {
              case '[':
                goto label_38;
              case '\\':
                goto label_97;
              case ']':
                goto label_31;
              default:
                num2 = 1032209186;
                continue;
            }
          case 2:
            int num4 = !flag6 ? -581513087 : (num4 = -459113924);
            num2 = num4 ^ (int) num3 * -152608211;
            continue;
          case 3:
            int num5 = !flag16 ? -687051470 : (num5 = -1713828952);
            num2 = num5 ^ (int) num3 * -60130744;
            continue;
          case 4:
            aKey = aItem;
            num2 = 746025338;
            continue;
          case 5:
            num2 = (int) num3 * 1695328619 ^ -1632748575;
            continue;
          case 6:
            num2 = (int) num3 * 246061775 ^ -697833818;
            continue;
          case 7:
            num2 = 1206849373;
            continue;
          case 8:
            int num6 = flag8 ? -1218388840 : (num6 = -660532977);
            num2 = num6 ^ (int) num3 * -1465839525;
            continue;
          case 9:
            string str1 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str1, str2);
            num2 = (int) num3 * -1429788758 ^ 573582418;
            continue;
          case 10:
            int num7 = ch4 != 'b' ? -920289733 : (num7 = -455304154);
            num2 = num7 ^ (int) num3 * 319356928;
            continue;
          case 11:
            int num8 = !flag11 ? -1800128250 : (num8 = -1366330843);
            num2 = num8 ^ (int) num3 * -369099891;
            continue;
          case 12:
label_31:
            flag4 = flag1;
            num2 = 191693004;
            continue;
          case 13:
            jsonNode1 = jsonNodeStack.Peek();
            num2 = (int) num3 * 1505388681 ^ 204812660;
            continue;
          case 14:
label_38:
            flag9 = flag1;
            num2 = 325138090;
            continue;
          case 15:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, "\n");
            num2 = 1048881310;
            continue;
          case 16:
            string str3 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str3, str4);
            num2 = (int) num3 * 951731376 ^ -1632802740;
            continue;
          case 17:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            flag15 = jsonNode1 != (object) null;
            num2 = 424898336;
            continue;
          case 18:
            num2 = (int) num3 * 1011774408 ^ 441212841;
            continue;
          case 19:
            num2 = (int) num3 * 2043915866 ^ 1505402780;
            continue;
          case 20:
            num2 = 694799556;
            continue;
          case 21:
            jsonNode2 = jsonNode1;
            num2 = 1243472666;
            continue;
          case 22:
            aItem = "";
            num2 = (int) num3 * 1562349264 ^ 1973687286;
            continue;
          case 23:
            int num9;
            num2 = num9 = ch5 == '{' ? 904990921 : (num9 = 1424994930);
            continue;
          case 24:
            string str5 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str5, str6);
            num2 = (int) num3 * 1442083771 ^ -1471773622;
            continue;
          case 25:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num2 = (int) num3 * 1068666614 ^ 850117552;
            continue;
          case 26:
            num2 = (int) num3 * -2069938458 ^ 89334139;
            continue;
          case 27:
label_138:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, "\t");
            num2 = 1048881310;
            continue;
          case 28:
          case 55:
          case 83:
          case 136:
          case 140:
label_76:
            ++num1;
            num2 = 1093326457;
            continue;
          case 29:
            int num10 = !flag17 ? -1305919316 : (num10 = -1799279176);
            num2 = num10 ^ (int) num3 * 57500775;
            continue;
          case 30:
            num2 = (int) num3 * 744927198 ^ -866390779;
            continue;
          case 31:
            num2 = (int) num3 * 1755618936 ^ 1763929003;
            continue;
          case 32:
            jsonNode1.Add((JSONNode) aItem);
            num2 = (int) num3 * -1091201046 ^ 668148678;
            continue;
          case 33:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, "\f");
            num2 = 1048881310;
            continue;
          case 34:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, "\b");
            num2 = 1048881310;
            continue;
          case 35:
            num2 = (int) num3 * 1447916173 ^ -522285426;
            continue;
          case 36:
            num2 = (int) num3 * 1440116142 ^ 576962207;
            continue;
          case 37:
            string str7 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str7, str8);
            num2 = (int) num3 * 1158885005 ^ 116647275;
            continue;
          case 38:
            int num11 = flag15 ? 995144248 : (num11 = 296998753);
            num2 = num11 ^ (int) num3 * -1506834833;
            continue;
          case 39:
            goto label_1;
          case 40:
            int num12 = ch5 != ':' ? 1004176090 : (num12 = 597278573);
            num2 = num12 ^ (int) num3 * -1397215842;
            continue;
          case 41:
            num2 = (int) num3 * 2069670589 ^ -1039024999;
            continue;
          case 42:
            flag8 = flag1;
            num2 = 1218537484;
            continue;
          case 43:
            flag16 = num1 < JSONNode.\u202D‬‫‮‭‏⁫⁯⁯⁫‪⁮‮⁭‭‮‫‪⁮‭‏‏⁯‏‭‮‍‬‌‍‮‫⁫⁭‍‬‪‫⁪‎‮(aJSON);
            num2 = 436590583;
            continue;
          case 44:
            int num13;
            num2 = num13 = ch5 == ' ' ? 1173382628 : (num13 = 1764645007);
            continue;
          case 45:
            string str9 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str9, str10);
            num2 = (int) num3 * 1030758134 ^ -2115194128;
            continue;
          case 46:
            int num14 = flag4 ? 1893287476 : (num14 = 1155020224);
            num2 = num14 ^ (int) num3 * -1768824463;
            continue;
          case 47:
            aItem = "";
            num2 = (int) num3 * 1457955787 ^ -2124515141;
            continue;
          case 48:
            num2 = (int) num3 * 246472746 ^ -475544968;
            continue;
          case 49:
            goto label_9;
          case 50:
            int num15 = !flag7 ? 13486808 : (num15 = 940526672);
            num2 = num15 ^ (int) num3 * -87480003;
            continue;
          case 51:
            aKey = "";
            aItem = "";
            num2 = 274614811;
            continue;
          case 52:
            num2 = (int) num3 * 1091574737 ^ 1201379682;
            continue;
          case 53:
label_97:
            ++num1;
            num2 = 619637577;
            continue;
          case 54:
            flag3 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aKey, "");
            num2 = 1079231236;
            continue;
          case 56:
            int num16 = !flag3 ? 1859192006 : (num16 = 1562497311);
            num2 = num16 ^ (int) num3 * 28837866;
            continue;
          case 57:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num2 = 1382812213;
            continue;
          case 58:
            num2 = (int) num3 * 580890075 ^ 1419530118;
            continue;
          case 59:
            int num17;
            num2 = num17 = ch5 > ']' ? 1134557633 : (num17 = 348562826);
            continue;
          case 60:
            int num18 = !flag2 ? 1482114850 : (num18 = 1587590364);
            num2 = num18 ^ (int) num3 * 275863792;
            continue;
          case 61:
            switch (ch4)
            {
              case 'r':
                goto label_113;
              case 's':
                goto label_35;
              case 't':
                goto label_138;
              case 'u':
                goto label_143;
              default:
                num2 = 2037510025;
                continue;
            }
          case 62:
            aKey = JSONNode.\u200B⁮⁯⁪⁪‪‌⁭‮‬⁫⁬‏‎‍‍⁯⁬⁫⁮‏‫‏‎‏⁫⁮⁮‭‬⁫⁭⁭⁫‬‍​‍‍⁫‮(aKey);
            flag18 = jsonNode1 is JSONArray;
            num2 = (int) num3 * 1345752889 ^ 1344819657;
            continue;
          case 63:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num2 = 2130462796;
            continue;
          case 64:
            num2 = (int) num3 * 1590465292 ^ 1288755484;
            continue;
          case 65:
label_113:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, "\r");
            num2 = 1795867692;
            continue;
          case 66:
            int num19 = flag1 ? 417214837 : (num19 = 1723096543);
            num2 = num19 ^ (int) num3 * -1087207992;
            continue;
          case 67:
label_35:
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(aItem, ch2.ToString());
            num2 = 1598766917;
            continue;
          case 68:
            int num20 = flag9 ? -405720687 : (num20 = -1076958253);
            num2 = num20 ^ (int) num3 * -240179723;
            continue;
          case 69:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num2 = (int) num3 * -343244778 ^ 1638824510;
            continue;
          case 70:
            aKey = "";
            aItem = "";
            int num21;
            num2 = num21 = jsonNodeStack.Count <= 0 ? 1442151735 : (num21 = 2112751055);
            continue;
          case 71:
            jsonNode1 = jsonNodeStack.Peek();
            num2 = (int) num3 * 291948593 ^ 1161113270;
            continue;
          case 72:
            num2 = 451196553;
            continue;
          case 73:
            flag17 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aItem, "");
            num2 = 1193829029;
            continue;
          case 74:
            flag6 = jsonNodeStack.Count == 0;
            num2 = 1452307858;
            continue;
          case 75:
            int num22 = flag13 ? 1041299273 : (num22 = 1002029767);
            num2 = num22 ^ (int) num3 * -178409921;
            continue;
          case 76:
            goto label_83;
          case 77:
            num1 += 4;
            num2 = (int) num3 * -1658637797 ^ 570365713;
            continue;
          case 78:
            jsonNode1.Add((JSONNode) aItem);
            num2 = (int) num3 * -1548065939 ^ -1815114784;
            continue;
          case 79:
            int num23;
            num2 = num23 = !flag1 ? 384066415 : (num23 = 1896029355);
            continue;
          case 81:
            num2 = (int) num3 * -182383462 ^ -1798133077;
            continue;
          case 82:
            int num24 = flag5 ? -10264671 : (num24 = -1957594600);
            num2 = num24 ^ (int) num3 * 2091452174;
            continue;
          case 84:
            num2 = (int) num3 * 1597639310 ^ -1647861778;
            continue;
          case 85:
            int num25 = flag18 ? -463813026 : (num25 = -1771844075);
            num2 = num25 ^ (int) num3 * -1873280389;
            continue;
          case 86:
            flag1 = !flag1;
            num2 = 815110885;
            continue;
          case 87:
            num2 = (int) num3 * -1209074704 ^ 312063019;
            continue;
          case 88:
            num2 = (int) num3 * 1754048679 ^ 497496738;
            continue;
          case 89:
            flag14 = jsonNode1 != (object) null;
            num2 = (int) num3 * 1776410642 ^ 1996341344;
            continue;
          case 90:
            string s = JSONNode.\u206A⁫‎‌⁯‏‍‭‫⁬‫‫⁫⁪‍⁪⁯‫‌‍⁮‪‮‍⁭⁭‮‌‭‬‪⁯‬⁬‏‪‪⁫⁫‫‮(aJSON, num1 + 1, 4);
            string str11 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str11, str12);
            num2 = (int) num3 * -893708072 ^ 475686575;
            continue;
          case 91:
            num2 = (int) num3 * 1361281466 ^ -1137282708;
            continue;
          case 92:
            jsonNode1.Add(jsonNodeStack.Peek());
            num2 = (int) num3 * 1263434693 ^ 200509002;
            continue;
          case 93:
            num2 = (int) num3 * -1320374447 ^ -232986359;
            continue;
          case 94:
            int num26 = ch4 <= 'f' ? 1852866130 : (num26 = 2056381204);
            num2 = num26 ^ (int) num3 * -1133801674;
            continue;
          case 95:
            num2 = (int) num3 * 1102929801 ^ 1372852943;
            continue;
          case 96:
            num2 = (int) num3 * 1026267648 ^ 449810508;
            continue;
          case 97:
            flag10 = jsonNode1 is JSONArray;
            num2 = (int) num3 * -649787463 ^ 1489407142;
            continue;
          case 98:
            num2 = (int) num3 * 828769814 ^ 1264768696;
            continue;
          case 99:
            aKey = "";
            num2 = 1140079777;
            continue;
          case 100:
            int num27;
            num2 = num27 = ch5 != '}' ? 1035248711 : (num27 = 170653272);
            continue;
          case 101:
            num2 = (int) num3 * -75365093 ^ -933680701;
            continue;
          case 102:
            num2 = 461627595;
            continue;
          case 103:
            int num28 = flag12 ? 1790289585 : (num28 = 74983306);
            num2 = num28 ^ (int) num3 * -633752558;
            continue;
          case 104:
            num2 = (int) num3 * -1320451403 ^ 1973612706;
            continue;
          case 105:
            num2 = (int) num3 * 1940333652 ^ -658224823;
            continue;
          case 106:
            num2 = 1141198500;
            continue;
          case 107:
            num2 = (int) num3 * -178797284 ^ -1229810183;
            continue;
          case 108:
            num2 = (int) num3 * 213628570 ^ -590512581;
            continue;
          case 109:
            int num29 = ch5 <= ' ' ? -1807901818 : (num29 = -805032537);
            num2 = num29 ^ (int) num3 * -474658937;
            continue;
          case 110:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num2 = (int) num3 * -11531943 ^ 255219131;
            continue;
          case 111:
            num2 = (int) num3 * -1576951400 ^ 1567454726;
            continue;
          case 112:
            flag13 = jsonNode1 is JSONArray;
            num2 = (int) num3 * -2125580034 ^ -1578896643;
            continue;
          case 113:
            jsonNodeStack.Pop();
            num2 = 670918541;
            continue;
          case 114:
            int num30;
            num2 = num30 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aKey, "") ? 1376796871 : (num30 = 231482884);
            continue;
          case 115:
            aItem = "";
            aKey = "";
            flag1 = false;
            num2 = (int) num3 * 1044888948 ^ -1151031906;
            continue;
          case 116:
            num2 = (int) num3 * -49758702 ^ 1884575260;
            continue;
          case 117:
            jsonNode1.Add(jsonNodeStack.Peek());
            num2 = (int) num3 * 29087561 ^ 905024931;
            continue;
          case 118:
            int num31 = !flag14 ? -290023977 : (num31 = -2035410862);
            num2 = num31 ^ (int) num3 * -1632832917;
            continue;
          case 119:
            int num32 = flag10 ? -1436219049 : (num32 = -1526668481);
            num2 = num32 ^ (int) num3 * 1972219101;
            continue;
          case 120:
            flag5 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aKey, "");
            num2 = 2145940306;
            continue;
          case 121:
            num2 = (int) num3 * 1424621835 ^ -912953074;
            continue;
          case 122:
label_67:
            string str13 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str13, str14);
            num2 = 1497502520;
            continue;
          case 123:
            int num33;
            num2 = num33 = flag1 ? 996123503 : (num33 = 1573212284);
            continue;
          case 124:
            num2 = (int) num3 * -2125091241 ^ 736456510;
            continue;
          case 125:
            num2 = (int) num3 * 1484177598 ^ 788721778;
            continue;
          case 126:
label_11:
            flag2 = flag1;
            num2 = 541147138;
            continue;
          case (uint) sbyte.MaxValue:
            num2 = (int) num3 * 1861008797 ^ 1964002588;
            continue;
          case 128:
            flag11 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aKey, "");
            num2 = 919036427;
            continue;
          case 129:
            switch (ch5)
            {
              case '\t':
                goto label_11;
              case '\n':
              case '\r':
                goto label_76;
              case '\v':
              case '\f':
                goto label_67;
              default:
                num2 = (int) num3 * 427575852 ^ 1941975741;
                continue;
            }
          case 130:
            int num34;
            num2 = num34 = ch5 != ',' ? 1957681921 : (num34 = 1985052036);
            continue;
          case 131:
            string str15 = aItem;
            ch1 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮(str15, str16);
            num2 = (int) num3 * 2089233170 ^ 1061521674;
            continue;
          case 132:
            num2 = (int) num3 * 1610777247 ^ 1630483155;
            continue;
          case 133:
            flag12 = flag1;
            num2 = (int) num3 * 1103269139 ^ -480917220;
            continue;
          case 134:
            int num35;
            num2 = num35 = ch5 == '"' ? 473803856 : (num35 = 717953614);
            continue;
          case 135:
            num2 = (int) num3 * -921517200 ^ -1100538075;
            continue;
          case 137:
            aKey = JSONNode.\u200B⁮⁯⁪⁪‪‌⁭‮‬⁫⁬‏‎‍‍⁯⁬⁫⁮‏‫‏‎‏⁫⁮⁮‭‬⁫⁭⁭⁫‬‍​‍‍⁫‮(aKey);
            int num36 = !(jsonNode1 is JSONArray) ? 233365632 : (num36 = 356470084);
            num2 = num36 ^ (int) num3 * -866129750;
            continue;
          case 138:
            int num37;
            num2 = num37 = ch4 != 'n' ? 700679691 : (num37 = 483132317);
            continue;
          case 139:
label_143:
            num2 = 485525544;
            continue;
          case 141:
            flag7 = JSONNode.\u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮(aItem, "");
            num2 = (int) num3 * 897002324 ^ -260717316;
            continue;
          case 142:
            num2 = (int) num3 * 882967634 ^ 1882429038;
            continue;
          case 143:
            ch2 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            ch3 = ch2;
            num2 = (int) num3 * 1876108324 ^ 1490014307;
            continue;
          case 144:
            aKey = JSONNode.\u200B⁮⁯⁪⁪‪‌⁭‮‬⁫⁬‏‎‍‍⁯⁬⁫⁮‏‫‏‎‏⁫⁮⁮‭‬⁫⁭⁭⁫‬‍​‍‍⁫‮(aKey);
            num2 = (int) num3 * 1249330408 ^ 904077314;
            continue;
          case 145:
            ch4 = ch3;
            num2 = (int) num3 * 571511551 ^ 1043409403;
            continue;
          case 146:
            ch5 = JSONNode.\u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮(aJSON, num1);
            int num38;
            num2 = num38 = ch5 > ',' ? 705089059 : (num38 = 64988341);
            continue;
          case 147:
            int num39;
            num2 = num39 = ch4 != 'f' ? 1720883649 : (num39 = 836616525);
            continue;
          case 148:
            num2 = (int) num3 * -1373614139 ^ 1857659818;
            continue;
          case 149:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num2 = (int) num3 * -606810921 ^ -626965413;
            continue;
          default:
            goto label_150;
        }
      }
label_9:
      throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("JSON Parse: Quotation marks seems to be messed up.");
label_83:
      throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("JSON Parse: Too many closing brackets");
label_150:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -760220163;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1733807018)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u206F‪‭​‍‭‪‫‪⁬⁫‏​​⁬‏⁪‪‌‏⁯⁫‫‎‏⁯⁬⁮⁬‍‬⁫‍‍⁬⁭‮‎‌⁮‮(aData);
            num1 = (int) num2 * 280667633 ^ -864471071;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -889555981;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -684454939)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONNode.\u200D⁫‬​‎‫⁮‎‪‎‌‎⁪‪‬⁮‫‌‪‎‭‍‬⁪‫⁪⁫‎⁭‫‫‎‏⁫‎⁫‮⁫⁯⁫‮(JSONNode.\u206E‫‭‭‬⁬‫‪‮⁪‮⁯‍⁭‮‫⁮‍‬‎⁬‭‭⁯‌‍‏‭⁪‎⁭‏‏⁬⁫‍⁯⁭‪⁬‮((FileSystemInfo) JSONNode.\u200C⁯⁮⁮‎‬⁫⁯‏​‮⁯‭‪⁪‎⁭‌⁪‎‪⁬⁯‪‎‭‮‪‭⁮⁭‮‍‌⁯⁪​‪⁮⁭‮(JSONNode.\u202C⁮⁬‏‬⁬⁫‏‮‌‍⁫⁬‪‬‪⁯‬‪‬⁯‮⁮⁮‪‌⁯‍‎⁭‬‭​⁯⁯‍‫⁫‍‏‮(aFileName))));
            num1 = (int) num2 * 1597695493 ^ -1606734719;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200D‬⁯⁫⁫‌‌‏‪‪⁫⁬⁭‭‎‫‬‬⁬⁮‍‪‍⁫‭‍‍‎‬⁮⁯⁫‪‎‪‪‎‫⁬⁯‮(aFileName);
      try
      {
label_6:
        int num3 = -692432192;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -684454939)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              goto label_13;
            case 2:
              this.SaveToStream((Stream) aData);
              num3 = (int) num4 * -752050940 ^ -548047745;
              continue;
            default:
              goto label_9;
          }
        }
label_13:
        return;
label_9:;
      }
      finally
      {
        if (aData != null)
        {
label_11:
          int num5 = -50353020;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -684454939)) % 4U)
            {
              case 0:
                num5 = (int) num6 * -2101700704 ^ 787788138;
                continue;
              case 1:
                JSONNode.\u202B‏‌​⁬‫⁬‍​​‮⁫⁬‏⁯‍‎⁪⁪‎⁭⁫‪‪‭⁫‮⁪⁮‪⁮‌‎‎⁬‎‏‫‎⁬‮((IDisposable) aData);
                num5 = (int) num6 * 1829583242 ^ 791361723;
                continue;
              case 2:
                goto label_11;
              default:
                goto label_16;
            }
          }
        }
label_16:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202E‏⁯‌‌‍⁮‍⁮⁯‎‌‫‌‌⁯‮⁪​⁭‍⁪‬‮‮‬‏⁬⁯⁭⁯‬⁬‌‭‌‏​‎‭‮();
      try
      {
label_2:
        int num1 = 1513120859;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 433847569)) % 6U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * -200635705 ^ 1009482087;
              continue;
            case 2:
              num1 = (int) num2 * -948335028 ^ -1562955306;
              continue;
            case 4:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1882849881 ^ 3863347;
              continue;
            case 5:
              JSONNode.\u200F‭‎​‪‎⁪‏⁯⁪⁬⁯‬⁫‪‎‎⁬‫⁫⁪‫⁮‫‏‬⁮⁪‫‪⁮⁪⁮‮‍‪‮‏‏⁫‮((Stream) aData, 0L);
              num1 = (int) num2 * 1609204501 ^ 1075265245;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return JSONNode.\u206F⁬​⁪​‪‭‭⁬‫⁯‍‍⁮‫⁯​‍‍‬‌⁮⁬⁮‍⁯⁫‍‬‮⁮​‎⁫⁭⁯⁬‮‏⁫‮(JSONNode.\u202D⁬⁫⁬‮⁭‫⁬‭‏‮‍⁯⁯‪⁪⁮‮‪‌‮‬‫‌⁯⁪‫⁬‎‍⁫‫‫​⁯‎‭‫⁫‍‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_10:
          int num3 = 1045120100;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 433847569)) % 3U)
            {
              case 0:
                goto label_10;
              case 2:
                JSONNode.\u202B‏‌​⁬‫⁬‍​​‮⁫⁬‏⁯‍‎⁪⁪‎⁭⁫‪‪‭⁫‮⁪⁮‪⁮‌‎‎⁬‎‏‫‎⁬‮((IDisposable) aData);
                num3 = (int) num4 * 1473999675 ^ -563881339;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1213584362;
      int num2;
      int num3;
      int num4;
      bool flag;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag1;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag2;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1785132491)) % 40U)
        {
          case 0:
label_15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E​⁪⁬⁭⁯‮‭‏‏‬‎‏‍‭‎‬⁬‍⁭‍‎⁯‬‮⁫‎⁬‮​⁯‎‬‎‏‭‬⁫‫⁫‮(aReader));
            num1 = -878597973;
            continue;
          case 1:
            ++num3;
            num1 = (int) num6 * 14514431 ^ 1626843757;
            continue;
          case 2:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 98727135 ^ -2057259336;
            continue;
          case 3:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200F‌‌‏‍‬‬⁭⁭⁪⁮‮‪⁮‍⁪‪​⁮‮⁫‏‬‍⁯‫‍⁯⁯‎‪‫⁮‬⁭‪⁬‌⁮⁭‮(aReader);
            num1 = (int) num6 * 807442808 ^ 1075661919;
            continue;
          case 4:
            num1 = (int) num6 * 1033279346 ^ -116558342;
            continue;
          case 5:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1649832051 ^ -1886625114;
            continue;
          case 6:
            num1 = (int) num6 * -1439290863 ^ -46487363;
            continue;
          case 7:
            jsonArray = new JSONArray();
            num3 = 0;
            num1 = (int) num6 * -948846138 ^ -537240757;
            continue;
          case 8:
            num1 = (int) num6 * 1417910991 ^ 1523136957;
            continue;
          case 9:
label_28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‍⁫⁯‪⁭⁭​‪⁭‮‫⁪⁪⁬⁫‏​‎⁭⁯‏⁭‏⁫‭‪⁮⁭⁮‪⁬⁬​‍‪‎‫‍‫‮(aReader));
            num1 = -1481207165;
            continue;
          case 10:
            flag = num2 < num5;
            num1 = -1571569512;
            continue;
          case 11:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_33;
              case JSONBinaryTag.Class:
                goto label_37;
              case JSONBinaryTag.Value:
                goto label_15;
              case JSONBinaryTag.IntValue:
                goto label_28;
              case JSONBinaryTag.DoubleValue:
                goto label_22;
              case JSONBinaryTag.BoolValue:
                goto label_40;
              case JSONBinaryTag.FloatValue:
                goto label_30;
              default:
                num1 = (int) num6 * 689432675 ^ 2024125620;
                continue;
            }
          case 12:
            num1 = (int) num6 * -726042939 ^ 1920391280;
            continue;
          case 13:
label_40:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A⁯⁮‎‪‎‪⁭⁯‮⁫‪⁬‫​⁬‏⁮⁬⁮⁬‭⁯‏⁭⁯⁯‍⁫‫⁫⁬‬‪‍⁭⁭⁮⁬‭‮(aReader));
            num1 = -1509876723;
            continue;
          case 14:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1667421440 ^ -2025999807;
            continue;
          case 15:
label_37:
            num5 = JSONNode.\u200E‍⁫⁯‪⁭⁭​‪⁭‮‫⁪⁪⁬⁫‏​‎⁭⁯‏⁭‏⁫‭‪⁮⁭⁮‪⁬⁬​‍‪‎‫‍‫‮(aReader);
            jsonClass = new JSONClass();
            num1 = -942142108;
            continue;
          case 16:
            num1 = (int) num6 * 693321715 ^ 1499297667;
            continue;
          case 17:
            num1 = (int) num6 * 394807972 ^ 892498811;
            continue;
          case 18:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1962187525 ^ -1182465515;
            continue;
          case 19:
label_33:
            num1 = -92374349;
            continue;
          case 20:
label_22:
            num1 = -1515114089;
            continue;
          case 21:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1505160287;
            continue;
          case 22:
            num1 = (int) num6 * 1590774332 ^ 811418474;
            continue;
          case 23:
            ++num2;
            num1 = (int) num6 * 1106393682 ^ -1235704735;
            continue;
          case 24:
            goto label_14;
          case 25:
            num2 = 0;
            num1 = (int) num6 * -179470948 ^ 736703392;
            continue;
          case 26:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1416937067 ^ -488874563;
            continue;
          case 27:
label_30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‬⁮‏⁯⁯​‎⁫‫‏⁫‫⁪⁯‬‪⁯⁯‏‎⁮⁮‭⁯‪‫⁫‎‍⁭⁭‍‏‫​‬⁮‫‌‮(aReader));
            num1 = -916811204;
            continue;
          case 28:
            num1 = (int) num6 * 1435874963 ^ 892947511;
            continue;
          case 29:
            goto label_1;
          case 31:
            int num7;
            num1 = num7 = num3 >= num4 ? -1397493001 : (num7 = -994863328);
            continue;
          case 32:
            aKey = JSONNode.\u202E​⁪⁬⁭⁯‮‭‏‏‬‎‏‍‭‎‬⁬‍⁭‍‎⁯‬‮⁫‎⁬‮​⁯‎‬‎‏‭‬⁫‫⁫‮(aReader);
            num1 = (int) num6 * 1431761340 ^ 1706867647;
            continue;
          case 33:
            num1 = (int) num6 * -73281790 ^ -1715544135;
            continue;
          case 34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁫⁯⁬‫⁪‎⁪‫‭⁯⁪‬⁬‫‍‪‮⁭‏‮‎⁪‬‭‫⁭⁭‏⁫‫‏⁪​⁪⁯‎‫⁪‬‮(aReader));
            num1 = (int) num6 * 2054844694 ^ 708870450;
            continue;
          case 35:
            num1 = (int) num6 * 1378766258 ^ -1421529395;
            continue;
          case 36:
            num1 = (int) num6 * 1997830107 ^ 1812354831;
            continue;
          case 37:
            int num8 = flag ? 1152503568 : (num8 = 1878058530);
            num1 = num8 ^ (int) num6 * -287042534;
            continue;
          case 38:
            num4 = JSONNode.\u200E‍⁫⁯‪⁭⁭​‪⁭‮‫⁪⁪⁬⁫‏​‎⁭⁯‏⁭‏⁫‭‪⁮⁭⁮‪⁬⁬​‍‪‎‫‍‫‮(aReader);
            num1 = (int) num6 * -1433479463 ^ 1921073916;
            continue;
          case 39:
            num1 = -325833355;
            continue;
          default:
            goto label_42;
        }
      }
label_14:
      throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮(JSONNode.\u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_42:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206B‪​‎⁭‮⁬‌‪‫⁫⁫‍⁮‭⁮‏⁮⁪⁯‏⁬‍⁬⁯⁮​⁬‎⁫⁪‏‏‏‭‭⁪⁭‭‎‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1913935114;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1520456315)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u202B‏‌​⁬‫⁬‍​​‮⁫⁬‏⁯‍‎⁪⁪‎⁭⁫‪‪‭⁫‮⁪⁮‪⁮‌‎‎⁬‎‏‫‎⁬‮((IDisposable) aReader);
                num1 = (int) num2 * -321471733 ^ -1854496887;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202B‮‍⁯‎‌‌⁫⁮⁪⁮⁭‫‬‮​⁫⁭‏⁪‏⁬‫​‮⁬‍⁬⁫⁯‫⁫⁫‌⁯⁮‮​‏⁫‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1811531939;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -914306326)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 556946642 ^ 2144712702;
                continue;
              case 3:
                JSONNode.\u202B‏‌​⁬‫⁬‍​​‮⁫⁬‏⁯‍‎⁪⁪‎⁭⁫‪‪‭⁫‮⁪⁮‪⁮‌‎‎⁬‎‏‫‎⁬‮((IDisposable) aData);
                num1 = (int) num2 * -1294019356 ^ -1523700533;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u206D‌‌‏‏‌‎⁭⁯​​​‬⁯‫‬‎‬⁪‏‍‎⁯‭⁯⁮‮⁬⁭​‌‬‬​⁬‫⁮⁫‬‌‮(aBase64);
label_1:
      int num1 = 1721783640;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1036083507)) % 4U)
        {
          case 0:
            JSONNode.\u200F‭‎​‪‎⁪‏⁯⁪⁬⁯‬⁫‪‎‎⁬‫⁫⁪‫⁮‫‏‬⁮⁪‫‪⁮⁪⁮‮‍‪‮‏‏⁫‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1994284830 ^ -1383333334;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u202C⁬⁪‭⁫⁬‏‎⁭⁪⁬‏‏⁯⁫⁮‬⁪‬‌‎‪‮‮⁪⁬‬⁮‭‮‎‭⁯‏‬​‮⁫‍‍‮(numArray);
            num1 = (int) num2 * 2104057214 ^ 1583833929;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    static CultureInfo \u202E⁫‎⁯‪‭‪‫‪‫‍‪‮‏⁬⁬‬⁯‭‬⁯‬‏‌‭‮‍‬‪‬⁪​‮⁬‪⁮⁮‌‍⁭‮() => CultureInfo.InvariantCulture;

    static bool \u206E‮‌⁬⁭‏‪⁬‌⁫‮⁫‮⁮⁭‏⁪‬‌⁮⁫‍​‪⁬‬‫‫‏⁮⁮‫‫⁯‌‬⁭‎⁬‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202C⁮⁬‌⁭‮‎‌‎⁮‮⁯‪‎⁮⁪‍‬‫​‎⁪‪‏‌⁮‫‌‮‌⁬‬‍‍‏⁭⁭‮⁮‏‮() => base.GetHashCode();

    static char \u206D‭‍‫⁪⁯⁮‍‌‍‪​‪⁯‍‭⁬⁮‎‎⁫‫‬‎⁮⁬⁯‭‏⁬⁭‌⁪⁪⁫⁫‬⁯‌‭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202D‫⁯‍‫⁯⁭‎‎‪‫‮⁭⁪⁫‭⁮‬​‭⁬‬⁯‮‌‮‭‫‮⁮‎‍​‫⁯⁪⁬⁯‪‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202D‬‫‮‭‏⁫⁯⁯⁫‪⁮‮⁭‭‮‫‪⁮‭‏‏⁯‏‭‮‍‬‌‍‮‫⁫⁭‍‬‪‫⁪‎‮([In] string obj0) => obj0.Length;

    static string \u200B⁮⁯⁪⁪‪‌⁭‮‬⁫⁬‏‎‍‍⁯⁬⁫⁮‏‫‏‎‏⁫⁮⁮‭‬⁫⁭⁭⁫‬‍​‍‍⁫‮([In] string obj0) => obj0.Trim();

    static bool \u206F‏‭‪​​‌⁪‫​‎​‍⁮‫‏⁪⁮⁮‪⁮‪‍⁫⁪⁬‎‪⁯‬⁫​‬‫‮‎‫‌​⁪‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200C‮‭‍⁭‮‭‬‍⁫⁮‪‌​‏⁭‮⁭⁮⁫‏‮‫⁫‌‎‭‏‮‏‌‪⁭‬‮‫‭⁯‮‍‮([In] string obj0) => new Exception(obj0);

    static string \u206A⁫‎‌⁯‏‍‭‫⁬‫‫⁫⁪‍⁪⁯‫‌‍⁮‪‮‍⁭⁭‮‌‭‬‪⁯‬⁬‏‪‪⁫⁫‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206F‪‭​‍‭‪‫‪⁬⁫‏​​⁬‏⁪‪‌‏⁯⁫‫‎‏⁯⁬⁮⁬‍‬⁫‍‍⁬⁭‮‎‌⁮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202C⁮⁬‏‬⁬⁫‏‮‌‍⁫⁬‪‬‪⁯‬‪‬⁯‮⁮⁮‪‌⁯‍‎⁭‬‭​⁯⁯‍‫⁫‍‏‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C⁯⁮⁮‎‬⁫⁯‏​‮⁯‭‪⁪‎⁭‌⁪‎‪⁬⁯‪‎‭‮‪‭⁮⁭‮‍‌⁯⁪​‪⁮⁭‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206E‫‭‭‬⁬‫‪‮⁪‮⁯‍⁭‮‫⁮‍‬‎⁬‭‭⁯‌‍‏‭⁪‎⁭‏‏⁬⁫‍⁯⁭‪⁬‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200D⁫‬​‎‫⁮‎‪‎‌‎⁪‪‬⁮‫‌‪‎‭‍‬⁪‫⁪⁫‎⁭‫‫‎‏⁫‎⁫‮⁫⁯⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D‬⁯⁫⁫‌‌‏‪‪⁫⁬⁭‭‎‫‬‬⁬⁮‍‪‍⁫‭‍‍‎‬⁮⁯⁫‪‎‪‪‎‫⁬⁯‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202B‏‌​⁬‫⁬‍​​‮⁫⁬‏⁯‍‎⁪⁪‎⁭⁫‪‪‭⁫‮⁪⁮‪⁮‌‎‎⁬‎‏‫‎⁬‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202E‏⁯‌‌‍⁮‍⁮⁯‎‌‫‌‌⁯‮⁪​⁭‍⁪‬‮‮‬‏⁬⁯⁭⁯‬⁬‌‭‌‏​‎‭‮() => new MemoryStream();

    static void \u200F‭‎​‪‎⁪‏⁯⁪⁬⁯‬⁫‪‎‎⁬‫⁫⁪‫⁮‫‏‬⁮⁪‫‪⁮⁪⁮‮‍‪‮‏‏⁫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202D⁬⁫⁬‮⁭‫⁬‭‏‮‍⁯⁯‪⁪⁮‮‪‌‮‬‫‌⁯⁪‫⁬‎‍⁫‫‫​⁯‎‭‫⁫‍‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206F⁬​⁪​‪‭‭⁬‫⁯‍‍⁮‫⁯​‍‍‬‌⁮⁬⁮‍⁯⁫‍‬‮⁮​‎⁫⁭⁯⁬‮‏⁫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200F‌‌‏‍‬‬⁭⁭⁪⁮‮‪⁮‍⁪‪​⁮‮⁫‏‬‍⁯‫‍⁯⁯‎‪‫⁮‬⁭‪⁬‌⁮⁭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200E‍⁫⁯‪⁭⁭​‪⁭‮‫⁪⁪⁬⁫‏​‎⁭⁯‏⁭‏⁫‭‪⁮⁭⁮‪⁬⁬​‍‪‎‫‍‫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202E​⁪⁬⁭⁯‮‭‏‏‬‎‏‍‭‎‬⁬‍⁭‍‎⁯‬‮⁫‎⁬‮​⁯‎‬‎‏‭‬⁫‫⁫‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202D⁫⁯⁬‫⁪‎⁪‫‭⁯⁪‬⁬‫‍‪‮⁭‏‮‎⁪‬‭‫⁭⁭‏⁫‫‏⁪​⁪⁯‎‫⁪‬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202A⁯⁮‎‪‎‪⁭⁯‮⁫‪⁬‫​⁬‏⁮⁬⁮⁬‭⁯‏⁭⁯⁯‍⁫‫⁫⁬‬‪‍⁭⁭⁮⁬‭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C‬⁮‏⁯⁯​‎⁫‫‏⁫‫⁪⁯‬‪⁯⁯‏‎⁮⁮‭⁯‪‫⁫‎‍⁭⁭‍‏‫​‬⁮‫‌‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206B‪​‎⁭‮⁬‌‪‫⁫⁫‍⁮‭⁮‏⁮⁪⁯‏⁬‍⁬⁯⁮​⁬‎⁫⁪‏‏‏‭‭⁪⁭‭‎‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202B‮‍⁯‎‌‌⁫⁮⁪⁮⁭‫‬‮​⁫⁭‏⁪‏⁬‫​‮⁬‍⁬⁫⁯‫⁫⁫‌⁯⁮‮​‏⁫‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206D‌‌‏‏‌‎⁭⁯​​​‬⁯‫‬‎‬⁪‏‍‎⁯‭⁯⁮‮⁬⁭​‌‬‬​⁬‫⁮⁫‬‌‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202C⁬⁪‭⁫⁬‏‎⁭⁪⁬‏‏⁯⁫⁮‬⁪‬‌‎‪‮‮⁪⁬‬⁮‭‮‎‭⁯‏‬​‮⁫‍‍‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
