// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.Querying.QueryTable
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;

namespace DataAccessFramework.Querying
{
  public class QueryTable : TableBase
  {
    private readonly string _tableName;
    private readonly List<FieldReference> _fields = new List<FieldReference>();

    public QueryTable(string tableName)
    {
label_1:
      int num1 = 408619690;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 984023943)) % 4U)
        {
          case 0:
            this._tableName = tableName;
            num1 = (int) num2 * 1272868926 ^ 983874296;
            continue;
          case 1:
            num1 = (int) num2 * -144313369 ^ -1056009956;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override string TableName
    {
      get
      {
label_1:
        int num1 = 1162258700;
        string tableName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 186182848)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              tableName = this._tableName;
              num1 = (int) num2 * -1528313757 ^ -451423793;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return tableName;
      }
    }

    internal override void BuildSql(BuildSqlContext sqlContext)
    {
      QueryTable.\u200C​‮‍‌⁬‏⁪⁭⁬‮⁮​⁪‎‬‏‫‎‌‪⁮⁫‍⁪⁮‌‮⁫‭⁫⁭⁬⁮⁭⁫⁭‍⁯‭‮(sqlContext.Builder, \u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(223216913U));
label_1:
      int num1 = -2037511482;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1476030052)) % 3U)
        {
          case 1:
            QueryTable.\u200C​‮‍‌⁬‏⁪⁭⁬‮⁮​⁪‎‬‏‫‎‌‪⁮⁫‍⁪⁮‌‮⁫‭⁫⁭⁬⁮⁭⁫⁭‍⁯‭‮(sqlContext.Builder, this._tableName);
            QueryTable.\u200C​‮‍‌⁬‏⁪⁭⁬‮⁮​⁪‎‬‏‫‎‌‪⁮⁫‍⁪⁮‌‮⁫‭⁫⁭⁬⁮⁭⁫⁭‍⁯‭‮(sqlContext.Builder, \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(1679862656U));
            num1 = (int) num2 * -1036611543 ^ 868230119;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      QueryTable.\u200C​‮‍‌⁬‏⁪⁭⁬‮⁮​⁪‎‬‏‫‎‌‪⁮⁫‍⁪⁮‌‮⁫‭⁫⁭⁬⁮⁭⁫⁭‍⁯‭‮(sqlContext.Builder, sqlContext.ResolveAlias(this));
    }

    public override string ToString()
    {
label_1:
      int num1 = 1834627979;
      string tableName;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1444161712)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            tableName = this._tableName;
            num1 = (int) num2 * 289654816 ^ 1970452818;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return tableName;
    }

    public FieldReference Field(string name)
    {
label_1:
      int num1 = -1484437351;
      FieldReference fieldReference1;
      FieldReference fieldReference2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1591709584)) % 4U)
        {
          case 1:
            fieldReference1 = new FieldReference(this, name);
            this._fields.Add(fieldReference1);
            num1 = (int) num2 * 1231906413 ^ -1119135365;
            continue;
          case 2:
            fieldReference2 = fieldReference1;
            num1 = (int) num2 * 188531372 ^ 1722818300;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return fieldReference2;
    }

    protected internal override IEnumerable<FieldReference> Fields
    {
      get
      {
label_1:
        int num1 = -258861757;
        IEnumerable<FieldReference> fields;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1260099084)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              fields = (IEnumerable<FieldReference>) this._fields.AsReadOnly();
              num1 = (int) num2 * 2092715412 ^ -332074792;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return fields;
      }
    }

    static StringBuilder \u200C​‮‍‌⁬‏⁪⁭⁬‮⁮​⁪‎‬‏‫‎‌‪⁮⁫‍⁪⁮‌‮⁫‭⁫⁭⁬⁮⁭⁫⁭‍⁯‭‮(
      [In] StringBuilder obj0,
      [In] string obj1)
    {
      return obj0.Append(obj1);
    }
  }
}
