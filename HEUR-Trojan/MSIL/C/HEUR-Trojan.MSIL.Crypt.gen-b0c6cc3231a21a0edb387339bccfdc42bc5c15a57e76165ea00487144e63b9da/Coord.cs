// Decompiled with JetBrains decompiler
// Type: cours.Coord
// Assembly: StringResultHand, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 972439AE-5227-4007-A7B1-AD8C12183697
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-b0c6cc3231a21a0edb387339bccfdc42bc5c15a57e76165ea00487144e63b9da.exe

using System;
using System.Text;

namespace cours
{
  public class Coord
  {
    public double X { get; set; }

    public double Y { get; set; }

    public double VectorLength => Math.Sqrt(this.X * this.X + this.Y * this.Y);

    public Coord()
    {
      this.X = 0.0;
      this.Y = 0.0;
    }

    public Coord(double x, double y)
    {
      this.X = x;
      this.Y = y;
    }

    public double DistanceTo(Coord point) => new Coord(point.X - this.X, point.Y - this.Y).VectorLength;

    public Coord Between(Coord next) => new Coord((this.X + next.X) * 0.5, (this.Y + next.Y) * 0.5);

    public Coord BetweenWithRatio(Coord next, double numerator, double denominator)
    {
      double num = numerator / (numerator + denominator);
      return new Coord(this.X + num * (next.X - this.X), this.Y + num * (next.Y - this.Y));
    }

    public static Coord Parse(string x, string y) => new Coord(double.Parse(x), double.Parse(y));

    public override string ToString()
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append('(');
      stringBuilder.Append(this.X);
      stringBuilder.Append(';');
      stringBuilder.Append(this.Y);
      stringBuilder.Append(')');
      return stringBuilder.ToString();
    }
  }
}
