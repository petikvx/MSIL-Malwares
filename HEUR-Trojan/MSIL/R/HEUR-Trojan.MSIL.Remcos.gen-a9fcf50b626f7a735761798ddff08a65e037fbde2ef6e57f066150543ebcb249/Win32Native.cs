// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Win32Native
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Win32Native
  {
    private const int SWP_NOZORDER = 4;
    private const int SWP_NOACTIVATE = 16;
    private const int SW_MAXIMIZE = 3;

    [DllImport("kernel32", EntryPoint = "GetConsoleWindow")]
    private static extern IntPtr \uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F8();

    [DllImport("user32", EntryPoint = "SetWindowPos")]
    private static extern bool \uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F9(
      IntPtr _param0,
      IntPtr _param1,
      int _param2,
      int _param3,
      int _param4,
      int _param5,
      int _param6);

    [DllImport("user32.dll", EntryPoint = "GetWindowRect")]
    private static extern bool \uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9FA(
      IntPtr _param0,
      ref Win32Native.\uEBAF\uEB47\uEA0A\uEA98\uE957\uF608\uEAC7\uE13B\uE0A1\uE2CA\uF1FF\uF1F2 _param1);

    [DllImport("user32.dll")]
    public static extern bool ShowWindow(IntPtr hWnd, int cmdShow);

    public static void SetConsoleWindowPosition(int x, int y)
    {
label_5:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(29);
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
      while (true)
      {
        switch ((num2 ^ 59) + 62)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9FA);
            num2 = -7;
            continue;
          case 1:
            goto label_5;
          case 2:
            Win32Native.\uEBAF\uEB47\uEA0A\uEA98\uE957\uF608\uEAC7\uE13B\uE0A1\uE2CA\uF1FF\uF1F2 obj;
            switch (num1 + 52)
            {
              case 0:
                Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F9(Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F8(), IntPtr.Zero, x, y, checked (obj.Left + obj.Right), checked (obj.Top + obj.Bottom), 20);
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(19);
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F8);
                num1 = -32;
                goto label_1;
              case 2:
                Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9FA(Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9F8(), ref obj);
                num1 = -31;
                goto label_1;
              case 3:
                goto label_10;
              default:
                num2 = -8;
                continue;
            }
          case 3:
label_1:
            num1 ^= 45;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
      }
label_10:;
    }

    public static void MaximizeConsoleWindow()
    {
      if ((Vändtia_Live_Server.Runtime.Platform != Vändtia_Live_Server.Runtime.Platforms.Windows ? 1 : 0) != 0)
        return;
label_4:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
      int num2 = 3;
      while (true)
      {
        switch (num2 ^ 61)
        {
          case 59:
            goto label_4;
          case 60:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Win32Native.\uF2B0\uE6EE\uEE94\uF512\uE414\uF21D\uF6AE\uF299\uE152\uF7E6\uF70D\uE9FA);
            num2 = 1;
            continue;
          case 61:
            Process currentProcess;
            switch (num1 + 57)
            {
              case 0:
                Win32Native.ShowWindow(currentProcess.MainWindowHandle, 3);
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
                goto label_1;
              case 1:
                currentProcess = Process.GetCurrentProcess();
                num1 = -5;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Win32Native.SetConsoleWindowPosition);
                num1 = -11;
                goto label_1;
              case 3:
                goto label_12;
              default:
                num2 = 6;
                continue;
            }
          case 62:
label_1:
            num1 ^= 60;
            break;
        }
        num2 = 0;
      }
label_12:;
    }

    private struct \uEBAF\uEB47\uEA0A\uEA98\uE957\uF608\uEAC7\uE13B\uE0A1\uE2CA\uF1FF\uF1F2
    {
      public int Left;
      public int Top;
      public int Right;
      public int Bottom;
    }
  }
}
