// Decompiled with JetBrains decompiler
// Type: ‎‭‫‏‪⁯‪⁫⁪⁫‍⁯‏‎⁯‭‍⁯‫​⁮⁯‭‏‮⁭‎‭​⁪‎⁪​‫​‫‮⁬⁭‎‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u200E‭‫‏‪⁯‪⁫⁪⁫‍⁯‏‎⁯‭‍⁯‫​⁮⁯‭‏‮⁭‎‭​⁪‎⁪​‫​‫‮⁬⁭‎‮ : 
  \u206E‬‮‪⁯‏⁮⁯‬​⁭⁯‫⁭‪⁮⁪⁪‍⁫‭⁯‍⁯‎‍‬​‎⁪⁭‎⁭‪⁫⁭‫⁮‫⁬‮
{
  private \u202C‌‌‌⁭⁬‭⁭‎‎‪‎⁫⁭⁮‪‭‏⁫‫⁬⁯‌‌⁫‭⁭‍⁭‪⁬‬‍​‌‎‫‍‭⁪‮ \u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮;
  private int \u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  private ulong \u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮;
  private byte[] \u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮;
  private byte[] \u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮;

  public string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "DSTU7564Mac";

  public \u200E‭‫‏‪⁯‪⁫⁪⁫‍⁯‏‎⁯‭‍⁯‫​⁮⁯‭‏‮⁭‎‭​⁪‎⁪​‫​‫‮⁬⁭‎‮(int _param1)
  {
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮ = new \u202C‌‌‌⁭⁬‭⁭‎‎‪‎⁫⁭⁮‪‭‏⁫‫⁬⁯‌‌⁫‭⁭‍⁭‪⁬‬‍​‌‎‫‍‭⁪‮(_param1);
    this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = _param1 / 8;
  }

  public void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param1)
  {
    byte[] numArray = _param1 is \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ ? ((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) _param1).\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮() : throw new ArgumentException("Bad parameter passed");
    this.\u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮ = new byte[numArray.Length];
    this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮ = this.\u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(numArray);
    for (int index = 0; index < this.\u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮.Length; ++index)
      this.\u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮[index] = (byte) ((uint) numArray[index] ^ (uint) byte.MaxValue);
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮, 0, this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮.Length);
  }

  public int \u202D​⁮‍⁭⁫‍‌​‮⁫​​⁭⁯⁬⁪‫‬‭‪‫‭⁫⁬‫‭‬⁯‭⁮‎‍‫‌‎⁪⁭⁭‫‮() => this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;

  public void \u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, _param3, "Input buffer too short");
    if (this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮ == null)
      throw new InvalidOperationException(this.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + " not initialised");
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
    this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮ += (ulong) _param3;
  }

  public void \u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(byte _param1)
  {
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(_param1);
    ++this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮;
  }

  public int \u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(byte[] _param1, int _param2)
  {
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param1, _param2, this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮, "Output buffer too short");
    if (this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮ == null)
      throw new InvalidOperationException(this.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + " not initialised");
    this.\u206B‪‫‏‌⁯⁭⁯‬‮‪‭‮⁯‎⁮‪⁪​‍‍⁫⁪‪⁭‫⁮⁫⁭⁮⁯‌‍⁪‏⁪⁭‬⁭‪‮();
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮, 0, this.\u206B‭‮⁮⁬‪‬‌⁫⁪​‭‍⁯​​‮⁮‏‪‍‎⁬​‎‭‪‬‭⁯‎⁭‌‪⁭⁫‎⁯⁮‎‮.Length);
    this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮ = 0UL;
    return this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(_param1, _param2);
  }

  public void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
    this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮ = 0UL;
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    if (this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮ == null)
      return;
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮, 0, this.\u202A⁭⁬‮‭‌​‎⁫⁬⁮‭⁯‬⁮⁫‍‪‭⁪‍⁪‌⁮‎⁮⁮​⁪⁭‌‌​⁫⁪‮⁭‌‌‏‮.Length);
  }

  private void \u206B‪‫‏‌⁯⁭⁯‬‮‪‭‮⁯‎⁮‪⁪​‍‍⁫⁪‪⁭‫⁮⁫⁭⁮⁯‌‍⁪‏⁪⁭‬⁭‪‮()
  {
    int length = this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮() - (int) (this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮ % (ulong) this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮());
    if (length < 13)
      length += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮();
    byte[] numArray = new byte[length];
    numArray[0] = (byte) 128;
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(this.\u202B⁯‏‬⁫‫⁮⁭‬⁪‪⁪‭​‬‌‪‬⁪⁪‪⁮‭​⁮‍‌‮‫​‌‪‎‬‭⁪⁪​⁮‎‮ * 8UL, numArray, numArray.Length - 12);
    this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray, 0, numArray.Length);
  }

  private byte[] \u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(byte[] _param1)
  {
    int length = (_param1.Length + this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮() - 1) / this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮() * this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮();
    if (this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮() - _param1.Length % this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮() < 13)
      length += this.\u200D⁯‌‎‏⁪⁬‏‭‮‍⁯‪‍⁪‍‫‪‍⁮⁯‬‍⁫‬⁮⁬​⁪‌‭‫⁫‍⁭‮‌‭⁫⁭‮.\u206E⁮‎⁪‏‎‬‪⁮‮⁮‪‌‍‬⁭‭‪⁪‭‌‮‍‌‮‌‬‎‪‪‬‏‎⁬‍‌⁭‎⁪‪‮();
    byte[] destinationArray = new byte[length];
    Array.Copy((Array) _param1, 0, (Array) destinationArray, 0, _param1.Length);
    destinationArray[_param1.Length] = (byte) 128;
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A‫‎⁮‌‮‭‎‪⁭​‌⁮‬⁬⁪⁮‌‎⁮‬‍‫⁬⁮‍‏⁯‏‍⁭⁪‬‎‭‌⁯‍⁬‬‮((uint) (_param1.Length * 8), destinationArray, destinationArray.Length - 12);
    return destinationArray;
  }
}
