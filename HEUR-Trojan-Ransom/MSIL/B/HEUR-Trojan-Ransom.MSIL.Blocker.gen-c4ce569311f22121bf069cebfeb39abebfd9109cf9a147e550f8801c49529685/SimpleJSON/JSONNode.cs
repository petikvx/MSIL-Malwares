// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SessionMa, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 29EA69E7-0E4F-4884-A9FC-633229D6DF5B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c4ce569311f22121bf069cebfeb39abebfd9109cf9a147e550f8801c49529685.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 337815252;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 80586793)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -314170377 ^ 1305279933;
              continue;
            case 3:
              num1 = (int) num2 * 1572259620 ^ -309797685;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -353387014;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -313404269)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 547625129 ^ 562140876;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1175026176;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1496562168)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * -23188635 ^ 1096353410;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 32882213;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1759758311)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * 439592649 ^ 131298846;
            continue;
          case 3:
            num1 = (int) num2 * -1882791636 ^ 335887470;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1035394707;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1586735718)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -718466336 ^ 1645810587;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1335292945 ^ -882208581;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1362032452;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 336065)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1291740100 ^ -1328718328;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1294279140;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1271990922)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -778245545 ^ -900956369;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_Childs\u003Ed__17(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 deepChilds = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1576145182;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 91500439)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds.\u003C\u003E4__this = this;
              num1 = (int) num2 * -35847429 ^ 1085995930;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1212311445;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1077045712)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1386648737 ^ 950186664;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -228270590;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1362991347)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 153241452 ^ 570657372;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * 947078956 ^ 947496965;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 970961127;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 670113152)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 115520660 ^ -2136624970;
              continue;
            case 1:
              result = 0;
              int num3 = int.TryParse(this.Value, out result) ? -1917866645 : (num3 = -317834090);
              num1 = num3 ^ (int) num2 * 34779073;
              continue;
            case 3:
              goto label_1;
            case 4:
              asInt = result;
              num1 = (int) num2 * 261576873 ^ 147884594;
              continue;
            case 5:
              asInt = 0;
              num1 = 184388590;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1322494460;
        float asFloat;
        float result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 398456041)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = result;
              num1 = (int) num2 * 1080039085 ^ 1201948316;
              continue;
            case 2:
              num1 = (int) num2 * 574934770 ^ -1064984168;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = 798845124;
              continue;
            case 5:
              result = 0.0f;
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200B‭⁬⁯‬‭‮‬‬⁪⁫‬‮⁭‬‫‮‭⁯‭‎‎‏​⁭⁯‫​‌​‪⁭‌‫‭⁪‎⁫⁭‎‮(), out result) ? 2102728616 : (num3 = 1175919813);
              num1 = num3 ^ (int) num2 * -1744485329;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -708328567;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1927522349)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 2045681683 ^ -834574076;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1749266820 ^ 59322826;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -1915585927;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -581526390)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1809017029 ^ -160811604;
              continue;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 345275584 ^ -1191440800;
              continue;
            case 3:
              asDouble = result;
              num1 = (int) num2 * -492634011 ^ 384429824;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = -120569820;
              continue;
            case 5:
              int num3 = flag ? -454006162 : (num3 = -1743187870);
              num1 = num3 ^ (int) num2 * 442258791;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 331333239;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1112202449)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -71332728 ^ 364593825;
              continue;
            case 2:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1502169791 ^ -2042896210;
              continue;
            case 3:
              asBool = result;
              num1 = (int) num2 * -1604011657 ^ 746925876;
              continue;
            case 4:
              int num3 = !flag ? 1851911021 : (num3 = 208675362);
              num1 = num3 ^ (int) num2 * -1005712207;
              continue;
            case 5:
              asBool = !JSONNode.\u200C‫​‮‬‮⁪‎⁯‭‍⁫⁬‎⁮⁫⁯‪‪‫‮⁯‭‎​⁬⁭⁯‬‏‬‪‮‬⁫​‎‭‪⁭‮(this.Value);
              num1 = 111139161;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = 483884116;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1378463686)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1944191869 ^ 591376413;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = 637045443;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1903594173)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1445515555 ^ -1104017421;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1905438659;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1174891896)) % 4U)
        {
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 778550743 ^ -683789870;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -2018287606;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = 418746065;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1750281922)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 2060659042 ^ 150483390;
            continue;
          case 1:
            flag = (object) a == b;
            num1 = 37811156;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag = true;
            num1 = (int) num2 * 1900742308 ^ 635341360;
            continue;
          case 4:
            goto label_5;
          case 6:
            num1 = (int) num2 * -1706399307 ^ 423699864;
            continue;
          default:
            goto label_10;
        }
      }
label_5:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_10:
      return flag;
label_6:
      num3 = 0;
label_7:
      num1 = num3 != 0 ? 1182905862 : (num1 = 1181888320);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -200388297;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1152023096)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1168005434 ^ -625502756;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * 392789759 ^ 1448852116;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = -1984507604;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1967430532)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1325268800 ^ 1082681574;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u202E‏⁭⁪⁯⁯‏⁪⁯⁪⁬‬‍‫⁮‭‌⁯‎‬‫‎‪‭‬‮‌‮⁭‎⁮‬⁮‍‫⁫⁮⁮‭‫‮();
label_1:
      int num1 = -1340483456;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -290620648)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1823545029 ^ 792860877;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 705410700;
      string str1;
      int num2;
      string str2;
      char ch1;
      string str3;
      char ch2;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1846611186)) % 31U)
        {
          case 0:
            num1 = (int) num3 * -666312944 ^ 1806876632;
            continue;
          case 2:
label_23:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\t");
            num1 = 226152024;
            continue;
          case 3:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\\\");
            num1 = 304236242;
            continue;
          case 4:
label_3:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\b");
            num1 = 226152024;
            continue;
          case 5:
label_20:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\r");
            num1 = 1575832682;
            continue;
          case 6:
            str2 = aText;
            num1 = (int) num3 * 698600777 ^ -1430454825;
            continue;
          case 7:
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(str2, num2);
            num1 = 191980974;
            continue;
          case 8:
            num1 = (int) num3 * -1104257027 ^ -551654526;
            continue;
          case 9:
            num1 = (int) num3 * 100288949 ^ 567195159;
            continue;
          case 10:
label_17:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\n");
            num1 = 2123664793;
            continue;
          case 11:
            int num4;
            num1 = num4 = ch2 != '"' ? 1890926254 : (num4 = 1257914099);
            continue;
          case 12:
            ch3 = ch1;
            num1 = (int) num3 * -1934307563 ^ -1902680753;
            continue;
          case 13:
            num1 = (int) num3 * -1558300126 ^ 539088408;
            continue;
          case 14:
label_7:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, ch1.ToString());
            num1 = 226152024;
            continue;
          case 15:
            num1 = (int) num3 * -979360257 ^ -136627935;
            continue;
          case 16:
            int num5;
            num1 = num5 = ch2 == '\\' ? 704641876 : (num5 = 632867320);
            continue;
          case 17:
            ++num2;
            num1 = 1025688816;
            continue;
          case 18:
            num1 = (int) num3 * -470249427 ^ 1301356951;
            continue;
          case 19:
            num1 = (int) num3 * 912780193 ^ -2017894259;
            continue;
          case 20:
            switch (ch2)
            {
              case '\b':
                goto label_3;
              case '\t':
                goto label_23;
              case '\n':
                goto label_17;
              case '\v':
                goto label_7;
              case '\f':
                goto label_13;
              case '\r':
                goto label_20;
              default:
                num1 = (int) num3 * -381474996 ^ 2137915877;
                continue;
            }
          case 21:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\\"");
            num1 = 2072535169;
            continue;
          case 22:
            ch2 = ch3;
            num1 = (int) num3 * 427720861 ^ 2120797210;
            continue;
          case 23:
            str3 = str1;
            num1 = (int) num3 * -1042534849 ^ -1540134719;
            continue;
          case 24:
            num1 = (int) num3 * 1450551109 ^ -1723454038;
            continue;
          case 25:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200C⁭‮‌⁪‭⁬​‪⁬‬‎⁯‮‭⁪⁫‪‌‫⁭⁬‍‌‪‎​‍‍‮‭‏⁮⁯⁭‪⁭‪‏‎‮(str2) ? 1793073287 : (num6 = 834326405);
            continue;
          case 26:
            str1 = "";
            num1 = (int) num3 * -1533648774 ^ 1183461770;
            continue;
          case 27:
            goto label_1;
          case 28:
            num2 = 0;
            num1 = (int) num3 * 1192793486 ^ -973580223;
            continue;
          case 29:
            num1 = (int) num3 * 1336228245 ^ 2000168308;
            continue;
          case 30:
label_13:
            str1 = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, "\\f");
            num1 = 226152024;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = 1552337860;
      bool flag1;
      bool flag2;
      string aItem;
      string aKey;
      bool flag3;
      int num2;
      char ch1;
      char ch2;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch3;
      bool flag7;
      char ch4;
      bool flag8;
      string s;
      bool flag9;
      JSONNode jsonNode2;
      bool flag10;
      bool flag11;
      char ch5;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 652531293)) % 147U)
        {
          case 0:
            num1 = (int) num3 * -687777476 ^ 1716314403;
            continue;
          case 1:
            int num4 = flag2 ? -816029813 : (num4 = -413388041);
            num1 = num4 ^ (int) num3 * 597170015;
            continue;
          case 2:
            int num5;
            num1 = num5 = ch2 == ',' ? 1075693137 : (num5 = 2057337513);
            continue;
          case 3:
            aKey = aItem;
            aItem = "";
            num1 = 38377150;
            continue;
          case 4:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1768063617 ^ 720996136;
            continue;
          case 5:
            jsonNodeStack.Pop();
            flag8 = JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aItem, "");
            num1 = 204394210;
            continue;
          case 6:
            int num6 = ch2 != ':' ? 2145143564 : (num6 = 991267007);
            num1 = num6 ^ (int) num3 * 1690648993;
            continue;
          case 7:
            ch3 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            num1 = (int) num3 * -696787250 ^ -1213075159;
            continue;
          case 8:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 282001325 ^ 826216138;
            continue;
          case 9:
            num1 = 529650664;
            continue;
          case 10:
            goto label_59;
          case 11:
label_65:
            ++num2;
            num1 = 29240861;
            continue;
          case 12:
            string str1 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str1, str2);
            num1 = (int) num3 * 718885413 ^ -225171243;
            continue;
          case 13:
            int num7 = ch2 > ' ' ? -271427845 : (num7 = -1641566779);
            num1 = num7 ^ (int) num3 * -830885903;
            continue;
          case 14:
            num1 = (int) num3 * -1059156424 ^ -750495923;
            continue;
          case 15:
            num1 = (int) num3 * 1545310882 ^ -208956894;
            continue;
          case 16:
            num1 = 185183335;
            continue;
          case 17:
            num1 = 2061944454;
            continue;
          case 18:
            num1 = (int) num3 * 1218087027 ^ -1864701139;
            continue;
          case 19:
            s = JSONNode.\u206D‏‏‍‫‬⁪⁪⁪‎⁮‫‭‭‍‭‭⁪⁫⁮‫⁪⁯‬‍‌⁭‍⁯‏⁮‎⁯‮‎⁭​‌⁪‍‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -796579183 ^ 927205255;
            continue;
          case 20:
            num1 = (int) num3 * 1247676519 ^ -1244510794;
            continue;
          case 21:
            num1 = (int) num3 * 565922507 ^ 943932836;
            continue;
          case 22:
            num1 = (int) num3 * 320487923 ^ 1617314519;
            continue;
          case 23:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1563744306 ^ 424221958;
            continue;
          case 24:
            int num8 = !flag6 ? -1486494051 : (num8 = -389483907);
            num1 = num8 ^ (int) num3 * -68756974;
            continue;
          case 25:
            num1 = (int) num3 * 1650191608 ^ -440950724;
            continue;
          case 26:
            aKey = JSONNode.\u206F⁭⁭⁮​‭​‬⁭‮‎‭⁫‏⁬⁬‫⁭‏‏⁬⁫‏‍‍⁯⁬‏‬⁮‍‫‪⁫⁬‪‬‍‫‭‮(aKey);
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -141028719 ^ 1290642913;
            continue;
          case 27:
            num2 = 0;
            aItem = "";
            aKey = "";
            flag1 = false;
            num1 = (int) num3 * 1808383580 ^ -558208018;
            continue;
          case 28:
label_95:
            num1 = 900133473;
            continue;
          case 29:
            num1 = (int) num3 * -2034621937 ^ 1644111217;
            continue;
          case 30:
            goto label_122;
          case 31:
            flag11 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 1400029497 ^ -770216164;
            continue;
          case 32:
            aItem = "";
            num1 = (int) num3 * 1158028832 ^ 1064691769;
            continue;
          case 33:
            num1 = (int) num3 * -403419956 ^ -2121612217;
            continue;
          case 34:
            num1 = (int) num3 * 695962416 ^ -1454654698;
            continue;
          case 35:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, "\b");
            num1 = 1906803277;
            continue;
          case 36:
            int num9 = !flag9 ? 1065017144 : (num9 = 300453084);
            num1 = num9 ^ (int) num3 * 486002502;
            continue;
          case 37:
            int num10;
            num1 = num10 = !JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aKey, "") ? 2078417858 : (num10 = 326449652);
            continue;
          case 38:
            num1 = (int) num3 * -154979956 ^ -1864819032;
            continue;
          case 39:
label_133:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, "\r");
            num1 = 794596943;
            continue;
          case 40:
            int num11 = !(jsonNode1 is JSONArray) ? -138222231 : (num11 = -917209377);
            num1 = num11 ^ (int) num3 * 2050449074;
            continue;
          case 41:
            num1 = 1833092555;
            continue;
          case 42:
            jsonNode2 = jsonNode1;
            num1 = 1811957263;
            continue;
          case 43:
            flag3 = JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aKey, "");
            num1 = 117474456;
            continue;
          case 44:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 225788435 ^ -1201036254;
            continue;
          case 45:
            switch (ch2)
            {
              case '\t':
                goto label_3;
              case '\n':
              case '\r':
                goto label_112;
              case '\v':
              case '\f':
                goto label_7;
              default:
                num1 = (int) num3 * -897837 ^ 1906475862;
                continue;
            }
          case 46:
            int num12;
            num1 = num12 = !JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aKey, "") ? 691153572 : (num12 = 921919870);
            continue;
          case 47:
            num1 = (int) num3 * 1346105278 ^ 661734665;
            continue;
          case 48:
            aKey = "";
            num1 = 250658510;
            continue;
          case 49:
            int num13 = !flag4 ? 1879539605 : (num13 = 1953173087);
            num1 = num13 ^ (int) num3 * -447770569;
            continue;
          case 50:
            ch2 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            num1 = (int) num3 * 497243473 ^ 1774202891;
            continue;
          case 51:
            aKey = "";
            num1 = 1230038841;
            continue;
          case 52:
            aKey = JSONNode.\u206F⁭⁭⁮​‭​‬⁭‮‎‭⁫‏⁬⁬‫⁭‏‏⁬⁫‏‍‍⁯⁬‏‬⁮‍‫‪⁫⁬‪‬‍‫‭‮(aKey);
            num1 = (int) num3 * -1027953434 ^ 2007750685;
            continue;
          case 53:
            num1 = (int) num3 * 1168498650 ^ 1430688786;
            continue;
          case 54:
            num1 = (int) num3 * 889950147 ^ -2007850264;
            continue;
          case 55:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, "\f");
            num1 = 1906803277;
            continue;
          case 56:
            int num14 = ch2 > ',' ? 689004456 : (num14 = 1190958503);
            num1 = num14 ^ (int) num3 * 976694598;
            continue;
          case 57:
            aKey = "";
            aItem = "";
            num1 = 463110393;
            continue;
          case 58:
            num1 = (int) num3 * 994531469 ^ 380109802;
            continue;
          case 59:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1516325861 ^ 1036311611;
            continue;
          case 60:
            num1 = (int) num3 * 1884446678 ^ 295672412;
            continue;
          case 61:
            int num15;
            num1 = num15 = !JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aKey, "") ? 1907711936 : (num15 = 1280488252);
            continue;
          case 62:
            aItem = "";
            num1 = (int) num3 * -951720055 ^ 1174865538;
            continue;
          case 63:
            string str3 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str3, str4);
            num1 = (int) num3 * 503869832 ^ -1612867236;
            continue;
          case 64:
            flag7 = jsonNodeStack.Count == 0;
            num1 = 2126209224;
            continue;
          case 65:
            int num16 = !(jsonNode1 is JSONArray) ? 623726672 : (num16 = 194627133);
            num1 = num16 ^ (int) num3 * 1459504506;
            continue;
          case 66:
            int num17;
            num1 = num17 = ch4 == 'n' ? 299330845 : (num17 = 1234788477);
            continue;
          case 67:
            int num18;
            num1 = num18 = !flag1 ? 1331001408 : (num18 = 857539542);
            continue;
          case 68:
            int num19 = ch4 != 'b' ? -141461579 : (num19 = -2051371099);
            num1 = num19 ^ (int) num3 * 1154605613;
            continue;
          case 69:
            flag1 = !flag1;
            num1 = 1444311339;
            continue;
          case 70:
            int num20;
            num1 = num20 = ch2 == '"' ? 372676286 : (num20 = 144289992);
            continue;
          case 71:
            string str5 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str5, str6);
            num1 = (int) num3 * 410636313 ^ 2093600051;
            continue;
          case 72:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 2098948700;
            continue;
          case 73:
          case 84:
          case 116:
          case 122:
          case 136:
label_112:
            ++num2;
            num1 = 630784319;
            continue;
          case 74:
            num1 = (int) num3 * -1623665792 ^ 1726012093;
            continue;
          case 75:
            num1 = (int) num3 * 74943729 ^ -57658371;
            continue;
          case 76:
            num1 = 713044618;
            continue;
          case 77:
            num1 = (int) num3 * 727550695 ^ 368182899;
            continue;
          case 78:
            int num21 = flag1 ? 616674571 : (num21 = 1897606091);
            num1 = num21 ^ (int) num3 * -1785225544;
            continue;
          case 79:
            int num22 = flag12 ? 1189144486 : (num22 = 734746999);
            num1 = num22 ^ (int) num3 * -2129555086;
            continue;
          case 80:
            int num23 = flag13 ? 1637260250 : (num23 = 1073979668);
            num1 = num23 ^ (int) num3 * -930294918;
            continue;
          case 81:
            switch (ch4)
            {
              case 'r':
                goto label_133;
              case 's':
                goto label_26;
              case 't':
                goto label_131;
              case 'u':
                goto label_95;
              default:
                num1 = 1628222864;
                continue;
            }
          case 82:
            num1 = (int) num3 * -258774571 ^ -1181300281;
            continue;
          case 83:
            int num24;
            num1 = num24 = ch2 == '{' ? 1057646809 : (num24 = 1820897550);
            continue;
          case 85:
            num1 = (int) num3 * -848297505 ^ -1355332656;
            continue;
          case 86:
            num1 = (int) num3 * 1636701136 ^ -149423332;
            continue;
          case 87:
            num1 = (int) num3 * 956164283 ^ -977655442;
            continue;
          case 88:
label_38:
            flag5 = flag1;
            num1 = 1246869442;
            continue;
          case 89:
            switch (ch2)
            {
              case '[':
                goto label_38;
              case '\\':
                goto label_65;
              case ']':
                goto label_67;
              default:
                num1 = 734629437;
                continue;
            }
          case 90:
            int num25 = flag3 ? -906227133 : (num25 = -1556082393);
            num1 = num25 ^ (int) num3 * -1064978350;
            continue;
          case 91:
            int num26 = !flag7 ? -1860220034 : (num26 = -1554385841);
            num1 = num26 ^ (int) num3 * -870089854;
            continue;
          case 92:
            flag6 = JSONNode.\u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮(aItem, "");
            num1 = 564499336;
            continue;
          case 93:
            int num27 = !(jsonNode1 != (object) null) ? -259736427 : (num27 = -198136956);
            num1 = num27 ^ (int) num3 * -2003463285;
            continue;
          case 94:
            string str7 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str7, str8);
            num1 = (int) num3 * 602805738 ^ -585359468;
            continue;
          case 95:
label_67:
            flag9 = flag1;
            num1 = 445790359;
            continue;
          case 96:
            int num28 = flag8 ? -1226051577 : (num28 = -771605846);
            num1 = num28 ^ (int) num3 * -172632770;
            continue;
          case 97:
            goto label_1;
          case 98:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            int num29;
            num1 = num29 = jsonNode1 != (object) null ? 525826209 : (num29 = 713044618);
            continue;
          case 99:
label_3:
            flag2 = flag1;
            num1 = 1042774415;
            continue;
          case 100:
            ch4 = ch5;
            int num30 = ch4 <= 'f' ? -628991502 : (num30 = -400766645);
            num1 = num30 ^ (int) num3 * 1151094512;
            continue;
          case 101:
            num1 = (int) num3 * 1456619139 ^ 1217334666;
            continue;
          case 102:
            int num31;
            num1 = num31 = ch2 <= ']' ? 394150048 : (num31 = 332051097);
            continue;
          case 103:
            string str9 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str9, str10);
            num1 = (int) num3 * 1938087473 ^ -383569503;
            continue;
          case 104:
            num1 = (int) num3 * -355987213 ^ 23379951;
            continue;
          case 105:
            flag4 = flag1;
            num1 = 1628728383;
            continue;
          case 106:
            num1 = (int) num3 * -1657923216 ^ 1916110381;
            continue;
          case 107:
            flag10 = flag1;
            num1 = (int) num3 * 1573432744 ^ -640462020;
            continue;
          case 108:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, "\n");
            num1 = 1906803277;
            continue;
          case 109:
            int num32 = flag11 ? 1186886131 : (num32 = 2073958056);
            num1 = num32 ^ (int) num3 * 577690940;
            continue;
          case 110:
            num1 = 1412954220;
            continue;
          case 111:
label_131:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, "\t");
            num1 = 776431165;
            continue;
          case 112:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -687318632 ^ 68620618;
            continue;
          case 113:
            string str11 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str11, str12);
            num1 = (int) num3 * -980063419 ^ -2008287513;
            continue;
          case 114:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -328168769 ^ -1590710895;
            continue;
          case 115:
            num1 = (int) num3 * 298916982 ^ 1603307868;
            continue;
          case 117:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1386224932 ^ -1752654180;
            continue;
          case 118:
label_7:
            string str13 = aItem;
            ch1 = JSONNode.\u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮(aJSON, num2);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str13, str14);
            num1 = 1226382697;
            continue;
          case 119:
            int num33;
            num1 = num33 = num2 < JSONNode.\u200C⁭‮‌⁪‭⁬​‪⁬‬‎⁯‮‭⁪⁫‪‌‫⁭⁬‍‌‪‎​‍‍‮‭‏⁮⁯⁭‪⁭‪‏‎‮(aJSON) ? 1054758752 : (num33 = 399136732);
            continue;
          case 120:
            int num34 = !flag10 ? -1324381009 : (num34 = -1446873053);
            num1 = num34 ^ (int) num3 * 1553349613;
            continue;
          case 121:
label_26:
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(aItem, ch3.ToString());
            num1 = 1444260087;
            continue;
          case 123:
            num1 = (int) num3 * -730563451 ^ 629206244;
            continue;
          case 124:
            num1 = (int) num3 * -1299096380 ^ -672128261;
            continue;
          case 125:
            num1 = (int) num3 * 463140736 ^ 1913637949;
            continue;
          case 126:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1266630625;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1727556796 ^ 1179381833;
            continue;
          case 128:
            int num35 = flag5 ? 763305423 : (num35 = 38564343);
            num1 = num35 ^ (int) num3 * -874715960;
            continue;
          case 129:
            int num36;
            num1 = num36 = ch2 == '}' ? 761350670 : (num36 = 1333053751);
            continue;
          case 130:
            num2 += 4;
            num1 = (int) num3 * 1452960341 ^ -2014173900;
            continue;
          case 131:
            num1 = (int) num3 * 1316801914 ^ 783445338;
            continue;
          case 132:
            num1 = (int) num3 * 503617239 ^ 914099659;
            continue;
          case 133:
            string str15 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮(str15, str16);
            num1 = (int) num3 * -2145444837 ^ -1473703645;
            continue;
          case 134:
            int num37;
            num1 = num37 = ch4 == 'f' ? 1727207411 : (num37 = 1769185163);
            continue;
          case 135:
            aKey = JSONNode.\u206F⁭⁭⁮​‭​‬⁭‮‎‭⁫‏⁬⁬‫⁭‏‏⁬⁫‏‍‍⁯⁬‏‬⁮‍‫‪⁫⁬‪‬‍‫‭‮(aKey);
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 755298651 ^ -1642542088;
            continue;
          case 137:
            num1 = (int) num3 * 1179290356 ^ 441406300;
            continue;
          case 138:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -465837535 ^ 112473355;
            continue;
          case 139:
            int num38;
            num1 = num38 = flag1 ? 786068163 : (num38 = 1911267465);
            continue;
          case 140:
            num1 = (int) num3 * -2132358570 ^ 877151189;
            continue;
          case 142:
            num1 = (int) num3 * 1637153393 ^ 904753758;
            continue;
          case 143:
            ch5 = ch3;
            num1 = (int) num3 * 2124146320 ^ 1931187234;
            continue;
          case 144:
            num1 = (int) num3 * 744209528 ^ 943724053;
            continue;
          case 145:
            num1 = (int) num3 * 1856833024 ^ -437172074;
            continue;
          case 146:
            int num39;
            num1 = num39 = ch2 != ' ' ? 1438228491 : (num39 = 515286876);
            continue;
          default:
            goto label_147;
        }
      }
label_59:
      throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("JSON Parse: Too many closing brackets");
label_122:
      throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("JSON Parse: Quotation marks seems to be messed up.");
label_147:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -972015503;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1696392852)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u206F‎‏‌‌⁯‌‬⁬‎⁯‏⁪⁪‎⁯⁫​‎‎‏⁮‭‌‪⁭⁮‌​⁪‍⁬‬‍‬⁭‫‍⁮⁭‮(aData);
            num1 = (int) num2 * -1552995112 ^ -1491228933;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202C‎‫‫‬‎‏‎‍⁭⁮‮⁪‮‎⁮⁬‫​⁭⁯‎‮‬⁫⁯⁮‮‫‎⁪⁪‎‍‏‮‬⁫⁭⁮‮(JSONNode.\u202D‭⁮‫⁪⁪‮‫⁬⁯⁪‬⁭‬‏‪‭⁮‫‬⁪‪‏⁭‌⁪‎⁪‫⁮⁪⁭⁯⁪⁬‮⁯⁯‭‭‮((FileSystemInfo) JSONNode.\u206A⁯​‪‎​‍‏⁪‫‫​⁮‎‎‎‍‪‮⁮⁯‫⁮‬‍⁭⁭⁫‫‌⁫‎‮⁪⁮‍​‍‎⁫‮(JSONNode.\u202B⁪‌⁫‬‌‫‍​‌‫​⁪⁯⁭‏‫‬‬‪⁬‎‎​‬‭‭‌‎‏⁯‌⁬​‌⁭‮​⁬‍‮(aFileName))));
      FileStream aData = JSONNode.\u202E‎⁪⁬​⁮‬​‌⁭⁬‮‍⁭‮‏‏⁫⁫⁫⁮‫⁪​​⁯⁭⁫‍⁮‏‬‬​​‮‎⁯‏‭‮(aFileName);
      try
      {
label_2:
        int num1 = -943463988;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -980262691)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1171411229 ^ -1425886880;
              continue;
            case 2:
              num1 = (int) num2 * 737996433 ^ 1525726623;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -2094436164;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -980262691)) % 4U)
            {
              case 1:
                JSONNode.\u206C⁫​‏‍‪‍‬‏‪‬‌‎‎‭‌⁪⁬‌‮⁪⁭‫⁮‪‌‪⁭⁬​‏⁪‭​‪‮​‪‮‪‮((IDisposable) aData);
                num3 = (int) num4 * 1010725275 ^ -1345831048;
                continue;
              case 2:
                num3 = (int) num4 * 1442856197 ^ 288101039;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206D‍⁯‌⁮⁮‫⁮⁫⁪​‪⁯⁭⁯‪​‌⁮‭⁮​‎⁬⁮​‌⁪​‏‍‌⁬‪⁬⁬‮‪‭‮‮();
      try
      {
label_2:
        int num1 = -1819068653;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -917964250)) % 5U)
          {
            case 1:
              JSONNode.\u202A‫⁭​⁮‫‌⁬​‎‌‌‭‌‬⁮⁪‌⁫‍‮‪​‎‪⁮‫‮‭⁬‫⁮‬⁭​‫⁭‭‎⁯‮((Stream) aData, 0L);
              num1 = (int) num2 * -1177270764 ^ 1556167536;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -2059194980 ^ -1475193159;
              continue;
            case 3:
              num1 = (int) num2 * 691717413 ^ 2028878517;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_7;
          }
        }
label_7:
        return JSONNode.\u200F‮‍‏‪⁬⁮‌⁭‎⁫⁭⁭⁪⁮⁪⁭⁭‌⁯⁪‫‌‌⁯‪‌‫‏‬‫⁭⁯‭‏⁮‮⁭‭⁪‮(JSONNode.\u202A‪‎‫‎⁭‪⁭⁮⁫⁮⁫‎‌⁯⁮‪‍‭⁪‍​‌​‌‫‎‮‍⁮‎‌‌‌⁫⁪‍‭⁪‌‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -2003078328;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -917964250)) % 3U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u206C⁫​‏‍‪‍‬‏‪‬‌‎‎‭‌⁪⁬‌‮⁪⁭‫⁮‪‌‪⁭⁬​‏⁪‭​‪‮​‪‮‪‮((IDisposable) aData);
                num3 = (int) num4 * 1642524574 ^ -1466366470;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1737570704;
      JSONBinaryTag jsonBinaryTag1;
      bool flag1;
      int num2;
      JSONClass jsonClass;
      int num3;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag2;
      int num4;
      int num5;
      bool flag2;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1578585483)) % 38U)
        {
          case 0:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -521717827 ^ 2027680788;
            continue;
          case 1:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num4;
            num1 = -235757215;
            continue;
          case 2:
            ++num3;
            num1 = (int) num6 * 494625671 ^ 1757883520;
            continue;
          case 3:
            num1 = (int) num6 * -1895545320 ^ -865788887;
            continue;
          case 4:
            num1 = (int) num6 * 1265800837 ^ 655196175;
            continue;
          case 5:
            flag2 = num3 < num2;
            num1 = -1260028770;
            continue;
          case 6:
            num1 = -108673778;
            continue;
          case 7:
            int num7 = flag1 ? -580495204 : (num7 = -817020253);
            num1 = num7 ^ (int) num6 * 9255578;
            continue;
          case 8:
            jsonBinaryTag2 = jsonBinaryTag3;
            num1 = (int) num6 * 1375347613 ^ -601290919;
            continue;
          case 9:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206E⁯‫⁫‭‭​​‍⁬‫​⁬‫‎‮⁪‮‭‏‫⁫‬‌​‪⁭‏‍‮‬⁮‍⁮‍‎‪⁪‎‪‮(aReader);
            jsonBinaryTag3 = jsonBinaryTag1;
            num1 = (int) num6 * 418969988 ^ -35789813;
            continue;
          case 10:
            num1 = (int) num6 * -1098881793 ^ 1611895897;
            continue;
          case 11:
            num1 = (int) num6 * -1184523734 ^ -70946345;
            continue;
          case 12:
            num4 = 0;
            num1 = (int) num6 * 1272953176 ^ 72808637;
            continue;
          case 13:
label_28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F​‎‌‏‮‫‮⁭‎‫‎‪⁪‬‫‮⁯‬⁭‫⁪‬‭‌‭⁬‮‎⁯‮⁬‎⁯⁬⁮‌‍⁫‍‮(aReader));
            num1 = -1334217631;
            continue;
          case 14:
            num1 = (int) num6 * 1104319737 ^ -760750284;
            continue;
          case 15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‫‬‮⁬‍‬‍‪⁯​‪​‏‪​‮‍‬‏⁯⁫⁯‮⁬‏​⁮‍‮⁪⁪⁮​⁪‎⁬‍‍‬‮(aReader));
            num1 = (int) num6 * -1836900067 ^ -815342620;
            continue;
          case 16:
            num1 = -1002215274;
            continue;
          case 17:
            goto label_1;
          case 18:
label_29:
            num1 = -602312016;
            continue;
          case 19:
            num2 = JSONNode.\u206A‏‌‍‏‍‭​⁮‎‍⁪‫‬‏‮‫⁬⁭‎⁯‬‬⁬⁮‫‭‏‮‮‏⁬⁬‎‍​⁫​‌⁪‮(aReader);
            jsonClass = new JSONClass();
            num3 = 0;
            num1 = (int) num6 * -673237661 ^ -590993168;
            continue;
          case 20:
            num1 = (int) num6 * -1507439593 ^ 510794529;
            continue;
          case 21:
            int num8 = flag2 ? -1892788385 : (num8 = -49250993);
            num1 = num8 ^ (int) num6 * -1954559792;
            continue;
          case 22:
            num1 = (int) num6 * -235839456 ^ 1740894817;
            continue;
          case 23:
            num1 = (int) num6 * -1587717484 ^ 911384541;
            continue;
          case 25:
label_33:
            num5 = JSONNode.\u206A‏‌‍‏‍‭​⁮‎‍⁪‫‬‏‮‫⁬⁭‎⁯‬‬⁬⁮‫‭‏‮‮‏⁬⁬‎‍​⁫​‌⁪‮(aReader);
            jsonArray = new JSONArray();
            num1 = -1014143893;
            continue;
          case 26:
            flag1 = num4 < num5;
            num1 = -1425528270;
            continue;
          case 27:
            goto label_6;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D⁪‪‌⁫⁫‎‪⁯‮⁪⁪⁪‌⁫⁮‏‮‏‫⁯‌​⁮‎‎‌‭‍​‬⁮‬⁪‫​⁪​‎⁬‮(aReader));
            num1 = (int) num6 * -1961992297 ^ -873017646;
            continue;
          case 29:
label_16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‍‏‌‌‍⁫⁮‎‌‪​⁪‍⁫⁮‍⁪‮‬‬‮‍‫‫⁯‏‪⁫‮‌‪⁫​‍‮‭​‮‮‮(aReader));
            num1 = -1188602278;
            continue;
          case 30:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_33;
              case JSONBinaryTag.Class:
                goto label_32;
              case JSONBinaryTag.Value:
                goto label_36;
              case JSONBinaryTag.IntValue:
                goto label_37;
              case JSONBinaryTag.DoubleValue:
                goto label_28;
              case JSONBinaryTag.BoolValue:
                goto label_29;
              case JSONBinaryTag.FloatValue:
                goto label_16;
              default:
                num1 = (int) num6 * 2003985945 ^ 1734435849;
                continue;
            }
          case 31:
label_37:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‏‌‍‏‍‭​⁮‎‍⁪‫‬‏‮‫⁬⁭‎⁯‬‬⁬⁮‫‭‏‮‮‏⁬⁬‎‍​⁫​‌⁪‮(aReader));
            num1 = -681649802;
            continue;
          case 32:
label_36:
            num1 = -246029417;
            continue;
          case 33:
            num1 = (int) num6 * -673209240 ^ 278368137;
            continue;
          case 34:
label_32:
            num1 = -776702684;
            continue;
          case 35:
            num1 = (int) num6 * 1041028908 ^ -577639571;
            continue;
          case 36:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 2005768174 ^ -610682492;
            continue;
          case 37:
            string aKey = JSONNode.\u200D⁪‪‌⁫⁫‎‪⁯‮⁪⁪⁪‌⁫⁮‏‮‏‫⁯‌​⁮‎‎‌‭‍​‬⁮‬⁪‫​⁪​‎⁬‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 613355031 ^ 592260012;
            continue;
          default:
            goto label_40;
        }
      }
label_6:
      throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮(JSONNode.\u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D‍‌⁫​‪‍‪‍‭‮​⁪⁭⁯‍‍⁮⁪⁫‬‍​⁯‮‪‏‭⁮‪‬​⁫⁯⁮‫⁫‮‮‍‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 78141051;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 903247673)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u206C⁫​‏‍‪‍‬‏‪‬‌‎‎‭‌⁪⁬‌‮⁪⁭‫⁮‪‌‪⁭⁬​‏⁪‭​‪‮​‪‮‪‮((IDisposable) aReader);
                num1 = (int) num2 * 1798037066 ^ -892915440;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206A⁬‍⁪⁪‌‬‬‍⁯⁬⁫‮⁪‭⁮‫⁬‎‎‌⁮‌⁪⁯‮‬⁪​‪‍⁬​⁭‎‭‌‪⁯⁮‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1497945597;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1275735819)) % 4U)
            {
              case 1:
                num1 = (int) num2 * 1221918935 ^ -111081276;
                continue;
              case 2:
                JSONNode.\u206C⁫​‏‍‪‍‬‏‪‬‌‎‎‭‌⁪⁬‌‮⁪⁭‫⁮‪‌‪⁭⁬​‏⁪‭​‪‮​‪‮‪‮((IDisposable) aData);
                num1 = (int) num2 * 896936312 ^ 342731698;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -971610771;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -889003912)) % 6U)
        {
          case 0:
            JSONNode.\u202A‫⁭​⁮‫‌⁬​‎‌‌‭‌‬⁮⁪‌⁫‍‮‪​‎‪⁮‫‮‭⁬‫⁮‬⁭​‫⁭‭‎⁯‮((Stream) aData, 0L);
            num1 = (int) num2 * -1734571893 ^ -1238067577;
            continue;
          case 1:
            aData = JSONNode.\u206C‪‌‭⁫‏⁪⁯‬‬⁯‌‍‏​​⁫‮‭‬⁮‏‍‪⁮‫‮‪​⁬⁫‮‪⁮‏⁯⁪‌‪⁮‮(JSONNode.\u202B‭⁯‪⁫‪⁭‮‭‍‪​⁪⁮‮⁯⁯‌⁯​⁫‭‬‪⁯⁫⁮⁮‍‫⁯⁯‪​‌‎‮‭​‪‮(aBase64));
            num1 = (int) num2 * 2074860040 ^ 1059933490;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -737908517 ^ 1071464013;
            continue;
          case 4:
            num1 = (int) num2 * -760629701 ^ 241424690;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    static CultureInfo \u200B‭⁬⁯‬‭‮‬‬⁪⁫‬‮⁭‬‫‮‭⁯‭‎‎‏​⁭⁯‫​‌​‪⁭‌‫‭⁪‎⁫⁭‎‮() => CultureInfo.InvariantCulture;

    static bool \u200C‫​‮‬‮⁪‎⁯‭‍⁫⁬‎⁮⁫⁯‪‪‫‮⁯‭‎​⁬⁭⁯‬‏‬‪‮‬⁫​‎‭‪⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202E‏⁭⁪⁯⁯‏⁪⁯⁪⁬‬‍‫⁮‭‌⁯‎‬‫‎‪‭‬‮‌‮⁭‎⁮‬⁮‍‫⁫⁮⁮‭‫‮() => base.GetHashCode();

    static char \u206B​⁮‌‌‎‏​⁮⁮‫⁭‍‍⁭‪‭​​​⁭⁫‌‬⁪‭⁭‫‌‍‮‎‬‌‏⁫‭​‬‪‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200D⁬⁯‍‫‎‫‪⁫‮‮‭‪‬⁬‫‎‏‭‪‏⁬⁫⁯⁯‌‏​‬⁭‬‍​‍‏⁫⁫⁬⁯⁮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200C⁭‮‌⁪‭⁬​‪⁬‬‎⁯‮‭⁪⁫‪‌‫⁭⁬‍‌‪‎​‍‍‮‭‏⁮⁯⁭‪⁭‪‏‎‮([In] string obj0) => obj0.Length;

    static string \u206F⁭⁭⁮​‭​‬⁭‮‎‭⁫‏⁬⁬‫⁭‏‏⁬⁫‏‍‍⁯⁬‏‬⁮‍‫‪⁫⁬‪‬‍‫‭‮([In] string obj0) => obj0.Trim();

    static bool \u202C‫⁫‌‎⁪‌⁬‮‫‮‪⁬​‌‍‍‮⁬‏‎‪‍⁫‌‮⁪‏‬‪⁫‌‭​‬⁯‫‍‌⁯‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206C‬​​⁮‏‍⁮‌⁭⁫⁭‎‏‬‭⁯‏⁫​‏‍⁫⁪⁯⁫‌⁫⁫‌‏‎⁭‬⁫‬‏‫⁬‎‮([In] string obj0) => new Exception(obj0);

    static string \u206D‏‏‍‫‬⁪⁪⁪‎⁮‫‭‭‍‭‭⁪⁫⁮‫⁪⁯‬‍‌⁭‍⁯‏⁮‎⁯‮‎⁭​‌⁪‍‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206F‎‏‌‌⁯‌‬⁬‎⁯‏⁪⁪‎⁯⁫​‎‎‏⁮‭‌‪⁭⁮‌​⁪‍⁬‬‍‬⁭‫‍⁮⁭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202B⁪‌⁫‬‌‫‍​‌‫​⁪⁯⁭‏‫‬‬‪⁬‎‎​‬‭‭‌‎‏⁯‌⁬​‌⁭‮​⁬‍‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206A⁯​‪‎​‍‏⁪‫‫​⁮‎‎‎‍‪‮⁮⁯‫⁮‬‍⁭⁭⁫‫‌⁫‎‮⁪⁮‍​‍‎⁫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D‭⁮‫⁪⁪‮‫⁬⁯⁪‬⁭‬‏‪‭⁮‫‬⁪‪‏⁭‌⁪‎⁪‫⁮⁪⁭⁯⁪⁬‮⁯⁯‭‭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202C‎‫‫‬‎‏‎‍⁭⁮‮⁪‮‎⁮⁬‫​⁭⁯‎‮‬⁫⁯⁮‮‫‎⁪⁪‎‍‏‮‬⁫⁭⁮‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202E‎⁪⁬​⁮‬​‌⁭⁬‮‍⁭‮‏‏⁫⁫⁫⁮‫⁪​​⁯⁭⁫‍⁮‏‬‬​​‮‎⁯‏‭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206C⁫​‏‍‪‍‬‏‪‬‌‎‎‭‌⁪⁬‌‮⁪⁭‫⁮‪‌‪⁭⁬​‏⁪‭​‪‮​‪‮‪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206D‍⁯‌⁮⁮‫⁮⁫⁪​‪⁯⁭⁯‪​‌⁮‭⁮​‎⁬⁮​‌⁪​‏‍‌⁬‪⁬⁬‮‪‭‮‮() => new MemoryStream();

    static void \u202A‫⁭​⁮‫‌⁬​‎‌‌‭‌‬⁮⁪‌⁫‍‮‪​‎‪⁮‫‮‭⁬‫⁮‬⁭​‫⁭‭‎⁯‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202A‪‎‫‎⁭‪⁭⁮⁫⁮⁫‎‌⁯⁮‪‍‭⁪‍​‌​‌‫‎‮‍⁮‎‌‌‌⁫⁪‍‭⁪‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‮‍‏‪⁬⁮‌⁭‎⁫⁭⁭⁪⁮⁪⁭⁭‌⁯⁪‫‌‌⁯‪‌‫‏‬‫⁭⁯‭‏⁮‮⁭‭⁪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206E⁯‫⁫‭‭​​‍⁬‫​⁬‫‎‮⁪‮‭‏‫⁫‬‌​‪⁭‏‍‮‬⁮‍⁮‍‎‪⁪‎‪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206A‏‌‍‏‍‭​⁮‎‍⁪‫‬‏‮‫⁬⁭‎⁯‬‬⁬⁮‫‭‏‮‮‏⁬⁬‎‍​⁫​‌⁪‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200D⁪‪‌⁫⁫‎‪⁯‮⁪⁪⁪‌⁫⁮‏‮‏‫⁯‌​⁮‎‎‌‭‍​‬⁮‬⁪‫​⁪​‎⁬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206F​‎‌‏‮‫‮⁭‎‫‎‪⁪‬‫‮⁯‬⁭‫⁪‬‭‌‭⁬‮‎⁯‮⁬‎⁯⁬⁮‌‍⁫‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206A‫‬‮⁬‍‬‍‪⁯​‪​‏‪​‮‍‬‏⁯⁫⁯‮⁬‏​⁮‍‮⁪⁪⁮​⁪‎⁬‍‍‬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200B‍‏‌‌‍⁫⁮‎‌‪​⁪‍⁫⁮‍⁪‮‬‬‮‍‫‫⁯‏‪⁫‮‌‪⁫​‍‮‭​‮‮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D‍‌⁫​‪‍‪‍‭‮​⁪⁭⁯‍‍⁮⁪⁫‬‍​⁯‮‪‏‭⁮‪‬​⁫⁯⁮‫⁫‮‮‍‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206A⁬‍⁪⁪‌‬‬‍⁯⁬⁫‮⁪‭⁮‫⁬‎‎‌⁮‌⁪⁯‮‬⁪​‪‍⁬​⁭‎‭‌‪⁯⁮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202B‭⁯‪⁫‪⁭‮‭‍‪​⁪⁮‮⁯⁯‌⁯​⁫‭‬‪⁯⁫⁮⁮‍‫⁯⁯‪​‌‎‮‭​‪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206C‪‌‭⁫‏⁪⁯‬‬⁯‌‍‏​​⁫‮‭‬⁮‏‍‪⁮‫‮‪​⁬⁫‮‪⁮‏⁯⁪‌‪⁮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
