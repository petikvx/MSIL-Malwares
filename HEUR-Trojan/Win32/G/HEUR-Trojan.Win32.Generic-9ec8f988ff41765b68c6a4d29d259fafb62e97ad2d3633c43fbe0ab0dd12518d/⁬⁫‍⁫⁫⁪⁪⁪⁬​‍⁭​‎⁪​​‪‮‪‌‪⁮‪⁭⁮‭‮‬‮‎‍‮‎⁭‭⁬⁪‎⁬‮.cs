// Decompiled with JetBrains decompiler
// Type: ⁬⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

internal class \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮
{
  internal static readonly string \u200D​‍‮‏‮‪⁯⁫⁫​‏‌⁪‌‎‫‮‎‪⁯‍‪‏‭⁬‏‮‎⁫‎⁮‫‍‬‎‫⁮⁫‌‮ = "Org.BouncyCastle.Fpe.Disable";
  internal static readonly string \u206C‎‮‮‮‭⁯‮‪‎‮⁮‮‪‎‭​⁮⁫⁯‮‭‏⁪‍⁮‎‬‌‏‫‬⁫⁯‎​‭‎‬‮ = "Org.BouncyCastle.Fpe.Disable_Ff1";
  protected static readonly int \u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ = 16;
  protected static readonly double \u206C⁮‫‏⁬‍‌‪‏‭⁯⁫‎‪⁭​‫⁮‫⁪‏⁬⁭‮‬‏‮‌⁭⁯‌‭⁫⁯‏‫⁭⁪‏⁫‮ = Math.Log(2.0);
  protected static readonly double \u202C‎‏⁬‫‮‏⁪⁪⁭⁭​‍‫‌⁭‭⁬⁬⁪‍‪‍⁫‍‫‏⁭‭‍⁪⁭‎​⁪​​⁬⁫‭‮ = Math.Pow(2.0, 96.0);

  public static byte[] \u206A​⁯‪⁮⁬‫‮⁫‎‍‪⁮⁬‫‌‪‮‍‬⁭⁯‍‏⁪‎‍⁭‎⁬​‏‭⁪‌‫⁫⁭​‬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, true, _param1, _param3, _param4, _param5);
    int num1 = _param5;
    int num2 = num1 / 2;
    int num3 = num1 - num2;
    ushort[] numArray1 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4, num2);
    ushort[] numArray2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4 + num2, num3);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁮⁮⁪‬⁫‫‮‌‮‌⁯‏‮‍‬‬‪‎‭‭​⁭‌⁫‌​‌‏‍⁬‎‬⁭​​‬‪‌⁪‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200F‍‌‮‍⁯‌‌⁬‎⁭‮‬‪⁮‭⁭⁫‎‎‬‮‫‮⁯​‏‪⁮‎‍‭‌‌‫⁫⁬‭‬‌‮(_param0, _param1, _param2, num1, num2, num3, numArray1, numArray2));
  }

  public static ushort[] \u206B⁮‫​⁮‏‭‍‮⁯⁭‪⁫‫⁯​‮‎​‬‌⁮‬⁮⁬‏⁬‬⁬⁪‎⁮‪⁯⁪⁮‫⁫‪⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, true, _param1, _param3, _param4, _param5);
    int num = _param5;
    int length1 = num / 2;
    int length2 = num - length1;
    ushort[] destinationArray1 = new ushort[length1];
    ushort[] destinationArray2 = new ushort[length2];
    Array.Copy((Array) _param3, _param4, (Array) destinationArray1, 0, length1);
    Array.Copy((Array) _param3, _param4 + length1, (Array) destinationArray2, 0, length2);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200F‍‌‮‍⁯‌‌⁬‎⁭‮‬‪⁮‭⁭⁫‎‎‬‮‫‮⁯​‏‪⁮‎‍‭‌‌‫⁫⁬‭‬‌‮(_param0, _param1, _param2, num, length1, length2, destinationArray1, destinationArray2);
  }

  private static ushort[] \u200F‍‌‮‍⁯‌‌⁬‎⁭‮‬‪⁮‭⁭⁫‎‎‬‮‫‮⁯​‏‪⁮‎‍‭‌‌‫⁫⁬‭‬‌‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4,
    int _param5,
    ushort[] _param6,
    ushort[] _param7)
  {
    int length = _param2.Length;
    int num1 = (\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B‭‎‪⁪⁭‮⁫‫‌‫⁬⁪⁭‭‫‭‫‎⁪⁬‪⁭⁪‬‌⁮⁫⁫⁭⁭‭‍‍⁭‏⁬‎⁮‎‮(Math.Log((double) _param1) * (double) _param5 / \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206C⁮‫‏⁬‍‌‪‏‭⁯⁫‎‪⁭​‫⁮‫⁪‏⁬⁭‮‬‏‮‌⁭⁯‌‭⁫⁯‏‫⁭⁪‏⁫‮) + 7) / 8;
    int num2 = (num1 + 3) / 4 * 4 + 4;
    byte[] numArray1 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‎‎‍‬⁮‭‌⁬⁭⁪⁭⁬‎‮​⁬⁮⁪‮‪‮‪‭⁫‎⁪‫‪‌‭⁮‭‎‫‍‫‫‏‮(_param1, (byte) _param4, _param3, length);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) _param1);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁭‌⁯⁯‬‎⁪⁪⁮‌⁮‍‪‎‭‫‍‏⁫‌‪‍‫​‎⁮‪‍‏‭⁫‫​​⁭‎​‪‭‮(obj1, _param4, _param5);
    int num3 = _param4;
    for (int index = 9; index >= 0; --index)
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁪⁪‏⁮‏⁮​‪‮‮‍⁮‫⁯‭⁭‌‌‌⁫‍‫‮⁫‫​​‌‍‮⁭‌‬‍‍⁯‏‌‮(_param0, obj1, _param2, num1, num2, index, numArray1, _param6);
      num3 = _param3 - num3;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = objArray[index & 1];
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(obj1, _param7).\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(obj2).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj3);
      ushort[] numArray2 = _param7;
      _param7 = _param6;
      _param6 = numArray2;
      \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁯‎‮‎‫⁬⁭‎‭⁪‬⁯⁯‬‬⁪​‏‭‏⁬⁯‎⁯‎‪‪‍‬⁯⁭‮‍⁫‎‫‬⁬‍‮(obj1, obj4, num3, numArray2, 0);
    }
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(_param6, _param7);
  }

  public static byte[] \u206F‮‬‭‏‏‭‫⁬‪‫⁭‌​⁮‫‪⁮‫‬‌‏​‍‍⁮‪‏‭‮‮‬⁬‬‮⁪⁬⁯‬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    if (_param2.Length != 8)
      throw new ArgumentException();
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁬⁪‬‪‫‎‌⁫‬‫‏‫‭‭‬‏‮⁪⁪‍‬‬⁫‍⁬⁬‬​‫​‌⁮⁬‫⁯⁪‬‎‌‮(_param0, _param1, _param2, _param3, _param4, _param5);
  }

  public static byte[] \u206E‭⁪⁮‮​⁪⁫⁭‭‮‎‮‍⁮⁯‌⁮‫⁭​⁮‏⁫‫‭‭⁫‍‌‍⁭‏‏‭‍‍‎‍‎‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    byte[] numArray = _param2.Length == 7 ? \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E‌‎⁪‪‌‮⁪‫‪‫‎‭‌‏‪‫⁯⁪⁫‌⁯⁭⁯⁭‪‌‍‏​⁪⁮‏‬⁬‪‮⁫‬⁫‮(_param2) : throw new ArgumentException("tweak should be 56 bits");
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁬⁪‬‪‫‎‌⁫‬‫‏‫‭‭‬‏‮⁪⁪‍‬‬⁫‍⁬⁬‬​‫​‌⁮⁬‫⁯⁪‬‎‌‮(_param0, _param1, numArray, _param3, _param4, _param5);
  }

  public static ushort[] \u200C⁫‏⁯‫⁭‌‍‎‮⁮⁮‫‍‭⁪‌‏‫‪‎‎‫‬‏‪‍‍‍⁭‮‎‪​‍‪⁮‪‬‭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    byte[] numArray = _param2.Length == 7 ? \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E‌‎⁪‪‌‮⁪‫‪‫‎‭‌‏‪‫⁯⁪⁫‌⁯⁭⁯⁭‪‌‍‏​⁪⁮‏‬⁬‪‮⁫‬⁫‮(_param2) : throw new ArgumentException("tweak should be 56 bits");
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁯‎‪‎‭‬‬⁫‌​‌⁬‭‏‪⁭‫⁮⁭​‭⁫⁬‫‪⁬⁭‪‮⁮‏‮‌⁪⁭‫⁬⁬‏‮(_param0, _param1, numArray, _param3, _param4, _param5);
  }

  public static byte[] \u200C‍⁬‍‏‏‍‌​⁬‪⁪​‭‪‪‍⁭⁭‭‌⁯‌⁮⁪⁮⁫‍‌‮⁮⁬‮‏‬‎‭⁫⁪‬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, true, _param1, _param3, _param4, _param5);
    int num1 = _param5;
    int num2 = num1 / 2;
    int num3 = num1 - num2;
    ushort[] numArray1 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4, num2);
    ushort[] numArray2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4 + num2, num3);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁮⁮⁪‬⁫‫‮‌‮‌⁯‏‮‍‬‬‪‎‭‭​⁭‌⁫‌​‌‏‍⁬‎‬⁭​​‬‪‌⁪‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206C⁭‌⁭⁮‭​‎‪‏‭‎⁫⁬⁫‮‫‏⁬⁪‪⁮‏‬⁯‮‏‎​‌‏⁭⁭‮⁯⁮‍‫‮⁫‮(_param0, _param1, _param2, num1, num2, num3, numArray1, numArray2));
  }

  public static ushort[] \u206F​⁬‭​‏⁭‍‫⁬⁫⁭​⁬⁭⁯⁭‭⁬‏‪⁬⁫‮‭⁫⁫‏‮‫‎​⁮‬‬⁭⁭⁯‌⁬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, true, _param1, _param3, _param4, _param5);
    int num = _param5;
    int length1 = num / 2;
    int length2 = num - length1;
    ushort[] destinationArray1 = new ushort[length1];
    ushort[] destinationArray2 = new ushort[length2];
    Array.Copy((Array) _param3, _param4, (Array) destinationArray1, 0, length1);
    Array.Copy((Array) _param3, _param4 + length1, (Array) destinationArray2, 0, length2);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206C⁭‌⁭⁮‭​‎‪‏‭‎⁫⁬⁫‮‫‏⁬⁪‪⁮‏‬⁯‮‏‎​‌‏⁭⁭‮⁯⁮‍‫‮⁫‮(_param0, _param1, _param2, num, length1, length2, destinationArray1, destinationArray2);
  }

  private static ushort[] \u206C⁭‌⁭⁮‭​‎‪‏‭‎⁫⁬⁫‮‫‏⁬⁪‪⁮‏‬⁯‮‏‎​‌‏⁭⁭‮⁯⁮‍‫‮⁫‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4,
    int _param5,
    ushort[] _param6,
    ushort[] _param7)
  {
    int length = _param2.Length;
    int num1 = (\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B‭‎‪⁪⁭‮⁫‫‌‫⁬⁪⁭‭‫‭‫‎⁪⁬‪⁭⁪‬‌⁮⁫⁫⁭⁭‭‍‍⁭‏⁬‎⁮‎‮(Math.Log((double) _param1) * (double) _param5 / \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206C⁮‫‏⁬‍‌‪‏‭⁯⁫‎‪⁭​‫⁮‫⁪‏⁬⁭‮‬‏‮‌⁭⁯‌‭⁫⁯‏‫⁭⁪‏⁫‮) + 7) / 8;
    int num2 = (num1 + 3) / 4 * 4 + 4;
    byte[] numArray1 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‎‎‍‬⁮‭‌⁬⁭⁪⁭⁬‎‮​⁬⁮⁪‮‪‮‪‭⁫‎⁪‫‪‌‭⁮‭‎‫‍‫‫‏‮(_param1, (byte) _param4, _param3, length);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) _param1);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁭‌⁯⁯‬‎⁪⁪⁮‌⁮‍‪‎‭‫‍‏⁫‌‪‍‫​‎⁮‪‍‏‭⁫‫​​⁭‎​‪‭‮(obj1, _param4, _param5);
    int num3 = _param5;
    for (int index = 0; index < 10; ++index)
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁪⁪‏⁮‏⁮​‪‮‮‍⁮‫⁯‭⁭‌‌‌⁫‍‫‮⁫‫​​‌‍‮⁭‌‬‍‍⁯‏‌‮(_param0, obj1, _param2, num1, num2, index, numArray1, _param7);
      num3 = _param3 - num3;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = objArray[index & 1];
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(obj1, _param6).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj2).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj3);
      ushort[] numArray2 = _param6;
      _param6 = _param7;
      _param7 = numArray2;
      \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁯‎‮‎‫⁬⁭‎‭⁪‬⁯⁯‬‬⁪​‏‭‏⁬⁯‎⁯‎‪‪‍‬⁯⁭‮‍⁫‎‫‬⁬‍‮(obj1, obj4, num3, numArray2, 0);
    }
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(_param6, _param7);
  }

  public static byte[] \u206D⁭‏‪⁫⁮⁪⁯‫‫‮‬‬‪‮⁪⁬⁬‭‌⁭‍‏⁮⁬‬⁮‏‫‮‪⁬⁫⁯⁬‭‫⁫‎⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    if (_param2.Length != 8)
      throw new ArgumentException();
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A‮⁭​‫⁭‌‎⁮‭⁭​⁭⁬‏​‎⁭‭‬⁪‌‭‏⁫‏‏​⁫‮⁮​⁯‭​‭⁪‫‎‮‮(_param0, _param1, _param2, _param3, _param4, _param5);
  }

  public static ushort[] \u202B‫‮‌⁭⁬‫‏​‏⁮‮⁮‭⁪​‪‪⁬⁮⁭‮⁯⁮⁮⁯⁪‭⁬⁮⁬‎‭⁬‏‭‭‪‫‍‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    if (_param2.Length != 8)
      throw new ArgumentException();
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁮‍⁮‬⁫‬⁬‮‫‏⁪‫​‫‍​⁬​‪⁮⁭‍​‌‍‍⁪⁮⁪⁮‍⁯‎‭‪‪⁭‬⁪‮(_param0, _param1, _param2, _param3, _param4, _param5);
  }

  public static ushort[] \u206A⁭‪⁮‫‪⁫‫⁮⁫‍‪‪‌⁭‌⁪‬⁬‪‎⁯⁮‮⁯‫⁫⁭⁬‏‮‍⁯⁮‭​⁮‬⁯⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    byte[] numArray = _param2.Length == 7 ? \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E‌‎⁪‪‌‮⁪‫‪‫‎‭‌‏‪‫⁯⁪⁫‌⁯⁭⁯⁭‪‌‍‏​⁪⁮‏‬⁬‪‮⁫‬⁫‮(_param2) : throw new ArgumentException("tweak should be 56 bits");
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‫‮‌⁭⁬‫‏​‏⁮‮⁮‭⁪​‪‪⁬⁮⁭‮⁯⁮⁮⁯⁪‭⁬⁮⁬‎‭⁬‏‭‭‪‫‍‮(_param0, _param1, numArray, _param3, _param4, _param5);
  }

  public static byte[] \u206C​‌‮‌‎⁯‎​⁯‏⁫⁭⁮‬‭‪‬⁬‎‍⁪‪‭⁫‭‎⁪‬‌‎‫‫⁭⁪​‌⁮‪⁭‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(_param0, false, _param1, _param3, _param4, _param5);
    byte[] numArray = _param2.Length == 7 ? \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E‌‎⁪‪‌‮⁪‫‪‫‎‭‌‏‪‫⁯⁪⁫‌⁯⁭⁯⁭‪‌‍‏​⁪⁮‏‬⁬‪‮⁫‬⁫‮(_param2) : throw new ArgumentException("tweak should be 56 bits");
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206D⁭‏‪⁫⁮⁪⁯‫‫‮‬‬‪‮⁪⁬⁬‭‌⁭‍‏⁮⁬‬⁮‏‫‮‪⁬⁫⁯⁬‭‫⁫‎⁭‮(_param0, _param1, numArray, _param3, _param4, _param5);
  }

  protected static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u206A⁭‌⁯⁯‬‎⁪⁪⁮‌⁮‍‪‎‭‫‍‏⁫‌‪‍‫​‎⁮‪‍‏‭⁫‫​​⁭‎​‪‭‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param0,
    int _param1,
    int _param2)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[2]
    {
      _param0.\u206A‮‮⁫⁫⁫⁭‪⁫⁫‭‬⁬‭‬‎⁫‮‮‎⁫‍⁫‪‮‭‎⁫‬‪‍⁯⁮⁯⁯⁫‪​⁪⁪‮(_param1),
      null
    };
    objArray[1] = objArray[0];
    if (_param2 != _param1)
      objArray[1] = objArray[1].\u202D⁫‪​‏‍⁯⁭⁪‪‭‭‏‭​​‭⁫‌‍⁮‬‮‬⁭⁬‪‎‪⁪⁪‌​‫⁫‫‍‏‍⁪‮(_param0);
    return objArray;
  }

  protected static byte[] \u202B‎‎‍‬⁮‭‌⁬⁭⁪⁭⁬‎‮​⁬⁮⁪‮‪‮‪‭⁫‎⁪‫‪‌‭⁮‭‎‫‍‫‫‏‮(
    int _param0,
    byte _param1,
    int _param2,
    int _param3)
  {
    byte[] numArray = new byte[\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮];
    numArray[0] = (byte) 1;
    numArray[1] = (byte) 2;
    numArray[2] = (byte) 1;
    numArray[3] = (byte) 0;
    numArray[4] = (byte) (_param0 >> 8);
    numArray[5] = (byte) _param0;
    numArray[6] = (byte) 10;
    numArray[7] = _param1;
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200B⁯‏‫⁭⁫⁬‮⁫⁬‮⁬⁪⁮⁯‪‍⁭‫‏‍‍‫⁬‪⁫‬‪‌‏‮‫‎‫⁬⁪⁭⁭‮‬‮((uint) _param2, numArray, 8);
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200B⁯‏‫⁭⁫⁬‮⁫⁬‮⁬⁪⁮⁯‪‍⁭‫‏‍‍‫⁬‪⁫‬‪‌‏‮‫‎‫⁬⁪⁭⁭‮‬‮((uint) _param3, numArray, 12);
    return numArray;
  }

  protected static byte[] \u206E‌‎⁪‪‌‮⁪‫‪‫‎‭‌‏‪‫⁯⁪⁫‌⁯⁭⁯⁭‪‌‍‏​⁪⁮‏‬⁬‪‮⁫‬⁫‮(byte[] _param0) => new byte[8]
  {
    _param0[0],
    _param0[1],
    _param0[2],
    (byte) ((uint) _param0[3] & 240U),
    _param0[4],
    _param0[5],
    _param0[6],
    (byte) ((uint) _param0[3] << 4)
  };

  protected static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u200D⁪⁪‏⁮‏⁮​‪‮‮‍⁮‫⁯‭⁭‌‌‌⁫‍‫‮⁫‫​​‌‍‮⁭‌‬‍‍⁯‏‌‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    byte[] _param2,
    int _param3,
    int _param4,
    int _param5,
    byte[] _param6,
    ushort[] _param7)
  {
    int length = _param2.Length;
    byte[] sourceArray1 = \u206B⁮‏‬⁭⁫‪‌‭‍‫‏‎‍⁯‏‪‏‌‎⁮‍‬‌‭⁭‫‪⁪‎​⁭⁭⁮‬⁭⁯‪⁫⁪‮.\u206A‭‎⁬​‫‫‭⁬‪⁭⁯‪⁬‍‫⁬⁭‫‭‍‍⁪⁬‭‏⁭⁪⁫‌⁬⁮​⁮⁮‌⁮​⁮‌‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(_param1, _param7));
    int num1 = -(length + _param3 + 1) & 15;
    byte[] destinationArray1 = new byte[length + num1 + 1 + _param3];
    Array.Copy((Array) _param2, 0, (Array) destinationArray1, 0, length);
    destinationArray1[length + num1] = (byte) _param5;
    Array.Copy((Array) sourceArray1, 0, (Array) destinationArray1, destinationArray1.Length - sourceArray1.Length, sourceArray1.Length);
    byte[] sourceArray2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202D‍⁯⁮⁪⁮⁮‬​‪⁭‏‫‭⁭​⁯⁬‌‪‭⁬‏​‍⁮⁭‌‮⁯⁯‎⁬⁪⁪⁭⁬⁮‪⁪‮(_param0, \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(_param6, destinationArray1));
    byte[] destinationArray2 = sourceArray2;
    if (_param4 > \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮)
    {
      int num2 = (_param4 + \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ - 1) / \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮;
      destinationArray2 = new byte[num2 * \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮];
      Array.Copy((Array) sourceArray2, 0, (Array) destinationArray2, 0, \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮);
      byte[] numArray = new byte[4];
      for (uint index = 1; (long) index < (long) num2; ++index)
      {
        int destinationIndex = (int) ((long) index * (long) \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮);
        Array.Copy((Array) sourceArray2, 0, (Array) destinationArray2, destinationIndex, \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮);
        \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200B⁯‏‫⁭⁫⁬‮⁫⁬‮⁬⁪⁮⁯‪‍⁭‫‏‍‍‫⁬‪⁫‬‪‌‏‮‫‎‫⁬⁪⁭⁭‮‬‮(index, numArray, 0);
        \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B‍‫⁪‪⁮‭​⁮⁬⁬‌⁭‍‏⁯‌⁪⁫‏‎‪⁮​⁪‬‮⁫⁯⁫‍​‬‎‌⁮‍‬⁪⁮‮(numArray, 0, destinationArray2, destinationIndex + \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ - 4, 4);
        _param0.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(destinationArray2, destinationIndex, destinationArray2, destinationIndex);
      }
    }
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(destinationArray2, 0, _param4);
  }

  protected static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u200E⁭‬⁯‪‌​‍‪⁫⁭‫⁫‫⁭​‏‬⁫⁫‬⁮‎‌⁭​‪‪‬⁯⁪⁬⁬‮⁬⁭⁮‌‫‍‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    byte[] _param2,
    int _param3,
    uint _param4,
    ushort[] _param5)
  {
    byte[] destinationArray = new byte[\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮];
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200B⁯‏‫⁭⁫⁬‮⁫⁬‮⁬⁪⁮⁯‪‍⁭‫‏‍‍‫⁬‪⁫‬‪‌‏‮‫‎‫⁬⁪⁭⁭‮‬‮(_param4, destinationArray, 0);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B‍‫⁪‪⁮‭​⁮⁬⁬‌⁭‍‏⁯‌⁪⁫‏‎‪⁮​⁪‬‮⁫⁯⁫‍​‬‎‌⁮‍‬⁪⁮‮(_param2, _param3, destinationArray, 0, 4);
    byte[] sourceArray = \u206B⁮‏‬⁭⁫‪‌‭‍‫‏‎‍⁯‏‪‏‌‎⁮‍‬‌‭⁭‫‪⁪‎​⁭⁭⁮‬⁭⁯‪⁫⁪‮.\u206A‭‎⁬​‫‫‭⁬‪⁭⁯‪⁬‍‫⁬⁭‫‭‍‍⁪⁬‭‏⁭⁪⁫‌⁬⁮​⁮⁮‌⁮​⁮‌‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(_param1, _param5));
    if (destinationArray.Length - sourceArray.Length < 4)
      throw new InvalidOperationException("input out of range");
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray, destinationArray.Length - sourceArray.Length, sourceArray.Length);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(destinationArray);
    _param0.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(destinationArray, 0, destinationArray, 0);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(destinationArray);
    byte[] numArray = destinationArray;
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(numArray, 0, numArray.Length);
  }

  protected static void \u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    bool _param1,
    int _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202A‍‫‎‪‎‭‭‍⁮⁮‮⁯⁫‍​‏‪‮⁫‫‌‎‪‏⁪‫‏‭​‬‌⁪‭‌‎⁪‮‏‌‮(_param0);
    if (_param2 < 2 || _param2 > 65536)
      throw new ArgumentException();
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202D‫‍‭‍‭‬‎‏⁭‪⁪‫⁪‍‌⁮‫‎⁯⁭‬‏⁭​‮⁭‬​⁯‍‬‪⁪‬‎⁭‫⁮‪‮(_param1, _param2, _param3, _param4, _param5);
  }

  protected static void \u206D⁯⁯⁯​‏⁯‮⁬⁬⁬‬‭⁫⁬⁫‫⁬⁪⁮​​⁬⁪‬⁯‪‫‮‍‮‏‭⁭‫‏⁯‭‎⁮‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    bool _param1,
    int _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202A‍‫‎‪‎‭‭‍⁮⁮‮⁯⁫‍​‏‪‮⁫‫‌‎‪‏⁪‫‏‭​‬‌⁪‭‌‎⁪‮‏‌‮(_param0);
    if (_param2 < 2 || _param2 > 256)
      throw new ArgumentException();
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202D‫‍‭‍‭‬‎‏⁭‪⁪‫⁪‍‌⁮‫‎⁯⁭‬‏⁭​‮⁭‬​⁯‍‬‪⁪‬‎⁭‫⁮‪‮(_param1, _param2, _param3, _param4, _param5);
  }

  protected static void \u202A‍‫‎‪‎‭‭‍⁮⁮‮⁯⁫‍​‏‪‮⁫‫‌‎‪‏⁪‫‏‭​‬‌⁪‭‌‎⁪‮‏‌‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0)
  {
    if (\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ != _param0.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮())
      throw new ArgumentException();
  }

  protected static void \u202D‫‍‭‍‭‬‎‏⁭‪⁪‫⁪‍‌⁮‫‎⁯⁭‬‏⁭​‮⁭‬​⁯‍‬‪⁪‬‎⁭‫⁮‪‮(
    bool _param0,
    int _param1,
    ushort[] _param2,
    int _param3,
    int _param4)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202D‍‌‌⁮⁬⁫⁯⁫‎‪⁪‌⁫‮⁪⁬‫⁪​‫⁮‎‎‪⁪‫‎‏​⁯‭⁭‭‌‎⁭⁪⁫⁫‮(_param0, _param1, _param4);
    for (int index = 0; index < _param4; ++index)
    {
      if (((int) _param2[_param3 + index] & (int) ushort.MaxValue) >= _param1)
        throw new ArgumentException("input data outside of radix");
    }
  }

  protected static void \u202D‫‍‭‍‭‬‎‏⁭‪⁪‫⁪‍‌⁮‫‎⁯⁭‬‏⁭​‮⁭‬​⁯‍‬‪⁪‬‎⁭‫⁮‪‮(
    bool _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4)
  {
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202D‍‌‌⁮⁬⁫⁯⁫‎‪⁪‌⁫‮⁪⁬‫⁪​‫⁮‎‎‪⁪‫‎‏​⁯‭⁭‭‌‎⁭⁪⁫⁫‮(_param0, _param1, _param4);
    for (int index = 0; index < _param4; ++index)
    {
      if (((int) _param2[_param3 + index] & (int) byte.MaxValue) >= _param1)
        throw new ArgumentException("input data outside of radix");
    }
  }

  private static void \u202D‍‌‌⁮⁬⁫⁯⁫‎‪⁪‌⁫‮⁪⁬‫⁪​‫⁮‎‎‪⁪‫‎‏​⁯‭⁭‭‌‎⁭⁪⁫⁫‮(
    bool _param0,
    int _param1,
    int _param2)
  {
    if (_param2 < 2 || Math.Pow((double) _param1, (double) _param2) < 1000000.0)
      throw new ArgumentException("input too short");
    if (_param0)
      return;
    int num = 2 * (int) Math.Floor(Math.Log(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‎‏⁬‫‮‏⁪⁪⁭⁭​‍‫‌⁭‭⁬⁬⁪‍‪‍⁫‍‫‏⁭‭‍⁪⁭‎​⁪​​⁬⁫‭‮) / Math.Log((double) _param1));
    if (_param2 > num)
      throw new ArgumentException("maximum input length is " + num.ToString());
  }

  protected static byte[] \u200D⁬⁪‬‪‫‎‌⁫‬‫‏‫‭‭‬‏‮⁪⁪‍‬‬⁫‍⁬⁬‬​‫​‌⁮⁬‫⁯⁪‬‎‌‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    byte[] numArray1 = _param2;
    int num1 = _param5;
    int num2 = num1 / 2;
    int num3 = num1 - num2;
    ushort[] numArray2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4, num3);
    ushort[] numArray3 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4 + num3, num2);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁮⁮⁪‬⁫‫‮‌‮‌⁯‏‮‍‬‬‪‎‭‭​⁭‌⁫‌​‌‏‍⁬‎‬⁭​​‬‪‌⁪‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B⁪‬‮⁫​⁬‬‭⁪⁬‪⁯‍‎‎‫⁪‏‬‎‫‬‌‫⁮​‎‏‪⁫⁭​‌‌‫‭⁯‮⁬‮(_param0, _param1, numArray1, num1, num2, num3, numArray2, numArray3));
  }

  protected static ushort[] \u200B⁯‎‪‎‭‬‬⁫‌​‌⁬‭‏‪⁭‫⁮⁭​‭⁫⁬‫‪⁬⁭‪‮⁮‏‮‌⁪⁭‫⁬⁬‏‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    byte[] numArray = _param2;
    int num = _param5;
    int length1 = num / 2;
    int length2 = num - length1;
    ushort[] destinationArray1 = new ushort[length2];
    ushort[] destinationArray2 = new ushort[length1];
    Array.Copy((Array) _param3, _param4, (Array) destinationArray1, 0, length2);
    Array.Copy((Array) _param3, _param4 + length2, (Array) destinationArray2, 0, length1);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B⁪‬‮⁫​⁬‬‭⁪⁬‪⁯‍‎‎‫⁪‏‬‎‫‬‌‫⁮​‎‏‪⁫⁭​‌‌‫‭⁯‮⁬‮(_param0, _param1, numArray, num, length1, length2, destinationArray1, destinationArray2);
  }

  private static ushort[] \u202B⁪‬‮⁫​⁬‬‭⁪⁬‪⁯‍‎‎‫⁪‏‬‎‫‬‌‫⁮​‎‏‪⁫⁭​‌‌‫‭⁯‮⁬‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4,
    int _param5,
    ushort[] _param6,
    ushort[] _param7)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) _param1);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁭‌⁯⁯‬‎⁪⁪⁮‌⁮‍‪‎‭‫‍‏⁫‌‪‍‫​‎⁮‪‍‏‭⁫‫​​⁭‎​‪‭‮(obj1, _param4, _param5);
    int num1 = _param5;
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param6);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param7);
    for (int index = 7; index >= 0; --index)
    {
      num1 = _param3 - num1;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = objArray[1 - (index & 1)];
      int num2 = 4 - (index & 1) * 4;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200E⁭‬⁯‪‌​‍‪⁫⁭‫⁫‫⁭​‏‬⁫⁫‬⁮‎‌⁭​‪‪‬⁯⁪⁬⁬‮⁬⁭⁮‌‫‍‮(_param0, obj1, _param2, num2, (uint) index, _param6);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(obj1, _param7).\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(obj3).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj2);
      ushort[] numArray = _param7;
      _param7 = _param6;
      _param6 = numArray;
      \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁯‎‮‎‫⁬⁭‎‭⁪‬⁯⁯‬‬⁪​‏‭‏⁬⁯‎⁯‎‪‪‍‬⁯⁭‮‍⁫‎‫‬⁬‍‮(obj1, obj4, num1, numArray, 0);
    }
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param6);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param7);
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(_param6, _param7);
  }

  protected static byte[] \u206A‮⁭​‫⁭‌‎⁮‭⁭​⁭⁬‏​‎⁭‭‬⁪‌‭‏⁫‏‏​⁫‮⁮​⁯‭​‭⁪‫‎‮‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    byte[] numArray1 = _param2;
    int num1 = _param5;
    int num2 = num1 / 2;
    int num3 = num1 - num2;
    ushort[] numArray2 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4, num3);
    ushort[] numArray3 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(_param3, _param4 + num3, num2);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁮⁮⁪‬⁫‫‮‌‮‌⁯‏‮‍‬‬‪‎‭‭​⁭‌⁫‌​‌‏‍⁬‎‬⁭​​‬‪‌⁪‮(\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁭‮⁪‭‌​‭⁫⁪‬⁬‪⁫⁬⁯‭‏‌‭⁯‍⁫‫⁭‪⁬⁮⁯⁭‫⁮‎‫‮‭‮⁫​⁪‮(_param0, _param1, numArray1, num1, num2, num3, numArray2, numArray3));
  }

  protected static ushort[] \u200B⁮‍⁮‬⁫‬⁬‮‫‏⁪‫​‫‍​⁬​‪⁮⁭‍​‌‍‍⁪⁮⁪⁮‍⁯‎‭‪‪⁭‬⁪‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    ushort[] _param3,
    int _param4,
    int _param5)
  {
    byte[] numArray = _param2;
    int num = _param5;
    int length1 = num / 2;
    int length2 = num - length1;
    ushort[] destinationArray1 = new ushort[length2];
    ushort[] destinationArray2 = new ushort[length1];
    Array.Copy((Array) _param3, _param4, (Array) destinationArray1, 0, length2);
    Array.Copy((Array) _param3, _param4 + length2, (Array) destinationArray2, 0, length1);
    return \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D⁭‮⁪‭‌​‭⁫⁪‬⁬‪⁫⁬⁯‭‏‌‭⁯‍⁫‫⁭‪⁬⁮⁯⁭‫⁮‎‫‮‭‮⁫​⁪‮(_param0, _param1, numArray, num, length1, length2, destinationArray1, destinationArray2);
  }

  private static ushort[] \u200D⁭‮⁪‭‌​‭⁫⁪‬⁬‪⁫⁬⁯‭‏‌‭⁯‍⁫‫⁭‪⁬⁮⁯⁭‫⁮‎‫‮‭‮⁫​⁪‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4,
    int _param5,
    ushort[] _param6,
    ushort[] _param7)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) _param1);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206A⁭‌⁯⁯‬‎⁪⁪⁮‌⁮‍‪‎‭‫‍‏⁫‌‪‍‫​‎⁮‪‍‏‭⁫‫​​⁭‎​‪‭‮(obj1, _param4, _param5);
    int num1 = _param4;
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param6);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param7);
    for (uint index = 0; index < 8U; ++index)
    {
      num1 = _param3 - num1;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = objArray[1 - ((int) index & 1)];
      int num2 = 4 - ((int) index & 1) * 4;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200E⁭‬⁯‪‌​‍‪⁫⁭‫⁫‫⁭​‏‬⁫⁫‬⁮‎‌⁭​‪‪‬⁯⁪⁬⁬‮⁬⁭⁮‌‫‍‮(_param0, obj1, _param2, num2, index, _param7);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj4 = \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(obj1, _param6).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj3).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj2);
      ushort[] numArray = _param6;
      _param6 = _param7;
      _param7 = numArray;
      \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B⁯‎‮‎‫⁬⁭‎‭⁪‬⁯⁯‬‬⁪​‏‭‏⁬⁯‎⁯‎‪‪‍‬⁯⁭‮‍⁫‎‫‬⁬‍‮(obj1, obj4, num1, numArray, 0);
    }
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param6);
    \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(_param7);
    return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(_param6, _param7);
  }

  protected static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(
    byte[] _param0,
    int _param1,
    int _param2)
  {
    return new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(_param0, _param1, _param1 + _param2));
  }

  protected static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u206E⁭⁫‎‏‎⁭⁮‏⁬‫‬‭⁯⁬⁮⁬‪​‌‫⁮‬‮‌⁫⁪⁪‎⁭⁫⁫‎‬‎⁫‌‏‎‭‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param0,
    ushort[] _param1)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Zero;
    for (int index = 0; index < _param1.Length; ++index)
      obj = obj.\u202D⁫‪​‏‍⁯⁭⁪‪‭‭‏‭​​‭⁫‌‍⁮‬‮‬⁭⁬‪‎‪⁪⁪‌​‫⁫‫‍‏‍⁪‮(_param0).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) ((int) _param1[index] & (int) ushort.MaxValue)));
    return obj;
  }

  protected static byte[] \u202D‍⁯⁮⁪⁮⁮‬​‪⁭‏‫‭⁭​⁯⁬‌‪‭⁬‏​‍⁮⁭‌‮⁯⁯‎⁬⁪⁪⁭⁬⁮‪⁪‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param0,
    byte[] _param1)
  {
    if (_param1.Length % \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ != 0)
      throw new ArgumentException();
    int num = _param1.Length / \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮;
    byte[] numArray = new byte[\u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮];
    for (int index = 0; index < num; ++index)
    {
      \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200B‍‫⁪‪⁮‭​⁮⁬⁬‌⁭‍‏⁯‌⁪⁫‏‎‪⁮​⁪‬‮⁫⁯⁫‍​‬‎‌⁮‍‬⁪⁮‮(_param1, index * \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮, numArray, 0, \u206C⁫‍⁫⁫⁪⁪⁪⁬​‍⁭​‎⁪​​‪‮‪‌‪⁮‪⁭⁮‭‮‬‮‎‍‮‎⁭‭⁬⁪‎⁬‮.\u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮);
      _param0.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(numArray, 0, numArray, 0);
    }
    return numArray;
  }

  protected static void \u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(byte[] _param0)
  {
    int num1 = _param0.Length / 2;
    int num2 = _param0.Length - 1;
    for (int index = 0; index < num1; ++index)
    {
      byte num3 = _param0[index];
      _param0[index] = _param0[num2 - index];
      _param0[num2 - index] = num3;
    }
  }

  protected static void \u202B‪‏‏‬​‪⁭⁫⁬⁯‬⁫‮⁮​‪‏‪‭‫‌⁭‮⁫‬⁭‬‎⁯⁪⁫⁮‪‏⁯‬‫⁯‌‮(ushort[] _param0)
  {
    int num1 = _param0.Length / 2;
    int num2 = _param0.Length - 1;
    for (int index = 0; index < num1; ++index)
    {
      ushort num3 = _param0[index];
      _param0[index] = _param0[num2 - index];
      _param0[num2 - index] = num3;
    }
  }

  protected static void \u200B⁯‎‮‎‫⁬⁭‎‭⁪‬⁯⁯‬‬⁪​‏‭‏⁬⁯‎⁯‎‪‪‍‬⁯⁭‮‍⁫‎‫‬⁬‍‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param0,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    int _param2,
    ushort[] _param3,
    int _param4)
  {
    if (_param1.\u202C⁪⁮‬⁭‌‍‍⁫‍‌⁪⁮⁫‭‏⁫‎‭​‪⁪‏‍‎‮⁫‫⁬‭⁫⁬‭⁪⁫‮‮‌⁭⁭‮ < 0)
      throw new ArgumentException();
    for (int index = 1; index <= _param2; ++index)
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = _param1.\u206E‎‪⁫⁯‌⁮⁫‎‭⁮‎‏⁭⁪⁬⁭‫⁭‫⁫‍⁪⁯‫‪⁬‮⁫‪⁭⁯⁭‎‮‫‍​‮⁫‮(_param0);
      _param3[_param4 + _param2 - index] = (ushort) objArray[1].\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮;
      _param1 = objArray[0];
    }
    if (_param1.\u202C⁪⁮‬⁭‌‍‍⁫‍‌⁪⁮⁫‭‏⁫‎‭​‪⁪‏‍‎‮⁫‫⁬‭⁫⁬‭⁪⁫‮‮‌⁭⁭‮ != 0)
      throw new ArgumentException();
  }

  protected static void \u200B‍‫⁪‪⁮‭​⁮⁬⁬‌⁭‍‏⁯‌⁪⁫‏‎‪⁮​⁪‬‮⁫⁯⁫‍​‬‎‌⁮‍‬⁪⁮‮(
    byte[] _param0,
    int _param1,
    byte[] _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
      _param2[_param3 + index] ^= _param0[_param1 + index];
  }

  private static byte[] \u206A⁮⁮⁪‬⁫‫‮‌‮‌⁯‏‮‍‬‬‪‎‭‭​⁭‌⁫‌​‌‏‍⁬‎‬⁭​​‬‪‌⁪‮(ushort[] _param0)
  {
    byte[] numArray = new byte[_param0.Length];
    for (int index = 0; index != numArray.Length; ++index)
      numArray[index] = (byte) _param0[index];
    return numArray;
  }

  private static ushort[] \u202C‬⁬⁬⁫‌‫‪⁯‭‭​⁪⁯‏‎‏​‫‍‫⁯⁫‎​⁫‮⁬⁮⁫‭‫‍‪‪‏⁬⁭‬⁭‮(
    byte[] _param0,
    int _param1,
    int _param2)
  {
    ushort[] numArray = new ushort[_param2];
    for (int index = 0; index != numArray.Length; ++index)
      numArray[index] = (ushort) ((uint) _param0[_param1 + index] & (uint) byte.MaxValue);
    return numArray;
  }

  private static int \u200B‭‎‪⁪⁭‮⁫‫‌‫⁬⁪⁭‭‫‭‫‎⁪⁬‪⁭⁪‬‌⁮⁫⁫⁭⁭‭‍‍⁭‏⁬‎⁮‎‮(double _param0)
  {
    int num = (int) _param0;
    return (double) num < _param0 ? num + 1 : num;
  }
}
