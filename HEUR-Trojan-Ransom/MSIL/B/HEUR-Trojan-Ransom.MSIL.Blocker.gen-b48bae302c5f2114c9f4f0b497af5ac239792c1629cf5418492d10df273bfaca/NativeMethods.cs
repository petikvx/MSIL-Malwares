// Decompiled with JetBrains decompiler
// Type: Kzzdehomtdt.NativeMethods
// Assembly: Ring0, Version=20.31.2.5854, Culture=neutral, PublicKeyToken=null
// MVID: E3BC9DD1-F9F5-4043-B7FA-B406B3F50D7A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.07-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b48bae302c5f2114c9f4f0b497af5ac239792c1629cf5418492d10df273bfaca.exe

using System;
using System.Runtime.InteropServices;

namespace Kzzdehomtdt
{
  public static class NativeMethods
  {
    public const int WM_COPYDATA = 74;

    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern IntPtr SendMessage(
      IntPtr hWnd,
      int Msg,
      IntPtr wParam,
      ref CopyData lParam);

    [DllImport("user32")]
    public static extern int RegisterWindowMessage(string message);

    public static IntPtr IntPtrAlloc<T>(T param)
    {
      IntPtr ptr = Marshal.AllocHGlobal(Marshal.SizeOf((object) param));
      Marshal.StructureToPtr((object) param, ptr, false);
      return ptr;
    }

    public static void IntPtrFree(IntPtr preAllocated)
    {
      if (IntPtr.Zero == preAllocated)
        throw new InvalidOperationException("IntPtr is already 0");
      Marshal.FreeHGlobal(preAllocated);
      preAllocated = IntPtr.Zero;
    }

    public static T GetStruct<T>(IntPtr param) => (T) Marshal.PtrToStructure(param, typeof (T));

    public static IntPtr StringToIntPtr(string data) => Marshal.StringToHGlobalAnsi(data);

    public static string IntPtrToString(IntPtr data) => Marshal.PtrToStringAnsi(data);
  }
}
