// Decompiled with JetBrains decompiler
// Type: ‍​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Threading;

public class \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ : Random
{
  private static long \u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮ = \u202C‏⁯⁬⁭⁭‮⁯​⁪‭‎‭⁫‍‏⁯‬‭‏‌‍⁫‫‎⁫‭⁮‏‍‏⁪‮‌‭⁮‫​⁬‫‮.\u200C​‪‫⁫‏‬⁬‏⁭​‪​⁯⁭⁪⁭‫‪‏‍‏‍‎⁬⁭⁯⁪‍⁭⁯​⁯​‎‏‫⁬⁪‎‮();
  private static readonly \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u200F‮‭⁮⁭‍​​‬‫‪‌‮‏‏‬⁫‪⁯​⁪​‍‎⁭‍‫‭‭​‌⁭⁫‏‏‬‭​⁬‪‮ = new \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮((\u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮) new \u206E‎‌‪‍‪‮‮‭⁮‭​‫⁭​‍‫⁯‍‮⁮‭‫‪⁪⁫⁯‌‪⁪‌⁭⁭‏⁯‮‍‏​‏‮());
  protected readonly \u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮ \u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮;
  private static readonly double \u202C‎‎‏‌‍⁬‬⁯⁮⁮⁫‮⁫‬⁭‍⁭⁫⁯‎‮⁮⁫⁭⁬‍​‏⁫‭‌‎⁯⁮‍‌⁭⁮‫‮ = 1.0 / Convert.ToDouble(9007199254740992L);

  private static long \u206A‌‏‍‪‮⁪⁭‮‬⁬⁮‏​‌⁭‮⁭‭‫⁬‮‏⁯‬⁬⁬​‭​‏⁭⁫⁮‍⁪⁮⁬‫‫‮() => Interlocked.Increment(ref \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u202A‎‍‫⁮‮‏‍‏‫‌‬‪‪‏⁯‭⁯⁮‪‭⁭​⁯‭‮‫‪⁫⁮⁪⁬‫‎‪‎⁮‏‬‪‮);

  private static \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u200C‏⁯‏⁯‍‭‮⁪‏‬⁯‎‪⁫‎‏⁭​‪⁪‍⁫⁯‌​‏‭⁪⁬‪⁫⁬‎‌‮‬⁫‍‫‮ => \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200F‮‭⁮⁭‍​​‬‫‪‌‮‏‏‬⁫‪⁯​⁪​‍‎⁭‍‫‭‭​‌⁭⁫‏‏‬‭​⁬‪‮;

  private static \u206D​‭‮⁪⁬‭‎‌‪‬⁭‎‬⁫⁬‬‎⁫‍‎‫​‏⁭‍⁬‮‏‎‫‬⁮‌​⁪‪​‏‏‮ \u200D⁫⁮⁮⁯⁮⁭⁯‪‬⁬⁭‬⁬‍‎‮‬‬‪‏‌⁭⁮⁮‍⁬⁪‭‎⁯⁮​‫‬⁬⁫‌⁯‮‮(
    string _param0,
    bool _param1)
  {
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ obj1 = \u206E‫⁪⁫⁯⁬‌‪‪⁫‬‏⁯⁪‪‏‮‏‫‫⁫‌‭⁫‪‮⁭‍‎‭⁬⁬​‫‎‏⁬‬⁬⁯‮.\u206E⁪‮‮⁪‪⁮⁮‎⁮⁪​‬‍‌⁬​⁬⁪⁮‫‮‮​​‎‭‏‌‮⁯‮‏‭‌‪‎​‪‮(_param0);
    if (obj1 == null)
      return (\u206D​‭‮⁪⁬‭‎‌‪‬⁭‎‬⁫⁬‬‎⁫‍‎‫​‏⁭‍⁬‮‏‎‫‬⁮‌​⁪‪​‏‏‮) null;
    \u206D​‭‮⁪⁬‭‎‌‪‬⁭‎‬⁫⁬‬‎⁫‍‎‫​‏⁭‍⁬‮‏‎‫‬⁮‌​⁪‪​‏‏‮ obj2 = new \u206D​‭‮⁪⁬‭‎‌‪‬⁭‎‬⁫⁬‬‎⁫‍‎‫​‏⁭‍⁬‮‏‎‫‬⁮‌​⁪‪​‏‏‮(obj1);
    if (_param1)
    {
      obj2.\u200E‏‬⁮‌‮⁫‫​​‍‍⁬‌⁪‏‪​⁮‪‏‎⁭⁪‮⁯⁫⁮‌‪⁮‮‫‎‫‌‮⁭‬‮‮(\u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u206A‌‏‍‪‮⁪⁭‮‬⁬⁮‏​‌⁭‮⁭‭‫⁬‮‏⁯‬⁬⁬​‭​‏⁭⁫⁮‍⁪⁮⁬‫‫‮());
      obj2.\u200E‏‬⁮‌‮⁫‫​​‍‍⁬‌⁪‏‪​⁮‪‏‎⁭⁪‮⁯⁫⁮‌‪⁮‮‫‎‫‌‮⁭‬‮‮(\u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200E‭‭⁫‫⁫‎​‍⁭‏‍⁮⁫⁭‎‏‬⁬‌‭​​‮‬‫‏⁭‫⁫⁫‬⁬⁭‮⁪‭‮⁯‎‮(\u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200C‏⁯‏⁯‍‭‮⁪‏‬⁯‎‪⁫‎‏⁭​‪⁪‍⁫⁯‌​‏‭⁪⁬‪⁫⁬‎‌‮‬⁫‍‫‮, obj1.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()));
    }
    return obj2;
  }

  public static byte[] \u200E‭‭⁫‫⁫‎​‍⁭‏‍⁮⁫⁭‎‏‬⁬‌‭​​‮‬‫‏⁭‫⁫⁫‬⁬⁭‮⁪‭‮⁯‎‮(
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param0,
    int _param1)
  {
    byte[] buffer = new byte[_param1];
    ((Random) _param0).NextBytes(buffer);
    return buffer;
  }

  public static \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(
    string _param0)
  {
    return \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(_param0, true);
  }

  public static \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(
    string _param0,
    bool _param1)
  {
    string str = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B⁪⁭‍‬⁯‪​⁪‭‎‎‪‏‍‌‭‏⁮‬‍‭‫⁪‍⁯⁯​‬‎⁬⁭⁬‫‌⁬​‍‎⁯‮(_param0);
    if (\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u206C‮⁬‫⁭⁯⁭‍‪‭‫‪‭‌‎‬‬‬⁪‍⁮⁭⁬⁫‭‪‮⁯‌‪⁫​‌⁮‪​​‫‏⁯‮(str, "PRNG"))
    {
      \u206D​‭‮⁪⁬‭‎‌‪‬⁭‎‬⁫⁬‬‎⁫‍‎‫​‏⁭‍⁬‮‏‎‫‬⁮‌​⁪‪​‏‏‮ obj = \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200D⁫⁮⁮⁯⁮⁭⁯‪‬⁬⁭‬⁬‍‎‮‬‬‪‏‌⁭⁮⁮‍⁬⁪‭‎⁯⁮​‫‬⁬⁫‌⁯‮‮(str.Substring(0, str.Length - "PRNG".Length), _param1);
      if (obj != null)
        return new \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮((\u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮) obj);
    }
    throw new ArgumentException("Unrecognised PRNG algorithm: " + _param0, "algorithm");
  }

  [Obsolete("Call GenerateSeed() on a SecureRandom instance instead")]
  public static byte[] \u206D‏⁭‫‬‬‍‮‫⁭⁯‎‍‪‫​‍⁬⁫⁫‏‬⁭‬‭⁭‭​⁬‪‬‌‍⁪‎‌‎‫‮‭‮(int _param0) => \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200E‭‭⁫‫⁫‎​‍⁭‏‍⁮⁫⁭‎‏‬⁬‌‭​​‮‬‫‏⁭‫⁫⁫‬⁬⁭‮⁪‭‮⁯‎‮(\u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200C‏⁯‏⁯‍‭‮⁪‏‬⁯‎‪⁫‎‏⁭​‪⁪‍⁫⁯‌​‏‭⁪⁬‪⁫⁬‎‌‮‬⁫‍‫‮, _param0);

  public \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮()
    : this((\u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮) \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200D⁫⁮⁮⁯⁮⁭⁯‪‬⁬⁭‬⁬‍‎‮‬‬‪‏‌⁭⁮⁮‍⁬⁪‭‎⁯⁮​‫‬⁬⁫‌⁯‮‮("SHA256", true))
  {
  }

  [Obsolete("Use GetInstance/SetSeed instead")]
  public \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮(byte[] _param1)
    : this((\u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮) \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200D⁫⁮⁮⁯⁮⁭⁯‪‬⁬⁭‬⁬‍‎‮‬‬‪‏‌⁭⁮⁮‍⁬⁪‭‎⁯⁮​‫‬⁬⁫‌⁯‮‮("SHA1", false))
  {
    this.\u200B⁭‬‫‍‪‌⁪‍⁬‏⁪‍‮‌⁫⁫‍‬‌‎⁬⁫‪‪⁮⁭‭⁮⁪​‮‭‬⁪‬‍⁫‏‬‮(_param1);
  }

  public \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮(
    \u206C⁫⁮‪‮⁬⁪‭⁪⁭‮‮⁯⁯⁫⁮‭⁫‮⁫‭⁬​⁬​⁭​​‍⁪‌⁯‍‮‮⁮⁭⁭⁬‌‮ _param1)
    : base(0)
  {
    this.\u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮ = _param1;
  }

  public virtual byte[] \u202E‬‪⁯‭⁯‎‮‍‎‫‎‏‮​⁫⁪‎‍⁭‬‎‫​‌‮‭⁯‭‭⁮‮‬​⁪‪‌⁪⁬‮‮(int _param1) => \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200E‭‭⁫‫⁫‎​‍⁭‏‍⁮⁫⁭‎‏‬⁬‌‭​​‮‬‫‏⁭‫⁫⁫‬⁬⁭‮⁪‭‮⁯‎‮(\u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u200C‏⁯‏⁯‍‭‮⁪‏‬⁯‎‪⁫‎‏⁭​‪⁪‍⁫⁯‌​‏‭⁪⁬‪⁫⁬‎‌‮‬⁫‍‫‮, _param1);

  public virtual void \u200B⁭‬‫‍‪‌⁪‍⁬‏⁪‍‮‌⁫⁫‍‬‌‎⁬⁫‪‪⁮⁭‭⁮⁪​‮‭‬⁪‬‍⁫‏‬‮(byte[] _param1) => this.\u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮.\u200E‏‬⁮‌‮⁫‫​​‍‍⁬‌⁪‏‪​⁮‪‏‎⁭⁪‮⁯⁫⁮‌‪⁮‮‫‎‫‌‮⁭‬‮‮(_param1);

  public virtual void \u200B⁭‬‫‍‪‌⁪‍⁬‏⁪‍‮‌⁫⁫‍‬‌‎⁬⁫‪‪⁮⁭‭⁮⁪​‮‭‬⁪‬‍⁫‏‬‮(long _param1) => this.\u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮.\u200E‏‬⁮‌‮⁫‫​​‍‍⁬‌⁪‏‪​⁮‪‏‎⁭⁪‮⁯⁫⁮‌‪⁮‮‫‎‫‌‮⁭‬‮‮(_param1);

  int Random.\u206A‍⁫‮‫⁮‍⁬‏​‭‌⁫⁪⁯⁯⁭⁭‍‫​‮⁪‪⁭‪‭‮⁯⁯‬‌‎‍‏⁯‏‭⁪⁪‮() => this.\u200F‏‌‍‫‪‬⁪⁯⁬‬⁮‮‌‏‌​‌⁪​‎‫⁪⁯⁬‬‏‫‍‌⁫⁮⁬‮‬⁫‏⁫⁪‬‮() & int.MaxValue;

  int Random.\u206A‍⁫‮‫⁮‍⁬‏​‭‌⁫⁪⁯⁯⁭⁭‍‫​‮⁪‪⁭‪‭‮⁯⁯‬‌‎‍‏⁯‏‭⁪⁪‮(int _param1)
  {
    if (_param1 < 2)
    {
      if (_param1 < 0)
        throw new ArgumentOutOfRangeException("maxValue", "cannot be negative");
      return 0;
    }
    if ((_param1 & _param1 - 1) == 0)
      return (int) ((long) (this.\u200F‏‌‍‫‪‬⁪⁯⁬‬⁮‮‌‏‌​‌⁪​‎‫⁪⁯⁬‬‏‫‍‌⁫⁮⁬‮‬⁫‏⁫⁪‬‮() & int.MaxValue) * (long) _param1 >> 31);
    int num1;
    int num2;
    do
    {
      num1 = this.\u200F‏‌‍‫‪‬⁪⁯⁬‬⁮‮‌‏‌​‌⁪​‎‫⁪⁯⁬‬‏‫‍‌⁫⁮⁬‮‬⁫‏⁫⁪‬‮() & int.MaxValue;
      num2 = num1 % _param1;
    }
    while (num1 - num2 + (_param1 - 1) < 0);
    return num2;
  }

  int Random.\u206A‍⁫‮‫⁮‍⁬‏​‭‌⁫⁪⁯⁯⁭⁭‍‫​‮⁪‪⁭‪‭‮⁯⁯‬‌‎‍‏⁯‏‭⁪⁪‮(int _param1, int _param2)
  {
    if (_param2 <= _param1)
      return _param2 == _param1 ? _param1 : throw new ArgumentException("maxValue cannot be less than minValue");
    int maxValue = _param2 - _param1;
    if (maxValue > 0)
      return _param1 + ((Random) this).Next(maxValue);
    int num;
    do
    {
      num = this.\u200F‏‌‍‫‪‬⁪⁯⁬‬⁮‮‌‏‌​‌⁪​‎‫⁪⁯⁬‬‏‫‍‌⁫⁮⁬‮‬⁫‏⁫⁪‬‮();
    }
    while (num < _param1 || num >= _param2);
    return num;
  }

  void Random.\u206C‮⁪‭⁬‎‏⁪⁫‏‬⁫⁯‌⁬​‭‍⁫⁬‮‌​‪⁪‍⁮​⁯⁭​‬⁮⁬⁫‫⁭‫‬‮(byte[] _param1) => this.\u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮.\u206C‮⁪‭⁬‎‏⁪⁫‏‬⁫⁯‌⁬​‭‍⁫⁬‮‌​‪⁪‍⁮​⁯⁭​‬⁮⁬⁫‫⁭‫‬‮(_param1);

  public virtual void \u206C‮⁪‭⁬‎‏⁪⁫‏‬⁫⁯‌⁬​‭‍⁫⁬‮‌​‪⁪‍⁮​⁯⁭​‬⁮⁬⁫‫⁭‫‬‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    this.\u206A⁭‎‪‮‎‬​​​‭​‌‫⁯‮⁬​⁬⁭‏​‌​‮⁪‏‮‪‭⁯⁯‎⁮⁯​‍⁮‎‪‮.\u206C‮⁪‭⁬‎‏⁪⁫‏‬⁫⁯‌⁬​‭‍⁫⁬‮‌​‪⁪‍⁮​⁯⁭​‬⁮⁬⁫‫⁭‫‬‮(_param1, _param2, _param3);
  }

  double Random.\u206E‎⁮‭‪⁮‬⁭‏⁪‬‎⁭⁯‏⁪‌⁪‭‮⁮‏‌‬⁬⁫‭⁮⁭‬⁫​​⁯⁭‌⁪​⁬‭‮() => Convert.ToDouble((ulong) this.\u206F‪‍⁪‍‬⁯⁭‪‬‌‎‏‮‏‫‏‭⁮⁪⁮‪‪‏‫‮‍⁮‏‬⁫‪⁯‫‌‬‮‪⁮‭‮() >> 11) * \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮.\u202C‎‎‏‌‍⁬‬⁯⁮⁮⁫‮⁫‬⁭‍⁭⁫⁯‎‮⁮⁫⁭⁬‍​‏⁫‭‌‎⁯⁮‍‌⁭⁮‫‮;

  public virtual int \u200F‏‌‍‫‪‬⁪⁯⁬‬⁮‮‌‏‌​‌⁪​‎‫⁪⁯⁬‬‏‫‍‌⁫⁮⁬‮‬⁫‏⁫⁪‬‮()
  {
    byte[] buffer = new byte[4];
    ((Random) this).NextBytes(buffer);
    return (int) \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u206B‪‍‏‮‭⁭‍‭‍‎⁫‪⁯‏⁬‌⁬‬‭⁭‌​​⁬‍⁯‭‮⁪‫⁯‬‫⁮‏‭​‫‪‮(buffer, 0);
  }

  public virtual long \u206F‪‍⁪‍‬⁯⁭‪‬‌‎‏‮‏‫‏‭⁮⁪⁮‪‪‏‫‮‍⁮‏‬⁫‪⁯‫‌‬‮‪⁮‭‮()
  {
    byte[] buffer = new byte[8];
    ((Random) this).NextBytes(buffer);
    return (long) \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200F‍‫⁬⁮​‌‮‎‫⁫‍⁮⁭‫⁯⁬⁮‪‎⁯‏⁫⁯​​‎⁯⁪‎⁮⁬‮‎⁪⁪‍⁯⁬⁪‮(buffer, 0);
  }
}
