// Decompiled with JetBrains decompiler
// Type: 368502807951.518243224967
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003368502807951;
using \u003495551109921;
using \u003882244590153;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003368502807951
{
  internal class \u003518243224967 : \u003337930467789
  {
    private static readonly \u003212044566473[] \u003870312230966 = new \u003212044566473[1]
    {
      \u003212044566473.Utf8
    };

    public virtual int \u003629843107562 { get; }

    public virtual double \u003572817989212 => 0.01;

    protected virtual IEnumerable<\u003212044566473> \u003588021563705 => (IEnumerable<\u003212044566473>) \u003518243224967.\u003870312230966;

    protected override void ApplyHeuristics(byte[] buffer)
    {
      if (this.\u003615656070883 != \u003212044566473.Utf8)
        return;
      int num = ((IEnumerable<byte>) buffer).Count<byte>((Func<byte, bool>) (_param1 => _param1 == (byte) 0));
      if (num == 0)
        return;
      this.\u003188484271309 = (float) Math.Pow(Math.E, (double) -num);
    }

    protected override bool DetectFromBom(byte[] buffer)
    {
      if (buffer[0] != (byte) 239 || buffer[1] != (byte) 187 || buffer[2] != (byte) 191)
        return false;
      this.\u003615656070883 = \u003212044566473.Utf8;
      return true;
    }
  }
}
