// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Wrappers.MethodProcess
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Adapter;
using ProjNet.Consumers;
using ProjNet.Objects;
using ProjNet.Roles;
using ProjNet.Structs;
using ProjNet.Templates;
using ProjNet.Visitors;
using System;
using System.Collections.Generic;
using System.Data.Linq;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Importers;
using TYPELIBA.Pages;
using TYPELIBA.Schemes;

namespace TYPELIBA.Wrappers
{
  internal class MethodProcess
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static Table<ExporterTokenTemplate> SortConsumer() => new CreatorProcess().GetTable<ExporterTokenTemplate>();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void GetConsumer(string var1, string cont)
    {
      int num = 0;
      Table<ExporterTokenTemplate> table;
      ExporterTokenTemplate entity;
      CreatorProcess creatorProcess;
      while (true)
      {
        switch (num)
        {
          case 0:
            creatorProcess = new CreatorProcess();
            if (MethodProcess.IncludeCreator())
            {
              num = 2;
              continue;
            }
            goto case 4;
          case 1:
          case 2:
            table = MethodProcess.SortConsumer();
            entity = new ExporterTokenTemplate();
            entity.FirstName = var1;
            if (MethodProcess.IncludeCreator())
            {
              num = 4;
              continue;
            }
            goto case 3;
          case 3:
          case 5:
            table.Context.SubmitChanges();
            creatorProcess.SubmitChanges();
            num = 6;
            continue;
          case 4:
            entity.LastName = cont;
            table.InsertOnSubmit(entity);
            goto case 3;
          case 6:
            goto label_9;
          default:
            if (true)
            {
              num = 5;
              continue;
            }
            goto label_7;
        }
      }
label_9:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void DeleteAuthor(int authorID)
    {
      int num1 = 5;
      while (true)
      {
        int num2 = num1;
        // ISSUE: variable of a compiler-generated type
        MethodProcess.IssuerErrorPool issuerErrorPool;
        CreatorProcess creatorProcess;
        ExporterTokenTemplate entity;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 5:
              // ISSUE: object of a compiler-generated type is created
              issuerErrorPool = new MethodProcess.IssuerErrorPool();
              if (MethodProcess.IncludeCreator())
              {
                num2 = 3;
                continue;
              }
              goto label_2;
            case 1:
            case 2:
              // ISSUE: reference to a compiler-generated field
              entity = creatorProcess.GetTable<ExporterTokenTemplate>().Where<ExporterTokenTemplate>((Expression<Func<ExporterTokenTemplate, bool>>) (a => a.AuthorID == issuerErrorPool._InstanceConsumer)).SingleOrDefault<ExporterTokenTemplate>();
              goto case 4;
            case 3:
              goto label_2;
            case 4:
              creatorProcess.Authors.DeleteOnSubmit(entity);
              creatorProcess.SubmitChanges();
              if (MethodProcess.IncludeCreator())
              {
                num2 = 6;
                continue;
              }
              goto label_8;
            case 6:
              goto label_10;
            default:
              goto label_6;
          }
        }
label_2:
        // ISSUE: reference to a compiler-generated field
        issuerErrorPool._InstanceConsumer = authorID;
        creatorProcess = new CreatorProcess();
        num1 = 1;
        continue;
label_6:
        num1 = 4;
      }
label_10:
      return;
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void LogoutConsumer(string var1, string visitor, int filter, string vis2)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        ComposerConsumerAdapter entity;
        Table<ComposerConsumerAdapter> table;
        CreatorProcess creatorProcess;
        while (true)
        {
          switch (num2)
          {
            case 0:
              creatorProcess.SubmitChanges();
              if (MethodProcess.IncludeCreator())
              {
                num2 = 7;
                continue;
              }
              goto case 5;
            case 1:
            case 6:
              table = MethodProcess.RateConsumer();
              entity = new ComposerConsumerAdapter();
              num2 = 3;
              continue;
            case 2:
            case 3:
              entity.ISBN = var1;
              entity.BookTitle = visitor;
              entity.EditionNumber = filter;
              entity.Copyright = vis2;
              table.InsertOnSubmit(entity);
              goto case 5;
            case 4:
              goto label_6;
            case 5:
              table.Context.SubmitChanges();
              if (!MethodProcess.ForgotCreator())
              {
                num2 = 0;
                continue;
              }
              goto label_9;
            case 7:
              goto label_11;
            default:
              if (!MethodProcess.ForgotCreator())
              {
                num2 = 5;
                continue;
              }
              goto case 1;
          }
        }
label_6:
        creatorProcess = new CreatorProcess();
        num1 = 6;
      }
label_11:
      return;
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void SetupConsumer(string v)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        CreatorProcess creatorProcess;
        // ISSUE: variable of a compiler-generated type
        MethodProcess.MappingRule mappingRule;
        ComposerConsumerAdapter entity;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_6;
            case 1:
            case 2:
              // ISSUE: reference to a compiler-generated field
              entity = creatorProcess.GetTable<ComposerConsumerAdapter>().Where<ComposerConsumerAdapter>((Expression<Func<ComposerConsumerAdapter, bool>>) (t => t.ISBN == mappingRule._ContainerConsumer)).SingleOrDefault<ComposerConsumerAdapter>();
              goto case 3;
            case 3:
            case 5:
              creatorProcess.Titles.DeleteOnSubmit(entity);
              creatorProcess.SubmitChanges();
              num2 = 6;
              continue;
            case 4:
              goto label_7;
            case 6:
              goto label_8;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 5;
        continue;
label_6:
        // ISSUE: object of a compiler-generated type is created
        mappingRule = new MethodProcess.MappingRule();
        num1 = 4;
        continue;
label_7:
        // ISSUE: reference to a compiler-generated field
        mappingRule._ContainerConsumer = v;
        creatorProcess = new CreatorProcess();
        num1 = 1;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void FindConsumer(string param, int b_High)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        CreatorProcess creatorProcess;
        DispatcherProcess entity;
        Table<DispatcherProcess> table;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              creatorProcess = new CreatorProcess();
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto case 2;
            case 1:
            case 3:
              entity.ISBN = param;
              table.InsertOnSubmit(entity);
              table.Context.SubmitChanges();
              creatorProcess.SubmitChanges();
              if (true)
              {
                num2 = 6;
                continue;
              }
              goto case 5;
            case 2:
              entity = new DispatcherProcess();
              entity.AuthorID = b_High;
              goto case 1;
            case 5:
              table = creatorProcess.GetTable<DispatcherProcess>();
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_8;
            case 6:
              goto label_10;
            default:
              goto label_5;
          }
        }
label_5:
        num1 = 1;
      }
label_10:
      return;
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void DeleteAuthorISBN(string isbn, int id)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        // ISSUE: variable of a compiler-generated type
        MethodProcess.ClientConsumer clientConsumer;
        while (true)
        {
          switch (num2)
          {
            case 0:
              // ISSUE: object of a compiler-generated type is created
              clientConsumer = new MethodProcess.ClientConsumer();
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_2;
            case 1:
            case 2:
              // ISSUE: reference to a compiler-generated field
              clientConsumer._DatabaseConsumer = isbn;
              // ISSUE: reference to a compiler-generated field
              clientConsumer.m_IssuerConsumer = id;
              num2 = 5;
              continue;
            case 3:
            case 4:
              goto label_7;
            case 5:
              goto label_2;
            case 6:
              goto label_9;
            default:
              num2 = 4;
              continue;
          }
        }
label_2:
        CreatorProcess creatorProcess = new CreatorProcess();
label_7:
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        DispatcherProcess entity = creatorProcess.GetTable<DispatcherProcess>().Where<DispatcherProcess>((Expression<Func<DispatcherProcess, bool>>) (authorisbn => authorisbn.ISBN == clientConsumer._DatabaseConsumer && authorisbn.AuthorID == clientConsumer.m_IssuerConsumer)).SingleOrDefault<DispatcherProcess>();
        creatorProcess.PublishRepository().DeleteOnSubmit(entity);
        creatorProcess.SubmitChanges();
        num1 = 6;
      }
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static Table<ComposerConsumerAdapter> RateConsumer() => new CreatorProcess().GetTable<ComposerConsumerAdapter>();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable CloneConsumer()
    {
      int num1 = 2;
      IQueryable queryable1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_2;
            case 1:
            case 4:
              goto label_3;
            case 3:
              goto label_1;
            case 5:
              goto label_7;
            default:
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_7;
          }
        }
label_1:
        IQueryable<ItemParamsID<string, string, string>> queryable2;
        queryable1 = (IQueryable) queryable2;
        num1 = 5;
        continue;
label_2:
        CreatorProcess creatorProcess = new CreatorProcess();
        num1 = 4;
        continue;
label_3:
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: object of a compiler-generated type is created
        queryable2 = creatorProcess.GetTable<ExporterTokenTemplate>().Join<ExporterTokenTemplate, DispatcherProcess, int, ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>>((IEnumerable<DispatcherProcess>) creatorProcess.GetTable<DispatcherProcess>(), (Expression<Func<ExporterTokenTemplate, int>>) (author => author.AuthorID), (Expression<Func<DispatcherProcess, int>>) (book => book.AuthorID), (Expression<Func<ExporterTokenTemplate, DispatcherProcess, ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>>>) ((author, book) => new ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>(author, book))).OrderBy<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>>) (processErrorObject => processErrorObject.author.LastName)).ThenBy<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>>) (processErrorObject => processErrorObject.author.FirstName)).Select<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, ItemParamsID<string, string, string>>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, ItemParamsID<string, string, string>>>) (processErrorObject => new ItemParamsID<string, string, string>(processErrorObject.author.FirstName, processErrorObject.author.LastName, processErrorObject.book.ISBN)));
        goto label_1;
      }
label_7:
      return queryable1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static string FillConsumer(string reference)
    {
      int num1 = 4;
      string str1;
      string str2;
      // ISSUE: variable of a compiler-generated type
      MethodProcess.TestsRule testsRule;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            // ISSUE: reference to a compiler-generated field
            testsRule._RecordConsumer = reference;
            int num2 = 5;
            num1 = MethodProcess.ForgotCreator() ? num2 : num2;
            continue;
          case 2:
          case 3:
            str2 = str1;
            if (MethodProcess.IncludeCreator())
            {
              num1 = 6;
              continue;
            }
            goto case 5;
          case 4:
            // ISSUE: object of a compiler-generated type is created
            testsRule = new MethodProcess.TestsRule();
            if (MethodProcess.IncludeCreator())
            {
              num1 = 0;
              continue;
            }
            goto case 0;
          case 5:
            // ISSUE: reference to a compiler-generated field
            str1 = new CreatorProcess().GetTable<ExporterTokenTemplate>().Where<ExporterTokenTemplate>((Expression<Func<ExporterTokenTemplate, bool>>) (author => author.AuthorID == int.Parse(testsRule._RecordConsumer))).Select<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => author.FirstName + " " + author.LastName)).SingleOrDefault<string>();
            goto case 2;
          case 6:
            goto label_7;
          default:
            num1 = 2;
            continue;
        }
      }
label_7:
      return str2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static string MapConsumer(string i)
    {
      int num1 = 3;
      if (true)
        goto label_5;
label_1:
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      MethodProcess.TaskMapSerializer taskMapSerializer = new MethodProcess.TaskMapSerializer();
      int num2 = 4;
label_4:
      num1 = num2;
label_5:
      CreatorProcess creatorProcess;
      string str1;
      string str2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_1;
          case 1:
          case 4:
            goto label_2;
          case 2:
            str2 = str1;
            if (MethodProcess.IncludeCreator())
            {
              num1 = 6;
              continue;
            }
            goto label_8;
          case 5:
            // ISSUE: reference to a compiler-generated field
            str1 = creatorProcess.GetTable<ExporterTokenTemplate>().Where<ExporterTokenTemplate>((Expression<Func<ExporterTokenTemplate, bool>>) (author => author.LastName.CompareTo(taskMapSerializer.m_QueueConsumer) == 0)).Select<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => (object) author.AuthorID + ", " + author.FirstName + " " + author.LastName)).First<string>();
            goto case 2;
          case 6:
            goto label_8;
          default:
            goto label_6;
        }
      }
label_2:
      // ISSUE: reference to a compiler-generated field
      taskMapSerializer.m_QueueConsumer = i;
      creatorProcess = new CreatorProcess();
      num2 = 5;
      goto label_4;
label_6:
      num2 = 2;
      goto label_4;
label_8:
      return str2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void ForgotConsumer() => new CreatorProcess().GetTable<ComposerConsumerAdapter>().SelectMany<ComposerConsumerAdapter, DispatcherProcess, ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>>((Expression<Func<ComposerConsumerAdapter, IEnumerable<DispatcherProcess>>>) (title => title.AuthorISBNs), (Expression<Func<ComposerConsumerAdapter, DispatcherProcess, ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>>>) ((title, book) => new ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>(title, book))).Select<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>>((Expression<Func<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>>>) (modelSingletonSchema => new MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>(modelSingletonSchema, modelSingletonSchema.book.Author))).OrderBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.author.LastName)).ThenBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.author.FirstName)).ThenBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.\u003C\u003Eh__TransparentIdentifier0.title.BookTitle)).Select<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, Singleton<string, string, string>>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, Singleton<string, string, string>>>) (methodEventRole => new Singleton<string, string, string>(methodEventRole.author.FirstName, methodEventRole.author.LastName, methodEventRole.\u003C\u003Eh__TransparentIdentifier0.title.BookTitle)));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable PrepareConsumer()
    {
      int num1 = 4;
      IQueryable queryable1;
      while (true)
      {
        IQueryable<ProductProcessVisitor.DescriptorTemplateWrapper> queryable2;
        CreatorProcess creatorProcess;
        int num2;
        switch (num1)
        {
          case 0:
          case 4:
            creatorProcess = new CreatorProcess();
            num2 = 2;
            break;
          case 1:
          case 2:
            ParameterExpression parameterExpression;
            // ISSUE: object of a compiler-generated type is created
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: type reference
            queryable2 = creatorProcess.GetTable<ExporterTokenTemplate>().OrderBy<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => author.LastName)).ThenBy<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => author.FirstName)).Select<ExporterTokenTemplate, Ref<ExporterTokenTemplate, string>>((Expression<Func<ExporterTokenTemplate, Ref<ExporterTokenTemplate, string>>>) (author => new Ref<ExporterTokenTemplate, string>(author, author.FirstName + " " + author.LastName))).Select<Ref<ExporterTokenTemplate, string>, ProductProcessVisitor.DescriptorTemplateWrapper>(Expression.Lambda<Func<Ref<ExporterTokenTemplate, string>, ProductProcessVisitor.DescriptorTemplateWrapper>>((Expression) Expression.MemberInit(Expression.New(typeof (ProductProcessVisitor.DescriptorTemplateWrapper)), (MemberBinding) Expression.Bind((MethodInfo) MethodBase.GetMethodFromHandle(__methodref (ProductProcessVisitor.DescriptorTemplateWrapper.set_Author)), )))); //unable to render the statement
            goto case 3;
          case 3:
            queryable1 = (IQueryable) queryable2;
            num1 = 5;
            continue;
          case 5:
            goto label_7;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
      }
label_7:
      return queryable1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable StopConsumer()
    {
      int num1 = 4;
      if (!MethodProcess.ForgotCreator())
        goto label_3;
label_1:
      CreatorProcess creatorProcess;
      IOrderedQueryable<ComposerConsumerAdapter> orderedQueryable = creatorProcess.GetTable<ComposerConsumerAdapter>().OrderBy<ComposerConsumerAdapter, string>((Expression<Func<ComposerConsumerAdapter, string>>) (title => title.BookTitle));
      goto label_5;
label_2:
      int num2;
      num1 = num2;
label_3:
      IQueryable queryable;
      switch (num1)
      {
        case 0:
        case 1:
          goto label_1;
        case 2:
        case 3:
          break;
        case 4:
          goto label_6;
        case 5:
          return queryable;
        default:
          num2 = 3;
          goto label_2;
      }
label_5:
      queryable = (IQueryable) orderedQueryable;
      if (!MethodProcess.ForgotCreator())
      {
        num1 = 5;
        goto label_3;
      }
label_6:
      creatorProcess = new CreatorProcess();
      num2 = 0;
      goto label_2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IEnumerable<ComposerConsumerAdapter> RevertConsumer(
      ExporterTokenTemplate var1)
    {
      CreatorProcess creatorProcess = new CreatorProcess();
      return var1.AuthorISBNs.Select<DispatcherProcess, ComposerConsumerAdapter>((Func<DispatcherProcess, ComposerConsumerAdapter>) (def => def.Title));
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IEnumerable<ExporterTokenTemplate> InterruptRepository(
      ComposerConsumerAdapter param)
    {
      CreatorProcess creatorProcess = new CreatorProcess();
      return param.AuthorISBNs.Select<DispatcherProcess, ExporterTokenTemplate>((Func<DispatcherProcess, ExporterTokenTemplate>) (value => value.Author));
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable CompareRepository()
    {
      int num1 = 4;
      IQueryable queryable;
      while (true)
      {
        int num2 = num1;
        CreatorProcess creatorProcess;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              creatorProcess = new CreatorProcess();
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_2;
            case 1:
            case 3:
              goto label_3;
            case 2:
              goto label_2;
            case 5:
              goto label_8;
            default:
              goto label_6;
          }
        }
label_2:
        IOrderedQueryable<ComposerConsumerAdapter> orderedQueryable;
        queryable = (IQueryable) orderedQueryable;
        num1 = 5;
        continue;
label_3:
        orderedQueryable = creatorProcess.GetTable<ComposerConsumerAdapter>().OrderBy<ComposerConsumerAdapter, string>((Expression<Func<ComposerConsumerAdapter, string>>) (title => title.Copyright));
        goto label_2;
label_6:
        num1 = 2;
      }
label_8:
      return queryable;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable IncludeRepository(string init)
    {
      int num1 = 5;
      IQueryable queryable1;
      while (true)
      {
        CreatorProcess creatorProcess;
        // ISSUE: variable of a compiler-generated type
        MethodProcess.MapperRule mapperRule;
        IQueryable<ComposerConsumerAdapter> queryable2;
        int num2;
        switch (num1)
        {
          case 0:
          case 5:
            // ISSUE: object of a compiler-generated type is created
            mapperRule = new MethodProcess.MapperRule();
            num2 = 3;
            break;
          case 1:
          case 3:
            // ISSUE: reference to a compiler-generated field
            mapperRule._InitializerConsumer = init;
            creatorProcess = new CreatorProcess();
            if (MethodProcess.IncludeCreator())
            {
              num1 = 4;
              continue;
            }
            goto case 2;
          case 2:
            queryable1 = (IQueryable) queryable2;
            num2 = 6;
            break;
          case 4:
            // ISSUE: reference to a compiler-generated field
            queryable2 = creatorProcess.GetTable<ComposerConsumerAdapter>().Where<ComposerConsumerAdapter>((Expression<Func<ComposerConsumerAdapter, bool>>) (title => title.BookTitle.Contains(mapperRule._InitializerConsumer)));
            goto case 2;
          case 6:
            goto label_8;
          default:
            num1 = 2;
            continue;
        }
        num1 = num2;
      }
label_8:
      return queryable1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static IQueryable RunRepository()
    {
      int num1 = 0;
      IQueryable queryable1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_2;
            case 1:
            case 3:
              goto label_3;
            case 2:
            case 4:
              goto label_1;
            case 5:
              goto label_7;
            default:
              num2 = 4;
              continue;
          }
        }
label_1:
        IQueryable<ItemParamsID<string, string, string>> queryable2;
        queryable1 = (IQueryable) queryable2;
        num1 = 5;
        continue;
label_2:
        CreatorProcess creatorProcess = new CreatorProcess();
        num1 = 3;
        continue;
label_3:
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: object of a compiler-generated type is created
        queryable2 = creatorProcess.GetTable<ExporterTokenTemplate>().Join<ExporterTokenTemplate, DispatcherProcess, int, ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>>((IEnumerable<DispatcherProcess>) creatorProcess.GetTable<DispatcherProcess>(), (Expression<Func<ExporterTokenTemplate, int>>) (author => author.AuthorID), (Expression<Func<DispatcherProcess, int>>) (book => book.AuthorID), (Expression<Func<ExporterTokenTemplate, DispatcherProcess, ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>>>) ((author, book) => new ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>(author, book))).OrderBy<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>>) (processErrorObject => processErrorObject.author.LastName)).ThenBy<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, string>>) (processErrorObject => processErrorObject.author.FirstName)).Select<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, ItemParamsID<string, string, string>>((Expression<Func<ProcessErrorObject<ExporterTokenTemplate, DispatcherProcess>, ItemParamsID<string, string, string>>>) (processErrorObject => new ItemParamsID<string, string, string>(processErrorObject.author.FirstName, processErrorObject.author.LastName, processErrorObject.book.ISBN)));
        goto label_1;
      }
label_7:
      return queryable1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static RichTextBox InitRepository()
    {
      int num1 = 3;
      RichTextBox richTextBox1;
      while (true)
      {
        int num2 = num1;
        RichTextBox richTextBox2;
        // ISSUE: variable of a compiler-generated type
        MethodProcess.ComparatorParamsID comparatorParamsId;
        IQueryable<Singleton<string, string, string>> queryable;
        while (true)
        {
          switch (num2)
          {
            case 0:
              foreach (Singleton<string, string, string> singleton in (IEnumerable<Singleton<string, string, string>>) queryable)
              {
                int num3 = 2;
                while (true)
                {
                  switch (num3)
                  {
                    case 0:
                    case 2:
                      goto label_10;
                    case 1:
                    case 3:
                      goto label_13;
                    default:
                      if (true)
                      {
                        num3 = 3;
                        continue;
                      }
                      goto label_13;
                  }
                }
label_10:
                richTextBox2.AppendText(string.Format("\t{0,-10} {1,-15} {2}\n", (object) singleton.FirstName, (object) singleton.LastName, (object) singleton.BookTitle));
label_13:;
              }
              richTextBox1 = richTextBox2;
              num2 = 6;
              continue;
            case 1:
            case 5:
              // ISSUE: reference to a compiler-generated field
              comparatorParamsId._RulesConsumer = new CreatorProcess();
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              // ISSUE: object of a compiler-generated type is created
              // ISSUE: object of a compiler-generated type is created
              // ISSUE: object of a compiler-generated type is created
              queryable = comparatorParamsId._RulesConsumer.GetTable<ComposerConsumerAdapter>().SelectMany<ComposerConsumerAdapter, DispatcherProcess, ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>>((Expression<Func<ComposerConsumerAdapter, IEnumerable<DispatcherProcess>>>) (title => comparatorParamsId._RulesConsumer.GetTable<DispatcherProcess>()), (Expression<Func<ComposerConsumerAdapter, DispatcherProcess, ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>>>) ((title, book) => new ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>(title, book))).Select<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>>((Expression<Func<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>>>) (modelSingletonSchema => new MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>(modelSingletonSchema, modelSingletonSchema.book.Author))).OrderBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.author.LastName)).ThenBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.author.FirstName)).ThenBy<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, string>>) (methodEventRole => methodEventRole.\u003C\u003Eh__TransparentIdentifier0.title.BookTitle)).Select<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, Singleton<string, string, string>>((Expression<Func<MethodEventRole<ModelSingletonSchema<ComposerConsumerAdapter, DispatcherProcess>, ExporterTokenTemplate>, Singleton<string, string, string>>>) (methodEventRole => new Singleton<string, string, string>(methodEventRole.author.FirstName, methodEventRole.author.LastName, methodEventRole.\u003C\u003Eh__TransparentIdentifier0.title.BookTitle)));
              richTextBox2 = new RichTextBox();
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_6;
            case 2:
            case 4:
              richTextBox2.AppendText("Authors and titles:\n\n");
              goto case 0;
            case 3:
              goto label_6;
            case 6:
              goto label_19;
            default:
              num2 = 0;
              continue;
          }
        }
label_6:
        // ISSUE: object of a compiler-generated type is created
        comparatorParamsId = new MethodProcess.ComparatorParamsID();
        num1 = 5;
      }
label_19:
      return richTextBox1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static RichTextBox VisitRepository()
    {
      int num1 = 5;
      RichTextBox richTextBox1;
      while (true)
      {
        int num2 = num1;
        CreatorProcess creatorProcess;
        IEnumerator<DecoratorParamsID<string, IEnumerable<string>>> enumerator;
        RichTextBox richTextBox2;
        IQueryable<DecoratorParamsID<string, IEnumerable<string>>> queryable;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              try
              {
                while (enumerator.MoveNext())
                {
                  // ISSUE: variable of a compiler-generated type
                  DecoratorParamsID<string, IEnumerable<string>> current = enumerator.Current;
                  richTextBox2.AppendText("\t" + current.Name + ":\n");
                  foreach (string title in current.Titles)
                  {
                    int num3 = 2;
                    while (true)
                    {
                      switch (num3)
                      {
                        case 0:
                        case 2:
                          goto label_6;
                        case 1:
                        case 3:
                          goto label_9;
                        default:
                          num3 = 3;
                          continue;
                      }
                    }
label_6:
                    richTextBox2.AppendText("\t\t" + title + "\n");
label_9:;
                  }
                }
              }
              finally
              {
                enumerator?.Dispose();
              }
              richTextBox1 = richTextBox2;
              if (true)
              {
                num2 = 6;
                continue;
              }
              goto case 4;
            case 1:
            case 2:
              enumerator = queryable.GetEnumerator();
              goto case 0;
            case 4:
              ParameterExpression parameterExpression;
              // ISSUE: object of a compiler-generated type is created
              // ISSUE: object of a compiler-generated type is created
              // ISSUE: method reference
              // ISSUE: type reference
              // ISSUE: method reference
              // ISSUE: type reference
              // ISSUE: method reference
              // ISSUE: type reference
              // ISSUE: method reference
              // ISSUE: type reference
              // ISSUE: method reference
              // ISSUE: type reference
              // ISSUE: method reference
              // ISSUE: type reference
              queryable = creatorProcess.GetTable<ExporterTokenTemplate>().OrderBy<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => author.LastName)).ThenBy<ExporterTokenTemplate, string>((Expression<Func<ExporterTokenTemplate, string>>) (author => author.FirstName)).Select<ExporterTokenTemplate, Ref<ExporterTokenTemplate, string>>((Expression<Func<ExporterTokenTemplate, Ref<ExporterTokenTemplate, string>>>) (author => new Ref<ExporterTokenTemplate, string>(author, author.FirstName + " " + author.LastName))).Select<Ref<ExporterTokenTemplate, string>, EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>>((Expression<Func<Ref<ExporterTokenTemplate, string>, EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>>>) (@ref => new EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>(@ref, @ref.author.AuthorISBNs.OrderBy<DispatcherProcess, string>((Func<DispatcherProcess, string>) (book => book.Title.BookTitle)).Select<DispatcherProcess, string>((Func<DispatcherProcess, string>) (book => book.Title.BookTitle))))).Select<EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>, DecoratorParamsID<string, IEnumerable<string>>>(Expression.Lambda<Func<EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>, DecoratorParamsID<string, IEnumerable<string>>>>((Expression) Expression.New((ConstructorInfo) MethodBase.GetMethodFromHandle(__methodref (DecoratorParamsID<string, IEnumerable<string>>.\u002Ector), __typeref (DecoratorParamsID<string, IEnumerable<string>>)), (IEnumerable<Expression>) new Expression[2]
              {
                (Expression) Expression.Property((Expression) Expression.Property((Expression) parameterExpression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>.OrderObject), __typeref (EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ref<ExporterTokenTemplate, string>.PatchObject), __typeref (Ref<ExporterTokenTemplate, string>))),
                (Expression) Expression.Property((Expression) parameterExpression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>.DisableObject), __typeref (EventTokenStructBuilder<Ref<ExporterTokenTemplate, string>, IEnumerable<string>>)))
              }, (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (DecoratorParamsID<string, IEnumerable<string>>.ValidateObject), __typeref (DecoratorParamsID<string, IEnumerable<string>>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (DecoratorParamsID<string, IEnumerable<string>>.AssetObject), __typeref (DecoratorParamsID<string, IEnumerable<string>>))), parameterExpression));
              richTextBox2 = new RichTextBox();
              richTextBox2.AppendText("Titles Grouped by Author:\n");
              num2 = 1;
              continue;
            case 5:
              goto label_1;
            case 6:
              goto label_24;
            default:
              goto label_23;
          }
        }
label_1:
        creatorProcess = new CreatorProcess();
        num1 = 4;
        continue;
label_23:
        num1 = 0;
      }
label_24:
      return richTextBox1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MethodProcess()
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool IncludeCreator() => true;

    internal static bool ForgotCreator() => false;
  }
}
