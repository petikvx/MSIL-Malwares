// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.Querying.Join
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;

namespace DataAccessFramework.Querying
{
  public class Join : TableBase
  {
    private readonly TableBase _left;
    private readonly QueryTable _right;
    private readonly JoinType _joinType;
    private WherePart _wherePart;

    public Join(TableBase left, QueryTable right, JoinType joinType)
    {
label_1:
      int num1 = -1085468798;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1963407241)) % 4U)
        {
          case 0:
            this._left = left;
            this._right = right;
            num1 = (int) num2 * -1456021994 ^ 212119916;
            continue;
          case 1:
            num1 = (int) num2 * -1979660031 ^ -1552221134;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      this._joinType = joinType;
    }

    public QueryTable Right
    {
      get
      {
label_1:
        int num1 = -1253140882;
        QueryTable right;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -680300277)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              right = this._right;
              num1 = (int) num2 * -1188879661 ^ 1871651708;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return right;
      }
    }

    public TableBase Left => this._left;

    public Join On(WherePart clause)
    {
label_1:
      int num1 = 1063559755;
      Join join;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2011964014)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this._wherePart = clause;
            join = this;
            num1 = (int) num2 * -1660327419 ^ 1759865322;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return join;
    }

    public override string TableName
    {
      get
      {
label_1:
        int num1 = -858861304;
        string tableName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1166553961)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              tableName = \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(2299099939U);
              num1 = (int) num2 * -584663951 ^ -445729213;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return tableName;
      }
    }

    internal override void BuildSql(BuildSqlContext sqlContext)
    {
      this.Left.BuildSql(sqlContext);
label_1:
      int num1 = 998074833;
      StringBuilder builder;
      JoinType joinType;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 290743969)) % 18U)
        {
          case 0:
            joinType = this._joinType;
            int num3 = joinType != JoinType.Inner ? 750434281 : (num3 = 2128334719);
            num1 = num3 ^ (int) num2 * 71666651;
            continue;
          case 1:
            builder = sqlContext.Builder;
            num1 = (int) num2 * 2074416967 ^ 949103170;
            continue;
          case 2:
            goto label_5;
          case 3:
            this.Right.BuildSql(sqlContext);
            num1 = 1681798146;
            continue;
          case 4:
            int num4;
            num1 = num4 = joinType == JoinType.Left ? 844512071 : (num4 = 693328636);
            continue;
          case 5:
            Join.\u206F⁮‎⁪​‍‬‪⁮‭‮⁬⁪‮‬‫‬‍⁫⁯‪⁯⁪‍‭‍‫⁯‏⁯‪⁪‍‬‫‌‮⁬⁬‌‮(builder, \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(3261645957U));
            this._wherePart.BuildSql(sqlContext);
            num1 = 1203246798;
            continue;
          case 6:
            num1 = (int) num2 * -1178240733 ^ -337598378;
            continue;
          case 7:
            num1 = (int) num2 * -641616903 ^ 1073691189;
            continue;
          case 8:
            num1 = (int) num2 * 1728546104 ^ -1328489431;
            continue;
          case 9:
            num1 = (int) num2 * -1470060504 ^ 1096644684;
            continue;
          case 10:
            Join.\u206F⁮‎⁪​‍‬‪⁮‭‮⁬⁪‮‬‫‬‍⁫⁯‪⁯⁪‍‭‍‫⁯‏⁯‪⁪‍‬‫‌‮⁬⁬‌‮(builder, \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(3249622939U));
            num1 = 660328884;
            continue;
          case 11:
            goto label_3;
          case 12:
            Join.\u206F⁮‎⁪​‍‬‪⁮‭‮⁬⁪‮‬‫‬‍⁫⁯‪⁯⁪‍‭‍‫⁯‏⁯‪⁪‍‬‫‌‮⁬⁬‌‮(builder, \u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(1806430886U));
            num1 = 1707385704;
            continue;
          case 13:
            goto label_1;
          case 14:
            num1 = (int) num2 * 800160138 ^ -207154182;
            continue;
          case 15:
            num1 = (int) num2 * 1329335172 ^ 172395929;
            continue;
          case 16:
            int num5 = !flag ? 27001948 : (num5 = 1226321553);
            num1 = num5 ^ (int) num2 * -2025209195;
            continue;
          case 17:
            flag = this._wherePart == null;
            num1 = (int) num2 * -1124164636 ^ -5632305;
            continue;
          default:
            goto label_20;
        }
      }
label_3:
      return;
label_20:
      return;
label_5:
      throw Join.\u206E‍‮‍⁫⁭‎‫‏‌‍‍⁯‍⁮‍‌‬⁯‌‌‍‭⁪‏⁪⁭‬‏‫​⁮⁪​‍⁪⁮‍‫‬‮(\u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(48790712U));
    }

    protected internal override IEnumerable<FieldReference> Fields
    {
      get
      {
label_1:
        int num1 = -1955693667;
        IEnumerable<FieldReference> fields;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -162673064)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -773475819 ^ 1205370174;
              continue;
            case 1:
              fields = this._left.Fields.Union<FieldReference>(this._right.Fields);
              num1 = (int) num2 * 1369293483 ^ -1074333153;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return fields;
      }
    }

    static StringBuilder \u206F⁮‎⁪​‍‬‪⁮‭‮⁬⁪‮‬‫‬‍⁫⁯‪⁯⁪‍‭‍‫⁯‏⁯‪⁪‍‬‫‌‮⁬⁬‌‮(
      [In] StringBuilder obj0,
      [In] string obj1)
    {
      return obj0.Append(obj1);
    }

    static InvalidOperationException \u206E‍‮‍⁫⁭‎‫‏‌‍‍⁯‍⁮‍‌‬⁯‌‌‍‭⁪‏⁪⁭‬‏‫​⁮⁪​‍⁪⁮‍‫‬‮(
      [In] string obj0)
    {
      return new InvalidOperationException(obj0);
    }
  }
}
