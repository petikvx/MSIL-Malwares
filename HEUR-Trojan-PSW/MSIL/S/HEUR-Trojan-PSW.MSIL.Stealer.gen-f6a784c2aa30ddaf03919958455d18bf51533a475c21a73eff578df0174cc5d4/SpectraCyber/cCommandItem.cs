// Decompiled with JetBrains decompiler
// Type: SpectraCyber.cCommandItem
// Assembly: STAThreadAttrib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EE3DE1A-E148-4FBA-A193-65BEA1824C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f6a784c2aa30ddaf03919958455d18bf51533a475c21a73eff578df0174cc5d4.exe

namespace SpectraCyber
{
  internal class cCommandItem
  {
    private int miTimeToNextCommand = 0;
    protected string mstrCommand;
    protected string mstrReply;
    protected bool mbCommandRead;
    protected int miWaitTime = 70;
    protected bool mbReplySet;
    protected bool mbExpectReply;
    protected int miNumCharsToRead;
    protected eCommandType menCommandType;
    protected int miPriority;

    public cCommandItem()
    {
      this.mstrCommand = "";
      this.mstrReply = "";
      this.mbCommandRead = false;
      this.mbReplySet = false;
      this.miWaitTime = 0;
      this.mbExpectReply = false;
      this.miNumCharsToRead = 0;
      this.menCommandType = eCommandType.GeneralCommunication;
      this.miPriority = this.SetPriority();
    }

    public cCommandItem(
      string strCommand,
      int iTimeToNextCommand,
      bool bExpectReply,
      int iNumCharsToRead,
      eCommandType eCommandType)
    {
      this.mstrCommand = strCommand;
      this.mstrReply = "";
      this.mbCommandRead = false;
      this.mbReplySet = false;
      this.mbExpectReply = bExpectReply;
      if (iTimeToNextCommand > 0)
        this.miTimeToNextCommand = iTimeToNextCommand;
      if (iNumCharsToRead > 0)
        this.miNumCharsToRead = iNumCharsToRead;
      this.menCommandType = eCommandType;
      this.miPriority = this.SetPriority();
    }

    protected int SetPriority()
    {
      switch (this.menCommandType)
      {
        case eCommandType.Termination:
          return 0;
        case eCommandType.Reset:
          return 1;
        case eCommandType.ChangeSetting:
          return 2;
        case eCommandType.ScanStart:
        case eCommandType.ScanStop:
          return 3;
        case eCommandType.Rescan:
        case eCommandType.DataRequest:
        case eCommandType.FrequencySet:
        case eCommandType.DataDiscard:
        case eCommandType.GeneralCommunication:
          return 5;
        default:
          return 5;
      }
    }

    public bool CommandRead => this.mbCommandRead;

    public bool ReplySet => this.mbReplySet;

    public int CommandWaitTime => this.miWaitTime;

    public int TimeToNextCommand => this.miTimeToNextCommand;

    public bool ExpectReply => this.mbExpectReply;

    public int NumCharactersToRead => this.miNumCharsToRead;

    public string Command
    {
      get
      {
        this.mbCommandRead = true;
        return this.mstrCommand;
      }
      set => this.mstrCommand = value;
    }

    public string Reply
    {
      get => this.mstrReply;
      set
      {
        this.mbReplySet = true;
        this.mstrReply = value;
      }
    }

    public eCommandType CommandType => this.menCommandType;

    public int Priority => this.miPriority;
  }
}
