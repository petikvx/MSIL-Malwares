// Decompiled with JetBrains decompiler
// Type: 190180155270.Core.461646985882
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003190180155270.Models;
using \u003190180155270.Utils;
using \u003243925834289;
using \u003617511076655;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003190180155270.Core
{
  public static class \u003461646985882
  {
    private static \u003936851208001 \u003279811443080(string _param0)
    {
      FileInfo[] files = new DirectoryInfo(_param0).GetFiles("*.jpg");
      if (!((IEnumerable<FileInfo>) files).Any<FileInfo>())
        return (\u003936851208001) null;
      FileInfo fileInfo;
      if (\u003007662646855.\u003874612107296)
      {
        Random random = new Random();
        fileInfo = files[random.Next(0, files.Length - 1)];
      }
      else
      {
        fileInfo = ((IEnumerable<FileInfo>) files).OrderByDescending<FileInfo, DateTime>((Func<FileInfo, DateTime>) (_param1 => _param1.LastWriteTime)).FirstOrDefault<FileInfo>();
        if (fileInfo == null)
          return (\u003936851208001) null;
      }
      string fullName = fileInfo.FullName;
      string path = fullName + ".xml";
      string str = "";
      if (!File.Exists(path))
        path = Path.Combine(Path.GetDirectoryName(fullName), ((IEnumerable<string>) Path.GetFileName(fullName).Split('_')).First<string>() + ".xml");
      if (File.Exists(path))
      {
        try
        {
          str = ((\u003476934113877) path.\u003323562254440<\u003622152497181>()).get_image().\u003396803530743;
        }
        catch
        {
        }
      }
      \u003936851208001 obj = new \u003936851208001();
      ((\u003269277736649) obj).set_ImageFileName(fullName);
      obj.\u003042181573209 = str;
      obj.\u003053952587837 = "";
      return obj;
    }

    public static IList<\u003549413063984> \u003443246014709()
    {
      List<\u003549413063984> objList1 = new List<\u003549413063984>();
      string path = Path.Combine(\u003396480275353.\u003519444274727(), "data", "holidays.csv");
      if (!File.Exists(path))
        return (IList<\u003549413063984>) objList1;
      foreach (string readAllLine in File.ReadAllLines(path))
      {
        if (!string.IsNullOrWhiteSpace(readAllLine))
        {
          string[] strArray1 = readAllLine.Split(new char[1]
          {
            ','
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray1.Length >= 2)
          {
            string str1 = strArray1[0].Replace("\"", string.Empty).Trim();
            string str2 = strArray1[1].Replace("\"", string.Empty).Trim();
            string[] strArray2 = str1.Split('/');
            if (strArray2.Length == 3)
            {
              List<\u003549413063984> objList2 = objList1;
              \u003549413063984 obj = new \u003549413063984();
              obj.\u003915539646203 = str2;
              obj.\u003149109043313 = int.Parse(strArray2[0]);
              obj.\u003503634599202 = int.Parse(strArray2[1]);
              ((\u003797153087399) obj).set_Day(int.Parse(strArray2[2]));
              objList2.Add(obj);
            }
          }
        }
      }
      return (IList<\u003549413063984>) objList1;
    }
  }
}
