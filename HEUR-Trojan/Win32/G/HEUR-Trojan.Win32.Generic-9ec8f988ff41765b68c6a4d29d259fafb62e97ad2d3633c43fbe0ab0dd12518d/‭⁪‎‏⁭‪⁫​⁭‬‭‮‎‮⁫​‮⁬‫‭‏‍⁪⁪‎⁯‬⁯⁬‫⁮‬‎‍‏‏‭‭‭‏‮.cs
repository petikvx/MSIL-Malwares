// Decompiled with JetBrains decompiler
// Type: ‭⁪‎‏⁭‪⁫​⁭‬‭‮‎‮⁫​‮⁬‫‭‏‍⁪⁪‎⁯‬⁯⁬‫⁮‬‎‍‏‏‭‭‭‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Pkix;
using Org.BouncyCastle.X509.Store;
using System;
using System.Collections;

internal class \u202D⁪‎‏⁭‪⁫​⁭‬‭‮‎‮⁫​‮⁬‫‭‏‍⁪⁪‎⁯‬⁯⁬‫⁮‬‎‍‏‏‭‭‭‏‮
{
  internal static void \u200D⁮‬‮‫‌‭‪⁪​⁪‬‎‮⁪‍⁪⁬⁯⁪‮⁬⁭‏⁪​‭⁬‭‌‏⁭‍⁭⁭‭⁯‬‪⁪‮(
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param0,
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param1,
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param2,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param3)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ unresolvedCritExts = _param0.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
    if (unresolvedCritExts.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202D‬‏⁬⁬‫⁬⁪‪‭‭‍​‬‍‍⁯‌‪‬⁮⁯‫‍‎‏⁬‍⁮‎⁮⁯‌​‬‪⁯‪‭‭‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
    {
      try
      {
        \u200C⁯‏‏⁫‮​​⁪‭‮‍⁯‌⁯⁪‍⁮⁮‬‪‪‏⁯‎⁫‮‭‭‪‫‍⁯‬​‫​⁬⁫‎‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param0, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202D‬‏⁬⁬‫⁬⁪‪‭‭‍​‬‍‍⁯‌‪‬⁮⁯‫‍‎‏⁬‍⁮‎⁮⁯‌​‬‪⁯‪‭‭‮));
      }
      catch (Exception ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Target information extension could not be read.", ex);
      }
    }
    unresolvedCritExts.\u200C⁭⁮​⁮​⁭‬​‮‍‎‍‫⁮⁪⁪⁪‏‬​⁫⁯⁫‬⁮‬‫⁫⁮⁫⁯⁯⁭‬⁬⁮‫⁯⁯‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202D‬‏⁬⁬‫⁬⁪‪‭‭‍​‬‍‍⁯‌‪‬⁮⁯‫‍‎‏⁬‍⁮‎⁮⁯‌​‬‪⁯‪‭‭‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
    foreach (PkixAttrCertChecker pkixAttrCertChecker in (IEnumerable) _param3.\u206C‌​‭‌‍​‌‬‪⁫‮⁬⁭‮‭‍‫⁭⁫‬⁮‌‍‎⁫⁬‭‍‬⁬‎⁬‪⁮⁫‬⁫‎‌‮())
      pkixAttrCertChecker.Check(_param0, _param1, _param2, (ICollection) unresolvedCritExts);
    if (!unresolvedCritExts.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate contains unsupported critical extensions: " + unresolvedCritExts?.ToString());
  }

  internal static void \u206A‎‪⁯‬⁫⁭‭‍‭‍⁪‮⁯‫⁫⁭‪‭‮⁬⁪‌‫​​‭⁯⁯⁪⁪‌⁪⁫⁯‏⁫⁭‪‫‮(
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param2,
    DateTime _param3,
    IList _param4)
  {
    if (!_param1.\u202C‎‫⁯⁫‪⁫⁭‬⁬⁪⁪‬‍‬‬⁬⁫‎​‮‌‏‮‏⁪⁫⁯​​‏‏‭‫⁫‏⁪⁫⁫‮)
      return;
    if (_param0.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(\u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200B⁭‌‬‬⁬‫‪⁯‫‏⁫‪⁫‏‏‎‫‌‎⁭‌⁭‏⁭‍‮‌‍⁯⁭‮​‎‏‏⁪⁭‬‮‮) != null)
    {
      if (_param0.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(\u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁬‍‍‏‎‬⁮⁫​‏⁯⁯⁭‏‎⁫⁮‎‮‍‪⁭⁬⁫‍‪⁮‪​‫⁫⁯⁫⁪⁮⁪‍⁯‭‮) != null || _param0.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(\u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200E‭⁫‌​⁫​‮⁫‮⁮‍​‍⁯‎⁫⁮⁭⁯⁭‪‫‫‮‫‎⁫⁯⁫⁮‏‪​‭‭⁪‫‪⁬‮) != null)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("No rev avail extension is set, but also an AC revocation pointer.");
    }
    else
    {
      \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮ obj1;
      try
      {
        obj1 = \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param0, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C⁬‍‍‏‎‬⁮⁫​‏⁯⁯⁭‏‎⁫⁮‎‮‍‪⁭⁬⁫‍‪⁮‪​‫⁫⁯⁫⁪⁮⁪‍⁯‭‮));
      }
      catch (Exception ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("CRL distribution point extension could not be read.", ex);
      }
      try
      {
        \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‌‎‎‎‬‏​⁭‫​​‏⁭⁪‍‭‭⁭‫​‌⁪​‭⁮⁪​⁮‮‬‫⁬⁬⁮‫⁭⁬‍‭‮(obj1, _param1);
      }
      catch (Exception ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("No additional CRL locations could be decoded from CRL distribution point extension.", ex);
      }
      \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ obj2 = new \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮();
      \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ obj3 = new \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮();
      Exception exception = (Exception) null;
      bool flag = false;
      if (obj1 != null)
      {
        \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮[] objArray;
        try
        {
          objArray = obj1.\u206C‫‪‎‪‌​‏⁬⁪‮⁯‍‍‌‌⁯‍⁯‍​‫‪‫‮‬‌‍‎⁯‏‪⁪‭​‫⁫‏⁪‪‮();
        }
        catch (Exception ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Distribution points could not be read.", ex);
        }
        try
        {
          for (int index = 0; index < objArray.Length; ++index)
          {
            if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
            {
              if (!obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮)
              {
                \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ obj4 = (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param1.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮();
                \u202D⁪‎‏⁭‪⁫​⁭‬‭‮‎‮⁫​‮⁬‫‭‏‍⁪⁪‎⁯‬⁯⁬‫⁮‬‎‍‏‏‭‭‭‏‮.\u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(objArray[index], _param0, obj4, _param3, _param2, obj2, obj3, _param4);
                flag = true;
              }
              else
                break;
            }
            else
              break;
          }
        }
        catch (Exception ex)
        {
          exception = new Exception("No valid CRL for distribution point found.", ex);
        }
      }
      if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
      {
        if (!obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮)
        {
          try
          {
            \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj5;
            try
            {
              obj5 = \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) _param0.\u202A‎‍‏‮‫‍⁪‍‌‫⁭⁬⁭⁬‏⁮​‎⁭⁫​​‎‪‍⁭‏‭‬‭‌⁬⁫‎‌‬⁮‮‎‮.\u200E‍‮‍‍‪‫‪⁬‫‎‫‫‫‌⁪‎‎⁮‮‎‌‬‮‪⁪‬‬⁫⁬‭⁪⁯⁭⁬‬⁬⁫⁪‬‮()[0].GetEncoded());
            }
            catch (Exception ex)
            {
              throw new Exception("Issuer from certificate for CRL could not be reencoded.", ex);
            }
            \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ obj6 = new \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮(new \u200D⁮⁫⁯‬​⁭⁪‏‬‬‮⁬‍⁭‎⁪‍⁬⁯⁬‎⁪‪⁪‮⁯‮‬‍‮‪‎⁮‬‪‍⁪‫‍‮(0, (Asn1Encodable) new \u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮(new \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮(4, (Asn1Encodable) obj5))), (\u202C⁯⁮‮​‌‌‌‍⁪⁪‮‮⁬‭​⁮‪‫‎‎‏⁫⁭⁪⁪‬‪‏‭⁪‮⁯⁫‪‪⁯​‭‮) null, (\u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮) null);
            \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ obj7 = (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param1.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮();
            \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ obj8 = _param0;
            \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ obj9 = obj7;
            DateTime dateTime = _param3;
            \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj10 = _param2;
            \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ obj11 = obj2;
            \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ obj12 = obj3;
            IList list = _param4;
            \u202D⁪‎‏⁭‪⁫​⁭‬‭‮‎‮⁫​‮⁬‫‭‏‍⁪⁪‎⁯‬⁯⁬‫⁮‬‎‍‏‏‭‭‭‏‮.\u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(obj6, obj8, obj9, dateTime, obj10, obj11, obj12, list);
            flag = true;
          }
          catch (Exception ex)
          {
            exception = new Exception("No valid CRL for distribution point found.", ex);
          }
        }
      }
      if (!flag)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("No valid CRL found.", exception);
      if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ != 11)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate revocation after " + obj2.\u206A‎‪‭​⁯‍‏‍‪‫⁯⁫‮‎⁫⁭‪‏​‪‭‎‎⁯‌​​‬‫​‭‏⁬⁯‍⁯‬‭⁮‮.\u206C‬⁪‬‫​⁪‮‏⁭‏‬‏‭⁭‬‫‍⁮‌‪‌‍‮‮‪‪⁪​⁯‎‫⁮‭⁪‍‌‫⁫‮‮.ToString("ddd MMM dd HH:mm:ss K yyyy") + ", reason: " + \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206C‫⁬‬⁫⁭‮‌‬⁬​‍‏⁮‫‭⁫⁫⁮‍⁬⁭⁫‪⁯‍‍⁭⁬⁭‏⁪⁪‍⁫​‫⁪‍‫‮[obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮]);
      if (!obj3.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮ && obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
        obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ = 12;
      if (obj2.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 12)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate status could not be determined.");
    }
  }

  internal static void \u202E⁮‪‬⁪‌⁮‎​⁬‪‌‪⁯‏‍‭⁪⁮​⁮‏⁮‪⁮‏⁬‌⁯​‎‏⁪‎‬⁯‏⁬⁫⁮‮(
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    foreach (string str in (IEnumerable) _param1.\u206D‪​⁫⁫‍⁫⁭⁫⁯​‍⁯‬‎‭‫​‭‌⁯⁭‪‮⁪‭⁪⁫‎‬‌​‫‭‎⁭⁮‎​‬‮())
    {
      if (_param0.\u202E‪​⁬⁯‏‮⁪⁭‍⁭⁭‪‌‭‭‮⁮⁮⁮‬‪⁭‪​‭⁮‍⁬⁬⁬‌⁫‬‫⁬⁭‮‎‎‮(str) != null)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate contains prohibited attribute: " + str + ".");
    }
    foreach (string str in (IEnumerable) _param1.\u206A⁭‪⁬⁯‎‪‫‬‪‭‭⁯⁬⁫‎‪‫​⁫‬⁭‮⁭⁫‭‏‏‬‮⁪​⁯⁫⁮‌‪‍⁮‪‮())
    {
      if (_param0.\u202E‪​⁬⁯‏‮⁪⁭‍⁭⁭‪‌‭‭‮⁮⁮⁮‬‪⁭‪​‭⁮‍⁬⁬⁬‌⁫‬‫⁬⁭‮‎‎‮(str) == null)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate does not contain necessary attribute: " + str + ".");
    }
  }

  internal static void \u200D⁬⁯⁭⁬⁯‬⁭⁫‭​‭‮‮⁬⁯‫⁯⁭‪​⁯‬‌⁮⁯‍‬‏⁫⁪‍⁮⁮​⁭‫‌⁮⁬‮(
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    try
    {
      _param0.\u200B⁫‍⁭‭⁫‭‌⁪‫⁬‎⁫‍‎‫⁬‭‍‭⁯‏‭⁬‪⁪‬‫‏‮‮⁯⁯⁫⁭‭⁮‌⁮⁯‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‭⁬⁬‪‏‌‬‪​⁯‎‮​⁭‏⁯⁮‭‫⁯‮‭‫‫‎‮‮‭‌‮‮⁫‎⁯​⁯⁭‏⁬‮(_param1));
    }
    catch (\u206F‏‭​⁮‮⁮⁭‌⁬⁯⁬⁪‏‪⁯‬⁫⁫‬⁮‫⁫⁪⁭‍⁫​‍‭‫⁮⁬‬​‬⁫⁯‍⁯‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate is not valid.", (Exception) ex);
    }
    catch (\u206C‫⁯⁮‭⁫‍⁬​⁬⁭⁬‌‍‬⁭​‮‫‏‎​‫‫‬‮‫‭‫⁮⁭⁪⁬‫‏‎‍⁭‌‮‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate is not valid.", (Exception) ex);
    }
  }

  internal static void \u200B‏⁮‫⁭‬‌⁫‫⁮⁯⁮⁬⁫‍‬‬⁮⁮​‬⁯‪‏‏​‍⁮‬‮‍⁬‎‍⁪‪⁬‌‎⁮‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = _param1.\u202B‫⁬‮​‌⁪⁭‫​‪‭‬‮‬‎‌⁬‍‬‬‏⁫⁮‮⁫‮⁫‎⁭‪‍⁬‍‌‍‏‫⁭‭‮();
    bool flag = false;
    foreach (TrustAnchor trustAnchor in (IEnumerable) obj)
    {
      IDictionary dictionary = (IDictionary) \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u206E‏‍‬‏‮⁫⁯‫‏‪‌‭⁪‍⁬‏‫‭⁯‬⁮⁬‪‭‏‮‬⁮‬⁬‍⁮‭‭⁪‪‫⁬⁫‮;
      if (_param0.\u200E‌‪⁫‎⁮‭⁯⁬⁭‪⁬‎‪⁯⁪⁭‫‪‎‍⁯‏‏⁭‍‌​‬⁯‏‌⁯​​‌‎⁯⁮⁫‮.\u206E​‎​‭‍‌‌⁮⁪⁫​‎‭‪⁯‬‎⁫⁫‪‪⁫⁯‪⁫‪​​‪‏​​​⁬‌‭‎⁪‮(false, dictionary).Equals(trustAnchor.CAName) || ((object) _param0).Equals((object) trustAnchor.TrustedCert))
        flag = true;
    }
    if (!flag)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate issuer is not directly trusted.");
  }

  internal static void \u200E‏‫‎‍‏⁪‮‬‏‬‍⁭‮​⁫‫‪‌⁭‪‭‍‮⁭‮‍‭⁭‍⁫‏‮​‍⁪⁫‏⁬‭‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    if (_param0.\u200D​‪‬‍‭‌‮⁮‍‬‏‪‮‮⁮⁯⁫​⁭‎⁯​‍⁮‬‌‍⁮⁯‏⁮​⁯​‍‫‎‍⁯‮() != null && !_param0.\u200D​‪‬‍‭‌‮⁮‍‬‏‪‮‮⁮⁯⁫​⁭‎⁯​‍⁮‬‌‍⁮⁯‏⁮​⁯​‍‫‎‍⁯‮()[0] && !_param0.\u200D​‪‬‍‭‌‮⁮‍‬‏‪‮‮⁮⁯⁫​⁭‎⁯​‍⁮‬‌‍⁮⁯‏⁮​⁯​‍‫‎‍⁯‮()[1])
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate issuer public key cannot be used to validate digital signatures.");
    if (_param0.\u206A⁭‫⁯‫‪⁭⁪‬⁬⁭​⁮⁮⁫‪‮‮​⁮‎‮‎⁭‏⁯‫‏‏‌⁭‮​‭‏‌‬⁪⁬‮() != -1)
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Attribute certificate issuer is also a public key certificate issuer.");
  }

  internal static \u202D⁫‏⁭⁮​‪‍‏‬‏‮⁭‎‫⁯‭‮‍⁪‍​‌⁮⁬⁯‮​⁭⁮‭‍‭⁪⁪‫‌⁯‪⁭‮ \u200C⁮⁯⁯‫‫‌‭‪⁬‬‪‫‍⁭​⁬⁮‎‬⁯‪‍⁪‍‎‎‮‍‮‍‬⁬‫⁬⁮⁪‌‮‬‮(
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    \u206A‮⁪‫‫⁭⁮‌‮‫⁬‫‪‫⁫‌‍‮‍‍⁫‫‌‪⁭‏‏‫‭⁬‌‏‏⁫‬⁭⁯​⁭‏‮ obj = new \u206A‮⁪‫‫⁭⁮‌‮‫⁬‫‪‫⁫‌‍‮‍‍⁫‫‌‪⁭‏‏‫‭⁬‌‏‏⁫‬⁭⁯​⁭‏‮();
    try
    {
      return obj.\u200B⁮​‌‭‪‎⁮‌‌‌⁯‭‮⁮⁮​‬⁮‏​‍‫⁭⁯‭⁯⁮⁭‌​​⁪‎‭‭⁭‏‫‬‮(_param0, _param1);
    }
    catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Certification path for issuer certificate of attribute certificate could not be validated.", (Exception) ex);
    }
  }

  internal static \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ \u206D‪⁫‌‮‍​⁮‫⁬‮‬⁭⁬​⁯⁭‏⁫⁭⁬​‬⁪‏‌‬‬⁮‬​⁯‍‌​‎‬​⁪⁯‮(
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮ obj1 = (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    if (_param0.\u202E‭‎‏⁭‌‍⁮‫‌⁪‌‮⁬⁬⁬‬​‫‬‬‬‪‫‫‎‌‪‬​​‭⁯⁯⁯‍⁯⁫⁪‬‮.\u206A‏‮⁯⁬‫​‪‭‏‏‪⁪‫‪‍‬⁫‏‬⁯‌‬‎⁬​⁫⁮⁬‪⁫‏⁯​⁬‭⁯​‎⁭‮() != null)
    {
      X509CertStoreSelector certStoreSelector = new X509CertStoreSelector();
      certStoreSelector.SerialNumber = _param0.\u202E‭‎‏⁭‌‍⁮‫‌⁪‌‮⁬⁬⁬‬​‫‬‬‬‪‫‫‎‌‪‬​​‭⁯⁯⁯‍⁯⁫⁪‬‮.\u206D⁬​⁮‫⁯​⁪⁫⁫⁯‍⁮‮‬‎‪⁮‏⁮‎⁯‌‭‏⁭⁪⁯⁭‏⁭‏⁫​⁫⁪‪‬​⁭‮;
      foreach (\u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj3 in _param0.\u202E‭‎‏⁭‌‍⁮‫‌⁪‌‮⁬⁬⁬‬​‫‬‬‬‪‫‫‎‌‪‬​​‭⁯⁯⁯‍⁯⁫⁪‬‮.\u206A‏‮⁯⁬‫​‪‭‏‏‪⁪‫‪‍‬⁫‏‬⁯‌‬‎⁬​⁫⁮⁬‪⁫‏⁯​⁬‭⁯​‎⁭‮())
      {
        try
        {
          certStoreSelector.Issuer = obj3;
          obj2.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector, _param1.\u200C‬⁬⁬‮⁪⁫⁬‫‏⁫‮‎‍‮‎⁮⁯‎‮⁫‎⁪‏‪⁫‌‭⁫‏⁮​‏‎⁮‭​⁬⁮‍‮()));
        }
        catch (Exception ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Public key certificate for attribute certificate cannot be searched.", ex);
        }
      }
      if (obj2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Public key certificate specified in base certificate ID for attribute certificate cannot be found.");
    }
    if (_param0.\u202E‭‎‏⁭‌‍⁮‫‌⁪‌‮⁬⁬⁬‬​‫‬‬‬‪‫‫‎‌‪‬​​‭⁯⁯⁯‍⁯⁫⁪‬‮.\u202C⁬‫⁮‬⁬⁭‬‮‪‌‎‌‬⁭‬‬​‎⁯⁬⁫⁫⁯⁮⁬‮‎⁮⁭‪‪‭⁭‏‬‮‪‌‎‮() != null)
    {
      X509CertStoreSelector certStoreSelector = new X509CertStoreSelector();
      foreach (\u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj4 in _param0.\u202E‭‎‏⁭‌‍⁮‫‌⁪‌‮⁬⁬⁬‬​‫‬‬‬‪‫‫‎‌‪‬​​‭⁯⁯⁯‍⁯⁫⁪‬‮.\u202C⁬‫⁮‬⁬⁭‬‮‪‌‎‌‬⁭‬‬​‎⁯⁬⁫⁫⁯⁮⁬‮‎⁮⁭‪‪‭⁭‏‬‮‪‌‎‮())
      {
        try
        {
          certStoreSelector.Issuer = obj4;
          obj2.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector, _param1.\u200C‬⁬⁬‮⁪⁫⁬‫‏⁫‮‎‍‮‎⁮⁯‎‮⁫‎⁪‏‪⁫‌‭⁫‏⁮​‏‎⁮‭​⁬⁮‍‮()));
        }
        catch (Exception ex)
        {
          throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Public key certificate for attribute certificate cannot be searched.", ex);
        }
      }
      if (obj2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Public key certificate specified in entity name for attribute certificate cannot be found.");
    }
    \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ obj5 = \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(_param1);
    \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ obj6 = (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮) null;
    foreach (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj7 in (IEnumerable) obj2)
    {
      obj5.\u206F‍‭‌‫‌‎‍‫‪‬‬‎‍‏⁮⁮‌‏⁪⁬​⁫‭‍⁫​‪‬⁯‌‬⁮⁬⁭‮‬⁪⁪‫‮((\u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮) new X509CertStoreSelector()
      {
        Certificate = obj7
      });
      \u206F‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮ obj8 = new \u206F‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮();
      try
      {
        obj1 = obj8.\u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(\u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) obj5));
      }
      catch (\u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮ ex)
      {
        obj6 = new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Certification path for public key certificate of attribute certificate could not be build.", (Exception) ex);
      }
    }
    if (obj6 != null)
      throw obj6;
    return obj1.\u206D‎​‌⁭‎⁬‌⁬‫⁪‮‮‌‭⁪‍⁯‫⁬⁮‪‎‌‭‍⁭‎‍‏​‮‫‮‪‌⁫⁫⁯⁬‮;
  }

  private static void \u206D⁭‬‌‬⁭‫‌⁪⁬‪⁫⁫⁮‮‏​‭⁪‮⁫⁯⁬⁮‏‏‪‌‪‏‫‎‫‮⁯‮‍‌‮‎‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮ _param1,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param2,
    DateTime _param3,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param4,
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ _param5,
    \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ _param6,
    IList _param7)
  {
    if (_param1.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(\u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200B⁭‌‬‬⁬‫‪⁯‫‏⁫‪⁫‏‏‎‫‌‎⁭‌⁭‏⁭‍‮‌‍⁯⁭‮​‎‏‏⁪⁭‬‮‮) != null)
      return;
    DateTime utcNow = DateTime.UtcNow;
    if (_param3.CompareTo(utcNow) > 0)
      throw new Exception("Validation time is in future.");
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj1 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200F‭‫⁪‮⁮‌‏‌‬⁯⁭⁫​‎⁯‮⁪⁬​‭⁭⁫⁪‬‬‏⁯⁪‍⁫‏⁮⁯⁬‏‮​‌‪‮(_param0, (object) _param1, utcNow, _param2);
    bool flag = false;
    Exception exception = (Exception) null;
    IEnumerator enumerator = obj1.GetEnumerator();
    while (enumerator.MoveNext() && _param5.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 11)
    {
      if (!_param6.\u206B‪‎‪‎‍‭​‭⁭⁭‮‭‎‪‎‪‬‎‬⁫‎‭⁬‍‭⁪‮⁫⁬⁫⁮⁪​⁯‪‍‫‏⁭‮)
      {
        try
        {
          \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ current = (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮) enumerator.Current;
          \u206B‬⁮‬⁮⁪‍‭⁭‌⁮‎⁮‪⁬‪​⁬‏⁯‫⁮‪‮‎‍‍‮‍‫⁫‌⁪‮⁫‌‬‫‏‬‮ obj2 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206B⁯​⁮‏‬‭​‫‫‮⁫⁪‮‪‪‬⁭‮‮‪‬‬‏⁭⁮‬‭‪⁬⁭⁪⁮‮‎⁭‍‎‎‪‮(current, _param0);
          if (obj2.\u200E⁮​‌‌⁭‪⁫‮⁭‮⁫⁯‫‫‌‬⁯⁬‏⁬‎‌‫⁫‎⁭‏‬‏‮‭‬‍⁮‬‎‏‪‭‮(_param6))
          {
            \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj3 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‏‪‫‎‏⁬⁫⁬‭‎‭‏‌‮‫‎⁮‬⁭‏​‌‬⁯‫⁭‭‬‭​‫⁫‫⁮⁪‪​‬‫‮(current, (object) _param1, (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) null, (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) null, _param2, _param7);
            \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj4 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u202E⁪⁪⁫‏‭‌⁫⁯⁬⁫⁮‏‫‌‏⁭‮‫‏⁪‪‎‪‫‌​⁬‏‎‍‫‏‪‏‭‮⁮‬⁭‮(current, obj3);
            \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ obj5 = (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮) null;
            if (_param2.\u202A⁭‫‭⁮‫‭⁬⁯⁫‭‫⁭⁮⁫⁯⁫⁯‬⁮‏‎⁫‭‭‌⁪‬‫⁬‌‫⁮⁮‪‭‬‭⁪⁪‮)
              obj5 = \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‪⁮‬‫⁫⁯‮‬⁪‍‫‭⁭​‮⁬‮⁪‪⁬⁭‌‫‮‬‭‌​‫⁯⁯⁭⁬‎‮‫⁮‫‬‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C⁪‬⁭‎‏‬⁮‎‏⁮‭‬⁭⁯⁭‎‌‪⁬‪‍⁫⁮‮‫‫‬⁮‌‎‍‫‪⁬⁮‭‍‮‍‮(utcNow, _param2, current), obj4);
            if (_param2.\u206B⁮⁮​⁫‫‎⁫‭‮‫⁬⁮⁮‪⁯⁯‌⁯⁪‍‭⁯⁫‭‪⁮⁪⁯‫‍⁮‎‬‭‍‫​⁯‏‮ != 1 && _param1.\u202D⁪⁮‮⁮‭​‎⁭⁮⁪⁫⁬‫⁪​‫‫‪‪‏​⁬‪‌‪‮⁪‪⁬​⁬‭‬‍‫⁯⁪‬‍‮.CompareTo(current.\u202C‍‭‮‎‫‮‪‍‏‍‭‮⁯⁪‎⁬‭‭‌‪‪‍⁭‮⁫‫‬⁭‏‌‌‏‪‪‮‎⁯‎⁭‮) < 0)
              throw new Exception("No valid CRL for current time found.");
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206D‏‬‏⁫⁬‎‭⁭‌‮⁫‍​⁫‏‎‌⁯‪‪‏‏‎‌⁭⁯⁮‮‮‪‬​‪⁯⁫‏​‏⁬‮(_param0, (object) _param1, current);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206F​‎‪‪‫‏​‬‌⁪​⁫⁬‎‌‬⁪‌‎⁮⁮⁮‫‫⁪‭⁫‭‍‮​⁮‪‪⁪‫⁭‫‏‮(_param0, (object) _param1, current);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200B‍‮‏⁫⁯⁭‭‫‬⁯​⁭‫‎⁪​‌‍⁪‭⁮‍‭‏‏⁭‎⁭‬⁫⁯‏⁫‌‏⁪​⁬‫‮(obj5, current, _param2);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u206B⁬‏‬‌‍⁭⁮⁯‬‎‌‪⁮‭‬⁯⁭‬⁫‏‎‮⁯‎‎⁮​‭⁯‏⁬‎‬‏‏‫⁫‎⁭‮(_param3, obj5, (object) _param1, _param5, _param2);
            \u202B‎⁮‏⁫⁭⁮‪‭​‫⁬⁬⁭‮‮‫‏​‭⁫⁭‮⁫‬⁫‎⁯‪⁫‮‮⁮​‎‏‏‭⁫‬‮.\u200C‬⁯⁫⁮‬‮‬‮​‮⁯⁫⁭⁪‪⁭⁫‎‏‪‌‏⁮‭⁫⁯⁫‏⁪‪‮⁪‍⁮‬‫‫‮⁪‮(_param3, current, (object) _param1, _param5);
            if (_param5.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ == 8)
              _param5.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ = 11;
            _param6.\u200D⁯⁯​⁮‌​⁬‫⁭⁪⁪‫⁫⁮⁭‎‪⁯​⁮⁮‪‎‏⁬⁬⁪‪⁬‍⁯‬‪⁯‭‮⁫⁯‌‮(obj2);
            flag = true;
          }
        }
        catch (Exception ex)
        {
          exception = ex;
        }
      }
      else
        break;
    }
    if (!flag)
      throw exception;
  }
}
