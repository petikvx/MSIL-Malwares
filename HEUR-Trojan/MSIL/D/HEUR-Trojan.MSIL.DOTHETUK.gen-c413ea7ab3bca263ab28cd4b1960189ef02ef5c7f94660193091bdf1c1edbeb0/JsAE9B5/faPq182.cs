// Decompiled with JetBrains decompiler
// Type: JsAE9B5.faPq182
// Assembly: VMhE6rW, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B5BD6AAE-8F60-4702-9F4C-7D1F52881D1D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.DOTHETUK.gen-c413ea7ab3bca263ab28cd4b1960189ef02ef5c7f94660193091bdf1c1edbeb0.exe

using cm5eP3j;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Linq;

namespace JsAE9B5
{
  public abstract class faPq182 : ewOXtia
  {
    public const string E3sQ9a6 = "MS-Contract-Version";
    public const string \u00343PHOeq = "MS-CorrelationId";
    public const string QcNRxsj = "MS-RequestId";

    protected abstract string B7viyzj { get; }

    protected override IList<KeyValuePair<string, string>> MergeRequestHeaders(
      IReadOnlyList<KeyValuePair<string, Func<string>>> defaultHeaders,
      IReadOnlyList<KeyValuePair<string, string>> requestSpecificHeaders)
    {
      List<KeyValuePair<string, Func<string>>> keyValuePairList = new List<KeyValuePair<string, Func<string>>>((IEnumerable<KeyValuePair<string, Func<string>>>) defaultHeaders);
      if (requestSpecificHeaders.All<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (F9KJtP1 => F9KJtP1.Key != "MS-CorrelationId")) && keyValuePairList.All<KeyValuePair<string, Func<string>>>((Func<KeyValuePair<string, Func<string>>, bool>) (g3N5nHR => g3N5nHR.Key != "MS-CorrelationId")))
        keyValuePairList.Add(new KeyValuePair<string, Func<string>>("MS-CorrelationId", (Func<string>) (() =>
        {
          if (Trace.CorrelationManager.ActivityId == Guid.Empty)
            Trace.CorrelationManager.ActivityId = Guid.NewGuid();
          return Trace.CorrelationManager.ActivityId.ToString();
        })));
      if (requestSpecificHeaders.All<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1 => _param1.Key != "MS-RequestId")) && keyValuePairList.All<KeyValuePair<string, Func<string>>>((Func<KeyValuePair<string, Func<string>>, bool>) (h7Jsu5B => h7Jsu5B.Key != "MS-RequestId")))
        keyValuePairList.Add(new KeyValuePair<string, Func<string>>("MS-RequestId", (Func<string>) (() => Guid.NewGuid().ToString())));
      if (requestSpecificHeaders.All<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (lQc9DMT => lQc9DMT.Key != "MS-Contract-Version")) && keyValuePairList.All<KeyValuePair<string, Func<string>>>((Func<KeyValuePair<string, Func<string>>, bool>) (tuL4mei => tuL4mei.Key != "MS-Contract-Version")))
        keyValuePairList.Add(new KeyValuePair<string, Func<string>>("MS-Contract-Version", (Func<string>) (() => this.B7viyzj)));
      return base.MergeRequestHeaders((IReadOnlyList<KeyValuePair<string, Func<string>>>) new ReadOnlyCollection<KeyValuePair<string, Func<string>>>((IList<KeyValuePair<string, Func<string>>>) keyValuePairList), requestSpecificHeaders);
    }
  }
}
