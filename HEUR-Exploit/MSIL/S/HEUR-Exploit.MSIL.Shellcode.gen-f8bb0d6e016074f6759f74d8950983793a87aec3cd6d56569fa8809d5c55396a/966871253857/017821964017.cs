// Decompiled with JetBrains decompiler
// Type: 966871253857.017821964017
// Assembly: 942981470147, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 92EB186D-EC33-4501-B5FF-A65C9233BC32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-f8bb0d6e016074f6759f74d8950983793a87aec3cd6d56569fa8809d5c55396a.exe

using \u003312159205690;
using \u003441916305726;
using \u003484267871453;
using \u003785947670411;
using Microsoft.VisualStudio.TestPlatform.ObjectModel;
using Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003966871253857
{
  internal class \u003017821964017 : ITestConfiguration
  {
    private readonly IRunContext \u003458969741486;

    public \u003017821964017(IRunContext runContext)
    {
      this.\u003458969741486 = runContext ?? throw new ArgumentNullException(nameof (runContext));
      this.\u003409779200828 = this.\u003765833227791();
    }

    public string \u003637580949485 => "pytest";

    public string \u003409779200828 { get; }

    public IList<string> \u003856943765350(
      IEnumerable<TestCase> _param1_1,
      \u003064588995134 _param2)
    {
      if (_param1_1 == null)
        throw new ArgumentNullException("tests");
      if (_param2 == null)
        throw new ArgumentNullException("settings");
      List<string> stringList = new List<string>();
      IEnumerable<string> source = _param1_1.Select<TestCase, string>((Func<TestCase, string>) (_param1_2 => ((TestObject) _param1_2).GetPropertyValue<string>(\u003492676733657.\u003490125617522, (string) null)));
      if (source.Count<string>() > 5)
      {
        string str = \u003036900961292.\u003152675385819(source);
        stringList.Add(str);
      }
      else
      {
        stringList.Add("dummyfilename");
        foreach (string str in source)
          stringList.Add(str);
      }
      stringList.Add(string.Format("--junitxml={0}", (object) this.\u003409779200828));
      stringList.Add(string.Format("--rootdir={0}", (object) _param2.\u003634011796970));
      stringList.Add("-o");
      stringList.Add("junit_logging=all");
      stringList.Add("-o");
      stringList.Add("junit_family=xunit1");
      return (IList<string>) stringList;
    }

    private string \u003765833227791() => Path.Combine(this.\u003458969741486.TestRunDirectory, "junitresults_" + Guid.NewGuid().ToString() + ".xml");
  }
}
