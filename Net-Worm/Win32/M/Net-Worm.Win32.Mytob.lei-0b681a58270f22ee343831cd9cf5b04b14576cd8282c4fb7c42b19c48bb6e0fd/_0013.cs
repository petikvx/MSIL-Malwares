// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Havzir, Version=1.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 11E64FC8-3849-4CF8-8F2D-756304737EC3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Net-Worm.Win32.Mytob.lei-0b681a58270f22ee343831cd9cf5b04b14576cd8282c4fb7c42b19c48bb6e0fd.exe

using \u008F;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace \u008F
{
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [CompilerGenerated]
  internal sealed class \u0013 : ApplicationSettingsBase
  {
    private static \u0013 \u0001 = (\u0013) SettingsBase.Synchronized((SettingsBase) new \u0013());
    private static bool \u0002;
    private static object \u0003 = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    public \u0013()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    private static void \u0086(object sender, EventArgs e)
    {
      if (!\u0005.Application.SaveMySettingsOnExit)
        return;
      \u0014.Settings.Save();
    }

    public static \u0013 Default
    {
      get
      {
        if (!\u0013.\u0002)
        {
          object Expression = \u0013.\u0003;
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          Monitor.Enter(Expression);
          try
          {
            if (!\u0013.\u0002)
            {
              \u0005.Application.Shutdown += (ShutdownEventHandler) ((sender, e) =>
              {
                if (!\u0005.Application.SaveMySettingsOnExit)
                  return;
                \u0014.Settings.Save();
              });
              \u0013.\u0002 = true;
            }
          }
          finally
          {
            Monitor.Exit(Expression);
          }
        }
        return \u0013.\u0001;
      }
    }
  }
}
