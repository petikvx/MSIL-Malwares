// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: SafeArrayTypeMismatchExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: FE98C20D-A437-4C5F-9849-D190358A66A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c0f665918f4ea75327960ddf58cf37e415a6bf6569a4c22aa6291fbac9d171ce.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202B⁬‪⁬‎‭‎‎‫⁪‌​‫‫‪⁭⁭⁬‏‍‎‪‪​⁭​⁬‏‭‫‫⁪‍‮‪‍⁫⁪‍‌‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 967113948;
      int count;
      bool flag;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1329958719)) % 13U)
        {
          case 0:
            flag = count > 1;
            num1 = 892321724;
            continue;
          case 1:
            count = list.Count;
            num1 = (int) num2 * -456579509 ^ 1882299320;
            continue;
          case 2:
            int num3 = flag ? -2130810048 : (num3 = -1428593475);
            num1 = num3 ^ (int) num2 * -2114825001;
            continue;
          case 3:
            num1 = (int) num2 * -1122983250 ^ 89973612;
            continue;
          case 4:
            num1 = (int) num2 * -285224124 ^ 83789401;
            continue;
          case 5:
            goto label_3;
          case 6:
            list[count] = obj;
            num1 = (int) num2 * 819048835 ^ -1285164300;
            continue;
          case 7:
            num1 = 2134429048;
            continue;
          case 8:
            num1 = (int) num2 * 1443999343 ^ 601188467;
            continue;
          case 9:
            --count;
            num1 = (int) num2 * -504800374 ^ 1190128777;
            continue;
          case 10:
            num1 = (int) num2 * -1296732191 ^ 212326095;
            continue;
          case 11:
            int index = ScrambleExtention.\u200D⁭‬⁪‪‏‪‫‍⁭‌⁭⁯‍‪‬⁬⁬⁬⁯‍‏⁬‏‫‫⁪‪⁬⁪‏‎⁯‭‫⁮⁭⁮⁫⁫‮(ScrambleExtention.Random, count + 1);
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * -1657448466 ^ 1952522900;
            continue;
          case 12:
            goto label_1;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u200D⁭‬⁪‪‏‪‫‍⁭‌⁭⁯‍‪‬⁬⁬⁬⁯‍‏⁬‏‫‫⁪‪⁬⁪‏‎⁯‭‫⁮⁭⁮⁫⁫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202B⁬‪⁬‎‭‎‎‫⁪‌​‫‫‪⁭⁭⁬‏‍‎‪‪​⁭​⁬‏‭‫‫⁪‍‮‪‍⁫⁪‍‌‮() => new Random();
  }
}
