// Decompiled with JetBrains decompiler
// Type: SimpleVideoCutter.AboutBox
// Assembly: SimpleVideoCutter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EC3F1699-ABA1-43FB-A799-9F64138760E7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f61a916b55390990f502b60b4e78cb70d9da9416954b3cb35908cf3498ac3ead.exe

using SimpleVideoCutter.Properties;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace SimpleVideoCutter
{
  internal class AboutBox : Form
  {
    private IContainer components = (IContainer) null;
    private TableLayoutPanel tableLayoutPanel;
    private PictureBox logoPictureBox;
    private Label labelProductName;
    private Label labelCopyright;
    private Button okButton;
    private Label labelVersion;
    private TextBox textBox1;
    private LinkLabel linkLabelGithub;
    private LinkLabel linkLabelGithubReleases;
    private LinkLabel linkLabelEmail;
    private Panel panel1;
    private Button buttonLicense;

    public AboutBox()
    {
      this.InitializeComponent();
      this.Text = string.Format("{0} {1}", (object) GlobalStrings.AboutBox_About, (object) this.AssemblyTitle);
      this.labelProductName.Text = this.AssemblyProduct;
      this.labelVersion.Text = string.Format("{0} {1}", (object) GlobalStrings.AboutBox_Version, (object) this.AssemblyVersion);
      this.labelCopyright.Text = this.AssemblyCopyright;
    }

    public string AssemblyTitle
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyTitleAttribute), false);
        if (customAttributes.Length != 0)
        {
          AssemblyTitleAttribute assemblyTitleAttribute = (AssemblyTitleAttribute) customAttributes[0];
          if (assemblyTitleAttribute.Title != "")
            return assemblyTitleAttribute.Title;
        }
        return Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase);
      }
    }

    public string AssemblyVersion => Assembly.GetExecutingAssembly().GetName().Version.ToString();

    public string AssemblyDescription
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyDescriptionAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyDescriptionAttribute) customAttributes[0]).Description;
      }
    }

    public string AssemblyProduct
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyProductAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyProductAttribute) customAttributes[0]).Product;
      }
    }

    public string AssemblyCopyright
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCopyrightAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyCopyrightAttribute) customAttributes[0]).Copyright;
      }
    }

    public string AssemblyCompany
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCompanyAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyCompanyAttribute) customAttributes[0]).Company;
      }
    }

    private void linkLabelGithub_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start(this.linkLabelGithub.Text);

    private void linkLabelGithubreleases_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start(this.linkLabelGithub.Text);

    private void linkLabelEmail_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start("mailto:simple.video.cutter@gmail.com");

    private void buttonLicense_Click(object sender, EventArgs e)
    {
      int num = (int) new LicenseBox().ShowDialog();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (AboutBox));
      this.tableLayoutPanel = new TableLayoutPanel();
      this.logoPictureBox = new PictureBox();
      this.labelProductName = new Label();
      this.labelVersion = new Label();
      this.labelCopyright = new Label();
      this.textBox1 = new TextBox();
      this.linkLabelGithub = new LinkLabel();
      this.linkLabelGithubReleases = new LinkLabel();
      this.linkLabelEmail = new LinkLabel();
      this.panel1 = new Panel();
      this.buttonLicense = new Button();
      this.okButton = new Button();
      this.tableLayoutPanel.SuspendLayout();
      ((ISupportInitialize) this.logoPictureBox).BeginInit();
      this.panel1.SuspendLayout();
      this.SuspendLayout();
      componentResourceManager.ApplyResources((object) this.tableLayoutPanel, "tableLayoutPanel");
      this.tableLayoutPanel.Controls.Add((Control) this.logoPictureBox, 0, 0);
      this.tableLayoutPanel.Controls.Add((Control) this.labelProductName, 1, 0);
      this.tableLayoutPanel.Controls.Add((Control) this.labelVersion, 1, 1);
      this.tableLayoutPanel.Controls.Add((Control) this.labelCopyright, 1, 2);
      this.tableLayoutPanel.Controls.Add((Control) this.textBox1, 1, 6);
      this.tableLayoutPanel.Controls.Add((Control) this.linkLabelGithub, 1, 4);
      this.tableLayoutPanel.Controls.Add((Control) this.linkLabelGithubReleases, 1, 3);
      this.tableLayoutPanel.Controls.Add((Control) this.linkLabelEmail, 1, 5);
      this.tableLayoutPanel.Controls.Add((Control) this.panel1, 1, 7);
      this.tableLayoutPanel.Name = "tableLayoutPanel";
      componentResourceManager.ApplyResources((object) this.logoPictureBox, "logoPictureBox");
      this.logoPictureBox.Name = "logoPictureBox";
      this.tableLayoutPanel.SetRowSpan((Control) this.logoPictureBox, 8);
      this.logoPictureBox.TabStop = false;
      componentResourceManager.ApplyResources((object) this.labelProductName, "labelProductName");
      this.labelProductName.Name = "labelProductName";
      componentResourceManager.ApplyResources((object) this.labelVersion, "labelVersion");
      this.labelVersion.Name = "labelVersion";
      componentResourceManager.ApplyResources((object) this.labelCopyright, "labelCopyright");
      this.labelCopyright.Name = "labelCopyright";
      this.textBox1.BackColor = SystemColors.Control;
      this.textBox1.BorderStyle = BorderStyle.None;
      componentResourceManager.ApplyResources((object) this.textBox1, "textBox1");
      this.textBox1.Name = "textBox1";
      this.textBox1.TabStop = false;
      componentResourceManager.ApplyResources((object) this.linkLabelGithub, "linkLabelGithub");
      this.linkLabelGithub.Name = "linkLabelGithub";
      this.linkLabelGithub.TabStop = true;
      this.linkLabelGithub.LinkClicked += new LinkLabelLinkClickedEventHandler(this.linkLabelGithub_LinkClicked);
      componentResourceManager.ApplyResources((object) this.linkLabelGithubReleases, "linkLabelGithubReleases");
      this.linkLabelGithubReleases.Name = "linkLabelGithubReleases";
      this.linkLabelGithubReleases.TabStop = true;
      this.linkLabelGithubReleases.LinkClicked += new LinkLabelLinkClickedEventHandler(this.linkLabelGithubreleases_LinkClicked);
      componentResourceManager.ApplyResources((object) this.linkLabelEmail, "linkLabelEmail");
      this.linkLabelEmail.Name = "linkLabelEmail";
      this.linkLabelEmail.TabStop = true;
      this.linkLabelEmail.LinkClicked += new LinkLabelLinkClickedEventHandler(this.linkLabelEmail_LinkClicked);
      this.panel1.Controls.Add((Control) this.buttonLicense);
      this.panel1.Controls.Add((Control) this.okButton);
      componentResourceManager.ApplyResources((object) this.panel1, "panel1");
      this.panel1.Name = "panel1";
      componentResourceManager.ApplyResources((object) this.buttonLicense, "buttonLicense");
      this.buttonLicense.Name = "buttonLicense";
      this.buttonLicense.Click += new EventHandler(this.buttonLicense_Click);
      componentResourceManager.ApplyResources((object) this.okButton, "okButton");
      this.okButton.DialogResult = DialogResult.Cancel;
      this.okButton.Name = "okButton";
      this.AcceptButton = (IButtonControl) this.okButton;
      componentResourceManager.ApplyResources((object) this, "$this");
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.okButton;
      this.Controls.Add((Control) this.tableLayoutPanel);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (AboutBox);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.tableLayoutPanel.ResumeLayout(false);
      this.tableLayoutPanel.PerformLayout();
      ((ISupportInitialize) this.logoPictureBox).EndInit();
      this.panel1.ResumeLayout(false);
      this.ResumeLayout(false);
    }
  }
}
