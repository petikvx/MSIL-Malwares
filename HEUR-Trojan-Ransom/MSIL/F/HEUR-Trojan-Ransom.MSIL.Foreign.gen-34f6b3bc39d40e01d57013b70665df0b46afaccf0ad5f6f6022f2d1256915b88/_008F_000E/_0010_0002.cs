// Decompiled with JetBrains decompiler
// Type: .
// Assembly: LLB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 273A448B-459A-4DB6-844A-AD8F16DBC137
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00030-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-34f6b3bc39d40e01d57013b70665df0b46afaccf0ad5f6f6022f2d1256915b88.exe.exe

using \u008F\u000E;
using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u008F\u000E
{
  [GeneratedCode("MyTemplate", "10.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal class \u0010\u0002 : WindowsFormsApplicationBase
  {
    private static List<WeakReference> \u0001 = new List<WeakReference>();

    [DebuggerNonUserCode]
    static \u0010\u0002()
    {
    }

    [DebuggerNonUserCode]
    private static void \u0086\u000E([In] object obj0)
    {
      List<WeakReference> weakReferenceList = \u0010\u0002.\u0001;
      bool flag = false;
      try
      {
        \u0001.\u0001((object) weakReferenceList, ref flag);
        if (\u0010\u0002.\u0001.Count == \u0010\u0002.\u0001.Capacity)
        {
          int index1 = 0;
          int num = checked (\u0010\u0002.\u0001.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            WeakReference weakReference = \u0010\u0002.\u0001[index2];
            if (\u0002.\u007E\u0002((object) weakReference))
            {
              if (index2 != index1)
                \u0010\u0002.\u0001[index1] = \u0010\u0002.\u0001[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          \u0010\u0002.\u0001.RemoveRange(index1, checked (\u0010\u0002.\u0001.Count - index1));
          \u0010\u0002.\u0001.Capacity = \u0010\u0002.\u0001.Count;
        }
        \u0010\u0002.\u0001.Add(new WeakReference(\u0003.\u0004(obj0)));
      }
      finally
      {
        if (flag)
          \u0004.\u0005((object) weakReferenceList);
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [STAThread]
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    internal static void \u0002([In] string[] obj0)
    {
      try
      {
        \u0006.\u0008(\u0005.\u0007());
      }
      finally
      {
      }
      \u0007.\u007E\u000E((object) \u0016\u0002.\u0014\u0002(), obj0);
    }

    public \u0010\u0002()
      : base(AuthenticationMode.Windows)
    {
      \u0010\u0002.\u0086\u000E((object) this);
      this.IsSingleInstance = false;
      this.EnableVisualStyles = true;
      this.SaveMySettingsOnExit = true;
      this.ShutdownStyle = ShutdownMode.AfterMainFormCloses;
    }

    void WindowsFormsApplicationBase.\u000F\u0002() => \u0008.\u007E\u000F((object) this, (Form) \u0016\u0002.\u0015\u0002().\u0090\u000E());
  }
}
