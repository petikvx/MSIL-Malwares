// Decompiled with JetBrains decompiler
// Type: ShockService.My.MySettings
// Assembly: ShockService, Version=54.69.79.68, Culture=neutral, PublicKeyToken=null
// MVID: F533233C-2DF8-412E-A65B-7D07979BCD7B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.MSIL.Zapchast.f-30dd86a89596e3880b69810a736b8a9eddff24473508055e256e9464bcb95f56.exe

using \u0002;
using \u0005;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace ShockService.My
{
  [CompilerGenerated]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \u0001 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0002;
    private static object \u0003 = RuntimeHelpers.GetObjectValue(new object());

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    private static void \u0001(object sender, EventArgs e)
    {
      if (!\u0001.\u0001().SaveMySettingsOnExit)
        return;
      // ISSUE: reference to a compiler-generated method
      \u0001.\u0001().Save();
    }

    public static MySettings Default
    {
      get
      {
        if (!MySettings.\u0002)
        {
          object Expression = MySettings.\u0003;
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          Monitor.Enter(Expression);
          try
          {
            if (!MySettings.\u0002)
            {
              \u0001.\u0001().Shutdown += (ShutdownEventHandler) ((sender, e) =>
              {
                if (!\u0001.\u0001().SaveMySettingsOnExit)
                  return;
                \u0001.\u0001().Save();
              });
              MySettings.\u0002 = true;
            }
          }
          finally
          {
            Monitor.Exit(Expression);
          }
        }
        MySettings mySettings = MySettings.\u0001;
        return mySettings;
      }
    }
  }
}
