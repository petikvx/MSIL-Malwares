// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Card
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using Microsoft.VisualBasic.CompilerServices;
using System;

namespace Vändtia_Live_Server
{
  public class Card
  {
    public string Type;
    public int Number;
    public string Merged;

    public Card(string Type, int Number)
    {
label_7:
      int num1 = 31;
      int num2 = 27;
      while (true)
      {
        switch (num2 ^ 44)
        {
          case 52:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Card.\u002Ector);
            num2 = 24;
            continue;
          case 53:
            switch (num1)
            {
              case 47:
                this.Number = Number;
                num1 = 30;
                goto label_1;
              case 48:
                this.Merged = Type.Substring(0, 1) + Conversions.ToString(Number);
                num1 = 29;
                goto label_1;
              case 49:
                this.Type = Type;
                num1 = 1;
                goto label_1;
              case 50:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Card.\u002Ector);
                num1 = 28;
                goto label_1;
              case 51:
                goto label_12;
              default:
                num2 = 26;
                continue;
            }
          case 54:
            goto label_7;
          case 55:
label_1:
            num1 ^= 46;
            break;
        }
        num2 = 25;
      }
label_12:;
    }

    public Card(string Merged)
    {
label_6:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(29);
      int num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(14);
      object Left;
      while (true)
      {
        switch ((num2 ^ 49) + 46)
        {
          case 0:
            bool flag;
            switch (num1 + 53)
            {
              case 0:
                flag = Operators.ConditionalCompareObjectEqual(Left, (object) "H", false);
                num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(53);
                goto label_1;
              case 1:
                if (flag)
                {
                  num1 = -3;
                  goto label_1;
                }
                else
                  goto label_15;
              case 2:
                Left = (object) Merged.Substring(0, 1);
                num1 = -26;
                goto label_1;
              case 3:
                this.Merged = Merged;
                num1 = -32;
                goto label_1;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Card.\u002Ector);
                num1 = -30;
                goto label_1;
              case 5:
                goto label_14;
              default:
                num2 = -30;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Card.\u002Ector);
            num2 = -27;
            continue;
          case 3:
label_1:
            num1 ^= 45;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(29);
      }
label_14:
      int num3 = 0;
      goto label_16;
label_15:
      num3 = 1;
label_16:
      this.Type = num3 != 0 ? ((!Operators.ConditionalCompareObjectEqual(Left, (object) "S", false) ? 1 : 0) != 0 ? ((!Operators.ConditionalCompareObjectEqual(Left, (object) "R", false) ? 1 : 0) != 0 ? "Klöver" : "Ruter") : "Spader") : "Hjärter";
      this.Number = (int) Convert.ToInt16(Merged.Substring(1));
    }
  }
}
