// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 345474473;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1512716059)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 251414683 ^ -497459940;
              continue;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1452369894 ^ 140821384;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              jsonNode = this.m_List[aIndex];
              num1 = 714500906;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1048835638 ^ 1934413497;
              continue;
            case 6:
              int num4 = !flag ? -1677439620 : (num4 = -1564369550);
              num1 = num4 ^ (int) num2 * 778410866;
              continue;
            case 7:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 950932285;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1462695491;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1051742810)) % 8U)
          {
            case 0:
              goto label_3;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1150106168 ^ -682913705;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * 1653103107 ^ -442606630;
              continue;
            case 3:
              goto label_1;
            case 4:
              int num4 = !flag ? 85877161 : (num4 = 1161526172);
              num1 = num4 ^ (int) num2 * -591640221;
              continue;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              num1 = (int) num2 * 944409883 ^ -433272768;
              continue;
            case 7:
              this.m_List[aIndex] = value;
              num1 = 2050775130;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 635609934;
        }
label_3:
        return;
label_13:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
label_1:
        int num1 = -1104351393;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1631403264)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 1839743889 ^ 253261299;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_List.Count;
label_1:
        int num1 = -1045676724;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -268428363)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1167942845 ^ -261632880;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      this.m_List.Add(aItem);
label_1:
      int num1 = 1113667063;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 289499449)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 157955911 ^ -1772820484;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_7;
label_1:
      int num1 = -1564461720;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1011359721)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -841711324 ^ 2108660885;
            continue;
          case 1:
            goto label_6;
          case 2:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 326768421 ^ 1730842612;
            continue;
          case 3:
            goto label_1;
          case 5:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 2022847118 ^ -1025763029;
            continue;
          case 6:
            num1 = (int) num2 * 1163857103 ^ -1197936485;
            continue;
          case 7:
            num1 = (int) num2 * 1452781485 ^ -1373337555;
            continue;
          case 8:
            jsonNode1 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -785742755;
            continue;
          default:
            goto label_12;
        }
      }
label_6:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_8;
label_12:
      return jsonNode2;
label_7:
      num3 = 1;
label_8:
      num1 = num3 == 0 ? -282091925 : (num1 = -488019344);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1022056119;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -133371924)) % 5U)
        {
          case 0:
            jsonNode = aNode;
            num1 = (int) num2 * 1391704286 ^ 966334126;
            continue;
          case 1:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * 1391032062 ^ -1050028756;
            continue;
          case 2:
            goto label_1;
          case 4:
            num1 = (int) num2 * -1040137539 ^ -26400973;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 810539089;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 325025168)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD13.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -1921548907 ^ -1659328942;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -1573094400;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1803791300)) % 18U)
          {
            case 1:
              goto label_7;
            case 2:
              int num4 = num1 == 0 ? 1129889963 : (num4 = 484574421);
              num2 = num4 ^ (int) num3 * -241130981;
              continue;
            case 3:
              goto label_15;
            case 4:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -2026160242 ^ 239220285;
              continue;
            case 5:
            case 7:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -67395134;
              continue;
            case 6:
              goto label_1;
            case 8:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1746975243 ^ 1335454331;
              continue;
            case 9:
              num2 = (int) num3 * 49113400 ^ -1457300760;
              continue;
            case 10:
              int num5;
              num2 = num5 = num1 == 1 ? -2034010700 : (num5 = -176888502);
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -1353431575 ^ 1210911682;
              continue;
            case 12:
            case 14:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = -2022112081;
              continue;
            case 13:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = -1831354155;
              continue;
            case 15:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * -361498052 ^ 149418664;
              continue;
            case 16:
              num2 = (int) num3 * 1616515375 ^ -1061422361;
              continue;
            case 17:
              int num6;
              num2 = num6 = enumerator.MoveNext() ? -284766763 : (num6 = -1348348282);
              continue;
            default:
              goto label_17;
          }
        }
label_7:
        return false;
label_15:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = 1;
        return true;
label_17:
        return false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -625264299;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -985792464)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "[ ";
            num1 = (int) num2 * -774072466 ^ 575723551;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -1296357696 : (num3 = -972637335);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -985792464)) % 10U)
          {
            case 1:
              str = JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(str, JSONArray.\u202D​‪⁬‬‫‭‪⁫‬​‪‪‍⁬⁫⁬⁭‫⁮‌⁯‏⁯⁯‬‬⁫‭⁬⁪⁭​⁪⁯‌⁪‪⁯‌‮((object) current));
              num3 = -341123396;
              continue;
            case 2:
              num3 = -972637335;
              continue;
            case 3:
              str = JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(str, ", ");
              num3 = (int) num4 * -282460549 ^ 1368998882;
              continue;
            case 4:
              int num5 = !flag ? -432172971 : (num5 = -1129607419);
              num3 = num5 ^ (int) num4 * 1045878084;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = -1047226033;
              continue;
            case 6:
              num3 = (int) num4 * 400455161 ^ 2010599366;
              continue;
            case 7:
              flag = JSONArray.\u206F‭‌​⁫​‬​‏‪⁬⁯⁬‭‫‭‎⁫⁭‎⁭‬⁭‮​⁮​​‮‏‬‫​⁬‎‭⁮‎⁫⁫‮(str) > 2;
              num3 = (int) num4 * -119464603 ^ -935093275;
              continue;
            case 8:
              goto label_14;
            case 9:
              num3 = (int) num4 * 1090505128 ^ 1574178497;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      return JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -2077452069;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1917677164)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1784559021 ^ 970442675;
            continue;
          case 3:
            str = "[ ";
            num1 = (int) num2 * -909674674 ^ 1569683948;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -1611828538 : (num3 = -726297717);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1917677164)) % 7U)
          {
            case 0:
              num3 = -726297717;
              continue;
            case 2:
              current = enumerator.Current;
              int num5;
              num3 = num5 = JSONArray.\u206F‭‌​⁫​‬​‏‪⁬⁯⁬‭‫‭‎⁫⁭‎⁭‬⁭‮​⁮​​‮‏‬‫​⁬‎‭⁮‎⁫⁫‮(str) <= 3 ? -538819071 : (num5 = -1310596134);
              continue;
            case 3:
              goto label_11;
            case 4:
              str = JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(str, ", ");
              num3 = (int) num4 * 1729481141 ^ 835143975;
              continue;
            case 5:
              str = JSONArray.\u206A⁯‪‬‮‏⁯⁮⁭‏‬‎‭​‭‫⁫‬​‍‮‍‭‬‬⁬‫‭⁭⁬‏⁫‭‎​⁪‍‌⁫⁮‮(str, "\n", aPrefix, "   ");
              str = JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(str, current.ToString(JSONArray.\u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮(aPrefix, "   ")));
              num3 = -1600619814;
              continue;
            case 6:
              num3 = (int) num4 * 1590288234 ^ -1786335604;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      return JSONArray.\u206A⁯‪‬‮‏⁯⁮⁭‏‬‎‭​‭‫⁫‬​‍‮‍‭‬‬⁬‫‭⁭⁬‏⁫‭‎​⁪‍‌⁫⁮‮(str, "\n", aPrefix, "]");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206A‪‌​⁬⁭‭‭‬‌‎⁬‬⁪​‫⁯‮‭‭⁫⁪⁬⁪‍⁯‏⁯​‎⁭⁬‬‌⁬⁭⁭⁮‎⁫‮(aWriter, (byte) 1);
label_1:
      int num1 = -282970279;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2048125457)) % 13U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 48109948 ^ 60226061;
            continue;
          case 2:
            num1 = (int) num2 * 1016398628 ^ -1791111117;
            continue;
          case 3:
            num1 = (int) num2 * 1152716335 ^ 1842440744;
            continue;
          case 4:
            ++index;
            num1 = (int) num2 * 2106345096 ^ -464503015;
            continue;
          case 5:
            goto label_3;
          case 6:
            index = 0;
            num1 = (int) num2 * -1819450443 ^ -1099849417;
            continue;
          case 7:
            flag = index < this.m_List.Count;
            num1 = -808498053;
            continue;
          case 8:
            num1 = -860406021;
            continue;
          case 9:
            num1 = (int) num2 * 1785817654 ^ 1714788368;
            continue;
          case 10:
            int num3 = flag ? 338955896 : (num3 = 1044841558);
            num1 = num3 ^ (int) num2 * -1458197601;
            continue;
          case 11:
            JSONArray.\u206F​⁪‫‬⁬‪‎‭‏‍⁫⁬‏‏‮⁫⁭‬‮⁮⁭‎‫⁯‫‌‬‮​⁯⁪‌‎‪‌‬⁬‮‭‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -1230303559 ^ -1824872479;
            continue;
          case 12:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -312643461 ^ -1235865695;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u206F‭‌​⁫​‬​‏‪⁬⁯⁬‭‫‭‎⁫⁭‎⁭‬⁭‮​⁮​​‮‏‬‫​⁬‎‭⁮‎⁫⁫‮([In] string obj0) => obj0.Length;

    static string \u206C⁬‪⁭⁪​⁮⁬⁮‎‮‫‫​⁫‎⁪⁯‭​‌‌‎‮‮‎​‭‏‍⁪⁪‏‪⁫⁬⁬‬‫‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D​‪⁬‬‫‭‪⁫‬​‪‪‍⁬⁫⁬⁭‫⁮‌⁯‏⁯⁯‬‬⁫‭⁬⁪⁭​⁪⁯‌⁪‪⁯‌‮([In] object obj0) => obj0.ToString();

    static string \u206A⁯‪‬‮‏⁯⁮⁭‏‬‎‭​‭‫⁫‬​‍‮‍‭‬‬⁬‫‭⁭⁬‏⁫‭‎​⁪‍‌⁫⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206A‪‌​⁬⁭‭‭‬‌‎⁬‬⁪​‫⁯‮‭‭⁫⁪⁬⁪‍⁯‏⁯​‎⁭⁬‬‌⁬⁭⁭⁮‎⁫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F​⁪‫‬⁬‪‎‭‏‍⁫⁬‏‏‮⁫⁭‬‮⁮⁭‎‫⁯‫‌‬‮​⁯⁪‌‎‪‌‬⁬‮‭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
