// Decompiled with JetBrains decompiler
// Type: mmxAH.OWMeneger
// Assembly: IAsyncLocalValue, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 5C4F3FBF-C751-4B18-BBEA-B1DDBC6F76B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqk-374874898c5386561d60c3fae0482d1caee783f1096dda6742b1c073175a0a14.exe

using System;
using System.IO;

namespace mmxAH
{
  public class OWMeneger
  {
    private GameEngine en;
    private byte OwCount;

    public OWMeneger(GameEngine eng) => this.en = eng;

    public bool FromText(TextFileParser prs, TextFileParser text)
    {
      if (!byte.TryParse(prs.GetToken(), out this.OwCount))
        return false;
      for (int index = 0; index < (int) this.OwCount; ++index)
      {
        OWLoc owLoc = new OWLoc(this.en);
        if (!owLoc.FromText(prs, text))
          return false;
        owLoc.SetLocIndex((short) (byte) this.en.locs.Count);
        this.en.locs.Add((Locathion) owLoc);
      }
      return true;
    }

    public void Print()
    {
      foreach (Locathion loc in this.en.locs)
      {
        if (loc.GetLocType() == LocathionType.OW)
        {
          loc.Print((byte) 1);
          this.en.io.Print(Environment.NewLine);
        }
      }
    }

    public int Index(string codename)
    {
      for (int index = 0; index < this.en.locs.Count; ++index)
      {
        if (this.en.locs[index].GetCodeName() == codename && this.en.locs[index].GetLocType() == LocathionType.OW)
          return index;
      }
      return -1;
    }

    public void FromBin(BinaryReader rd)
    {
      this.OwCount = rd.ReadByte();
      for (int index = 0; index < (int) this.OwCount; ++index)
      {
        OWLoc owLoc = new OWLoc(this.en);
        owLoc.FromBin(rd);
        this.en.locs.Add((Locathion) owLoc);
      }
    }

    public void ToBin(BinaryWriter wr)
    {
      wr.Write(this.OwCount);
      foreach (Locathion loc in this.en.locs)
      {
        if (loc.GetLocType() == LocathionType.OW)
          loc.ToBin(wr);
      }
    }
  }
}
