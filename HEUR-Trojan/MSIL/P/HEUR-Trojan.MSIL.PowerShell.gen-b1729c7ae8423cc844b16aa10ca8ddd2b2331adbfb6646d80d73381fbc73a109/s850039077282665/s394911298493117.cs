// Decompiled with JetBrains decompiler
// Type: s850039077282665.s394911298493117
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using s281263176400562;
using s428072637819871;
using s528813736053581;
using s688185510374240;
using s859483659459112;
using s962360155664524;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;

namespace s850039077282665
{
  public sealed class s394911298493117 : s280990392871393
  {
    private string s384035468793002;
    private Dictionary<string, string> s421172127969083;

    public s394911298493117(s470725726477034 source, string TMFDirectory)
      : base(source)
    {
      this.s384035468793002 = TMFDirectory;
    }

    internal virtual s244632129848843 s240801627764930(
      s034852122986107 s769867182450289)
    {
      if (s769867182450289.s852414036535478)
      {
        Guid s966949059091664 = s769867182450289.s966949059091664;
        string s644305550776510 = this.s901351712334332(s966949059091664);
        if (s644305550776510 != null)
        {
          List<s244632129848843> s244632129848843List = this.s117938144277675(s966949059091664, s644305550776510);
          s244632129848843 s244632129848843 = (s244632129848843) null;
          foreach (s244632129848843 s853178440688833 in s244632129848843List)
          {
            if (s853178440688833.s591345645465164 == s769867182450289.s591345645465164)
            {
              s244632129848843 = s853178440688833;
            }
            else
            {
              int num = (int) this.s335464334632004((s034852122986107) s853178440688833, false);
            }
          }
          this.s421172127969083[s966949059091664.ToString()] = (string) null;
          return s244632129848843;
        }
      }
      return (s244632129848843) null;
    }

    private string s901351712334332(Guid s562899006615252)
    {
      if (this.s421172127969083 == null)
      {
        this.s421172127969083 = new Dictionary<string, string>(64);
        foreach (string path in s538263490857989.s510480812924182(this.s384035468793002))
          this.s421172127969083[Path.GetFileNameWithoutExtension(path)] = path;
      }
      string str;
      this.s421172127969083.TryGetValue(s562899006615252.ToString(), out str);
      return str;
    }

    private List<s244632129848843> s117938144277675(
      Guid s849209702728281,
      string s644305550776510)
    {
      List<s244632129848843> s244632129848843List = new List<s244632129848843>();
      List<s394911298493117.s432360941759481> s432360941759481List = new List<s394911298493117.s432360941759481>();
      using (StreamReader streamReader1 = File.OpenText(s644305550776510))
      {
        string str1 = (string) null;
        string key = (string) null;
        Guid providerGuid = Guid.Empty;
        while (true)
        {
          Match match1;
          do
          {
            string input1 = streamReader1.ReadLine();
            if (input1 != null)
            {
              if (providerGuid == Guid.Empty)
              {
                Match match2 = Regex.Match(input1, "PDB: .*?(\\w+)\\.pdb\\s*$", RegexOptions.IgnoreCase);
                if (match2.Success)
                {
                  if (string.IsNullOrEmpty(key))
                    key = match2.Groups[1].Value;
                  string path;
                  if (this.s421172127969083.TryGetValue(key, out path) && path.EndsWith(".mof", StringComparison.OrdinalIgnoreCase))
                  {
                    using (StreamReader streamReader2 = File.OpenText(path))
                    {
                      Match match3;
                      do
                      {
                        string input2 = streamReader2.ReadLine();
                        if (input2 != null)
                          match3 = Regex.Match(input2, "guid\\(.{(.*)}.\\)", RegexOptions.IgnoreCase);
                        else
                          goto label_16;
                      }
                      while (!match3.Success);
                      try
                      {
                        providerGuid = new Guid(match3.Groups[1].Value);
                      }
                      catch (Exception ex)
                      {
                      }
                    }
                  }
                }
              }
label_16:
              if (str1 == null)
              {
                Match match4 = Regex.Match(input1, "^\\w+-\\w+-\\w+-\\w+-\\w+\\s+(\\S+)");
                if (match4.Success)
                  str1 = match4.Groups[1].Value;
              }
              else
                match1 = Regex.Match(input1, "^#typev\\s+(\\S*?)(\\d+)\\s+(\\d+)\\s+\"(.*)\"(.*)");
            }
            else
              goto label_67;
          }
          while (!match1.Success);
          // ISSUE: variable of a compiler-generated type
          s394911298493117.s618601936082422 s618601936082422 = (s394911298493117.s618601936082422) new s394911298493117.s432360941759481();
          string str2 = match1.Groups[1].Value;
          int.Parse(match1.Groups[2].Value);
          int eventID = int.Parse(match1.Groups[3].Value);
          string input3 = match1.Groups[4].Value;
          if (input3.Contains("%!"))
          {
            string input4 = match1.Groups[5].Value;
            while (true)
            {
              Match match5 = Regex.Match(input3, "%!(\\w+)!");
              if (match5.Success)
              {
                string str3 = match5.Groups[1].Value;
                string newValue = "";
                Match match6 = Regex.Match(input4, str3 + "=(.*)");
                if (match6.Success)
                  newValue = Regex.Replace(match6.Groups[1].Value, " \\w+=.*", "");
                input3 = input3.Replace("%!" + str3 + "!", newValue);
              }
              else
                break;
            }
          }
          string providerName = str1;
          if (key != null)
            providerName = key + "/" + providerName;
          ((s394911298493117.s432360941759481) s618601936082422).s410806681359943 = new s244632129848843((Action<s034852122986107>) null, eventID, 0, str2 + "/" + match1.Groups[2].Value, s849209702728281, 0, "", providerGuid, providerName);
          ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s558741114055760 = true;
          s432360941759481List.Clear();
          while (true)
          {
            Type Type;
            IDictionary<long, string> Map;
            do
            {
              Match match7;
              do
              {
                string input5 = streamReader1.ReadLine();
                if (input5 != null && !(input5.Trim() == "}"))
                  match7 = Regex.Match(input5, "^.*, Item(\\S+) -- (\\d+)$");
                else
                  goto label_55;
              }
              while (!match7.Success);
              string str4 = match7.Groups[1].Value;
              Type = (Type) null;
              Map = (IDictionary<long, string>) null;
              if (str4 == "String")
                Type = typeof (StringBuilder);
              else if (str4 == "WString")
                Type = typeof (string);
              else if (str4 == "Long" || str4 == "Ulong")
                Type = typeof (int);
              else if (str4 == "HRESULT" || str4 == "NTSTATUS")
              {
                Type = typeof (int);
                Map = (IDictionary<long, string>) new SortedDictionary<long, string>();
              }
              else if (str4 == "Double")
                Type = typeof (double);
              else if (str4 == "Ptr")
                Type = typeof (IntPtr);
              else if (str4.StartsWith("Enum("))
                Type = typeof (int);
              else if (str4 == "ULongLong" || str4.StartsWith("LongLong"))
                Type = typeof (long);
              else if (str4 == "ListLong(false,true)")
                Type = typeof (bool);
              else if (str4.StartsWith("ListLong("))
                Type = typeof (int);
              else if (str4 == "Guid")
                Type = typeof (Guid);
            }
            while (!(Type != (Type) null));
            s432360941759481List.Add((s394911298493117.s432360941759481) new s356473292000041.s293291028346620(Type, Map));
          }
label_55:
          ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.payloadNames = new string[s432360941759481List.Count];
          ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s463622614246125 = new s244632129848843.s450921180926046[s432360941759481List.Count];
          ushort num1 = 0;
          for (int index = 0; index < s432360941759481List.Count; ++index)
          {
            ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.payloadNames[index] = "Arg" + (index + 1).ToString();
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s244632129848843.s719766275477698&) ref ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s463622614246125[index]).s193860116962783 = num1;
            Type s975437772124919 = s432360941759481List[index].s223981804652973;
            ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s463622614246125[index].s034892436571578 = s432360941759481List[index].s331782736035510;
            ushort num2 = 0;
            if (s975437772124919 == typeof (StringBuilder))
            {
              s975437772124919 = typeof (string);
              num2 |= (ushort) 1;
            }
            ushort num3 = (ushort) ((uint) num2 | (uint) s244632129848843.s323173860836894(s975437772124919));
            ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s463622614246125[index].s699859390312039 = num3;
            ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s463622614246125[index].s736517469557712 = s975437772124919;
            if (num3 >= (ushort) 65516 || num1 == ushort.MaxValue)
              num1 = ushort.MaxValue;
            else
              num1 += num3;
          }
          // ISSUE: reference to a compiler-generated method
          string str5 = Regex.Replace(input3.Replace("%0", ""), "%(\\d+)!(\\w?)\\w*!", new MatchEvaluator(s618601936082422.s924514971123840));
          ((s394911298493117.s432360941759481) s618601936082422).s410806681359943.s614187586217155 = str5;
          s244632129848843List.Add(((s394911298493117.s432360941759481) s618601936082422).s410806681359943);
        }
      }
label_67:
      return s244632129848843List;
    }

    private struct s432360941759481
    {
      public IDictionary<long, string> s331782736035510;
      public s244632129848843 s410806681359943;

      public s432360941759481() => ((object) ref this).\u002Ector();
    }
  }
}
