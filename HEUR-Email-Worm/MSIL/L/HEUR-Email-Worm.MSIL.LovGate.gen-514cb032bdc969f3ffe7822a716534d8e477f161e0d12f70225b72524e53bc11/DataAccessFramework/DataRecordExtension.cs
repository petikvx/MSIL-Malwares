// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.DataRecordExtension
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System;
using System.Data;
using System.Reflection;
using System.Runtime.InteropServices;

namespace DataAccessFramework
{
  public static class DataRecordExtension
  {
    public static object GetObject(this IDataRecord record, string fieldName)
    {
      object obj1 = DataRecordExtension.\u206E‪‪⁪​⁫‫‏‌⁮⁬‏‭​‭‎⁯⁫‌​⁪‏‍⁭‍‫​‫⁫⁭‬‪⁫⁯‭⁭⁯⁫‍⁬‮(record, fieldName);
      if (obj1 == DBNull.Value)
        goto label_4;
label_1:
      int num1 = 1749123595;
label_2:
      uint num2;
      object obj2;
      object obj3;
      switch ((num2 = (uint) (num1 ^ 447681640)) % 3U)
      {
        case 0:
          goto label_1;
        case 1:
          obj3 = obj1;
          goto label_5;
        default:
          return obj2;
      }
label_4:
      obj3 = (object) null;
label_5:
      obj2 = obj3;
      num1 = 1627862000;
      goto label_2;
    }

    public static string GetString(this IDataRecord record, string fieldName)
    {
label_1:
      int num1 = -316984848;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -182343881)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = (string) record.GetObject(fieldName);
            num1 = (int) num2 * -1839730069 ^ -1842305491;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public static T GetEnum<T>(this IDataRecord record, string fieldName) where T : struct
    {
label_1:
      int num1 = -1101998058;
      string str;
      T result;
      bool flag;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1335253049)) % 6U)
        {
          case 0:
            obj = result;
            num1 = (int) num2 * 361222106 ^ -2113640610;
            continue;
          case 2:
            goto label_1;
          case 3:
            int num3 = !flag ? 1090387854 : (num3 = 1359050022);
            num1 = num3 ^ (int) num2 * -1690723137;
            continue;
          case 4:
            goto label_4;
          case 5:
            str = record.GetString(fieldName);
            flag = Enum.TryParse<T>(str, out result);
            num1 = (int) num2 * 1361717535 ^ -1812580967;
            continue;
          default:
            goto label_7;
        }
      }
label_4:
      // ISSUE: type reference
      throw DataRecordExtension.\u202A‬⁭⁯‭⁮‮​‭‬⁭‭⁯​‫‮‎‌⁬‭‌​‌⁭‍‍⁫⁭⁪‎‎⁯⁫‎‮‭⁫‮‍‮(DataRecordExtension.\u202E⁪⁮‍​⁯‫‫⁪⁬​⁯‍‪​⁮‮​‬⁫‪⁪‎‬‮‪‮‍‎‌‬⁪⁬⁬​⁪⁮⁫‬‍‮(\u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(4056652290U), (object) DataRecordExtension.\u202D‌⁭‮⁫⁪​⁮⁭‍‫⁯‍‏‭⁯⁯‭‎⁭​‏‍‪‍‮‏‏‪‪‬⁬‮⁭‏‎‮‮‎‎‮((MemberInfo) DataRecordExtension.\u206E‫‏⁮‬‪‎⁭⁫⁯‮‫⁬‎⁯‬⁪⁪⁯‪​‬‏‍⁬‎⁫​⁯‎⁬⁮‭‌⁫‎‪​‌‏‮(__typeref (T))), (object) str));
label_7:
      return obj;
    }

    public static long GetLong(this IDataRecord record, string fieldName)
    {
      object obj = DataRecordExtension.\u206E‪‪⁪​⁫‫‏‌⁮⁬‏‭​‭‎⁯⁫‌​⁪‏‍⁭‍‫​‫⁫⁭‬‪⁫⁯‭⁭⁯⁫‍⁬‮(record, fieldName);
      bool flag = obj == DBNull.Value;
label_1:
      int num1 = 1435457848;
      long num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1110118300)) % 6U)
        {
          case 0:
            num1 = (int) num3 * 995696451 ^ 1654138279;
            continue;
          case 2:
            int num4 = !flag ? -1174626297 : (num4 = -38453321);
            num1 = num4 ^ (int) num3 * -1769873635;
            continue;
          case 3:
            num2 = (long) obj;
            num1 = 777803836;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_4;
          default:
            goto label_7;
        }
      }
label_4:
      throw DataRecordExtension.\u202A‬⁭⁯‭⁮‮​‭‬⁭‭⁯​‫‮‎‌⁬‭‌​‌⁭‍‍⁫⁭⁪‎‎⁯⁫‎‮‭⁫‮‍‮(DataRecordExtension.\u206F⁭‍⁯⁬‎⁮⁯‪⁬‎‬​‎‍‍‫‏⁪⁫⁫‪⁮‎‪​⁫​‪‪⁪⁬‪‌‏‬⁭⁭‬‫‮(\u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(184823955U), (object) fieldName));
label_7:
      return num2;
    }

    public static T Get<T>(this IDataRecord record, string fieldName)
    {
      object obj1 = DataRecordExtension.\u206E‪‪⁪​⁫‫‏‌⁮⁬‏‭​‭‎⁯⁫‌​⁪‏‍⁭‍‫​‫⁫⁭‬‪⁫⁯‭⁭⁯⁫‍⁬‮(record, fieldName);
      bool flag = obj1 == DBNull.Value;
label_1:
      int num1 = 418276400;
      T obj2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1248896927)) % 6U)
        {
          case 0:
            obj2 = (T) obj1;
            num1 = 1164799260;
            continue;
          case 1:
            int num3 = flag ? -1844041757 : (num3 = -972247235);
            num1 = num3 ^ (int) num2 * -1023947904;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_5;
          case 5:
            num1 = (int) num2 * 1565546108 ^ 236595343;
            continue;
          default:
            goto label_7;
        }
      }
label_5:
      throw DataRecordExtension.\u202A‬⁭⁯‭⁮‮​‭‬⁭‭⁯​‫‮‎‌⁬‭‌​‌⁭‍‍⁫⁭⁪‎‎⁯⁫‎‮‭⁫‮‍‮(DataRecordExtension.\u206F⁭‍⁯⁬‎⁮⁯‪⁬‎‬​‎‍‍‫‏⁪⁫⁫‪⁮‎‪​⁫​‪‪⁪⁬‪‌‏‬⁭⁭‬‫‮(\u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(1057597193U), (object) fieldName));
label_7:
      return obj2;
    }

    public static T? GetNullable<T>(this IDataRecord record, string fieldName) where T : struct
    {
      object obj = DataRecordExtension.\u206E‪‪⁪​⁫‫‏‌⁮⁬‏‭​‭‎⁯⁫‌​⁪‏‍⁭‍‫​‫⁫⁭‬‪⁫⁯‭⁭⁯⁫‍⁬‮(record, fieldName);
label_1:
      int num1 = 105688088;
      T? nullable1;
      T? nullable2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1519912002)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            nullable2 = nullable1;
            num1 = (int) num2 * 1331383319 ^ 1896443352;
            continue;
          case 2:
            nullable2 = new T?((T) obj);
            num1 = 1265287152;
            continue;
          case 3:
            nullable1 = new T?();
            num1 = (int) num2 * -1729206603 ^ 1901634443;
            continue;
          case 4:
            int num3 = obj != DBNull.Value ? -1512795316 : (num3 = -490071738);
            num1 = num3 ^ (int) num2 * -1016420686;
            continue;
          case 6:
            num1 = (int) num2 * 1899605567 ^ -2122725847;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return nullable2;
    }

    static object \u206E‪‪⁪​⁫‫‏‌⁮⁬‏‭​‭‎⁯⁫‌​⁪‏‍⁭‍‫​‫⁫⁭‬‪⁫⁯‭⁭⁯⁫‍⁬‮([In] IDataRecord obj0, [In] string obj1) => obj0[obj1];

    static Type \u206E‫‏⁮‬‪‎⁭⁫⁯‮‫⁬‎⁯‬⁪⁪⁯‪​‬‏‍⁬‎⁫​⁯‎⁬⁮‭‌⁫‎‪​‌‏‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static string \u202D‌⁭‮⁫⁪​⁮⁭‍‫⁯‍‏‭⁯⁯‭‎⁭​‏‍‪‍‮‏‏‪‪‬⁬‮⁭‏‎‮‮‎‎‮([In] MemberInfo obj0) => obj0.Name;

    static string \u202E⁪⁮‍​⁯‫‫⁪⁬​⁯‍‪​⁮‮​‬⁫‪⁪‎‬‮‪‮‍‎‌‬⁪⁬⁬​⁪⁮⁫‬‍‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }

    static InvalidOperationException \u202A‬⁭⁯‭⁮‮​‭‬⁭‭⁯​‫‮‎‌⁬‭‌​‌⁭‍‍⁫⁭⁪‎‎⁯⁫‎‮‭⁫‮‍‮(
      [In] string obj0)
    {
      return new InvalidOperationException(obj0);
    }

    static string \u206F⁭‍⁯⁬‎⁮⁯‪⁬‎‬​‎‍‍‫‏⁪⁫⁫‪⁮‎‪​⁫​‪‪⁪⁬‪‌‏‬⁭⁭‬‫‮([In] string obj0, [In] object obj1) => string.Format(obj0, obj1);
  }
}
