// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u000F;
using \u0012;
using \u0014;
using Newtonsoft.Json;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Globalization;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u000F
{
  internal sealed class \u0005 : \u0007, \u0001
  {
    private readonly \u0007 \u0001;
    private readonly \u0005.\u0004 \u0001;
    internal readonly StringWriter \u0001;
    [NonSerialized]
    internal static GetString \u0091;

    public \u0005([In] \u0007 obj0)
    {
      this.\u0001 = obj0;
      this.\u0001 = new StringWriter((IFormatProvider) CultureInfo.InvariantCulture);
      this.\u0001.Write(\u000F.\u0005.\u0091(5207) + Environment.NewLine);
      this.\u0001 = new \u0005.\u0004((TextWriter) this.\u0001);
      \u0006.\u0001((JsonWriter) this.\u0001, \u0002.\u0002);
    }

    public override bool \u0001()
    {
      int num = this.\u0001.\u0001() ? 1 : 0;
      do
      {
        JsonWriter jsonWriter = (JsonWriter) this.\u0001;
        \u0007 obj = this.\u0001;
        do
        {
          \u0006.\u0001(obj, true, false, jsonWriter, false);
        }
        while (false);
      }
      while (false);
      return num != 0;
    }

    public override int? \u0001()
    {
      int? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    public override string \u0002()
    {
      string str = this.\u0001.\u0002();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return str;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return str;
    }

    public override byte[] \u0001()
    {
      byte[] numArray = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return numArray;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return numArray;
    }

    public override Decimal? \u0001()
    {
      Decimal? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    public override double? \u0001()
    {
      double? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    public override bool? \u0001()
    {
      bool? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    public override DateTime? \u0001()
    {
      DateTime? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    public override DateTimeOffset? \u0001()
    {
      DateTimeOffset? nullable = this.\u0001.\u0001();
      JsonWriter jsonWriter1 = (JsonWriter) this.\u0001;
      \u0007 obj = this.\u0001;
      JsonWriter jsonWriter2 = jsonWriter1;
      if (false)
        return nullable;
      \u0006.\u0001(obj, true, false, jsonWriter2, false);
      return nullable;
    }

    [SpecialName]
    public override int \u0001() => this.\u0001.\u0001();

    [SpecialName]
    public override string \u0001() => this.\u0001.\u0001();

    [SpecialName]
    public override JsonToken \u0001() => this.\u0001.\u0001();

    [SpecialName]
    public override object \u0001() => this.\u0001.\u0001();

    [SpecialName]
    public override Type \u0001() => this.\u0001.\u0001();

    public override void \u0001() => this.\u0001.\u0001();

    bool \u0001.\u0005()
    {
label_0:
      \u0001 obj;
      while (true)
      {
        obj = this.\u0001 as \u0001;
        do
        {
          if (true)
          {
            if (obj != null)
              goto label_6;
          }
          else
            goto label_0;
        }
        while (false);
        return false;
      }
label_6:
      return obj.\u0002();
    }

    [SpecialName]
    int \u0001.\u0004()
    {
      if (true)
      {
        \u0001 obj;
        if (true)
          obj = this.\u0001 as \u0001;
        if (obj != null)
        {
          int num = obj.\u0002();
          return false ? num : num;
        }
      }
      return 0;
    }

    [SpecialName]
    int \u0001.\u0005()
    {
      if (true)
      {
        \u0001 obj;
        if (true)
          obj = this.\u0001 as \u0001;
        if (obj != null)
        {
          int num = obj.\u0003();
          return false ? num : num;
        }
      }
      return 0;
    }

    static \u0005() => Strings.CreateGetStringDelegate(typeof (\u000F.\u0005));
  }
}
