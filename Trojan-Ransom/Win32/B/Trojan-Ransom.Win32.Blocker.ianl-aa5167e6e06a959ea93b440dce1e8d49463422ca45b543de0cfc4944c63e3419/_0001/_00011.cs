// Decompiled with JetBrains decompiler
// Type: .1
// Assembly: Intel(R) GFX, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CC091627-EE5B-4936-A09E-8A0DFCC67467
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ianl-aa5167e6e06a959ea93b440dce1e8d49463422ca45b543de0cfc4944c63e3419.exe

using \u0001;
using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal class \u00011
  {
    private static Assembly \u0001 = (Assembly) null;
    private static string[] \u0001 = new string[0];

    internal static void \u0001()
    {
      try
      {
        AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u00011.\u0001);
      }
      catch (Exception ex)
      {
      }
    }

    private static Assembly \u0001([In] object obj0, [In] ResolveEventArgs obj1)
    {
      if ((object) \u00011.\u0001 == null)
      {
        lock (\u00011.\u0001)
        {
          \u00011.\u0001 = Assembly.Load("{84c2462e-7723-484b-acbb-b1eb6ab03b07}, PublicKeyToken=3e56350693f7355e");
          if ((object) \u00011.\u0001 != null)
            \u00011.\u0001 = \u00011.\u0001.GetManifestResourceNames();
        }
      }
      string name = obj1.Name;
      for (int index = 0; index < \u00011.\u0001.Length; ++index)
      {
        if (\u00011.\u0001[index] == name)
          return !\u00011.\u0001() ? (Assembly) null : \u00011.\u0001;
      }
      return (Assembly) null;
    }

    private static bool \u0001()
    {
      try
      {
        StackFrame[] frames = new StackTrace().GetFrames();
        for (int index = 2; index < frames.Length; ++index)
        {
          if ((object) frames[index].GetMethod().Module.Assembly == (object) Assembly.GetExecutingAssembly())
            return true;
        }
        return false;
      }
      catch
      {
        return true;
      }
    }
  }
}
