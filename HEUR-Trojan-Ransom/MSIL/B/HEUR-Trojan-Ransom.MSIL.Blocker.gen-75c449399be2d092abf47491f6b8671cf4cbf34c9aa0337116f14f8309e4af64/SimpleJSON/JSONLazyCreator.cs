// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: SystemThreadingSpinLockDebugVi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4BC7AA9F-A353-4AE7-9558-F3A117D261BE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75c449399be2d092abf47491f6b8671cf4cbf34c9aa0337116f14f8309e4af64.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -78177892;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -957340283)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1330188268 ^ -712239877;
            continue;
          case 2:
            this.m_Node = aNode;
            this.m_Key = (string) null;
            num1 = (int) num2 * -1504713049 ^ 1525187592;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 298317314;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1089314890)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 688401954 ^ 388434157;
            continue;
          case 1:
            num1 = (int) num2 * -425442022 ^ -1038590934;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * -1727094411 ^ -1034669202;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = -383711447;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -172462414)) % 10U)
        {
          case 0:
            num1 = (int) num2 * -1734788204 ^ -1331125477;
            continue;
          case 1:
            int num3 = flag ? -1268801362 : (num3 = -589729083);
            num1 = num3 ^ (int) num2 * -741688878;
            continue;
          case 2:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -1980981521 ^ 1247917812;
            continue;
          case 3:
            num1 = (int) num2 * -1729316574 ^ -610716043;
            continue;
          case 4:
            num1 = (int) num2 * -1567858793 ^ 1140913950;
            continue;
          case 6:
            num1 = (int) num2 * -589072635 ^ 2051622698;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -1651336589;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * 1543252498 ^ 1120288737;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 486622132;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1934118381)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -524299573 ^ -808786209;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 631943107;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 323576368)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal.Add(value);
              num1 = (int) num2 * -259886796 ^ -222447952;
              continue;
            case 2:
              num1 = (int) num2 * 909709257 ^ -1326677852;
              continue;
            case 3:
              aVal = new JSONArray();
              num1 = (int) num2 * -1243103977 ^ -1527878718;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1287369513 ^ -1324859167;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
label_1:
        int num1 = 517938487;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1137318574)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 719321174 ^ 1708123075;
              continue;
            case 3:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1620677136 ^ 1520772752;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 261363473;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2099052524)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * 1512456160 ^ 1175423035;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -88113789 ^ -1626601475;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = 1043216267;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 314139048)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal.Add(aKey, aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -134724313 ^ -1994296933;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -628021214;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -801165869)) % 6U)
        {
          case 0:
            flag = (object) a == b;
            num1 = -613641335;
            continue;
          case 1:
            int num3 = b != null ? -1079529406 : (num3 = -76594171);
            num1 = num3 ^ (int) num2 * -387683397;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * -133833054 ^ -1605462896;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -873308670 ^ -1876215621;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1375406020;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1067775961)) % 4U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -75681900 ^ 846610638;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1670633061 ^ -655732942;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1614278663;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 974734241)) % 6U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = 1720839488;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1285813118 ^ -253274891;
            continue;
          case 4:
            int num3 = obj == null ? 76610252 : (num3 = 1664365512);
            num1 = num3 ^ (int) num2 * -1688875603;
            continue;
          case 5:
            flag = true;
            num1 = (int) num2 * 663387735 ^ 2099726962;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1360434453;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 509529267)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -2016832924 ^ 156259113;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = -988729393;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -138974670)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 2113993272 ^ 879822032;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 748819677;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2117749388)) % 4U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * 650156107 ^ 1238326440;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 111894226 ^ -1269203862;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -521653263;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2097837388)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -577847485 ^ 1310825763;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * 739305698 ^ 729025735;
              continue;
            case 3:
              aVal = new JSONData(0);
              num1 = (int) num2 * 716298203 ^ -1767919488;
              continue;
            case 4:
              num1 = (int) num2 * 1645515624 ^ -203275488;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -582415409;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1711761553)) % 5U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * 1439925417 ^ -1306655473;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * -1751837910 ^ -111440661;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -82239601 ^ -745850331;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1185113535;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1459837524)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1575201682 ^ -1735438378;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -2065542827;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -709975662)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -342951618 ^ -2044162650;
              continue;
            case 1:
              this.Set((JSONNode) new JSONData(0.0));
              num1 = (int) num2 * -960865461 ^ -193891355;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = (int) num2 * -1012173049 ^ -1553575568;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1621575698;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1021704447)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 609953861 ^ -1609318975;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1198959199 ^ -1431937566;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1152817117;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -127501866)) % 6U)
          {
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * 1341909130 ^ -201351071;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1540744887 ^ 817585279;
              continue;
            case 4:
              num1 = (int) num2 * -2015485083 ^ -1507806137;
              continue;
            case 5:
              asBool = false;
              num1 = (int) num2 * 1281462145 ^ -1086766217;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1601908097;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1928980460)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 61937028 ^ -1226446129;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1276141497;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1486108828)) % 6U)
          {
            case 0:
              asArray = aVal;
              num1 = (int) num2 * -196654835 ^ -643282876;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1145237454 ^ -516528670;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 917443235 ^ -2047660659;
              continue;
            case 5:
              aVal = new JSONArray();
              num1 = (int) num2 * -1346190466 ^ -472208036;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2059311101;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 842729304)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -751363070 ^ 1886248892;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -203686177 ^ -2145464509;
              continue;
            case 3:
              num1 = (int) num2 * -2132040077 ^ -1490579994;
              continue;
            case 4:
              num1 = (int) num2 * -27181555 ^ -1517430066;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
