// Decompiled with JetBrains decompiler
// Type: 929875535454.IVsThreadedWaitDialog2
// Assembly: 069511259246, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 6D0FD131-484D-4146-B8A3-FCA5C0E4E111
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-e7ff83830fd4bf4e75004c85a34aa787b5c6b7dedba3c5ff9843edd5e688f2d5.exe

using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u003929875535454
{
  [CompilerGenerated]
  [Guid("88194D8B-88DA-4C33-A2C6-15140626E222")]
  [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
  [TypeIdentifier]
  [ComImport]
  public interface IVsThreadedWaitDialog2
  {
    [MethodImpl(MethodImplOptions.PreserveSig | MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    int StartWaitDialog(
      [MarshalAs(UnmanagedType.LPWStr), In] string szWaitCaption,
      [MarshalAs(UnmanagedType.LPWStr), In] string szWaitMessage,
      [MarshalAs(UnmanagedType.LPWStr), In] string szProgressText,
      [MarshalAs(UnmanagedType.Struct), In] object varStatusBmpAnim,
      [MarshalAs(UnmanagedType.LPWStr), In] string szStatusBarText,
      [In] int iDelayToShowDialog,
      [In] bool fIsCancelable,
      [In] bool fShowMarqueeProgress);

    [SpecialName]
    [MethodImpl(MethodCodeType = MethodCodeType.Runtime)]
    sealed extern void _VtblGap1_1();

    [MethodImpl(MethodImplOptions.PreserveSig | MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    int EndWaitDialog(out int pfCanceled);

    [MethodImpl(MethodImplOptions.PreserveSig | MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
    int UpdateProgress(
      [MarshalAs(UnmanagedType.LPWStr), In] string szUpdatedWaitMessage,
      [MarshalAs(UnmanagedType.LPWStr), In] string szProgressText,
      [MarshalAs(UnmanagedType.LPWStr), In] string szStatusBarText,
      [In] int iCurrentStep,
      [In] int iTotalSteps,
      [In] bool fDisableCancel,
      out bool pfCanceled);
  }
}
