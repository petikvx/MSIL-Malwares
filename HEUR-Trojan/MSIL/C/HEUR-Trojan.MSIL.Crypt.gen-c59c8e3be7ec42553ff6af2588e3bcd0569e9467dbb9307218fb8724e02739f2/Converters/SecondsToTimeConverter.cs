// Decompiled with JetBrains decompiler
// Type: Cradiator.Converters.SecondsToTimeConverter
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using System;
using System.Globalization;
using System.Windows.Data;

namespace Cradiator.Converters
{
  [ValueConversion(typeof (double), typeof (string))]
  public class SecondsToTimeConverter : IValueConverter
  {
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
      double num1 = (double) value;
      string str = string.Empty;
      if (num1 >= 60.0 && num1 < 61.0)
        str = "1 minute";
      else if (num1 < 60.0)
        str = ((int) num1).ToString() + " seconds";
      else if (num1 > 60.0)
      {
        double num2 = Math.Floor(num1 / 60.0);
        double num3 = Math.Floor(num1 % 60.0);
        if (num2 > 1.0 && num3 == 0.0)
          str = string.Format("{0} minutes", (object) num2);
        else
          str = string.Format("{0} minute{1} and {2} second{3}", (object) num2, num2 > 1.0 ? (object) "s" : (object) "", (object) num3, num3 > 1.0 ? (object) "s" : (object) "");
      }
      return (object) ("Every " + str);
    }

    public object ConvertBack(
      object value,
      Type targetType,
      object parameter,
      CultureInfo culture)
    {
      return (object) null;
    }
  }
}
