// Decompiled with JetBrains decompiler
// Type: dG3.PV3
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u00383s;
using r6A;
using System;
using System.Runtime.InteropServices;
using U2D;

namespace dG3
{
  internal sealed class PV3
  {
    internal int j48;
    internal int SWO;
    internal int[] \u003561;
    internal int \u0033c9;
    internal int D46;
    internal int \u003751;
    internal int H79;
    internal int \u0034e1;
    internal byte \u003524;
    internal byte \u00375t;
    internal int[] eD5;
    internal int n96;
    internal int[] \u00337T;
    internal int Yr4;

    internal PV3()
    {
    }

    internal void PC6([In] int obj0, [In] int obj1, [In] int[] obj2, [In] int obj3, [In] int[] obj4, [In] int obj5)
    {
      this.j48 = 0;
      this.\u003524 = (byte) obj0;
      this.\u00375t = (byte) obj1;
      this.eD5 = obj2;
      this.n96 = obj3;
      this.\u00337T = obj4;
      this.Yr4 = obj5;
      this.\u003561 = (int[]) null;
    }

    internal int VA9([In] \u00392I obj0, [In] int obj1)
    {
      \u0033t2 fc5 = obj0.fc5;
      int x7k = fc5.X7k;
      int num1 = fc5.\u0032Dc;
      int ufv = obj0.Ufv;
      int x64 = obj0.x64;
      int num2 = obj0.xT1;
      int num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
      while (true)
      {
        switch (this.j48)
        {
          case 0:
            if (num3 >= 258 && num1 >= 10)
            {
              obj0.Ufv = ufv;
              obj0.x64 = x64;
              fc5.\u0032Dc = num1;
              fc5.m21 += (long) (x7k - fc5.X7k);
              fc5.X7k = x7k;
              obj0.xT1 = num2;
              obj1 = this.\u0039g9((int) this.\u003524, (int) this.\u00375t, this.eD5, this.n96, this.\u00337T, this.Yr4, obj0, fc5);
              x7k = fc5.X7k;
              num1 = fc5.\u0032Dc;
              ufv = obj0.Ufv;
              x64 = obj0.x64;
              num2 = obj0.xT1;
              num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
              int num4;
              switch (obj1)
              {
                case 0:
                  goto label_7;
                case 1:
                  num4 = 7;
                  break;
                default:
                  num4 = 9;
                  break;
              }
              this.j48 = num4;
              continue;
            }
label_7:
            this.D46 = (int) this.\u003524;
            this.\u003561 = this.eD5;
            this.\u0033c9 = this.n96;
            this.j48 = 1;
            goto case 1;
          case 1:
            int d46_1;
            for (d46_1 = this.D46; x64 < d46_1; x64 += 8)
            {
              if (num1 != 0)
              {
                obj1 = 0;
                --num1;
                ufv |= ((int) fc5.\u0033Dp[x7k++] & (int) byte.MaxValue) << x64;
              }
              else
              {
                obj0.Ufv = ufv;
                obj0.x64 = x64;
                fc5.\u0032Dc = num1;
                fc5.m21 += (long) (x7k - fc5.X7k);
                fc5.X7k = x7k;
                obj0.xT1 = num2;
                return obj0.\u0034z4(obj1);
              }
            }
            int index1 = (this.\u0033c9 + (ufv & u4W.bc1[d46_1])) * 3;
            ufv >>= this.\u003561[index1 + 1];
            x64 -= this.\u003561[index1 + 1];
            int num5 = this.\u003561[index1];
            if (num5 == 0)
            {
              this.\u003751 = this.\u003561[index1 + 2];
              this.j48 = 6;
              continue;
            }
            if ((num5 & 16) != 0)
            {
              this.H79 = num5 & 15;
              this.SWO = this.\u003561[index1 + 2];
              this.j48 = 2;
              continue;
            }
            if ((num5 & 64) == 0)
            {
              this.D46 = num5;
              this.\u0033c9 = index1 / 3 + this.\u003561[index1 + 2];
              continue;
            }
            if ((num5 & 32) != 0)
            {
              this.j48 = 7;
              continue;
            }
            goto label_21;
          case 2:
            int h79_1;
            for (h79_1 = this.H79; x64 < h79_1; x64 += 8)
            {
              if (num1 != 0)
              {
                obj1 = 0;
                --num1;
                ufv |= ((int) fc5.\u0033Dp[x7k++] & (int) byte.MaxValue) << x64;
              }
              else
              {
                obj0.Ufv = ufv;
                obj0.x64 = x64;
                fc5.\u0032Dc = num1;
                fc5.m21 += (long) (x7k - fc5.X7k);
                fc5.X7k = x7k;
                obj0.xT1 = num2;
                return obj0.\u0034z4(obj1);
              }
            }
            this.SWO += ufv & u4W.bc1[h79_1];
            ufv >>= h79_1;
            x64 -= h79_1;
            this.D46 = (int) this.\u00375t;
            this.\u003561 = this.\u00337T;
            this.\u0033c9 = this.Yr4;
            this.j48 = 3;
            goto case 3;
          case 3:
            int d46_2;
            for (d46_2 = this.D46; x64 < d46_2; x64 += 8)
            {
              if (num1 != 0)
              {
                obj1 = 0;
                --num1;
                ufv |= ((int) fc5.\u0033Dp[x7k++] & (int) byte.MaxValue) << x64;
              }
              else
              {
                obj0.Ufv = ufv;
                obj0.x64 = x64;
                fc5.\u0032Dc = num1;
                fc5.m21 += (long) (x7k - fc5.X7k);
                fc5.X7k = x7k;
                obj0.xT1 = num2;
                return obj0.\u0034z4(obj1);
              }
            }
            int index2 = (this.\u0033c9 + (ufv & u4W.bc1[d46_2])) * 3;
            ufv >>= this.\u003561[index2 + 1];
            x64 -= this.\u003561[index2 + 1];
            int num6 = this.\u003561[index2];
            if ((num6 & 16) != 0)
            {
              this.H79 = num6 & 15;
              this.\u0034e1 = this.\u003561[index2 + 2];
              this.j48 = 4;
              continue;
            }
            if ((num6 & 64) == 0)
            {
              this.D46 = num6;
              this.\u0033c9 = index2 / 3 + this.\u003561[index2 + 2];
              continue;
            }
            goto label_37;
          case 4:
            int h79_2;
            for (h79_2 = this.H79; x64 < h79_2; x64 += 8)
            {
              if (num1 != 0)
              {
                obj1 = 0;
                --num1;
                ufv |= ((int) fc5.\u0033Dp[x7k++] & (int) byte.MaxValue) << x64;
              }
              else
              {
                obj0.Ufv = ufv;
                obj0.x64 = x64;
                fc5.\u0032Dc = num1;
                fc5.m21 += (long) (x7k - fc5.X7k);
                fc5.X7k = x7k;
                obj0.xT1 = num2;
                return obj0.\u0034z4(obj1);
              }
            }
            this.\u0034e1 += ufv & u4W.bc1[h79_2];
            ufv >>= h79_2;
            x64 -= h79_2;
            this.j48 = 5;
            goto case 5;
          case 5:
            int num7 = num2 - this.\u0034e1;
            while (num7 < 0)
              num7 += obj0.\u0034u3;
            for (; this.SWO != 0; --this.SWO)
            {
              if (num3 == 0)
              {
                if (num2 == obj0.\u0034u3 && obj0.\u0032Ro != 0)
                {
                  num2 = 0;
                  num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
                }
                if (num3 == 0)
                {
                  obj0.xT1 = num2;
                  obj1 = obj0.\u0034z4(obj1);
                  num2 = obj0.xT1;
                  num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
                  if (num2 == obj0.\u0034u3 && obj0.\u0032Ro != 0)
                  {
                    num2 = 0;
                    num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
                  }
                  if (num3 == 0)
                  {
                    obj0.Ufv = ufv;
                    obj0.x64 = x64;
                    fc5.\u0032Dc = num1;
                    fc5.m21 += (long) (x7k - fc5.X7k);
                    fc5.X7k = x7k;
                    obj0.xT1 = num2;
                    return obj0.\u0034z4(obj1);
                  }
                }
              }
              obj0.J5t[num2++] = obj0.J5t[num7++];
              --num3;
              if (num7 == obj0.\u0034u3)
                num7 = 0;
            }
            this.j48 = 0;
            continue;
          case 6:
            if (num3 == 0)
            {
              if (num2 == obj0.\u0034u3 && obj0.\u0032Ro != 0)
              {
                num2 = 0;
                num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
              }
              if (num3 == 0)
              {
                obj0.xT1 = num2;
                obj1 = obj0.\u0034z4(obj1);
                num2 = obj0.xT1;
                num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
                if (num2 == obj0.\u0034u3 && obj0.\u0032Ro != 0)
                {
                  num2 = 0;
                  num3 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
                }
                if (num3 == 0)
                  goto label_67;
              }
            }
            obj1 = 0;
            obj0.J5t[num2++] = (byte) this.\u003751;
            --num3;
            this.j48 = 0;
            continue;
          case 7:
            goto label_69;
          case 8:
            goto label_74;
          case 9:
            goto label_75;
          default:
            goto label_76;
        }
      }
label_21:
      this.j48 = 9;
      fc5.\u00335v = "invalid literal/length code";
      obj1 = -3;
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
label_37:
      this.j48 = 9;
      fc5.\u00335v = "invalid distance code";
      obj1 = -3;
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
label_67:
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
label_69:
      if (x64 > 7)
      {
        x64 -= 8;
        ++num1;
        --x7k;
      }
      obj0.xT1 = num2;
      obj1 = obj0.\u0034z4(obj1);
      num2 = obj0.xT1;
      int num8 = num2 < obj0.\u0032Ro ? obj0.\u0032Ro - num2 - 1 : obj0.\u0034u3 - num2;
      if (obj0.\u0032Ro != obj0.xT1)
      {
        obj0.Ufv = ufv;
        obj0.x64 = x64;
        fc5.\u0032Dc = num1;
        fc5.m21 += (long) (x7k - fc5.X7k);
        fc5.X7k = x7k;
        obj0.xT1 = num2;
        return obj0.\u0034z4(obj1);
      }
      this.j48 = 8;
label_74:
      obj1 = 1;
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
label_75:
      obj1 = -3;
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
label_76:
      obj1 = -2;
      obj0.Ufv = ufv;
      obj0.x64 = x64;
      fc5.\u0032Dc = num1;
      fc5.m21 += (long) (x7k - fc5.X7k);
      fc5.X7k = x7k;
      obj0.xT1 = num2;
      return obj0.\u0034z4(obj1);
    }

    internal int \u0039g9(
      [In] int obj0,
      [In] int obj1,
      [In] int[] obj2,
      [In] int obj3,
      [In] int[] obj4,
      [In] int obj5,
      [In] \u00392I obj6,
      [In] \u0033t2 obj7)
    {
      int x7k = obj7.X7k;
      int num1 = obj7.\u0032Dc;
      int num2 = obj6.Ufv;
      int num3 = obj6.x64;
      int destinationIndex = obj6.xT1;
      int num4 = destinationIndex < obj6.\u0032Ro ? obj6.\u0032Ro - destinationIndex - 1 : obj6.\u0034u3 - destinationIndex;
      int num5 = u4W.bc1[obj0];
      int num6 = u4W.bc1[obj1];
      do
      {
        for (; num3 < 20; num3 += 8)
        {
          --num1;
          num2 |= ((int) obj7.\u0033Dp[x7k++] & (int) byte.MaxValue) << num3;
        }
        int num7 = num2 & num5;
        int[] numArray1 = obj2;
        int num8 = obj3;
        int index1 = (num8 + num7) * 3;
        int index2;
        if ((index2 = numArray1[index1]) == 0)
        {
          num2 >>= numArray1[index1 + 1];
          num3 -= numArray1[index1 + 1];
          obj6.J5t[destinationIndex++] = (byte) numArray1[index1 + 2];
          --num4;
        }
        else
        {
          do
          {
            num2 >>= numArray1[index1 + 1];
            num3 -= numArray1[index1 + 1];
            if ((index2 & 16) != 0)
            {
              int index3 = index2 & 15;
              int length1 = numArray1[index1 + 2] + (num2 & u4W.bc1[index3]);
              int num9 = num2 >> index3;
              int num10;
              for (num10 = num3 - index3; num10 < 15; num10 += 8)
              {
                --num1;
                num9 |= ((int) obj7.\u0033Dp[x7k++] & (int) byte.MaxValue) << num10;
              }
              int num11 = num9 & num6;
              int[] numArray2 = obj4;
              int num12 = obj5;
              int index4 = (num12 + num11) * 3;
              int index5 = numArray2[index4];
              while (true)
              {
                num9 >>= numArray2[index4 + 1];
                num10 -= numArray2[index4 + 1];
                if ((index5 & 16) == 0)
                {
                  if ((index5 & 64) == 0)
                  {
                    num11 = num11 + numArray2[index4 + 2] + (num9 & u4W.bc1[index5]);
                    index4 = (num12 + num11) * 3;
                    index5 = numArray2[index4];
                  }
                  else
                    goto label_30;
                }
                else
                  break;
              }
              int index6;
              for (index6 = index5 & 15; num10 < index6; num10 += 8)
              {
                --num1;
                num9 |= ((int) obj7.\u0033Dp[x7k++] & (int) byte.MaxValue) << num10;
              }
              int num13 = numArray2[index4 + 2] + (num9 & u4W.bc1[index6]);
              num2 = num9 >> index6;
              num3 = num10 - index6;
              num4 -= length1;
              int sourceIndex1;
              int num14;
              if (destinationIndex >= num13)
              {
                int sourceIndex2 = destinationIndex - num13;
                if (destinationIndex - sourceIndex2 > 0 && 2 > destinationIndex - sourceIndex2)
                {
                  byte[] j5t1 = obj6.J5t;
                  int index7 = destinationIndex;
                  int num15 = index7 + 1;
                  byte[] j5t2 = obj6.J5t;
                  int index8 = sourceIndex2;
                  int num16 = index8 + 1;
                  int num17 = (int) j5t2[index8];
                  j5t1[index7] = (byte) num17;
                  byte[] j5t3 = obj6.J5t;
                  int index9 = num15;
                  destinationIndex = index9 + 1;
                  byte[] j5t4 = obj6.J5t;
                  int index10 = num16;
                  sourceIndex1 = index10 + 1;
                  int num18 = (int) j5t4[index10];
                  j5t3[index9] = (byte) num18;
                  length1 -= 2;
                }
                else
                {
                  Array.Copy((Array) obj6.J5t, sourceIndex2, (Array) obj6.J5t, destinationIndex, 2);
                  destinationIndex += 2;
                  sourceIndex1 = sourceIndex2 + 2;
                  length1 -= 2;
                }
              }
              else
              {
                sourceIndex1 = destinationIndex - num13;
                do
                {
                  sourceIndex1 += obj6.\u0034u3;
                }
                while (sourceIndex1 < 0);
                int length2 = obj6.\u0034u3 - sourceIndex1;
                if (length1 > length2)
                {
                  length1 -= length2;
                  if (destinationIndex - sourceIndex1 > 0 && length2 > destinationIndex - sourceIndex1)
                  {
                    do
                    {
                      obj6.J5t[destinationIndex++] = obj6.J5t[sourceIndex1++];
                    }
                    while (--length2 != 0);
                  }
                  else
                  {
                    Array.Copy((Array) obj6.J5t, sourceIndex1, (Array) obj6.J5t, destinationIndex, length2);
                    destinationIndex += length2;
                    num14 = sourceIndex1 + length2;
                  }
                  sourceIndex1 = 0;
                }
              }
              if (destinationIndex - sourceIndex1 > 0 && length1 > destinationIndex - sourceIndex1)
              {
                do
                {
                  obj6.J5t[destinationIndex++] = obj6.J5t[sourceIndex1++];
                }
                while (--length1 != 0);
                goto label_37;
              }
              else
              {
                Array.Copy((Array) obj6.J5t, sourceIndex1, (Array) obj6.J5t, destinationIndex, length1);
                destinationIndex += length1;
                num14 = sourceIndex1 + length1;
                goto label_37;
              }
label_30:
              obj7.\u00335v = "invalid distance code";
              int num19 = obj7.\u0032Dc - num1;
              int num20 = num10 >> 3 < num19 ? num10 >> 3 : num19;
              int num21 = num1 + num20;
              int num22 = x7k - num20;
              int num23 = num10 - (num20 << 3);
              obj6.Ufv = num9;
              obj6.x64 = num23;
              obj7.\u0032Dc = num21;
              obj7.m21 += (long) (num22 - obj7.X7k);
              obj7.X7k = num22;
              obj6.xT1 = destinationIndex;
              return -3;
            }
            if ((index2 & 64) == 0)
            {
              num7 = num7 + numArray1[index1 + 2] + (num2 & u4W.bc1[index2]);
              index1 = (num8 + num7) * 3;
            }
            else
              goto label_34;
          }
          while ((index2 = numArray1[index1]) != 0);
          num2 >>= numArray1[index1 + 1];
          num3 -= numArray1[index1 + 1];
          obj6.J5t[destinationIndex++] = (byte) numArray1[index1 + 2];
          --num4;
          goto label_37;
label_34:
          if ((index2 & 32) != 0)
          {
            int num24 = obj7.\u0032Dc - num1;
            int num25 = num3 >> 3 < num24 ? num3 >> 3 : num24;
            int num26 = num1 + num25;
            int num27 = x7k - num25;
            int num28 = num3 - (num25 << 3);
            obj6.Ufv = num2;
            obj6.x64 = num28;
            obj7.\u0032Dc = num26;
            obj7.m21 += (long) (num27 - obj7.X7k);
            obj7.X7k = num27;
            obj6.xT1 = destinationIndex;
            return 1;
          }
          obj7.\u00335v = "invalid literal/length code";
          int num29 = obj7.\u0032Dc - num1;
          int num30 = num3 >> 3 < num29 ? num3 >> 3 : num29;
          int num31 = num1 + num30;
          int num32 = x7k - num30;
          int num33 = num3 - (num30 << 3);
          obj6.Ufv = num2;
          obj6.x64 = num33;
          obj7.\u0032Dc = num31;
          obj7.m21 += (long) (num32 - obj7.X7k);
          obj7.X7k = num32;
          obj6.xT1 = destinationIndex;
          return -3;
        }
label_37:;
      }
      while (num4 >= 258 && num1 >= 10);
      int num34 = obj7.\u0032Dc - num1;
      int num35 = num3 >> 3 < num34 ? num3 >> 3 : num34;
      int num36 = num1 + num35;
      int num37 = x7k - num35;
      int num38 = num3 - (num35 << 3);
      obj6.Ufv = num2;
      obj6.x64 = num38;
      obj7.\u0032Dc = num36;
      obj7.m21 += (long) (num37 - obj7.X7k);
      obj7.X7k = num37;
      obj6.xT1 = destinationIndex;
      return 0;
    }
  }
}
