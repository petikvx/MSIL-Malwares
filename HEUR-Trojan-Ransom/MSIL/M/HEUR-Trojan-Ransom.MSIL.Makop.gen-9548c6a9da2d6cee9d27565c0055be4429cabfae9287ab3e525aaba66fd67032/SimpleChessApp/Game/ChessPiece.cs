// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: p的, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E9517A17-41D2-4860-BC69-C7D574C89AF9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-9548c6a9da2d6cee9d27565c0055be4429cabfae9287ab3e525aaba66fd67032.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
      this.Id = ChessPiece.idd++;
      this.Kind = p;
      this.Color = c;
      this.Current = this.Home = h;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
label_1:
      int num1 = 1321920878;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 254562387)) % 7U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 37880928 ^ 157309777;
            continue;
          case 2:
            this.Color = c;
            num1 = (int) num2 * 1541937054 ^ 1183086454;
            continue;
          case 3:
            num1 = (int) num2 * -441603948 ^ 1494124067;
            continue;
          case 4:
            this.Kind = p;
            num1 = (int) num2 * -778338236 ^ -716046707;
            continue;
          case 5:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * 1972896989 ^ 1736315607;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    public string SpecialName
    {
      get
      {
label_1:
        int num1 = -1668926205;
        string specialName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -201673284)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 110693605 ^ 218221727;
              continue;
            case 3:
              specialName = ChessPiece.\u206D⁭‍⁪‎‏⁬‍‭​⁬⁪‮⁪⁭‌⁭‪‬‌‫‍⁮‪‮‏​⁭‎‪⁪‍‪⁫‮⁫‭‏⁯⁯‮(\u003CModule\u003E.\u206D‏⁯‬‫‫‍⁭‬‪⁪‪‌‭‭‪‎⁮‭‌‍‭‏⁪​‎‭‏‪‍⁫⁭‏⁯‏⁯⁫‮⁬‮‮<string>(2258770078U), (object) this.Current.Name, (object) this.Kind);
              num1 = (int) num2 * 583333495 ^ -1211481004;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return specialName;
      }
    }

    static string \u206D⁭‍⁪‎‏⁬‍‭​⁬⁪‮⁪⁭‌⁭‪‬‌‫‍⁮‪‮‏​⁭‎‪⁪‍‪⁫‮⁫‭‏⁯⁯‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
