// Decompiled with JetBrains decompiler
// Type: blue_batch_virus_maker_v_2._4.Form1
// Assembly: blue batch virus maker v 2.4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2DAFA7DD-2FE8-4FC2-9A4A-71538C37F4F9
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Constructor.Win32.BAT.q-08ee2f8c3aa3c7eab228bd2f1b4a63e07fd7671a3929619d4d3486bad87f8200.exe

using blue_batch_virus_maker_v_2._4.My;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace blue_batch_virus_maker_v_2._4
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("RichTextBox1")]
    private RichTextBox _RichTextBox1;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    public Form1()
    {
      this.KeyDown += new KeyEventHandler(this.Form1_KeyDown);
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (Form1.__ENCList)
      {
        if (Form1.__ENCList.Count == Form1.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (Form1.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (Form1.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                Form1.__ENCList[index1] = Form1.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          Form1.__ENCList.RemoveRange(index1, checked (Form1.__ENCList.Count - index1));
          Form1.__ENCList.Capacity = Form1.__ENCList.Count;
        }
        Form1.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.RichTextBox1 = new RichTextBox();
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.TextBox1 = new TextBox();
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.SuspendLayout();
      this.RichTextBox1.BackColor = SystemColors.WindowFrame;
      this.RichTextBox1.ForeColor = Color.Lime;
      RichTextBox richTextBox1_1 = this.RichTextBox1;
      Point point1 = new Point(12, 8);
      Point point2 = point1;
      richTextBox1_1.Location = point2;
      this.RichTextBox1.Name = "RichTextBox1";
      this.RichTextBox1.ReadOnly = true;
      RichTextBox richTextBox1_2 = this.RichTextBox1;
      Size size1 = new Size(293, 167);
      Size size2 = size1;
      richTextBox1_2.Size = size2;
      this.RichTextBox1.TabIndex = 3;
      this.RichTextBox1.Text = componentResourceManager.GetString("RichTextBox1.Text");
      this.Button1.BackColor = Color.Lime;
      Button button1_1 = this.Button1;
      point1 = new Point(199, 220);
      Point point3 = point1;
      button1_1.Location = point3;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(118, 40);
      Size size3 = size1;
      button1_2.Size = size3;
      this.Button1.TabIndex = 4;
      this.Button1.Text = "Next";
      this.Button1.UseVisualStyleBackColor = false;
      this.Button1.Visible = false;
      this.Button2.BackColor = Color.Red;
      Button button2_1 = this.Button2;
      point1 = new Point(1, 220);
      Point point4 = point1;
      button2_1.Location = point4;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(118, 40);
      Size size4 = size1;
      button2_2.Size = size4;
      this.Button2.TabIndex = 8;
      this.Button2.Text = "Leave";
      this.Button2.UseVisualStyleBackColor = false;
      this.TextBox1.BackColor = Color.Black;
      this.TextBox1.ForeColor = Color.Yellow;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(12, 194);
      Point point5 = point1;
      textBox1_1.Location = point5;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(260, 20);
      Size size5 = size1;
      textBox1_2.Size = size5;
      this.TextBox1.TabIndex = 9;
      this.Label1.AutoSize = true;
      this.Label1.ForeColor = Color.Lime;
      Label label1_1 = this.Label1;
      point1 = new Point(177, 178);
      Point point6 = point1;
      label1_1.Location = point6;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(98, 13);
      Size size6 = size1;
      label1_2.Size = size6;
      this.Label1.TabIndex = 10;
      this.Label1.Text = "You may enter now";
      this.Label1.Visible = false;
      this.Label2.AutoSize = true;
      this.Label2.ForeColor = Color.Red;
      Label label2_1 = this.Label2;
      point1 = new Point(196, 178);
      Point point7 = point1;
      label2_1.Location = point7;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(52, 13);
      Size size7 = size1;
      label2_2.Size = size7;
      this.Label2.TabIndex = 11;
      this.Label2.Text = "Try Again";
      this.Label2.Visible = false;
      this.Label3.AutoSize = true;
      this.Label3.BackColor = Color.Black;
      this.Label3.ForeColor = Color.Yellow;
      Label label3_1 = this.Label3;
      point1 = new Point(24, 178);
      Point point8 = point1;
      label3_1.Location = point8;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(115, 13);
      Size size8 = size1;
      label3_2.Size = size8;
      this.Label3.TabIndex = 12;
      this.Label3.Text = "Do u agree to the rules";
      this.Label4.AutoSize = true;
      this.Label4.ForeColor = Color.Yellow;
      Label label4_1 = this.Label4;
      point1 = new Point(278, 197);
      Point point9 = point1;
      label4_1.Location = point9;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(27, 13);
      Size size9 = size1;
      label4_2.Size = size9;
      this.Label4.TabIndex = 13;
      this.Label4.Text = "I Do";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.Black;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(317, 259);
      this.ClientSize = size1;
      this.ControlBox = false;
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.RichTextBox1);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = nameof (Form1);
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Warning";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual RichTextBox RichTextBox1
    {
      [DebuggerNonUserCode] get => this._RichTextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RichTextBox1_TextChanged);
        if (this._RichTextBox1 != null)
          this._RichTextBox1.TextChanged -= eventHandler;
        this._RichTextBox1 = value;
        if (this._RichTextBox1 == null)
          return;
        this._RichTextBox1.TextChanged += eventHandler;
      }
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click_1);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click_1);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TextBox1_TextChanged_1);
        MouseEventHandler mouseEventHandler = new MouseEventHandler(this.TextBox1_MouseTripleClick);
        if (this._TextBox1 != null)
        {
          this._TextBox1.TextChanged -= eventHandler;
          this._TextBox1.MouseDoubleClick -= mouseEventHandler;
        }
        this._TextBox1 = value;
        if (this._TextBox1 == null)
          return;
        this._TextBox1.TextChanged += eventHandler;
        this._TextBox1.MouseDoubleClick += mouseEventHandler;
      }
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Label Label3
    {
      [DebuggerNonUserCode] get => this._Label3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual Label Label4
    {
      [DebuggerNonUserCode] get => this._Label4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Button2_Click(object sender, EventArgs e) => ProjectData.EndApp();

    private void TextBox1_TextChanged(object sender, EventArgs e)
    {
    }

    private void Form1_KeyDown(object sender, KeyEventArgs e)
    {
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      MyProject.Forms.batch_maker.Show();
      this.Hide();
    }

    private void LinkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
    {
    }

    private void CheckBox1_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void RichTextBox1_TextChanged(object sender, EventArgs e)
    {
    }

    private void RadioButton2_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void RadioButton1_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void Form1_Load(object sender, EventArgs e)
    {
    }

    private void RadioButton1_CheckedChanged_1(object sender, EventArgs e) => this.Button1.Visible = true;

    private void RadioButton2_CheckedChanged_1(object sender, EventArgs e) => this.Button1.Visible = false;

    private void Button1_Click_1(object sender, EventArgs e)
    {
      MyProject.Forms.batch_maker.Show();
      this.Hide();
    }

    private void CheckBox1_CheckedChanged_1(object sender, EventArgs e)
    {
    }

    private void CheckBox1_MouseLeave(object sender, EventArgs e)
    {
    }

    private void TextBox1_MouseTripleClick(object sender, MouseEventArgs e)
    {
      MyProject.Forms.batch_maker.Show();
      this.Hide();
    }

    private void TextBox1_TextChanged_1(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.TextBox1.Text, "yes", false) == 0)
      {
        this.Label1.Visible = true;
        this.Button1.Visible = true;
        this.Label2.Visible = false;
      }
      else
      {
        if (Operators.CompareString(this.TextBox1.Text, "Yes", false) == 0)
        {
          this.Label1.Visible = true;
          this.Label2.Visible = false;
          this.Button1.Visible = true;
        }
        if (Operators.CompareString(this.TextBox1.Text, "ye", false) == 0)
        {
          this.Label2.Visible = true;
          this.Label1.Visible = false;
          this.Button1.Visible = false;
        }
        else
        {
          if (Operators.CompareString(this.TextBox1.Text, "Ye", false) == 0)
          {
            this.Label2.Visible = false;
            this.Label1.Visible = true;
            this.Button1.Visible = false;
          }
          if (Operators.CompareString(this.TextBox1.Text, "y", false) == 0)
          {
            this.Label1.Visible = false;
            this.Label2.Visible = true;
            this.Button1.Visible = false;
          }
          else if (Operators.CompareString(this.TextBox1.Text, "Y", false) == 0)
          {
            this.Label1.Visible = false;
            this.Label1.Visible = true;
            this.Button1.Visible = false;
          }
        }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Button2_Click_1(object sender, EventArgs e) => ProjectData.EndApp();
  }
}
