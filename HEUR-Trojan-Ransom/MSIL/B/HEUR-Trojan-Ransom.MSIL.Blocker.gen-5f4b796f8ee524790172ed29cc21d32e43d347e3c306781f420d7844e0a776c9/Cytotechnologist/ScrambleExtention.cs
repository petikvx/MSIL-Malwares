// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: LoadHi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 984E9D2E-DA60-4984-B27B-15EC3C1BAA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-5f4b796f8ee524790172ed29cc21d32e43d347e3c306781f420d7844e0a776c9.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u202A‪‏⁭⁭‫⁫‭‎‬‮‪‌‬‪‌‌⁫‎‮⁬⁫‫⁯⁪‫‍⁪⁪⁪‎⁪​⁪‏‪⁯‬‎‬‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_7:
      bool flag = count > 1;
      int num1 = -58471937;
      T obj;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -798548537)) % 13U)
        {
          case 0:
            num1 = (int) num2 * 180468797 ^ -2047852508;
            continue;
          case 1:
            int num3 = !flag ? -28082015 : (num3 = -1143811430);
            num1 = num3 ^ (int) num2 * 888029546;
            continue;
          case 2:
            index = ScrambleExtention.\u200E‬⁬⁪⁯‮‏‎⁬⁭‪‭‪‎‭​‪‎‬‏⁯‪‎⁪​⁬‎‮‬⁫⁫​‭‬⁪‍‍⁬‍⁯‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 51471117 ^ 1762552511;
            continue;
          case 3:
            --count;
            num1 = (int) num2 * -167476010 ^ -427789574;
            continue;
          case 4:
            num1 = (int) num2 * -912285891 ^ 399342803;
            continue;
          case 5:
            list[count] = obj;
            num1 = (int) num2 * -1906663195 ^ -2114658175;
            continue;
          case 6:
            list[index] = list[count];
            num1 = (int) num2 * -1890344701 ^ 539264098;
            continue;
          case 7:
            num1 = -413088342;
            continue;
          case 8:
            obj = list[index];
            num1 = (int) num2 * -1806929726 ^ -1421053533;
            continue;
          case 9:
            num1 = (int) num2 * 1002917132 ^ -429336997;
            continue;
          case 10:
            num1 = -136007953;
            continue;
          case 11:
            goto label_3;
          case 12:
            goto label_7;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u200E‬⁬⁪⁯‮‏‎⁬⁭‪‭‪‎‭​‪‎‬‏⁯‪‎⁪​⁬‎‮‬⁫⁫​‭‬⁪‍‍⁬‍⁯‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u202A‪‏⁭⁭‫⁫‭‎‬‮‪‌‬‪‌‌⁫‎‮⁬⁫‫⁯⁪‫‍⁪⁪⁪‎⁪​⁪‏‪⁯‬‎‬‮() => new Random();
  }
}
