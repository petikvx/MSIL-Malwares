<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="x" type="System.Byte[], mscorlib">
    <value>
        TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0K
        JAAAAAAAAABQRQAATAEDAFWUtlAAAAAAAAAAAOAAAiELAQgAAAwAAAAEAAAAAAAAsisAAAAgAAAAQAAA
        AABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAIAQIUAABAAABAAAAAAEAAAEAAA
        AAAAABAAAAAAAAAAAAAAAGgrAABKAAAAAEAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAA
        CCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAuAsAAAAgAAAADAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNy
        YwAAABAAAAAAQAAAAAIAAAAOAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAAEAAA
        AAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACYKwAAAAAAAEgAAAACAAUANCEAAHwJAAABAAAA
        AAAAALAqAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoq
        EzAEAJIAAAABAAARcxAAAAoLcxEAAAoKBigSAAAKA28TAAAKbxQAAAoTBBYCbxUAAAoXWRMHEwUrTXIB
        AABwAhEFGG8WAAAKKBcAAAooGAAAChEECJFuYWkoGQAACigaAAAKEwYHEQZvGwAACiYIA28VAAAKF1kz
        BBYMKwQIF1gMEQUYWBMFEQURBzGtKBwAAAoHbx0AAApvEwAACioAAFZzBAAABigeAAAKdAMAAAKAAQAA
        BCoAAB4CKB8AAAoqEzABAAYAAAACAAARfgEAAAQqAAAeAiggAAAKKkJTSkIBAAEAAAAAAAwAAAB2Mi4w
        LjUwNzI3AAAAAAUAbAAAACwDAAAjfgAAmAMAABgEAAAjU3RyaW5ncwAAAACwBwAACAAAACNVUwC4BwAA
        EAAAACNHVUlEAAAAyAcAALQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAAEAABAAAAAAEAAAAaAAAA
        BAAAAAEAAAAGAAAAAwAAACAAAAAPAAAAAgAAAAEAAAABAAAAAQAAAAEAAAADAAAAAQAAAAAAAQABAAAA
        AAAGABsAIgAKADkAUQAGAJIAIgAGANoA9wAGAAkB9wAGACIB9wAGADsBWQEGAHkB9wAGAJYB9wAGALEB
        WQEGANEB9wAGAOgB9gEGABUC9gEGACkC9wAKAEQCWwIGAHMCWQEKAI4CpwIKAL0CpwIGAOgC9gIGAAID
        GwMGADgD9gIGAFQDGwMGAG4DIgAOAKcDswMOAOEDkQMKAP0DUQAAAAAACQAAAAAAAQABAAEAAAAHAAcA
        BQABAAEAAAEQACkANAAJAAEAAwABARAAZgB5AA0AAgAGABEAnAAKAFAgAAAAAAYYrAAOAAEAWCAAAAAA
        FgAHABIAAQD4IAAAAAARGL0AGQADABAhAAAAAAYYrAAOAAMAGCEAAAAAFgjEAB0AAwAsIQAAAACGGKwA
        IgADAAAAAQCyAAAAAgC4AAAAAQDQACEArAAiACkArAAiADEArAAiADkArAAOAEEArAAiAEkArAAiAFEA
        rACkAFkArAAiAGEArAAiAGkArADcAHEArAAiAHkArADhAIEArAAOAIkArABGAQkArAAOAJkArAAOAKEA
        rAAOAKkAQQNVAakASwNaAbEAYgNgAbkAdQNnAbkAgANrAbkAigNxAcEA2gOAAckA6QOFAcEA7QOKAZkA
        9gOPAakAxABVAZkA7QOVAdEACgSoAREArAAOABkArAAOAC4AMgAsAC4ACwBTAC4AEwBTAC4AGwBZAC4A
        IwBgAC4AKwB/AC4AMwCMAC4AOwCpAC4AQwBZAC4ASwCyAC4AUwBTAC4AWwBTAGMAYwDnAGMAawBBAWMA
        cwBMAZkBrwEDAAEAAADSACcAAgAFAAMAAAAAAAEAAAAAAAAAAAAAAAAABwAAAAIAAAAAAAAAAAAAAAEA
        EgAAAAAAAgAAAAAAAAAAAAAAAQAiAAAAAAAIAAAAAAAAAAAAAAB3AZEDAAAAAAAAAAABAAAA0gIAAAAA
        AHguZGxsAHgAPE1vZHVsZT4AbXNjb3JsaWIAT2JqZWN0AFN5c3RlbQBNeVNldHRpbmdzAHguTXkAQXBw
        bGljYXRpb25TZXR0aW5nc0Jhc2UAU3lzdGVtLkNvbmZpZ3VyYXRpb24AUG93ZXJlZEJ5QXR0cmlidXRl
        AFNtYXJ0QXNzZW1ibHkuQXR0cmlidXRlcwBBdHRyaWJ1dGUAZGVmYXVsdEluc3RhbmNlAC5jdG9yAElu
        cHV0AHBhc3MALmNjdG9yAGdldF9EZWZhdWx0AHMARGVmYXVsdABBc3NlbWJseURlc2NyaXB0aW9uQXR0
        cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
        b2R1Y3RBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
        Q29tcGlsZXJTZXJ2aWNlcwBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
        Z2h0QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
        dHJpYnV0ZQBHdWlkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBDb21WaXNp
        YmxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1
        dGUAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARWRpdG9y
        QnJvd3NhYmxlQXR0cmlidXRlAFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVTdGF0
        ZQB4LlJlc291cmNlcy5yZXNvdXJjZXMAU3RyaW5nQnVpbGRlcgBTeXN0ZW0uVGV4dABNRDVDcnlwdG9T
        ZXJ2aWNlUHJvdmlkZXIAU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeQBFbmNvZGluZwBnZXRfQVND
        SUkAR2V0Qnl0ZXMASGFzaEFsZ29yaXRobQBDb21wdXRlSGFzaABTdHJpbmcAZ2V0X0xlbmd0aABTdWJz
        dHJpbmcAQ29uY2F0AE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBDb252ZXJzaW9ucwBNaWNyb3NvZnQuVmlz
        dWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBUb0xvbmcAU3RyaW5ncwBDaHIAVG9TdHJpbmcAQXBwZW5k
        AFNldHRpbmdzQmFzZQBTeW5jaHJvbml6ZWQAAAAFJgBIAAAALmZathqeoka/miHC470vfwAIt3pcVhk0
        4IkDBhIMAyAAAQYAAh0FDg4DAAABBAAAEgwEIAEBDgQIABIMJgEAIVBvd2VyZWQgYnkgU21hcnRBc3Nl
        bWJseSA2LjYuMy40MQAABQEAAAAABgEAAXgAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEM
        AQAHMS4wLjAuMAAAFwEAEkNvcHlyaWdodCDCqSAgMjAxMgAABCABAQgIAQAIAAAAAAApAQAkZDA4NWQ3
        MjUtYzFlNS00MTUxLWE0MmUtMmJjYWZiZTA1NmYzAAAEIAEBAgUgAgEODlkBAEtNaWNyb3NvZnQuVmlz
        dWFsU3R1ZGlvLkVkaXRvcnMuU2V0dGluZ3NEZXNpZ25lci5TZXR0aW5nc1NpbmdsZUZpbGVHZW5lcmF0
        b3IIMTAuMC4wLjAAAAQBAAAABSABARFJCAEAAgAAAAAABAAAElUFIAEdBQ4GIAEdBR0FAyAACAUgAg4I
        CAUAAg4ODgiwP19/EdUKOgQAAQoOBAABAwgEAAEOAwUgARJNDgMgAA4OBwgSURJNCB0FHQUIDggGAAES
        aRJpBAcBEgy0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
        Y29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
        YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
        AFBBRFBBRFC0AAAAkCsAAAAAAAAAAAAApisAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgrAAAAAAAA
        AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAD/JQAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAtDsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
  <data name="_4" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>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</value>
  </data>
</root>