// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: MemberAccessExcepti, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 46220647-D1CE-4792-A51F-9B328C1E60FB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\Backdoor.MSIL.Crysan.dst-d95fbf8fa85f2534926c1be2d0a82ad2fc89b2ed31ad42155ca0b92b9d959ccf.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count => 0;

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_Childs\u003Ed__17(-2);

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString() => \u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(1375867028U);

    public virtual string ToString(string aPrefix) => \u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(226269205U);

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        if (int.TryParse(this.Value, out result))
        {
label_1:
          uint num;
          switch ((num = (uint) (-179426397 ^ -1476761921)) % 3U)
          {
            case 1:
              return result;
            case 2:
              goto label_1;
          }
        }
        return 0;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        if (float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‏‪‫‬‮‌‎‍‬‎‭‌⁬‏‬⁫‮⁯‭‏⁫‌⁯‭⁬‮‎⁫⁯⁪⁪‏⁪⁭⁪‎⁯⁯‍‮(), out result))
        {
label_1:
          uint num;
          switch ((num = (uint) (-386820783 ^ -975378369)) % 3U)
          {
            case 1:
              return result;
            case 2:
              goto label_1;
          }
        }
        return 0.0f;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -519543583;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -466839213)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              int num3 = !double.TryParse(this.Value, out result) ? -1084784196 : (num3 = -2133286222);
              num1 = num3 ^ (int) num2 * -1865658153;
              continue;
            case 3:
              goto label_4;
            default:
              goto label_5;
          }
        }
label_4:
        return result;
label_5:
        return 0.0;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 110419651;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 480646681)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_4;
            case 2:
              int num3 = !bool.TryParse(this.Value, out result) ? 1968954298 : (num3 = 540697604);
              num1 = num3 ^ (int) num2 * -331937316;
              continue;
            default:
              goto label_5;
          }
        }
label_4:
        return result;
label_5:
        return !JSONNode.\u200F‭‭⁪⁫‍⁫⁫‏‫‫‭‎‍‌‬‬⁪‬⁪‎‏‭‪⁫‭‏⁮⁭⁬⁬‍⁬‍⁬‬‮‭⁮⁪‮(this.Value);
      }
      set => this.Value = value ? \u003CModule\u003E.\u200B⁫⁯⁫⁪‏‪⁯⁬‏‍‮‭⁯‎⁬‍⁫⁮⁪‌‮‏‬⁮‭⁮⁯⁬‭‎‍‪​⁭‎‬⁮⁮‎‮<string>(1237765326U) : \u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(798761427U);
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject => this as JSONClass;

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
      if (!(d == (object) null))
      {
label_1:
        uint num;
        switch ((num = (uint) (-1627222040 ^ -244620182)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            return d.Value;
        }
      }
      return (string) null;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b == null)
      {
label_1:
        int num1 = -2090015939;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -786233004)) % 4U)
          {
            case 1:
              int num3 = (object) (a as JSONLazyCreator) == null ? -587066495 : (num3 = -1965943762);
              num1 = num3 ^ (int) num2 * 1314125745;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_4;
            default:
              goto label_5;
          }
        }
label_4:
        return true;
      }
label_5:
      return (object) a == b;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode() => this.\u206E⁬⁫⁮‌​‌​⁬⁪⁭‮‬⁭‪‎‍‎‫⁪‫‫⁮‫‎‎‎⁭⁮⁮‫​⁪‏‌⁫⁯​‎‍‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 2046916922;
      char ch;
      int num2;
      string str2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1911863517)) % 21U)
        {
          case 0:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u200B⁫⁯⁫⁪‏‪⁯⁬‏‍‮‭⁯‎⁬‍⁫⁮⁪‌‮‏‬⁮‭⁮⁯⁬‭‎‍‪​⁭‎‬⁮⁮‎‮<string>(2032003426U));
            num1 = 1091892266;
            continue;
          case 1:
            int num4 = ch != '\\' ? -102318174 : (num4 = -1530643425);
            num1 = num4 ^ (int) num3 * 1744898057;
            continue;
          case 2:
label_17:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(3265507994U));
            num1 = 1167364921;
            continue;
          case 3:
label_8:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(903715924U));
            num1 = 937927371;
            continue;
          case 4:
            num1 = (int) num3 * -1651120138 ^ -1806142319;
            continue;
          case 5:
            num1 = (int) num3 * 1747725154 ^ 1299197175;
            continue;
          case 6:
            ch = JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(str2, num2);
            switch (ch)
            {
              case '\b':
                goto label_9;
              case '\t':
                goto label_16;
              case '\n':
                goto label_17;
              case '\v':
                goto label_7;
              case '\f':
                goto label_13;
              case '\r':
                goto label_8;
              default:
                num1 = 1523659751;
                continue;
            }
          case 7:
            num1 = (int) num3 * 1145964947 ^ -1757536639;
            continue;
          case 9:
            goto label_1;
          case 10:
            int num5 = ch == '"' ? 1582206 : (num5 = 1113857626);
            num1 = num5 ^ (int) num3 * 768940742;
            continue;
          case 11:
label_7:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, ch.ToString());
            num1 = 937927371;
            continue;
          case 12:
label_16:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(3577036548U));
            num1 = 937927371;
            continue;
          case 13:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200D‫⁭⁬⁭‎⁪‪⁬⁯⁯‬‫⁯‍‭‎⁮⁬​⁫‎⁮‫‭⁯‮‍‪⁫‬‎⁫⁯‌‌‎‪⁭‪‮(str2) ? 787151769 : (num6 = 298713219);
            continue;
          case 14:
            num1 = (int) num3 * -2033432247 ^ -1706612017;
            continue;
          case 15:
label_13:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(3533205249U));
            num1 = 2134229560;
            continue;
          case 16:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u200C‪⁪‎‏‍‬‬‪‮‎‮⁯⁯‮⁫⁪‬‭⁫​⁭​‏⁯⁬⁪⁮⁮⁯‬‭‏‌‏‭⁪⁪‍‮<string>(557876868U));
            num1 = (int) num3 * 1394811224 ^ 521554891;
            continue;
          case 17:
            ++num2;
            num1 = 380425834;
            continue;
          case 18:
            num1 = (int) num3 * -911231806 ^ 1064601409;
            continue;
          case 19:
label_9:
            str1 = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(str1, \u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(2198365312U));
            num1 = 981959331;
            continue;
          case 20:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 1984448968 ^ 2045676818;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str1;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -2033532793;
      string aItem;
      string aKey;
      JSONNode jsonNode;
      int num2;
      bool flag;
      string s;
      char ch1;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1137952694)) % 107U)
        {
          case 0:
label_95:
            ++num2;
            int num4;
            num1 = num4 = flag ? -1303531108 : (num4 = -2088788269);
            continue;
          case 1:
            int num5;
            num1 = num5 = JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aKey, "") ? -404888707 : (num5 = -1378713701);
            continue;
          case 2:
            jsonNode.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -475097073 ^ 1818558370;
            continue;
          case 3:
            num1 = (int) num3 * -1181979280 ^ 1973853251;
            continue;
          case 4:
label_76:
            int num6;
            num1 = num6 = flag ? -1747605143 : (num6 = -234393195);
            continue;
          case 5:
            int num7 = !JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aItem, "") ? -1935298038 : (num7 = -1029298009);
            num1 = num7 ^ (int) num3 * 386353745;
            continue;
          case 6:
            int num8 = ch2 == '}' ? 1005016675 : (num8 = 1769999648);
            num1 = num8 ^ (int) num3 * 1585768206;
            continue;
          case 7:
            num1 = (int) num3 * 1769662190 ^ -814003305;
            continue;
          case 8:
            int num9 = jsonNode is JSONArray ? 1439263291 : (num9 = 503578285);
            num1 = num9 ^ (int) num3 * 1523208792;
            continue;
          case 9:
label_24:
            int num10;
            num1 = num10 = flag ? -1585282763 : (num10 = -1547213476);
            continue;
          case 10:
            goto label_60;
          case 11:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, \u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(2401962740U));
            num1 = -2088788269;
            continue;
          case 12:
            jsonNodeStack.Pop();
            num1 = -121233588;
            continue;
          case 13:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * 247488749 ^ 1485841941;
            continue;
          case 14:
            int num11 = ch2 != ' ' ? 1119609773 : (num11 = 1310899905);
            num1 = num11 ^ (int) num3 * 1425359019;
            continue;
          case 15:
            jsonNode.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1013452441 ^ 728920096;
            continue;
          case 16:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, \u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(2723137797U));
            num1 = -1222912807;
            continue;
          case 17:
            num1 = (int) num3 * -323573929 ^ -897611407;
            continue;
          case 18:
            aKey = aItem;
            num1 = -512613139;
            continue;
          case 19:
            num1 = (int) num3 * 682590189 ^ 1318190284;
            continue;
          case 20:
            num1 = (int) num3 * -521435611 ^ -349238164;
            continue;
          case 21:
label_99:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, \u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(4291744959U));
            num1 = -2088788269;
            continue;
          case 22:
label_101:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, ch1.ToString());
            num1 = -2088788269;
            continue;
          case 23:
            num1 = (int) num3 * 223952943 ^ -1633224468;
            continue;
          case 24:
            int num12;
            num1 = num12 = ch2 == '"' ? -1061199395 : (num12 = -1640878522);
            continue;
          case 25:
            ch2 = JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2);
            num1 = -390125812;
            continue;
          case 26:
            jsonNode.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1732971127 ^ 912478321;
            continue;
          case 27:
            aKey = "";
            num1 = -2125956991;
            continue;
          case 28:
            num1 = (int) num3 * 1960951757 ^ -1123909532;
            continue;
          case 29:
            jsonNode.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1470756500 ^ -2058204678;
            continue;
          case 30:
label_91:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, \u003CModule\u003E.\u200C‪⁪‎‏‍‬‬‪‮‎‮⁯⁯‮⁫⁪‬‭⁫​⁭​‏⁯⁬⁪⁮⁮⁯‬‭‏‌‏‭⁪⁪‍‮<string>(2120450865U));
            num1 = -2013612174;
            continue;
          case 31:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1496942938 ^ -410602635;
            continue;
          case 32:
            switch (ch2)
            {
              case '[':
                goto label_76;
              case '\\':
                goto label_95;
              case ']':
                goto label_24;
              default:
                num1 = (int) num3 * 2128074765 ^ -1553390115;
                continue;
            }
          case 33:
            int num13 = ch2 != ',' ? 1992266879 : (num13 = 1375672142);
            num1 = num13 ^ (int) num3 * 271561682;
            continue;
          case 34:
            num1 = (int) num3 * 756677286 ^ 562738011;
            continue;
          case 35:
            aKey = JSONNode.\u206E​⁭⁬⁮⁯​‌‪‍⁮‫⁮‮‮‍‮⁯⁮‮​‎‌​‬⁮⁬‫‫‬⁯⁯‏‬‍⁬⁯⁬⁭‌‮(aKey);
            num1 = (int) num3 * -1713964035 ^ -409770831;
            continue;
          case 36:
            int num14 = ch1 <= 'f' ? -454072367 : (num14 = -362783573);
            num1 = num14 ^ (int) num3 * 2116798896;
            continue;
          case 37:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * 602361423 ^ 650343854;
            continue;
          case 38:
            aItem = "";
            num1 = (int) num3 * 1827589259 ^ -728496709;
            continue;
          case 39:
            goto label_1;
          case 40:
            int num15 = ch2 != ':' ? -2072550520 : (num15 = -3594466);
            num1 = num15 ^ (int) num3 * -436115930;
            continue;
          case 41:
            int num16;
            num1 = num16 = !flag ? -226829922 : (num16 = -1000907553);
            continue;
          case 42:
            num1 = (int) num3 * 2029395018 ^ -1503404681;
            continue;
          case 43:
            int num17;
            num1 = num17 = num2 >= JSONNode.\u200D‫⁭⁬⁭‎⁪‪⁬⁯⁯‬‫⁯‍‭‎⁮⁬​⁫‎⁮‫‭⁯‮‍‪⁫‬‎⁫⁯‌‌‎‪⁭‪‮(aJSON) ? -1469337080 : (num17 = -1051093893);
            continue;
          case 44:
            aKey = "";
            num1 = -1683477207;
            continue;
          case 46:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, \u003CModule\u003E.\u200B⁫⁯⁫⁪‏‪⁯⁬‏‍‮‭⁯‎⁬‍⁫⁮⁪‌‮‏‬⁮‭⁮⁯⁬‭‎‍‪​⁭‎‬⁮⁮‎‮<string>(1411877433U));
            num1 = -2088788269;
            continue;
          case 47:
            int num18 = !(jsonNode is JSONArray) ? -974354088 : (num18 = -430440288);
            num1 = num18 ^ (int) num3 * -1460462853;
            continue;
          case 48:
            num1 = (int) num3 * 256110708 ^ 1568575455;
            continue;
          case 49:
            int num19 = jsonNode != (object) null ? 1228645736 : (num19 = 1102218125);
            num1 = num19 ^ (int) num3 * 547152529;
            continue;
          case 50:
            int num20;
            num1 = num20 = !JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aKey, "") ? -1808947476 : (num20 = -1077504742);
            continue;
          case 51:
            aItem = "";
            num1 = (int) num3 * 1686390321 ^ 529185572;
            continue;
          case 52:
            num1 = (int) num3 * -569441499 ^ 1209166983;
            continue;
          case 53:
            jsonNode.Add((JSONNode) aItem);
            num1 = (int) num3 * -1267959295 ^ 561051245;
            continue;
          case 54:
            aKey = "";
            aItem = "";
            num1 = -245817643;
            continue;
          case 55:
            int num21 = !flag ? 27077289 : (num21 = 1315478567);
            num1 = num21 ^ (int) num3 * 1287100251;
            continue;
          case 56:
            jsonNode.Add((JSONNode) aItem);
            num1 = (int) num3 * -2027165664 ^ -517436607;
            continue;
          case 57:
            int num22 = ch1 != 'f' ? -1289528154 : (num22 = -1316191592);
            num1 = num22 ^ (int) num3 * 1771472963;
            continue;
          case 58:
            int num23;
            num1 = num23 = JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aKey, "") ? -1129992003 : (num23 = -1350418738);
            continue;
          case 59:
            jsonNode = jsonNodeStack.Peek();
            num1 = (int) num3 * 820350747 ^ 1829823343;
            continue;
          case 60:
            int num24 = ch2 <= ' ' ? 1410447649 : (num24 = 1227764196);
            num1 = num24 ^ (int) num3 * 1508169735;
            continue;
          case 61:
            int num25;
            num1 = num25 = !JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aItem, "") ? -1378713701 : (num25 = -2132018307);
            continue;
          case 62:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * -198186971 ^ 191875993;
            continue;
          case 63:
            aKey = JSONNode.\u206E​⁭⁬⁮⁯​‌‪‍⁮‫⁮‮‮‍‮⁯⁮‮​‎‌​‬⁮⁬‫‫‬⁯⁯‏‬‍⁬⁯⁬⁭‌‮(aKey);
            num1 = (int) num3 * 1289545634 ^ -1033982249;
            continue;
          case 64:
            num1 = (int) num3 * 1800534868 ^ -276374067;
            continue;
          case 65:
            jsonNode.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1226567510 ^ 339627532;
            continue;
          case 66:
            int num26 = !(jsonNode is JSONArray) ? 1699547454 : (num26 = 170661754);
            num1 = num26 ^ (int) num3 * 1128701648;
            continue;
          case 67:
            int num27 = jsonNode != (object) null ? -1126139952 : (num27 = -1097678726);
            num1 = num27 ^ (int) num3 * 1935830460;
            continue;
          case 68:
            int num28;
            num1 = num28 = ch2 != '{' ? -844721114 : (num28 = -1601759660);
            continue;
          case 69:
            switch (ch2)
            {
              case '\t':
                goto label_56;
              case '\n':
              case '\r':
                goto label_10;
              case '\v':
              case '\f':
                goto label_74;
              default:
                num1 = (int) num3 * -163251580 ^ -1956832978;
                continue;
            }
          case 70:
            int num29;
            num1 = num29 = JSONNode.\u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮(aKey, "") ? -327238006 : (num29 = -1774418080);
            continue;
          case 71:
            int num30;
            num1 = num30 = jsonNodeStack.Count != 0 ? -1379823893 : (num30 = -991581174);
            continue;
          case 72:
            ch1 = JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2);
            num1 = (int) num3 * -1988568965 ^ -1660842270;
            continue;
          case 73:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * -1738170909 ^ -1021479537;
            continue;
          case 74:
            int num31;
            num1 = num31 = ch2 <= ']' ? -2106456628 : (num31 = -41720806);
            continue;
          case 75:
            aItem = "";
            num1 = (int) num3 * -2126141472 ^ 1625863477;
            continue;
          case 76:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -878261545;
            continue;
          case 77:
            goto label_70;
          case 78:
            num1 = (int) num3 * 1493457176 ^ 707525150;
            continue;
          case 79:
            jsonNode.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2092187051 ^ 1997813726;
            continue;
          case 80:
            num1 = (int) num3 * 1463401954 ^ 100339461;
            continue;
          case 81:
label_106:
            s = JSONNode.\u200C‌‫‬‫‍‮‍‏⁬‭⁬‭‫⁫‏‎‫⁫‫‪⁯⁭⁫‍‎⁭⁫⁭‪⁪‬⁬‭​‍⁭‫‍‏‮(aJSON, num2 + 1, 4);
            num1 = -1723621130;
            continue;
          case 82:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * -331585437 ^ 620753740;
            continue;
          case 83:
            flag = !flag;
            num1 = -1003770845;
            continue;
          case 84:
label_74:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = -2088788269;
            continue;
          case 85:
            flag = false;
            num1 = (int) num3 * -586929747 ^ 1879929995;
            continue;
          case 86:
            int num32 = ch2 > ',' ? -1236024 : (num32 = -1296608092);
            num1 = num32 ^ (int) num3 * 819398618;
            continue;
          case 87:
            aKey = JSONNode.\u206E​⁭⁬⁮⁯​‌‪‍⁮‫⁮‮‮‍‮⁯⁮‮​‎‌​‬⁮⁬‫‫‬⁯⁯‏‬‍⁬⁯⁬⁭‌‮(aKey);
            num1 = (int) num3 * 743398114 ^ 115102752;
            continue;
          case 88:
            num1 = (int) num3 * 1713800182 ^ -1766864587;
            continue;
          case 89:
label_10:
            ++num2;
            num1 = -894707412;
            continue;
          case 90:
            num1 = (int) num3 * 1079580888 ^ -1252674087;
            continue;
          case 91:
            switch (ch1)
            {
              case 'r':
                goto label_99;
              case 's':
                goto label_101;
              case 't':
                goto label_91;
              case 'u':
                goto label_106;
              default:
                num1 = (int) num3 * -1005823955 ^ -1897192697;
                continue;
            }
          case 92:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -459603735;
            continue;
          case 93:
            int num33;
            num1 = num33 = ch1 != 'n' ? -655360326 : (num33 = -1904721907);
            continue;
          case 94:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * -464234120 ^ -1617354509;
            continue;
          case 95:
            jsonNode = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * 1082540476 ^ -1625368250;
            continue;
          case 96:
            int num34 = !(jsonNode is JSONArray) ? -2101705052 : (num34 = -1463378399);
            num1 = num34 ^ (int) num3 * -851601981;
            continue;
          case 97:
            num1 = (int) num3 * -2019859670 ^ -331985344;
            continue;
          case 98:
            num1 = (int) num3 * -435865592 ^ 1767843603;
            continue;
          case 99:
            int num35 = jsonNodeStack.Count > 0 ? 127820800 : (num35 = 1400844187);
            num1 = num35 ^ (int) num3 * -767053384;
            continue;
          case 100:
            aItem = JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(aItem, JSONNode.\u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮(aJSON, num2).ToString());
            num1 = (int) num3 * 428985514 ^ 1472682398;
            continue;
          case 101:
            int num36 = ch1 != 'b' ? -1916233064 : (num36 = -1081643888);
            num1 = num36 ^ (int) num3 * 1940595645;
            continue;
          case 102:
            int num37;
            num1 = num37 = flag ? -309716170 : (num37 = -388501040);
            continue;
          case 103:
            aKey = "";
            aItem = "";
            jsonNode = jsonNodeStack.Peek();
            num1 = -2088788269;
            continue;
          case 104:
label_56:
            int num38;
            num1 = num38 = flag ? -1770059436 : (num38 = -2088788269);
            continue;
          case 105:
            jsonNode = jsonNodeStack.Peek();
            num1 = (int) num3 * 1983148125 ^ -762174301;
            continue;
          case 106:
            int num39;
            num1 = num39 = flag ? -1836653807 : (num39 = -707448197);
            continue;
          default:
            goto label_111;
        }
      }
label_60:
      throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(3191160199U));
label_70:
      throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(2626982156U));
label_111:
      return jsonNode;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
      BinaryWriter aWriter = JSONNode.\u206B⁯‎⁪‎‪‏‌⁪‬‪⁫⁬‎‬‬⁫‌‭⁭⁭⁬⁯⁬⁫‬⁯‎‪‫⁬‮‎‎⁮‍⁬‪​‏‮(aData);
label_1:
      int num1 = 1147204726;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1881677186)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1406247849 ^ 994487011;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(3519992261U));

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(2535050094U));

    public string SaveToCompressedBase64() => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u200C‪⁪‎‏‍‬‬‪‮‎‮⁯⁯‮⁫⁪‬‭⁫​⁭​‏⁯⁬⁪⁮⁮⁯‬‭‏‌‏‭⁪⁪‍‮<string>(576421817U));

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202E‮⁪‎⁭‫‏‫⁯⁬‪‮‌⁪⁮‫​⁭‫‎⁫‪⁯⁪‏‍​⁬‪‬⁬⁮‮‫⁭‏‪⁫⁪‎‮(JSONNode.\u202C​‏⁭⁭‪‏‮⁭⁮‮‌⁪‭‮​‎⁬⁫⁭​‏‬‬⁪‍‬‫⁫‍‌‏‭‭⁬​‍‌‫‎‮((FileSystemInfo) JSONNode.\u200E⁫⁫‌⁭‏⁬⁯⁯‍⁭‪⁪‮‭‭‌‭‏‭⁭‮‏‫‏‎⁯‎⁭‪‫‌‫⁫⁯‍‌⁯‬⁫‮(JSONNode.\u202D⁫⁯​‫‫‍‮⁭⁭‭‪‮⁫‮⁬‪⁬⁭‫‬‪‭‌‮⁭⁫​‍‌‏⁬‫‍⁪⁮‭⁪⁫‪‮(aFileName))));
      FileStream aData = JSONNode.\u202C⁮​⁮‭⁭‎‏​‏‬⁮‭⁬⁮​‌‫⁯‭‭⁫⁪⁮‮​⁭‪‏‫⁫‭⁯‪⁯‮‍‫‫‌‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -16091096;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -119666187)) % 3U)
            {
              case 1:
                JSONNode.\u206A⁪‍⁮⁯‌⁫‍‍‫‮‏⁪‎⁮​‬‭‏‪‪⁫⁯⁮⁪⁭‪‬⁪‫‭‍‮⁫⁬‎⁭‎‬‎‮((IDisposable) aData);
                num1 = (int) num2 * 2023757169 ^ 1948425390;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D‪‏‌⁯⁫‬‪‎‎⁪‎⁮‭‭‌‫‪​‏⁬‎‍⁫⁯‬⁮​‌‌‬​‎⁯⁪‪⁬‏⁯⁯‮();
      string base64;
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -2048495048;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2033109847)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              JSONNode.\u202A‌⁫‌⁮‎‍⁭‭⁫​⁮⁬‎⁫‍‎‫‫⁫⁯⁪⁪⁫‌‬‭‍‫‏‫‍‬‬‫‬‪⁫‬⁪‮((Stream) aData, 0L);
              num1 = (int) num2 * -874507631 ^ -140492941;
              continue;
            case 3:
              base64 = JSONNode.\u200E‪⁫‌‍‫⁮​⁬‮‍⁬​‍⁯​‫‮⁫‏‎‎‬‫‎‌‮‌‍‍⁭‍⁯⁯⁬‭⁪‮‪‮(JSONNode.\u206E‎⁮⁭⁮‌⁪⁭⁪‍‍⁬‌‎‍‪‪‌​‏⁭‪⁮⁭‭‫‌‏‌‬‭‭⁫‍‏‍‬‍‫‮‮(aData));
              num1 = (int) num2 * 1940877689 ^ -360519248;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -965642695;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -2033109847)) % 3U)
            {
              case 0:
                goto label_7;
              case 2:
                JSONNode.\u206A⁪‍⁮⁯‌⁫‍‍‫‮‏⁪‎⁮​‬‭‏‪‪⁫⁯⁮⁪⁭‪‬⁪‫‭‍‮⁫⁬‎⁭‎‬‎‮((IDisposable) aData);
                num3 = (int) num4 * -2099185137 ^ 1080001781;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag = (JSONBinaryTag) JSONNode.\u206B‮⁯‎‪‮‏‍⁪‮‪⁮‪⁪‫‫‌⁭​⁬‭‬‌⁭‏‫‪⁯⁮⁭⁯⁯‏‬‬‮⁭‎‏⁪‮(aReader);
      int num1;
      JSONArray jsonArray;
      int num2;
      int num3;
      switch (jsonBinaryTag)
      {
        case JSONBinaryTag.Array:
label_7:
          num2 = JSONNode.\u206A​‎‪‫‌‏⁪‮⁮‬‏‍‫‭‍‏‍‌‌⁭⁪‏⁬‬⁫⁮‌⁮‮‏‏‮⁪⁮⁪‎⁮‪‮‮(aReader);
          jsonArray = new JSONArray();
          num3 = -291648178;
          break;
        case JSONBinaryTag.Class:
label_11:
          num1 = JSONNode.\u206A​‎‪‫‌‏⁪‮⁮‬‏‍‫‭‍‏‍‌‌⁭⁪‏⁬‬⁫⁮‌⁮‮‏‏‮⁪⁮⁪‎⁮‪‮‮(aReader);
          num3 = -67541041;
          break;
        case JSONBinaryTag.Value:
label_21:
          return (JSONNode) new JSONData(JSONNode.\u206C​‪⁯‌‭‍⁮‭⁭‏⁪‏‮​⁬⁯⁮‪‎‌‍‌⁯⁫‫⁪⁯‬⁪​‭‮⁮⁫⁯‭‮‪⁫‮(aReader));
        case JSONBinaryTag.IntValue:
label_3:
          return (JSONNode) new JSONData(JSONNode.\u206A​‎‪‫‌‏⁪‮⁮‬‏‍‫‭‍‏‍‌‌⁭⁪‏⁬‬⁫⁮‌⁮‮‏‏‮⁪⁮⁪‎⁮‪‮‮(aReader));
        case JSONBinaryTag.DoubleValue:
label_4:
          return (JSONNode) new JSONData(JSONNode.\u200B⁭​‏​‭‎‫⁭‌⁫‏‪‭‬⁯​​‪‍‎⁪‭‮⁫‭⁪‪‮⁮‌‪​‏‏‫⁫‬‪‮‮(aReader));
        case JSONBinaryTag.BoolValue:
label_17:
          return (JSONNode) new JSONData(JSONNode.\u206F‌‭⁯‌‪‬⁯‬⁫‬‪‭​‍‌‌​‬⁮‫‎‌‍⁯‪‬‏​⁫⁫⁭‮⁪⁬‌‌‍‭‎‮(aReader));
        case JSONBinaryTag.FloatValue:
label_15:
          return (JSONNode) new JSONData(JSONNode.\u206C​‏⁮⁬‍‮⁫‭‬‌⁬‎‫‏‏‭⁪‭⁭‏‬‌​‫‏⁭‮‌⁫​​⁭⁭‏⁮‬‫​⁯‮(aReader));
        default:
label_1:
          num3 = -239663210;
          break;
      }
      int num4;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num3 ^ -976486174)) % 21U)
        {
          case 0:
            num5 = 0;
            num3 = (int) num6 * -1582831126 ^ -718290040;
            continue;
          case 1:
            num3 = (int) num6 * 874089072 ^ 1173470203;
            continue;
          case 2:
            jsonClass = new JSONClass();
            num4 = 0;
            num3 = (int) num6 * 460830765 ^ -200189002;
            continue;
          case 3:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num3 = -794861088;
            continue;
          case 4:
            num3 = (int) num6 * -1552273973 ^ 1742992409;
            continue;
          case 5:
            goto label_20;
          case 6:
            aKey = JSONNode.\u206C​‪⁯‌‭‍⁮‭⁭‏⁪‏‮​⁬⁯⁮‪‎‌‍‌⁯⁫‫⁪⁯‬⁪​‭‮⁮⁫⁯‭‮‪⁫‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num3 = -1720809945;
            continue;
          case 7:
            int num7;
            num3 = num7 = num4 >= num1 ? -2112320114 : (num7 = -1911561131);
            continue;
          case 8:
            goto label_15;
          case 9:
            goto label_21;
          case 11:
            int num8;
            num3 = num8 = num5 < num2 ? -724701851 : (num8 = -479080799);
            continue;
          case 12:
            goto label_1;
          case 13:
            goto label_4;
          case 14:
            goto label_11;
          case 15:
            jsonClass.Add(aKey, aItem);
            ++num4;
            num3 = (int) num6 * 2076466188 ^ 1454444794;
            continue;
          case 16:
            goto label_17;
          case 17:
            ++num5;
            num3 = (int) num6 * -47077193 ^ 815915230;
            continue;
          case 18:
            goto label_3;
          case 19:
            goto label_13;
          case 20:
            goto label_7;
          default:
            goto label_22;
        }
      }
label_13:
      return (JSONNode) jsonClass;
label_20:
      return (JSONNode) jsonArray;
label_22:
      throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(JSONNode.\u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮(\u003CModule\u003E.\u200C‪⁪‎‏‍‬‬‪‮‎‮⁯⁯‮⁫⁪‬‭⁫​⁭​‏⁯⁬⁪⁮⁮⁯‬‭‏‌‏‭⁪⁪‍‮<string>(3917319799U), jsonBinaryTag.ToString()));
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u200C‪⁪‎‏‍‬‬‪‮‎‮⁯⁯‮⁫⁪‬‭⁫​⁭​‏⁯⁬⁪⁮⁮⁯‬‭‏‌‏‭⁪⁪‍‮<string>(576421817U));

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(2535050094U));

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮(\u003CModule\u003E.\u202D​‎⁫‭‏​‬‍⁪‭‌‪⁭‫‮⁯‫‎‪‬‍‎‮‍​‫‌‬‫‌‭‫⁫⁮‎‎⁬⁯‎‮<string>(2535050094U));

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D⁬‮⁯​‭‍⁯​‎⁭⁬‏⁭‎⁯‪‎⁪⁫‪‌‭⁪‫‎‫‫⁮⁫​⁭⁭‫‏‏‍​‏⁬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1629602688;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1190728246)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u206A⁪‍⁮⁯‌⁫‍‍‫‮‏⁪‎⁮​‬‭‏‪‪⁫⁯⁮⁪⁭‪‬⁪‫‭‍‮⁫⁬‎⁭‎‬‎‮((IDisposable) aReader);
                num1 = (int) num2 * -109980751 ^ 1726709700;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200F‫⁮⁬⁪‭‏​‬⁬‎​​⁭‭‪‬‫​⁪⁬⁪‫‎⁯‪‎‬⁫⁭⁭⁫‎‫‌⁫‫‍⁯‬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 402975348;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1511754138)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u206A⁪‍⁮⁯‌⁫‍‍‫‮‏⁪‎⁮​‬‭‏‪‪⁫⁯⁮⁪⁭‪‬⁪‫‭‍‮⁫⁬‎⁭‎‬‎‮((IDisposable) aData);
                num1 = (int) num2 * -95940806 ^ 816394722;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u202E‎‌‌⁮‏‭⁯‫‌‫‏‏⁫⁯‭⁯⁪​‏⁯⁮‎⁮‎‍‌‬⁮‏‪⁬⁮⁬⁪‫⁮⁬⁫‪‮(JSONNode.\u206B‮‍‍⁯⁬‬⁫​‍‏‏‎⁭‌⁮⁪‫⁫⁪⁮⁯‌‎⁮⁭⁯⁬‏‌‪‎‬​‏‭‮‮‪‫‮(aBase64));
      JSONNode.\u202A‌⁫‌⁮‎‍⁭‭⁫​⁮⁬‎⁫‍‎‫‫⁫⁯⁪⁪⁫‌‬‭‍‫‏‫‍‬‬‫‬‪⁫‬⁪‮((Stream) aData, 0L);
      return JSONNode.LoadFromStream((Stream) aData);
    }

    static CultureInfo \u202E‏‪‫‬‮‌‎‍‬‎‭‌⁬‏‬⁫‮⁯‭‏⁫‌⁯‭⁬‮‎⁫⁯⁪⁪‏⁪⁭⁪‎⁯⁯‍‮() => CultureInfo.InvariantCulture;

    static bool \u200F‭‭⁪⁫‍⁫⁫‏‫‫‭‎‍‌‬‬⁪‬⁪‎‏‭‪⁫‭‏⁮⁭⁬⁬‍⁬‍⁬‬‮‭⁮⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206E⁬⁫⁮‌​‌​⁬⁪⁭‮‬⁭‪‎‍‎‫⁪‫‫⁮‫‎‎‎⁭⁮⁮‫​⁪‏‌⁫⁯​‎‍‮() => base.GetHashCode();

    static char \u206B⁯‏‎‍‪‭‌‬‬⁬‪⁪⁭‫‏​‬‪‎‪‬⁬⁫⁯⁬⁪⁪⁮‏‌⁮‬‭⁭‭⁪‬​‎‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202E​‭‍‮⁪‬‬‏‪‏⁮‎⁫‬‭‌‌​⁬‪​⁯‮‍⁭‌‏⁫‬⁬‫​‫‌⁭‮⁯‎‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200D‫⁭⁬⁭‎⁪‪⁬⁯⁯‬‫⁯‍‭‎⁮⁬​⁫‎⁮‫‭⁯‮‍‪⁫‬‎⁫⁯‌‌‎‪⁭‪‮([In] string obj0) => obj0.Length;

    static string \u206E​⁭⁬⁮⁯​‌‪‍⁮‫⁮‮‮‍‮⁯⁮‮​‎‌​‬⁮⁬‫‫‬⁯⁯‏‬‍⁬⁯⁬⁭‌‮([In] string obj0) => obj0.Trim();

    static bool \u206F‫⁪‪‪⁯‮‎⁭‭‫⁫⁮‬⁪‭‮⁪‪‬⁫⁭‍⁯​‏‫⁯‫‎⁬‬‭⁫‭​‮‫⁪‪‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200F⁪‬⁯‬‍‪‮‏‎⁪⁭⁫​⁫‫‮⁮⁯‌‫‬⁪‏‫⁪⁮⁯⁪‪‍‫‮⁪‎‮⁯​‭‭‮([In] string obj0) => new Exception(obj0);

    static string \u200C‌‫‬‫‍‮‍‏⁬‭⁬‭‫⁫‏‎‫⁫‫‪⁯⁭⁫‍‎⁭⁫⁭‪⁪‬⁬‭​‍⁭‫‍‏‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206B⁯‎⁪‎‪‏‌⁪‬‪⁫⁬‎‬‬⁫‌‭⁭⁭⁬⁯⁬⁫‬⁯‎‪‫⁬‮‎‎⁮‍⁬‪​‏‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202D⁫⁯​‫‫‍‮⁭⁭‭‪‮⁫‮⁬‪⁬⁭‫‬‪‭‌‮⁭⁫​‍‌‏⁬‫‍⁪⁮‭⁪⁫‪‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200E⁫⁫‌⁭‏⁬⁯⁯‍⁭‪⁪‮‭‭‌‭‏‭⁭‮‏‫‏‎⁯‎⁭‪‫‌‫⁫⁯‍‌⁯‬⁫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202C​‏⁭⁭‪‏‮⁭⁮‮‌⁪‭‮​‎⁬⁫⁭​‏‬‬⁪‍‬‫⁫‍‌‏‭‭⁬​‍‌‫‎‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202E‮⁪‎⁭‫‏‫⁯⁬‪‮‌⁪⁮‫​⁭‫‎⁫‪⁯⁪‏‍​⁬‪‬⁬⁮‮‫⁭‏‪⁫⁪‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202C⁮​⁮‭⁭‎‏​‏‬⁮‭⁬⁮​‌‫⁯‭‭⁫⁪⁮‮​⁭‪‏‫⁫‭⁯‪⁯‮‍‫‫‌‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206A⁪‍⁮⁯‌⁫‍‍‫‮‏⁪‎⁮​‬‭‏‪‪⁫⁯⁮⁪⁭‪‬⁪‫‭‍‮⁫⁬‎⁭‎‬‎‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D‪‏‌⁯⁫‬‪‎‎⁪‎⁮‭‭‌‫‪​‏⁬‎‍⁫⁯‬⁮​‌‌‬​‎⁯⁪‪⁬‏⁯⁯‮() => new MemoryStream();

    static void \u202A‌⁫‌⁮‎‍⁭‭⁫​⁮⁬‎⁫‍‎‫‫⁫⁯⁪⁪⁫‌‬‭‍‫‏‫‍‬‬‫‬‪⁫‬⁪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206E‎⁮⁭⁮‌⁪⁭⁪‍‍⁬‌‎‍‪‪‌​‏⁭‪⁮⁭‭‫‌‏‌‬‭‭⁫‍‏‍‬‍‫‮‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E‪⁫‌‍‫⁮​⁬‮‍⁬​‍⁯​‫‮⁫‏‎‎‬‫‎‌‮‌‍‍⁭‍⁯⁯⁬‭⁪‮‪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206B‮⁯‎‪‮‏‍⁪‮‪⁮‪⁪‫‫‌⁭​⁬‭‬‌⁭‏‫‪⁯⁮⁭⁯⁯‏‬‬‮⁭‎‏⁪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206A​‎‪‫‌‏⁪‮⁮‬‏‍‫‭‍‏‍‌‌⁭⁪‏⁬‬⁫⁮‌⁮‮‏‏‮⁪⁮⁪‎⁮‪‮‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C​‪⁯‌‭‍⁮‭⁭‏⁪‏‮​⁬⁯⁮‪‎‌‍‌⁯⁫‫⁪⁯‬⁪​‭‮⁮⁫⁯‭‮‪⁫‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200B⁭​‏​‭‎‫⁭‌⁫‏‪‭‬⁯​​‪‍‎⁪‭‮⁫‭⁪‪‮⁮‌‪​‏‏‫⁫‬‪‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206F‌‭⁯‌‪‬⁯‬⁫‬‪‭​‍‌‌​‬⁮‫‎‌‍⁯‪‬‏​⁫⁫⁭‮⁪⁬‌‌‍‭‎‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C​‏⁮⁬‍‮⁫‭‬‌⁬‎‫‏‏‭⁪‭⁭‏‬‌​‫‏⁭‮‌⁫​​⁭⁭‏⁮‬‫​⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D⁬‮⁯​‭‍⁯​‎⁭⁬‏⁭‎⁯‪‎⁪⁫‪‌‭⁪‫‎‫‫⁮⁫​⁭⁭‫‏‏‍​‏⁬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200F‫⁮⁬⁪‭‏​‬⁬‎​​⁭‭‪‬‫​⁪⁬⁪‫‎⁯‪‎‬⁫⁭⁭⁫‎‫‌⁫‫‍⁯‬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206B‮‍‍⁯⁬‬⁫​‍‏‏‎⁭‌⁮⁪‫⁫⁪⁮⁯‌‎⁮⁭⁯⁬‏‌‪‎‬​‏‭‮‮‪‫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202E‎‌‌⁮‏‭⁯‫‌‫‏‏⁫⁯‭⁯⁪​‏⁯⁮‎⁮‎‍‌‬⁮‏‪⁬⁮⁬⁪‫⁮⁬⁫‪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
