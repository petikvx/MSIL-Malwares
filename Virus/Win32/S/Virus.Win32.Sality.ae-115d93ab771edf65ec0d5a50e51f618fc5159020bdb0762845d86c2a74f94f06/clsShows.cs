// Decompiled with JetBrains decompiler
// Type: IngressoVip.clsShows
// Assembly: IngressoVip, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B67C4084-86FB-4B3F-B072-28F5697F4668
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Sality.ae-115d93ab771edf65ec0d5a50e51f618fc5159020bdb0762845d86c2a74f94f06.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Npgsql;
using System;
using System.Data;
using System.Data.Common;

namespace IngressoVip
{
  public class clsShows
  {
    private clsConexao objConn;
    private NpgsqlConnection CnnRomoto;
    private clsMensagem msg;
    private clsFuncoes objFuncoes;

    public clsShows()
    {
      this.objConn = new clsConexao();
      this.CnnRomoto = new NpgsqlConnection(this.objConn.connRemoto());
      this.msg = new clsMensagem();
      this.objFuncoes = new clsFuncoes();
    }

    public DataSet PegaShows(ref string strCodArtista, ref string strLugar)
    {
      DataSet dataSet1 = new DataSet();
      DataSet dataSet2;
      try
      {
        if (this.CnnRomoto.State == ConnectionState.Closed)
        {
          this.objFuncoes.MsgConsole("Abrindo conexão com banco remoto...");
          this.CnnRomoto.Open();
          this.objFuncoes.MsgConsole("Conexão aberta...");
        }
        string str = "select * from buscar_shows(" + strCodArtista + "," + strLugar + ") as (idshow integer, idartista integer, data date, taxaservico integer, idlugar integer, lugar character(20))";
        this.objFuncoes.MsgConsole("Valor do sql execultado em PegaShows " + str);
        ((DbDataAdapter) new NpgsqlDataAdapter(str, this.CnnRomoto)).Fill(dataSet1, "shows");
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ex.ToString());
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
        ProjectData.ClearProjectError();
      }
      return dataSet2;
    }

    public DataSet PegaShowCod(ref string strCodShow)
    {
      DataSet dataSet1 = new DataSet();
      DataSet dataSet2;
      try
      {
        if (this.CnnRomoto.State == ConnectionState.Closed)
        {
          this.objFuncoes.MsgConsole("Abrindo conexão com banco remoto...");
          this.CnnRomoto.Open();
          this.objFuncoes.MsgConsole("Conexão aberta...");
        }
        string str = "SELECT * FROM shows WHERE idshow = " + strCodShow;
        this.objFuncoes.MsgConsole("Valor do sql execultado em PegaCodShow " + str);
        ((DbDataAdapter) new NpgsqlDataAdapter(str, this.CnnRomoto)).Fill(dataSet1, "shows");
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ex.ToString());
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
        ProjectData.ClearProjectError();
      }
      return dataSet2;
    }

    public DataSet PegaArtistas(ref string strCodArea)
    {
      DataSet dataSet1 = new DataSet();
      DataSet dataSet2;
      try
      {
        if (this.CnnRomoto.State == ConnectionState.Closed)
        {
          this.objFuncoes.MsgConsole("Abrindo conexão com banco remoto...");
          this.CnnRomoto.Open();
          this.objFuncoes.MsgConsole("Conexão aberta...");
        }
        string str = "select * from buscar_artistas(" + strCodArea + ") as (idartista integer)";
        this.objFuncoes.MsgConsole("Valor do sql execultado em PegaShow: " + str);
        ((DbDataAdapter) new NpgsqlDataAdapter(str, this.CnnRomoto)).Fill(dataSet1, "shows");
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        this.objFuncoes.MsgConsole("Erro na conexao em PegaShow: " + exception.ToString());
        int num = (int) Interaction.MsgBox((object) exception.ToString());
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
        ProjectData.ClearProjectError();
      }
      return dataSet2;
    }

    public DataSet PegaAcento(ref string strEvento)
    {
      DataSet dataSet1 = new DataSet();
      DataSet dataSet2;
      try
      {
        if (this.CnnRomoto.State == ConnectionState.Closed)
        {
          this.objFuncoes.MsgConsole("Abrindo conexão com banco remoto...");
          this.CnnRomoto.Open();
          this.objFuncoes.MsgConsole("Conexão aberta...");
        }
        string texto = "select * from buscar_acentoshow(" + strEvento + ")as (idacento integer, nome character(25))";
        this.objFuncoes.MsgConsole(texto);
        ((DbDataAdapter) new NpgsqlDataAdapter(texto, this.CnnRomoto)).Fill(dataSet1, "lugares");
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        int num = (int) Interaction.MsgBox((object) ex.ToString());
        this.CnnRomoto.Close();
        dataSet2 = dataSet1;
        ProjectData.ClearProjectError();
      }
      return dataSet2;
    }
  }
}
