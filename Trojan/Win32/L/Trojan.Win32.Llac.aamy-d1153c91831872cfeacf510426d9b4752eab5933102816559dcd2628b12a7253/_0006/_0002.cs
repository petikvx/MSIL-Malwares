// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncuiLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F112AE9C-7564-463C-8834-3BB2BC4FBE1B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.Win32.Llac.aamy-d1153c91831872cfeacf510426d9b4752eab5933102816559dcd2628b12a7253.exe

using \u0003;
using \u0004;
using \u0005;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace \u0006
{
  internal sealed class \u0002 : Form
  {
    private \u0003.\u0003 \u0001;
    private \u0001 \u0001;
    private Thread \u0001;
    private CheckBox \u0001 = new CheckBox();
    private Label \u0001 = new Label();
    private Button \u0001 = new Button();
    private Button \u0002 = new Button();
    private Label \u0002 = new Label();
    private \u0002.\u0005 \u0001 = new \u0002.\u0005();
    private Panel \u0001 = new Panel();
    private Panel \u0002 = new Panel();
    private Button \u0003 = new Button();
    private \u0001 \u0001 = new \u0001();
    private \u0004.\u0005 \u0001 = new \u0004.\u0005("Preparing the error report.");
    private \u0004.\u0005 \u0002 = new \u0004.\u0005("Connecting to server.");
    private \u0004.\u0005 \u0003 = new \u0004.\u0005("Transferring report.");
    private \u0004.\u0005 \u0004 = new \u0004.\u0005("Error reporting completed. Thank you.");
    private Button \u0004 = new Button();
    private Button \u0005 = new Button();
    private \u0003.\u0004 \u0001 = new \u0003.\u0004(string.Format("{0} has encountered a problem.\nWe are sorry for the inconvenience.", (object) "Morph_12.06.2011_224918"));
    private \u0003.\u0004 \u0002 = new \u0003.\u0004(string.Format("Please wait while {0} is sending the report to {1} through the Internet.", (object) "Morph_12.06.2011_224918", (object) "[Unknown Company]"));
    private \u0005.\u0003 \u0001 = new \u0005.\u0003();
    private Button \u0006 = new Button();

    private void \u0003()
    {
      this.\u0001.SuspendLayout();
      this.\u0002.SuspendLayout();
      this.SuspendLayout();
      this.\u0001.\u0003(\u0005.\u0004.\u0002);
      this.\u0002.\u0003(\u0005.\u0004.\u0002);
      this.\u0001.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.\u0001.FlatStyle = FlatStyle.System;
      this.\u0001.Location = new Point(22, 98);
      this.\u0001.Size = new Size(226, 16);
      this.\u0001.TabIndex = 13;
      this.\u0001.Text = "Ignore this error and attempt to &continue.";
      this.\u0001.CheckedChanged += new EventHandler(this.\u0007);
      this.\u0001.Anchor = AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.\u0001.FlatStyle = FlatStyle.System;
      this.\u0001.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.\u0001.Location = new Point(20, 124);
      this.\u0001.Size = new Size(381, 16);
      this.\u0001.Text = string.Format("Please tell {0} about this problem.", (object) "[Unknown Company]");
      this.\u0001.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0001.FlatStyle = FlatStyle.System;
      this.\u0001.Size = new Size(75, 24);
      this.\u0001.Location = new Point(400 - this.\u0001.Width, 205);
      this.\u0001.TabIndex = 4;
      this.\u0001.Text = "&Don't Send";
      this.\u0001.Click += new EventHandler(this.\u0004);
      this.\u0002.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0002.FlatStyle = FlatStyle.System;
      this.\u0002.Size = new Size(105, 24);
      this.\u0002.Location = new Point(this.\u0001.Left - this.\u0002.Width - 6, 205);
      this.\u0002.TabIndex = 3;
      this.\u0002.Text = "&Send Error Report";
      this.\u0002.Click += new EventHandler(this.\u0003);
      this.\u0006.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0006.FlatStyle = FlatStyle.System;
      this.\u0006.Size = new Size(64, 24);
      this.\u0006.Location = new Point(this.\u0002.Left - this.\u0006.Width - 6, 205);
      this.\u0006.TabIndex = 14;
      this.\u0006.Text = "De&bug";
      this.\u0006.Visible = false;
      this.\u0006.Click += new EventHandler(this.\u0010);
      this.\u0002.Anchor = AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.\u0002.FlatStyle = FlatStyle.System;
      this.\u0002.Location = new Point(20, 140);
      this.\u0002.Size = new Size(381, 55);
      this.\u0002.Text = string.Format("To help improve the software you use, {0} is interested in learning more about this error. We have created a report about the error for you to send to us.", (object) "[Unknown Company]");
      this.\u0001.Anchor = AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right;
      this.\u0001.Location = new Point(20, 69);
      this.\u0001.Size = new Size(381, 13);
      this.\u0003.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0003.FlatStyle = FlatStyle.System;
      this.\u0003.Size = new Size(80, 24);
      this.\u0003.Location = new Point(400 - this.\u0003.Width, 205);
      this.\u0003.TabIndex = 7;
      this.\u0003.Text = "&Cancel";
      this.\u0003.Click += new EventHandler(this.\u0005);
      this.\u0004.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0004.Enabled = false;
      this.\u0004.FlatStyle = FlatStyle.System;
      this.\u0004.Size = new Size(80, 24);
      this.\u0004.Location = new Point(this.\u0003.Left - this.\u0004.Width - 6, 205);
      this.\u0004.TabIndex = 6;
      this.\u0004.Text = "&OK";
      this.\u0004.Click += new EventHandler(this.\u0006);
      this.\u0005.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.\u0005.FlatStyle = FlatStyle.System;
      this.\u0005.Location = this.\u0004.Location;
      this.\u0005.Size = this.\u0004.Size;
      this.\u0005.TabIndex = 5;
      this.\u0005.Text = "&Retry";
      this.\u0005.Visible = false;
      this.\u0005.Click += new EventHandler(this.\u000F);
      this.\u0001.Location = new Point(87, 146);
      this.\u0001.Visible = false;
      this.\u0001.SetBounds(24, 72, 368, 16);
      this.\u0002.SetBounds(24, 96, 368, 16);
      this.\u0003.SetBounds(24, 120, 368, 16);
      this.\u0004.SetBounds(24, 144, 368, 16);
      this.\u0001.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.\u0001.SetBounds(6, 450, 120, 32);
      this.\u0001.Controls.AddRange(new Control[8]
      {
        (Control) this.\u0006,
        (Control) this.\u0001,
        (Control) this.\u0001,
        (Control) this.\u0001,
        (Control) this.\u0002,
        (Control) this.\u0002,
        (Control) this.\u0001,
        (Control) this.\u0001
      });
      this.\u0001.Size = new Size(413, 240);
      this.\u0001.TabIndex = 0;
      this.\u0002.Controls.AddRange(new Control[9]
      {
        (Control) this.\u0003,
        (Control) this.\u0004,
        (Control) this.\u0005,
        (Control) this.\u0001,
        (Control) this.\u0002,
        (Control) this.\u0001,
        (Control) this.\u0002,
        (Control) this.\u0003,
        (Control) this.\u0004
      });
      this.\u0002.Size = new Size(413, 240);
      this.\u0002.TabIndex = 2;
      this.\u0002.Visible = false;
      this.AutoScaleBaseSize = new Size(5, 13);
      this.ClientSize = new Size(434, 488);
      this.ControlBox = false;
      this.Controls.AddRange(new Control[3]
      {
        (Control) this.\u0001,
        (Control) this.\u0001,
        (Control) this.\u0002
      });
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.ShowInTaskbar = false;
      this.MinimizeBox = false;
      this.MaximizeBox = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Morph_12.06.2011_224918";
      if (this.Text.Length == 0)
        this.Text = "Error Reporting";
      try
      {
        this.TopMost = true;
      }
      catch
      {
      }
      this.\u0001.ResumeLayout(false);
      this.\u0002.ResumeLayout(false);
      this.ResumeLayout(false);
      this.\u0005.BringToFront();
      this.Size = new Size(419, 264);
      this.\u0002.Dock = DockStyle.Fill;
      this.\u0001.Dock = DockStyle.Fill;
    }

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      try
      {
        this.\u0001.Visible = false;
        this.\u0002.Visible = true;
        this.\u0001.Visible = true;
        if (this.\u0001 == null)
          return;
        this.\u0003(new ThreadStart(this.\u0004));
      }
      catch
      {
      }
    }

    private void \u0003([In] ThreadStart obj0)
    {
      this.\u0001 = new Thread(obj0);
      this.\u0001.Start();
    }

    private void \u0004([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void \u0005([In] object obj0, [In] EventArgs obj1)
    {
      try
      {
        if (this.\u0001 != null)
          this.\u0001.Abort();
      }
      catch
      {
      }
      this.Close();
    }

    private void \u0006([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void \u0007([In] object obj0, [In] EventArgs obj1) => this.\u0001.\u0003(this.\u0001.Checked);

    private void \u0003([In] object obj0, [In] \u0001 obj1)
    {
      try
      {
        // ISSUE: method pointer
        this.Invoke((Delegate) new \u0003.\u0005((object) this, __methodptr(\u0004)), obj0, (object) obj1);
      }
      catch (InvalidOperationException ex)
      {
      }
    }

    private void \u0008([In] object obj0, [In] EventArgs obj1)
    {
      try
      {
        // ISSUE: method pointer
        this.Invoke((Delegate) new EventHandler((object) this, __methodptr(\u000E)), obj0, (object) obj1);
      }
      catch (InvalidOperationException ex)
      {
      }
    }

    protected override void OnClosing([In] CancelEventArgs obj0)
    {
      if (this.\u0001 != null && this.\u0001.IsAlive)
        this.\u0001.Abort();
      base.OnClosing(obj0);
    }

    private void \u0004([In] object obj0, [In] \u0001 obj1)
    {
      switch (obj1.\u0003())
      {
        case \u0002.\u0004.\u0001:
          if (obj1.\u0003())
          {
            this.\u0001.\u0003(obj1.\u0003());
            this.\u0005.Visible = true;
            this.\u0005.Focus();
            break;
          }
          this.\u0001.\u0004();
          break;
        case \u0002.\u0004.\u0002:
          if (obj1.\u0003())
          {
            this.\u0002.\u0003(obj1.\u0003());
            this.\u0005.Visible = true;
            this.\u0005.Focus();
            break;
          }
          this.\u0001.\u0005();
          this.\u0002.\u0004();
          break;
        case \u0002.\u0004.\u0003:
          if (obj1.\u0003())
          {
            this.\u0001.Visible = false;
            this.\u0003.\u0003(obj1.\u0003());
            this.\u0005.Visible = true;
            this.\u0005.Focus();
            break;
          }
          this.\u0002.\u0005();
          this.\u0003.\u0004();
          this.\u0001.Visible = true;
          break;
        case \u0002.\u0004.\u0004:
          this.\u0001.Visible = false;
          this.\u0003.\u0005();
          this.\u0004.\u0005();
          this.\u0004.Enabled = true;
          this.\u0004.Focus();
          this.\u0003.Enabled = false;
          break;
      }
    }

    private void \u000E([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void \u000F([In] object obj0, [In] EventArgs obj1)
    {
      this.\u0005.Visible = false;
      this.\u0001.\u0003();
      this.\u0002.\u0003();
      this.\u0003.\u0003();
      if (this.\u0001 == null)
        return;
      this.\u0003(new ThreadStart(this.\u0004));
    }

    private void \u0004() => this.\u0001.\u0007();

    private void \u0010([In] object obj0, [In] EventArgs obj1)
    {
      if (this.\u0001 == null)
        return;
      this.\u0003(new ThreadStart(this.\u0001.\u0006));
    }

    public \u0002([In] \u0003.\u0003 obj0, [In] \u0001 obj1)
    {
      this.\u0003();
      int height = this.Height;
      this.\u0001 = obj1;
      this.\u0001 = obj0;
      this.\u0001.Text = obj1.\u0003().Message;
      int num = height + (this.\u0001.Height - this.FontHeight);
      if (!obj1.\u0005())
      {
        this.\u0001.Visible = false;
        num -= this.\u0001.Height;
      }
      if (num > this.Height)
        this.Height = num;
      if (obj1.\u0003())
      {
        obj0.\u0003(new EventHandler(this.\u0008));
        this.\u0006.Visible = true;
        if (this.\u0006.Left < this.\u0001.Right)
          this.\u0001.Visible = false;
      }
      if (!obj1.\u0004())
      {
        this.\u0002.Enabled = false;
        if (this.\u0001.CanFocus)
          this.\u0001.Focus();
      }
      obj0.\u0003(new \u0003.\u0005(this.\u0003));
    }
  }
}
