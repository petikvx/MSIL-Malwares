// Decompiled with JetBrains decompiler
// Type: VanillaStub.Helpers.Services.StreamLibrary.src.LzwCompression
// Assembly: VanillaStub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EA90E0E3-D3F0-4587-A40F-47A7FA59CCA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b3851e5c28e260637f2bb0d27bd956234053f958c19d044c30c87ff4b731caac.exe

using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

namespace VanillaStub.Helpers.Services.StreamLibrary.src
{
  public class LzwCompression
  {
    private readonly ImageCodecInfo encoderInfo;
    private readonly EncoderParameters encoderParams;
    private readonly EncoderParameter parameter;

    public LzwCompression(int Quality)
    {
      this.parameter = new EncoderParameter(Encoder.Quality, (long) Quality);
      this.encoderInfo = this.GetEncoderInfo("image/jpeg");
      this.encoderParams = new EncoderParameters(2);
      this.encoderParams.Param[0] = this.parameter;
      this.encoderParams.Param[1] = new EncoderParameter(Encoder.Compression, 2L);
    }

    public byte[] Compress(Bitmap bmp, byte[] AdditionInfo = null)
    {
      using (MemoryStream memoryStream = new MemoryStream())
      {
        if (AdditionInfo != null)
          memoryStream.Write(AdditionInfo, 0, AdditionInfo.Length);
        bmp.Save((Stream) memoryStream, this.encoderInfo, this.encoderParams);
        return memoryStream.ToArray();
      }
    }

    public void Compress(Bitmap bmp, Stream stream, byte[] AdditionInfo = null)
    {
      if (AdditionInfo != null)
        stream.Write(AdditionInfo, 0, AdditionInfo.Length);
      bmp.Save(stream, this.encoderInfo, this.encoderParams);
    }

    private ImageCodecInfo GetEncoderInfo(string mimeType)
    {
      ImageCodecInfo[] imageEncoders = ImageCodecInfo.GetImageEncoders();
      for (int index = 0; index < imageEncoders.Length; ++index)
      {
        if (imageEncoders[index].MimeType == mimeType)
          return imageEncoders[index];
      }
      return (ImageCodecInfo) null;
    }
  }
}
