// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ViewModels.Framework.ObservableObject
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace Standard_Sales.ViewModels.Framework
{
  public abstract class ObservableObject : INotifyPropertyChanged, IObservableObject
  {
    public event PropertyChangedEventHandler PropertyChanged
    {
      add
      {
        PropertyChangedEventHandler changedEventHandler1 = this.PropertyChanged;
label_1:
        int num1 = -2077551848;
        PropertyChangedEventHandler comparand;
        PropertyChangedEventHandler changedEventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -260405561)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              changedEventHandler1 = Interlocked.CompareExchange<PropertyChangedEventHandler>(ref this.PropertyChanged, changedEventHandler2, comparand);
              int num3 = changedEventHandler1 == comparand ? -1285892638 : (num3 = -615804229);
              num1 = num3 ^ (int) num2 * 518211567;
              continue;
            case 2:
              goto label_3;
            case 3:
              comparand = changedEventHandler1;
              changedEventHandler2 = (PropertyChangedEventHandler) ObservableObject.\u206E‏‎‬⁮⁪‭⁯⁮‌⁯‏‎‫⁭‪‌⁪⁯​‭⁯‎‏​⁬⁪‪‌‬‎⁯‪‮‏‭⁫‏⁯‎‮((Delegate) comparand, (Delegate) value);
              num1 = -769930422;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
      remove
      {
        PropertyChangedEventHandler changedEventHandler1 = this.PropertyChanged;
label_1:
        int num1 = 2028604102;
        PropertyChangedEventHandler comparand;
        PropertyChangedEventHandler changedEventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 309387549)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              changedEventHandler1 = Interlocked.CompareExchange<PropertyChangedEventHandler>(ref this.PropertyChanged, changedEventHandler2, comparand);
              int num3 = changedEventHandler1 != comparand ? -1469063346 : (num3 = -1868385920);
              num1 = num3 ^ (int) num2 * -195486156;
              continue;
            case 3:
              comparand = changedEventHandler1;
              changedEventHandler2 = (PropertyChangedEventHandler) ObservableObject.\u200C‬⁫‍​⁬⁭‌‏⁯‬⁫​‭‮​‫⁫‍‏‌​‍‎‪⁯⁫‏‮⁭‎⁯‏⁮‫‭⁮‬‏‎‮((Delegate) comparand, (Delegate) value);
              num1 = 251365495;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    protected PropertyChangedEventHandler PropertyChangedHandler
    {
      get
      {
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
label_1:
        int num1 = 184090440;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 171497174)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1035856999 ^ -641952332;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return propertyChanged;
      }
    }

    [DebuggerStepThrough]
    public void VerifyPropertyName(string propertyName)
    {
      Type type = ObservableObject.\u202D‌‎‏‭‭‌⁭‭‪‬‬⁪‬‪‭‍⁬⁭‪‬‎‪⁭‏‪‌​‮‌‏‭‪​‍‪‮‌⁮⁯‮((object) this);
label_1:
      int num1 = 169234151;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 146137456)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = !ObservableObject.\u200E⁭‌​‭⁭⁭‮‮‪⁬⁬⁯‎⁪⁫‮‬⁮‬‬⁫‬‎‍⁫‪‫‭⁫‮‭‫‫‭‬‭‪‌‪‮(ObservableObject.\u200D‭‎‫‮⁭‎‮‭​​‌⁯​‮‪‍⁬⁬⁫⁫⁪⁮⁯⁮‍⁯‌‎​‮⁮⁬⁭‮‮⁬‌⁬⁬‮(type, propertyName), (PropertyInfo) null) ? 793787029 : (num3 = 1837813205);
            num1 = num3 ^ (int) num2 * -889898517;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_6;
          case 4:
            num1 = (int) num2 * -572687917 ^ -2052289008;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:
      return;
label_6:
      throw ObservableObject.\u200F‏‎⁬‍‏‌‮‪⁯‍⁮⁯​‬‎⁬‏‭​‌‌⁭⁮‮⁯‍‭⁮⁭⁪‭‍‮‬‍‭‎⁯‌‮(\u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(1237282894U), propertyName);
    }

    protected virtual void RaisePropertyChanged(string propertyName)
    {
      this.VerifyPropertyName(propertyName);
label_1:
      int num1 = -1759774429;
      PropertyChangedEventHandler propertyChanged;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1641738267)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -1043157082 ^ 2063902865;
            continue;
          case 1:
            propertyChanged((object) this, ObservableObject.\u202B‎⁮⁭⁫​⁬‮‍⁬⁭‍‪‏‍‭‏‭⁬‍‪‪⁮‭‭‪‍⁮‬‬‌‫‪​⁮‏‏​‏‌‮(propertyName));
            num1 = (int) num2 * -1585524798 ^ -761985383;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1934783028 ^ -1580790450;
            continue;
          case 4:
            num1 = (int) num2 * -643715747 ^ 1457008643;
            continue;
          case 5:
            goto label_3;
          case 6:
            propertyChanged = this.PropertyChanged;
            int num3 = propertyChanged != null ? 961163515 : (num3 = 812287348);
            num1 = num3 ^ (int) num2 * 189944547;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    protected virtual void RaisePropertyChanged<T>(Expression<Func<T>> propertyExpression)
    {
      bool flag1 = propertyExpression == null;
label_1:
      int num1 = -1692051320;
      MemberExpression memberExpression;
      ConstantExpression constantExpression;
      PropertyChangedEventHandler propertyChanged;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1699890529)) % 16U)
        {
          case 0:
            constantExpression = ObservableObject.\u200F​​⁬⁯‎‬‍‎⁭⁭​‬‬‭⁪​⁪⁬⁬‍‎‭⁪⁭⁪⁪⁪‍‎‌⁬⁯‫‎‭‍⁫‏‭‮(memberExpression) as ConstantExpression;
            num1 = (int) num2 * -451551716 ^ 1159792199;
            continue;
          case 1:
            flag2 = memberExpression != null;
            num1 = (int) num2 * 417100427 ^ -1089506150;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * -1989964905 ^ 1573927872;
            continue;
          case 5:
            int num3 = propertyChanged == null ? 266755069 : (num3 = 1836088562);
            num1 = num3 ^ (int) num2 * 1094330525;
            continue;
          case 6:
            num1 = -1395185428;
            continue;
          case 7:
            int num4 = flag1 ? 151919626 : (num4 = 768775140);
            num1 = num4 ^ (int) num2 * 443577735;
            continue;
          case 8:
            int num5 = constantExpression == null ? -1648627572 : (num5 = -1985639138);
            num1 = num5 ^ (int) num2 * -1412195393;
            continue;
          case 9:
            propertyChanged(ObservableObject.\u200B‪⁯‍‬⁫⁯‎‬‮‫⁬⁬​‫‪‪‮⁪⁫‍‍‏‪⁬​‮⁪​⁪​‎⁫‮‍‏‭‎‫⁯‮(constantExpression), ObservableObject.\u202B‎⁮⁭⁫​⁬‮‍⁬⁭‍‪‏‍‭‏‭⁬‍‪‪⁮‭‭‪‍⁮‬‬‌‫‪​⁮‏‏​‏‌‮(ObservableObject.\u200B⁯‪‍⁮⁬‭‎⁯‎‎‏⁭‬⁫‪⁭⁭⁬⁮⁬‮⁭‎‫‫⁫‍‏‎‬⁪‌⁪‬‎⁮⁮⁪‭‮(ObservableObject.\u202A‏⁫⁫⁭‎‬​‎‏‫​⁭‪‏‏‏‬‮⁮⁭​‫‮‭⁫‮⁪⁪‮‬⁯⁫‎⁫‫‎‫⁪⁬‮(memberExpression))));
            num1 = (int) num2 * -269676681 ^ 1373538733;
            continue;
          case 10:
            propertyChanged = this.PropertyChanged;
            num1 = -892767590;
            continue;
          case 11:
            num1 = -1400321575;
            continue;
          case 12:
            num1 = (int) num2 * 2137603366 ^ 1349110456;
            continue;
          case 13:
            num1 = (int) num2 * 1646087524 ^ -1821720464;
            continue;
          case 14:
            int num6 = flag2 ? -1613426485 : (num6 = -1173363763);
            num1 = num6 ^ (int) num2 * -667189738;
            continue;
          case 15:
            memberExpression = ObservableObject.\u200B⁬⁮⁬⁯⁭⁬‪‌⁫‌‎‏⁫‭‫⁮‎‮‬⁪⁮⁯⁯‪⁮‎‬‎‭⁫⁮‬‍​‪​⁯‍⁭‮((LambdaExpression) propertyExpression) as MemberExpression;
            num1 = (int) num2 * 16574472 ^ 585940118;
            continue;
          default:
            goto label_18;
        }
      }
label_3:
      return;
label_18:;
    }

    protected virtual void RaisePropertyChanged()
    {
      StackTrace stackTrace = ObservableObject.\u202A⁬⁫‫‫‌‫⁫‮‫‬⁫‬‪⁬⁬⁪⁬‮‌‏‮⁫‌‎‎⁭‏‎⁯‎‍‬​⁫‭⁮‌⁪‮‮();
label_1:
      int num1 = 940033128;
      while (true)
      {
        uint num2;
        int num3;
        MethodInfo methodInfo;
        bool flag1;
        bool flag2;
        int num4;
        switch ((num2 = (uint) (num1 ^ 278973048)) % 18U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = 1772755192;
            continue;
          case 2:
            num4 = ObservableObject.\u206C‏⁯‭‬‫‮‭⁫‭‏⁬⁮⁪‬⁯⁭​‎⁭‮‮‪‏‮⁮⁫⁭‎⁬⁮⁭‮‬⁬​⁮‮‎⁭‮(ObservableObject.\u200B⁯‪‍⁮⁬‭‎⁯‎‎‏⁭‬⁫‪⁭⁭⁬⁮⁬‮⁭‎‫‫⁫‍‏‎‬⁪‌⁪‬‎⁮⁮⁪‭‮((MemberInfo) methodInfo), \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(922124618U), StringComparison.OrdinalIgnoreCase) ? 1 : 0;
            break;
          case 3:
            num1 = (int) num2 * -776477501 ^ -1420866379;
            continue;
          case 4:
            methodInfo = ObservableObject.\u206C‏‪‪‬​‏‎⁭‮‬⁮‬‌‫⁪​⁫⁬‮⁮⁫‌‭⁭‬‌‍⁯​⁭‫⁫⁯⁭⁪‏‮⁭‬‮(ObservableObject.\u200B‪⁯⁯​‌​‫‍‪⁫⁮⁫⁪​‌​‪⁬‪​‮⁭‬‪⁬‍‫⁯⁪‬‭⁪‎⁮‍⁬‫⁭⁫‮(stackTrace, num3)) as MethodInfo;
            num1 = 1613616107;
            continue;
          case 5:
            flag1 = ObservableObject.\u200C‎‫‬‫⁭‪‭‪‍‮⁪‭⁭⁮⁪‏‏‏‬‌‏‌​‏‌⁫⁯​‭⁫‫‎⁪‪​⁪⁪⁯‏‮(methodInfo, (MethodInfo) null);
            num1 = (int) num2 * 1150035414 ^ -1309973809;
            continue;
          case 6:
            if (ObservableObject.\u206D⁯‭‌‏‮⁫‎⁯‌⁯‏‌‍‌‏⁮⁫‍⁫‎‏‌‫​⁬‍‫⁭‪​⁭⁮‎⁭‮⁬⁯⁬‪‮((MethodBase) methodInfo))
            {
              num1 = (int) num2 * -988852174 ^ -991139266;
              continue;
            }
            num4 = 0;
            break;
          case 7:
            num1 = (int) num2 * -1225888582 ^ 692859502;
            continue;
          case 8:
            this.RaisePropertyChanged(ObservableObject.\u200B⁭‭‌⁭⁪⁭‭⁬⁫‮⁪⁮‪‏‬⁯⁮‌⁫⁪‎⁪⁬‎‍‮⁭‍‬‬⁭‫⁯‪‍⁭⁭⁭‌‮(ObservableObject.\u200B⁯‪‍⁮⁬‭‎⁯‎‎‏⁭‬⁫‪⁭⁭⁬⁮⁬‮⁭‎‫‫⁫‍‏‎‬⁪‌⁪‬‎⁮⁮⁪‭‮((MemberInfo) methodInfo), 4));
            num1 = (int) num2 * 1081334870 ^ -279875941;
            continue;
          case 9:
            int num5 = flag1 ? 2032844286 : (num5 = 1311461279);
            num1 = num5 ^ (int) num2 * -1375028562;
            continue;
          case 10:
            int num6;
            num1 = num6 = num3 < ObservableObject.\u206A‮‪‫⁮‭⁫⁯‬‬‍‪‫⁮⁮⁪⁯‪⁫⁭⁫‫⁮⁫‬‪⁯​⁪⁬‌‍​⁪‪⁯‭​⁮⁬‮(stackTrace) ? 126229890 : (num6 = 625252313);
            continue;
          case 11:
            int num7 = !flag2 ? -2099567442 : (num7 = -157130176);
            num1 = num7 ^ (int) num2 * -634214517;
            continue;
          case 12:
            num3 = 0;
            num1 = (int) num2 * 295485533 ^ -1885112785;
            continue;
          case 13:
            goto label_19;
          case 14:
            goto label_3;
          case 15:
            num1 = 447484505;
            continue;
          case 16:
            ++num3;
            num1 = (int) num2 * -1570229835 ^ 1884539640;
            continue;
          case 17:
            num1 = (int) num2 * 1201213776 ^ -1811438012;
            continue;
          default:
            goto label_23;
        }
        flag2 = num4 != 0;
        num1 = 2086373549;
      }
label_3:
      return;
label_23:
      return;
label_19:
      throw ObservableObject.\u206F​‌‍‏⁮⁭⁮‍‪‬‭‏‌‍‬‫‬⁪​⁮‫⁮‫⁪‌​⁬⁭‍​‮⁪⁬​‮​​⁫‬‮(\u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(971070966U));
    }

    protected ObservableObject()
    {
label_1:
      int num1 = 293564959;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1477206635)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1247145987 ^ 1151362699;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static Delegate \u206E‏‎‬⁮⁪‭⁯⁮‌⁯‏‎‫⁭‪‌⁪⁯​‭⁯‎‏​⁬⁪‪‌‬‎⁯‪‮‏‭⁫‏⁯‎‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u200C‬⁫‍​⁬⁭‌‏⁯‬⁫​‭‮​‫⁫‍‏‌​‍‎‪⁯⁫‏‮⁭‎⁯‏⁮‫‭⁮‬‏‎‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static Type \u202D‌‎‏‭‭‌⁭‭‪‬‬⁪‬‪‭‍⁬⁭‪‬‎‪⁭‏‪‌​‮‌‏‭‪​‍‪‮‌⁮⁯‮([In] object obj0) => obj0.GetType();

    static PropertyInfo \u200D‭‎‫‮⁭‎‮‭​​‌⁯​‮‪‍⁬⁬⁫⁫⁪⁮⁯⁮‍⁯‌‎​‮⁮⁬⁭‮‮⁬‌⁬⁬‮(
      [In] Type obj0,
      [In] string obj1)
    {
      return obj0.GetProperty(obj1);
    }

    static bool \u200E⁭‌​‭⁭⁭‮‮‪⁬⁬⁯‎⁪⁫‮‬⁮‬‬⁫‬‎‍⁫‪‫‭⁫‮‭‫‫‭‬‭‪‌‪‮([In] PropertyInfo obj0, [In] PropertyInfo obj1) => obj0 == obj1;

    static ArgumentException \u200F‏‎⁬‍‏‌‮‪⁯‍⁮⁯​‬‎⁬‏‭​‌‌⁭⁮‮⁯‍‭⁮⁭⁪‭‍‮‬‍‭‎⁯‌‮(
      [In] string obj0,
      [In] string obj1)
    {
      return new ArgumentException(obj0, obj1);
    }

    static PropertyChangedEventArgs \u202B‎⁮⁭⁫​⁬‮‍⁬⁭‍‪‏‍‭‏‭⁬‍‪‪⁮‭‭‪‍⁮‬‬‌‫‪​⁮‏‏​‏‌‮(
      [In] string obj0)
    {
      return new PropertyChangedEventArgs(obj0);
    }

    static Expression \u200B⁬⁮⁬⁯⁭⁬‪‌⁫‌‎‏⁫‭‫⁮‎‮‬⁪⁮⁯⁯‪⁮‎‬‎‭⁫⁮‬‍​‪​⁯‍⁭‮([In] LambdaExpression obj0) => obj0.Body;

    static Expression \u200F​​⁬⁯‎‬‍‎⁭⁭​‬‬‭⁪​⁪⁬⁬‍‎‭⁪⁭⁪⁪⁪‍‎‌⁬⁯‫‎‭‍⁫‏‭‮([In] MemberExpression obj0) => obj0.Expression;

    static object \u200B‪⁯‍‬⁫⁯‎‬‮‫⁬⁬​‫‪‪‮⁪⁫‍‍‏‪⁬​‮⁪​⁪​‎⁫‮‍‏‭‎‫⁯‮([In] ConstantExpression obj0) => obj0.Value;

    static MemberInfo \u202A‏⁫⁫⁭‎‬​‎‏‫​⁭‪‏‏‏‬‮⁮⁭​‫‮‭⁫‮⁪⁪‮‬⁯⁫‎⁫‫‎‫⁪⁬‮([In] MemberExpression obj0) => obj0.Member;

    static string \u200B⁯‪‍⁮⁬‭‎⁯‎‎‏⁭‬⁫‪⁭⁭⁬⁮⁬‮⁭‎‫‫⁫‍‏‎‬⁪‌⁪‬‎⁮⁮⁪‭‮([In] MemberInfo obj0) => obj0.Name;

    static StackTrace \u202A⁬⁫‫‫‌‫⁫‮‫‬⁫‬‪⁬⁬⁪⁬‮‌‏‮⁫‌‎‎⁭‏‎⁯‎‍‬​⁫‭⁮‌⁪‮‮() => new StackTrace();

    static StackFrame \u200B‪⁯⁯​‌​‫‍‪⁫⁮⁫⁪​‌​‪⁬‪​‮⁭‬‪⁬‍‫⁯⁪‬‭⁪‎⁮‍⁬‫⁭⁫‮(
      [In] StackTrace obj0,
      [In] int obj1)
    {
      return obj0.GetFrame(obj1);
    }

    static MethodBase \u206C‏‪‪‬​‏‎⁭‮‬⁮‬‌‫⁪​⁫⁬‮⁮⁫‌‭⁭‬‌‍⁯​⁭‫⁫⁯⁭⁪‏‮⁭‬‮([In] StackFrame obj0) => obj0.GetMethod();

    static bool \u200C‎‫‬‫⁭‪‭‪‍‮⁪‭⁭⁮⁪‏‏‏‬‌‏‌​‏‌⁫⁯​‭⁫‫‎⁪‪​⁪⁪⁯‏‮([In] MethodInfo obj0, [In] MethodInfo obj1) => obj0 != obj1;

    static bool \u206D⁯‭‌‏‮⁫‎⁯‌⁯‏‌‍‌‏⁮⁫‍⁫‎‏‌‫​⁬‍‫⁭‪​⁭⁮‎⁭‮⁬⁯⁬‪‮([In] MethodBase obj0) => obj0.IsSpecialName;

    static bool \u206C‏⁯‭‬‫‮‭⁫‭‏⁬⁮⁪‬⁯⁭​‎⁭‮‮‪‏‮⁮⁫⁭‎⁬⁮⁭‮‬⁬​⁮‮‎⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] StringComparison obj2)
    {
      return obj0.StartsWith(obj1, obj2);
    }

    static string \u200B⁭‭‌⁭⁪⁭‭⁬⁫‮⁪⁮‪‏‬⁯⁮‌⁫⁪‎⁪⁬‎‍‮⁭‍‬‬⁭‫⁯‪‍⁭⁭⁭‌‮([In] string obj0, [In] int obj1) => obj0.Substring(obj1);

    static int \u206A‮‪‫⁮‭⁫⁯‬‬‍‪‫⁮⁮⁪⁯‪⁫⁭⁫‫⁮⁫‬‪⁯​⁪⁬‌‍​⁪‪⁯‭​⁮⁬‮([In] StackTrace obj0) => obj0.FrameCount;

    static InvalidOperationException \u206F​‌‍‏⁮⁭⁮‍‪‬‭‏‌‍‬‫‬⁪​⁮‫⁮‫⁪‌​⁬⁭‍​‮⁪⁬​‮​​⁫‬‮(
      [In] string obj0)
    {
      return new InvalidOperationException(obj0);
    }
  }
}
