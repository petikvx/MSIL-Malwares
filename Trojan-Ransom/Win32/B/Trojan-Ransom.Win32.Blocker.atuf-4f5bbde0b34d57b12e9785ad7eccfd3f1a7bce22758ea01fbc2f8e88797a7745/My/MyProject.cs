// Decompiled with JetBrains decompiler
// Type: lolo.My.MyProject
// Assembly: lolo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B447A0C5-68B9-43E8-8248-58465C7CD332
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.atuf-4f5bbde0b34d57b12e9785ad7eccfd3f1a7bce22758ea01fbc2f8e88797a7745.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.StringsEncoding;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace lolo.My
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.ThreadSafeObjectProvider<MyComputer> m_ComputerObjectProvider;
    private static readonly MyProject.ThreadSafeObjectProvider<MyApplication> m_AppObjectProvider;
    private static readonly MyProject.ThreadSafeObjectProvider<User> m_UserObjectProvider;
    private static MyProject.ThreadSafeObjectProvider<MyProject.MyForms> m_MyFormsObjectProvider;
    private static readonly MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices> m_MyWebServicesObjectProvider;

    static MyProject()
    {
      if (true)
      {
        if (true)
          MyProject.m_ComputerObjectProvider = new MyProject.ThreadSafeObjectProvider<MyComputer>();
      }
      else
        goto label_6;
label_5:
      MyProject.m_AppObjectProvider = new MyProject.ThreadSafeObjectProvider<MyApplication>();
      MyProject.m_UserObjectProvider = new MyProject.ThreadSafeObjectProvider<User>();
label_6:
      MyProject.m_MyFormsObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyForms>();
      if (true)
        goto label_7;
label_3:
      if (true)
        return;
      goto label_5;
label_7:
      MyProject.m_MyWebServicesObjectProvider = new MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices>();
      goto label_3;
    }

    [SpecialName]
    internal static MyApplication get_Application() => MyProject.m_AppObjectProvider.get_GetInstance();

    [SpecialName]
    internal static MyProject.MyForms get_Forms() => MyProject.m_MyFormsObjectProvider.get_GetInstance();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyForms
    {
      public lol m_lol;
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;

      [SpecialName]
      public lol get_lol()
      {
        this.m_lol = MyProject.MyForms.Create__Instance__<lol>(this.m_lol);
        return this.m_lol;
      }

      private static T Create__Instance__<T>([In] T obj0) where T : Form, new()
      {
        if ((object) obj0 != null && !obj0.IsDisposed)
          return obj0;
        if (MyProject.MyForms.m_FormBeingCreated != null)
        {
          if (MyProject.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T)))
            throw new InvalidOperationException(Utils.GetResourceString(Strings.Get(130)));
        }
        else
          goto label_10;
label_4:
        MyProject.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
        try
        {
          return new T();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          if (ex.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString(Strings.Get(171), ex.InnerException.Message), ex.InnerException);
        }
        finally
        {
          MyProject.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
        }
label_10:
        MyProject.MyForms.m_FormBeingCreated = new Hashtable();
        goto label_4;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      [SpecialName]
      internal T get_GetInstance()
      {
        // ISSUE: reference to a compiler-generated field
        if ((object) MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
          goto label_2;
label_1:
        // ISSUE: reference to a compiler-generated field
        return MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
label_2:
        // ISSUE: reference to a compiler-generated field
        MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
        goto label_1;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}
