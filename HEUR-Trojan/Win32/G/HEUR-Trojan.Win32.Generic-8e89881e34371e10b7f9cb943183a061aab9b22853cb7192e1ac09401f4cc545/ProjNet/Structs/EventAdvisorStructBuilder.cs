// Decompiled with JetBrains decompiler
// Type: ProjNet.Structs.EventAdvisorStructBuilder
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Adapter;
using IRefl.Collections;
using IRefl.Composer;
using IRefl.Definitions;
using IRefl.Lists;
using IRefl.Managers;
using IRefl.Objects;
using IRefl.Pools;
using IRefl.Resolver;
using IRefl.Watchers;
using ProjNet.Candidates;
using ProjNet.Common;
using ProjNet.Maps;
using ProjNet.Services;
using ProjNet.States;
using ProjNet.Templates;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;

namespace ProjNet.Structs
{
  public class EventAdvisorStructBuilder : SingletonObserverWatcher
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public SpecificationMerchantCandidate VerifyMerchant(
      Reg instance,
      Reg selection)
    {
      int num1 = 2;
      SpecificationMerchantCandidate merchantCandidate1;
      while (true)
      {
        int num2 = num1;
        SpecificationMerchantCandidate merchantCandidate2;
        while (true)
        {
          int num3;
          int num4;
          switch (num2)
          {
            case 0:
              goto label_9;
            case 1:
            case 7:
              num3 = selection is ReaderItemState ? 1 : 0;
              break;
            case 2:
              if (!(instance is Instance))
              {
                num3 = 0;
                break;
              }
              int num5 = 7;
              num2 = EventAdvisorStructBuilder.StopWrapper() ? num5 : num5;
              continue;
            case 3:
              goto label_25;
            case 4:
            case 5:
              goto label_26;
            case 6:
              goto label_21;
            case 8:
              num4 = selection is CreatorMerchantCandidate ? 1 : 0;
              goto label_19;
            case 9:
              goto label_31;
            default:
              goto label_16;
          }
          if (num3 == 0)
          {
            if (!(instance is ReaderItemState) || !(selection is Instance))
            {
              if (instance is ReaderItemState)
              {
                int num6 = 8;
                num2 = EventAdvisorStructBuilder.StopWrapper() ? num6 : num6;
                continue;
              }
              num4 = 0;
            }
            else
              goto label_6;
          }
          else
            break;
label_19:
          if (num4 == 0)
          {
            if (!(instance is CreatorMerchantCandidate) || !(selection is ReaderItemState))
            {
              if (!(instance is Instance) || !(selection is Instance))
              {
                if (instance is CreatorMerchantCandidate && selection is CreatorMerchantCandidate)
                {
                  if (true)
                    num2 = 6;
                  else
                    goto label_25;
                }
                else
                  goto label_22;
              }
              else
                goto label_28;
            }
            else
              goto label_26;
          }
          else
          {
            merchantCandidate2 = EventAdvisorStructBuilder.FindAdvisor((ReaderItemState) instance, (CreatorMerchantCandidate) selection);
            if (true)
              num2 = 3;
            else
              goto label_21;
          }
        }
        merchantCandidate2 = EventAdvisorStructBuilder.AddAdvisor((Instance) instance, (ReaderItemState) selection);
        goto label_25;
label_6:
        merchantCandidate2 = EventAdvisorStructBuilder.ConnectAdvisor((ReaderItemState) instance, (Instance) selection);
        goto label_25;
label_9:
        merchantCandidate2 = EventAdvisorStructBuilder.ReadAdvisor(instance as Instance, selection as Instance);
        goto label_25;
label_16:
        num1 = 5;
        continue;
label_21:
        merchantCandidate2 = EventAdvisorStructBuilder.CollectAdvisor((CreatorMerchantCandidate) instance, (CreatorMerchantCandidate) selection);
        goto label_25;
label_22:
        if (instance is ReaderItemState && selection is ReaderItemState)
          merchantCandidate2 = this.PostAdvisor(instance as ReaderItemState, selection as ReaderItemState);
        else
          break;
label_25:
        merchantCandidate1 = merchantCandidate2;
        num1 = 9;
        continue;
label_26:
        merchantCandidate2 = EventAdvisorStructBuilder.SearchAdvisor((CreatorMerchantCandidate) instance, (ReaderItemState) selection);
        goto label_25;
label_28:
        num1 = 0;
      }
      throw new NotSupportedException("No support for transforming between the two specified coordinate systems");
label_31:
      return merchantCandidate1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void PushAdvisor(
      WrapperMerchantCandidate v,
      ref List<SpecificationMerchantCandidate> selection)
    {
      foreach (SpecificationMerchantCandidate v1 in v.InsertAdvisor())
      {
        int num1 = 3;
        while (true)
        {
          int num2 = num1;
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 2:
              case 5:
                goto label_10;
              case 1:
              case 4:
                goto label_3;
              case 3:
                goto label_9;
              default:
                int num3 = 0;
                num2 = EventAdvisorStructBuilder.StopWrapper() ? num3 : num3;
                continue;
            }
          }
label_3:
          bool flag;
          if (!flag)
          {
            selection.Add(v1);
            num1 = 5;
            continue;
          }
          break;
label_9:
          flag = v1 is WrapperMerchantCandidate;
          num1 = 4;
        }
        EventAdvisorStructBuilder.PushAdvisor(v1 as WrapperMerchantCandidate, ref selection);
label_10:;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate FindAdvisor(
      ReaderItemState init,
      CreatorMerchantCandidate caller)
    {
      OrderValuePool init2 = EventAdvisorStructBuilder.StartAdvisor(caller);
      return (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) init, (Reg) caller, (DecoratorTokenizerResolver) 1, init2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate SearchAdvisor(
      CreatorMerchantCandidate key,
      ReaderItemState pol)
    {
      OrderValuePool init2 = EventAdvisorStructBuilder.StartAdvisor(key).ManageItem();
      return (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) key, (Reg) pol, (DecoratorTokenizerResolver) 1, init2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate ReadAdvisor(
      Instance var1,
      Instance map)
    {
      int num = 4;
      EventAdvisorStructBuilder advisorStructBuilder;
      WrapperMerchantCandidate init2;
      SpecificationMerchantCandidate merchantCandidate;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) var1, (Reg) map, (DecoratorTokenizerResolver) 2, (OrderValuePool) init2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
            if (true)
            {
              num = 6;
              continue;
            }
            goto case 4;
          case 1:
            advisorStructBuilder = new EventAdvisorStructBuilder();
            init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) var1, (Reg) var1.AssetMerchant()));
            num = 5;
            continue;
          case 2:
          case 5:
            init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) var1.AssetMerchant(), (Reg) map.AssetMerchant()));
            init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) map.AssetMerchant(), (Reg) map));
            goto case 0;
          case 4:
            init2 = new WrapperMerchantCandidate();
            if (EventAdvisorStructBuilder.PrintWrapper())
            {
              num = 1;
              continue;
            }
            goto label_8;
          case 6:
            goto label_8;
          default:
            if (true)
            {
              num = 0;
              continue;
            }
            goto case 0;
        }
      }
label_8:
      return merchantCandidate;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate ConnectAdvisor(
      ReaderItemState instance,
      Instance selection)
    {
      int num1 = 5;
      bool flag;
      SpecificationMerchantCandidate merchantCandidate;
      WrapperMerchantCandidate init2_1;
      EventAdvisorStructBuilder advisorStructBuilder;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            flag = instance.InvokeItem((object) selection.AssetMerchant());
            int num2 = 2;
            num1 = EventAdvisorStructBuilder.StopWrapper() ? num2 : num2;
            continue;
          case 1:
          case 7:
            goto label_9;
          case 2:
            if (flag)
            {
              OrderValuePool init2_2 = EventAdvisorStructBuilder.LogoutAdvisor(selection.InsertMerchant(), selection.AssetMerchant().ValidateItem().NewItem(), selection.CalculateItem());
              merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) instance, (Reg) selection, (DecoratorTokenizerResolver) 2, init2_2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
              if (!EventAdvisorStructBuilder.StopWrapper())
              {
                num1 = 1;
                continue;
              }
              goto case 4;
            }
            else
            {
              init2_1 = new WrapperMerchantCandidate();
              advisorStructBuilder = new EventAdvisorStructBuilder();
              goto case 3;
            }
          case 3:
            init2_1.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) instance, (Reg) selection.AssetMerchant()));
            init2_1.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) selection.AssetMerchant(), (Reg) selection));
            num1 = 6;
            continue;
          case 4:
          case 6:
            merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) instance, (Reg) selection, (DecoratorTokenizerResolver) 2, (OrderValuePool) init2_1, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
            if (!EventAdvisorStructBuilder.StopWrapper())
            {
              num1 = 7;
              continue;
            }
            goto case 3;
          default:
            num1 = 3;
            continue;
        }
      }
label_9:
      return merchantCandidate;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate AddAdvisor(
      Instance param,
      ReaderItemState second)
    {
      int num1 = 3;
      if (EventAdvisorStructBuilder.PrintWrapper())
        goto label_4;
label_1:
      OrderValuePool init2_1 = EventAdvisorStructBuilder.LogoutAdvisor(param.InsertMerchant(), param.AssetMerchant().ValidateItem().NewItem(), param.CalculateItem()).ManageItem();
      SpecificationMerchantCandidate merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) param, (Reg) second, (DecoratorTokenizerResolver) 2, init2_1, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
      goto label_11;
label_4:
      while (true)
      {
        WrapperMerchantCandidate init2_2;
        EventAdvisorStructBuilder advisorStructBuilder;
        int num2;
        bool flag;
        switch (num1)
        {
          case 0:
          case 1:
            if (!flag)
            {
              init2_2 = new WrapperMerchantCandidate();
              advisorStructBuilder = new EventAdvisorStructBuilder();
              init2_2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) param, (Reg) param.AssetMerchant()));
              goto case 4;
            }
            else
            {
              num2 = 5;
              break;
            }
          case 2:
          case 5:
            goto label_1;
          case 3:
            flag = param.AssetMerchant().InvokeItem((object) second);
            num2 = 0;
            break;
          case 4:
            init2_2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) param.AssetMerchant(), (Reg) second));
            num1 = 6;
            continue;
          case 6:
            merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) param, (Reg) second, (DecoratorTokenizerResolver) 2, (OrderValuePool) init2_2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
            num2 = 7;
            break;
          case 7:
            goto label_11;
          default:
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 0;
        }
        num1 = num2;
      }
label_11:
      return merchantCandidate;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private SpecificationMerchantCandidate PostAdvisor(
      ReaderItemState first,
      ReaderItemState ord)
    {
      int num1 = 6;
      SpecificationMerchantCandidate merchantCandidate1;
      while (true)
      {
        int num2 = num1;
        WrapperMerchantCandidate init2;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 6:
              goto label_7;
            case 1:
            case 5:
              goto label_8;
            case 2:
              merchantCandidate1 = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) first, (Reg) ord, (DecoratorTokenizerResolver) 2, (OrderValuePool) init2, string.Empty, string.Empty, -1L, string.Empty, string.Empty);
              if (EventAdvisorStructBuilder.PrintWrapper())
              {
                num2 = 7;
                continue;
              }
              goto label_11;
            case 3:
              goto label_2;
            case 4:
              goto label_1;
            case 7:
              goto label_11;
            default:
              goto label_6;
          }
        }
label_1:
        Serializer serializer = new Serializer();
        CreatorMerchantCandidate merchantCandidate2 = serializer.InstantiateProcess(first.ValidateItem().Name + " Geocentric", first.ValidateItem(), AdvisorStatusMap.ViewRegistry(), first.MoveItem());
        CreatorMerchantCandidate merchantCandidate3 = serializer.InstantiateProcess(ord.ValidateItem().Name + " Geocentric", ord.ValidateItem(), AdvisorStatusMap.ViewRegistry(), first.MoveItem());
        init2 = new WrapperMerchantCandidate();
        EventAdvisorStructBuilder advisorStructBuilder;
        init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) first, (Reg) merchantCandidate2));
        init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) merchantCandidate2, (Reg) merchantCandidate3));
        init2.InsertAdvisor().Add(advisorStructBuilder.VerifyMerchant((Reg) merchantCandidate3, (Reg) ord));
        num1 = 2;
        continue;
label_6:
        num1 = 4;
        continue;
label_7:
        bool flag = first.ValidateItem().InvokeItem((object) ord.ValidateItem());
        num1 = 5;
        continue;
label_8:
        if (!flag)
        {
          advisorStructBuilder = new EventAdvisorStructBuilder();
          goto label_1;
        }
        else
          num1 = 3;
      }
label_2:
      merchantCandidate1 = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) first, (Reg) ord, (DecoratorTokenizerResolver) 1, (OrderValuePool) new ListValueManager(first, ord), string.Empty, string.Empty, -1L, string.Empty, string.Empty);
label_11:
      return merchantCandidate1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static SpecificationMerchantCandidate CollectAdvisor(
      CreatorMerchantCandidate last,
      CreatorMerchantCandidate attr)
    {
      int num1 = 6;
      WrapperMerchantCandidate init2;
      SpecificationMerchantCandidate merchantCandidate;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 6:
              goto label_11;
            case 1:
              goto label_1;
            case 2:
            case 5:
              init2.InsertAdvisor().Add((SpecificationMerchantCandidate) new FacadeStatusMap(attr.ValidateItem().ResolveItem() == null || attr.ValidateItem().ResolveItem().RevertRegistry() ? (Reg) attr : (Reg) ListenerTemplate.WGS84, (Reg) last, (DecoratorTokenizerResolver) 2, (OrderValuePool) new Bridge(last.ValidateItem().ResolveItem()), "", "", -1L, "", ""));
              break;
            case 3:
              if (last.ValidateItem().ResolveItem() != null && !last.ValidateItem().ResolveItem().RevertRegistry())
              {
                num2 = 5;
                continue;
              }
              break;
            case 4:
label_12:
              goto label_13;
            case 7:
              goto label_15;
            default:
              goto label_10;
          }
          if (attr.ValidateItem().ResolveItem() != null && !attr.ValidateItem().ResolveItem().RevertRegistry())
          {
            init2.InsertAdvisor().Add((SpecificationMerchantCandidate) new FacadeStatusMap(last.ValidateItem().ResolveItem() == null || last.ValidateItem().ResolveItem().RevertRegistry() ? (Reg) last : (Reg) ListenerTemplate.WGS84, (Reg) attr, (DecoratorTokenizerResolver) 2, new Bridge(attr.ValidateItem().ResolveItem()).ManageItem(), "", "", -1L, "", ""));
            goto label_12;
          }
label_13:
          if (init2.InsertAdvisor().Count != 1)
          {
            merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) last, (Reg) attr, (DecoratorTokenizerResolver) 3, (OrderValuePool) init2, "", "", -1L, "", "");
            num2 = 7;
          }
          else
            num2 = 1;
        }
label_10:
        num1 = 4;
        continue;
label_11:
        init2 = new WrapperMerchantCandidate();
        num1 = 3;
      }
label_1:
      merchantCandidate = (SpecificationMerchantCandidate) new FacadeStatusMap((Reg) last, (Reg) attr, (DecoratorTokenizerResolver) 3, init2.InsertAdvisor()[0].GetMerchant(), "", "", -1L, "", "");
label_15:
      return merchantCandidate;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static OrderValuePool StartAdvisor(CreatorMerchantCandidate i)
    {
      int num1 = 3;
      OrderValuePool orderValuePool;
      while (true)
      {
        List<Config> var1;
        int num2;
        switch (num1)
        {
          case 0:
          case 3:
            var1 = new List<Config>(2);
            num1 = 1;
            continue;
          case 1:
            var1.Add(new Config("semi_major", i.ValidateItem().NewItem().ListItem()));
            var1.Add(new Config("semi_minor", i.ValidateItem().NewItem().ViewItem()));
            goto case 2;
          case 2:
          case 4:
            orderValuePool = (OrderValuePool) new ContainerValuePool(var1);
            num2 = 5;
            break;
          case 5:
            goto label_7;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
      }
label_7:
      return orderValuePool;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static OrderValuePool LogoutAdvisor(
      GlobalPrototypeAdapter config,
      Page counter,
      TagStatusService helper)
    {
      int num1 = 4;
      if (!EventAdvisorStructBuilder.StopWrapper())
        goto label_21;
label_1:
      List<Config> configList = new List<Config>(config.CreateItem());
      num1 = 13;
label_21:
      OrderValuePool orderValuePool1;
      while (true)
      {
        OrderValuePool orderValuePool2;
        int num2;
        string s;
        uint stringHash;
        switch (num1)
        {
          case 0:
          case 4:
            goto label_1;
          case 1:
            switch (stringHash)
            {
              case 782370278:
                if (s == "albers")
                  break;
                goto label_4;
              case 1033055774:
                if (!(s == "albers_conic_equal_area"))
                {
                  num2 = 11;
                  goto label_20;
                }
                else
                  break;
              default:
                num2 = 8;
                goto label_20;
            }
            orderValuePool2 = (OrderValuePool) new FactoryValueManager(configList);
            num2 = 3;
            break;
          case 2:
          case 6:
            if (stringHash != 1452798200U || !(s == "mercator"))
              goto label_4;
            else
              goto label_40;
          case 3:
          case 12:
label_5:
            orderValuePool1 = orderValuePool2;
            num2 = 14;
            break;
          case 5:
          case 8:
          case 10:
          case 11:
            goto label_4;
          case 7:
            configList.Add(new Config("semi_minor", counter.ViewItem()));
            configList.Add(new Config("unit", helper.StopItem()));
            orderValuePool2 = (OrderValuePool) null;
            s = config.ChangeMerchant().ToLower(CultureInfo.InvariantCulture).Replace(' ', '_');
            // ISSUE: reference to a compiler-generated method
            stringHash = \u003CPrivateImplementationDetails\u003E.ComputeStringHash(s);
            if (stringHash > 1033055774U)
              goto label_31;
            else
              goto label_24;
label_3:
            orderValuePool2 = (OrderValuePool) new PolicyTemplate(configList);
            goto case 3;
label_24:
            if (stringHash <= 635500119U)
            {
              if (stringHash == 518387999U)
              {
                if (s == "lambert_conformal_conic_2sp")
                  goto label_3;
                else
                  goto label_4;
              }
              else if (stringHash != 635500119U || !(s == "mercator_1sp"))
                goto label_4;
              else
                goto label_40;
            }
            else if (stringHash == 731662293U)
            {
              if (s == "lambert_conformal_conic")
                goto label_3;
              else
                goto label_4;
            }
            else
            {
              num2 = 1;
              break;
            }
label_31:
            if (stringHash > 1452798200U)
            {
              if (stringHash == 2862604809U)
              {
                if (s == "krovak")
                {
                  orderValuePool2 = (OrderValuePool) new BaseObserverObject(configList);
                  goto case 3;
                }
                else
                  goto label_4;
              }
              else if (stringHash != 3278977974U)
              {
                if (stringHash == 3986553434U)
                {
                  if (!(s == "lambert_conic_conformal_(2sp)"))
                  {
                    num1 = 5;
                    continue;
                  }
                  goto label_3;
                }
                else
                  goto label_4;
              }
              else
              {
                if (s == "transverse_mercator")
                {
                  orderValuePool2 = (OrderValuePool) new DicOrderList(configList);
                  num2 = 12;
                  break;
                }
                goto label_4;
              }
            }
            else if (stringHash == 1431470630U)
            {
              if (s == "mercator_2sp")
                goto label_40;
              else
                goto label_4;
            }
            else
            {
              num1 = 2;
              continue;
            }
          case 9:
            configList.Add(new Config("semi_major", counter.ListItem()));
            if (EventAdvisorStructBuilder.PrintWrapper())
            {
              num1 = 7;
              continue;
            }
            goto label_4;
          case 13:
            for (int insertIAt = 0; insertIAt < config.CreateItem(); ++insertIAt)
              configList.Add(config.PushMerchant(insertIAt));
            if (!EventAdvisorStructBuilder.StopWrapper())
            {
              num1 = 9;
              continue;
            }
            goto label_4;
          case 14:
            goto label_42;
          default:
            if (true)
            {
              num1 = 10;
              continue;
            }
            goto case 7;
        }
label_20:
        num1 = num2;
        continue;
label_40:
        orderValuePool2 = (OrderValuePool) new SystemMerchantCandidate(configList);
        goto label_5;
      }
label_4:
      throw new NotSupportedException(string.Format("Projection {0} is not supported.", (object) config.ChangeMerchant()));
label_42:
      return orderValuePool1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public EventAdvisorStructBuilder()
    {
      PageAdvisorStructBuilder.PrepareCreator();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool PrintWrapper() => true;

    internal static bool StopWrapper() => false;
  }
}
