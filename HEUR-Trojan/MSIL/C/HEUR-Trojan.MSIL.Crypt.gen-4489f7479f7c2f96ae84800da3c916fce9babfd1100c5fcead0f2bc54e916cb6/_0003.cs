// Decompiled with JetBrains decompiler
// Type: 
// Assembly: ICDF, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C613125F-06A1-4F4F-F6FA-0F3E7CE39FFB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-4489f7479f7c2f96ae84800da3c916fce9babfd1100c5fcead0f2bc54e916cb6.exe

using System;
using System.Diagnostics;
using System.Threading;

internal static class \u0003
{
  internal sealed class \u0002 : \u0008<int>, \u0005, \u000F<int>, \u000E, \u0006
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    private int \u0008;
    public int \u0006;
    private int \u000E;
    private int \u000F;
    private \u000F<int> \u0002\u2000;
    private int \u0003\u2000;

    [DebuggerHidden]
    public \u0002(int _param1)
    {
      this.\u0002 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    void \u000E.\u0002​\u2006\u2009\u2002\u0002()
    {
      switch (this.\u0002)
      {
        case -3:
        case 1:
          try
          {
          }
          finally
          {
            this.\u0003();
          }
          break;
      }
    }

    bool \u0006.\u0006​\u2006\u2009\u2002\u0002()
    {
      bool flag;
      // ISSUE: fault handler
      try
      {
        switch (this.\u0002)
        {
          case 0:
            this.\u0002 = -1;
            this.\u000E = 0;
            this.\u000F = 1;
            this.\u0002\u2000 = ((\u0008<int>) new \u0003.\u0003(-2)).GetEnumerator();
            this.\u0002 = -3;
            break;
          case 1:
            this.\u0002 = -3;
            --this.\u0008;
            if (this.\u0008 == 0)
            {
              flag = false;
              this.\u0003();
              goto label_10;
            }
            else
            {
              int num = this.\u000F;
              this.\u000F = num + this.\u000E + this.\u0008 ^ 2095070093 + this.\u0003\u2000;
              this.\u000E = num;
              break;
            }
          default:
            flag = false;
            goto label_10;
        }
        if (this.\u0002\u2000.\u0006​\u2006\u2009\u2002\u0002())
        {
          this.\u0003\u2000 = this.\u0002\u2000.\u0006​\u2006\u2009\u2002\u0002();
          this.\u0003 = this.\u000F;
          this.\u0002 = 1;
          flag = true;
        }
        else
        {
          this.\u0003();
          this.\u0002\u2000 = (\u000F<int>) null;
          flag = false;
        }
      }
      __fault
      {
        this.\u0002​\u2006\u2009\u2002\u0002();
      }
label_10:
      return flag;
    }

    private void \u0003()
    {
      this.\u0002 = -1;
      if (this.\u0002\u2000 == null)
        return;
      this.\u0002\u2000.\u000E​\u2006\u2009\u2002\u0002();
    }

    [DebuggerHidden]
    int \u000F<int>.\u0002​\u2006\u2009\u2002\u0002() => this.\u0003;

    [DebuggerHidden]
    void \u0006.\u0002​\u2006\u2009\u2002\u0005() => throw new NotSupportedException();

    [DebuggerHidden]
    object \u0006.\u0002​\u2006\u2009\u2002\u0002() => (object) this.\u0003;

    [DebuggerHidden]
    \u000F<int> \u0008<int>.\u0002​\u2006\u2009\u2002\u0002()
    {
      \u0003.\u0002 obj;
      if (this.\u0002 == -2 && this.\u0005 == Thread.CurrentThread.ManagedThreadId)
      {
        this.\u0002 = 0;
        obj = this;
      }
      else
        obj = new \u0003.\u0002(0);
      obj.\u0008 = this.\u0006;
      return (\u000F<int>) obj;
    }

    [DebuggerHidden]
    \u0006 \u0005.\u0002​\u2006\u2009\u2002\u0002() => (\u0006) this.\u0002​\u2006\u2009\u2002\u0002();
  }

  private sealed class \u0003 : \u0008<int>, \u0005, \u000F<int>, \u000E, \u0006
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    private int \u0008;

    [DebuggerHidden]
    public \u0003(int _param1)
    {
      this.\u0002 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    void \u000E.\u0003​\u2006\u2009\u2002\u0002()
    {
    }

    bool \u0006.\u0006​\u2006\u2009\u2002\u0002()
    {
      switch (this.\u0002)
      {
        case 0:
          this.\u0002 = -1;
          this.\u0008 = 1;
          break;
        case 1:
          this.\u0002 = -1;
          this.\u0008 += this.\u0008;
          if (this.\u0008 == 64)
          {
            this.\u0008 = 5;
            break;
          }
          break;
        default:
          return false;
      }
      this.\u0003 = this.\u0008;
      this.\u0002 = 1;
      return true;
    }

    [DebuggerHidden]
    int \u000F<int>.\u0003​\u2006\u2009\u2002\u0002() => this.\u0003;

    [DebuggerHidden]
    void \u0006.\u0003​\u2006\u2009\u2002\u0003() => throw new NotSupportedException();

    [DebuggerHidden]
    object \u0006.\u0003​\u2006\u2009\u2002\u0002() => (object) this.\u0003;

    [DebuggerHidden]
    \u000F<int> \u0008<int>.\u0003​\u2006\u2009\u2002\u0002()
    {
      \u0003.\u0003 obj;
      if (this.\u0002 == -2 && this.\u0005 == Thread.CurrentThread.ManagedThreadId)
      {
        this.\u0002 = 0;
        obj = this;
      }
      else
        obj = new \u0003.\u0003(0);
      return (\u000F<int>) obj;
    }

    [DebuggerHidden]
    \u0006 \u0005.\u0003​\u2006\u2009\u2002\u0002() => (\u0006) this.\u0003​\u2006\u2009\u2002\u0002();
  }

  internal sealed class \u0005 : \u0008<int>, \u0005, \u000F<int>, \u000E, \u0006
  {
    private int \u0002;
    private int \u0003;
    private int \u0005;
    private int \u0008;
    public int \u0006;
    private int \u000E;
    private \u000F<int> \u000F;

    [DebuggerHidden]
    public \u0005(int _param1)
    {
      this.\u0002 = _param1;
      this.\u0005 = Thread.CurrentThread.ManagedThreadId;
    }

    [DebuggerHidden]
    void \u000E.\u0005​\u2006\u2009\u2002\u0002()
    {
      switch (this.\u0002)
      {
        case -3:
        case 1:
          try
          {
          }
          finally
          {
            this.\u0003();
          }
          break;
      }
    }

    bool \u0006.\u0006​\u2006\u2009\u2002\u0002()
    {
      bool flag;
      // ISSUE: fault handler
      try
      {
        switch (this.\u0002)
        {
          case 0:
            this.\u0002 = -1;
            this.\u000E = 7;
            int num1 = this.\u0008;
            this.\u000F = ((\u0008<int>) new \u0003.\u0002(-2)
            {
              \u0006 = num1
            }).GetEnumerator();
            this.\u0002 = -3;
            break;
          case 1:
            this.\u0002 = -3;
            if (this.\u000E == 0)
            {
              flag = false;
              this.\u0003();
              goto label_13;
            }
            else
              break;
          default:
            flag = false;
            goto label_13;
        }
        if (this.\u000F.\u0006​\u2006\u2009\u2002\u0002())
        {
          int num2 = this.\u000F.\u0006​\u2006\u2009\u2002\u0002() ^ this.\u0008;
          if ((num2 & 3) == 0)
            num2 ^= 1847243381;
          --this.\u000E;
          if ((num2 & 15) == 0)
            num2 ^= 1932566006;
          this.\u0003 = num2;
          this.\u0002 = 1;
          flag = true;
        }
        else
        {
          this.\u0003();
          this.\u000F = (\u000F<int>) null;
          flag = false;
        }
      }
      __fault
      {
        this.\u0005​\u2006\u2009\u2002\u0002();
      }
label_13:
      return flag;
    }

    private void \u0003()
    {
      this.\u0002 = -1;
      if (this.\u000F == null)
        return;
      this.\u000F.\u000E​\u2006\u2009\u2002\u0002();
    }

    [DebuggerHidden]
    int \u000F<int>.\u0005​\u2006\u2009\u2002\u0002() => this.\u0003;

    [DebuggerHidden]
    void \u0006.\u0005​\u2006\u2009\u2002\u0005() => throw new NotSupportedException();

    [DebuggerHidden]
    object \u0006.\u0005​\u2006\u2009\u2002\u0002() => (object) this.\u0003;

    [DebuggerHidden]
    \u000F<int> \u0008<int>.\u0005​\u2006\u2009\u2002\u0002()
    {
      \u0003.\u0005 obj;
      if (this.\u0002 == -2 && this.\u0005 == Thread.CurrentThread.ManagedThreadId)
      {
        this.\u0002 = 0;
        obj = this;
      }
      else
        obj = new \u0003.\u0005(0);
      obj.\u0008 = this.\u0006;
      return (\u000F<int>) obj;
    }

    [DebuggerHidden]
    \u0006 \u0005.\u0005​\u2006\u2009\u2002\u0002() => (\u0006) this.\u0005​\u2006\u2009\u2002\u0002();
  }
}
