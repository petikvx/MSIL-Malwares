// Decompiled with JetBrains decompiler
// Type: TumblrAPI.PostItems.PostItemBase
// Assembly: EventListe, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 17402B6D-E2A2-428E-97AD-7F2170B297A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\Backdoor.Win32.Buterat.frsq-f1c24055722dc6f94c4b223ed4a7bce8ffb5c5bb3030bca735d6ceab513d8d31.exe

using System;
using System.Collections.Generic;

namespace TumblrAPI.PostItems
{
  public abstract class PostItemBase
  {
    public int PostId { get; set; }

    protected abstract Dictionary<string, string> GetPostItemsInternal();

    public TumblrResult Publish()
    {
      if (Authentication.Status == AuthenticationStatus.Valid)
        return this.Publish(Authentication.Email, Authentication.Password, "");
      throw new InvalidOperationException("You are not authenticated.  You can call the Connect method or the Publish method and pass in your credentials.");
    }

    public TumblrResult Publish(string email, string password, string group)
    {
      Dictionary<string, string> values = new Dictionary<string, string>((IDictionary<string, string>) this.GetPostItemsInternal());
      values.Add(nameof (email), email);
      values.Add(nameof (password), password);
      values.Add("generator", "TumblrAPI.NET");
      if (!string.IsNullOrEmpty(group))
        values.Add(nameof (group), group);
      TumblrResult tumblrResult = new HttpHelper("", (IDictionary<string, string>) values).Post();
      int result;
      if (tumblrResult.PostStatus == PostStatus.Created && int.TryParse(tumblrResult.Message, out result))
        this.PostId = result;
      return tumblrResult;
    }
  }
}
