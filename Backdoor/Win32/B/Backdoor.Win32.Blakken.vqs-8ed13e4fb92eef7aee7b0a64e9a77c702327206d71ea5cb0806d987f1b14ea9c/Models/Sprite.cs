// Decompiled with JetBrains decompiler
// Type: BlockGameApp.Models.Sprite
// Assembly: FormatterAssemblySt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 877C36BA-E94F-4F44-80EE-D68074F87B8D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqs-8ed13e4fb92eef7aee7b0a64e9a77c702327206d71ea5cb0806d987f1b14ea9c.exe

using System;
using System.Drawing;
using System.Drawing.Drawing2D;

namespace BlockGameApp.Models
{
  public class Sprite : IDisposable
  {
    public Sprite(int x, int y, int width, int height)
      : this(x, y, width, height, Color.LightGray, Color.DarkGray)
    {
    }

    public Sprite(
      int x,
      int y,
      int width,
      int height,
      Color fill,
      Color outline,
      float outlineWidth = 2f)
    {
      this.X = x;
      this.Y = y;
      this.Width = width;
      this.Height = height;
      this.Pen = new Pen(outline, outlineWidth);
      this.Pen.Alignment = PenAlignment.Inset;
      this.Brush = (Brush) new SolidBrush(fill);
    }

    public virtual void Draw(Graphics graphics)
    {
      graphics.FillRectangle(this.Brush, this.Rectangle);
      graphics.DrawRectangle(this.Pen, this.Rectangle);
    }

    public virtual void Dispose()
    {
      if (this.Brush != null)
        this.Brush.Dispose();
      if (this.Pen == null)
        return;
      this.Pen.Dispose();
    }

    public int X { get; set; }

    public int Y { get; set; }

    public int Width { get; set; }

    public int Height { get; set; }

    public Rectangle Rectangle => new Rectangle(this.X, this.Y, this.Width, this.Height);

    private Brush Brush { get; set; }

    private Pen Pen { get; set; }
  }
}
