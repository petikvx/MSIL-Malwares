// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: ObjRefSurroga, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D36518F-5F0C-4DDD-80AA-3BF17FC6E8B1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-87b4a205c27d8ffaecb7e687ace76ed76394ae98d22a2a8be17f532d917c236e.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u200C⁭‬⁭⁭⁮⁯‮‪‪‮⁭‪‎⁪‫‍​⁯⁭‬​⁬​‍‬⁬⁬‭‭‍⁯⁯‫⁫⁯‍‌‮‫‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1637234907;
      int index;
      int count;
      T obj;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1459177891)) % 13U)
        {
          case 0:
            obj = list[index];
            num1 = (int) num2 * 1641189159 ^ -322616741;
            continue;
          case 1:
            index = ScrambleExtention.\u200F‍‍‬⁮‭⁪‭‫‫⁭‌​​⁭⁮⁬⁫​‭‬‌⁮​‌‮⁮‫‌‬‏⁮⁫‫‍‪‭‍⁭⁫‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -1948750803 ^ -1709067594;
            continue;
          case 2:
            --count;
            num1 = -1054713715;
            continue;
          case 3:
            num1 = (int) num2 * -2090578312 ^ 1003179424;
            continue;
          case 4:
            count = list.Count;
            num1 = (int) num2 * 463427194 ^ 684930024;
            continue;
          case 5:
            num1 = (int) num2 * -1727756611 ^ 1213804721;
            continue;
          case 6:
            int num3 = !flag ? 1845754414 : (num3 = 1895108229);
            num1 = num3 ^ (int) num2 * 622274240;
            continue;
          case 7:
            flag = count > 1;
            num1 = -951075746;
            continue;
          case 8:
            goto label_3;
          case 9:
            list[index] = list[count];
            num1 = (int) num2 * 1691269408 ^ 769987296;
            continue;
          case 10:
            goto label_1;
          case 11:
            num1 = (int) num2 * -180720264 ^ -781744000;
            continue;
          case 12:
            list[count] = obj;
            num1 = (int) num2 * -346766428 ^ 709541033;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u200F‍‍‬⁮‭⁪‭‫‫⁭‌​​⁭⁮⁬⁫​‭‬‌⁮​‌‮⁮‫‌‬‏⁮⁫‫‍‪‭‍⁭⁫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u200C⁭‬⁭⁭⁮⁯‮‪‪‮⁭‪‎⁪‫‍​⁯⁭‬​⁬​‍‬⁬⁬‭‭‍⁯⁯‫⁫⁯‍‌‮‫‮() => new Random();
  }
}
