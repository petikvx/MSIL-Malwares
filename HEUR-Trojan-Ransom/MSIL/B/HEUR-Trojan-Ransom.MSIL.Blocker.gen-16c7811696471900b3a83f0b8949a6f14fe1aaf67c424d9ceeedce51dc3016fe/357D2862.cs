// Decompiled with JetBrains decompiler
// Type: 357D2862
// Assembly: JustSvK was here ;D, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 17F13239-28E0-4F33-9D80-95AE56A139B0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Blocker.gen-16c7811696471900b3a83f0b8949a6f14fe1aaf67c424d9ceeedce51dc3016fe.exe

using System.Diagnostics;

internal struct \u003357D2862
{
  private const int \u00351C72FC5 = 32;
  private int \u0036B4C76E7;
  private uint \u0031D7401DF;
  private uint[] \u0036FD929EC;
  private bool \u0032E9B0B08;

  [Conditional("DEBUG")]
  private void \u0033D5757BF(bool _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  internal \u003357D2862(int _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  internal \u003357D2862(\u00303C04232 _param1, ref int _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  internal \u00303C04232 \u003561F25E3(int _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u0037AD90060(int _param1, out int _param2, out uint[] _param3)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u0032F034025(uint _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u003658C1B1C(ulong _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  internal int \u0036CC17F49
  {
    get
    {
      // ISSUE: unable to decompile the method.
    }
  }

  private void \u0033F9E7779()
  {
    // ISSUE: unable to decompile the method.
  }

  private int \u0030A8A2266
  {
    get
    {
      // ISSUE: unable to decompile the method.
    }
  }

  private void \u0032AF32ADC(int _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u00319F76FCD(int _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u00375C63A9F(int _param1, int _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u003603A69A8(int _param1 = 0)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u0031A922C63(ref \u003357D2862 _param1, int _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  private void \u00324AF203C(uint _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  internal void \u003773370A8(ref \u003357D2862 _param1, ref \u003357D2862 _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  private static uint \u00337AF7D1A(ref \u003357D2862 _param0, uint _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  internal void \u0037F485B9B(ref \u003357D2862 _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  private static void \u0034F7C0503(
    ref \u003357D2862 _param0,
    ref \u003357D2862 _param1,
    bool _param2,
    ref \u003357D2862 _param3)
  {
    // ISSUE: unable to decompile the method.
  }

  private static uint \u0036DDD202E(ref uint _param0, uint _param1, uint _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  private static uint \u003670E4BA0(ref uint _param0, uint _param1, uint _param2)
  {
    // ISSUE: unable to decompile the method.
  }

  private static uint \u0033A47016E(ref uint _param0, uint _param1, uint _param2, uint _param3)
  {
    // ISSUE: unable to decompile the method.
  }
}
