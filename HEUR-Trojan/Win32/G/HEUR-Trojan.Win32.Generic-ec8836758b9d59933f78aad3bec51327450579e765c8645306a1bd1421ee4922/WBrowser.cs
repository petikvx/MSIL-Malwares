// Decompiled with JetBrains decompiler
// Type: WBrowser.WBrowser
// Assembly: WBrowser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 62E3CF4D-EDEA-410D-AF11-59A3D29F9821
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-ec8836758b9d59933f78aad3bec51327450579e765c8645306a1bd1421ee4922.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Net;
using System.Windows.Forms;
using System.Xml;

namespace WBrowser
{
  public class WBrowser : Form
  {
    public static string favXml = "favorits.xml";
    public static string linksXml = "links.xml";
    private string settingsXml = "settings.xml";
    private string historyXml = "history.xml";
    private List<string> urls = new List<string>();
    private XmlDocument settings = new XmlDocument();
    private string homePage;
    private CultureInfo currentCulture;
    private string adress;
    private string name;
    private IContainer components = (IContainer) null;
    private MenuStrip menuBar;
    private ToolStrip adrBar;
    private ToolStripButton toolStripButton1;
    private ToolStripButton toolStripButton2;
    private ToolStripButton toolStripButton3;
    private ToolStripButton toolStripButton4;
    private ToolStripButton toolStripButton5;
    private StatusStrip statusStrip1;
    private ToolStripStatusLabel toolStripStatusLabel1;
    private ToolStripProgressBar toolStripProgressBar1;
    private ToolStripStatusLabel toolStripStatusLabel2;
    private TabControl browserTabControl;
    private TabPage NewTab;
    private ToolStripMenuItem fileToolStripMenuItem;
    private ToolStripMenuItem newTabToolStripMenuItem;
    private ToolStripMenuItem editToolStripMenuItem;
    private ToolStripMenuItem favoritesToolStripMenuItem;
    private ToolStripMenuItem viewToolStripMenuItem;
    private ToolStripMenuItem toolToolStripMenuItem;
    private ToolStripMenuItem helpToolStripMenuItem;
    private ToolStripTextBox searchTextBox;
    private ToolStripMenuItem duplicateTabToolStripMenuItem;
    private ToolStripMenuItem newWindowToolStripMenuItem;
    private ToolStripMenuItem helpToolStripMenuItem1;
    private ToolStripMenuItem aboutToolStripMenuItem;
    private ToolStripMenuItem closeTabToolStripMenuItem;
    private ToolStripMenuItem openToolStripMenuItem;
    private ContextMenuStrip closeTabContext;
    private ToolStripMenuItem closeTabToolStripMenuItem1;
    private ToolStripButton toolStripButton6;
    private ContextMenuStrip toolBarContextMenu;
    private ToolStripMenuItem menuBarToolStripMenuItem;
    private ToolStripMenuItem commandBarToolStripMenuItem;
    private ToolStripMenuItem linksBarToolStripMenuItem;
    private ToolStripButton toolStripButton7;
    private ToolStripMenuItem addToFavoritsToolStripMenuItem;
    private ToolStripMenuItem addToFavoritsBarToolStripMenuItem;
    private ToolStripMenuItem cutToolStripMenuItem;
    private ToolStripMenuItem copyToolStripMenuItem;
    private ToolStripMenuItem pasteToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem1;
    private ToolStripMenuItem selectAllToolStripMenuItem;
    private ToolStripButton toolStripButton8;
    private ToolStripMenuItem saveAsToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem2;
    private ToolStripMenuItem pageSetupToolStripMenuItem;
    private ToolStripMenuItem printToolStripMenuItem;
    private ToolStripMenuItem printPreviewToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem3;
    private ToolStripMenuItem organizeFavoritsToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem4;
    private Panel favoritesPanel;
    private ToolStripButton img;
    private ContextMenuStrip linkContextMenu;
    private ToolStripMenuItem openToolStripMenuItem1;
    private ToolStripMenuItem openInNewTabToolStripMenuItem;
    private ToolStripMenuItem openInNewWindowToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem5;
    private ToolStripMenuItem deleteToolStripMenuItem;
    private ToolStripMenuItem renameToolStripMenuItem;
    private ToolStripButton toolStripButton9;
    private ToolStripMenuItem duplicateTabToolStripMenuItem1;
    private ToolStripSeparator toolStripSeparator1;
    private ToolStripMenuItem toolbarsToolStripMenuItem;
    private ToolStripMenuItem explorerBarsToolStripMenuItem;
    private ToolStripMenuItem favoritesViewMenuItem;
    private ToolStripMenuItem historyViewMenuItem;
    private ToolStripSeparator toolStripMenuItem6;
    private ToolStripMenuItem linksMenuItem;
    private TabControl favoritesTabControl;
    private TabPage favTabPage;
    private TabPage historyTabPage;
    private ContextMenuStrip favContextMenu;
    private ToolStripMenuItem openToolStripMenuItem2;
    private ToolStripMenuItem openInNewTabToolStripMenuItem1;
    private ToolStripMenuItem openInNewWindowToolStripMenuItem1;
    private ToolStripSeparator toolStripMenuItem7;
    private ToolStripMenuItem deleteToolStripMenuItem1;
    private ToolStripMenuItem renameToolStripMenuItem1;
    private ImageList imgList;
    private TreeView favTreeView;
    private ToolStrip linkBar;
    private ToolStripMenuItem goToMenuItem;
    private ToolStripMenuItem backToolStripMenuItem;
    private ToolStripMenuItem forwardToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem8;
    private ToolStripMenuItem stopToolStripMenuItem;
    private ToolStripMenuItem refreshToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem9;
    private ToolStripMenuItem textSizeToolStripMenuItem;
    private ToolStripMenuItem sourceToolStripMenuItem;
    private ToolStripMenuItem fullScreenToolStripMenuItem;
    private ToolStripMenuItem deleteBrowserHistoryToolStripMenuItem;
    private ToolStripMenuItem homePageToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem10;
    private ToolStripSplitButton toolStripSplitButton1;
    private ToolStripMenuItem googleSearch;
    private ToolStripMenuItem liveSearch;
    private ToolStripMenuItem largestToolStripMenuItem;
    private ToolStripMenuItem largerToolStripMenuItem;
    private ToolStripMenuItem mediumToolStripMenuItem;
    private ToolStripMenuItem smallerToolStripMenuItem;
    private ToolStripMenuItem smallestToolStripMenuItem;
    private ToolStripSeparator toolStripMenuItem11;
    private ToolStripMenuItem sendToolStripMenuItem;
    private ToolStripMenuItem propertiesToolStripMenuItem;
    private ToolStripMenuItem pageByEmailToolStripMenuItem;
    private ToolStripMenuItem linkByEmailToolStripMenuItem;
    private TreeView historyTreeView;
    private ContextMenuStrip histContextMenu;
    private ToolStripMenuItem openToolStripMenuItem3;
    private ToolStripMenuItem openInNewTabToolStripMenuItem2;
    private ToolStripMenuItem openInNewWindowToolStripMenuItem2;
    private ToolStripSeparator toolStripMenuItem12;
    private ToolStripMenuItem addToFavoritesToolStripMenuItem;
    private ToolStripMenuItem deleteToolStripMenuItem2;
    private ComboBox comboBox1;
    private ToolStripMenuItem splashScreenToolStripMenuItem;
    private ToolStripMenuItem internetOptionsToolStripMenuItem;
    private ToolStripComboBox adrBarTextBox;
    private ToolStripSeparator toolStripMenuItem13;
    private ToolStripMenuItem yahooMessengerToolStripMenuItem;
    private ToolStripMenuItem calendarToolStripMenuItem;
    private ToolStripMenuItem solitaireToolStripMenuItem;
    private ToolStripMenuItem yahooMailToolStripMenuItem;

    public WBrowser()
    {
      this.InitializeComponent();
      this.currentCulture = CultureInfo.CurrentCulture;
    }

    private void setVisibility()
    {
      if (!System.IO.File.Exists(this.settingsXml))
      {
        XmlElement element1 = this.settings.CreateElement("settings");
        this.settings.AppendChild((XmlNode) element1);
        XmlElement element2 = this.settings.CreateElement("menuBar");
        element2.SetAttribute("visible", "True");
        element1.AppendChild((XmlNode) element2);
        XmlElement element3 = this.settings.CreateElement("adrBar");
        element3.SetAttribute("visible", "True");
        element1.AppendChild((XmlNode) element3);
        XmlElement element4 = this.settings.CreateElement("linkBar");
        element4.SetAttribute("visible", "True");
        element1.AppendChild((XmlNode) element4);
        XmlElement element5 = this.settings.CreateElement("favoritesPanel");
        element5.SetAttribute("visible", "True");
        element1.AppendChild((XmlNode) element5);
        XmlElement element6 = this.settings.CreateElement("SplashScreen");
        element6.SetAttribute("checked", "True");
        element1.AppendChild((XmlNode) element6);
        XmlElement element7 = this.settings.CreateElement("homepage");
        element7.InnerText = "about:blank";
        element1.AppendChild((XmlNode) element7);
        XmlElement element8 = this.settings.CreateElement("dropdown");
        element8.InnerText = "15";
        element1.AppendChild((XmlNode) element8);
      }
      else
      {
        this.settings.Load(this.settingsXml);
        XmlElement documentElement = this.settings.DocumentElement;
        this.menuBar.Visible = documentElement.ChildNodes[0].Attributes[0].Value.Equals("True");
        this.adrBar.Visible = documentElement.ChildNodes[1].Attributes[0].Value.Equals("True");
        this.linkBar.Visible = documentElement.ChildNodes[2].Attributes[0].Value.Equals("True");
        this.favoritesPanel.Visible = documentElement.ChildNodes[3].Attributes[0].Value.Equals("True");
        this.splashScreenToolStripMenuItem.Checked = documentElement.ChildNodes[4].Attributes[0].Value.Equals("True");
        this.homePage = documentElement.ChildNodes[5].InnerText;
      }
      this.linksBarToolStripMenuItem.Checked = this.linkBar.Visible;
      this.menuBarToolStripMenuItem.Checked = this.menuBar.Visible;
      this.commandBarToolStripMenuItem.Checked = this.adrBar.Visible;
      this.splashScreenToolStripMenuItem.Checked = this.settings.DocumentElement.ChildNodes[4].Attributes[0].Value.Equals("True");
      this.homePage = this.settings.DocumentElement.ChildNodes[5].InnerText;
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.toolStripStatusLabel1.Text = "Done";
      this.comboBox1.SelectedItem = this.comboBox1.Items[0];
      this.setVisibility();
      this.addNewTab();
      if (!this.splashScreenToolStripMenuItem.Checked)
        return;
      new About(true).Show();
    }

    private void Form1_FormClosing(object sender, FormClosingEventArgs e)
    {
      if (this.browserTabControl.TabCount == 2)
        return;
      switch (new Close().ShowDialog())
      {
        case DialogResult.Cancel:
          e.Cancel = true;
          break;
        case DialogResult.No:
          e.Cancel = true;
          this.closeTab();
          break;
        default:
          Application.ExitThread();
          break;
      }
    }

    private void WBrowser_FormClosed(object sender, FormClosedEventArgs e)
    {
      this.settings.Save(this.settingsXml);
      System.IO.File.Delete("source.txt");
    }

    private void addFavorit(string url, string name)
    {
      XmlDocument xmlDocument = new XmlDocument();
      XmlElement element1 = xmlDocument.CreateElement("favorit");
      element1.SetAttribute(nameof (url), url);
      element1.InnerText = name;
      if (!System.IO.File.Exists(WBrowser.WBrowser.favXml))
      {
        XmlElement element2 = xmlDocument.CreateElement("favorites");
        xmlDocument.AppendChild((XmlNode) element2);
        element2.AppendChild((XmlNode) element1);
      }
      else
      {
        xmlDocument.Load(WBrowser.WBrowser.favXml);
        xmlDocument.DocumentElement.AppendChild((XmlNode) element1);
      }
      if (this.favoritesPanel.Visible)
        this.favTreeView.Nodes.Add(new TreeNode(element1.InnerText, this.faviconIndex(element1.GetAttribute(nameof (url))), this.faviconIndex(element1.GetAttribute(nameof (url))))
        {
          ToolTipText = element1.GetAttribute(nameof (url)),
          Name = element1.GetAttribute(nameof (url)),
          ContextMenuStrip = this.favContextMenu
        });
      xmlDocument.Save(WBrowser.WBrowser.favXml);
    }

    private void addLink(string url, string name)
    {
      XmlDocument xmlDocument = new XmlDocument();
      XmlElement element1 = xmlDocument.CreateElement("link");
      element1.SetAttribute(nameof (url), url);
      element1.InnerText = name;
      if (!System.IO.File.Exists(WBrowser.WBrowser.linksXml))
      {
        XmlElement element2 = xmlDocument.CreateElement("links");
        xmlDocument.AppendChild((XmlNode) element2);
        element2.AppendChild((XmlNode) element1);
      }
      else
      {
        xmlDocument.Load(WBrowser.WBrowser.linksXml);
        xmlDocument.DocumentElement.AppendChild((XmlNode) element1);
      }
      if (this.linkBar.Visible)
      {
        ToolStripButton toolStripButton = new ToolStripButton(element1.InnerText, this.getFavicon(url), new EventHandler(this.items_Click), element1.GetAttribute(nameof (url)));
        toolStripButton.ToolTipText = element1.GetAttribute(nameof (url));
        toolStripButton.MouseUp += new MouseEventHandler(this.b_MouseUp);
        this.linkBar.Items.Add((ToolStripItem) toolStripButton);
      }
      if (this.favoritesPanel.Visible)
        this.favTreeView.Nodes[0].Nodes.Add(new TreeNode(element1.InnerText, this.faviconIndex(url), this.faviconIndex(element1.GetAttribute(nameof (url))))
        {
          Name = element1.GetAttribute(nameof (url)),
          ToolTipText = element1.GetAttribute(nameof (url)),
          ContextMenuStrip = this.linkContextMenu
        });
      xmlDocument.Save(WBrowser.WBrowser.linksXml);
    }

    private void deleteLink()
    {
      if (this.favoritesPanel.Visible)
        this.favTreeView.Nodes[0].Nodes[this.adress].Remove();
      if (this.linkBar.Visible)
        this.linkBar.Items.RemoveByKey(this.adress);
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(WBrowser.WBrowser.linksXml);
      XmlElement documentElement = xmlDocument.DocumentElement;
      foreach (XmlElement childNode in documentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(this.adress))
        {
          documentElement.RemoveChild((XmlNode) childNode);
          break;
        }
      }
      xmlDocument.Save(WBrowser.WBrowser.linksXml);
    }

    private void renameLink()
    {
      RenameLink renameLink = new RenameLink(this.name);
      if (renameLink.ShowDialog() == DialogResult.OK)
      {
        XmlDocument xmlDocument = new XmlDocument();
        xmlDocument.Load(WBrowser.WBrowser.linksXml);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          if (childNode.InnerText.Equals(this.name))
          {
            childNode.InnerText = renameLink.newName.Text;
            break;
          }
        }
        if (this.linkBar.Visible)
          this.linkBar.Items[this.adress].Text = renameLink.newName.Text;
        if (this.favoritesPanel.Visible)
          this.favTreeView.Nodes[0].Nodes[this.adress].Text = renameLink.newName.Text;
        xmlDocument.Save(WBrowser.WBrowser.linksXml);
      }
      renameLink.Close();
    }

    private void deleteFavorit()
    {
      this.favTreeView.SelectedNode.Remove();
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(WBrowser.WBrowser.favXml);
      XmlElement documentElement = xmlDocument.DocumentElement;
      foreach (XmlElement childNode in documentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(this.adress))
        {
          documentElement.RemoveChild((XmlNode) childNode);
          break;
        }
      }
      xmlDocument.Save(WBrowser.WBrowser.favXml);
    }

    private void renameFavorit()
    {
      RenameLink renameLink = new RenameLink(this.name);
      if (renameLink.ShowDialog() == DialogResult.OK)
      {
        XmlDocument xmlDocument = new XmlDocument();
        xmlDocument.Load(WBrowser.WBrowser.favXml);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          if (childNode.InnerText.Equals(this.name))
          {
            childNode.InnerText = renameLink.newName.Text;
            break;
          }
        }
        this.favTreeView.Nodes[this.adress].Text = renameLink.newName.Text;
        xmlDocument.Save(WBrowser.WBrowser.favXml);
      }
      renameLink.Close();
    }

    private void addHistory(Uri url, string data)
    {
      XmlDocument xmlDocument = new XmlDocument();
      int num = 1;
      XmlElement element1 = xmlDocument.CreateElement("item");
      element1.SetAttribute(nameof (url), url.ToString());
      element1.SetAttribute("lastVisited", data);
      if (!System.IO.File.Exists(this.historyXml))
      {
        XmlElement element2 = xmlDocument.CreateElement("history");
        xmlDocument.AppendChild((XmlNode) element2);
        element1.SetAttribute("times", "1");
        element2.AppendChild((XmlNode) element1);
      }
      else
      {
        xmlDocument.Load(this.historyXml);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          if (childNode.GetAttribute(nameof (url)).Equals(url.ToString()))
          {
            num = int.Parse(childNode.GetAttribute("times")) + 1;
            xmlDocument.DocumentElement.RemoveChild((XmlNode) childNode);
            break;
          }
        }
        element1.SetAttribute("times", num.ToString());
        xmlDocument.DocumentElement.InsertBefore((XmlNode) element1, xmlDocument.DocumentElement.FirstChild);
        if (this.favoritesPanel.Visible)
        {
          if (this.comboBox1.Text.Equals("Ordered Visited Today"))
          {
            if (!this.historyTreeView.Nodes.ContainsKey(url.ToString()))
              this.historyTreeView.Nodes.Insert(0, new TreeNode(url.ToString(), 3, 3)
              {
                ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited :" + num.ToString(),
                Name = url.ToString(),
                ContextMenuStrip = this.histContextMenu
              });
            else
              this.historyTreeView.Nodes[url.ToString()].ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited: " + num.ToString();
          }
          if (this.comboBox1.Text.Equals("View By Site"))
          {
            if (!this.historyTreeView.Nodes.ContainsKey(url.Host.ToString()))
            {
              this.historyTreeView.Nodes.Add(url.Host.ToString(), url.Host.ToString(), 0, 0);
              this.historyTreeView.Nodes[url.Host.ToString()].Nodes.Add(new TreeNode(url.ToString(), 3, 3)
              {
                ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited: " + num.ToString(),
                Name = url.ToString(),
                ContextMenuStrip = this.histContextMenu
              });
            }
            else if (!this.historyTreeView.Nodes[url.Host.ToString()].Nodes.ContainsKey(url.ToString()))
              this.historyTreeView.Nodes[url.Host.ToString()].Nodes.Add(new TreeNode(url.ToString(), 3, 3)
              {
                ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited: " + num.ToString(),
                Name = url.ToString(),
                ContextMenuStrip = this.histContextMenu
              });
            else
              this.historyTreeView.Nodes[url.Host.ToString()].Nodes[url.ToString()].ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited" + num.ToString();
          }
          if (this.comboBox1.Text.Equals("View by Date"))
          {
            if (this.historyTreeView.Nodes[4].Nodes.ContainsKey(url.ToString()))
              this.historyTreeView.Nodes[url.ToString()].ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited: " + num.ToString();
            else
              this.historyTreeView.Nodes[4].Nodes.Add(new TreeNode(url.ToString(), 3, 3)
              {
                ToolTipText = url.ToString() + "\nLast Visited: " + data + "\nTimes visited :" + num.ToString(),
                Name = url.ToString(),
                ContextMenuStrip = this.histContextMenu
              });
          }
        }
      }
      xmlDocument.Save(this.historyXml);
    }

    private void deleteHistory()
    {
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(this.historyXml);
      XmlElement documentElement = xmlDocument.DocumentElement;
      foreach (XmlElement childNode in documentElement.ChildNodes)
      {
        if (childNode.GetAttribute("url").Equals(this.adress))
        {
          documentElement.RemoveChild((XmlNode) childNode);
          break;
        }
      }
      this.historyTreeView.SelectedNode.Remove();
      xmlDocument.Save(this.historyXml);
    }

    private void addNewTab()
    {
      TabPage tabPage = new TabPage();
      tabPage.BorderStyle = BorderStyle.Fixed3D;
      this.browserTabControl.TabPages.Insert(this.browserTabControl.TabCount - 1, tabPage);
      WebBrowser webBrowser = new WebBrowser();
      webBrowser.Navigate(this.homePage);
      tabPage.Controls.Add((Control) webBrowser);
      webBrowser.Dock = DockStyle.Fill;
      this.browserTabControl.SelectTab(tabPage);
      webBrowser.ProgressChanged += new WebBrowserProgressChangedEventHandler(this.Form1_ProgressChanged);
      webBrowser.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(this.Form1_DocumentCompleted);
      webBrowser.Navigating += new WebBrowserNavigatingEventHandler(this.Form1_Navigating);
      webBrowser.CanGoBackChanged += new EventHandler(this.browser_CanGoBackChanged);
      webBrowser.CanGoForwardChanged += new EventHandler(this.browser_CanGoForwardChanged);
    }

    private void Form1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
    {
      WebBrowser currentBrowser = this.getCurrentBrowser();
      this.toolStripStatusLabel1.Text = "Done";
      string str = "Blank Page";
      if (!currentBrowser.Url.ToString().Equals("about:blank"))
        str = currentBrowser.Url.Host.ToString();
      this.adrBarTextBox.Text = currentBrowser.Url.ToString();
      this.browserTabControl.SelectedTab.Text = str;
      this.img.Image = WBrowser.WBrowser.favicon(currentBrowser.Url.ToString(), "net.png");
      if (!this.urls.Contains(currentBrowser.Url.Host.ToString()))
        this.urls.Add(currentBrowser.Url.Host.ToString());
      if (currentBrowser.Url.ToString().Equals("about:blank") || !currentBrowser.StatusText.Equals("Done"))
        return;
      this.addHistory(currentBrowser.Url, DateTime.Now.ToString((IFormatProvider) this.currentCulture));
    }

    private void Form1_ProgressChanged(object sender, WebBrowserProgressChangedEventArgs e)
    {
      if (e.CurrentProgress < e.MaximumProgress)
        this.toolStripProgressBar1.Value = (int) e.CurrentProgress;
      else
        this.toolStripProgressBar1.Value = this.toolStripProgressBar1.Minimum;
    }

    private void Form1_Navigating(object sender, WebBrowserNavigatingEventArgs e) => this.toolStripStatusLabel1.Text = this.getCurrentBrowser().StatusText;

    private void closeTab()
    {
      if (this.browserTabControl.TabCount == 2)
        return;
      this.browserTabControl.TabPages.RemoveAt(this.browserTabControl.SelectedIndex);
    }

    private void browserTabControl_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (this.browserTabControl.SelectedIndex == this.browserTabControl.TabPages.Count - 1)
      {
        this.addNewTab();
      }
      else
      {
        if (this.getCurrentBrowser().Url != (Uri) null)
          this.adrBarTextBox.Text = this.getCurrentBrowser().Url.ToString();
        else
          this.adrBarTextBox.Text = "about:blank";
        if (this.getCurrentBrowser().CanGoBack)
          this.toolStripButton1.Enabled = true;
        else
          this.toolStripButton1.Enabled = false;
        if (this.getCurrentBrowser().CanGoForward)
          this.toolStripButton2.Enabled = true;
        else
          this.toolStripButton2.Enabled = false;
      }
    }

    private void closeTabToolStripMenuItem1_Click(object sender, EventArgs e) => this.closeTab();

    private void duplicateTabToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (this.getCurrentBrowser().Url != (Uri) null)
      {
        Uri url = this.getCurrentBrowser().Url;
        this.addNewTab();
        this.getCurrentBrowser().Url = url;
      }
      else
        this.addNewTab();
    }

    public static Image favicon(string u, string file)
    {
      WebRequest webRequest = WebRequest.Create("http://" + new Uri(u).Host + "/favicon.ico");
      try
      {
        return Image.FromStream(webRequest.GetResponse().GetResponseStream());
      }
      catch (Exception ex)
      {
        return Image.FromFile(file);
      }
    }

    private int faviconIndex(string url)
    {
      Uri uri = new Uri(url);
      if (!this.imgList.Images.ContainsKey(uri.Host.ToString()))
        this.imgList.Images.Add(uri.Host.ToString(), WBrowser.WBrowser.favicon(url, "link.png"));
      return this.imgList.Images.IndexOfKey(uri.Host.ToString());
    }

    private Image getFavicon(string key)
    {
      Uri uri = new Uri(key);
      if (!this.imgList.Images.ContainsKey(uri.Host.ToString()))
        this.imgList.Images.Add(uri.Host.ToString(), WBrowser.WBrowser.favicon(key, "link.png"));
      return this.imgList.Images[uri.Host.ToString()];
    }

    private void linksBarToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.linkBar.Visible = !this.linkBar.Visible;
      this.linksBarToolStripMenuItem.Checked = this.linkBar.Visible;
      this.settings.DocumentElement.ChildNodes[2].Attributes[0].Value = this.linkBar.Visible.ToString();
    }

    private void menuBarToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.menuBar.Visible = !this.menuBar.Visible;
      this.menuBarToolStripMenuItem.Checked = this.menuBar.Visible;
      this.settings.DocumentElement.ChildNodes[0].Attributes[0].Value = this.menuBar.Visible.ToString();
    }

    private void commandBarToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.adrBar.Visible = !this.adrBar.Visible;
      this.commandBarToolStripMenuItem.Checked = this.adrBar.Visible;
      this.settings.DocumentElement.ChildNodes[1].Attributes[0].Value = this.adrBar.Visible.ToString();
    }

    private WebBrowser getCurrentBrowser() => (WebBrowser) this.browserTabControl.SelectedTab.Controls[0];

    private void adrBarTextBox_KeyDown(object sender, KeyEventArgs e)
    {
      if (e.KeyCode != Keys.Return)
        return;
      this.getCurrentBrowser().Navigate(this.adrBarTextBox.Text);
    }

    private void adrBarTextBox_Click(object sender, EventArgs e) => this.adrBarTextBox.SelectAll();

    private void showUrl()
    {
      if (!System.IO.File.Exists(this.historyXml))
        return;
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(this.historyXml);
      int num1 = 0;
      int num2 = int.Parse(this.settings.DocumentElement.ChildNodes[6].InnerText.ToString());
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        if (num2 > num1++)
          this.adrBarTextBox.Items.Add((object) childNode.GetAttribute("url").ToString());
        else
          break;
      }
    }

    private void adrBarTextBox_DropDown(object sender, EventArgs e)
    {
      this.adrBarTextBox.Items.Clear();
      this.showUrl();
    }

    private void adrBarTextBox_SelectedIndexChanged(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(this.adrBarTextBox.SelectedItem.ToString());

    private void browser_CanGoForwardChanged(object sender, EventArgs e) => this.toolStripButton2.Enabled = !this.toolStripButton2.Enabled;

    private void browser_CanGoBackChanged(object sender, EventArgs e) => this.toolStripButton1.Enabled = !this.toolStripButton1.Enabled;

    private void toolStripButton1_Click(object sender, EventArgs e) => this.getCurrentBrowser().GoBack();

    private void toolStripButton2_Click(object sender, EventArgs e) => this.getCurrentBrowser().GoForward();

    private void toolStripButton3_Click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(this.adrBarTextBox.Text);

    private void toolStripButton4_Click(object sender, EventArgs e) => this.getCurrentBrowser().Refresh();

    private void toolStripButton5_Click(object sender, EventArgs e) => this.getCurrentBrowser().Stop();

    private void toolStripButton7_Click(object sender, EventArgs e)
    {
      this.favoritesPanel.Visible = !this.favoritesPanel.Visible;
      this.settings.DocumentElement.ChildNodes[3].Attributes[0].Value = this.favoritesPanel.Visible.ToString();
    }

    private void toolStripButton8_Click(object sender, EventArgs e)
    {
      if (!(this.getCurrentBrowser().Url != (Uri) null))
        return;
      AddFavorites addFavorites = new AddFavorites(this.getCurrentBrowser().Url.ToString());
      if (addFavorites.ShowDialog() == DialogResult.OK)
      {
        if (addFavorites.favFile == "Favorites")
          this.addFavorit(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
        else
          this.addLink(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
      }
      addFavorites.Close();
    }

    private void searchTextBox_KeyDown(object sender, KeyEventArgs e)
    {
      if (e.KeyCode != Keys.Return)
        return;
      if (this.googleSearch.Checked)
        this.getCurrentBrowser().Navigate("http://google.com/search?q=" + this.searchTextBox.Text);
      else
        this.getCurrentBrowser().Navigate("http://search.live.com/results.aspx?q=" + this.searchTextBox.Text);
    }

    private void googleSearch_Click(object sender, EventArgs e) => this.liveSearch.Checked = !this.googleSearch.Checked;

    private void liveSearch_Click(object sender, EventArgs e) => this.googleSearch.Checked = !this.liveSearch.Checked;

    private void toolStripButton6_Click(object sender, EventArgs e)
    {
      this.favoritesPanel.Visible = !this.favoritesPanel.Visible;
      this.settings.DocumentElement.ChildNodes[3].Attributes[0].Value = this.favoritesPanel.Visible.ToString();
    }

    private void toolStripButton9_Click(object sender, EventArgs e)
    {
      if (!(this.getCurrentBrowser().Url != (Uri) null))
        return;
      this.addLink(this.getCurrentBrowser().Url.ToString(), this.getCurrentBrowser().Url.ToString());
    }

    private void showLinks()
    {
      if (!System.IO.File.Exists(WBrowser.WBrowser.linksXml))
        return;
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(WBrowser.WBrowser.linksXml);
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        ToolStripButton toolStripButton = new ToolStripButton(childNode.InnerText, this.getFavicon(childNode.GetAttribute("url")), new EventHandler(this.items_Click), childNode.GetAttribute("url"));
        toolStripButton.ToolTipText = childNode.GetAttribute("url");
        toolStripButton.MouseUp += new MouseEventHandler(this.b_MouseUp);
        this.linkBar.Items.Add((ToolStripItem) toolStripButton);
      }
    }

    private void items_Click(object sender, EventArgs e)
    {
      ToolStripButton toolStripButton = (ToolStripButton) sender;
      this.getCurrentBrowser().Navigate(toolStripButton.ToolTipText);
    }

    private void b_MouseUp(object sender, MouseEventArgs e)
    {
      ToolStripButton toolStripButton = (ToolStripButton) sender;
      this.adress = toolStripButton.ToolTipText;
      this.name = toolStripButton.Text;
      if (e.Button != MouseButtons.Right)
        return;
      this.linkContextMenu.Show(Control.MousePosition);
    }

    private void linkBar_VisibleChanged(object sender, EventArgs e)
    {
      if (this.linkBar.Visible)
      {
        this.showLinks();
      }
      else
      {
        while (this.linkBar.Items.Count > 3)
          this.linkBar.Items[this.linkBar.Items.Count - 1].Dispose();
      }
    }

    private void openToolStripMenuItem1_Click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(this.adress);

    private void openInNewTabToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.addNewTab();
      this.getCurrentBrowser().Navigate(this.adress);
    }

    private void openInNewWindowToolStripMenuItem_Click(object sender, EventArgs e)
    {
      WBrowser.WBrowser wbrowser = new WBrowser.WBrowser();
      wbrowser.Show();
      wbrowser.getCurrentBrowser().Navigate(this.adress);
    }

    private void deleteToolStripMenuItem_Click(object sender, EventArgs e) => this.deleteLink();

    private void renameToolStripMenuItem_Click(object sender, EventArgs e) => this.renameLink();

    private void deleteToolStripMenuItem1_Click(object sender, EventArgs e) => this.deleteFavorit();

    private void renameToolStripMenuItem1_Click(object sender, EventArgs e) => this.renameFavorit();

    private void openToolStripMenuItem3_Click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(this.historyTreeView.SelectedNode.Text);

    private void deleteToolStripMenuItem2_Click(object sender, EventArgs e) => this.deleteHistory();

    private void addToFavoritesToolStripMenuItem_Click(object sender, EventArgs e)
    {
      AddFavorites addFavorites = new AddFavorites(this.historyTreeView.SelectedNode.Text);
      if (addFavorites.ShowDialog() == DialogResult.OK)
      {
        if (addFavorites.favFile == "Favorites")
          this.addFavorit(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
        else
          this.addLink(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
        this.deleteHistory();
      }
      addFavorites.Close();
    }

    private void showFavorites()
    {
      XmlDocument xmlDocument = new XmlDocument();
      this.favTreeView.Nodes.Add(new TreeNode("Links", 0, 0)
      {
        NodeFont = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Underline, GraphicsUnit.Point, (byte) 0)
      });
      if (System.IO.File.Exists(WBrowser.WBrowser.favXml))
      {
        xmlDocument.Load(WBrowser.WBrowser.favXml);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
          this.favTreeView.Nodes.Add(new TreeNode(childNode.InnerText, this.faviconIndex(childNode.GetAttribute("url")), this.faviconIndex(childNode.GetAttribute("url")))
          {
            ToolTipText = childNode.GetAttribute("url"),
            Name = childNode.GetAttribute("url"),
            ContextMenuStrip = this.favContextMenu
          });
      }
      if (!System.IO.File.Exists(WBrowser.WBrowser.linksXml))
        return;
      xmlDocument.Load(WBrowser.WBrowser.linksXml);
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        this.favTreeView.Nodes[0].Nodes.Add(new TreeNode(childNode.InnerText, this.faviconIndex(childNode.GetAttribute("url")), this.faviconIndex(childNode.GetAttribute("url")))
        {
          ToolTipText = childNode.GetAttribute("url"),
          Name = childNode.GetAttribute("url"),
          ContextMenuStrip = this.linkContextMenu
        });
    }

    private void treeView1_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e)
    {
      if (e.Button == MouseButtons.Right)
      {
        this.favTreeView.SelectedNode = e.Node;
        this.adress = e.Node.ToolTipText;
        this.name = e.Node.Text;
      }
      else
      {
        if (e.Node == this.favTreeView.Nodes[0])
          return;
        this.getCurrentBrowser().Navigate(e.Node.ToolTipText);
      }
    }

    private void showHistory()
    {
      this.historyTreeView.Nodes.Clear();
      XmlDocument xmlDocument = new XmlDocument();
      if (!System.IO.File.Exists(this.historyXml))
        return;
      xmlDocument.Load(this.historyXml);
      DateTime now = DateTime.Now;
      if (this.comboBox1.Text.Equals("Ordered Visited Today"))
      {
        this.historyTreeView.ShowRootLines = false;
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          if (!(DateTime.Parse(childNode.GetAttribute("lastVisited"), (IFormatProvider) this.currentCulture).Date == now.Date))
            return;
          this.historyTreeView.Nodes.Add(new TreeNode(childNode.GetAttribute("url"), 3, 3)
          {
            ToolTipText = childNode.GetAttribute("url") + "\nLast Visited: " + childNode.GetAttribute("lastVisited") + "\nTimes Visited: " + childNode.GetAttribute("times"),
            Name = childNode.GetAttribute("url"),
            ContextMenuStrip = this.histContextMenu
          });
        }
      }
      if (this.comboBox1.Text.Equals("View By Site"))
      {
        this.historyTreeView.ShowRootLines = true;
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          Uri uri = new Uri(childNode.GetAttribute("url"));
          if (!this.historyTreeView.Nodes.ContainsKey(uri.Host.ToString()))
            this.historyTreeView.Nodes.Add(uri.Host.ToString(), uri.Host.ToString(), 0, 0);
          this.historyTreeView.Nodes[uri.Host.ToString()].Nodes.Add(new TreeNode(childNode.GetAttribute("url"), 3, 3)
          {
            ToolTipText = childNode.GetAttribute("url") + "\nLast Visited: " + childNode.GetAttribute("lastVisited") + "\nTimes Visited: " + childNode.GetAttribute("times"),
            Name = childNode.GetAttribute("url"),
            ContextMenuStrip = this.histContextMenu
          });
        }
      }
      if (this.comboBox1.Text.Equals("View by Date"))
      {
        this.historyTreeView.ShowRootLines = true;
        this.historyTreeView.Nodes.Add("2 Weeks Ago", "2 Weeks Ago", 2, 2);
        this.historyTreeView.Nodes.Add("Last Week", "Last Week", 2, 2);
        this.historyTreeView.Nodes.Add("This Week", "This Week", 2, 2);
        this.historyTreeView.Nodes.Add("Yesterday", "Yesterday", 2, 2);
        this.historyTreeView.Nodes.Add("Today", "Today", 2, 2);
        foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
        {
          DateTime dateTime = DateTime.Parse(childNode.GetAttribute("lastVisited"), (IFormatProvider) this.currentCulture);
          TreeNode node = new TreeNode(childNode.GetAttribute("url"), 3, 3);
          node.ToolTipText = childNode.GetAttribute("url") + "\nLast Visited: " + childNode.GetAttribute("lastVisited") + "\nTimes Visited: " + childNode.GetAttribute("times");
          node.Name = childNode.GetAttribute("url");
          node.ContextMenuStrip = this.histContextMenu;
          if (dateTime.Date == now.Date)
            this.historyTreeView.Nodes[4].Nodes.Add(node);
          else if (dateTime.AddDays(1.0).ToShortDateString().Equals(now.ToShortDateString()))
            this.historyTreeView.Nodes[3].Nodes.Add(node);
          else if (dateTime.AddDays(7.0) > now)
            this.historyTreeView.Nodes[2].Nodes.Add(node);
          else if (dateTime.AddDays(14.0) > now)
            this.historyTreeView.Nodes[1].Nodes.Add(node);
          else if (dateTime.AddDays(21.0) > now)
            this.historyTreeView.Nodes[0].Nodes.Add(node);
          else if (dateTime.AddDays(22.0) > now)
            xmlDocument.DocumentElement.RemoveChild((XmlNode) childNode);
        }
      }
    }

    private void historyTreeView_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e)
    {
      if (e.Button == MouseButtons.Right)
      {
        this.historyTreeView.SelectedNode = e.Node;
        this.adress = e.Node.Text;
      }
      else if (!this.comboBox1.Text.Equals("Ordered Visited Today"))
      {
        if (this.historyTreeView.Nodes.Contains(e.Node))
          return;
        this.getCurrentBrowser().Navigate(e.Node.Text);
      }
      else
        this.getCurrentBrowser().Navigate(e.Node.Text);
    }

    private void favoritesPanel_VisibleChanged(object sender, EventArgs e)
    {
      if (this.favoritesPanel.Visible)
      {
        this.showFavorites();
        this.showHistory();
      }
      else
      {
        this.favTreeView.Nodes.Clear();
        this.historyTreeView.Nodes.Clear();
      }
    }

    private void comboBox1_SelectedValueChanged(object sender, EventArgs e) => this.showHistory();

    private void addToFavoritsToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (!(this.getCurrentBrowser().Url != (Uri) null))
        return;
      AddFavorites addFavorites = new AddFavorites(this.getCurrentBrowser().Url.ToString());
      if (addFavorites.ShowDialog() == DialogResult.OK)
      {
        if (addFavorites.favFile == "Favorites")
          this.addFavorit(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
        else
          this.addLink(this.getCurrentBrowser().Url.ToString(), addFavorites.favName);
      }
      addFavorites.Close();
    }

    private void addToFavoritsBarToolStripMenuItem_Click(object sender, EventArgs e) => this.addLink(this.getCurrentBrowser().Url.ToString(), this.getCurrentBrowser().Url.ToString());

    private void organizeFavoritsToolStripMenuItem_Click(object sender, EventArgs e)
    {
      int num = (int) new OrganizeFavorites(this.favTreeView, this.linkBar, this.linkContextMenu, this.favContextMenu).ShowDialog();
    }

    private void favoritesToolStripMenuItem_DropDownOpening(object sender, EventArgs e)
    {
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(WBrowser.WBrowser.favXml);
      for (int index = this.favoritesToolStripMenuItem.DropDownItems.Count - 1; index > 5; --index)
        this.favoritesToolStripMenuItem.DropDownItems.RemoveAt(index);
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        ToolStripMenuItem toolStripMenuItem = new ToolStripMenuItem(childNode.InnerText, this.getFavicon(childNode.GetAttribute("url")), new EventHandler(this.fav_Click));
        toolStripMenuItem.ToolTipText = childNode.GetAttribute("url");
        this.favoritesToolStripMenuItem.DropDownItems.Add((ToolStripItem) toolStripMenuItem);
      }
    }

    private void linksMenuItem_DropDownOpening(object sender, EventArgs e)
    {
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(WBrowser.WBrowser.linksXml);
      this.linksMenuItem.DropDownItems.Clear();
      foreach (XmlElement childNode in xmlDocument.DocumentElement.ChildNodes)
      {
        ToolStripMenuItem toolStripMenuItem = new ToolStripMenuItem(childNode.InnerText, this.getFavicon(childNode.GetAttribute("url")), new EventHandler(this.fav_Click));
        toolStripMenuItem.ToolTipText = childNode.GetAttribute("url");
        this.linksMenuItem.DropDownItems.Add((ToolStripItem) toolStripMenuItem);
      }
    }

    private void fav_Click(object sender, EventArgs e)
    {
      ToolStripMenuItem toolStripMenuItem = (ToolStripMenuItem) sender;
      this.getCurrentBrowser().Navigate(toolStripMenuItem.ToolTipText);
    }

    private void newTabToolStripMenuItem_Click(object sender, EventArgs e) => this.addNewTab();

    private void duplicateTabToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.getCurrentBrowser().Url != (Uri) null)
      {
        Uri url = this.getCurrentBrowser().Url;
        this.addNewTab();
        this.getCurrentBrowser().Url = url;
      }
      else
        this.addNewTab();
    }

    private void newWindowToolStripMenuItem_Click(object sender, EventArgs e) => new WBrowser.WBrowser().Show();

    private void closeTabToolStripMenuItem_Click(object sender, EventArgs e) => this.closeTab();

    private void openToolStripMenuItem_Click(object sender, EventArgs e) => new Open(this.getCurrentBrowser()).Show();

    private void pageSetupToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().ShowPageSetupDialog();

    private void saveAsToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().ShowSaveAsDialog();

    private void printToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().ShowPrintDialog();

    private void printPreviewToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().ShowPrintPreviewDialog();

    private void propertiesToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().ShowPropertiesDialog();

    private void pageByEmailToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("msimn.exe");

    private void linkByEmailToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("msimn.exe");

    private void cutToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Document.ExecCommand("Cut", false, (object) null);

    private void copyToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Document.ExecCommand("Copy", false, (object) null);

    private void pasteToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Document.ExecCommand("Paste", false, (object) null);

    private void selectAllToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Document.ExecCommand("SelectAll", true, (object) null);

    private void favoritsToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.favoritesPanel.Visible = true;
      this.favoritesTabControl.SelectedTab = this.favTabPage;
    }

    private void historyToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.favoritesPanel.Visible = true;
      this.favoritesTabControl.SelectedTab = this.historyTabPage;
    }

    private void explorerBarsToolStripMenuItem_DropDownOpening(object sender, EventArgs e)
    {
      this.favoritesViewMenuItem.Checked = this.favoritesPanel.Visible && this.favoritesTabControl.SelectedTab == this.favTabPage;
      this.historyViewMenuItem.Checked = this.favoritesPanel.Visible && this.favoritesTabControl.SelectedTab == this.historyTabPage;
    }

    private void goToToolStripMenuItem_DropDownOpening(object sender, EventArgs e)
    {
      this.backToolStripMenuItem.Enabled = this.getCurrentBrowser().CanGoBack;
      this.forwardToolStripMenuItem.Enabled = this.getCurrentBrowser().CanGoForward;
      while (this.goToMenuItem.DropDownItems.Count > 5)
        this.goToMenuItem.DropDownItems.RemoveAt(this.goToMenuItem.DropDownItems.Count - 1);
      foreach (string url in this.urls)
        this.goToMenuItem.DropDownItems.Add((ToolStripItem) new ToolStripMenuItem(url, (Image) null, new EventHandler(this.goto_click))
        {
          Checked = this.getCurrentBrowser().Url.Host.ToString().Equals(url)
        });
    }

    private void goto_click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(sender.ToString());

    private void backToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().GoBack();

    private void forwardToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().GoForward();

    private void homePageToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate(this.homePage);

    private void stopToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Stop();

    private void refreshToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Refresh();

    private void sourceToolStripMenuItem_Click(object sender, EventArgs e)
    {
      string str = "source.txt";
      StreamWriter text = System.IO.File.CreateText(str);
      text.Write(this.getCurrentBrowser().DocumentText);
      text.Close();
      Process.Start("notepad.exe", str);
    }

    private void textSizeToolStripMenuItem_DropDownItemClicked(
      object sender,
      ToolStripItemClickedEventArgs e)
    {
      string str = e.ClickedItem.ToString();
      this.smallerToolStripMenuItem.Checked = false;
      this.smallestToolStripMenuItem.Checked = false;
      this.mediumToolStripMenuItem.Checked = false;
      this.largerToolStripMenuItem.Checked = false;
      this.largestToolStripMenuItem.Checked = false;
      switch (str)
      {
        case "Smallest":
          this.getCurrentBrowser().Document.ExecCommand("FontSize", true, (object) "0");
          this.smallestToolStripMenuItem.Checked = true;
          break;
        case "Smaller":
          this.getCurrentBrowser().Document.ExecCommand("FontSize", true, (object) "1");
          this.smallerToolStripMenuItem.Checked = true;
          break;
        case "Medium":
          this.getCurrentBrowser().Document.ExecCommand("FontSize", true, (object) "2");
          this.mediumToolStripMenuItem.Checked = true;
          break;
        case "Larger":
          this.getCurrentBrowser().Document.ExecCommand("FontSize", true, (object) "3");
          this.largerToolStripMenuItem.Checked = true;
          break;
        case "Largest":
          this.getCurrentBrowser().Document.ExecCommand("FontSize", true, (object) "4");
          this.largestToolStripMenuItem.Checked = true;
          break;
      }
    }

    private void fullScreenToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.FormBorderStyle != FormBorderStyle.None || this.WindowState != FormWindowState.Maximized)
      {
        this.FormBorderStyle = FormBorderStyle.None;
        this.WindowState = FormWindowState.Maximized;
        this.TopMost = true;
        this.menuBar.Visible = false;
        this.linkBar.Visible = false;
        this.adrBar.Visible = false;
        this.favoritesPanel.Visible = false;
      }
      else
      {
        this.WindowState = FormWindowState.Normal;
        this.FormBorderStyle = FormBorderStyle.Sizable;
        this.TopMost = false;
        this.menuBar.Visible = this.settings.DocumentElement.ChildNodes[0].Attributes[0].Value.Equals("True");
        this.adrBar.Visible = this.settings.DocumentElement.ChildNodes[1].Attributes[0].Value.Equals("True");
        this.linkBar.Visible = this.settings.DocumentElement.ChildNodes[2].Attributes[0].Value.Equals("True");
        this.favoritesPanel.Visible = this.settings.DocumentElement.ChildNodes[3].Attributes[0].Value.Equals("True");
      }
    }

    private void splashScreenToolStripMenuItem_Click(object sender, EventArgs e) => this.settings.DocumentElement.ChildNodes[4].Attributes[0].Value = this.splashScreenToolStripMenuItem.Checked.ToString();

    private void deleteBrowserHistoryToolStripMenuItem_Click(object sender, EventArgs e)
    {
      DeleteBrowsingHistory deleteBrowsingHistory = new DeleteBrowsingHistory();
      if (deleteBrowsingHistory.ShowDialog() != DialogResult.OK)
        return;
      if (deleteBrowsingHistory.History.Checked)
      {
        System.IO.File.Delete(this.historyXml);
        this.historyTreeView.Nodes.Clear();
      }
      if (deleteBrowsingHistory.TempFiles.Checked)
      {
        this.urls.Clear();
        while (this.imgList.Images.Count > 4)
          this.imgList.Images.RemoveAt(this.imgList.Images.Count - 1);
        System.IO.File.Delete("source.txt");
      }
    }

    private void internetOptionsToolStripMenuItem_Click(object sender, EventArgs e)
    {
      InternetOption internetOption = new InternetOption(this.getCurrentBrowser().Url.ToString());
      if (internetOption.ShowDialog() != DialogResult.OK)
        return;
      if (!internetOption.homepage.Text.Equals(""))
      {
        this.homePage = internetOption.homepage.Text;
        this.settings.DocumentElement.ChildNodes[5].InnerText = internetOption.homepage.Text;
      }
      if (internetOption.deleteHistory.Checked)
      {
        System.IO.File.Delete(this.historyXml);
        this.historyTreeView.Nodes.Clear();
      }
      this.settings.DocumentElement.ChildNodes[6].InnerText = internetOption.num.Value.ToString();
      Form.ActiveForm.ForeColor = internetOption.forecolor;
      Form.ActiveForm.BackColor = internetOption.backcolor;
      this.linkBar.BackColor = internetOption.backcolor;
      this.adrBar.BackColor = internetOption.backcolor;
      Form.ActiveForm.Font = internetOption.font;
      this.linkBar.Font = internetOption.font;
      this.menuBar.Font = internetOption.font;
    }

    private void yahooMessengerToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("calc.exe");

    private void calendarToolStripMenuItem_Click(object sender, EventArgs e) => new Calendar().Show();

    private void solitaireToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("sol.exe");

    private void yahooMailToolStripMenuItem_Click(object sender, EventArgs e) => this.getCurrentBrowser().Navigate("https://login.yahoo.com/config/login_verify2?&.src=ym");

    private void aboutToolStripMenuItem_Click(object sender, EventArgs e) => new About(false).Show();

    private void helpToolStripMenuItem1_Click(object sender, EventArgs e) => Process.Start("mailto:goga.claudia@gmail.com");

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (WBrowser.WBrowser));
      this.menuBar = new MenuStrip();
      this.toolBarContextMenu = new ContextMenuStrip(this.components);
      this.menuBarToolStripMenuItem = new ToolStripMenuItem();
      this.commandBarToolStripMenuItem = new ToolStripMenuItem();
      this.linksBarToolStripMenuItem = new ToolStripMenuItem();
      this.toolbarsToolStripMenuItem = new ToolStripMenuItem();
      this.fileToolStripMenuItem = new ToolStripMenuItem();
      this.newTabToolStripMenuItem = new ToolStripMenuItem();
      this.duplicateTabToolStripMenuItem = new ToolStripMenuItem();
      this.newWindowToolStripMenuItem = new ToolStripMenuItem();
      this.closeTabToolStripMenuItem = new ToolStripMenuItem();
      this.openToolStripMenuItem = new ToolStripMenuItem();
      this.saveAsToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem2 = new ToolStripSeparator();
      this.pageSetupToolStripMenuItem = new ToolStripMenuItem();
      this.printToolStripMenuItem = new ToolStripMenuItem();
      this.printPreviewToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem11 = new ToolStripSeparator();
      this.sendToolStripMenuItem = new ToolStripMenuItem();
      this.pageByEmailToolStripMenuItem = new ToolStripMenuItem();
      this.linkByEmailToolStripMenuItem = new ToolStripMenuItem();
      this.propertiesToolStripMenuItem = new ToolStripMenuItem();
      this.editToolStripMenuItem = new ToolStripMenuItem();
      this.cutToolStripMenuItem = new ToolStripMenuItem();
      this.copyToolStripMenuItem = new ToolStripMenuItem();
      this.pasteToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem1 = new ToolStripSeparator();
      this.selectAllToolStripMenuItem = new ToolStripMenuItem();
      this.favoritesToolStripMenuItem = new ToolStripMenuItem();
      this.addToFavoritsToolStripMenuItem = new ToolStripMenuItem();
      this.addToFavoritsBarToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem3 = new ToolStripSeparator();
      this.organizeFavoritsToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem4 = new ToolStripSeparator();
      this.linksMenuItem = new ToolStripMenuItem();
      this.viewToolStripMenuItem = new ToolStripMenuItem();
      this.explorerBarsToolStripMenuItem = new ToolStripMenuItem();
      this.favoritesViewMenuItem = new ToolStripMenuItem();
      this.historyViewMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem6 = new ToolStripSeparator();
      this.goToMenuItem = new ToolStripMenuItem();
      this.backToolStripMenuItem = new ToolStripMenuItem();
      this.forwardToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem8 = new ToolStripSeparator();
      this.homePageToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem10 = new ToolStripSeparator();
      this.stopToolStripMenuItem = new ToolStripMenuItem();
      this.refreshToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem9 = new ToolStripSeparator();
      this.textSizeToolStripMenuItem = new ToolStripMenuItem();
      this.largestToolStripMenuItem = new ToolStripMenuItem();
      this.largerToolStripMenuItem = new ToolStripMenuItem();
      this.mediumToolStripMenuItem = new ToolStripMenuItem();
      this.smallerToolStripMenuItem = new ToolStripMenuItem();
      this.smallestToolStripMenuItem = new ToolStripMenuItem();
      this.sourceToolStripMenuItem = new ToolStripMenuItem();
      this.fullScreenToolStripMenuItem = new ToolStripMenuItem();
      this.splashScreenToolStripMenuItem = new ToolStripMenuItem();
      this.toolToolStripMenuItem = new ToolStripMenuItem();
      this.deleteBrowserHistoryToolStripMenuItem = new ToolStripMenuItem();
      this.internetOptionsToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem13 = new ToolStripSeparator();
      this.yahooMessengerToolStripMenuItem = new ToolStripMenuItem();
      this.calendarToolStripMenuItem = new ToolStripMenuItem();
      this.solitaireToolStripMenuItem = new ToolStripMenuItem();
      this.yahooMailToolStripMenuItem = new ToolStripMenuItem();
      this.helpToolStripMenuItem = new ToolStripMenuItem();
      this.helpToolStripMenuItem1 = new ToolStripMenuItem();
      this.aboutToolStripMenuItem = new ToolStripMenuItem();
      this.adrBar = new ToolStrip();
      this.toolStripButton1 = new ToolStripButton();
      this.toolStripButton2 = new ToolStripButton();
      this.img = new ToolStripButton();
      this.adrBarTextBox = new ToolStripComboBox();
      this.toolStripButton3 = new ToolStripButton();
      this.toolStripButton4 = new ToolStripButton();
      this.toolStripButton5 = new ToolStripButton();
      this.toolStripButton7 = new ToolStripButton();
      this.toolStripButton8 = new ToolStripButton();
      this.toolStripSplitButton1 = new ToolStripSplitButton();
      this.googleSearch = new ToolStripMenuItem();
      this.liveSearch = new ToolStripMenuItem();
      this.searchTextBox = new ToolStripTextBox();
      this.statusStrip1 = new StatusStrip();
      this.toolStripStatusLabel1 = new ToolStripStatusLabel();
      this.toolStripProgressBar1 = new ToolStripProgressBar();
      this.toolStripStatusLabel2 = new ToolStripStatusLabel();
      this.browserTabControl = new TabControl();
      this.closeTabContext = new ContextMenuStrip(this.components);
      this.closeTabToolStripMenuItem1 = new ToolStripMenuItem();
      this.duplicateTabToolStripMenuItem1 = new ToolStripMenuItem();
      this.NewTab = new TabPage();
      this.linkBar = new ToolStrip();
      this.toolStripButton6 = new ToolStripButton();
      this.toolStripSeparator1 = new ToolStripSeparator();
      this.toolStripButton9 = new ToolStripButton();
      this.favoritesPanel = new Panel();
      this.favoritesTabControl = new TabControl();
      this.favTabPage = new TabPage();
      this.favTreeView = new TreeView();
      this.imgList = new ImageList(this.components);
      this.historyTabPage = new TabPage();
      this.comboBox1 = new ComboBox();
      this.historyTreeView = new TreeView();
      this.linkContextMenu = new ContextMenuStrip(this.components);
      this.openToolStripMenuItem1 = new ToolStripMenuItem();
      this.openInNewTabToolStripMenuItem = new ToolStripMenuItem();
      this.openInNewWindowToolStripMenuItem = new ToolStripMenuItem();
      this.toolStripMenuItem5 = new ToolStripSeparator();
      this.deleteToolStripMenuItem = new ToolStripMenuItem();
      this.renameToolStripMenuItem = new ToolStripMenuItem();
      this.favContextMenu = new ContextMenuStrip(this.components);
      this.openToolStripMenuItem2 = new ToolStripMenuItem();
      this.openInNewTabToolStripMenuItem1 = new ToolStripMenuItem();
      this.openInNewWindowToolStripMenuItem1 = new ToolStripMenuItem();
      this.toolStripMenuItem7 = new ToolStripSeparator();
      this.deleteToolStripMenuItem1 = new ToolStripMenuItem();
      this.renameToolStripMenuItem1 = new ToolStripMenuItem();
      this.histContextMenu = new ContextMenuStrip(this.components);
      this.openToolStripMenuItem3 = new ToolStripMenuItem();
      this.openInNewTabToolStripMenuItem2 = new ToolStripMenuItem();
      this.openInNewWindowToolStripMenuItem2 = new ToolStripMenuItem();
      this.toolStripMenuItem12 = new ToolStripSeparator();
      this.addToFavoritesToolStripMenuItem = new ToolStripMenuItem();
      this.deleteToolStripMenuItem2 = new ToolStripMenuItem();
      this.menuBar.SuspendLayout();
      this.toolBarContextMenu.SuspendLayout();
      this.adrBar.SuspendLayout();
      this.statusStrip1.SuspendLayout();
      this.browserTabControl.SuspendLayout();
      this.closeTabContext.SuspendLayout();
      this.linkBar.SuspendLayout();
      this.favoritesPanel.SuspendLayout();
      this.favoritesTabControl.SuspendLayout();
      this.favTabPage.SuspendLayout();
      this.historyTabPage.SuspendLayout();
      this.linkContextMenu.SuspendLayout();
      this.favContextMenu.SuspendLayout();
      this.histContextMenu.SuspendLayout();
      this.SuspendLayout();
      this.menuBar.ContextMenuStrip = this.toolBarContextMenu;
      this.menuBar.Items.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.fileToolStripMenuItem,
        (ToolStripItem) this.editToolStripMenuItem,
        (ToolStripItem) this.favoritesToolStripMenuItem,
        (ToolStripItem) this.viewToolStripMenuItem,
        (ToolStripItem) this.toolToolStripMenuItem,
        (ToolStripItem) this.helpToolStripMenuItem
      });
      this.menuBar.Location = new Point(0, 0);
      this.menuBar.Name = "menuBar";
      this.menuBar.Size = new Size(805, 24);
      this.menuBar.TabIndex = 2;
      this.menuBar.Text = "menuStrip1";
      this.toolBarContextMenu.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.menuBarToolStripMenuItem,
        (ToolStripItem) this.commandBarToolStripMenuItem,
        (ToolStripItem) this.linksBarToolStripMenuItem
      });
      this.toolBarContextMenu.Name = "toolBarContextMenu";
      this.toolBarContextMenu.Size = new Size(153, 92);
      this.menuBarToolStripMenuItem.CheckOnClick = true;
      this.menuBarToolStripMenuItem.Name = "menuBarToolStripMenuItem";
      this.menuBarToolStripMenuItem.Size = new Size(143, 22);
      this.menuBarToolStripMenuItem.Text = "Menu Bar";
      this.menuBarToolStripMenuItem.Click += new EventHandler(this.menuBarToolStripMenuItem_Click);
      this.commandBarToolStripMenuItem.CheckOnClick = true;
      this.commandBarToolStripMenuItem.Name = "commandBarToolStripMenuItem";
      this.commandBarToolStripMenuItem.Size = new Size(143, 22);
      this.commandBarToolStripMenuItem.Text = "Address Bar";
      this.commandBarToolStripMenuItem.Click += new EventHandler(this.commandBarToolStripMenuItem_Click);
      this.linksBarToolStripMenuItem.Name = "linksBarToolStripMenuItem";
      this.linksBarToolStripMenuItem.Size = new Size(143, 22);
      this.linksBarToolStripMenuItem.Text = "Links Bar";
      this.linksBarToolStripMenuItem.Click += new EventHandler(this.linksBarToolStripMenuItem_Click);
      this.toolbarsToolStripMenuItem.DropDown = (ToolStripDropDown) this.toolBarContextMenu;
      this.toolbarsToolStripMenuItem.Name = "toolbarsToolStripMenuItem";
      this.toolbarsToolStripMenuItem.Size = new Size(162, 22);
      this.toolbarsToolStripMenuItem.Text = "Toolbars";
      this.fileToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[13]
      {
        (ToolStripItem) this.newTabToolStripMenuItem,
        (ToolStripItem) this.duplicateTabToolStripMenuItem,
        (ToolStripItem) this.newWindowToolStripMenuItem,
        (ToolStripItem) this.closeTabToolStripMenuItem,
        (ToolStripItem) this.openToolStripMenuItem,
        (ToolStripItem) this.saveAsToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem2,
        (ToolStripItem) this.pageSetupToolStripMenuItem,
        (ToolStripItem) this.printToolStripMenuItem,
        (ToolStripItem) this.printPreviewToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem11,
        (ToolStripItem) this.sendToolStripMenuItem,
        (ToolStripItem) this.propertiesToolStripMenuItem
      });
      this.fileToolStripMenuItem.Name = "fileToolStripMenuItem";
      this.fileToolStripMenuItem.Size = new Size(35, 20);
      this.fileToolStripMenuItem.Text = "File";
      this.newTabToolStripMenuItem.Name = "newTabToolStripMenuItem";
      this.newTabToolStripMenuItem.ShortcutKeys = Keys.T | Keys.Control;
      this.newTabToolStripMenuItem.Size = new Size(189, 22);
      this.newTabToolStripMenuItem.Text = "New Tab";
      this.newTabToolStripMenuItem.Click += new EventHandler(this.newTabToolStripMenuItem_Click);
      this.duplicateTabToolStripMenuItem.Name = "duplicateTabToolStripMenuItem";
      this.duplicateTabToolStripMenuItem.ShortcutKeys = Keys.D | Keys.Control;
      this.duplicateTabToolStripMenuItem.Size = new Size(189, 22);
      this.duplicateTabToolStripMenuItem.Text = "Duplicate Tab";
      this.duplicateTabToolStripMenuItem.Click += new EventHandler(this.duplicateTabToolStripMenuItem_Click);
      this.newWindowToolStripMenuItem.Name = "newWindowToolStripMenuItem";
      this.newWindowToolStripMenuItem.ShortcutKeys = Keys.N | Keys.Control;
      this.newWindowToolStripMenuItem.Size = new Size(189, 22);
      this.newWindowToolStripMenuItem.Text = "New Window";
      this.newWindowToolStripMenuItem.Click += new EventHandler(this.newWindowToolStripMenuItem_Click);
      this.closeTabToolStripMenuItem.Name = "closeTabToolStripMenuItem";
      this.closeTabToolStripMenuItem.ShortcutKeys = Keys.W | Keys.Control;
      this.closeTabToolStripMenuItem.Size = new Size(189, 22);
      this.closeTabToolStripMenuItem.Text = "Close Tab";
      this.closeTabToolStripMenuItem.Click += new EventHandler(this.closeTabToolStripMenuItem_Click);
      this.openToolStripMenuItem.Name = "openToolStripMenuItem";
      this.openToolStripMenuItem.ShortcutKeys = Keys.O | Keys.Control;
      this.openToolStripMenuItem.Size = new Size(189, 22);
      this.openToolStripMenuItem.Text = "Open";
      this.openToolStripMenuItem.Click += new EventHandler(this.openToolStripMenuItem_Click);
      this.saveAsToolStripMenuItem.Name = "saveAsToolStripMenuItem";
      this.saveAsToolStripMenuItem.Size = new Size(189, 22);
      this.saveAsToolStripMenuItem.Text = "Save As";
      this.saveAsToolStripMenuItem.Click += new EventHandler(this.saveAsToolStripMenuItem_Click);
      this.toolStripMenuItem2.Name = "toolStripMenuItem2";
      this.toolStripMenuItem2.Size = new Size(186, 6);
      this.pageSetupToolStripMenuItem.Name = "pageSetupToolStripMenuItem";
      this.pageSetupToolStripMenuItem.Size = new Size(189, 22);
      this.pageSetupToolStripMenuItem.Text = "Page Setup";
      this.pageSetupToolStripMenuItem.Click += new EventHandler(this.pageSetupToolStripMenuItem_Click);
      this.printToolStripMenuItem.Name = "printToolStripMenuItem";
      this.printToolStripMenuItem.Size = new Size(189, 22);
      this.printToolStripMenuItem.Text = "Print";
      this.printToolStripMenuItem.Click += new EventHandler(this.printToolStripMenuItem_Click);
      this.printPreviewToolStripMenuItem.Name = "printPreviewToolStripMenuItem";
      this.printPreviewToolStripMenuItem.Size = new Size(189, 22);
      this.printPreviewToolStripMenuItem.Text = "Print Preview";
      this.printPreviewToolStripMenuItem.Click += new EventHandler(this.printPreviewToolStripMenuItem_Click);
      this.toolStripMenuItem11.Name = "toolStripMenuItem11";
      this.toolStripMenuItem11.Size = new Size(186, 6);
      this.sendToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.pageByEmailToolStripMenuItem,
        (ToolStripItem) this.linkByEmailToolStripMenuItem
      });
      this.sendToolStripMenuItem.Name = "sendToolStripMenuItem";
      this.sendToolStripMenuItem.Size = new Size(189, 22);
      this.sendToolStripMenuItem.Text = "Send";
      this.pageByEmailToolStripMenuItem.Name = "pageByEmailToolStripMenuItem";
      this.pageByEmailToolStripMenuItem.Size = new Size(151, 22);
      this.pageByEmailToolStripMenuItem.Text = "Page by Email";
      this.pageByEmailToolStripMenuItem.Click += new EventHandler(this.pageByEmailToolStripMenuItem_Click);
      this.linkByEmailToolStripMenuItem.Name = "linkByEmailToolStripMenuItem";
      this.linkByEmailToolStripMenuItem.Size = new Size(151, 22);
      this.linkByEmailToolStripMenuItem.Text = "Link By Email";
      this.linkByEmailToolStripMenuItem.Click += new EventHandler(this.linkByEmailToolStripMenuItem_Click);
      this.propertiesToolStripMenuItem.Name = "propertiesToolStripMenuItem";
      this.propertiesToolStripMenuItem.Size = new Size(189, 22);
      this.propertiesToolStripMenuItem.Text = "Properties";
      this.propertiesToolStripMenuItem.Click += new EventHandler(this.propertiesToolStripMenuItem_Click);
      this.editToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.cutToolStripMenuItem,
        (ToolStripItem) this.copyToolStripMenuItem,
        (ToolStripItem) this.pasteToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem1,
        (ToolStripItem) this.selectAllToolStripMenuItem
      });
      this.editToolStripMenuItem.Name = "editToolStripMenuItem";
      this.editToolStripMenuItem.Size = new Size(37, 20);
      this.editToolStripMenuItem.Text = "Edit";
      this.cutToolStripMenuItem.Name = "cutToolStripMenuItem";
      this.cutToolStripMenuItem.Size = new Size(128, 22);
      this.cutToolStripMenuItem.Text = "Cut";
      this.cutToolStripMenuItem.Click += new EventHandler(this.cutToolStripMenuItem_Click);
      this.copyToolStripMenuItem.Name = "copyToolStripMenuItem";
      this.copyToolStripMenuItem.Size = new Size(128, 22);
      this.copyToolStripMenuItem.Text = "Copy";
      this.copyToolStripMenuItem.Click += new EventHandler(this.copyToolStripMenuItem_Click);
      this.pasteToolStripMenuItem.Name = "pasteToolStripMenuItem";
      this.pasteToolStripMenuItem.Size = new Size(128, 22);
      this.pasteToolStripMenuItem.Text = "Paste";
      this.pasteToolStripMenuItem.Click += new EventHandler(this.pasteToolStripMenuItem_Click);
      this.toolStripMenuItem1.Name = "toolStripMenuItem1";
      this.toolStripMenuItem1.Size = new Size(125, 6);
      this.selectAllToolStripMenuItem.Name = "selectAllToolStripMenuItem";
      this.selectAllToolStripMenuItem.Size = new Size(128, 22);
      this.selectAllToolStripMenuItem.Text = "Select All";
      this.selectAllToolStripMenuItem.Click += new EventHandler(this.selectAllToolStripMenuItem_Click);
      this.favoritesToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.addToFavoritsToolStripMenuItem,
        (ToolStripItem) this.addToFavoritsBarToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem3,
        (ToolStripItem) this.organizeFavoritsToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem4,
        (ToolStripItem) this.linksMenuItem
      });
      this.favoritesToolStripMenuItem.Name = "favoritesToolStripMenuItem";
      this.favoritesToolStripMenuItem.Size = new Size(64, 20);
      this.favoritesToolStripMenuItem.Text = "Favorites";
      this.favoritesToolStripMenuItem.DropDownOpening += new EventHandler(this.favoritesToolStripMenuItem_DropDownOpening);
      this.addToFavoritsToolStripMenuItem.Name = "addToFavoritsToolStripMenuItem";
      this.addToFavoritsToolStripMenuItem.Size = new Size(184, 22);
      this.addToFavoritsToolStripMenuItem.Text = "Add to Favorites";
      this.addToFavoritsToolStripMenuItem.Click += new EventHandler(this.addToFavoritsToolStripMenuItem_Click);
      this.addToFavoritsBarToolStripMenuItem.Name = "addToFavoritsBarToolStripMenuItem";
      this.addToFavoritsBarToolStripMenuItem.Size = new Size(184, 22);
      this.addToFavoritsBarToolStripMenuItem.Text = "Add to Favorites Bar";
      this.addToFavoritsBarToolStripMenuItem.Click += new EventHandler(this.addToFavoritsBarToolStripMenuItem_Click);
      this.toolStripMenuItem3.Name = "toolStripMenuItem3";
      this.toolStripMenuItem3.Size = new Size(181, 6);
      this.organizeFavoritsToolStripMenuItem.Name = "organizeFavoritsToolStripMenuItem";
      this.organizeFavoritsToolStripMenuItem.Size = new Size(184, 22);
      this.organizeFavoritsToolStripMenuItem.Text = "Organize Favorites";
      this.organizeFavoritsToolStripMenuItem.Click += new EventHandler(this.organizeFavoritsToolStripMenuItem_Click);
      this.toolStripMenuItem4.Name = "toolStripMenuItem4";
      this.toolStripMenuItem4.Size = new Size(181, 6);
      this.linksMenuItem.Font = new Font("Tahoma", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.linksMenuItem.Image = (Image) componentResourceManager.GetObject("linksMenuItem.Image");
      this.linksMenuItem.Name = "linksMenuItem";
      this.linksMenuItem.Size = new Size(184, 22);
      this.linksMenuItem.Text = "Links";
      this.linksMenuItem.DropDownOpening += new EventHandler(this.linksMenuItem_DropDownOpening);
      this.viewToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[11]
      {
        (ToolStripItem) this.toolbarsToolStripMenuItem,
        (ToolStripItem) this.explorerBarsToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem6,
        (ToolStripItem) this.goToMenuItem,
        (ToolStripItem) this.stopToolStripMenuItem,
        (ToolStripItem) this.refreshToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem9,
        (ToolStripItem) this.textSizeToolStripMenuItem,
        (ToolStripItem) this.sourceToolStripMenuItem,
        (ToolStripItem) this.fullScreenToolStripMenuItem,
        (ToolStripItem) this.splashScreenToolStripMenuItem
      });
      this.viewToolStripMenuItem.Name = "viewToolStripMenuItem";
      this.viewToolStripMenuItem.Size = new Size(41, 20);
      this.viewToolStripMenuItem.Text = "View";
      this.explorerBarsToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.favoritesViewMenuItem,
        (ToolStripItem) this.historyViewMenuItem
      });
      this.explorerBarsToolStripMenuItem.Name = "explorerBarsToolStripMenuItem";
      this.explorerBarsToolStripMenuItem.Size = new Size(162, 22);
      this.explorerBarsToolStripMenuItem.Text = "Explorer Bars";
      this.explorerBarsToolStripMenuItem.DropDownOpening += new EventHandler(this.explorerBarsToolStripMenuItem_DropDownOpening);
      this.favoritesViewMenuItem.CheckOnClick = true;
      this.favoritesViewMenuItem.Name = "favoritesViewMenuItem";
      this.favoritesViewMenuItem.Size = new Size(130, 22);
      this.favoritesViewMenuItem.Text = "Favorites";
      this.favoritesViewMenuItem.Click += new EventHandler(this.favoritsToolStripMenuItem_Click);
      this.historyViewMenuItem.CheckOnClick = true;
      this.historyViewMenuItem.Name = "historyViewMenuItem";
      this.historyViewMenuItem.Size = new Size(130, 22);
      this.historyViewMenuItem.Text = "History";
      this.historyViewMenuItem.Click += new EventHandler(this.historyToolStripMenuItem_Click);
      this.toolStripMenuItem6.Name = "toolStripMenuItem6";
      this.toolStripMenuItem6.Size = new Size(159, 6);
      this.goToMenuItem.DropDownItems.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.backToolStripMenuItem,
        (ToolStripItem) this.forwardToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem8,
        (ToolStripItem) this.homePageToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem10
      });
      this.goToMenuItem.Name = "goToMenuItem";
      this.goToMenuItem.Size = new Size(162, 22);
      this.goToMenuItem.Text = "Go To";
      this.goToMenuItem.DropDownOpening += new EventHandler(this.goToToolStripMenuItem_DropDownOpening);
      this.backToolStripMenuItem.Name = "backToolStripMenuItem";
      this.backToolStripMenuItem.ShortcutKeys = Keys.Left | Keys.Alt;
      this.backToolStripMenuItem.Size = new Size(178, 22);
      this.backToolStripMenuItem.Text = "Back";
      this.backToolStripMenuItem.Click += new EventHandler(this.backToolStripMenuItem_Click);
      this.forwardToolStripMenuItem.Name = "forwardToolStripMenuItem";
      this.forwardToolStripMenuItem.ShortcutKeys = Keys.Right | Keys.Alt;
      this.forwardToolStripMenuItem.Size = new Size(178, 22);
      this.forwardToolStripMenuItem.Text = "Forward";
      this.forwardToolStripMenuItem.Click += new EventHandler(this.forwardToolStripMenuItem_Click);
      this.toolStripMenuItem8.Name = "toolStripMenuItem8";
      this.toolStripMenuItem8.Size = new Size(175, 6);
      this.homePageToolStripMenuItem.Name = "homePageToolStripMenuItem";
      this.homePageToolStripMenuItem.ShortcutKeys = Keys.H | Keys.Alt;
      this.homePageToolStripMenuItem.Size = new Size(178, 22);
      this.homePageToolStripMenuItem.Text = "Home Page";
      this.homePageToolStripMenuItem.Click += new EventHandler(this.homePageToolStripMenuItem_Click);
      this.toolStripMenuItem10.Name = "toolStripMenuItem10";
      this.toolStripMenuItem10.Size = new Size(175, 6);
      this.stopToolStripMenuItem.Name = "stopToolStripMenuItem";
      this.stopToolStripMenuItem.Size = new Size(162, 22);
      this.stopToolStripMenuItem.Text = "Stop";
      this.stopToolStripMenuItem.Click += new EventHandler(this.stopToolStripMenuItem_Click);
      this.refreshToolStripMenuItem.Name = "refreshToolStripMenuItem";
      this.refreshToolStripMenuItem.ShortcutKeys = Keys.F5;
      this.refreshToolStripMenuItem.Size = new Size(162, 22);
      this.refreshToolStripMenuItem.Text = "Refresh";
      this.refreshToolStripMenuItem.Click += new EventHandler(this.refreshToolStripMenuItem_Click);
      this.toolStripMenuItem9.Name = "toolStripMenuItem9";
      this.toolStripMenuItem9.Size = new Size(159, 6);
      this.textSizeToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.largestToolStripMenuItem,
        (ToolStripItem) this.largerToolStripMenuItem,
        (ToolStripItem) this.mediumToolStripMenuItem,
        (ToolStripItem) this.smallerToolStripMenuItem,
        (ToolStripItem) this.smallestToolStripMenuItem
      });
      this.textSizeToolStripMenuItem.Name = "textSizeToolStripMenuItem";
      this.textSizeToolStripMenuItem.Size = new Size(162, 22);
      this.textSizeToolStripMenuItem.Text = "Text Size";
      this.textSizeToolStripMenuItem.DropDownItemClicked += new ToolStripItemClickedEventHandler(this.textSizeToolStripMenuItem_DropDownItemClicked);
      this.largestToolStripMenuItem.Name = "largestToolStripMenuItem";
      this.largestToolStripMenuItem.Size = new Size(124, 22);
      this.largestToolStripMenuItem.Text = "Largest";
      this.largerToolStripMenuItem.Name = "largerToolStripMenuItem";
      this.largerToolStripMenuItem.Size = new Size(124, 22);
      this.largerToolStripMenuItem.Text = "Larger";
      this.mediumToolStripMenuItem.Name = "mediumToolStripMenuItem";
      this.mediumToolStripMenuItem.Size = new Size(124, 22);
      this.mediumToolStripMenuItem.Text = "Medium";
      this.smallerToolStripMenuItem.Name = "smallerToolStripMenuItem";
      this.smallerToolStripMenuItem.Size = new Size(124, 22);
      this.smallerToolStripMenuItem.Text = "Smaller";
      this.smallestToolStripMenuItem.Name = "smallestToolStripMenuItem";
      this.smallestToolStripMenuItem.Size = new Size(124, 22);
      this.smallestToolStripMenuItem.Text = "Smallest";
      this.sourceToolStripMenuItem.Name = "sourceToolStripMenuItem";
      this.sourceToolStripMenuItem.Size = new Size(162, 22);
      this.sourceToolStripMenuItem.Text = "Source";
      this.sourceToolStripMenuItem.Click += new EventHandler(this.sourceToolStripMenuItem_Click);
      this.fullScreenToolStripMenuItem.Name = "fullScreenToolStripMenuItem";
      this.fullScreenToolStripMenuItem.ShortcutKeys = Keys.F11;
      this.fullScreenToolStripMenuItem.Size = new Size(162, 22);
      this.fullScreenToolStripMenuItem.Text = "Full Screen";
      this.fullScreenToolStripMenuItem.Click += new EventHandler(this.fullScreenToolStripMenuItem_Click);
      this.splashScreenToolStripMenuItem.CheckOnClick = true;
      this.splashScreenToolStripMenuItem.Name = "splashScreenToolStripMenuItem";
      this.splashScreenToolStripMenuItem.Size = new Size(162, 22);
      this.splashScreenToolStripMenuItem.Text = "Splash Screen";
      this.splashScreenToolStripMenuItem.Click += new EventHandler(this.splashScreenToolStripMenuItem_Click);
      this.toolToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[7]
      {
        (ToolStripItem) this.deleteBrowserHistoryToolStripMenuItem,
        (ToolStripItem) this.internetOptionsToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem13,
        (ToolStripItem) this.yahooMessengerToolStripMenuItem,
        (ToolStripItem) this.calendarToolStripMenuItem,
        (ToolStripItem) this.solitaireToolStripMenuItem,
        (ToolStripItem) this.yahooMailToolStripMenuItem
      });
      this.toolToolStripMenuItem.Name = "toolToolStripMenuItem";
      this.toolToolStripMenuItem.Size = new Size(44, 20);
      this.toolToolStripMenuItem.Text = "Tools";
      this.deleteBrowserHistoryToolStripMenuItem.Name = "deleteBrowserHistoryToolStripMenuItem";
      this.deleteBrowserHistoryToolStripMenuItem.Size = new Size(195, 22);
      this.deleteBrowserHistoryToolStripMenuItem.Text = "Delete Browser History";
      this.deleteBrowserHistoryToolStripMenuItem.Click += new EventHandler(this.deleteBrowserHistoryToolStripMenuItem_Click);
      this.internetOptionsToolStripMenuItem.Name = "internetOptionsToolStripMenuItem";
      this.internetOptionsToolStripMenuItem.Size = new Size(195, 22);
      this.internetOptionsToolStripMenuItem.Text = "Options";
      this.internetOptionsToolStripMenuItem.Click += new EventHandler(this.internetOptionsToolStripMenuItem_Click);
      this.toolStripMenuItem13.Name = "toolStripMenuItem13";
      this.toolStripMenuItem13.Size = new Size(192, 6);
      this.yahooMessengerToolStripMenuItem.Name = "yahooMessengerToolStripMenuItem";
      this.yahooMessengerToolStripMenuItem.Size = new Size(195, 22);
      this.yahooMessengerToolStripMenuItem.Text = "Calculator";
      this.yahooMessengerToolStripMenuItem.Click += new EventHandler(this.yahooMessengerToolStripMenuItem_Click);
      this.calendarToolStripMenuItem.Name = "calendarToolStripMenuItem";
      this.calendarToolStripMenuItem.Size = new Size(195, 22);
      this.calendarToolStripMenuItem.Text = "Calendar";
      this.calendarToolStripMenuItem.Click += new EventHandler(this.calendarToolStripMenuItem_Click);
      this.solitaireToolStripMenuItem.Name = "solitaireToolStripMenuItem";
      this.solitaireToolStripMenuItem.Size = new Size(195, 22);
      this.solitaireToolStripMenuItem.Text = "Solitaire";
      this.solitaireToolStripMenuItem.Click += new EventHandler(this.solitaireToolStripMenuItem_Click);
      this.yahooMailToolStripMenuItem.Name = "yahooMailToolStripMenuItem";
      this.yahooMailToolStripMenuItem.Size = new Size(195, 22);
      this.yahooMailToolStripMenuItem.Text = "Yahoo! Mail";
      this.yahooMailToolStripMenuItem.Click += new EventHandler(this.yahooMailToolStripMenuItem_Click);
      this.helpToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.helpToolStripMenuItem1,
        (ToolStripItem) this.aboutToolStripMenuItem
      });
      this.helpToolStripMenuItem.Name = "helpToolStripMenuItem";
      this.helpToolStripMenuItem.Size = new Size(40, 20);
      this.helpToolStripMenuItem.Text = "Help";
      this.helpToolStripMenuItem1.Name = "helpToolStripMenuItem1";
      this.helpToolStripMenuItem1.Size = new Size(152, 22);
      this.helpToolStripMenuItem1.Text = "Help";
      this.helpToolStripMenuItem1.Click += new EventHandler(this.helpToolStripMenuItem1_Click);
      this.aboutToolStripMenuItem.Name = "aboutToolStripMenuItem";
      this.aboutToolStripMenuItem.Size = new Size(114, 22);
      this.aboutToolStripMenuItem.Text = "About";
      this.aboutToolStripMenuItem.Click += new EventHandler(this.aboutToolStripMenuItem_Click);
      this.adrBar.AllowItemReorder = true;
      this.adrBar.ContextMenuStrip = this.toolBarContextMenu;
      this.adrBar.Items.AddRange(new ToolStripItem[11]
      {
        (ToolStripItem) this.toolStripButton1,
        (ToolStripItem) this.toolStripButton2,
        (ToolStripItem) this.img,
        (ToolStripItem) this.adrBarTextBox,
        (ToolStripItem) this.toolStripButton3,
        (ToolStripItem) this.toolStripButton4,
        (ToolStripItem) this.toolStripButton5,
        (ToolStripItem) this.toolStripButton7,
        (ToolStripItem) this.toolStripButton8,
        (ToolStripItem) this.toolStripSplitButton1,
        (ToolStripItem) this.searchTextBox
      });
      this.adrBar.Location = new Point(0, 24);
      this.adrBar.Name = "adrBar";
      this.adrBar.RenderMode = ToolStripRenderMode.System;
      this.adrBar.Size = new Size(805, 36);
      this.adrBar.Stretch = true;
      this.adrBar.TabIndex = 0;
      this.adrBar.Text = "toolStrip1";
      this.toolStripButton1.Enabled = false;
      this.toolStripButton1.Image = (Image) componentResourceManager.GetObject("toolStripButton1.Image");
      this.toolStripButton1.ImageTransparentColor = Color.Magenta;
      this.toolStripButton1.Name = "toolStripButton1";
      this.toolStripButton1.Size = new Size(33, 33);
      this.toolStripButton1.Text = "Back";
      this.toolStripButton1.TextImageRelation = TextImageRelation.ImageAboveText;
      this.toolStripButton1.Click += new EventHandler(this.toolStripButton1_Click);
      this.toolStripButton2.Enabled = false;
      this.toolStripButton2.Image = (Image) componentResourceManager.GetObject("toolStripButton2.Image");
      this.toolStripButton2.ImageTransparentColor = Color.Magenta;
      this.toolStripButton2.Name = "toolStripButton2";
      this.toolStripButton2.Size = new Size(31, 33);
      this.toolStripButton2.Text = "Fwd";
      this.toolStripButton2.TextImageRelation = TextImageRelation.ImageAboveText;
      this.toolStripButton2.Click += new EventHandler(this.toolStripButton2_Click);
      this.img.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.img.Image = (Image) componentResourceManager.GetObject("img.Image");
      this.img.ImageTransparentColor = Color.Magenta;
      this.img.Name = "img";
      this.img.Size = new Size(23, 33);
      this.adrBarTextBox.AutoCompleteMode = AutoCompleteMode.Suggest;
      this.adrBarTextBox.AutoCompleteSource = AutoCompleteSource.AllUrl;
      this.adrBarTextBox.DropDownHeight = 300;
      this.adrBarTextBox.FlatStyle = FlatStyle.System;
      this.adrBarTextBox.IntegralHeight = false;
      this.adrBarTextBox.Name = "adrBarTextBox";
      this.adrBarTextBox.Size = new Size(400, 36);
      this.adrBarTextBox.SelectedIndexChanged += new EventHandler(this.adrBarTextBox_SelectedIndexChanged);
      this.adrBarTextBox.KeyDown += new KeyEventHandler(this.adrBarTextBox_KeyDown);
      this.adrBarTextBox.DropDown += new EventHandler(this.adrBarTextBox_DropDown);
      this.adrBarTextBox.Click += new EventHandler(this.adrBarTextBox_Click);
      this.toolStripButton3.DisplayStyle = ToolStripItemDisplayStyle.Text;
      this.toolStripButton3.Image = (Image) componentResourceManager.GetObject("toolStripButton3.Image");
      this.toolStripButton3.ImageTransparentColor = Color.Magenta;
      this.toolStripButton3.Name = "toolStripButton3";
      this.toolStripButton3.Size = new Size(24, 33);
      this.toolStripButton3.Text = "Go";
      this.toolStripButton3.Click += new EventHandler(this.toolStripButton3_Click);
      this.toolStripButton4.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripButton4.Image = (Image) componentResourceManager.GetObject("toolStripButton4.Image");
      this.toolStripButton4.ImageTransparentColor = Color.Magenta;
      this.toolStripButton4.Name = "toolStripButton4";
      this.toolStripButton4.Size = new Size(23, 33);
      this.toolStripButton4.Text = "Refresh";
      this.toolStripButton4.Click += new EventHandler(this.toolStripButton4_Click);
      this.toolStripButton5.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripButton5.Image = (Image) componentResourceManager.GetObject("toolStripButton5.Image");
      this.toolStripButton5.ImageTransparentColor = Color.Magenta;
      this.toolStripButton5.Name = "toolStripButton5";
      this.toolStripButton5.Size = new Size(23, 33);
      this.toolStripButton5.Text = "Stop";
      this.toolStripButton5.Click += new EventHandler(this.toolStripButton5_Click);
      this.toolStripButton7.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripButton7.Image = (Image) componentResourceManager.GetObject("toolStripButton7.Image");
      this.toolStripButton7.ImageTransparentColor = Color.Magenta;
      this.toolStripButton7.Name = "toolStripButton7";
      this.toolStripButton7.Size = new Size(23, 33);
      this.toolStripButton7.Text = "Favorits";
      this.toolStripButton7.Click += new EventHandler(this.toolStripButton7_Click);
      this.toolStripButton8.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripButton8.Image = (Image) componentResourceManager.GetObject("toolStripButton8.Image");
      this.toolStripButton8.ImageTransparentColor = Color.Magenta;
      this.toolStripButton8.Name = "toolStripButton8";
      this.toolStripButton8.Size = new Size(23, 33);
      this.toolStripButton8.Text = "Add to favorites";
      this.toolStripButton8.Click += new EventHandler(this.toolStripButton8_Click);
      this.toolStripSplitButton1.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripSplitButton1.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.googleSearch,
        (ToolStripItem) this.liveSearch
      });
      this.toolStripSplitButton1.Image = (Image) componentResourceManager.GetObject("toolStripSplitButton1.Image");
      this.toolStripSplitButton1.ImageTransparentColor = Color.Magenta;
      this.toolStripSplitButton1.Name = "toolStripSplitButton1";
      this.toolStripSplitButton1.Size = new Size(32, 33);
      this.toolStripSplitButton1.Text = "Search";
      this.googleSearch.Checked = true;
      this.googleSearch.CheckOnClick = true;
      this.googleSearch.CheckState = CheckState.Checked;
      this.googleSearch.Name = "googleSearch";
      this.googleSearch.Size = new Size(154, 22);
      this.googleSearch.Text = "Google Search";
      this.googleSearch.Click += new EventHandler(this.googleSearch_Click);
      this.liveSearch.CheckOnClick = true;
      this.liveSearch.Name = "liveSearch";
      this.liveSearch.Size = new Size(154, 22);
      this.liveSearch.Text = "Live Search";
      this.liveSearch.Click += new EventHandler(this.liveSearch_Click);
      this.searchTextBox.Name = "searchTextBox";
      this.searchTextBox.Size = new Size(150, 21);
      this.searchTextBox.KeyDown += new KeyEventHandler(this.searchTextBox_KeyDown);
      this.statusStrip1.ContextMenuStrip = this.toolBarContextMenu;
      this.statusStrip1.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.toolStripStatusLabel1,
        (ToolStripItem) this.toolStripProgressBar1,
        (ToolStripItem) this.toolStripStatusLabel2
      });
      this.statusStrip1.Location = new Point(0, 386);
      this.statusStrip1.Name = "statusStrip1";
      this.statusStrip1.RenderMode = ToolStripRenderMode.Professional;
      this.statusStrip1.Size = new Size(805, 22);
      this.statusStrip1.TabIndex = 2;
      this.statusStrip1.Text = "statusStrip1";
      this.toolStripStatusLabel1.Name = "toolStripStatusLabel1";
      this.toolStripStatusLabel1.Size = new Size(486, 17);
      this.toolStripStatusLabel1.Spring = true;
      this.toolStripStatusLabel1.Text = "toolStripStatusLabel1";
      this.toolStripStatusLabel1.TextAlign = ContentAlignment.MiddleLeft;
      this.toolStripProgressBar1.Name = "toolStripProgressBar1";
      this.toolStripProgressBar1.Size = new Size(100, 16);
      this.toolStripProgressBar1.Step = 5;
      this.toolStripStatusLabel2.Name = "toolStripStatusLabel2";
      this.toolStripStatusLabel2.Size = new Size(202, 17);
      this.toolStripStatusLabel2.Text = "                                                                 ";
      this.browserTabControl.ContextMenuStrip = this.closeTabContext;
      this.browserTabControl.Controls.Add((Control) this.NewTab);
      this.browserTabControl.Dock = DockStyle.Fill;
      this.browserTabControl.Location = new Point(148, 85);
      this.browserTabControl.Name = "browserTabControl";
      this.browserTabControl.SelectedIndex = 0;
      this.browserTabControl.Size = new Size(657, 301);
      this.browserTabControl.TabIndex = 1;
      this.browserTabControl.SelectedIndexChanged += new EventHandler(this.browserTabControl_SelectedIndexChanged);
      this.closeTabContext.Items.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.closeTabToolStripMenuItem1,
        (ToolStripItem) this.duplicateTabToolStripMenuItem1
      });
      this.closeTabContext.Name = "contextMenuStrip1";
      this.closeTabContext.Size = new Size(193, 48);
      this.closeTabToolStripMenuItem1.Name = "closeTabToolStripMenuItem1";
      this.closeTabToolStripMenuItem1.ShortcutKeys = Keys.W | Keys.Control;
      this.closeTabToolStripMenuItem1.Size = new Size(192, 22);
      this.closeTabToolStripMenuItem1.Text = "CloseTab";
      this.closeTabToolStripMenuItem1.Click += new EventHandler(this.closeTabToolStripMenuItem1_Click);
      this.duplicateTabToolStripMenuItem1.Name = "duplicateTabToolStripMenuItem1";
      this.duplicateTabToolStripMenuItem1.ShortcutKeys = Keys.D | Keys.Control;
      this.duplicateTabToolStripMenuItem1.Size = new Size(192, 22);
      this.duplicateTabToolStripMenuItem1.Text = "Duplicate Tab ";
      this.duplicateTabToolStripMenuItem1.Click += new EventHandler(this.duplicateTabToolStripMenuItem1_Click);
      this.NewTab.Location = new Point(4, 22);
      this.NewTab.Name = "NewTab";
      this.NewTab.Padding = new Padding(3);
      this.NewTab.Size = new Size(649, 275);
      this.NewTab.TabIndex = 0;
      this.NewTab.Text = "New";
      this.NewTab.UseVisualStyleBackColor = true;
      this.linkBar.ContextMenuStrip = this.toolBarContextMenu;
      this.linkBar.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.toolStripButton6,
        (ToolStripItem) this.toolStripSeparator1,
        (ToolStripItem) this.toolStripButton9
      });
      this.linkBar.LayoutStyle = ToolStripLayoutStyle.HorizontalStackWithOverflow;
      this.linkBar.Location = new Point(0, 60);
      this.linkBar.Name = "linkBar";
      this.linkBar.RenderMode = ToolStripRenderMode.System;
      this.linkBar.Size = new Size(805, 25);
      this.linkBar.TabIndex = 3;
      this.linkBar.Text = "toolStrip2";
      this.linkBar.VisibleChanged += new EventHandler(this.linkBar_VisibleChanged);
      this.toolStripButton6.Image = (Image) componentResourceManager.GetObject("toolStripButton6.Image");
      this.toolStripButton6.ImageTransparentColor = Color.Magenta;
      this.toolStripButton6.Name = "toolStripButton6";
      this.toolStripButton6.Size = new Size(72, 22);
      this.toolStripButton6.Text = "Favorites";
      this.toolStripButton6.ToolTipText = "View Favorites, History";
      this.toolStripButton6.Click += new EventHandler(this.toolStripButton6_Click);
      this.toolStripSeparator1.Name = "toolStripSeparator1";
      this.toolStripSeparator1.Size = new Size(6, 25);
      this.toolStripButton9.DisplayStyle = ToolStripItemDisplayStyle.Image;
      this.toolStripButton9.Image = (Image) componentResourceManager.GetObject("toolStripButton9.Image");
      this.toolStripButton9.ImageAlign = ContentAlignment.MiddleLeft;
      this.toolStripButton9.ImageTransparentColor = Color.Magenta;
      this.toolStripButton9.Name = "toolStripButton9";
      this.toolStripButton9.Padding = new Padding(0, 0, 10, 0);
      this.toolStripButton9.Size = new Size(30, 22);
      this.toolStripButton9.Text = "Add to Favorites Bar";
      this.toolStripButton9.TextAlign = ContentAlignment.MiddleLeft;
      this.toolStripButton9.Click += new EventHandler(this.toolStripButton9_Click);
      this.favoritesPanel.Controls.Add((Control) this.favoritesTabControl);
      this.favoritesPanel.Dock = DockStyle.Left;
      this.favoritesPanel.Location = new Point(0, 85);
      this.favoritesPanel.Name = "favoritesPanel";
      this.favoritesPanel.Size = new Size(148, 301);
      this.favoritesPanel.TabIndex = 4;
      this.favoritesPanel.VisibleChanged += new EventHandler(this.favoritesPanel_VisibleChanged);
      this.favoritesTabControl.Controls.Add((Control) this.favTabPage);
      this.favoritesTabControl.Controls.Add((Control) this.historyTabPage);
      this.favoritesTabControl.Dock = DockStyle.Fill;
      this.favoritesTabControl.Location = new Point(0, 0);
      this.favoritesTabControl.Name = "favoritesTabControl";
      this.favoritesTabControl.SelectedIndex = 0;
      this.favoritesTabControl.Size = new Size(148, 301);
      this.favoritesTabControl.TabIndex = 0;
      this.favTabPage.BorderStyle = BorderStyle.Fixed3D;
      this.favTabPage.Controls.Add((Control) this.favTreeView);
      this.favTabPage.Location = new Point(4, 22);
      this.favTabPage.Name = "favTabPage";
      this.favTabPage.Padding = new Padding(3);
      this.favTabPage.Size = new Size(140, 275);
      this.favTabPage.TabIndex = 0;
      this.favTabPage.Text = "Favorites";
      this.favTabPage.UseVisualStyleBackColor = true;
      this.favTreeView.BorderStyle = BorderStyle.None;
      this.favTreeView.Dock = DockStyle.Fill;
      this.favTreeView.ImageIndex = 0;
      this.favTreeView.ImageList = this.imgList;
      this.favTreeView.ItemHeight = 20;
      this.favTreeView.Location = new Point(3, 3);
      this.favTreeView.Name = "favTreeView";
      this.favTreeView.RightToLeft = RightToLeft.No;
      this.favTreeView.SelectedImageIndex = 0;
      this.favTreeView.ShowNodeToolTips = true;
      this.favTreeView.Size = new Size(130, 265);
      this.favTreeView.TabIndex = 0;
      this.favTreeView.NodeMouseClick += new TreeNodeMouseClickEventHandler(this.treeView1_NodeMouseClick);
      this.imgList.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imgList.ImageStream");
      this.imgList.TransparentColor = Color.Transparent;
      this.imgList.Images.SetKeyName(0, "folder.gif");
      this.imgList.Images.SetKeyName(1, "net.png");
      this.imgList.Images.SetKeyName(2, "calendar.png");
      this.imgList.Images.SetKeyName(3, "link.png");
      this.historyTabPage.BorderStyle = BorderStyle.Fixed3D;
      this.historyTabPage.Controls.Add((Control) this.comboBox1);
      this.historyTabPage.Controls.Add((Control) this.historyTreeView);
      this.historyTabPage.Location = new Point(4, 22);
      this.historyTabPage.Name = "historyTabPage";
      this.historyTabPage.Padding = new Padding(3);
      this.historyTabPage.Size = new Size(140, 275);
      this.historyTabPage.TabIndex = 2;
      this.historyTabPage.Text = "History";
      this.historyTabPage.UseVisualStyleBackColor = true;
      this.comboBox1.FormattingEnabled = true;
      this.comboBox1.Items.AddRange(new object[3]
      {
        (object) "View by Date",
        (object) "View By Site",
        (object) "Ordered Visited Today"
      });
      this.comboBox1.Location = new Point(6, 7);
      this.comboBox1.Name = "comboBox1";
      this.comboBox1.Size = new Size((int) sbyte.MaxValue, 21);
      this.comboBox1.TabIndex = 1;
      this.comboBox1.SelectedValueChanged += new EventHandler(this.comboBox1_SelectedValueChanged);
      this.historyTreeView.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.historyTreeView.BorderStyle = BorderStyle.None;
      this.historyTreeView.ImageIndex = 0;
      this.historyTreeView.ImageList = this.imgList;
      this.historyTreeView.Location = new Point(3, 34);
      this.historyTreeView.Name = "historyTreeView";
      this.historyTreeView.SelectedImageIndex = 0;
      this.historyTreeView.ShowLines = false;
      this.historyTreeView.ShowNodeToolTips = true;
      this.historyTreeView.ShowRootLines = false;
      this.historyTreeView.Size = new Size(130, 239);
      this.historyTreeView.TabIndex = 0;
      this.historyTreeView.NodeMouseClick += new TreeNodeMouseClickEventHandler(this.historyTreeView_NodeMouseClick);
      this.linkContextMenu.Items.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.openToolStripMenuItem1,
        (ToolStripItem) this.openInNewTabToolStripMenuItem,
        (ToolStripItem) this.openInNewWindowToolStripMenuItem,
        (ToolStripItem) this.toolStripMenuItem5,
        (ToolStripItem) this.deleteToolStripMenuItem,
        (ToolStripItem) this.renameToolStripMenuItem
      });
      this.linkContextMenu.LayoutStyle = ToolStripLayoutStyle.HorizontalStackWithOverflow;
      this.linkContextMenu.Name = "linkContextMenu";
      this.linkContextMenu.Size = new Size(188, 120);
      this.openToolStripMenuItem1.Name = "openToolStripMenuItem1";
      this.openToolStripMenuItem1.Size = new Size(187, 22);
      this.openToolStripMenuItem1.Text = "Open";
      this.openToolStripMenuItem1.Click += new EventHandler(this.openToolStripMenuItem1_Click);
      this.openInNewTabToolStripMenuItem.Name = "openInNewTabToolStripMenuItem";
      this.openInNewTabToolStripMenuItem.Size = new Size(187, 22);
      this.openInNewTabToolStripMenuItem.Text = "Open in New Tab";
      this.openInNewTabToolStripMenuItem.Click += new EventHandler(this.openInNewTabToolStripMenuItem_Click);
      this.openInNewWindowToolStripMenuItem.Name = "openInNewWindowToolStripMenuItem";
      this.openInNewWindowToolStripMenuItem.Size = new Size(187, 22);
      this.openInNewWindowToolStripMenuItem.Text = "Open in New Window";
      this.openInNewWindowToolStripMenuItem.Click += new EventHandler(this.openInNewWindowToolStripMenuItem_Click);
      this.toolStripMenuItem5.Name = "toolStripMenuItem5";
      this.toolStripMenuItem5.Size = new Size(184, 6);
      this.deleteToolStripMenuItem.Name = "deleteToolStripMenuItem";
      this.deleteToolStripMenuItem.Size = new Size(187, 22);
      this.deleteToolStripMenuItem.Text = "Delete";
      this.deleteToolStripMenuItem.Click += new EventHandler(this.deleteToolStripMenuItem_Click);
      this.renameToolStripMenuItem.Name = "renameToolStripMenuItem";
      this.renameToolStripMenuItem.Size = new Size(187, 22);
      this.renameToolStripMenuItem.Text = "Rename";
      this.renameToolStripMenuItem.Click += new EventHandler(this.renameToolStripMenuItem_Click);
      this.favContextMenu.Items.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.openToolStripMenuItem2,
        (ToolStripItem) this.openInNewTabToolStripMenuItem1,
        (ToolStripItem) this.openInNewWindowToolStripMenuItem1,
        (ToolStripItem) this.toolStripMenuItem7,
        (ToolStripItem) this.deleteToolStripMenuItem1,
        (ToolStripItem) this.renameToolStripMenuItem1
      });
      this.favContextMenu.Name = "favContextMenu";
      this.favContextMenu.Size = new Size(188, 120);
      this.openToolStripMenuItem2.Name = "openToolStripMenuItem2";
      this.openToolStripMenuItem2.Size = new Size(187, 22);
      this.openToolStripMenuItem2.Text = "Open";
      this.openToolStripMenuItem2.Click += new EventHandler(this.openToolStripMenuItem1_Click);
      this.openInNewTabToolStripMenuItem1.Name = "openInNewTabToolStripMenuItem1";
      this.openInNewTabToolStripMenuItem1.Size = new Size(187, 22);
      this.openInNewTabToolStripMenuItem1.Text = "Open in New Tab";
      this.openInNewTabToolStripMenuItem1.Click += new EventHandler(this.openInNewTabToolStripMenuItem_Click);
      this.openInNewWindowToolStripMenuItem1.Name = "openInNewWindowToolStripMenuItem1";
      this.openInNewWindowToolStripMenuItem1.Size = new Size(187, 22);
      this.openInNewWindowToolStripMenuItem1.Text = "Open in New Window";
      this.openInNewWindowToolStripMenuItem1.Click += new EventHandler(this.openInNewWindowToolStripMenuItem_Click);
      this.toolStripMenuItem7.Name = "toolStripMenuItem7";
      this.toolStripMenuItem7.Size = new Size(184, 6);
      this.deleteToolStripMenuItem1.Name = "deleteToolStripMenuItem1";
      this.deleteToolStripMenuItem1.Size = new Size(187, 22);
      this.deleteToolStripMenuItem1.Text = "Delete";
      this.deleteToolStripMenuItem1.Click += new EventHandler(this.deleteToolStripMenuItem1_Click);
      this.renameToolStripMenuItem1.Name = "renameToolStripMenuItem1";
      this.renameToolStripMenuItem1.Size = new Size(187, 22);
      this.renameToolStripMenuItem1.Text = "Rename";
      this.renameToolStripMenuItem1.Click += new EventHandler(this.renameToolStripMenuItem1_Click);
      this.histContextMenu.Items.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.openToolStripMenuItem3,
        (ToolStripItem) this.openInNewTabToolStripMenuItem2,
        (ToolStripItem) this.openInNewWindowToolStripMenuItem2,
        (ToolStripItem) this.toolStripMenuItem12,
        (ToolStripItem) this.addToFavoritesToolStripMenuItem,
        (ToolStripItem) this.deleteToolStripMenuItem2
      });
      this.histContextMenu.Name = "histContextMenu";
      this.histContextMenu.Size = new Size(188, 120);
      this.openToolStripMenuItem3.Name = "openToolStripMenuItem3";
      this.openToolStripMenuItem3.Size = new Size(187, 22);
      this.openToolStripMenuItem3.Text = "Open";
      this.openToolStripMenuItem3.Click += new EventHandler(this.openToolStripMenuItem1_Click);
      this.openInNewTabToolStripMenuItem2.Name = "openInNewTabToolStripMenuItem2";
      this.openInNewTabToolStripMenuItem2.Size = new Size(187, 22);
      this.openInNewTabToolStripMenuItem2.Text = "Open in New Tab";
      this.openInNewTabToolStripMenuItem2.Click += new EventHandler(this.openInNewTabToolStripMenuItem_Click);
      this.openInNewWindowToolStripMenuItem2.Name = "openInNewWindowToolStripMenuItem2";
      this.openInNewWindowToolStripMenuItem2.Size = new Size(187, 22);
      this.openInNewWindowToolStripMenuItem2.Text = "Open in New Window";
      this.openInNewWindowToolStripMenuItem2.Click += new EventHandler(this.openInNewWindowToolStripMenuItem_Click);
      this.toolStripMenuItem12.Name = "toolStripMenuItem12";
      this.toolStripMenuItem12.Size = new Size(184, 6);
      this.addToFavoritesToolStripMenuItem.Name = "addToFavoritesToolStripMenuItem";
      this.addToFavoritesToolStripMenuItem.Size = new Size(187, 22);
      this.addToFavoritesToolStripMenuItem.Text = "Add To Favorites";
      this.addToFavoritesToolStripMenuItem.Click += new EventHandler(this.addToFavoritesToolStripMenuItem_Click);
      this.deleteToolStripMenuItem2.Name = "deleteToolStripMenuItem2";
      this.deleteToolStripMenuItem2.Size = new Size(187, 22);
      this.deleteToolStripMenuItem2.Text = "Delete";
      this.deleteToolStripMenuItem2.Click += new EventHandler(this.deleteToolStripMenuItem2_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(805, 408);
      this.Controls.Add((Control) this.browserTabControl);
      this.Controls.Add((Control) this.favoritesPanel);
      this.Controls.Add((Control) this.linkBar);
      this.Controls.Add((Control) this.statusStrip1);
      this.Controls.Add((Control) this.adrBar);
      this.Controls.Add((Control) this.menuBar);
      this.MainMenuStrip = this.menuBar;
      this.Name = nameof (WBrowser);
      this.Tag = (object) "0";
      this.Text = nameof (WBrowser);
      this.Load += new EventHandler(this.Form1_Load);
      this.FormClosed += new FormClosedEventHandler(this.WBrowser_FormClosed);
      this.FormClosing += new FormClosingEventHandler(this.Form1_FormClosing);
      this.menuBar.ResumeLayout(false);
      this.menuBar.PerformLayout();
      this.toolBarContextMenu.ResumeLayout(false);
      this.adrBar.ResumeLayout(false);
      this.adrBar.PerformLayout();
      this.statusStrip1.ResumeLayout(false);
      this.statusStrip1.PerformLayout();
      this.browserTabControl.ResumeLayout(false);
      this.closeTabContext.ResumeLayout(false);
      this.linkBar.ResumeLayout(false);
      this.linkBar.PerformLayout();
      this.favoritesPanel.ResumeLayout(false);
      this.favoritesTabControl.ResumeLayout(false);
      this.favTabPage.ResumeLayout(false);
      this.historyTabPage.ResumeLayout(false);
      this.linkContextMenu.ResumeLayout(false);
      this.favContextMenu.ResumeLayout(false);
      this.histContextMenu.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
