// Decompiled with JetBrains decompiler
// Type: Aura.Protection.Arithmetic.Functions.Maths.Log10
// Assembly: Kudeta Crypter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 16F9F4AC-EE0C-4DE1-A1E6-B297F2D4338B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-VirTool.MSIL.Crypto.gen-a09f476c823deb3aadbd99b5e979f18689723f0ab3b5690e0b9a42cf2007f2a8.exe

using Aura.Protection.Arithmetic.Utils;
using dnlib.DotNet;
using dnlib.DotNet.Emit;
using System.Collections.Generic;
using System.Reflection;

namespace Aura.Protection.Arithmetic.Functions.Maths
{
  public class Log10 : iFunction
  {
    public override ArithmeticTypes ArithmeticTypes => ArithmeticTypes.Log10;

    public override ArithmeticVT Arithmetic(Instruction instruction, ModuleDef module)
    {
      if (!ArithmeticUtils.CheckArithmetic(instruction))
        return (ArithmeticVT) null;
      List<ArithmeticTypes> arithmetics = new List<ArithmeticTypes>()
      {
        ArithmeticTypes.Add,
        ArithmeticTypes.Sub
      };
      ArithmeticEmulator arithmeticEmulator = new ArithmeticEmulator((double) instruction.GetLdcI4Value(), ArithmeticUtils.GetY((double) instruction.GetLdcI4Value()), this.ArithmeticTypes);
      return new ArithmeticVT(new Value(arithmeticEmulator.GetValue(arithmetics), arithmeticEmulator.GetY()), new Token(ArithmeticUtils.GetOpCode(arithmeticEmulator.GetType), (object) module.Import((MethodBase) ArithmeticUtils.GetMethod(this.ArithmeticTypes))), this.ArithmeticTypes);
    }
  }
}
