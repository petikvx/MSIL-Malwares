// Decompiled with JetBrains decompiler
// Type: 668042884958.495595721603
// Assembly: 044201292638, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 5F642552-7ED7-4776-987B-53B72981CCE1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Exploit.MSIL.Shellcode.gen-faabdbc465517c5e1ee24d7762bb002ee94c4be547badebd74bcaba4551155e8.exe

using \u003668042884958;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003668042884958
{
  internal static class \u003495595721603
  {
    internal static bool \u003243559323622<TSource, TKey>(
      this IEnumerable<TSource> _param0,
      IEnumerable<TSource> _param1,
      Func<TSource, TKey> _param2,
      IComparer<TKey> _param3 = null,
      IEqualityComparer<TSource> _param4 = null)
    {
      bool flag;
      return \u003495595721603.\u003240919027888<IEnumerable<TSource>>(_param0, _param1, out flag) ? flag : _param0.OrderBy<TSource, TKey>(_param2, _param3).SequenceEqual<TSource>((IEnumerable<TSource>) _param1.OrderBy<TSource, TKey>(_param2, _param3), _param4);
    }

    internal static bool \u003466299169021<T>(
      this IEnumerable<T> _param0,
      IEnumerable<T> _param1,
      IEqualityComparer<T> _param2 = null)
    {
      bool flag;
      if (\u003495595721603.\u003240919027888<IEnumerable<T>>(_param0, _param1, out flag))
        return flag;
      if (_param2 == null)
        _param2 = (IEqualityComparer<T>) EqualityComparer<T>.Default;
      return _param0.SequenceEqual<T>(_param1, _param2);
    }

    internal static bool \u003395992390406<T>(
      this ISet<T> _param0,
      ISet<T> _param1,
      IEqualityComparer<T> _param2 = null)
    {
      bool flag;
      if (\u003495595721603.\u003240919027888<ISet<T>>(_param0, _param1, out flag))
        return flag;
      if (_param0.Count != _param1.Count)
        return false;
      if (_param2 == null)
        _param2 = (IEqualityComparer<T>) EqualityComparer<T>.Default;
      return new HashSet<T>((IEnumerable<T>) _param0, _param2).SetEquals((IEnumerable<T>) _param1);
    }

    internal static bool \u003507018185078<TKey, TValue>(
      IDictionary<TKey, TValue> _param0,
      IDictionary<TKey, TValue> _param1,
      Func<TValue, TValue, bool> _param2 = null)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: reference to a compiler-generated method
      Func<TValue, TValue, bool> func = new Func<TValue, TValue, bool>(new \u003495595721603.\u003938423637054<TKey, TValue>()
      {
        comparer = EqualityComparer<TValue>.Default
      }.\u003CDictionaryEquals\u003Eb__0);
      _param2 = _param2 ?? func;
      bool flag;
      if (\u003495595721603.\u003240919027888<IDictionary<TKey, TValue>>(_param0, _param1, out flag))
        return flag;
      if (_param0.Count != _param1.Count || !_param0.Keys.\u003243559323622<TKey, TKey>((IEnumerable<TKey>) _param1.Keys, (Func<TKey, TKey>) delegate); //unable to render the statement
      foreach (TKey key in (IEnumerable<TKey>) _param0.Keys)
      {
        if (!_param2(_param0[key], _param1[key]))
          return false;
      }
      return true;
    }

    internal static bool \u003497891326339<TKey, TValue>(
      IDictionary<TKey, IEnumerable<TValue>> _param0,
      IDictionary<TKey, IEnumerable<TValue>> _param1)
    {
      return \u003495595721603.\u003507018185078<TKey, IEnumerable<TValue>>(_param0, _param1, (Func<IEnumerable<TValue>, IEnumerable<TValue>, bool>) delegate); //unable to render the statement
    }

    internal static bool \u003503246786515<T>(T _param0, T _param1)
    {
      bool flag;
      return \u003495595721603.\u003240919027888<T>(_param0, _param1, out flag) ? flag : _param0.Equals((object) _param1);
    }

    private static bool \u003240919027888<T>(T _param0, T _param1, out bool _param2)
    {
      if ((object) _param0 == (object) _param1)
      {
        _param2 = true;
        return true;
      }
      if ((object) _param0 == null || (object) _param1 == null)
      {
        _param2 = false;
        return true;
      }
      _param2 = false;
      return false;
    }
  }
}
