// Decompiled with JetBrains decompiler
// Type: JsonException
// Assembly: PunisherMiner, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5E38855F-8014-4FAB-90F8-2AFCCACBC0F6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-a984daf88ca5b95be07c38888abaac8d0f4241cc67b3fc5e8e798a5fed89bc6d.exe

using System;
using System.Globalization;
using System.Runtime.Serialization;

[Serializable]
public class JsonException : Exception
{
  public const string Prefix = "JSO";

  public int Code => JsonException.GetCode(this.Message);

  public JsonException()
    : base("JSO0001: JSON exception.")
  {
  }

  public JsonException(string message)
    : base(message)
  {
  }

  public JsonException(string message, Exception innerException)
    : base(message, innerException)
  {
  }

  public JsonException(Exception innerException)
    : base((string) null, innerException)
  {
  }

  protected JsonException(SerializationInfo info, StreamingContext context)
    : base(info, context)
  {
  }

  public static int GetCode(string message)
  {
    if (message == null || !message.StartsWith("JSO", StringComparison.Ordinal))
      return -1;
    int num = message.IndexOf(':', "JSO".Length);
    int result;
    return num < 0 || !int.TryParse(message.Substring("JSO".Length, num - "JSO".Length), NumberStyles.None, (IFormatProvider) CultureInfo.InvariantCulture, out result) ? -1 : result;
  }
}
