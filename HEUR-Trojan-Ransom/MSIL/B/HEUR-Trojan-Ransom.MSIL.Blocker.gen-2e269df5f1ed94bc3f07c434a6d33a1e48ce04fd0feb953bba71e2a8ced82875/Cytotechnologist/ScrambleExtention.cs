// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206A‎‍⁪⁮⁬‎⁪‎⁬⁯‬⁪‮‮‭⁭⁯‬‬⁬‬‬⁬​⁪⁪‬‎‏‪⁪‎‍‍⁯‌‎⁯‫‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1448264914;
      int count;
      int index;
      bool flag;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -977887178)) % 12U)
        {
          case 0:
            num1 = (int) num2 * -153684560 ^ 1194043733;
            continue;
          case 1:
            obj = list[index];
            num1 = (int) num2 * -2006708151 ^ -938270062;
            continue;
          case 2:
            goto label_1;
          case 3:
            list[count] = obj;
            num1 = (int) num2 * -632640068 ^ -637725200;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = -610334304;
            continue;
          case 6:
            --count;
            index = ScrambleExtention.\u206D‏‌‎‌‬‍‍​‎⁫‪⁯‍‌‬‎⁭⁭‮‎‍⁭⁫⁬‍‫​⁫⁯⁮‮⁭⁫‭⁪⁪⁯⁭⁪‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 1626890588 ^ -357303417;
            continue;
          case 7:
            flag = count > 1;
            num1 = -1541377271;
            continue;
          case 8:
            count = list.Count;
            num1 = (int) num2 * -1395374064 ^ -821830219;
            continue;
          case 9:
            list[index] = list[count];
            num1 = (int) num2 * -2121896162 ^ -1049291288;
            continue;
          case 10:
            num1 = (int) num2 * 1295424850 ^ -408644943;
            continue;
          case 11:
            int num3 = !flag ? -315931413 : (num3 = -468075034);
            num1 = num3 ^ (int) num2 * -347463529;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206D‏‌‎‌‬‍‍​‎⁫‪⁯‍‌‬‎⁭⁭‮‎‍⁭⁫⁬‍‫​⁫⁯⁮‮⁭⁫‭⁪⁪⁯⁭⁪‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206A‎‍⁪⁮⁬‎⁪‎⁬⁯‬⁪‮‮‭⁭⁯‬‬⁬‬‬⁬​⁪⁪‬‎‏‪⁪‎‍‍⁯‌‎⁯‫‮() => new Random();
  }
}
