// Decompiled with JetBrains decompiler
// Type: ⁬‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮ : 
  \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮
{
  private const int \u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ = 8;
  private static readonly short[] \u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮ = new short[256]
  {
    (short) 163,
    (short) 215,
    (short) 9,
    (short) 131,
    (short) 248,
    (short) 72,
    (short) 246,
    (short) 244,
    (short) 179,
    (short) 33,
    (short) 21,
    (short) 120,
    (short) 153,
    (short) 177,
    (short) 175,
    (short) 249,
    (short) 231,
    (short) 45,
    (short) 77,
    (short) 138,
    (short) 206,
    (short) 76,
    (short) 202,
    (short) 46,
    (short) 82,
    (short) 149,
    (short) 217,
    (short) 30,
    (short) 78,
    (short) 56,
    (short) 68,
    (short) 40,
    (short) 10,
    (short) 223,
    (short) 2,
    (short) 160,
    (short) 23,
    (short) 241,
    (short) 96,
    (short) 104,
    (short) 18,
    (short) 183,
    (short) 122,
    (short) 195,
    (short) 233,
    (short) 250,
    (short) 61,
    (short) 83,
    (short) 150,
    (short) 132,
    (short) 107,
    (short) 186,
    (short) 242,
    (short) 99,
    (short) 154,
    (short) 25,
    (short) 124,
    (short) 174,
    (short) 229,
    (short) 245,
    (short) 247,
    (short) 22,
    (short) 106,
    (short) 162,
    (short) 57,
    (short) 182,
    (short) 123,
    (short) 15,
    (short) 193,
    (short) 147,
    (short) 129,
    (short) 27,
    (short) 238,
    (short) 180,
    (short) 26,
    (short) 234,
    (short) 208,
    (short) 145,
    (short) 47,
    (short) 184,
    (short) 85,
    (short) 185,
    (short) 218,
    (short) 133,
    (short) 63,
    (short) 65,
    (short) 191,
    (short) 224,
    (short) 90,
    (short) 88,
    (short) 128,
    (short) 95,
    (short) 102,
    (short) 11,
    (short) 216,
    (short) 144,
    (short) 53,
    (short) 213,
    (short) 192,
    (short) 167,
    (short) 51,
    (short) 6,
    (short) 101,
    (short) 105,
    (short) 69,
    (short) 0,
    (short) 148,
    (short) 86,
    (short) 109,
    (short) 152,
    (short) 155,
    (short) 118,
    (short) 151,
    (short) 252,
    (short) 178,
    (short) 194,
    (short) 176,
    (short) 254,
    (short) 219,
    (short) 32,
    (short) 225,
    (short) 235,
    (short) 214,
    (short) 228,
    (short) 221,
    (short) 71,
    (short) 74,
    (short) 29,
    (short) 66,
    (short) 237,
    (short) 158,
    (short) 110,
    (short) 73,
    (short) 60,
    (short) 205,
    (short) 67,
    (short) 39,
    (short) 210,
    (short) 7,
    (short) 212,
    (short) 222,
    (short) 199,
    (short) 103,
    (short) 24,
    (short) 137,
    (short) 203,
    (short) 48,
    (short) 31,
    (short) 141,
    (short) 198,
    (short) 143,
    (short) 170,
    (short) 200,
    (short) 116,
    (short) 220,
    (short) 201,
    (short) 93,
    (short) 92,
    (short) 49,
    (short) 164,
    (short) 112,
    (short) 136,
    (short) 97,
    (short) 44,
    (short) 159,
    (short) 13,
    (short) 43,
    (short) 135,
    (short) 80,
    (short) 130,
    (short) 84,
    (short) 100,
    (short) 38,
    (short) 125,
    (short) 3,
    (short) 64,
    (short) 52,
    (short) 75,
    (short) 28,
    (short) 115,
    (short) 209,
    (short) 196,
    (short) 253,
    (short) 59,
    (short) 204,
    (short) 251,
    (short) sbyte.MaxValue,
    (short) 171,
    (short) 230,
    (short) 62,
    (short) 91,
    (short) 165,
    (short) 173,
    (short) 4,
    (short) 35,
    (short) 156,
    (short) 20,
    (short) 81,
    (short) 34,
    (short) 240,
    (short) 41,
    (short) 121,
    (short) 113,
    (short) 126,
    (short) byte.MaxValue,
    (short) 140,
    (short) 14,
    (short) 226,
    (short) 12,
    (short) 239,
    (short) 188,
    (short) 114,
    (short) 117,
    (short) 111,
    (short) 55,
    (short) 161,
    (short) 236,
    (short) 211,
    (short) 142,
    (short) 98,
    (short) 139,
    (short) 134,
    (short) 16,
    (short) 232,
    (short) 8,
    (short) 119,
    (short) 17,
    (short) 190,
    (short) 146,
    (short) 79,
    (short) 36,
    (short) 197,
    (short) 50,
    (short) 54,
    (short) 157,
    (short) 207,
    (short) 243,
    (short) 166,
    (short) 187,
    (short) 172,
    (short) 94,
    (short) 108,
    (short) 169,
    (short) 19,
    (short) 87,
    (short) 37,
    (short) 181,
    (short) 227,
    (short) 189,
    (short) 168,
    (short) 58,
    (short) 1,
    (short) 5,
    (short) 89,
    (short) 42,
    (short) 70
  };
  private int[] \u200E​⁪⁯‮⁮‮‫‭⁪‫‭‮⁯⁫‪‪‪⁬‬‫⁬‍⁭⁮⁯‌‭⁫‎‫⁫‮‎‪‬⁮⁯⁯⁫‮;
  private int[] \u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮;
  private int[] \u202D​​‭​⁭‏⁫‪⁯‏⁪​‮⁬⁭⁭‮⁪‎⁮‎‭‎⁬⁪‬​‫⁬⁮⁮‪⁪‎‏‎‌⁯‮‮;
  private int[] \u206A‎⁬⁪‮⁬‍‬⁬⁭​⁪‌‫‎⁭⁯⁭‭⁫‎‮⁮‪‮⁬‏‭‌‬‪‍‎⁪‍‪‏‏‏‍‮;
  private bool \u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮;

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    byte[] numArray = _param2 is \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ ? ((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) _param2).\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮() : throw new ArgumentException("invalid parameter passed to SKIPJACK init - " + \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B‮‬​‭‮⁪‫‫‍‌⁮‎‍‬‪‫⁬⁮​⁯⁭‎‫⁯‎⁭⁯‍‭‮⁫​‪‮‭⁪‭‫‭‮((object) _param2));
    this.\u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮ = _param1;
    this.\u200E​⁪⁯‮⁮‮‫‭⁪‫‭‮⁯⁫‪‪‪⁬‬‫⁬‍⁭⁮⁯‌‭⁫‎‫⁫‮‎‪‬⁮⁯⁯⁫‮ = new int[32];
    this.\u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮ = new int[32];
    this.\u202D​​‭​⁭‏⁫‪⁯‏⁪​‮⁬⁭⁭‮⁪‎⁮‎‭‎⁬⁪‬​‫⁬⁮⁮‪⁪‎‏‎‌⁯‮‮ = new int[32];
    this.\u206A‎⁬⁪‮⁬‍‬⁬⁭​⁪‌‫‎⁭⁯⁭‭⁫‎‮⁮‪‮⁬‏‭‌‬‪‍‎⁪‍‪‏‏‏‍‮ = new int[32];
    for (int index = 0; index < 32; ++index)
    {
      this.\u200E​⁪⁯‮⁮‮‫‭⁪‫‭‮⁯⁫‪‪‪⁬‬‫⁬‍⁭⁮⁯‌‭⁫‎‫⁫‮‎‪‬⁮⁯⁯⁫‮[index] = (int) numArray[index * 4 % 10] & (int) byte.MaxValue;
      this.\u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮[index] = (int) numArray[(index * 4 + 1) % 10] & (int) byte.MaxValue;
      this.\u202D​​‭​⁭‏⁫‪⁯‏⁪​‮⁬⁭⁭‮⁪‎⁮‎‭‎⁬⁪‬​‫⁬⁮⁮‪⁪‎‏‎‌⁯‮‮[index] = (int) numArray[(index * 4 + 2) % 10] & (int) byte.MaxValue;
      this.\u206A‎⁬⁪‮⁬‍‬⁬⁭​⁪‌‫‎⁭⁯⁭‭⁫‎‮⁮‪‮⁬‏‭‌‬‪‍‎⁪‍‪‏‏‏‍‮[index] = (int) numArray[(index * 4 + 3) % 10] & (int) byte.MaxValue;
    }
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "SKIPJACK";

  public virtual bool \u200F‍‌⁭‬⁯‪‌‍‮‬‏​⁭‪‬‌​‬‍‭‮‬​⁭‬‎‬‌‪‬⁪‏​‎‎​‮⁬‎‮ => false;

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => 8;

  public virtual int \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    if (this.\u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮ == null)
      throw new InvalidOperationException("SKIPJACK engine not initialised");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, 8, "input buffer too short");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param3, _param4, 8, "output buffer too short");
    if (this.\u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮)
      this.\u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(_param1, _param2, _param3, _param4);
    else
      this.\u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(_param1, _param2, _param3, _param4);
    return 8;
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
  }

  private int \u202D⁭‏‬‌‪⁫⁮‪​‎‍⁭⁮⁯⁫⁯‪‏‎⁭‬​‫⁪‏⁮⁮⁫‏⁬‭‬‎‭⁯​‫‏⁫‮(int _param1, int _param2)
  {
    int num1 = _param2 >> 8 & (int) byte.MaxValue;
    int num2 = _param2 & (int) byte.MaxValue;
    int num3 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num2 ^ this.\u200E​⁪⁯‮⁮‮‫‭⁪‫‭‮⁯⁫‪‪‪⁬‬‫⁬‍⁭⁮⁯‌‭⁫‎‫⁫‮‎‪‬⁮⁯⁯⁫‮[_param1]] ^ num1;
    int num4 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num3 ^ this.\u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮[_param1]] ^ num2;
    int num5 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num4 ^ this.\u202D​​‭​⁭‏⁫‪⁯‏⁪​‮⁬⁭⁭‮⁪‎⁮‎‭‎⁬⁪‬​‫⁬⁮⁮‪⁪‎‏‎‌⁯‮‮[_param1]] ^ num3;
    int num6 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num5 ^ this.\u206A‎⁬⁪‮⁬‍‬⁬⁭​⁪‌‫‎⁭⁯⁭‭⁫‎‮⁮‪‮⁬‏‭‌‬‪‍‎⁪‍‪‏‏‏‍‮[_param1]] ^ num4;
    return (num5 << 8) + num6;
  }

  public virtual int \u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    int num1 = ((int) _param1[_param2] << 8) + ((int) _param1[_param2 + 1] & (int) byte.MaxValue);
    int num2 = ((int) _param1[_param2 + 2] << 8) + ((int) _param1[_param2 + 3] & (int) byte.MaxValue);
    int num3 = ((int) _param1[_param2 + 4] << 8) + ((int) _param1[_param2 + 5] & (int) byte.MaxValue);
    int num4 = ((int) _param1[_param2 + 6] << 8) + ((int) _param1[_param2 + 7] & (int) byte.MaxValue);
    int num5 = 0;
    for (int index1 = 0; index1 < 2; ++index1)
    {
      for (int index2 = 0; index2 < 8; ++index2)
      {
        int num6 = num4;
        num4 = num3;
        num3 = num2;
        num2 = this.\u202D⁭‏‬‌‪⁫⁮‪​‎‍⁭⁮⁯⁫⁯‪‏‎⁭‬​‫⁪‏⁮⁮⁫‏⁬‭‬‎‭⁯​‫‏⁫‮(num5, num1);
        num1 = num2 ^ num6 ^ num5 + 1;
        ++num5;
      }
      for (int index3 = 0; index3 < 8; ++index3)
      {
        int num7 = num4;
        num4 = num3;
        num3 = num1 ^ num2 ^ num5 + 1;
        num2 = this.\u202D⁭‏‬‌‪⁫⁮‪​‎‍⁭⁮⁯⁫⁯‪‏‎⁭‬​‫⁪‏⁮⁮⁫‏⁬‭‬‎‭⁯​‫‏⁫‮(num5, num1);
        num1 = num7;
        ++num5;
      }
    }
    _param3[_param4] = (byte) (num1 >> 8);
    _param3[_param4 + 1] = (byte) num1;
    _param3[_param4 + 2] = (byte) (num2 >> 8);
    _param3[_param4 + 3] = (byte) num2;
    _param3[_param4 + 4] = (byte) (num3 >> 8);
    _param3[_param4 + 5] = (byte) num3;
    _param3[_param4 + 6] = (byte) (num4 >> 8);
    _param3[_param4 + 7] = (byte) num4;
    return 8;
  }

  private int \u200E‏⁫‏⁯‮‪⁭‫⁯​‎‍‏⁪⁮‎​‍⁭‍‏‍‏⁪⁭⁬⁭‎‎‮‭‮‪⁫‌‭‏‪‫‮(int _param1, int _param2)
  {
    int num1 = _param2 & (int) byte.MaxValue;
    int num2 = _param2 >> 8 & (int) byte.MaxValue;
    int num3 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num2 ^ this.\u206A‎⁬⁪‮⁬‍‬⁬⁭​⁪‌‫‎⁭⁯⁭‭⁫‎‮⁮‪‮⁬‏‭‌‬‪‍‎⁪‍‪‏‏‏‍‮[_param1]] ^ num1;
    int num4 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num3 ^ this.\u202D​​‭​⁭‏⁫‪⁯‏⁪​‮⁬⁭⁭‮⁪‎⁮‎‭‎⁬⁪‬​‫⁬⁮⁮‪⁪‎‏‎‌⁯‮‮[_param1]] ^ num2;
    int num5 = (int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num4 ^ this.\u200C⁬⁫⁭‌⁬‌‬⁮‎⁯‫⁪‎⁯‫‎‪‍​‏‎⁮‏‭⁫‪⁬⁯⁭‍‎⁮‫⁪‬⁪‪‬‮[_param1]] ^ num3;
    return (((int) \u206C‏⁯‌‫⁫⁬‫‍⁫‪⁮⁮‬⁯⁯⁯‪‏‌‬‎‍‮⁭‏‌‭​⁬​⁪‮⁬‪⁮‮‮​‬‮.\u200B⁬‪‎‎⁮‫‮‮‎⁯⁬‪⁭‭‮‪‪⁪‍‏‪⁯⁬⁪‪⁭​⁯‫⁪⁬‬⁫‭‍‌⁭​‪‮[num5 ^ this.\u200E​⁪⁯‮⁮‮‫‭⁪‫‭‮⁯⁫‪‪‪⁬‬‫⁬‍⁭⁮⁯‌‭⁫‎‫⁫‮‎‪‬⁮⁯⁯⁫‮[_param1]] ^ num4) << 8) + num5;
  }

  public virtual int \u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    int num1 = ((int) _param1[_param2] << 8) + ((int) _param1[_param2 + 1] & (int) byte.MaxValue);
    int num2 = ((int) _param1[_param2 + 2] << 8) + ((int) _param1[_param2 + 3] & (int) byte.MaxValue);
    int num3 = ((int) _param1[_param2 + 4] << 8) + ((int) _param1[_param2 + 5] & (int) byte.MaxValue);
    int num4 = ((int) _param1[_param2 + 6] << 8) + ((int) _param1[_param2 + 7] & (int) byte.MaxValue);
    int num5 = 31;
    for (int index1 = 0; index1 < 2; ++index1)
    {
      for (int index2 = 0; index2 < 8; ++index2)
      {
        int num6 = num3;
        num3 = num4;
        num4 = num1;
        num1 = this.\u200E‏⁫‏⁯‮‪⁭‫⁯​‎‍‏⁪⁮‎​‍⁭‍‏‍‏⁪⁭⁬⁭‎‎‮‭‮‪⁫‌‭‏‪‫‮(num5, num2);
        num2 = num1 ^ num6 ^ num5 + 1;
        --num5;
      }
      for (int index3 = 0; index3 < 8; ++index3)
      {
        int num7 = num3;
        num3 = num4;
        num4 = num2 ^ num1 ^ num5 + 1;
        num1 = this.\u200E‏⁫‏⁯‮‪⁭‫⁯​‎‍‏⁪⁮‎​‍⁭‍‏‍‏⁪⁭⁬⁭‎‎‮‭‮‪⁫‌‭‏‪‫‮(num5, num2);
        num2 = num7;
        --num5;
      }
    }
    _param3[_param4] = (byte) (num1 >> 8);
    _param3[_param4 + 1] = (byte) num1;
    _param3[_param4 + 2] = (byte) (num2 >> 8);
    _param3[_param4 + 3] = (byte) num2;
    _param3[_param4 + 4] = (byte) (num3 >> 8);
    _param3[_param4 + 5] = (byte) num3;
    _param3[_param4 + 6] = (byte) (num4 >> 8);
    _param3[_param4 + 7] = (byte) num4;
    return 8;
  }
}
