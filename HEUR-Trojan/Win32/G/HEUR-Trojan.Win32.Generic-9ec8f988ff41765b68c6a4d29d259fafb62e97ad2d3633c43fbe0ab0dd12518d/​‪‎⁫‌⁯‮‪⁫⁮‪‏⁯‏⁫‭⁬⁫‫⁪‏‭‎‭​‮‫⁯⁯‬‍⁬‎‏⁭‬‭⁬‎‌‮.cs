// Decompiled with JetBrains decompiler
// Type: ​‪‎⁫‌⁯‮‪⁫⁮‪‏⁯‏⁫‭⁬⁫‫⁪‏‭‎‭​‮‫⁯⁯‬‍⁬‎‏⁭‬‭⁬‎‌‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u200B‪‎⁫‌⁯‮‪⁫⁮‪‏⁯‏⁫‭⁬⁫‫⁪‏‭‎‭​‮‫⁯⁯‬‍⁬‎‏⁭‬‭⁬‎‌‮ : 
  \u202C‎‬⁮⁬‪⁫⁫⁬‎‪⁪​⁭‪‌⁫‌⁬​‎‮​⁬⁯‌⁯‪‎‪‪⁪⁮⁭‪‮‎‬‭‎‮
{
  private readonly \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮;
  private readonly \u202A⁭‫‌‎⁭‌⁭⁭‬⁭‪‮‌⁬‫‬⁫⁬‎‪‪‭⁭‬⁬‬‫‍⁬‬⁮‫‏⁬⁭⁬‎‍⁬‮ \u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮;
  private readonly int \u200F‭⁮⁮⁯​⁫‎⁬‏‬​⁪‪⁫‫‌‏‭‍‬⁯⁪​‬‮⁫‏​‏‪⁫‫⁮⁪‫‎⁮⁬‮‮;
  private int \u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮;
  private bool \u200B⁯⁯⁯‮‎‫‌‬‭‬‪⁯⁮‏‫‍‌⁬⁯⁭⁫‬​‍‪‭‫⁬⁯‌⁫‪‍‍⁭‎‏⁫‪‮;

  public \u200B‪‎⁫‌⁯‮‪⁫⁮‪‏⁯‏⁫‭⁬⁫‫⁪‏‭‎‭​‮‫⁯⁯‬‍⁬‎‏⁭‬‭⁬‎‌‮(
    \u202A⁭‫‌‎⁭‌⁭⁭‬⁭‪‮‌⁬‫‬⁫⁬‎‪‪‭⁭‬⁬‬‫‍⁬‬⁮‫‏⁬⁭⁬‎‍⁬‮ _param1,
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param2)
  {
    this.\u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮ = _param1;
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮ = _param2;
    this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮ = _param2.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    this.\u200F‭⁮⁮⁯​⁫‎⁬‏‬​⁪‪⁫‫‌‏‭‍‬⁯⁪​‬‮⁫‏​‏‪⁫‫⁮⁪‫‎⁮⁬‮‮ = this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮ * 2;
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + "with" + this.\u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮;

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    this.\u200B⁯⁯⁯‮‎‫‌‬‭‬‪⁯⁮‏‫‍‌⁬⁯⁭⁫‬​‍‪‭‫⁬⁯‌⁫‪‍‍⁭‎‏⁫‪‮ = _param1;
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj = !(_param2 is \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮) ? (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) _param2 : (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) ((\u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮) _param2).\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
    if (_param1 && !obj.\u206D⁪⁯‏‪‏‍‏⁭‪⁮‏⁬⁭‪⁬⁬⁬⁪​‍‪‮‏‮⁮‍⁪‪⁪⁪‮⁮‏‮⁪‪‬⁭‍‮)
      throw new \u202E‪‍‍‏‬‭‪⁭‭⁯‌⁫‫‏‪⁭​‍​‫‌⁭‪‭‍‮‎‏‮​⁫‎‮‭‪‫⁬‏⁮‮("Signing Requires Private Key.");
    if (!_param1 && obj.\u206D⁪⁯‏‪‏‍‏⁭‪⁮‏⁬⁭‪⁬⁬⁬⁪​‍‪‮‏‮⁮‍⁪‪⁪⁪‮⁮‏‮⁪‪‬⁭‍‮)
      throw new \u202E‪‍‍‏‬‭‪⁭‭⁯‌⁫‫‏‪⁭​‍​‫‌⁭‪‭‍‮‎‏‮​⁫‎‮‭‪‫⁬‏⁮‮("Verification Requires Public Key.");
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(_param1, _param2);
  }

  public virtual void \u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(byte _param1) => this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(_param1);

  public virtual void \u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
  }

  public virtual byte[] \u202B‌‮‫⁬‏⁫‍⁯‎‍⁪⁮​⁭⁪⁮⁮‮⁭​⁯‭‍‫‍‏⁮‬‏⁭‫⁮⁬‍‪‬⁬‫‪‮()
  {
    if (!this.\u200B⁯⁯⁯‮‎‫‌‬‭‬‪⁯⁮‏‫‍‌⁬⁯⁭⁫‬​‍‪‭‫⁬⁯‌⁫‪‍‍⁭‎‏⁫‪‮)
      throw new InvalidOperationException("GOST3410DigestSigner not initialised for signature generation.");
    byte[] numArray1 = new byte[this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, 0);
    try
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = this.\u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮.\u202B‌‮‫⁬‏⁫‍⁯‎‍⁪⁮​⁭⁪⁮⁮‮⁭​⁯‭‍‫‍‏⁮‬‏⁭‫⁮⁬‍‪‬⁬‫‪‮(numArray1);
      byte[] numArray2 = new byte[this.\u200F‭⁮⁮⁯​⁫‎⁬‏‬​⁪‪⁫‫‌‏‭‍‬⁯⁪​‬‮⁫‏​‏‪⁫‫⁮⁪‫‎⁮⁬‮‮];
      byte[] numArray3 = objArray[0].\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
      byte[] numArray4 = objArray[1].\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
      numArray4.CopyTo((Array) numArray2, this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮ - numArray4.Length);
      numArray3.CopyTo((Array) numArray2, this.\u200F‭⁮⁮⁯​⁫‎⁬‏‬​⁪‪⁫‫‌‏‭‍‬⁯⁪​‬‮⁫‏​‏‪⁫‫⁮⁪‫‎⁮⁬‮‮ - numArray3.Length);
      return numArray2;
    }
    catch (Exception ex)
    {
      throw new \u202E‪⁮‎​⁮⁬‬‬‭‫‏​‌‭‬⁬⁮‮‪‮⁫​⁮​‭‭⁭‭‬‫‫⁭‌⁭‌‭⁯‏⁫‮(ex.Message, ex);
    }
  }

  public virtual bool \u202C⁯‫‪‬⁪‮‌⁫‮‬‍⁬⁬⁪‏⁫‌⁭‭‍‪‎‮​‏‮‍⁬⁮‏⁭⁮‪‭‍​‫‍⁪‮(byte[] _param1)
  {
    if (this.\u200B⁯⁯⁯‮‎‫‌‬‭‬‪⁯⁮‏‫‍‌⁬⁯⁭⁫‬​‍‪‭‫⁬⁯‌⁫‪‍‍⁭‎‏⁫‪‮)
      throw new InvalidOperationException("DSADigestSigner not initialised for verification");
    byte[] numArray = new byte[this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray, 0);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1;
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2;
    try
    {
      obj1 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param1, this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮, this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮);
      obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param1, 0, this.\u206C⁭‎⁬‮‍⁬⁯‏‮‫​‍‭‍‪⁫⁬‌⁭⁮‍⁫⁬⁬‮‬‭‬‎‪‫⁬‏‬‪‏⁫‭‬‮);
    }
    catch (Exception ex)
    {
      throw new \u202E‪⁮‎​⁮⁬‬‬‭‫‏​‌‭‬⁬⁮‮‪‮⁫​⁮​‭‭⁭‭‬‫‫⁭‌⁭‌‭⁯‏⁫‮("error decoding signature bytes.", ex);
    }
    return this.\u206B⁪​‭​⁪‭‌⁭⁬‪‭‮‪⁭⁭‏‏‍‮‮⁫‮‫⁮‍‌‎⁫‮⁪‍⁬‏‭​‌‎⁫‬‮.\u202C⁯‫‪‬⁪‮‌⁫‮‬‍⁬⁬⁪‏⁫‌⁭‭‍‪‎‮​‏‮‍⁬⁮‏⁭⁮‪‭‍​‫‍⁪‮(numArray, obj1, obj2);
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮() => this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
}
