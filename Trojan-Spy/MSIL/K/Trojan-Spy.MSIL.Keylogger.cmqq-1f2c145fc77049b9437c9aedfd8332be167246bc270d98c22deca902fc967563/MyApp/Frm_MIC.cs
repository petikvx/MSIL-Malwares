// Decompiled with JetBrains decompiler
// Type: MyApp.Frm_MIC
// Assembly: CobianRAT, Version=1.0.40.7, Culture=neutral, PublicKeyToken=null
// MVID: E2EA0EB9-E35B-43B8-8108-8D71E6EED121
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Spy.MSIL.Keylogger.cmqq-1f2c145fc77049b9437c9aedfd8332be167246bc270d98c22deca902fc967563.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace MyApp
{
  [DesignerGenerated]
  public sealed class Frm_MIC : Form
  {
    private static List<WeakReference> vX1Q732PUm;
    private IContainer UrNQNkSeIp;
    [AccessedThroughProperty("Lv1")]
    private LV pfVQzK0phs;
    [AccessedThroughProperty("ColumnHeader1")]
    private ColumnHeader i0PGK2GJcl;
    [AccessedThroughProperty("Button1")]
    private Button cRtGMZhn1y;
    [AccessedThroughProperty("NumericUpDown1")]
    private NumericUpDown gUqGYKDlOb;
    [AccessedThroughProperty("Label1")]
    private Label i87GtMcICK;
    [AccessedThroughProperty("Label2")]
    private Label IdRG668HNI;
    [AccessedThroughProperty("ContextMenuStrip1")]
    private ContextMenuStrip DbnG8a2rF8;
    [AccessedThroughProperty("RefreshToolStripMenuItem")]
    private ToolStripMenuItem RkwGBtTMw1;
    [AccessedThroughProperty("PlayToolStripMenuItem")]
    private ToolStripMenuItem yiHGJ9pOVm;
    [AccessedThroughProperty("StopToolStripMenuItem")]
    private ToolStripMenuItem r82GU874Tj;
    [AccessedThroughProperty("DeleteToolStripMenuItem")]
    private ToolStripMenuItem DQ5GQUsLK8;
    [AccessedThroughProperty("ToolStripSeparator1")]
    private ToolStripSeparator kouGGqlLxL;
    [AccessedThroughProperty("ToolStripSeparator2")]
    private ToolStripSeparator uT9Gp7KsUX;
    [AccessedThroughProperty("ImageList1")]
    private ImageList t3fGVrUo60;
    [AccessedThroughProperty("ToolStripSeparator3")]
    private ToolStripSeparator Om4GwIymVD;
    [AccessedThroughProperty("OpenFolderToolStripMenuItem")]
    private ToolStripMenuItem dHBG2Af4yb;
    [AccessedThroughProperty("Timer1")]
    private Timer aDGGkKVxm1;
    public Connection SK;
    public string folder;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    static Frm_MIC()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Frm_MIC()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerStepThrough]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private void fQRQIyMKVe()
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual LV Lv1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader I0lCM229rW()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void QXbC80tQ7a(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual NumericUpDown NumericUpDown1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ContextMenuStrip ContextMenuStrip1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem PlayToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem StopToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem DeleteToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ImageList w7lUyHEHjM()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void j2DUI81HjT(ImageList WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ToolStripSeparator ToolStripSeparator3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem OpenFolderToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual Timer u7LCEcqHO4()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void IEuCF6kSDU(Timer WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Send(string s)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void refreshprofile()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void jb5Qr79ISx(object _param1, FormClosingEventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void MBSQHrEG0c(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void n4mQ3JnPIV(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void YATQesFt1V(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void VktQsm7PuD(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void VQpQbvspp3(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void V1LQ9G4OPr(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void KUUQvHRrWB(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void N6WQup455i(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
