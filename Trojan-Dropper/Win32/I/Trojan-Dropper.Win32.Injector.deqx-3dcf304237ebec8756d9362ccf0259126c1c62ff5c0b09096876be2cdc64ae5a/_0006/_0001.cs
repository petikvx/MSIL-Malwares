// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0008;
using Microsoft.Win32;
using System;
using System.Windows.Forms;

namespace \u0006
{
  internal class \u0001 : \u0005.\u0005
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private const string \u0001 = "SmartAssemblyReportUsage";
    private const string \u0002 = "Unknown";
    internal static readonly string \u0003;
    internal static readonly string \u0004;
    private static bool? \u0001;

    public static void \u0003(uint featureId)
    {
      \u0006.\u0001 obj1;
      try
      {
        \u0006.\u0001 obj2 = new \u0006.\u0001();
        if (true)
          goto label_2;
label_1:
        obj1.\u0002(featureId);
        return;
label_2:
        obj1 = obj2;
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0006.\u0001 o1 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> o2 = (ValueType) featureId;
        \u0004.\u0002(ex, (object) o1, (object) o2);
        throw;
      }
    }

    public static void \u0003(string featureName)
    {
      \u0006.\u0001 obj1;
      try
      {
        \u0006.\u0001 obj2 = new \u0006.\u0001();
        if (true)
          goto label_2;
label_1:
        obj1.\u0002(featureName);
        return;
label_2:
        obj1 = obj2;
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0006.\u0001 o1 = obj1;
        string o2 = featureName;
        \u0004.\u0002(ex, (object) o1, (object) o2);
        throw;
      }
    }

    protected override void \u0002(\u0005.\u0006 sender)
    {
      try
      {
        sender.\u0003();
      }
      catch (Exception ex)
      {
        \u0005.\u0006 o2 = sender;
        \u0004.\u0002(ex, (object) this, (object) o2);
        throw;
      }
    }

    protected override bool \u0002()
    {
      try
      {
        return \u0006.\u0001.\u0003();
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex, (object) this);
        throw;
      }
    }

    private static bool \u0003()
    {
      try
      {
        if (!\u0006.\u0001.\u0001.HasValue)
          \u0006.\u0001.\u0003();
        return \u0006.\u0001.\u0001.Value;
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex);
        throw;
      }
    }

    private static void \u0003()
    {
      string str1;
      RegistryKey registryKey1;
      object obj1;
      bool flag;
      try
      {
        if (true)
          goto label_19;
label_1:
        try
        {
          string str2 = \u0094\u0004.\u000E\u0003(\u0006.\u0001.\u0001(3041), \u0006.\u0001.\u0004, \u0006.\u0001.\u0001(3054), \u0006.\u0001.\u0003);
          if (true)
            goto label_13;
label_2:
          do
          {
            RegistryKey registryKey2 = \u0015\u0006.\u007E\u0082\u0007((object) Registry.CurrentUser, str1);
            if (true)
              goto label_10;
label_3:
            continue;
label_10:
            registryKey1 = registryKey2;
            goto label_3;
          }
          while (false);
          object obj2 = \u0017\u0006.\u007E\u0086\u0007((object) registryKey1, \u0006.\u0001.\u0001(3059));
          if (true)
            goto label_11;
label_5:
          if (obj1 == null)
          {
            if (false)
              return;
            \u0019\u0006.\u007E\u0088\u0007((object) registryKey1, \u0006.\u0001.\u0001(3059), (object) bool.FalseString);
            int num = \u0006.\u0001.\u0004() ? 1 : 0;
            if (true)
              goto label_12;
label_8:
            \u001A\u0006.\u007E\u0089\u0007((object) registryKey1, \u0006.\u0001.\u0001(3059), (object) flag.ToString(), RegistryValueKind.String);
            \u0006.\u0001.\u0001 = new bool?(flag);
            return;
label_12:
            flag = num != 0;
            goto label_8;
          }
          else
          {
            \u0006.\u0001.\u0001 = new bool?(\u000F\u0004.\u009C\u0003(obj1));
            return;
          }
label_11:
          obj1 = obj2;
          goto label_5;
label_13:
          str1 = str2;
          goto label_2;
        }
        catch
        {
          \u0006.\u0001.\u0001 = new bool?(false);
          return;
        }
        finally
        {
          if (registryKey1 != null)
            \u0008\u0004.\u007E\u0081\u0007((object) registryKey1);
        }
label_19:
        registryKey1 = (RegistryKey) null;
        goto label_1;
      }
      catch (Exception ex)
      {
        RegistryKey o1 = registryKey1;
        string o2 = str1;
        object o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) flag;
        \u0004.\u0002(ex, (object) o1, (object) o2, o3, (object) o4);
        throw;
      }
    }

    private static bool \u0004()
    {
      \u0005.\u0008 obj1;
      bool flag;
      try
      {
        \u0005.\u0008 obj2 = new \u0005.\u0008();
        if (true)
          goto label_8;
label_1:
        try
        {
          if (true)
          {
            int num = (int) \u0081\u0007.\u007E\u0001\u0010((object) obj1);
          }
          flag = \u0081\u0007.\u007E\u0094\u000F((object) obj1) == DialogResult.Yes;
        }
        finally
        {
          if (obj1 != null)
            \u0008\u0004.\u007E\u008E\u0002((object) obj1);
        }
        return flag;
label_8:
        obj1 = obj2;
        goto label_1;
      }
      catch (Exception ex)
      {
        \u0005.\u0008 o1 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        \u0004.\u0002(ex, (object) o1, (object) o2);
        throw;
      }
    }

    public \u0001()
    {
      try
      {
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex, (object) this);
        throw;
      }
    }

    static \u0001()
    {
      try
      {
        \u0003.\u0002(typeof (\u0006.\u0001));
        \u0006.\u0001.\u0003 = \u0006.\u0001.\u0001(3092);
        \u0006.\u0001.\u0004 = \u0006.\u0001.\u0001(3092);
      }
      catch (Exception ex)
      {
        \u0004.\u0002(ex);
        throw;
      }
    }
  }
}
