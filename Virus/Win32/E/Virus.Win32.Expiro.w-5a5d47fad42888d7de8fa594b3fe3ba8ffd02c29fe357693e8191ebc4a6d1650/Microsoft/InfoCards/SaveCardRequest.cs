// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.SaveCardRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: ADE0A079-11DB-4A46-8BDE-D2A592CA8DEA
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Expiro.w-5a5d47fad42888d7de8fa594b3fe3ba8ffd02c29fe357693e8191ebc4a6d1650.exe

using System;
using System.Globalization;
using System.IO;

namespace Microsoft.InfoCards
{
  internal class SaveCardRequest : UIAgentRequest
  {
    private InfoCard m_card;

    public SaveCardRequest(
      IntPtr rpcHandle,
      Stream inArgs,
      Stream outArgs,
      ClientUIRequest parent)
      : base(rpcHandle, inArgs, outArgs, parent)
    {
    }

    protected override void OnInitializeAsSystem() => base.OnInitializeAsSystem();

    protected override void OnMarshalInArgs()
    {
      Stream inArgs = this.InArgs;
      this.m_card = new InfoCard(inArgs);
      this.m_card.GetExtendedInformation().Deserialize(inArgs);
      this.m_card.GetRPIdentityRequirement().Deserialize(inArgs);
      this.m_card.GetClaims().Deserialize(inArgs);
    }

    protected override void OnProcess()
    {
      if (this.m_card == null)
        return;
      StoreConnection connection = StoreConnection.GetConnection();
      try
      {
        connection.BeginTransaction();
        try
        {
          this.m_card.LastUpdate = DateTime.UtcNow;
          this.m_card.Save(connection);
          connection.CommitTransaction();
          if (this.m_card.IsSelfIssued)
            AuditLog.AuditCardWritten();
          else
            AuditLog.AuditCardImport();
        }
        catch
        {
          connection.RollbackTransaction();
          throw;
        }
      }
      finally
      {
        connection.Close();
      }
    }

    protected override void OnMarshalOutArgs()
    {
      Stream outArgs = this.OutArgs;
      StoreConnection connection = StoreConnection.GetConnection();
      try
      {
        this.m_card.AgentSerialize(outArgs, this.ParentRequest is GetTokenRequest, this.GetPolicy(), connection, new CultureInfo(this.ParentRequest.UserLanguage));
      }
      finally
      {
        connection.Close();
      }
    }
  }
}
