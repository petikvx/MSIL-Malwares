// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -367310202;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -325448809)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1873330932 ^ -1440512843;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 204232079;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1001998505)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1187951304 ^ -50032634;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 409294292;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 459615193)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * 1229685726 ^ 1512483108;
              continue;
            case 3:
              num1 = (int) num2 * -1111068481 ^ -1423893214;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -904217723;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1819262626)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2066061815 ^ 1335937837;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 332893212 ^ 1097374620;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 586408607;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 489641845)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -397138054 ^ -1458523920;
            continue;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * 766084195 ^ -1922847666;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 1512349430;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 227638151)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -972547951 ^ 1120712914;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 2089727746;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 1508518068)) % 27U)
            {
              case 0:
                num2 = (int) num3 * 552310974 ^ -1179328809;
                continue;
              case 1:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * -1796712097 ^ 1488527032;
                continue;
              case 2:
              case 4:
                this.\u003C\u003E1__state = -1;
                num2 = 1784064933;
                continue;
              case 3:
                C = (JSONNode) null;
                num2 = (int) num3 * -1914796886 ^ -2106648790;
                continue;
              case 6:
                C = enumerator1.Current;
                num2 = 760058279;
                continue;
              case 7:
                goto label_11;
              case 8:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1900331285 ^ 484351537;
                continue;
              case 9:
                num2 = (int) num3 * 707255662 ^ -2116284483;
                continue;
              case 10:
              case 20:
                this.\u003C\u003E1__state = -4;
                num2 = 885704151;
                continue;
              case 11:
                num2 = (int) num3 * 1308510160 ^ -1768359282;
                continue;
              case 12:
                D = (JSONNode) null;
                num2 = (int) num3 * -1097083152 ^ 1764148110;
                continue;
              case 13:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1380854377 ^ -1479492177;
                continue;
              case 14:
                num2 = (int) num3 * -768293857 ^ -1048207882;
                continue;
              case 15:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -1145293428 ^ 1823283822;
                continue;
              case 16:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * 558360737 ^ 873611868;
                continue;
              case 17:
                D = enumerator2.Current;
                this.\u003C\u003E2__current = D;
                num2 = 1650870315;
                continue;
              case 18:
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1701724500 ^ 1718060884;
                continue;
              case 19:
                int num4;
                num2 = num4 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202D‎⁫⁫⁬‌‌‭‭‫⁮⁭⁯⁮‬‮‮‌‫‫⁪‮‏‪​‍‮⁭⁯⁬‪‬‏⁪⁭‌⁮⁮⁬‪‮((IEnumerator) enumerator1) ? 849365731 : (num4 = 428737969);
                continue;
              case 21:
                goto label_1;
              case 22:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * 653620604 ^ 2110962841;
                continue;
              case 23:
                int num5;
                num2 = num5 = num1 != 1 ? 327234750 : (num5 = 1850551413);
                continue;
              case 24:
                int num6;
                num2 = num6 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202D‎⁫⁫⁬‌‌‭‭‫⁮⁭⁯⁮‬‮‮‌‫‫⁪‮‏‪​‍‮⁭⁯⁬‪‬‏⁪⁭‌⁮⁮⁬‪‮((IEnumerator) enumerator2) ? 1281140361 : (num6 = 1528264018);
                continue;
              case 25:
                int num7 = num1 != 0 ? 588153228 : (num7 = 646645861);
                num2 = num7 ^ (int) num3 * 887564310;
                continue;
              case 26:
                goto label_14;
              default:
                goto label_26;
            }
          }
label_11:
          this.\u003C\u003E1__state = 1;
          return true;
label_14:
          return false;
label_26:
          return false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1740481443;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1160078534)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -466934057 ^ 183482179;
            continue;
          case 2:
            num1 = (int) num2 * -845332222 ^ 1061125733;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 808190623;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1429847758)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 1341833165 ^ 1720207060;
              continue;
            case 1:
              asInt = result;
              num1 = (int) num2 * 765749710 ^ -805446385;
              continue;
            case 2:
              goto label_1;
            case 3:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1043607726 ^ -1413766148;
              continue;
            case 4:
              asInt = 0;
              num1 = 1797997241;
              continue;
            case 6:
              int num3 = flag ? -1764817034 : (num3 = -901896817);
              num1 = num3 ^ (int) num2 * -1982339408;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 3055757;
        float asFloat;
        float result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1444995057)) % 9U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = 0.0f;
              num1 = 852525038;
              continue;
            case 2:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202A⁭⁬⁪‬⁫‏⁬⁬⁫⁪‌‎‌⁭‍‪‭⁫⁭‫‍⁮‎⁮‪‪​⁬⁪‮⁮⁪⁪‬⁯‬‎‌‭‮(), out result);
              num1 = (int) num2 * -1748236721 ^ -146211278;
              continue;
            case 3:
              num1 = (int) num2 * -931229152 ^ -1536668428;
              continue;
            case 5:
              num1 = (int) num2 * -1237999200 ^ 1552617204;
              continue;
            case 6:
              result = 0.0f;
              num1 = (int) num2 * -1279841651 ^ -371076867;
              continue;
            case 7:
              asFloat = result;
              num1 = (int) num2 * 263747269 ^ -1197885418;
              continue;
            case 8:
              int num3 = !flag ? 1891427411 : (num3 = 882768288);
              num1 = num3 ^ (int) num2 * 975650207;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 1997369440;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 602431870)) % 7U)
          {
            case 0:
              asDouble = 0.0;
              num1 = 1079599436;
              continue;
            case 2:
              goto label_1;
            case 3:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 89138333 ^ 2055074774;
              continue;
            case 4:
              int num3 = flag ? -141569074 : (num3 = -455056592);
              num1 = num3 ^ (int) num2 * -1171016354;
              continue;
            case 5:
              asDouble = result;
              num1 = (int) num2 * 371338188 ^ 1070201875;
              continue;
            case 6:
              num1 = (int) num2 * -2092600378 ^ 456640335;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1043345135;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1812696432)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 699119358 ^ -1876140638;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1118181300;
        bool asBool;
        bool result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 760068439)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              asBool = result;
              num1 = (int) num2 * 2013897072 ^ 1766065973;
              continue;
            case 3:
              result = false;
              int num3 = bool.TryParse(this.Value, out result) ? -888779124 : (num3 = -73328195);
              num1 = num3 ^ (int) num2 * -802971449;
              continue;
            case 4:
              num1 = (int) num2 * 902400836 ^ 279374382;
              continue;
            case 5:
              asBool = !JSONNode.\u206C‪⁯‍‌‏⁭‬⁯‫⁬⁯​⁭⁫​‎⁮‌⁫‭⁭‌‫‌‍⁪‬‍‬⁪⁭⁫⁫​⁬‏​⁯‭‮(this.Value);
              num1 = 2016075174;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1325059527;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1954206810)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value ? "true" : "false";
              num1 = 2034564033;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -2105970984;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -343284889)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1047119055 ^ 1327110523;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 338175463;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 607302368)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 1633087402 ^ 548227903;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = 1729101982;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -241705356;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -327644478)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            flag1 = (object) a == b;
            num1 = -863254691;
            continue;
          case 2:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 3:
            int num4 = !flag2 ? 1193283902 : (num4 = 1337460130);
            num1 = num4 ^ (int) num2 * 315161239;
            continue;
          case 4:
            num1 = (int) num2 * -1083347483 ^ 912762665;
            continue;
          case 5:
            flag1 = true;
            num1 = (int) num2 * -1941177165 ^ -102343471;
            continue;
          case 6:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1705282746 ^ -254870484;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = -391660167;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1774022197;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -525533183)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -595836893 ^ -368845328;
            continue;
          case 3:
            num1 = (int) num2 * -2031364178 ^ 2047876822;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = -1876909597;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -761660162)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1131137878 ^ 2102455724;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -601035512;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1847352237)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 668788742 ^ 2045983670;
            continue;
          case 3:
            hashCode = this.\u206D‬‬‌‭‪⁪‬⁮‭‪‬⁭‮⁮‪⁭⁮‭​‮‌‪⁪⁭⁯⁯⁯​⁪‭‬⁫⁮‫‭⁭‬‍‭‮();
            num1 = (int) num2 * 1302426186 ^ -984483977;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -1173557151;
      char ch1;
      char ch2;
      int num2;
      char ch3;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -553382103)) % 27U)
        {
          case 0:
label_9:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\r");
            num1 = -1622667685;
            continue;
          case 1:
            switch (ch2)
            {
              case '\b':
                goto label_21;
              case '\t':
                goto label_27;
              case '\n':
                goto label_25;
              case '\v':
                goto label_5;
              case '\f':
                goto label_8;
              case '\r':
                goto label_9;
              default:
                num1 = (int) num3 * -1547553177 ^ -1933989991;
                continue;
            }
          case 2:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\\\");
            num1 = -1622667685;
            continue;
          case 3:
            ++num2;
            num1 = -240335998;
            continue;
          case 4:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u202D‬⁫⁭‭‌‫‬​⁫‎‮‭‬⁪‭‮‎‌⁫‭‬‬‪⁬‭‍‭‎‮⁬⁬‮⁮‎‭⁯‭‍⁯‮(str2) ? -725574438 : (num4 = -357095800);
            continue;
          case 5:
label_21:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\b");
            num1 = -1622667685;
            continue;
          case 6:
            num1 = (int) num3 * -2087201846 ^ -1855698251;
            continue;
          case 7:
            num1 = (int) num3 * -1545741926 ^ 845401500;
            continue;
          case 8:
            ch1 = ch3;
            num1 = (int) num3 * 526487019 ^ -1997453899;
            continue;
          case 9:
            num1 = (int) num3 * 680060113 ^ -1058492874;
            continue;
          case 10:
            num1 = (int) num3 * -2014048660 ^ 1428813243;
            continue;
          case 11:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -200619227 ^ -172485593;
            continue;
          case 12:
            num1 = (int) num3 * -800874184 ^ -1583760631;
            continue;
          case 13:
label_27:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\t");
            num1 = -1622667685;
            continue;
          case 14:
label_8:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\f");
            num1 = -563549694;
            continue;
          case 15:
label_25:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\n");
            num1 = -1622667685;
            continue;
          case 16:
            num1 = (int) num3 * -1326546894 ^ -381208162;
            continue;
          case 17:
            goto label_1;
          case 18:
            str3 = str1;
            num1 = (int) num3 * 1645475280 ^ 1020806749;
            continue;
          case 19:
label_5:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, ch3.ToString());
            num1 = -1622667685;
            continue;
          case 20:
            ch3 = JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(str2, num2);
            num1 = -1277203474;
            continue;
          case 21:
            int num5;
            num1 = num5 = ch2 != '"' ? -68078599 : (num5 = -478163527);
            continue;
          case 23:
            str1 = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(str1, "\\\"");
            num1 = -1622667685;
            continue;
          case 24:
            ch2 = ch1;
            num1 = (int) num3 * 1238066379 ^ -931299831;
            continue;
          case 25:
            num1 = (int) num3 * 1820168976 ^ 1411606489;
            continue;
          case 26:
            int num6;
            num1 = num6 = ch2 == '\\' ? -982754708 : (num6 = -1780769697);
            continue;
          default:
            goto label_29;
        }
      }
label_29:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 120198084;
      bool flag1;
      char ch1;
      bool flag2;
      JSONNode jsonNode1;
      string aKey;
      string aItem;
      string s;
      int num2;
      bool flag3;
      char ch2;
      char ch3;
      bool flag4;
      char ch4;
      bool flag5;
      JSONNode jsonNode2;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1423323783)) % 159U)
        {
          case 0:
            num1 = (int) num3 * 944278769 ^ 1362292516;
            continue;
          case 1:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, "\f");
            num1 = 714464231;
            continue;
          case 2:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1512805033 ^ -1168501074;
            continue;
          case 3:
            int num4;
            num1 = num4 = ch1 == '}' ? 743082242 : (num4 = 1705972975);
            continue;
          case 4:
            ch4 = JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2);
            num1 = (int) num3 * 1375059076 ^ 510368031;
            continue;
          case 5:
            num2 = 0;
            num1 = (int) num3 * -398027563 ^ -749103379;
            continue;
          case 6:
            num1 = (int) num3 * 774325838 ^ 1721831745;
            continue;
          case 7:
            num1 = (int) num3 * -796881645 ^ 203237824;
            continue;
          case 8:
label_122:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = 622331425;
            continue;
          case 9:
          case 45:
          case 90:
          case 117:
          case 120:
label_35:
            ++num2;
            num1 = 375053573;
            continue;
          case 10:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1211269618;
            continue;
          case 11:
label_155:
            num1 = 1718997517;
            continue;
          case 12:
            num1 = 1470197038;
            continue;
          case 13:
            int num5 = flag8 ? 1289123802 : (num5 = 2034541469);
            num1 = num5 ^ (int) num3 * -463375902;
            continue;
          case 14:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, "\n");
            num1 = 603917146;
            continue;
          case 15:
            switch (ch1)
            {
              case '[':
                goto label_126;
              case '\\':
                goto label_90;
              case ']':
                goto label_138;
              default:
                num1 = 1470100690;
                continue;
            }
          case 16:
            int num6 = flag3 ? 1882563163 : (num6 = 845068602);
            num1 = num6 ^ (int) num3 * -635630963;
            continue;
          case 17:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 2137106175;
            continue;
          case 18:
            num1 = (int) num3 * -517183591 ^ -697148430;
            continue;
          case 19:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1458491037 ^ 1772157159;
            continue;
          case 20:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1297984860 ^ 268031776;
            continue;
          case 21:
            num1 = 1785015011;
            continue;
          case 22:
label_90:
            ++num2;
            num1 = 276332132;
            continue;
          case 23:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2002083743 ^ 65379342;
            continue;
          case 24:
            num1 = (int) num3 * 1121723779 ^ -203509241;
            continue;
          case 25:
            aKey = JSONNode.\u202D‍‍‫‮‏‫⁭⁪‏⁭⁯⁯‏‏‮‮‏‪‎⁬‍‏⁭‭‍​‫⁬‬⁪‌⁮⁭‬‌‎‭‮‮‮(aKey);
            num1 = (int) num3 * -588065676 ^ 268491997;
            continue;
          case 26:
            switch (ch1)
            {
              case '\t':
                goto label_106;
              case '\n':
              case '\r':
                goto label_35;
              case '\v':
              case '\f':
                goto label_122;
              default:
                num1 = (int) num3 * -1915081648 ^ 551169103;
                continue;
            }
          case 27:
            num1 = (int) num3 * 1906637786 ^ -1303401111;
            continue;
          case 28:
            goto label_1;
          case 29:
            num1 = (int) num3 * -683453701 ^ -275004138;
            continue;
          case 30:
            num1 = 1649262121;
            continue;
          case 31:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * -673047081 ^ 1475858458;
            continue;
          case 32:
label_138:
            flag5 = flag4;
            num1 = 710930672;
            continue;
          case 33:
            int num7;
            num1 = num7 = ch1 != '{' ? 1972522657 : (num7 = 238679626);
            continue;
          case 34:
            ch1 = JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2);
            int num8 = ch1 <= ',' ? -1131081728 : (num8 = -779807870);
            num1 = num8 ^ (int) num3 * -1039862965;
            continue;
          case 35:
            aKey = "";
            aItem = "";
            num1 = 1114807652;
            continue;
          case 36:
            flag6 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aKey, "");
            num1 = 1096525012;
            continue;
          case 37:
            flag4 = !flag4;
            num1 = 1150475325;
            continue;
          case 38:
            int num9;
            num1 = num9 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aItem, "") ? 732268070 : (num9 = 1785015011);
            continue;
          case 39:
            num1 = (int) num3 * 1073150843 ^ 332376274;
            continue;
          case 40:
            num1 = (int) num3 * 1595952259 ^ 2056550235;
            continue;
          case 41:
            int num10 = jsonNode1 is JSONArray ? 363447035 : (num10 = 290652935);
            num1 = num10 ^ (int) num3 * 508073374;
            continue;
          case 42:
            int num11 = flag7 ? 2054754019 : (num11 = 488039911);
            num1 = num11 ^ (int) num3 * -893244590;
            continue;
          case 43:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1373487213 ^ 145542319;
            continue;
          case 44:
            int num12 = !flag11 ? -466779049 : (num12 = -1166796917);
            num1 = num12 ^ (int) num3 * 1282104100;
            continue;
          case 46:
            int num13;
            num1 = num13 = jsonNodeStack.Count == 0 ? 1388060584 : (num13 = 1622169802);
            continue;
          case 47:
            ch3 = ch2;
            num1 = (int) num3 * 336530761 ^ -1323283675;
            continue;
          case 48:
            num1 = (int) num3 * -1821272922 ^ -465170243;
            continue;
          case 49:
            flag8 = flag4;
            num1 = 35881996;
            continue;
          case 50:
            s = JSONNode.\u200D‪⁬‍‍‏⁯‬⁬⁭⁪‭‪⁬‪⁭‭‍‮‬‏‌‭⁭‌‎‪‮⁬⁬‬⁫‮‬‭‮‪​‮⁫‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * 2045389471 ^ -2144056966;
            continue;
          case 51:
            num1 = (int) num3 * -304106334 ^ 1842022279;
            continue;
          case 52:
            num1 = (int) num3 * 765925551 ^ -1181267642;
            continue;
          case 53:
            int num14 = flag13 ? -574022812 : (num14 = -940872870);
            num1 = num14 ^ (int) num3 * -1823453364;
            continue;
          case 54:
            int num15 = !(jsonNode1 is JSONArray) ? 1877345290 : (num15 = 1496714150);
            num1 = num15 ^ (int) num3 * -1719636866;
            continue;
          case 55:
            int num16;
            num1 = num16 = !flag4 ? 1560659723 : (num16 = 581016077);
            continue;
          case 56:
            num1 = (int) num3 * 1266433808 ^ 2082234502;
            continue;
          case 57:
            num1 = (int) num3 * -625964425 ^ 1519950972;
            continue;
          case 58:
            jsonNodeStack.Pop();
            num1 = 417498906;
            continue;
          case 59:
            aItem = "";
            num1 = (int) num3 * -624627869 ^ -129022757;
            continue;
          case 60:
            num1 = (int) num3 * 2025952932 ^ -1563562727;
            continue;
          case 61:
            jsonNode2 = jsonNode1;
            num1 = 1883559011;
            continue;
          case 62:
            int num17 = flag1 ? -1435629179 : (num17 = -427709516);
            num1 = num17 ^ (int) num3 * 1654364288;
            continue;
          case 63:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1237015494 ^ 1031693325;
            continue;
          case 65:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -497079321 ^ -222311959;
            continue;
          case 66:
            flag1 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1050846424 ^ 1475924430;
            continue;
          case 67:
            flag12 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aKey, "");
            num1 = 985356940;
            continue;
          case 68:
            num1 = (int) num3 * 1473303118 ^ -636929319;
            continue;
          case 69:
            num1 = (int) num3 * 879696237 ^ 1170395306;
            continue;
          case 70:
            aItem = "";
            num1 = (int) num3 * 1752539460 ^ 651777438;
            continue;
          case 71:
            int num18;
            num1 = num18 = ch3 == 'f' ? 285713303 : (num18 = 1464580739);
            continue;
          case 72:
            num1 = (int) num3 * 896366553 ^ -1660043038;
            continue;
          case 73:
            num1 = (int) num3 * -621286163 ^ 1711867665;
            continue;
          case 74:
            aKey = "";
            num1 = 222162632;
            continue;
          case 75:
            goto label_15;
          case 76:
            num1 = (int) num3 * -422088165 ^ -1347496694;
            continue;
          case 77:
label_106:
            int num19;
            num1 = num19 = !flag4 ? 504493439 : (num19 = 651539895);
            continue;
          case 78:
            int num20;
            num1 = num20 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aKey, "") ? 1457811142 : (num20 = 811191053);
            continue;
          case 79:
            num1 = 1057513268;
            continue;
          case 80:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 864177068 ^ 2025717190;
            continue;
          case 81:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1535000961 ^ -324289969;
            continue;
          case 82:
            aKey = "";
            num1 = 565746153;
            continue;
          case 83:
            int num21 = flag2 ? -263047298 : (num21 = -109832082);
            num1 = num21 ^ (int) num3 * -1838687695;
            continue;
          case 84:
            int num22 = !flag5 ? -1463466829 : (num22 = -240846932);
            num1 = num22 ^ (int) num3 * 995577642;
            continue;
          case 85:
            ch2 = ch4;
            num1 = (int) num3 * 1143656647 ^ -300573542;
            continue;
          case 86:
label_119:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, "\r");
            num1 = 714464231;
            continue;
          case 87:
            num1 = (int) num3 * -988095192 ^ -2126286779;
            continue;
          case 88:
            flag4 = false;
            num1 = (int) num3 * -1557527263 ^ 423732615;
            continue;
          case 89:
            num1 = (int) num3 * 1272869823 ^ 2122612489;
            continue;
          case 91:
            aKey = JSONNode.\u202D‍‍‫‮‏‫⁭⁪‏⁭⁯⁯‏‏‮‮‏‪‎⁬‍‏⁭‭‍​‫⁬‬⁪‌⁮⁭‬‌‎‭‮‮‮(aKey);
            num1 = (int) num3 * -237704531 ^ -877949997;
            continue;
          case 92:
            int num23 = !flag6 ? 1798814788 : (num23 = 1373018315);
            num1 = num23 ^ (int) num3 * -1781642787;
            continue;
          case 93:
            int num24 = !flag14 ? -1805236198 : (num24 = -1831350645);
            num1 = num24 ^ (int) num3 * -707365409;
            continue;
          case 94:
label_126:
            int num25;
            num1 = num25 = !flag4 ? 77909202 : (num25 = 1449443845);
            continue;
          case 95:
            num1 = (int) num3 * 1745549613 ^ -397059634;
            continue;
          case 96:
            flag11 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aKey, "");
            num1 = 1018479875;
            continue;
          case 97:
            num1 = (int) num3 * -198432295 ^ 395111556;
            continue;
          case 98:
            flag3 = num2 < JSONNode.\u202D‬⁫⁭‭‌‫‬​⁫‎‮‭‬⁪‭‮‎‌⁫‭‬‬‪⁬‭‍‭‎‮⁬⁬‮⁮‎‭⁯‭‍⁯‮(aJSON);
            num1 = 1191301041;
            continue;
          case 99:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -277201711 ^ -1028024427;
            continue;
          case 100:
            aKey = aItem;
            aItem = "";
            num1 = 11609395;
            continue;
          case 101:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -889694654 ^ -2139577432;
            continue;
          case 102:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -319354506 ^ 343955024;
            continue;
          case 103:
            num1 = (int) num3 * 769239600 ^ -1006223167;
            continue;
          case 104:
            num1 = (int) num3 * -1881351873 ^ -1397606300;
            continue;
          case 105:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1641314750 ^ 1529430964;
            continue;
          case 106:
            num1 = (int) num3 * -1219631483 ^ 2077875270;
            continue;
          case 107:
            num1 = (int) num3 * 351911340 ^ -364296768;
            continue;
          case 108:
            num1 = 433825666;
            continue;
          case 109:
label_58:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, ch4.ToString());
            num1 = 453856611;
            continue;
          case 110:
            int num26;
            num1 = num26 = ch3 != 'n' ? 316928511 : (num26 = 161748577);
            continue;
          case 111:
            num1 = (int) num3 * 1190609735 ^ 1462446921;
            continue;
          case 112:
            int num27 = !flag12 ? 1559533728 : (num27 = 664925858);
            num1 = num27 ^ (int) num3 * -1093058765;
            continue;
          case 113:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1530591429 ^ 708372873;
            continue;
          case 114:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1772498932 ^ 1687423553;
            continue;
          case 115:
            num1 = (int) num3 * -1098829462 ^ -1681799291;
            continue;
          case 116:
            int num28 = !flag9 ? -342726043 : (num28 = -45542776);
            num1 = num28 ^ (int) num3 * 2096340300;
            continue;
          case 118:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, JSONNode.\u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -192143900 ^ 919563134;
            continue;
          case 119:
            int num29;
            num1 = num29 = !flag4 ? 856525278 : (num29 = 159095308);
            continue;
          case 121:
            int num30 = ch3 > 'f' ? -984410472 : (num30 = -938397705);
            num1 = num30 ^ (int) num3 * 1573061490;
            continue;
          case 122:
            num1 = (int) num3 * -234552960 ^ -222937693;
            continue;
          case 123:
            num1 = (int) num3 * 104878645 ^ 501142642;
            continue;
          case 124:
            flag10 = JSONNode.\u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮(aItem, "");
            num1 = (int) num3 * 1402937698 ^ -479410502;
            continue;
          case 125:
            flag2 = jsonNode1 != (object) null;
            num1 = (int) num3 * 639539488 ^ 486689991;
            continue;
          case 126:
            int num31 = !flag10 ? 1698111103 : (num31 = 290380900);
            num1 = num31 ^ (int) num3 * -1095017413;
            continue;
          case (uint) sbyte.MaxValue:
            int num32 = ch1 != ':' ? -1182756207 : (num32 = -679225814);
            num1 = num32 ^ (int) num3 * -1991796007;
            continue;
          case 128:
            int num33;
            num1 = num33 = ch1 > ']' ? 820765938 : (num33 = 571732023);
            continue;
          case 129:
            flag7 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1309227791 ^ 936402387;
            continue;
          case 130:
            num1 = (int) num3 * 969990768 ^ 2111688183;
            continue;
          case 131:
            int num34;
            num1 = num34 = ch1 == ',' ? 1471130253 : (num34 = 367457819);
            continue;
          case 132:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, "\b");
            num1 = 1350385546;
            continue;
          case 133:
            num1 = (int) num3 * -510705577 ^ -80630951;
            continue;
          case 134:
            aKey = "";
            num1 = (int) num3 * -1173954368 ^ -502711688;
            continue;
          case 135:
            num1 = 109199286;
            continue;
          case 136:
            int num35 = ch3 != 'b' ? -1734076452 : (num35 = -19321312);
            num1 = num35 ^ (int) num3 * 535656928;
            continue;
          case 137:
            aKey = "";
            num1 = 1936199395;
            continue;
          case 138:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1307876310 ^ 965094751;
            continue;
          case 139:
            switch (ch3)
            {
              case 'r':
                goto label_119;
              case 's':
                goto label_58;
              case 't':
                goto label_72;
              case 'u':
                goto label_155;
              default:
                num1 = 1231027064;
                continue;
            }
          case 140:
            aItem = "";
            num1 = (int) num3 * 1967215964 ^ 496274316;
            continue;
          case 141:
            num1 = (int) num3 * -472573802 ^ -1483364533;
            continue;
          case 142:
label_72:
            aItem = JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮(aItem, "\t");
            num1 = 714464231;
            continue;
          case 143:
            num1 = (int) num3 * -800112169 ^ 938565103;
            continue;
          case 144:
            goto label_57;
          case 145:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1402647356 ^ -1793759572;
            continue;
          case 146:
            num1 = (int) num3 * -212587951 ^ 96897880;
            continue;
          case 147:
            int num36;
            num1 = num36 = ch1 == ' ' ? 305158427 : (num36 = 836047947);
            continue;
          case 148:
            int num37 = ch1 <= ' ' ? 305316921 : (num37 = 210599499);
            num1 = num37 ^ (int) num3 * 487912126;
            continue;
          case 149:
            num1 = (int) num3 * -703478223 ^ 243534147;
            continue;
          case 150:
            num1 = (int) num3 * 932461164 ^ -426992855;
            continue;
          case 151:
            aItem = "";
            num1 = (int) num3 * 833044739 ^ 1482566610;
            continue;
          case 152:
            int num38;
            num1 = num38 = ch1 != '"' ? 1814374292 : (num38 = 1541945692);
            continue;
          case 153:
            num1 = (int) num3 * 1808551585 ^ -1097594357;
            continue;
          case 154:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 45510120 ^ 1322625522;
            continue;
          case 155:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1029721219 ^ -946115002;
            continue;
          case 156:
            aKey = JSONNode.\u202D‍‍‫‮‏‫⁭⁪‏⁭⁯⁯‏‏‮‮‏‪‎⁬‍‏⁭‭‍​‫⁬‬⁪‌⁮⁭‬‌‎‭‮‮‮(aKey);
            num1 = (int) num3 * -1696766853 ^ -1330262792;
            continue;
          case 157:
            flag14 = flag4;
            num1 = (int) num3 * -266368046 ^ 1547285455;
            continue;
          case 158:
            int num39 = flag4 ? 399405519 : (num39 = 1637001298);
            num1 = num39 ^ (int) num3 * -1243426356;
            continue;
          default:
            goto label_159;
        }
      }
label_15:
      throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("JSON Parse: Quotation marks seems to be messed up.");
label_57:
      throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("JSON Parse: Too many closing brackets");
label_159:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData) => this.Serialize(JSONNode.\u206C⁪⁭‭‍‎‏‪⁬‍‮‭‭⁮⁬⁭‬‌⁪⁫‮‮⁫‏‌⁯​‏⁫​‮⁯⁭‭‬‎‍‮⁪⁯‮(aData));

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = 485052866;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 571814845)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONNode.\u206D‌‫‏⁯‏‮‭‭‍‏‭⁫‮⁮‬‫‮‫‫⁯‎⁯⁬‎‮‫‍‫‫​‍‎‫​‬‭‪‪‍‮(JSONNode.\u200C⁯‏‮⁫⁭⁪‎‎​⁯⁪‍⁮⁪‍⁮​⁭⁫‪⁭‍‏‫⁯⁭⁪‎‌⁫‏‬‭‪‌⁪⁬⁮‪‮((FileSystemInfo) JSONNode.\u206F⁭⁫​‭‪⁪‬⁪‏⁬‫​‎‌‮‬‫‫⁮‌‎‬‪‎⁪‏‮‭‫⁪​‏‌⁪‬‫‮⁯‫‮(JSONNode.\u200F‬⁬⁯‬⁭⁬⁭⁪‭⁫⁪‫⁬‏‍‏​‎‬​‌⁪⁬‍‌‬⁭‎‫‪‫​‬⁪‪‮‎⁪‪‮(aFileName))));
            num1 = (int) num2 * -1573407143 ^ -1214640776;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u206F‫‫⁫⁯⁭⁯‎‏‍‬⁪‌‍⁬‪‫⁫‭‭⁯⁯‮‭‌⁮‌‫‍‬‎⁯‍⁮⁪⁬​‍‭‭‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 1260301971;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 571814845)) % 4U)
            {
              case 0:
                goto label_7;
              case 1:
                num3 = (int) num4 * 1272251622 ^ 613748364;
                continue;
              case 2:
                JSONNode.\u202E‮⁬⁮⁭‏‍⁯‌‎⁫⁫⁫‫‭⁫‍‫⁪​⁭⁭⁯‮‌⁯‫‭⁬‌⁬​‎​⁬‭⁬⁪⁮⁮‮((IDisposable) aData);
                num3 = (int) num4 * 272476644 ^ -1949230800;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202E⁪‭‬⁯‭‎‌‮⁮⁫​‪⁮​‮‪‌⁬⁮‮⁭⁮⁬⁮‭⁬⁮‭⁪⁫⁭⁪⁬‎​‭⁪‮⁮‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -438668331;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1302344478)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              JSONNode.\u200F‫⁮‎‫‌​⁭‎⁪‏⁯‍⁯‭​‭⁭⁪‮⁮⁫⁯‫‎⁬‬⁬‮⁬⁯⁭‭‮‍‬⁪⁬‍⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * -1075777057 ^ -721586077;
              continue;
            case 3:
              num1 = (int) num2 * -641401547 ^ -245949104;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u200F‎‫‫⁫⁪⁮‫‏⁪‭⁮⁯⁭‍‭⁬⁫‭‍⁯‪⁫⁪‬‎‮‪‌⁫‍‭‎​‎‍‍‍‍‮(JSONNode.\u202D‍‌‮‮⁬‍‏​‍‫⁯⁫‍‌⁯⁮‪‍‌‍⁯‪‏⁫​⁮⁬‪‫‍⁯‍‮‎‪‏‮⁫‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -800911609;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1302344478)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -1542151775 ^ 385380108;
                continue;
              case 1:
                JSONNode.\u202E‮⁬⁮⁭‏‍⁯‌‎⁫⁫⁫‫‭⁫‍‫⁪​⁭⁭⁯‮‌⁯‫‭⁬‌⁬​‎​⁬‭⁬⁪⁮⁮‮((IDisposable) aData);
                num3 = (int) num4 * -1657260605 ^ 88013677;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200C⁫⁯⁫‬‏‎‍‫‏‏‫‌⁫⁯‭⁫⁫⁭‏⁮‮⁭⁫⁭‏‭‏⁫​‍‬⁭⁬⁭‍‮‏⁫‭‮(aReader);
label_1:
      int num1 = 588214338;
      JSONArray jsonArray;
      int num2;
      JSONNode jsonNode;
      JSONClass jsonClass;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag2;
      string aKey;
      int num3;
      int num4;
      bool flag;
      int num5;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 973469173)) % 36U)
        {
          case 0:
            int num7 = !flag ? 552862380 : (num7 = 530816675);
            num1 = num7 ^ (int) num6 * 1686498365;
            continue;
          case 1:
            aKey = JSONNode.\u206D‫⁬‪‎​​⁯‏⁯⁯⁬⁯‍⁭​⁭‌‬‫⁭‪‬​​⁪​⁪⁮⁬⁭⁮‪‫⁬⁪‏‭⁫‌‮(aReader);
            num1 = (int) num6 * 1511131355 ^ 723304721;
            continue;
          case 2:
            num1 = (int) num6 * -834605172 ^ 1583872214;
            continue;
          case 3:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 1327617521 ^ 1487509730;
            continue;
          case 4:
label_29:
            num1 = 1428704397;
            continue;
          case 5:
            ++num3;
            num1 = (int) num6 * 68789110 ^ -914441743;
            continue;
          case 6:
            int num8;
            num1 = num8 = num3 < num4 ? 1744889243 : (num8 = 1028901165);
            continue;
          case 8:
            num5 = JSONNode.\u202B‌‏‌⁯​‭‫⁫‭‪‏⁯‍‭​‏‎⁬‍⁭⁬‎⁯⁪‎⁯‬⁮‍⁭⁬⁯‌‪‍⁬‏⁯‫‮(aReader);
            num1 = (int) num6 * 52314496 ^ 862738896;
            continue;
          case 9:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1657052758 ^ 2145158488;
            continue;
          case 10:
            num1 = (int) num6 * 1790112556 ^ -1801706176;
            continue;
          case 11:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‌‭⁯​⁭​‬‮‍‭‎‭⁭‍‎⁬‫⁬⁭⁬⁯​​⁫​⁭‬‫‌‫‎‌‫‍‍⁯⁮⁭⁬‮(aReader));
            num1 = (int) num6 * -1440381875 ^ -392673999;
            continue;
          case 12:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1859217566 ^ -57084336;
            continue;
          case 13:
            flag = num2 < num5;
            num1 = 1195601989;
            continue;
          case 14:
            goto label_23;
          case 15:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_29;
              case JSONBinaryTag.Class:
                goto label_33;
              case JSONBinaryTag.Value:
                goto label_7;
              case JSONBinaryTag.IntValue:
                goto label_6;
              case JSONBinaryTag.DoubleValue:
                goto label_31;
              case JSONBinaryTag.BoolValue:
                goto label_13;
              case JSONBinaryTag.FloatValue:
                goto label_3;
              default:
                num1 = (int) num6 * 1577444631 ^ -353776074;
                continue;
            }
          case 16:
            num1 = (int) num6 * 263516088 ^ 109611454;
            continue;
          case 17:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -109374989 ^ -252719337;
            continue;
          case 18:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = 252129032;
            continue;
          case 19:
            num1 = (int) num6 * 835577543 ^ 1828275447;
            continue;
          case 20:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 975296217 ^ 388532083;
            continue;
          case 21:
            num1 = (int) num6 * -1097543280 ^ -732602034;
            continue;
          case 22:
label_13:
            num1 = 839044894;
            continue;
          case 23:
label_6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‌‏‌⁯​‭‫⁫‭‪‏⁯‍‭​‏‎⁬‍⁭⁬‎⁯⁪‎⁯‬⁮‍⁭⁬⁯‌‪‍⁬‏⁯‫‮(aReader));
            num1 = 1578934686;
            continue;
          case 24:
            num1 = 1799036799;
            continue;
          case 25:
            goto label_1;
          case 26:
label_3:
            num1 = 260073181;
            continue;
          case 27:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -146524708 ^ -1937983428;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‪⁬​‬‎‫⁭⁬‫‬⁪⁪‏⁮⁫‫⁯⁮⁫‎‪‬‌‭⁭⁫⁪‭⁭‪‏‏‎⁯⁯‏‎‎⁪‮(aReader));
            num1 = (int) num6 * -1306789998 ^ -637234326;
            continue;
          case 29:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1692444442 ^ -623386884;
            continue;
          case 30:
            num1 = 1504854364;
            continue;
          case 31:
label_33:
            num4 = JSONNode.\u202B‌‏‌⁯​‭‫⁫‭‪‏⁯‍‭​‏‎⁬‍⁭⁬‎⁯⁪‎⁯‬⁮‍⁭⁬⁯‌‪‍⁬‏⁯‫‮(aReader);
            num1 = 1742488296;
            continue;
          case 32:
label_7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‫⁬‪‎​​⁯‏⁯⁯⁬⁯‍⁭​⁭‌‬‫⁭‪‬​​⁪​⁪⁮⁬⁭⁮‪‫⁬⁪‏‭⁫‌‮(aReader));
            num1 = 1120137459;
            continue;
          case 33:
            jsonClass = new JSONClass();
            num3 = 0;
            num1 = (int) num6 * -995987361 ^ 837885100;
            continue;
          case 34:
            num1 = (int) num6 * 314483277 ^ -1156492745;
            continue;
          case 35:
label_31:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C⁭⁯​​‍⁮‎‍⁭⁫​‍‍‌‎​‪⁮​⁯‬⁬​⁮⁪‏​‫⁮⁮⁯‪‬‭‎​‬‎‮(aReader));
            num1 = 1190971369;
            continue;
          default:
            goto label_38;
        }
      }
label_23:
      throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮(JSONNode.\u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_38:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206B‏‍‍‍‭⁭⁪⁫⁯‍⁯‌‎‌‫‏‎‫‭⁮⁮‏‮‫‌‫‪⁯⁯‎⁯​⁭‌‍‎‫‪⁫‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -642322028;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -876484029)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 914713900 ^ 1060510768;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1837124202;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -876484029)) % 4U)
            {
              case 1:
                JSONNode.\u202E‮⁬⁮⁭‏‍⁯‌‎⁫⁫⁫‫‭⁫‍‫⁪​⁭⁭⁯‮‌⁯‫‭⁬‌⁬​‎​⁬‭⁬⁪⁮⁮‮((IDisposable) aReader);
                num3 = (int) num4 * -467965543 ^ 808031341;
                continue;
              case 2:
                goto label_6;
              case 3:
                num3 = (int) num4 * 1002121971 ^ -185058834;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206D‬⁮⁯‭‭‭‮⁫⁭⁫‌‏‍⁭‭⁭⁪⁫⁫‭‮⁭⁪‍⁮⁪⁭⁭⁫​‬‏⁮⁫⁮‌‪‫‏‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1670998170;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -550273547)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 178519725 ^ 1412927834;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -1029583689;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -550273547)) % 3U)
            {
              case 1:
                JSONNode.\u202E‮⁬⁮⁭‏‍⁯‌‎⁫⁫⁫‫‭⁫‍‫⁪​⁭⁭⁯‮‌⁯‫‭⁬‌⁬​‎​⁬‭⁬⁪⁮⁮‮((IDisposable) aData);
                num3 = (int) num4 * 789767913 ^ -491777689;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 2084468280;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 549871983)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONNode.\u200F‫⁮‎‫‌​⁭‎⁪‏⁯‍⁯‭​‭⁭⁪‮⁮⁫⁯‫‎⁬‬⁬‮⁬⁯⁭‭‮‍‬⁪⁬‍⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * -1423031156 ^ 299124725;
            continue;
          case 3:
            num1 = (int) num2 * -515908552 ^ 1197594094;
            continue;
          case 4:
            numArray = JSONNode.\u206E‬‬‌⁭⁫⁭‎​‎⁫‮‏‪‍‎‫⁯‪⁭‮‬⁪⁪⁬‫⁭⁮‏⁮⁮⁪‌‍⁫‏‮⁮⁭⁬‮(aBase64);
            num1 = (int) num2 * -553682846 ^ -1603987457;
            continue;
          case 5:
            aData = JSONNode.\u206D⁬‪⁮‎‫⁬‫‎​⁫‮‫‎⁮‌⁪‍⁭‬⁯‏‫‮‎⁯‌‍‍‍⁫‌‬‮‮‫⁫⁭⁬⁫‮(numArray);
            num1 = (int) num2 * -934720512 ^ 643530250;
            continue;
          case 6:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1104227783 ^ 652192736;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -2009133059;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1869869616)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -124047932 ^ -382271858;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202A⁭⁬⁪‬⁫‏⁬⁬⁫⁪‌‎‌⁭‍‪‭⁫⁭‫‍⁮‎⁮‪‪​⁬⁪‮⁮⁪⁪‬⁯‬‎‌‭‮() => CultureInfo.InvariantCulture;

    static bool \u206C‪⁯‍‌‏⁭‬⁯‫⁬⁯​⁭⁫​‎⁮‌⁫‭⁭‌‫‌‍⁪‬‍‬⁪⁭⁫⁫​⁬‏​⁯‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206D‬‬‌‭‪⁪‬⁮‭‪‬⁭‮⁮‪⁭⁮‭​‮‌‪⁪⁭⁯⁯⁯​⁪‭‬⁫⁮‫‭⁭‬‍‭‮() => base.GetHashCode();

    static char \u202A‍‍‪⁬⁪⁭‮‎‮⁯⁫⁯⁭‍⁯‍‏⁭‬‫​‌⁭​⁭‪⁬‌‎⁬‬‮‌​‌‭‭‎‮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206A​‬⁪‌‮‍‏‌‭‍⁯‌⁫⁬⁬‍‫‫⁯⁫⁪⁯‫‏​⁮⁪‬​⁮‏​⁫‭⁮⁫‎⁫⁯‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202D‬⁫⁭‭‌‫‬​⁫‎‮‭‬⁪‭‮‎‌⁫‭‬‬‪⁬‭‍‭‎‮⁬⁬‮⁮‎‭⁯‭‍⁯‮([In] string obj0) => obj0.Length;

    static string \u202D‍‍‫‮‏‫⁭⁪‏⁭⁯⁯‏‏‮‮‏‪‎⁬‍‏⁭‭‍​‫⁬‬⁪‌⁮⁭‬‌‎‭‮‮‮([In] string obj0) => obj0.Trim();

    static bool \u206B⁭‬‌‪⁯‍‏‌‭⁬‮⁮⁮‭‮⁬‫‍‮‏‫‍‏‫⁫⁪‫⁫‫⁫​‍⁫‪‭⁫⁮⁬‫‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206D‏‌‭‬⁯‎⁬‏‮⁭⁬⁯‮‫‮‭‏‭​‬⁫‪‏‭‪⁯⁫​⁯‍‭⁭‬⁬‮​⁪⁪‮‮([In] string obj0) => new Exception(obj0);

    static string \u200D‪⁬‍‍‏⁯‬⁬⁭⁪‭‪⁬‪⁭‭‍‮‬‏‌‭⁭‌‎‪‮⁬⁬‬⁫‮‬‭‮‪​‮⁫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C⁪⁭‭‍‎‏‪⁬‍‮‭‭⁮⁬⁭‬‌⁪⁫‮‮⁫‏‌⁯​‏⁫​‮⁯⁭‭‬‎‍‮⁪⁯‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F‬⁬⁯‬⁭⁬⁭⁪‭⁫⁪‫⁬‏‍‏​‎‬​‌⁪⁬‍‌‬⁭‎‫‪‫​‬⁪‪‮‎⁪‪‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206F⁭⁫​‭‪⁪‬⁪‏⁬‫​‎‌‮‬‫‫⁮‌‎‬‪‎⁪‏‮‭‫⁪​‏‌⁪‬‫‮⁯‫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200C⁯‏‮⁫⁭⁪‎‎​⁯⁪‍⁮⁪‍⁮​⁭⁫‪⁭‍‏‫⁯⁭⁪‎‌⁫‏‬‭‪‌⁪⁬⁮‪‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206D‌‫‏⁯‏‮‭‭‍‏‭⁫‮⁮‬‫‮‫‫⁯‎⁯⁬‎‮‫‍‫‫​‍‎‫​‬‭‪‪‍‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206F‫‫⁫⁯⁭⁯‎‏‍‬⁪‌‍⁬‪‫⁫‭‭⁯⁯‮‭‌⁮‌‫‍‬‎⁯‍⁮⁪⁬​‍‭‭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202E‮⁬⁮⁭‏‍⁯‌‎⁫⁫⁫‫‭⁫‍‫⁪​⁭⁭⁯‮‌⁯‫‭⁬‌⁬​‎​⁬‭⁬⁪⁮⁮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202E⁪‭‬⁯‭‎‌‮⁮⁫​‪⁮​‮‪‌⁬⁮‮⁭⁮⁬⁮‭⁬⁮‭⁪⁫⁭⁪⁬‎​‭⁪‮⁮‮() => new MemoryStream();

    static void \u200F‫⁮‎‫‌​⁭‎⁪‏⁯‍⁯‭​‭⁭⁪‮⁮⁫⁯‫‎⁬‬⁬‮⁬⁯⁭‭‮‍‬⁪⁬‍⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202D‍‌‮‮⁬‍‏​‍‫⁯⁫‍‌⁯⁮‪‍‌‍⁯‪‏⁫​⁮⁬‪‫‍⁯‍‮‎‪‏‮⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‎‫‫⁫⁪⁮‫‏⁪‭⁮⁯⁭‍‭⁬⁫‭‍⁯‪⁫⁪‬‎‮‪‌⁫‍‭‎​‎‍‍‍‍‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200C⁫⁯⁫‬‏‎‍‫‏‏‫‌⁫⁯‭⁫⁫⁭‏⁮‮⁭⁫⁭‏‭‏⁫​‍‬⁭⁬⁭‍‮‏⁫‭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202B‌‏‌⁯​‭‫⁫‭‪‏⁯‍‭​‏‎⁬‍⁭⁬‎⁯⁪‎⁯‬⁮‍⁭⁬⁯‌‪‍⁬‏⁯‫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D‫⁬‪‎​​⁯‏⁯⁯⁬⁯‍⁭​⁭‌‬‫⁭‪‬​​⁪​⁪⁮⁬⁭⁮‪‫⁬⁪‏‭⁫‌‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202C⁭⁯​​‍⁮‎‍⁭⁫​‍‍‌‎​‪⁮​⁯‬⁬​⁮⁪‏​‫⁮⁮⁯‪‬‭‎​‬‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202A‌‭⁯​⁭​‬‮‍‭‎‭⁭‍‎⁬‫⁬⁭⁬⁯​​⁫​⁭‬‫‌‫‎‌‫‍‍⁯⁮⁭⁬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200D‪⁬​‬‎‫⁭⁬‫‬⁪⁪‏⁮⁫‫⁯⁮⁫‎‪‬‌‭⁭⁫⁪‭⁭‪‏‏‎⁯⁯‏‎‎⁪‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206B‏‍‍‍‭⁭⁪⁫⁯‍⁯‌‎‌‫‏‎‫‭⁮⁮‏‮‫‌‫‪⁯⁯‎⁯​⁭‌‍‎‫‪⁫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206D‬⁮⁯‭‭‭‮⁫⁭⁫‌‏‍⁭‭⁭⁪⁫⁫‭‮⁭⁪‍⁮⁪⁭⁭⁫​‬‏⁮⁫⁮‌‪‫‏‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206E‬‬‌⁭⁫⁭‎​‎⁫‮‏‪‍‎‫⁯‪⁭‮‬⁪⁪⁬‫⁭⁮‏⁮⁮⁪‌‍⁫‏‮⁮⁭⁬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206D⁬‪⁮‎‫⁬‫‎​⁫‮‫‎⁮‌⁪‍⁭‬⁯‏‫‮‎⁯‌‍‍‍⁫‌‬‮‮‫⁫⁭⁬⁫‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
