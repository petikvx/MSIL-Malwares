// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.Win32
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Web.Services.Protocols;
using System.Windows.Forms;
using Ⴈ;

namespace SmartAssembly.SmartExceptionsCore
{
  public class Win32
  {
    private static bool Ⴃ;
    private static Win32.ႣႭ Ⴓ;

    [DllImport("shell32", EntryPoint = "ExtractIconEx")]
    private static extern int Ⴀ(string Ⴀ, int Ⴄ, ref int Ⴅ, ref int Ⴐ, int Ⴍ);

    [DllImport("user32", EntryPoint = "DrawText", CharSet = CharSet.Unicode)]
    private static extern int Ⴓ(IntPtr Ⴃ, string Ⴈ, int Ⴍ, ref Win32.ႣႤ Ⴀ, int Ⴐ);

    [DllImport("gdi32.dll", EntryPoint = "SelectObject")]
    private static extern IntPtr Ⴃ(IntPtr Ⴀ, IntPtr Ⴅ);

    [DllImport("kernel32.Dll", EntryPoint = "GetVersionEx")]
    private static extern short Ⴅ(ref Win32.ႣႭ Ⴐ);

    [DllImport("user32.dll", EntryPoint = "GetSystemMetrics")]
    private static extern int Ⴍ(int Ⴗ);

    [DllImport("kernel32.dll", EntryPoint = "GetSystemInfo")]
    private static extern void Ⴃ(ref Win32.SYSTEM_INFO Ⴗ);

    [SpecialName]
    private static Win32.ႣႭ Ⴅ()
    {
      int num1;
      int num2;
      int num3;
      try
      {
label_3:
        while (!Win32.Ⴃ)
        {
          num1 = 1;
          while (true)
          {
            switch (num1)
            {
              case 1:
                goto label_5;
              case 2:
              case 4:
              case 5:
                goto label_3;
              default:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.Ⴅ);
                num1 = 5;
                continue;
            }
          }
label_5:
          Win32.Ⴓ = new Win32.ႣႭ();
          try
          {
            num2 = 2;
            while (true)
            {
              switch (num2)
              {
                case 0:
                case 3:
                  goto label_9;
                case 1:
                  goto label_10;
                default:
                  // ISSUE: type reference
                  Win32.Ⴓ.Ⴄ = ReportExceptionEventArgs.Ⴀ(SendingReportFeedbackEventArgs1.Ⴍ(__typeref (Win32.ႣႭ), 421, 478), 207, 189);
                  num2 = 0;
                  continue;
              }
            }
label_9:
            int num4 = (int) Win32.Ⴅ(ref Win32.Ⴓ);
label_10:
            Win32.Ⴃ = true;
            break;
          }
          catch
          {
            break;
          }
        }
        num3 = 3;
        switch (num3)
        {
          default:
            return Win32.Ⴓ;
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num3;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    [SpecialName]
    internal static bool Ⴗ()
    {
      Win32.SYSTEM_INFO Ⴗ;
      try
      {
        bool flag;
        try
        {
          Ⴗ = new Win32.SYSTEM_INFO();
          Win32.Ⴃ(ref Ⴗ);
          flag = Ⴗ.wProcessorArchitecture == (ushort) 9;
        }
        catch
        {
          flag = false;
        }
        return flag;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Win32.SYSTEM_INFO> o1 = (ValueType) Ⴗ;
        bool flag;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
        throw;
      }
    }

    [SpecialName]
    internal static bool Ⴓ()
    {
      try
      {
        bool flag;
        try
        {
          flag = Win32.Ⴍ(89) != 0;
        }
        catch
        {
          flag = false;
        }
        return flag;
      }
      catch (Exception ex)
      {
        bool flag;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) flag;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    [SpecialName]
    internal static bool Ⴀ()
    {
      try
      {
        return Win32.Ⴅ().Ⴅ == (byte) 1;
      }
      catch (Exception ex)
      {
        int num;
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    [SpecialName]
    internal static string Ⴍ()
    {
      try
      {
        return Win32.Ⴅ().Ⴅ;
      }
      catch (Exception ex)
      {
        int num;
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    public static Icon GetApplicationIcon()
    {
      try
      {
        Icon applicationIcon;
        try
        {
          applicationIcon = Win32.Ⴄ();
        }
        catch (Exception ex)
        {
          applicationIcon = Ⴈ.Ⴐ.Ⴃ(Ⴈ.ႳႷ.Ⴗ(2059791190, 0));
        }
        return applicationIcon;
      }
      catch (Exception ex)
      {
        Icon icon;
        Icon o1 = icon;
        StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    private static Icon Ⴄ()
    {
      int num1;
      int Ⴅ;
      int num2;
      int num3;
      try
      {
label_3:
        Ⴅ = 0;
        num2 = 0;
        num3 = Win32.Ⴀ(UsageCounts.Ⴍ(63, 36), -1, ref num2, ref num2, 1);
        num1 = 7;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = Ⴅ == 0 ? 3 : 8;
              continue;
            case 1:
            case 7:
              num1 = num3 <= 0 ? 3 : 4;
              continue;
            case 2:
            case 4:
              Win32.Ⴀ(UsageCounts.Ⴍ(172, 183), 0, ref Ⴅ, ref num2, 1);
              num1 = 0;
              continue;
            case 3:
            case 6:
              goto label_8;
            case 5:
              goto label_3;
            case 8:
              goto label_7;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.Ⴄ);
              num1 = 5;
              continue;
          }
        }
label_7:
        return Icon.FromHandle(new IntPtr(Ⴅ));
label_8:
        return (Icon) null;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) Ⴅ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int Ⴐ(Graphics Ⴈ, string Ⴃ, Font Ⴐ, int Ⴍ)
    {
      int num1;
      try
      {
        int num2;
        try
        {
          num2 = Win32.Ⴅ(Ⴈ, Ⴃ, Ⴐ, Ⴍ);
          goto label_6;
        }
        catch (Exception ex1)
        {
          try
          {
            num2 = AutoHeightLabel.Ⴄ((double) Win32.Ⴈ(Ⴈ, Ⴃ, Ⴐ, Ⴍ) * 1.1, 795, 857);
            goto label_6;
          }
          catch (Exception ex2)
          {
          }
        }
        num1 = 1;
        switch (num1)
        {
          case 2:
          case 4:
            break;
          default:
            return 0;
        }
label_6:
        return num2;
      }
      catch (Exception ex)
      {
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num1;
        Graphics o3 = Ⴈ;
        string o4 = Ⴃ;
        Font o5 = Ⴐ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) Ⴍ;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    private static int Ⴈ(Graphics Ⴍ, string Ⴃ, Font Ⴅ, int Ⴀ)
    {
      int num;
      Size size;
      try
      {
label_3:
        size = UsageReportSender.ႥႨ(SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴀ(Ⴍ, Ⴃ, Ⴅ, Ⴀ, 463, 406), 794, 848);
label_4:
        num = 0;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
            case 3:
              goto label_4;
            case 4:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.Ⴈ);
              num = 4;
              continue;
          }
        }
label_5:
        return size.Height;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Size> o1 = (ValueType) size;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        Graphics o3 = Ⴍ;
        string o4 = Ⴃ;
        Font o5 = Ⴅ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) Ⴀ;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    private static int Ⴅ(Graphics Ⴐ, string Ⴅ, Font Ⴗ, int Ⴍ)
    {
      int num1;
      Win32.ႣႤ Ⴀ;
      int Ⴐ1;
      IntPtr num2;
      IntPtr Ⴅ1;
      IntPtr Ⴅ2;
      try
      {
label_3:
        Ⴀ = new Win32.ႣႤ(new Rectangle(0, 0, Ⴍ, 10000));
label_4:
        Ⴐ1 = 3088;
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num2 = ReportSender1.Ⴜ(Ⴐ, 911, 947);
              goto case 5;
            case 1:
              Win32.Ⴃ(num2, Ⴅ2);
              goto case 7;
            case 2:
              Ⴅ2 = Win32.Ⴃ(num2, Ⴅ1);
              Win32.Ⴓ(num2, Ⴅ, -1, ref Ⴀ, Ⴐ1);
              num1 = 1;
              continue;
            case 3:
              goto label_10;
            case 5:
              Ⴅ1 = DoNotEncodeStringsAttribute.Ⴓ(Ⴗ, 445, 434);
              num1 = 2;
              continue;
            case 6:
              goto label_3;
            case 7:
              AESCryptoIndirector.Ⴗ(Ⴐ, num2, 903, 997);
              num1 = 3;
              continue;
            case 8:
              goto label_4;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.Ⴅ);
              num1 = 6;
              continue;
          }
        }
label_10:
        return Ⴀ.Ⴀ - Ⴀ.Ⴗ;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Win32.ႣႤ> o1 = (ValueType) Ⴀ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) Ⴐ1;
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o3 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o4 = (ValueType) Ⴅ1;
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o5 = (ValueType) Ⴅ2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num1;
        Graphics o7 = Ⴐ;
        string o8 = Ⴅ;
        Font o9 = Ⴗ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o10 = (ValueType) Ⴍ;
        StackFrameHelper.CreateException10(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7, (object) o8, (object) o9, (object) o10);
        throw;
      }
    }

    public Win32()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static Win32()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static Stream Ⴜ([In] Assembly obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 110:
            num2 = 0;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 5:
              goto label_8;
            case 3:
            case 7:
              num1 = 4;
              continue;
            case 4:
              goto label_3;
            case 6:
              num1 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.Ⴜ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.GetManifestResourceStream(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Assembly o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static long ႣႰ([In] FileInfo obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 119:
            num2 = 1;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              goto label_8;
            case 2:
              goto label_3;
            case 4:
              num1 = 2;
              continue;
            case 5:
            case 6:
            case 7:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.ႣႰ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Length;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        FileInfo o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႣႳ([In] WebClientProtocol obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              num1 = 1;
              continue;
            case 3:
            case 4:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 38:
                  num2 = 5;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.Url = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        WebClientProtocol o3 = obj0;
        string o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void ႣႥ([In] CheckBox obj0, [In] EventHandler obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_7;
            case 1:
              goto label_8;
            case 4:
            case 5:
              num1 = 3;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 79:
                  num2 = 2;
                  break;
                default:
                  num2 = 5;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.CheckedChanged += obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        CheckBox o3 = obj0;
        EventHandler o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static long ႣႷ([In] ref IntPtr obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 60:
            num2 = 0;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
            case 7:
              goto label_8;
            case 2:
            case 4:
              goto label_3;
            case 3:
              num1 = 2;
              continue;
            case 6:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.ႣႷ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.ToInt64();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int ႣႨ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 93:
            num2 = 6;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
            case 4:
              num1 = 0;
              continue;
            case 2:
            case 3:
              num1 = 0;
              continue;
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.ႣႨ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.LastIndexOf(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static void ႣႠ([In] Control obj0, [In] Color obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 5:
              goto label_7;
            case 1:
            case 4:
              num1 = 3;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 82:
                  num2 = 2;
                  break;
                default:
                  num2 = 4;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.BackColor = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Color> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static FieldInfo[] ႣႼ([In] System.Type obj0, [In] BindingFlags obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 2:
            num2 = 2;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
            case 6:
              num1 = 4;
              continue;
            case 2:
              goto label_8;
            case 3:
              num1 = 4;
              continue;
            case 4:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Win32.ႣႼ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.GetFields(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<BindingFlags> o3 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    private struct ႣႤ
    {
      public int Ⴅ;
      public int Ⴗ;
      public int Ⴓ;
      public int Ⴀ;

      public ႣႤ(Rectangle Ⴀ)
      {
        try
        {
          this.Ⴅ = SimpleZip.ႤႤ.Ⴓ(ref Ⴀ, 286, 294);
          this.Ⴗ = ႳႤ.Ⴃ(ref Ⴀ, 97, 47);
          this.Ⴀ = ႷႼ.Ⴍ(ref Ⴀ, 1006, 909);
          this.Ⴓ = Ⴀ.Right;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<Win32.ႣႤ> o1 = (ValueType) this;
          // ISSUE: variable of a boxed type
          __Boxed<Rectangle> o2 = (ValueType) Ⴀ;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }

      static ႣႤ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    private struct ႣႭ
    {
      public int Ⴄ;
      public uint Ⴐ;
      public uint Ⴈ;
      public uint Ⴗ;
      public uint Ⴃ;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string Ⴅ;
      public ushort Ⴄ;
      public ushort Ⴃ;
      public ushort Ⴈ;
      public byte Ⴅ;
      private ႷႨ.Ⴀ Ⴀ;

      static ႣႭ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    public struct SYSTEM_INFO
    {
      public ushort wProcessorArchitecture;
      public uint dwPageSize;
      public IntPtr lpMinimumApplicationAddress;
      public IntPtr lpMaximumApplicationAddress;
      public IntPtr dwActiveProcessorMask;
      public uint dwNumberOfProcessors;
      public uint dwProcessorType;
      public uint dwAllocationGranularity;
      public ushort wProcessorLevel;
      public ushort wProcessorRevision;
      private ႷႥ.Ⴍ Ⴗ;

      static SYSTEM_INFO()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct ႣႣ
    {
      internal UsageCounts Ⴍ;
      internal byte[] Ⴅ;
    }
  }
}
