// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp.MockLibrary
// Assembly: IClosableToIDisposableAdap, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A617983-3D9C-4057-8AD9-58124F2A75C3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-4c93747030e17a8581b15cce2fd3aee28eb12dab9a8ec33839d083cda679487d.exe

using System.Collections.Generic;
using WindowsFormsApp.MockClasses;

namespace WindowsFormsApp
{
  public class MockLibrary
  {
    public List<Books> books = new List<Books>();

    public List<string[,]> getListTables(int count, int width, int height)
    {
      List<string[,]> listTables = new List<string[,]>();
      for (int index = 0; index < count; ++index)
        listTables.Add(this.getStringTables(width, height));
      return listTables;
    }

    private string[,] getStringTables(int width, int height)
    {
      string[,] stringTables = new string[height, width];
      for (int index1 = 0; index1 < height; ++index1)
      {
        for (int index2 = 0; index2 < width; ++index2)
          stringTables[index1, index2] = this.books[index1 % 8].Name + " " + index1.ToString() + index2.ToString();
      }
      return stringTables;
    }

    public List<int> getColumnsWidth(int count, int width)
    {
      List<int> columnsWidth = new List<int>();
      for (int index = 0; index < count; ++index)
        columnsWidth.Add(width);
      return columnsWidth;
    }

    public List<int> getRowsHeight(int count, int height)
    {
      List<int> rowsHeight = new List<int>();
      for (int index = 0; index < count; ++index)
        rowsHeight.Add(height);
      return rowsHeight;
    }

    public List<string> GetHeader(int count)
    {
      List<string> header = new List<string>();
      if (count > 0 && count < 10)
      {
        switch (count % 10)
        {
          case 1:
            header.Add("Publisher");
            break;
          case 2:
            header.Add("Rating");
            goto case 1;
          case 3:
            header.Add("Year");
            goto case 2;
          case 4:
            header.Add("CountPaper");
            goto case 3;
          case 5:
            header.Add("Price");
            goto case 4;
          case 6:
            header.Add("CountInWarehouse");
            goto case 5;
          case 7:
            header.Add("Author");
            goto case 6;
          case 8:
            header.Add("Name");
            goto case 7;
          case 9:
            header.Add("ID");
            goto case 8;
        }
      }
      return header;
    }

    public List<Books> GetBooks() => this.books;

    public MockLibrary()
    {
      this.books.Add(new Books()
      {
        ID = 1,
        Name = "Book1",
        Author = "Author1",
        CountInWarehouse = 1,
        CountPaper = 10,
        Price = 100,
        Publisher = "Publisher1",
        Rating = 1,
        Year = 2001
      });
      this.books.Add(new Books()
      {
        ID = 2,
        Name = "Book2",
        Author = "Author2",
        CountInWarehouse = 2,
        CountPaper = 20,
        Price = 200,
        Publisher = "Publisher2",
        Rating = 2,
        Year = 2002
      });
      this.books.Add(new Books()
      {
        ID = 3,
        Name = "Book3",
        Author = "Author3",
        CountInWarehouse = 3,
        CountPaper = 30,
        Price = 300,
        Publisher = "Publisher3",
        Rating = 3,
        Year = 2003
      });
      this.books.Add(new Books()
      {
        ID = 4,
        Name = "Book4",
        Author = "Author4",
        CountInWarehouse = 4,
        CountPaper = 40,
        Price = 400,
        Publisher = "Publisher4",
        Rating = 4,
        Year = 2004
      });
      this.books.Add(new Books()
      {
        ID = 5,
        Name = "Book5",
        Author = "Author5",
        CountInWarehouse = 5,
        CountPaper = 50,
        Price = 500,
        Publisher = "Publisher5",
        Rating = 5,
        Year = 2005
      });
      this.books.Add(new Books()
      {
        ID = 6,
        Name = "Book6",
        Author = "Author6",
        CountInWarehouse = 6,
        CountPaper = 60,
        Price = 600,
        Publisher = "Publisher6",
        Rating = 4,
        Year = 2006
      });
      this.books.Add(new Books()
      {
        ID = 7,
        Name = "Book7",
        Author = "Author7",
        CountInWarehouse = 7,
        CountPaper = 70,
        Price = 700,
        Publisher = "Publisher7",
        Rating = 3,
        Year = 2007
      });
      this.books.Add(new Books()
      {
        ID = 8,
        Name = "Book8",
        Author = "Author8",
        CountInWarehouse = 8,
        CountPaper = 80,
        Price = 800,
        Publisher = "Publisher8",
        Rating = 2,
        Year = 2008
      });
    }
  }
}
