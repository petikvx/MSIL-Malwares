// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: cDisplayClass1, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0E93EC79-9513-4BD1-8651-98C7CADA4D7F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a7264014555068294029d5d9ceb9ee717c4d2bf523330c30cee18f18e55a0b5b.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1823847406;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1869749980)) % 8U)
          {
            case 0:
              int num4 = flag ? 183337701 : (num4 = 759285432);
              num1 = num4 ^ (int) num2 * 2113129677;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1904530999 ^ -1187872138;
              continue;
            case 3:
              num1 = (int) num2 * 1452839664 ^ 1986655454;
              continue;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = -1719278066;
              continue;
            case 5:
              goto label_1;
            case 6:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1367009079 ^ -1725799843;
              continue;
            case 7:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = -707722068;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1694215525;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1967229184)) % 9U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              num1 = (int) num2 * -592003084 ^ -744958183;
              continue;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -327290540 ^ -355338656;
              continue;
            case 3:
              goto label_3;
            case 4:
              this.m_List[aIndex] = value;
              num1 = 1254156633;
              continue;
            case 5:
              int num4 = flag ? -1426620493 : (num4 = -1665504603);
              num1 = num4 ^ (int) num2 * 871525191;
              continue;
            case 6:
              goto label_1;
            case 7:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -131445617 ^ -813744196;
                continue;
              }
              num3 = 1;
              break;
            case 8:
              num1 = (int) num2 * -1811121057 ^ 627278350;
              continue;
            default:
              goto label_14;
          }
          flag = num3 != 0;
          num1 = 1770054;
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -30750015;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -26105884)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1150111077 ^ 734798374;
              continue;
            case 3:
              num1 = (int) num2 * -633720609 ^ -1395361817;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1159825963;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -215716816)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * -1345659637 ^ -1587838711;
              continue;
            case 2:
              num1 = (int) num2 * 536661348 ^ -2055382608;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -396332884;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1702441515)) % 4U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1093430531 ^ 2064411360;
              continue;
            case 2:
              num1 = (int) num2 * 2123221624 ^ -36673983;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1055774548;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1537809678)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -1422358821 ^ 1799630478;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 538686658;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1700721206)) % 8U)
        {
          case 0:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = 1429406451;
            continue;
          case 1:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 2:
            int num4 = flag ? 233101321 : (num4 = 877007802);
            num1 = num4 ^ (int) num2 * -1608205002;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -930909276 ^ -867676836;
            continue;
          case 4:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -480105008 ^ -1821594385;
            continue;
          case 5:
            num1 = (int) num2 * -1815491232 ^ 1002637584;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 1329919332;
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1623713371;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1065221012)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 648661001 ^ 1899447995;
            continue;
          case 3:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * -1874220 ^ 944309361;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = 2076650416;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1396483176)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -924851111 ^ 312981324;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_17;
label_1:
        int num2 = 241861116;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 660901873)) % 21U)
          {
            case 0:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 172497074 ^ -935408204;
              continue;
            case 1:
              N = enumerator.Current;
              num2 = 1896604485;
              continue;
            case 2:
              goto label_21;
            case 3:
              N = (JSONNode) null;
              num2 = (int) num3 * -1733776763 ^ 581689903;
              continue;
            case 4:
              int num4;
              num2 = num4 = num1 != 1 ? 521952915 : (num4 = 2112112519);
              continue;
            case 5:
              num2 = (int) num3 * -1162816173 ^ -605300887;
              continue;
            case 6:
              enumerator1 = false;
              num2 = 866152562;
              continue;
            case 7:
            case 10:
              goto label_17;
            case 8:
              goto label_4;
            case 9:
              goto label_1;
            case 11:
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 855658898;
              continue;
            case 12:
              num2 = (int) num3 * -822760112 ^ -387905143;
              continue;
            case 13:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -242592761 ^ 555517186;
              continue;
            case 14:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? 410473677 : (num5 = 104048270);
              continue;
            case 15:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * 5704289 ^ 521590479;
              continue;
            case 16:
              num2 = (int) num3 * 435964918 ^ 1431773118;
              continue;
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -1280314008 ^ -1559386009;
              continue;
            case 19:
              num2 = (int) num3 * -1054501167 ^ -1860779818;
              continue;
            default:
              goto label_19;
          }
        }
label_4:
        enumerator1 = true;
        goto label_21;
label_19:
        enumerator1 = false;
        goto label_21;
label_17:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = 790704354;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_21:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_5:
        int num1 = !enumerator.MoveNext() ? 1797275307 : (num1 = 1950568725);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 585310148)) % 8U)
          {
            case 0:
              str1 = JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(str1, ", ");
              num1 = (int) num2 * -90366878 ^ -386941287;
              continue;
            case 1:
              current = enumerator.Current;
              flag = JSONArray.\u200B‎​⁯‬‫‎⁪⁮⁫‍⁮⁪‏‪‫‌‬⁯⁪⁯⁭⁬​‌‬⁯⁮‬⁬⁯‪‎‍⁯‏⁬‬⁫‌‮(str1) > 2;
              num1 = 2006227310;
              continue;
            case 2:
              int num3 = !flag ? 229839247 : (num3 = 142968610);
              num1 = num3 ^ (int) num2 * 414073967;
              continue;
            case 3:
              num1 = 1950568725;
              continue;
            case 4:
              goto label_5;
            case 5:
              str1 = JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(str1, JSONArray.\u202D⁮‬‎⁫⁭‭‪‭⁭⁪‌⁯‍‏‍⁬⁯⁮⁬‍‎⁫‌⁪‭‮‫⁫‮⁬‫‍⁫‬⁭‪‏‪⁬‮((object) current));
              num1 = 660606458;
              continue;
            case 6:
              num1 = (int) num2 * -60677246 ^ -565557012;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      string str2 = JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(str1, " ]");
label_12:
      int num4 = 1592056405;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 585310148)) % 3U)
        {
          case 0:
            goto label_12;
          case 2:
            num4 = (int) num5 * 71180261 ^ 646210965;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_7:
        int num1 = !enumerator.MoveNext() ? 363125193 : (num1 = 1350196365);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1269630488)) % 8U)
          {
            case 0:
              int num3 = JSONArray.\u200B‎​⁯‬‫‎⁪⁮⁫‍⁮⁪‏‪‫‌‬⁯⁪⁯⁭⁬​‌‬⁯⁮‬⁬⁯‪‎‍⁯‏⁬‬⁫‌‮(str1) <= 3 ? 970334846 : (num3 = 459523251);
              num1 = num3 ^ (int) num2 * 847958139;
              continue;
            case 2:
              num1 = 1350196365;
              continue;
            case 3:
              str1 = JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(str1, ", ");
              num1 = (int) num2 * 297976621 ^ 1273407185;
              continue;
            case 4:
              goto label_7;
            case 5:
              current = enumerator.Current;
              num1 = 1090190016;
              continue;
            case 6:
              str1 = JSONArray.\u206E​‬⁯‎​‮‮‏⁭⁮‫‬‎‎‍‮‪⁪⁭⁭‏​‫​⁯‮⁭‍⁭⁪⁮⁮‎‍⁮‭⁫⁫‎‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(str1, current.ToString(JSONArray.\u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮(aPrefix, "   ")));
              num1 = 369831351;
              continue;
            case 7:
              num1 = (int) num2 * -483460007 ^ 883969627;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      string str2 = JSONArray.\u206E​‬⁯‎​‮‮‏⁭⁮‫‬‎‎‍‮‪⁪⁭⁭‏​‫​⁯‮⁭‍⁭⁪⁮⁮‎‍⁮‭⁫⁫‎‮(str1, "\n", aPrefix, "]");
label_12:
      int num4 = 85362966;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1269630488)) % 4U)
        {
          case 0:
            goto label_12;
          case 1:
            num4 = (int) num5 * 850187676 ^ -162188861;
            continue;
          case 2:
            str3 = str2;
            num4 = (int) num5 * 1192357829 ^ 1142020243;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1366665806;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 918075494)) % 11U)
        {
          case 0:
            num1 = (int) num2 * 665014484 ^ -52325798;
            continue;
          case 1:
            JSONArray.\u202D‍‮⁫‫‏‏⁬⁯​⁫‍⁫‍⁪⁭⁭‎‍‌‭⁫‏‍​‎​⁬‪​⁮⁪‫‍⁮⁪‏⁮‬‌‮(aWriter, (byte) 1);
            num1 = (int) num2 * -786918843 ^ 1100577440;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * 1024804611 ^ 1656916620;
            continue;
          case 3:
            int num3;
            num1 = num3 = index < this.m_List.Count ? 263406852 : (num3 = 11988787);
            continue;
          case 4:
            JSONArray.\u202A⁫⁯‮‪⁫⁭‍​‌⁯⁯⁬‭⁭‍⁬⁭‍⁫‏‮⁮‬⁪​‬‌⁯‫⁫‭⁬⁬‪⁭⁮⁯‏⁬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1597641319 ^ 275110214;
            continue;
          case 5:
            goto label_3;
          case 6:
            goto label_1;
          case 7:
            num1 = (int) num2 * 1966784266 ^ -1351610371;
            continue;
          case 8:
            num1 = (int) num2 * 54792033 ^ 1651984830;
            continue;
          case 9:
            this.m_List[index].Serialize(aWriter);
            num1 = 236996437;
            continue;
          case 10:
            ++index;
            num1 = (int) num2 * 1518489635 ^ -1232386471;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u200B‎​⁯‬‫‎⁪⁮⁫‍⁮⁪‏‪‫‌‬⁯⁪⁯⁭⁬​‌‬⁯⁮‬⁬⁯‪‎‍⁯‏⁬‬⁫‌‮([In] string obj0) => obj0.Length;

    static string \u206B‏⁬⁮‍⁫‎⁬⁯‪‎‌‫⁭‬⁬‌⁬​⁭‫‎⁫⁭‍⁭‌​‮⁫‫⁮​‍‬​‎‍‪‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D⁮‬‎⁫⁭‭‪‭⁭⁪‌⁯‍‏‍⁬⁯⁮⁬‍‎⁫‌⁪‭‮‫⁫‮⁬‫‍⁫‬⁭‪‏‪⁬‮([In] object obj0) => obj0.ToString();

    static string \u206E​‬⁯‎​‮‮‏⁭⁮‫‬‎‎‍‮‪⁪⁭⁭‏​‫​⁯‮⁭‍⁭⁪⁮⁮‎‍⁮‭⁫⁫‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202D‍‮⁫‫‏‏⁬⁯​⁫‍⁫‍⁪⁭⁭‎‍‌‭⁫‏‍​‎​⁬‪​⁮⁪‫‍⁮⁪‏⁮‬‌‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A⁫⁯‮‪⁫⁭‍​‌⁯⁯⁬‭⁭‍⁬⁭‍⁫‏‮⁮‬⁪​‬‌⁯‫⁫‭⁬⁬‪⁭⁮⁯‏⁬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
