// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ResourceTypeCo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D98D3237-A321-4821-9049-807D7FD195EE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2bf24741d28e493dd3c0fabc7478edccab0bc3835b2648c09ba153c94c065f3c.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 593437607;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2051553822)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1640331579 ^ -1014233315;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1832657339;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2066750886)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1061250340 ^ -1041983596;
              continue;
            case 2:
              num1 = (int) num2 * -806085516 ^ 1912165882;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = -2089708821;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -639337155)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 399183650 ^ -2019724327;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -2138085266;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2130112699)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -907818073 ^ 372278512;
              continue;
            case 2:
              goto label_1;
            case 3:
              count = 0;
              num1 = (int) num2 * -1316264743 ^ 1226241882;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
      this.Add("", aItem);
label_1:
      int num1 = -869028166;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1111773798)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -485559733 ^ -239804681;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 618138340;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 968190207)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2065925604 ^ 1381795492;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -198028095;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -740866686)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1024940391 ^ -2096247250;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 1448331022;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 331174531)) % 4U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1811602455 ^ 25077854;
              continue;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -2130090866 ^ 1231002623;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = -1664675505;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -187659251)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1795059353 ^ -1432258516;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -198417988;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1743035827)) % 4U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1094239402 ^ -729687159;
            continue;
          case 2:
            num1 = (int) num2 * -1025690454 ^ -195774887;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1135110876;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -80061579)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -859649409 ^ 133216512;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 17882463;
        int asInt;
        int result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1881358406)) % 6U)
          {
            case 0:
              asInt = 0;
              num1 = 1015350441;
              continue;
            case 1:
              result = 0;
              int num3 = !int.TryParse(this.Value, out result) ? 1463425829 : (num3 = 748752465);
              num1 = num3 ^ (int) num2 * 1669430139;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * 717757947 ^ -1879678041;
              continue;
            case 3:
              num1 = (int) num2 * 1552241303 ^ 1022571202;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 529951306;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1824396569)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1130317427 ^ -1841124088;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              this.Value = value.ToString();
              num1 = (int) num2 * 1488617015 ^ -864232124;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202B⁫⁪‪‏‍‮⁪‍⁭​‏⁬‭‪​⁯‪‪‫​‏‬⁪‌​‎​‬⁭‍⁭‍⁮⁫‮‮⁭‍⁫‮(), out result);
label_1:
        int num1 = -1979700157;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -732695560)) % 7U)
          {
            case 1:
              asFloat = result;
              num1 = (int) num2 * 2082890424 ^ -1513839957;
              continue;
            case 2:
              int num3 = flag ? 1495428022 : (num3 = 1963524837);
              num1 = num3 ^ (int) num2 * 1437789642;
              continue;
            case 3:
              num1 = (int) num2 * 921708474 ^ -645871706;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = -1711509572;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1773141671 ^ -1458589876;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1807273184;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1858619153)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1750555722 ^ 1415736303;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Value = value.ToString();
              num1 = (int) num2 * 482297007 ^ 528488163;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
        bool flag = double.TryParse(this.Value, out result);
label_1:
        int num1 = -1778375135;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2017332099)) % 7U)
          {
            case 1:
              num1 = (int) num2 * 712269852 ^ 586431861;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = -1383180625;
              continue;
            case 3:
              num1 = (int) num2 * 1137172436 ^ 1860423497;
              continue;
            case 4:
              goto label_1;
            case 5:
              int num3 = flag ? -1130205349 : (num3 = -1775984399);
              num1 = num3 ^ (int) num2 * 685194784;
              continue;
            case 6:
              asDouble = result;
              num1 = (int) num2 * -423729745 ^ -219315254;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -2066630739;
        bool flag;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1543780730)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 2015523679 ^ 925049715;
              continue;
            case 3:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1722182808 ^ 2044586747;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * 1309087956 ^ -1008458737;
              continue;
            case 5:
              int num3 = flag ? -129944711 : (num3 = -378094662);
              num1 = num3 ^ (int) num2 * -511244809;
              continue;
            case 6:
              num1 = (int) num2 * 528612466 ^ 1985962520;
              continue;
            case 7:
              asBool = !JSONNode.\u200F⁮⁫⁪‮‫⁫‮‎⁫⁫⁯‏‭‬‭⁬‪‎⁭‬‪⁯‬⁯⁫‫⁪⁯⁪‮‮⁯‍‏‌⁪‭‌‍‮(this.Value);
              num1 = -1130259824;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 737573117;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1740820851)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 2142363306;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = 649618257;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1947192332)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 828697539 ^ -1799566423;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -41297413;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1479619326)) % 4U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 580140370 ^ -517140169;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1336476330 ^ -94327984;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1403600066;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2017027209)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -918114571 ^ -102378922;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1124936179 ^ 676969107;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 58177210;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1207526319)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1842778692 ^ -1923279704;
            continue;
          case 3:
            str2 = d.Value;
            break;
          case 4:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * -814142196 ^ 617992367;
            continue;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1144794765;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 436685988;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 151558776)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            int num4 = flag2 ? 1444481820 : (num4 = 350223090);
            num1 = num4 ^ (int) num2 * 562725897;
            continue;
          case 3:
            flag1 = true;
            num1 = (int) num2 * -1148778571 ^ 1911272365;
            continue;
          case 4:
            flag1 = (object) a == b;
            num1 = 2131272033;
            continue;
          case 5:
            if (b == null)
            {
              num1 = (int) num2 * 1364461002 ^ 952795640;
              continue;
            }
            num3 = 0;
            break;
          case 6:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        flag2 = num3 != 0;
        num1 = 350126784;
      }
label_11:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -771510740;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1912356384)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -1914093697 ^ 1469381892;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 327978029;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 856137989)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 676361595 ^ -1745431163;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1386983885;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 443878890)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1123380448 ^ 804761987;
            continue;
          case 2:
            goto label_1;
          case 3:
            hashCode = this.\u202E⁮⁪⁫​‬⁮​⁫‭‏‬⁭⁭‌⁬⁮‬‭‏‍‪‍‭‬‮⁬‍‭​‭‬⁪⁮‬‫‍‌‍⁮‮();
            num1 = (int) num2 * -639857506 ^ -994334412;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -1777803549;
      string str1;
      int num2;
      char ch1;
      string str2;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -2066785358)) % 30U)
        {
          case 0:
label_25:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\b");
            num1 = -1886228585;
            continue;
          case 1:
            num1 = (int) num3 * 1164306445 ^ 1337996846;
            continue;
          case 2:
            num1 = (int) num3 * 904793340 ^ -2016128289;
            continue;
          case 3:
            str1 = aText;
            num2 = 0;
            num1 = (int) num3 * -1710480669 ^ -446027100;
            continue;
          case 4:
label_15:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\n");
            num1 = -1886228585;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num3 * 1198964939 ^ 2078683601;
            continue;
          case 7:
            ch2 = ch1;
            num1 = (int) num3 * -2062425504 ^ -773731268;
            continue;
          case 8:
            ch1 = JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(str1, num2);
            num1 = -1392606548;
            continue;
          case 9:
            num1 = (int) num3 * 1133833656 ^ -427369921;
            continue;
          case 10:
            switch (ch2)
            {
              case '\b':
                goto label_25;
              case '\t':
                goto label_19;
              case '\n':
                goto label_15;
              case '\v':
                goto label_8;
              case '\f':
                goto label_5;
              case '\r':
                goto label_18;
              default:
                num1 = (int) num3 * -1226057029 ^ -932655232;
                continue;
            }
          case 11:
            str2 = "";
            num1 = (int) num3 * -593092504 ^ 1047779233;
            continue;
          case 12:
            str3 = str2;
            num1 = (int) num3 * 610466971 ^ -2009533417;
            continue;
          case 13:
            num1 = -1333417542;
            continue;
          case 14:
label_18:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\r");
            num1 = -1886228585;
            continue;
          case 15:
label_8:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, ch1.ToString());
            num1 = -1218037534;
            continue;
          case 16:
            ++num2;
            num1 = (int) num3 * 1473488628 ^ 1484780949;
            continue;
          case 17:
            int num4;
            num1 = num4 = ch2 == '\\' ? -1193795685 : (num4 = -1028039402);
            continue;
          case 18:
label_5:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\f");
            num1 = -76129553;
            continue;
          case 19:
            int num5;
            num1 = num5 = num2 >= JSONNode.\u200F⁪⁬‭‫‎‮⁭‫‪⁮⁭⁯​‭​​​‫⁭‌‬​‌‫‏‎‭⁮‫⁮‌​⁯​​⁯‬‬‬‮(str1) ? -2047803560 : (num5 = -603149496);
            continue;
          case 20:
            num1 = (int) num3 * 1341876580 ^ 1294471987;
            continue;
          case 21:
            num1 = (int) num3 * -1554946946 ^ 1065257343;
            continue;
          case 22:
label_19:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\t");
            num1 = -1886228585;
            continue;
          case 23:
            int num6;
            num1 = num6 = ch2 != '"' ? -1867058118 : (num6 = -1358530769);
            continue;
          case 24:
            num1 = (int) num3 * 1451217967 ^ 1754600487;
            continue;
          case 25:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\\"");
            num1 = -892252300;
            continue;
          case 26:
            num1 = (int) num3 * 1499825622 ^ 2040288275;
            continue;
          case 27:
            str2 = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(str2, "\\\\");
            num1 = -724601535;
            continue;
          case 28:
            num1 = (int) num3 * -35113298 ^ 2104175143;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1416444819;
      char ch1;
      int num2;
      char ch2;
      JSONNode jsonNode1;
      string aItem;
      string aKey;
      bool flag1;
      bool flag2;
      char ch3;
      bool flag3;
      bool flag4;
      bool flag5;
      Stack<JSONNode> jsonNodeStack;
      bool flag6;
      string s;
      bool flag7;
      bool flag8;
      char ch4;
      bool flag9;
      bool flag10;
      bool flag11;
      JSONNode jsonNode2;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -648812192)) % 154U)
        {
          case 0:
            int num4 = !flag12 ? -392164206 : (num4 = -1527664776);
            num1 = num4 ^ (int) num3 * -867836715;
            continue;
          case 1:
            aKey = "";
            num1 = -2095067449;
            continue;
          case 2:
            int num5;
            num1 = num5 = ch1 != '"' ? -1077872764 : (num5 = -374952574);
            continue;
          case 3:
            num1 = (int) num3 * 983285652 ^ -2009164833;
            continue;
          case 4:
            int num6 = flag4 ? -1166261882 : (num6 = -1473322989);
            num1 = num6 ^ (int) num3 * -1029323378;
            continue;
          case 5:
            ch4 = JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2);
            num1 = (int) num3 * 791741509 ^ -2120101546;
            continue;
          case 6:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 491597721 ^ 769837996;
            continue;
          case 7:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -103649467 ^ -1421903638;
            continue;
          case 8:
          case 24:
          case 59:
          case 67:
          case 108:
label_16:
            ++num2;
            num1 = -1266457870;
            continue;
          case 9:
            ch3 = ch4;
            num1 = (int) num3 * 458863844 ^ -905471932;
            continue;
          case 10:
            jsonNode2 = jsonNode1;
            num1 = -954776748;
            continue;
          case 11:
            jsonNodeStack.Pop();
            int num7;
            num1 = num7 = JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aItem, "") ? -1876303900 : (num7 = -174456916);
            continue;
          case 12:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, "\b");
            num1 = -13591562;
            continue;
          case 13:
            int num8;
            num1 = num8 = ch1 <= ']' ? -172068018 : (num8 = -1046235595);
            continue;
          case 14:
            int num9 = !flag5 ? -1049838691 : (num9 = -1845021468);
            num1 = num9 ^ (int) num3 * 723939634;
            continue;
          case 15:
            aItem = "";
            num1 = (int) num3 * 580240261 ^ -1721711863;
            continue;
          case 16:
            aKey = aItem;
            num1 = -250947207;
            continue;
          case 17:
            int num10 = flag13 ? 1189462905 : (num10 = 707840378);
            num1 = num10 ^ (int) num3 * -1042349639;
            continue;
          case 18:
            num1 = (int) num3 * -1844499556 ^ -792381218;
            continue;
          case 19:
            num1 = (int) num3 * 570527821 ^ -1936331494;
            continue;
          case 20:
            ch2 = JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2);
            num1 = (int) num3 * -1699395848 ^ 1266481775;
            continue;
          case 21:
label_50:
            num1 = -17933176;
            continue;
          case 22:
            num1 = (int) num3 * 1345395379 ^ -1146293927;
            continue;
          case 23:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1602661424 ^ 1209350002;
            continue;
          case 25:
            switch (ch1)
            {
              case '[':
                goto label_149;
              case '\\':
                goto label_62;
              case ']':
                goto label_147;
              default:
                num1 = -59184634;
                continue;
            }
          case 26:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1651142981 ^ -631955777;
            continue;
          case 27:
            num1 = (int) num3 * -1163081501 ^ 1758322380;
            continue;
          case 28:
            int num11 = !flag11 ? 742263685 : (num11 = 83492859);
            num1 = num11 ^ (int) num3 * 1717384585;
            continue;
          case 29:
label_58:
            flag5 = flag1;
            num1 = -1143520104;
            continue;
          case 30:
            num1 = (int) num3 * -1341045220 ^ 304117034;
            continue;
          case 31:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -1370409031 ^ 2009493083;
            continue;
          case 32:
            num1 = (int) num3 * 844188443 ^ 1925931251;
            continue;
          case 33:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1245331300 ^ -1958754389;
            continue;
          case 34:
            num1 = (int) num3 * -930598519 ^ 755971341;
            continue;
          case 35:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -557742953 ^ 198006630;
            continue;
          case 36:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 153437851 ^ 1932455716;
            continue;
          case 37:
            num1 = (int) num3 * 2036977193 ^ -66336227;
            continue;
          case 38:
            num1 = (int) num3 * 1946845064 ^ 1689202498;
            continue;
          case 39:
            int num12;
            num1 = num12 = ch1 != ',' ? -1066313586 : (num12 = -840522676);
            continue;
          case 40:
            goto label_40;
          case 41:
            num1 = (int) num3 * 725156720 ^ -352389934;
            continue;
          case 42:
            flag11 = JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aKey, "");
            num1 = -263269842;
            continue;
          case 43:
            num1 = (int) num3 * -1128862439 ^ -1021278100;
            continue;
          case 44:
            num1 = (int) num3 * 220070889 ^ -1855696449;
            continue;
          case 45:
            int num13 = flag10 ? -2005963584 : (num13 = -182921705);
            num1 = num13 ^ (int) num3 * 2052080191;
            continue;
          case 46:
            num1 = (int) num3 * -190928740 ^ -2049936085;
            continue;
          case 47:
            aKey = "";
            num1 = -1931703437;
            continue;
          case 48:
            num1 = -1678798702;
            continue;
          case 49:
            num1 = (int) num3 * 1590788955 ^ 2088228194;
            continue;
          case 50:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1332789126 ^ 2016801627;
            continue;
          case 51:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1699151720 ^ 705922510;
            continue;
          case 52:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            flag9 = jsonNode1 != (object) null;
            num1 = -688658820;
            continue;
          case 53:
            goto label_1;
          case 54:
            num1 = (int) num3 * 477128338 ^ -1587868457;
            continue;
          case 55:
            num1 = (int) num3 * 304149656 ^ 1469020746;
            continue;
          case 56:
            num1 = (int) num3 * 1656920468 ^ -1919197734;
            continue;
          case 57:
            num1 = -1998504971;
            continue;
          case 58:
            int num14;
            num1 = num14 = flag1 ? -1707274553 : (num14 = -1136678094);
            continue;
          case 60:
            flag8 = flag1;
            num1 = (int) num3 * 934631242 ^ -1532366686;
            continue;
          case 61:
            aKey = JSONNode.\u206B‌⁭‭‌‎‮‍‌⁪‍​‌⁭⁭‍‍⁪‪⁯⁮⁯​‭⁬⁮⁯‫​‮‫‬‏‎‫⁫⁯‬⁯‏‮(aKey);
            num1 = (int) num3 * 843847777 ^ -1434487450;
            continue;
          case 62:
            int num15 = !flag8 ? -1702135924 : (num15 = -697430664);
            num1 = num15 ^ (int) num3 * -637141594;
            continue;
          case 63:
            num1 = (int) num3 * 1584840978 ^ 71527045;
            continue;
          case 64:
            s = JSONNode.\u206F‎‏‬‭⁬⁫‫‍‏⁯‭‌​‎‏‭⁫⁬⁫‪‍‭⁮‎‪‭⁪⁪⁭‍​‮‬‭‭⁯⁯⁮‏‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1551704857 ^ 613386620;
            continue;
          case 65:
            num1 = (int) num3 * -173903726 ^ 1629811959;
            continue;
          case 66:
            int num16 = ch1 <= ' ' ? 1327296948 : (num16 = 385788364);
            num1 = num16 ^ (int) num3 * -1543729719;
            continue;
          case 68:
label_62:
            ++num2;
            flag2 = flag1;
            num1 = -746451323;
            continue;
          case 69:
            int num17 = !flag3 ? -966606641 : (num17 = -822387474);
            num1 = num17 ^ (int) num3 * -944185582;
            continue;
          case 70:
            flag1 = !flag1;
            num1 = -1391751710;
            continue;
          case 71:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1636437306 ^ 1535105958;
            continue;
          case 72:
            num1 = (int) num3 * -798247983 ^ 156157775;
            continue;
          case 73:
            flag4 = JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aKey, "");
            num1 = -492082750;
            continue;
          case 74:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 152174619 ^ -20733885;
            continue;
          case 75:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, "\f");
            num1 = -1643074490;
            continue;
          case 76:
            aKey = "";
            flag1 = false;
            num1 = (int) num3 * -794139587 ^ 1007689969;
            continue;
          case 77:
            num1 = (int) num3 * -672336238 ^ 145995888;
            continue;
          case 78:
            num1 = (int) num3 * -178316823 ^ 1282960453;
            continue;
          case 79:
            int num18;
            num1 = num18 = !flag1 ? -1656324768 : (num18 = -1234141603);
            continue;
          case 80:
            num1 = (int) num3 * -2013348399 ^ -290612868;
            continue;
          case 81:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1846258864 ^ 1830033239;
            continue;
          case 82:
label_147:
            int num19;
            num1 = num19 = !flag1 ? -1418617453 : (num19 = -1910986424);
            continue;
          case 83:
            int num20;
            num1 = num20 = num2 < JSONNode.\u200F⁪⁬‭‫‎‮⁭‫‪⁮⁭⁯​‭​​​‫⁭‌‬​‌‫‏‎‭⁮‫⁮‌​⁯​​⁯‬‬‬‮(aJSON) ? -1805033548 : (num20 = -362977490);
            continue;
          case 84:
            int num21 = ch3 <= 'f' ? 899898510 : (num21 = 1582732114);
            num1 = num21 ^ (int) num3 * 1471436350;
            continue;
          case 85:
            num1 = (int) num3 * -928956641 ^ -1443296586;
            continue;
          case 86:
            num1 = (int) num3 * -578106144 ^ 551029841;
            continue;
          case 87:
            int num22;
            num1 = num22 = ch1 == '{' ? -585131540 : (num22 = -1997069028);
            continue;
          case 88:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = (int) num3 * -187519320 ^ 509319629;
            continue;
          case 89:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1025441237 ^ -1148775725;
            continue;
          case 90:
            flag7 = flag1;
            num1 = -28802422;
            continue;
          case 91:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 85969733 ^ 1411387670;
            continue;
          case 92:
            num1 = (int) num3 * 438086694 ^ -2053990755;
            continue;
          case 93:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 884708854 ^ 1081554193;
            continue;
          case 94:
            aKey = JSONNode.\u206B‌⁭‭‌‎‮‍‌⁪‍​‌⁭⁭‍‍⁪‪⁯⁮⁯​‭⁬⁮⁯‫​‮‫‬‏‎‫⁫⁯‬⁯‏‮(aKey);
            num1 = (int) num3 * 1509572947 ^ -261507053;
            continue;
          case 95:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2103428068 ^ 200101913;
            continue;
          case 96:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -151953932;
            continue;
          case 97:
            num1 = (int) num3 * 420756851 ^ -754356528;
            continue;
          case 98:
label_143:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, "\t");
            num1 = -1223992007;
            continue;
          case 99:
            switch (ch3)
            {
              case 'r':
                goto label_118;
              case 's':
                goto label_81;
              case 't':
                goto label_143;
              case 'u':
                goto label_50;
              default:
                num1 = -669550008;
                continue;
            }
          case 100:
            num1 = -174456916;
            continue;
          case 101:
            num1 = -1451082404;
            continue;
          case 102:
            int num23;
            num1 = num23 = ch1 != ' ' ? -1734906664 : (num23 = -1700291585);
            continue;
          case 103:
            num1 = -1039055193;
            continue;
          case 104:
            num1 = (int) num3 * 1330753225 ^ -1313995431;
            continue;
          case 105:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 463142374 ^ 273050960;
            continue;
          case 106:
            num1 = (int) num3 * 48007972 ^ 1056930414;
            continue;
          case 107:
            int num24;
            num1 = num24 = ch3 == 'f' ? -894125933 : (num24 = -1821380774);
            continue;
          case 110:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * 829653940 ^ 160585887;
            continue;
          case 111:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1831205507 ^ 1090717226;
            continue;
          case 112:
            num1 = (int) num3 * 1328184173 ^ 1319395630;
            continue;
          case 113:
            num1 = -326772424;
            continue;
          case 114:
            num1 = (int) num3 * -1473023728 ^ -251916999;
            continue;
          case 115:
            aItem = "";
            num1 = (int) num3 * 1474839964 ^ -460523559;
            continue;
          case 116:
            num1 = (int) num3 * -1829443351 ^ -423622783;
            continue;
          case 117:
label_149:
            int num25;
            num1 = num25 = !flag1 ? -938283940 : (num25 = -1492085042);
            continue;
          case 118:
            flag12 = JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aKey, "");
            num1 = -634273860;
            continue;
          case 119:
label_118:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, "\r");
            num1 = -1223992007;
            continue;
          case 120:
            int num26;
            num1 = num26 = !JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aItem, "") ? -1039055193 : (num26 = -1733117024);
            continue;
          case 121:
            int num27;
            num1 = num27 = ch1 == '}' ? -943107974 : (num27 = -192777388);
            continue;
          case 122:
            num1 = (int) num3 * 764195392 ^ 1012897051;
            continue;
          case 123:
label_81:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, ch4.ToString());
            num1 = -1223992007;
            continue;
          case 124:
            aKey = "";
            num1 = -716710337;
            continue;
          case 125:
            int num28 = !flag2 ? 1593243666 : (num28 = 1111312789);
            num1 = num28 ^ (int) num3 * 1071824694;
            continue;
          case 126:
            int num29 = !(jsonNode1 != (object) null) ? 1213827248 : (num29 = 1441318918);
            num1 = num29 ^ (int) num3 * -977120710;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * -560881764 ^ 345804796;
            continue;
          case 128:
            goto label_71;
          case 129:
            int num30 = ch1 > ',' ? -390630655 : (num30 = -1931755894);
            num1 = num30 ^ (int) num3 * 187725934;
            continue;
          case 130:
            int num31;
            num1 = num31 = ch3 == 'n' ? -702142103 : (num31 = -1061705679);
            continue;
          case 131:
            aItem = "";
            num1 = (int) num3 * 316201757 ^ 1048565513;
            continue;
          case 132:
            aKey = JSONNode.\u206B‌⁭‭‌‎‮‍‌⁪‍​‌⁭⁭‍‍⁪‪⁯⁮⁯​‭⁬⁮⁯‫​‮‫‬‏‎‫⁫⁯‬⁯‏‮(aKey);
            int num32 = jsonNode1 is JSONArray ? 498289215 : (num32 = 282680408);
            num1 = num32 ^ (int) num3 * 1019013191;
            continue;
          case 133:
            int num33 = !flag6 ? -779948903 : (num33 = -1902074523);
            num1 = num33 ^ (int) num3 * 1404225679;
            continue;
          case 134:
            int num34 = ch3 != 'b' ? -1613227735 : (num34 = -515589198);
            num1 = num34 ^ (int) num3 * 830935114;
            continue;
          case 135:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 177657696 ^ -1163961399;
            continue;
          case 136:
            int num35 = flag9 ? -526675224 : (num35 = -312407579);
            num1 = num35 ^ (int) num3 * 1115277148;
            continue;
          case 137:
            int num36 = !(jsonNode1 is JSONArray) ? -268301548 : (num36 = -1367652696);
            num1 = num36 ^ (int) num3 * -497361727;
            continue;
          case 138:
            switch (ch1)
            {
              case '\t':
                goto label_58;
              case '\n':
              case '\r':
                goto label_16;
              case '\v':
              case '\f':
                goto label_14;
              default:
                num1 = (int) num3 * -1317050676 ^ 43448126;
                continue;
            }
          case 139:
            num1 = (int) num3 * 208755768 ^ 842110773;
            continue;
          case 140:
            num1 = (int) num3 * 825945680 ^ -604373364;
            continue;
          case 141:
            ch1 = ch2;
            num1 = (int) num3 * 2138451807 ^ -581778550;
            continue;
          case 142:
            num1 = (int) num3 * 707483151 ^ 1677876395;
            continue;
          case 143:
            num1 = (int) num3 * -1675359162 ^ -1569748247;
            continue;
          case 144:
            int num37 = ch1 == ':' ? -1141510879 : (num37 = -458906325);
            num1 = num37 ^ (int) num3 * 872993481;
            continue;
          case 145:
            flag3 = JSONNode.\u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮(aKey, "");
            num1 = -1584377513;
            continue;
          case 146:
            int num38 = flag7 ? -998180513 : (num38 = -783539068);
            num1 = num38 ^ (int) num3 * -1590480593;
            continue;
          case 147:
            flag13 = jsonNodeStack.Count == 0;
            num1 = -945168371;
            continue;
          case 148:
            num1 = (int) num3 * -1710140455 ^ 985170973;
            continue;
          case 149:
            int num39 = jsonNode1 is JSONArray ? 1026035144 : (num39 = 1972915523);
            num1 = num39 ^ (int) num3 * -212457002;
            continue;
          case 150:
            num1 = (int) num3 * 1010002338 ^ -769976859;
            continue;
          case 151:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, "\n");
            num1 = -1223992007;
            continue;
          case 152:
            aKey = "";
            aItem = "";
            flag6 = jsonNodeStack.Count > 0;
            num1 = -1135346379;
            continue;
          case 153:
label_14:
            aItem = JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮(aItem, JSONNode.\u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮(aJSON, num2).ToString());
            num1 = -470711067;
            continue;
          default:
            goto label_154;
        }
      }
label_40:
      throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("JSON Parse: Quotation marks seems to be messed up.");
label_71:
      throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("JSON Parse: Too many closing brackets");
label_154:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1422607531;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1849706690)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u200D⁮‎⁯‎‏‎⁯⁮⁮‌⁮⁯​⁬‍‏⁭‌⁬‮⁮‎‌‏‎‍⁯‎‭‌‭⁯⁫⁭​​‭‎⁯‮(aData);
            num1 = (int) num2 * -1074130073 ^ 1928537525;
            continue;
          case 2:
            num1 = (int) num2 * -1231402005 ^ 1990260247;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.Serialize(aWriter);
            num1 = (int) num2 * -2021397102 ^ 1249181947;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206C⁬⁪⁬⁭‪⁪‪⁬‌⁬⁮⁮‍‪⁯⁮‫⁬‫⁮⁬‫‪‬‬‍‏⁬‭‏​‫⁯‬‎⁯⁭‌⁭‮(JSONNode.\u202B⁫⁪‎⁬​⁮‭⁫‍⁫‍‪⁫⁪⁪‮⁬‮⁬‪‌‏⁯⁮⁭⁭⁪⁪⁭‎‏⁭‎⁯‮​‎‍‮‮((FileSystemInfo) JSONNode.\u200C‪‎‫⁯‪‭‏‬‍⁭‮‎‌‬‏‮‭⁪‎‭‏‍⁮⁪‪⁮⁮​‪⁪⁯‌⁬‮‬⁭⁭‎‮(JSONNode.\u200F‎⁫⁮‍⁭​‫⁬⁮⁬⁬‏‪‭⁯⁭‎‮⁫​‮‎​‍⁫‍‮‏‬‪‌‍‎‪‬⁭‫⁭‫‮(aFileName))));
      FileStream aData = JSONNode.\u202A‏⁭⁮⁪​‫⁮‏⁮‌⁮⁯‫⁯⁭⁯​‮⁮‫‏‎⁫‬‏‬‍‍⁯‬⁫‮⁪‪‬⁭‎‌‌‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1680880076;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 666370924)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_9;
            case 2:
              num1 = (int) num2 * 1635396588 ^ -1499159768;
              continue;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 886373332;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 666370924)) % 3U)
            {
              case 1:
                JSONNode.\u202C‎⁫‫⁬⁭‫‏‌​‫‭‎⁭‪‪‪‏⁭⁮‬‬​‫⁪⁬‍‍‬‮‫⁮‍‍‫‏‮‎‌⁭‮((IDisposable) aData);
                num3 = (int) num4 * 672155623 ^ 1634831989;
                continue;
              case 2:
                goto label_7;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206A⁮⁪‍‎‍‬⁯⁫​‬⁯‍⁮‬‮​⁯‏⁭‍‫⁬‬‭‎‫‫⁯⁫‌‫‍⁫⁬‏⁮‫‭⁭‮();
      try
      {
label_2:
        int num1 = 1801942223;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1980919601)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              JSONNode.\u206C‪‌‏‏‌‌‍⁮⁫‍⁮​​⁮​⁯⁬⁪‎‍⁭‫⁪⁬⁮‍‪‍‏⁮‍⁮‍⁪⁬‭‬⁫⁮‮((Stream) aData, 0L);
              num1 = (int) num2 * 1732731358 ^ -1588006580;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return JSONNode.\u200D‌‌‫‎⁪⁯‌⁪⁪‎⁫‏​‎⁮⁫‏⁫‫‏⁮‪‬‎‎‎​‮‬​​⁪‫‏⁭‮⁯⁯‪‮(JSONNode.\u200D‮⁮​⁪‫‎​‬‌‮‎‬‌‭‬‎‏⁮⁫‎⁭⁯‌⁬⁬⁬‏‬⁪‭‬⁬⁭‍‫‮⁬⁪‌‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 365101822;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1980919601)) % 4U)
            {
              case 0:
                goto label_7;
              case 1:
                num3 = (int) num4 * 153098877 ^ -25930098;
                continue;
              case 3:
                JSONNode.\u202C‎⁫‫⁬⁭‫‏‌​‫‭‎⁭‪‪‪‏⁭⁮‬‬​‫⁪⁬‍‍‬‮‫⁮‍‍‫‏‮‎‌⁭‮((IDisposable) aData);
                num3 = (int) num4 * -1348669715 ^ -1686378093;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1475704118;
      bool flag;
      JSONNode jsonNode;
      int num2;
      int num3;
      int num4;
      int num5;
      JSONArray jsonArray;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -2026326219)) % 38U)
        {
          case 0:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1592244060;
            continue;
          case 1:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -2027105585 ^ -259199012;
            continue;
          case 2:
label_34:
            num1 = -366972859;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E‪⁯⁪‭‏⁫⁫‮‎⁭‮‮⁭‍‌‭‭⁬⁮⁫​‮‮⁮⁭‍⁯⁪​‏‪​‏​⁯‌​⁪⁪‮(aReader));
            num1 = (int) num6 * 177277222 ^ 1471256252;
            continue;
          case 4:
            flag = num4 < num5;
            num1 = -1282230225;
            continue;
          case 6:
            num1 = (int) num6 * 2064029071 ^ -977060502;
            continue;
          case 7:
            num1 = (int) num6 * 2137727967 ^ -2098213960;
            continue;
          case 8:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -958339528 ^ -1983830385;
            continue;
          case 9:
label_22:
            num1 = -923678772;
            continue;
          case 10:
            ++num2;
            num1 = (int) num6 * -980947297 ^ -944063402;
            continue;
          case 11:
            num1 = (int) num6 * 457151776 ^ 313085482;
            continue;
          case 12:
            num5 = JSONNode.\u200F‎‌‭⁮⁯‍‎‎‮‬⁪‍‫‏​​⁯‮⁮‍⁪⁯⁬⁮‭⁪⁭⁬‭⁬‮‫‫‫‮⁫‪‌‪‮(aReader);
            num1 = (int) num6 * -309281208 ^ 1193378563;
            continue;
          case 13:
            goto label_1;
          case 14:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 261257435 ^ 77343746;
            continue;
          case 15:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206A​‮‪‮⁮‏‫⁭‮‫​⁬⁭⁫‮⁫⁪⁯‬‏⁫⁫⁮‎‎⁬‬⁭‏‭​⁭⁬⁫‪‏‎⁭‮‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 1662682423 ^ -166884416;
            continue;
          case 16:
label_9:
            num1 = -1680790728;
            continue;
          case 17:
            num1 = (int) num6 * -79155933 ^ 1553029716;
            continue;
          case 18:
            num4 = 0;
            num1 = (int) num6 * 1590658696 ^ 963858966;
            continue;
          case 19:
            int num7;
            num1 = num7 = num2 >= num3 ? -1006622318 : (num7 = -1691223827);
            continue;
          case 20:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -1635698199 ^ -1828897765;
            continue;
          case 21:
            num1 = (int) num6 * -1904845184 ^ -639077155;
            continue;
          case 22:
            goto label_27;
          case 23:
            num3 = JSONNode.\u200F‎‌‭⁮⁯‍‎‎‮‬⁪‍‫‏​​⁯‮⁮‍⁪⁯⁬⁮‭⁪⁭⁬‭⁬‮‫‫‫‮⁫‪‌‪‮(aReader);
            num1 = (int) num6 * -448408573 ^ -1221478934;
            continue;
          case 24:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_34;
              case JSONBinaryTag.Class:
                goto label_9;
              case JSONBinaryTag.Value:
                goto label_37;
              case JSONBinaryTag.IntValue:
                goto label_6;
              case JSONBinaryTag.DoubleValue:
                goto label_20;
              case JSONBinaryTag.BoolValue:
                goto label_31;
              case JSONBinaryTag.FloatValue:
                goto label_22;
              default:
                num1 = (int) num6 * -2007956238 ^ 1616621040;
                continue;
            }
          case 25:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E⁫⁫⁫‮‬⁮‌​⁬⁪‌‪​‍‬‪⁪‬​​⁭⁮⁬‫‪⁫‍‮⁫‪‌‏‮‫⁪‬‍⁭‮‮(aReader));
            num1 = -195488950;
            continue;
          case 26:
            int num8 = !flag ? 1401214174 : (num8 = 1655681231);
            num1 = num8 ^ (int) num6 * 1149970375;
            continue;
          case 27:
            num2 = 0;
            num1 = (int) num6 * 1492383009 ^ -2110781095;
            continue;
          case 28:
            string aKey = JSONNode.\u200F‏‫‭⁪⁪⁭‭‪‎‎⁫​‎‎‌‭‫⁭‪‌‭​‍⁫⁭⁫‬⁮‪‪‬‮‌‌‌⁮‎‬⁬‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = -1395520096;
            continue;
          case 29:
            num1 = (int) num6 * 1360250404 ^ 1773327232;
            continue;
          case 30:
            num1 = (int) num6 * -1579465828 ^ 2119360274;
            continue;
          case 31:
            num1 = (int) num6 * 1540351386 ^ 1782330508;
            continue;
          case 32:
label_37:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‏‫‭⁪⁪⁭‭‪‎‎⁫​‎‎‌‭‫⁭‪‌‭​‍⁫⁭⁫‬⁮‪‪‬‮‌‌‌⁮‎‬⁬‮(aReader));
            num1 = -1571080614;
            continue;
          case 33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‎‌‭⁮⁯‍‎‎‮‬⁪‍‫‏​​⁯‮⁮‍⁪⁯⁬⁮‭⁪⁭⁬‭⁬‮‫‫‫‮⁫‪‌‪‮(aReader));
            num1 = (int) num6 * -254654655 ^ -1103316271;
            continue;
          case 34:
label_31:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‮‪‫‮‍‌‏⁫‮‪⁮‪⁬⁫​‭⁪⁫⁬​⁯⁭‬‍‫​‮⁮‭‌⁯⁮‎‪⁯⁮⁬⁯‌‮(aReader));
            num1 = -1740938161;
            continue;
          case 35:
            ++num4;
            num1 = (int) num6 * -1767683819 ^ -1579208520;
            continue;
          case 36:
label_6:
            num1 = -1683515166;
            continue;
          case 37:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -182394671 ^ -1317865689;
            continue;
          default:
            goto label_40;
        }
      }
label_27:
      throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮(JSONNode.\u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202D‫‭⁮‍⁪‬‮‫⁮‌‌⁫⁯⁭‮‬‪⁮⁮‪⁮⁬‮‏‫‮⁯‮⁫⁮​‏⁭‍‪⁫⁯⁬‮‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -309382019;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -894363163)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -432300652 ^ 714927605;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1925915075;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -894363163)) % 3U)
            {
              case 1:
                JSONNode.\u202C‎⁫‫⁬⁭‫‏‌​‫‭‎⁭‪‪‪‏⁭⁮‬‬​‫⁪⁬‍‍‬‮‫⁮‍‍‫‏‮‎‌⁭‮((IDisposable) aReader);
                num3 = (int) num4 * -689645471 ^ 376481960;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E‎⁮⁭‌⁫​⁭‮⁫⁫‮⁮⁫‪⁬‮⁫‏⁯⁫‍⁯‪⁬‏‌‌⁫‌​⁭⁮‭⁫⁫‌‍‍⁮‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 739191747;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 831741906)) % 4U)
            {
              case 1:
                JSONNode.\u202C‎⁫‫⁬⁭‫‏‌​‫‭‎⁭‪‪‪‏⁭⁮‬‬​‫⁪⁬‍‍‬‮‫⁮‍‍‫‏‮‎‌⁭‮((IDisposable) aData);
                num1 = (int) num2 * -1648381854 ^ -1743880593;
                continue;
              case 2:
                goto label_3;
              case 3:
                num1 = (int) num2 * 1400576181 ^ 754902989;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1943008549;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -593821692)) % 6U)
        {
          case 0:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1662176722 ^ -2031855707;
            continue;
          case 1:
            numArray = JSONNode.\u206A⁭‬⁪‏⁭⁮⁫‍‪⁬⁪‪⁪⁫⁮⁫​⁬‫⁬‭‌‬‪‭‮‎⁪⁪⁭‮‫‍⁫⁪‫‍‎⁫‮(aBase64);
            num1 = (int) num2 * -424865951 ^ -293871365;
            continue;
          case 3:
            num1 = (int) num2 * 971842632 ^ 834487526;
            continue;
          case 4:
            aData = JSONNode.\u206F‎⁬‌‭⁭⁪‎⁯⁭‪‮⁬‫‍‌​‎‫‪‭‫⁯‫‍‪‬‬‏⁭⁪‏‍⁭⁬⁮‫⁯⁫‎‮(numArray);
            JSONNode.\u206C‪‌‏‏‌‌‍⁮⁫‍⁮​​⁮​⁯⁬⁪‎‍⁭‫⁪⁬⁮‍‪‍‏⁮‍⁮‍⁪⁬‭‬⁫⁮‮((Stream) aData, 0L);
            num1 = (int) num2 * -2139120531 ^ -1287481196;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    static CultureInfo \u202B⁫⁪‪‏‍‮⁪‍⁭​‏⁬‭‪​⁯‪‪‫​‏‬⁪‌​‎​‬⁭‍⁭‍⁮⁫‮‮⁭‍⁫‮() => CultureInfo.InvariantCulture;

    static bool \u200F⁮⁫⁪‮‫⁫‮‎⁫⁫⁯‏‭‬‭⁬‪‎⁭‬‪⁯‬⁯⁫‫⁪⁯⁪‮‮⁯‍‏‌⁪‭‌‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202E⁮⁪⁫​‬⁮​⁫‭‏‬⁭⁭‌⁬⁮‬‭‏‍‪‍‭‬‮⁬‍‭​‭‬⁪⁮‬‫‍‌‍⁮‮() => base.GetHashCode();

    static char \u206F⁭⁮‏‪‫‮⁫⁭‍⁪​‭⁯⁬‌‏‍⁫⁪⁯‪‏⁪‌⁮‫‍⁮⁭‬‬⁮⁭‫⁯‭⁪‪⁯‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C‫⁬⁪‍‮‮⁮‍‭‪‏‭‌⁪⁫‮⁬‍‪⁮‬⁭​‎‮‮⁯⁫⁪⁬⁯​⁭⁪⁬⁪⁬‍⁭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F⁪⁬‭‫‎‮⁭‫‪⁮⁭⁯​‭​​​‫⁭‌‬​‌‫‏‎‭⁮‫⁮‌​⁯​​⁯‬‬‬‮([In] string obj0) => obj0.Length;

    static string \u206B‌⁭‭‌‎‮‍‌⁪‍​‌⁭⁭‍‍⁪‪⁯⁮⁯​‭⁬⁮⁯‫​‮‫‬‏‎‫⁫⁯‬⁯‏‮([In] string obj0) => obj0.Trim();

    static bool \u202B⁯⁫‭‬‬⁯⁪⁯‏⁫‬‍​‫‪‮‍⁮‌‫⁪‮⁮‏⁯‎⁭⁪‮‬⁪‌‪‌‍‮‏‮⁭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200E⁮⁪​‪⁮⁪⁬‮⁯‏‎⁯⁪‬‌⁫⁬⁭⁪‬‫​‬‪​⁯‎⁯‎‌‪⁭‫⁮‏​⁯⁭⁭‮([In] string obj0) => new Exception(obj0);

    static string \u206F‎‏‬‭⁬⁫‫‍‏⁯‭‌​‎‏‭⁫⁬⁫‪‍‭⁮‎‪‭⁪⁪⁭‍​‮‬‭‭⁯⁯⁮‏‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200D⁮‎⁯‎‏‎⁯⁮⁮‌⁮⁯​⁬‍‏⁭‌⁬‮⁮‎‌‏‎‍⁯‎‭‌‭⁯⁫⁭​​‭‎⁯‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F‎⁫⁮‍⁭​‫⁬⁮⁬⁬‏‪‭⁯⁭‎‮⁫​‮‎​‍⁫‍‮‏‬‪‌‍‎‪‬⁭‫⁭‫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C‪‎‫⁯‪‭‏‬‍⁭‮‎‌‬‏‮‭⁪‎‭‏‍⁮⁪‪⁮⁮​‪⁪⁯‌⁬‮‬⁭⁭‎‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202B⁫⁪‎⁬​⁮‭⁫‍⁫‍‪⁫⁪⁪‮⁬‮⁬‪‌‏⁯⁮⁭⁭⁪⁪⁭‎‏⁭‎⁯‮​‎‍‮‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206C⁬⁪⁬⁭‪⁪‪⁬‌⁬⁮⁮‍‪⁯⁮‫⁬‫⁮⁬‫‪‬‬‍‏⁬‭‏​‫⁯‬‎⁯⁭‌⁭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202A‏⁭⁮⁪​‫⁮‏⁮‌⁮⁯‫⁯⁭⁯​‮⁮‫‏‎⁫‬‏‬‍‍⁯‬⁫‮⁪‪‬⁭‎‌‌‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202C‎⁫‫⁬⁭‫‏‌​‫‭‎⁭‪‪‪‏⁭⁮‬‬​‫⁪⁬‍‍‬‮‫⁮‍‍‫‏‮‎‌⁭‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206A⁮⁪‍‎‍‬⁯⁫​‬⁯‍⁮‬‮​⁯‏⁭‍‫⁬‬‭‎‫‫⁯⁫‌‫‍⁫⁬‏⁮‫‭⁭‮() => new MemoryStream();

    static void \u206C‪‌‏‏‌‌‍⁮⁫‍⁮​​⁮​⁯⁬⁪‎‍⁭‫⁪⁬⁮‍‪‍‏⁮‍⁮‍⁪⁬‭‬⁫⁮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200D‮⁮​⁪‫‎​‬‌‮‎‬‌‭‬‎‏⁮⁫‎⁭⁯‌⁬⁬⁬‏‬⁪‭‬⁬⁭‍‫‮⁬⁪‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200D‌‌‫‎⁪⁯‌⁪⁪‎⁫‏​‎⁮⁫‏⁫‫‏⁮‪‬‎‎‎​‮‬​​⁪‫‏⁭‮⁯⁯‪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A​‮‪‮⁮‏‫⁭‮‫​⁬⁭⁫‮⁫⁪⁯‬‏⁫⁫⁮‎‎⁬‬⁭‏‭​⁭⁬⁫‪‏‎⁭‮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F‎‌‭⁮⁯‍‎‎‮‬⁪‍‫‏​​⁯‮⁮‍⁪⁯⁬⁮‭⁪⁭⁬‭⁬‮‫‫‫‮⁫‪‌‪‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200F‏‫‭⁪⁪⁭‭‪‎‎⁫​‎‎‌‭‫⁭‪‌‭​‍⁫⁭⁫‬⁮‪‪‬‮‌‌‌⁮‎‬⁬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200E⁫⁫⁫‮‬⁮‌​⁬⁪‌‪​‍‬‪⁪‬​​⁭⁮⁬‫‪⁫‍‮⁫‪‌‏‮‫⁪‬‍⁭‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206A‮‪‫‮‍‌‏⁫‮‪⁮‪⁬⁫​‭⁪⁫⁬​⁯⁭‬‍‫​‮⁮‭‌⁯⁮‎‪⁯⁮⁬⁯‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206E‪⁯⁪‭‏⁫⁫‮‎⁭‮‮⁭‍‌‭‭⁬⁮⁫​‮‮⁮⁭‍⁯⁪​‏‪​‏​⁯‌​⁪⁪‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202D‫‭⁮‍⁪‬‮‫⁮‌‌⁫⁯⁭‮‬‪⁮⁮‪⁮⁬‮‏‫‮⁯‮⁫⁮​‏⁭‍‪⁫⁯⁬‮‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E‎⁮⁭‌⁫​⁭‮⁫⁫‮⁮⁫‪⁬‮⁫‏⁯⁫‍⁯‪⁬‏‌‌⁫‌​⁭⁮‭⁫⁫‌‍‍⁮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206A⁭‬⁪‏⁭⁮⁫‍‪⁬⁪‪⁪⁫⁮⁫​⁬‫⁬‭‌‬‪‭‮‎⁪⁪⁭‮‫‍⁫⁪‫‍‎⁫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206F‎⁬‌‭⁭⁪‎⁯⁭‪‮⁬‫‍‌​‎‫‪‭‫⁯‫‍‪‬‬‏⁭⁪‏‍⁭⁬⁮‫⁯⁫‎‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
