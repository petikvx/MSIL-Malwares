// Decompiled with JetBrains decompiler
// Type: System.Data.SQLite.SQLiteEnlistment
// Assembly: sysrt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F2102D52-57B0-4622-A1CB-9DE0B00E107F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.hehh-e9e3600777f319c90d3c06bee4af8f501eba42a876d1d5ed7d3de045ff7cba31.exe

using System.Transactions;

namespace System.Data.SQLite
{
  internal class SQLiteEnlistment : IEnlistmentNotification
  {
    internal SQLiteTransaction _transaction;
    internal Transaction _scope;
    internal bool _disposeConnection;

    internal SQLiteEnlistment(SQLiteConnection cnn, Transaction scope)
    {
      this._transaction = cnn.BeginTransaction();
      this._scope = scope;
      this._scope.EnlistVolatile((IEnlistmentNotification) this, EnlistmentOptions.None);
    }

    private void Cleanup(SQLiteConnection cnn)
    {
      if (this._disposeConnection)
        cnn.Dispose();
      this._transaction = (SQLiteTransaction) null;
      this._scope = (Transaction) null;
    }

    public void Commit(Enlistment enlistment)
    {
      SQLiteConnection connection = this._transaction.Connection;
      connection._enlistment = (SQLiteEnlistment) null;
      try
      {
        this._transaction.IsValid(true);
        this._transaction.Connection._transactionLevel = 1;
        this._transaction.Commit();
        enlistment.Done();
      }
      finally
      {
        this.Cleanup(connection);
      }
    }

    public void InDoubt(Enlistment enlistment) => enlistment.Done();

    public void Prepare(PreparingEnlistment preparingEnlistment)
    {
      if (!this._transaction.IsValid(false))
        preparingEnlistment.ForceRollback();
      else
        preparingEnlistment.Prepared();
    }

    public void Rollback(Enlistment enlistment)
    {
      SQLiteConnection connection = this._transaction.Connection;
      connection._enlistment = (SQLiteEnlistment) null;
      try
      {
        this._transaction.Rollback();
        enlistment.Done();
      }
      finally
      {
        this.Cleanup(connection);
      }
    }
  }
}
