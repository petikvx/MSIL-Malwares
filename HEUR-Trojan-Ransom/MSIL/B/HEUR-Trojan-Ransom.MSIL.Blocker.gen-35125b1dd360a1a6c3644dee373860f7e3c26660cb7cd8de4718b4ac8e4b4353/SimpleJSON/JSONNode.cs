// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 789688242;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 102026795)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1965553120 ^ -1451467342;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1658451947;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1433078741)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1292924551 ^ -597634726;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -422036364;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1795453187)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 2110050670 ^ 1128122499;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * 940524637 ^ -1175537260;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 660896311;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1157112697)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * 495615498 ^ -76762339;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 6087774;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 807260625)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1291182841 ^ 98251996;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            this.Add("", aItem);
            num1 = (int) num2 * 198786572 ^ -146560611;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 2025818305;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1554527519)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 52318600 ^ -1121454945;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -2054147256;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -307464150)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 764845218 ^ -858121653;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -105569666;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -679429276)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -354710213 ^ -173082504;
            continue;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * 1501157458 ^ -1518815919;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 1683779766;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 620726520)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -522055466 ^ -1365831312;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = 1997418989;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1201303084)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1122011603 ^ 1553586738;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -1880438227;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1612718096)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -689355863 ^ -1311049876;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1233460016;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1920665075)) % 4U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -402185373 ^ -871356163;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1337821016 ^ 1672983465;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        bool flag = int.TryParse(this.Value, out result);
label_1:
        int num1 = 1802131148;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 450841019)) % 7U)
          {
            case 0:
              asInt = result;
              num1 = (int) num2 * 743518195 ^ 1272436848;
              continue;
            case 1:
              num1 = (int) num2 * -1243728087 ^ 178255533;
              continue;
            case 2:
              num1 = (int) num2 * -549722822 ^ 619746097;
              continue;
            case 4:
              int num3 = flag ? 391140104 : (num3 = 30637636);
              num1 = num3 ^ (int) num2 * 534124178;
              continue;
            case 5:
              goto label_1;
            case 6:
              asInt = 0;
              num1 = 1338507643;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -2140832198;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1574706948)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -464725514 ^ -1252657002;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1438097912 ^ -2126908127;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -1462009717;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1443129492)) % 7U)
          {
            case 0:
              int num3 = flag ? 291357979 : (num3 = 272048257);
              num1 = num3 ^ (int) num2 * -763364132;
              continue;
            case 1:
              asFloat = 0.0f;
              num1 = -348241723;
              continue;
            case 2:
              goto label_1;
            case 3:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202C‌‎‭⁫⁭⁬⁭‪‮‮⁯⁬⁪⁭‮‭‫‬‌⁬‬‌​‪‫‮⁯‌‪⁯‎‍‬​‫‭‍‫‎‮(), out result);
              num1 = (int) num2 * -347297148 ^ -1223607597;
              continue;
            case 5:
              num1 = (int) num2 * 1728130982 ^ -1146640763;
              continue;
            case 6:
              asFloat = result;
              num1 = (int) num2 * -1942352464 ^ 26071811;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 380764785;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1717570970)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1414046426 ^ 1184446113;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 807682989;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1835913900)) % 7U)
          {
            case 1:
              result = 0.0;
              int num3 = !double.TryParse(this.Value, out result) ? -1107236760 : (num3 = -151235000);
              num1 = num3 ^ (int) num2 * 308772512;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = 1076910339;
              continue;
            case 3:
              num1 = (int) num2 * -1195961335 ^ -455388112;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * -802748082 ^ -74300565;
              continue;
            case 6:
              asDouble = result;
              num1 = (int) num2 * 469401667 ^ -1513104398;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1852795871;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -366641294)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 304170334 ^ 1489415067;
              continue;
            case 3:
              this.Value = value.ToString();
              num1 = (int) num2 * 893127144 ^ 1187078224;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = 1892859808;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 550823160)) % 7U)
          {
            case 0:
              asBool = !JSONNode.\u200D‌‫‫‏‬‭​‬‫‪‎⁯​⁬⁬‫‏‮‬‌⁬⁫​⁫‮‏‫⁮‭‏‌⁮‭‭‎⁯⁬‭‎‮(this.Value);
              num1 = 2042120544;
              continue;
            case 1:
              num1 = (int) num2 * 1566255848 ^ -285965728;
              continue;
            case 3:
              asBool = result;
              num1 = (int) num2 * -1694922641 ^ -1959901884;
              continue;
            case 4:
              num1 = (int) num2 * 1048610311 ^ -129165654;
              continue;
            case 5:
              int num3 = flag ? 1012606806 : (num3 = 845335405);
              num1 = num3 ^ (int) num2 * 637613375;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = -304637070;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2122984099)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1343921034 ^ 53042787;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1302699555;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2001943800)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -978049803 ^ -1271508965;
              continue;
            case 3:
              asArray = this as JSONArray;
              num1 = (int) num2 * -892067724 ^ 1416970154;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = 680321644;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1084061990)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1950830933 ^ 1558036644;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 283592859;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1601660302)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -743735827 ^ 1338493213;
            continue;
          case 2:
            num1 = (int) num2 * 45727650 ^ 598017546;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -236398433;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -395264141)) % 5U)
        {
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 76367825 ^ -1527947565;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            num1 = (int) num2 * -58381011 ^ 357940814;
            continue;
          case 3:
            goto label_1;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1494423782;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 939089271;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 2106930788)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 1390202224 ^ 459808691;
            continue;
          case 1:
            int num4 = !flag2 ? 1053396961 : (num4 = 206719463);
            num1 = num4 ^ (int) num2 * 1065720529;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * 1793758516 ^ 674826683;
            continue;
          case 3:
            if (b == null)
            {
              num1 = (int) num2 * 610716943 ^ -2052093452;
              continue;
            }
            num3 = 0;
            break;
          case 4:
            flag1 = (object) a == b;
            num1 = 1321893076;
            continue;
          case 5:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 6:
            goto label_1;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = 498479261;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1008522440;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2028033745)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1043203445 ^ -649902497;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1409547722 ^ -1637407277;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1176323039;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 869777988)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1976490588 ^ -1414407571;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * 980722012 ^ -2094941378;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1148007934;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -44284587)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1034129896 ^ -129755312;
            continue;
          case 3:
            hashCode = this.\u206B⁬⁮⁪‭⁯‫‏‪‭‬‮‍‮⁭‭‎⁮‭​‬‪⁬‏⁭⁮⁪‭‎⁮​⁯⁪‬‌⁫⁬⁫⁪⁭‮();
            num1 = (int) num2 * 2068595455 ^ -410624382;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -178904018;
      string str1;
      char ch1;
      char ch2;
      string str2;
      int num2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1335663076)) % 30U)
        {
          case 0:
label_31:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\t");
            num1 = -1151289421;
            continue;
          case 1:
            num1 = (int) num3 * -1248876210 ^ 62534066;
            continue;
          case 2:
            num1 = (int) num3 * 1619734407 ^ 1121644377;
            continue;
          case 3:
            num1 = (int) num3 * 1674090186 ^ -1786242139;
            continue;
          case 4:
            ch2 = ch1;
            num1 = (int) num3 * 774863778 ^ 1472077357;
            continue;
          case 5:
            num1 = (int) num3 * -248129178 ^ 891902317;
            continue;
          case 6:
            int num4;
            num1 = num4 = ch2 != '"' ? -1171279002 : (num4 = -1053369892);
            continue;
          case 7:
            num1 = (int) num3 * 1899255693 ^ -734484752;
            continue;
          case 8:
            ch1 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(str2, num2);
            num1 = -1587605272;
            continue;
          case 9:
            goto label_1;
          case 10:
label_25:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\f");
            num1 = -1399990765;
            continue;
          case 11:
            switch (ch2)
            {
              case '\b':
                goto label_3;
              case '\t':
                goto label_31;
              case '\n':
                goto label_20;
              case '\v':
                goto label_6;
              case '\f':
                goto label_25;
              case '\r':
                goto label_28;
              default:
                num1 = (int) num3 * 694587755 ^ -203298498;
                continue;
            }
          case 12:
            str3 = str1;
            num1 = (int) num3 * 551675065 ^ 902003966;
            continue;
          case 14:
            int num5;
            num1 = num5 = num2 < JSONNode.\u200B‍⁫‍⁭‪‎‏⁯‬⁭⁮‭⁯‌⁬‬‌‌‏⁪‍‌⁬‍‌⁫⁫‏⁫‫‬‏‭​⁪⁫⁫‍⁮‮(str2) ? -1881179732 : (num5 = -571929980);
            continue;
          case 15:
            num1 = (int) num3 * -1716964283 ^ 882586286;
            continue;
          case 16:
            num1 = (int) num3 * -394765191 ^ -393468136;
            continue;
          case 17:
label_28:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\r");
            num1 = -1151289421;
            continue;
          case 18:
label_6:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, ch1.ToString());
            num1 = -1151289421;
            continue;
          case 19:
label_20:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\n");
            num1 = -1336037147;
            continue;
          case 20:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\\\");
            num1 = -1519278510;
            continue;
          case 21:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 1405964218 ^ 640002695;
            continue;
          case 22:
            int num6;
            num1 = num6 = ch2 != '\\' ? -723240907 : (num6 = -994949336);
            continue;
          case 23:
            ++num2;
            num1 = -308975084;
            continue;
          case 24:
            num1 = (int) num3 * 1246387235 ^ 2052646169;
            continue;
          case 25:
            num1 = (int) num3 * 162592034 ^ -1101645440;
            continue;
          case 26:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\\"");
            num1 = -319702349;
            continue;
          case 27:
label_3:
            str1 = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, "\\b");
            num1 = -2079766967;
            continue;
          case 28:
            str1 = "";
            num1 = (int) num3 * 39536444 ^ 1379155335;
            continue;
          case 29:
            num1 = (int) num3 * -2056691469 ^ -1628984555;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = -2038729435;
      string aItem;
      int num2;
      char ch1;
      bool flag1;
      char ch2;
      string aKey;
      bool flag2;
      bool flag3;
      bool flag4;
      char ch3;
      bool flag5;
      bool flag6;
      char ch4;
      char ch5;
      char ch6;
      bool flag7;
      JSONNode jsonNode2;
      string s;
      bool flag8;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -5169437)) % 143U)
        {
          case 0:
            string str1 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str2 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str1, str2);
            num1 = (int) num3 * -365152861 ^ -8769203;
            continue;
          case 1:
            int num4 = ch3 == ':' ? -62012527 : (num4 = -1344954144);
            num1 = num4 ^ (int) num3 * 1890353360;
            continue;
          case 2:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1661351465 ^ -661639664;
            continue;
          case 3:
          case 32:
          case 110:
          case (uint) sbyte.MaxValue:
          case 141:
label_74:
            ++num2;
            num1 = -75696971;
            continue;
          case 4:
            string str3 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str4 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str3, str4);
            num1 = (int) num3 * -699903201 ^ -1934131659;
            continue;
          case 5:
            switch (ch3)
            {
              case '[':
                goto label_98;
              case '\\':
                goto label_116;
              case ']':
                goto label_138;
              default:
                num1 = -396556828;
                continue;
            }
          case 6:
            num1 = (int) num3 * -503596877 ^ -567639022;
            continue;
          case 7:
            jsonNodeStack.Pop();
            num1 = -1120227872;
            continue;
          case 8:
            num1 = (int) num3 * 1384534148 ^ 87473139;
            continue;
          case 9:
            flag2 = !flag2;
            num1 = -2115617193;
            continue;
          case 10:
            aKey = "";
            aItem = "";
            num1 = -1549490172;
            continue;
          case 11:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -1594753935;
            continue;
          case 12:
            aKey = JSONNode.\u200D‫‌‌‫‫‎‭‭‪​‫⁮⁭‬​‪‮⁪‫‫‭‌⁫⁬⁬⁬⁫‬‌⁯‭‮⁪‮⁪⁬⁯‬‭‮(aKey);
            num1 = (int) num3 * 593881818 ^ -1023891079;
            continue;
          case 13:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -75190985;
            continue;
          case 14:
            aKey = JSONNode.\u200D‫‌‌‫‫‎‭‭‪​‫⁮⁭‬​‪‮⁪‫‫‭‌⁫⁬⁬⁬⁫‬‌⁯‭‮⁪‮⁪⁬⁯‬‭‮(aKey);
            num1 = (int) num3 * -802506274 ^ 161838264;
            continue;
          case 15:
            int num5;
            num1 = num5 = ch3 != ' ' ? -1006721805 : (num5 = -1840697715);
            continue;
          case 16:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1409391231 ^ 1475866910;
            continue;
          case 17:
label_92:
            int num6;
            num1 = num6 = !flag2 ? -528090485 : (num6 = -1775840435);
            continue;
          case 18:
            num1 = (int) num3 * 1007970762 ^ 129790868;
            continue;
          case 19:
            int num7 = !flag7 ? 512807598 : (num7 = 1111943067);
            num1 = num7 ^ (int) num3 * -1065390401;
            continue;
          case 20:
            num1 = -770502734;
            continue;
          case 21:
            int num8 = ch2 != 'b' ? 2059400463 : (num8 = 1550680738);
            num1 = num8 ^ (int) num3 * 1763842296;
            continue;
          case 22:
label_138:
            int num9;
            num1 = num9 = flag2 ? -788926626 : (num9 = -1374242287);
            continue;
          case 23:
            num1 = (int) num3 * -1519403535 ^ 812217455;
            continue;
          case 24:
            num1 = (int) num3 * 1610088859 ^ 1851552266;
            continue;
          case 25:
            num1 = (int) num3 * -1425076205 ^ 366397266;
            continue;
          case 26:
label_48:
            num1 = -1687276051;
            continue;
          case 27:
            num1 = -514771703;
            continue;
          case 28:
            num1 = -1335082366;
            continue;
          case 29:
            ch1 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            num1 = (int) num3 * 1455829981 ^ -283847341;
            continue;
          case 30:
            num1 = (int) num3 * -336582746 ^ 1107118141;
            continue;
          case 31:
            int num10;
            num1 = num10 = JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aKey, "") ? -199758373 : (num10 = -1353180860);
            continue;
          case 33:
            num1 = (int) num3 * -757023359 ^ -713800864;
            continue;
          case 34:
            num1 = -94727731;
            continue;
          case 35:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1835973651 ^ 178174259;
            continue;
          case 36:
            int num11 = !(jsonNode1 != (object) null) ? 265855968 : (num11 = 940346367);
            num1 = num11 ^ (int) num3 * 736463124;
            continue;
          case 37:
            num1 = (int) num3 * 1061242218 ^ 93123153;
            continue;
          case 38:
            num1 = -1358467232;
            continue;
          case 39:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, "\b");
            num1 = -1828504437;
            continue;
          case 40:
            num1 = (int) num3 * 244339538 ^ 1585806371;
            continue;
          case 41:
            aKey = "";
            aItem = "";
            num1 = -2115617193;
            continue;
          case 42:
            num1 = (int) num3 * 564886203 ^ -940352708;
            continue;
          case 43:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, "\f");
            num1 = -1828504437;
            continue;
          case 44:
            string str5 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str6 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str5, str6);
            num1 = (int) num3 * -188952385 ^ 1631517864;
            continue;
          case 45:
            int num12;
            num1 = num12 = ch2 != 'f' ? -1199838422 : (num12 = -1899351673);
            continue;
          case 46:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1425603660 ^ -1547672753;
            continue;
          case 47:
            num1 = (int) num3 * 1744109492 ^ 389075159;
            continue;
          case 48:
            num1 = (int) num3 * -1648168482 ^ -1759890964;
            continue;
          case 49:
            num1 = (int) num3 * -1906176780 ^ 230487423;
            continue;
          case 50:
label_45:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, "\t");
            num1 = -2006000965;
            continue;
          case 51:
            num1 = (int) num3 * -1608466298 ^ 2125374612;
            continue;
          case 52:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -993264347 ^ -129752518;
            continue;
          case 53:
            goto label_47;
          case 54:
            int num13;
            num1 = num13 = !flag2 ? -505419922 : (num13 = -439956208);
            continue;
          case 55:
            string str7 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str8 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str7, str8);
            num1 = (int) num3 * -295346614 ^ -846683449;
            continue;
          case 56:
            aKey = "";
            num1 = -96353074;
            continue;
          case 57:
            num1 = (int) num3 * -674405311 ^ 1959221193;
            continue;
          case 58:
            num1 = (int) num3 * -123937281 ^ 1558821906;
            continue;
          case 59:
            num1 = (int) num3 * -237673832 ^ -1620247996;
            continue;
          case 61:
            num1 = (int) num3 * 1216510878 ^ -2014670283;
            continue;
          case 62:
            int num14;
            num1 = num14 = ch3 == ',' ? -111251390 : (num14 = -910969980);
            continue;
          case 63:
            flag3 = flag2;
            num1 = -1521178944;
            continue;
          case 64:
            num1 = (int) num3 * -688333065 ^ 1319028953;
            continue;
          case 65:
            s = JSONNode.\u206D⁪⁯‪⁭⁯‮‎‮‬‪‪⁪⁪‪‎‬‫​‪‏⁯‬⁮⁫‭‫⁬‍‮⁯⁪‎⁬⁫‫‬‌⁫‮‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1023202972 ^ -729493376;
            continue;
          case 66:
            num1 = (int) num3 * 1161879661 ^ 923837939;
            continue;
          case 67:
            jsonNode2 = jsonNode1;
            num1 = -1982794389;
            continue;
          case 68:
            flag8 = num2 < JSONNode.\u200B‍⁫‍⁭‪‎‏⁯‬⁭⁮‭⁯‌⁬‬‌‌‏⁪‍‌⁬‍‌⁫⁫‏⁫‫‬‏‭​⁪⁫⁫‍⁮‮(aJSON);
            num1 = -380926561;
            continue;
          case 69:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1857486472 ^ 1280599238;
            continue;
          case 70:
            int num15 = !(jsonNode1 != (object) null) ? 1562558268 : (num15 = 395622263);
            num1 = num15 ^ (int) num3 * -2005000733;
            continue;
          case 71:
            num1 = (int) num3 * 500117806 ^ 469352037;
            continue;
          case 72:
            aKey = "";
            num1 = (int) num3 * -968985211 ^ 592691516;
            continue;
          case 73:
            aKey = JSONNode.\u200D‫‌‌‫‫‎‭‭‪​‫⁮⁭‬​‪‮⁪‫‫‭‌⁫⁬⁬⁬⁫‬‌⁯‭‮⁪‮⁪⁬⁯‬‭‮(aKey);
            int num16 = !(jsonNode1 is JSONArray) ? -1534398911 : (num16 = -150129319);
            num1 = num16 ^ (int) num3 * -961342690;
            continue;
          case 74:
            num1 = (int) num3 * -1452429220 ^ -1125578822;
            continue;
          case 75:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -803344429 ^ 763067594;
            continue;
          case 76:
            int num17 = !flag4 ? -373069709 : (num17 = -1403123974);
            num1 = num17 ^ (int) num3 * 1627772937;
            continue;
          case 77:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, "\n");
            num1 = -1828504437;
            continue;
          case 78:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1259359747 ^ -1504438462;
            continue;
          case 79:
            int num18 = flag1 ? -1562123456 : (num18 = -1298745401);
            num1 = num18 ^ (int) num3 * -1443942489;
            continue;
          case 80:
            num1 = (int) num3 * -1693399151 ^ -287548474;
            continue;
          case 81:
            string str9 = aItem;
            ch4 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str9, str10);
            num1 = (int) num3 * 1037645538 ^ 615184925;
            continue;
          case 82:
label_98:
            int num19;
            num1 = num19 = !flag2 ? -1813138913 : (num19 = -1925688083);
            continue;
          case 83:
            int num20 = !flag5 ? 251477383 : (num20 = 871751367);
            num1 = num20 ^ (int) num3 * -8866324;
            continue;
          case 84:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 867494361 ^ -9092814;
            continue;
          case 85:
            num2 += 4;
            num1 = (int) num3 * 1997057274 ^ 1780525625;
            continue;
          case 86:
            ch3 = ch1;
            int num21 = ch3 > ',' ? 1603433382 : (num21 = 446659453);
            num1 = num21 ^ (int) num3 * -1384638533;
            continue;
          case 87:
            num1 = (int) num3 * 740067397 ^ 2061516297;
            continue;
          case 88:
            flag2 = false;
            num1 = (int) num3 * -1608899734 ^ -1948517400;
            continue;
          case 89:
            num1 = (int) num3 * -1225072169 ^ 123157127;
            continue;
          case 90:
            int num22;
            num1 = num22 = jsonNodeStack.Count != 0 ? -573068174 : (num22 = -1556463517);
            continue;
          case 91:
            num1 = (int) num3 * -28600820 ^ -646941206;
            continue;
          case 92:
            num1 = (int) num3 * -1937441163 ^ 1342297754;
            continue;
          case 93:
            int num23 = !flag6 ? -1403422340 : (num23 = -439695720);
            num1 = num23 ^ (int) num3 * -1628738400;
            continue;
          case 94:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1870325804 ^ -1617351835;
            continue;
          case 95:
            switch (ch3)
            {
              case '\t':
                goto label_92;
              case '\n':
              case '\r':
                goto label_74;
              case '\v':
              case '\f':
                goto label_82;
              default:
                num1 = (int) num3 * -1852726302 ^ 1220179405;
                continue;
            }
          case 96:
            int num24;
            num1 = num24 = ch3 != '"' ? -413276247 : (num24 = -2101497811);
            continue;
          case 97:
            aKey = aItem;
            num1 = -1849254251;
            continue;
          case 98:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -428356723 ^ -1542029993;
            continue;
          case 99:
            aItem = "";
            num1 = (int) num3 * -1548401286 ^ 1612588040;
            continue;
          case 100:
            string str11 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str12 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str11, str12);
            num1 = (int) num3 * 512444353 ^ -427651823;
            continue;
          case 101:
            int num25;
            num1 = num25 = ch3 <= ']' ? -634834713 : (num25 = -412110250);
            continue;
          case 102:
            num1 = (int) num3 * -1903981003 ^ 2116236120;
            continue;
          case 103:
            int num26;
            num1 = num26 = JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aItem, "") ? -510448888 : (num26 = -94727731);
            continue;
          case 104:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -927314823;
            continue;
          case 105:
            flag6 = JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aKey, "");
            num1 = -1863164550;
            continue;
          case 106:
            num1 = (int) num3 * -1824646913 ^ -1355231234;
            continue;
          case 107:
label_116:
            ++num2;
            num1 = -1617619087;
            continue;
          case 108:
            int num27 = !JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aItem, "") ? 295677145 : (num27 = 895438753);
            num1 = num27 ^ (int) num3 * -1721766416;
            continue;
          case 109:
label_24:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, "\r");
            num1 = -1748906108;
            continue;
          case 111:
            int num28;
            num1 = num28 = !JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aKey, "") ? -1297388387 : (num28 = -1502031315);
            continue;
          case 112:
            string str13 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str14 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str13, str14);
            num1 = (int) num3 * 2015042784 ^ -1929893580;
            continue;
          case 113:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1842740542 ^ -1161792726;
            continue;
          case 114:
            num1 = -2050350224;
            continue;
          case 115:
            num1 = (int) num3 * -375953594 ^ 533556962;
            continue;
          case 116:
            int num29 = flag2 ? -1530582896 : (num29 = -1000993085);
            num1 = num29 ^ (int) num3 * -1879697769;
            continue;
          case 117:
            num1 = (int) num3 * -842021862 ^ -1397261809;
            continue;
          case 118:
            switch (ch2)
            {
              case 'r':
                goto label_24;
              case 's':
                goto label_51;
              case 't':
                goto label_45;
              case 'u':
                goto label_48;
              default:
                num1 = -1329237019;
                continue;
            }
          case 119:
            int num30 = !flag2 ? -316417132 : (num30 = -292992310);
            num1 = num30 ^ (int) num3 * 1489585578;
            continue;
          case 120:
            int num31;
            num1 = num31 = ch3 == '}' ? -1677931498 : (num31 = -686650750);
            continue;
          case 121:
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1388606223 ^ -1761561074;
            continue;
          case 122:
            num1 = (int) num3 * -192794147 ^ 96149444;
            continue;
          case 123:
            num1 = (int) num3 * -610646455 ^ -1162016581;
            continue;
          case 124:
            goto label_56;
          case 125:
            int num32;
            num1 = num32 = ch2 == 'n' ? -1053624494 : (num32 = -1798491891);
            continue;
          case 126:
            ch2 = ch6;
            int num33 = ch2 > 'f' ? 306099377 : (num33 = 1325989334);
            num1 = num33 ^ (int) num3 * 1034037843;
            continue;
          case 128:
            int num34 = !flag3 ? -1410091690 : (num34 = -1275659472);
            num1 = num34 ^ (int) num3 * 901186717;
            continue;
          case 129:
label_82:
            string str15 = aItem;
            ch4 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            string str16 = ch4.ToString();
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(str15, str16);
            num1 = -90917406;
            continue;
          case 130:
            int num35 = jsonNode1 is JSONArray ? 1962143306 : (num35 = 225749893);
            num1 = num35 ^ (int) num3 * -930592536;
            continue;
          case 131:
            int num36;
            num1 = num36 = ch3 == '{' ? -1738260349 : (num36 = -1485995229);
            continue;
          case 132:
            flag5 = JSONNode.\u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮(aKey, "");
            num1 = -1914157935;
            continue;
          case 133:
            int num37 = !flag8 ? -840278708 : (num37 = -357268946);
            num1 = num37 ^ (int) num3 * 387380479;
            continue;
          case 134:
            num1 = (int) num3 * 1775470589 ^ 1956298540;
            continue;
          case 135:
            num1 = (int) num3 * 1645124616 ^ 1485425247;
            continue;
          case 136:
label_51:
            aItem = JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮(aItem, ch5.ToString());
            num1 = -1828504437;
            continue;
          case 137:
            int num38;
            num1 = num38 = !flag2 ? -405842124 : (num38 = -1113008900);
            continue;
          case 138:
            ch5 = JSONNode.\u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮(aJSON, num2);
            ch6 = ch5;
            num1 = (int) num3 * -948472588 ^ 168746431;
            continue;
          case 139:
            flag7 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 2021494236 ^ 452477397;
            continue;
          case 140:
            goto label_1;
          case 142:
            int num39 = ch3 > ' ' ? -491279441 : (num39 = -344803717);
            num1 = num39 ^ (int) num3 * 1608282012;
            continue;
          default:
            goto label_143;
        }
      }
label_47:
      throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("JSON Parse: Too many closing brackets");
label_56:
      throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("JSON Parse: Quotation marks seems to be messed up.");
label_143:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1630261432;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 863876137)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u200F‎‮‭⁭⁪‎‬‬‏‎‌‎‮‪‎‌⁮⁯‭⁪⁫‭⁭‫‭‎‌‭⁭‮‬⁭⁮‍​‎‮‌‎‮(aData);
            num1 = (int) num2 * -739220060 ^ -802695105;
            continue;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1608172097 ^ 1138833964;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206A⁪‮‫‌⁪‏​⁫​​‎​‌⁫‍‮⁮⁭‮‬‎​‌‌‭‍⁮⁮⁬‬‮‭⁮‬⁯‎⁪‫⁪‮(JSONNode.\u206F⁬‪‫​‌‏‫‫‍‪⁮⁫‎‮‪‪⁭​‌⁮‭‏‌‪⁬‫‪‌⁫‍‮‬⁬‪‏‪‪⁬‏‮((FileSystemInfo) JSONNode.\u200C‮‮‫‬​‌⁯‬⁫‭‬⁫⁭⁮⁬⁯‏‌‎‫⁯‭⁪​⁬‬‎‎‎‬⁮⁯⁮‍‬‮‫‬⁭‮(JSONNode.\u202A‎‪‏‬‪‍‎‮‮‍⁬‎‮⁫‫⁫⁫‏‮⁪‭‍⁫⁮⁪‎⁭‌‫‎⁯‭‮⁭‬‍‌‬⁫‮(aFileName))));
      FileStream aData = JSONNode.\u200E‬⁫‍‪‪‌⁫‪‌‌‌​‮​⁬‫‌‭⁬‪‫⁯​‭⁭‫⁮‫⁪⁪‎‫‌⁫‪‍‎⁯⁮‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 653582592;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1851549293)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u206C⁫⁮‬‫⁫‫⁯⁬⁪⁭‏⁯⁭⁪‫⁯⁭‏‪⁯‪‭‪‮‫‬‏‮⁫‏‍⁮‌‌‍‎⁯‮‮((IDisposable) aData);
                num1 = (int) num2 * 123526283 ^ -777471876;
                continue;
              case 2:
                num1 = (int) num2 * -1251036635 ^ 1118954160;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200C‫‏⁫⁭‍‍⁯‌​‫‫⁭⁬‬‍‌‭‍‫‮⁭⁭‮⁯⁯‭⁭​⁮⁯‫‪‪⁬⁪⁭⁮​‭‮();
      string base64;
      try
      {
label_2:
        int num1 = 438422757;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1946466704)) % 5U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1707811780 ^ 1900175234;
              continue;
            case 2:
              num1 = (int) num2 * -326242305 ^ 141634237;
              continue;
            case 3:
              JSONNode.\u206C⁮‎‎‮⁬‪‎‏‪‮‫⁪‬‎‪‮​‎⁯‪‮‏‎‏‭⁬⁪‪⁯⁪⁭‬‏⁭⁮‍‪‫⁬‮((Stream) aData, 0L);
              base64 = JSONNode.\u202E‮⁯‪⁭‎⁪‭‮‍‍‏‏⁯‮‪​‮‏‎‫⁮‎‏‍​‭‎‍‪‪⁭‍‮‭‮⁬⁮​‫‮(JSONNode.\u200D‍⁯⁭‭‍‍‮‫⁪⁫‮‬⁬‪⁬‬⁫⁫⁭⁬‏⁪‫⁪‭‏‌‌⁯‭‭‎​⁫‍‫‏‬‮(aData));
              num1 = (int) num2 * -1108984525 ^ 1453723833;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 1969661902;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1946466704)) % 4U)
            {
              case 0:
                goto label_8;
              case 2:
                JSONNode.\u206C⁫⁮‬‫⁫‫⁯⁬⁪⁭‏⁯⁭⁪‫⁯⁭‏‪⁯‪‭‪‮‫‬‏‮⁫‏‍⁮‌‌‍‎⁯‮‮((IDisposable) aData);
                num3 = (int) num4 * -979233987 ^ 1609593221;
                continue;
              case 3:
                num3 = (int) num4 * 1497913996 ^ 514204853;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200E⁪⁭‪‌⁫‍‮⁬‌‮​‎⁪‬‎‌‬‏⁬‪‎‭‭‎‬⁭⁪​⁯​⁮‬‎‎⁪⁯⁬⁮‎‮(aReader);
      JSONBinaryTag jsonBinaryTag2 = jsonBinaryTag1;
label_1:
      int num1 = -865913553;
      int num2;
      JSONArray jsonArray;
      JSONNode jsonNode;
      JSONClass jsonClass;
      int num3;
      int num4;
      int num5;
      bool flag1;
      string aKey;
      JSONBinaryTag jsonBinaryTag3;
      bool flag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1352571055)) % 38U)
        {
          case 0:
            num1 = (int) num6 * -258025303 ^ -422543554;
            continue;
          case 1:
            num1 = (int) num6 * 994639205 ^ -255044057;
            continue;
          case 2:
            aKey = JSONNode.\u202A⁬‮‬⁭‪‏⁪‌‬‬‌‪⁮‮‪⁮⁭⁪‮⁬⁭‫‮⁫⁪⁯‮‭‎‮‪⁮⁫⁭​‌‍‎⁯‮(aReader);
            num1 = (int) num6 * -161955824 ^ -46829967;
            continue;
          case 3:
            num1 = (int) num6 * -248914342 ^ -701423827;
            continue;
          case 4:
            int num7 = flag2 ? -1525948617 : (num7 = -1650060594);
            num1 = num7 ^ (int) num6 * 1134677999;
            continue;
          case 5:
label_17:
            num1 = -1892629762;
            continue;
          case 6:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -893167813;
            continue;
          case 7:
            flag2 = num3 < num2;
            num1 = -318548547;
            continue;
          case 8:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A⁬‮‬⁭‪‏⁪‌‬‬‌‪⁮‮‪⁮⁭⁪‮⁬⁭‫‮⁫⁪⁯‮‭‎‮‪⁮⁫⁭​‌‍‎⁯‮(aReader));
            num1 = (int) num6 * -589514674 ^ 172955574;
            continue;
          case 9:
            num2 = JSONNode.\u202E‭⁬⁯⁭‬⁫‫‭‍​⁭‌⁭⁮‏⁬⁪‬‭‎‬⁭⁮‎‪⁫⁯‪‏⁬‬​​‫‬‪‮⁫‮‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * 931664007 ^ 2015896894;
            continue;
          case 10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‌‮⁮⁭⁫‬‫‏‍‭⁯‏⁬⁯⁮‮⁮⁯‎​‏⁫⁪‬⁭⁭‍‏‪‌‭⁭‮‎⁫​‫⁭‪‮(aReader));
            num1 = (int) num6 * 584219667 ^ -1486827781;
            continue;
          case 11:
            num1 = -1399026651;
            continue;
          case 12:
            int num8 = !flag1 ? -1957586328 : (num8 = -309154484);
            num1 = num8 ^ (int) num6 * -1298407117;
            continue;
          case 13:
label_30:
            num1 = -283378003;
            continue;
          case 14:
label_9:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E‭⁬⁯⁭‬⁫‫‭‍​⁭‌⁭⁮‏⁬⁪‬‭‎‬⁭⁮‎‪⁫⁯‪‏⁬‬​​‫‬‪‮⁫‮‮(aReader));
            num1 = -101295980;
            continue;
          case 15:
            goto label_1;
          case 16:
            num1 = (int) num6 * 2097544413 ^ 756212304;
            continue;
          case 17:
            num1 = -1998902613;
            continue;
          case 18:
            goto label_3;
          case 19:
label_5:
            num1 = -310713819;
            continue;
          case 20:
            num3 = 0;
            num1 = (int) num6 * 1142411797 ^ 494136315;
            continue;
          case 21:
label_14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E​‎‍‌‏⁮​⁭⁪‪‮⁭⁯‎⁪‌‎‍⁯‌⁬‏‭⁮‭⁯‎‎‬‌‎⁮‬‪‏⁭‭‫‫‮(aReader));
            num1 = -1804358123;
            continue;
          case 22:
            ++num3;
            num1 = (int) num6 * 1399694817 ^ 1472701120;
            continue;
          case 23:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -700376646 ^ 207486186;
            continue;
          case 24:
            num1 = (int) num6 * -1705635899 ^ -303987264;
            continue;
          case 25:
            flag1 = num5 < num4;
            num1 = -585808937;
            continue;
          case 26:
            num1 = (int) num6 * 1919584266 ^ 66222240;
            continue;
          case 27:
            jsonClass = new JSONClass();
            num5 = 0;
            num1 = (int) num6 * 256623448 ^ -298231620;
            continue;
          case 28:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 150564217 ^ 370167161;
            continue;
          case 29:
label_16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D​‌‭‌‫‬‏⁬‮​​‫‬‭⁭‪⁫‪​⁪‬⁫‭‬⁭‏​⁬⁭‭‬‌‌‎‍⁯‬⁮⁫‮(aReader));
            num1 = -101295980;
            continue;
          case 30:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1643420584 ^ 96903088;
            continue;
          case 32:
            ++num5;
            num1 = (int) num6 * 279464992 ^ -449398796;
            continue;
          case 33:
label_15:
            num4 = JSONNode.\u202E‭⁬⁯⁭‬⁫‫‭‍​⁭‌⁭⁮‏⁬⁪‬‭‎‬⁭⁮‎‪⁫⁯‪‏⁬‬​​‫‬‪‮⁫‮‮(aReader);
            num1 = -985529998;
            continue;
          case 34:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_17;
              case JSONBinaryTag.Class:
                goto label_15;
              case JSONBinaryTag.Value:
                goto label_30;
              case JSONBinaryTag.IntValue:
                goto label_9;
              case JSONBinaryTag.DoubleValue:
                goto label_16;
              case JSONBinaryTag.BoolValue:
                goto label_14;
              case JSONBinaryTag.FloatValue:
                goto label_5;
              default:
                num1 = (int) num6 * 309410960 ^ 1424038611;
                continue;
            }
          case 35:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1669384109 ^ -1501124822;
            continue;
          case 36:
            num1 = (int) num6 * -267761216 ^ 1386108436;
            continue;
          case 37:
            num1 = (int) num6 * -351871181 ^ 1209340105;
            continue;
          default:
            goto label_40;
        }
      }
label_3:
      throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮(JSONNode.\u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202B‪‌‮‭​‫‍⁬⁮‍‌⁭⁫⁬‬​‭⁫⁪‫⁫‭⁫⁯‎⁮‏⁪⁫⁪‍‎⁫‏⁯​⁭‏‌‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -63521343;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1334655800)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1947222436 ^ 1129591397;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1100305404;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1334655800)) % 3U)
            {
              case 1:
                JSONNode.\u206C⁫⁮‬‫⁫‫⁯⁬⁪⁭‏⁯⁭⁪‫⁯⁭‏‪⁯‪‭‪‮‫‬‏‮⁫‏‍⁮‌‌‍‎⁯‮‮((IDisposable) aReader);
                num3 = (int) num4 * -228135291 ^ 521075904;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200B⁫‎⁭‫⁯⁭‮‮‎‌⁭⁯‬⁫⁬⁫⁯⁬‮​‍‎‏⁭‪⁭‭‎‍‮‎‪⁫​​‪‮⁯⁮‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 316552382;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2138672193)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -63960923 ^ -1701678412;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 369470782;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 2138672193)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u206C⁫⁮‬‫⁫‫⁯⁬⁪⁭‏⁯⁭⁪‫⁯⁭‏‪⁯‪‭‪‮‫‬‏‮⁫‏‍⁮‌‌‍‎⁯‮‮((IDisposable) aData);
                num3 = (int) num4 * 1898010468 ^ -1247378413;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u200C‪‭⁬‎‌​⁪‏‌‎‍⁭⁬‬‌‍‍‎‫⁭‪‫‏‏‭⁪‎​‬⁫⁯‭⁮⁭‎‎‏‮‪‮(aBase64);
label_1:
      int num1 = 582065666;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 794446343)) % 7U)
        {
          case 0:
            JSONNode.\u206C⁮‎‎‮⁬‪‎‏‪‮‫⁪‬‎‪‮​‎⁯‪‮‏‎‏‭⁬⁪‪⁯⁪⁭‬‏⁭⁮‍‪‫⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * -803864638 ^ 899597993;
            continue;
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 52148309 ^ 1947235800;
            continue;
          case 2:
            goto label_1;
          case 4:
            num1 = (int) num2 * 962263077 ^ 107151172;
            continue;
          case 5:
            num1 = (int) num2 * 1675910972 ^ 596430443;
            continue;
          case 6:
            aData = JSONNode.\u200F‪‏⁯⁮‭‎⁫‏⁫‪⁯⁭⁮‭​‌‏⁮⁭⁪‪‏⁪⁬‬‌‏​​‏‎‏​‭⁯⁯‏‫⁫‮(numArray);
            num1 = (int) num2 * -36817396 ^ -693127785;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u202C‌‎‭⁫⁭⁬⁭‪‮‮⁯⁬⁪⁭‮‭‫‬‌⁬‬‌​‪‫‮⁯‌‪⁯‎‍‬​‫‭‍‫‎‮() => CultureInfo.InvariantCulture;

    static bool \u200D‌‫‫‏‬‭​‬‫‪‎⁯​⁬⁬‫‏‮‬‌⁬⁫​⁫‮‏‫⁮‭‏‌⁮‭‭‎⁯⁬‭‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206B⁬⁮⁪‭⁯‫‏‪‭‬‮‍‮⁭‭‎⁮‭​‬‪⁬‏⁭⁮⁪‭‎⁮​⁯⁪‬‌⁫⁬⁫⁪⁭‮() => base.GetHashCode();

    static char \u200F⁫‫‌‮‏‍‮‮⁯‎‭⁮‏‏⁮⁪⁯⁮‬‬‭⁯⁬⁬​⁯⁯‎⁭‮‬‫‭⁬‏‭‌‭⁮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206B‮⁪‮⁫‫‌‮⁬‌‏⁪‪⁬‬‪⁫⁪⁬‏‎‬⁬⁭‍⁯⁯⁪⁭⁭‭​‭‮‏⁯‌‎‍‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200B‍⁫‍⁭‪‎‏⁯‬⁭⁮‭⁯‌⁬‬‌‌‏⁪‍‌⁬‍‌⁫⁫‏⁫‫‬‏‭​⁪⁫⁫‍⁮‮([In] string obj0) => obj0.Length;

    static string \u200D‫‌‌‫‫‎‭‭‪​‫⁮⁭‬​‪‮⁪‫‫‭‌⁫⁬⁬⁬⁫‬‌⁯‭‮⁪‮⁪⁬⁯‬‭‮([In] string obj0) => obj0.Trim();

    static bool \u202A‏⁫‏‌⁪⁬⁮⁭⁭⁮‍​‬⁫​⁭⁬‌⁯‭‫⁪​⁬⁮‪⁭⁫‍‏‮‮⁭⁬‫‎⁮‏‬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202A‍​⁬‫​⁯⁫‬‬⁬⁫‭‮‪⁯⁯⁯‍⁬‏‭⁪⁮‫‌⁫⁫⁮‮‌⁫‭​⁪‬⁬‍⁮‍‮([In] string obj0) => new Exception(obj0);

    static string \u206D⁪⁯‪⁭⁯‮‎‮‬‪‪⁪⁪‪‎‬‫​‪‏⁯‬⁮⁫‭‫⁬‍‮⁯⁪‎⁬⁫‫‬‌⁫‮‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200F‎‮‭⁭⁪‎‬‬‏‎‌‎‮‪‎‌⁮⁯‭⁪⁫‭⁭‫‭‎‌‭⁭‮‬⁭⁮‍​‎‮‌‎‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202A‎‪‏‬‪‍‎‮‮‍⁬‎‮⁫‫⁫⁫‏‮⁪‭‍⁫⁮⁪‎⁭‌‫‎⁯‭‮⁭‬‍‌‬⁫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C‮‮‫‬​‌⁯‬⁫‭‬⁫⁭⁮⁬⁯‏‌‎‫⁯‭⁪​⁬‬‎‎‎‬⁮⁯⁮‍‬‮‫‬⁭‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206F⁬‪‫​‌‏‫‫‍‪⁮⁫‎‮‪‪⁭​‌⁮‭‏‌‪⁬‫‪‌⁫‍‮‬⁬‪‏‪‪⁬‏‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206A⁪‮‫‌⁪‏​⁫​​‎​‌⁫‍‮⁮⁭‮‬‎​‌‌‭‍⁮⁮⁬‬‮‭⁮‬⁯‎⁪‫⁪‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200E‬⁫‍‪‪‌⁫‪‌‌‌​‮​⁬‫‌‭⁬‪‫⁯​‭⁭‫⁮‫⁪⁪‎‫‌⁫‪‍‎⁯⁮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206C⁫⁮‬‫⁫‫⁯⁬⁪⁭‏⁯⁭⁪‫⁯⁭‏‪⁯‪‭‪‮‫‬‏‮⁫‏‍⁮‌‌‍‎⁯‮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200C‫‏⁫⁭‍‍⁯‌​‫‫⁭⁬‬‍‌‭‍‫‮⁭⁭‮⁯⁯‭⁭​⁮⁯‫‪‪⁬⁪⁭⁮​‭‮() => new MemoryStream();

    static void \u206C⁮‎‎‮⁬‪‎‏‪‮‫⁪‬‎‪‮​‎⁯‪‮‏‎‏‭⁬⁪‪⁯⁪⁭‬‏⁭⁮‍‪‫⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200D‍⁯⁭‭‍‍‮‫⁪⁫‮‬⁬‪⁬‬⁫⁫⁭⁬‏⁪‫⁪‭‏‌‌⁯‭‭‎​⁫‍‫‏‬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202E‮⁯‪⁭‎⁪‭‮‍‍‏‏⁯‮‪​‮‏‎‫⁮‎‏‍​‭‎‍‪‪⁭‍‮‭‮⁬⁮​‫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200E⁪⁭‪‌⁫‍‮⁬‌‮​‎⁪‬‎‌‬‏⁬‪‎‭‭‎‬⁭⁪​⁯​⁮‬‎‎⁪⁯⁬⁮‎‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202E‭⁬⁯⁭‬⁫‫‭‍​⁭‌⁭⁮‏⁬⁪‬‭‎‬⁭⁮‎‪⁫⁯‪‏⁬‬​​‫‬‪‮⁫‮‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202A⁬‮‬⁭‪‏⁪‌‬‬‌‪⁮‮‪⁮⁭⁪‮⁬⁭‫‮⁫⁪⁯‮‭‎‮‪⁮⁫⁭​‌‍‎⁯‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200D​‌‭‌‫‬‏⁬‮​​‫‬‭⁭‪⁫‪​⁪‬⁫‭‬⁭‏​⁬⁭‭‬‌‌‎‍⁯‬⁮⁫‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206E​‎‍‌‏⁮​⁭⁪‪‮⁭⁯‎⁪‌‎‍⁯‌⁬‏‭⁮‭⁯‎‎‬‌‎⁮‬‪‏⁭‭‫‫‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200D‌‮⁮⁭⁫‬‫‏‍‭⁯‏⁬⁯⁮‮⁮⁯‎​‏⁫⁪‬⁭⁭‍‏‪‌‭⁭‮‎⁫​‫⁭‪‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202B‪‌‮‭​‫‍⁬⁮‍‌⁭⁫⁬‬​‭⁫⁪‫⁫‭⁫⁯‎⁮‏⁪⁫⁪‍‎⁫‏⁯​⁭‏‌‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200B⁫‎⁭‫⁯⁭‮‮‎‌⁭⁯‬⁫⁬⁫⁯⁬‮​‍‎‏⁭‪⁭‭‎‍‮‎‪⁫​​‪‮⁯⁮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200C‪‭⁬‎‌​⁪‏‌‎‍⁭⁬‬‌‍‍‎‫⁭‪‫‏‏‭⁪‎​‬⁫⁯‭⁮⁭‎‎‏‮‪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200F‪‏⁯⁮‭‎⁫‏⁫‪⁯⁭⁮‭​‌‏⁮⁭⁪‪‏⁪⁬‬‌‏​​‏‎‏​‭⁯⁯‏‫⁫‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
