// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UI.FeedbackControl
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using My;
using SmartAssembly.Attributes;
using SmartAssembly.Shared;
using SmartAssembly.Zip;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Threading;
using System.Windows.Forms;
using Ⴈ;

namespace SmartAssembly.SmartExceptionsCore.UI
{
  [DesignerCategory("Code")]
  public class FeedbackControl : Control
  {
    private Ⴈ.Ⴐ.Ⴜ Ⴐ;

    [Browsable(true)]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
    public override string Text
    {
      get
      {
        try
        {
          return base.Text;
        }
        catch (Exception ex)
        {
          int num;
          __Boxed<int> o1 = (ValueType) num;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
      set
      {
        try
        {
          base.Text = value;
          FatalExceptionEventArgs.Ⴅ((Control) this, 295, 328);
        }
        catch (Exception ex)
        {
          string o2 = value;
          StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
          throw;
        }
      }
    }

    public void Init()
    {
      int num;
      Image image;
      bool flag;
      string empty;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 2:
              num = 1;
              continue;
            case 1:
              goto label_5;
            case 4:
              goto label_6;
            case 5:
              flag = false;
              this.Ⴐ.Ⴄ = flag;
              empty = string.Empty;
              this.Ⴐ.Ⴀ = empty;
              goto case 0;
            default:
              ႷႼ.Ⴈ(this.Ⴐ.Ⴍ, false, 661, 717);
              image = (Image) null;
              this.Ⴐ.Ⴃ = image;
              num = 5;
              continue;
          }
        }
label_5:
        FatalExceptionEventArgs.Ⴅ((Control) this, 441, 470);
label_6:
        this.Height = 16;
      }
      catch (Exception ex)
      {
        Image o1 = image;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        string o3 = empty;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this);
        throw;
      }
    }

    public void Start()
    {
      int num;
      Image image;
      bool flag;
      try
      {
        num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 2:
              goto label_4;
            case 1:
              num = 0;
              continue;
            default:
              ႷႼ.Ⴈ(this.Ⴐ.Ⴍ, true, 372, 300);
              image = (Image) Ⴈ.Ⴐ.Ⴄ(Ⴈ.ႷႭ.ႥႭ(490613331, 8));
              this.Ⴐ.Ⴃ = image;
              goto case 1;
          }
        }
label_4:
        flag = true;
        this.Ⴐ.Ⴄ = flag;
        this.Refresh();
      }
      catch (Exception ex)
      {
        Image o1 = image;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) this);
        throw;
      }
    }

    public void Stop()
    {
      try
      {
        this.Stop(string.Empty);
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    public void Stop(string errorMessage)
    {
      int num;
      string str;
      Image image;
      bool flag1;
      bool flag2;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              flag2 = true;
              this.Ⴐ.Ⴄ = flag2;
              num = AppPathFinder.Ⴐ(errorMessage, 236, 219) <= 0 ? 5 : 2;
              continue;
            case 1:
              ႷႼ.Ⴈ(this.Ⴐ.Ⴍ, false, 633, 545);
              goto case 6;
            case 2:
            case 4:
              goto label_7;
            case 5:
              goto label_8;
            case 6:
              num = 7;
              continue;
            case 7:
              image = (Image) Ⴈ.Ⴐ.Ⴄ(AppPathFinder.Ⴐ(errorMessage, 419, 404) > 0 ? SimpleZip.Ⴓ(661402961, 3) : Ⴈ.Ⴀ.Ⴐ(1468303588, 6));
              this.Ⴐ.Ⴃ = image;
              flag1 = true;
              this.Ⴐ.Ⴈ = flag1;
              num = 0;
              continue;
            default:
              str = errorMessage;
              this.Ⴐ.Ⴀ = str;
              goto case 1;
          }
        }
label_7:
        this.Height = 100;
label_8:
        this.Refresh();
      }
      catch (Exception ex)
      {
        string o1 = str;
        Image o2 = image;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) flag1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) flag2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num;
        string o7 = errorMessage;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) this, (object) o7);
        throw;
      }
    }

    protected override void OnResize(EventArgs e)
    {
      int num;
      try
      {
        num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 3;
              continue;
            case 2:
            case 3:
              goto label_4;
            case 4:
              goto label_5;
            default:
              this.Ⴐ.Ⴅ.SetBounds(SmartAssembly.License.License.Ⴈ(22f * this.Ⴐ.Ⴗ, 924, 904), SmartAssembly.License.License.Ⴈ(this.Ⴐ.Ⴐ, 345, 333), ႷႼ.Ⴐ((Control) this, 100, 62) - SmartAssembly.License.License.Ⴈ(22f * this.Ⴐ.Ⴗ, 753, 741), this.Height - Convert.ToInt32(this.Ⴐ.Ⴐ));
              goto case 0;
          }
        }
label_5:
        return;
label_4:
        base.OnResize(e);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        EventArgs o3 = e;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    protected override void ScaleCore(float dx, float dy)
    {
      int num1;
      float num2;
      float num3;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_5;
            case 3:
              num1 = 4;
              continue;
            case 4:
              goto label_4;
            default:
              num2 = dx;
              this.Ⴐ.Ⴗ = num2;
              num3 = dy;
              this.Ⴐ.Ⴐ = num3;
              goto case 3;
          }
        }
label_4:
        base.ScaleCore(dx, dy);
label_5:
        this.OnResize(EventArgs.Empty);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<float> o1 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<float> o2 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<float> o5 = (ValueType) dx;
        // ISSUE: variable of a boxed type
        __Boxed<float> o6 = (ValueType) dy;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5, (object) o6);
        throw;
      }
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      int num1;
      Image image;
      bool flag;
      try
      {
        num1 = 6;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_11;
            case 1:
            case 5:
              if (this.Ⴐ.Ⴄ)
              {
                num1 = 0;
                continue;
              }
              goto label_12;
            case 2:
            case 10:
              image = (Image) Ⴈ.Ⴐ.Ⴄ(Ⴈ.ႷႭ.ႥႭ(490613340, 7));
              this.Ⴐ.Ⴃ = image;
              num1 = 9;
              continue;
            case 3:
              num1 = !this.Ⴐ.Ⴈ ? 5 : 7;
              continue;
            case 4:
              num1 = this.Ⴐ.Ⴃ == null ? 5 : 3;
              continue;
            case 7:
              StackFrameHelper.Ⴀ(FeedbackControl.Ⴜ(e, 806, 895), this.Ⴐ.Ⴃ, new Rectangle(0, 0, SmartAssembly.License.License.Ⴈ(16f * this.Ⴐ.Ⴗ, 74, 94), SmartAssembly.License.License.Ⴈ(16f * this.Ⴐ.Ⴐ, 889, 877)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel, 118, 52);
              goto case 1;
            case 8:
              num1 = !this.DesignMode ? 4 : 10;
              continue;
            case 9:
              flag = true;
              this.Ⴐ.Ⴄ = flag;
              num1 = 4;
              continue;
            default:
              base.OnPaint(e);
              goto case 8;
          }
        }
label_11:
        this.Ⴐ.Ⴅ.Text = AppPathFinder.Ⴐ(this.Ⴐ.Ⴀ, 268, 315) > 0 ? base.Text + Ⴈ.Ⴀ.Ⴐ(1468304372, 1) + this.Ⴐ.Ⴀ + MyComputer.Ⴗ(834543079, 6) : base.Text;
        return;
label_12:
        this.Ⴐ.Ⴅ.Text = string.Empty;
      }
      catch (Exception ex)
      {
        Image o1 = image;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num2;
        PaintEventArgs o6 = e;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    public FeedbackControl()
    {
      Label label = new Label();
      this.Ⴐ.Ⴅ = label;
      System.Windows.Forms.Timer timer = new System.Windows.Forms.Timer();
      this.Ⴐ.Ⴍ = timer;
      bool flag = true;
      this.Ⴐ.Ⴈ = flag;
      string empty = string.Empty;
      this.Ⴐ.Ⴀ = empty;
      float num1 = 1f;
      this.Ⴐ.Ⴗ = num1;
      float num2 = 1f;
      this.Ⴐ.Ⴐ = num2;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      try
      {
        Ⴈ.Ⴜ.Ⴀ(this.Ⴐ.Ⴍ, 250, 326, 292);
        DoNotObfuscateTypeAttribute.Ⴓ(this.Ⴐ.Ⴍ, new EventHandler(this.Ⴅ), 145, 209);
        FeedbackControl.ႨႥ(this.Ⴐ.Ⴅ, FlatStyle.System, 852, 876);
        PoweredByAttribute1.Ⴅ((Control) this, 253, 199).Add((Control) this.Ⴐ.Ⴅ);
        this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
        this.TabStop = false;
      }
      catch (Exception ex)
      {
        Label o1 = label;
        System.Windows.Forms.Timer o2 = timer;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) flag;
        string o4 = empty;
        // ISSUE: variable of a boxed type
        __Boxed<float> o5 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<float> o6 = (ValueType) num2;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this);
        throw;
      }
    }

    public FeedbackControl(string text)
      : this()
    {
      try
      {
        base.Text = Ⴈ.ႷႭ.ႰႨ(MyComputer.Ⴗ(834542728, 6), text, 318, 268);
      }
      catch (Exception ex)
      {
        string o2 = text;
        StackFrameHelper.CreateException2(ex, (object) this, (object) o2);
        throw;
      }
    }

    protected override void Dispose(bool disposing)
    {
      int num;
      try
      {
        num = 7;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 4:
              goto label_4;
            case 1:
            case 2:
              goto label_6;
            case 5:
              goto label_5;
            case 6:
              num = this.Ⴐ.Ⴃ == null ? 5 : 0;
              continue;
            default:
              num = !disposing ? 1 : 6;
              continue;
          }
        }
label_4:
        FatalExceptionEventArgs.Ⴈ(this.Ⴐ.Ⴃ, 729, 666);
label_5:
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴍ((Component) this.Ⴐ.Ⴍ, 315, 309);
label_6:
        base.Dispose(disposing);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o3 = (ValueType) disposing;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) this, (object) o3);
        throw;
      }
    }

    private void Ⴅ(object Ⴐ, EventArgs Ⴈ)
    {
      int num;
      bool flag;
      try
      {
        num = 0;
        while (true)
        {
          switch (num)
          {
            case 1:
            case 3:
              goto label_3;
            case 2:
              goto label_4;
            case 4:
              goto label_6;
            default:
              flag = !this.Ⴐ.Ⴈ;
              this.Ⴐ.Ⴈ = flag;
              num = 3;
              continue;
          }
        }
label_4:
        return;
label_6:
        return;
label_3:
        FatalExceptionEventArgs.Ⴅ((Control) this, 287, 368);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) flag;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        object o4 = Ⴐ;
        EventArgs o5 = Ⴈ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) this, o4, (object) o5);
        throw;
      }
    }

    static FeedbackControl()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴓ(
      [In] SerializationInfo obj0,
      [In] string obj1,
      [In] object obj2,
      [In] System.Type obj3,
      [In] int obj4,
      [In] int obj5)
    {
      int num1;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 4:
              num1 = 0;
              continue;
            case 3:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj5 ^ obj4)
              {
                case 77:
                  num2 = 5;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.AddValue(obj1, obj2, obj3);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        SerializationInfo o3 = obj0;
        string o4 = obj1;
        object o5 = obj2;
        System.Type o6 = obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o8 = (ValueType) obj5;
        StackFrameHelper.CreateException8(ex, (object) o1, (object) o2, (object) o3, (object) o4, o5, (object) o6, (object) o7, (object) o8);
        throw;
      }
    }

    internal static Graphics Ⴜ([In] PaintEventArgs obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 89:
            num2 = 5;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = 1;
              continue;
            case 3:
            case 5:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (FeedbackControl.Ⴜ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.Graphics;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        PaintEventArgs o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႨႥ([In] Label obj0, [In] FlatStyle obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 2:
            case 4:
              goto label_7;
            case 3:
              num1 = 5;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 56:
                  num2 = 1;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.FlatStyle = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Label o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<FlatStyle> o4 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void ႨႨ([In] FileDialog obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_7;
            case 1:
              goto label_8;
            case 2:
            case 4:
              num1 = 3;
              continue;
            case 5:
              goto label_10;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 90:
                  num2 = 0;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_10:
        return;
label_7:
        obj0.Filter = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        FileDialog o3 = obj0;
        string o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void ႨႷ([In] WaitHandle obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 2:
            case 5:
              goto label_7;
            case 3:
              goto label_8;
            case 4:
              goto label_10;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 92:
                  num2 = 2;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_10:
        return;
label_7:
        obj0.Close();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        WaitHandle o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴐ
    {
      internal System.Type Ⴓ;
      internal object Ⴃ;
      internal bool Ⴄ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴄ
    {
      internal Exception Ⴓ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct ႨႰ
    {
      internal CultureInfo Ⴃ;
      internal Mutex Ⴗ;
    }
  }
}
