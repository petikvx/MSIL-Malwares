// Decompiled with JetBrains decompiler
// Type: 352212352209.373967650017
// Assembly: 422928051450, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-22363a93cfc60354c16166d43ba99151a041696e2a77361bd34b49818dd210d2.exe

using \u003352212352209;
using System.Text;

namespace \u003352212352209
{
  public class \u003373967650017
  {
    public static string \u003678625934332(string _param0)
    {
      if (_param0.EndsWith("/>"))
        return _param0.Substring(0, _param0.Length - 2) + ">";
      int length = _param0.LastIndexOf("</");
      while (length > 0 && char.IsWhiteSpace(_param0[length - 1]))
        --length;
      return _param0.Substring(0, length);
    }

    public static string \u003641211146186(object _param0, bool _param1 = false)
    {
      string str1 = _param0.ToString();
      StringBuilder stringBuilder = (StringBuilder) null;
      int num = 0;
      for (int index = 0; index < str1.Length; ++index)
      {
        string str2;
        switch (str1[index])
        {
          case '"':
            str2 = "&quot;";
            break;
          case '&':
            str2 = "&amp;";
            break;
          case '\'':
            str2 = "&apos;";
            break;
          case '<':
            str2 = "&lt;";
            break;
          case '>':
            str2 = "&gt;";
            break;
          default:
            continue;
        }
        if (stringBuilder == null)
        {
          stringBuilder = new StringBuilder();
          if (_param1)
            stringBuilder.Append('"');
        }
        while (num < index)
          stringBuilder.Append(str1[num++]);
        stringBuilder.Append(str2);
        ++num;
      }
      if (stringBuilder != null)
      {
        while (num < str1.Length)
          stringBuilder.Append(str1[num++]);
        if (_param1)
          stringBuilder.Append('"');
        return stringBuilder.ToString();
      }
      if (_param1)
        str1 = "\"" + str1 + "\"";
      return str1;
    }

    public static string \u003836979488158(object _param0) => \u003373967650017.\u003641211146186(_param0, true);

    public static string \u003660133398347(int _param0) => "\"" + (object) _param0 + "\"";

    public static string \u003351546041129(uint _param0) => "\"0x" + _param0.ToString("x").PadLeft(8, '0') + "\"";

    public static string \u003120936908596(ulong _param0) => "\"0x" + _param0.ToString("x").PadLeft(8, '0') + "\"";

    public static string \u003422164614427(int _param0) => \u003373967650017.\u003351546041129((uint) _param0);

    public static string \u003384506734149(long _param0) => \u003373967650017.\u003120936908596((ulong) _param0);
  }
}
