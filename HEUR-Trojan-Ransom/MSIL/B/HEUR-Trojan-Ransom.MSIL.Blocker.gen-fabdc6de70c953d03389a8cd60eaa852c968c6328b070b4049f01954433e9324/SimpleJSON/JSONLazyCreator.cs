// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: WhenAllPromi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: EC39505B-F84A-4834-9FA9-F8C42A2FB5BC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fabdc6de70c953d03389a8cd60eaa852c968c6328b070b4049f01954433e9324.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -376912114;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1866950461)) % 12U)
        {
          case 0:
            num1 = (int) num2 * -848192713 ^ 1091255444;
            continue;
          case 1:
            int num3 = this.m_Key != null ? -595035695 : (num3 = -648507900);
            num1 = num3 ^ (int) num2 * 1833862091;
            continue;
          case 2:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1052709969 ^ 1723108083;
            continue;
          case 3:
            this.m_Node = (JSONNode) null;
            num1 = -1625185237;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = -1174758571;
            continue;
          case 6:
            num1 = (int) num2 * -424618291 ^ -749543618;
            continue;
          case 7:
            num1 = (int) num2 * 1787591194 ^ -1407634147;
            continue;
          case 8:
            num1 = (int) num2 * -167516438 ^ 744878232;
            continue;
          case 9:
            goto label_1;
          case 10:
            num1 = (int) num2 * -1543486353 ^ -189692022;
            continue;
          case 11:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 259896244 ^ -888665491;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 2078546757;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2008913447)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1210310085 ^ -1861029763;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1340226421;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1083054690)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONArray();
              aVal.Add(value);
              num1 = (int) num2 * 839189951 ^ -432620941;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1518826563 ^ -1211566377;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -397552035;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1640863379)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 2074009725 ^ 852379765;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1171897550;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -936875807)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1431895004 ^ -880267961;
              continue;
            case 2:
              aVal = new JSONClass();
              num1 = (int) num2 * 111508693 ^ 461110657;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1200837782 ^ -511343841;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 377809614;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 156070214)) % 6U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1650732687 ^ 248297135;
            continue;
          case 1:
            num1 = (int) num2 * -1004938814 ^ -291243579;
            continue;
          case 2:
            num1 = (int) num2 * 433690299 ^ 1085262910;
            continue;
          case 3:
            goto label_1;
          case 4:
            aVal.Add(aItem);
            num1 = (int) num2 * -1213015983 ^ -1308475074;
            continue;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = -1851741342;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1734383120)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2055694468 ^ 238914742;
            continue;
          case 2:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -956017858 ^ -1809613012;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 805356146 ^ -1241470223;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      bool flag1 = b == null;
label_1:
      int num1 = 1157266374;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 437155103)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -14213033 ^ -252773404;
            continue;
          case 1:
            int num3 = !flag1 ? -921227777 : (num3 = -2082060592);
            num1 = num3 ^ (int) num2 * -1848079217;
            continue;
          case 2:
            num1 = (int) num2 * 222383166 ^ 1345886754;
            continue;
          case 3:
            flag2 = (object) a == b;
            num1 = 675439077;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag2 = true;
            num1 = (int) num2 * -1503338601 ^ 1296023359;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1377950225;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1577729504)) % 4U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1288576056 ^ -309539909;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1326029766 ^ -1195811614;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -530956142;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1303860256)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -517892066 ^ 1967824705;
            continue;
          case 2:
            int num3 = !flag2 ? -694062884 : (num3 = -1220890917);
            num1 = num3 ^ (int) num2 * 1925490227;
            continue;
          case 3:
            flag2 = obj == null;
            num1 = (int) num2 * -264262020 ^ -1434194302;
            continue;
          case 4:
            flag1 = true;
            num1 = (int) num2 * 281800538 ^ 1695201447;
            continue;
          case 6:
            flag1 = (object) this == obj;
            num1 = -1400899561;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1822174284;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1830485899)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -431996590 ^ 2071995704;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = -562483793;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -310853159)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -969338055 ^ -407576415;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1447452491;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1873011826)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -702796103 ^ -1134273124;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * 689693207 ^ -1982072459;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = -1615012684;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1550062627)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * 126059584 ^ -840419626;
              continue;
            case 3:
              num1 = (int) num2 * 1015270127 ^ 817161606;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1481495599;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2116295382)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -854031172 ^ -642163226;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = -1200154162;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1199058454)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 1959634357 ^ -151099607;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 791384608 ^ 222248327;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * -763834000 ^ -1145016631;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1330356602;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 776514717)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -523469868 ^ -256405553;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * -70557932 ^ 25097152;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -995151270;
        double asDouble;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1554489866)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = 0.0;
              num1 = (int) num2 * 1698159717 ^ 779947035;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1279894770 ^ -1684673877;
              continue;
            case 3:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * 251030210 ^ 2042838325;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -1495597717;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -937619158)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 2050099713 ^ -977438353;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
        this.Set((JSONNode) new JSONData(false));
label_1:
        int num1 = 1643992175;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 735171814)) % 4U)
          {
            case 1:
              asBool = false;
              num1 = (int) num2 * 1811894334 ^ 1878149303;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 41361374 ^ -1720041376;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1932568535;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1583830344)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 769227796 ^ 1072346030;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 629857565 ^ -1063529423;
              continue;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1434602785 ^ -1727413967;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1302644309;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1390548752)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1648741664 ^ -488641103;
              continue;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * 1130900856 ^ 1407111918;
              continue;
            case 3:
              num1 = (int) num2 * -1284971607 ^ 159948057;
              continue;
            case 4:
              num1 = (int) num2 * 2032695375 ^ 1458164427;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2039177401;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1123868052)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -275136994 ^ -1233097930;
              continue;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * -57370493 ^ 1776924008;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * 1100674767 ^ -999167068;
              continue;
            case 3:
              goto label_1;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -217699750 ^ 1945978728;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
