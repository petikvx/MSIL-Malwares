// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: هx, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 374CAC08-464B-4E84-B463-5CFD524FF26C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-74995e87513e47357c351f37565a1422202dace38dc789308d72417b5797b93e.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = 273480852;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 181265583)) % 3U)
        {
          case 1:
            this.Id = ChessPiece.idd++;
            this.Kind = p;
            this.Color = c;
            num1 = (int) num2 * 1028666740 ^ 242132369;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.Current = this.Home = h;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
label_1:
      int num1 = 1723637358;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 202688089)) % 5U)
        {
          case 0:
            this.Kind = p;
            num1 = (int) num2 * 582799887 ^ -382720256;
            continue;
          case 2:
            num1 = (int) num2 * -1719752033 ^ 508920965;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * 960848755 ^ -2055468971;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      this.Color = c;
    }

    public string SpecialName
    {
      get
      {
label_1:
        int num1 = 271424929;
        string specialName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 416858756)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -918104646 ^ -1090971678;
              continue;
            case 1:
              specialName = ChessPiece.\u206A‭‎⁫⁯⁪‏⁬‌⁮⁮‫⁬⁯‪‎‬‍‬‍⁬‬‏‎‍‪‭‬⁫‫‌‭‬​‪‬‫⁯⁮⁭‮(\u003CModule\u003E.\u202E‮⁮‭⁮⁬​⁯‫‭⁫⁬​​‍⁬⁫⁫‌⁪‫‪⁯​‍⁯‎‬⁫‏‌‪‌⁪‮‫‬‍⁯‎‮<string>(1653241186U), (object) this.Current.Name, (object) this.Kind);
              num1 = (int) num2 * 2040548063 ^ -4536937;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return specialName;
      }
    }

    static string \u206A‭‎⁫⁯⁪‏⁬‌⁮⁮‫⁬⁯‪‎‬‍‬‍⁬‬‏‎‍‪‭‬⁫‫‌‭‬​‪‬‫⁯⁮⁭‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
