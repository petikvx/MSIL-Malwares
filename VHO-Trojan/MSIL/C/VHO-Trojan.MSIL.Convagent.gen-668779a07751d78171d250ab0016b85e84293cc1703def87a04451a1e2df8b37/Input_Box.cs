// Decompiled with JetBrains decompiler
// Type: ModuleNameSpace.Input_Box
// Assembly: installer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BE36CCF7-21FD-4261-9C31-8B7F15D1A5A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\VHO-Trojan.MSIL.Convagent.gen-668779a07751d78171d250ab0016b85e84293cc1703def87a04451a1e2df8b37.exe

using System;
using System.Drawing;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace ModuleNameSpace
{
  public class Input_Box
  {
    [DllImport("user32.dll", CharSet = CharSet.Unicode, CallingConvention = CallingConvention.Cdecl)]
    private static extern IntPtr MB_GetString(uint strId);

    public static DialogResult Show(
      string strTitle,
      string strPrompt,
      ref string strVal,
      bool blSecure)
    {
      Form form = new Form();
      form.AutoScaleDimensions = new SizeF(6f, 13f);
      form.AutoScaleMode = AutoScaleMode.Font;
      Label label = new Label();
      TextBox textBox = new TextBox();
      Button button1 = new Button();
      Button button2 = new Button();
      if (string.IsNullOrEmpty(strPrompt))
      {
        if (blSecure)
          label.Text = "Secure input:   ";
        else
          label.Text = "Input:          ";
      }
      else
        label.Text = strPrompt;
      label.Location = new Point(9, 19);
      label.MaximumSize = new Size(Screen.FromControl((Control) form).Bounds.Width * 5 / 8 - 18, 0);
      label.AutoSize = true;
      form.Controls.Add((Control) label);
      if (blSecure)
        textBox.UseSystemPasswordChar = true;
      textBox.Text = strVal;
      textBox.SetBounds(12, label.Bottom, label.Right - 12, 20);
      string stringUni1 = Marshal.PtrToStringUni(Input_Box.MB_GetString(0U));
      if (string.IsNullOrEmpty(stringUni1))
        button1.Text = "OK";
      else
        button1.Text = stringUni1;
      string stringUni2 = Marshal.PtrToStringUni(Input_Box.MB_GetString(1U));
      if (string.IsNullOrEmpty(stringUni2))
        button2.Text = "Cancel";
      else
        button2.Text = stringUni2;
      button1.DialogResult = DialogResult.OK;
      button2.DialogResult = DialogResult.Cancel;
      button1.SetBounds(Math.Max(12, label.Right - 158), label.Bottom + 36, 75, 23);
      button2.SetBounds(Math.Max(93, label.Right - 77), label.Bottom + 36, 75, 23);
      if (string.IsNullOrEmpty(strTitle))
        form.Text = AppDomain.CurrentDomain.FriendlyName;
      else
        form.Text = strTitle;
      form.ClientSize = new Size(Math.Max(178, label.Right + 10), label.Bottom + 71);
      form.Controls.AddRange(new Control[3]
      {
        (Control) textBox,
        (Control) button1,
        (Control) button2
      });
      form.FormBorderStyle = FormBorderStyle.FixedDialog;
      form.StartPosition = FormStartPosition.CenterScreen;
      try
      {
        form.Icon = Icon.ExtractAssociatedIcon(Assembly.GetExecutingAssembly().Location);
      }
      catch
      {
      }
      form.MinimizeBox = false;
      form.MaximizeBox = false;
      form.AcceptButton = (IButtonControl) button1;
      form.CancelButton = (IButtonControl) button2;
      DialogResult dialogResult = form.ShowDialog();
      strVal = textBox.Text;
      return dialogResult;
    }

    public static DialogResult Show(
      string strTitle,
      string strPrompt,
      ref string strVal)
    {
      return Input_Box.Show(strTitle, strPrompt, ref strVal, false);
    }
  }
}
