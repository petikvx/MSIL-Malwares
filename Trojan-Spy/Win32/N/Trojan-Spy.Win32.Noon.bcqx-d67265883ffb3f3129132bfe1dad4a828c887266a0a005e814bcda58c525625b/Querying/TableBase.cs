// Decompiled with JetBrains decompiler
// Type: Alero.Querying.TableBase
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System.Collections.Generic;

namespace Alero.Querying
{
  public abstract class TableBase
  {
    public abstract string TableName { get; }

    internal abstract void BuildSql(BuildSqlContext sqlContext);

    protected internal abstract IEnumerable<FieldReference> Fields { get; }

    public Join LeftJoin(QueryTable table) => new Join(this, table, JoinType.Left);

    public Join InnerJoin(QueryTable table) => new Join(this, table, JoinType.Inner);

    public Query Select()
    {
      SelectQuery selectQuery = new SelectQuery();
      foreach (FieldReference field in this.Fields)
        selectQuery.AddSelectField(field);
      selectQuery.AddTable(this);
      return (Query) selectQuery;
    }

    public Query SelectWhere(WherePart condition)
    {
      SelectQuery selectQuery = new SelectQuery();
      foreach (FieldReference field in this.Fields)
        selectQuery.AddSelectField(field);
      selectQuery.AddTable(this);
      selectQuery.AddWhere(condition);
      return (Query) selectQuery;
    }
  }
}
