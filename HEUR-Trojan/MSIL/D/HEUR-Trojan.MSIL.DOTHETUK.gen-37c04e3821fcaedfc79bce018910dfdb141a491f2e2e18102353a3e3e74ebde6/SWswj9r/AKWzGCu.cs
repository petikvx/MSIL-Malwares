// Decompiled with JetBrains decompiler
// Type: SWswj9r.AKWzGCu
// Assembly: aO8BSlP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0a613f4dd989e8ae
// MVID: 26D80EA7-FF8D-466E-8999-D26AD81041E3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.DOTHETUK.gen-37c04e3821fcaedfc79bce018910dfdb141a491f2e2e18102353a3e3e74ebde6.exe

using bumJRnO;
using EUKw6S4;
using System;
using System.Globalization;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace SWswj9r
{
  internal static class AKWzGCu
  {
    private static readonly string \u00399r1Pb4 = Environment.GetEnvironmentVariable("HOME");
    private static readonly string Uk7Mq9a = Environment.GetEnvironmentVariable("LOGNAME");
    private static readonly string pbiSpRw = Environment.GetEnvironmentVariable("USER");
    private static readonly string OaDLwdN = Environment.GetEnvironmentVariable("LNAME");
    private static readonly string TQpRM88 = Environment.GetEnvironmentVariable("USERNAME");

    public static bool VzkkcFM(Action JdxlFjo)
    {
      JdxlFjo();
      return false;
    }

    public static string NfMEQlK(this Guid RL5HFNO) => RL5HFNO.ToString("D", (IFormatProvider) CultureInfo.InvariantCulture);

    public static bool tAeuM3K() => Environment.OSVersion.Platform == PlatformID.Win32NT;

    public static bool XIcfD0x() => Environment.OSVersion.Platform == PlatformID.MacOSX || Environment.OSVersion.Platform == PlatformID.Unix;

    public static bool \u0032p3s4fh() => Environment.OSVersion.Platform == PlatformID.Unix;

    internal static string rdD4xol() => AKWzGCu.tAeuM3K() ? Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) : AKWzGCu.ddRg6Mg();

    internal static Task dKWCWDq(
      Func<Task> p1wG21P,
      string CM8l30p,
      int ukDGAQS,
      int pKSie5k,
      CancellationToken _param4 = default (CancellationToken))
    {
      // ISSUE: variable of a compiler-generated type
      AKWzGCu.fwtQuKk stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.qNyKWod = p1wG21P;
      // ISSUE: reference to a compiler-generated field
      stateMachine.Lgh7lKn = CM8l30p;
      // ISSUE: reference to a compiler-generated field
      stateMachine.acLeB7I = ukDGAQS;
      // ISSUE: reference to a compiler-generated field
      stateMachine.vfBYC0G = pKSie5k;
      // ISSUE: reference to a compiler-generated field
      stateMachine.iNQwvIl = _param4;
      // ISSUE: reference to a compiler-generated field
      stateMachine.eIWNHWR = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      (^(CRf8sxc.NZLujkK&) ref stateMachine).a8NP7Tn = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.eIWNHWR.Start<AKWzGCu.fwtQuKk>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.eIWNHWR.Task;
    }

    internal static void D8tvJj2(
      Func<bool> hdmu7mM,
      string YNtMSZn,
      int kqsKxYH,
      int HEJnWjB,
      CancellationToken fmZIPAG = default (CancellationToken))
    {
      Exception innerException = (Exception) null;
      FileStream fileStream = (FileStream) null;
      for (int index = 0; index < kqsKxYH; ++index)
      {
        fmZIPAG.ThrowIfCancellationRequested();
        Directory.CreateDirectory(Path.GetDirectoryName(YNtMSZn));
        try
        {
          fileStream = new FileStream(YNtMSZn, FileMode.OpenOrCreate, FileAccess.Read, FileShare.None);
          break;
        }
        catch (IOException ex)
        {
          innerException = (Exception) ex;
          Task.Delay(TimeSpan.FromMilliseconds((double) HEJnWjB));
        }
      }
      if (fileStream == null && innerException != null)
        throw new InvalidOperationException("Could not get access to the shared lock file.", innerException);
      using (fileStream)
      {
        int num = hdmu7mM() ? 1 : 0;
      }
    }

    private static string ddRg6Mg()
    {
      if (AKWzGCu.tAeuM3K())
        throw new NotSupportedException();
      if (!string.IsNullOrEmpty(AKWzGCu.\u00399r1Pb4))
        return AKWzGCu.\u00399r1Pb4;
      string path2 = (string) null;
      if (!string.IsNullOrEmpty(AKWzGCu.Uk7Mq9a))
        path2 = AKWzGCu.Uk7Mq9a;
      else if (!string.IsNullOrEmpty(AKWzGCu.pbiSpRw))
        path2 = AKWzGCu.pbiSpRw;
      else if (!string.IsNullOrEmpty(AKWzGCu.OaDLwdN))
        path2 = AKWzGCu.OaDLwdN;
      else if (!string.IsNullOrEmpty(AKWzGCu.TQpRM88))
        path2 = AKWzGCu.TQpRM88;
      if (AKWzGCu.XIcfD0x())
        return string.IsNullOrEmpty(path2) ? (string) null : Path.Combine("/Users", path2);
      if (!AKWzGCu.\u0032p3s4fh())
        throw new NotSupportedException();
      if (A8xHQWw.nusTgve() == 0)
        return "/root";
      return string.IsNullOrEmpty(path2) ? (string) null : Path.Combine("/home", path2);
    }
  }
}
