<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TypeNotSupportedByQueryStringConverter" xml:space="preserve">
    <value>Type '{0}' is not supported by '{1}'.</value>
  </data>
  <data name="JavascriptCallbackNotsupported" xml:space="preserve">
    <value>Javascript callback padding is only supported for Json formatted messages.</value>
  </data>
  <data name="TypeIsNotParameterTypeAndIsNotPresentInKnownTypes" xml:space="preserve">
    <value>Cannot serialize parameter of type '{0}' (for operation '{1}', contract '{2}') because it is not the exact type '{3}' in the method signature and is not in the known types collection. In order to serialize the parameter, add the type to the known types collection for the operation using ServiceKnownTypeAttribute.</value>
  </data>
  <data name="HttpUnhandledOperationInvokerCalledWithoutMessage" xml:space="preserve">
    <value>A message was dispatched to the UnhandledDispatchOperation, but was invoked without a Message as input.  This error might be caused by a behavior that provided a bad IDispatchMessageFormatter for the EndpointDispatcher's DispatchRuntime's UnhandledDispatchOperation's Formatter.</value>
  </data>
  <data name="JsonEncodingNotSupported" xml:space="preserve">
    <value>Encoding not supported in JSON. UTF-8, Unicode, and BigEndianUnicode are the only supported encodings.</value>
  </data>
  <data name="XmlWriterBackedStreamPropertyGetNotSupported" xml:space="preserve">
    <value>The get accessor of the '{0}' property is not supported by the stream.</value>
  </data>
  <data name="JsonWebScriptServiceHostOneServiceContract" xml:space="preserve">
    <value>This service implements '{0}' contracts. To use WebScriptServiceHostFactory, you must implement one contract per service. If you must use multiple contracts, please use a regular ServiceHost.</value>
  </data>
  <data name="TraceCodeJsonpCallbackNameSet" xml:space="preserve">
    <value>The Javascript padding callback parameter name was set to '{0}'.</value>
  </data>
  <data name="ConditionalRetrieveGetAndHeadOnly" xml:space="preserve">
    <value>CheckConditionalRetrieve() can not be used with the HTTP method '{0}'.  Only the HTTP methods GET and HEAD are valid with CheckConditionalRetrieve().</value>
  </data>
  <data name="HelpPageXmlRequest" xml:space="preserve">
    <value>The following is an example request Xml body:</value>
  </data>
  <data name="CrossDomainJavascriptAuthNotSupported" xml:space="preserve">
    <value>Cross domain javascript callback is not supported in authenticated services.</value>
  </data>
  <data name="HelpPageJsonResponse" xml:space="preserve">
    <value>The following is an example response Json body:</value>
  </data>
  <data name="HelpPageAdditionalRequestSchema" xml:space="preserve">
    <value>Additional request Xml Schemas:</value>
  </data>
  <data name="TraceCodeWebRequestRedirect" xml:space="preserve">
    <value>Incoming HTTP request to URI '{0}' was redirected to URI '{1}'.</value>
  </data>
  <data name="HelpPageIsMessage" xml:space="preserve">
    <value>The {0} body cannot be inferred.</value>
  </data>
  <data name="ValueMustBeNonNegative" xml:space="preserve">
    <value>The value of this argument must be non-negative.</value>
  </data>
  <data name="NoOutOrRefParametersAllowedWithStreamResult" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a Stream return value and also has out or ref parameters. When Stream is the return value of the operation, it cannot have ref or out parameters. </value>
  </data>
  <data name="HttpContextNoIncomingMessageProperty" xml:space="preserve">
    <value>There is no {0} on the incoming Message.</value>
  </data>
  <data name="ChannelDispatcherMustBePresent" xml:space="preserve">
    <value>The endpoint dispatcher must have an associated channel dispatcher object.</value>
  </data>
  <data name="CacheProfileOnlySupportedInAspNetCompatibilityMode" xml:space="preserve">
    <value>AspNetCacheProfileAttribute is supported only in AspNetCompatibility mode.</value>
  </data>
  <data name="OnlyDataContractAndXmlSerializerTypesInUnWrappedMode" xml:space="preserve">
    <value>WebGetAttribute/WebInvokeAttribute supports setting the BodyStyle property to Bare only with DataContract and XmlSerializer serializable types. Operation '{0}' does not specify serialization using any of these formats. Add a DataContractFormatAttribute or XmlSerializerFormatAttribute to this operation to specify one of these serialization formats.</value>
  </data>
  <data name="ValueMustBePositive" xml:space="preserve">
    <value>The value of this argument must be positive.</value>
  </data>
  <data name="HelpPageMethodNotAllowed" xml:space="preserve">
    <value>Method not allowed.</value>
  </data>
  <data name="TraceCodeWebRequestUnknownQueryParameterIgnored" xml:space="preserve">
    <value>Query string parameter with name '{0}' was not used during parameter deserialization for operation '{1}'.</value>
  </data>
  <data name="JsonOnlySupportsMessageVersionNone" xml:space="preserve">
    <value>MessageVersion must be set to None in WebMessageEncodingBindingElement. Other message versions are not supported.</value>
  </data>
  <data name="UTParamsDoNotComposeWithMessage" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' uses UriTemplate parameters, but also uses a Message parameter.  Message and UriTemplate parameters are incompatible.</value>
  </data>
  <data name="ConfigInvalidBindingConfigurationName" xml:space="preserve">
    <value>The {1} binding does not have a configured binding named '{0}'.</value>
  </data>
  <data name="HelpPageMessageDirection" xml:space="preserve">
    <value>Message direction</value>
  </data>
  <data name="GETCannotHaveBody" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' uses GET, but also has body parameter '{2}'. GET operations cannot have a body. Either make the parameter '{2}' a UriTemplate parameter, or switch from WebGetAttribute to WebInvokeAttribute.</value>
  </data>
  <data name="HelpPageIsAtom10Entry" xml:space="preserve">
    <value>The {0} body is an Atom 1.0 syndication entry. See http://tools.ietf.org/html/rfc4287 for more details.</value>
  </data>
  <data name="FaultExceptionEnabledNotSupportedInScripts" xml:space="preserve">
    <value>FaultExceptionEnabled is not supported for WebScript endpoints.</value>
  </data>
  <data name="TraceCodeRequestFormatSelectedByEncoderDefaults" xml:space="preserve">
    <value>The default content type mapper selected the request format, '{0}', given the request's content-type, '{1}'.</value>
  </data>
  <data name="MultipleWebAttributes" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has both WebGetAttribute and WebInvokeAttribute; only one can be present.</value>
  </data>
  <data name="HelpPageAdditionalResponseSchema" xml:space="preserve">
    <value>Additional response Xml Schemas:</value>
  </data>
  <data name="JsonNoEndpointAtMetadataAddress" xml:space="preserve">
    <value>Detected an existing endpoint with name '{2}' at address '{1}'. '{0}' adds an endpoint at the same address to provide a JavaScript proxy that clients can use to invoke operations on '{3}'. Please remove the existing endpoint or change its address.</value>
  </data>
  <data name="UriTemplateVarCaseDistinction" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has multiple parameters named '{2}' that vary only in uppercase versus lowercase.  The parameter names must be distinct.</value>
  </data>
  <data name="HelpPageExample" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="MessageClosed" xml:space="preserve">
    <value>Message is closed.</value>
  </data>
  <data name="TraceCodeAutomaticFormatSelectedOperationDefault" xml:space="preserve">
    <value>Automatic format selection set the response format to '{0}', the default value for the operation, as the HTTP client's media-type preference was not provided or could not be honored.</value>
  </data>
  <data name="JsonFormatRequiresDataContract" xml:space="preserve">
    <value>Operation '{0}' (in contract '{1}' with namespace '{2}') specifies the http body format to be JSON but the serialization mechanism for the operation is not DataContract. JSON format is only supported with DataContract serialization. If you have an XmlSerializerFormatAttribute on the operation consider replacing it with DataContractFormatAttribute.</value>
  </data>
  <data name="TraceCodeWebRequestMatchesOperation" xml:space="preserve">
    <value>Incoming HTTP request to URI '{0}' matched operation '{1}'.</value>
  </data>
  <data name="WCFBindingCannotBeUsedWithUriOperationSelectorBehaviorBadMessageVersion" xml:space="preserve">
    <value>The endpoint at '{0}' does not have a Binding with the None MessageVersion.  '{1}' is only intended for use with WebHttpBinding or similar bindings.</value>
  </data>
  <data name="HelpPageXmlResponse" xml:space="preserve">
    <value>The following is an example response Xml body:</value>
  </data>
  <data name="CacheProfileLocationNotSupported" xml:space="preserve">
    <value>The cache profile location, '{0}', is not supported.</value>
  </data>
  <data name="WebHttpBindingNotFoundWithEndpoint" xml:space="preserve">
    <value>The standard endpoint of type '{0}' does not have a binding of type '{1}'.  The endpoint is initialized with the proper binding and it should not be removed or replaced.</value>
  </data>
  <data name="OperationDoesNotSupportFormat" xml:space="preserve">
    <value>The operation '{0}' does not support '{1}' as a response format.</value>
  </data>
  <data name="SerializingRequestNotSupportedByFormatter" xml:space="preserve">
    <value>The formatter '{0}' does not support serializing requests.</value>
  </data>
  <data name="HelpServerErrorProcessingRequestWithLink" xml:space="preserve">
    <value>&lt;p&gt;The server encountered an error processing the request. Please see the &lt;a rel="help-page" href="{0}"&gt;service help page&lt;/a&gt; for constructing valid requests to the service.&lt;/p&gt;</value>
  </data>
  <data name="HelpExampleGeneratorLanguage" xml:space="preserve">
    <value>en-us</value>
  </data>
  <data name="HelpPageTitleText" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="JavascriptCallbackNotEnabled" xml:space="preserve">
    <value>CrossDomainScriptAccessEnabled is not enabled but JavascriptCallbackResponseMessageProperty was found.</value>
  </data>
  <data name="HelpExampleGeneratorStringContent" xml:space="preserve">
    <value>String content</value>
  </data>
  <data name="UriTemplateQueryVarMustBeConvertible" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a query variable named '{2}' of type '{3}', but type '{3}' is not convertible by '{4}'.  Variables for UriTemplate query values must have types that can be converted by '{4}'.</value>
  </data>
  <data name="HelpServerErrorProcessingRequestWithDetailsAndLink" xml:space="preserve">
    <value>&lt;p&gt;The server encountered an error processing the request. Please see the &lt;a rel="help-page" href="{0}"&gt;service help page&lt;/a&gt; for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: &lt;/p&gt;</value>
  </data>
  <data name="HelpPageMethodNotAllowedWithLink" xml:space="preserve">
    <value>&lt;p&gt;Method not allowed. Please see the &lt;a rel="help-page" href="{0}"&gt;service help page&lt;/a&gt; for constructing valid requests to the service.&lt;/p&gt;</value>
  </data>
  <data name="ConditionalUpdatePutPostAndDeleteOnly" xml:space="preserve">
    <value>CheckConditionalUpdate() can not be used with the HTTP method '{0}'.  Only the HTTP methods PUT, POST and DELETE are valid with CheckConditionalUpdate().</value>
  </data>
  <data name="TraceCodeAutomaticFormatSelectedRequestBased" xml:space="preserve">
    <value>Automatic format selection set the response format to '{0}' due to the HTTP client's stated preference for the '{1}' media type.</value>
  </data>
  <data name="CacheProfileAttributeOnlyWithGet" xml:space="preserve">
    <value>AspNetCacheProfileAttribute can only be used with GET operations.</value>
  </data>
  <data name="TraceCodeAddingResponseToOutputCache" xml:space="preserve">
    <value>Adding the HTTP response from the '{0}' operation to the ASP.NET output cache.</value>
  </data>
  <data name="QueryStringFormatterOperationNotSupportedServerSide" xml:space="preserve">
    <value>This operation formatter can only be used for deserializing requests; serializing replies is not supported since query strings are not used to represent parameters in replies.</value>
  </data>
  <data name="FormatterCannotBeUsedForReplyMessages" xml:space="preserve">
    <value>This message formatter cannot be used to process response messages.</value>
  </data>
  <data name="HttpTransferServiceHostMultipleContracts" xml:space="preserve">
    <value>Service '{0}' implements multiple ServiceContract types, and no endpoints are defined in the configuration file. WebServiceHost can set up default endpoints, but only if the service implements only a single ServiceContract. Either change the service to only implement a single ServiceContract, or else define endpoints for the service explicitly in the configuration file.</value>
  </data>
  <data name="CrossDomainJavascriptNotsupported" xml:space="preserve">
    <value>CrossDomainScriptAccessEnabled cannot be used in Clients.</value>
  </data>
  <data name="HttpTransferServiceHostNoContract" xml:space="preserve">
    <value>Service '{0}' does not implement a ServiceContract type.</value>
  </data>
  <data name="HelpPageIsXML" xml:space="preserve">
    <value>The {0} body is arbitrary XML.</value>
  </data>
  <data name="DefaultContentFormatNotAllowedInProperty" xml:space="preserve">
    <value>The default WebContentFormat cannot be used to construct a WebBodyFormatMessageProperty. Specify an explicit format (for example XML, JSON or Raw) instead.</value>
  </data>
  <data name="XmlWriterBackedStreamPropertySetNotSupported" xml:space="preserve">
    <value>The set accessor of the '{0}' property is not supported by the stream.</value>
  </data>
  <data name="WeakEntityTagsNotSupported" xml:space="preserve">
    <value>The entity tag '{0}' is not a valid ETag header value.  Weak entity tags are not supported.</value>
  </data>
  <data name="InvalidXmlCharactersInNameUsedWithPOSTMethod" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a parameter or message contract body part with name '{2}' which  contains one or more invalid XML characters.  This name is not supported as a parameter name or message contract body part name when the Method is POST.  Please change the name to a name containing only valid XML characters.</value>
  </data>
  <data name="ErrorEncounteredInContentTypeMapper" xml:space="preserve">
    <value>An unexpected exception was encountered when using the WebContentTypeMapper.</value>
  </data>
  <data name="HelpPageFailedToCreateErrorMessage" xml:space="preserve">
    <value>Failed to create error response message</value>
  </data>
  <data name="HelpExampleGeneratorHandlerNotFound" xml:space="preserve">
    <value>Handler for type {0} not found.</value>
  </data>
  <data name="UnrecognizedHttpMessageFormat" xml:space="preserve">
    <value>The incoming message has an unexpected message format '{0}'. The expected message formats for the operation are {1}. This can be because a WebContentTypeMapper has not been configured on the binding. See the documentation of WebContentTypeMapper for more details.</value>
  </data>
  <data name="MessageFormatPropertyNotFound" xml:space="preserve">
    <value>Incoming message for operation '{0}' (contract '{1}' with namespace '{2}') does not contain a WebBodyFormatMessageProperty. This can be because a WebContentTypeMapper or a WebMessageEncodingBindingElement has not been configured on the binding. See the documentation of WebContentTypeMapper and WebMessageEncodingBindingElement for more details.</value>
  </data>
  <data name="WebScriptInvalidHttpRequestMethod" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' specifies Method '{2}' on the WebGetAttribute/WebInvokeAttribute, but the only allowed values for Method are GET or POST. Other values are not supported by '{3}'.</value>
  </data>
  <data name="HelpPageFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="HelpPageIsAtomPubServiceDocument" xml:space="preserve">
    <value>The {0} body is an Atom Pub service document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</value>
  </data>
  <data name="HelpPageUri" xml:space="preserve">
    <value>Uri</value>
  </data>
  <data name="BodyStyleNotSupportedByWebScript" xml:space="preserve">
    <value>The body style '{0}' is not supported by '{1}'. Change the body style to be '{2}'.</value>
  </data>
  <data name="StreamBodyMemberNotSupported" xml:space="preserve">
    <value>'{0}' does not allow the use of Streams with the MessageContract programming model. The service '{1}' defines an operation '{2}' that uses the MessageContract type '{3}'. '{3}' contains MessageBodyMember '{4}' of type Stream.</value>
  </data>
  <data name="HelpPageCallbackText" xml:space="preserve">
    <value>&lt;p xmlns="http://www.w3.org/1999/xhtml"&gt;This operation supports JSONP responses. The callback function can be specified using the &lt;b&gt;"&lt;span class="javascript-callback"&gt;{0}&lt;/span&gt;"&lt;/b&gt; Url query parameter.&lt;/p&gt;</value>
  </data>
  <data name="OnlyReturnValueBodyParameterAllowedForUnwrappedMessages" xml:space="preserve">
    <value>Operation '{0}' of contract '{1}' specifies at least one response body parameter that is not a return value of the operation. Only the return value is allowed when the BodyStyle property of WebGetAttribute/WebInvokeAttribute is set to Bare. Either remove the extra response body parameters or set the BodyStyle property to Wrapped.</value>
  </data>
  <data name="ParameterIsNotStreamType" xml:space="preserve">
    <value>Parameter type '{0}' of operation '{1}' (contract '{2}' with namespace '{3}') is not of type Stream. Ensure that the parameter is of type Stream or derives from Stream.</value>
  </data>
  <data name="HelpPageRequestSchema" xml:space="preserve">
    <value>The following is the request Xml Schema:</value>
  </data>
  <data name="HelpPageNotSupportedInScripts" xml:space="preserve">
    <value>Help Page is not supported for WebScript endpoints.</value>
  </data>
  <data name="HelpPageBodyIsEmpty" xml:space="preserve">
    <value>The {0} body is empty.</value>
  </data>
  <data name="UnknownWebEncodingFormat" xml:space="preserve">
    <value>The incoming HTTP message, with content type '{0}', was mapped to an unknown content format '{1}' by the ContentTypeMapper. Configure the WebMessageEncodingBindingElement with a WebContentTypeMapper that maps the content type to a known WebContentFormat.</value>
  </data>
  <data name="MCAtMostOneRequestBodyParameterAllowedForUnwrappedMessages" xml:space="preserve">
    <value>Operation '{0}' of contract '{1}' specifies MessageContract type '{2}' which has IsWrapped as false but has multiple request body parameters. At most one body parameter can be serialized without wrapper elements. Either remove the extra body parameters or set the IsWrapped property on the MessageContractAttribute to true.</value>
  </data>
  <data name="WebScriptOutRefOperationsNotSupported" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' specifies an 'out' or 'ref' parameter. Operations with 'out' or 'ref' parameters are not supported.</value>
  </data>
  <data name="HelpPageOperationMethod" xml:space="preserve">
    <value>&lt;p  xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;b&gt;HTTP Method: &lt;/b&gt;&lt;span class="method"&gt;{0}&lt;/span&gt;&lt;/p&gt;</value>
  </data>
  <data name="WebHttpServiceEndpointCannotHaveMessageHeaders" xml:space="preserve">
    <value>The endpoint address '{0}' has message headers and is being used with a binding that's configured for message version None. Either change the endpoint address to not contain message headers or change the binding to be one that supports SOAP (for example, WSHttpBinding).</value>
  </data>
  <data name="HelpExampleGeneratorThisElementContainsText" xml:space="preserve">
    <value>This element contains text.</value>
  </data>
  <data name="HelpPageBodyIsWrapped" xml:space="preserve">
    <value>Cannot infer schema. The {0} body is wrapped.</value>
  </data>
  <data name="XmlWriterBackedStreamMethodNotSupported" xml:space="preserve">
    <value>The '{0}' method is not supported by the stream.</value>
  </data>
  <data name="CacheProfileSqlDependencyIsInvalid" xml:space="preserve">
    <value>The SQL dependency, '{0}', is invalid.</value>
  </data>
  <data name="HelpServerErrorProcessingRequest" xml:space="preserve">
    <value>The server encountered an error processing the request. See server logs for more details.</value>
  </data>
  <data name="HelpPageIsSyndication" xml:space="preserve">
    <value>The {0} body is a syndication feed.</value>
  </data>
  <data name="CannotDeserializeBody" xml:space="preserve">
    <value>Unable to deserialize XML body with root name '{0}' and root namespace '{1}' (for operation '{2}' and contract ('{3}',  '{4}')) using {5}. Ensure that the type corresponding to the XML is added to the known types collection of the service.</value>
  </data>
  <data name="EndpointAddressCannotBeNull" xml:space="preserve">
    <value>The ServiceEndpoint's Address is null.  Address must be an absolute uri.</value>
  </data>
  <data name="HelpPageMethod" xml:space="preserve">
    <value>Method</value>
  </data>
  <data name="MultipleOperationsInContractWithPathMethod" xml:space="preserve">
    <value>In contract '{0}', there are multiple operations with Method '{2}' and a UriTemplate that is equivalent to '{1}'. Each operation requires a unique combination of UriTemplate and Method to unambiguously dispatch messages. Use WebGetAttribute or WebInvokeAttribute to alter the UriTemplate and Method values of an operation.</value>
  </data>
  <data name="OperationNameNotFound" xml:space="preserve">
    <value>Could not find operation name in the message properties.</value>
  </data>
  <data name="HelpPageBody" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="HelpPageHtml" xml:space="preserve">
    <value>BODY { color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px; } #content { margin-left: 30px; font-size: .70em; padding-bottom: 2em; } A:link { color: #336699; font-weight: bold; text-decoration: underline; } A:visited { color: #6699cc; font-weight: bold; text-decoration: underline; } A:active { color: #336699; font-weight: bold; text-decoration: underline; } .heading1 { background-color: #003366; border-bottom: #336699 6px solid; color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal;margin: 0em 0em 10px -20px; padding-bottom: 8px; padding-left: 30px;padding-top: 16px;} pre { font-size:small; background-color: #e5e5cc; padding: 5px; font-family: Courier New; margin-top: 0px; border: 1px #f0f0e0 solid; white-space: pre-wrap; white-space: -pre-wrap; word-wrap: break-word; } table { border-collapse: collapse; border-spacing: 0px; font-family: Verdana;} table th { border-right: 2px white solid; border-bottom: 2px white solid; font-weight: bold; background-color: #cecf9c;} table td { border-right: 2px white solid; border-bottom: 2px white solid; background-color: #e5e5cc;}</value>
  </data>
  <data name="HelpPageResponseSchema" xml:space="preserve">
    <value>The following is the response Xml Schema:</value>
  </data>
  <data name="HelpExampleGeneratorSchemaObjectNotSupported" xml:space="preserve">
    <value>Schema object {0} not supported.</value>
  </data>
  <data name="UriTemplatePathVarMustBeString" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a path variable named '{2}' which does not have type 'string'.  Variables for UriTemplate path segments must have type 'string'.</value>
  </data>
  <data name="WCFBindingCannotBeUsedWithUriOperationSelectorBehaviorBadScheme" xml:space="preserve">
    <value>The endpoint at '{0}' does not have a Binding with Scheme 'http' or 'https'.  '{1}' is only intended for use with WebHttpBinding or similar bindings.</value>
  </data>
  <data name="HelpPageEndpointNotFoundWithLink" xml:space="preserve">
    <value>&lt;p&gt;Endpoint not found. Please see the &lt;a rel="help-page" href="{0}"&gt;service help page&lt;/a&gt; for constructing valid requests to the service.&lt;/p&gt;</value>
  </data>
  <data name="CacheProfileNameNullOrEmpty" xml:space="preserve">
    <value>A cache profile name is either null or an empty string.</value>
  </data>
  <data name="HelpPageSchema" xml:space="preserve">
    <value>Schema</value>
  </data>
  <data name="UTParamsDoNotComposeWithMessageContract" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' uses UriTemplate parameters, but also uses a MessageContract parameter.  MessageContract and UriTemplate parameters are incompatible.</value>
  </data>
  <data name="WebEndpointRequiredBinding" xml:space="preserve">
    <value>The '{0}' requires the '{1}' binding.</value>
  </data>
  <data name="ManualAddressingCannotBeFalseWithTransportBindingElement" xml:space="preserve">
    <value>In the endpoint at '{0}', in order to use '{1}', the '{2}' of the binding must have ManualAddressing set to true.</value>
  </data>
  <data name="GETCannotHaveMCParameter" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' uses GET, but also has a parameter of MessageContract type '{2}'. GET operations cannot have a body. To use a MessageContract parameter type, switch from WebGetAttribute to WebInvokeAttribute.</value>
  </data>
  <data name="HelpPageReferenceFor" xml:space="preserve">
    <value>Reference for  {0}</value>
  </data>
  <data name="InvalidHttpMessageFormat" xml:space="preserve">
    <value>Incoming message for operation '{0}' (contract '{1}' with namespace '{2}') contains an unrecognized http body format value '{3}'. The expected body format value is '{4}'. This can be because a WebContentTypeMapper has not been configured on the binding. See the documentation of WebContentTypeMapper for more details.</value>
  </data>
  <data name="HelpPageIsRSS20Feed" xml:space="preserve">
    <value>The {0} body is an RSS 2.0 syndication feed. See http://validator.w3.org/feed/docs/rss2.html for more details.</value>
  </data>
  <data name="InvalidHttpMessageFormat3" xml:space="preserve">
    <value>Incoming message for operation '{0}'  contains an unrecognized http body format value '{1}'. The expected body format value is '{2}'. This can be because a WebContentTypeMapper has not been configured on the binding. See the documentation of WebContentTypeMapper for more details.</value>
  </data>
  <data name="ConfigInvalidWebContentTypeMapperType" xml:space="preserve">
    <value>Invalid value for the ContentTypeMapper. The type '{0}' does not derive from the appropriate base class: '{1}'.</value>
  </data>
  <data name="HelpPageDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ConfigWebContentTypeMapperNoConstructor" xml:space="preserve">
    <value>The configuration file specified type '{0}' for the '{1}' property of '{2}', but that type does not have a public default constructor.  The content type mapper must be a public class that is a subtype of '{3}', and it must have a public default constructor.</value>
  </data>
  <data name="ConfigInvalidWebContentTypeMapper" xml:space="preserve">
    <value>The configuration file specified type '{0}' for the '{1}' property of '{2}', but that type is not a subtype of '{3}'.  The content type mapper must be a public class that is a subtype of '{3}', and it must have a public default constructor.</value>
  </data>
  <data name="QueryStringFormatterOperationNotSupportedClientSide" xml:space="preserve">
    <value>This operation formatter can only be used for serializing requests; deserializing replies is not supported since query strings are not used to represent parameters in replies.</value>
  </data>
  <data name="AtMostOneRequestBodyParameterAllowedForStream" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has multiple request body parameters, one of which is a Stream. When the Stream is a parameter, there can be no other parameters in the body.</value>
  </data>
  <data name="JsonFormatterExpectedAttributeNull" xml:space="preserve">
    <value>OperationFormatter encountered an invalid Message body. Expected to find an attribute with name 'type' and value 'null'. Found value '{0}'.</value>
  </data>
  <data name="WebRequestDidNotMatchOperation" xml:space="preserve">
    <value>The incoming HTTP request's URI '{0}' does not match any service operation.</value>
  </data>
  <data name="HelpPageDefaultDescription" xml:space="preserve">
    <value>Service at {0}</value>
  </data>
  <data name="HelpPageRequestErrorTitle" xml:space="preserve">
    <value>Request Error</value>
  </data>
  <data name="HelpPageResponse" xml:space="preserve">
    <value>Response</value>
  </data>
  <data name="HelpServerErrorProcessingRequestWithDetails" xml:space="preserve">
    <value>The server encountered an error processing the request. The exception message is '{0}'. See server logs for more details. The exception stack trace is: </value>
  </data>
  <data name="HelpPageIsStream" xml:space="preserve">
    <value>The {0} body is a byte stream.</value>
  </data>
  <data name="TraceCodeAddingAuthenticatedResponseToOutputCache" xml:space="preserve">
    <value>The HTTP response from the '{0}' operation that is being added to the ASP.NET output cache is from an authenticated request.  Unauthorized users may be able to access the cached response via the output cache.</value>
  </data>
  <data name="WebBehaviorNotFoundWithEndpoint" xml:space="preserve">
    <value>The standard endpoint of type '{0}' does not have a behavior of type '{1}'.  The endpoint is initialized with the proper behavior and it should not be removed or replaced.</value>
  </data>
  <data name="JsonValueMustBeInRange" xml:space="preserve">
    <value>The value of this argument must fall within the range {0} to {1}.</value>
  </data>
  <data name="CacheProfileNotConfigured" xml:space="preserve">
    <value>Cache profile with name '{0}' is not configured.</value>
  </data>
  <data name="HelpPageOperationsAt" xml:space="preserve">
    <value>Operations at {0}</value>
  </data>
  <data name="HelpPageOperationUri" xml:space="preserve">
    <value>&lt;p  xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;b&gt;Url: &lt;/b&gt;&lt;span class="uri-template"&gt;{0}&lt;/span&gt;&lt;/p&gt;</value>
  </data>
  <data name="InvalidMethodWithSOAPHeaders" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' uses a MessageContract that has SOAP headers. SOAP headers are not supported by the None MessageVersion.</value>
  </data>
  <data name="WebRequestDidNotMatchMethod" xml:space="preserve">
    <value>The HTTP method '{0}' of the incoming request (with URI '{1}') is not allowed.</value>
  </data>
  <data name="AutomaticFormatSelectionNotSupportedInScripts" xml:space="preserve">
    <value>Automatic format selection is not supported for WebScript endpoints.</value>
  </data>
  <data name="XmlSerializersCreatedBeforeRegistration" xml:space="preserve">
    <value>New types cannot be registered with serializer manager after the service has been opened.</value>
  </data>
  <data name="WebBodyFormatPropertyToString" xml:space="preserve">
    <value>WebBodyFormatMessageProperty: WebContentFormat={0}</value>
  </data>
  <data name="UriTemplateMissingVar" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a UriTemplate that expects a parameter named '{2}', but there is no input parameter with that name on the operation.</value>
  </data>
  <data name="MaxReceivedMessageSizeExceeded" xml:space="preserve">
    <value>The maximum message size quota for incoming messages ({0}) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element.</value>
  </data>
  <data name="CannotSerializeType" xml:space="preserve">
    <value>Type '{0}' of operation '{1}' and contract ('{2}', '{3}') could not be serialized. Ensure that the type can be serialized using {4} and add the type to the known types collection of the service if required.</value>
  </data>
  <data name="CommandNotificationSqlDependencyNotSupported" xml:space="preserve">
    <value>'CommandNotification' is not supported as a valid sql dependency.</value>
  </data>
  <data name="HelpPageCouldNotGenerateSchema" xml:space="preserve">
    <value>Could not generate schema document.</value>
  </data>
  <data name="AtMostOneRequestBodyParameterAllowedForUnwrappedMessages" xml:space="preserve">
    <value>Operation '{0}' of contract '{1}' specifies multiple request body parameters to be serialized without any wrapper elements. At most one body parameter can be serialized without wrapper elements. Either remove the extra body parameters or set the BodyStyle property on the WebGetAttribute/WebInvokeAttribute to Wrapped.</value>
  </data>
  <data name="CacheProfileValueMissing" xml:space="preserve">
    <value>The cache profile, '{0}', must include value for '{1}'.</value>
  </data>
  <data name="HelpPageRedirect" xml:space="preserve">
    <value>&lt;p&gt;There is no operation listening for &lt;a href="{0}"&gt;{0}&lt;/a&gt;, but there is an operation listening for &lt;a href="{1}"&gt;{1}&lt;/a&gt;, so you are being redirected there.&lt;/p&gt;</value>
  </data>
  <data name="FormatterCannotBeUsedForRequestMessages" xml:space="preserve">
    <value>This message formatter cannot be used to process request messages.</value>
  </data>
  <data name="HelpPageUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="HelpPageJsonRequest" xml:space="preserve">
    <value>The following is an example request Json body:</value>
  </data>
  <data name="HelpExampleGeneratorMaxDepthLevelReached" xml:space="preserve">
    <value>Max depth level reached at {0}.</value>
  </data>
  <data name="ServiceEndpointMustHaveNonNullAddress" xml:space="preserve">
    <value>{0} has a null endpoint address. When using {1} with {2}, a non-null '{3}' must be specified on the {4}.</value>
  </data>
  <data name="OperationSelectorNotWebSelector" xml:space="preserve">
    <value>This operation is supported only when the operation selector is of type '{0}'.</value>
  </data>
  <data name="WebScriptNotSupportedForXmlSerializerFormat" xml:space="preserve">
    <value>Endpoints using '{0}' cannot be used with '{1}'.</value>
  </data>
  <data name="MessageBufferIsClosed" xml:space="preserve">
    <value>Message buffer is closed.</value>
  </data>
  <data name="SerializingReplyNotSupportedByFormatter" xml:space="preserve">
    <value>The formatter '{0}' does not support serializing replies.</value>
  </data>
  <data name="JsonWebScriptServiceHostAtLeastOneServiceContract" xml:space="preserve">
    <value>This service does not implement a service contract. To use WebScriptServiceHostFactory, you must implement one contract per service.</value>
  </data>
  <data name="MessageFormatPropertyNotFound3" xml:space="preserve">
    <value>Incoming message does not contain a WebBodyFormatMessageProperty. This can be because a WebContentTypeMapper or a WebMessageEncodingBindingElement has not been configured on the binding. See the documentation of WebContentTypeMapper and WebMessageEncodingBindingElement for more details.</value>
  </data>
  <data name="MessageFormatPropertyNotFound2" xml:space="preserve">
    <value>Message does not contain the http body format property. The encoder expects the http format property to be '{0}'.</value>
  </data>
  <data name="HelpPageNA" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="HelpPageStaticText" xml:space="preserve">
    <value>This page describes the service operations at this endpoint.</value>
  </data>
  <data name="HelpPageValidElementOfType" xml:space="preserve">
    <value>Valid elements of type: {0}</value>
  </data>
  <data name="HelpPageRequest" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="HelpPageEndpointNotFound" xml:space="preserve">
    <value>Endpoint not found.</value>
  </data>
  <data name="InvalidMessageContractWithoutWrapperName" xml:space="preserve">
    <value>Operation '{0}' in contract '{1}' has a MessageContract parameter (of type '{2}') without a wrapper name and with more than one body element. MessageContract parameters without a wrapper element are supported only if they have zero or one body element.</value>
  </data>
  <data name="NoOutOrRefStreamParametersAllowed" xml:space="preserve">
    <value>Parameter '{0}' of operation '{1}' in contract '{2}' is a Stream, and is also a ref or out parameter. Stream cannot be a ref or out parameter.</value>
  </data>
  <data name="HelpPageIsAtom10Feed" xml:space="preserve">
    <value>The {0} body is an Atom 1.0 syndication feed. See http://tools.ietf.org/html/rfc4287 for more details.</value>
  </data>
  <data name="RpcEncodedNotSupportedForNoneMessageVersion" xml:space="preserve">
    <value>Operation '{0}', belonging to contract ('{1}', '{2}') has an XmlSerializerFormatAttribute configured with OperationUse Encoded or OperationStyle Rpc. OperationUse Encoded and OperationStyle Rpc are not supported for web bindings. Configure the endpoint with a SOAP binding (like WSHttpBinding) in order to use these options.</value>
  </data>
  <data name="JsonFormatterExpectedAttributeObject" xml:space="preserve">
    <value>OperationFormatter encountered an invalid Message body. Expected to find an attribute with name 'type' and value 'object'. Found value '{0}'.</value>
  </data>
  <data name="MessageBodyIsStream" xml:space="preserve">
    <value>... stream ...</value>
  </data>
  <data name="HelpPageIsAtomPubCategoriesDocument" xml:space="preserve">
    <value>The {0} body is an Atom Pub categories document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</value>
  </data>
  <data name="TraceCodeRequestFormatSelectedFromContentTypeMapper" xml:space="preserve">
    <value>The user provided content type mapper selected the request format, '{0}', given the request's content-type, '{1}'.</value>
  </data>
</root>