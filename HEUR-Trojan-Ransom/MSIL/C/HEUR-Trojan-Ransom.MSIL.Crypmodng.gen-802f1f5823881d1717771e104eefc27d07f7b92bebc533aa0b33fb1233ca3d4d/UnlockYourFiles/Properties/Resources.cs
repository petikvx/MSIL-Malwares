// Decompiled with JetBrains decompiler
// Type: UnlockYourFiles.Properties.Resources
// Assembly: UnlockYourFiles, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 79C9ABD9-AD70-4EA1-ADC4-FC1CC25178CB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Crypmodng.gen-802f1f5823881d1717771e104eefc27d07f7b92bebc533aa0b33fb1233ca3d4d.exe

using LoginModern;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Drawing;
using System.Globalization;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Policy;
using System.Text;
using System.Windows.Forms;

namespace UnlockYourFiles.Properties
{
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  internal sealed class Resources
  {
    private static ResourceManager Ⴗ;
    private static CultureInfo Ⴀ;
    private static bool ႣႣ;

    internal Resources()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager Ⴓ
    {
      get
      {
label_3:
        bool flag = !UnlockYourFiles.Properties.Resources.ႥႷ((object) UnlockYourFiles.Properties.Resources.Ⴗ, (object) null, 834, 887);
label_4:
        int num = 8;
        ResourceManager resourceManager;
        while (true)
        {
          switch (num)
          {
            case 0:
              resourceManager = new ResourceManager("UnlockYourFiles.Properties.Resources", registro.ႭႠ(Ⴈ.Ⴃ.ႣႰ(__typeref (UnlockYourFiles.Properties.Resources), 986, 908), 585, 606));
              num = 6;
              continue;
            case 1:
              goto label_8;
            case 2:
              goto label_3;
            case 4:
            case 5:
              goto label_4;
            case 6:
            case 7:
              UnlockYourFiles.Properties.Resources.Ⴗ = resourceManager;
              num = 1;
              continue;
            case 8:
              num = flag ? 1 : 0;
              continue;
            default:
              RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.Ⴈ);
              num = 2;
              continue;
          }
        }
label_8:
        return UnlockYourFiles.Properties.Resources.Ⴗ;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Ⴗ
    {
      get => UnlockYourFiles.Properties.Resources.Ⴀ;
      set => UnlockYourFiles.Properties.Resources.Ⴀ = value;
    }

    [SecuritySafeCritical]
    static Resources() => UnlockYourFiles.Properties.Resources.ႣႤ();

    [SecuritySafeCritical]
    internal static Cursor Ⴅ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 43:
          num1 = 0;
          break;
        case 44:
          num1 = 4;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_9;
          case 1:
          case 4:
          case 7:
            goto label_10;
          case 2:
            num2 = 8;
            continue;
          case 5:
            num2 = 8;
            continue;
          case 8:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.Ⴅ);
            num2 = 8;
            continue;
        }
      }
label_9:
      return Cursors.WaitCursor;
label_10:
      return Cursors.Hand;
    }

    [SecuritySafeCritical]
    internal static string Ⴃ(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3,
      [In] int obj4,
      [In] int obj5)
    {
label_3:
      int num1;
      switch (obj5 ^ obj4)
      {
        case 113:
          num1 = 7;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 3:
            num2 = 0;
            continue;
          case 2:
          case 4:
          case 7:
            goto label_8;
          case 5:
            num2 = 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.Ⴃ);
            num2 = 0;
            continue;
        }
      }
label_8:
      return obj0 + obj1 + obj2 + obj3;
    }

    [SecuritySafeCritical]
    internal static int Ⴄ([In] string obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 14:
          num1 = 0;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
            goto label_8;
          case 1:
            num2 = 7;
            continue;
          case 6:
            num2 = 7;
            continue;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.Ⴄ);
            num2 = 7;
            continue;
        }
      }
label_8:
      return obj0.Length;
    }

    [SecuritySafeCritical]
    internal static void Ⴍ([In] PictureBox obj0, [In] Image obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            num1 = 1;
            continue;
          case 2:
          case 5:
            goto label_7;
          case 3:
            goto label_8;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 58:
                num2 = 5;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.Image = obj1;
    }

    [SecuritySafeCritical]
    internal static void Ⴜ([In] Control obj0, [In] EventHandler obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 2:
          case 3:
            goto label_7;
          case 4:
          case 5:
            num1 = 0;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 115:
                num2 = 2;
                break;
              case 116:
                goto label_8;
              case 117:
                goto label_9;
              case 118:
                goto label_10;
              default:
                num2 = 4;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Click += obj1;
      return;
label_8:
      obj0.TextChanged += obj1;
      return;
label_9:
      obj0.Enter += obj1;
      return;
label_10:
      obj0.Leave += obj1;
    }

    [SecuritySafeCritical]
    internal static void ႥႳ([In] Control obj0, [In] Color obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            num1 = 2;
            continue;
          case 1:
          case 3:
            goto label_7;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 105:
                num2 = 1;
                break;
              case 106:
                goto label_8;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.BackColor = obj1;
      return;
label_8:
      obj0.ForeColor = obj1;
    }

    [SecuritySafeCritical]
    internal static void ႥႥ([In] Control obj0, [In] Font obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            num1 = 3;
            continue;
          case 1:
          case 5:
            goto label_7;
          case 4:
            goto label_8;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 48:
                num2 = 5;
                break;
              default:
                num2 = 0;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.Font = obj1;
    }

    [SecuritySafeCritical]
    internal static void ႥႣ([In] Control obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_8;
          case 1:
          case 2:
          case 3:
            goto label_7;
          case 5:
            num1 = 4;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 94:
                num2 = 2;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.TabIndex = obj1;
    }

    [SecuritySafeCritical]
    internal static void ႥႤ([In] FlatButtonAppearance obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
          case 4:
            goto label_7;
          case 1:
          case 5:
            num1 = 3;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 97:
                num2 = 2;
                break;
              default:
                num2 = 5;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.BorderSize = obj1;
    }

    [SecuritySafeCritical]
    internal static void ႥႭ([In] FlatButtonAppearance obj0, [In] Color obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            num1 = 2;
            continue;
          case 3:
          case 4:
            goto label_7;
          case 5:
            goto label_9;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 59:
                num2 = 3;
                break;
              case 60:
                goto label_8;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_9:
      return;
label_7:
      obj0.MouseDownBackColor = obj1;
      return;
label_8:
      obj0.MouseOverBackColor = obj1;
    }

    [SecuritySafeCritical]
    internal static string ႥႠ([In] ResourceManager obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 114:
          num1 = 7;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            goto label_3;
          case 2:
            num2 = 1;
            continue;
          case 3:
            num2 = 1;
            continue;
          case 5:
          case 7:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႥႠ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return obj0.GetString(obj1);
    }

    [SecuritySafeCritical]
    internal static bool ႥႷ([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 53:
          num1 = 4;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            num2 = 3;
            continue;
          case 3:
          case 5:
            goto label_3;
          case 4:
            goto label_8;
          case 7:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႥႷ);
            num2 = 3;
            continue;
        }
      }
label_8:
      return object.ReferenceEquals(obj0, obj1);
    }

    [SecuritySafeCritical]
    internal static void ႥႰ([In] TextBox obj0, [In] HorizontalAlignment obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_8;
          case 1:
          case 4:
            goto label_7;
          case 2:
          case 3:
            num1 = 5;
            continue;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 116:
                num2 = 1;
                break;
              default:
                num2 = 3;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_7:
      obj0.TextAlign = obj1;
    }

    [SecuritySafeCritical]
    internal static Encoding ႥႨ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 47:
          num1 = 4;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            num2 = 6;
            continue;
          case 2:
          case 4:
            goto label_8;
          case 3:
            num2 = 6;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႥႨ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return Encoding.UTF8;
    }

    [SecuritySafeCritical]
    internal static int ႥႼ([In] long obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 73:
          num1 = 2;
          break;
        default:
          num1 = 6;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 1;
            continue;
          case 1:
          case 5:
            goto label_3;
          case 2:
            goto label_8;
          case 6:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႥႼ);
            num2 = 1;
            continue;
        }
      }
label_8:
      return Convert.ToInt32(obj0);
    }

    [SecuritySafeCritical]
    internal static string ႣႳ([In] string obj0, [In] string obj1, [In] string obj2, [In] int obj3, [In] int obj4)
    {
label_3:
      int num1;
      switch (obj4 ^ obj3)
      {
        case 26:
          num1 = 2;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 6:
            goto label_3;
          case 2:
          case 7:
            goto label_8;
          case 3:
          case 4:
            num2 = 6;
            continue;
          case 5:
            num2 = 6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႣႳ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return obj0 + obj1 + obj2;
    }

    [SecuritySafeCritical]
    internal static bool ႣႥ([In] Enum obj0, [In] Enum obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 39:
          num1 = 0;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_8;
          case 1:
          case 3:
          case 4:
            num2 = 2;
            continue;
          case 2:
            goto label_3;
          case 5:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႣႥ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return obj0.HasFlag(obj1);
    }

    [SecuritySafeCritical]
    internal static void ႣႤ()
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 2:
          case 4:
            goto label_4;
          default:
            if (!UnlockYourFiles.Properties.Resources.ႣႣ)
            {
              num1 = 2;
              continue;
            }
            goto label_10;
        }
      }
label_10:
      return;
label_4:
      lock (typeof (UnlockYourFiles.Properties.Resources))
      {
        int num2 = 1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_12;
            case 2:
            case 4:
              UnlockYourFiles.Properties.Resources.ႣႣ = true;
              goto case 3;
            case 3:
            case 5:
              AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(Ⴈ.Ⴃ.Ⴗ);
              num2 = 0;
              continue;
            default:
              num2 = UnlockYourFiles.Properties.Resources.ႣႣ ? 0 : 4;
              continue;
          }
        }
      }
label_12:
      int num3 = 0;
      while (true)
      {
        switch (num3)
        {
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (UnlockYourFiles.Properties.Resources.ႣႤ);
            num3 = 3;
            continue;
          case 3:
            goto label_16;
          default:
            num3 = 3;
            continue;
        }
      }
label_16:;
    }

    [SecuritySafeCritical]
    internal static Assembly ႣႭ([In] int obj0, [In] int obj1)
    {
label_0:
      switch ((obj1 ^ obj0) - 13)
      {
        case 0:
          return Assembly.GetExecutingAssembly();
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static Assembly ႣႠ([In] ResolveEventArgs obj0, [In] int obj1, [In] int obj2)
    {
label_0:
      switch ((obj2 ^ obj1) - 81)
      {
        case 0:
          return obj0.RequestingAssembly;
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static bool ႣႷ([In] Assembly obj0, [In] Assembly obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 9)
      {
        case 0:
          return obj0 != obj1;
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static AppDomain ႣႰ([In] int obj0, [In] int obj1)
    {
label_0:
      switch ((obj1 ^ obj0) - 102)
      {
        case 0:
          return AppDomain.CurrentDomain;
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static void ႣႨ([In] Array obj0, [In] RuntimeFieldHandle obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 111)
      {
        case 0:
          RuntimeHelpers.InitializeArray(obj0, obj1);
          break;
        default:
          goto label_0;
      }
    }

    [SecuritySafeCritical]
    internal static Evidence ႣႼ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
label_0:
      switch ((obj2 ^ obj1) - 44)
      {
        case 0:
          return obj0.Evidence;
        default:
          goto label_0;
      }
    }
  }
}
