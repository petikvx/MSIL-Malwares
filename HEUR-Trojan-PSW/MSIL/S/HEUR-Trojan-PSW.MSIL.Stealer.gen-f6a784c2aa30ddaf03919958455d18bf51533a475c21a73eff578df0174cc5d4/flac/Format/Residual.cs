// Decompiled with JetBrains decompiler
// Type: flac.Format.Residual
// Assembly: STAThreadAttrib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EE3DE1A-E148-4FBA-A193-65BEA1824C00
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f6a784c2aa30ddaf03919958455d18bf51533a475c21a73eff578df0174cc5d4.exe

namespace flac.Format
{
  public class Residual
  {
    private const int CODING_METHOD_BITS_COUNT = 2;
    private sbyte codingMethod_;
    private ResidualCodingMethod method_;

    public void Read(FlacStream stream, int blockSize, int predictorOrder, ref uint[] samples)
    {
      this.codingMethod_ = stream.Reader.ReadBitsAsSByte(2);
      switch (this.codingMethod_)
      {
        case 0:
          this.method_ = (ResidualCodingMethod) new ResidualCodingMethodPartitionedRice();
          this.method_.Read(stream, blockSize, predictorOrder, ref samples);
          break;
        case 1:
          throw new FlacNotImplementedException();
        default:
          throw new FlacFormatReservedException();
      }
    }

    public void Write(FlacStream stream, ref uint[] samples)
    {
      this.Write_(stream);
      this.method_.Write(stream, ref samples);
    }

    public void Write(FlacStream stream, int count, ref uint[] samples)
    {
      this.Write_(stream);
      this.method_.Write(stream, count, ref samples);
    }

    private void Write_(FlacStream stream) => stream.Writer.WriteBits((int) this.codingMethod_, 2);
  }
}
