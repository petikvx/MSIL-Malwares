// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: ContractHelp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E915048-53CD-4869-AA6D-7821BA258ED2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-226153caf46a7078970ce7ca5feb4aac6882ecb128e89ec40abb3be26166dd41.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -999578531;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1485139941)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              int num4 = flag ? 234386791 : (num4 = 107370160);
              num1 = num4 ^ (int) num2 * 1371263941;
              continue;
            case 2:
              jsonNode = this.m_List[aIndex];
              num1 = -596994079;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1710318945 ^ 730776101;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1577338905 ^ -564050222;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = -1836596285;
        }
label_11:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_8;
label_1:
        int num1 = 1597691782;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 949134785)) % 8U)
          {
            case 0:
              int num3 = !flag ? -1982742310 : (num3 = -169682168);
              num1 = num3 ^ (int) num2 * -1308536937;
              continue;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 1079863665 ^ 1697950554;
              continue;
            case 2:
              num1 = (int) num2 * -993899019 ^ 275377014;
              continue;
            case 3:
              this.m_List[aIndex] = value;
              num1 = 1551338709;
              continue;
            case 4:
              num1 = (int) num2 * -508358926 ^ 410937972;
              continue;
            case 5:
              goto label_3;
            case 6:
              goto label_1;
            case 7:
              goto label_7;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_7:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_9;
label_8:
        num4 = 1;
label_9:
        flag = num4 != 0;
        num1 = 1516304993;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -1189387371;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -533512198)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1559851452 ^ 132991249;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        this.m_List.Add(value);
label_1:
        int num1 = -1092967781;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -449639547)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1880230767 ^ 925004152;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_List.Count;
label_1:
        int num1 = 695760345;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 361251666)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1499214938 ^ 1165506515;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1770908233;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1938591149)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -142638751 ^ -1883225757;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_7;
label_1:
      int num1 = 279278154;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1437028980)) % 9U)
        {
          case 0:
            int num3 = !flag ? -479048626 : (num3 = -184560856);
            num1 = num3 ^ (int) num2 * -2061548844;
            continue;
          case 1:
            jsonNode1 = this.m_List[aIndex];
            num1 = 628655968;
            continue;
          case 2:
            num1 = (int) num2 * 1857203005 ^ 1268353125;
            continue;
          case 3:
            goto label_6;
          case 5:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1765487982 ^ 645523912;
            continue;
          case 6:
            goto label_1;
          case 7:
            this.m_List.RemoveAt(aIndex);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -410169690 ^ -897040781;
            continue;
          case 8:
            num1 = (int) num2 * 842219994 ^ 1489663071;
            continue;
          default:
            goto label_12;
        }
      }
label_6:
      int num4 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_8;
label_12:
      return jsonNode2;
label_7:
      num4 = 1;
label_8:
      flag = num4 != 0;
      num1 = 1137472545;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1902220531;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -187951270)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * 1892049293 ^ -1742576875;
            continue;
          case 3:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * -318015603 ^ 2015705627;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -831425444;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -613431411)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1269721078 ^ 721144446;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_5:
        int num1 = !enumerator.MoveNext() ? -851109557 : (num1 = -893972418);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -129031271)) % 9U)
          {
            case 0:
              str = JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(str, ", ");
              num1 = (int) num2 * 113295260 ^ 1741640769;
              continue;
            case 1:
              str = JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(str, JSONArray.\u200C‪‌⁬⁫⁭​⁬‏⁬⁭‎‭‪⁮‫⁭⁯​⁭‍⁫‌⁯⁪‪‬‍‪⁮‍‫‮​‮‏‎‭‮⁪‮((object) current));
              num1 = -1790084117;
              continue;
            case 2:
              num1 = (int) num2 * -16783946 ^ -416047349;
              continue;
            case 3:
              num1 = -893972418;
              continue;
            case 4:
              goto label_5;
            case 5:
              flag = JSONArray.\u202C⁬⁬⁫‬⁬‮‌⁬⁮⁯⁯‫‎‏‮⁯‮‪⁮‎​⁭‫⁭‭⁯‏‬⁪⁪⁯‪‎‍⁫‫⁮‎‌‮(str) > 2;
              num1 = (int) num2 * 86739708 ^ -1460536224;
              continue;
            case 6:
              current = enumerator.Current;
              num1 = -2043080829;
              continue;
            case 8:
              int num3 = !flag ? 880249671 : (num3 = 2051144182);
              num1 = num3 ^ (int) num2 * -744552790;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -957509756;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -129031271)) % 3U)
          {
            case 0:
              goto label_12;
            case 2:
              num4 = (int) num5 * -227621484 ^ 2093183569;
              continue;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      return JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_10:
        int num1 = !enumerator.MoveNext() ? -1178093018 : (num1 = -1757545069);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -327747462)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u202C‪⁬‪‪‭​⁭‮‭‌‍‍⁫‭‏‮‭⁬‪‏‎​‬⁬⁫⁪‪‮‌‬⁮‭⁫‏‪⁫⁫‫‫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(str1, current.ToString(JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(aPrefix, "   ")));
              num1 = -1181563756;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = -2013939383;
              continue;
            case 2:
              str1 = JSONArray.\u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮(str1, ", ");
              num1 = (int) num2 * 507241731 ^ 241720458;
              continue;
            case 3:
              num1 = (int) num2 * -221831256 ^ -1815328832;
              continue;
            case 4:
              num1 = -1757545069;
              continue;
            case 5:
              int num3 = JSONArray.\u202C⁬⁬⁫‬⁬‮‌⁬⁮⁯⁯‫‎‏‮⁯‮‪⁮‎​⁭‫⁭‭⁯‏‬⁪⁪⁯‪‎‍⁫‫⁮‎‌‮(str1) > 3 ? -1105488056 : (num3 = -356612200);
              num1 = num3 ^ (int) num2 * -1861621327;
              continue;
            case 7:
              goto label_10;
            case 8:
              num1 = (int) num2 * 1389598061 ^ 514200524;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONArray.\u202C‪⁬‪‪‭​⁭‮‭‌‍‍⁫‭‏‮‭⁬‪‏‎​‬⁬⁫⁪‪‮‌‬⁮‭⁫‏‪⁫⁫‫‫‮(str1, "\n", aPrefix, "]");
label_13:
      int num4 = -441216641;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -327747462)) % 3U)
        {
          case 0:
            goto label_13;
          case 1:
            num4 = (int) num5 * -1959710870 ^ -1627901681;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1072890027;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1038353613)) % 11U)
        {
          case 0:
            num1 = (int) num2 * -928859090 ^ 408713864;
            continue;
          case 1:
            JSONArray.\u206A‎⁭⁬⁬‌‫‬⁪‎⁪‌‪‭‬​⁫⁬‏‫‪⁮⁫‌​​⁯‏⁭⁪‍​‌⁮‮‭‍⁬‎⁭‮(aWriter, (byte) 1);
            JSONArray.\u200F⁫‫‮‌⁯⁫‍⁯‪‪‪‭‭⁪‭‌‬‭‏⁮‎‌⁫‌‫‬‭‫‏‮‌⁮‎‎⁭‫‫‬‌‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -874942975 ^ -1199023897;
            continue;
          case 2:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 846803462 ^ 689590580;
            continue;
          case 3:
            ++index;
            num1 = (int) num2 * 147846633 ^ 659368407;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num3;
            num1 = num3 = index < this.m_List.Count ? 1159610721 : (num3 = 1378510353);
            continue;
          case 6:
            num1 = 1769659317;
            continue;
          case 7:
            num1 = (int) num2 * -1651418952 ^ 792398805;
            continue;
          case 8:
            goto label_3;
          case 9:
            index = 0;
            num1 = (int) num2 * 1397061459 ^ 1537848959;
            continue;
          case 10:
            num1 = (int) num2 * -1823118680 ^ 1505699071;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u202C⁬⁬⁫‬⁬‮‌⁬⁮⁯⁯‫‎‏‮⁯‮‪⁮‎​⁭‫⁭‭⁯‏‬⁪⁪⁯‪‎‍⁫‫⁮‎‌‮([In] string obj0) => obj0.Length;

    static string \u200B‬⁫‏‍‫‫⁯​‬‪⁯⁭‮⁭‮‪‭‭‌⁯‫⁫⁭⁯⁪‎⁮⁬‎‬⁫​⁭⁫⁭⁫⁫⁪‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200C‪‌⁬⁫⁭​⁬‏⁬⁭‎‭‪⁮‫⁭⁯​⁭‍⁫‌⁯⁪‪‬‍‪⁮‍‫‮​‮‏‎‭‮⁪‮([In] object obj0) => obj0.ToString();

    static string \u202C‪⁬‪‪‭​⁭‮‭‌‍‍⁫‭‏‮‭⁬‪‏‎​‬⁬⁫⁪‪‮‌‬⁮‭⁫‏‪⁫⁫‫‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206A‎⁭⁬⁬‌‫‬⁪‎⁪‌‪‭‬​⁫⁬‏‫‪⁮⁫‌​​⁯‏⁭⁪‍​‌⁮‮‭‍⁬‎⁭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200F⁫‫‮‌⁯⁫‍⁯‪‪‪‭‭⁪‭‌‬‭‏⁮‎‌⁫‌‫‬‭‫‏‮‌⁮‎‎⁭‫‫‬‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
