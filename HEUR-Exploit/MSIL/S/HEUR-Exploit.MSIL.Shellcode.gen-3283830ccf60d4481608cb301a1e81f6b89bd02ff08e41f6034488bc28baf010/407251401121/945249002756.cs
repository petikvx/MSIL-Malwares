// Decompiled with JetBrains decompiler
// Type: 407251401121.945249002756
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003300396452572;
using \u003358248007696;
using \u003504423198486;
using \u003545704640419;
using \u003660835381033;
using \u003696338941835;
using \u003741381466672;
using \u003771916509144;
using \u003774003589282;
using \u003830680403346;
using \u003876672864131;
using \u003991227119410;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Reflection;

namespace \u003407251401121
{
  public class \u003945249002756 : \u003568106781820
  {
    private readonly Type \u003142606926306;
    private Type \u003459214035415;
    private \u003381561884367<object> \u003861901546665;
    private Func<object> \u003772477551369;
    private readonly ConstructorInfo \u003783941006941;
    private \u003381561884367<object> \u003702604205341;
    private \u003381561884367<object> \u003155648542507;

    public Func<string, string> \u003556455882719 { get; set; }

    public Type \u003712319470113 { get; }

    public Type \u003640902734191 { get; }

    internal \u003138066013867 \u003477672677533 { get; set; }

    internal bool \u003142269393979 { get; }

    internal \u003381561884367<object> \u003911541483662
    {
      get
      {
        if (this.\u003155648542507 == null)
          this.\u003155648542507 = \u003502658244085.\u003056461731906.\u003520647960490((MethodBase) this.\u003783941006941);
        return this.\u003155648542507;
      }
    }

    public \u003381561884367<object> \u003722330046521
    {
      get => this.\u003702604205341;
      set => this.\u003702604205341 = value;
    }

    public bool \u003620490203874 { get; set; }

    internal bool \u003799586421759 => this.\u003620490203874 || this.\u003155648542507 != null || this.\u003783941006941 != (ConstructorInfo) null;

    public \u003945249002756(Type underlyingType)
      : base(underlyingType)
    {
      this.\u003441551943907 = \u003831747053328.Dictionary;
      Type genericArgument1;
      Type genericArgument2;
      if (\u003560732527318.\u003256319689428(underlyingType, typeof (IDictionary<,>), out this.\u003142606926306))
      {
        genericArgument1 = this.\u003142606926306.GetGenericArguments()[0];
        genericArgument2 = this.\u003142606926306.GetGenericArguments()[1];
        if (\u003560732527318.\u003413136198838(this.\u003587454762815, typeof (IDictionary<,>)))
          this.\u003109517608573 = typeof (Dictionary<,>).MakeGenericType(genericArgument1, genericArgument2);
        this.\u003947754397253 = \u003560732527318.\u003805969235920(underlyingType, typeof (ReadOnlyDictionary<,>));
      }
      else if (\u003560732527318.\u003256319689428(underlyingType, typeof (IReadOnlyDictionary<,>), out this.\u003142606926306))
      {
        genericArgument1 = this.\u003142606926306.GetGenericArguments()[0];
        genericArgument2 = this.\u003142606926306.GetGenericArguments()[1];
        if (\u003560732527318.\u003413136198838(this.\u003587454762815, typeof (IReadOnlyDictionary<,>)))
          this.\u003109517608573 = typeof (ReadOnlyDictionary<,>).MakeGenericType(genericArgument1, genericArgument2);
        this.\u003947754397253 = true;
      }
      else
      {
        \u003560732527318.\u003410580278555(this.\u003587454762815, out genericArgument1, out genericArgument2);
        if (this.\u003587454762815 == typeof (IDictionary))
          this.\u003109517608573 = typeof (Dictionary<object, object>);
      }
      if (genericArgument1 != (Type) null && genericArgument2 != (Type) null)
      {
        this.\u003783941006941 = \u003141440380044.\u003109848411990(this.\u003109517608573, typeof (KeyValuePair<,>).MakeGenericType(genericArgument1, genericArgument2), typeof (IDictionary<,>).MakeGenericType(genericArgument1, genericArgument2));
        if (!this.\u003799586421759 && underlyingType.Name == "FSharpMap`2")
        {
          \u003093740224590.\u003520689373227(underlyingType.\u003605177313253());
          this.\u003155648542507 = \u003093740224590.\u003166420770816(genericArgument1, genericArgument2);
        }
      }
      this.\u003142269393979 = !typeof (IDictionary).IsAssignableFrom(this.\u003109517608573);
      this.\u003712319470113 = genericArgument1;
      this.\u003640902734191 = genericArgument2;
      Type type;
      \u003381561884367<object> obj;
      if (!\u003336617047972.\u003596965780797(underlyingType, this.\u003712319470113, this.\u003640902734191, out type, out obj))
        return;
      this.\u003109517608573 = type;
      this.\u003155648542507 = obj;
      this.\u003947754397253 = true;
    }

    internal IWrappedDictionary \u003073092966813(object _param1)
    {
      if (this.\u003861901546665 == null)
      {
        this.\u003459214035415 = typeof (\u003945301884499<,>).MakeGenericType(this.\u003712319470113, this.\u003640902734191);
        this.\u003861901546665 = \u003502658244085.\u003056461731906.\u003520647960490((MethodBase) this.\u003459214035415.GetConstructor(new Type[1]
        {
          this.\u003142606926306
        }));
      }
      return (IWrappedDictionary) this.\u003861901546665(new object[1]
      {
        _param1
      });
    }

    internal IDictionary \u003431088089655()
    {
      if (this.\u003772477551369 == null)
      {
        Type type1 = typeof (Dictionary<,>);
        Type[] typeArray = new Type[2];
        Type type2 = this.\u003712319470113;
        if ((object) type2 == null)
          type2 = typeof (object);
        typeArray[0] = type2;
        Type type3 = this.\u003640902734191;
        if ((object) type3 == null)
          type3 = typeof (object);
        typeArray[1] = type3;
        this.\u003772477551369 = \u003502658244085.\u003056461731906.\u003249235600579<object>(type1.MakeGenericType(typeArray));
      }
      return (IDictionary) this.\u003772477551369();
    }
  }
}
