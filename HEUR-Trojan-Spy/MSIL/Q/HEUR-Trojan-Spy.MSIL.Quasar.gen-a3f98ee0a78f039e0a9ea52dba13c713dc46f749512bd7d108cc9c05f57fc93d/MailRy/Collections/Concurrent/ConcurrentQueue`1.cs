// Decompiled with JetBrains decompiler
// Type: MailRy.Collections.Concurrent.ConcurrentQueue`1
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using System.Collections.Generic;

namespace MailRy.Collections.Concurrent
{
  public class ConcurrentQueue<T>
  {
    private Queue<T> m_Queue;
    private object m_SyncRoot = new object();

    public ConcurrentQueue() => this.m_Queue = new Queue<T>();

    public ConcurrentQueue(int capacity) => this.m_Queue = new Queue<T>(capacity);

    public ConcurrentQueue(IEnumerable<T> collection) => this.m_Queue = new Queue<T>(collection);

    public void Enqueue(T item)
    {
      lock (this.m_SyncRoot)
        this.m_Queue.Enqueue(item);
    }

    public bool TryDequeue(out T item)
    {
      lock (this.m_SyncRoot)
      {
        if (this.m_Queue.Count <= 0)
        {
          item = default (T);
          return false;
        }
        item = this.m_Queue.Dequeue();
        return true;
      }
    }
  }
}
