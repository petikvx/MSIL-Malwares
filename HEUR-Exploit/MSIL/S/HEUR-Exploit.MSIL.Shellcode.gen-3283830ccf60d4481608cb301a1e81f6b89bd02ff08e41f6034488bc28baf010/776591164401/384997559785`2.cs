// Decompiled with JetBrains decompiler
// Type: 776591164401.384997559785
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003208825527781;
using System;
using System.Collections.Generic;
using System.Globalization;

namespace \u003776591164401
{
  internal class \u003384997559785<TFirst, TSecond>
  {
    private readonly IDictionary<TFirst, TSecond> \u003881043575621;
    private readonly IDictionary<TSecond, TFirst> \u003903169651617;
    private readonly string \u003394729086596;
    private readonly string \u003803562653027;

    public \u003384997559785()
      : this((IEqualityComparer<TFirst>) EqualityComparer<TFirst>.Default, (IEqualityComparer<TSecond>) EqualityComparer<TSecond>.Default)
    {
    }

    public \u003384997559785(
      IEqualityComparer<TFirst> firstEqualityComparer,
      IEqualityComparer<TSecond> secondEqualityComparer)
      : this(firstEqualityComparer, secondEqualityComparer, "Duplicate item already exists for '{0}'.", "Duplicate item already exists for '{0}'.")
    {
    }

    public \u003384997559785(
      IEqualityComparer<TFirst> firstEqualityComparer,
      IEqualityComparer<TSecond> secondEqualityComparer,
      string duplicateFirstErrorMessage,
      string duplicateSecondErrorMessage)
    {
      this._firstToSecond = (IDictionary<TFirst, TSecond>) new Dictionary<TFirst, TSecond>(firstEqualityComparer);
      this._secondToFirst = (IDictionary<TSecond, TFirst>) new Dictionary<TSecond, TFirst>(secondEqualityComparer);
      this._duplicateFirstErrorMessage = duplicateFirstErrorMessage;
      this._duplicateSecondErrorMessage = duplicateSecondErrorMessage;
    }

    public void \u003217869030094(TFirst _param1, TSecond _param2)
    {
      TSecond second;
      if (this._firstToSecond.TryGetValue(_param1, out second) && !second.Equals((object) _param2))
        throw new ArgumentException(this._duplicateFirstErrorMessage.\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1));
      TFirst first;
      if (this._secondToFirst.TryGetValue(_param2, out first) && !first.Equals((object) _param1))
        throw new ArgumentException(this._duplicateSecondErrorMessage.\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param2));
      this._firstToSecond.Add(_param1, _param2);
      this._secondToFirst.Add(_param2, _param1);
    }

    public bool \u003482815419782(TFirst _param1, out TSecond _param2) => this._firstToSecond.TryGetValue(_param1, out _param2);

    public bool \u003345027867282(TSecond _param1, out TFirst _param2) => this._secondToFirst.TryGetValue(_param1, out _param2);
  }
}
