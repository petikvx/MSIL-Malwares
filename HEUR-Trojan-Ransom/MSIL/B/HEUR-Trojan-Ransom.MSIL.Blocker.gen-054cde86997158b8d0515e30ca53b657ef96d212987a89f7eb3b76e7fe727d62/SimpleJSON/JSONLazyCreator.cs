// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: InternalSi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: F44F14A9-876B-4F73-A898-F3E4E8A5FAFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-054cde86997158b8d0515e30ca53b657ef96d212987a89f7eb3b76e7fe727d62.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 1372220362;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 169024946)) % 10U)
        {
          case 0:
            num1 = (int) num2 * -1172390635 ^ -1778631655;
            continue;
          case 1:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 973953185 ^ 867729124;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = 397875265;
            continue;
          case 4:
            int num3 = flag ? 1380873918 : (num3 = 2053243299);
            num1 = num3 ^ (int) num2 * 1117443913;
            continue;
          case 5:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -966652149 ^ -929315241;
            continue;
          case 6:
            flag = this.m_Key == null;
            num1 = (int) num2 * -2047299567 ^ -599789266;
            continue;
          case 7:
            num1 = (int) num2 * -569824795 ^ -1327052529;
            continue;
          case 8:
            this.m_Node = (JSONNode) null;
            num1 = 628922688;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -93441211;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -500664146)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1642947297 ^ 23513134;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 8714557;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2046331303)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -848677120 ^ -1190117512;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1567716157;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -937125134)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -590944430 ^ 561383358;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1972705928;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1175310819)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * 1744244067 ^ 127799301;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1322533901 ^ 2057545706;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 1638663427;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1908209392)) % 6U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -124883845 ^ -239932621;
            continue;
          case 1:
            num1 = (int) num2 * -1326578988 ^ 7460430;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1649350239 ^ -598328813;
            continue;
          case 4:
            goto label_3;
          case 5:
            aVal.Add(aItem);
            num1 = (int) num2 * -1228050737 ^ 1830695682;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1479763887;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1414902014)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -903573069 ^ 1555076818;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Set((JSONNode) aVal);
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1760462166;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1995718468)) % 7U)
        {
          case 0:
            int num3 = flag2 ? 1647598580 : (num3 = 310443803);
            num1 = num3 ^ (int) num2 * 314809204;
            continue;
          case 1:
            flag2 = b == null;
            num1 = (int) num2 * 2091754808 ^ -1458002372;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag1 = (object) a == b;
            num1 = -1006380083;
            continue;
          case 4:
            num1 = (int) num2 * -1120241411 ^ 1288957022;
            continue;
          case 5:
            flag1 = true;
            num1 = (int) num2 * -533399086 ^ -1775574045;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -51171958;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1069961474)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -2071716617 ^ -1345377896;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -260835644;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2023973232)) % 8U)
        {
          case 0:
            int num3 = flag1 ? -1581483938 : (num3 = -195928461);
            num1 = num3 ^ (int) num2 * 954925312;
            continue;
          case 1:
            num1 = (int) num2 * 481193288 ^ 1946205762;
            continue;
          case 3:
            flag2 = (object) this == obj;
            num1 = -1594901499;
            continue;
          case 4:
            flag1 = obj == null;
            num1 = (int) num2 * 460787674 ^ 1591721912;
            continue;
          case 5:
            num1 = (int) num2 * -704297107 ^ 917043195;
            continue;
          case 6:
            flag2 = true;
            num1 = (int) num2 * -1600082363 ^ 1149823879;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1227845789;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1973100572)) % 4U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 714740427 ^ 2045438777;
            continue;
          case 2:
            num1 = (int) num2 * 2108781945 ^ -1292084618;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1687734403;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1151709412)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * 907583911 ^ -696851704;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = 670329298;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 940482547)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2095979412 ^ -839957045;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -603793838;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1629921408)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * -1274672367 ^ -335175330;
              continue;
            case 2:
              aVal = new JSONData(0);
              num1 = (int) num2 * 1479285131 ^ 30256483;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -365722910;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -924054787)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1470178259 ^ 2122674672;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 126044819 ^ -1496622312;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -43087631;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1096014541)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = 0.0f;
              num1 = (int) num2 * -334005667 ^ -1419066271;
              continue;
            case 3:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * 782577611 ^ -345437827;
              continue;
            case 4:
              num1 = (int) num2 * -1876677785 ^ -1576053250;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -823830562;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1278535561)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -599515141 ^ 371602503;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override double AsDouble
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0));
        double asDouble = 0.0;
label_1:
        int num1 = -828274307;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -756245705)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1866816895 ^ 1526621775;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asDouble;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -987616501;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1021770989)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 928330930 ^ 1161160852;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * 82060677 ^ -1523490698;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * 401660405 ^ 1613726737;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 830777093;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1358329982)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -2086029962 ^ 1864589319;
              continue;
            case 3:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -1084592747 ^ -2097697593;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 47780547;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1934838328)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * 1967034687 ^ -175887923;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -2140381517;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -306999156)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -691908581 ^ 386100510;
              continue;
            case 1:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1706046212 ^ 472604444;
              continue;
            case 2:
              num1 = (int) num2 * 1034002256 ^ 296242983;
              continue;
            case 3:
              asObject = aVal;
              num1 = (int) num2 * 1178848170 ^ -657404568;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
