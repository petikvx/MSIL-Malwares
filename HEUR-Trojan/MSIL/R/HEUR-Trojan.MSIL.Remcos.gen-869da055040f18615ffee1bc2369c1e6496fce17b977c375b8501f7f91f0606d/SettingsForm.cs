// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.SettingsForm
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  [DesignerGenerated]
  public class SettingsForm : Form
  {
    private IContainer components;
    private object player;
    private int RoundTime;
    private List<string> RoleList;
    private int RoleCount;

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_6:
        // ISSUE: reference to a compiler-generated method
        int num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
        int num2 = 8;
        while (true)
        {
          switch (num2 ^ 65)
          {
            case 70:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.set_RolesLeftLabel);
              num2 = 7;
              continue;
            case 71:
              goto label_6;
            case 72:
              switch (num1 + 68)
              {
                case 0:
                  this.components.Dispose();
                  num1 = -11;
                  goto label_2;
                case 1:
                  num1 = -9;
                  goto label_2;
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.get_AudioCheckBox);
                  num1 = -10;
                  goto label_2;
                case 3:
                  goto label_12;
                default:
                  num2 = 6;
                  continue;
              }
            case 73:
label_2:
              num1 ^= 72;
              break;
          }
          num2 = 9;
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE20F()
    {
label_2:
      int num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(74);
label_1:
      while (true)
      {
        num1 ^= 73;
        switch (num1 + 64)
        {
          case 0:
            this.PlayerNameField.Location = new Point(172, 26);
            this.PlayerNameField.Name = "PlayerNameField";
            this.PlayerNameField.Size = new Size(110, 23);
            this.PlayerNameField.TabIndex = 0;
            this.PlayerNameLabel.AutoSize = true;
            this.PlayerNameLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -126;
            continue;
          case 1:
            this.RolesLeftLabel.Location = new Point(27, 244);
            this.RolesLeftLabel.Name = "RolesLeftLabel";
            this.RolesLeftLabel.Size = new Size(95, 18);
            this.RolesLeftLabel.TabIndex = 14;
            this.RolesLeftLabel.Text = "Roles Left: ";
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            num1 = -103;
            continue;
          case 2:
            goto label_5;
          case 3:
            this.RoundTimeTextField.Name = "RoundTimeTextField";
            this.RoundTimeTextField.Size = new Size(31, 20);
            this.RoundTimeTextField.TabIndex = 9;
            this.RoundLabel.AutoSize = true;
            this.RoundLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.RoundLabel.Location = new Point(12, 177);
            num1 = -100;
            continue;
          case 4:
            this.Controls.Add((Control) this.FontSizeLabel);
            this.Controls.Add((Control) this.SaveButton);
            this.Controls.Add((Control) this.PlayerNameLabel);
            this.Controls.Add((Control) this.PlayerNameField);
            this.Name = nameof (SettingsForm);
            this.Text = nameof (SettingsForm);
            num1 = -111;
            continue;
          case 5:
            this.Cancel = new Button();
            this.HostSettingsLabel = new Label();
            this.RoundTimeTextField = new TextBox();
            this.RoundLabel = new Label();
            this.RoleComboBox = new ComboBox();
            this.AddRolesLabel = new Label();
            num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(69);
            continue;
          case 6:
            this.FontSizeLabel.Text = "Chat Font Size:";
            this.FontSizeValue.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.FontSizeValue.Location = new Point(172, 69);
            this.FontSizeValue.Maximum = 14;
            this.FontSizeValue.Minimum = 8;
            this.FontSizeValue.Name = "FontSizeValue";
            num1 = -114;
            continue;
          case 7:
            this.FontSizeValue.Size = new Size(115, 45);
            this.FontSizeValue.TabIndex = 5;
            this.FontSizeValue.Value = 10;
            this.AudioCheckBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.AudioCheckBox.AutoSize = true;
            this.AudioCheckBox.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -121;
            continue;
          case 8:
            this.Cancel.Anchor = AnchorStyles.Bottom;
            this.Cancel.Location = new Point(256, 332);
            this.Cancel.MaximumSize = new Size(75, 23);
            this.Cancel.MinimumSize = new Size(75, 23);
            this.Cancel.Name = "Cancel";
            this.Cancel.Size = new Size(75, 23);
            num1 = -97;
            continue;
          case 9:
            this.HostSettingsLabel.Size = new Size(207, 13);
            this.HostSettingsLabel.TabIndex = 8;
            this.HostSettingsLabel.Text = "Master Settings (Only Master Can Change)";
            this.RoundTimeTextField.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.RoundTimeTextField.Enabled = false;
            this.RoundTimeTextField.Location = new Point(172, 179);
            num1 = -118;
            continue;
          case 10:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE218);
            num1 = -125;
            continue;
          case 11:
            this.PlayerNameLabel.Location = new Point(12, 29);
            this.PlayerNameLabel.Name = "PlayerNameLabel";
            this.PlayerNameLabel.Size = new Size(114, 20);
            this.PlayerNameLabel.TabIndex = 1;
            this.PlayerNameLabel.Text = "Player Name:";
            this.SaveButton.Anchor = AnchorStyles.Bottom;
            num1 = -99;
            continue;
          case 12:
            this.AddRoleButton = new Button();
            this.RolesLeftLabel = new Label();
            this.FontSizeValue.BeginInit();
            this.SuspendLayout();
            this.PlayerNameField.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.PlayerNameField.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            num1 = -119;
            continue;
          case 13:
            this.FontSizeLabel.AutoSize = true;
            this.FontSizeLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.FontSizeLabel.Location = new Point(12, 69);
            this.FontSizeLabel.Name = "FontSizeLabel";
            this.FontSizeLabel.Size = new Size(134, 20);
            this.FontSizeLabel.TabIndex = 3;
            num1 = -113;
            continue;
          case 14:
            this.AudioCheckBox.Location = new Point(172, 129);
            this.AudioCheckBox.Name = "AudioCheckBox";
            this.AudioCheckBox.Size = new Size(135, 24);
            this.AudioCheckBox.TabIndex = 6;
            this.AudioCheckBox.Text = "Enable Audio";
            this.AudioCheckBox.UseVisualStyleBackColor = true;
            num1 = -127;
            continue;
          case 15:
            this.RoleComboBox.Sorted = true;
            this.RoleComboBox.TabIndex = 11;
            this.AddRolesLabel.AutoSize = true;
            this.AddRolesLabel.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.AddRolesLabel.Location = new Point(16, 224);
            this.AddRolesLabel.Name = "AddRolesLabel";
            num1 = -101;
            continue;
          case 16:
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(367, 367);
            this.Controls.Add((Control) this.RolesLeftLabel);
            this.Controls.Add((Control) this.AddRoleButton);
            this.Controls.Add((Control) this.AddRolesLabel);
            this.Controls.Add((Control) this.RoleComboBox);
            num1 = -102;
            continue;
          case 17:
            this.PlayerNameField = new TextBox();
            this.PlayerNameLabel = new Label();
            this.SaveButton = new Button();
            this.FontSizeLabel = new Label();
            this.FontSizeValue = new TrackBar();
            this.AudioCheckBox = new CheckBox();
            num1 = -116;
            continue;
          case 18:
            this.AddRolesLabel.Size = new Size(97, 20);
            this.AddRolesLabel.TabIndex = 12;
            this.AddRolesLabel.Text = "Add Roles:";
            this.AddRoleButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.AddRoleButton.Location = new Point(302, 226);
            this.AddRoleButton.Name = "AddRoleButton";
            num1 = -98;
            continue;
          case 19:
            this.Controls.Add((Control) this.RoundLabel);
            this.Controls.Add((Control) this.RoundTimeTextField);
            this.Controls.Add((Control) this.HostSettingsLabel);
            this.Controls.Add((Control) this.Cancel);
            this.Controls.Add((Control) this.AudioCheckBox);
            this.Controls.Add((Control) this.FontSizeValue);
            num1 = -115;
            continue;
          case 20:
            this.SaveButton.Location = new Point(155, 332);
            this.SaveButton.Name = "SaveButton";
            this.SaveButton.Size = new Size(75, 23);
            this.SaveButton.TabIndex = 2;
            this.SaveButton.Text = "Save";
            this.SaveButton.UseVisualStyleBackColor = true;
            num1 = -124;
            continue;
          case 21:
            this.RoundLabel.Name = "RoundLabel";
            this.RoundLabel.Size = new Size(110, 20);
            this.RoundLabel.TabIndex = 10;
            this.RoundLabel.Text = "Round Time:";
            this.RoleComboBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.RoleComboBox.DropDownStyle = ComboBoxStyle.DropDownList;
            num1 = -117;
            continue;
          case 22:
            this.Cancel.TabIndex = 7;
            this.Cancel.Text = "Cancel";
            this.Cancel.UseVisualStyleBackColor = true;
            this.HostSettingsLabel.AutoSize = true;
            this.HostSettingsLabel.Location = new Point(13, 154);
            this.HostSettingsLabel.Name = "HostSettingsLabel";
            num1 = (int) sbyte.MinValue;
            continue;
          case 23:
            this.AddRoleButton.Size = new Size(41, 23);
            this.AddRoleButton.TabIndex = 13;
            this.AddRoleButton.Text = "Add";
            this.AddRoleButton.UseVisualStyleBackColor = true;
            this.RolesLeftLabel.AutoSize = true;
            this.RolesLeftLabel.Font = new Font("Microsoft Sans Serif", 11.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            num1 = -120;
            continue;
          case 24:
            goto label_42;
          default:
            goto label_2;
        }
      }
label_5:
      this.RoleComboBox.FlatStyle = FlatStyle.System;
label_7:
      int num2 = 108;
      while (true)
      {
        switch (num2 ^ 63)
        {
          case 74:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.set_SaveButton);
            num2 = 117;
            continue;
          case 75:
            num2 = 111;
            continue;
          case 76:
            this.RoleComboBox.Location = new Point(172, 226);
            num2 = 107;
            continue;
          case 77:
            num2 = 115;
            continue;
          case 78:
            this.RoleComboBox.FormattingEnabled = true;
            num2 = 110;
            continue;
          case 79:
            num2 = 109;
            continue;
          case 80:
            num1 = -122;
            num2 = 104;
            continue;
          case 81:
            num2 = 105;
            continue;
          case 82:
            this.RoleComboBox.Size = new Size(110, 21);
            num2 = 116;
            continue;
          case 83:
            num2 = 113;
            continue;
          case 84:
            num2 = 106;
            continue;
          case 85:
            this.RoleComboBox.Name = "RoleComboBox";
            num2 = 112;
            continue;
          case 86:
            this.RoleComboBox.Items.AddRange(new object[6]
            {
              (object) "Drunk",
              (object) "Hunter",
              (object) "Insomniac",
              (object) "Minion",
              (object) "Tanner",
              (object) "Villager"
            });
            num2 = 114;
            continue;
          case 87:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_42:
      this.FontSizeValue.EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox PlayerNameField
    {
      get => this._PlayerNameField;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE211);
        TextBox playerNameField1 = this._PlayerNameField;
        if ((playerNameField1 == null ? 1 : 0) == 0)
          playerNameField1.TextChanged -= eventHandler;
        this._PlayerNameField = value;
        TextBox playerNameField2 = this._PlayerNameField;
        if ((playerNameField2 == null ? 1 : 0) != 0)
          return;
        playerNameField2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerNameLabel")]
    internal virtual Label PlayerNameLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button SaveButton
    {
      get => this._SaveButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE212);
        Button saveButton1 = this._SaveButton;
        if ((saveButton1 == null ? 1 : 0) == 0)
          saveButton1.Click -= eventHandler;
        this._SaveButton = value;
        Button saveButton2 = this._SaveButton;
        if ((saveButton2 == null ? 1 : 0) != 0)
          return;
        saveButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("FontSizeLabel")]
    internal virtual Label FontSizeLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TrackBar FontSizeValue
    {
      get => this._FontSizeValue;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE213);
        TrackBar fontSizeValue1 = this._FontSizeValue;
        if ((fontSizeValue1 == null ? 1 : 0) == 0)
          fontSizeValue1.Scroll -= eventHandler;
        this._FontSizeValue = value;
        TrackBar fontSizeValue2 = this._FontSizeValue;
        if ((fontSizeValue2 == null ? 1 : 0) != 0)
          return;
        fontSizeValue2.Scroll += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AudioCheckBox")]
    internal virtual CheckBox AudioCheckBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button Cancel
    {
      get => this._Cancel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE215);
        Button cancel1 = this._Cancel;
        if ((cancel1 == null ? 1 : 0) == 0)
          cancel1.Click -= eventHandler;
        this._Cancel = value;
        Button cancel2 = this._Cancel;
        if ((cancel2 == null ? 1 : 0) != 0)
          return;
        cancel2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("HostSettingsLabel")]
    internal virtual Label HostSettingsLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TextBox RoundTimeTextField
    {
      get => this._RoundTimeTextField;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE216);
        TextBox roundTimeTextField1 = this._RoundTimeTextField;
        if ((roundTimeTextField1 == null ? 1 : 0) == 0)
          roundTimeTextField1.TextChanged -= eventHandler;
        this._RoundTimeTextField = value;
        TextBox roundTimeTextField2 = this._RoundTimeTextField;
        if ((roundTimeTextField2 == null ? 1 : 0) != 0)
          return;
        roundTimeTextField2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("RoundLabel")]
    internal virtual Label RoundLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox RoleComboBox
    {
      get => this._RoleComboBox;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE218);
        ComboBox roleComboBox1 = this._RoleComboBox;
        if ((roleComboBox1 == null ? 1 : 0) == 0)
          roleComboBox1.SelectedIndexChanged -= eventHandler;
        this._RoleComboBox = value;
        ComboBox roleComboBox2 = this._RoleComboBox;
        if ((roleComboBox2 == null ? 1 : 0) != 0)
          return;
        roleComboBox2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AddRolesLabel")]
    internal virtual Label AddRolesLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button AddRoleButton
    {
      get => this._AddRoleButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE217);
        Button addRoleButton1 = this._AddRoleButton;
        if ((addRoleButton1 == null ? 1 : 0) == 0)
          addRoleButton1.Click -= eventHandler;
        this._AddRoleButton = value;
        Button addRoleButton2 = this._AddRoleButton;
        if ((addRoleButton2 == null ? 1 : 0) != 0)
          return;
        addRoleButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("RolesLeftLabel")]
    internal virtual Label RolesLeftLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    public SettingsForm(Player p)
    {
label_2:
      int num1 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(63);
label_1:
      while (true)
      {
        num1 ^= 73;
        switch (num1 + 69)
        {
          case 0:
            this.player = (object) new Player();
            this.RoleList = new List<string>();
            num1 = -113;
            continue;
          case 1:
            this.Load += new EventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE210);
            num1 = -116;
            continue;
          case 2:
            this.AudioCheckBox.Checked = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetAudioEnabledBool;
            num1 = -114;
            continue;
          case 3:
            this.player = (object) p;
            num1 = -117;
            continue;
          case 4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.set_FontSizeValue);
            num1 = -10;
            continue;
          case 5:
            goto label_8;
          case 6:
            this.AcceptButton = (IButtonControl) this.SaveButton;
            num1 = -12;
            continue;
          case 7:
            this.PlayerNameField.Text = Conversions.ToString(NewLateBinding.LateGet(this.player, (System.Type) null, "GetPlayerName", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
            num1 = -120;
            continue;
          case 8:
            this.MinimizeBox = false;
            num1 = -119;
            continue;
          case 9:
            this.MinimumSize = this.MaximumSize;
            num1 = -127;
            continue;
          case 10:
            this.FormClosing += new FormClosingEventHandler(this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE214);
            num1 = -14;
            continue;
          case 11:
            this.RoleCount = 4;
            this.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE20F();
            num1 = -9;
            continue;
          case 12:
            this.MaximumSize = new Size(400, 350);
            num1 = -115;
            continue;
          case 13:
            this.MaximizeBox = false;
            num1 = -118;
            continue;
          case 14:
            goto label_22;
          default:
            goto label_2;
        }
      }
label_22:
      return;
label_8:
      this.RolesLeftLabel.Text = "Roles Left: " + checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetPlayerList.Count + 3 - 1 - this.RoleCount).ToString();
label_10:
      int num2 = 6;
      while (true)
      {
        switch (num2 ^ 75)
        {
          case 75:
            num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(75);
            num2 = 5;
            continue;
          case 76:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.set_RoundTimeTextField);
            num2 = 7;
            continue;
          case 77:
            num2 = 0;
            continue;
          case 78:
            goto label_1;
          default:
            goto label_10;
        }
      }
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE210(
      object _param1,
      EventArgs _param2)
    {
      if ((!Conversions.ToBoolean(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetIsMaster) ? 1 : 0) == 0)
      {
        this.RoundTimeTextField.Enabled = true;
label_3:
        int num = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
        while (true)
        {
          switch ((num ^ 76) + 75)
          {
            case 0:
              num = -5;
              continue;
            case 1:
              num = -11;
              continue;
            case 2:
              this.RoleComboBox.Enabled = true;
              num = -12;
              continue;
            case 3:
              num = -9;
              continue;
            case 4:
              num = -16;
              continue;
            case 5:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.set_AudioCheckBox);
              num = -10;
              continue;
            case 6:
              this.AddRoleButton.Enabled = true;
              num = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(28);
              continue;
            case 7:
              goto label_20;
            default:
              goto label_3;
          }
        }
      }
      else
      {
label_12:
        int num = 26;
        while (true)
        {
          switch (num ^ 84)
          {
            case 77:
              this.AddRoleButton.Enabled = false;
              num = 6;
              continue;
            case 78:
              this.RoundTimeTextField.Enabled = false;
              num = 7;
              continue;
            case 79:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SettingsForm.get_PlayerNameField);
              num = 27;
              continue;
            case 80:
              num = 25;
              continue;
            case 81:
              this.RoleComboBox.Enabled = false;
              num = 4;
              continue;
            case 82:
              num = 0;
              continue;
            case 83:
              num = 5;
              continue;
            case 84:
              goto label_20;
            default:
              goto label_12;
          }
        }
      }
label_20:
      this.RoundTimeTextField.Text = Conversions.ToString(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetRoundTime);
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE211(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE212(
      object _param1,
      EventArgs _param2)
    {
      object[] objArray;
      bool[] flagArray;
      if ((this.PlayerNameField.Text.Length >= 20 ? 1 : 0) == 0)
      {
        TextBox playerNameField;
        NewLateBinding.LateCall(this.player, (System.Type) null, "SetPlayerName", objArray = new object[1]
        {
          (object) (playerNameField = this.PlayerNameField).Text
        }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
        {
          true
        }, true);
        if ((!flagArray[0] ? 0 : 1) != 0)
          playerNameField.Text = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
      }
      else
      {
        int num1 = (int) Interaction.MsgBox((object) "Name Not Saved, please make name less than 20 characteres", MsgBoxStyle.Critical, (object) "Error - Name Not Saved");
      }
      if ((NewLateBinding.LateGet(this.player, (System.Type) null, "GetPlayername", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null).Equals((object) this.PlayerNameField.Text) ? 1 : 0) == 0)
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.NameChanged();
label_7:
      int num2 = 26;
      TrackBar fontSizeValue;
      while (true)
      {
        switch (num2 ^ 78)
        {
          case 80:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_HostSettingsLabel);
            num2 = 30;
            continue;
          case 81:
            if (flagArray[0])
            {
              num2 = 27;
              continue;
            }
            goto label_15;
          case 82:
            num2 = 29;
            continue;
          case 83:
            NewLateBinding.LateCall(this.player, (System.Type) null, "SetFontSize", objArray = new object[1]
            {
              (object) (fontSizeValue = this.FontSizeValue).Value
            }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
            {
              true
            }, true);
            num2 = 31;
            continue;
          case 84:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.NameChanged();
            num2 = 28;
            continue;
          case 85:
            goto label_14;
          default:
            goto label_7;
        }
      }
label_14:
      int num3 = 1;
      goto label_16;
label_15:
      num3 = 0;
label_16:
      if (num3 != 0)
        fontSizeValue.Value = (int) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (int));
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.UpdateSettings(this.AudioCheckBox.Checked);
label_20:
      int num4 = 3;
      bool flag;
      while (true)
      {
        switch (num4 ^ 78)
        {
          case 75:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.set_FontSizeLabel);
            num4 = 5;
            continue;
          case 76:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.EnableSettingsButton();
            num4 = 30;
            continue;
          case 77:
            num4 = 2;
            continue;
          case 78:
            flag = this.RoundLabel.Text != null & int.TryParse(this.RoundTimeTextField.Text, out this.RoundTime) & this.RoundTime > 0;
            num4 = 1;
            continue;
          case 79:
            if (flag)
            {
              num4 = 31;
              continue;
            }
            goto label_29;
          case 80:
            num4 = 0;
            continue;
          case 81:
            goto label_28;
          default:
            goto label_20;
        }
      }
label_28:
      int num5 = 0;
      goto label_30;
label_29:
      num5 = 1;
label_30:
      if (num5 == 0)
      {
        if ((!Conversions.ToBoolean(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetIsMaster) ? 1 : 0) == 0)
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.SetRoundTime(this.RoundTimeTextField.Text);
        this.Hide();
      }
      else
      {
        int num6 = (int) Interaction.MsgBox((object) "Please insert a time greater than 0.", MsgBoxStyle.Critical, (object) "Input Error");
      }
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE213(
      object _param1,
      EventArgs _param2)
    {
      TrackBar fontSizeValue;
      object[] objArray;
      bool[] flagArray;
      NewLateBinding.LateCall(this.player, (System.Type) null, "SetFontSize", objArray = new object[1]
      {
        (object) (fontSizeValue = this.FontSizeValue).Value
      }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
      {
        true
      }, true);
      if ((!flagArray[0] ? 0 : 1) != 0)
        fontSizeValue.Value = (int) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (int));
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.UpdateSettings(this.AudioCheckBox.Checked);
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE214(
      object _param1,
      FormClosingEventArgs _param2)
    {
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.EnableSettingsButton();
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE215(
      object _param1,
      EventArgs _param2)
    {
label_5:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(16);
      int num2 = -23;
      while (true)
      {
        switch ((num2 ^ 83) + 73)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.\uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE215);
            num2 = -28;
            continue;
          case 1:
            goto label_5;
          case 2:
            switch (num1 + 74)
            {
              case 0:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.EnableSettingsButton();
                num1 = -9;
                goto label_1;
              case 1:
                num1 = -11;
                goto label_1;
              case 2:
                this.Close();
                num1 = -7;
                goto label_1;
              case 3:
                num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(44);
                goto label_1;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.set_SaveButton);
                num1 = -12;
                goto label_1;
              case 5:
                goto label_11;
              default:
                num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(23);
                continue;
            }
          case 3:
label_1:
            num1 ^= 78;
            break;
        }
        // ISSUE: reference to a compiler-generated method
        num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(17);
      }
label_11:;
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE216(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE217(
      object _param1,
      EventArgs _param2)
    {
      if ((this.RoleCount >= checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetPlayerList.Count + 3 - 1) ? 1 : 0) == 0)
      {
        if ((this.RoleComboBox.SelectedItem.ToString().Equals("") ? 1 : 0) == 0)
        {
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.UpdateCharacterList(this.RoleComboBox.SelectedItem.ToString());
label_8:
          int num1 = 27;
          int num2 = -26;
          while (true)
          {
            switch ((num2 ^ 81) + 76)
            {
              case 0:
                switch (num1)
                {
                  case 79:
                    num1 = 31;
                    goto label_3;
                  case 80:
                    num1 = 26;
                    goto label_3;
                  case 81:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle1 = __methodref (SettingsForm.get_FontSizeLabel);
                    num1 = 30;
                    goto label_3;
                  case 82:
                    checked { ++this.RoleCount; }
                    num1 = 28;
                    goto label_3;
                  case 83:
                    this.RolesLeftLabel.Text = "Roles Left: " + checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8F.\uE401\uEA89\uF5DA\uF87D\uE53B\uE3B8\uE138\uE359\uE019\uEE0D\uF247\uE151.\uEA3C\uEDD7\uE5F8\uE9FE\uEA28\uE9E5\uE325\uEE5B\uEC9F\uE770\uE3B1\uEA61.GetPlayerList.Count + 3 - 1 - this.RoleCount).ToString();
                    num1 = 0;
                    goto label_3;
                  case 84:
                    num1 = 29;
                    goto label_3;
                  case 85:
                    goto label_16;
                  default:
                    num2 = -28;
                    continue;
                }
              case 1:
                goto label_8;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (SettingsForm.get_PlayerNameField);
                // ISSUE: reference to a compiler-generated method
                num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(15);
                continue;
              case 3:
label_3:
                num1 ^= 79;
                break;
            }
            num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(21);
          }
label_16:;
        }
        else
        {
          int num3 = (int) Interaction.MsgBox((object) "Please pick a role from the list to add.", MsgBoxStyle.Critical, (object) "Error - Role Not Selected");
        }
      }
      else
      {
        int num4 = (int) Interaction.MsgBox((object) "Can't add any more, not enough player to add roles.", MsgBoxStyle.Critical, (object) "Error - Not Enough Players");
      }
    }

    private void \uE3A8\uF29B\uEDFD\uE50A\uF562\uE881\uF2DB\uE93E\uEB12\uEDB8\uE736\uE218(
      object _param1,
      EventArgs _param2)
    {
    }
  }
}
