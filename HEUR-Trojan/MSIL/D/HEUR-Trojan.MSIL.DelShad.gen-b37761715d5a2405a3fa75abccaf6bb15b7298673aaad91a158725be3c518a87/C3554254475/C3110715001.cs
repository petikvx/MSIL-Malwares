// Decompiled with JetBrains decompiler
// Type: C3554254475.C3110715001
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Threading;

namespace C3554254475
{
  public sealed class C3110715001 : IEquatable<C3110715001>
  {
    private const int C3554254475 = 16;
    private static C252678980 C3554254475;
    private C252678980 C3904355907 = (C252678980) null;
    private static bool? C3554254475;
    private static long C3554254475;
    private long C3904355907;
    private byte[] C3554254475;
    private uint C3554254475;
    private bool C3554254475;
    private C3110715001.C3554254475 C3554254475 = C3110715001.C3554254475.C3554254475;
    private readonly object C3554254475 = new object();
    private static byte[] C3904355907;
    private int? C3554254475 = new int?();

    [SpecialName]
    public static C252678980 C3554254475() => C3110715001.C3554254475;

    [SpecialName]
    public static void C3554254475([In] C252678980 obj0) => C3110715001.C3554254475 = obj0;

    [SpecialName]
    private static bool C3904355907()
    {
      bool? nullable = C3110715001.C3554254475;
      if (nullable.HasValue)
        return nullable.Value;
      if (C1812594589.C1908338681())
      {
        C3110715001.C3554254475 = new bool?(false);
        return false;
      }
      nullable = new bool?(false);
      try
      {
        byte[] userData = new byte[48];
        for (int index = 0; index < userData.Length; ++index)
          userData[index] = (byte) index;
        ProtectedMemory.Protect(userData, MemoryProtectionScope.SameProcess);
        for (int index = 0; index < userData.Length; ++index)
        {
          if ((int) userData[index] != (int) (byte) index)
          {
            nullable = new bool?(true);
            break;
          }
        }
      }
      catch (Exception ex)
      {
      }
      C3110715001.C3554254475 = nullable;
      return nullable.Value;
    }

    [SpecialName]
    public bool C1255198513() => this.C3554254475;

    [SpecialName]
    public uint C1908338681() => this.C3554254475;

    public C3110715001() => this.C3554254475(false, C2137352139.C3554254475, 0, 0);

    public C3110715001([In] bool obj0, [In] byte[] obj1)
    {
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());
      this.C3554254475(obj0, obj1, 0, obj1.Length);
    }

    public C3110715001([In] bool obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3) => this.C3554254475(obj0, obj1, obj2, obj3);

    public C3110715001([In] bool obj0, [In] C3463352047 obj1)
    {
      if (obj1 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bq());
      }
      byte[] numArray = obj1.C3904355907();
      try
      {
        this.C3554254475(obj0, numArray, 0, numArray.Length);
      }
      finally
      {
        if (obj0)
          C2137352139.C3904355907(numArray);
      }
    }

    private void C3554254475([In] bool obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());
      if (obj2 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C252678980());
      if (obj3 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BR());
      if (obj2 > obj1.Length - obj3)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BR());
      this.C3904355907 = Interlocked.Increment(ref C3110715001.C3554254475);
      this.C3554254475 = obj0;
      this.C3554254475 = (uint) obj3;
      int num = obj3 / 16;
      if (num * 16 < obj3)
        ++num;
      Debug.Assert(num * 16 >= obj3);
      this.C3554254475 = new byte[num * 16];
      Array.Copy((Array) obj1, obj2, (Array) this.C3554254475, 0, obj3);
      this.C1037565863();
    }

    private void C1037565863()
    {
      Debug.Assert(this.C3554254475 == C3110715001.C3554254475.C3554254475);
      if (!this.C3554254475 || this.C3554254475.Length == 0)
        return;
      C252678980 c3554254475 = C3110715001.C3554254475;
      if (c3554254475 != null)
      {
        c3554254475(this.C3554254475, C878818188.C3904355907, this.C3904355907);
        this.C3904355907 = c3554254475;
        this.C3554254475 = C3110715001.C3554254475.C1908338681;
      }
      else if (C3110715001.C3904355907())
      {
        ProtectedMemory.Protect(this.C3554254475, MemoryProtectionScope.SameProcess);
        this.C3554254475 = C3110715001.C3554254475.C3904355907;
      }
      else
      {
        byte[] numArray1 = C3110715001.C3904355907;
        if (numArray1 == null)
        {
          numArray1 = C3110715001.C2564639436();
          byte[] numArray2 = Interlocked.Exchange<byte[]>(ref C3110715001.C3904355907, numArray1);
          if (numArray2 != null)
            numArray1 = numArray2;
        }
        byte[] numArray3 = new byte[12];
        C2137352139.C3554254475((ulong) this.C3904355907, numArray3, 4);
        using (C1255198513.C1993550816 c1993550816 = new C1255198513.C1993550816(numArray1, numArray3, true))
          c1993550816.C3554254475(this.C3554254475, 0, this.C3554254475.Length);
        this.C3554254475 = C3110715001.C3554254475.C1255198513;
      }
    }

    private void C112844655()
    {
      if (this.C3554254475.Length == 0)
        return;
      if (this.C3554254475 == C3110715001.C3554254475.C3904355907)
        ProtectedMemory.Unprotect(this.C3554254475, MemoryProtectionScope.SameProcess);
      else if (this.C3554254475 == C3110715001.C3554254475.C1255198513)
      {
        byte[] numArray = new byte[12];
        C2137352139.C3554254475((ulong) this.C3904355907, numArray, 4);
        using (C1255198513.C1993550816 c1993550816 = new C1255198513.C1993550816(C3110715001.C3904355907, numArray, true))
          c1993550816.C3904355907(this.C3554254475, 0, this.C3554254475.Length);
      }
      else if (this.C3554254475 == C3110715001.C3554254475.C1908338681)
        this.C3904355907(this.C3554254475, C878818188.C1255198513, this.C3904355907);
      else
        Debug.Assert(this.C3554254475 == C3110715001.C3554254475.C3554254475);
      this.C3554254475 = C3110715001.C3554254475.C3554254475;
    }

    public byte[] C2746444292()
    {
      if (this.C3554254475 == 0U)
        return C2137352139.C3554254475;
      byte[] destinationArray = new byte[(int) this.C3554254475];
      lock (this.C3554254475)
      {
        this.C112844655();
        Array.Copy((Array) this.C3554254475, (Array) destinationArray, (int) this.C3554254475);
        this.C1037565863();
      }
      return destinationArray;
    }

    public byte[] C3554254475([In] C3904355907.C3568589458 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Br());
      }
      byte[] numArray1 = this.C2746444292();
      int length = numArray1.Length;
      byte[] numArray2 = obj0.C3554254475((uint) length);
      Debug.Assert(numArray2.Length == length);
      for (int index = 0; index < length; ++index)
        numArray1[index] ^= numArray2[index];
      C2137352139.C3904355907(numArray2);
      return numArray1;
    }

    public override int GetHashCode()
    {
      if (this.C3554254475.HasValue)
        return this.C3554254475.Value;
      int hashCode = this.C3554254475 ? 2064765577 : 0;
      byte[] numArray = this.C2746444292();
      for (int index = 0; index < numArray.Length; ++index)
        hashCode = (hashCode << 3) + hashCode + (int) numArray[index];
      if (this.C3554254475)
        C2137352139.C3904355907(numArray);
      this.C3554254475 = new int?(hashCode);
      return hashCode;
    }

    public override bool Equals([In] object obj0) => this.C3554254475(obj0 as C3110715001, true);

    public bool Equals([In] C3110715001 obj0) => this.C3554254475(obj0, true);

    public bool C3554254475([In] C3110715001 obj0, [In] bool obj1)
    {
      if (obj0 == null)
        return false;
      if (this == obj0)
        return true;
      if (obj1 && this.C3554254475 != obj0.C3554254475 || (int) this.C3554254475 != (int) obj0.C3554254475)
        return false;
      byte[] numArray1 = this.C2746444292();
      byte[] numArray2 = (byte[]) null;
      bool flag;
      try
      {
        numArray2 = obj0.C2746444292();
        flag = C2137352139.C3554254475(numArray1, numArray2);
      }
      finally
      {
        if (this.C3554254475)
          C2137352139.C3904355907(numArray1);
        if (obj0.C3554254475 && numArray2 != null)
          C2137352139.C3904355907(numArray2);
      }
      return flag;
    }

    private static byte[] C2564639436()
    {
      byte[] destinationArray = new byte[60];
      int destinationIndex = 0;
      try
      {
        RNGCryptoServiceProvider cryptoServiceProvider = new RNGCryptoServiceProvider();
        byte[] numArray = new byte[32];
        cryptoServiceProvider.GetBytes(numArray);
        Array.Copy((Array) numArray, 0, (Array) destinationArray, destinationIndex, 32);
        destinationIndex += 32;
        C2137352139.C3904355907(numArray);
        C2137352139.C3554254475((object) cryptoServiceProvider);
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      try
      {
        Array.Copy((Array) Guid.NewGuid().ToByteArray(), 0, (Array) destinationArray, destinationIndex, 16);
        destinationIndex += 16;
        C2137352139.C3554254475(DateTime.UtcNow.ToBinary(), destinationArray, destinationIndex);
        destinationIndex += 8;
        C2137352139.C3554254475(Environment.TickCount, destinationArray, destinationIndex);
        destinationIndex += 4;
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      Debug.Assert(destinationIndex == destinationArray.Length);
      byte[] numArray1 = C3904355907.C1304234792.C3554254475(destinationArray);
      C2137352139.C3904355907(destinationArray);
      return numArray1;
    }

    private enum C3554254475
    {
      C3554254475,
      C3904355907,
      C1255198513,
      C1908338681,
    }
  }
}
