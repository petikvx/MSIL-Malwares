// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: DataCollect, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 42D7E59F-0880-4460-A28E-6C718E130DF7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-35125b1dd360a1a6c3644dee373860f7e3c26660cb7cd8de4718b4ac8e4b4353.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -87674954;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1308095231)) % 8U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 655707782 ^ -1912835493;
              continue;
            case 1:
              num1 = (int) num2 * 309572223 ^ -572231800;
              continue;
            case 2:
              num1 = (int) num2 * 212404059 ^ 1814158025;
              continue;
            case 3:
              int num3 = flag ? -1503086038 : (num3 = -259554585);
              num1 = num3 ^ (int) num2 * -231312471;
              continue;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -986622736;
              continue;
            case 7:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 583056925 ^ 514267201;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1973804458;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -801526767)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1366905861 ^ 1783303910;
              continue;
            case 2:
              num1 = (int) num2 * 1416214337 ^ -967634637;
              continue;
            case 3:
              int num3 = this.m_Dict.ContainsKey(aKey) ? 1235832836 : (num3 = 1684642455);
              num1 = num3 ^ (int) num2 * 2137587304;
              continue;
            case 4:
              this.m_Dict.Add(aKey, value);
              num1 = -534454075;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_6;
label_1:
        int num1 = -1467501518;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1543744196)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1035049586 ^ 2139666976;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1136968715 ^ -83882708;
              continue;
            case 2:
              goto label_5;
            case 3:
              goto label_1;
            case 5:
              num1 = (int) num2 * -2043817292 ^ 301462928;
              continue;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = -1367125304;
              continue;
            default:
              goto label_10;
          }
        }
label_5:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_7;
label_10:
        return jsonNode;
label_6:
        num3 = 1;
label_7:
        num1 = num3 != 0 ? -1866001706 : (num1 = -541287450);
        goto label_2;
      }
      set
      {
label_1:
        int num1 = 1127137924;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1044024928)) % 6U)
          {
            case 0:
              int num4 = !flag ? -817913628 : (num4 = -1003064183);
              num1 = num4 ^ (int) num2 * 867008552;
              continue;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1776655946 ^ -1068463453;
              continue;
            case 3:
              num1 = (int) num2 * -1235934755 ^ -333827327;
              continue;
            case 4:
              goto label_3;
            case 5:
              goto label_1;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 1734233098;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -534376582;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -44741273)) % 4U)
          {
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -584490641 ^ -1535878822;
              continue;
            case 2:
              num1 = (int) num2 * 324148542 ^ 496519251;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      bool flag1 = !JSONClass.\u202C​‌‪‏⁭⁬⁬⁬‌‮⁫⁫⁬⁮​‬‬‎⁯‏‬⁬‌‪‫‏⁫‌‫‫⁮‍⁪⁪‮​‭⁪‍‮(aKey);
label_1:
      int num1 = 2141674759;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1504522464)) % 12U)
        {
          case 0:
            goto label_3;
          case 1:
            int num3 = flag2 ? 1791976668 : (num3 = 1543209901);
            num1 = num3 ^ (int) num2 * 1084670843;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = 994063898;
            continue;
          case 4:
            num1 = (int) num2 * 1435883957 ^ 218791335;
            continue;
          case 5:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -741489758 ^ 1055052151;
            continue;
          case 6:
            num1 = (int) num2 * 669814872 ^ -109293648;
            continue;
          case 7:
            int num4 = flag1 ? 1534264525 : (num4 = 910656557);
            num1 = num4 ^ (int) num2 * -831463928;
            continue;
          case 8:
            num1 = (int) num2 * -633598896 ^ -560083968;
            continue;
          case 9:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1341928948;
            continue;
          case 10:
            this.m_Dict.Add(aKey, aItem);
            num1 = 473436591;
            continue;
          case 11:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1905513398 ^ 23436662;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -441993711;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1327110925)) % 8U)
        {
          case 0:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 952222140 ^ -1698527691;
            continue;
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -658079945 ^ -2105895637;
            continue;
          case 2:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1484211304 ^ -2134973473;
            continue;
          case 3:
            jsonNode1 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = -1799860045;
            continue;
          case 4:
            int num3 = !flag ? -1357715520 : (num3 = -1043018950);
            num1 = num3 ^ (int) num2 * 375736494;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 1346481641 ^ -2003452758;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1780445087;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 2011133499)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -2044452701 ^ -737167850;
            continue;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = 2096702046;
            continue;
          case 2:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1901555328 ^ 219373219;
            continue;
          case 4:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 675774732 ^ -655651831;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            int num4 = flag ? 1020023272 : (num4 = 621103394);
            num1 = num4 ^ (int) num2 * 190159332;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 144858061;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1303496182;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1701335138)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1164456801 ^ 56384838;
              continue;
            default:
              goto label_6;
          }
        }
      }
      catch
      {
        jsonNode = (JSONNode) null;
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 1264666918;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1162086084)) % 4U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 1431180629 ^ 930486485;
              continue;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * -2073496267 ^ -1114160465;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -2037756149;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -505809568)) % 21U)
          {
            case 0:
            case 2:
              goto label_20;
            case 1:
              num2 = (int) num3 * -768054615 ^ 1327097516;
              continue;
            case 3:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 382772912 ^ 274025747;
              continue;
            case 4:
              int num4;
              num2 = num4 = enumerator.MoveNext() ? -149165777 : (num4 = -1666395561);
              continue;
            case 5:
              enumerator1 = false;
              num2 = -420752302;
              continue;
            case 6:
              num2 = (int) num3 * -1056377834 ^ -1855332894;
              continue;
            case 8:
              num2 = (int) num3 * 1217868337 ^ 4638300;
              continue;
            case 9:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = new KeyValuePair<string, JSONNode>();
              num2 = -1637080024;
              continue;
            case 11:
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -997126992 ^ -1476575441;
              continue;
            case 12:
              num2 = (int) num3 * -577752102 ^ 373751588;
              continue;
            case 13:
              num2 = (int) num3 * -1875859460 ^ 1251539796;
              continue;
            case 14:
              int num5 = num1 != 0 ? 625853547 : (num5 = 1770696551);
              num2 = num5 ^ (int) num3 * -944768823;
              continue;
            case 15:
              int num6;
              num2 = num6 = num1 != 1 ? -1144048007 : (num6 = -1670283038);
              continue;
            case 16:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 770608461 ^ 95852397;
              continue;
            case 17:
            case 19:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = -929723948;
              continue;
            case 18:
              goto label_1;
            case 20:
              N = enumerator.Current;
              num2 = -751909600;
              continue;
            default:
              goto label_18;
          }
        }
label_18:
        enumerator = new Dictionary<string, JSONNode>.Enumerator();
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "{";
label_1:
      int num1 = -1465646413;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -924456231)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1180311870 ^ 23773935;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -1460995233 : (num3 = -2039053785);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -924456231)) % 9U)
          {
            case 0:
              goto label_12;
            case 1:
              str1 = JSONClass.\u206D⁯‌‌‌⁫⁭‮‎⁮‎⁯‭‎‍‮⁬‮⁭‪⁬‍⁫⁬​‌⁭‎‪‌‌‮‮‎⁯‫⁮‍⁮‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200F⁭⁪⁮‮‭⁫‎⁫​⁮​‮‬‪​‫⁬‍⁮‌‏⁮‎⁬⁪‮‫‏⁭‫‫‍⁭‪⁫​‮‪⁪‮((object) current.Value)
              });
              num3 = -722200111;
              continue;
            case 2:
              num3 = (int) num4 * 160860258 ^ 395099893;
              continue;
            case 3:
              str1 = JSONClass.\u200C⁫‮‌‎‮‍⁫‏‮‮​⁪⁮‍‬⁬​‪‎‮‫‭⁯‍⁯⁯⁪⁪‪‪⁬‮​‌‍‭‎⁬⁬‮(str1, ", ");
              num3 = (int) num4 * -1060796800 ^ 1816962419;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = -786008653;
              continue;
            case 5:
              int num5 = !flag ? -743335309 : (num5 = -1084971499);
              num3 = num5 ^ (int) num4 * -931456094;
              continue;
            case 6:
              num3 = -2039053785;
              continue;
            case 8:
              flag = JSONClass.\u206B‌‬⁯​⁪‭⁬‮​‫‬‭‏‭‫‬‪‮‎‏‍⁬⁫⁫‫‮‪⁭⁪⁯‍⁪⁪‮⁪‭‎‎‪‮(str1) > 2;
              num3 = (int) num4 * 1048150174 ^ 444918069;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u200C⁫‮‌‎‮‍⁫‏‮‮​⁪⁮‍‬⁬​‪‎‮‫‭⁯‍⁯⁯⁪⁪‪‪⁬‮​‌‍‭‎⁬⁬‮(str1, "}");
label_17:
      int num6 = -1355495543;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -924456231)) % 3U)
        {
          case 0:
            goto label_17;
          case 2:
            num6 = (int) num7 * 1899244498 ^ 1233461219;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 647243891;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 770280432)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -1916630619 ^ -1488569136;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 396355283 : (num3 = 2114198522);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 770280432)) % 9U)
          {
            case 0:
              goto label_11;
            case 1:
              int num5 = flag ? 563420532 : (num5 = 2113276677);
              num3 = num5 ^ (int) num4 * -449952942;
              continue;
            case 2:
              num3 = (int) num4 * -456313978 ^ 550513671;
              continue;
            case 3:
              num3 = 396355283;
              continue;
            case 4:
              str1 = JSONClass.\u206D⁯‌‌‌⁫⁭‮‎⁮‎⁯‭‎‍‮⁬‮⁭‪⁬‍⁫⁬​‌⁭‎‪‌‌‮‮‎⁯‫⁮‍⁮‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200C⁫‮‌‎‮‍⁫‏‮‮​⁪⁮‍‬⁬​‪‎‮‫‭⁯‍⁯⁯⁪⁪‪‪⁬‮​‌‍‭‎⁬⁬‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -1764621722 ^ -1895741755;
              continue;
            case 5:
              current = enumerator.Current;
              flag = JSONClass.\u206B‌‬⁯​⁪‭⁬‮​‫‬‭‏‭‫‬‪‮‎‏‍⁬⁫⁫‫‮‪⁭⁪⁯‍⁪⁪‮⁪‭‎‎‪‮(str1) > 3;
              num3 = 23809358;
              continue;
            case 7:
              str1 = JSONClass.\u200C⁫‮‌‎‮‍⁫‏‮‮​⁪⁮‍‬⁬​‪‎‮‫‭⁯‍⁯⁯⁪⁪‪‪⁬‮​‌‍‭‎⁬⁬‮(str1, ", ");
              num3 = (int) num4 * -2008496207 ^ -1151520511;
              continue;
            case 8:
              str1 = JSONClass.\u202B⁪‍‏⁬‌‌‫‏‍‏⁭​⁬⁮‫⁮⁫⁭⁯‌‭⁬⁮‍​‏‏⁬‪⁮⁭‌‬‎‭⁬⁬‍‫‮(str1, "\n", aPrefix, "   ");
              num3 = 1139621506;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202B⁪‍‏⁬‌‌‫‏‍‏⁭​⁬⁮‫⁮⁫⁭⁯‌‭⁬⁮‍​‏‏⁬‪⁮⁭‌‬‎‭⁬⁬‍‫‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = 2114191540;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 770280432)) % 3U)
        {
          case 0:
            goto label_17;
          case 2:
            num6 = (int) num7 * 297727377 ^ -1129906602;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -719976895;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1051334036)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1332774969 ^ 781863473;
            continue;
          case 2:
            JSONClass.\u206A⁪⁪‫‭‏‬⁯⁬‭‭‬⁬⁪⁯‪⁫‪‌‏‎⁬‎‎⁪⁫⁫‌‫⁮‪⁮⁯‏⁬‌⁯⁯‫‬‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1029647494 ^ -1590754902;
            continue;
          case 3:
            JSONClass.\u206E⁬‏‍‏‬‏‫‭‭⁫‪‬‏‮⁫⁬⁯‪‭⁭⁯‫⁮‭​​‪⁬‬⁫‪​‪‬‮⁫‮‭‏‮(aWriter, (byte) 2);
            num1 = (int) num2 * -1803347079 ^ 270770085;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_16:
        int num3 = enumerator.MoveNext() ? -1021804183 : (num3 = -1584915124);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1051334036)) % 8U)
          {
            case 0:
              goto label_17;
            case 1:
              goto label_16;
            case 2:
              num3 = -1021804183;
              continue;
            case 3:
              num3 = (int) num4 * -1129663743 ^ -1435474498;
              continue;
            case 4:
              JSONClass.\u202C⁬‎‍‍‏⁫‬‌‮‪‮‏⁯⁯‍‏⁬⁯⁬‭‎‭‪‭‬‍‎‫‪⁬‬‌⁬⁫‎⁫‌⁬⁯‮(aWriter, current);
              num3 = (int) num4 * 1476858718 ^ 90297578;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = -8705837;
              continue;
            case 6:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1387477743 ^ -980183879;
              continue;
            case 7:
              num3 = (int) num4 * -1251200862 ^ -430298138;
              continue;
            default:
              goto label_10;
          }
        }
label_17:
        return;
label_10:;
      }
    }

    static bool \u202C​‌‪‏⁭⁬⁬⁬‌‮⁫⁫⁬⁮​‬‬‎⁯‏‬⁬‌‪‫‏⁫‌‫‫⁮‍⁪⁪‮​‭⁪‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206B‌‬⁯​⁪‭⁬‮​‫‬‭‏‭‫‬‪‮‎‏‍⁬⁫⁫‫‮‪⁭⁪⁯‍⁪⁪‮⁪‭‎‎‪‮([In] string obj0) => obj0.Length;

    static string \u200C⁫‮‌‎‮‍⁫‏‮‮​⁪⁮‍‬⁬​‪‎‮‫‭⁯‍⁯⁯⁪⁪‪‪⁬‮​‌‍‭‎⁬⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200F⁭⁪⁮‮‭⁫‎⁫​⁮​‮‬‪​‫⁬‍⁮‌‏⁮‎⁬⁪‮‫‏⁭‫‫‍⁭‪⁫​‮‪⁪‮([In] object obj0) => obj0.ToString();

    static string \u206D⁯‌‌‌⁫⁭‮‎⁮‎⁯‭‎‍‮⁬‮⁭‪⁬‍⁫⁬​‌⁭‎‪‌‌‮‮‎⁯‫⁮‍⁮‏‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202B⁪‍‏⁬‌‌‫‏‍‏⁭​⁬⁮‫⁮⁫⁭⁯‌‭⁬⁮‍​‏‏⁬‪⁮⁭‌‬‎‭⁬⁬‍‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E⁬‏‍‏‬‏‫‭‭⁫‪‬‏‮⁫⁬⁯‪‭⁭⁯‫⁮‭​​‪⁬‬⁫‪​‪‬‮⁫‮‭‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A⁪⁪‫‭‏‬⁯⁬‭‭‬⁬⁪⁯‪⁫‪‌‏‎⁬‎‎⁪⁫⁫‌‫⁮‪⁮⁯‏⁬‌⁯⁯‫‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202C⁬‎‍‍‏⁫‬‌‮‪‮‏⁯⁯‍‏⁬⁯⁬‭‎‭‪‭‬‍‎‫‪⁬‬‌⁬⁫‎⁫‌⁬⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
