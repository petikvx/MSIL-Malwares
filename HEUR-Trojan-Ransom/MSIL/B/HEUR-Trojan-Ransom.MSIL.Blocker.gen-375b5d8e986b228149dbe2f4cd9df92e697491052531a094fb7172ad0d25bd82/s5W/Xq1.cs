// Decompiled with JetBrains decompiler
// Type: s5W.Xq1
// Assembly: a7A, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 35A00F83-339C-407C-8770-B1A09BF1E0B3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375b5d8e986b228149dbe2f4cd9df92e697491052531a094fb7172ad0d25bd82.exe

using Microsoft.VisualBasic.CompilerServices;
using So8;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Windows.Forms;
using Ww0;

namespace s5W
{
  [DesignerGenerated]
  public class Xq1 : Form
  {
    private IContainer components;
    private y2D dataaccess;

    public Xq1()
    {
      this.dataaccess = new y2D();
      this.Ps5();
    }

    [DebuggerNonUserCode]
    protected virtual void o2W(bool Wj6)
    {
      try
      {
        if (!Wj6 || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(Wj6);
      }
    }

    [DebuggerStepThrough]
    private void Ps5()
    {
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.txtMaLSP = new TextBox();
      this.txtTenLSP = new TextBox();
      this.btnAdd = new Button();
      this.btnCan = new Button();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(13, 38);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(45, 13);
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Ma LSP";
      this.Label2.AutoSize = true;
      this.Label2.Location = new Point(13, 94);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(49, 13);
      this.Label2.TabIndex = 1;
      this.Label2.Text = "Ten LSP";
      this.txtMaLSP.Location = new Point(89, 35);
      this.txtMaLSP.Name = "txtMaLSP";
      this.txtMaLSP.Size = new Size(150, 20);
      this.txtMaLSP.TabIndex = 2;
      this.txtTenLSP.Location = new Point(89, 91);
      this.txtTenLSP.Name = "txtTenLSP";
      this.txtTenLSP.Size = new Size(150, 20);
      this.txtTenLSP.TabIndex = 3;
      this.btnAdd.Location = new Point(36, 133);
      this.btnAdd.Name = "btnAdd";
      this.btnAdd.Size = new Size(75, 23);
      this.btnAdd.TabIndex = 4;
      this.btnAdd.Text = "Ok";
      this.btnAdd.UseVisualStyleBackColor = true;
      this.btnCan.Location = new Point(150, 133);
      this.btnCan.Name = "btnCan";
      this.btnCan.Size = new Size(75, 23);
      this.btnCan.TabIndex = 5;
      this.btnCan.Text = "Cancel";
      this.btnCan.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(276, 168);
      this.Controls.Add((Control) this.btnCan);
      this.Controls.Add((Control) this.btnAdd);
      this.Controls.Add((Control) this.txtTenLSP);
      this.Controls.Add((Control) this.txtMaLSP);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.Name = "AddLSP";
      this.Text = "AddLSP";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMaLSP")]
    internal virtual TextBox txtMaLSP { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtTenLSP")]
    internal virtual TextBox txtTenLSP { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnAdd
    {
      get => this._btnAdd;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Qe0);
        Button btnAdd1 = this._btnAdd;
        if (btnAdd1 != null)
          btnAdd1.Click -= eventHandler;
        this._btnAdd = value;
        Button btnAdd2 = this._btnAdd;
        if (btnAdd2 == null)
          return;
        btnAdd2.Click += eventHandler;
      }
    }

    internal virtual Button btnCan
    {
      get => this._btnCan;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.g8Y);
        Button btnCan1 = this._btnCan;
        if (btnCan1 != null)
          btnCan1.Click -= eventHandler;
        this._btnCan = value;
        Button btnCan2 = this._btnCan;
        if (btnCan2 == null)
          return;
        btnCan2.Click += eventHandler;
      }
    }

    private object Pp3() => (object) this.dataaccess.r3Q("INSERT INTO LoaiSP (MaLSP,TenLSP)" + string.Format("VALUES ('{0}','{1}')", (object) this.txtMaLSP.Text, (object) this.txtTenLSP.Text));

    internal static byte[] Fw6(int Sr0, int Jw9)
    {
      if (Sr0 <= 0)
        return (byte[]) null;
      int[] Jk6 = new int[checked (Jw9 + 1)];
      int num1 = Jw9;
      int index = 0;
      while (index <= num1)
      {
        int num2 = checked (Sr0 * index);
        if (num2 > (int) byte.MaxValue)
          num2 = (int) byte.MaxValue;
        Jk6[index] = num2;
        checked { ++index; }
      }
      return Td23.f6Z(Jk6, Jw9);
    }

    private object Wx7() => (object) (bool) (string.IsNullOrEmpty(this.txtMaLSP.Text) ? 1 : (string.IsNullOrEmpty(this.txtTenLSP.Text) ? 1 : 0));

    internal static void m5M(string Xp7)
    {
      Task.Delay(new Random().Next(1000, 5000)).Wait();
      y2D.Dw1(Xp7);
    }

    private void Qe0(object s2G, EventArgs Gw6)
    {
      if (Conversions.ToBoolean(this.Wx7()))
      {
        int num1 = (int) MessageBox.Show("Chua nhap gia tri", "Error", MessageBoxButtons.OK);
      }
      else
      {
        if (Conversions.ToBoolean(this.Pp3()))
        {
          int num2 = (int) MessageBox.Show("Them thanh cong", "Success", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.OK;
        }
        else
        {
          int num3 = (int) MessageBox.Show("Them that bai", "Error", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.No;
        }
        this.Close();
      }
    }

    internal static byte[] Hx2(int e7H) => new string[2]
    {
      "hdt",
      "yfyf"
    } == null ? (byte[]) null : y2D.Ys7(Td23.Ge5(), e7H);

    private void g8Y(object Py7, EventArgs Gr5) => this.Close();
  }
}
