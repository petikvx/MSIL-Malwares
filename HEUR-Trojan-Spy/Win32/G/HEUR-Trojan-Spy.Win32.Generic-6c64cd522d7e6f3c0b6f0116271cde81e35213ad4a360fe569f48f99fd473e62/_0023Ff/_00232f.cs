// Decompiled with JetBrains decompiler
// Type: #Ff.#2f
// Assembly: qouzb, Version=0.0.0.0, Culture=neutral, PublicKeyToken=34256fcd934ca661
// MVID: 528C9DDA-94F5-4688-B6FB-056FFA07C362
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Generic-6c64cd522d7e6f3c0b6f0116271cde81e35213ad4a360fe569f48f99fd473e62.exe

using \u0023Ff;
using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0023Ff
{
  internal class \u00232f : Control
  {
    private Label \u0023Vf;
    internal Image \u0023Wf;
    private Icon \u0023Xf;
    internal Bitmap \u0023Yf;
    internal \u0023Zf \u0023Zf;
    private float \u00230f;
    private float \u00231f;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    string Control.\u0023Of() => this.\u0023Vf.Text;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Pf([In] string obj0) => this.\u0023Vf.Text = obj0;

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Sf([In] bool obj0)
    {
      int num1 = 6;
      if (true)
        goto label_10;
label_1:
      int num2;
      if (obj0)
      {
        num2 = 2;
        goto label_9;
      }
label_6:
      // ISSUE: explicit non-virtual call
      __nonvirtual (((Control) this).Dispose(obj0));
      int num3 = 7;
      num1 = \u00232f.giY3k05vfJ2UDFojxkV() ? num3 : num3;
      goto label_10;
label_9:
      num1 = num2;
label_10:
      switch (num1)
      {
        case 0:
        case 6:
          goto label_1;
        case 1:
        case 2:
          if (this.\u0023Xf != null)
          {
            this.\u0023Xf.Dispose();
            this.\u0023Xf = (Icon) null;
            num2 = 5;
            goto label_9;
          }
          else
            goto case 5;
        case 3:
          this.\u0023Wf.Dispose();
          this.\u0023Wf = (Image) null;
          break;
        case 4:
          goto label_6;
        case 5:
          if (this.\u0023Wf == null)
            break;
          goto case 3;
        case 7:
          return;
        default:
          num2 = 3;
          goto label_9;
      }
      if (this.\u0023Yf != null)
      {
        this.\u0023Yf.Dispose();
        this.\u0023Yf = (Bitmap) null;
        num2 = 4;
        goto label_9;
      }
      else
        goto label_6;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Cf([In] EventArgs obj0)
    {
      this.\u0023Vf.SetBounds(Convert.ToInt32(13f * this.\u00230f), Convert.ToInt32(15f * this.\u00231f), this.Width - Convert.ToInt32(69f * this.\u00230f), this.Height - Convert.ToInt32(18f * this.\u00231f));
      // ISSUE: explicit non-virtual call
      __nonvirtual (((Control) this).OnResize(obj0));
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Qf([In] float obj0, [In] float obj1)
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              this.\u00230f = obj0;
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_7;
            case 1:
            case 3:
              this.\u00231f = obj1;
              goto case 4;
            case 4:
              // ISSUE: explicit non-virtual call
              __nonvirtual (((Control) this).ScaleCore(obj0, obj1));
              ((Control) this).OnResize(EventArgs.Empty);
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto case 1;
            case 5:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_5:
        num1 = 4;
      }
label_9:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Rf([In] PaintEventArgs obj0)
    {
      int num1 = 3;
      Rectangle rectangle;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              // ISSUE: explicit non-virtual call
              __nonvirtual (((Control) this).OnPaint(obj0));
              int num3 = 5;
              num2 = \u00232f.giY3k05vfJ2UDFojxkV() ? num3 : num3;
              continue;
            case 1:
            case 5:
              goto label_5;
            case 2:
              if (this.\u0023Wf == null)
              {
                if (this.\u0023Xf != null)
                {
                  obj0.Graphics.DrawIcon(this.\u0023Xf, rectangle);
                  if (this.\u0023Yf != null)
                  {
                    num2 = 4;
                    continue;
                  }
                  goto label_15;
                }
                else
                  goto label_14;
              }
              else
                goto label_10;
            case 4:
              obj0.Graphics.DrawImage((Image) this.\u0023Yf, new Rectangle(rectangle.Right - Convert.ToInt32(12f * this.\u00230f), rectangle.Bottom - Convert.ToInt32(12f * this.\u00231f), Convert.ToInt32(16f * this.\u00230f), Convert.ToInt32(16f * this.\u00231f)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel);
              num2 = 7;
              continue;
            case 6:
              obj0.Graphics.DrawLine(SystemPens.ControlLightLight, 0, this.ClientSize.Height - 1, this.ClientSize.Width, this.ClientSize.Height - 1);
              rectangle = new Rectangle(this.ClientSize.Width - Convert.ToInt32(48f * this.\u00230f), Convert.ToInt32(11f * this.\u00231f), Convert.ToInt32(32f * this.\u00230f), Convert.ToInt32(32f * this.\u00231f));
              goto case 2;
            case 7:
              goto label_8;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 2;
        continue;
label_5:
        obj0.Graphics.DrawLine(SystemPens.ControlDark, 0, this.ClientSize.Height - 2, this.ClientSize.Width, this.ClientSize.Height - 2);
        num1 = 6;
      }
label_8:
      return;
label_10:
      obj0.Graphics.DrawImage(this.\u0023Wf, rectangle, new Rectangle(0, 0, 32, 32), GraphicsUnit.Pixel);
      return;
label_14:
      return;
label_15:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    void Control.\u0023Bf([In] EventArgs obj0)
    {
      try
      {
        this.\u0023Vf.Font = new Font(this.Font, FontStyle.Bold);
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Control) this).OnFontChanged(obj0));
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public \u00232f()
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              this.\u0023Xf = \u0023\u0023.\u0023Wj();
              ((Control) this).OnResize(EventArgs.Empty);
              if (true)
              {
                num2 = 7;
                continue;
              }
              goto label_12;
            case 1:
            case 6:
              this.\u00230f = 1f;
              this.\u00231f = 1f;
              // ISSUE: explicit constructor call
              base.\u002Ector();
              try
              {
                this.\u0023Vf.FlatStyle = FlatStyle.System;
                this.\u0023Vf.Font = new Font(this.Font, FontStyle.Bold);
              }
              catch
              {
              }
              this.Controls.Add((Control) this.\u0023Vf);
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto case 5;
            case 2:
              this.\u0023Vf = new Label();
              if (\u00232f.KJ6WdM54wA7EgtDoTVP())
              {
                num2 = 6;
                continue;
              }
              goto case 1;
            case 3:
              this.BackColor = SystemColors.Window;
              this.TabStop = false;
              this.Dock = DockStyle.Top;
              this.Height = 58;
              goto case 5;
            case 5:
              this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
              if (true)
              {
                num2 = 0;
                continue;
              }
              goto case 0;
            case 7:
              goto label_14;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 5;
      }
label_14:
      return;
label_12:;
    }

    internal static bool KJ6WdM54wA7EgtDoTVP() => true;

    internal static bool giY3k05vfJ2UDFojxkV() => false;
  }
}
