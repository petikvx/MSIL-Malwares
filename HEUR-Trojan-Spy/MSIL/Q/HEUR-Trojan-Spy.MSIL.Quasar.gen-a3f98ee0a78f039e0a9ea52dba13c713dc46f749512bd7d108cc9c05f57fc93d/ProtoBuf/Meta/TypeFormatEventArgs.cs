// Decompiled with JetBrains decompiler
// Type: ProtoBuf.Meta.TypeFormatEventArgs
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using System;

namespace ProtoBuf.Meta
{
  public class TypeFormatEventArgs : EventArgs
  {
    private Type type;
    private string formattedName;
    private readonly bool typeFixed;

    public Type Type
    {
      get => this.type;
      set
      {
        if ((object) this.type == (object) value)
          return;
        if (this.typeFixed)
          throw new InvalidOperationException("The type is fixed and cannot be changed");
        this.type = value;
      }
    }

    public string FormattedName
    {
      get => this.formattedName;
      set
      {
        if (!(this.formattedName != value))
          return;
        if (!this.typeFixed)
          throw new InvalidOperationException("The formatted-name is fixed and cannot be changed");
        this.formattedName = value;
      }
    }

    internal TypeFormatEventArgs(string formattedName) => this.formattedName = !Helpers.IsNullOrEmpty(formattedName) ? formattedName : throw new ArgumentNullException(nameof (formattedName));

    internal TypeFormatEventArgs(Type type)
    {
      this.type = (object) type != null ? type : throw new ArgumentNullException(nameof (type));
      this.typeFixed = true;
    }
  }
}
