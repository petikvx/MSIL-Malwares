// Decompiled with JetBrains decompiler
// Type: ATI.ACE.CCC.EXE.CCC
// Assembly: CCC, Version=2.0.0.0, Culture=neutral, PublicKeyToken=90ba9c70f846762e
// MVID: C67131E4-8C7B-4005-9E87-8740338B3BE9
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Virus.Win32.Qvod.b-1abaead835e996ddcbd6746a57108b992d268e9037ad26a25216c516272f28a8.exe

using Microsoft.Win32;
using System;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Security;
using System.Windows.Forms;

namespace ATI.ACE.CCC.EXE
{
  public sealed class CCC
  {
    static CCC() => Directory.SetCurrentDirectory(AppDomain.CurrentDomain.BaseDirectory);

    [STAThread]
    private static void Main(string[] args)
    {
      System.Type type = (System.Type) null;
      try
      {
        Assembly assembly = ATI.ACE.CCC.EXE.CCC.LoadAssembly("CCC.Implementation");
        if ((object) assembly != null)
          type = assembly.GetType("ATI.ACE.CCC.Implementation.CCC");
      }
      catch (ArgumentNullException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (FileNotFoundException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (FileLoadException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (BadImageFormatException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      if ((object) type == null)
        return;
      try
      {
        type.InvokeMember(nameof (Main), BindingFlags.Static | BindingFlags.Public | BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
        {
          (object) args
        });
      }
      catch (ArgumentNullException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (ArgumentException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (MethodAccessException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (MissingFieldException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (MissingMethodException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (TargetException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (AmbiguousMatchException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (NotSupportedException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
    }

    private static Assembly LoadAssembly(string fileName)
    {
      string str1 = "Software\\ATI\\ACE";
      string str2 = "software\\wow6432node";
      string str3 = "software";
      string name = str1 + "\\Assemblies";
      string assemblyString = fileName;
      RegistryKey registryKey = (RegistryKey) null;
      try
      {
        if (IntPtr.Size == 8)
        {
          name = name.ToLower(CultureInfo.InvariantCulture);
          if (!name.Contains(str2))
            name = name.Replace(str3.ToLower(CultureInfo.InvariantCulture), str2.ToLower(CultureInfo.InvariantCulture));
        }
        registryKey = Registry.LocalMachine.OpenSubKey(name, false);
        if (registryKey != null)
          assemblyString = registryKey.GetValue(fileName, (object) fileName) as string;
      }
      catch (SecurityException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (UnauthorizedAccessException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      finally
      {
        registryKey?.Close();
      }
      Assembly assembly = (Assembly) null;
      try
      {
        assembly = Assembly.Load(assemblyString);
      }
      catch (FileLoadException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (BadImageFormatException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      catch (SystemException ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
      return assembly;
    }
  }
}
