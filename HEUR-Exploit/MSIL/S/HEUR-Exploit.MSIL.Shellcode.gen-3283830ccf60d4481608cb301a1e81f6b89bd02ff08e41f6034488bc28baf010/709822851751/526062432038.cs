// Decompiled with JetBrains decompiler
// Type: 709822851751.526062432038
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003031176351620;
using \u003157334346294;
using \u003208825527781;
using \u003235014932865;
using \u003476200497993;
using \u003576228335532;
using \u003696338941835;
using \u003709822851751;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace \u003709822851751
{
  internal static class \u003526062432038
  {
    internal static readonly bool[] \u003385206121634 = new bool[128];
    internal static readonly bool[] \u003676584862568 = new bool[128];
    internal static readonly bool[] \u003130529626286 = new bool[128];
    private const int \u003909407755281 = 6;
    private const string \u003395969872799 = "!";

    static \u003526062432038()
    {
      IList<char> first = (IList<char>) new List<char>()
      {
        '\n',
        '\r',
        '\t',
        '\\',
        '\f',
        '\b'
      };
      for (int index = 0; index < 32; ++index)
        first.Add((char) index);
      foreach (char index in first.Union<char>((IEnumerable<char>) new char[1]
      {
        '\''
      }))
        \u003526062432038.\u003385206121634[(int) index] = true;
      foreach (char index in first.Union<char>((IEnumerable<char>) new char[1]
      {
        '"'
      }))
        \u003526062432038.\u003676584862568[(int) index] = true;
      foreach (char index in first.Union<char>((IEnumerable<char>) new char[5]
      {
        '"',
        '\'',
        '<',
        '>',
        '&'
      }))
        \u003526062432038.\u003130529626286[(int) index] = true;
    }

    public static bool[] \u003706747330681(\u003747021740311 _param0, char _param1)
    {
      if (_param0 == \u003747021740311.EscapeHtml)
        return \u003526062432038.\u003130529626286;
      return _param1 == '"' ? \u003526062432038.\u003676584862568 : \u003526062432038.\u003385206121634;
    }

    public static bool \u003699179866320(string _param0, bool[] _param1)
    {
      if (_param0 == null)
        return false;
      foreach (char index in _param0)
      {
        if ((int) index >= _param1.Length || _param1[(int) index])
          return true;
      }
      return false;
    }

    public static void \u003642202938045(
      TextWriter _param0,
      string _param1,
      char _param2,
      bool _param3,
      bool[] _param4,
      \u003747021740311 _param5,
      IArrayPool<char> _param6,
      ref char[] _param7)
    {
      if (_param3)
        _param0.Write(_param2);
      if (!string.IsNullOrEmpty(_param1))
      {
        int num1 = \u003526062432038.\u003129295243059(_param1, _param4, _param5);
        switch (num1)
        {
          case -1:
            _param0.Write(_param1);
            break;
          case 0:
            for (int index1 = num1; index1 < _param1.Length; ++index1)
            {
              char index2 = _param1[index1];
              if ((int) index2 >= _param4.Length || _param4[(int) index2])
              {
                string a;
                switch (index2)
                {
                  case '\b':
                    a = "\\b";
                    break;
                  case '\t':
                    a = "\\t";
                    break;
                  case '\n':
                    a = "\\n";
                    break;
                  case '\f':
                    a = "\\f";
                    break;
                  case '\r':
                    a = "\\r";
                    break;
                  case '\\':
                    a = "\\\\";
                    break;
                  case '\u0085':
                    a = "\\u0085";
                    break;
                  case '\u2028':
                    a = "\\u2028";
                    break;
                  case '\u2029':
                    a = "\\u2029";
                    break;
                  default:
                    if ((int) index2 < _param4.Length || _param5 == \u003747021740311.EscapeNonAscii)
                    {
                      if (index2 == '\'' && _param5 != \u003747021740311.EscapeHtml)
                      {
                        a = "\\'";
                        break;
                      }
                      if (index2 == '"' && _param5 != \u003747021740311.EscapeHtml)
                      {
                        a = "\\\"";
                        break;
                      }
                      if (_param7 == null || _param7.Length < 6)
                        _param7 = \u003637225839308.\u003588246297215(_param6, 6, _param7);
                      \u003591722725384.\u003144286251895(index2, _param7);
                      a = "!";
                      break;
                    }
                    a = (string) null;
                    break;
                }
                if (a != null)
                {
                  bool flag = string.Equals(a, "!");
                  if (index1 > num1)
                  {
                    int num2 = index1 - num1 + (flag ? 6 : 0);
                    int num3 = flag ? 6 : 0;
                    if (_param7 == null || _param7.Length < num2)
                    {
                      char[] destinationArray = \u003637225839308.\u003115419514007(_param6, num2);
                      if (flag)
                        Array.Copy((Array) _param7, (Array) destinationArray, 6);
                      \u003637225839308.\u003470938221120(_param6, _param7);
                      _param7 = destinationArray;
                    }
                    _param1.CopyTo(num1, _param7, num3, num2 - num3);
                    _param0.Write(_param7, num3, num2 - num3);
                  }
                  num1 = index1 + 1;
                  if (!flag)
                    _param0.Write(a);
                  else
                    _param0.Write(_param7, 0, 6);
                }
              }
            }
            int count = _param1.Length - num1;
            if (count > 0)
            {
              if (_param7 == null || _param7.Length < count)
                _param7 = \u003637225839308.\u003588246297215(_param6, count, _param7);
              _param1.CopyTo(num1, _param7, 0, count);
              _param0.Write(_param7, 0, count);
              break;
            }
            break;
          default:
            if (_param7 == null || _param7.Length < num1)
              _param7 = \u003637225839308.\u003588246297215(_param6, num1, _param7);
            _param1.CopyTo(0, _param7, 0, num1);
            _param0.Write(_param7, 0, num1);
            goto case 0;
        }
      }
      if (!_param3)
        return;
      _param0.Write(_param2);
    }

    public static string \u003131888352332(
      string _param0,
      char _param1,
      bool _param2,
      \u003747021740311 _param3)
    {
      bool[] flagArray = \u003526062432038.\u003706747330681(_param3, _param1);
      using (StringWriter stringWriter = \u003591722725384.\u003991602511256(_param0 != null ? _param0.Length : 16))
      {
        char[] chArray = (char[]) null;
        \u003526062432038.\u003642202938045((TextWriter) stringWriter, _param0, _param1, _param2, flagArray, _param3, (IArrayPool<char>) null, ref chArray);
        return stringWriter.ToString();
      }
    }

    private static int \u003129295243059(string _param0, bool[] _param1, \u003747021740311 _param2)
    {
      for (int index1 = 0; index1 != _param0.Length; ++index1)
      {
        char index2 = _param0[index1];
        if ((int) index2 < _param1.Length)
        {
          if (_param1[(int) index2])
            return index1;
        }
        else if (_param2 == \u003747021740311.EscapeNonAscii || index2 == '\u0085' || index2 == '\u2028' || index2 == '\u2029')
          return index1;
      }
      return -1;
    }

    public static Task \u003493952073995(
      TextWriter _param0,
      string _param1,
      char _param2,
      bool _param3,
      bool[] _param4,
      \u003747021740311 _param5,
      \u003715090300304 _param6,
      char[] _param7,
      CancellationToken _param8 = default (CancellationToken))
    {
      if (_param8.IsCancellationRequested)
        return _param8.\u003092200590438();
      if (_param3)
        return \u003526062432038.\u003133177561638(_param0, _param1, _param2, _param4, _param5, _param6, _param7, _param8);
      return string.IsNullOrEmpty(_param1) ? _param8.\u003825315684071() ?? \u003493533682182.\u003464038437734 : \u003526062432038.\u003717602061543(_param0, _param1, _param4, _param5, _param6, _param7, _param8);
    }

    private static Task \u003133177561638(
      TextWriter _param0,
      string _param1,
      char _param2,
      bool[] _param3,
      \u003747021740311 _param4,
      \u003715090300304 _param5,
      char[] _param6,
      CancellationToken _param7)
    {
      Task task = _param0.\u003152926016502(_param2, _param7);
      if (task.Status != TaskStatus.RanToCompletion)
        return \u003526062432038.\u003324608704083(task, _param0, _param1, _param2, _param3, _param4, _param5, _param6, _param7);
      if (!string.IsNullOrEmpty(_param1))
      {
        task = \u003526062432038.\u003717602061543(_param0, _param1, _param3, _param4, _param5, _param6, _param7);
        if (task.Status == TaskStatus.RanToCompletion)
          return _param0.\u003152926016502(_param2, _param7);
      }
      return \u003526062432038.\u003726729407530(task, _param0, _param2, _param7);
    }

    private static Task \u003324608704083(
      Task _param0,
      TextWriter _param1,
      string _param2,
      char _param3,
      bool[] _param4,
      \u003747021740311 _param5,
      \u003715090300304 _param6,
      char[] _param7,
      CancellationToken _param8)
    {
      // ISSUE: variable of a compiler-generated type
      \u003526062432038.\u003412432606916 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003048699704673 = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003919834132505 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003925734333674 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003132247080580 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003832591482920 = _param4;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003506179170886 = _param5;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003742517263448 = _param6;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003796855318965 = _param7;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003066958219280 = _param8;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003933597940331 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003336617047972.\u003645123580329&) ref stateMachine).\u003023000220262 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003933597940331.Start<\u003526062432038.\u003412432606916>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003933597940331.Task;
    }

    public static Task \u003726729407530(
      Task _param0,
      TextWriter _param1,
      char _param2,
      CancellationToken _param3)
    {
      // ISSUE: variable of a compiler-generated type
      \u003526062432038.\u003942532455970 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003320277410374 = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003471665934817 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003405184005651 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003645188853551 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003835253093638 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003526062432038.\u003412432606916&) ref stateMachine).\u003751150091546 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003835253093638.Start<\u003526062432038.\u003942532455970>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003835253093638.Task;
    }

    private static Task \u003717602061543(
      TextWriter _param0,
      string _param1,
      bool[] _param2,
      \u003747021740311 _param3,
      \u003715090300304 _param4,
      char[] _param5,
      CancellationToken _param6)
    {
      int num = \u003526062432038.\u003129295243059(_param1, _param2, _param3);
      return num != -1 ? \u003526062432038.\u003400500726099(_param0, _param1, num, _param2, _param3, _param4, _param5, _param6) : _param0.\u003670162303454(_param1, _param6);
    }

    private static Task \u003400500726099(
      TextWriter _param0,
      string _param1,
      int _param2,
      bool[] _param3,
      \u003747021740311 _param4,
      \u003715090300304 _param5,
      char[] _param6,
      CancellationToken _param7)
    {
      // ISSUE: variable of a compiler-generated type
      \u003526062432038.\u003505150965379 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003099306070664 = _param0;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003833036613461 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003169111027935 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003926634456297 = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003770665318408 = _param4;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003079133273375 = _param5;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003015352776815 = _param6;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003887151330956 = _param7;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003983496474354 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003526062432038.\u003942532455970&) ref stateMachine).\u003989568689626 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003983496474354.Start<\u003526062432038.\u003505150965379>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003983496474354.Task;
    }
  }
}
