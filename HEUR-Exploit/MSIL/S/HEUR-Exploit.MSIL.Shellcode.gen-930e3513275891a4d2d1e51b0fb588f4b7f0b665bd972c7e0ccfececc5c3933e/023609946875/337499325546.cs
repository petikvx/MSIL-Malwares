// Decompiled with JetBrains decompiler
// Type: 023609946875.337499325546
// Assembly: 903211523809, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 9299602E-5CAC-472E-8784-954A0E70F0DC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-930e3513275891a4d2d1e51b0fb588f4b7f0b665bd972c7e0ccfececc5c3933e.exe

using \u003428114883540;
using \u003608077943950;
using \u003803000154429;
using \u003911478404797;
using Microsoft.VisualStudio.Shell.TableManager;
using Microsoft.WebTools.TaskRunnerExplorer.OutputListeners;
using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;

namespace \u003023609946875
{
  [Export(typeof (IErrorListProvider))]
  internal sealed class \u003337499325546 : IErrorListProvider, ITableDataSource
  {
    internal readonly ITableManager \u003025884640426;
    private readonly string \u003747001227714 = \u003938413067892.\u003718164410089;
    private readonly string \u003829530164337 = \u003938413067892.\u003442922846953;
    private List<IErrorListSinkManager> \u003593407881660 = new List<IErrorListSinkManager>();
    private List<ITableEntriesSnapshotFactory> \u003750864977556 = new List<ITableEntriesSnapshotFactory>();

    [ImportingConstructor]
    internal \u003337499325546(ITableManagerProvider provider)
    {
      this.\u003025884640426 = provider.GetTableManager("ErrorsTable");
      this.\u003025884640426.AddSource((ITableDataSource) this, new string[10]
      {
        "detailsexpander",
        "projectname",
        "errorseverity",
        "errorcode",
        "errorsource",
        "errorcategory",
        "text",
        "documentname",
        "line",
        "column"
      });
    }

    public string \u003422294580691 => this.\u003829530164337;

    public string \u003014417547985 => this.\u003747001227714;

    public string \u003228510577275 => "Error_TaskProvider";

    public IDisposable \u003096607463549(ITableDataSink _param1) => (IDisposable) new \u003597034358326((IErrorListProvider) this, _param1);

    public void \u003503641597513(IErrorListSinkManager _param1)
    {
      lock (this.\u003593407881660)
      {
        this.\u003593407881660.Add(_param1);
        foreach (ITableEntriesSnapshotFactory factory in this.\u003750864977556)
          _param1.AddErrorListFactory(factory);
      }
    }

    public void \u003745264348352(IErrorListSinkManager _param1)
    {
      lock (this.\u003593407881660)
        this.\u003593407881660.Remove(_param1);
    }

    public void \u003092841199015(ITableEntriesSnapshotFactory _param1)
    {
      lock (this.\u003593407881660)
      {
        this.\u003750864977556.Add(_param1);
        foreach (IErrorListSinkManager errorListSinkManager in this.\u003593407881660)
          errorListSinkManager.AddErrorListFactory(_param1);
      }
    }

    public void \u003064985255260(ITableEntriesSnapshotFactory _param1)
    {
      lock (this.\u003593407881660)
      {
        this.\u003750864977556.Remove(_param1);
        foreach (IErrorListSinkManager errorListSinkManager in this.\u003593407881660)
          errorListSinkManager.RemoveErrorListFactory(_param1);
      }
    }

    public void \u003702215996823(ITableEntriesSnapshotFactory _param1)
    {
      lock (this.\u003593407881660)
      {
        foreach (IErrorListSinkManager errorListSinkManager in this.\u003593407881660)
          errorListSinkManager.UpdateSink(_param1);
      }
    }
  }
}
