// Decompiled with JetBrains decompiler
// Type: GLuaR.Attributes.ConsumerWrapper
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using c.Configurations;
using GLuaR.Importers;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace GLuaR.Attributes
{
  public class ConsumerWrapper : Form
  {
    private IContainer _WriterWrapper;
    private RadioButton valueWrapper;
    private ComboBox decoratorWrapper;
    private RadioButton _TokenizerWrapper;
    private TextBox m_ObserverWrapper;
    private Button _InstanceWrapper;
    private Button m_FacadeWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ConsumerWrapper()
    {
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 5:
            ImporterMapper.InitAccount();
            num = 2;
            continue;
          case 1:
          case 2:
            this._WriterWrapper = (IContainer) null;
            num = 4;
            continue;
          case 3:
            this.decoratorWrapper.SelectedIndex = 0;
            num = 6;
            continue;
          case 4:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            this.ReadDefinition();
            goto case 3;
          case 6:
            goto label_7;
          default:
            num = 3;
            continue;
        }
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SortDefinition(object asset, EventArgs result)
    {
      this.decoratorWrapper.Enabled = this.valueWrapper.Checked;
      this.m_ObserverWrapper.Enabled = this._TokenizerWrapper.Checked;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CustomizeDefinition(object spec, EventArgs counter)
    {
      this.decoratorWrapper.Enabled = this.valueWrapper.Checked;
      this.m_ObserverWrapper.Enabled = this._TokenizerWrapper.Checked;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public int ComputeDefinition()
    {
      int num1 = 0;
label_8:
      int definition;
      string str;
      while (true)
      {
        int num2 = num1;
label_9:
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_4;
            case 2:
            case 3:
              goto label_7;
            case 4:
            case 5:
              definition = -1;
              num2 = 7;
              continue;
            case 6:
            case 7:
              goto label_13;
            default:
              goto label_10;
          }
        }
label_1:
        bool flag = this.valueWrapper.Checked;
        num1 = 1;
        continue;
label_4:
        while (flag)
        {
          if (this.decoratorWrapper.SelectedIndex < 0)
          {
            int num3 = (int) ConsumerConfigConfig.EnableFactory("Application ID was not selected.");
            if (true)
            {
              num2 = 5;
              goto label_9;
            }
          }
          else
          {
            string[] strArray = this.decoratorWrapper.SelectedItem.ToString().Split('(');
            str = strArray[strArray.Length - 1].TrimEnd(')');
            num1 = 3;
            goto label_8;
          }
        }
        goto label_11;
label_10:
        num1 = 6;
      }
label_7:
      definition = Convert.ToInt32(str);
      goto label_13;
label_11:
      try
      {
        definition = Convert.ToInt32(this.m_ObserverWrapper.Text);
      }
      catch
      {
        int num4 = (int) ConsumerConfigConfig.EnableFactory("Invalid Application ID.");
        definition = -1;
      }
label_13:
      return definition;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ReadDefinition()
    {
      int num1 = 0;
      if (true)
        goto label_11;
label_1:
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      int num2 = 2;
      num1 = ConsumerWrapper.SelectRegistry() ? num2 : num2;
label_11:
      while (true)
      {
        int num3;
        switch (num1)
        {
          case 0:
            this.valueWrapper = new RadioButton();
            num3 = 15;
            break;
          case 1:
            this.Controls.Add((Control) this.decoratorWrapper);
            this.Controls.Add((Control) this.valueWrapper);
            this.FormBorderStyle = FormBorderStyle.FixedSingle;
            num3 = 12;
            break;
          case 2:
          case 16:
            this.Name = "GCFRequirementDialog";
            this.StartPosition = FormStartPosition.CenterParent;
            this.Text = "Add GCF Requirement";
            this.ResumeLayout(false);
            if (true)
            {
              num1 = 10;
              continue;
            }
            goto case 7;
          case 3:
            this.decoratorWrapper.Items.AddRange(new object[12]
            {
              (object) "Counter-Strike: Source (240)",
              (object) "Dark Messiah of Might and Magic (2100)",
              (object) "Day of Defeat: Source (300)",
              (object) "Half-Life 2 (220)",
              (object) "Half-Life 2: Deathmatch (320)",
              (object) "Half-Life 2: Episode One (380)",
              (object) "Half-Life 2: Lost Coast (340)",
              (object) "Half-Life Deathmatch: Source (360)",
              (object) "Half-Life: Source (280)",
              (object) "SiN Episodes: Emergence (1300)",
              (object) "The Ship (2400)",
              (object) "Vampire The Masquerade - Bloodlines (2600)"
            });
            this.decoratorWrapper.Location = new Point(34, 29);
            this.decoratorWrapper.Name = "comboBox1";
            this.decoratorWrapper.Size = new Size(185, 21);
            this.decoratorWrapper.TabIndex = 1;
            num3 = 4;
            break;
          case 4:
            this._TokenizerWrapper.AutoSize = true;
            this._TokenizerWrapper.Location = new Point(12, 54);
            this._TokenizerWrapper.Name = "radioButton2";
            if (true)
            {
              num1 = 14;
              continue;
            }
            goto case 1;
          case 5:
            this.m_ObserverWrapper = new TextBox();
            this._InstanceWrapper = new Button();
            num3 = 6;
            break;
          case 6:
            this.m_FacadeWrapper = new Button();
            this.SuspendLayout();
            this.valueWrapper.AutoSize = true;
            this.valueWrapper.Checked = true;
            this.valueWrapper.Location = new Point(12, 8);
            this.valueWrapper.Name = "radioButton1";
            this.valueWrapper.Size = new Size(63, 17);
            this.valueWrapper.TabIndex = 0;
            this.valueWrapper.TabStop = true;
            this.valueWrapper.Text = "Specific";
            this.valueWrapper.UseVisualStyleBackColor = true;
            this.valueWrapper.CheckedChanged += new EventHandler(this.SortDefinition);
            this.decoratorWrapper.DropDownStyle = ComboBoxStyle.DropDownList;
            this.decoratorWrapper.FormattingEnabled = true;
            if (true)
            {
              num1 = 3;
              continue;
            }
            goto label_23;
          case 7:
            this.Controls.Add((Control) this.m_FacadeWrapper);
            this.Controls.Add((Control) this._InstanceWrapper);
            this.Controls.Add((Control) this.m_ObserverWrapper);
            this.Controls.Add((Control) this._TokenizerWrapper);
            num3 = 1;
            break;
          case 8:
            this.m_FacadeWrapper.Size = new Size(75, 23);
            this.m_FacadeWrapper.TabIndex = 5;
            if (ConsumerWrapper.PublishRegistry())
            {
              num1 = 19;
              continue;
            }
            goto case 14;
          case 9:
            this.m_FacadeWrapper.UseVisualStyleBackColor = true;
            num3 = 17;
            break;
          case 10:
            this.PerformLayout();
            num3 = 20;
            break;
          case 11:
          case 17:
            this.AcceptButton = (IButtonControl) this._InstanceWrapper;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.CancelButton = (IButtonControl) this.m_FacadeWrapper;
            num3 = 18;
            break;
          case 12:
            goto label_1;
          case 13:
            this.m_FacadeWrapper.DialogResult = DialogResult.Cancel;
            this.m_FacadeWrapper.Location = new Point(12, 110);
            this.m_FacadeWrapper.Name = "button2";
            num3 = 8;
            break;
          case 14:
            this._TokenizerWrapper.Size = new Size(60, 17);
            this._TokenizerWrapper.TabIndex = 2;
            this._TokenizerWrapper.Text = "Custom";
            this._TokenizerWrapper.UseVisualStyleBackColor = true;
            this._TokenizerWrapper.CheckedChanged += new EventHandler(this.CustomizeDefinition);
            this.m_ObserverWrapper.Enabled = false;
            this.m_ObserverWrapper.Location = new Point(34, 75);
            this.m_ObserverWrapper.Name = "textBox1";
            this.m_ObserverWrapper.Size = new Size(185, 20);
            this.m_ObserverWrapper.TabIndex = 3;
            this._InstanceWrapper.DialogResult = DialogResult.OK;
            this._InstanceWrapper.Location = new Point(144, 110);
            this._InstanceWrapper.Name = "button1";
            this._InstanceWrapper.Size = new Size(75, 23);
            this._InstanceWrapper.TabIndex = 4;
            this._InstanceWrapper.Text = "Ok";
            this._InstanceWrapper.UseVisualStyleBackColor = true;
            if (!ConsumerWrapper.SelectRegistry())
            {
              num1 = 13;
              continue;
            }
            goto case 6;
          case 15:
            this.decoratorWrapper = new ComboBox();
            this._TokenizerWrapper = new RadioButton();
            num1 = 5;
            continue;
          case 18:
            this.ClientSize = new Size(231, 145);
            num3 = 7;
            break;
          case 19:
            this.m_FacadeWrapper.Text = "Cancel";
            goto case 9;
          case 20:
            goto label_2;
          default:
            num3 = 9;
            break;
        }
        num1 = num3;
      }
label_2:
      return;
label_23:;
    }

    internal static bool PublishRegistry() => true;

    internal static bool SelectRegistry() => false;
  }
}
