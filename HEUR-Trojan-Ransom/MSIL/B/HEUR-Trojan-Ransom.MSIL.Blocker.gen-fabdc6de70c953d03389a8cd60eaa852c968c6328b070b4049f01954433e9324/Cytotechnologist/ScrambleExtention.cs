// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: WhenAllPromi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: EC39505B-F84A-4834-9FA9-F8C42A2FB5BC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fabdc6de70c953d03389a8cd60eaa852c968c6328b070b4049f01954433e9324.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206D⁪‍⁯‫⁪‎‫‎‍⁯‏⁭⁫‭⁮‍⁫⁫⁪⁫⁫⁮‮‍‬‏⁫‪⁯⁪⁫⁯‎‎‫‏⁮‬⁫‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = -1925515557;
      bool flag;
      int count;
      T obj;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -963204735)) % 11U)
        {
          case 0:
            list[count] = obj;
            num1 = (int) num2 * 140677681 ^ -304017943;
            continue;
          case 1:
            list[index] = list[count];
            num1 = (int) num2 * -757345914 ^ -733812815;
            continue;
          case 2:
            num1 = (int) num2 * 616443317 ^ 1833298342;
            continue;
          case 3:
            flag = count > 1;
            num1 = -2115182337;
            continue;
          case 4:
            --count;
            num1 = -37496217;
            continue;
          case 5:
            int num3 = flag ? -1716388945 : (num3 = -1289754834);
            num1 = num3 ^ (int) num2 * -1292908832;
            continue;
          case 6:
            num1 = (int) num2 * 1432296746 ^ 1074420578;
            continue;
          case 7:
            index = ScrambleExtention.\u200D‪‏⁭‌⁮‭⁮⁪⁬⁪‮⁬‌‫⁫‭‮​‮⁫⁫‬​⁯‌⁬⁪‏⁮‮‪‬⁪‬‍⁫‌‭‪‮(ScrambleExtention.Random, count + 1);
            obj = list[index];
            num1 = (int) num2 * 1251816243 ^ -1005656499;
            continue;
          case 8:
            goto label_3;
          case 9:
            goto label_1;
          case 10:
            count = list.Count;
            num1 = (int) num2 * -1659833330 ^ 1492047685;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u200D‪‏⁭‌⁮‭⁮⁪⁬⁪‮⁬‌‫⁫‭‮​‮⁫⁫‬​⁯‌⁬⁪‏⁮‮‪‬⁪‬‍⁫‌‭‪‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206D⁪‍⁯‫⁪‎‫‎‍⁯‏⁭⁫‭⁮‍⁫⁫⁪⁫⁫⁮‮‍‬‏⁫‪⁯⁪⁫⁯‎‎‫‏⁮‬⁫‮() => new Random();
  }
}
