// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0004;
using \u0006;
using \u0007;
using \u000F;
using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0006
{
  internal sealed class \u0005
  {
    private static bool \u0001;
    private static \u0005.\u0002 \u0001;
    [NonSerialized]
    internal static \u0001 \u0088;

    [DllImport("shell32", EntryPoint = "ExtractIconEx")]
    private static extern int \u0001([In] string obj0, [In] int obj1, [In] ref int obj2, [In] ref int obj3, [In] int obj4);

    [DllImport("user32", EntryPoint = "DrawText", CharSet = CharSet.Unicode)]
    private static extern int \u0001(
      [In] IntPtr obj0,
      [In] string obj1,
      [In] int obj2,
      [In] ref \u0005.\u0001 obj3,
      [In] int obj4);

    [DllImport("gdi32.dll", EntryPoint = "SelectObject")]
    private static extern IntPtr \u0001([In] IntPtr obj0, [In] IntPtr obj1);

    [DllImport("kernel32.Dll", EntryPoint = "GetVersionEx")]
    private static extern short \u0001([In] ref \u0005.\u0002 obj0);

    [DllImport("user32.dll", EntryPoint = "GetSystemMetrics")]
    private static extern int \u0001([In] int obj0);

    [DllImport("kernel32.dll", EntryPoint = "GetSystemInfo")]
    private static extern void \u0001([In] ref \u0005.\u0003 obj0);

    [SpecialName]
    private static \u0005.\u0002 \u0001()
    {
      if (!\u0005.\u0001)
      {
        \u0005.\u0001 = new \u0005.\u0002();
        try
        {
          do
          {
            // ISSUE: type reference
            \u0005.\u0001.\u0001 = \u000E\u0003.\u0080\u0005(\u0086\u0002.\u001E\u0004(__typeref (\u0005.\u0002)));
            int num = (int) \u0005.\u0001(ref \u0005.\u0001);
            if (true)
            {
              if (false)
                goto label_7;
            }
            else
              goto label_7;
          }
          while (false);
          \u0005.\u0001 = true;
        }
        catch
        {
        }
      }
label_7:
      return \u0005.\u0001;
    }

    [SpecialName]
    internal static bool \u0001()
    {
      bool flag;
      try
      {
        \u0005.\u0003 obj;
        do
        {
          obj = new \u0005.\u0003();
        }
        while (false);
        \u0005.\u0001(ref obj);
        int num1 = (int) obj.\u0001;
        int num2;
        while (true)
        {
          num2 = num1 == 9 ? 1 : 0;
          if (false)
            num1 = num2;
          else if (false)
            num1 = num2;
          else
            break;
        }
        flag = num2 != 0;
      }
      catch
      {
        flag = false;
      }
      return flag;
    }

    [SpecialName]
    internal static bool \u0002()
    {
      bool flag;
      try
      {
        do
        {
          if (true)
          {
            int num1 = \u0005.\u0001(89);
            int num2 = 0;
            if (num2 == 0)
            {
              int num3 = num1 == num2 ? 1 : 0;
              num2 = 0;
              num1 = num3;
            }
            flag = num1 == num2;
          }
        }
        while (false);
      }
      catch
      {
        if (true)
          flag = false;
      }
      return flag;
    }

    [SpecialName]
    internal static bool \u0003() => \u0005.\u0001().\u0001 == (byte) 1;

    [SpecialName]
    internal static string \u0001() => \u0005.\u0001().\u0001;

    public static Icon \u0001()
    {
      Icon icon;
      try
      {
        if (true)
          icon = \u0005.\u0002();
      }
      catch (Exception ex)
      {
        if (true)
          icon = \u0002.\u0001(\u0005.\u0088(3090465));
      }
      return icon;
    }

    private static Icon \u0002()
    {
      int num1;
      if (true)
        num1 = 0;
      else
        goto label_10;
label_7:
      int num2 = num1;
      int num3 = 0;
      int num4;
      if (num3 == 0)
      {
        num4 = num3;
        if (true)
          num3 = \u0005.\u0001(\u0002\u0002.\u0095\u0003(), -1, ref num4, ref num4, 1);
        else
          goto label_10;
      }
      int num5 = num3;
label_10:
      if (num5 > 0)
      {
        num1 = \u0005.\u0001(\u0002\u0002.\u0095\u0003(), 0, ref num2, ref num4, 1);
        if (true)
        {
          if (num2 != 0)
            return \u000F\u0003.\u0081\u0005(new IntPtr(num2));
        }
        else
          goto label_7;
      }
      return (Icon) null;
    }

    internal static int \u0001([In] Graphics obj0, [In] string obj1, [In] Font obj2, [In] int obj3)
    {
      int num;
      try
      {
        if (true)
        {
          num = \u0005.\u0003(obj0, obj1, obj2, obj3);
          goto label_6;
        }
        else
          goto label_6;
      }
      catch (Exception ex1)
      {
        try
        {
          do
          {
            num = \u0010\u0003.\u0082\u0005((double) \u0005.\u0002(obj0, obj1, obj2, obj3) * 1.1);
          }
          while (false);
          goto label_6;
        }
        catch (Exception ex2)
        {
        }
      }
      return 0;
label_6:
      return num;
    }

    private static int \u0002([In] Graphics obj0, [In] string obj1, [In] Font obj2, [In] int obj3) => \u0012\u0003.\u0084\u0005(\u0011\u0003.\u007E\u0083\u0005((object) obj0, obj1, obj2, obj3)).Height;

    private static int \u0003([In] Graphics obj0, [In] string obj1, [In] Font obj2, [In] int obj3)
    {
      \u0005.\u0001 obj;
      IntPtr num1;
      int num2;
      if (true)
      {
        obj = new \u0005.\u0001(new Rectangle(0, 0, obj3, 10000));
        if (true)
        {
          if (true)
          {
            num2 = 3088;
            num1 = \u0013\u0003.\u007E\u0086\u0005((object) obj0);
          }
          else
            goto label_10;
        }
        else
          goto label_7;
      }
      IntPtr num3 = \u0013\u0003.\u007E\u0087\u0005((object) obj2);
      IntPtr num4;
      if (true)
        num4 = num3;
      else
        goto label_8;
label_7:
      num3 = num1;
label_8:
      IntPtr num5 = num4;
      IntPtr num6 = \u0005.\u0001(num3, num5);
      int num7 = \u0005.\u0001(num1, obj1, -1, ref obj, num2);
      if (false)
        return num7;
      \u0005.\u0001(num1, num6);
label_10:
      \u0014\u0003.\u007E\u0088\u0005((object) obj0, num1);
      return obj.\u0004 - obj.\u0002;
    }

    static \u0005() => \u0002.\u0001(typeof (\u0005));

    private struct \u0001
    {
      public int \u0001;
      public int \u0002;
      public int \u0003;
      public int \u0004;

      public \u0001([In] Rectangle obj0)
      {
        this.\u0001 = obj0.Left;
        this.\u0002 = obj0.Top;
        this.\u0004 = obj0.Bottom;
        this.\u0003 = obj0.Right;
      }
    }

    private struct \u0002
    {
      public int \u0001;
      public uint \u0001;
      public uint \u0002;
      public uint \u0003;
      public uint \u0004;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string \u0001;
      public ushort \u0001;
      public ushort \u0002;
      public ushort \u0003;
      public byte \u0001;
      private byte \u0002;
    }

    public struct \u0003
    {
      public ushort \u0001;
      private ushort \u0002;
      public uint \u0001;
      public IntPtr \u0001;
      public IntPtr \u0002;
      public IntPtr \u0003;
      public uint \u0002;
      public uint \u0003;
      public uint \u0004;
      public ushort \u0003;
      public ushort \u0004;
    }
  }
}
