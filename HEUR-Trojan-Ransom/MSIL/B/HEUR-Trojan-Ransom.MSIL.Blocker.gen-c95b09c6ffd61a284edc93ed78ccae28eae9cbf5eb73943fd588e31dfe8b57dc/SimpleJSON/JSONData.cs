// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -108204705;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1507446629)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * 208682916 ^ 480324255;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = 934066516;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 380446947)) % 5U)
        {
          case 0:
            this.m_Data = aData;
            num1 = (int) num2 * 1171018999 ^ -55686451;
            continue;
          case 1:
            num1 = (int) num2 * 1055906308 ^ 670549244;
            continue;
          case 2:
            num1 = (int) num2 * -939157757 ^ 1690272409;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(float aData)
    {
label_1:
      int num1 = 2032904426;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1692195373)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 71784211 ^ 175312791;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.AsFloat = aData;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 757688474;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1835823111)) % 4U)
        {
          case 0:
            this.AsDouble = aData;
            num1 = (int) num2 * 796736935 ^ -1621263664;
            continue;
          case 1:
            num1 = (int) num2 * -762685164 ^ 1817110307;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = -1483894449;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -75002560)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1475340587 ^ 1838528273;
            continue;
          case 1:
            num1 = (int) num2 * 799104313 ^ 1687157908;
            continue;
          case 2:
            this.AsBool = aData;
            num1 = (int) num2 * -865890529 ^ -1134721606;
            continue;
          case 3:
            num1 = (int) num2 * 419894749 ^ 577938085;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = -1528061632;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -318806143)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u202E⁬⁮⁮⁫⁬​⁪‍‌⁫‏⁯​‪⁭‎‫⁭‭‫‌‬‌‪‏‭⁮‬‬‌‮⁬‍⁬‎‭‬​‮‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1543890552 ^ -2074777094;
            continue;
          case 3:
            num1 = (int) num2 * -821943725 ^ 947538110;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = JSONData.\u202E⁬⁮⁮⁫⁬​⁪‍‌⁫‏⁯​‪⁭‎‫⁭‭‫‌‬‌‪‏‭⁮‬‬‌‮⁬‍⁬‎‭‬​‮‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = -682825065;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1257224937)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 2103577853 ^ -583606372;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = 884694338;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1774434012)) % 31U)
        {
          case 0:
            flag1 = JSONData.\u200C⁪​‏‫⁭‭‪‎‪‍‮‮‭⁮‬⁬‌‌⁫‎‭‫⁭⁭‍‎⁯‎‬⁫‌‭‫‏⁫⁪‎‬‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1161094375 ^ -1888639754;
            continue;
          case 1:
            num1 = (int) num2 * -475230000 ^ -113310069;
            continue;
          case 2:
            jsonData.AsBool = this.AsBool;
            num1 = 1664798487;
            continue;
          case 3:
            num1 = (int) num2 * -1333013721 ^ -732391718;
            continue;
          case 4:
            JSONData.\u200B⁬‪‍⁪​‌⁬⁭⁯⁫‍⁫‭​‎⁬​‫‪‫⁮‪‫​⁭⁯⁬⁬⁭​‮‌‮⁮⁪⁪‭⁯‪‮(aWriter, this.AsBool);
            num1 = (int) num2 * -1716650564 ^ 2128212047;
            continue;
          case 5:
            JSONData.\u200C‌‏⁭⁫‍‮‫‏‭⁯‏⁬⁯‍‭‬‬⁮‏‪‪⁮‌‎‍⁭‫‌‭⁫⁯‪‍⁮‫‍⁮⁬‎‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 576121068 ^ -1729827225;
            continue;
          case 6:
            JSONData.\u206B‌‬⁮⁫‌‎⁮⁯‭⁯‏‮‏‪⁮‬⁮‪​‌⁭‫‭‌​‏‮⁬⁭‫⁫‌​‬⁮‍⁬​⁭‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1633188669 ^ -1265372038;
            continue;
          case 7:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1947594930;
            continue;
          case 8:
            num1 = (int) num2 * -1398112650 ^ 1832799497;
            continue;
          case 9:
            goto label_3;
          case 10:
            JSONData.\u206E‬‫‭‫‫⁭⁬‪​‫‎‪‭‏‫‌‬⁯‬​‫⁫⁮‪⁭‌⁬‏​⁫⁬‫‎⁬⁮⁭⁪⁪⁯‮(aWriter, this.m_Data);
            num1 = (int) num2 * 1075420659 ^ -1783672089;
            continue;
          case 11:
            jsonData.AsDouble = this.AsDouble;
            flag2 = JSONData.\u200C⁪​‏‫⁭‭‪‎‪‍‮‮‭⁮‬⁬‌‌⁫‎‭‫⁭⁭‍‎⁯‎‬⁫‌‭‫‏⁫⁪‎‬‫‮(jsonData.m_Data, this.m_Data);
            num1 = 791352544;
            continue;
          case 12:
            int num3 = !JSONData.\u200C⁪​‏‫⁭‭‪‎‪‍‮‮‭⁮‬⁬‌‌⁫‎‭‫⁭⁭‍‎⁯‎‬⁫‌‭‫‏⁫⁪‎‬‫‮(jsonData.m_Data, this.m_Data) ? -1972407460 : (num3 = -2050113840);
            num1 = num3 ^ (int) num2 * -1079800305;
            continue;
          case 13:
            JSONData.\u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮(aWriter, (byte) 4);
            num1 = (int) num2 * 61478846 ^ 557073162;
            continue;
          case 14:
            goto label_1;
          case 15:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * 1526016256 ^ 1696459359;
            continue;
          case 16:
            JSONData.\u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1885623088 ^ -1301839067;
            continue;
          case 17:
            JSONData.\u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮(aWriter, (byte) 6);
            num1 = (int) num2 * -552192558 ^ 1955688129;
            continue;
          case 18:
            int num4 = JSONData.\u200C⁪​‏‫⁭‭‪‎‪‍‮‮‭⁮‬⁬‌‌⁫‎‭‫⁭⁭‍‎⁯‎‬⁫‌‭‫‏⁫⁪‎‬‫‮(jsonData.m_Data, this.m_Data) ? 1270488869 : (num4 = 1166784851);
            num1 = num4 ^ (int) num2 * 505960481;
            continue;
          case 19:
            num1 = (int) num2 * 169944376 ^ 1937343893;
            continue;
          case 20:
            num1 = (int) num2 * -467821365 ^ -1011822704;
            continue;
          case 21:
            num1 = (int) num2 * -1240631874 ^ -732537989;
            continue;
          case 22:
            num1 = (int) num2 * 94723938 ^ -1161353987;
            continue;
          case 23:
            JSONData.\u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮(aWriter, (byte) 3);
            num1 = 1051056536;
            continue;
          case 24:
            num1 = (int) num2 * -703458120 ^ -465957301;
            continue;
          case 25:
            JSONData.\u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮(aWriter, (byte) 7);
            num1 = (int) num2 * 1569573972 ^ 1050328307;
            continue;
          case 26:
            int num5 = flag2 ? -80608694 : (num5 = -672978485);
            num1 = num5 ^ (int) num2 * 522606922;
            continue;
          case 27:
            num1 = (int) num2 * -328766840 ^ -853770157;
            continue;
          case 28:
            JSONData.\u206F⁪⁪⁮⁫⁭​⁯‫‍‏⁭‭⁭⁬‌⁯‬‏‬⁮‎‮‫‭‬⁪⁬‫‭‎‎​‪⁫‮⁮⁭‭‌‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -56928547 ^ 1275489079;
            continue;
          case 29:
            num1 = (int) num2 * -1356729740 ^ 1386195554;
            continue;
          case 30:
            int num6 = !flag1 ? 1514956474 : (num6 = 1473981946);
            num1 = num6 ^ (int) num2 * -621830263;
            continue;
          default:
            goto label_33;
        }
      }
label_3:
      return;
label_33:;
    }

    static string \u202E⁬⁮⁮⁫⁬​⁪‍‌⁫‏⁯​‪⁭‎‫⁭‭‫‌‬‌‪‏‭⁮‬‬‌‮⁬‍⁬‎‭‬​‮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200C⁪​‏‫⁭‭‪‎‪‍‮‮‭⁮‬⁬‌‌⁫‎‭‫⁭⁭‍‎⁯‎‬⁫‌‭‫‏⁫⁪‎‬‫‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u202A‏‫‪⁬‮⁪⁬​‌‎‬‌⁬⁮‎⁪‏‎‌​‫‎​⁬⁮​‪‍‫‍‍‍‌‎‏‎‮‎‌‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206B‌‬⁮⁫‌‎⁮⁯‭⁯‏‮‏‪⁮‬⁮‪​‌⁭‫‭‌​‏‮⁬⁭‫⁫‌​‬⁮‍⁬​⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206F⁪⁪⁮⁫⁭​⁯‫‍‏⁭‭⁭⁬‌⁯‬‏‬⁮‎‮‫‭‬⁪⁬‫‭‎‎​‪⁫‮⁮⁭‭‌‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u200C‌‏⁭⁫‍‮‫‏‭⁯‏⁬⁯‍‭‬‬⁮‏‪‪⁮‌‎‍⁭‫‌‭⁫⁯‪‍⁮‫‍⁮⁬‎‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200B⁬‪‍⁪​‌⁬⁭⁯⁫‍⁫‭​‎⁬​‫‪‫⁮‪‫​⁭⁯⁬⁬⁭​‮‌‮⁮⁪⁪‭⁯‪‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206E‬‫‭‫‫⁭⁬‪​‫‎‪‭‏‫‌‬⁯‬​‫⁫⁮‪⁭‌⁬‏​⁫⁬‫‎⁬⁮⁭⁪⁪⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
