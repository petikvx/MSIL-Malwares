// Decompiled with JetBrains decompiler
// Type: ib.jn
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System;
using System.IO;
using System.IO.Compression;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace ib
{
  public class jn
  {
    private BinaryReader v2;
    private ASCIIEncoding eW;
    private UTF7Encoding eF;
    private UTF32Encoding J8;
    private static jn nr;

    [SpecialName]
    public long x1() => this.PL();

    [SpecialName]
    public void S7(long _param1) => this.JM(_param1, SeekOrigin.Begin);

    [SpecialName]
    public long Uj() => this.v2.BaseStream.Length;

    [SpecialName]
    public Stream NZ() => this.v2.BaseStream;

    public jn(BinaryReader _param1, jn.Nbr _param2)
    {
      jn.yj();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.v2 = _param1;
      this.Rp(_param2);
      this.eW = new ASCIIEncoding();
      this.eF = new UTF7Encoding();
      int num1 = 0;
      if (false)
        goto label_3;
label_1:
      switch (num1)
      {
        default:
          this.J8 = new UTF32Encoding();
          return;
      }
label_3:
      int num2;
      num1 = num2;
      goto label_1;
    }

    [CompilerGenerated]
    [SpecialName]
    public jn.Nbr RD() => this.BE;

    [CompilerGenerated]
    [SpecialName]
    public void Rp(jn.Nbr _param1) => this.BE = _param1;

    public void vR() => jn.TK((object) ("Can seek: " + new GZipStream(this.v2.BaseStream, CompressionMode.Decompress).CanSeek.ToString()));

    public void HG(int _param1) => this.v2.BaseStream.Seek((long) _param1, SeekOrigin.Current);

    public byte[] sa(int _param1) => this.v2.ReadBytes(_param1);

    public bool q4() => this.v2.ReadBoolean();

    public byte nx() => this.v2.ReadByte();

    public byte mv() => (byte) jn.nD((object) this.v2);

    public short RU()
    {
      if (this.RD() != (jn.Nbr) 1)
        return this.v2.ReadInt16();
      int num = 0;
      if (jn.xX() != null)
        goto label_4;
label_1:
      switch (num)
      {
        default:
          return jn.D4(this.v2.ReadInt16());
      }
label_4:
      num = 0;
      goto label_1;
    }

    public short Sf() => this.RD() == (jn.Nbr) 1 ? IPAddress.HostToNetworkOrder(this.v2.ReadInt16()) : (short) this.v2.ReadUInt16();

    public int wh() => this.RD() == (jn.Nbr) 1 ? IPAddress.HostToNetworkOrder(this.v2.ReadInt32()) : this.v2.ReadInt32();

    public int Ss() => this.RD() != (jn.Nbr) 1 ? (int) this.v2.ReadUInt32() : IPAddress.HostToNetworkOrder(this.v2.ReadInt32());

    public long Yd() => this.RD() == (jn.Nbr) 1 ? (long) IPAddress.HostToNetworkOrder(this.v2.ReadInt32()) : (long) this.v2.ReadInt32();

    public long cw() => this.RD() == (jn.Nbr) 1 ? jn.mP(this.v2.ReadInt64()) : (long) this.v2.ReadUInt64();

    public string Xi(string _param1)
    {
      string str = this.eW.GetString((byte[]) jn.aq((object) this.v2, _param1.Length));
      bool flag = str != _param1;
      int num1 = 0;
      if (jn.xX() != null)
        goto label_2;
label_1:
      switch (num1)
      {
        default:
          if (flag)
            throw new FormatException((string) jn.Ru((object) "Error reading ASCII string! Expected: ", (object) _param1, (object) ", got: ", (object) str));
          return str;
      }
label_2:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public string uQ(string _param1)
    {
      string str = (string) jn.TO((object) this.eF, (object) (byte[]) jn.aq((object) this.v2, _param1.Length));
      if (!(str != _param1))
        return str;
      int num = 0;
      if (jn.uG())
        goto label_5;
label_1:
      switch (num)
      {
        default:
          throw new FormatException("Error reading UTF7 string! Expected: " + _param1 + ", got: " + str);
      }
label_5:
      num = 0;
      goto label_1;
    }

    public string bA(string _param1)
    {
      int num = 1;
      byte[] numArray;
      while (true)
      {
        switch (num)
        {
          case 1:
            numArray = this.v2.ReadBytes(_param1.Length * 4);
            num = jn.uG() ? 0 : 0;
            continue;
          default:
            goto label_2;
        }
      }
label_2:
      string str = (string) jn.TO((object) this.J8, (object) numArray);
      return !jn.bF((object) str, (object) _param1) ? str : throw new FormatException("Error reading UTF32 string! Expected: " + _param1 + ", got: " + str);
    }

    public long PL() => this.v2.BaseStream.Position;

    public long JM(long _param1, SeekOrigin _param2) => this.v2.BaseStream.Seek(_param1, _param2);

    internal static bool uG() => jn.nr == null;

    internal static jn xX() => jn.nr;

    internal static void yj() => Jnb.vbPcO4();

    internal static void TK([In] object obj0) => Console.WriteLine((string) obj0);

    internal static sbyte nD([In] object obj0) => ((BinaryReader) obj0).ReadSByte();

    internal static short D4([In] short obj0) => IPAddress.HostToNetworkOrder(obj0);

    internal static long mP([In] long obj0) => IPAddress.HostToNetworkOrder(obj0);

    internal static object aq([In] object obj0, [In] int obj1) => (object) ((BinaryReader) obj0).ReadBytes(obj1);

    internal static object Ru([In] object obj0, [In] object obj1, [In] object obj2, [In] object obj3) => (object) ((string) obj0 + (string) obj1 + (string) obj2 + (string) obj3);

    internal static object TO([In] object obj0, [In] object obj1) => (object) ((Encoding) obj0).GetString((byte[]) obj1);

    internal static bool bF([In] object obj0, [In] object obj1) => (string) obj0 != (string) obj1;

    public enum Nbr
    {
    }
  }
}
