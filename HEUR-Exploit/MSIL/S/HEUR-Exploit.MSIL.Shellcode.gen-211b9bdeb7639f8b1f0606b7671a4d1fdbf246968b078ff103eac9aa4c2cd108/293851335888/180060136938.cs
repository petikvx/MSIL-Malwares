// Decompiled with JetBrains decompiler
// Type: 293851335888.180060136938
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003293851335888;
using \u003463056308027;
using \u003475310219084;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace \u003293851335888
{
  public class \u003180060136938 : IRichDataType, IEquatable<IRichDataType>
  {
    private readonly Dictionary<string, int> \u003960319172307 = new Dictionary<string, int>();
    private IReadOnlyList<string> \u003472236048791;
    public const int \u003655397171844 = 1000;
    private const int \u003646878829653 = 50;
    private const double \u003318084515611 = 0.1;

    public \u003180060136938(int maxCategories = 1000) => this.\u003686486398907 = maxCategories;

    public IReadOnlyList<string> \u003659590187762 => this.\u003472236048791 ?? (this.\u003472236048791 = (IReadOnlyList<string>) this.\u003960319172307.Keys.ToList<string>());

    public bool \u003321947797460(IRichDataType _param1)
    {
      if (_param1 == this)
        return true;
      return _param1 != null && _param1 is \u003180060136938 obj && CollectionUtils.ConvertToHashSet<string>((IEnumerable<string>) obj.\u003960319172307.Keys).SetEquals((IEnumerable<string>) this.\u003960319172307.Keys);
    }

    public Optional<string> \u003451741164705(string _param1)
    {
      if (this.\u003279790182087)
        _param1 = UnicodeUtils.NormalizeAndTrim(_param1, NormalizationForm.FormC);
      if (this.\u003293475636232 && string.IsNullOrEmpty(_param1))
        return OptionalUtils.Some<string>(string.Empty);
      return this.\u003960319172307.ContainsKey(_param1) ? OptionalUtils.Some<string>(_param1) : Optional<string>.Nothing;
    }

    public \u003547566135655 \u003807093681948 => \u003547566135655.Categorical;

    public \u003547566135655 \u003841530903203 => \u003547566135655.Categorical;

    public bool \u003002961408668(string _param1) => this.\u003960319172307.ContainsKey(_param1);

    public bool \u003820225811585(string _param1)
    {
      if (this.\u003119050772200)
        return false;
      ++this.\u003677874734385;
      int num;
      if (this.\u003960319172307.TryGetValue(_param1, out num))
      {
        this.\u003960319172307[_param1] = num + 1;
        ++this.\u003888554737756;
        return true;
      }
      if (this.\u003960319172307.Count < this.\u003686486398907)
      {
        this.\u003960319172307[_param1] = 1;
        this.\u003472236048791 = (IReadOnlyList<string>) null;
        ++this.\u003888554737756;
        return true;
      }
      ++this.\u003049945004487;
      return false;
    }

    public void \u003171058304538(long _param1)
    {
      if (this.\u003119050772200)
        return;
      this.\u003119050772200 = true;
      this.\u003610426247207 = !this.\u003650185581563 && this.\u003049945004487 <= 0 && this.\u003677874734385 >= 50 && (double) this.\u003960319172307.Count <= (double) this.\u003677874734385 * 0.1;
    }

    public int \u003049945004487 { get; private set; }

    public int \u003677874734385 { get; private set; }

    public int \u003888554737756 { get; private set; }

    public int \u003219077877972 { get; }

    public bool \u003610426247207 { get; private set; }

    public bool \u003650185581563 { get; private set; }

    public bool \u003119050772200 { get; private set; }

    public bool \u003293475636232 { get; set; }

    public bool \u003279790182087 { get; set; }

    public bool \u003118739016310 { get; set; }

    public int \u003686486398907 { get; }

    public long \u003063140028998 => (long) ((double) this.\u003960319172307.Count / 0.1);
  }
}
