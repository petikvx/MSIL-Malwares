// Decompiled with JetBrains decompiler
// Type: 422928051450.606987981547
// Assembly: 422928051450, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F1AD5918-0B7E-492E-9A94-09EF01F479FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-22363a93cfc60354c16166d43ba99151a041696e2a77361bd34b49818dd210d2.exe

using \u003236864067456;
using \u003422928051450;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace \u003422928051450
{
  public class \u003606987981547
  {
    private \u003667219202375 \u003593192440927;

    public \u003606987981547(\u003667219202375 settings) => this.\u003593192440927 = settings;

    public \u003749213362365 \u003152268008546(string _param1)
    {
      \u003749213362365 obj = this.\u003317962933126(_param1);
      if (obj == null)
        return (\u003749213362365) null;
      List<\u003807884238512> objList = this.\u003339124073955(obj);
      obj.\u003659797160233 = objList.ToArray();
      long totalSeconds = (long) (DateTime.UtcNow - new DateTime(1970, 1, 1)).TotalSeconds;
      string directoryName = Path.GetDirectoryName(_param1);
      string withoutExtension = Path.GetFileNameWithoutExtension(_param1);
      string extension = Path.GetExtension(_param1);
      string destFileName = Path.Combine(directoryName, withoutExtension + "_" + totalSeconds.ToString() + extension);
      File.Move(_param1, destFileName);
      string contents = JsonConvert.SerializeObject((object) obj, (Formatting) 1);
      File.WriteAllText(_param1, contents);
      return obj;
    }

    public \u003749213362365 \u003317962933126(string _param1)
    {
      using (StreamReader streamReader = new StreamReader(_param1))
        return JsonConvert.DeserializeObject<\u003749213362365>(streamReader.ReadToEnd());
    }

    public List<\u003807884238512> \u003339124073955(\u003749213362365 _param1)
    {
      List<\u003807884238512> objList = new List<\u003807884238512>();
      if (this.\u003593192440927.\u003950690586413)
        this.\u003419816662824(_param1, objList);
      if (this.\u003593192440927.\u003382208228587)
        this.\u003179224994486(_param1, objList);
      if (((\u003096840075986) this.\u003593192440927).\u003971588905147)
        this.\u003364458821283(_param1, objList);
      this.\u003538320005160(objList);
      return objList;
    }

    private void \u003538320005160(List<\u003807884238512> _param1)
    {
      _param1.Add(new \u003807884238512(0.0, 12, this.\u003593192440927.\u003935485284151));
      _param1.Add(new \u003807884238512(0.0, 13, this.\u003593192440927.\u003935485284151));
    }

    private void \u003419816662824(\u003749213362365 _param1_1, List<\u003807884238512> _param2)
    {
      double num = ((IEnumerable<\u003066042880124>) _param1_1.\u003484328364001).Max<\u003066042880124>((Func<\u003066042880124, double>) (_param1_2 => _param1_2.\u003349118485199));
      double? nullable = this.\u003303363803343((IEnumerable<\u003807884238512>) _param1_1.\u003659797160233);
      if (!nullable.HasValue)
        return;
      bool flag = true;
      for (double time = nullable.Value; time <= num; time += this.\u003593192440927.\u003294232197527)
      {
        if (num - time < this.\u003593192440927.\u003294232197527)
        {
          if (flag)
            _param2.Add(new \u003807884238512(time, 1, 7));
          else
            _param2.Add(new \u003807884238512(time, 1, 3));
        }
        else if (flag)
        {
          _param2.Add(new \u003807884238512(time, 1, 5));
          if (this.\u003593192440927.\u003770087620484 && time >= 1.0)
            _param2.Add(new \u003807884238512(time - 2.0, 1, 3));
        }
        else
        {
          _param2.Add(new \u003807884238512(time, 1, 1));
          if (this.\u003593192440927.\u003770087620484 && time >= 1.0)
            _param2.Add(new \u003807884238512(time - 2.0, 1, 7));
        }
        flag = !flag;
      }
    }

    private void \u003179224994486(\u003749213362365 _param1_1, List<\u003807884238512> _param2)
    {
      double num = ((IEnumerable<\u003066042880124>) _param1_1.\u003484328364001).Max<\u003066042880124>((Func<\u003066042880124, double>) (_param1_2 => _param1_2.\u003349118485199));
      double? nullable = this.\u003303363803343((IEnumerable<\u003807884238512>) _param1_1.\u003659797160233);
      if (!nullable.HasValue)
        return;
      for (double time = nullable.Value; time <= num; time += this.\u003593192440927.\u003294232197527)
        _param2.Add(new \u003807884238512(time, 8, 0));
    }

    private double? \u003303363803343(IEnumerable<\u003807884238512> _param1)
    {
      if (_param1 == null)
        return new double?();
      List<double> doubleList = new List<double>();
      foreach (\u003807884238512 obj in _param1)
      {
        if (obj.\u003425585887613 == 0)
          doubleList.Add(obj.\u003504289839427);
      }
      Dictionary<double, int> dictionary = this.\u003591486279707((IEnumerable<double>) doubleList);
      if (dictionary.Count == 0)
        return new double?();
      List<double> source = new List<double>();
      foreach (KeyValuePair<double, int> keyValuePair in dictionary)
      {
        if (keyValuePair.Value == 7)
          source.Add(keyValuePair.Key);
      }
      return source.Count == 0 ? new double?() : new double?(source.Min());
    }

    private Dictionary<double, int> \u003591486279707(IEnumerable<double> _param1)
    {
      Dictionary<double, int> dictionary = new Dictionary<double, int>();
      foreach (double key in _param1)
      {
        if (!dictionary.ContainsKey(key))
          dictionary[key] = 0;
        ++dictionary[key];
      }
      return dictionary;
    }

    private void \u003364458821283(\u003749213362365 _param1, List<\u003807884238512> _param2)
    {
      \u003066042880124[] objArray = _param1.\u003484328364001;
      if (this.\u003593192440927.\u003088866741065)
        objArray = this.\u003488677837927((IEnumerable<\u003066042880124>) _param1.\u003484328364001);
      foreach (\u003066042880124 obj in objArray)
      {
        Tuple<int, int> tuple = this.\u003956643268668(obj.\u003926384213387, obj.\u003690154439887);
        _param2.Add(new \u003807884238512(obj.\u003349118485199, tuple.Item1, tuple.Item2));
      }
    }

    private Tuple<int, int> \u003956643268668(int _param1, int _param2)
    {
      int num1 = 0;
      int num2 = 0;
      switch (_param1)
      {
        case 0:
        case 2:
        case 4:
        case 6:
          num1 = 7;
          break;
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
          num1 = 3;
          break;
      }
      switch (_param2)
      {
        case 0:
          num2 = 2;
          break;
        case 2:
          num2 = 3;
          break;
        case 3:
          num2 = 4;
          break;
      }
      return Tuple.Create<int, int>(num2, num1);
    }

    private \u003066042880124[] \u003488677837927(
      IEnumerable<\u003066042880124> _param1_1)
    {
      return _param1_1.GroupBy<\u003066042880124, int>((Func<\u003066042880124, int>) (_param1_2 => this.\u003567991288093(_param1_2.\u003349118485199, 2))).OrderByDescending<IGrouping<int, \u003066042880124>, int>((Func<IGrouping<int, \u003066042880124>, int>) (_param1_3 => _param1_3.Count<\u003066042880124>())).FirstOrDefault<IGrouping<int, \u003066042880124>>().ToArray<\u003066042880124>();
    }

    private int \u003567991288093(double _param1, int _param2)
    {
      Decimal num = (Decimal) _param1 % 1M;
      for (int index = 0; index < _param2; ++index)
        num *= 10M;
      return (int) num;
    }
  }
}
