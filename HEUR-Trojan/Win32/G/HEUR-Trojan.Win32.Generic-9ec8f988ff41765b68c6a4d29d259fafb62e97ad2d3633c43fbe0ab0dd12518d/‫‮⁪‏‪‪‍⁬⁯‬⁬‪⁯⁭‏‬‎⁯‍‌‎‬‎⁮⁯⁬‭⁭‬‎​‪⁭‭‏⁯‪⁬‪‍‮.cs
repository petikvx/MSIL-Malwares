// Decompiled with JetBrains decompiler
// Type: ‫‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.X509.Store;
using System;
using System.Collections;

public sealed class \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮
{
  private \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮()
  {
  }

  public static IX509Store \u202C⁪‮⁬​​⁯⁯​‏‎⁭⁯‭‪​‍‏‍‎⁬⁫⁮⁮‬⁭⁫⁭‪⁮​​‏‫‍‮‬‮‌‬‮(
    string _param0,
    \u200C‪‬⁪⁬‬‭‮⁬⁬⁪‏‌⁯⁭⁬⁭‎⁮⁫‌⁭⁯‍‭‍⁯‫‭⁯‬‌​‏‌‏‪‎⁫⁫‮ _param1)
  {
    string[] strArray = _param0 != null ? \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B⁪⁭‍‬⁯‪​⁪‭‎‎‪‏‍‌‭‏⁮‬‍‭‫⁪‍⁯⁯​‬‎⁬⁭⁬‫‌⁬​‍‎⁯‮(_param0).Split('/') : throw new ArgumentNullException("type");
    if (strArray.Length < 2)
      throw new ArgumentException("type");
    if (strArray[1] != "COLLECTION")
      throw new \u200B‮‎⁯⁪‎⁮‌‫⁯‎‪‍⁮⁬‫⁮‭‌⁮‮‮⁪‬⁯‮⁭⁮‮​‏‏⁬⁪‮⁮‌‮​‌‮("X.509 store type '" + _param0 + "' not available.");
    ICollection collection = ((\u206F⁮‮‫​​​⁯‎‎⁪⁫​⁯⁭⁯⁯‏⁬‪‌​‍‪‫‬‎⁭‏⁬⁭⁬⁪‬‪‫‍⁫⁫⁮‮) _param1).\u206A‎​⁪⁪‏⁭⁬‮‪⁫‪⁬⁫‮⁫⁯‪‎‮‎‎‏​⁯⁯‌⁪‌⁯⁬⁫‎⁫⁬⁮​‎⁪‭‮();
    string str = strArray[0];
    if (!(str == "ATTRIBUTECERTIFICATE"))
    {
      if (!(str == "CERTIFICATE"))
      {
        if (!(str == "CERTIFICATEPAIR"))
        {
          if (!(str == "CRL"))
            throw new \u200B‮‎⁯⁪‎⁮‌‫⁯‎‪‍⁮⁬‫⁮‭‌⁮‮‮⁪‬⁯‮⁭⁮‮​‏‏⁬⁪‮⁮‌‮​‌‮("X.509 store type '" + _param0 + "' not available.");
          \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮.\u200F​‭‬⁮‮‭‎‍‎⁯⁭‬‫‫‫⁫‌‪‮‮⁫​​‬⁭‪‎‍‫​‌⁭⁮⁪‭​​‪‭‮(collection, typeof (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮));
        }
        else
          \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮.\u200F​‭‬⁮‮‭‎‍‎⁯⁭‬‫‫‫⁫‌‪‮‮⁫​​‬⁭‪‎‍‫​‌⁭⁮⁪‭​​‪‭‮(collection, typeof (\u206B⁫‫⁬⁪‏‌‌⁭⁭‭‌‫‎⁭‮⁯‬‫⁮⁭‏‭⁮‎⁬⁫‮‫‏‮‪‍‏‪‎‭⁪⁬‮‮));
      }
      else
        \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮.\u200F​‭‬⁮‮‭‎‍‎⁯⁭‬‫‫‫⁫‌‪‮‮⁫​​‬⁭‪‎‍‫​‌⁭⁮⁪‭​​‪‭‮(collection, typeof (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮));
    }
    else
      \u202B‮⁪‏‪‪‍⁬⁯‬⁬‪⁯⁭‏‬‎⁯‍‌‎‬‎⁮⁯⁬‭⁭‬‎​‪⁭‭‏⁯‪⁬‪‍‮.\u200F​‭‬⁮‮‭‎‍‎⁯⁭‬‫‫‫⁫‌‪‮‮⁫​​‬⁭‪‎‍‫​‌⁭⁮⁪‭​​‪‭‮(collection, typeof (\u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮));
    return (IX509Store) new \u202A‌⁮​‌⁪‌‫⁯‎⁭‪‫‬⁬‏‏‎⁭‬⁬‎⁪‮​‫‬‪‮‏⁯⁮​‍⁬⁪‪‬⁯‮‮(collection);
  }

  private static void \u200F​‭‬⁮‮‭‎‍‎⁯⁭‬‫‫‫⁫‌‪‮‮⁫​​‬⁭‪‎‍‫​‌⁭⁮⁪‭​​‪‭‮(
    ICollection _param0,
    Type _param1)
  {
    foreach (object o in (IEnumerable) _param0)
    {
      if (!_param1.IsInstanceOfType(o))
        throw new InvalidCastException("Can't cast object to type: " + _param1.FullName);
    }
  }
}
