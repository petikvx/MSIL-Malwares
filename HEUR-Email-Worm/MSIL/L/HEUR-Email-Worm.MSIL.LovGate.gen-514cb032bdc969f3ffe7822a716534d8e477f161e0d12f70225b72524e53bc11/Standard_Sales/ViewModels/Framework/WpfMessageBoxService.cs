// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ViewModels.Framework.WpfMessageBoxService
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using System.Runtime.InteropServices;
using System.Windows;

namespace Standard_Sales.ViewModels.Framework
{
  public class WpfMessageBoxService : IMessageBoxService
  {
    public void ShowError(string message) => WpfMessageBoxService.ShowMessage(message, \u003CModule\u003E.\u200B‫‫‫⁯⁫‫‫⁬‪‪​‫⁮⁪⁪⁭‬‮⁬​‪‍‎‏⁫‬⁫‫‬‬⁫‭‍‏⁯‪⁪‫‮‮<string>(3771485287U), CustomDialogIcons.Stop);

    public void ShowInformation(string message) => WpfMessageBoxService.ShowMessage(message, \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(2787943026U), CustomDialogIcons.Information);

    public CustomDialogResults ShowOkCancel(
      string message,
      CustomDialogIcons icon)
    {
label_1:
      int num1 = -1944594307;
      CustomDialogResults customDialogResults;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -868517361)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            customDialogResults = WpfMessageBoxService.ShowQuestionWithButton(message, icon, CustomDialogButtons.OkCancel);
            num1 = (int) num2 * -485907070 ^ -1568344508;
            continue;
          case 3:
            num1 = (int) num2 * 795041662 ^ 1432293736;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return customDialogResults;
    }

    public void ShowWarning(string message) => WpfMessageBoxService.ShowMessage(message, \u003CModule\u003E.\u202E⁫⁬⁬⁯‪‏​‍‏⁯‎⁪​‌‭⁪⁯‌‏‏​⁪‮‎‮‌​‪‍‏​‪‪⁫‬‪‮⁫‭‮<string>(165197878U), CustomDialogIcons.Warning);

    public CustomDialogResults ShowYesNo(string message, CustomDialogIcons icon)
    {
label_1:
      int num1 = -1124203556;
      CustomDialogResults customDialogResults;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1799743851)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            customDialogResults = WpfMessageBoxService.ShowQuestionWithButton(message, icon, CustomDialogButtons.YesNo);
            num1 = (int) num2 * 1154100783 ^ 935534138;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return customDialogResults;
    }

    public CustomDialogResults ShowYesNoCancel(
      string message,
      CustomDialogIcons icon)
    {
label_1:
      int num1 = 211710868;
      CustomDialogResults customDialogResults;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1376191809)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            customDialogResults = WpfMessageBoxService.ShowQuestionWithButton(message, icon, CustomDialogButtons.YesNoCancel);
            num1 = (int) num2 * -440123722 ^ -252760755;
            continue;
          case 2:
            num1 = (int) num2 * 537257879 ^ 1365695732;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return customDialogResults;
    }

    private static MessageBoxButton GetButton(CustomDialogButtons btn)
    {
      MessageBoxButton messageBoxButton = MessageBoxButton.OK;
label_1:
      int num1 = -333532157;
      MessageBoxButton button;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -664240267)) % 12U)
        {
          case 0:
label_11:
            messageBoxButton = MessageBoxButton.OK;
            num1 = -117908260;
            continue;
          case 1:
            num1 = (int) num2 * -126118822 ^ -1736254676;
            continue;
          case 2:
            switch (btn)
            {
              case CustomDialogButtons.Ok:
                goto label_11;
              case CustomDialogButtons.OkCancel:
                goto label_8;
              case CustomDialogButtons.YesNo:
                goto label_13;
              case CustomDialogButtons.YesNoCancel:
                goto label_12;
              default:
                num1 = (int) num2 * -792691415 ^ 1114137483;
                continue;
            }
          case 3:
label_13:
            messageBoxButton = MessageBoxButton.YesNo;
            num1 = -215423418;
            continue;
          case 5:
label_12:
            messageBoxButton = MessageBoxButton.YesNoCancel;
            num1 = -1072248098;
            continue;
          case 6:
            num1 = (int) num2 * 72067116 ^ 716338238;
            continue;
          case 7:
            num1 = (int) num2 * 232681688 ^ -1601765874;
            continue;
          case 8:
            num1 = (int) num2 * -464684123 ^ 77136958;
            continue;
          case 9:
            goto label_1;
          case 10:
label_8:
            messageBoxButton = MessageBoxButton.OKCancel;
            num1 = -1579437585;
            continue;
          case 11:
            button = messageBoxButton;
            num1 = -1231591483;
            continue;
          default:
            goto label_14;
        }
      }
label_14:
      return button;
    }

    private static MessageBoxImage GetImage(CustomDialogIcons icon)
    {
      MessageBoxImage messageBoxImage = MessageBoxImage.None;
      int num1;
      switch (icon)
      {
        case CustomDialogIcons.Information:
label_11:
          messageBoxImage = MessageBoxImage.Asterisk;
          num1 = -322321011;
          break;
        case CustomDialogIcons.Question:
label_3:
          messageBoxImage = MessageBoxImage.Question;
          num1 = -322321011;
          break;
        case CustomDialogIcons.Exclamation:
label_9:
          messageBoxImage = MessageBoxImage.Exclamation;
          num1 = -1433158191;
          break;
        case CustomDialogIcons.Stop:
label_5:
          messageBoxImage = MessageBoxImage.Hand;
          num1 = -322321011;
          break;
        case CustomDialogIcons.Warning:
label_4:
          messageBoxImage = MessageBoxImage.Exclamation;
          num1 = -757053721;
          break;
        default:
label_1:
          num1 = -252171489;
          break;
      }
      MessageBoxImage image;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -342751417)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 1933248351 ^ -1646755859;
            continue;
          case 1:
            goto label_11;
          case 2:
            image = messageBoxImage;
            num1 = -536759085;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 1931074 ^ -1656908995;
            continue;
          case 5:
            goto label_9;
          case 6:
            num1 = (int) num2 * 1499383560 ^ -437933251;
            continue;
          case 7:
            goto label_4;
          case 8:
            num1 = (int) num2 * -1470317983 ^ -466918022;
            continue;
          case 10:
            goto label_3;
          case 11:
            goto label_5;
          default:
            goto label_13;
        }
      }
label_13:
      return image;
    }

    private static CustomDialogResults GetResult(MessageBoxResult result)
    {
      CustomDialogResults customDialogResults = CustomDialogResults.None;
label_1:
      int num1 = -1948581780;
      CustomDialogResults result1;
      MessageBoxResult messageBoxResult1;
      MessageBoxResult messageBoxResult2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1573271412)) % 15U)
        {
          case 0:
            switch (messageBoxResult1)
            {
              case MessageBoxResult.None:
                goto label_15;
              case MessageBoxResult.OK:
                goto label_13;
              case MessageBoxResult.Cancel:
                goto label_16;
              case MessageBoxResult.OK | MessageBoxResult.Cancel:
              case (MessageBoxResult) 4:
              case (MessageBoxResult) 5:
                goto label_3;
              case MessageBoxResult.Yes:
                goto label_10;
              case MessageBoxResult.No:
                goto label_9;
              default:
                num1 = (int) num2 * 1914837702 ^ 146766392;
                continue;
            }
          case 1:
            messageBoxResult2 = result;
            num1 = (int) num2 * 1952726552 ^ 924825343;
            continue;
          case 2:
            num1 = (int) num2 * -1665635462 ^ 1105136104;
            continue;
          case 3:
label_3:
            result1 = customDialogResults;
            num1 = -579081836;
            continue;
          case 4:
label_16:
            customDialogResults = CustomDialogResults.Cancel;
            num1 = -504922856;
            continue;
          case 5:
label_9:
            customDialogResults = CustomDialogResults.No;
            num1 = -1318529196;
            continue;
          case 6:
label_10:
            customDialogResults = CustomDialogResults.Yes;
            num1 = -1806481478;
            continue;
          case 7:
            num1 = (int) num2 * 178942961 ^ -98278822;
            continue;
          case 9:
            messageBoxResult1 = messageBoxResult2;
            num1 = (int) num2 * -709234369 ^ 2042671384;
            continue;
          case 10:
            num1 = (int) num2 * -149384252 ^ 1764011128;
            continue;
          case 11:
            goto label_1;
          case 12:
            num1 = (int) num2 * 1970010605 ^ 1852008422;
            continue;
          case 13:
label_15:
            customDialogResults = CustomDialogResults.None;
            num1 = -504922856;
            continue;
          case 14:
label_13:
            customDialogResults = CustomDialogResults.Ok;
            num1 = -504922856;
            continue;
          default:
            goto label_17;
        }
      }
label_17:
      return result1;
    }

    private static void ShowMessage(string message, string heading, CustomDialogIcons icon)
    {
      int num = (int) WpfMessageBoxService.\u200C‫⁪⁭‫⁭⁫‮‭⁭‌​‪⁭‏⁫‮​⁪⁫⁬⁯‮‏⁯‪‎‫‏⁬⁮‭‌​​⁭⁬‍‌⁬‮(message, heading, MessageBoxButton.OK, WpfMessageBoxService.GetImage(icon));
    }

    private static CustomDialogResults ShowQuestionWithButton(
      string message,
      CustomDialogIcons icon,
      CustomDialogButtons button)
    {
label_1:
      int num1 = -715251072;
      MessageBoxResult result1;
      CustomDialogResults result2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1130030924)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 34769015 ^ 1754367527;
            continue;
          case 1:
            result1 = WpfMessageBoxService.\u200C‫⁪⁭‫⁭⁫‮‭⁭‌​‪⁭‏⁫‮​⁪⁫⁬⁯‮‏⁯‪‎‫‏⁬⁮‭‌​​⁭⁬‍‌⁬‮(message, \u003CModule\u003E.\u206B‏⁮‭⁬⁭‪‌​‮⁪‬‎⁪​​⁭‮⁬‪⁭‭‪‬⁬‮⁫⁫‮‎‮‏‫⁬⁪‌⁬‌‏⁫‮<string>(3235032345U), WpfMessageBoxService.GetButton(button), WpfMessageBoxService.GetImage(icon));
            num1 = (int) num2 * 1936808445 ^ -184465196;
            continue;
          case 2:
            goto label_1;
          case 4:
            result2 = WpfMessageBoxService.GetResult(result1);
            num1 = (int) num2 * 1683383913 ^ -1315684427;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return result2;
    }

    static MessageBoxResult \u200C‫⁪⁭‫⁭⁫‮‭⁭‌​‪⁭‏⁫‮​⁪⁫⁬⁯‮‏⁯‪‎‫‏⁬⁮‭‌​​⁭⁬‍‌⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] MessageBoxButton obj2,
      [In] MessageBoxImage obj3)
    {
      return MessageBox.Show(obj0, obj1, obj2, obj3);
    }
  }
}
