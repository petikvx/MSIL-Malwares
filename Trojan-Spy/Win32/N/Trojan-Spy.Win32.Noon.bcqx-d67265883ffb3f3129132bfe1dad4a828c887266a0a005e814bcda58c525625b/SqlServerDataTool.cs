// Decompiled with JetBrains decompiler
// Type: Alero.SqlServerDataTool
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System;
using System.Data;
using System.Data.SqlClient;

namespace Alero
{
  public class SqlServerDataTool : MSSqlDataTool
  {
    private readonly string _connectionString;
    private SqlConnection _connection;
    private SqlTransaction _transaction;

    public SqlServerDataTool(string connectionString) => this._connectionString = connectionString;

    protected override IDbConnection GetConnection() => (IDbConnection) this.Connection;

    public SqlConnection Connection
    {
      get
      {
        if (this._connection == null)
        {
          SqlConnection sqlConnection = new SqlConnection(this._connectionString);
          sqlConnection.Open();
          this._connection = sqlConnection;
        }
        return this._connection;
      }
    }

    protected override IDbTransaction GetTransaction() => (IDbTransaction) this._transaction;

    protected override void Dispose(bool disposing)
    {
      base.Dispose(disposing);
      if (!disposing)
        return;
      if (this._transaction != null)
        this._transaction.Dispose();
      if (this._connection != null)
        this._connection.Dispose();
    }

    public override void BeginTransaction() => this._transaction = this._transaction == null ? this.Connection.BeginTransaction() : throw new InvalidOperationException("Error starting transaction. Transaction already started");

    public override void CommitTransaction()
    {
      this._transaction.Commit();
      this._transaction.Dispose();
      this._transaction = (SqlTransaction) null;
    }

    public override void RollbackTransaction()
    {
      this._transaction.Rollback();
      this._transaction.Dispose();
      this._connection.Dispose();
      this._transaction = (SqlTransaction) null;
      this._connection = (SqlConnection) null;
    }
  }
}
