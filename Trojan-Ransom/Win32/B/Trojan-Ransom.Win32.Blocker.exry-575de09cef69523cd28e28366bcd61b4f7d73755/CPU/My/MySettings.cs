// Decompiled with JetBrains decompiler
// Type: CPU.My.MySettings
// Assembly: CPU, Version=2.0.0.1, Culture=neutral, PublicKeyToken=null
// MVID: D1A70B46-7985-4973-B850-ADC7B54E4B0E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.exry-575de09cef69523cd28e28366bcd61b4f7d73755.exe

using eokTQcMGCo4EXkLuPW;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace CPU.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance;
    private static bool addedHandler;
    private static object addedHandlerLockObject;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static MySettings()
    {
      int num = 3;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
            // ISSUE: reference to a compiler-generated field
            // ISSUE: object of a compiler-generated type is created
            // ISSUE: reference to a compiler-generated method
            MySettings.defaultInstance = (MySettings) MySettings.XTppHSlx1TF0M5YH7Mt((object) new MySettings());
            break;
          case 3:
            // ISSUE: reference to a compiler-generated method
            MySettings.Ngc0QhlpCcABOPcmANo();
            // ISSUE: reference to a compiler-generated method
            MySettings.FV3G3olo6xhH7fsZ3ND();
            // ISSUE: reference to a compiler-generated method
            if (MySettings.UayRN9lPrqbjC3u0YTk())
            {
              if (true)
              {
                num = 0;
                continue;
              }
              goto case 0;
            }
            else
            {
              num = 4;
              continue;
            }
          case 5:
            goto label_5;
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated method
        MySettings.addedHandlerLockObject = MySettings.U2AxkplZDCx98qWQFW7(new object());
        num = 5;
      }
label_5:;
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public MySettings()
    {
      // ISSUE: reference to a compiler-generated method
      MySettings.Ngc0QhlpCcABOPcmANo();
      // ISSUE: reference to a compiler-generated method
      MySettings.G65Csvl09W75BYUgtLx((object) this);
    }

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void AutoSaveSettings(object sender, EventArgs e)
    {
      int num = 3;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 4:
            if (!flag)
              goto label_3;
            else
              goto default;
          case 3:
            // ISSUE: reference to a compiler-generated method
            // ISSUE: reference to a compiler-generated method
            flag = MySettings.SLyEyolw4IujTWWOVR2(MySettings.aSRoIulkT898m4pp3JI());
            // ISSUE: reference to a compiler-generated method
            MySettings.UayRN9lPrqbjC3u0YTk();
            // ISSUE: reference to a compiler-generated method
            num = MySettings.FV3G3olo6xhH7fsZ3ND() ? 0 : 4;
            continue;
          case 5:
            goto label_6;
          default:
            // ISSUE: reference to a compiler-generated method
            ((ApplicationSettingsBase) MySettings.RAGQ03lb0mZ1aEuqvOn()).Save();
            if (true)
            {
              num = 5;
              continue;
            }
            goto case 3;
        }
      }
label_3:
      return;
label_6:;
    }

    public static MySettings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        MySettings.FV3G3olo6xhH7fsZ3ND();
        int num1;
        if (MySettings.UayRN9lPrqbjC3u0YTk())
          num1 = 4;
        else
          goto label_20;
label_15:
        MySettings defaultInstance;
        while (true)
        {
          bool flag1;
          object handlerLockObject;
          switch (num1)
          {
            case 0:
            case 4:
              flag1 = !MySettings.addedHandler;
              if (!MySettings.FV3G3olo6xhH7fsZ3ND())
              {
                num1 = 5;
                continue;
              }
              goto case 6;
            case 1:
              try
              {
                flag1 = !MySettings.addedHandler;
                MySettings.FV3G3olo6xhH7fsZ3ND();
                int num2 = !MySettings.UayRN9lPrqbjC3u0YTk() ? 2 : 3;
                while (true)
                {
                  switch (num2)
                  {
                    case 0:
                    case 3:
                      if (!flag1)
                        goto label_12;
                      else
                        goto case 1;
                    case 1:
                    case 2:
                      MySettings.zGKNWxlguhloEqt2A8H(MySettings.aSRoIulkT898m4pp3JI(), (object) (ShutdownEventHandler) ((sender, e) =>
                      {
                        int num3 = 3;
                        bool flag2;
                        while (true)
                        {
                          switch (num3)
                          {
                            case 1:
                            case 4:
                              if (!flag2)
                                goto label_3;
                              else
                                goto default;
                            case 3:
                              flag2 = MySettings.SLyEyolw4IujTWWOVR2(MySettings.aSRoIulkT898m4pp3JI());
                              MySettings.UayRN9lPrqbjC3u0YTk();
                              num3 = MySettings.FV3G3olo6xhH7fsZ3ND() ? 0 : 4;
                              continue;
                            case 5:
                              goto label_6;
                            default:
                              ((ApplicationSettingsBase) MySettings.RAGQ03lb0mZ1aEuqvOn()).Save();
                              if (true)
                              {
                                num3 = 5;
                                continue;
                              }
                              goto case 3;
                          }
                        }
label_3:
                        return;
label_6:;
                      }));
                      goto case 4;
                    case 4:
                      MySettings.addedHandler = true;
                      num2 = 5;
                      continue;
                    case 5:
                      goto label_12;
                    default:
                      num2 = 4;
                      continue;
                  }
                }
              }
              finally
              {
                MySettings.fwLqpPldFdS3sqNyHqi(handlerLockObject);
              }
label_12:
              break;
            case 2:
              handlerLockObject = MySettings.addedHandlerLockObject;
              goto case 3;
            case 3:
            case 7:
label_14:
              ObjectFlowControl.CheckForSyncLockOnValueType(handlerLockObject);
              goto case 6;
            case 5:
              if (flag1)
              {
                num1 = 2;
                continue;
              }
              break;
            case 6:
              MySettings.IFeH6Jl2526AjvKjuZy(handlerLockObject);
              num1 = 1;
              continue;
            case 8:
              goto label_22;
            default:
              num1 = 6;
              continue;
          }
          defaultInstance = MySettings.defaultInstance;
          if (true)
            num1 = 8;
          else
            goto label_14;
        }
label_20:
        num1 = 7;
        if (true)
          goto label_15;
label_22:
        return defaultInstance;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void Ngc0QhlpCcABOPcmANo() => eBY7bi7YwxKvLu4W5N.Tfbc7BhzM3pUR();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object XTppHSlx1TF0M5YH7Mt([In] object obj0) => (object) SettingsBase.Synchronized((SettingsBase) obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object U2AxkplZDCx98qWQFW7([In] object obj0) => RuntimeHelpers.GetObjectValue(obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool UayRN9lPrqbjC3u0YTk() => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool FV3G3olo6xhH7fsZ3ND() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void G65Csvl09W75BYUgtLx([In] object obj0) => ((ApplicationSettingsBase) obj0).\u002Ector();

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object aSRoIulkT898m4pp3JI() => (object) MyProject.Application;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool SLyEyolw4IujTWWOVR2([In] object obj0) => ((WindowsFormsApplicationBase) obj0).SaveMySettingsOnExit;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static object RAGQ03lb0mZ1aEuqvOn() => (object) MySettingsProperty.Settings;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void IFeH6Jl2526AjvKjuZy([In] object obj0) => Monitor.Enter(obj0);

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void zGKNWxlguhloEqt2A8H([In] object obj0, [In] object obj1) => ((WindowsFormsApplicationBase) obj0).Shutdown += (ShutdownEventHandler) obj1;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void fwLqpPldFdS3sqNyHqi([In] object obj0) => Monitor.Exit(obj0);
  }
}
