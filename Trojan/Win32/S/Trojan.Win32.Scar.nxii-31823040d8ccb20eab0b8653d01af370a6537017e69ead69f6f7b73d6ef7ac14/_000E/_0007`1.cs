// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u000E;
using \u0012;
using \u0014;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u000E
{
  internal sealed class \u0007<\u0001> : 
    ICollection<\u0001>,
    IEnumerable,
    IEnumerable<\u0001>,
    IList,
    ICollection,
    \u0006
  {
    private readonly IList \u0001;
    private readonly ICollection<\u0001> \u0001;
    private object \u0001;

    public virtual void Add([In] \u0001 obj0)
    {
      while (this.\u0001 == null)
      {
        if (true)
        {
          this.\u0001.Add((object) obj0);
          if (false)
            ;
          return;
        }
      }
      ((ICollection<\u0001>) this.\u0001).Add(obj0);
    }

    public virtual void \u0001()
    {
      while (this.\u0001 == null)
      {
        if (true)
        {
          \u0011.\u007E\u0011\u0002((object) this.\u0001);
          if (true)
            return;
          break;
        }
      }
      ((ICollection<\u0001>) this.\u0001).Clear();
    }

    public virtual bool \u0001([In] \u0001 obj0)
    {
      while (this.\u0001 == null)
      {
        if (true)
          return this.\u0001.Contains((object) obj0);
      }
      int num = ((ICollection<\u0001>) this.\u0001).Contains(obj0) ? 1 : 0;
      return false ? num != 0 : num != 0;
    }

    public virtual void \u0001([In] \u0001[] obj0, [In] int obj1)
    {
      do
      {
        if (this.\u0001 == null)
          goto label_4;
        else
          goto label_7;
label_1:
        if (true)
          continue;
        goto label_6;
label_4:
        \u001C\u0002.\u007E\u0089\u0005((object) this.\u0001, (Array) obj0, obj1);
label_6:
        if (false)
          goto label_1;
        else
          goto label_3;
label_7:
        ((ICollection<\u0001>) this.\u0001).CopyTo(obj0, obj1);
        goto label_1;
      }
      while (false);
      return;
label_3:;
    }

    [SpecialName]
    public virtual int \u0001()
    {
      while (this.\u0001 == null)
      {
        if (true)
        {
          int num = \u001F.\u007E\u0013\u0003((object) this.\u0001);
          return false ? num : num;
        }
      }
      return ((ICollection<\u0001>) this.\u0001).Count;
    }

    [SpecialName]
    public virtual bool \u0001()
    {
      while (this.\u0001 == null)
      {
        if (true)
        {
          int num = \u0015\u0002.\u007E\u009C\u0004((object) this.\u0001) ? 1 : 0;
          return false ? num != 0 : num != 0;
        }
      }
      return ((ICollection<\u0001>) this.\u0001).IsReadOnly;
    }

    public virtual bool \u0002([In] \u0001 obj0)
    {
      if (this.\u0001 != null)
        return ((ICollection<\u0001>) this.\u0001).Remove(obj0);
      int num = this.\u0001.Contains((object) obj0) ? 1 : 0;
      if (num != 0)
        goto label_7;
label_3:
      if (false)
        return num != 0;
      if (true)
        return num != 0;
label_7:
      IList list = this.\u0001;
      // ISSUE: variable of a boxed type
      __Boxed<\u0001> local = (object) obj0;
      if (true)
      {
        list.Remove((object) local);
        goto label_3;
      }
      else
        goto label_3;
    }

    public virtual IEnumerator<\u0001> \u0001() => this.\u0001 != null ? ((IEnumerable<\u0001>) this.\u0001).GetEnumerator() : this.\u0001.Cast<\u0001>().GetEnumerator();

    IEnumerator IEnumerable.\u0001() => this.\u0001 == null ? \u001D\u0002.\u007E\u008A\u0005((object) this.\u0001) : (IEnumerator) ((IEnumerable<\u0001>) this.\u0001).GetEnumerator();

    int IList.\u0001([In] object obj0)
    {
      if (true)
        \u0007<\u0001>.\u0001(obj0);
      this.Add((\u0001) obj0);
      int num = this.\u0001();
      do
      {
        if (true)
          --num;
      }
      while (false);
      return num;
    }

    bool IList.\u0001([In] object obj0) => \u0007<\u0001>.\u0001(obj0) && this.\u0001((\u0001) obj0);

    int IList.\u0002([In] object obj0)
    {
      int num1;
      if (this.\u0001 != null)
      {
        if (true)
        {
          int num2 = 4123;
          num1 = num2 == 0 ? num2 : throw new InvalidOperationException(\u001C.\u0001(num2));
        }
        else
          goto label_6;
      }
      else
        goto label_9;
label_5:
      if (num1 == 0)
        return -1;
label_6:
      num1 = \u001E\u0002.\u007E\u008C\u0005((object) this.\u0001, (object) (\u0001) obj0);
      if (true)
        return num1;
      goto label_5;
label_9:
      num1 = \u0007<\u0001>.\u0001(obj0) ? 1 : 0;
      goto label_5;
    }

    void IList.\u0001([In] int obj0)
    {
      if (this.\u0001 != null)
        throw new InvalidOperationException(\u001C.\u0001(4188));
      \u0018 obj = \u0018.\u007E\u0094\u0002;
      IList list = this.\u0001;
      int num = obj0;
      if (false)
        return;
      obj((object) list, num);
    }

    void IList.\u0001([In] int obj0, [In] object obj1)
    {
      while (true)
      {
        if (this.\u0001 != null)
        {
          if (false)
            break;
          throw new InvalidOperationException(\u001C.\u0001(4257));
        }
        if (true)
        {
          \u0007<\u0001>.\u0001(obj1);
          \u001F\u0002.\u007E\u008E\u0005((object) this.\u0001, obj0, (object) (\u0001) obj1);
          break;
        }
      }
    }

    [SpecialName]
    bool IList.\u0002()
    {
      while (this.\u0001 == null)
      {
        if (true)
        {
          int num = \u0015\u0002.\u007E\u009D\u0004((object) this.\u0001) ? 1 : 0;
          return false ? num != 0 : num != 0;
        }
      }
      return ((ICollection<\u0001>) this.\u0001).IsReadOnly;
    }

    void IList.\u0001([In] object obj0)
    {
      if (!\u0007<\u0001>.\u0001(obj0))
        return;
      this.\u0002((\u0001) obj0);
    }

    [SpecialName]
    object IList.\u0001([In] int obj0)
    {
      if (this.\u0001 != null)
        throw new InvalidOperationException(\u001C.\u0001(4322));
      return \u007F\u0002.\u007E\u0090\u0005((object) this.\u0001, obj0);
    }

    [SpecialName]
    void IList.\u0002([In] int obj0, [In] object obj1)
    {
      while (true)
      {
        if (this.\u0001 != null)
        {
          if (false)
            break;
          throw new InvalidOperationException(\u001C.\u0001(4322));
        }
        if (true)
        {
          \u0007<\u0001>.\u0001(obj1);
          \u001F\u0002.\u007E\u008F\u0005((object) this.\u0001, obj0, (object) (\u0001) obj1);
          break;
        }
      }
    }

    void ICollection.\u0001([In] Array obj0, [In] int obj1) => this.\u0001((\u0001[]) obj0, obj1);

    [SpecialName]
    bool ICollection.\u0003() => false;

    [SpecialName]
    object ICollection.\u0002()
    {
      if (this.\u0001 == null)
      {
        // ISSUE: cast to a reference type
        object obj = \u0080\u0002.\u0091\u0005((object&) ref this.\u0001, new object(), (object) null);
      }
      return (object) this.\u0001;
    }

    private static void \u0001([In] object obj0)
    {
      while (\u0007<\u0001>.\u0001(obj0))
      {
        if (true)
          return;
      }
      // ISSUE: type reference
      throw new ArgumentException(\u0002.\u0002.\u0001(\u001C.\u0001(4387), (IFormatProvider) \u0098.\u0002\u0004(), obj0, (object) \u0004\u0002.\u0084\u0004(__typeref (\u0001))), \u001C.\u0001(3499));
    }

    private static bool \u0001([In] object obj0)
    {
      if (true)
        goto label_8;
label_6:
      return false;
label_8:
      if (obj0 is \u0001)
        goto label_7;
      else
        goto label_9;
label_4:
      int num;
      // ISSUE: type reference
      if (num != 0 && !\u0006.\u0001(\u0004\u0002.\u0084\u0004(__typeref (\u0001))))
        goto label_6;
label_7:
      num = 1;
      if (num != 0)
        return num != 0;
      goto label_4;
label_9:
      while (obj0 == null)
      {
        if (true)
        {
          if (true)
          {
            // ISSUE: type reference
            num = \u0015.\u000E.\u000E(\u0004\u0002.\u0084\u0004(__typeref (\u0001))) ? 1 : 0;
            goto label_4;
          }
          else
            goto label_7;
        }
      }
      goto label_6;
    }

    [SpecialName]
    public object \u0001() => this.\u0001 != null ? (object) this.\u0001 : (object) this.\u0001;
  }
}
