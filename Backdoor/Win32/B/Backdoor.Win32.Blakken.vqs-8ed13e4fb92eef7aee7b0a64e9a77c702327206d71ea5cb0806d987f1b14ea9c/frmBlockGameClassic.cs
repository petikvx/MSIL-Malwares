// Decompiled with JetBrains decompiler
// Type: BlockGameApp.frmBlockGameClassic
// Assembly: FormatterAssemblySt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 877C36BA-E94F-4F44-80EE-D68074F87B8D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqs-8ed13e4fb92eef7aee7b0a64e9a77c702327206d71ea5cb0806d987f1b14ea9c.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace BlockGameApp
{
  public class frmBlockGameClassic : Form
  {
    private Rectangle Goal = new Rectangle(350, 600, 50, 50);
    private Rectangle Player = new Rectangle(350, 0, 50, 50);
    private Rectangle Enemy1 = new Rectangle(0, 150, 75, 75);
    private Rectangle Enemy2 = new Rectangle(599, 350, 75, 75);
    private Timer timer1;
    private IContainer components = (IContainer) null;

    public frmBlockGameClassic()
    {
      this.InitializeComponent();
      this.MaximumSize = new Size(750, 750);
      this.MinimumSize = new Size(750, 750);
      this.StartPosition = FormStartPosition.CenterParent;
      this.timer1 = new Timer();
      this.timer1.Tick += new EventHandler(this.timer1_Tick);
      this.timer1.Enabled = true;
      this.KeyDown += new KeyEventHandler(this.Form1_KeyDown);
      this.Paint += new PaintEventHandler(this.Form1_Paint);
    }

    private void Form1_Paint(object sender, PaintEventArgs e)
    {
      e.Graphics.DrawRectangle(Pens.Red, this.Goal);
      e.Graphics.DrawRectangle(Pens.Blue, this.Player);
      e.Graphics.DrawRectangle(Pens.Red, this.Enemy1);
      e.Graphics.DrawRectangle(Pens.Red, this.Enemy2);
    }

    private void Form1_KeyDown(object sender, KeyEventArgs e)
    {
      int num1 = this.Player.Location.X;
      int num2 = this.Player.Location.Y;
      switch (e.KeyData)
      {
        case Keys.Left:
          this.Player.Location = new Point(num1 -= 20, num2 = num2);
          this.Refresh();
          break;
        case Keys.Up:
          this.Player.Location = new Point(num1 = num1, num2 -= 20);
          this.Refresh();
          break;
        case Keys.Right:
          this.Player.Location = new Point(num1 += 20, num2 = num2);
          this.Refresh();
          break;
        case Keys.Down:
          this.Player.Location = new Point(num1 = num1, num2 += 20);
          this.Refresh();
          break;
      }
      Point location = this.Player.Location;
      if (location.X > 650)
        this.Player.Location = new Point(num1 -= 20, num2 = num2);
      location = this.Player.Location;
      if (location.X < 0)
        this.Player.Location = new Point(num1 += 20, num2 = num2);
      location = this.Player.Location;
      if (location.Y > 590)
        this.Player.Location = new Point(num1 = num1, num2 -= 20);
      location = this.Player.Location;
      if (location.Y < 1)
      {
        int num3;
        int num4;
        this.Player.Location = new Point(num3 = num1, num4 = num2 + 20);
      }
      this.HitDetect();
    }

    public void HitDetect()
    {
      if (this.Player.IntersectsWith(this.Goal))
      {
        int num1 = (int) MessageBox.Show("You Win!");
      }
      int num2 = this.Player.Location.X;
      int num3 = this.Player.Location.Y;
      if (this.Enemy1.IntersectsWith(this.Player))
      {
        this.Player.Location = new Point(num2 = 350, num3 = 0);
        int num4 = (int) MessageBox.Show("You lose!");
      }
      if (!this.Enemy2.IntersectsWith(this.Player))
        return;
      this.Player.Location = new Point(num2 = 350, num3 = 0);
      int num5 = (int) MessageBox.Show("You lose!");
    }

    private void timer1_Tick(object sender, EventArgs e)
    {
      int num1 = this.Enemy1.Location.X;
      int num2 = this.Enemy1.Location.Y;
      if (this.Enemy1.Location.X > 600)
        this.Enemy1.Location = new Point(num1 = 0, num2 = 150);
      int num3;
      int num4;
      this.Enemy1.Location = new Point(num3 = num1 + 30, num4 = num2);
      this.Refresh();
      int num5 = this.Enemy2.Location.X;
      Point location = this.Enemy2.Location;
      int num6 = location.Y;
      location = this.Enemy2.Location;
      if (location.X < 0)
        this.Enemy2.Location = new Point(num5 = 599, num6 = 350);
      int num7;
      int num8;
      this.Enemy2.Location = new Point(num7 = num5 - 30, num8 = num6);
      this.Refresh();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(474, 456);
      this.Name = nameof (frmBlockGameClassic);
      this.Text = "BlockGameClassic";
      this.ResumeLayout(false);
    }
  }
}
