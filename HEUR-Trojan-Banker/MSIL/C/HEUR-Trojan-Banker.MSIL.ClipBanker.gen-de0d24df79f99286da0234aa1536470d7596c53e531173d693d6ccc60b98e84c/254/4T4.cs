// Decompiled with JetBrains decompiler
// Type: 254.4T4
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u00357a;
using \u0036t4;
using KtU;
using ofc;
using OT8;
using s65;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u003254
{
  internal sealed class \u0034T4 : Stream
  {
    internal ys6 S57;
    internal Stream bJ6;
    private bool \u0035d3;

    public \u0034T4([In] Stream obj0, [In] \u003212 obj1, [In] bool obj2)
      : this(obj0, obj1, PIJ.\u0023i, obj2)
    {
    }

    public \u0034T4([In] Stream obj0, [In] \u003212 obj1, [In] PIJ obj2, [In] bool obj3)
    {
      this.bJ6 = obj0;
      this.S57 = new ys6(obj0, obj1, obj2, \u003172.\u0023b, obj3);
    }

    [SpecialName]
    public void \u003369([In] int obj0)
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      if (this.S57.Vpj != null)
        throw new \u0033g4("The working buffer is already set.");
      this.S57.\u00355r = obj0 >= 1024 ? obj0 : throw new \u0033g4(string.Format("Don't be silly. {0} bytes?? Use a bigger buffer, at least {1}.", (object) obj0, (object) 1024));
    }

    [SpecialName]
    public void \u003725([In] YNv obj0)
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      this.S57.YAD = obj0;
    }

    void Stream.Y9N([In] bool obj0)
    {
      try
      {
        if (this.\u0035d3)
          return;
        if (obj0 && this.S57 != null)
          this.S57.Dispose();
        this.\u0035d3 = true;
      }
      finally
      {
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Stream) this).Dispose(obj0));
      }
    }

    [SpecialName]
    bool Stream.\u0035P5()
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      return this.S57.\u0038i4.CanRead;
    }

    [SpecialName]
    bool Stream.\u0038E1() => false;

    [SpecialName]
    bool Stream.P9U()
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      return this.S57.\u0038i4.CanWrite;
    }

    void Stream.Pp9()
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      ((Stream) this.S57).Flush();
    }

    [SpecialName]
    long Stream.V5Z() => throw new NotImplementedException();

    [SpecialName]
    long Stream.r9r()
    {
      if (this.S57.F4D == ys6.\u0031j9.\u0023a)
        return this.S57.wq3.\u00314Z;
      return this.S57.F4D == ys6.\u0031j9.\u0023b ? this.S57.wq3.m21 : 0L;
    }

    [SpecialName]
    void Stream.TD5([In] long obj0) => throw new NotImplementedException();

    int Stream.ua6([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      return ((Stream) this.S57).Read(obj0, obj1, obj2);
    }

    long Stream.q54([In] long obj0, [In] SeekOrigin obj1) => throw new NotImplementedException();

    void Stream.\u0037Qm([In] long obj0) => throw new NotImplementedException();

    void Stream.\u0034LI([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.\u0035d3)
        throw new ObjectDisposedException("DeflateStream");
      ((Stream) this.S57).Write(obj0, obj1, obj2);
    }
  }
}
