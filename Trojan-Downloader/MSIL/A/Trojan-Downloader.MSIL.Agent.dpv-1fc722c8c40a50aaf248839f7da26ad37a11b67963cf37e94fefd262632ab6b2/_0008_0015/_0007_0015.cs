// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Client, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f0f23b7759753841
// MVID: 88398440-486F-46D0-BB45-521B8EE8871E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Downloader.MSIL.Agent.dpv-1fc722c8c40a50aaf248839f7da26ad37a11b67963cf37e94fefd262632ab6b2.exe

using \u0008\u0015;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0008\u0015
{
  internal sealed class \u0007\u0015
  {
    private static \u0007\u0015 \u0001;
    private long \u0002 = DateTime.Now.Ticks;

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0082(
      IntPtr process,
      int minimumWorkingSetSize,
      int maximumWorkingSetSize);

    private void \u0082()
    {
      try
      {
        using (Process currentProcess = Process.GetCurrentProcess())
          \u0007\u0015.\u0082(currentProcess.Handle, -1, -1);
      }
      catch
      {
      }
    }

    private void \u0082(object sender, EventArgs e)
    {
      try
      {
        long ticks = DateTime.Now.Ticks;
        if (ticks - this.\u0002 <= 10000000L)
          return;
        this.\u0002 = ticks;
        this.\u0082();
      }
      catch
      {
      }
    }

    private \u0007\u0015()
    {
      // ISSUE: method pointer
      Application.Idle += new EventHandler((object) this, __methodptr(\u0082));
      this.\u0082();
    }

    public static void \u0092\u0002()
    {
      try
      {
        if (Environment.OSVersion.Platform != PlatformID.Win32NT)
          return;
        \u0007\u0015.\u0001 = new \u0007\u0015();
      }
      catch
      {
      }
    }
  }
}
