// Decompiled with JetBrains decompiler
// Type: rw.nu
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System;
using System.IO;
using System.Runtime.InteropServices;

namespace rw
{
  public class nu : oO
  {
    public static Kn xoj;
    public static vs wog;
    internal static oO.Ww3 oow;
    private static nu lN6;

    public nu()
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    public nu(string _param1, TextWriter _param2)
    {
      nu.fNy();
      // ISSUE: explicit constructor call
      base.\u002Ector(_param1, _param2);
    }

    public override string FRM(int _param1)
    {
      try
      {
        string s = ((yl) _param1).ToString();
        bool flag = int.TryParse(s, out int _);
        int num = 0;
        if (nu.cNm() != null)
          goto label_4;
label_2:
        switch (num)
        {
          default:
            return flag ? base.FRM(_param1) : s;
        }
label_4:
        num = 0;
        goto label_2;
      }
      catch (Exception ex)
      {
        return base.FRM(_param1);
      }
    }

    public override void DR8(out Kn _param1, out vs _param2)
    {
      _param1 = nu.xoj;
      _param2 = nu.wog;
    }

    public bool EEK() => this.Rlb(1, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.tEk() && this.wlN((le.awF) (() => this.jEx())))
      {
        int num1 = 0;
        if (!nu.WNs())
          goto label_6;
label_1:
        switch (num1)
        {
          default:
            if (this.tEk() && this.BEF() && this.tEk())
              return this.QlW((le.awF) (() => this.qle())) || this.vRj("Expected end of file");
            goto label_8;
        }
label_6:
        int num2;
        num1 = num2;
        goto label_1;
      }
label_8:
      return false;
    }))));

    public bool tEk() => this.VlQ((le.awF) (() => this.tEs() || this.qEj()));

    public bool tEs() => this.KE9(" \t\r\n");

    public bool qEj() => this.OEg() || this.WEw();

    public bool OEg() => this.Bli((le.awF) (() => this.NEX('/', '/') && this.VlQ((le.awF) (() => this.SEG("\r\n\u0085\u2028\u2029")))));

    public bool WEw() => this.Bli((le.awF) (() => this.NEX('/', '*') && this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.QlW((le.awF) (() => this.NEX('*', '/'))) && this.qle())))) && this.NEX('*', '/')));

    public bool NEi() => this.Bli((le.awF) (() => (this.xE6('a', 'z', 'A', 'Z') || this.KE9("_")) && this.VlQ((le.awF) (() => this.NE0('a', 'z', 'A', 'Z', '0', '9') || this.KE9("_")))));

    public bool jEx() => this.Rlb(8, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.EEJ("byteOrdering"))
      {
        if (this.tEk())
          goto label_6;
        else
          goto label_10;
label_1:
        int num1;
        int num2 = num1;
label_2:
        switch (num2)
        {
          case 1:
            break;
          default:
            goto label_13;
        }
label_5:
        if (this.tEk())
          return this.TEE(';') || this.vRj("<<';'>> expected");
        goto label_13;
label_6:
        if ((this.NEX(':', ':') || this.vRj("<<'::'>> expected")) && this.tEk())
        {
          if (!this.oEW() && !this.hET())
          {
            if (this.vRj("'little-endian' or 'big-endian' expected."))
            {
              num2 = 1;
              if (nu.cNm() == null)
                goto label_2;
              else
                goto label_1;
            }
            else
              goto label_13;
          }
          else
            goto label_5;
        }
        else
          goto label_13;
label_10:
        if (nu.WNs())
        {
          num2 = 0;
          goto label_2;
        }
        else
          goto label_1;
      }
label_13:
      return false;
    }))));

    public bool oEW() => this.Rlb(9, (le.awF) (() => this.EEJ("little-endian")));

    public bool hET() => this.Rlb(10, (le.awF) (() => this.EEJ("big-endian")));

    public bool dEQ() => this.Rlb(11, (le.awF) (() => this.Bli((le.awF) (() => this.tEu('s', 'k', 'i', 'p') && this.tEk()))));

    public bool BEN() => this.Rlb(12, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.NEX('i', 'f') && this.tEk() && this.TEE('(') && this.tEk())
      {
        while (this.nXA())
        {
          int num1 = 1;
          if (nu.cNm() != null)
            goto label_4;
label_1:
          switch (num1)
          {
            case 1:
              if (this.tEk() && this.TEE(')'))
                return this.tEk();
              goto label_7;
            default:
              continue;
          }
label_4:
          int num2;
          num1 = num2;
          goto label_1;
        }
      }
label_7:
      return false;
    }))));

    public bool MEf() => this.Rlb(13, (le.awF) (() => this.DEV('f', 'o', 'r', 'm', 'a', 't')));

    public bool BEF() => this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.rEe() && this.tEk())))) || this.vRj("Datablock expected");

    public bool rEe() => this.Bli((le.awF) (() =>
    {
      if (!this.DXI() && !this.rel_offset() && !this.abs_offset())
        goto label_4;
label_2:
      return this.tEk();
label_4:
      int num1 = 0;
      if (nu.cNm() != null)
        goto label_5;
label_1:
      switch (num1)
      {
        default:
          if (!this.fXC() && !this.bitfield())
            return false;
          goto label_2;
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }));

    public bool qE2() => this.Rlb(16, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.wlN((le.awF) (() => this.dEQ())) && this.wlN((le.awF) (() => this.BEN())) && this.eXy())
      {
        int num1 = 0;
        if (!nu.WNs())
          goto label_7;
label_1:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_4;
            default:
              if (this.tEk() && this.NEX(':', ':') && this.tEk() && this.QE4())
              {
                if (!this.TEE(';'))
                {
                  int num2;
                  num1 = nu.cNm() == null ? 1 : num2;
                  continue;
                }
                goto label_8;
              }
              else
                goto label_9;
          }
        }
label_4:
        return this.vRj("<<';'>> expected");
label_8:
        return true;
label_7:
        num1 = 0;
        goto label_1;
      }
label_9:
      return false;
    }))));

    public bool xEr() => this.Rlb(17, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.HEo('l', 'o', 'c', 'a', 'l') && this.tEk())
      {
        if (this.eXy())
          goto label_3;
        else
          goto label_7;
label_1:
        int num1;
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_11;
            case 2:
              goto label_9;
            default:
              if ((this.NEX(':', ':') || this.vRj("<<'::'>> expected")) && this.tEk() && (this.aEM() || this.vRj("<<primitivetype>> expected")) && this.tEk() && this.wlN((le.awF) (() => this.WEB())))
              {
                num1 = 2;
                continue;
              }
              goto label_13;
          }
        }
label_9:
        return this.TEE(';') || this.vRj("<<';'>> expected");
label_11:
        if (!this.vRj("<<fieldname>> expected"))
          goto label_13;
label_3:
        if (this.tEk())
        {
          num1 = 0;
          if (!nu.WNs())
          {
            int num2;
            num1 = num2;
            goto label_1;
          }
          else
            goto label_1;
        }
        else
          goto label_13;
label_7:
        num1 = nu.cNm() == null ? 1 : 1;
        goto label_1;
      }
label_13:
      return false;
    }))));

    public bool WEB() => this.Bli((le.awF) (() =>
    {
      if (this.TEE('=') && this.tEk())
      {
        if (this.nXA())
          return this.tEk();
        int num = 0;
        if (nu.cNm() == null)
          goto label_5;
label_1:
        switch (num)
        {
          default:
            goto label_6;
        }
label_5:
        num = 0;
        goto label_1;
      }
label_6:
      return false;
    }));

    public bool QE4() => this.Rlb(19, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if ((this.aEM() || this.HE8() || this.SE7() || this.vRj("primitive, named or function type expected")) && this.tEk())
      {
        int num = 0;
        if (!nu.WNs())
          goto label_3;
label_1:
        switch (num)
        {
          default:
            if (this.wlN((le.awF) (() => this.bXJ() || this.VXd())))
              return this.tEk();
            goto label_6;
        }
label_3:
        num = 0;
        goto label_1;
      }
label_6:
      return false;
    }))));

    public bool aEM() => this.Rlb(20, (le.awF) (() => this.gEb(nu.oow)));

    public bool SE7() => this.Rlb(21, (le.awF) (() => this.NEi()));

    public bool HE8() => this.Rlb(22, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.SEz() && this.tEk() && this.TEE('('))
      {
        int num1 = 0;
        if (nu.WNs())
          goto label_2;
label_1:
        int num2;
        num1 = num2;
label_2:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_7;
            default:
              if (this.tEk())
              {
                if (!this.jXu())
                {
                  if (this.vRj("<<string>> expected"))
                  {
                    if (nu.cNm() == null)
                    {
                      num1 = 1;
                      continue;
                    }
                    goto label_1;
                  }
                  else
                    goto label_10;
                }
                else
                  goto label_7;
              }
              else
                goto label_10;
          }
        }
label_7:
        if (this.tEk() && this.TEE(')'))
          return this.tEk();
      }
label_10:
      return false;
    }))));

    public bool SEz() => this.Rlb(23, (le.awF) (() => this.NEi()));

    public bool PXn() => this.Rlb(24, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.TEE('[') && this.tEk() && (this.WXl() || this.vRj("Empty action list")) && this.tEk())
      {
        if (!this.TEE(']') && !this.vRj("<<']'>> expected"))
        {
          int num1 = 0;
          if (nu.cNm() != null)
            goto label_3;
label_1:
          switch (num1)
          {
            case 1:
              goto label_4;
            default:
              goto label_6;
          }
label_3:
          int num2;
          num1 = num2;
          goto label_1;
        }
label_4:
        return this.tEk();
      }
label_6:
      return false;
    }))));

    public bool WXl() => this.Bli((le.awF) (() => this.PXa() && this.wlN((le.awF) (() => this.Bli((le.awF) (() => this.TEE(',') && this.tEk() && this.WXl()))))));

    public bool PXa() => this.AXE() || this.iXX();

    public bool AXE() => this.Rlb(27, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.DXk() && this.tEk() && this.TEE('=') && this.tEk())
      {
        if (!this.nXA())
          goto label_4;
label_2:
        return this.tEk();
label_4:
        if (this.vRj("<<expression>> expected"))
        {
          int num1 = 0;
          if (!nu.WNs())
            goto label_6;
label_1:
          switch (num1)
          {
            default:
              goto label_2;
          }
label_6:
          int num2;
          num1 = num2;
          goto label_1;
        }
      }
      return false;
    }))));

    public bool iXX() => this.Rlb(28, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      int num1 = 2;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.tEk() && (this.TEE('(') || this.vRj("<<'('>> expected")) && this.tEk() && (this.jXu() || nu.kNT((object) this, (object) "<<string>> expected")) && this.tEk())
            {
              if (!this.TEE(')'))
              {
                if (this.vRj("<<')'>> expected"))
                {
                  num2 = nu.cNm() == null ? 0 : 0;
                  continue;
                }
                goto label_10;
              }
              else
                goto label_8;
            }
            else
              goto label_10;
          case 2:
            if (this.IlU((le.awF) (() => this.IEt('w', 'a', 'r', 'n', 'i', 'n', 'g') || this.HEo('e', 'r', 'r', 'o', 'r') || this.HEo('d', 'e', 'b', 'u', 'g'))))
            {
              if (nu.WNs())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_10;
          default:
            goto label_8;
        }
      }
label_8:
      return this.tEk();
label_10:
      return false;
    }))));

    public bool KX1() => this.Rlb(29, (le.awF) (() => this.NEi()));

    public bool jXu() => this.Rlb(30, (le.awF) (() => this.Bli((le.awF) (() => this.TEE('"') && this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.QlW((le.awF) (() => this.TEE('"'))) && this.qle())))) && this.TEE('"')))));

    public bool KXo() => this.Rlb(31, (le.awF) (() => this.Bli((le.awF) (() => this.NEX('0', 'x') && this.GlT((le.awF) (() => this.RXV()))))));

    public bool RXV() => this.Bli((le.awF) (() =>
    {
      if (!this.NE0('0', '9', 'A', 'F', 'a', 'f'))
        return false;
      return this.NE0('0', '9', 'A', 'F', 'a', 'f') || this.vRj("Two hex chars required per byte.");
    }));

    public bool JXt() => this.Rlb(33, (le.awF) (() => this.bE1('E', 'O', 'F')));

    public bool eXy() => this.Rlb(34, (le.awF) (() => this.NEi()));

    public bool bXJ() => this.Rlb(35, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.TEE('[') || !this.nXA())
        return false;
      int num1 = 0;
      if (nu.cNm() != null)
        goto label_5;
label_1:
      switch (num1)
      {
        default:
          return this.TEE(']') || this.vRj("<<']'>> expected");
      }
label_5:
      int num2;
      num1 = num2;
      goto label_1;
    }))));

    public bool VXd() => this.Rlb(36, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.TEE('[') && this.tEk() && this.TEE(']') && this.tEk())
      {
        int num = 1;
        if (!nu.WNs())
          goto label_4;
label_1:
        switch (num)
        {
          case 1:
            if (!this.IlU((le.awF) (() => this.HEo('u', 'n', 't', 'i', 'l'))) || !this.tEk() || !this.pXO())
              goto label_6;
            else
              break;
        }
        return this.tEk();
label_4:
        num = 1;
        goto label_1;
      }
label_6:
      return false;
    }))));

    public bool pXO() => this.Bli((le.awF) (() => this.rXH() && this.tEk() && this.wlN((le.awF) (() => this.Bli((le.awF) (() => this.jXq() && this.tEk() && this.pXO() && this.tEk())))) && this.tEk()));

    public bool jXq() => this.ulY(38, (le.awF) (() => this.NEX('o', 'r')));

    public bool rXH() => this.Rlb(39, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.RXm())
            {
              if (nu.WNs())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_8;
          default:
            goto label_4;
        }
      }
label_4:
      if (this.tEk() && this.wlN((le.awF) (() => this.XXL())))
        return this.tEk();
label_8:
      return false;
    })) || this.JXt() || this.vRj("Hex, string or EOF expected")));

    public bool RXm() => this.jXu() || this.KXo();

    public bool XXL() => this.Rlb(41, (le.awF) (() => this.EEJ("included") || this.EEJ("excluded") || this.IEt('s', 'k', 'i', 'p', 'p', 'e', 'd')));

    public bool DXI() => this.Rlb(42, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.wlN((le.awF) (() => this.MEf())) && this.tEk())
      {
        while (this.IlU((le.awF) (() => this.DEV('s', 't', 'r', 'u', 'c', 't'))))
        {
          if (this.tEk())
            goto label_7;
          else
            goto label_9;
label_1:
          int num1;
          switch (num1)
          {
            case 1:
              break;
            case 2:
              if (this.tEk() && (this.TEE('{') || nu.kNT((object) this, (object) "<<'{'>> expected")) && this.tEk() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.xEr() && this.tEk())))) && this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.qE2() && this.tEk())))) && (this.TEE('}') || this.vRj("<<'}'>> expected")))
                return this.tEk();
              goto label_10;
            case 3:
              goto label_10;
            default:
              continue;
          }
label_7:
          if ((this.KX1() || this.vRj("<<blockname>> expected")) && this.tEk() && this.wlN((le.awF) (() => this.RXS())))
          {
            num1 = 2;
            if (nu.cNm() != null)
            {
              int num2;
              num1 = num2;
              goto label_1;
            }
            else
              goto label_1;
          }
          else
            break;
label_9:
          num1 = 3;
          goto label_1;
        }
      }
label_10:
      return false;
    }))));

    public bool rel_offset() => this.Rlb(43, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.wlN((le.awF) (() => this.MEf())) && this.tEk() && this.IlU((le.awF) (() => this.EEJ(nameof (rel_offset)))) && this.tEk())
      {
        if (this.KX1())
          goto label_8;
        else
          goto label_11;
label_1:
        int num1;
        int num2 = num1;
label_2:
        while (true)
        {
          switch (num2)
          {
            case 1:
              goto label_4;
            case 2:
              goto label_6;
            case 3:
              goto label_7;
            case 4:
              if (this.tEk() && (this.aEM() || this.vRj("<<primitivetype>> expected")) && this.tEk())
              {
                if (!this.TEE('{'))
                {
                  if (this.vRj("<<'{'>> expected"))
                  {
                    if (nu.cNm() == null)
                    {
                      num2 = 0;
                      continue;
                    }
                    goto label_1;
                  }
                  else
                    goto label_19;
                }
                else
                  break;
              }
              else
                goto label_19;
          }
          if (this.tEk() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.xEr() && this.tEk())))) && this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.qE2() && this.tEk())))))
          {
            if (!this.TEE('}'))
            {
              if (nu.WNs())
                num2 = 1;
              else
                goto label_1;
            }
            else
              goto label_6;
          }
          else
            goto label_19;
        }
label_4:
        if (this.vRj("<<'}'>> expected"))
        {
          num1 = 2;
          goto label_1;
        }
        else
          goto label_19;
label_6:
        return this.tEk();
label_7:
        if (!this.vRj("<<blockname>> expected"))
          goto label_19;
label_8:
        if (this.tEk() && this.wlN((le.awF) (() => this.RXS())) && this.tEk() && this.NEX(':', ':'))
        {
          num2 = 4;
          goto label_2;
        }
        else
          goto label_19;
label_11:
        if (nu.WNs())
        {
          num2 = 3;
          goto label_2;
        }
        else
          goto label_1;
      }
label_19:
      return false;
    }))));

    public bool abs_offset() => this.Rlb(44, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      int num1 = 6;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.tEk())
            {
              if (nu.WNs())
              {
                num2 = 2;
                continue;
              }
              goto label_1;
            }
            else
              goto label_22;
          case 2:
            if (this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.xEr() && this.tEk())))) && this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.qE2() && this.tEk())))))
            {
              if (!this.TEE('}'))
              {
                num2 = 4;
                continue;
              }
              goto label_7;
            }
            else
              goto label_22;
          case 3:
            if (this.tEk() && this.NEX(':', ':') && this.tEk() && (this.aEM() || this.vRj("<<primitivetype>> expected")) && this.tEk())
            {
              if (nu.WNs())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_22;
          case 4:
            goto label_6;
          case 5:
            if (this.tEk() && this.IlU((le.awF) (() => this.EEJ(nameof (abs_offset)))) && this.tEk() && (this.KX1() || this.vRj("<<blockname>> expected")) && this.tEk() && this.wlN((le.awF) (() => this.RXS())))
            {
              num2 = 3;
              continue;
            }
            goto label_22;
          case 6:
            if (this.wlN((le.awF) (() => this.MEf())))
            {
              num2 = 5;
              continue;
            }
            goto label_22;
          default:
            if (this.TEE('{'))
            {
              if (nu.WNs())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else if (!this.vRj("<<'{'>> expected"))
              goto label_22;
            else
              goto case 1;
        }
      }
label_6:
      if (!this.vRj("<<'}'>> expected"))
        goto label_22;
label_7:
      return this.tEk();
label_22:
      return false;
    }))));

    public bool fXC() => this.Rlb(45, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      int num1 = 3;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.xEr() && this.tEk())))) && this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.vX0() && this.tEk())))))
            {
              if (!this.TEE('}'))
              {
                if (this.vRj("<<'}'>> expected"))
                {
                  num2 = nu.cNm() == null ? 0 : 0;
                  continue;
                }
                goto label_17;
              }
              else
                goto label_15;
            }
            else
              goto label_17;
          case 2:
            if (this.tEk() && this.IlU((le.awF) (() => this.tEu('e', 'n', 'u', 'm'))) && this.tEk())
            {
              if (!this.KX1())
              {
                if (!this.vRj("<<blockname>> expected"))
                  goto label_17;
                else
                  goto case 4;
              }
              else
              {
                num2 = 4;
                continue;
              }
            }
            else
              goto label_17;
          case 3:
            if (this.wlN((le.awF) (() => this.MEf())))
            {
              num2 = 2;
              continue;
            }
            goto label_17;
          case 4:
            if (this.tEk() && this.NEX(':', ':') && this.tEk() && (this.aEM() || this.vRj("<<primitivetype>> expected")) && this.tEk() && (this.TEE('{') || nu.kNT((object) this, (object) "<<'{'>> expected")) && this.tEk())
            {
              if (nu.WNs())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            }
            else
              goto label_17;
          default:
            goto label_15;
        }
      }
label_15:
      return this.tEk();
label_17:
      return false;
    }))));

    public bool bitfield() => this.Rlb(46, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.wlN((le.awF) (() => this.MEf())) && this.tEk() && this.IlU((le.awF) (() => this.EEJ(nameof (bitfield)))) && this.tEk())
      {
        int num1 = 1;
        if (nu.WNs())
          goto label_2;
label_1:
        int num2;
        num1 = num2;
label_2:
        while (true)
        {
          switch (num1)
          {
            case 1:
              if ((this.KX1() || nu.kNT((object) this, (object) "<<blockname>> expected")) && this.tEk() && this.NEX(':', ':') && this.tEk())
              {
                if (this.aEM())
                {
                  num1 = 3;
                  continue;
                }
                if (!this.vRj("<<primitivetype>> expected"))
                  goto label_16;
                else
                  goto case 3;
              }
              else
                goto label_16;
            case 2:
              goto label_12;
            case 3:
              if (this.tEk() && (this.TEE('{') || this.vRj("<<'{'>> expected")) && this.tEk())
              {
                if (nu.cNm() == null)
                {
                  num1 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_16;
            default:
              if (this.VlQ((le.awF) (() => this.Bli((le.awF) (() => this.xEr() && this.tEk())))) && this.GlT((le.awF) (() => this.Bli((le.awF) (() => this.bit() && this.tEk())))))
              {
                if (!this.TEE('}'))
                {
                  num1 = nu.cNm() == null ? 2 : 1;
                  continue;
                }
                goto label_11;
              }
              else
                goto label_16;
          }
        }
label_11:
        return this.tEk();
label_12:
        if (this.vRj("<<'}'>> expected"))
          goto label_11;
      }
label_16:
      return false;
    }))));

    public bool RXS() => this.Bli((le.awF) (() =>
    {
      if (this.TEE('<') && this.tEk() && this.kX6())
      {
        int num = 0;
        if (nu.WNs())
          goto label_3;
label_1:
        switch (num)
        {
          default:
            if (this.tEk())
              return this.TEE('>');
            goto label_6;
        }
label_3:
        num = 0;
        goto label_1;
      }
label_6:
      return false;
    }));

    public bool kX6() => this.Rlb(48, (le.awF) (() => this.NEi()));

    public bool vX0() => this.Rlb(49, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.hXb() && !this.vXD())
        goto label_6;
label_5:
      if (this.tEk() && this.wlN((le.awF) (() => this.jX3())))
        return this.TEE(';') || nu.kNT((object) this, (object) "<<';'>> expected");
      goto label_9;
label_6:
      int num1 = 0;
      if (nu.cNm() != null)
        goto label_7;
label_1:
      switch (num1)
      {
        default:
          if (!this.JXP())
            goto label_9;
          else
            goto label_5;
      }
label_7:
      int num2;
      num1 = num2;
      goto label_1;
label_9:
      return false;
    }))));

    public bool JXP() => this.Rlb(50, (le.awF) (() => this.tEu('e', 'l', 's', 'e')));

    public bool vXD() => this.Rlb(51, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.IlU((le.awF) (() => this.TEE('[') || this.TEE(']'))) && this.tEk() && (this.hXb() || nu.kNT((object) this, (object) "<<number>> expected")) && this.tEk())
      {
        if (!this.NEX('.', '.'))
          goto label_3;
        else
          goto label_6;
label_1:
        int num1;
        int num2 = num1;
label_2:
        switch (num2)
        {
          case 1:
            goto label_4;
          default:
            return this.IlU((le.awF) (() => this.TEE('[') || this.TEE(']')));
        }
label_3:
        if (!this.vRj("<<'..'>> expected"))
          goto label_9;
label_4:
        if (this.tEk() && (this.hXb() || this.vRj("<<number>> expected")) && this.tEk())
        {
          num2 = 0;
          if (nu.cNm() == null)
            goto label_2;
          else
            goto label_1;
        }
        else
          goto label_9;
label_6:
        if (nu.cNm() == null)
        {
          num2 = 1;
          goto label_2;
        }
        else
          goto label_1;
      }
label_9:
      return false;
    }))));

    public bool mXc() => this.Rlb(52, (le.awF) (() => this.NEi()));

    public bool jX3() => this.Bli((le.awF) (() =>
    {
      if (this.TEE(':'))
      {
        if (this.tEk())
        {
          if (this.wlN((le.awF) (() => this.mXc())) && this.tEk() && this.wlN((le.awF) (() => this.PXn())))
            return this.tEk();
        }
        else
        {
          int num = 0;
          if (!nu.WNs())
            goto label_6;
label_1:
          switch (num)
          {
            default:
              goto label_7;
          }
label_6:
          num = 0;
          goto label_1;
        }
      }
label_7:
      return false;
    }));

    public bool oX5() => this.Rlb(54, (le.awF) (() => this.NEi()));

    public bool bit() => this.Rlb(55, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.hXb() || !this.tEk() || !this.wlN((le.awF) (() => this.Bli((le.awF) (() =>
      {
        int num3 = 1;
label_1:
        int num4 = num3;
        while (true)
        {
          switch (num4)
          {
            case 1:
              if (this.TEE(':'))
              {
                if (nu.cNm() == null)
                {
                  num4 = 0;
                  continue;
                }
                goto label_1;
              }
              else
                goto label_7;
            default:
              goto label_4;
          }
        }
label_4:
        if (this.tEk() && this.wlN((le.awF) (() => this.oX5())) && this.tEk())
          return this.wlN((le.awF) (() => this.PXn()));
label_7:
        return false;
      })))))
        return false;
      int num5 = 0;
      if (!nu.WNs())
        goto label_4;
label_1:
      switch (num5)
      {
        default:
          return this.TEE(';') || this.vRj("<<';'>> expected");
      }
label_4:
      int num6;
      num5 = num6;
      goto label_1;
    }))));

    public bool nXA() => this.Rlb(56, (le.awF) (() => this.Bli((le.awF) (() => this.tEk() && this.pXZ()))));

    public bool pXZ() => this.ulY(57, (le.awF) (() => this.Bli((le.awF) (() => this.bXR() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.IlU((le.awF) (() => this.NEX('&', '&') || this.NEX('|', '|'))) || !this.tEk())
        return false;
      return this.bXR() || nu.kNT((object) this, (object) "<<bitwise>> expected");
    }))))))));

    public bool bXR() => this.ulY(58, (le.awF) (() => this.Bli((le.awF) (() => this.vXh() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.IlU((le.awF) (() => this.TEE('^') || this.TEE('&') || this.Bli((le.awF) (() => this.TEE('|') && this.QlW((le.awF) (() => this.TEE('|'))))))) || !this.tEk())
        return false;
      int num1 = 0;
      if (nu.cNm() != null)
        goto label_4;
label_1:
      switch (num1)
      {
        default:
          return this.vXh() || this.vRj("<<comp>> expected");
      }
label_4:
      int num2;
      num1 = num2;
      goto label_1;
    }))))))));

    public bool vXh() => this.ulY(59, (le.awF) (() => this.Bli((le.awF) (() => this.vXU() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.IlU((le.awF) (() =>
      {
        if (!this.NEX('!', '='))
        {
          if (this.NEX('=', '='))
          {
            int num3 = 0;
            if (nu.cNm() != null)
              goto label_4;
label_1:
            switch (num3)
            {
              default:
                goto label_7;
            }
label_4:
            int num4;
            num3 = num4;
            goto label_1;
          }
          else if (!this.NEX('<', '=') && !this.NEX('>', '=') && !this.TEE('<'))
            return this.TEE('>');
        }
label_7:
        return true;
      })) || !this.tEk())
        return false;
      return this.vXU() || this.vRj("<<shift>> expected");
    }))))))));

    public bool vXU() => this.ulY(60, (le.awF) (() => this.Bli((le.awF) (() => this.LX9() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (!this.IlU((le.awF) (() => this.NEX('>', '>') || this.NEX('<', '<'))))
            {
              if (nu.WNs())
              {
                num2 = 0;
                continue;
              }
              goto label_1;
            }
            else
              goto label_5;
          default:
            goto label_10;
        }
      }
label_5:
      if (this.tEk())
        return this.LX9() || this.vRj("<<sum>> expected");
label_10:
      return false;
    }))))))));

    public bool LX9() => this.ulY(61, (le.awF) (() => this.Bli((le.awF) (() => this.TXG() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.IlU((le.awF) (() => this.KE9("+-"))) || !this.tEk())
        return false;
      if (!this.TXG())
        return this.vRj("<<prod>> expected");
      int num1 = 0;
      if (nu.cNm() != null)
        goto label_4;
label_1:
      switch (num1)
      {
        default:
          return true;
      }
label_4:
      int num2;
      num1 = num2;
      goto label_1;
    }))))))));

    public bool TXG() => this.ulY(62, (le.awF) (() => this.Bli((le.awF) (() => this.value() && this.VlQ((le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (!this.IlU((le.awF) (() => this.KE9("*/%"))) || !this.tEk())
        return false;
      return this.value() || this.vRj("<<value>> expected");
    }))))))));

    public bool value() => this.Bli((le.awF) (() =>
    {
      if (!this.hXb() && !this.Bli((le.awF) (() =>
      {
        if (this.TEE('(') && this.tEk() && this.pXZ() && this.tEk())
        {
          int num3 = 0;
          if (!nu.WNs())
            goto label_4;
label_1:
          switch (num3)
          {
            default:
              if (this.TEE(')') || nu.kNT((object) this, (object) "<<')'>> expected"))
                return this.tEk();
              goto label_6;
          }
label_4:
          int num4;
          num3 = num4;
          goto label_1;
        }
label_6:
        return false;
      })))
      {
        int num = 0;
        if (nu.cNm() == null)
          goto label_3;
label_1:
        switch (num)
        {
          default:
            if (!this.EXv() && !this.BXY())
              return false;
            goto label_4;
        }
label_3:
        num = 0;
        goto label_1;
      }
label_4:
      return this.tEk();
    }));

    public bool EXv() => this.ulY(64, (le.awF) (() => this.Bli((le.awF) (() =>
    {
      if (this.gXp() && this.tEk() && this.TEE('(') && this.tEk())
      {
        if (!this.IlU((le.awF) (() => this.NEi())))
          goto label_5;
        else
          goto label_7;
label_1:
        int num1;
        int num2 = num1;
label_2:
        switch (num2)
        {
          case 1:
            goto label_8;
        }
label_3:
        if (this.tEk())
        {
          if (!this.TEE(')'))
          {
            if (this.vRj("<<')'>> expected"))
            {
              num2 = 1;
              if (nu.cNm() == null)
                goto label_2;
              else
                goto label_1;
            }
            else
              goto label_11;
          }
          else
            goto label_8;
        }
        else
          goto label_11;
label_5:
        if (!this.vRj("<<(^valid_item_name)>> expected"))
          goto label_11;
        else
          goto label_3;
label_7:
        if (nu.cNm() == null)
        {
          num2 = 0;
          goto label_2;
        }
        else
          goto label_1;
label_8:
        return this.tEk();
      }
label_11:
      return false;
    }))));

    public bool hXb() => this.ulY(65, (le.awF) (() => this.GlT((le.awF) (() => this.wES('0', '9')))));

    public bool gXp() => this.ulY(66, (le.awF) (() => this.NEi()));

    public bool BXY() => this.Rlb(67, (le.awF) (() => this.VXK()));

    public bool VXK() => this.Bli((le.awF) (() => this.DXk() && this.wlN((le.awF) (() => this.Bli((le.awF) (() => this.TEE('.') && this.VXK()))))));

    public bool DXk() => this.ulY(69, (le.awF) (() => this.NEi()));

    static nu()
    {
      ccw.xFvA3V();
      nu.xoj = (Kn) 0;
      int num1 = 0;
      if (false)
        goto label_3;
label_1:
      switch (num1)
      {
        default:
          nu.wog = (vs) 2;
          nu.oow = new oO.Ww3(new string[9]
          {
            "bool",
            "sbyte",
            "ubyte",
            "short",
            "ushort",
            "int",
            "uint",
            "long",
            "ulong"
          });
          return;
      }
label_3:
      int num2;
      num1 = num2;
      goto label_1;
    }

    internal static bool WNs() => nu.lN6 == null;

    internal static nu cNm() => nu.lN6;

    internal static void fNy() => ccw.xFvA3V();

    internal static bool kNT([In] object obj0, [In] object obj1) => ((oO) obj0).vRj((string) obj1);
  }
}
