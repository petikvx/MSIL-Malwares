// Decompiled with JetBrains decompiler
// Type: Dbasic.KeyWords.CFiles.CkwFileOpen
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

using Dbasic.Other;
using System.IO;
using System.Text;

namespace Dbasic.KeyWords.CFiles
{
  public class CkwFileOpen : CkeyWords
  {
    public CkwFileOpen(CRunner CRunner)
      : base(CRunner)
    {
    }

    public override MethodReturn Method(Place place, ref Locals locals)
    {
      ++place.WordI;
      Word word1 = this.CRunner.nextWord(true, ref place);
      if (word1.sugMila != Word.SugMila.Mishtane)
        this.CRunner.ThrowError("Invalid Connection Name.", place.LineI);
      string key = word1.Value;
      ++place.WordI;
      RunReturn runReturn = this.CRunner.RunCode(place, true, true, ref locals);
      place = runReturn.place;
      string vString = runReturn.vString;
      ++place.WordI;
      string str1 = this.CRunner.nextWord(true, ref place).Value;
      if (CRunner.b4pDir == "")
        this.CRunner.ThrowError("Source Code must be saved before using FileOpen.", place.LineI);
      Encoding encoding = Encoding.UTF8;
      switch (str1)
      {
        case "0":
          Word word2 = this.CRunner.nextWord(true, ref place);
          if (word2.Value == ",")
          {
            ++place.WordI;
            word2 = this.CRunner.nextWord(true, ref place);
            if (word2.Value.ToLower(CRunner.cul) == "cascii")
              encoding = Encoding.ASCII;
            ++place.WordI;
          }
          CStreamReader cstreamReader = new CStreamReader(Path.Combine(CRunner.b4pDir, vString), encoding);
          this.CRunner.htStreams.Add((object) key, (object) cstreamReader);
          break;
        case "1":
          bool append = false;
          if (this.CRunner.nextWord(true, ref place).Value == ",")
          {
            Word word3 = this.CRunner.nextWord(true, ref place);
            string str2;
            if ((str2 = word3.Value) == "cappend")
            {
              append = true;
              if (this.CRunner.nextWord(true, ref place).Value == "," && this.CRunner.nextWord(true, ref place).Value.ToLower(CRunner.cul) == "cascii")
              {
                encoding = Encoding.ASCII;
                ++place.WordI;
              }
            }
            else if (str2 == ",")
            {
              if (this.CRunner.nextWord(true, ref place).Value.ToLower(CRunner.cul) == "cascii")
                encoding = Encoding.ASCII;
              ++place.WordI;
            }
          }
          CStreamWriter cstreamWriter = new CStreamWriter(Path.Combine(CRunner.b4pDir, vString), append, encoding);
          this.CRunner.htStreams.Add((object) key, (object) cstreamWriter);
          break;
        case "2":
          CStreamRandom cstreamRandom = new CStreamRandom(Path.Combine(CRunner.b4pDir, vString), FileMode.OpenOrCreate, FileAccess.ReadWrite);
          this.CRunner.htStreams.Add((object) key, (object) cstreamRandom);
          ++place.WordI;
          break;
      }
      return new MethodReturn(place);
    }
  }
}
