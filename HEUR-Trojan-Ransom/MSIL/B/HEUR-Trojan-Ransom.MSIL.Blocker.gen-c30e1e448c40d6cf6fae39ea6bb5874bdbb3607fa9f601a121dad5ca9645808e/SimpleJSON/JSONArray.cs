// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: SingleArrayTypeIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 96646636-5181-465D-A45F-CFFED007E535
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c30e1e448c40d6cf6fae39ea6bb5874bdbb3607fa9f601a121dad5ca9645808e.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_6;
label_1:
        int num1 = -2085775835;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1564003060)) % 8U)
          {
            case 0:
              num1 = (int) num2 * 14753278 ^ -1921226005;
              continue;
            case 1:
              goto label_5;
            case 2:
              num1 = (int) num2 * 1261175192 ^ 1800202587;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1352809569 ^ -1233244745;
              continue;
            case 4:
              int num3 = flag ? -357847525 : (num3 = -1524028226);
              num1 = num3 ^ (int) num2 * 1559771515;
              continue;
            case 5:
              goto label_1;
            case 6:
              jsonNode = this.m_List[aIndex];
              num1 = -1807394434;
              continue;
            default:
              goto label_11;
          }
        }
label_5:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_7;
label_11:
        return jsonNode;
label_6:
        num4 = 1;
label_7:
        flag = num4 != 0;
        num1 = -1318535960;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -1774515874;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -803308767)) % 7U)
          {
            case 0:
              num1 = (int) num2 * 1691877756 ^ -842706935;
              continue;
            case 1:
              this.m_List[aIndex] = value;
              num1 = -2104080323;
              continue;
            case 2:
              int num3 = flag ? 1017606802 : (num3 = 1080201585);
              num1 = num3 ^ (int) num2 * 1998965388;
              continue;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 1914032072 ^ 2061351082;
              continue;
            case 4:
              goto label_1;
            case 5:
              goto label_3;
            case 6:
              goto label_4;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:
        return;
label_4:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -440776477;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -1116118487;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -430719240)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -195593640 ^ -1025117746;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
        int count = this.m_List.Count;
label_1:
        int num1 = -324319082;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -929254461)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 3432803 ^ -2036186133;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 697110262;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        bool flag;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1467448564)) % 10U)
        {
          case 0:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -1620639185 ^ -1460796982;
            continue;
          case 1:
            num1 = (int) num2 * 575712824 ^ 1434920680;
            continue;
          case 2:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -2146225867 ^ -397521793;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            jsonNode2 = this.m_List[aIndex];
            num1 = 925935647;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num4 = !flag ? 43935499 : (num4 = 1605788386);
            num1 = num4 ^ (int) num2 * 1649075474;
            continue;
          case 7:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 8:
            num1 = (int) num2 * -695389928 ^ -1739208592;
            continue;
          case 9:
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1899896916 ^ -1329757349;
            continue;
          default:
            goto label_14;
        }
        flag = num3 != 0;
        num1 = 1496973389;
      }
label_14:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 234157841;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1478310348)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 499493794 ^ -529048968;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 383451128;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1509549946)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 2074697923 ^ -128851118;
              continue;
            case 2:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 459736004 ^ -1817144581;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_9;
label_1:
        int num2 = 1374026599;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1148659783)) % 19U)
          {
            case 1:
            case 12:
              goto label_9;
            case 2:
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = 2133436007;
              continue;
            case 3:
              goto label_1;
            case 4:
              enumerator1 = false;
              num2 = 2075006226;
              continue;
            case 5:
              goto label_11;
            case 7:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 968692455 ^ -1114444528;
              continue;
            case 8:
              int num4;
              num2 = num4 = enumerator.MoveNext() ? 1483131533 : (num4 = 1129301847);
              continue;
            case 9:
              N = enumerator.Current;
              num2 = 303734223;
              continue;
            case 10:
              num2 = (int) num3 * -1558802834 ^ 1425768040;
              continue;
            case 11:
              num2 = (int) num3 * 760788161 ^ 578445299;
              continue;
            case 13:
              goto label_19;
            case 14:
              num2 = (int) num3 * -853108441 ^ 1766963118;
              continue;
            case 15:
              num2 = (int) num3 * -1812396817 ^ 1779737282;
              continue;
            case 16:
              int num5;
              num2 = num5 = num1 == 1 ? 864723575 : (num5 = 746982252);
              continue;
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -1383293003 ^ 501028473;
              continue;
            case 18:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 590127208 ^ -1054240631;
              continue;
            default:
              goto label_17;
          }
        }
label_11:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E2__current = (object) N;
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = 1;
        enumerator1 = true;
        goto label_19;
label_17:
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
        goto label_19;
label_9:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = 1629147762;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -350562336;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2059439633)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -2067931127 ^ -1778996007;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? -2142396255 : (num3 = -150510989);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -2059439633)) % 7U)
          {
            case 0:
              goto label_12;
            case 1:
              str1 = JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(str1, JSONArray.\u206C⁪‌⁬‎‏‌‮⁯⁮⁮‫‬⁫‬‮⁮‎‎⁬​⁭‌‭⁫⁪‭⁬‭⁯‌‮⁭⁪‎⁪⁯‫‮⁮‮((object) current));
              num3 = -1021996125;
              continue;
            case 2:
              str1 = JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(str1, ", ");
              num3 = (int) num4 * 1502522861 ^ 852826271;
              continue;
            case 4:
              int num5 = flag ? 93129028 : (num5 = 701919952);
              num3 = num5 ^ (int) num4 * -236996936;
              continue;
            case 5:
              num3 = -2142396255;
              continue;
            case 6:
              current = enumerator.Current;
              flag = JSONArray.\u206B‌⁯⁪⁫‫⁯⁫⁫‫‬‫⁪⁫‍‭⁬⁯‭​⁫‍‮⁭​‌⁭‍⁮​‭​‫⁪⁫‬‭⁮⁬⁮‮(str1) > 2;
              num3 = -937422017;
              continue;
            default:
              goto label_14;
          }
        }
      }
label_14:
      string str2 = JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(str1, " ]");
label_15:
      int num6 = -1365923863;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -2059439633)) % 4U)
        {
          case 0:
            goto label_15;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -1853268185 ^ 1445869970;
            continue;
          case 3:
            num6 = (int) num7 * 1732683670 ^ 466454196;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_8:
        int num1 = enumerator.MoveNext() ? 34669344 : (num1 = 2045331105);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1035471740)) % 11U)
          {
            case 0:
              num1 = (int) num2 * 964530278 ^ 1937143783;
              continue;
            case 1:
              str1 = JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(str1, ", ");
              num1 = (int) num2 * 1814239582 ^ -2121680621;
              continue;
            case 2:
              flag = JSONArray.\u206B‌⁯⁪⁫‫⁯⁫⁫‫‬‫⁪⁫‍‭⁬⁯‭​⁫‍‮⁭​‌⁭‍⁮​‭​‫⁪⁫‬‭⁮⁬⁮‮(str1) > 3;
              num1 = (int) num2 * -624384400 ^ -1627128520;
              continue;
            case 4:
              num1 = (int) num2 * -2103807075 ^ -1387276732;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = 1438221968;
              continue;
            case 6:
              goto label_8;
            case 7:
              int num3 = flag ? -1373466292 : (num3 = -1762483821);
              num1 = num3 ^ (int) num2 * -1372931880;
              continue;
            case 8:
              str1 = JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(str1, current.ToString(JSONArray.\u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮(aPrefix, "   ")));
              num1 = (int) num2 * 579909458 ^ -923483109;
              continue;
            case 9:
              str1 = JSONArray.\u200F‬‭‫⁮‍‭‭‎‭‍⁬⁬‮‪‮‍‏⁭​‌‏⁮⁫⁫⁯‌‭‏‎⁪‪⁫⁫‬⁬‮‌⁭‎‮(str1, "\n", aPrefix, "   ");
              num1 = 201520961;
              continue;
            case 10:
              num1 = 34669344;
              continue;
            default:
              goto label_14;
          }
        }
      }
label_14:
      string str2 = JSONArray.\u200F‬‭‫⁮‍‭‭‎‭‍⁬⁬‮‪‮‍‏⁭​‌‏⁮⁫⁫⁯‌‭‏‎⁪‪⁫⁫‬⁬‮‌⁭‎‮(str1, "\n", aPrefix, "]");
label_15:
      int num4 = 97354754;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1035471740)) % 4U)
        {
          case 1:
            num4 = (int) num5 * 1549003231 ^ -1019018961;
            continue;
          case 2:
            str3 = str2;
            num4 = (int) num5 * 1218242867 ^ 1381144843;
            continue;
          case 3:
            goto label_15;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206A‬‭⁬⁮‌‫⁮‭‌‬⁯‍‬‪‍⁭‎‬⁪‭⁯‌‭‌‫⁭‏‫‮‫⁬⁮⁪⁭‫‫‮‬‫‮(aWriter, (byte) 1);
label_1:
      int num1 = 1748977207;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2019000183)) % 10U)
        {
          case 0:
            index = 0;
            num1 = (int) num2 * 1440898721 ^ 199474206;
            continue;
          case 1:
            ++index;
            num1 = (int) num2 * -1424098606 ^ 1262655194;
            continue;
          case 2:
            int num3 = !flag ? 1094547172 : (num3 = 54662475);
            num1 = num3 ^ (int) num2 * -762600453;
            continue;
          case 3:
            num1 = (int) num2 * 1139221573 ^ 1933093163;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag = index < this.m_List.Count;
            num1 = 515616501;
            continue;
          case 6:
            JSONArray.\u206C⁬‮‭⁭‫⁯‫‫⁪‌⁯‬⁮⁫‫‏‬⁭‌‏‬‏‌⁪‭⁯⁬‫⁬‪‬‭‌⁪‬⁪⁪‭‮‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1501265769 ^ 1764392329;
            continue;
          case 7:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -1180846363 ^ 137677393;
            continue;
          case 8:
            num1 = 1185973700;
            continue;
          case 9:
            goto label_3;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u206B‌⁯⁪⁫‫⁯⁫⁫‫‬‫⁪⁫‍‭⁬⁯‭​⁫‍‮⁭​‌⁭‍⁮​‭​‫⁪⁫‬‭⁮⁬⁮‮([In] string obj0) => obj0.Length;

    static string \u206E‫‮‏‫‫‏‍⁮‮⁫‭⁯​‮‪‬⁯‪⁮⁬‮‏⁯‮⁫⁮​⁯‮‌‫‭⁪‪⁪⁬⁯‭‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206C⁪‌⁬‎‏‌‮⁯⁮⁮‫‬⁫‬‮⁮‎‎⁬​⁭‌‭⁫⁪‭⁬‭⁯‌‮⁭⁪‎⁪⁯‫‮⁮‮([In] object obj0) => obj0.ToString();

    static string \u200F‬‭‫⁮‍‭‭‎‭‍⁬⁬‮‪‮‍‏⁭​‌‏⁮⁫⁫⁯‌‭‏‎⁪‪⁫⁫‬⁬‮‌⁭‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206A‬‭⁬⁮‌‫⁮‭‌‬⁯‍‬‪‍⁭‎‬⁪‭⁯‌‭‌‫⁭‏‫‮‫⁬⁮⁪⁭‫‫‮‬‫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206C⁬‮‭⁭‫⁯‫‫⁪‌⁯‬⁮⁫‫‏‬⁭‌‏‬‏‌⁪‭⁯⁬‫⁬‪‬‭‌⁪‬⁪⁪‭‮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
