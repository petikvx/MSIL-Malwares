// Decompiled with JetBrains decompiler
// Type: ObjectMapI.ServerExcept
// Assembly: RSACspObj, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4F5485A2-22DD-4A3A-83EE-265873F291A8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcpw-04ed6b6182b25826a48b997e03cde1cb3be80e8ec6d6bd809ff78c35312d9589.exe

using AppDomainHan;
using DateTimeTypeI;
using IDisposa;
using LinkedSlotVolat;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using TOKENPRIMARYGR;
using TypeNameFormatFl;
using WorkI;

namespace ObjectMapI
{
  internal class ServerExcept
  {
    private const int BURST = 21;

    public List<IPropertyVa> PrepareDeck()
    {
label_1:
      int num1 = -1339096550;
      List<IPropertyVa> ipropertyVaList;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -44701091)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -904276794 ^ 300365457;
            continue;
          case 3:
            ipropertyVaList = new List<IPropertyVa>();
            num1 = (int) num2 * 171369489 ^ -1377107953;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      // ISSUE: type reference
      IEnumerator enumerator1 = ServerExcept.\u202B‪⁭‫​‎‏‫‍⁯⁯⁭‎‬⁮‭‪‍‌‪‫‫‪‌⁫⁪‌⁭⁯‏‮‪‫‎⁪​⁬‏⁫‏‮(ServerExcept.\u206A‌‮‮⁪​‫⁯‬⁭‫⁬‏‭‭⁫​‬⁮‌‫⁬‎⁭​‏‍⁭‎‪⁯⁮‌‭‎‍‎⁯‪⁯‮(ServerExcept.\u202C⁫‍⁫⁭‌⁫‫‪⁮‍‌‎‪⁭‏‭‭‬‬‮⁮⁪⁯⁭‏‍‫⁮⁪⁭‏⁮​⁭‏‭⁭⁪‪‮(__typeref (cDisplayClas))));
      try
      {
label_26:
        while (ServerExcept.\u206C‭⁮‫‪‫‬​⁪⁮⁭⁪‬⁫‌⁭‌​‏⁮⁯‏‭⁭‎‭​‭‪‭‭⁬‏⁪⁫⁫​‌‌⁮‮(enumerator1))
        {
label_9:
          cDisplayClas Pip = (cDisplayClas) ServerExcept.\u202A‮⁬‫‫⁫‭⁯‏⁫⁫‎⁮⁮⁮‮‏⁬‬‎​​​‏‎‬‮‪‍‌⁬‎‭‎‍‮⁫⁫‮⁬‮(enumerator1);
          int num3 = -1718404352;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -44701091)) % 3U)
            {
              case 1:
                goto label_9;
              case 2:
                num3 = -1629615587;
                continue;
              default:
                goto label_10;
            }
          }
label_10:
          // ISSUE: type reference
          IEnumerator enumerator2 = ServerExcept.\u202B‪⁭‫​‎‏‫‍⁯⁯⁭‎‬⁮‭‪‍‌‪‫‫‪‌⁫⁪‌⁭⁯‏‮‪‫‎⁪​⁬‏⁫‏‮(ServerExcept.\u206A‌‮‮⁪​‫⁯‬⁭‫⁬‏‭‭⁫​‬⁮‌‫⁬‎⁭​‏‍⁭‎‪⁯⁮‌‭‎‍‎⁯‪⁯‮(ServerExcept.\u202C⁫‍⁫⁭‌⁫‫‪⁮‍‌‎‪⁭‏‭‭‬‬‮⁮⁪⁯⁭‏‍‫⁮⁪⁭‏⁮​⁭‏‭⁭⁪‪‮(__typeref (AssemblyReferenceEn))));
          try
          {
label_16:
            int num5 = ServerExcept.\u206C‭⁮‫‪‫‬​⁪⁮⁭⁪‬⁫‌⁭‌​‏⁮⁯‏‭⁭‎‭​‭‪‭‭⁬‏⁪⁫⁫​‌‌⁮‮(enumerator2) ? -1371157437 : (num5 = -2019577947);
            IPropertyVa ipropertyVa;
            while (true)
            {
              uint num6;
              switch ((num6 = (uint) (num5 ^ -44701091)) % 7U)
              {
                case 1:
                  num5 = (int) num6 * -686032690 ^ 519741402;
                  continue;
                case 2:
                  num5 = -1371157437;
                  continue;
                case 3:
                  ipropertyVa = new IPropertyVa((AssemblyReferenceEn) ServerExcept.\u202A‮⁬‫‫⁫‭⁯‏⁫⁫‎⁮⁮⁮‮‏⁬‬‎​​​‏‎‬‮‪‍‌⁬‎‭‎‍‮⁫⁫‮⁬‮(enumerator2), Pip);
                  num5 = -1582631554;
                  continue;
                case 4:
                  num5 = (int) num6 * -373293840 ^ -1709458557;
                  continue;
                case 5:
                  ipropertyVaList.Add(ipropertyVa);
                  num5 = (int) num6 * -1077669247 ^ 1353536880;
                  continue;
                case 6:
                  goto label_16;
                default:
                  goto label_26;
              }
            }
          }
          finally
          {
            IDisposable disposable = enumerator2 as IDisposable;
label_20:
            int num7 = -81528594;
            while (true)
            {
              uint num8;
              switch ((num8 = (uint) (num7 ^ -44701091)) % 5U)
              {
                case 1:
                  int num9 = disposable != null ? 1855242579 : (num9 = 1631558312);
                  num7 = num9 ^ (int) num8 * -2079034826;
                  continue;
                case 2:
                  ServerExcept.\u200D⁪‌‪⁬‭‬⁪‎⁯⁭⁭‮⁬‪‫⁭⁮⁭‮‫‌‬‎⁫‎⁭⁭‮‬‌‫‏‬‪‭⁭‪‭⁯‮(disposable);
                  num7 = (int) num8 * -1484056167 ^ -1862474377;
                  continue;
                case 3:
                  goto label_20;
                case 4:
                  num7 = (int) num8 * 293318642 ^ -540128186;
                  continue;
                default:
                  goto label_25;
              }
            }
label_25:;
          }
        }
      }
      finally
      {
        IDisposable disposable = enumerator1 as IDisposable;
label_28:
        int num10 = -811664384;
        while (true)
        {
          uint num11;
          switch ((num11 = (uint) (num10 ^ -44701091)) % 4U)
          {
            case 0:
              goto label_28;
            case 1:
              int num12 = disposable != null ? -1075634647 : (num12 = -1455951700);
              num10 = num12 ^ (int) num11 * 1869978079;
              continue;
            case 3:
              ServerExcept.\u200D⁪‌‪⁬‭‬⁪‎⁯⁭⁭‮⁬‪‫⁭⁮⁭‮‫‌‬‎⁫‎⁭⁭‮‬‌‫‏‬‪‭⁭‪‭⁯‮(disposable);
              num10 = (int) num11 * -1237781177 ^ 146055342;
              continue;
            default:
              goto label_32;
          }
        }
label_32:;
      }
      return ipropertyVaList;
    }

    public List<IPropertyVa> ShuffleDeck(List<IPropertyVa> Deck)
    {
label_1:
      int num1 = 1206911949;
      Random random;
      bool flag;
      int num2;
      int index;
      IPropertyVa ipropertyVa;
      List<IPropertyVa> ipropertyVaList;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1537275124)) % 14U)
        {
          case 1:
            random = ServerExcept.\u206C‪⁪‬‬⁭‪⁬‭⁪⁭‎⁭⁯‌⁭⁬‬⁮​‪‌‫⁫‏⁬‪⁫⁫‫‭‎⁯⁮⁫‬‮‭⁪‌‮();
            num1 = (int) num3 * 789631815 ^ -1766070575;
            continue;
          case 2:
            num1 = (int) num3 * 20116111 ^ -1934281183;
            continue;
          case 3:
            flag = num2 != 0;
            num1 = 264988235;
            continue;
          case 4:
            goto label_1;
          case 5:
            ipropertyVaList = Deck;
            num1 = (int) num3 * 509681008 ^ -1855456706;
            continue;
          case 6:
            index = ServerExcept.\u200B‌‬⁭‬‎‬⁯⁪‪‫‌‍⁭⁫‍‭⁪⁯‭⁬​‫​⁫‏‎⁬⁪⁫⁮‎‍‪‪⁭‮‬⁫⁯‮(random, 0, num2--);
            num1 = 367093757;
            continue;
          case 7:
            ipropertyVa = Deck.ElementAt<IPropertyVa>(num2 + 1);
            num1 = (int) num3 * 1751830807 ^ 468594187;
            continue;
          case 8:
            num2 = Deck.Count - 1;
            ipropertyVa = (IPropertyVa) null;
            num1 = (int) num3 * -1649482793 ^ 1936183873;
            continue;
          case 9:
            int num4 = !flag ? -32007011 : (num4 = -113172936);
            num1 = num4 ^ (int) num3 * 1424059610;
            continue;
          case 10:
            Deck[num2 + 1] = Deck.ElementAt<IPropertyVa>(index);
            Deck[index] = ipropertyVa;
            num1 = (int) num3 * 1229216073 ^ 1747337244;
            continue;
          case 11:
            index = -1;
            num1 = (int) num3 * 2081700590 ^ 561926415;
            continue;
          case 12:
            num1 = (int) num3 * -698226911 ^ -1860554634;
            continue;
          case 13:
            num1 = (int) num3 * -903128928 ^ -402888535;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return ipropertyVaList;
    }

    public void DealCardsSingleHand(StaticArrayInitTypeSize1 GameController)
    {
label_1:
      int num1 = 101529057;
      while (true)
      {
        uint num2;
        bool flag;
        IPropertyVa ipropertyVa;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1783337939)) % 26U)
        {
          case 0:
            flag = true;
            num1 = (int) num2 * -999314374 ^ 696073523;
            continue;
          case 1:
            ipropertyVa.Set = false;
            num1 = (int) num2 * -336876635 ^ 1739641429;
            continue;
          case 2:
            num1 = (int) num2 * 1796730335 ^ -1736491528;
            continue;
          case 3:
            flag = false;
            num1 = (int) num2 * 1526630706 ^ 1129263279;
            continue;
          case 4:
            int num4;
            num1 = num4 = GameController.Game.Player.Hand1.Count != 0 ? 1180650528 : (num4 = 1739356874);
            continue;
          case 5:
            flag = false;
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Machine.Hand1Flipped);
            num1 = (int) num2 * -1066817472 ^ -1785478874;
            continue;
          case 6:
            num1 = (int) num2 * -1464396984 ^ -1858715838;
            continue;
          case 7:
            GameController.Game.Player.Hand1.Add(ipropertyVa);
            num1 = 1667335945;
            continue;
          case 8:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = 1113365207;
            continue;
          case 9:
            num3 = GameController.Game.Machine.Hand1.Count != 2 ? 1 : 0;
            break;
          case 10:
            GameController.Game.Machine.Hand1.Add(ipropertyVa);
            num1 = 1199665541;
            continue;
          case 11:
            ipropertyVa.Set = false;
            num1 = (int) num2 * 1345949473 ^ 760501902;
            continue;
          case 12:
            if (GameController.Game.Player.Hand1.Count == 2)
            {
              num1 = 115895754;
              continue;
            }
            num3 = 1;
            break;
          case 13:
            num1 = (int) num2 * -644130415 ^ -723713710;
            continue;
          case 14:
            num1 = (int) num2 * -1136287883 ^ -1907807343;
            continue;
          case 15:
            num1 = (int) num2 * -1362842448 ^ 578040935;
            continue;
          case 16:
            ServerExcept.\u206C‪⁪‬‬⁭‪⁬‭⁪⁭‎⁭⁯‌⁭⁬‬⁮​‪‌‫⁫‏⁬‪⁫⁫‫‭‎⁯⁮⁫‬‮‭⁪‌‮();
            num1 = (int) num2 * 553417027 ^ -496000204;
            continue;
          case 17:
            int num5 = GameController.Game.Machine.Hand1.Count != 0 ? 2076190670 : (num5 = 463261811);
            num1 = num5 ^ (int) num2 * -743144778;
            continue;
          case 18:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * -2036606947 ^ -133892083;
            continue;
          case 19:
            num1 = (int) num2 * 1329291828 ^ -322667347;
            continue;
          case 20:
            num1 = 5938203;
            continue;
          case 21:
            goto label_3;
          case 22:
            int num6 = flag ? -543676182 : (num6 = -284977051);
            num1 = num6 ^ (int) num2 * -1296281852;
            continue;
          case 23:
            GameController.Game.Deck.RemoveAt(0);
            num1 = (int) num2 * 1379716532 ^ 957393032;
            continue;
          case 24:
            ipropertyVa = GameController.Game.Deck.ElementAt<IPropertyVa>(0);
            num1 = (int) num2 * 126004201 ^ 1467050884;
            continue;
          case 25:
            goto label_1;
          default:
            goto label_31;
        }
        int num7;
        num1 = num7 = num3 != 0 ? 1822096541 : (num7 = 384310298);
      }
label_3:
      return;
label_31:;
    }

    public void PassPlayerTurn(StaticArrayInitTypeSize1 GameController)
    {
      ++GameController.Game.TurnWho;
label_1:
      int num1 = -178902878;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1182208777)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -458320799 ^ -1126692860;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            this.SimulateMachineRoundAsync(GameController);
            num1 = (int) num2 * 2089303639 ^ -82348071;
            continue;
          case 4:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * -602841735 ^ -87223611;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void AllowDraw1Card(StaticArrayInitTypeSize1 GameController)
    {
      if (GameController.Game.Player.Hand2.Count == 0)
        goto label_5;
label_1:
      int num1 = 1956390357;
label_2:
      EventLe eventLe;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2036587844)) % 10U)
        {
          case 0:
            num1 = (int) num2 * 109209382 ^ -1372376888;
            continue;
          case 1:
            eventLe = new EventLe(GameController);
            num1 = (int) num2 * 1075568908 ^ 397862648;
            continue;
          case 2:
            int num3 = (int) ServerExcept.\u206C⁭‏⁯‌⁯⁭‭‌‬‬‬⁮​‪‭⁬⁫‭‏⁫‏‌‭‭⁯​⁫‏⁭‫⁮‮‍⁬⁭‭​‭‏‮((Form) eventLe);
            num1 = (int) num2 * 477033190 ^ 2093870980;
            continue;
          case 3:
            goto label_1;
          case 4:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * -1216137207 ^ -540983145;
            continue;
          case 5:
            goto label_5;
          case 6:
            goto label_3;
          case 7:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * -1885872404 ^ 1324995725;
            continue;
          case 8:
            num1 = (int) num2 * 881617575 ^ -285469720;
            continue;
          case 9:
            GameController.GameView.ToogleGameButtonsState(GameController.Game);
            num1 = (int) num2 * 640262185 ^ 143956843;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:
      return;
label_5:
      this.Draw1CardFor("Player", "Hand1", true, GameController);
      num1 = 810552242;
      goto label_2;
    }

    public void DrawToSelectedHand(string Hand, StaticArrayInitTypeSize1 GameController)
    {
      bool flag = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
label_1:
      int num1 = 247798283;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1675479825)) % 15U)
        {
          case 0:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * 1914391894 ^ -389070512;
            continue;
          case 1:
            GameController.UpdateLogs("Hit card Hand2;");
            num1 = 658410210;
            continue;
          case 2:
            this.Draw1CardFor("Player", "Hand1", true, GameController);
            num1 = (int) num2 * 1398526621 ^ -2040945702;
            continue;
          case 3:
            this.Draw1CardFor("Player", "Hand2", true, GameController);
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1439541658 ^ -1250791020;
            continue;
          case 4:
            num1 = (int) num2 * -1655687625 ^ 1266161601;
            continue;
          case 5:
            num1 = (int) num2 * 751089857 ^ -2144289246;
            continue;
          case 6:
            num1 = (int) num2 * -1187774470 ^ 815705272;
            continue;
          case 7:
            goto label_3;
          case 8:
            int num3 = flag ? 1051320913 : (num3 = 270039681);
            num1 = num3 ^ (int) num2 * 1940292430;
            continue;
          case 9:
            goto label_1;
          case 10:
            num1 = (int) num2 * 1875538285 ^ -83692205;
            continue;
          case 11:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = 1780594434;
            continue;
          case 12:
            GameController.UpdateLogs("Hit card Hand1;");
            num1 = (int) num2 * 532461471 ^ 92233060;
            continue;
          case 13:
            num1 = (int) num2 * 579273471 ^ -565672118;
            continue;
          case 14:
            GameController.GameView.ToogleGameButtonsState(GameController.Game);
            num1 = (int) num2 * 1164849238 ^ 1691151609;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public void DoubleBetThenFlipHands(StaticArrayInitTypeSize1 GameController)
    {
label_1:
      int num1 = -932951601;
      while (true)
      {
        uint num2;
        bool flag1;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -787641938)) % 39U)
        {
          case 0:
            int num4 = !flag1 ? -1666568133 : (num4 = -819492476);
            num1 = num4 ^ (int) num2 * 1314490316;
            continue;
          case 1:
            num1 = (int) num2 * -972686819 ^ -1402116960;
            continue;
          case 2:
            num1 = (int) num2 * -953404800 ^ -619049917;
            continue;
          case 3:
            num1 = (int) num2 * 614262519 ^ 1514044775;
            continue;
          case 4:
            if (GameController.Game.Player.Hand1Flipped)
            {
              num1 = -320790031;
              continue;
            }
            num3 = 1;
            break;
          case 5:
            GameController.UpdateLogs("Player burst Hand2;");
            this.LooseBurstHand(GameController, "Player", "Hand2");
            num1 = (int) num2 * 1215877639 ^ -837591366;
            continue;
          case 6:
            num1 = (int) num2 * -2144014321 ^ 1330332253;
            continue;
          case 7:
            this.Draw1CardFor("Player", "Hand1", true, GameController);
            num1 = (int) num2 * -1001599789 ^ 254856349;
            continue;
          case 8:
            num1 = (int) num2 * -144971160 ^ 695952135;
            continue;
          case 9:
            num1 = -958401770;
            continue;
          case 10:
            int num5 = GameController.Game.Player.Hand2.Count != 0 ? 2147281040 : (num5 = 1338979544);
            num1 = num5 ^ (int) num2 * -850192730;
            continue;
          case 11:
            goto label_3;
          case 12:
            GameController.GameView.SetLabels(GameController.Game);
            flag1 = GameController.Game.GetHandSumFor(GameController.Game.Player.Hand1) > 21;
            num1 = (int) num2 * 886597619 ^ 1690078029;
            continue;
          case 13:
            this.LooseBurstHand(GameController, "Player", "Hand1");
            num1 = (int) num2 * -1826834189 ^ 1433434855;
            continue;
          case 14:
            num1 = (int) num2 * 1003202544 ^ -695852679;
            continue;
          case 15:
            num1 = (int) num2 * -1101918598 ^ 341220073;
            continue;
          case 16:
            goto label_1;
          case 17:
            num1 = (int) num2 * -271454875 ^ -1791754829;
            continue;
          case 18:
            num1 = (int) num2 * 312292230 ^ -121019289;
            continue;
          case 19:
            num1 = (int) num2 * 936512328 ^ 588108582;
            continue;
          case 20:
            GameController.Game.Player.Bet *= 2;
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * 524674290 ^ 604969035;
            continue;
          case 21:
            this.FlipPlayerHands(GameController);
            num1 = (int) num2 * 720791839 ^ -1255570200;
            continue;
          case 22:
            this.Draw1CardFor("Player", "Hand2", true, GameController);
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * -783421047 ^ -1705690262;
            continue;
          case 23:
            num3 = !GameController.Game.Player.Hand2Flipped ? 1 : 0;
            break;
          case 24:
            GameController.UpdateLogs("Player burst Hand1;");
            num1 = (int) num2 * -2037738104 ^ -796896374;
            continue;
          case 25:
            num1 = (int) num2 * -1938681218 ^ -53992166;
            continue;
          case 26:
            int num6;
            num1 = num6 = GameController.Game.GetHandSumFor(GameController.Game.Player.Hand2) > 21 ? -897078478 : (num6 = -790529561);
            continue;
          case 27:
            num1 = -433740876;
            continue;
          case 28:
            int num7 = GameController.Game.GetHandSumFor(GameController.Game.Player.Hand1) > 21 ? 1298239669 : (num7 = 1202283666);
            num1 = num7 ^ (int) num2 * -774796428;
            continue;
          case 29:
            GameController.UpdateLogs("Flip player hand;");
            num1 = (int) num2 * -523420597 ^ 1996091753;
            continue;
          case 30:
            num1 = (int) num2 * 831660133 ^ 253807217;
            continue;
          case 31:
            GameController.UpdateLogs("Player burst. Game-over;");
            this.LooseBurstHand(GameController, "Player", "Hand1");
            num1 = (int) num2 * -5812958 ^ 88849943;
            continue;
          case 32:
            int num8 = !flag2 ? 381881565 : (num8 = 1938003997);
            num1 = num8 ^ (int) num2 * 851966606;
            continue;
          case 33:
            GameController.UpdateLogs("Flip player hands;");
            this.FlipPlayerHands(GameController);
            num1 = (int) num2 * -1345894419 ^ 450655447;
            continue;
          case 34:
            num1 = (int) num2 * 1982092504 ^ 1833154183;
            continue;
          case 35:
            num1 = -4233557;
            continue;
          case 36:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * 622754902 ^ -1711413278;
            continue;
          case 37:
            num1 = -529317648;
            continue;
          case 38:
            this.Draw1CardFor("Player", "Hand1", true, GameController);
            num1 = (int) num2 * 1069642863 ^ 1767434074;
            continue;
          default:
            goto label_44;
        }
        flag2 = num3 != 0;
        num1 = -825065855;
      }
label_3:
      return;
label_44:;
    }

    public void SplitPlayerHandThenDraw(StaticArrayInitTypeSize1 GameController)
    {
label_1:
      int num1 = -1120698395;
      IPropertyVa ipropertyVa;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -441989170)) % 10U)
        {
          case 0:
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1142323634 ^ 1874621905;
            continue;
          case 1:
            this.Draw1CardFor("Player", "Hand1", true, GameController);
            num1 = (int) num2 * -823946899 ^ 1897521444;
            continue;
          case 2:
            goto label_1;
          case 3:
            ipropertyVa = GameController.Game.Player.Hand1.ElementAt<IPropertyVa>(1);
            GameController.Game.Player.Hand1.RemoveAt(1);
            num1 = (int) num2 * -401877647 ^ 1232156425;
            continue;
          case 4:
            num1 = (int) num2 * -547032678 ^ -883884017;
            continue;
          case 5:
            goto label_3;
          case 6:
            GameController.GameView.ToogleGameButtonsState(GameController.Game);
            num1 = (int) num2 * 193339937 ^ -1967159462;
            continue;
          case 7:
            this.Draw1CardFor("Player", "Hand2", true, GameController);
            num1 = (int) num2 * 468453426 ^ -1688706922;
            continue;
          case 8:
            GameController.Game.Player.Hand2.Add(ipropertyVa);
            num1 = (int) num2 * 1605498545 ^ 1372800955;
            continue;
          case 9:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * 1462222466 ^ 2003445382;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public void FlipPlayerHands(StaticArrayInitTypeSize1 GameController)
    {
      GameController.Game.Player.Hand1Flipped = true;
label_1:
      int num1 = -860377669;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -77925162)) % 19U)
        {
          case 0:
            goto label_1;
          case 1:
            GameController.Game.Machine.Hand1Flipped = true;
            num1 = -357655457;
            continue;
          case 2:
            num1 = (int) num2 * -1941413167 ^ -1388820563;
            continue;
          case 3:
            GameController.Game.Machine.Hand2Flipped = true;
            num1 = (int) num2 * 1605386834 ^ 705306902;
            continue;
          case 4:
            num1 = (int) num2 * -126868830 ^ 940775414;
            continue;
          case 5:
            num1 = (int) num2 * 350643597 ^ -877905845;
            continue;
          case 6:
            num1 = (int) num2 * 288272187 ^ -234892749;
            continue;
          case 7:
            GameController.Game.Player.Hand2Flipped = true;
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1994069811 ^ -1638467690;
            continue;
          case 8:
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = -721227220;
            continue;
          case 9:
            num1 = (int) num2 * 1392201824 ^ -635874858;
            continue;
          case 10:
            flag = GameController.Game.Player.Hand2.Count != 0;
            num1 = (int) num2 * 591264618 ^ -1300361369;
            continue;
          case 11:
            this.CalculateBalance(GameController.Game);
            num1 = -1773798097;
            continue;
          case 12:
            int num3 = !flag ? -346036770 : (num3 = -872211616);
            num1 = num3 ^ (int) num2 * -1697940223;
            continue;
          case 13:
            goto label_3;
          case 14:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 896704170 ^ 1725057431;
            continue;
          case 15:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = -108780920;
            continue;
          case 16:
            num1 = (int) num2 * -588378176 ^ 999968055;
            continue;
          case 17:
            num1 = (int) num2 * -886564354 ^ 960622478;
            continue;
          case 18:
            int num4 = GameController.Game.Machine.Hand2.Count != 0 ? 1541991971 : (num4 = 900704433);
            num1 = num4 ^ (int) num2 * 2039392495;
            continue;
          default:
            goto label_21;
        }
      }
label_3:
      return;
label_21:;
    }

    public void LooseBurstHand(StaticArrayInitTypeSize1 GameController, string Who, string Hand)
    {
      bool flag = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Who, "Player");
label_1:
      int num1 = 1013327672;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1919697965)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1670198383 ^ -1617677363;
            continue;
          case 1:
            int num3 = !flag ? -730756141 : (num3 = -683065642);
            num1 = num3 ^ (int) num2 * -2065069604;
            continue;
          case 2:
            this.MachineBurstAsync(GameController, Hand);
            num1 = 1781772437;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            this.PlayerBurstAsync(GameController, Hand);
            num1 = (int) num2 * 565671649 ^ 1503798802;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void PlayerBurstAsync(StaticArrayInitTypeSize1 GameController, string Hand)
    {
label_1:
      int num1 = -1045898731;
      bool hand2Flipped;
      bool hand1Flipped;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -56519599)) % 33U)
        {
          case 0:
            num1 = (int) num2 * 1397913176 ^ 1835306820;
            continue;
          case 1:
            num1 = -427868574;
            continue;
          case 2:
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 385824559 ^ -2037623770;
            continue;
          case 3:
            this.CalculateBalance(GameController.Game);
            num1 = (int) num2 * 460868110 ^ -2064723175;
            continue;
          case 4:
            hand1Flipped = GameController.Game.Player.Hand1Flipped;
            num1 = (int) num2 * 378855842 ^ -1688491858;
            continue;
          case 5:
            num1 = (int) num2 * 1627637534 ^ -1450894213;
            continue;
          case 6:
            int num3 = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? 1433345926 : (num3 = 2124106381);
            num1 = num3 ^ (int) num2 * -43845336;
            continue;
          case 7:
            goto label_1;
          case 8:
            this.CalculateBalance(GameController.Game);
            num1 = -1771822948;
            continue;
          case 9:
            GameController.Game.Winner = "Machine";
            num1 = (int) num2 * -713144458 ^ -386694594;
            continue;
          case 10:
            num1 = (int) num2 * -1364860154 ^ 1128036296;
            continue;
          case 11:
            num1 = -427868574;
            continue;
          case 12:
            num1 = (int) num2 * 1958325983 ^ 1025596973;
            continue;
          case 13:
            int num4 = GameController.Game.Player.Hand2.Count == 0 ? 2069310193 : (num4 = 255913242);
            num1 = num4 ^ (int) num2 * 1925486573;
            continue;
          case 14:
            num1 = (int) num2 * -1254822041 ^ 260046155;
            continue;
          case 15:
            GameController.Game.Machine.Hand1Flipped = true;
            num1 = (int) num2 * -1173478702 ^ 1383776840;
            continue;
          case 16:
            goto label_3;
          case 17:
            int num5 = !hand1Flipped ? -832759540 : (num5 = -828158182);
            num1 = num5 ^ (int) num2 * -1114521362;
            continue;
          case 18:
            num1 = (int) num2 * 601367739 ^ 959433856;
            continue;
          case 19:
            GameController.Game.Player.Hand1Flipped = true;
            num1 = (int) num2 * 1040846721 ^ 1694213845;
            continue;
          case 20:
            this.CalculateBalance(GameController.Game);
            num1 = (int) num2 * -721679663 ^ 292942197;
            continue;
          case 21:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = -157702310;
            continue;
          case 22:
            GameController.Game.Player.Hand2Flipped = true;
            num1 = -1801889825;
            continue;
          case 23:
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = -1085366297;
            continue;
          case 24:
            GameController.Game.Machine.Hand2Flipped = true;
            int num6 = GameController.Game.Machine.Hand2.Count == 0 ? 53497478 : (num6 = 219919593);
            num1 = num6 ^ (int) num2 * 919018398;
            continue;
          case 25:
            num1 = -1771822948;
            continue;
          case 26:
            num1 = (int) num2 * 1972046595 ^ 1034821017;
            continue;
          case 27:
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * 1717977459 ^ -1365418013;
            continue;
          case 28:
            hand2Flipped = GameController.Game.Player.Hand2Flipped;
            num1 = (int) num2 * 2099006348 ^ -1043960786;
            continue;
          case 29:
            num1 = (int) num2 * 59437247 ^ -563695726;
            continue;
          case 30:
            num1 = (int) num2 * -931502852 ^ 1918175429;
            continue;
          case 31:
            int num7 = hand2Flipped ? -601028196 : (num7 = -1698276699);
            num1 = num7 ^ (int) num2 * 1635937703;
            continue;
          case 32:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * -1260482765 ^ -1084336846;
            continue;
          default:
            goto label_35;
        }
      }
label_3:
      return;
label_35:;
    }

    private void MachineBurstAsync(StaticArrayInitTypeSize1 GameController, string Hand)
    {
      bool flag1 = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
label_1:
      int num1 = -1953906406;
      bool flag2;
      bool hand1Flipped;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -384615543)) % 30U)
        {
          case 0:
            hand1Flipped = GameController.Game.Machine.Hand1Flipped;
            num1 = (int) num2 * 1818087538 ^ -1714887612;
            continue;
          case 1:
            num1 = -899677387;
            continue;
          case 2:
            int num3 = !flag2 ? -1618211067 : (num3 = -921782718);
            num1 = num3 ^ (int) num2 * -202924176;
            continue;
          case 3:
            int num4 = !hand1Flipped ? -1430662779 : (num4 = -387155452);
            num1 = num4 ^ (int) num2 * 1965965235;
            continue;
          case 4:
            goto label_3;
          case 5:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * -1403287644 ^ -428521984;
            continue;
          case 6:
            this.CalculateBalance(GameController.Game);
            num1 = (int) num2 * -1050843875 ^ 740851656;
            continue;
          case 7:
            int num5 = GameController.Game.Machine.Hand2Flipped ? -181204329 : (num5 = -642635018);
            num1 = num5 ^ (int) num2 * -1792653810;
            continue;
          case 8:
            GameController.Game.Winner = "Player";
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * -2025269466 ^ 1471034467;
            continue;
          case 9:
            num1 = (int) num2 * 622528813 ^ 1571743966;
            continue;
          case 10:
            num1 = -899677387;
            continue;
          case 11:
            num1 = (int) num2 * -315417983 ^ -515545007;
            continue;
          case 12:
            GameController.Game.Machine.Hand2Flipped = true;
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * -1402564064 ^ -1966479302;
            continue;
          case 13:
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = -281439263;
            continue;
          case 14:
            num1 = -1405775279;
            continue;
          case 15:
            num1 = (int) num2 * -1207964254 ^ -1530018851;
            continue;
          case 16:
            flag2 = GameController.Game.Machine.Hand2.Count == 0;
            num1 = (int) num2 * 1030580371 ^ -1720716319;
            continue;
          case 17:
            goto label_1;
          case 18:
            this.CalculateBalance(GameController.Game);
            num1 = (int) num2 * -949818330 ^ 990372656;
            continue;
          case 19:
            int num6 = flag1 ? 631849346 : (num6 = 299556648);
            num1 = num6 ^ (int) num2 * -666488917;
            continue;
          case 20:
            this.CalculateBalance(GameController.Game);
            num1 = -1200568321;
            continue;
          case 21:
            num1 = (int) num2 * 2017415411 ^ -1176214724;
            continue;
          case 22:
            num1 = -1816611642;
            continue;
          case 23:
            num1 = (int) num2 * -301784259 ^ -1782915243;
            continue;
          case 24:
            num1 = (int) num2 * 1352100640 ^ 2081272865;
            continue;
          case 25:
            num1 = -1200568321;
            continue;
          case 26:
            GameController.Game.Machine.Hand1Flipped = true;
            num1 = (int) num2 * 1981421642 ^ 488885292;
            continue;
          case 27:
            num1 = (int) num2 * -876208373 ^ -957683908;
            continue;
          case 28:
            GameController.Game.Player.Hand1Flipped = true;
            GameController.Game.Player.Hand2Flipped = true;
            int num7 = GameController.Game.Player.Hand2.Count == 0 ? 1698557366 : (num7 = 1855895552);
            num1 = num7 ^ (int) num2 * 1817497038;
            continue;
          case 29:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = (int) num2 * 415981116 ^ 1785689472;
            continue;
          default:
            goto label_32;
        }
      }
label_3:
      return;
label_32:;
    }

    public void CalculateBalance(TypeResolveHand Game)
    {
    }

    private void SimulateMachineRoundAsync(StaticArrayInitTypeSize1 GameController)
    {
      bool flag1 = GameController.Game.Machine.Hand2.Count == 0;
label_1:
      int num1 = 1331554024;
      bool flag2;
      bool flag3;
      bool flag4;
      IPropertyVa ipropertyVa;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1843820270)) % 38U)
        {
          case 0:
            num1 = (int) num2 * 311074069 ^ 788048800;
            continue;
          case 1:
            num1 = 490079963;
            continue;
          case 2:
            num1 = (int) num2 * -1290095764 ^ 1085749631;
            continue;
          case 3:
            num1 = (int) num2 * 541867790 ^ -1694723580;
            continue;
          case 4:
            int num3 = !flag2 ? 720630254 : (num3 = 929738736);
            num1 = num3 ^ (int) num2 * -1617614902;
            continue;
          case 5:
            this.RunGame1Hand(GameController, "Hand1", false);
            num1 = (int) num2 * -363621039 ^ -840066809;
            continue;
          case 6:
            this.RunGame1Hand(GameController, "Hand1", true);
            num1 = (int) num2 * -1323997698 ^ 574079234;
            continue;
          case 7:
            GameController.Game.Machine.Hand2.Add(ipropertyVa);
            num1 = (int) num2 * -1854540765 ^ -1985324828;
            continue;
          case 8:
            this.RunGame1Hand(GameController, "Hand2", true);
            num1 = (int) num2 * -423413657 ^ -889870565;
            continue;
          case 9:
            num1 = (int) num2 * 617183929 ^ 1119464152;
            continue;
          case 10:
            ++GameController.Game.TurnWho;
            num1 = 1773547047;
            continue;
          case 11:
            flag3 = flag4;
            num1 = (int) num2 * 421412553 ^ -1454500335;
            continue;
          case 12:
            num1 = (int) num2 * 1490524187 ^ -139183521;
            continue;
          case 13:
            this.Draw1CardFor("Machine", "Hand1", false, GameController);
            num1 = (int) num2 * 1538527138 ^ 1954094923;
            continue;
          case 14:
            int num4 = flag3 ? 1726661839 : (num4 = 252079881);
            num1 = num4 ^ (int) num2 * -1755287324;
            continue;
          case 15:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * 483318697 ^ 1288979506;
            continue;
          case 16:
            GameController.UpdateLogs("House split hand;");
            num1 = (int) num2 * 2097811409 ^ 1467292178;
            continue;
          case 17:
            num1 = (int) num2 * 1361632448 ^ -1254103327;
            continue;
          case 18:
            num1 = (int) num2 * -1866035941 ^ -140416230;
            continue;
          case 19:
            num1 = (int) num2 * -111217294 ^ -1678773087;
            continue;
          case 20:
            num1 = (int) num2 * -1482165543 ^ 570908522;
            continue;
          case 21:
            GameController.UpdateLogs("House run 1 hand;");
            num1 = (int) num2 * 738897812 ^ -1264888569;
            continue;
          case 22:
            flag4 = GameController.Game.CheckIdenticalHand("Machine", "Hand1");
            num1 = (int) num2 * -1988882734 ^ 1820200447;
            continue;
          case 23:
            num1 = (int) num2 * 1265581999 ^ 1092271698;
            continue;
          case 24:
            int num5 = !flag1 ? -811730967 : (num5 = -1531230228);
            num1 = num5 ^ (int) num2 * -1830657997;
            continue;
          case 25:
            num1 = 949291005;
            continue;
          case 26:
            GameController.GameView.SetLabels(GameController.Game);
            num1 = (int) num2 * -2128903796 ^ -1631718580;
            continue;
          case 27:
            num1 = (int) num2 * -1036834881 ^ -1184513344;
            continue;
          case 28:
            GameController.UpdateLogs("House run 2 hands;");
            num1 = (int) num2 * 713353305 ^ 2048933822;
            continue;
          case 29:
            num1 = (int) num2 * -1151600611 ^ 715035391;
            continue;
          case 30:
            GameController.Game.Machine.Hand1.RemoveAt(1);
            num1 = (int) num2 * 797367473 ^ 435177207;
            continue;
          case 31:
            goto label_1;
          case 32:
            ipropertyVa = GameController.Game.Machine.Hand1.ElementAt<IPropertyVa>(1);
            num1 = (int) num2 * -382874644 ^ 162440986;
            continue;
          case 33:
            this.Draw1CardFor("Machine", "Hand2", true, GameController);
            num1 = (int) num2 * -1880876890 ^ 584658018;
            continue;
          case 34:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1778037477 ^ -2034944620;
            continue;
          case 35:
            flag2 = GameController.Game.Machine.Hand2.Count != 0;
            num1 = 1446455548;
            continue;
          case 36:
            goto label_3;
          case 37:
            num1 = (int) num2 * -1800360030 ^ 1856005332;
            continue;
          default:
            goto label_40;
        }
      }
label_3:
      return;
label_40:;
    }

    private void RunGame1Hand(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
label_1:
      int num1 = 261903607;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1241718989)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.SimulateMachine1Hand(GameController, Hand, RenderContext);
            num1 = (int) num2 * 554954414 ^ -355101743;
            continue;
          case 3:
            num1 = (int) num2 * 1027297917 ^ 574294891;
            continue;
          case 4:
            num1 = (int) num2 * 1479388710 ^ -1127489325;
            continue;
          case 5:
            this.SimulateMachine1Hand(GameController, Hand, RenderContext);
            num1 = 747922898;
            continue;
          case 6:
            int num3 = !ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? 1421833074 : (num3 = 1708576570);
            num1 = num3 ^ (int) num2 * 1107826753;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    private void SimulateMachine1Hand(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
label_44:
      bool flag1 = GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) < 11;
      int num1 = 1124720434;
      while (true)
      {
        uint num2;
        bool flag2;
        double num3;
        bool flag3;
        double num4;
        bool flag4;
        double num5;
        double num6;
        double num7;
        double num8;
        int num9;
        int num10;
        switch ((num2 = (uint) (num1 ^ 2142495152)) % 67U)
        {
          case 0:
            int num11 = !flag2 ? -1082654193 : (num11 = -223607790);
            num1 = num11 ^ (int) num2 * 473454782;
            continue;
          case 1:
            num1 = (int) num2 * -1165819395 ^ 870748475;
            continue;
          case 2:
            if (GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) < 17)
            {
              num9 = 0;
              goto label_19;
            }
            else
            {
              num1 = 121112026;
              continue;
            }
          case 3:
            num1 = (int) num2 * 433382482 ^ -1555341932;
            continue;
          case 4:
            num1 = (int) num2 * 1911170007 ^ 121530774;
            continue;
          case 5:
            this.Draw1CardFor("Machine", Hand, true, GameController);
            num1 = (int) num2 * -737054510 ^ 798104711;
            continue;
          case 6:
            this.Draw1CardFor("Machine", Hand, true, GameController);
            num1 = (int) num2 * -438788108 ^ 525401095;
            continue;
          case 7:
            num1 = (int) num2 * -668055998 ^ 892589859;
            continue;
          case 8:
            num10 = GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) <= 16 ? 1 : 0;
            break;
          case 9:
            int num12 = flag1 ? -1714634840 : (num12 = -516175547);
            num1 = num12 ^ (int) num2 * -1070310700;
            continue;
          case 10:
            num1 = (int) num2 * -353023092 ^ -1181444429;
            continue;
          case 11:
            num1 = 1867630592;
            continue;
          case 12:
            num1 = 736288872;
            continue;
          case 13:
            GameController.UpdateLogs("House hit card;");
            num1 = (int) num2 * 718902060 ^ -617586180;
            continue;
          case 14:
            num5 = AssemblyLoadEventA.Max(new double[4]
            {
              num6,
              num8,
              num4,
              num3
            });
            num1 = (int) num2 * -463462649 ^ -1031446364;
            continue;
          case 15:
            num1 = (int) num2 * 1247846735 ^ 450210333;
            continue;
          case 16:
            flag4 = GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) == 20;
            num1 = 1231883207;
            continue;
          case 17:
            num1 = (int) num2 * 834784457 ^ 1219366509;
            continue;
          case 18:
            GameController.UpdateLogs("House double bet;");
            this.SimulateMachineDoubleBetAsync(GameController, Hand, RenderContext);
            num1 = (int) num2 * 474337618 ^ 452171285;
            continue;
          case 19:
            int num13 = !flag4 ? -1361447947 : (num13 = -625180447);
            num1 = num13 ^ (int) num2 * 385201764;
            continue;
          case 20:
            num4 = AssemblyLoadEventA.RandDoubleInRange(0.0, 0.25);
            num1 = (int) num2 * 1349728573 ^ -1544510945;
            continue;
          case 21:
            num1 = (int) num2 * 365762879 ^ -1800920009;
            continue;
          case 22:
            if (GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) < 11)
            {
              num10 = 0;
              break;
            }
            num1 = 423712049;
            continue;
          case 23:
            num1 = (int) num2 * 1743225419 ^ -2104105209;
            continue;
          case 24:
            num1 = 608816270;
            continue;
          case 25:
            num1 = (int) num2 * -800009136 ^ 1245946847;
            continue;
          case 26:
            num1 = (int) num2 * 1990646082 ^ 700093253;
            continue;
          case 27:
            num1 = 189235032;
            continue;
          case 28:
            num1 = (int) num2 * 412096326 ^ 1273302928;
            continue;
          case 29:
            int num14;
            num1 = num14 = num5 != num4 ? 599977549 : (num14 = 2017555336);
            continue;
          case 30:
            this.SimulateMachineDoubleBetAsync(GameController, Hand, RenderContext);
            num1 = (int) num2 * -1101803496 ^ -2115190756;
            continue;
          case 31:
            num1 = 1585876165;
            continue;
          case 32:
            goto label_44;
          case 33:
            double num15 = AssemblyLoadEventA.RandDoubleInRange(0.0, 0.6);
            int num16 = num7 < num15 ? -917582740 : (num16 = -2102600610);
            num1 = num16 ^ (int) num2 * 296602933;
            continue;
          case 34:
            num1 = (int) num2 * -692692168 ^ -871649969;
            continue;
          case 35:
            num1 = (int) num2 * 502158222 ^ -280667245;
            continue;
          case 36:
            num1 = (int) num2 * 845675103 ^ 1585184427;
            continue;
          case 37:
            num1 = (int) num2 * 1341652311 ^ -1087160007;
            continue;
          case 38:
            num9 = GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) <= 19 ? 1 : 0;
            goto label_19;
          case 39:
            num7 = AssemblyLoadEventA.RandDoubleInRange(0.4, 1.0);
            num1 = (int) num2 * 258964952 ^ 1669026096;
            continue;
          case 40:
            num1 = (int) num2 * -613338051 ^ -1647648262;
            continue;
          case 41:
            int num17 = num5 == num6 ? -1354898350 : (num17 = -403274730);
            num1 = num17 ^ (int) num2 * 1352976016;
            continue;
          case 42:
            num1 = (int) num2 * 1847943412 ^ 270330273;
            continue;
          case 43:
            int num18 = !flag3 ? -897764810 : (num18 = -1846892809);
            num1 = num18 ^ (int) num2 * -1238516307;
            continue;
          case 44:
            num3 = AssemblyLoadEventA.RandDoubleInRange(0.0, 0.75);
            num1 = (int) num2 * -669071140 ^ -1724802012;
            continue;
          case 45:
            num1 = (int) num2 * 1584563510 ^ 1246925779;
            continue;
          case 46:
            GameController.UpdateLogs("House flip hand(s);");
            GameController.Game.Machine.Hand1Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
            num1 = (int) num2 * -2089119093 ^ 715118416;
            continue;
          case 47:
            num1 = 582497191;
            continue;
          case 48:
            GameController.UpdateLogs("House hit card;");
            num1 = (int) num2 * -639607397 ^ -56006823;
            continue;
          case 49:
            this.RenderMachine1HandAsync(GameController, Hand, RenderContext);
            num1 = (int) num2 * -1728243180 ^ -1439683515;
            continue;
          case 50:
            GameController.Game.Machine.Hand2Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand2");
            num1 = (int) num2 * -813146225 ^ 906706291;
            continue;
          case 51:
            this.Draw1CardFor("Machine", Hand, true, GameController);
            num1 = (int) num2 * 398766614 ^ -1459747013;
            continue;
          case 52:
            this.RenderMachine1HandAsync(GameController, Hand, RenderContext);
            num1 = (int) num2 * -2118825633 ^ 1746946418;
            continue;
          case 53:
            num1 = (int) num2 * 1078396261 ^ -1106784829;
            continue;
          case 54:
            GameController.UpdateLogs("House double bet;");
            num1 = (int) num2 * 1264186964 ^ -132473176;
            continue;
          case 55:
            goto label_3;
          case 56:
            num8 = AssemblyLoadEventA.RandDoubleInRange(0.0, 0.5);
            num1 = (int) num2 * 898148210 ^ -791021536;
            continue;
          case 57:
            this.RenderMachine1HandAsync(GameController, Hand, RenderContext);
            num1 = (int) num2 * -391117109 ^ -2005584253;
            continue;
          case 58:
            this.CheckMachineBurst(GameController, Hand, RenderContext);
            num1 = (int) num2 * -536084423 ^ -1470074983;
            continue;
          case 59:
            num6 = AssemblyLoadEventA.RandDoubleInRange(0.0, 1.0);
            num1 = (int) num2 * -329880996 ^ -56594857;
            continue;
          case 60:
            GameController.UpdateLogs("House flip hand;");
            this.SimulateMachineFlipHand(GameController, Hand, RenderContext);
            num1 = (int) num2 * 140689588 ^ 1124776361;
            continue;
          case 61:
            GameController.UpdateLogs("House stand. Turn: Player;");
            num1 = (int) num2 * 292354054 ^ 204561266;
            continue;
          case 62:
            num1 = (int) num2 * 718625566 ^ 434547983;
            continue;
          case 63:
            GameController.UpdateLogs("House hit card;");
            num1 = (int) num2 * 1768829576 ^ -1733320261;
            continue;
          case 64:
            this.CheckMachineBurst(GameController, Hand, RenderContext);
            num1 = (int) num2 * -1552120793 ^ -92792514;
            continue;
          case 65:
            int num19;
            num1 = num19 = num5 != num8 ? 649481747 : (num19 = 83922893);
            continue;
          case 66:
            this.SimulateMachineFlipHand(GameController, Hand, RenderContext);
            num1 = (int) num2 * -1082919599 ^ -1525329442;
            continue;
          default:
            goto label_75;
        }
        flag2 = num10 != 0;
        num1 = 714212107;
        continue;
label_19:
        flag3 = num9 != 0;
        num1 = 778966358;
      }
label_3:
      return;
label_75:;
    }

    private void CheckMachineBurst(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
      if (GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) != 21)
        goto label_16;
label_1:
      int num1 = 1198443329;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1888323166)) % 17U)
        {
          case 0:
            num1 = (int) num2 * 1076557048 ^ -1896991091;
            continue;
          case 1:
            GameController.UpdateLogs("House get Jack;");
            num1 = (int) num2 * 601208499 ^ -80014660;
            continue;
          case 2:
            GameController.Game.Machine.Hand2Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand2");
            num1 = (int) num2 * -1601822730 ^ -705264902;
            continue;
          case 3:
            num1 = (int) num2 * -1106525722 ^ 776911685;
            continue;
          case 4:
            goto label_16;
          case 5:
            int num3 = flag ? -349543318 : (num3 = -376135519);
            num1 = num3 ^ (int) num2 * -1038422028;
            continue;
          case 6:
            num1 = (int) num2 * -1253989269 ^ -1890640354;
            continue;
          case 7:
            goto label_1;
          case 8:
            this.LooseBurstHand(GameController, "Machine", Hand);
            num1 = (int) num2 * -936650650 ^ 2838084;
            continue;
          case 9:
            this.SimulateMachineFlipHand(GameController, Hand, RenderContext);
            num1 = (int) num2 * -99988271 ^ -756408891;
            continue;
          case 10:
            GameController.UpdateLogs("House burst hand;");
            num1 = (int) num2 * 1312942659 ^ -1777391101;
            continue;
          case 11:
            goto label_3;
          case 12:
            num1 = (int) num2 * 1998550844 ^ -1758894668;
            continue;
          case 13:
            num1 = (int) num2 * 2076547039 ^ -1329221180;
            continue;
          case 14:
            num1 = (int) num2 * -145386685 ^ 1026623116;
            continue;
          case 15:
            GameController.Game.Machine.Hand1Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
            num1 = (int) num2 * -930488472 ^ 1119091241;
            continue;
          case 16:
            num1 = (int) num2 * 234116435 ^ -973196379;
            continue;
          default:
            goto label_19;
        }
      }
label_3:
      return;
label_19:
      return;
label_16:
      flag = GameController.Game.GetHandSumFor(ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1") ? GameController.Game.Machine.Hand1 : GameController.Game.Machine.Hand2) > 21;
      num1 = 105657483;
      goto label_2;
    }

    private void RenderMachine1HandAsync(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
      bool flag = RenderContext;
label_1:
      int num1 = -2030657667;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -964788628)) % 6U)
        {
          case 1:
            int num3 = !flag ? 494336916 : (num3 = 1761045881);
            num1 = num3 ^ (int) num2 * -454149166;
            continue;
          case 2:
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = -697811880;
            continue;
          case 3:
            num1 = (int) num2 * 770565798 ^ -1938852690;
            continue;
          case 4:
            goto label_1;
          case 5:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * -331950365 ^ 284762752;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      GameController.GameView.SetLabels(GameController.Game);
    }

    private void SimulateMachineDoubleBetAsync(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
label_1:
      int num1 = -1164535316;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -684439167)) % 12U)
        {
          case 1:
            int num3 = flag ? -1147284776 : (num3 = -1312888758);
            num1 = num3 ^ (int) num2 * 1865201247;
            continue;
          case 2:
            flag = RenderContext;
            num1 = (int) num2 * 1145814653 ^ 31106566;
            continue;
          case 3:
            this.CheckMachineBurst(GameController, Hand, RenderContext);
            num1 = (int) num2 * -1099276147 ^ 805457872;
            continue;
          case 4:
            num1 = (int) num2 * -761980396 ^ 1356440578;
            continue;
          case 5:
            num1 = (int) num2 * 475291978 ^ -289854396;
            continue;
          case 6:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1670701033 ^ 1249735915;
            continue;
          case 7:
            goto label_1;
          case 8:
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = -590041819;
            continue;
          case 9:
            GameController.Game.Machine.Bet *= 2;
            num1 = (int) num2 * -215181492 ^ 59222492;
            continue;
          case 10:
            num1 = (int) num2 * -834216472 ^ 1666763655;
            continue;
          case 11:
            GameController.GameView.SetLabels(GameController.Game);
            this.Draw1CardFor("Machine", Hand, true, GameController);
            num1 = (int) num2 * -2074511953 ^ -1572610512;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      this.SimulateMachineFlipHand(GameController, Hand, RenderContext);
    }

    private void SimulateMachineFlipHand(
      StaticArrayInitTypeSize1 GameController,
      string Hand,
      bool RenderContext)
    {
label_1:
      int num1 = 352856965;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1874693070)) % 21U)
        {
          case 0:
            int num3 = !flag ? 1072654403 : (num3 = 1716617336);
            num1 = num3 ^ (int) num2 * 1990943736;
            continue;
          case 1:
            GameController.GameView.RenderDoubleHandAsyncFor("Machine", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1541957458 ^ 455966944;
            continue;
          case 2:
            flag = GameController.Game.Player.Hand2.Count != 0;
            num1 = (int) num2 * -1807730583 ^ 921486431;
            continue;
          case 3:
            num1 = (int) num2 * -532245076 ^ -1448144591;
            continue;
          case 4:
            GameController.Game.Player.Hand1Flipped = true;
            num1 = 480446529;
            continue;
          case 5:
            GameController.Game.Machine.Hand2Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand2");
            num1 = (int) num2 * -1811918399 ^ 1158993902;
            continue;
          case 6:
            num1 = (int) num2 * 155957336 ^ 627050774;
            continue;
          case 7:
            GameController.GameView.RenderSingleHandAsyncFor("Machine", GameController.Game.Machine.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = 298469321;
            continue;
          case 8:
            num1 = (int) num2 * -2117144218 ^ -1845168195;
            continue;
          case 9:
            GameController.Game.Player.Hand2Flipped = true;
            GameController.GameView.RenderDoubleHandAsyncFor("Player", GameController.Game, GameController.Game.Player.Hand1Flipped, GameController.Game.Player.Hand2Flipped);
            num1 = (int) num2 * 1964274532 ^ -499691861;
            continue;
          case 10:
            num1 = (int) num2 * 259445678 ^ 1236007856;
            continue;
          case 11:
            GameController.GameView.RenderSingleHandAsyncFor("Player", GameController.Game.Player.Hand1, GameController.Game.Player.Hand1Flipped);
            num1 = 86672943;
            continue;
          case 12:
            int num4 = RenderContext ? -678055025 : (num4 = -873219981);
            num1 = num4 ^ (int) num2 * -1988543886;
            continue;
          case 13:
            this.CalculateBalance(GameController.Game);
            num1 = 970587189;
            continue;
          case 14:
            goto label_1;
          case 15:
            num1 = (int) num2 * 776666546 ^ -1184272367;
            continue;
          case 16:
            GameController.Game.Machine.Hand1Flipped = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
            num1 = (int) num2 * 143207777 ^ -1528441856;
            continue;
          case 17:
            goto label_3;
          case 18:
            num1 = (int) num2 * 2104207651 ^ 507733224;
            continue;
          case 19:
            num1 = (int) num2 * 1347565392 ^ 568231099;
            continue;
          case 20:
            num1 = (int) num2 * 143987805 ^ -1259628836;
            continue;
          default:
            goto label_23;
        }
      }
label_3:
      return;
label_23:;
    }

    private void Draw1CardFor(
      string Who,
      string Hand,
      bool Set,
      StaticArrayInitTypeSize1 GameController)
    {
label_1:
      int num1 = 1755444500;
      bool flag1;
      bool flag2;
      bool flag3;
      IPropertyVa ipropertyVa;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 352719065)) % 23U)
        {
          case 0:
            flag1 = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Who, "Player");
            num1 = (int) num2 * -809030556 ^ 1446808457;
            continue;
          case 1:
            int num3 = flag2 ? 1879144843 : (num3 = 705385414);
            num1 = num3 ^ (int) num2 * -1891143340;
            continue;
          case 2:
            flag2 = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
            num1 = (int) num2 * -1163506378 ^ -1948949411;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 586304365 ^ -173078553;
            continue;
          case 5:
            int num4 = flag3 ? -676937890 : (num4 = -1921952743);
            num1 = num4 ^ (int) num2 * -1315882911;
            continue;
          case 6:
            goto label_3;
          case 7:
            num1 = (int) num2 * 1320142079 ^ -671873474;
            continue;
          case 8:
            num1 = (int) num2 * -1657251087 ^ -188222444;
            continue;
          case 9:
            num1 = 637452475;
            continue;
          case 10:
            GameController.Game.Deck.RemoveAt(0);
            num1 = (int) num2 * 572619186 ^ 1324970635;
            continue;
          case 11:
            num1 = 1056851521;
            continue;
          case 12:
            num1 = (int) num2 * -1141752126 ^ 1802782595;
            continue;
          case 13:
            int num5 = !flag1 ? -812736865 : (num5 = -255720438);
            num1 = num5 ^ (int) num2 * 518362977;
            continue;
          case 14:
            GameController.Game.Machine.Hand2.Add(ipropertyVa);
            num1 = 1608898146;
            continue;
          case 15:
            num1 = 683475212;
            continue;
          case 16:
            GameController.Game.Player.Hand1.Add(ipropertyVa);
            num1 = (int) num2 * -1377827941 ^ 1589661431;
            continue;
          case 17:
            num1 = (int) num2 * -511050285 ^ -1585106370;
            continue;
          case 18:
            flag3 = ServerExcept.\u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮(Hand, "Hand1");
            num1 = (int) num2 * -1168598846 ^ -698134185;
            continue;
          case 19:
            num1 = (int) num2 * 149430376 ^ -1455886059;
            continue;
          case 20:
            ipropertyVa = GameController.Game.Deck.ElementAt<IPropertyVa>(0);
            num1 = (int) num2 * 1747091651 ^ 591472812;
            continue;
          case 21:
            GameController.Game.Player.Hand2.Add(ipropertyVa);
            num1 = 1305195095;
            continue;
          case 22:
            GameController.Game.Machine.Hand1.Add(ipropertyVa);
            num1 = (int) num2 * 626006212 ^ -684534375;
            continue;
          default:
            goto label_25;
        }
      }
label_3:
      return;
label_25:;
    }

    static System.Type \u202C⁫‍⁫⁭‌⁫‫‪⁮‍‌‎‪⁭‏‭‭‬‬‮⁮⁪⁯⁭‏‍‫⁮⁪⁭‏⁮​⁭‏‭⁭⁪‪‮([In] RuntimeTypeHandle obj0) => System.Type.GetTypeFromHandle(obj0);

    static Array \u206A‌‮‮⁪​‫⁯‬⁭‫⁬‏‭‭⁫​‬⁮‌‫⁬‎⁭​‏‍⁭‎‪⁯⁮‌‭‎‍‎⁯‪⁯‮([In] System.Type obj0) => Enum.GetValues(obj0);

    static IEnumerator \u202B‪⁭‫​‎‏‫‍⁯⁯⁭‎‬⁮‭‪‍‌‪‫‫‪‌⁫⁪‌⁭⁯‏‮‪‫‎⁪​⁬‏⁫‏‮([In] Array obj0) => obj0.GetEnumerator();

    static object \u202A‮⁬‫‫⁫‭⁯‏⁫⁫‎⁮⁮⁮‮‏⁬‬‎​​​‏‎‬‮‪‍‌⁬‎‭‎‍‮⁫⁫‮⁬‮([In] IEnumerator obj0) => obj0.Current;

    static bool \u206C‭⁮‫‪‫‬​⁪⁮⁭⁪‬⁫‌⁭‌​‏⁮⁯‏‭⁭‎‭​‭‪‭‭⁬‏⁪⁫⁫​‌‌⁮‮([In] IEnumerator obj0) => obj0.MoveNext();

    static void \u200D⁪‌‪⁬‭‬⁪‎⁯⁭⁭‮⁬‪‫⁭⁮⁭‮‫‌‬‎⁫‎⁭⁭‮‬‌‫‏‬‪‭⁭‪‭⁯‮([In] IDisposable obj0) => obj0.Dispose();

    static Random \u206C‪⁪‬‬⁭‪⁬‭⁪⁭‎⁭⁯‌⁭⁬‬⁮​‪‌‫⁫‏⁬‪⁫⁫‫‭‎⁯⁮⁫‬‮‭⁪‌‮() => new Random();

    static int \u200B‌‬⁭‬‎‬⁯⁪‪‫‌‍⁭⁫‍‭⁪⁯‭⁬​‫​⁫‏‎⁬⁪⁫⁮‎‍‪‪⁭‮‬⁫⁯‮([In] Random obj0, [In] int obj1, [In] int obj2) => obj0.Next(obj1, obj2);

    static DialogResult \u206C⁭‏⁯‌⁯⁭‭‌‬‬‬⁮​‪‭⁬⁫‭‏⁫‏‌‭‭⁯​⁫‏⁭‫⁮‮‍⁬⁭‭​‭‏‮([In] Form obj0) => obj0.ShowDialog();

    static bool \u206F‏‌‌⁫⁯‪⁪‪⁮‍⁪⁮‮⁯‮‎⁭‏‪‎‍‍‬⁮⁬‌‎⁮⁮‪‬‫‍⁪‎‭⁯⁮‎‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
