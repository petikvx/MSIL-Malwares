// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: PInvokeAttribut, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D5FBD274-2C02-4186-9C35-1EE6A67C7338
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1aab9260ecb3ef6b3d07882eff498982f5146fb73a61ff77f8ea0dfbfb02cde7.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 137324010;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 940485213)) % 7U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -274962632 ^ 1393094694;
              continue;
            case 2:
              num1 = (int) num2 * 532686968 ^ 988309886;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 1799412548;
              continue;
            case 4:
              goto label_1;
            case 5:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -980807943 ^ 358302917;
              continue;
            case 6:
              int num3 = !flag ? 1646933433 : (num3 = 1728971260);
              num1 = num3 ^ (int) num2 * 973227219;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 1940608451;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 768894601)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1971889734 ^ -665978670;
              continue;
            case 3:
              int num3 = flag ? -1633200357 : (num3 = -117265623);
              num1 = num3 ^ (int) num2 * 2032875193;
              continue;
            case 4:
              num1 = (int) num2 * -288298996 ^ 1548693586;
              continue;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1864129672 ^ -591591247;
              continue;
            case 6:
              this.m_Dict.Add(aKey, value);
              num1 = 144652461;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 707705985;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 276369516)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -526099581 ^ 1571584443;
              continue;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -976328612 ^ 1694502829;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = 799929011;
              continue;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1170674546 ^ 1436296930;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 1064141009 : (num4 = 1378754170);
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1316441778;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1773810751)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -490061574 ^ 1274706828;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 379429942 ^ 1820316256;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 1918502571 : (num4 = 1376430424);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count => this.m_Dict.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 2141994719;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1838957116)) % 15U)
        {
          case 0:
            num1 = (int) num2 * -779010699 ^ 742759803;
            continue;
          case 1:
            num1 = (int) num2 * -355766435 ^ 46916739;
            continue;
          case 2:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1952221493 ^ 421760756;
            continue;
          case 3:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1185777740;
            continue;
          case 4:
            num1 = (int) num2 * 38918896 ^ -1752699718;
            continue;
          case 5:
            this.m_Dict.Add(aKey, aItem);
            num1 = 566490528;
            continue;
          case 6:
            num1 = (int) num2 * 526134039 ^ -301325553;
            continue;
          case 7:
            goto label_1;
          case 8:
            goto label_3;
          case 9:
            num1 = 744947251;
            continue;
          case 10:
            int num3 = flag2 ? -342644926 : (num3 = -1052267621);
            num1 = num3 ^ (int) num2 * 2123332570;
            continue;
          case 11:
            int num4 = !flag1 ? 1071786281 : (num4 = 1939515751);
            num1 = num4 ^ (int) num2 * -461171811;
            continue;
          case 12:
            flag1 = !JSONClass.\u200D‌‮‏‭⁪‪‫‭‭‭‪‭⁬⁫​⁯​‭⁮‏⁮⁪‌⁮​​⁭‬‮‍⁪‫‎⁫​‎‏‪⁬‮(aKey);
            num1 = (int) num2 * 481270869 ^ -1599522007;
            continue;
          case 13:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 992072875 ^ -1480120506;
            continue;
          case 14:
            num1 = (int) num2 * -1283821519 ^ 443021082;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 472610533;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1829267027)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -1548686721 ^ 1598849169;
            continue;
          case 2:
            int num3 = this.m_Dict.ContainsKey(aKey) ? 2046462018 : (num3 = 2108174627);
            num1 = num3 ^ (int) num2 * -1244765936;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 205880917 ^ 814541541;
            continue;
          case 4:
            goto label_1;
          case 5:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -311862261 ^ 145895714;
            continue;
          case 6:
            jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = 620889204;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -622724492;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -740457874)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 2:
            num1 = (int) num2 * -1562368504 ^ -1213573806;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = -350210647;
            continue;
          case 5:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -856360409 ^ 20634210;
            continue;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1098356789 ^ 230808270;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -311379966 : (num4 = -1936040995);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 182456232;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1350069499)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1703528453 ^ 246602857;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
          if (num1 == 0)
            goto label_15;
label_1:
          int num2 = 131532667;
label_2:
          Dictionary<string, JSONNode>.Enumerator enumerator;
          KeyValuePair<string, JSONNode> N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 686109581)) % 19U)
            {
              case 0:
                goto label_10;
              case 1:
                num2 = (int) num3 * 563173645 ^ -1095065697;
                continue;
              case 3:
                N = enumerator.Current;
                this.\u003C\u003E2__current = N.Value;
                num2 = 1575957935;
                continue;
              case 4:
                enumerator = this.m_Dict.GetEnumerator();
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -591215177 ^ -1086265557;
                continue;
              case 5:
                num2 = (int) num3 * 583969044 ^ 792770823;
                continue;
              case 6:
                N = new KeyValuePair<string, JSONNode>();
                num2 = (int) num3 * 1516961137 ^ 1246771278;
                continue;
              case 7:
                this.\u003C\u003E1__state = 1;
                childs = true;
                num2 = (int) num3 * -219440155 ^ -1800811948;
                continue;
              case 8:
                enumerator = new Dictionary<string, JSONNode>.Enumerator();
                childs = false;
                num2 = (int) num3 * 1183429500 ^ 475498941;
                continue;
              case 9:
              case 10:
                this.\u003C\u003E1__state = -3;
                num2 = 207451988;
                continue;
              case 11:
                goto label_1;
              case 12:
                num2 = (int) num3 * -864876647 ^ 368377910;
                continue;
              case 13:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1709828484 ^ -1418265697;
                continue;
              case 14:
              case 18:
                goto label_15;
              case 16:
                int num4;
                num2 = num4 = num1 != 1 ? 546836968 : (num4 = 1474822481);
                continue;
              case 17:
                int num5;
                num2 = num5 = !enumerator.MoveNext() ? 1422199 : (num5 = 2074276046);
                continue;
              default:
                goto label_18;
            }
          }
label_10:
          childs = false;
          goto label_18;
label_15:
          this.\u003C\u003E1__state = -1;
          num2 = 1665131764;
          goto label_2;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_18:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 2063157356;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1387469303)) % 20U)
          {
            case 0:
              num2 = (int) num3 * -747828605 ^ -1701489936;
              continue;
            case 2:
              N = enumerator.Current;
              num2 = 80325807;
              continue;
            case 3:
              enumerator1 = false;
              num2 = 780315230;
              continue;
            case 4:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 278407841;
              continue;
            case 5:
              num2 = (int) num3 * -1305075150 ^ -1237805978;
              continue;
            case 6:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * -794116873 ^ -68246015;
              continue;
            case 7:
              goto label_12;
            case 8:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? 242247519 : (num4 = 1733707701);
              continue;
            case 11:
            case 13:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              enumerator = this.m_Dict.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 1939016187;
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -2075925237 ^ 1306026012;
              continue;
            case 14:
              int num5;
              num2 = num5 = num1 != 1 ? 588457706 : (num5 = 1445517925);
              continue;
            case 15:
              int num6 = num1 == 0 ? 494025134 : (num6 = 2028609247);
              num2 = num6 ^ (int) num3 * -641363222;
              continue;
            case 16:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 1397545812 ^ -312282773;
              continue;
            case 17:
              goto label_1;
            case 18:
              num2 = (int) num3 * 462144956 ^ -2113801631;
              continue;
            case 19:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              enumerator1 = false;
              num2 = (int) num3 * -1744646897 ^ 910678923;
              continue;
            default:
              goto label_19;
          }
        }
label_12:
        enumerator1 = true;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "{";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_5:
        int num1 = !enumerator.MoveNext() ? -2051765572 : (num1 = -1673014733);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -182097084)) % 9U)
          {
            case 0:
              num1 = -1673014733;
              continue;
            case 1:
              goto label_5;
            case 2:
              int num3 = !flag ? 34293168 : (num3 = 1048367287);
              num1 = num3 ^ (int) num2 * 218206884;
              continue;
            case 3:
              current = enumerator.Current;
              num1 = -547276007;
              continue;
            case 4:
              flag = JSONClass.\u200B​‌‪⁫‍‭‬‪⁮‍⁪‎‫‫⁪⁫‮‫‎‫‏‮⁮‫‌⁬⁯⁬‏⁮‌‫‮⁯⁮‮‌⁯‭‮(str1) > 2;
              num1 = (int) num2 * 1066082884 ^ 2121177975;
              continue;
            case 5:
              str1 = JSONClass.\u200D‍‏‪⁯⁮‫‌⁮‪‏⁪‍⁫⁭⁪‏‌‍⁭‬⁬‮‬⁫⁫‎⁯⁬‎‭⁪‭⁬‏‏⁭‪‬‏‮(str1, ", ");
              num1 = (int) num2 * 645192608 ^ -721823828;
              continue;
            case 6:
              str1 = JSONClass.\u200F‪​‏⁬‮⁫⁪⁭‬⁯⁭⁮⁪‌‪‫⁫‬⁬⁬‎‬⁭‍‪⁯‏‍⁮‎‪⁪‏‬⁪‪‫‬‫‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206B⁫‌‮‫​⁮‍‪‍‮⁬⁫‫‎‍‬⁪⁪​‪‮‭​​‮⁭‪‫‏‌‏‏⁯​‍‍‫⁭‏‮((object) current.Value)
              });
              num1 = -1808498606;
              continue;
            case 8:
              num1 = (int) num2 * 227906103 ^ -564959941;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -1320695635;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -182097084)) % 3U)
          {
            case 1:
              num4 = (int) num5 * 843783104 ^ -1708250850;
              continue;
            case 2:
              goto label_12;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONClass.\u200D‍‏‪⁯⁮‫‌⁮‪‏⁪‍⁫⁭⁪‏‌‍⁭‬⁬‮‬⁫⁫‎⁯⁬‎‭⁪‭⁬‏‏⁭‪‬‏‮(str1, "}");
label_17:
      int num6 = -886209054;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -182097084)) % 4U)
        {
          case 1:
            num6 = (int) num7 * 634342810 ^ 21176006;
            continue;
          case 2:
            str3 = str2;
            num6 = (int) num7 * 732540287 ^ -1610723721;
            continue;
          case 3:
            goto label_17;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_10:
        int num1 = !enumerator.MoveNext() ? 871698922 : (num1 = 3963844);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1751847495)) % 10U)
          {
            case 0:
              goto label_10;
            case 1:
              flag = JSONClass.\u200B​‌‪⁫‍‭‬‪⁮‍⁪‎‫‫⁪⁫‮‫‎‫‏‮⁮‫‌⁬⁯⁬‏⁮‌‫‮⁯⁮‮‌⁯‭‮(str1) > 3;
              num1 = (int) num2 * 1258575365 ^ 1447851708;
              continue;
            case 2:
              str1 = JSONClass.\u200F‪​‏⁬‮⁫⁪⁭‬⁯⁭⁮⁪‌‪‫⁫‬⁬⁬‎‬⁭‍‪⁯‏‍⁮‎‪⁪‏‬⁪‪‫‬‫‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200D‍‏‪⁯⁮‫‌⁮‪‏⁪‍⁫⁭⁪‏‌‍⁭‬⁬‮‬⁫⁫‎⁯⁬‎‭⁪‭⁬‏‏⁭‪‬‏‮(aPrefix, "   "))
              });
              num1 = (int) num2 * -840161923 ^ -422181066;
              continue;
            case 3:
              num1 = (int) num2 * 1111474574 ^ 1357271993;
              continue;
            case 4:
              int num3 = !flag ? -1438188283 : (num3 = -1680526107);
              num1 = num3 ^ (int) num2 * 418461664;
              continue;
            case 6:
              str1 = JSONClass.\u200D‍‏‪⁯⁮‫‌⁮‪‏⁪‍⁫⁭⁪‏‌‍⁭‬⁬‮‬⁫⁫‎⁯⁬‎‭⁪‭⁬‏‏⁭‪‬‏‮(str1, ", ");
              num1 = (int) num2 * -696443102 ^ 262059393;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = 708416352;
              continue;
            case 8:
              str1 = JSONClass.\u206B‪‌⁭‍‎‍​⁯‬‭⁮‮⁫⁫⁪‎‭‭‬‬⁫⁮‫‮⁬‮‍‪‌⁪‫⁯​‏⁫‎‪‌⁫‮(str1, "\n", aPrefix, "   ");
              num1 = 1779163611;
              continue;
            case 9:
              num1 = 3963844;
              continue;
            default:
              goto label_17;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_13:
        int num4 = 1151783863;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 1751847495)) % 3U)
          {
            case 0:
              goto label_13;
            case 1:
              num4 = (int) num5 * -1135487058 ^ -931286004;
              continue;
            default:
              goto label_16;
          }
        }
label_16:;
      }
label_17:
      string str2 = JSONClass.\u206B‪‌⁭‍‎‍​⁯‬‭⁮‮⁫⁫⁪‎‭‭‬‬⁫⁮‫‮⁬‮‍‪‌⁪‫⁯​‏⁫‎‪‌⁫‮(str1, "\n", aPrefix, "}");
label_18:
      int num6 = 1315317618;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1751847495)) % 3U)
        {
          case 1:
            num6 = (int) num7 * -1852178446 ^ -552535513;
            continue;
          case 2:
            goto label_18;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -190726074;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -863865588)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 711699824 ^ 835926975;
            continue;
          case 1:
            JSONClass.\u202D⁪⁬‍⁯⁯⁬‌‪⁪​⁬⁬⁫‌⁬​‏​​‮⁭‮⁯‍⁭‌‎⁪⁫⁯⁪⁬‫⁭​‎⁭​⁯‮(aWriter, (byte) 2);
            num1 = (int) num2 * 940990533 ^ -254762217;
            continue;
          case 2:
            goto label_1;
          case 4:
            JSONClass.\u200B⁯‍‫⁮​‍⁯‎‫‬⁫‫⁯⁬‎​⁯‭‬⁬‎⁯⁯‫⁫​⁯‮⁯⁫‎‭⁮⁯‌⁪⁭⁮‮‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1895742745 ^ -979526112;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? -316551383 : (num3 = -617284208);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -863865588)) % 7U)
          {
            case 0:
              num3 = (int) num4 * -252817141 ^ -345198671;
              continue;
            case 1:
              JSONClass.\u206B⁮‎‭⁪⁫‪‭‬‏⁭‍⁫‮‍‪‌‍‌⁬‪‪⁪⁮⁬‬‏​⁪⁭⁮‫​⁮‮⁯‌‌‎‫‮(aWriter, current);
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -323168950 ^ -392854444;
              continue;
            case 2:
              goto label_16;
            case 3:
              num3 = (int) num4 * 229251355 ^ 251553790;
              continue;
            case 4:
              num3 = -316551383;
              continue;
            case 5:
              goto label_12;
            case 6:
              current = enumerator.Current;
              num3 = -964917616;
              continue;
            default:
              goto label_10;
          }
        }
label_16:
        return;
label_10:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 794667344;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 820282951)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1227183404 ^ 1642083965;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u200D‌‮‏‭⁪‪‫‭‭‭‪‭⁬⁫​⁯​‭⁮‏⁮⁪‌⁮​​⁭‬‮‍⁪‫‎⁫​‎‏‪⁬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B​‌‪⁫‍‭‬‪⁮‍⁪‎‫‫⁪⁫‮‫‎‫‏‮⁮‫‌⁬⁯⁬‏⁮‌‫‮⁯⁮‮‌⁯‭‮([In] string obj0) => obj0.Length;

    static string \u200D‍‏‪⁯⁮‫‌⁮‪‏⁪‍⁫⁭⁪‏‌‍⁭‬⁬‮‬⁫⁫‎⁯⁬‎‭⁪‭⁬‏‏⁭‪‬‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206B⁫‌‮‫​⁮‍‪‍‮⁬⁫‫‎‍‬⁪⁪​‪‮‭​​‮⁭‪‫‏‌‏‏⁯​‍‍‫⁭‏‮([In] object obj0) => obj0.ToString();

    static string \u200F‪​‏⁬‮⁫⁪⁭‬⁯⁭⁮⁪‌‪‫⁫‬⁬⁬‎‬⁭‍‪⁯‏‍⁮‎‪⁪‏‬⁪‪‫‬‫‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B‪‌⁭‍‎‍​⁯‬‭⁮‮⁫⁫⁪‎‭‭‬‬⁫⁮‫‮⁬‮‍‪‌⁪‫⁯​‏⁫‎‪‌⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202D⁪⁬‍⁯⁯⁬‌‪⁪​⁬⁬⁫‌⁬​‏​​‮⁭‮⁯‍⁭‌‎⁪⁫⁯⁪⁬‫⁭​‎⁭​⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200B⁯‍‫⁮​‍⁯‎‫‬⁫‫⁯⁬‎​⁯‭‬⁬‎⁯⁯‫⁫​⁯‮⁯⁫‎‭⁮⁯‌⁪⁭⁮‮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206B⁮‎‭⁪⁫‪‭‬‏⁭‍⁫‮‍‪‌‍‌⁬‪‪⁪⁮⁬‬‏​⁪⁭⁮‫​⁮‮⁯‌‌‎‫‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
