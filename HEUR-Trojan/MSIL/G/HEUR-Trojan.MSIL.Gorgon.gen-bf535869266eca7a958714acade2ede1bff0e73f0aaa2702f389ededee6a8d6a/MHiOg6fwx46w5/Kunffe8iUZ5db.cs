// Decompiled with JetBrains decompiler
// Type: MHiOg6fwx46w5.Kunffe8iUZ5db
// Assembly: Udby4Jt48oXkJ, Version=3.17.2.31, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 37899E89-D673-4F5B-A193-2E4DF6A54096
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-bf535869266eca7a958714acade2ede1bff0e73f0aaa2702f389ededee6a8d6a.exe

using EIo6AJKh34VRt;
using GzLNa02wmHhIS;
using MHvm0pAtAnPol;
using Microsoft.Win32.SafeHandles;
using System;
using System.Security;
using System.Security.Cryptography;
using System.Security.Permissions;
using Z5S7pBdfvOrz0;

namespace MHiOg6fwx46w5
{
  internal sealed class Kunffe8iUZ5db : RSA, ICngAsymmetricAlgorithm, ICngAlgorithm
  {
    private static KeySizes[] x2E37Sxigy0uZ = new KeySizes[1]
    {
      new KeySizes(384, 16384, 8)
    };
    private CngKey \u0035o3z4eACWrwuu;
    private xHKvV3pIfvcV9 \u0035Mxd0zKIkZzGs = xHKvV3pIfvcV9.Oaep;
    private CngAlgorithm z3zwxEiKVQo5c = CngAlgorithm.Sha256;
    private xHKvV3pIfvcV9 TnkRZVEjcObRH = xHKvV3pIfvcV9.Pkcs1;
    private CngAlgorithm \u0033zxD5pNZIPULU = CngAlgorithm.Sha256;
    private int XkVWL5gSQrVKL = 20;

    public Kunffe8iUZ5db()
      : this(2048)
    {
    }

    public Kunffe8iUZ5db(int keySize)
    {
      this.LegalKeySizesValue = Kunffe8iUZ5db.x2E37Sxigy0uZ;
      this.KeySize = keySize;
    }

    [SecurityCritical]
    public Kunffe8iUZ5db(CngKey key)
    {
      if (key == null)
        throw new ArgumentNullException(nameof (key));
      this.LegalKeySizesValue = Kunffe8iUZ5db.x2E37Sxigy0uZ;
      new SecurityPermission(SecurityPermissionFlag.UnmanagedCode).Assert();
      this.tXZKTFFltsPg0 = CngKey.Open(key.Handle, key.IsEphemeral ? CngKeyHandleOpenOptions.EphemeralKey : CngKeyHandleOpenOptions.None);
      CodeAccessPermission.RevertAssert();
    }

    public CngAlgorithm XbXav4b6n4sHk
    {
      get => this.z3zwxEiKVQo5c;
      set => this.z3zwxEiKVQo5c = !(value == (CngAlgorithm) null) ? value : throw new ArgumentNullException(nameof (value));
    }

    public xHKvV3pIfvcV9 ylZ9RvdRBbEpW
    {
      get => this.\u0035Mxd0zKIkZzGs;
      set => this.\u0035Mxd0zKIkZzGs = value == xHKvV3pIfvcV9.Oaep || value == xHKvV3pIfvcV9.Pkcs1 ? value : throw new ArgumentOutOfRangeException(nameof (value));
    }

    public CngKey tXZKTFFltsPg0
    {
      [SecurityCritical, SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)] get
      {
        if (this.\u0035o3z4eACWrwuu != null && this.\u0035o3z4eACWrwuu.KeySize != this.KeySize)
        {
          this.\u0035o3z4eACWrwuu.Dispose();
          this.\u0035o3z4eACWrwuu = (CngKey) null;
        }
        if (this.\u0035o3z4eACWrwuu == null)
        {
          CngKeyCreationParameters creationParameters = new CngKeyCreationParameters();
          CngProperty cngProperty = new CngProperty("Length", BitConverter.GetBytes(this.KeySize), CngPropertyOptions.None);
          creationParameters.Parameters.Add(cngProperty);
          this.\u0035o3z4eACWrwuu = CngKey.Create(new CngAlgorithm("RSA"), (string) null, creationParameters);
        }
        return this.\u0035o3z4eACWrwuu;
      }
      private set
      {
        if (value.AlgorithmGroup != CngAlgorithmGroup.Rsa)
          throw new ArgumentException("Key Must Be Rsa", nameof (value));
        if (this.\u0035o3z4eACWrwuu != null)
          this.\u0035o3z4eACWrwuu.Dispose();
        this.\u0035o3z4eACWrwuu = value;
        this.KeySize = this.\u0035o3z4eACWrwuu.KeySize;
      }
    }

    private SafeNCryptKeyHandle jcYJqWNJiOLOj
    {
      [SecurityCritical, SecurityPermission(SecurityAction.Assert, UnmanagedCode = true)] get => this.tXZKTFFltsPg0.Handle;
    }

    public virtual string mn9y55qqN35Yc => "RSA-PKCS1-KeyEx";

    public CngProvider SRmdS3wP0tOsb
    {
      [SecurityCritical] get => this.tXZKTFFltsPg0.Provider;
    }

    public virtual string kfOZi4P2RT0dR => "http://www.w3.org/2000/09/xmldsig#rsa-sha1";

    public CngAlgorithm b0d21TBxV5kVk
    {
      get => this.\u0033zxD5pNZIPULU;
      set => this.\u0033zxD5pNZIPULU = !(value == (CngAlgorithm) null) ? value : throw new ArgumentNullException(nameof (value));
    }

    public xHKvV3pIfvcV9 LKnc8kyRH1U2J
    {
      get => this.TnkRZVEjcObRH;
      set => this.TnkRZVEjcObRH = value == xHKvV3pIfvcV9.Pkcs1 || value == xHKvV3pIfvcV9.Pss ? value : throw new ArgumentOutOfRangeException(nameof (value));
    }

    public int fOCVWMZa5ItDp
    {
      get => this.XkVWL5gSQrVKL;
      set => this.XkVWL5gSQrVKL = value >= 0 ? value : throw new ArgumentOutOfRangeException(nameof (value));
    }

    protected override void Dispose(bool disposing)
    {
      if (!disposing || this.\u0035o3z4eACWrwuu == null)
        return;
      this.\u0035o3z4eACWrwuu.Dispose();
    }

    private static KeyContainerPermission TbAGP28flBtoV(
      CngKey OKjYnrZlBvi9i,
      KeyContainerPermissionFlags iXbWMJzaRMJNi)
    {
      if (OKjYnrZlBvi9i.IsEphemeral || string.IsNullOrEmpty(OKjYnrZlBvi9i.KeyName))
        return (KeyContainerPermission) null;
      return new KeyContainerPermission(PermissionState.None)
      {
        AccessEntries = {
          new KeyContainerPermissionAccessEntry(OKjYnrZlBvi9i.KeyName, iXbWMJzaRMJNi)
          {
            ProviderName = OKjYnrZlBvi9i.Provider.Provider
          }
        }
      };
    }

    private HashAlgorithm \u0036RQaW1KGv65Ke()
    {
      if (this.\u0033zxD5pNZIPULU == CngAlgorithm.Sha256)
        return (HashAlgorithm) new SHA256Cng();
      if (this.\u0033zxD5pNZIPULU == CngAlgorithm.Sha384)
        return (HashAlgorithm) new SHA384Cng();
      if (this.\u0033zxD5pNZIPULU == CngAlgorithm.Sha512)
        return (HashAlgorithm) new SHA512Cng();
      throw new InvalidOperationException("Invalid Signature Hash Algorithm");
    }

    public byte[] dOSpa6tJ197gU(byte[] poiEdpzgOeFVV) => poiEdpzgOeFVV != null ? this.K8lhCrKXWIL1M(poiEdpzgOeFVV, 0, poiEdpzgOeFVV.Length) : throw new ArgumentNullException("data");

    public byte[] K8lhCrKXWIL1M(byte[] YnANQJ7rNpPTD, int NpQYALe2e71Kh, int ncb1xJBGfRRi2)
    {
      if (YnANQJ7rNpPTD == null)
        throw new ArgumentNullException("data");
      if (NpQYALe2e71Kh < 0)
        throw new ArgumentOutOfRangeException("offset");
      if (ncb1xJBGfRRi2 < 0)
        throw new ArgumentOutOfRangeException("count");
      if (ncb1xJBGfRRi2 > YnANQJ7rNpPTD.Length - NpQYALe2e71Kh)
        throw new ArgumentOutOfRangeException("count");
      using (HashAlgorithm hashAlgorithm = this.\u0036RQaW1KGv65Ke())
        return this.XYBPfvi5Q02NX(hashAlgorithm.ComputeHash(YnANQJ7rNpPTD, NpQYALe2e71Kh, ncb1xJBGfRRi2));
    }

    public byte[] XYBPfvi5Q02NX(byte[] r0oDqkvII5sjo) => this.grzLmLVfqxh5Y(r0oDqkvII5sjo, this.b0d21TBxV5kVk);

    [SecurityCritical]
    public byte[] grzLmLVfqxh5Y(byte[] ooODgsATbap9r, CngAlgorithm fEQtCnMLrmAW6)
    {
      if (ooODgsATbap9r == null)
        throw new ArgumentNullException("hash");
      if (fEQtCnMLrmAW6 == (CngAlgorithm) null)
        throw new ArgumentNullException("hashAlgorithm");
      CngKey tXzktfFltsPg0 = this.tXZKTFFltsPg0;
      Kunffe8iUZ5db.TbAGP28flBtoV(tXzktfFltsPg0, KeyContainerPermissionFlags.Sign)?.Demand();
      new SecurityPermission(SecurityPermissionFlag.UnmanagedCode).Assert();
      SafeNCryptKeyHandle handle = tXzktfFltsPg0.Handle;
      CodeAccessPermission.RevertAssert();
      switch (this.LKnc8kyRH1U2J)
      {
        case xHKvV3pIfvcV9.Pkcs1:
          return Gm6Qi1rUezPej.MxVNS59KLXCPn(handle, ooODgsATbap9r, fEQtCnMLrmAW6.Algorithm);
        case xHKvV3pIfvcV9.Pss:
          return Gm6Qi1rUezPej.XCFdp8McEkplt(handle, ooODgsATbap9r, fEQtCnMLrmAW6.Algorithm, this.fOCVWMZa5ItDp);
        default:
          throw new InvalidOperationException("Unsupported Padding Mode");
      }
    }

    public virtual byte[] NYhyiR3EGU486(byte[] xGF7eKSqvd3x0) => throw new NotImplementedException();

    public virtual byte[] sMTQFpv5V6HMc(byte[] _param1) => throw new NotImplementedException();

    public virtual RSAParameters g0EYJISM4dbnt(bool dJ5idzOa4iH22) => throw new NotImplementedException();

    public virtual void scblHTf8HlIZd(RSAParameters btNUwGnqWq9N1) => throw new NotImplementedException();
  }
}
