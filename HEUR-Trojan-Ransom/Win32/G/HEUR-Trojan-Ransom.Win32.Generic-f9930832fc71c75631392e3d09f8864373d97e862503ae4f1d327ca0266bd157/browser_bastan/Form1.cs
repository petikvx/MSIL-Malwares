// Decompiled with JetBrains decompiler
// Type: browser_bastan.Form1
// Assembly: Intel(R) Common User File, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E873FCA7-71FD-478F-BADE-44DBAA4F14CF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-f9930832fc71c75631392e3d09f8864373d97e862503ae4f1d327ca0266bd157.exe

using e3nXyWx54eXrMCJOPu;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace browser_bastan
{
  public class Form1 : Form
  {
    private const int GWL_EXSTYLE = -20;
    private const int WS_EX_TOOLWINDOW = 128;
    private const int INTERNET_OPTION_END_BROWSER_SESSION = 42;
    private string ana;
    private string baba;
    private Queue<KeyValuePair<string, string>> kelimelistesi;
    private string kelime;
    private string domain;
    private int suankisayfa;
    private Dictionary<string, bool> gezilenler;
    private Random rnd;
    private IContainer components;
    private WebBrowser webBrowser1;

    [DllImport("user32.dll")]
    public static extern bool SetForegroundWindow(IntPtr hWnd);

    [DllImport("user32.dll")]
    public static extern int SetWindowLong(IntPtr window, int index, int value);

    [DllImport("user32.dll")]
    public static extern int GetWindowLong(IntPtr window, int index);

    [DllImport("winmm.dll")]
    public static extern int sndPlaySound(string lpszSoundName, int uFlags);

    [DllImport("wininet.dll", SetLastError = true)]
    private static extern bool InternetSetOption(
      IntPtr hInternet,
      int dwOption,
      IntPtr lpBuffer,
      int lpdwBufferLength);

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Form1()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void webBrowser1_NewWindow(object sender, CancelEventArgs e)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Basla()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void KelimeleriCek()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ButonTikla(string attribute, string value)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void webBrowser1_DocumentCompleted(
      object sender,
      WebBrowserDocumentCompletedEventArgs e)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Ilerle()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RastGeleGez()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private bool NormalLink(string url) => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DeleteCache()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void TextBoxYaz(string att, string attname, string attvalue)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private bool LinkeTikla(string url) => true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SureliIslet(Form1.SureliFonksiyon x, int min, int max)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PanelAyarla()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Form1_Load(object sender, EventArgs e)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ieKontrol()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InitializeComponent()
    {
    }

    static Form1() => eAcKHQHop2SvdpjExo.eHoKwN9Np();

    private delegate void SureliFonksiyon();
  }
}
