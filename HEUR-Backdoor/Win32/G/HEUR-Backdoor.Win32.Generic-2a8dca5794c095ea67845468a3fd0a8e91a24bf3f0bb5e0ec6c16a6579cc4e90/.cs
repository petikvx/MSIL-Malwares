// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Protected, Version=6.2.8400.0, Culture=neutral, PublicKeyToken=null
// MVID: 52CBE997-50C3-42B2-A704-C908D57869A5
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Backdoor.Win32.Generic-2a8dca5794c095ea67845468a3fd0a8e91a24bf3f0bb5e0ec6c16a6579cc4e90.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Reflection.Emit;
using System.Threading;

internal sealed class \uE01D : IDisposable
{
  public static \uE01D \uE000 = (\uE01D) null;
  private static readonly object \uE001 = new object();
  private ReaderWriterLock \uE002;
  private Dictionary<int, \uE01F> \uE003;
  private \uE017 \uE004;
  private \uE019 \uE005;

  private \uE01D()
  {
    this.\uE002 = new ReaderWriterLock();
label_3:
    int num = \uE026.\uE000(37);
    while (true)
    {
      switch ((num ^ 88) + 86)
      {
        case 0:
          this.\uE003 = new Dictionary<int, \uE01F>();
          num = -12;
          continue;
        case 1:
          GC.SuppressFinalize((object) this.\uE004);
          num = -10;
          continue;
        case 2:
          this.\uE004 = new \uE017();
          num = \uE026.\uE000(24);
          continue;
        case 3:
          this.\uE005 = new \uE019();
          num = -13;
          continue;
        case 4:
          goto label_2;
        default:
          goto label_3;
      }
    }
label_2:;
  }

  public static \uE01D \uE000
  {
    get
    {
      if ((\uE01D.\uE000 == null ? 0 : 1) == 0)
      {
        try
        {
          Monitor.Enter(\uE01D.\uE001);
          if ((\uE01D.\uE000 == null ? 0 : 1) == 0)
          {
            \uE01D.\uE000 = new \uE01D();
            GC.SuppressFinalize((object) \uE01D.\uE000);
          }
        }
        finally
        {
          Monitor.Exit(\uE01D.\uE001);
        }
      }
      return \uE01D.\uE000;
    }
  }

  ~\uE01D() => this.\uE000(false);

  public void \uE000(bool _param1)
  {
    try
    {
      if ((!_param1 ? 1 : 0) != 0)
        return;
      this.\uE004.Dispose();
    }
    finally
    {
      this.\uE004 = (\uE017) null;
label_8:
      int num1 = \uE000.\uE000(48);
      int num2 = -12;
      while (true)
      {
        switch ((num2 ^ 95) + 87)
        {
          case 0:
            switch (num1 + 92)
            {
              case 0:
                this.\uE003 = (Dictionary<int, \uE01F>) null;
                num1 = -6;
                goto label_3;
              case 1:
                this.\uE005 = (\uE019) null;
                num1 = -7;
                goto label_3;
              case 2:
                goto label_12;
              default:
                num2 = -11;
                continue;
            }
          case 1:
            goto label_8;
          case 2:
label_3:
            num1 ^= 95;
            break;
        }
        num2 = \uE016.\uE000(96);
      }
label_12:;
    }
  }

  public void Dispose()
  {
    this.\uE000(true);
    GC.SuppressFinalize((object) this);
  }

  public static object \uE000(int _param0, object _param1, params object[] _param2)
  {
    \uE01F obj;
    try
    {
      obj = \uE01D.\uE000.\uE006(_param0);
    }
    catch (Exception ex)
    {
      throw new InvalidOperationException(string.Format("Failed to load dynamic method {0}: {1}", (object) _param0, (object) ex.Message), ex);
    }
    try
    {
      return obj.\uE000(_param1, _param2);
    }
    catch (TargetInvocationException ex)
    {
      if ((ex.InnerException == null ? 1 : 0) == 0)
        throw ex.InnerException;
      throw;
    }
  }

  public static Stream \uE004(string _param0) => \uE01D.\uE005(_param0);

  private static Stream \uE005(string _param0) => (Stream) null;

  private \uE01F \uE006(int _param1)
  {
    this.\uE002.AcquireReaderLock(-1);
    try
    {
      \uE01F obj;
      if (this.\uE003.TryGetValue(_param1, out obj))
        return obj;
      LockCookie writerLock = this.\uE002.UpgradeToWriterLock(-1);
      try
      {
        if (this.\uE003.TryGetValue(_param1, out obj))
          return obj;
        obj = this.\uE007(_param1);
        return obj;
      }
      finally
      {
        this.\uE002.DowngradeFromWriterLock(ref writerLock);
      }
    }
    finally
    {
      this.\uE002.ReleaseReaderLock();
    }
  }

  private \uE01F \uE007(int _param1)
  {
    \uE018 obj1 = this.\uE004.\uE000(_param1);
    try
    {
      \uE024 obj2 = new \uE024(obj1);
label_7:
      int num1 = \uE016.\uE000(89);
      int num2 = 2;
      \uE01F obj3;
      while (true)
      {
        switch (num2 ^ 93)
        {
          case 93:
            DynamicMethod dynamicMethod;
            Type type;
            switch (num1 + 90)
            {
              case 0:
                dynamicMethod = obj2.\uE000();
                num1 = -56;
                goto label_2;
              case 1:
                if (obj1.\uE007)
                {
                  num1 = -54;
                  goto label_2;
                }
                else
                  goto label_14;
              case 2:
                type = this.\uE005.\uE003(obj1.\uE008, obj2.\uE003, obj2.\uE004);
                num1 = \uE016.\uE000(84);
                goto label_2;
              case 3:
                obj3 = new \uE01F(dynamicMethod, type, obj1.\uE006);
                num1 = -57;
                goto label_2;
              case 4:
                goto label_13;
              default:
                num2 = 3;
                continue;
            }
          case 94:
            goto label_7;
          case 95:
label_2:
            num1 ^= 96;
            break;
        }
        num2 = \uE01D.\uE000(54);
      }
label_13:
      int num3 = 0;
      goto label_15;
label_14:
      num3 = 1;
label_15:
      if (num3 == 0)
        this.\uE003[_param1] = obj3;
      return obj3;
    }
    catch (Exception ex)
    {
      throw new InvalidOperationException(string.Format("Error dynamic method {0}: {1}", (object) _param1, (object) ex.ToString()), ex);
    }
  }

  internal static int \uE000(int _param0)
  {
    switch (_param0)
    {
      case 54:
        return 0;
      case 57:
        return 125;
      case 59:
        return -21;
      case 60:
        return 5;
      case 62:
        return 2;
      case 66:
        return 126;
      case 71:
        return -7;
      case 73:
        return 8;
      default:
        return -1;
    }
  }
}
