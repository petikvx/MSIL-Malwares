// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: ModuleBuild, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 89F10113-88CA-4804-9B17-4A5288FD99D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2e269df5f1ed94bc3f07c434a6d33a1e48ce04fd0feb953bba71e2a8ced82875.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -530788706;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -165315469)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1687572808 ^ 729329682;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -714930404;
              continue;
            case 4:
              int num3 = !flag ? -1675601765 : (num3 = -1771905276);
              num1 = num3 ^ (int) num2 * -89489969;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1858168378 ^ 272492302;
              continue;
            case 6:
              num1 = (int) num2 * 1151349333 ^ 1027460189;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1465608133;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 723843055)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 20514844 ^ 991617482;
              continue;
            case 2:
              int num3 = this.m_Dict.ContainsKey(aKey) ? 1635452450 : (num3 = 1823580185);
              num1 = num3 ^ (int) num2 * -2102825834;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.m_Dict.Add(aKey, value);
              num1 = 64691591;
              continue;
            case 5:
              num1 = (int) num2 * 1057114431 ^ 92019136;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 712723116;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1505774138)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 133184142 ^ -1974502889;
              continue;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              goto label_1;
            case 4:
              int num4 = !flag ? 1573721626 : (num4 = 949078785);
              num1 = num4 ^ (int) num2 * -1457193554;
              continue;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1401220905 ^ 1647424293;
              continue;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = 1097075360;
              continue;
            case 7:
              num1 = (int) num2 * 1541661363 ^ 1937882429;
              continue;
            case 8:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -229524621 ^ -1062275418;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 1194747280;
        }
label_13:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -1979987972;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -294253576)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              int num3 = !flag ? -1960174132 : (num3 = -1338890164);
              num1 = num3 ^ (int) num2 * -567806674;
              continue;
            case 2:
              goto label_4;
            case 3:
              num1 = (int) num2 * -937416263 ^ -1647445880;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -664721531;
        goto label_2;
      }
    }

    public override int Count => this.m_Dict.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 113061989;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1813086949)) % 11U)
        {
          case 0:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -971236687 ^ -848265839;
            continue;
          case 1:
            flag = !JSONClass.\u206B⁯‍‪‪‪⁫‏⁪⁮⁮‭‮‮⁮‮‏‭‭‌⁭⁯‍‭⁯‍⁪‬‪‍​‭⁬‏​‏⁬⁫‍⁮‮(aKey);
            num1 = (int) num2 * 755266333 ^ -1577230386;
            continue;
          case 2:
            int num3 = !flag ? 1155979199 : (num3 = 1756545865);
            num1 = num3 ^ (int) num2 * 1278914048;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * -1892250961 ^ -627201732;
            continue;
          case 6:
            num1 = (int) num2 * 839284751 ^ -90887562;
            continue;
          case 7:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1740091391;
            continue;
          case 8:
            int num4 = this.m_Dict.ContainsKey(aKey) ? -434387490 : (num4 = -1484535999);
            num1 = num4 ^ (int) num2 * -1149608847;
            continue;
          case 9:
            this.m_Dict.Add(aKey, aItem);
            num1 = 534372989;
            continue;
          case 10:
            num1 = 1324970490;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 608067875;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 524563284)) % 9U)
        {
          case 0:
            jsonNode1 = this.m_Dict[aKey];
            num1 = 1720257050;
            continue;
          case 1:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 485418733 ^ -1394617841;
            continue;
          case 2:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1143923547 ^ -1799569964;
            continue;
          case 4:
            int num3 = !flag ? -687981363 : (num3 = -317160525);
            num1 = num3 ^ (int) num2 * -1040103843;
            continue;
          case 5:
            num1 = (int) num2 * 1699650436 ^ -583480373;
            continue;
          case 6:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 928848606 ^ 1890985609;
            continue;
          case 7:
            goto label_1;
          case 8:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -183578353 ^ 1468914338;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -570055824;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -2081101727)) % 8U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -891696169 ^ 496894250;
            continue;
          case 1:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 1068458804 ^ 116084779;
            continue;
          case 3:
            num1 = (int) num2 * -759381917 ^ -239183998;
            continue;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = -1142463981;
            continue;
          case 5:
            goto label_1;
          case 6:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 7:
            int num4 = flag ? 710141087 : (num4 = 152702467);
            num1 = num4 ^ (int) num2 * 1604865538;
            continue;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -1846482634;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 693028588;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 998786645)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -204985257 ^ -1595822114;
              continue;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1140854146;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -156602995)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 167786783 ^ -1268033374;
              continue;
            case 3:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * 2092255038 ^ -638284139;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_16;
label_1:
        int num2 = 2141873687;
label_2:
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1085384953)) % 21U)
          {
            case 0:
              int num4;
              num2 = num4 = num1 == 1 ? 788996958 : (num4 = 206007294);
              continue;
            case 1:
            case 10:
              goto label_16;
            case 2:
              enumerator1 = true;
              num2 = (int) num3 * 897331885 ^ -365173049;
              continue;
            case 3:
              num2 = (int) num3 * 169563546 ^ 1855098799;
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 2009164659 ^ -1770644363;
              continue;
            case 6:
              enumerator1 = false;
              num2 = (int) num3 * -329496876 ^ -464956852;
              continue;
            case 7:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * 107458923 ^ 315342096;
              continue;
            case 8:
            case 14:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 167553600;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -1092753580 ^ 1394152830;
              continue;
            case 11:
              num2 = (int) num3 * 498588386 ^ 2021042524;
              continue;
            case 12:
              N = enumerator.Current;
              num2 = 791181788;
              continue;
            case 13:
              enumerator1 = false;
              num2 = 1042809235;
              continue;
            case 15:
              num2 = (int) num3 * -1869527602 ^ 2007979093;
              continue;
            case 16:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * -304455495 ^ 994041801;
              continue;
            case 18:
              goto label_1;
            case 20:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? 1830488786 : (num5 = 1632989790);
              continue;
            default:
              goto label_19;
          }
        }
label_16:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        enumerator = this.m_Dict.GetEnumerator();
        num2 = 1896300082;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -458913659;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -712094713)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1224558363 ^ 436923537;
            continue;
          case 2:
            str1 = "{";
            num1 = (int) num2 * 307516873 ^ 651465296;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_10:
        int num3 = !enumerator.MoveNext() ? -768313471 : (num3 = -1205426563);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -712094713)) % 9U)
          {
            case 0:
              num3 = (int) num4 * 1783246236 ^ -1806195791;
              continue;
            case 1:
              num3 = (int) num4 * -768845527 ^ 1273086362;
              continue;
            case 2:
              str1 = JSONClass.\u206F⁪‍⁪‎⁪‬‏‌‭​‬⁯​‮⁭‌⁯⁫‍‬‌‮‎‬​‌⁫‬‮‍⁮‪‏⁬‬‮‬⁮‍‮(str1, ", ");
              num3 = (int) num4 * 2369655 ^ -1789106056;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -1119084471;
              continue;
            case 4:
              int num5 = JSONClass.\u200D‌⁬‪‎⁯‭‭⁭⁯⁪‭‎⁬‍⁯‭⁯⁭⁫⁮⁭⁬‭‮⁯‭⁮⁮‫‭⁮‪‬‍⁭‏​⁮⁭‮(str1) > 2 ? -1395397420 : (num5 = -956137229);
              num3 = num5 ^ (int) num4 * 2064634189;
              continue;
            case 6:
              str1 = JSONClass.\u202C⁬‏⁫‪‏‭⁬‎⁫‪⁭‮⁯⁯⁯⁮​‎‮‫‭⁪⁯‍⁫⁪‭‫⁬⁫⁫‪‌‍​‍‎‎‍‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u200B⁯⁯‫‫‍‬​‪⁯⁮⁯‭‭⁬⁭​⁫‫⁪⁮​⁬⁪‮⁭⁮‎‫⁯⁭‎‏⁬‫‌‏⁬‮‮‮((object) current.Value)
              });
              num3 = -857106273;
              continue;
            case 7:
              goto label_10;
            case 8:
              num3 = -1205426563;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = -149467998;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -712094713)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 763193112 ^ -1329739547;
              continue;
            case 2:
              goto label_17;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONClass.\u206F⁪‍⁪‎⁪‬‏‌‭​‬⁯​‮⁭‌⁯⁫‍‬‌‮‎‬​‌⁫‬‮‍⁮‪‏⁬‬‮‬⁮‍‮(str1, "}");
label_22:
      int num8 = -1799441072;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -712094713)) % 4U)
        {
          case 0:
            num8 = (int) num9 * -1437642937 ^ 1063188474;
            continue;
          case 2:
            goto label_22;
          case 3:
            str3 = str2;
            num8 = (int) num9 * 663436413 ^ 31506376;
            continue;
          default:
            goto label_26;
        }
      }
label_26:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = 1364650281;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1347093480)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -478142708 ^ 846623826;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num3 = !enumerator.MoveNext() ? 222676007 : (num3 = 2012796837);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1347093480)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -1027749281 ^ 745906613;
              continue;
            case 1:
              int num5 = JSONClass.\u200D‌⁬‪‎⁯‭‭⁭⁯⁪‭‎⁬‍⁯‭⁯⁭⁫⁮⁭⁬‭‮⁯‭⁮⁮‫‭⁮‪‬‍⁭‏​⁮⁭‮(str1) <= 3 ? -1873634276 : (num5 = -131512628);
              num3 = num5 ^ (int) num4 * -1433422784;
              continue;
            case 2:
              str1 = JSONClass.\u206F⁪‍⁪‎⁪‬‏‌‭​‬⁯​‮⁭‌⁯⁫‍‬‌‮‎‬​‌⁫‬‮‍⁮‪‏⁬‬‮‬⁮‍‮(str1, ", ");
              num3 = (int) num4 * -1461863381 ^ 1052830224;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 1584330031;
              continue;
            case 4:
              num3 = 2012796837;
              continue;
            case 5:
              str1 = JSONClass.\u206D⁫⁭⁬‍‍⁮‍⁪‪⁭‮‎‎‏‌‎‪⁬‌⁭⁫‪‬‍​‮‭‌‌‎⁯⁪⁬⁪‍‌⁮‬‎‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u202C⁬‏⁫‪‏‭⁬‎⁫‪⁭‮⁯⁯⁯⁮​‎‮‫‭⁪⁯‍⁫⁪‭‫⁬⁫⁫‪‌‍​‍‎‎‍‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206F⁪‍⁪‎⁪‬‏‌‭​‬⁯​‮⁭‌⁯⁫‍‬‌‮‎‬​‌⁫‬‮‍⁮‪‏⁬‬‮‬⁮‍‮(aPrefix, "   "))
              });
              num3 = 142517598;
              continue;
            case 7:
              num3 = (int) num4 * 534621276 ^ -1692656694;
              continue;
            case 8:
              goto label_9;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = 782077087;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1347093480)) % 3U)
          {
            case 0:
              goto label_16;
            case 2:
              num6 = (int) num7 * -1381239250 ^ 597407093;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONClass.\u206D⁫⁭⁬‍‍⁮‍⁪‪⁭‮‎‎‏‌‎‪⁬‌⁭⁫‪‬‍​‮‭‌‌‎⁯⁪⁬⁪‍‌⁮‬‎‮(str1, "\n", aPrefix, "}");
label_21:
      int num8 = 1705424361;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1347093480)) % 4U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * -506460606 ^ 1479485145;
            continue;
          case 2:
            goto label_21;
          case 3:
            num8 = (int) num9 * 736007790 ^ 1385202402;
            continue;
          default:
            goto label_25;
        }
      }
label_25:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206E‪‎‍⁭​⁭‬⁪‍⁯‮‏⁮‭⁫⁬‫‬‍⁭⁪‪⁮‌‭‌‬⁯⁭⁯‪‬⁮‫‌⁯‎‮⁭‮(aWriter, (byte) 2);
label_1:
      int num1 = 1354474547;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 602303634)) % 5U)
        {
          case 0:
            JSONClass.\u206B‫‎‫‪​⁪‫⁭⁬‎⁬‏‫‏‬‏‏‍‬⁯‫‪⁭⁮​‭‭‫⁫‌‪⁮‪‌‍⁬​‍⁭‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1622092109 ^ 2046917299;
            continue;
          case 2:
            num1 = (int) num2 * -2076829765 ^ 1438298673;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * -38617585 ^ -1819799741;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? 1580667244 : (num3 = 304436882);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 602303634)) % 7U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -1613205606 ^ -112554880;
              continue;
            case 1:
              JSONClass.\u202B‌⁭⁯⁮‍‪​​‌‬​⁪⁬‪⁪‪‬⁯‭⁫‎‭‏⁬‌⁬‫‏‌⁭‭‬⁫‬‏‫‮‫‏‮(aWriter, current);
              num3 = (int) num4 * 1194588499 ^ 1712818100;
              continue;
            case 2:
              goto label_16;
            case 3:
              goto label_14;
            case 4:
              num3 = (int) num4 * -175778456 ^ -1691480270;
              continue;
            case 5:
              num3 = 304436882;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = 1413913790;
              continue;
            default:
              goto label_10;
          }
        }
label_16:
        return;
label_10:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = -1881629369;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1404974645)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1858693465 ^ -861069174;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u206B⁯‍‪‪‪⁫‏⁪⁮⁮‭‮‮⁮‮‏‭‭‌⁭⁯‍‭⁯‍⁪‬‪‍​‭⁬‏​‏⁬⁫‍⁮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200D‌⁬‪‎⁯‭‭⁭⁯⁪‭‎⁬‍⁯‭⁯⁭⁫⁮⁭⁬‭‮⁯‭⁮⁮‫‭⁮‪‬‍⁭‏​⁮⁭‮([In] string obj0) => obj0.Length;

    static string \u206F⁪‍⁪‎⁪‬‏‌‭​‬⁯​‮⁭‌⁯⁫‍‬‌‮‎‬​‌⁫‬‮‍⁮‪‏⁬‬‮‬⁮‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200B⁯⁯‫‫‍‬​‪⁯⁮⁯‭‭⁬⁭​⁫‫⁪⁮​⁬⁪‮⁭⁮‎‫⁯⁭‎‏⁬‫‌‏⁬‮‮‮([In] object obj0) => obj0.ToString();

    static string \u202C⁬‏⁫‪‏‭⁬‎⁫‪⁭‮⁯⁯⁯⁮​‎‮‫‭⁪⁯‍⁫⁪‭‫⁬⁫⁫‪‌‍​‍‎‎‍‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206D⁫⁭⁬‍‍⁮‍⁪‪⁭‮‎‎‏‌‎‪⁬‌⁭⁫‪‬‍​‮‭‌‌‎⁯⁪⁬⁪‍‌⁮‬‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‪‎‍⁭​⁭‬⁪‍⁯‮‏⁮‭⁫⁬‫‬‍⁭⁪‪⁮‌‭‌‬⁯⁭⁯‪‬⁮‫‌⁯‎‮⁭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206B‫‎‫‪​⁪‫⁭⁬‎⁬‏‫‏‬‏‏‍‬⁯‫‪⁭⁮​‭‭‫⁫‌‪⁮‪‌‍⁬​‍⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202B‌⁭⁯⁮‍‪​​‌‬​⁪⁬‪⁪‪‬⁯‭⁫‎‭‏⁬‌⁬‫‏‌⁭‭‬⁫‬‏‫‮‫‏‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
