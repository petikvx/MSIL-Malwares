// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴄ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using My;
using SmartAssembly.Attributes;
using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartExceptionsWithUI;
using SmartAssembly.SmartUsageCore;
using SmartAssembly.Zip;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Web.Services.Protocols;
using System.Xml;

namespace Ⴈ
{
  internal sealed class Ⴄ : ReportSender
  {
    private readonly Dictionary<string, Ⴈ.Ⴄ.ႳႨ> Ⴗ;
    private readonly List<Ⴈ.Ⴄ.ႳႼ> Ⴄ;
    private SendingReportFeedbackEventArgs.Ⴅ Ⴍ;

    public Ⴄ(Guid Ⴀ, Exception Ⴗ, IWebProxy Ⴐ)
    {
      char[] chArray1 = new char[0];
      this.Ⴍ.Ⴅ = chArray1;
      Dictionary<string, object> dictionary1 = new Dictionary<string, object>();
      this.Ⴍ.Ⴍ = dictionary1;
      this.Ⴗ = new Dictionary<string, Ⴈ.Ⴄ.ႳႨ>();
      List<Ⴈ.Ⴈ> ⴈList = new List<Ⴈ.Ⴈ>();
      this.Ⴍ.Ⴃ = ⴈList;
      List<string> stringList = new List<string>();
      this.Ⴍ.Ⴗ = stringList;
      Dictionary<string, int> dictionary2 = new Dictionary<string, int>();
      this.Ⴍ.Ⴓ = dictionary2;
      this.Ⴄ = new List<Ⴈ.Ⴄ.ႳႼ>();
      Dictionary<string, int> dictionary3 = new Dictionary<string, int>();
      this.Ⴍ.Ⴄ = dictionary3;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      Guid guid;
      Exception exception;
      MemoryStream memoryStream;
      XmlWriter xmlWriter;
      string str;
      char[] chArray2;
      char[] chArray3;
      try
      {
        guid = Ⴀ;
        this.Ⴍ.Ⴈ = guid;
        exception = Ⴗ;
        this.Ⴍ.Ⴐ = exception;
        memoryStream = new MemoryStream();
        this.Ⴍ.Ⴜ = memoryStream;
        xmlWriter = (XmlWriter) new XmlTextWriter((Stream) this.Ⴍ.Ⴜ, (Encoding) new UTF8Encoding(false));
        this.Ⴍ.Ⴀ = xmlWriter;
        this.SetProxy(Ⴐ);
        if ((str = ReportSender1.Ⴄ(Ⴈ.Ⴀ.Ⴐ(1468304374, 8), 114, 14)) == null)
          return;
        if (!Ⴈ.Ⴅ.Ⴐ(str, SimpleZip.Ⴓ(661402828, 8), 273, 331))
        {
          if (!Ⴈ.Ⴅ.Ⴐ(str, Ⴈ.Ⴀ.Ⴐ(1468304377, 7), 408, 450))
            return;
          chArray3 = new char[58]
          {
            '\u0001',
            '\u0002',
            '\u0003',
            '\u0004',
            '\u0005',
            '\u0006',
            '\a',
            '\b',
            '\u000E',
            '\u000F',
            '\u0010',
            '\u0011',
            '\u0012',
            '\u0013',
            '\u0014',
            '\u0015',
            '\u0016',
            '\u0017',
            '\u0018',
            '\u0019',
            '\u001A',
            '\u001B',
            '\u001C',
            '\u001D',
            '\u001E',
            '\u001F',
            '\u007F',
            '\u0080',
            '\u0081',
            '\u0082',
            '\u0083',
            '\u0084',
            '\u0086',
            '\u0087',
            '\u0088',
            '\u0089',
            '\u008A',
            '\u008B',
            '\u008C',
            '\u008D',
            '\u008E',
            '\u008F',
            '\u0090',
            '\u0091',
            '\u0092',
            '\u0093',
            '\u0094',
            '\u0095',
            '\u0096',
            '\u0097',
            '\u0098',
            '\u0099',
            '\u009A',
            '\u009B',
            '\u009C',
            '\u009D',
            '\u009E',
            '\u009F'
          };
          this.Ⴍ.Ⴅ = chArray3;
        }
        else
        {
          char[] chArray4 = new char[62];
          // ISSUE: field reference
          UsageReportSender.Ⴀ((Array) chArray4, __fieldref (Ⴈ.ႷႠ.Ⴍ), 670, 703);
          chArray2 = chArray4;
          this.Ⴍ.Ⴅ = chArray2;
        }
      }
      catch (Exception ex)
      {
        object[] objects = new object[17]
        {
          (object) str,
          (object) chArray1,
          (object) dictionary1,
          (object) ⴈList,
          (object) stringList,
          (object) dictionary2,
          (object) dictionary3,
          (object) guid,
          (object) exception,
          (object) memoryStream,
          (object) xmlWriter,
          (object) chArray2,
          (object) chArray3,
          (object) this,
          (object) Ⴀ,
          (object) Ⴗ,
          (object) Ⴐ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private static string Ⴀ(object Ⴄ)
    {
      int num1;
      int num2;
      long num3;
      short num4;
      uint num5;
      ulong num6;
      ushort num7;
      byte num8;
      sbyte num9;
      IntPtr num10;
      long num11;
      UIntPtr num12;
      ulong uint64;
      int num13;
      try
      {
        string str;
        try
        {
          num1 = 0;
          while (true)
          {
            switch (num1)
            {
              case 1:
                goto label_21;
              case 2:
              case 5:
                goto label_5;
              case 3:
                num1 = !(Ⴄ is short) ? 6 : 10;
                continue;
              case 4:
                num1 = !(Ⴄ is long) ? 3 : 21;
                continue;
              case 6:
                num1 = !(Ⴄ is uint) ? 7 : 24;
                continue;
              case 7:
                num1 = !(Ⴄ is ulong) ? 11 : 14;
                continue;
              case 8:
                goto label_17;
              case 9:
                num1 = !(Ⴄ is int) ? 4 : 2;
                continue;
              case 10:
                goto label_9;
              case 11:
                num1 = !(Ⴄ is ushort) ? 20 : 22;
                continue;
              case 12:
                goto label_19;
              case 13:
                goto label_22;
              case 14:
                goto label_13;
              case 15:
                num1 = !(Ⴄ is sbyte) ? 18 : 12;
                continue;
              case 16:
                goto label_24;
              case 17:
              case 19:
                num1 = !(Ⴄ is UIntPtr) ? 25 : 16;
                continue;
              case 18:
                num1 = !(Ⴄ is IntPtr) ? 17 : 1;
                continue;
              case 20:
                num1 = !(Ⴄ is byte) ? 15 : 8;
                continue;
              case 21:
                goto label_7;
              case 22:
                goto label_15;
              case 23:
                goto label_3;
              case 24:
                goto label_11;
              case 25:
                goto label_26;
              default:
                num1 = Ⴄ != null ? 9 : 23;
                continue;
            }
          }
label_3:
          str = string.Empty;
          goto label_28;
label_5:
          num2 = (int) Ⴄ;
          str = SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴈ(ref num2, Ⴈ.ႳႷ.Ⴗ(2059790487, 3), 518, 560);
          goto label_28;
label_7:
          num3 = (long) Ⴄ;
          str = SimpleZip.ႤႤ.Ⴀ(ref num3, Ⴈ.ႳႷ.Ⴗ(2059790483, 7), 739, 767);
          goto label_28;
label_9:
          num4 = (short) Ⴄ;
          str = ReportSender1.Ⴓ(ref num4, Ⴈ.ႳႷ.Ⴗ(2059790486, 2), 132, 240);
          goto label_28;
label_11:
          num5 = (uint) Ⴄ;
          str = SimpleZip.ႤႭ.Ⴄ(ref num5, Ⴈ.ႳႷ.Ⴗ(2059790482, 6), 868, 769);
          goto label_28;
label_13:
          num6 = (ulong) Ⴄ;
          str = Ⴈ.ႳႷ.ႤႷ(ref num6, Ⴈ.ႳႷ.Ⴗ(2059790486, 2), 435, 480);
          goto label_28;
label_15:
          num7 = (ushort) Ⴄ;
          str = Ⴈ.Ⴗ.Ⴄ(ref num7, Ⴈ.ႳႷ.Ⴗ(2059790482, 6), 288, 296);
          goto label_28;
label_17:
          num8 = (byte) Ⴄ;
          str = Ⴈ.Ⴜ.Ⴐ(ref num8, Ⴈ.ႳႷ.Ⴗ(2059790483, 7), 949, 1005);
          goto label_28;
label_19:
          num9 = (sbyte) Ⴄ;
          str = DoNotPruneTypeAttribute.Ⴐ(ref num9, Ⴈ.ႳႷ.Ⴗ(2059790482, 6), 90, 64);
          goto label_28;
label_21:
          num10 = (IntPtr) Ⴄ;
          num11 = SmartAssembly.SmartExceptionsCore.Win32.ႣႷ(ref num10, 145, 173);
label_22:
          str = num11.ToString(Ⴈ.ႳႷ.Ⴗ(2059790482, 6));
          goto label_28;
label_24:
          num12 = (UIntPtr) Ⴄ;
          uint64 = num12.ToUInt64();
          str = uint64.ToString(Ⴈ.ႳႷ.Ⴗ(2059790483, 7));
          goto label_28;
        }
        catch
        {
        }
label_26:
        num13 = 3;
        switch (num13)
        {
          case 0:
          case 1:
          case 2:
            break;
          default:
            return string.Empty;
        }
label_28:
        return str;
      }
      catch (Exception ex)
      {
        string str;
        object[] objects = new object[16]
        {
          (object) str,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) num9,
          (object) num10,
          (object) num11,
          (object) num12,
          (object) uint64,
          (object) num1,
          (object) num13,
          Ⴄ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private static string Ⴗ(string Ⴐ)
    {
      int num;
      try
      {
label_3:
        num = !AppNameFinder.Ⴓ(Ⴐ, SimpleZip.Ⴓ(661402826, 6), 372, 307) ? 3 : 1;
        while (true)
        {
          switch (num)
          {
            case 1:
              num = !SmartAssembly.License.License.Ⴄ(Ⴐ, ႷႭ.ႥႭ(490613269, 0), 662, 699) ? 3 : 7;
              continue;
            case 2:
              goto label_3;
            case 3:
            case 4:
            case 6:
              goto label_6;
            case 5:
            case 7:
              goto label_5;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.Ⴗ);
              num = 2;
              continue;
          }
        }
label_5:
        return ႷႭ.ႥႭ(490613475, 4);
label_6:
        return Ⴐ;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        string o2 = Ⴐ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
        throw;
      }
    }

    private void Ⴃ(Ⴈ.Ⴈ Ⴄ, FieldInfo Ⴗ)
    {
      int num1;
      string Ⴓ;
      string Ⴅ;
      object Ⴄ1;
      Ⴈ.ႷႳ ⴗⴓ1;
      int num2;
      Type Ⴀ1;
      int num3;
      int num4;
      int num5;
      Type Ⴀ2;
      string str1;
      string Ⴐ;
      int num6;
      StringBuilder stringBuilder1;
      string str2;
      StringBuilder stringBuilder2;
      Ⴈ.ႷႳ ⴗⴓ2;
      int num7;
      int num8;
      try
      {
        num1 = 0;
        while (true)
        {
          string str3;
          string str4;
          switch (num1)
          {
            case 1:
              str3 = Ⴈ.ႳႭ.Ⴀ((MemberInfo) Ⴗ, 434, 436);
              break;
            case 2:
            case 3:
            case 7:
              str3 = (string) null;
              break;
            case 4:
label_6:
              num1 = (object) Ⴗ == null ? 8 : 5;
              continue;
            case 5:
              str4 = ႷႭ.ႥႳ(1491049232, 7);
              goto label_9;
            case 6:
              goto label_11;
            case 8:
              str4 = Ⴈ.ႳႷ.Ⴗ(2059790489, 1);
              goto label_9;
            default:
              num1 = (object) Ⴗ == null ? 2 : 1;
              continue;
          }
          Ⴓ = str3;
          goto label_6;
label_9:
          Ⴅ = str4;
          Ⴄ1 = Ⴄ.Ⴅ();
          if (Ⴄ1 == null)
            num1 = 6;
          else
            goto label_39;
        }
label_11:
        ⴗⴓ1 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴅ);
        try
        {
          num2 = 14;
          while (true)
          {
            switch (num2)
            {
              case 0:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304326, 6), Ⴈ.Ⴀ.Ⴐ(1468304324, 0), 29, 45);
                goto case 8;
              case 1:
                num2 = !AppRegistryKeys.Ⴐ(Ⴗ, 61, 73) ? 7 : 18;
                continue;
              case 2:
                goto label_29;
              case 3:
                num2 = Ⴓ == null ? 2 : 10;
                continue;
              case 6:
                num2 = !UsageCounts.Ⴜ(Ⴀ1, 261, 344) ? 12 : 9;
                continue;
              case 7:
                Ⴀ1 = Ⴈ.ႷႥ.Ⴃ(Ⴗ, 663, 761);
                num2 = (object) Ⴀ1 == null ? 12 : 6;
                continue;
              case 8:
              case 13:
                num2 = !UsageCounts.Ⴜ(Ⴀ1, 585, 535) ? 16 : 11;
                continue;
              case 9:
                this.Ⴄ(FatalExceptionEventArgs.Ⴓ(Ⴀ1, 996, 913));
                num2 = !SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴓ(Ⴀ1, 149, 189) ? 13 : 0;
                continue;
              case 10:
                goto label_28;
              case 11:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543335, 8), Ⴈ.Ⴀ.Ⴐ(1468304320, 4), 302, 286);
                goto case 16;
              case 12:
                this.Ⴄ(Ⴀ1);
                goto case 3;
              case 15:
                num2 = 3;
                continue;
              case 16:
                num2 = !ႷႭ.ႰႼ(Ⴀ1, 838, 781) ? 3 : 17;
                continue;
              case 17:
                XmlWriter ⴀ = this.Ⴍ.Ⴀ;
                string str5 = ႷႭ.ႥႭ(490613471, 0);
                num3 = HeaderControl.Ⴜ(Ⴀ1, 665, 767);
                string str6 = num3.ToString();
                Ⴈ.ႳႠ.Ⴄ(ⴀ, str5, str6, 496, 448);
                goto case 15;
              case 18:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491049263, 0), Ⴈ.Ⴀ.Ⴐ(1468304325, 1), 867, 851);
                goto case 7;
              default:
                num2 = (object) Ⴗ == null ? 3 : 1;
                continue;
            }
          }
label_28:
          this.Ⴅ(Ⴓ);
label_29:
          Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304330, 2), Ⴈ.Ⴀ.Ⴐ(1468304332, 8), 606, 622);
        }
        finally
        {
          num4 = 6;
          while (true)
          {
            switch (num4)
            {
              case 0:
                goto label_33;
              case 1:
              case 2:
              case 5:
                goto label_34;
              default:
                num4 = ⴗⴓ1 == null ? 2 : 0;
                continue;
            }
          }
label_33:
          ⴗⴓ1.Dispose();
label_34:;
        }
        switch (4)
        {
          case 0:
            return;
          case 1:
            return;
          case 2:
            return;
          case 3:
            return;
          case 4:
            return;
          default:
            return;
        }
label_39:
        Ⴀ2 = SimpleZip.ႭႰ.Ⴓ(Ⴄ.Ⴅ(), 442, 439);
        str1 = (string) null;
        Ⴐ = (string) null;
label_40:
        num5 = 8;
        while (true)
        {
          switch (num5)
          {
            case 0:
            case 24:
              num6 = (int) (char) Ⴄ1;
              stringBuilder1 = new StringBuilder();
              num5 = num6 < 32 ? 4 : 15;
              continue;
            case 1:
              num5 = Ⴐ != null ? 20 : 27;
              continue;
            case 2:
              Ⴈ.Ⴈ.Ⴓ(stringBuilder2, ႷႭ.ႥႳ(1491049254, 7), 1008, 931);
              Ⴈ.Ⴈ.Ⴓ(stringBuilder2, str2, 245, 166);
              num5 = 17;
              continue;
            case 3:
              str1 = AppNameFinder.Ⴗ(Ⴀ2, 828, 858);
              num5 = !(Ⴄ1 is char) ? 18 : 24;
              continue;
            case 4:
              Ⴈ.Ⴈ.Ⴓ(stringBuilder1, Ⴈ.ႳႷ.Ⴗ(2059790500, 5), 844, 799);
              Ⴈ.Ⴈ.Ⴓ(stringBuilder1, SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute.Ⴈ(ref num6, Ⴈ.ႳႷ.Ⴗ(2059790480, 4), 222, 232), 633, 554);
              goto case 25;
            case 6:
              Ⴐ = DoNotPruneTypeAttribute.Ⴗ(UsageReportSender.ႥႷ(Ⴄ1, 911, 1009), 250, 154);
              num5 = 1;
              continue;
            case 7:
              num5 = SimpleZip.ႭႷ(Ⴀ2, 51, 106) ? 3 : 13;
              continue;
            case 8:
              num5 = !(Ⴄ1 is string) ? 10 : 9;
              continue;
            case 9:
              str1 = SimpleZip.Ⴓ(661402682, 7);
              num5 = 10;
              continue;
            case 10:
              num5 = str1 != null ? 20 : 7;
              continue;
            case 11:
              DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder1, ')', 890, 884);
              Ⴐ = UsageReportSender.ႥႷ((object) stringBuilder1, 672, 734);
              num5 = 18;
              continue;
            case 12:
              Ⴐ = UsageReportSender.ႥႷ(Ⴄ1, 469, 427);
              num5 = 20;
              continue;
            case 13:
              num5 = Ⴄ1 is IntPtr ? 3 : 21;
              continue;
            case 14:
              num5 = !Ⴀ2.IsValueType ? 20 : 26;
              continue;
            case 15:
              DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder1, '\'', 693, 699);
              DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder1, (char) Ⴄ1, 973, 963);
              num5 = 23;
              continue;
            case 16:
              goto label_40;
            case 17:
              DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder2, ')', 870, 872);
              Ⴐ = UsageReportSender.ႥႷ((object) stringBuilder2, 907, 1013);
              num5 = 20;
              continue;
            case 18:
              num5 = !(Ⴄ1 is bool) ? 1 : 6;
              continue;
            case 19:
              str1 = Ⴀ2.FullName;
              num5 = 20;
              continue;
            case 20:
              goto label_65;
            case 21:
              num5 = !(Ⴄ1 is UIntPtr) ? 14 : 3;
              continue;
            case 22:
              stringBuilder2 = new StringBuilder();
              Ⴈ.Ⴈ.Ⴓ(stringBuilder2, UsageReportSender.ႥႷ(Ⴄ1, 262, 376), 307, 352);
              num5 = 2;
              continue;
            case 23:
              Ⴈ.Ⴈ.Ⴓ(stringBuilder1, ႷႭ.ႥႳ(1491049250, 4), 571, 616);
              num5 = 4;
              continue;
            case 25:
              num5 = 11;
              continue;
            case 26:
              num5 = (object) Ⴀ2.Module == (object) this.GetType().Module ? 20 : 19;
              continue;
            case 27:
              str2 = Ⴈ.Ⴄ.Ⴀ(Ⴄ1);
              num5 = AppPathFinder.Ⴐ(str2, 336, 359) <= 0 ? 12 : 22;
              continue;
            case 28:
              goto label_39;
            default:
              goto label_38;
          }
        }
label_38:
        // ISSUE: method reference
        RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.Ⴃ);
        return;
label_65:
        ⴗⴓ2 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴅ);
        try
        {
          num7 = 7;
          while (true)
          {
            switch (num7)
            {
              case 0:
              case 9:
              case 14:
                num7 = !Ⴗ.IsStatic ? 8 : 15;
                continue;
              case 1:
                this.Ⴅ(Ⴓ);
                goto case 19;
              case 2:
              case 5:
                this.Ⴄ(Ⴗ.FieldType);
                goto case 12;
              case 3:
                this.Ⴄ(Ⴀ2);
                num7 = Ⴓ == null ? 19 : 1;
                continue;
              case 4:
                goto label_84;
              case 6:
                goto label_91;
              case 8:
                num7 = str1 == null ? 16 : 3;
                continue;
              case 11:
                Ⴐ = Ⴈ.ႳႷ.Ⴗ(2059790498, 5) + Ⴄ1 + Ⴈ.ႳႷ.Ⴗ(2059790502, 1);
                num7 = 18;
                continue;
              case 12:
                this.Ⴓ(Ⴄ);
                num7 = Ⴓ == null ? 6 : 4;
                continue;
              case 13:
                num7 = !(Ⴄ1 is Guid) ? 21 : 20;
                continue;
              case 15:
                this.Ⴍ.Ⴀ.WriteAttributeString(ႷႭ.ႥႳ(1491049260, 3), Ⴈ.Ⴀ.Ⴐ(1468304323, 7));
                goto case 8;
              case 16:
                num7 = (object) Ⴗ == null ? 12 : 2;
                continue;
              case 17:
                Ⴐ = Ⴄ1.ToString();
                num7 = 13;
                continue;
              case 18:
                this.Ⴍ.Ⴀ.WriteAttributeString(Ⴈ.ႳႷ.Ⴗ(2059790506, 1), Ⴈ.Ⴄ.Ⴗ(Ⴐ));
                num7 = 6;
                continue;
              case 19:
                num7 = !Ⴀ2.IsEnum ? 13 : 17;
                continue;
              case 20:
                Ⴐ = ႷႭ.ႥႳ(1491049465, 6) + Ⴄ1 + ႷႭ.ႥႭ(490613412, 0);
                num7 = 21;
                continue;
              case 21:
                num7 = Ⴐ != null ? 18 : 11;
                continue;
              default:
                num7 = (object) Ⴗ == null ? 8 : 14;
                continue;
            }
          }
label_84:
          this.Ⴅ(Ⴓ);
        }
        finally
        {
          num8 = 1;
          while (true)
          {
            switch (num8)
            {
              case 0:
              case 4:
                goto label_89;
              case 2:
              case 3:
              case 6:
                goto label_90;
              default:
                num8 = ⴗⴓ2 == null ? 6 : 0;
                continue;
            }
          }
label_89:
          ⴗⴓ2.Dispose();
label_90:;
        }
label_91:
        switch (3)
        {
        }
      }
      catch (Exception ex)
      {
        int num9;
        int num10;
        object[] objects = new object[25]
        {
          (object) Ⴓ,
          (object) Ⴅ,
          Ⴄ1,
          (object) Ⴀ1,
          (object) Ⴀ2,
          (object) str1,
          (object) Ⴐ,
          (object) num6,
          (object) stringBuilder1,
          (object) str2,
          (object) stringBuilder2,
          (object) ⴗⴓ1,
          (object) num3,
          (object) ⴗⴓ2,
          (object) num1,
          (object) num2,
          (object) num4,
          (object) num9,
          (object) num5,
          (object) num7,
          (object) num8,
          (object) num10,
          (object) this,
          (object) Ⴄ,
          (object) Ⴗ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private void Ⴓ(Ⴈ.Ⴈ Ⴃ)
    {
      int num1;
      object obj;
      int num2;
      int index;
      try
      {
        num1 = 8;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num2 = index;
              num1 = 2;
              continue;
            case 1:
              num2 = -1;
              index = 0;
              num1 = 9;
              continue;
            case 2:
            case 4:
              num1 = num2 != -1 ? 10 : 3;
              continue;
            case 3:
              goto label_9;
            case 5:
              num1 = !ႷႣ.Ⴀ(this.Ⴍ.Ⴃ[index].Ⴅ(), obj, 750, 758) ? 7 : 0;
              continue;
            case 6:
              goto label_11;
            case 7:
              ++index;
              num1 = 9;
              continue;
            case 9:
              num1 = index < this.Ⴍ.Ⴃ.Count ? 5 : 2;
              continue;
            case 10:
              goto label_10;
            default:
              obj = Ⴃ.Ⴅ();
              goto case 1;
          }
        }
label_11:
        return;
label_9:
        num2 = this.Ⴍ.Ⴃ.Count;
        this.Ⴍ.Ⴃ.Add(Ⴃ);
label_10:
        this.Ⴍ.Ⴀ.WriteAttributeString(Ⴈ.ႳႷ.Ⴗ(2059790516, 7), num2.ToString());
      }
      catch (Exception ex)
      {
        object o1 = obj;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) index;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        Ⴈ.Ⴈ o6 = Ⴃ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    private void Ⴅ(string Ⴓ)
    {
      int num1;
      int num2;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 3:
              if (num2 != -1)
              {
                num1 = 2;
                continue;
              }
              goto label_6;
            case 2:
              goto label_5;
            default:
              num2 = this.Ⴍ(Ⴓ);
              goto case 1;
          }
        }
label_5:
        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543330, 7), num2.ToString(), 348, 364);
        return;
label_6:
        this.Ⴍ.Ⴀ.WriteAttributeString(MyComputer.Ⴗ(834543350, 4), Ⴓ);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num3;
        string o5 = Ⴓ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
        throw;
      }
    }

    private static Ⴈ.Ⴄ.ႣႰ Ⴐ(Type Ⴅ)
    {
      int num1;
      Ⴈ.Ⴄ.ႣႰ ⴃⴐ;
      int num2;
      Assembly assembly;
      Guid moduleVersionId;
      try
      {
label_3:
        ⴃⴐ = Ⴈ.Ⴄ.ႣႰ.Ⴄ();
        num1 = (object) Ⴅ == null ? 4 : 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 6:
              goto label_3;
            case 1:
              assembly = PoweredByAttribute1.Ⴓ(Ⴅ, 925, 992);
              goto case 8;
            case 2:
              num1 = (object) ႷႤ.Ⴍ(PoweredByAttribute1.Ⴓ(Ⴅ, 229, 152), SimpleZip.Ⴓ(661402665, 4), 763, 731) == null ? 4 : 7;
              continue;
            case 4:
              goto label_8;
            case 7:
              ref Ⴈ.Ⴄ.ႣႰ local1 = ref ⴃⴐ;
              num2 = (SmartAssembly.SmartUsageCore.ReportUsageAttribute.Ⴃ((MemberInfo) Ⴅ, 544, 567) & 16777215) - 1;
              string str = num2.ToString();
              local1.Ⴅ = str;
              num1 = 1;
              continue;
            case 8:
              ref Ⴈ.Ⴄ.ႣႰ local2 = ref ⴃⴐ;
              moduleVersionId = DoNotDistributeAttribute.Ⴀ(assembly, 353, 304).ModuleVersionId;
              Ⴈ.Ⴄ.ႳႼ ⴓⴜ = new Ⴈ.Ⴄ.ႳႼ(moduleVersionId.ToString(ႷႭ.ႥႳ(1491049272, 2)), assembly.FullName);
              local2.Ⴃ = ⴓⴜ;
              num1 = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.Ⴐ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return ⴃⴐ;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Ⴈ.Ⴄ.ႣႰ> o1 = (ValueType) ⴃⴐ;
        Assembly o2 = assembly;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<Guid> o4 = (ValueType) moduleVersionId;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num1;
        Type o6 = Ⴅ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    private int Ⴈ(Ⴈ.Ⴄ.ႣႰ Ⴗ)
    {
      int num;
      string key;
      int count;
      try
      {
label_3:
        key = ReportSender1.Ⴄ(Ⴗ.Ⴃ.Ⴍ, 226, 158);
        num = !this.Ⴍ.Ⴄ.ContainsKey(key) ? 6 : 2;
        while (true)
        {
          switch (num)
          {
            case 0:
            case 5:
              goto label_6;
            case 1:
            case 2:
            case 3:
              goto label_4;
            case 4:
              goto label_3;
            case 6:
              count = this.Ⴄ.Count;
              this.Ⴄ.Add(Ⴗ.Ⴃ);
              this.Ⴍ.Ⴄ.Add(key, count);
              num = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.Ⴈ);
              num = 4;
              continue;
          }
        }
label_4:
        return this.Ⴍ.Ⴄ[key];
label_6:
        return count;
      }
      catch (Exception ex)
      {
        string o1 = key;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) count;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        // ISSUE: variable of a boxed type
        __Boxed<Ⴈ.Ⴄ.ႣႰ> o5 = (ValueType) Ⴗ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
        throw;
      }
    }

    private void Ⴄ(Type Ⴀ)
    {
      int num1;
      int num2;
      Ⴈ.Ⴄ.ႣႰ Ⴗ;
      int num3;
      string key;
      int count;
      StringBuilder stringBuilder;
      string str1;
      string str2;
      int num4;
      string str3;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_33;
            case 1:
              goto label_30;
            case 2:
              goto label_4;
            case 3:
              goto label_35;
            default:
              if ((object) Ⴀ == null)
              {
                num1 = 1;
                continue;
              }
              goto label_5;
          }
        }
label_33:
        return;
label_30:
        return;
label_4:
        return;
label_35:
        return;
label_5:
        try
        {
          num2 = 21;
          while (true)
          {
            switch (num2)
            {
              case 0:
                key = AppNameFinder.Ⴗ(Ⴀ, 844, 810);
                num2 = !this.Ⴍ.Ⴓ.ContainsKey(key) ? 1 : 11;
                continue;
              case 1:
                stringBuilder = new StringBuilder();
                str1 = UnhandledExceptionHandlerWithUI.Ⴀ(WaitSendingReportControl.Ⴍ(PoweredByAttribute1.Ⴓ(Ⴀ, 273, 364), 996, 961), 467, 511);
                num2 = 14;
                continue;
              case 2:
                stringBuilder.Append(str3);
                num2 = 18;
                continue;
              case 3:
                str3 = key.Substring(AppPathFinder.Ⴐ(str2, 404, 419) + 1, num4 - str2.Length).Replace(SimpleZip.Ⴓ(661402744, 7), Ⴈ.ႳႷ.Ⴗ(2059790526, 6));
                goto case 25;
              case 4:
                Ⴀ = FatalExceptionEventArgs.Ⴓ(Ⴀ, 752, 645);
                num2 = 7;
                continue;
              case 5:
                num2 = !SmartAssembly.License.License.Ⴄ(str1, Ⴈ.Ⴀ.Ⴐ(1468303592, 7), 883, 861) ? 17 : 19;
                continue;
              case 6:
                goto label_28;
              case 7:
                num4 = SmartAssembly.SmartExceptionsCore.Win32.ႣႨ(key, SimpleZip.Ⴓ(661402749, 2), 240, 173);
                num2 = num4 <= 0 ? 18 : 3;
                continue;
              case 8:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304347, 8), num3.ToString(), 245, 197);
                num2 = 13;
                continue;
              case 10:
                num3 = this.Ⴈ(Ⴗ);
                goto case 20;
              case 11:
                count = this.Ⴍ.Ⴓ[key];
                num2 = 12;
                continue;
              case 12:
                goto label_29;
              case 13:
                goto label_32;
              case 14:
                num2 = AppPathFinder.Ⴐ(str1, 739, 724) <= 0 ? 17 : 5;
                continue;
              case 15:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613408, 0), Ⴗ.Ⴅ, 988, 1004);
                num2 = 10;
                continue;
              case 16:
                DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder, ']', 195, 205);
                num2 = 17;
                continue;
              case 17:
                str2 = Ⴈ.Ⴐ.ႥႷ(Ⴀ, 517, 584);
                num2 = AppPathFinder.Ⴐ(str2, 667, 684) <= 0 ? 24 : 23;
                continue;
              case 18:
                stringBuilder.Append(Ⴀ.Name);
                count = this.Ⴍ.Ⴗ.Count;
                num2 = 6;
                continue;
              case 19:
                DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder, '[', 839, 841);
                Ⴈ.Ⴈ.Ⴓ(stringBuilder, str1, 582, 533);
                num2 = 16;
                continue;
              case 20:
                num2 = num3 <= 0 ? 13 : 8;
                continue;
              case 22:
              case 23:
                Ⴈ.Ⴈ.Ⴓ(stringBuilder, str2, 550, 629);
                DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder, '.', 130, 140);
                num2 = 24;
                continue;
              case 24:
                num2 = !UsageCounts.Ⴜ(Ⴀ, 288, 381) ? 7 : 4;
                continue;
              case 25:
                num2 = 2;
                continue;
              default:
                Ⴗ = Ⴈ.Ⴄ.Ⴐ(Ⴀ);
                num2 = Ⴗ.Ⴐ() ? 0 : 15;
                continue;
            }
          }
label_28:
          this.Ⴍ.Ⴗ.Add(stringBuilder.ToString());
          this.Ⴍ.Ⴓ.Add(key, count);
label_29:
          this.Ⴍ.Ⴀ.WriteAttributeString(SimpleZip.Ⴓ(661402745, 2), count.ToString());
        }
        catch
        {
        }
label_32:
        switch (1)
        {
        }
      }
      catch (Exception ex)
      {
        int num5;
        object[] objects = new object[14]
        {
          (object) Ⴗ,
          (object) num3,
          (object) count,
          (object) key,
          (object) stringBuilder,
          (object) str1,
          (object) str2,
          (object) num4,
          (object) str3,
          (object) num1,
          (object) num2,
          (object) num5,
          (object) this,
          (object) Ⴀ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private int Ⴍ(string Ⴈ)
    {
      int num1;
      bool flag1;
      int num2;
      int num3;
      int num4;
      char ch;
      bool flag2;
      int index;
      try
      {
        try
        {
          num1 = 9;
          while (true)
          {
            switch (num1)
            {
              case 0:
                num1 = Ⴈ.ႳႷ.Ⴀ(Ⴈ, 0, 1010, 923) == '#' ? 7 : 19;
                continue;
              case 1:
                num3 = num3 * this.Ⴍ.Ⴅ.Length + index;
                num1 = 24;
                continue;
              case 2:
                num1 = index < this.Ⴍ.Ⴅ.Length ? 22 : 18;
                continue;
              case 3:
              case 21:
                num1 = num4 == 0 ? 17 : 20;
                continue;
              case 4:
                num1 = AppPathFinder.Ⴐ(Ⴈ, 128, 183) > 4 ? 19 : 16;
                continue;
              case 5:
                num1 = !flag1 ? 16 : 4;
                continue;
              case 6:
                goto label_20;
              case 7:
              case 11:
                num3 = 0;
                num4 = AppPathFinder.Ⴐ(Ⴈ, 703, 648) - 1;
                num1 = 13;
                continue;
              case 8:
                num1 = flag1 ? 20 : 21;
                continue;
              case 10:
                num1 = 18;
                continue;
              case 12:
                ++index;
                num1 = 2;
                continue;
              case 13:
                num1 = num4 >= 0 ? 8 : 17;
                continue;
              case 14:
                num1 = AppPathFinder.Ⴐ(Ⴈ, 126, 73) == 0 ? 19 : 5;
                continue;
              case 16:
                num1 = flag1 ? 7 : 0;
                continue;
              case 17:
                goto label_23;
              case 18:
                num1 = flag2 ? 23 : 6;
                continue;
              case 19:
                goto label_8;
              case 20:
                ch = Ⴈ.ႳႷ.Ⴀ(Ⴈ, num4, 280, 369);
                flag2 = false;
                index = 0;
                num1 = 2;
                continue;
              case 22:
                num1 = (int) this.Ⴍ.Ⴅ[index] != (int) ch ? 12 : 1;
                continue;
              case 23:
                --num4;
                num1 = 13;
                continue;
              case 24:
                flag2 = true;
                goto case 10;
              default:
                flag1 = this.Ⴍ.Ⴅ[0] == '\u0001';
                num1 = Ⴈ == null ? 19 : 14;
                continue;
            }
          }
label_8:
          num2 = -1;
          goto label_25;
label_20:
          num2 = -1;
          goto label_25;
label_23:
          num2 = num3;
        }
        catch
        {
          num2 = -1;
        }
label_25:
        switch (3)
        {
          default:
            return num2;
        }
      }
      catch (Exception ex)
      {
        int num5;
        object[] objects = new object[11]
        {
          (object) flag1,
          (object) num3,
          (object) num4,
          (object) ch,
          (object) flag2,
          (object) index,
          (object) num2,
          (object) num1,
          (object) num5,
          (object) this,
          (object) Ⴈ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private static string Ⴅ()
    {
      try
      {
        string str;
        try
        {
          str = UsageCounts.Ⴍ(630, 621);
        }
        catch
        {
          str = ႷႭ.ႥႳ(1491049267, 5);
        }
        return str;
      }
      catch (Exception ex)
      {
        string str;
        string o1 = str;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    private Assembly[] Ⴈ()
    {
      Assembly[] assemblyArray1;
      try
      {
        Assembly[] assemblyArray2;
        try
        {
          assemblyArray2 = SmartAssembly.SmartUsageCore.ReportUsageAttribute.Ⴅ(Ⴈ.Ⴓ.Ⴐ(977, 974), 781, 852);
        }
        catch
        {
          assemblyArray1 = new Assembly[1]{ Ⴈ.Ⴄ.Ⴓ() };
          assemblyArray2 = assemblyArray1;
        }
        return assemblyArray2;
      }
      catch (Exception ex)
      {
        Assembly[] assemblyArray3;
        Assembly[] o1 = assemblyArray3;
        Assembly[] o2 = assemblyArray1;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) this);
        throw;
      }
    }

    private static Assembly Ⴓ()
    {
      try
      {
        Assembly assembly;
        try
        {
          assembly = SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴐ(281, 369);
        }
        catch
        {
          assembly = (Assembly) null;
        }
        return assembly;
      }
      catch (Exception ex)
      {
        Assembly assembly;
        Assembly o1 = assembly;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException1(ex, (object) o1);
        throw;
      }
    }

    internal byte[] Ⴐ()
    {
      try
      {
        return this.Ⴍ();
      }
      catch (Exception ex)
      {
        int num;
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
        throw;
      }
    }

    private byte[] Ⴍ()
    {
      int num1;
      Ⴈ.ႷႳ ⴗⴓ1;
      int num2;
      DateTime dateTime;
      Guid ⴈ1;
      Guid guid;
      Ⴈ.ႷႳ ⴗⴓ2;
      int num3;
      Assembly assembly1;
      Assembly[] assemblyArray;
      int index1;
      Assembly assembly2;
      Ⴈ.ႷႳ ⴗⴓ3;
      int num4;
      int num5;
      int num6;
      int num7;
      int num8;
      int num9;
      Ⴈ.ႷႳ ⴗⴓ4;
      int num10;
      Dictionary<string, object>.KeyCollection.Enumerator enumerator1;
      int num11;
      string current1;
      Ⴈ.ႷႳ ⴗⴓ5;
      int num12;
      string str1;
      int num13;
      int num14;
      int num15;
      int num16;
      int num17;
      int num18;
      Ⴈ.ႷႳ ⴗⴓ6;
      int num19;
      Dictionary<string, Ⴈ.Ⴄ.ႳႨ>.KeyCollection.Enumerator enumerator2;
      int num20;
      string current2;
      Ⴈ.ႷႳ ⴗⴓ7;
      int num21;
      Ⴈ.Ⴄ.ႳႨ ⴓⴈ;
      int ⴈ2;
      int num22;
      int num23;
      int num24;
      int num25;
      int num26;
      int num27;
      Ⴈ.ႷႳ ⴗⴓ8;
      int num28;
      int num29;
      int num30;
      int num31;
      List<Exception> exceptionList;
      Exception exception;
      Ⴈ.ႷႳ ⴗⴓ9;
      int num32;
      List<Exception>.Enumerator enumerator3;
      int num33;
      Exception current3;
      int num34;
      ICollection collection;
      int count1;
      int num35;
      IEnumerator enumerator4;
      int num36;
      object current4;
      int num37;
      Type Ⴅ1;
      Ⴈ.ႷႳ ⴗⴓ10;
      int num38;
      int num39;
      int num40;
      int num41;
      int num42;
      int num43;
      object[] objArray1;
      Ⴈ.Ⴄ.ႣႰ Ⴗ;
      Ⴈ.ႷႳ ⴗⴓ11;
      int num44;
      int num45;
      object[] objArray2;
      int index2;
      object Ⴅ2;
      int num46;
      int num47;
      int num48;
      int num49;
      int num50;
      int num51;
      IDisposable disposable;
      int num52;
      int num53;
      int num54;
      int num55;
      int num56;
      int num57;
      Ⴈ.ႷႳ ⴗⴓ12;
      int num58;
      int count2;
      int index3;
      int num59;
      string str2;
      int num60;
      int num61;
      int num62;
      Ⴈ.ႷႳ ⴗⴓ13;
      int num63;
      int count3;
      int index4;
      Ⴈ.ႷႳ ⴗⴓ14;
      int num64;
      Ⴈ.Ⴄ.ႳႼ ⴓⴜ;
      int num65;
      int num66;
      int num67;
      int num68;
      int num69;
      int num70;
      byte[] array;
      try
      {
label_3:
        num1 = this.Ⴍ.ႨႰ == null ? 5 : 6;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_3;
            case 3:
            case 6:
              goto label_4;
            case 5:
              goto label_5;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.Ⴍ);
              num1 = 2;
              continue;
          }
        }
label_4:
        return this.Ⴍ.ႨႰ;
label_5:
        SimpleZip.ႭႰ.Ⴐ(this.Ⴍ.Ⴀ, 624, 556);
        ⴗⴓ1 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613425, 5));
        try
        {
          num2 = 0;
          while (true)
          {
            switch (num2)
            {
              case 1:
              case 10:
                num2 = this.Ⴄ.Count <= 0 ? 11 : 8;
                continue;
              case 3:
                XmlWriter ⴀ1 = this.Ⴍ.Ⴀ;
                string str3 = Ⴈ.ႳႷ.Ⴗ(2059790659, 3);
                ⴈ1 = this.Ⴍ.Ⴈ;
                string str4 = SmartAssembly.SmartExceptionsCore.StackFrameHelper.Ⴐ(ref ⴈ1, ႷႭ.ႥႳ(1491049279, 5), 414, 397);
                Ⴈ.ႳႠ.Ⴄ(ⴀ1, str3, str4, 180, 132);
                goto case 13;
              case 4:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491049029, 3), Ⴈ.Ⴄ.Ⴅ(), 391, 439);
                num2 = 9;
                continue;
              case 5:
              case 14:
                XmlWriter ⴀ2 = this.Ⴍ.Ⴀ;
                string str5 = Ⴈ.Ⴀ.Ⴐ(1468304174, 8);
                dateTime = UsageReportSender.Ⴈ(170, 184);
                string str6 = MyComputer.Ⴓ(ref dateTime, Ⴈ.ႳႷ.Ⴗ(2059790516, 8), 266, 299);
                Ⴈ.ႳႠ.Ⴄ(ⴀ2, str5, str6, 435, 387);
                num2 = 4;
                continue;
              case 6:
              case 7:
                goto label_17;
              case 8:
                this.Ⴄ.Clear();
                goto case 11;
              case 9:
                num2 = !Ⴈ.Ⴀ.ႭႭ(this.Ⴍ.Ⴈ, Guid.Empty, 123, 107) ? 13 : 3;
                continue;
              case 11:
                this.Ⴄ.Add(new Ⴈ.Ⴄ.ႳႼ(ႷႭ.ႥႭ(490613366, 6), string.Empty));
                num2 = this.Ⴍ.Ⴄ.Count <= 0 ? 12 : 7;
                continue;
              case 12:
                goto label_18;
              case 13:
                XmlWriter ⴀ3 = this.Ⴍ.Ⴀ;
                string str7 = Ⴈ.ႳႷ.Ⴗ(2059790667, 2);
                guid = SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴈ(349, 287);
                string str8 = SmartAssembly.SmartExceptionsCore.StackFrameHelper.Ⴐ(ref guid, ႷႭ.ႥႳ(1491049277, 7), 407, 388);
                Ⴈ.ႳႠ.Ⴄ(ⴀ3, str7, str8, 927, 943);
                num2 = 10;
                continue;
              default:
                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613391, 6), ReportSender1.Ⴄ(ႷႭ.ႥႭ(490613367, 7), 62, 66), 195, 243);
                num2 = 5;
                continue;
            }
          }
label_17:
          this.Ⴍ.Ⴄ.Clear();
label_18:
          this.Ⴍ.Ⴄ.Add(ႷႭ.ႥႭ(490613361, 1), 0);
          ⴗⴓ2 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613407, 3));
          try
          {
            num3 = 6;
            while (true)
            {
              switch (num3)
              {
                case 0:
                  assembly2 = assemblyArray[index1];
                  if ((object) assembly2 != null)
                  {
                    num3 = 4;
                    continue;
                  }
                  break;
                case 3:
                  assemblyArray = this.Ⴈ();
                  index1 = 0;
                  goto case 5;
                case 4:
                  ⴗⴓ3 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304340, 7));
                  try
                  {
                    try
                    {
                      num4 = 8;
                      while (true)
                      {
                        switch (num4)
                        {
                          case 0:
                            num4 = 7;
                            continue;
                          case 1:
                            Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304173, 0), DESCryptoIndirector.Ⴍ(assembly2, 498, 400), 665, 681);
                            goto case 0;
                          case 2:
                            goto label_34;
                          case 3:
                            goto label_32;
                          case 6:
                          case 7:
                            num4 = (object) assembly2 != (object) assembly1 ? 2 : 3;
                            continue;
                          default:
                            Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543344, 2), Ⴈ.ႳႳ.Ⴜ(assembly2, 529, 547), 525, 573);
                            num4 = 1;
                            continue;
                        }
                      }
label_32:
                      Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790676, 0), Ⴈ.Ⴀ.Ⴐ(1468304324, 0), 559, 543);
                    }
                    catch
                    {
                    }
label_34:
                    num5 = 0;
                    switch (num5)
                    {
                    }
                  }
                  finally
                  {
                    num6 = 0;
                    while (true)
                    {
                      switch (num6)
                      {
                        case 1:
                        case 3:
                        case 4:
                        case 5:
                          goto label_38;
                        case 6:
                          goto label_39;
                        default:
                          num6 = ⴗⴓ3 == null ? 6 : 3;
                          continue;
                      }
                    }
label_38:
                    ⴗⴓ3.Dispose();
label_39:;
                  }
                  break;
                case 5:
label_43:
                  if (index1 >= assemblyArray.Length)
                  {
                    num7 = 4;
                    goto label_41;
                  }
                  else
                    goto case 0;
                default:
                  assembly1 = Ⴈ.Ⴄ.Ⴓ();
                  goto case 3;
              }
              num7 = 3;
label_41:
              while (true)
              {
                switch (num7)
                {
                  case 0:
                  case 2:
                  case 6:
                    goto label_43;
                  case 4:
                    goto label_50;
                  default:
                    ++index1;
                    num7 = 6;
                    continue;
                }
              }
            }
          }
          finally
          {
            num8 = 0;
            while (true)
            {
              switch (num8)
              {
                case 2:
                  goto label_49;
                case 3:
                  goto label_48;
                default:
                  num8 = ⴗⴓ2 == null ? 2 : 3;
                  continue;
              }
            }
label_48:
            ⴗⴓ2.Dispose();
label_49:;
          }
label_50:
          num9 = 4;
          switch (num9)
          {
            default:
              ⴗⴓ4 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491049272, 8));
              try
              {
                num10 = 1;
                while (true)
                {
                  switch (num10)
                  {
                    case 0:
                    case 2:
                      goto label_58;
                    case 4:
                      if (this.Ⴍ.Ⴍ.Count > 0)
                      {
                        num10 = 0;
                        continue;
                      }
                      goto label_81;
                    default:
                      if (this.Ⴍ.Ⴍ != null)
                      {
                        num10 = 4;
                        continue;
                      }
                      goto label_81;
                  }
                }
label_58:
                enumerator1 = this.Ⴍ.Ⴍ.Keys.GetEnumerator();
                try
                {
                  num11 = 0;
                  switch (num11)
                  {
                    case 1:
                    case 2:
                    case 3:
label_60:
                      current1 = enumerator1.Current;
                      ⴗⴓ5 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304181, 5));
                      try
                      {
                        num12 = 5;
                        while (true)
                        {
                          switch (num12)
                          {
                            case 0:
                              num12 = str1 != null ? 3 : 1;
                              continue;
                            case 1:
                            case 4:
                              Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304329, 1), Ⴈ.Ⴀ.Ⴐ(1468304327, 3), 33, 17);
                              num12 = 7;
                              continue;
                            case 3:
                              goto label_68;
                            case 6:
                              num12 = 8;
                              continue;
                            case 7:
                              goto label_74;
                            case 8:
                              str1 = (string) this.Ⴍ.Ⴍ[current1];
                              goto case 0;
                            default:
                              Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543354, 8), current1, 99, 83);
                              goto case 6;
                          }
                        }
label_68:
                        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790505, 2), SendingReportFeedbackEventArgs1.Ⴄ(Ⴈ.ႳႷ.Ⴗ(2059790499, 4), str1, Ⴈ.ႳႷ.Ⴗ(2059790497, 6), 592, 620), 449, 497);
                        goto default;
                      }
                      finally
                      {
                        num13 = 5;
                        while (true)
                        {
                          switch (num13)
                          {
                            case 1:
                            case 2:
                              goto label_73;
                            case 6:
                              goto label_72;
                            default:
                              num13 = ⴗⴓ5 == null ? 2 : 6;
                              continue;
                          }
                        }
label_72:
                        ⴗⴓ5.Dispose();
label_73:;
                      }
                    default:
label_74:
                      num14 = 2;
                      while (true)
                      {
                        switch (num14)
                        {
                          case 1:
                          case 3:
                          case 4:
                            goto label_81;
                          default:
                            if (!enumerator1.MoveNext())
                            {
                              num14 = 3;
                              continue;
                            }
                            goto label_60;
                        }
                      }
                  }
                }
                finally
                {
                  num15 = 2;
                  switch (num15)
                  {
                    case 3:
                    default:
                      enumerator1.Dispose();
                      goto case 3;
                  }
                }
label_81:
                num16 = 4;
                switch (num16)
                {
                }
              }
              finally
              {
                num17 = 4;
                while (true)
                {
                  switch (num17)
                  {
                    case 0:
                    case 5:
                      goto label_86;
                    case 2:
                    case 3:
                      goto label_85;
                    default:
                      num17 = ⴗⴓ4 == null ? 5 : 2;
                      continue;
                  }
                }
label_85:
                ⴗⴓ4.Dispose();
label_86:;
              }
              num18 = 5;
              while (true)
              {
                switch (num18)
                {
                  case 1:
                  case 2:
                  case 3:
                    if (this.Ⴗ.Count > 0)
                    {
                      num18 = 4;
                      continue;
                    }
                    goto label_126;
                  case 4:
                    goto label_93;
                  default:
                    if (this.Ⴗ != null)
                    {
                      num18 = 2;
                      continue;
                    }
                    goto label_126;
                }
              }
label_93:
              ⴗⴓ6 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, SimpleZip.Ⴓ(661402730, 4));
              try
              {
                num19 = 1;
                switch (num19)
                {
                  default:
                    enumerator2 = this.Ⴗ.Keys.GetEnumerator();
                    try
                    {
                      num20 = 2;
                      switch (num20)
                      {
                        case 0:
                        case 3:
label_97:
                          current2 = enumerator2.Current;
                          ⴗⴓ7 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543349, 0));
                          try
                          {
                            num21 = 3;
                            while (true)
                            {
                              switch (num21)
                              {
                                case 0:
                                  ⴓⴈ = this.Ⴗ[current2];
                                  Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790686, 5), ⴓⴈ.Ⴈ, 372, 324);
                                  goto case 7;
                                case 2:
                                  num21 = AppPathFinder.Ⴐ(ⴓⴈ.Ⴍ, 458, 509) <= 0 ? 9 : 4;
                                  continue;
                                case 4:
                                  Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304135, 6), ⴓⴈ.Ⴍ, 357, 341);
                                  num21 = 5;
                                  continue;
                                case 5:
                                  goto label_113;
                                case 6:
                                  XmlWriter ⴀ4 = this.Ⴍ.Ⴀ;
                                  string str9 = ႷႭ.ႥႳ(1491048669, 0);
                                  ⴈ2 = ⴓⴈ.Ⴈ;
                                  string str10 = ⴈ2.ToString();
                                  Ⴈ.ႳႠ.Ⴄ(ⴀ4, str9, str10, 788, 804);
                                  goto case 8;
                                case 7:
                                case 10:
                                  num21 = 6;
                                  continue;
                                case 8:
                                  num21 = 2;
                                  continue;
                                case 9:
                                  goto label_107;
                                default:
                                  Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491049426, 4), current2, 656, 672);
                                  num21 = 0;
                                  continue;
                              }
                            }
label_107:
                            Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048662, 2), ⴓⴈ.Ⴐ, 929, 913);
                            goto default;
                          }
                          finally
                          {
                            num22 = 2;
                            while (true)
                            {
                              switch (num22)
                              {
                                case 0:
                                case 3:
                                case 4:
                                  goto label_112;
                                case 1:
                                  goto label_111;
                                default:
                                  num22 = ⴗⴓ7 == null ? 0 : 1;
                                  continue;
                              }
                            }
label_111:
                            ⴗⴓ7.Dispose();
label_112:;
                          }
                        default:
label_113:
                          num23 = 3;
                          while (true)
                          {
                            switch (num23)
                            {
                              case 1:
                              case 4:
                              case 5:
                                goto label_120;
                              default:
                                if (!enumerator2.MoveNext())
                                {
                                  num23 = 1;
                                  continue;
                                }
                                goto label_97;
                            }
                          }
                      }
                    }
                    finally
                    {
                      num24 = 1;
                      switch (num24)
                      {
                        case 0:
                        case 3:
                        default:
                          enumerator2.Dispose();
                          goto case 0;
                      }
                    }
label_120:
                    num25 = 3;
                    switch (num25)
                    {
                    }
                    break;
                }
              }
              finally
              {
                num26 = 1;
                while (true)
                {
                  switch (num26)
                  {
                    case 2:
                    case 6:
                      goto label_124;
                    case 5:
                      goto label_125;
                    default:
                      num26 = ⴗⴓ6 == null ? 5 : 6;
                      continue;
                  }
                }
label_124:
                ⴗⴓ6.Dispose();
label_125:;
              }
label_126:
              num27 = 0;
              switch (num27)
              {
                default:
                  ⴗⴓ8 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790702, 8));
                  try
                  {
                    try
                    {
                      num28 = 2;
                      while (true)
                      {
                        switch (num28)
                        {
                          case 0:
                            Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543313, 6), SmartAssembly.SmartExceptionsCore.Win32.Ⴍ(), 912, 1021);
                            num28 = 8;
                            continue;
                          case 1:
                            num28 = 6;
                            continue;
                          case 3:
                            Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543308, 8), UsageReportSender.ႥႷ((object) ႷႨ.ႰႰ(ReportSender1.Ⴀ(1013, 984), 800, 875), 774, 888), 105, 4);
                            num28 = 0;
                            continue;
                          case 5:
                            goto label_136;
                          case 6:
                            Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613093, 6), UsageReportSender.ႥႷ((object) WaitSendingReportControl.ႥႥ(ReportSender1.Ⴀ(442, 407), 564, 562), 609, 543), 117, 24);
                            num28 = 3;
                            continue;
                          case 7:
                          case 8:
                            goto label_135;
                          default:
                            Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790712, 2), UsageReportSender.ႥႷ((object) SimpleZip.ႤႷ.Ⴜ(454, 396), 471, 425), 361, 260);
                            goto case 1;
                        }
                      }
label_135:
                      Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790599, 0), SmartAssembly.SmartExceptionsCore.Win32.Ⴓ() ? Ⴈ.Ⴀ.Ⴐ(1468304323, 7) : Ⴈ.ႳႷ.Ⴗ(2059790608, 2), 283, 374);
                      Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048680, 5), SmartAssembly.SmartExceptionsCore.Win32.Ⴗ() ? Ⴈ.Ⴀ.Ⴐ(1468304332, 8) : Ⴈ.ႳႷ.Ⴗ(2059790614, 4), 639, 530);
label_136:
                      Ⴈ.ႳႳ.ႥႣ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304143, 6), SmartAssembly.SmartExceptionsCore.Win32.Ⴀ() ? Ⴈ.Ⴀ.Ⴐ(1468304323, 7) : Ⴈ.ႳႷ.Ⴗ(2059790609, 3), 64, 45);
                    }
                    catch
                    {
                    }
                    num29 = 2;
                    switch (num29)
                    {
                    }
                  }
                  finally
                  {
                    num30 = 1;
                    while (true)
                    {
                      switch (num30)
                      {
                        case 0:
                          goto label_142;
                        case 2:
                        case 6:
                          goto label_143;
                        default:
                          num30 = ⴗⴓ8 == null ? 6 : 0;
                          continue;
                      }
                    }
label_142:
                    ⴗⴓ8.Dispose();
label_143:;
                  }
                  num31 = 2;
                  while (true)
                  {
                    switch (num31)
                    {
                      case 0:
                        exception = this.Ⴍ.Ⴐ;
                        num31 = 3;
                        continue;
                      case 1:
                      case 5:
                        goto label_151;
                      case 3:
                        num31 = exception != null ? 6 : 4;
                        continue;
                      case 4:
                        goto label_150;
                      case 6:
                        exceptionList.Add(exception);
                        exception = DoNotDistributeAttribute.Ⴐ(exception, 986, 923);
                        num31 = 3;
                        continue;
                      default:
                        exceptionList = new List<Exception>();
                        goto case 0;
                    }
                  }
label_150:
                  exceptionList.Reverse();
label_151:
                  ⴗⴓ9 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613110, 1));
                  try
                  {
                    num32 = 2;
                    switch (num32)
                    {
                      default:
                        enumerator3 = exceptionList.GetEnumerator();
                        try
                        {
                          num33 = 0;
                          switch (num33)
                          {
                            case 1:
                            case 4:
                            case 5:
label_155:
                              current3 = enumerator3.Current;
                              try
                              {
                                num34 = 1;
                                while (true)
                                {
                                  switch (num34)
                                  {
                                    case 0:
                                      goto label_161;
                                    case 2:
                                    case 6:
                                      collection = (ICollection) Ⴈ.Ⴜ.Ⴅ(current3, 601, 556)[(object) Ⴈ.ႳႷ.Ⴗ(2059790589, 6)];
                                      num34 = 0;
                                      continue;
                                    case 5:
                                      goto label_162;
                                    default:
                                      this.Ⴜ(current3);
                                      if (Ⴈ.Ⴜ.Ⴅ(current3, 162, 215).Contains((object) Ⴈ.ႳႷ.Ⴗ(2059790589, 6)))
                                      {
                                        num34 = 2;
                                        continue;
                                      }
                                      goto label_228;
                                  }
                                }
label_161:
                                count1 = collection.Count;
label_162:
                                num35 = 0;
                                enumerator4 = collection.GetEnumerator();
                                try
                                {
                                  num36 = 5;
                                  switch (num36)
                                  {
                                    case 0:
label_164:
                                      current4 = enumerator4.Current;
                                      try
                                      {
                                        num37 = 3;
                                        while (true)
                                        {
                                          switch (num37)
                                          {
                                            case 0:
                                              num37 = 2;
                                              continue;
                                            case 1:
                                              goto label_173;
                                            case 2:
                                              if (num35 > 100)
                                              {
                                                num37 = 4;
                                                continue;
                                              }
                                              goto label_183;
                                            case 4:
                                            case 5:
                                              if (num35 == count1 - 100)
                                              {
                                                num37 = 1;
                                                continue;
                                              }
                                              goto label_183;
                                            default:
                                              Ⴅ1 = SimpleZip.ႭႰ.Ⴓ(current4, 841, 836);
                                              ++num35;
                                              goto case 0;
                                          }
                                        }
label_173:
                                        ⴗⴓ10 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790612, 2));
                                        try
                                        {
                                          num38 = 3;
                                          switch (num38)
                                          {
                                            default:
                                              Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790624, 6), count1.ToString(), 802, 786);
                                              break;
                                          }
                                        }
                                        finally
                                        {
                                          num39 = 4;
                                          while (true)
                                          {
                                            switch (num39)
                                            {
                                              case 1:
                                              case 5:
                                                goto label_180;
                                              case 2:
                                              case 3:
                                              case 6:
                                                goto label_179;
                                              default:
                                                num39 = ⴗⴓ10 == null ? 1 : 6;
                                                continue;
                                            }
                                          }
label_179:
                                          ⴗⴓ10.Dispose();
label_180:;
                                        }
                                        num40 = 7;
label_182:
                                        while (true)
                                        {
                                          switch (num40)
                                          {
                                            case 1:
                                              num40 = num35 > count1 - 100 ? 12 : 13;
                                              continue;
                                            case 2:
                                            case 8:
                                              num42 = (int) SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴃ(PoweredBy.Ⴈ(Ⴅ1, Ⴈ.ႳႷ.Ⴗ(2059790655, 6), 711, 759), current4, 802, 878);
                                              num40 = 10;
                                              continue;
                                            case 3:
                                            case 11:
                                              Ⴗ = Ⴈ.Ⴄ.Ⴐ(Ⴅ1);
                                              if (!Ⴗ.Ⴐ())
                                              {
                                                num40 = 9;
                                                continue;
                                              }
                                              goto label_216;
                                            case 4:
                                              goto label_183;
                                            case 6:
                                              objArray1 = (object[]) SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴃ(PoweredBy.Ⴈ(Ⴅ1, Ⴈ.Ⴀ.Ⴐ(1468304237, 3), 903, 951), current4, 778, 838);
                                              num40 = 3;
                                              continue;
                                            case 9:
                                              goto label_191;
                                            case 10:
                                              num43 = (int) SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴃ(PoweredBy.Ⴈ(Ⴅ1, ႷႭ.ႥႭ(490613119, 5), 217, 233), current4, 356, 296);
                                              num40 = 6;
                                              continue;
                                            case 12:
                                              num41 = (int) SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴃ(PoweredBy.Ⴈ(Ⴅ1, Ⴈ.Ⴀ.Ⴐ(1468304156, 7), 18, 34), current4, 115, 63);
                                              num40 = 2;
                                              continue;
                                            default:
                                              goto label_218;
                                          }
                                        }
label_191:
                                        ⴗⴓ11 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, SimpleZip.Ⴓ(661402717, 3));
                                        try
                                        {
                                          num44 = 2;
                                          while (true)
                                          {
                                            switch (num44)
                                            {
                                              case 0:
                                                goto label_200;
                                              case 1:
                                                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304337, 2), num45.ToString(), 149, 165);
                                                goto case 11;
                                              case 3:
                                                goto label_202;
                                              case 5:
                                                num45 = this.Ⴈ(Ⴗ);
                                                num44 = num45 <= 0 ? 11 : 1;
                                                continue;
                                              case 6:
                                              case 8:
                                                goto label_201;
                                              case 9:
                                                num44 = 5;
                                                continue;
                                              case 10:
                                                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613113, 3), num43.ToString(), 455, 503);
                                                goto case 9;
                                              case 11:
                                                num44 = num42 == -1 ? 8 : 0;
                                                continue;
                                              default:
                                                Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304158, 5), num41.ToString(), 976, 992);
                                                num44 = 10;
                                                continue;
                                            }
                                          }
label_200:
                                          Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790641, 8), num42.ToString(), 661, 677);
label_201:
                                          objArray2 = objArray1;
                                          index2 = 0;
                                          goto label_209;
label_202:
                                          Ⴅ2 = objArray2[index2];
                                          try
                                          {
                                            num46 = 0;
                                            switch (num46)
                                            {
                                              case 4:
                                                break;
                                              default:
                                                this.Ⴃ(new Ⴈ.Ⴈ(Ⴅ2, true), (FieldInfo) null);
                                                break;
                                            }
                                          }
                                          catch
                                          {
                                          }
                                          num47 = 5;
label_207:
                                          while (true)
                                          {
                                            switch (num47)
                                            {
                                              case 1:
                                                goto label_209;
                                              case 3:
                                              case 4:
                                                goto label_216;
                                              default:
                                                ++index2;
                                                num47 = 1;
                                                continue;
                                            }
                                          }
label_209:
                                          if (index2 >= objArray2.Length)
                                          {
                                            num47 = 3;
                                            goto label_207;
                                          }
                                          else
                                            goto label_202;
                                        }
                                        finally
                                        {
                                          num48 = 3;
                                          while (true)
                                          {
                                            switch (num48)
                                            {
                                              case 0:
                                                goto label_215;
                                              case 4:
                                              case 5:
                                                goto label_214;
                                              default:
                                                num48 = ⴗⴓ11 == null ? 0 : 5;
                                                continue;
                                            }
                                          }
label_214:
                                          ⴗⴓ11.Dispose();
label_215:;
                                        }
label_216:
                                        num49 = 2;
                                        switch (num49)
                                        {
                                          default:
                                            goto label_218;
                                        }
label_183:
                                        num40 = num35 <= 100 ? 12 : 1;
                                        goto label_182;
                                      }
                                      catch
                                      {
                                        goto default;
                                      }
                                    default:
label_218:
                                      num50 = 3;
                                      while (true)
                                      {
                                        switch (num50)
                                        {
                                          case 0:
                                          case 1:
                                          case 4:
                                          case 5:
                                            goto label_228;
                                          default:
                                            if (!enumerator4.MoveNext())
                                            {
                                              num50 = 5;
                                              continue;
                                            }
                                            goto label_164;
                                        }
                                      }
                                  }
                                }
                                finally
                                {
                                  num51 = 4;
                                  while (true)
                                  {
                                    switch (num51)
                                    {
                                      case 0:
                                        goto label_227;
                                      case 3:
                                        goto label_226;
                                      case 6:
                                        num51 = disposable == null ? 0 : 3;
                                        continue;
                                      default:
                                        disposable = enumerator4 as IDisposable;
                                        goto case 6;
                                    }
                                  }
label_226:
                                  disposable.Dispose();
label_227:;
                                }
label_228:
                                num52 = 0;
                                switch (num52)
                                {
                                  default:
                                    goto label_230;
                                }
                              }
                              catch
                              {
                                goto default;
                              }
                            default:
label_230:
                              num53 = 1;
                              while (true)
                              {
                                switch (num53)
                                {
                                  case 3:
                                  case 5:
                                    goto label_237;
                                  default:
                                    if (!enumerator3.MoveNext())
                                    {
                                      num53 = 5;
                                      continue;
                                    }
                                    goto label_155;
                                }
                              }
                          }
                        }
                        finally
                        {
                          num54 = 0;
                          switch (num54)
                          {
                            case 2:
                            default:
                              enumerator3.Dispose();
                              goto case 2;
                          }
                        }
label_237:
                        num55 = 3;
                        switch (num55)
                        {
                        }
                        break;
                    }
                  }
                  finally
                  {
                    num56 = 1;
                    while (true)
                    {
                      switch (num56)
                      {
                        case 0:
                        case 4:
                        case 6:
                          goto label_241;
                        case 2:
                          goto label_242;
                        default:
                          num56 = ⴗⴓ9 == null ? 2 : 6;
                          continue;
                      }
                    }
label_241:
                    ⴗⴓ9.Dispose();
label_242:;
                  }
                  num57 = 0;
                  switch (num57)
                  {
                    default:
                      this.Ⴃ();
                      ⴗⴓ12 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790791, 3));
                      try
                      {
                        num58 = 0;
                        while (true)
                        {
                          switch (num58)
                          {
                            case 2:
                            case 3:
                              goto label_248;
                            default:
                              XmlWriter ⴀ5 = this.Ⴍ.Ⴀ;
                              string localName = Ⴈ.ႳႷ.Ⴗ(2059790800, 0);
                              count2 = this.Ⴍ.Ⴗ.Count;
                              string str11 = count2.ToString();
                              ⴀ5.WriteAttributeString(localName, str11);
                              num58 = 2;
                              continue;
                          }
                        }
label_248:
                        index3 = 0;
label_255:
                        if (index3 < this.Ⴍ.Ⴗ.Count)
                        {
                          try
                          {
                            num59 = 2;
                            switch (num59)
                            {
                              case 1:
                              case 3:
                                break;
                              default:
                                str2 = this.Ⴍ.Ⴗ[index3].ToString();
                                break;
                            }
                          }
                          catch (Exception ex)
                          {
                            str2 = '"'.ToString() + ex.Message + (object) '"';
                          }
                          num60 = 3;
                        }
                        else
                          goto label_256;
label_253:
                        while (true)
                        {
                          switch (num60)
                          {
                            case 0:
                              goto label_262;
                            case 2:
                              goto label_255;
                            default:
                              this.Ⴍ.Ⴀ.WriteElementString(SimpleZip.Ⴓ(661402749, 6), str2);
                              ++index3;
                              num60 = 2;
                              continue;
                          }
                        }
label_256:
                        num60 = 0;
                        goto label_253;
                      }
                      finally
                      {
                        num61 = 4;
                        while (true)
                        {
                          switch (num61)
                          {
                            case 1:
                              goto label_260;
                            case 5:
                              goto label_261;
                            default:
                              num61 = ⴗⴓ12 == null ? 5 : 1;
                              continue;
                          }
                        }
label_260:
                        ⴗⴓ12.Dispose();
label_261:;
                      }
label_262:
                      num62 = 0;
                      switch (num62)
                      {
                        default:
                          ⴗⴓ13 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304243, 7));
                          try
                          {
                            num63 = 0;
                            while (true)
                            {
                              switch (num63)
                              {
                                case 1:
                                  goto label_268;
                                case 5:
                                  num63 = 1;
                                  continue;
                                case 6:
                                  goto label_269;
                                default:
                                  XmlWriter ⴀ6 = this.Ⴍ.Ⴀ;
                                  string localName = Ⴈ.ႳႷ.Ⴗ(2059790800, 0);
                                  count3 = this.Ⴄ.Count;
                                  string str12 = count3.ToString();
                                  ⴀ6.WriteAttributeString(localName, str12);
                                  goto case 5;
                              }
                            }
label_268:
                            index4 = 0;
                            goto label_283;
label_269:
                            ⴗⴓ14 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႭ(490613390, 7));
                            try
                            {
                              num64 = 4;
                              while (true)
                              {
                                switch (num64)
                                {
                                  case 0:
                                  case 2:
                                    goto label_280;
                                  case 1:
                                  case 3:
                                  case 7:
                                    num64 = ⴓⴜ.Ⴈ.Length <= 0 ? 0 : 5;
                                    continue;
                                  case 5:
                                    goto label_274;
                                  default:
                                    ⴓⴜ = this.Ⴄ[index4];
                                    this.Ⴍ.Ⴀ.WriteAttributeString(Ⴈ.ႳႷ.Ⴗ(2059790519, 4), ⴓⴜ.Ⴍ);
                                    num64 = 3;
                                    continue;
                                }
                              }
label_274:
                              this.Ⴍ.Ⴀ.WriteAttributeString(ႷႭ.ႥႭ(490613077, 5), ⴓⴜ.Ⴈ);
                            }
                            finally
                            {
                              num65 = 0;
                              while (true)
                              {
                                switch (num65)
                                {
                                  case 1:
                                    goto label_279;
                                  case 2:
                                  case 3:
                                  case 4:
                                    goto label_278;
                                  default:
                                    num65 = ⴗⴓ14 == null ? 1 : 4;
                                    continue;
                                }
                              }
label_278:
                              ⴗⴓ14.Dispose();
label_279:;
                            }
label_280:
                            num66 = 6;
label_281:
                            while (true)
                            {
                              switch (num66)
                              {
                                case 0:
                                  goto label_283;
                                case 1:
                                case 5:
                                  goto label_290;
                                default:
                                  ++index4;
                                  num66 = 0;
                                  continue;
                              }
                            }
label_283:
                            if (index4 >= this.Ⴄ.Count)
                            {
                              num66 = 1;
                              goto label_281;
                            }
                            else
                              goto label_269;
                          }
                          finally
                          {
                            num67 = 1;
                            while (true)
                            {
                              switch (num67)
                              {
                                case 5:
                                  goto label_289;
                                case 6:
                                  goto label_288;
                                default:
                                  num67 = ⴗⴓ13 == null ? 5 : 6;
                                  continue;
                              }
                            }
label_288:
                            ⴗⴓ13.Dispose();
label_289:;
                          }
label_290:
                          num68 = 1;
                          switch (num68)
                          {
                          }
                          break;
                      }
                  }
              }
          }
        }
        finally
        {
          num69 = 3;
          while (true)
          {
            switch (num69)
            {
              case 0:
              case 5:
                goto label_294;
              case 1:
              case 2:
              case 6:
                goto label_295;
              default:
                num69 = ⴗⴓ1 == null ? 1 : 0;
                continue;
            }
          }
label_294:
          ⴗⴓ1.Dispose();
label_295:;
        }
        num70 = 5;
        while (true)
        {
          switch (num70)
          {
            case 0:
              this.Ⴍ.Ⴜ.Flush();
              goto case 4;
            case 1:
            case 6:
              goto label_302;
            case 3:
              num70 = 6;
              continue;
            case 4:
              array = this.Ⴍ.Ⴜ.ToArray();
              this.Ⴍ.ႨႰ = array;
              goto case 3;
            default:
              this.Ⴍ.Ⴀ.WriteEndDocument();
              this.Ⴍ.Ⴀ.Flush();
              num70 = 0;
              continue;
          }
        }
label_302:
        return this.Ⴍ.ႨႰ;
      }
      catch (Exception ex)
      {
        object[] objects = new object[122]
        {
          (object) assembly1,
          (object) assembly2,
          (object) current1,
          (object) str1,
          (object) current2,
          (object) ⴓⴈ,
          (object) exceptionList,
          (object) exception,
          (object) current3,
          (object) collection,
          (object) count1,
          (object) num35,
          current4,
          (object) Ⴅ1,
          (object) num41,
          (object) num42,
          (object) num43,
          (object) objArray1,
          (object) Ⴗ,
          (object) num45,
          Ⴅ2,
          (object) index3,
          (object) str2,
          (object) ex,
          (object) index4,
          (object) ⴓⴜ,
          (object) ⴗⴓ1,
          (object) dateTime,
          (object) ⴈ1,
          (object) guid,
          (object) ⴗⴓ2,
          (object) assemblyArray,
          (object) index1,
          (object) ⴗⴓ3,
          (object) ⴗⴓ4,
          (object) enumerator1,
          (object) ⴗⴓ5,
          (object) ⴗⴓ6,
          (object) enumerator2,
          (object) ⴗⴓ7,
          (object) ⴈ2,
          (object) ⴗⴓ8,
          (object) ⴗⴓ9,
          (object) enumerator3,
          (object) enumerator4,
          (object) ⴗⴓ10,
          (object) ⴗⴓ11,
          (object) objArray2,
          (object) index2,
          (object) disposable,
          (object) ⴗⴓ12,
          (object) count2,
          (object) ⴗⴓ13,
          (object) count3,
          (object) ⴗⴓ14,
          (object) array,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) num9,
          (object) num10,
          (object) num11,
          (object) num12,
          (object) num13,
          (object) num14,
          (object) num15,
          (object) num16,
          (object) num17,
          (object) num18,
          (object) num19,
          (object) num20,
          (object) num21,
          (object) num22,
          (object) num23,
          (object) num24,
          (object) num25,
          (object) num26,
          (object) num27,
          (object) num28,
          (object) num29,
          (object) num30,
          (object) num31,
          (object) num32,
          (object) num33,
          (object) num34,
          (object) num36,
          (object) num37,
          (object) num38,
          (object) num39,
          (object) num40,
          (object) num44,
          (object) num46,
          (object) num47,
          (object) num48,
          (object) num49,
          (object) num50,
          (object) num51,
          (object) num52,
          (object) num53,
          (object) num54,
          (object) num55,
          (object) num56,
          (object) num57,
          (object) num58,
          (object) num59,
          (object) num60,
          (object) num61,
          (object) num62,
          (object) num63,
          (object) num64,
          (object) num65,
          (object) num66,
          (object) num67,
          (object) num68,
          (object) num69,
          (object) num70,
          (object) this
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private void Ⴃ()
    {
      Ⴈ.ႷႳ ⴗⴓ1;
      int num1;
      int index1;
      Ⴈ.Ⴈ Ⴅ;
      object obj;
      Type Ⴀ;
      Ⴈ.ႷႳ ⴗⴓ2;
      int num2;
      string Ⴐ;
      bool flag;
      char[] chArray1;
      string[] strArray;
      int index2;
      string str1;
      object[] objArray;
      int index3;
      Attribute attribute;
      string str2;
      int num3;
      int num4;
      Array array;
      int num5;
      StringBuilder stringBuilder;
      int num6;
      int num7;
      int num8;
      int num9;
      int num10;
      int num11;
      Ⴈ.ႷႳ ⴗⴓ3;
      int num12;
      int num13;
      IEnumerator enumerator;
      int num14;
      object current;
      int num15;
      IDisposable disposable;
      int num16;
      int num17;
      int num18;
      int num19;
      int num20;
      int num21;
      int num22;
      try
      {
        ⴗⴓ1 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304234, 4));
        try
        {
          num1 = 1;
          while (true)
          {
            switch (num1)
            {
              case 0:
              case 2:
              case 5:
label_4:
                Ⴅ = this.Ⴍ.Ⴃ[index1];
                obj = Ⴅ.Ⴅ();
                num1 = 6;
                continue;
              case 3:
              case 6:
                Ⴀ = Ⴅ.Ⴀ();
                ⴗⴓ2 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048678, 1));
                try
                {
                  num2 = 19;
                  while (true)
                  {
                    switch (num2)
                    {
                      case 0:
                        num2 = index3 < objArray.Length ? 4 : 2;
                        continue;
                      case 1:
                        ++index2;
                        num2 = 6;
                        continue;
                      case 2:
                        goto label_24;
                      case 3:
                        str1 = strArray[index2];
                        num2 = !SmartAssembly.License.License.Ⴄ(str1, Ⴈ.Ⴀ.Ⴐ(1468304192, 6), 222, 240) ? 1 : 12;
                        continue;
                      case 4:
                        attribute = (Attribute) objArray[index3];
                        str2 = Ⴈ.ႳႭ.Ⴀ((MemberInfo) SimpleZip.ႭႰ.Ⴓ((object) attribute, 794, 791), 1011, 1013);
                        num2 = 13;
                        continue;
                      case 5:
                        index2 = 0;
                        num2 = 6;
                        continue;
                      case 6:
                        num2 = index2 < strArray.Length ? 3 : 18;
                        continue;
                      case 7:
                      case 18:
                        objArray = AutoHeightLabel.Ⴓ((MemberInfo) Ⴀ, true, 878, 848);
                        index3 = 0;
                        num2 = 0;
                        continue;
                      case 8:
                        flag = false;
                        num2 = 2;
                        continue;
                      case 9:
                      case 13:
                        num2 = !SmartAssembly.License.License.Ⴄ(str2, ႷႭ.ႥႭ(490613027, 6), 707, 749) ? 8 : 11;
                        continue;
                      case 10:
                        Ⴐ = (string) null;
                        flag = true;
                        string str3 = Ⴈ.Ⴀ.Ⴐ(1468304206, 8);
                        chArray1 = new char[1]{ ',' };
                        char[] chArray2 = chArray1;
                        strArray = SendingReportFeedbackEventArgs1.Ⴀ(str3, chArray2, 136, 149);
                        num2 = 5;
                        continue;
                      case 11:
                        num2 = SmartAssembly.License.License.Ⴄ(str2, Ⴈ.Ⴀ.Ⴐ(1468304199, 2), 251, 213) ? 15 : 8;
                        continue;
                      case 12:
                        num2 = !AppNameFinder.Ⴓ(AppNameFinder.Ⴗ(Ⴀ, 1019, 925), str1, 513, 582) ? 1 : 16;
                        continue;
                      case 15:
                        ++index3;
                        num2 = 0;
                        continue;
                      case 16:
                        flag = false;
                        goto case 17;
                      case 17:
                        num2 = 18;
                        continue;
                      default:
                        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790513, 2), index1.ToString(), 211, 227);
                        num2 = 10;
                        continue;
                    }
                  }
label_24:
                  if (flag)
                  {
                    try
                    {
                      num3 = 6;
                      while (true)
                      {
                        switch (num3)
                        {
                          case 0:
                            Ⴐ = SendingReportFeedbackEventArgs1.Ⴄ(Ⴈ.ႳႷ.Ⴗ(2059790502, 1), Ⴐ, Ⴈ.ႳႷ.Ⴗ(2059790496, 7), 327, 379);
                            num3 = 1;
                            continue;
                          case 1:
                          case 10:
                            goto label_36;
                          case 2:
                            Ⴐ = (string) null;
                            num3 = 1;
                            continue;
                          case 3:
                            Ⴐ = SendingReportFeedbackEventArgs1.Ⴄ(ႷႭ.ႥႳ(1491049468, 3), Ⴐ, ႷႭ.ႥႭ(490613408, 4), 343, 363);
                            num3 = 1;
                            continue;
                          case 5:
                            Ⴐ = ႷႨ.ႰႳ(Ⴀ, obj, ႷႭ.ႥႭ(490613054, 5), 75, 78);
                            goto case 8;
                          case 8:
                            num3 = 1;
                            continue;
                          case 9:
                            num3 = !(obj is Guid) ? 0 : 3;
                            continue;
                          case 11:
                            num3 = !UsageCounts.Ⴜ(Ⴀ, 491, 436) ? 9 : 5;
                            continue;
                          default:
                            Ⴐ = UsageReportSender.ႥႷ(obj, 16, 110);
                            num3 = !Ⴈ.Ⴅ.Ⴐ(Ⴐ, AppNameFinder.Ⴗ(Ⴀ, 798, 888), 686, 756) ? 11 : 2;
                            continue;
                        }
                      }
                    }
                    catch
                    {
                    }
label_36:
                    num4 = 11;
                  }
                  else
                    goto label_40;
label_37:
                  while (true)
                  {
                    switch (num4)
                    {
                      case 0:
                      case 1:
                      case 18:
                        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543341, 2), Ⴈ.Ⴀ.Ⴐ(1468304326, 2), 649, 697);
                        goto case 10;
                      case 2:
                        if (Ⴈ.Ⴄ.ႳႥ(array, 216, 143) == 1)
                        {
                          num4 = 19;
                          continue;
                        }
                        goto label_117;
                      case 3:
                      case 21:
                        stringBuilder = new StringBuilder();
                        num6 = 0;
                        num4 = 16;
                        continue;
                      case 4:
                        this.Ⴄ(FatalExceptionEventArgs.Ⴓ(Ⴀ, 923, 1006));
                        num4 = !SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴓ(Ⴀ, 656, 696) ? 23 : 24;
                        continue;
                      case 5:
                        goto label_59;
                      case 6:
                        DoNotObfuscateTypeAttribute.Ⴃ(stringBuilder, ',', 69, 75);
                        num4 = 15;
                        continue;
                      case 8:
                        goto label_39;
                      case 9:
                        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048664, 5), UsageReportSender.ႥႷ((object) stringBuilder, 200, 182), 582, 630);
                        num4 = 2;
                        continue;
                      case 10:
                        if (ႷႭ.ႰႼ(Ⴀ, 344, 275))
                        {
                          num4 = 13;
                          continue;
                        }
                        goto label_117;
                      case 12:
                        ++num6;
                        num4 = 16;
                        continue;
                      case 13:
                        array = (Array) obj;
                        XmlWriter ⴀ = this.Ⴍ.Ⴀ;
                        string str4 = ႷႭ.ႥႭ(490613464, 7);
                        num5 = Ⴈ.Ⴄ.ႳႥ(array, 147, 196);
                        string str5 = num5.ToString();
                        Ⴈ.ႳႠ.Ⴄ(ⴀ, str4, str5, 416, 400);
                        num4 = 3;
                        continue;
                      case 14:
                        goto label_40;
                      case 15:
                        SimpleZip.ႭႥ(stringBuilder, SimpleZip.ႭႤ(array, num6, 338, 301), 4, 11);
                        num4 = 12;
                        continue;
                      case 16:
                        num4 = num6 < Ⴈ.Ⴄ.ႳႥ(array, 550, 625) ? 20 : 9;
                        continue;
                      case 17:
                        goto label_63;
                      case 19:
                        goto label_58;
                      case 20:
                        num4 = num6 <= 0 ? 15 : 6;
                        continue;
                      case 22:
                        if (num7 > 16)
                        {
                          num4 = 17;
                          continue;
                        }
                        goto label_64;
                      case 23:
                        num4 = !UsageCounts.Ⴜ(Ⴀ, 23, 73) ? 10 : 1;
                        continue;
                      case 24:
                        Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304322, 2), Ⴈ.Ⴀ.Ⴐ(1468304322, 6), 67, 115);
                        goto case 23;
                      default:
                        num4 = Ⴐ == null ? 14 : 8;
                        continue;
                    }
                  }
label_39:
                  Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.ႳႷ.Ⴗ(2059790505, 2), Ⴈ.Ⴄ.Ⴗ(Ⴐ), 876, 860);
                  goto label_40;
label_58:
                  num7 = Ⴈ.Ⴈ.Ⴜ(array, 371, 353);
                  num8 = 0;
                  goto label_70;
label_63:
                  num8 = num7 - 5;
                  goto label_64;
label_40:
                  if (UsageCounts.Ⴜ(Ⴀ, 831, 866))
                  {
                    num4 = 4;
                    goto label_37;
                  }
                  else
                    goto label_72;
label_59:
                  if (num8 == 10)
                  {
                    num4 = 22;
                    goto label_37;
                  }
label_64:
                  try
                  {
                    num9 = 2;
                    switch (num9)
                    {
                      case 0:
                        break;
                      default:
                        this.Ⴃ(new Ⴈ.Ⴈ(Ⴈ.Ⴓ.Ⴄ(array, num8, 919, 1009), false), (FieldInfo) null);
                        break;
                    }
                  }
                  catch
                  {
                  }
                  num10 = 3;
label_68:
                  while (true)
                  {
                    switch (num10)
                    {
                      case 0:
                        goto label_72;
                      case 2:
                        goto label_70;
                      case 4:
                        goto label_73;
                      case 6:
                      case 7:
                        goto label_117;
                      case 8:
                        goto label_75;
                      default:
                        ++num8;
                        num10 = 2;
                        continue;
                    }
                  }
label_75:
                  if (flag)
                  {
                    try
                    {
                      num11 = 2;
                      while (true)
                      {
                        switch (num11)
                        {
                          case 0:
                          case 3:
                          case 4:
                            goto label_80;
                          default:
                            if (obj is IEnumerable)
                            {
                              num11 = 0;
                              continue;
                            }
                            goto label_106;
                        }
                      }
label_80:
                      ⴗⴓ3 = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048697, 2));
                      try
                      {
                        num12 = 4;
                        switch (num12)
                        {
                          default:
                            num13 = 0;
                            enumerator = ((IEnumerable) obj).GetEnumerator();
                            try
                            {
                              num14 = 0;
                              while (true)
                              {
                                switch (num14)
                                {
                                  case 1:
                                  case 4:
                                    this.Ⴃ(new Ⴈ.Ⴈ(current, false), (FieldInfo) null);
                                    goto case 5;
                                  case 2:
                                    num14 = num13 <= 20 ? 1 : 7;
                                    continue;
                                  case 3:
                                    goto label_99;
                                  case 5:
                                    ++num13;
                                    num14 = 6;
                                    continue;
                                  case 6:
                                    num14 = enumerator.MoveNext() ? 9 : 3;
                                    continue;
                                  case 7:
                                    this.Ⴍ.Ⴀ.WriteElementString(ႷႭ.ႥႭ(490612992, 7), string.Empty);
                                    num14 = 3;
                                    continue;
                                  case 9:
                                    current = enumerator.Current;
                                    goto case 2;
                                  default:
                                    num14 = 6;
                                    continue;
                                }
                              }
                            }
                            finally
                            {
                              num15 = 1;
                              while (true)
                              {
                                switch (num15)
                                {
                                  case 2:
                                    goto label_98;
                                  case 3:
                                    goto label_97;
                                  case 4:
                                  case 6:
                                    num15 = disposable == null ? 2 : 3;
                                    continue;
                                  default:
                                    disposable = enumerator as IDisposable;
                                    goto case 4;
                                }
                              }
label_97:
                              disposable.Dispose();
label_98:;
                            }
label_99:
                            num16 = 2;
                            switch (num16)
                            {
                            }
                            break;
                        }
                      }
                      finally
                      {
                        num17 = 1;
                        while (true)
                        {
                          switch (num17)
                          {
                            case 0:
                              goto label_105;
                            case 3:
                              goto label_104;
                            default:
                              num17 = ⴗⴓ3 == null ? 0 : 3;
                              continue;
                          }
                        }
label_104:
                        ⴗⴓ3.Dispose();
label_105:;
                      }
label_106:
                      num18 = 4;
                      switch (num18)
                      {
                      }
                    }
                    catch
                    {
                    }
                    num19 = 0;
                    switch (num19)
                    {
                      case 3:
                      case 4:
                        goto label_117;
                      default:
                        this.Ⴃ(Ⴅ);
                        goto label_117;
                    }
                  }
                  else
                    goto label_117;
label_70:
                  if (num8 >= num7)
                  {
                    num10 = 7;
                    goto label_68;
                  }
                  else
                    goto label_59;
label_72:
                  this.Ⴄ(Ⴀ);
label_73:
                  if (Ⴅ.Ⴗ())
                  {
                    num10 = 8;
                    goto label_68;
                  }
                }
                finally
                {
                  num20 = 3;
                  while (true)
                  {
                    switch (num20)
                    {
                      case 0:
                      case 5:
                        goto label_115;
                      case 1:
                      case 2:
                      case 6:
                        goto label_116;
                      default:
                        num20 = ⴗⴓ2 == null ? 1 : 0;
                        continue;
                    }
                  }
label_115:
                  ⴗⴓ2.Dispose();
label_116:;
                }
label_117:
                num21 = 5;
                break;
              default:
                index1 = 0;
                goto label_120;
            }
label_118:
            while (true)
            {
              switch (num21)
              {
                case 0:
                case 2:
                case 4:
                  goto label_128;
                case 3:
                case 6:
                  goto label_120;
                default:
                  ++index1;
                  num21 = 3;
                  continue;
              }
            }
label_120:
            if (index1 >= this.Ⴍ.Ⴃ.Count)
            {
              num21 = 4;
              goto label_118;
            }
            else
              goto label_4;
          }
        }
        finally
        {
          num22 = 5;
          while (true)
          {
            switch (num22)
            {
              case 3:
                goto label_126;
              case 6:
                goto label_127;
              default:
                num22 = ⴗⴓ1 == null ? 6 : 3;
                continue;
            }
          }
label_126:
          ⴗⴓ1.Dispose();
label_127:;
        }
label_128:
        switch (4)
        {
        }
      }
      catch (Exception ex)
      {
        int num23;
        object[] objects = new object[46]
        {
          (object) index1,
          (object) Ⴅ,
          obj,
          (object) Ⴀ,
          (object) Ⴐ,
          (object) flag,
          (object) str1,
          (object) attribute,
          (object) str2,
          (object) array,
          (object) stringBuilder,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) num13,
          current,
          (object) ⴗⴓ1,
          (object) ⴗⴓ2,
          (object) chArray1,
          (object) strArray,
          (object) index2,
          (object) objArray,
          (object) index3,
          (object) num5,
          (object) ⴗⴓ3,
          (object) enumerator,
          (object) disposable,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num9,
          (object) num10,
          (object) num11,
          (object) num12,
          (object) num14,
          (object) num15,
          (object) num16,
          (object) num17,
          (object) num18,
          (object) num19,
          (object) num20,
          (object) num21,
          (object) num22,
          (object) num23,
          (object) this
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private void Ⴃ(Ⴈ.Ⴈ Ⴅ)
    {
      int num1;
      FieldInfo[] fieldInfoArray1;
      FieldInfo[] fieldInfoArray2;
      int index1;
      FieldInfo Ⴗ;
      int num2;
      bool flag;
      object[] objArray;
      int index2;
      Attribute attribute;
      int num3;
      Ⴈ.ႷႳ ⴗⴓ;
      int num4;
      int count;
      int num5;
      int num6;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_4;
            case 1:
              num1 = 0;
              continue;
            case 2:
              goto label_5;
            case 5:
              goto label_22;
            default:
              fieldInfoArray1 = SmartAssembly.SmartExceptionsCore.Win32.ႣႼ(Ⴅ.Ⴀ(), BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, 970, 968);
              fieldInfoArray2 = fieldInfoArray1;
              goto case 1;
          }
        }
label_4:
        index1 = 0;
        goto label_22;
label_5:
        Ⴗ = fieldInfoArray2[index1];
        try
        {
          num2 = 12;
          while (true)
          {
            switch (num2)
            {
              case 0:
                flag = false;
                num2 = 11;
                continue;
              case 1:
                flag = true;
                objArray = AutoHeightLabel.Ⴓ((MemberInfo) Ⴗ, true, 461, 499);
                index2 = 0;
                num2 = 15;
                continue;
              case 2:
                ++index2;
                num2 = 15;
                continue;
              case 3:
              case 5:
              case 13:
                goto label_19;
              case 4:
              case 11:
                num2 = flag ? 9 : 3;
                continue;
              case 7:
                num2 = !SimpleZip.ႭႰ.Ⴀ(Ⴗ, 269, 348) ? 1 : 5;
                continue;
              case 8:
                num2 = !AppRegistryKeys.Ⴐ(Ⴗ, 81, 37) ? 1 : 7;
                continue;
              case 9:
                goto label_17;
              case 14:
              case 15:
                num2 = index2 < objArray.Length ? 16 : 11;
                continue;
              case 16:
                attribute = (Attribute) objArray[index2];
                num2 = !Ⴈ.Ⴅ.Ⴐ(Ⴈ.ႳႭ.Ⴀ((MemberInfo) SimpleZip.ႭႰ.Ⴓ((object) attribute, 19, 30), 62, 56), Ⴈ.Ⴀ.Ⴐ(1468304198, 3), 803, 889) ? 2 : 0;
                continue;
              default:
                num2 = !ႷႣ.Ⴃ(Ⴗ, 667, 649) ? 8 : 13;
                continue;
            }
          }
label_17:
          this.Ⴃ(new Ⴈ.Ⴈ(SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴃ(Ⴗ, Ⴅ.Ⴅ(), 731, 663), false), Ⴗ);
        }
        catch
        {
        }
label_19:
        num3 = 6;
label_20:
        while (true)
        {
          switch (num3)
          {
            case 0:
              if ((object) Ⴅ.Ⴀ() == null)
              {
                num3 = 5;
                continue;
              }
              goto label_28;
            case 3:
            case 7:
              Ⴅ = new Ⴈ.Ⴈ(Ⴅ.Ⴅ(), FatalExceptionEventArgs.Ⴓ(Ⴅ.Ⴀ(), 150, 226), Ⴅ.Ⴗ());
              goto case 4;
            case 4:
              num3 = 0;
              continue;
            case 5:
              goto label_39;
            case 8:
              goto label_22;
            default:
              ++index1;
              num3 = 8;
              continue;
          }
        }
label_39:
        return;
label_28:
        ⴗⴓ = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491049237, 2));
        try
        {
          num4 = 4;
          switch (num4)
          {
            case 1:
            case 2:
              break;
            default:
              this.Ⴅ(ႷႭ.ႥႳ(1491048590, 3));
              XmlWriter ⴀ = this.Ⴍ.Ⴀ;
              string localName = Ⴈ.ႳႷ.Ⴗ(2059790516, 7);
              count = this.Ⴍ.Ⴃ.Count;
              string str = count.ToString();
              ⴀ.WriteAttributeString(localName, str);
              break;
          }
        }
        finally
        {
          num5 = 3;
          while (true)
          {
            switch (num5)
            {
              case 2:
                goto label_35;
              case 5:
              case 6:
                goto label_36;
              default:
                num5 = ⴗⴓ == null ? 5 : 2;
                continue;
            }
          }
label_35:
          ⴗⴓ.Dispose();
label_36:;
        }
        num6 = 3;
        switch (num6)
        {
          case 1:
            return;
          default:
            this.Ⴍ.Ⴃ.Add(Ⴅ);
            return;
        }
label_22:
        if (index1 >= fieldInfoArray2.Length)
        {
          num3 = 7;
          goto label_20;
        }
        else
          goto label_5;
      }
      catch (Exception ex)
      {
        int num7;
        object[] objects = new object[19]
        {
          (object) fieldInfoArray1,
          (object) Ⴗ,
          (object) flag,
          (object) attribute,
          (object) fieldInfoArray2,
          (object) index1,
          (object) objArray,
          (object) index2,
          (object) ⴗⴓ,
          (object) count,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num7,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) this,
          (object) Ⴅ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    private void Ⴜ(Exception Ⴓ)
    {
      Ⴈ.ႷႳ ⴗⴓ;
      int num1;
      Type Ⴀ;
      string str1;
      int num2;
      int num3;
      string str2;
      int length;
      int num4;
      int num5;
      try
      {
        ⴗⴓ = new Ⴈ.ႷႳ(this.Ⴍ.Ⴀ, MyComputer.Ⴗ(834543266, 3));
        try
        {
          try
          {
            num1 = 0;
            switch (num1)
            {
              case 1:
                str1 = ႷႭ.ႥႳ(1491049266, 4);
                try
                {
                  num2 = 3;
                  switch (num2)
                  {
                    case 1:
                      break;
                    default:
                      str1 = UsageReportSender.Ⴃ(Ⴓ, 199, 251);
                      break;
                  }
                }
                catch
                {
                }
                num3 = 4;
                while (true)
                {
                  switch (num3)
                  {
                    case 0:
                      str2 = PoweredByAttribute.Ⴀ(Ⴈ.ႳႳ.Ⴀ(Ⴓ, 281, 379), 799, 882);
                      num3 = 2;
                      continue;
                    case 1:
                      goto label_16;
                    case 2:
                      Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, Ⴈ.Ⴀ.Ⴐ(1468304218, 7), str2, 164, 148);
                      num3 = 5;
                      continue;
                    case 3:
                      str2 = str2.Substring(0, length);
                      num3 = 1;
                      continue;
                    case 5:
                      length = SimpleZip.ႭႣ(str2, ' ', 564, 601);
                      str2 = ႳႤ.Ⴗ(str2, length + 1, 520, 598);
                      num3 = 7;
                      continue;
                    case 6:
                    case 7:
                      length = UnhandledExceptionHandlerWithUI.Ⴜ(str2, ႷႭ.ႥႳ(1491048603, 1), 52, 40);
                      num3 = length == -1 ? 1 : 3;
                      continue;
                    case 9:
                    case 10:
                      goto label_19;
                    default:
                      Ⴈ.ႳႠ.Ⴄ(this.Ⴍ.Ⴀ, ႷႭ.ႥႳ(1491048576, 4), str1, 871, 855);
                      num3 = 0;
                      continue;
                  }
                }
label_16:
                this.Ⴍ.Ⴀ.WriteAttributeString(ႷႭ.ႥႳ(1491048592, 5), str2);
                this.Ⴓ(new Ⴈ.Ⴈ((object) Ⴓ, true));
                break;
              default:
                Ⴀ = WaitSendingReportControl.Ⴜ(Ⴓ, 95, 53);
                this.Ⴄ(Ⴀ);
                goto case 1;
            }
          }
          catch
          {
          }
label_19:
          num4 = 1;
          switch (num4)
          {
          }
        }
        finally
        {
          num5 = 6;
          while (true)
          {
            switch (num5)
            {
              case 1:
                goto label_25;
              case 5:
                goto label_24;
              default:
                num5 = ⴗⴓ == null ? 1 : 5;
                continue;
            }
          }
label_24:
          ⴗⴓ.Dispose();
label_25:;
        }
        switch (0)
        {
        }
      }
      catch (Exception ex)
      {
        int num6;
        object[] objects = new object[13]
        {
          (object) Ⴀ,
          (object) str1,
          (object) str2,
          (object) length,
          (object) ⴗⴓ,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) this,
          (object) Ⴓ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    internal void Ⴍ(string Ⴗ, object Ⴐ)
    {
      try
      {
        this.Ⴍ.Ⴍ.Add(Ⴗ, Ⴐ);
      }
      catch (Exception ex)
      {
        string o2 = Ⴗ;
        object o3 = Ⴐ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) this, (object) o2, o3);
        throw;
      }
    }

    internal void Ⴀ(string Ⴍ, string Ⴅ)
    {
      int num1;
      Ⴈ.Ⴄ.ႳႨ ⴓⴈ;
      try
      {
        num1 = 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_6;
            case 1:
              goto label_7;
            case 4:
              goto label_8;
            default:
              if (!SimpleZip.ႭႭ(Ⴅ, 926, 946))
              {
                num1 = 0;
                continue;
              }
              goto label_4;
          }
        }
label_6:
        return;
label_7:
        return;
label_8:
        return;
label_4:
        ⴓⴈ = new Ⴈ.Ⴄ.ႳႨ(Ⴅ);
        this.Ⴗ.Add(Ⴍ, ⴓⴈ);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<Ⴈ.Ⴄ.ႳႨ> o1 = (ValueType) ⴓⴈ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num2;
        string o5 = Ⴍ;
        string o6 = Ⴅ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5, (object) o6);
        throw;
      }
    }

    internal bool Ⴗ()
    {
      int num1;
      int num2;
      byte[] Ⴃ;
      int num3;
      int num4;
      StackTrace stackTrace;
      StackFrame stackFrame;
      int num5;
      bool flag;
      int num6;
      ReportSender.ႳႠ Ⴗ;
      try
      {
        Ⴈ.ႳႨ.Ⴐ(1U);
        try
        {
          num1 = 3;
          switch (num1)
          {
            default:
              this.InvokeSendingReportFeedback(SendingReportStep.PreparingReport);
              try
              {
                num2 = 2;
                switch (num2)
                {
                  case 1:
                  case 3:
                    break;
                  default:
                    Ⴃ = this.Ⴍ();
                    break;
                }
              }
              catch (Exception ex)
              {
                num3 = -1;
                try
                {
                  num4 = 4;
                  while (true)
                  {
                    switch (num4)
                    {
                      case 0:
                      case 3:
                        goto label_13;
                      case 1:
                        num4 = 5;
                        continue;
                      case 2:
                        stackFrame = DoNotEncodeStringsAttribute.Ⴃ(stackTrace, ႳႤ.Ⴀ(stackTrace, 102, 105) - 1, 484, 447);
                        goto case 1;
                      case 5:
                        num3 = Ⴈ.Ⴐ.ႥႳ(stackFrame, 946, 1018);
                        num4 = 0;
                        continue;
                      default:
                        stackTrace = new StackTrace(ex);
                        num4 = ႳႤ.Ⴀ(stackTrace, 94, 81) <= 0 ? 0 : 2;
                        continue;
                    }
                  }
                }
                catch
                {
                }
label_13:
                num5 = 2;
                while (true)
                {
                  switch (num5)
                  {
                    case 3:
                      goto label_23;
                    case 4:
                    case 5:
                      goto label_16;
                    default:
                      this.InvokeSendingReportFeedback(SendingReportStep.PreparingReport, Ⴈ.Ⴀ.Ⴜ(Ⴈ.ႳႷ.Ⴗ(2059790812, 4), (object) UsageReportSender.Ⴃ(ex, 765, 705), (object) num3, 885, 830));
                      num5 = 4;
                      continue;
                  }
                }
label_16:
                flag = false;
                break;
              }
              num6 = 1;
              while (true)
              {
                switch (num6)
                {
                  case 0:
                    goto label_20;
                  case 5:
                    goto label_23;
                  default:
                    Ⴗ = new ReportSender.ႳႠ(Ⴈ.Ⴀ.Ⴐ(1468304197, 3), Ⴈ.ႳႷ.Ⴗ(2059790405, 5), Ⴈ.ႳႷ.Ⴗ(2059790834, 1));
                    num6 = 0;
                    continue;
                }
              }
label_20:
              flag = this.Ⴅ(Ⴃ, Ⴗ);
              break;
          }
        }
        catch (ThreadAbortException ex)
        {
          flag = false;
        }
        catch (Exception ex)
        {
          this.ႷႷ(new FatalExceptionEventArgs(ex));
          flag = false;
        }
label_23:
        switch (0)
        {
          default:
            return flag;
        }
      }
      catch (Exception ex)
      {
        int num7;
        int num8;
        object[] objects = new object[16]
        {
          (object) Ⴃ,
          (object) ex,
          (object) num3,
          (object) stackTrace,
          (object) stackFrame,
          (object) Ⴗ,
          (object) ex,
          (object) flag,
          (object) num7,
          (object) num1,
          (object) num2,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num8,
          (object) this
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    [SpecialName]
    public void ႷႠ(FatalExceptionEventHandler Ⴐ)
    {
      int num;
      FatalExceptionEventHandler exceptionEventHandler1;
      FatalExceptionEventHandler comparand;
      FatalExceptionEventHandler exceptionEventHandler2;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 1:
              goto label_5;
            case 2:
            case 6:
              comparand = exceptionEventHandler1;
              exceptionEventHandler2 = (FatalExceptionEventHandler) WaitSendingReportControl.Ⴐ((Delegate) comparand, (Delegate) Ⴐ, 955, 955);
              num = 4;
              continue;
            case 4:
            case 5:
              exceptionEventHandler1 = Interlocked.CompareExchange<FatalExceptionEventHandler>(ref this.Ⴍ.ႨႨ, exceptionEventHandler2, comparand);
              num = exceptionEventHandler1 != comparand ? 6 : 1;
              continue;
            default:
              exceptionEventHandler1 = this.Ⴍ.ႨႨ;
              num = 6;
              continue;
          }
        }
label_5:;
      }
      catch (Exception ex)
      {
        FatalExceptionEventHandler o1 = exceptionEventHandler1;
        FatalExceptionEventHandler o2 = comparand;
        FatalExceptionEventHandler o3 = exceptionEventHandler2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num;
        FatalExceptionEventHandler o6 = Ⴐ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    public void ႷႷ(FatalExceptionEventArgs Ⴐ)
    {
      int num;
      FatalExceptionEventHandler ⴈⴈ;
      try
      {
        num = 2;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
              num = ⴈⴈ == null ? 0 : 3;
              continue;
            case 3:
            case 5:
              goto label_4;
            default:
              ⴈⴈ = this.Ⴍ.ႨႨ;
              goto case 1;
          }
        }
label_5:
        return;
label_4:
        ⴈⴈ((object) this, Ⴐ);
      }
      catch (Exception ex)
      {
        FatalExceptionEventHandler o1 = ⴈⴈ;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        FatalExceptionEventArgs o4 = Ⴐ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, (object) o4);
        throw;
      }
    }

    [SpecialName]
    public void ႷႳ(EventHandler Ⴀ)
    {
      int num;
      EventHandler eventHandler1;
      EventHandler comparand;
      EventHandler eventHandler2;
      try
      {
        num = 3;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_5;
            case 1:
              comparand = eventHandler1;
              eventHandler2 = (EventHandler) WaitSendingReportControl.Ⴐ((Delegate) comparand, (Delegate) Ⴀ, 971, 971);
              num = 4;
              continue;
            case 4:
              eventHandler1 = Interlocked.CompareExchange<EventHandler>(ref this.Ⴍ.ႨႥ, eventHandler2, comparand);
              num = eventHandler1 != comparand ? 1 : 0;
              continue;
            default:
              eventHandler1 = this.Ⴍ.ႨႥ;
              num = 1;
              continue;
          }
        }
label_5:;
      }
      catch (Exception ex)
      {
        EventHandler o1 = eventHandler1;
        EventHandler o2 = comparand;
        EventHandler o3 = eventHandler2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num;
        EventHandler o6 = Ⴀ;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) this, (object) o6);
        throw;
      }
    }

    internal void Ⴄ()
    {
      int num1;
      string Ⴃ;
      string str;
      try
      {
        try
        {
          num1 = 5;
          while (true)
          {
            switch (num1)
            {
              case 0:
                goto label_9;
              case 1:
              case 4:
                Ⴈ.ႷႳ.Ⴍ(ႷႭ.ႰႨ(str, SimpleZip.Ⴓ(661402694, 5), 908, 959), SendingReportFeedbackEventArgs1.Ⴄ(ႷႭ.ႥႳ(1491048620, 0), Ⴃ, Ⴈ.ႳႷ.Ⴗ(2059790496, 7), 1009, 973), 424, 396);
                num1 = 3;
                continue;
              case 2:
                goto label_5;
              case 3:
                num1 = this.Ⴍ.ႨႥ == null ? 0 : 2;
                continue;
              default:
                Ⴃ = Ⴈ.Ⴄ.ႳႭ(591, 581);
                this.ႷႥ(Ⴃ);
                str = AppPathFinder.ReadInstalledSaPath();
                num1 = 4;
                continue;
            }
          }
label_5:
          this.Ⴍ.ႨႥ((object) this, EventArgs.Empty);
        }
        catch (ThreadAbortException ex)
        {
        }
        catch (Exception ex)
        {
          this.ႷႷ(new FatalExceptionEventArgs(ex));
        }
label_9:
        switch (4)
        {
        }
      }
      catch (Exception ex)
      {
        string o1 = Ⴃ;
        string o2 = str;
        Exception o3 = ex;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) num1;
        int num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) num2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) this);
        throw;
      }
    }

    internal bool ႷႥ(string Ⴃ)
    {
      int num1;
      byte[] buffer;
      int num2;
      byte[] Ⴗ;
      int num3;
      byte[] numArray1;
      FileStream fileStream;
      byte[] numArray2;
      bool flag;
      try
      {
        try
        {
          num1 = 1;
          switch (num1)
          {
            default:
              buffer = this.Ⴍ();
              try
              {
                num2 = 1;
                switch (num2)
                {
                  case 3:
                    break;
                  default:
                    Ⴗ = SimpleZip.Zip(buffer);
                    break;
                }
              }
              catch
              {
                Ⴗ = (byte[]) null;
              }
              num3 = 3;
              while (true)
              {
                switch (num3)
                {
                  case 0:
                  case 7:
                    numArray2 = ႷႨ.Ⴄ(Ⴈ.ႷႠ.Ⴅ(468, 459), ႷႭ.ႥႭ(490613368, 8), 851, 805);
                    goto case 8;
                  case 4:
                    goto label_12;
                  case 5:
                    ReportSender1.Ⴍ((Stream) fileStream, numArray2, 0, numArray2.Length, 957, 963);
                    num3 = 6;
                    continue;
                  case 6:
                    ReportSender1.Ⴍ((Stream) fileStream, numArray1, 0, numArray1.Length, 798, 864);
                    num3 = 4;
                    continue;
                  case 8:
                    num3 = 5;
                    continue;
                  default:
                    numArray1 = Ⴈ.Ⴍ.Ⴀ(Ⴗ, MyComputer.Ⴗ(834543076, 1));
                    fileStream = Ⴈ.ႳႳ.ႥႥ(Ⴃ, 54, (int) sbyte.MaxValue);
                    num3 = 0;
                    continue;
                }
              }
label_12:
              fileStream.Close();
              flag = true;
              break;
          }
        }
        catch (ThreadAbortException ex)
        {
          flag = false;
        }
        catch (Exception ex)
        {
          flag = false;
        }
        switch (0)
        {
          default:
            return flag;
        }
      }
      catch (Exception ex)
      {
        int num4;
        object[] objects = new object[12]
        {
          (object) buffer,
          (object) Ⴗ,
          (object) numArray1,
          (object) fileStream,
          (object) numArray2,
          (object) flag,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) this,
          (object) Ⴃ
        };
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    static Ⴄ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static string ႳႠ(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3,
      [In] int obj4,
      [In] int obj5)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj5 ^ obj4)
        {
          case 72:
            num2 = 0;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_8;
            case 1:
            case 2:
            case 7:
              goto label_3;
            case 3:
              num1 = 1;
              continue;
            case 4:
            case 6:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.ႳႠ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return obj0 + obj1 + obj2 + obj3;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        string o3 = obj1;
        string o4 = obj2;
        string o5 = obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        // ISSUE: variable of a boxed type
        __Boxed<int> o7 = (ValueType) obj5;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }

    internal static Process ႳႳ([In] int obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 88:
            num2 = 4;
            break;
          default:
            num2 = 7;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 1;
              continue;
            case 1:
            case 2:
              goto label_3;
            case 4:
            case 6:
              goto label_8;
            case 7:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.ႳႳ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return Process.GetProcessById(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႳႷ([In] string obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_7;
            case 3:
              num1 = 4;
              continue;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 75:
                  num2 = 2;
                  break;
                default:
                  num2 = 3;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        System.IO.File.Delete(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        string o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static void ႳႰ([In] HttpWebClientProtocol obj0, [In] IWebProxy obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_7;
            case 1:
            case 3:
              num1 = 2;
              continue;
            case 5:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 98:
                  num2 = 4;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Proxy = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        HttpWebClientProtocol o3 = obj0;
        IWebProxy o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static WindowsIdentity ႳႣ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 47:
            num2 = 5;
            break;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              num1 = 1;
              continue;
            case 1:
              goto label_3;
            case 3:
              num1 = 1;
              continue;
            case 5:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.ႳႣ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return WindowsIdentity.GetCurrent();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    internal static int ႳႥ([In] Array obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 87:
            num2 = 4;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_8;
            case 1:
              num1 = 7;
              continue;
            case 2:
            case 7:
              goto label_3;
            case 5:
              num1 = 7;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.ႳႥ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.Rank;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Array o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string ႳႭ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 10:
            num2 = 0;
            break;
          default:
            num2 = 2;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_8;
            case 1:
            case 2:
            case 3:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            case 7:
              num1 = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴈ.Ⴄ.ႳႭ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return Path.GetTempFileName();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    private struct ႳႨ
    {
      public readonly string Ⴈ;
      public readonly string Ⴐ;
      public readonly string Ⴍ;
      public readonly int Ⴈ;

      public ႳႨ(string Ⴃ)
      {
        FileInfo fileInfo;
        byte[] buffer;
        FileStream fileStream;
        byte[] inArray;
        try
        {
          this.Ⴈ = string.Empty;
          this.Ⴐ = string.Empty;
          this.Ⴍ = string.Empty;
          this.Ⴈ = 0;
          try
          {
            fileInfo = new FileInfo(Ⴃ);
            this.Ⴈ = ReportSender.Ⴄ(Ⴃ, 108, 70);
            this.Ⴈ = (int) SmartAssembly.SmartExceptionsCore.Win32.ႣႰ(fileInfo, 956, 971);
            buffer = new byte[this.Ⴈ];
            fileStream = UnhandledExceptionHandlerWithUI.Ⴃ(Ⴃ, FileMode.Open, FileAccess.Read, FileShare.ReadWrite, 223, 131);
            try
            {
              SecurityExceptionEventArgs.Ⴓ((Stream) fileStream, buffer, 0, this.Ⴈ, 509, 424);
              Ⴈ.Ⴐ.Ⴈ((Stream) fileStream, 258, 292);
            }
            finally
            {
              fileStream?.Dispose();
            }
            try
            {
              inArray = SimpleZip.Zip(buffer);
            }
            catch
            {
              inArray = (byte[]) null;
            }
            this.Ⴐ = Convert.ToBase64String(inArray);
          }
          catch (Exception ex)
          {
            this.Ⴍ = ex.Message;
          }
        }
        catch (Exception ex)
        {
          FileInfo o1 = fileInfo;
          byte[] o2 = buffer;
          FileStream o3 = fileStream;
          byte[] o4 = inArray;
          Exception o5 = ex;
          // ISSUE: variable of a boxed type
          __Boxed<Ⴈ.Ⴄ.ႳႨ> o6 = (ValueType) this;
          string o7 = Ⴃ;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException7(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
          throw;
        }
      }

      static ႳႨ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    private struct ႳႼ
    {
      public readonly string Ⴍ;
      public readonly string Ⴈ;

      public ႳႼ(string Ⴐ, string Ⴍ)
      {
        try
        {
          this.Ⴍ = Ⴐ;
          this.Ⴈ = Ⴍ;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<Ⴈ.Ⴄ.ႳႼ> o1 = (ValueType) this;
          string o2 = Ⴐ;
          string o3 = Ⴍ;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
          throw;
        }
      }

      static ႳႼ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }

    private struct ႣႰ
    {
      public string Ⴅ;
      public Ⴈ.Ⴄ.ႳႼ Ⴃ;

      [SpecialName]
      public bool Ⴐ()
      {
        try
        {
          return AppPathFinder.Ⴐ(this.Ⴅ, 357, 338) == 0;
        }
        catch (Exception ex)
        {
          int num;
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num;
          // ISSUE: variable of a boxed type
          __Boxed<Ⴈ.Ⴄ.ႣႰ> o2 = (ValueType) this;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException2(ex, (object) o1, (object) o2);
          throw;
        }
      }

      [SpecialName]
      public static Ⴈ.Ⴄ.ႣႰ Ⴄ()
      {
        try
        {
          return new Ⴈ.Ⴄ.ႣႰ(string.Empty, string.Empty, string.Empty);
        }
        catch (Exception ex)
        {
          int num;
          // ISSUE: variable of a boxed type
          __Boxed<int> o1 = (ValueType) num;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException1(ex, (object) o1);
          throw;
        }
      }

      private ႣႰ(string Ⴓ, string Ⴍ, string Ⴃ)
      {
        try
        {
          this.Ⴅ = Ⴓ;
          this.Ⴃ = new Ⴈ.Ⴄ.ႳႼ(Ⴍ, Ⴃ);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<Ⴈ.Ⴄ.ႣႰ> o1 = (ValueType) this;
          string o2 = Ⴓ;
          string o3 = Ⴍ;
          string o4 = Ⴃ;
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
          throw;
        }
      }

      static ႣႰ()
      {
        try
        {
          SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
        }
        catch (Exception ex)
        {
          SmartAssembly.SmartExceptionsCore.StackFrameHelper.CreateException0(ex);
          throw;
        }
      }
    }
  }
}
