// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.TextRenderer
// Assembly: W2E901dpqsgg43z, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E3EDE543-33A5-3966-9367-08505E2DD4BA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-9a55287be3d6c8a74a0aa6ee3a5ea4e288ba968e44c271c9ea5d2293c8300d07.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class TextRenderer
  {
    private string mDefaultFont;
    private Dictionary<TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58, string> alphabet;

    public TextRenderer(string defaultFont = "Consolas")
    {
label_4:
      int num1 = 0;
      int num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(23);
      while (true)
      {
        switch ((num2 ^ 81) + 76)
        {
          case 0:
            goto label_4;
          case 1:
            switch (num1)
            {
              case 80:
                this.mDefaultFont = defaultFont;
                num1 = 2;
                goto label_1;
              case 81:
                this.alphabet = new Dictionary<TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58, string>();
                num1 = 1;
                goto label_1;
              case 82:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\u002Ector);
                num1 = 3;
                goto label_1;
              case 83:
                goto label_11;
              default:
                num2 = -27;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.MeassureText);
            num2 = -25;
            continue;
          case 3:
label_1:
            num1 ^= 81;
            break;
        }
        num2 = AsciiSnake.\uE408\uF03E\uE1B2\uF83C\uE1B5\uEB23\uF0B7\uEA31\uF287\uEA34\uE6A2\uF14E(49);
      }
label_11:;
    }

    public string DefaultFont
    {
      get
      {
label_5:
        int num1 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(32);
        int num2 = 26;
        string mDefaultFont;
        while (true)
        {
          switch (num2 ^ 72)
          {
            case 79:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.get_DefaultFont);
              num2 = 7;
              continue;
            case 80:
              goto label_5;
            case 81:
              switch (num1 + 69)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E);
                  num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF2.\uEA6D\uEF21\uE194\uF646\uE037\uE8F7\uEA59\uE01F\uE593\uEFE2\uE294\uF565(42);
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  mDefaultFont = this.mDefaultFont;
                  num1 = -6;
                  goto label_1;
                default:
                  num2 = 24;
                  continue;
              }
            case 82:
label_1:
              num1 ^= 70;
              break;
          }
          num2 = 25;
        }
label_10:
        return mDefaultFont;
      }
    }

    public Size MeassureText(string value, string fontFamily = "", float fontSize = 8f, double kerning = 0.6)
    {
      if ((Operators.CompareString(fontFamily, "", false) != 0 ? 1 : 0) == 0)
        fontFamily = this.mDefaultFont;
      this.\uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E(Conversions.ToString(value[0]), fontFamily, fontSize);
label_6:
      int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
      int num2 = -10;
      Size size1;
      while (true)
      {
        switch ((num2 ^ 78) + 75)
        {
          case 0:
            goto label_6;
          case 1:
            TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 obj;
            switch (num1 + 82)
            {
              case 0:
                obj = new TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58(value[0], fontFamily, fontSize);
                num1 = -7;
                goto label_3;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\u002Ector);
                num1 = -26;
                goto label_3;
              case 2:
                ref Size local = ref size1;
                Size size2 = obj.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
                int width = checked ((int) Math.Round(unchecked ((double) size2.Width * kerning * (double) value.Length + 0.6)));
                size2 = obj.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
                int height = size2.Height;
                local = new Size(width, height);
                num1 = -5;
                goto label_3;
              case 3:
                num1 = -25;
                goto label_3;
              case 4:
              case 5:
                goto label_14;
              default:
                num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(32);
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E);
            num2 = -7;
            continue;
          case 3:
label_3:
            num1 ^= 73;
            break;
        }
        num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
      }
label_14:
      return size1;
    }

    public void Write(
      string value,
      int x,
      int y,
      ConsoleColor fc,
      string fontFamily = "",
      float fontSize = 8f,
      string f = "█",
      double kerning = 0.6)
    {
      if ((Operators.CompareString(fontFamily, "", false) != 0 ? 1 : 0) == 0)
        fontFamily = this.mDefaultFont;
      this.\uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E(value, fontFamily, fontSize);
      Console.ForegroundColor = fc;
      try
      {
        int num1 = checked (value.Length - 1);
label_5:
        int num2 = 7;
        while (true)
        {
          int index1;
          TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 key;
          switch (num2 ^ 77)
          {
            case 71:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.Write);
              num2 = 10;
              continue;
            case 72:
              if (index1 != 0)
              {
                num2 = 4;
                continue;
              }
              break;
            case 73:
label_9:
              key = new TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58(value[index1], fontFamily, fontSize);
              num2 = 6;
              continue;
            case 74:
              index1 = 0;
              num2 = 5;
              continue;
            case 75:
label_13:
              int num3 = AsciiSnake.\uE408\uF03E\uE1B2\uF83C\uE1B5\uEB23\uF0B7\uEA31\uF287\uEA34\uE6A2\uF14E(57);
              Size size;
              while (true)
              {
                int num4;
                int num5;
                string str1;
                int num6;
                bool flag;
                int num7;
                int num8;
                switch ((num3 ^ 81) + 76)
                {
                  case 0:
                    num4 = checked (size.Width - 1);
                    num3 = -111;
                    continue;
                  case 1:
                    size = key.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
                    num3 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(82);
                    continue;
                  case 2:
                    if (num5 != 0)
                    {
                      num3 = -110;
                      continue;
                    }
                    goto label_39;
                  case 3:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.Write);
                    num3 = -26;
                    continue;
                  case 4:
                    str1 = this.alphabet[key];
                    num3 = -28;
                    continue;
                  case 5:
                    size = key.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
                    num3 = -27;
                    continue;
                  case 6:
                    if (num6 != 0)
                    {
                      num3 = -18;
                      continue;
                    }
                    goto label_41;
                  case 7:
                    if (flag)
                    {
                      num3 = -107;
                      continue;
                    }
                    num8 = 1;
                    break;
                  case 8:
                    num3 = -24;
                    continue;
                  case 9:
                    num3 = -17;
                    continue;
                  case 10:
                    Console.CursorLeft = x;
                    num3 = -19;
                    continue;
                  case 11:
label_28:
                    Console.CursorTop = checked (num6 + y);
                    num3 = -20;
                    continue;
                  case 12:
                    num5 = 0;
                    num3 = -25;
                    continue;
                  case 13:
                    num7 = checked (size.Height - 1);
                    num3 = -109;
                    continue;
                  case 14:
                    num6 = 0;
                    num3 = -21;
                    continue;
                  case 15:
label_32:
                    string str2 = str1;
                    int num9 = num5;
                    int num10 = num6;
                    size = key.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
                    int width = size.Width;
                    int num11 = checked (num10 * width);
                    int index2 = checked (num9 + num11);
                    flag = Operators.CompareString(Conversions.ToString(str2[index2]), "1", false) == 0;
                    num3 = -22;
                    continue;
                  case 16:
                    num8 = 0;
                    break;
                  default:
                    goto label_13;
                }
                if (num8 == 0)
                  Console.Write(f);
                else
                  checked { ++Console.CursorLeft; }
                checked { ++num5; }
label_39:
                if (num5 > num4)
                  checked { ++num6; }
                else
                  goto label_32;
label_41:
                if (num6 <= num7)
                  goto label_28;
                else
                  break;
              }
              double num12 = (double) x;
              size = key.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F;
              double num13 = (double) size.Width * kerning;
              x = checked ((int) Math.Round(unchecked (num12 + num13)));
              checked { ++index1; }
              break;
            default:
              goto label_5;
          }
          if (index1 <= num1)
            goto label_9;
          else
            break;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void \uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E(
      string _param1,
      string _param2,
      float _param3)
    {
      Point point = new Point(0, 0);
      SolidBrush solidBrush = new SolidBrush(Color.White);
      try
      {
        Font font = new Font(_param2, _param3, FontStyle.Regular);
        try
        {
          Size size = new Size(font.Height, font.Height);
label_4:
          int num1 = 28;
          while (true)
          {
            switch (num1 ^ 78)
            {
              case 80:
                num1 = 31;
                continue;
              case 81:
                num1 = 24;
                continue;
              case 82:
                checked { --size.Width; }
                num1 = 26;
                continue;
              case 83:
                checked { --size.Height; }
                num1 = 30;
                continue;
              case 84:
                num1 = 29;
                continue;
              case 85:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\uF38E\uEFDA\uE698\uF552\uE8CA\uEE89\uE530\uF116\uE636\uF5A8\uE7A0\uF32E);
                num1 = 27;
                continue;
              case 86:
                goto label_11;
              default:
                goto label_4;
            }
          }
label_11:
          Bitmap bitmap = new Bitmap(size.Width, size.Height, PixelFormat.Format16bppRgb555);
          try
          {
            Rectangle rect = new Rectangle(0, 0, bitmap.Width, bitmap.Height);
            Graphics graphics = Graphics.FromImage((Image) bitmap);
            try
            {
              int num2 = checked (_param1.Length - 1);
              int index = 0;
              if (index == 0)
                goto label_47;
label_14:
              char ch = _param1[index];
              TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 key = new TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58(ch, _param2, _param3);
              if ((!this.alphabet.ContainsKey(key) ? 1 : 0) != 0)
              {
                graphics.Clear(Color.Black);
label_17:
                int num3 = Player.\uE625\uEA4E\uF6A0\uF1A4\uE38C\uEAD2\uE0AB\uE834\uE207\uE6D3\uEFA3\uED52(77);
                object Instance;
                string str;
                while (true)
                {
                  object objectValue1;
                  object Right;
                  int Left1;
                  int num4;
                  int Left2;
                  int integer;
                  int num5;
                  object objectValue2;
                  bool flag;
                  int num6;
                  switch ((num3 ^ 68) + 71)
                  {
                    case 0:
                      Right = Operators.IntDivideObject(objectValue1, (object) bitmap.Width);
                      num3 = -124;
                      continue;
                    case 1:
                      Left1 = 0;
                      num3 = -126;
                      continue;
                    case 2:
                      objectValue1 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance, (Type) null, "Stride", new object[0], (string[]) null, (Type[]) null, (bool[]) null));
                      num3 = -3;
                      continue;
                    case 3:
                      num3 = -127;
                      continue;
                    case 4:
                      num4 = checked (bitmap.Height - 1);
                      num3 = -125;
                      continue;
                    case 5:
label_23:
                      integer = Conversions.ToInteger(Operators.AddObject(Operators.MultiplyObject((object) Left1, Right), Operators.MultiplyObject((object) Left2, objectValue1)));
                      num3 = -116;
                      continue;
                    case 6:
                      if (Left2 != 0)
                      {
                        num3 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(70);
                        continue;
                      }
                      goto label_44;
                    case 7:
                      str = "";
                      num3 = -7;
                      continue;
                    case 8:
                      graphics.DrawString(Conversions.ToString(ch), font, (Brush) solidBrush, (PointF) point);
                      num3 = -8;
                      continue;
                    case 9:
label_28:
                      num5 = checked (bitmap.Width - 1);
                      num3 = -2;
                      continue;
                    case 10:
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\u002Ector);
                      num3 = -121;
                      continue;
                    case 11:
                      objectValue2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance, (Type) null, "Scan0", new object[0], (string[]) null, (Type[]) null, (bool[]) null));
                      num3 = -1;
                      continue;
                    case 12:
                      Instance = (object) bitmap.LockBits(rect, ImageLockMode.ReadOnly, bitmap.PixelFormat);
                      num3 = (int) sbyte.MinValue;
                      continue;
                    case 13:
                      if (Left1 != 0)
                      {
                        num3 = -6;
                        continue;
                      }
                      goto label_42;
                    case 14:
                      Left2 = 0;
                      num3 = -5;
                      continue;
                    case 15:
                      flag = Marshal.ReadByte(RuntimeHelpers.GetObjectValue(objectValue2), checked (integer + 0)) == (byte) 0;
                      num3 = -114;
                      continue;
                    case 16:
                      num3 = -123;
                      continue;
                    case 17:
                      if (flag)
                      {
                        num3 = -113;
                        continue;
                      }
                      num6 = 1;
                      break;
                    case 18:
                      num6 = 0;
                      break;
                    default:
                      goto label_17;
                  }
                  str = num6 != 0 ? str + "1" : str + "0";
                  checked { ++Left1; }
label_42:
                  if (Left1 > num5)
                  {
                    str += "\r\n";
                    checked { ++Left2; }
                  }
                  else
                    goto label_23;
label_44:
                  if (Left2 <= num4)
                    goto label_28;
                  else
                    break;
                }
                this.alphabet.Add(key, str.Replace("\r\n", ""));
                bitmap.UnlockBits((BitmapData) Instance);
              }
              checked { ++index; }
label_47:
              if (index <= num2)
                goto label_14;
            }
            finally
            {
              if ((graphics == null ? 1 : 0) == 0)
                graphics.Dispose();
            }
          }
          finally
          {
            if ((bitmap == null ? 1 : 0) == 0)
              bitmap.Dispose();
          }
        }
        finally
        {
          if ((font == null ? 1 : 0) == 0)
            font.Dispose();
        }
      }
      finally
      {
        if ((solidBrush == null ? 1 : 0) == 0)
          solidBrush.Dispose();
      }
    }

    private class \uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 : 
      IEquatable<TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58>
    {
      private int hashCode;

      public char \uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C { get; }

      public string \uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3D { get; }

      public float \uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3E { get; }

      public Size \uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F { get; }

      public \uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58(
        char _param1,
        string _param2,
        float _param3)
      {
label_2:
        int num1 = 29;
        while (true)
        {
          switch (num1 ^ 81)
          {
            case 76:
              this.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C = _param1;
              num1 = 31;
              continue;
            case 77:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.GetHashCode);
              num1 = 28;
              continue;
            case 78:
              this.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3D = _param2;
              num1 = 1;
              continue;
            case 79:
              num1 = 0;
              continue;
            case 80:
              this.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3E = _param3;
              num1 = 30;
              continue;
            case 81:
              goto label_8;
            default:
              goto label_2;
          }
        }
label_8:
        SHA256Managed shA256Managed = new SHA256Managed();
        try
        {
          string s = string.Format("{0}{1}{2}", (object) _param1, (object) _param2, (object) _param3);
label_11:
          int num2 = 12;
          byte[] bytes;
          while (true)
          {
            switch (num2 ^ 68)
            {
              case 70:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.get_\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C);
                num2 = 2;
                continue;
              case 71:
                shA256Managed.ComputeHash(bytes);
                num2 = 13;
                continue;
              case 72:
                bytes = Encoding.Unicode.GetBytes(s);
                num2 = 3;
                continue;
              case 73:
                goto label_18;
              default:
                goto label_11;
            }
          }
        }
        finally
        {
          if ((shA256Managed == null ? 1 : 0) == 0)
            shA256Managed.Dispose();
        }
label_18:
        Font font = new Font(_param2, _param3, FontStyle.Regular);
        try
        {
          this.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F = new Size(checked (font.Height - 1), checked (font.Height - 1));
        }
        finally
        {
          if ((font == null ? 1 : 0) == 0)
            font.Dispose();
        }
      }

      public static bool operator ==(
        TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 ct1,
        TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 ct2)
      {
        return (int) ct1.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C == (int) ct2.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C && (Operators.CompareString(ct1.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3D, ct2.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3D, false) == 0 ? 0 : 1) == 0 && (double) ct1.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3E == (double) ct2.\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3E;
      }

      public static bool operator !=(
        TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 ct1,
        TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 ct2)
      {
label_4:
        int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
        int num2 = 6;
        bool flag;
        while (true)
        {
          switch (num2 ^ 74)
          {
            case 73:
              goto label_4;
            case 74:
              switch (num1 + 76)
              {
                case 0:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.get_\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F);
                  num1 = -4;
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  flag = !(ct1 == ct2);
                  num1 = -3;
                  goto label_1;
                default:
                  num2 = 3;
                  continue;
              }
            case 75:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.get_\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3C);
              num2 = 1;
              continue;
            case 76:
label_1:
              num1 ^= 72;
              break;
          }
          num2 = 0;
        }
label_10:
        return flag;
      }

      public override int GetHashCode()
      {
label_5:
        int num1 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(31);
        int num2 = 11;
        int hashCode;
        while (true)
        {
          switch (num2 ^ 69)
          {
            case 75:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.\u002Ector);
              num2 = 14;
              continue;
            case 76:
              goto label_5;
            case 77:
              switch (num1 + 69)
              {
                case 0:
                  hashCode = this.hashCode;
                  num1 = -5;
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.\u002Ector);
                  num1 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(20);
                  goto label_1;
                default:
                  num2 = 9;
                  continue;
              }
            case 78:
label_1:
              num1 ^= 71;
              break;
          }
          num2 = 8;
        }
label_10:
        return hashCode;
      }

      public bool Equals(
        TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58 other)
      {
label_4:
        int num1 = 10;
        int num2 = 7;
        bool flag;
        while (true)
        {
          switch (num2 ^ 77)
          {
            case 71:
              goto label_4;
            case 72:
              switch (num1)
              {
                case 71:
                  flag = this == other;
                  num1 = 4;
                  goto label_1;
                case 72:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.get_\uE479\uF589\uE555\uF102\uE1A4\uED01\uF23E\uF80C\uE9B4\uEB08\uF08F\uEA3F);
                  num1 = 5;
                  goto label_1;
                case 73:
                case 74:
                  goto label_10;
                default:
                  num2 = 10;
                  continue;
              }
            case 73:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (TextRenderer.\uE158\uE462\uEFB9\uEA62\uF222\uE14D\uE33D\uF876\uF307\uE76A\uEC1F\uEB58.op_Equality);
              num2 = 4;
              continue;
            case 74:
label_1:
              num1 ^= 77;
              break;
          }
          num2 = 5;
        }
label_10:
        return flag;
      }
    }
  }
}
