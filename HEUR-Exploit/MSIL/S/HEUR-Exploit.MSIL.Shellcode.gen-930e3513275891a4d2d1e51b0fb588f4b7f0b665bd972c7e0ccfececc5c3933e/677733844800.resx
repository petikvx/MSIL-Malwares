<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PackageName" xml:space="preserve">
    <value>Task Runner Explorer Extensions</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Menus.ctmenu" type="System.Byte[], mscorlib">
    <value>
        Q0ZDVAUAAADQDAAAFAAAAAAAAAC+Vh7d0AwAAHzJB5V/BAAAhKeYmpeqgJmJmZmZmZkJAJcJAAmYmZAJ
        CAAAAAmQCZmZaJmZkJCJeAmIiQmQCJCQmJmHmYCQeYcGiZgAmZAICZmQkJAAAACZCQeZAJAAkJiZAAAA
        iQAAkJCQCJAJkACZCZkAAJmJAIkJkJAJAACQkIAJAJAACZmQAAAJmQgACXl2mYCJcAiZCQgAAAAAAAAA
        VgmZCZAAiVBmCQAAAAAAAFUIAAAJAAAARZWJkAAACYB2kIAJkAAAkGeYCZgAAAAAiAgJmZCQcJCQAAAA
        AJmJAJAJAAAAAACQmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTUqYd2D93
        6uLa0rk3LKd+DUtdD5Z4Ce/I0x/PBpn/XME6AxAaB5uVgaAJBtAnaHUCkIXbDPAJIkY/hFPjV9BszloG
        UUN+P0fjle7zDR29izNjgNPNJI1mqF0CHqDZIKDGwHzReBgAPR+DIxkmgeihq9IhBqp/xHcpvZy77dxo
        KNz2msvsGY1lEA0hT6IPmwxma1VG0HMbhOPOQUV9JanTw6rgvm3iC9jwreTRUOYoM3hWTCWqD9aNgoaf
        oa1oYAUTKcCTYpZaTzgCAXSyf8YazURomFksIrNS0CnhxlSOsOrOIJk3kphKNxRWS580MovNJI2SLA1d
        GsNGwH/rvXSx+DLdiae+yS2xjo5BDbBrm7HIbE6sn7zi18LtdGzct04fi9RBnw08CtsdI/2yO7NME06I
        erjmjgBpaBTToPEoWa3EKSYdRw4dDZvVkPDI8OSurrs8pf+hL8LBEscsMclCrxDn1T2Oq9jQTvfF9Rc6
        AkJEgO7DVojup67h1QSiaj+1PEX8kKIbWoWilFrhFNj1eojjLYL+gXTYkfqNFoFhlQloy4VGgdkE8TqE
        9W+cdmiEApheMB9S6G9TcFW2wHyEVmcIBIwREEIXWQkfQQaYcTBCGz1qhGXnyqNTUzvgdEZ4qKYUEiBE
        CqIowZ24mFSLCgkJIgoG4eJiUC0oJCeIChmEh4v4TigkJ4IKGYRWi0FB8KAWMoNZrCgoHiQGPhSULAIS
        FAoLBhYfAgpKBQkGGYRilUHJIEGD8AZzMeBNhQREEAqD8KwyKFkkKBQeBiw+AhSUCxIGHwpKFgIJCiwK
        BhSUCvtzNjsVhT5RrkwCWk13n7E8ttohKUTnJ5b0DJEBg+UGj9RCCB1C+XPk/LzzUVFDUfID1OAIj0JC
        GBU7DrTH9CZS3yE8CAmapJqaKE52aCC+skHPhk98eFydQpEApaVMpQ0I+CFszACiD6oe2KcQNUD6lRA2
        nMDDeIOUB/YphALEhIEMMsYaHMI2CMlwhSKH9SCEOZ6OHFA6ykNLxwyf9cr+EPCwE4TJRvf7Q+kMYYYU
        x3NCwmJi8WAQY0J4owkkoOohgaEI9pA2k8mnNQ6EgQcPActrDB1DSgbBGNJGNvB0woGPjgKHg4JfY4rl
        JkhrBdxAB8POQBCeKjD6uTtNgqVzCpoF40E6wBQeSv4uV4lJDSf94AsAAACwAAAAAAAAAAAAAAAAAAAA
        AAAA
</value>
  </data>
</root>