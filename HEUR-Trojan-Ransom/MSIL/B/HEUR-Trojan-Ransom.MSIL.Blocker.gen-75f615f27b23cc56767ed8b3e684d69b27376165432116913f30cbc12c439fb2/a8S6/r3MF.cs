// Decompiled with JetBrains decompiler
// Type: a8S6.r3MF
// Assembly: y2KB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3A6517FF-F8AF-40F3-AD9D-058B976B3962
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75f615f27b23cc56767ed8b3e684d69b27376165432116913f30cbc12c439fb2.exe

using Bo4;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Data.OleDb;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;
using System.Windows.Forms;
using Xe6;

namespace a8S6
{
  [EditorBrowsable(EditorBrowsableState.Never)]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class r3MF : Computer
  {
    [EditorBrowsable(EditorBrowsableState.Never)]
    public r3MF()
    {
    }

    [SecuritySafeCritical]
    internal static string f6M8<m4TW>([In] m4TW obj0, [In] string[] obj1, [In] char obj2, [In] short obj3) where m4TW : string
    {
label_3:
      int num1 = 0;
      int num2 = 4;
      IEquatable<string> equatable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 11:
            int num3;
            switch (((int) obj3 ^ (int) obj2) - 79 ^ num1)
            {
              case 0:
                num3 = 9;
                break;
              default:
                num3 = 1;
                break;
            }
            num2 = num3;
            continue;
          case 1:
            equatable = (IEquatable<string>) null;
            num2 = 7;
            continue;
          case 2:
            goto label_12;
          case 3:
            num2 = 4;
            continue;
          case 5:
            num2 = 4;
            continue;
          case 6:
          case 7:
            ++num1;
            int num4 = (int) obj3;
            num2 = (num4 * num4 + (int) obj3) % 2 == 0 ? 2 : 5;
            continue;
          case 8:
            goto label_3;
          case 9:
            equatable = (IEquatable<string>) Utils.GetResourceString((string) obj0, obj1);
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (r3MF.f6M8);
            num2 = 8;
            continue;
        }
      }
label_12:
      return equatable as string;
    }

    [SecuritySafeCritical]
    internal static void s8MT<q2Y7>([In] q2Y7 obj0, [In] int obj1, [In] char obj2) where q2Y7 : Task
    {
      byte[] t = Gr0.t;
      int num1 = 0;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 3:
            num1 = (int) t[38] - 83;
            continue;
          case 2:
            int num3;
            switch (((int) obj2 ^ obj1) - 31 ^ num2)
            {
              case 0:
                num3 = 4;
                break;
              default:
                num3 = 7;
                break;
            }
            num1 = num3;
            continue;
          case 4:
          case 6:
            obj0.Wait();
            goto case 8;
          case 5:
            goto label_11;
          case 7:
            num1 = 9;
            continue;
          case 8:
          case 9:
            ++num2;
            int num4 = (int) obj2;
            num1 = (num4 * num4 + (int) obj2) % 2 == 0 ? 5 : 1;
            continue;
          default:
            num2 = 0;
            num1 = 2;
            continue;
        }
      }
label_11:;
    }

    [SecuritySafeCritical]
    internal static int Ba81<f9CR>([In] f9CR obj0, [In] short obj1, [In] short obj2) where f9CR : OleDbDataReader
    {
label_3:
      int num1 = 0;
      int num2 = 7;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 10:
            goto label_3;
          case 1:
            num3 = 4;
            num2 = 9;
            continue;
          case 2:
            goto label_12;
          case 3:
            num2 = 7;
            continue;
          case 4:
          case 8:
            num3 = obj0.FieldCount;
            num2 = 9;
            continue;
          case 7:
            int num4;
            switch (((int) obj2 ^ (int) obj1) - 75 ^ num1)
            {
              case 0:
                num4 = 4;
                break;
              default:
                num4 = 1;
                break;
            }
            num2 = num4;
            continue;
          case 9:
            ++num1;
            int num5 = (int) obj1;
            num2 = (num5 * num5 + (int) obj1) % 2 == 0 ? 2 : 3;
            continue;
          case 11:
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (r3MF.Ba81);
            num2 = 10;
            continue;
        }
      }
label_12:
      return num3;
    }

    [SecuritySafeCritical]
    internal static void e4RZ<g5J7>([In] g5J7 obj0, [In] DateTime obj1, [In] short obj2, [In] char obj3) where g5J7 : DateTimePicker
    {
      int num1 = 4;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 885 < num3 / 2 - num4 ? 5 : 6;
            continue;
          case 1:
          case 2:
            ++num2;
            num3 = 1770;
            num4 = 728;
            goto case 0;
          case 3:
          case 8:
            num1 = 1;
            continue;
          case 5:
            int num5;
            switch (((int) obj2 ^ (int) obj3) - 39 ^ num2)
            {
              case 0:
                num5 = 7;
                break;
              default:
                num5 = 8;
                break;
            }
            num1 = num5;
            continue;
          case 6:
            goto label_11;
          case 7:
            obj0.Value = obj1;
            goto case 1;
          default:
            num2 = 0;
            num1 = 5;
            continue;
        }
      }
label_11:;
    }

    [SecuritySafeCritical]
    internal static void Sf2g<Zm5c>([In] Zm5c obj0, [In] int obj1, [In] char obj2, [In] char obj3) where Zm5c : ListBox
    {
      int num1 = 8;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 4;
            continue;
          case 1:
          case 7:
            int num5;
            switch (((int) obj3 ^ (int) obj2) - 62 ^ num2)
            {
              case 0:
                num5 = 2;
                break;
              default:
                num5 = 0;
                break;
            }
            num1 = num5;
            continue;
          case 2:
            obj0.SelectedIndex = obj1;
            goto case 4;
          case 3:
            num1 = 713 < num3 / 2 - num4 ? 1 : 5;
            continue;
          case 4:
          case 6:
            ++num2;
            num3 = 1426;
            num4 = 120;
            goto case 3;
          case 5:
            goto label_11;
          default:
            num2 = 0;
            num1 = 1;
            continue;
        }
      }
label_11:;
    }

    [SecuritySafeCritical]
    internal static void Wp9y([In] ref Point obj0, [In] int obj1, [In] char obj2, [In] short obj3)
    {
      int num1 = 7;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            num1 = 6;
            continue;
          case 1:
            goto label_12;
          case 2:
            int num3 = 73 * 9;
            Gr0.t[97] = (byte) (((int) Gr0.t[97] | obj1) & 27);
            num1 = 4761 > 529 - num3 ? 1 : 3;
            continue;
          case 4:
          case 6:
            int num4;
            switch (((int) obj2 ^ (int) obj3) - 16 ^ num2)
            {
              case 0:
                num4 = 8;
                break;
              default:
                num4 = 9;
                break;
            }
            num1 = num4;
            continue;
          case 5:
            ++num2;
            goto case 2;
          case 8:
            obj0.X = obj1;
            goto case 5;
          case 9:
            num1 = 5;
            continue;
          default:
            num2 = 0;
            num1 = 6;
            continue;
        }
      }
label_12:;
    }

    [SecuritySafeCritical]
    internal static object m7R4<Ef47>([In] Ef47 obj0, [In] short obj1, [In] char obj2) where Ef47 : ListBox
    {
      char[] p = Jz9.P;
label_3:
      int num1 = 0;
      int num2 = 6;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_11;
          case 1:
          case 7:
            num2 = 6;
            continue;
          case 2:
          case 4:
          case 10:
            obj = obj0.SelectedItem;
            num2 = 8;
            continue;
          case 3:
            goto label_3;
          case 5:
            obj = (object) null;
            num2 = 8;
            continue;
          case 6:
            int num3 = (int) obj1 ^ (int) obj2;
            Jz9.P[113] = (char) ((int) Jz9.P[113] - (int) obj1 & 167);
            int num4;
            switch (num3 - 2 ^ num1)
            {
              case 0:
                num4 = 2;
                break;
              default:
                num4 = (int) p[31] - 38526;
                break;
            }
            num2 = num4;
            continue;
          case 8:
            ++num1;
            num2 = 330 < 660 / 2 - 55 ? 6 : 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (r3MF.m7R4);
            num2 = 3;
            continue;
        }
      }
label_11:
      return obj;
    }

    [SecuritySafeCritical]
    internal static int b5B9<a9T5>([In] a9T5 obj0, [In] short obj1, [In] short obj2) where a9T5 : ListBox
    {
      byte[] t = Gr0.t;
label_3:
      int num1 = 0;
      int num2 = 9;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 9;
            continue;
          case 1:
            num3 = obj0.SelectedIndex;
            num2 = (int) t[106] / 6;
            continue;
          case 2:
            goto label_3;
          case 3:
            ++num1;
            int num5 = (int) obj2;
            int num6 = num5 * num5;
            num4 = (int) obj2 + num6;
            num2 = (int) t[171] - 80;
            continue;
          case 4:
            num2 = num4 % 2 != 0 ? 9 : 10;
            continue;
          case 5:
          case 6:
            num3 = 0;
            num2 = 3;
            continue;
          case 8:
          case 9:
          case 11:
            int num7;
            switch (((int) obj1 ^ (int) obj2) - 62 ^ num1)
            {
              case 0:
                num7 = 1;
                break;
              default:
                num7 = 6;
                break;
            }
            num2 = num7;
            continue;
          case 10:
            goto label_12;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (r3MF.b5B9);
            num2 = 2;
            continue;
        }
      }
label_12:
      return num3;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct p9KY
    {
      internal Collection r;
    }
  }
}
