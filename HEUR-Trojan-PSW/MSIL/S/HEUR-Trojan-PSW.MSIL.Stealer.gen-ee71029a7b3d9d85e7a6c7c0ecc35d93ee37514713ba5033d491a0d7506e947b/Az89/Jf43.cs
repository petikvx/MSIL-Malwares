// Decompiled with JetBrains decompiler
// Type: Az89.Jf43
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using Le76;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.Linq;
using System.Linq;
using System.Linq.Expressions;
using x7X;

namespace Az89
{
  [StandardModule]
  internal sealed class Jf43
  {
    public static int Ⴍ = 1;

    public static string c7K8()
    {
      Table<Ck51> ⴐ = new Tt1().Ⴐ;
      object body = (object) Expression.Parameter(typeof (Ck51), "c");
      Expression<Func<Ck51, Ck51>> selector = Expression.Lambda<Func<Ck51, Ck51>>((Expression) body, (ParameterExpression) body);
      object list = (object) ⴐ.Select<Ck51, Ck51>(selector).ToList<Ck51>();
      IEnumerable enumerable;
      try
      {
        enumerable = (IEnumerable) checked (((IEnumerable<Ck51>) list).ElementAt<Ck51>(((List<Ck51>) list).Count - 1).Ⴈ + 1).ToString("00000");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        enumerable = (IEnumerable) Jf43.Ⴍ.ToString("30000");
        ProjectData.ClearProjectError();
      }
      return (string) enumerable;
    }
  }
}
