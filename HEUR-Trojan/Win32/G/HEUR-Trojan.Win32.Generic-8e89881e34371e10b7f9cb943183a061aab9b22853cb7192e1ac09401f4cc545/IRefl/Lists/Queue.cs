// Decompiled with JetBrains decompiler
// Type: IRefl.Lists.Queue
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Producers;
using ProjNet.Common;
using ProjNet.Maps;
using ProjNet.Structs;
using ProjNet.Templates;
using System.Runtime.CompilerServices;

namespace IRefl.Lists
{
  public abstract class Queue : Rule, RegistryStatusMap, CodeObjectProducer
  {
    private TestPageOption proccesor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal Queue(
      TestPageOption config,
      string pol,
      string serv,
      long mean_ident2,
      string task3,
      string spec4,
      string selection5)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              PageAdvisorStructBuilder.PrepareCreator();
              num2 = 2;
              continue;
            case 1:
            case 2:
              // ISSUE: explicit constructor call
              base.\u002Ector(pol, serv, mean_ident2, task3, selection5, spec4);
              goto case 4;
            case 4:
              this.proccesor = config;
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto case 0;
            case 5:
              goto label_7;
            default:
              goto label_4;
          }
        }
label_4:
        num1 = 4;
      }
label_7:;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public TestPageOption CompareItem() => this.proccesor;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void LoginItem(TestPageOption param) => this.proccesor = param;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool InvokeItem(object instance)
    {
      int num1 = 3;
      if (true)
        goto label_5;
label_1:
      bool flag1 = !(instance is ExporterTemplate);
      int num2 = 1;
label_4:
      num1 = num2;
label_5:
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_1;
          case 1:
            if (!flag1)
            {
              flag2 = (instance as Queue).CompareItem() == this.CompareItem();
              if (true)
              {
                num1 = 5;
                continue;
              }
              goto label_9;
            }
            else
              goto label_3;
          case 2:
          case 4:
          case 5:
            goto label_9;
          default:
            goto label_6;
        }
      }
label_3:
      flag2 = false;
      goto label_9;
label_6:
      num2 = 4;
      goto label_4;
label_9:
      return flag2;
    }

    internal static bool PublishList() => true;

    internal static bool CollectList() => false;
  }
}
