// Decompiled with JetBrains decompiler
// Type: ‭‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.Asn1;
using Org.BouncyCastle.Pkix;
using Org.BouncyCastle.X509.Store;
using System;
using System.Collections;
using System.IO;

public class \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮
{
  private static readonly \u202E‍⁯‫⁭⁬‪‌‎⁮‏‌⁮‭⁬​‌‭⁬‭‫⁪⁪⁪​​‌‍‍‪‍‏⁪‭​‭‭‮‪‍‮ \u202E​‪⁮‬‮​‪⁭​⁯⁫‬⁬⁪‌⁮‮‮‍⁪‍⁭‫‬⁬‎‎⁫⁯‎‌⁬‬‬⁯‌⁯‭⁫‮ = new \u202E‍⁯‫⁭⁬‪‌‎⁮‏‌⁮‭⁬​‌‭⁬‭‫⁪⁪⁪​​‌‍‍‪‍‏⁪‭​‭‭‮‪‍‮();
  internal static readonly string \u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮ = "2.5.29.32.0";
  internal static readonly string \u202E​⁪‎‮⁫⁮‏⁭⁪⁭⁪⁫⁬​‪⁪‎⁮‮‫⁯‮​‮‎​‪⁮⁯‎⁮‮‌⁫⁬‍⁫⁫‎‮ = \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C‬⁪⁭​⁪‍‪​⁮‪‪‪‏⁭⁪‎​⁬⁯⁭⁪⁫⁭‏‫‫⁫⁪​‭⁫‏⁮‎⁬⁫‮‏‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮;
  internal static readonly int \u200B‍‍‪⁭‪‬‫‬‍⁬⁯‭‪⁫‌‌‌‎‎‮‎‍‮‏⁪⁪‫‫‍⁯⁫‪‌⁮‌‌⁪‏‭‮ = 5;
  internal static readonly int \u200E⁭⁪‎⁮⁮‎⁪‎‌⁯‪‬‬⁭‭‫‭‬⁫‮⁯⁮‭⁬‫⁯⁪‍‪‭‮‫‍⁫‬‫‍‌‪‮ = 6;
  internal static readonly string[] \u202D⁫⁫⁬⁮‪‭⁯‏⁮‫‌‭⁫‮⁬‌⁭⁯‬‭‌⁪⁯‍‌​‪⁬⁭​⁪⁯⁭‍⁯‎​⁫⁯‮ = new string[11]
  {
    "unspecified",
    "keyCompromise",
    "cACompromise",
    "affiliationChanged",
    "superseded",
    "cessationOfOperation",
    "certificateHold",
    "unknown",
    "removeFromCRL",
    "privilegeWithdrawn",
    "aACompromise"
  };

  internal static TrustAnchor \u202B‭‫‎‏‬‪​‌‭‏‏⁯‪⁪‬‬‎‭‍⁭‭‫​⁭⁬⁬‏⁮‭‫‭⁬⁯‫‌⁭‪‭‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param1)
  {
    IEnumerator enumerator = _param1.GetEnumerator();
    TrustAnchor trustAnchor = (TrustAnchor) null;
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj = (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) null;
    Exception innerException = (Exception) null;
    X509CertStoreSelector certStoreSelector = new X509CertStoreSelector();
    try
    {
      certStoreSelector.Subject = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮((object) _param0);
    }
    catch (IOException ex)
    {
      throw new Exception("Cannot set subject search criteria for trust anchor.", (Exception) ex);
    }
    while (enumerator.MoveNext() && trustAnchor == null)
    {
      trustAnchor = (TrustAnchor) enumerator.Current;
      if (trustAnchor.TrustedCert != null)
      {
        if (certStoreSelector.Match((object) trustAnchor.TrustedCert))
          obj = trustAnchor.TrustedCert.\u200C‍‭‭⁯‎‌‏‎‍‍⁯‪⁪‭‪‬‬⁪‎‎⁬‎⁬‮‏⁯‮‪‪‍‌⁮‏‪‌‭⁯‍‭‮();
        else
          trustAnchor = (TrustAnchor) null;
      }
      else
      {
        if (trustAnchor.CAName != null)
        {
          if (trustAnchor.CAPublicKey != null)
          {
            try
            {
              if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮((object) _param0).\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(new \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮(trustAnchor.CAName), true))
              {
                obj = trustAnchor.CAPublicKey;
                goto label_14;
              }
              else
              {
                trustAnchor = (TrustAnchor) null;
                goto label_14;
              }
            }
            catch (\u200E‮‪‏⁮‎​‮⁬​‎⁮‬‎‬⁭‬⁭⁮‍‪⁫‌⁯⁯‌⁯‍⁮‎‌‮‪‮‫‬‫‫⁬⁬‮ ex)
            {
              trustAnchor = (TrustAnchor) null;
              goto label_14;
            }
          }
        }
        trustAnchor = (TrustAnchor) null;
      }
label_14:
      if (obj != null)
      {
        try
        {
          _param0.\u200F‌⁪⁬⁭⁪‭‍‌‫⁪‏‏‍‌⁫‌‍‏‬‌⁫‮⁬⁪‌‮‫⁪‏‎⁬‫‎⁬⁭‏⁬‮⁬‮(obj);
        }
        catch (Exception ex)
        {
          innerException = ex;
          trustAnchor = (TrustAnchor) null;
        }
      }
    }
    return trustAnchor != null || innerException == null ? trustAnchor : throw new Exception("TrustAnchor found but certificate validation failed.", innerException);
  }

  internal static bool \u206A‮‮‌⁫⁬⁮⁯‬‭​‍‌⁬‌⁭‍‎‫‫⁫‮‏‭⁭‎‏​​‫‫⁪⁫‍⁪‮‎‌⁬⁯‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param1)
  {
    try
    {
      return \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202B‭‫‎‏‬‪​‌‭‏‏⁯‪⁪‬‬‎‭‍⁭‭‫​⁭⁬⁬‏⁮‭‫‭⁬⁯‫‌⁭‪‭‮(_param0, _param1) != null;
    }
    catch (Exception ex)
    {
      return false;
    }
  }

  internal static void \u200C‏‫‍‎‌‫⁭‭‍‪⁭⁯‫⁭⁫⁫‭‮‪⁮‫‭‍⁪⁪‍‬‍⁫‬‌‫⁪‌‭⁬‎‏⁪‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    if (_param0.\u206E‍⁫⁫‬⁮‍‫‬‏‫⁪⁬‫‍​⁭⁯⁮‭⁬⁪⁪‬‭‪⁪⁬⁫‎⁯‬⁭‎‏‬‍⁫‫‌‮() == null)
      return;
    foreach (IList list in (IEnumerable) _param0.\u206E‍⁫⁫‬⁮‍‫‬‏‫⁪⁬‫‍​⁭⁯⁮‭⁬⁪⁪‬‭‪⁪⁬⁫‎⁯‬⁭‎‏‬‍⁫‫‌‮())
    {
      if (list[0].Equals((object) 6))
        \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200E⁪‏‪‫​⁬⁭‬⁫‪‮‍⁫‌⁫⁯‏⁮‏‌⁫‎‍​‎‏⁮‮‌⁫‌⁬⁪⁮​​‮⁯‫‮((string) list[1], _param1);
    }
  }

  internal static DateTime \u202D‭⁬⁬‪‏‌‬‪​⁯‎‮​⁭‏⁯⁮‭‫⁯‮‭‫‫‎‮‮‭‌‮‮⁫‎⁯​⁯⁭‏⁬‮(
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param0)
  {
    \u202E⁯‎‎⁭‏‮‮‫‏⁮‬⁬​‌‭⁮‮⁯‌‮‬⁭⁫⁯⁭‭⁯‍⁬‬⁯‮⁭‍‌‮⁭‭‌‮ obj = _param0.\u202D‍⁬⁫‎⁬‫⁫‫‏⁫‪⁪‍⁬‮‪⁬‬⁮⁭​‌⁬‬⁬⁪⁮‭⁪‭‌‭‎‍⁫⁮​‫⁯‮;
    return obj == null ? DateTime.UtcNow : obj.\u206C‬⁪‬‫​⁪‮‏⁭‏‬‏‭⁭‬‫‍⁮‌‪‌‍‮‮‪‪⁪​⁯‎‫⁮‭⁪‍‌‫⁫‮‮;
  }

  internal static \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ \u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮(
    object _param0)
  {
    return _param0 is \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ ? ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0).\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮ : ((\u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮) _param0).\u202A‎‍‏‮‫‍⁪‍‌‫⁭⁬⁭⁬‏⁮​‎⁭⁫​​‎‪‍⁭‏‭‬‭‌⁬⁫‎‌‬⁮‮‎‮.\u200E‍‮‍‍‪‫‪⁬‫‎‫‫‫‌⁪‎‎⁮‮‎‌‬‮‪⁪‬‬⁫⁬‭⁪⁯⁭⁬‬⁬⁫⁪‬‮()[0];
  }

  internal static bool \u202C‬​⁪‭⁬⁮⁪‬‍‎‎⁯‏‮‪⁬‫⁪‪⁬⁫‍‍‎‭‭⁭‭‎‮‬⁪‮⁫‭⁯‏⁬‌‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0)
  {
    return _param0.\u200E‌‪⁫‎⁮‭⁯⁬⁭‪⁬‎‪⁯⁪⁭‫‪‎‍⁯‏‏⁭‍‌​‬⁯‏‌⁯​​‌‎⁯⁮⁫‮.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(_param0.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮, true);
  }

  internal static \u206A​‏⁯⁭⁬⁭‍‌‌‪‮‪‏‬‪⁭⁯⁭⁫‍‍‍‏‭‍‫⁫⁫⁫⁪‭⁮⁫⁫⁬‍‌⁪‪‮ \u200D⁫‪⁫‫⁯‬⁭⁬‌‭‌⁭‭​⁫⁮⁮⁯​‎⁪‎⁮‏​‫‍⁪‫⁭‫‎‌‫‍⁫⁫⁯‌‮(
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ _param0)
  {
    try
    {
      return \u202E‍⁬⁮‎‫‏‮⁬‬⁭⁪⁮‍​⁬⁫‎‍​⁫‪‫⁬‫⁮‌‮‏⁯⁮‮⁭‮⁮‏​‬⁯⁫‮.\u200F‎⁪‬‭‌⁯⁭​‏⁪‬‎⁬⁪‫‮‮‎‏‬‏​‮⁬⁪‬‭‫‌‎⁮⁯​‫‌‭‍⁮⁬‮(_param0).\u202C⁭‍⁪⁮‪‭‫‎⁪⁪⁫​⁯‍⁪⁭​‭‪⁬‏‬‭⁬‮⁯​⁭‭‌⁮‫‭⁫⁬⁯‫‫‭‮;
    }
    catch (Exception ex)
    {
      throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Subject public key cannot be decoded.", ex);
    }
  }

  internal static bool \u206E‭⁪⁯‫‭​⁯‎‮‪‮‫⁪‍​‪‎⁬‫⁬⁫‫⁬‫⁬​⁬‮⁪‫‮⁫​‎‎⁪‎‫‬‮(
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param0)
  {
    return _param0 == null || _param0.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮) || _param0.Count == 0;
  }

  internal static void \u200E⁪‏‪‫​⁬⁭‬⁫‪‮‍⁫‌⁫⁯‏⁮‏‌⁫‎‍​‎‏⁮‮‌⁫‌⁬⁪⁮​​‮⁯‫‮(
    string _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    if (!_param1.\u202C‪‎‪⁮‏‍⁪‫‎‍‮​​⁪​⁪⁬‍⁫‮‮⁬‎⁯​⁬⁬‍​‬‏‬‍‮⁯⁬‍‎‭‮)
      return;
    try
    {
      if (\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200F‌⁯⁫⁭‌‬⁫‬‎‬​‏‮‌‎⁭⁯‫‮⁪⁮⁪‍⁬⁯⁪​​⁯⁪‬‮⁯‍‪‎‎⁯‬‮(_param0, "ldap://"))
      {
        _param0 = _param0.Substring(7);
        int length = _param0.IndexOf('/');
        if (length != -1)
        {
          string str1 = "ldap://" + _param0.Substring(0, length);
        }
        else
        {
          string str2 = "ldap://" + _param0;
        }
        throw \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200E‌‍‍⁬‍‍⁫⁫⁮⁮⁯⁯‮⁯‭‌‎‌⁫‎⁮⁫​‫⁮‎‮‎⁪⁫⁮‮‏⁮​⁮‏⁯‏‮("LDAP cert/CRL stores");
      }
    }
    catch (Exception ex)
    {
      throw new Exception("Exception adding X.509 stores.");
    }
  }

  private static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u202A‪⁭⁫‍‌⁭‬⁬⁪‪‪‫​‍‬‬‫‌⁭‏‎‮‏⁯‬‪‮‌⁯‎‫‮​‍‍⁫⁯‭‮‮(
    object _param0)
  {
    return _param0 is \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ ? ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0).\u206D⁬​⁮‫⁯​⁪⁫⁫⁯‍⁮‮‬‎‪⁮‏⁮‎⁯‌‭‏⁭⁪⁯⁭‏⁭‏⁫​⁫⁪‪‬​⁭‮ : ((\u202E‫⁪‍‌⁫⁪⁮​⁫‭⁫⁮‍⁯‌‎⁮‫⁬⁮‌⁪‍‮‎​‮​​‫‌‫⁫‫‌‌⁮⁯⁬‮) _param0).\u206D⁬​⁮‫⁯​⁪⁫⁫⁯‍⁮‮‬‎‪⁮‏⁮‎⁯‌‭‏⁭⁪⁯⁭‏⁭‏⁫​⁫⁪‪‬​⁭‮;
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ \u206E‌​‬⁯‪‎‍​⁫‏⁮‮‍‬⁭⁪⁫⁯⁯​⁮‮‭⁮⁯‫⁯‫​⁪‪⁪​‫‪⁯⁬⁯‭‮(
    \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ _param0)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    if (_param0 == null)
      return obj;
    foreach (Asn1Encodable asn1Encodable in _param0)
    {
      try
      {
        obj.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) \u200C⁭‬​⁪‍‏‍‌‫⁭‎⁮‪‪⁯‌‪‍‌‏⁮‮⁭‬‪‬‭‌⁮​⁯‏‬‍‮‭​‭‏‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) asn1Encodable.ToAsn1Object()));
      }
      catch (IOException ex)
      {
        throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy qualifier info cannot be decoded.", (Exception) ex);
      }
    }
    return obj;
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param0,
    IList[] _param1,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param2)
  {
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj = _param2.\u200F‫‏‍⁮⁭‪‌⁭⁪‏​‏​‫‪‌‮‍‎⁭⁪‬​⁬‭‬‍‌⁫‫⁬⁭⁮⁮⁫‎⁫⁫‎‮;
    if (_param0 == null)
      return (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) null;
    if (obj == null)
    {
      for (int index = 0; index < _param1.Length; ++index)
        _param1[index] = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
      return (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) null;
    }
    obj.\u206A⁮‪‬⁫⁫⁯‫⁯⁯‎‭​‍‪⁪‫‬‫⁫⁬‍‮⁪‍⁬‌⁬⁯‬‌‏⁫⁯‪‬‪‮⁯⁪‮(_param2);
    \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200F​‎⁯‬⁪‏⁯‎‎⁮‏‪‏‎⁭⁪⁭‭‎⁬‭‭‌‫‮‭⁪‏⁭⁭‌‮‍⁮‮‫‭‫‫‮(_param1, _param2);
    return _param0;
  }

  private static void \u200F​‎⁯‬⁪‏⁯‎‎⁮‏‪‏‎⁭⁪⁭‭‎⁬‭‭‌‫‮‭⁪‏⁭⁭‌‮‍⁮‮‫‭‫‫‮(
    IList[] _param0,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param1)
  {
    _param0[_param1.\u206C⁫‭‮‪‎‍⁮‮‬‌‬‮‪‫⁪‍‮‪⁬‏‎‫‭⁭‌‬⁪‎⁪‬​‏​⁪‪⁪‭‌⁬‮].Remove((object) _param1);
    if (!_param1.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
      return;
    foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj in _param1.\u202A‏⁫‌‍⁬‎⁮‫​⁯‮‏​‮‭⁫‫‪⁮‏‏⁫⁪‌‌‬​‫⁯⁪‎‮‮‏⁭‏‭‬⁬‮)
      \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200F​‎⁯‬⁪‏⁯‎‎⁮‏‪‏‎⁭⁪⁭‭‎⁬‭‭‌‫‮‭⁪‏⁭⁭‌‮‍⁮‮‫‭‫‫‮(_param0, obj);
  }

  internal static void \u200E‏‫⁮⁯⁭‬⁭‬‭‪‬‭‏⁪⁯‮‮⁪‏‬‍⁭‮‪​‮‌‫⁬⁬‫‮⁭⁬‍‍‏‮⁮‮(
    int _param0,
    IList[] _param1,
    string _param2,
    IDictionary _param3,
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param4)
  {
    bool flag1 = false;
    foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj in (IEnumerable) _param1[_param0])
    {
      if (obj.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮.Equals(_param2))
      {
        flag1 = true;
        obj.\u202D⁮​‫‬⁪‎‏⁮⁪⁫⁪​‮‪‍⁮‪⁮‎‌⁫⁮⁬‬⁬⁫‍‭⁪‫​‫‮‬⁪‬‏‌‎‮ = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) _param3[(object) _param2];
        break;
      }
    }
    if (flag1)
      return;
    foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj1 in (IEnumerable) _param1[_param0])
    {
      if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj1.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
      {
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) null;
        \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮ obj3;
        try
        {
          obj3 = \u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param4, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮));
        }
        catch (Exception ex)
        {
          throw new Exception("Certificate policies cannot be decoded.", ex);
        }
        foreach (object obj4 in obj3)
        {
          \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮ obj5;
          try
          {
            obj5 = \u202B⁬​⁬‭‮⁮⁭‌‪⁮‍⁮⁮‎‭⁪⁮‭⁮‍⁮⁬‎⁮⁭‪⁯‮‮‭‫‬⁯⁯⁭‌‬‭‬‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮(obj4);
          }
          catch (Exception ex)
          {
            throw new Exception("Policy information cannot be decoded.", ex);
          }
          if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj5.\u206C⁭⁫‌⁯⁫‪⁬‭⁪‭‏‌‪⁯‮‫‍⁮‮⁬⁫‌‬⁬‫‏‏‏‪⁫‬⁯‫‮‬⁭⁭⁬⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
          {
            try
            {
              obj2 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206E‌​‬⁯‪‎‍​⁫‏⁮‮‍‬⁭⁪⁫⁯⁯​⁮‮‭⁮⁯‫⁯‫​⁪‪⁪​‫‪⁯⁬⁯‭‮(obj5.\u206F⁮⁬‭‬‭‌‌⁬⁬⁪⁮⁬‍⁫‏⁫‫⁯⁪‫‮‌‭​​⁬‭‌⁯‮‏‮‫⁭⁭‎⁫​⁫‮);
              break;
            }
            catch (\u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮ ex)
            {
              throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("Policy qualifier info set could not be built.", (Exception) ex);
            }
          }
        }
        bool flag2 = false;
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj6 = _param4.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮();
        if (obj6 != null)
          flag2 = obj6.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u200C​⁬‏⁮‎‎‬‏⁫‏‎⁯⁮‬‪‪⁭‭⁪‬⁮‭⁪⁬⁯‎⁪‭⁪‬⁬⁯‍‎⁮⁮‌‍‮‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
        \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj7 = obj1.\u200F‫‏‍⁮⁭‪‌⁭⁪‏​‏​‫‪‌‮‍‎⁭⁪‬​⁬‭‬‍‌⁫‫⁬⁭⁮⁮⁫‎⁫⁫‎‮;
        if (!\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj7.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
          break;
        \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj8 = new \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮(\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(), _param0, (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) _param3[(object) _param2], obj7, obj2, _param2, flag2);
        obj7.\u202B‭‬⁪​‭⁬‪⁫⁮‫​‭‭⁭‫⁪‌⁫‫‌‬‎‬⁪‬‫⁭⁯‬‏⁫⁭⁫‍‪⁮​‎‭‮(obj8);
        _param1[_param0].Add((object) obj8);
        break;
      }
    }
  }

  internal static \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ \u206A‬⁮‮⁪⁮⁬⁭‏‍‮⁬‍‬‮⁮‍⁬‍⁮‬⁪⁯‫⁭‪‭‬⁫‮⁭⁬‮‬‫‏​⁯​⁫‮(
    int _param0,
    IList[] _param1,
    string _param2,
    \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ _param3)
  {
    int index1 = 0;
    foreach (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj1 in (IEnumerable) \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮((ICollection) _param1[_param0]))
    {
      if (obj1.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮.Equals(_param2))
      {
        obj1.\u200F‫‏‍⁮⁭‪‌⁭⁪‏​‏​‫‪‌‮‍‎⁭⁪‬​⁬‭‬‍‌⁫‫⁬⁭⁮⁮⁫‎⁫⁫‎‮.\u206A⁮‪‬⁫⁫⁯‫⁯⁯‎‭​‍‪⁪‫‬‫⁫⁬‍‮⁪‍⁬‌⁬⁯‬‌‏⁫⁯‪‬‪‮⁯⁪‮(obj1);
        _param1[_param0].RemoveAt(index1);
        for (int index2 = _param0 - 1; index2 >= 0; --index2)
        {
          IList list = _param1[index2];
          for (int index3 = 0; index3 < list.Count; ++index3)
          {
            \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj2 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index3];
            if (!obj2.\u200F‎‮⁭⁫‮‭​‮‍‎‌⁭‌‎⁪‭‬‭‭‪‪⁭‮‍⁬⁬‏‏‭‪‍‬‮⁭⁯‏‬‏⁯‮)
            {
              _param3 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B‎‬⁭‌⁯⁮‫‪⁭‍‌⁬⁯‎‪‫​‏‌‎‭⁮⁬‭⁭⁭‪⁬‎‮⁫​‫‫⁬‪⁮​‫‮(_param3, _param1, obj2);
              if (_param3 == null)
                break;
            }
          }
        }
      }
      else
        ++index1;
    }
    return _param3;
  }

  internal static void \u202E‬⁫⁪‪‍⁮‌⁪‭‌​‌‏⁮‎‏⁬‏‮‫⁯⁫‮⁪‬‪‎⁬‫‮⁫‫‬‮​‎‌‏⁬‮(
    DateTime _param0,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param1,
    object _param2,
    \u200D⁭⁬⁭⁪‬⁮⁫⁮⁭‬‫⁯⁬⁮‎‍‮‏⁫⁫‍‬⁬‮‏⁭‬‬‫⁮⁫⁯‍‌⁪‍⁮‏‍‮ _param3)
  {
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ obj1;
    try
    {
      obj1 = new \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮(\u202B‬⁭⁮⁫‮⁪⁬‫‎‌⁫​⁮⁬‭‌⁫‮‮‮⁭‎‏⁪⁯⁬⁭⁪⁪​⁯⁮​⁬⁭‭‫⁭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) (\u206A‬⁪⁯​⁯‍⁭⁯‮‎‮⁫​‎‬‌‌‏⁪‍⁫‏​⁫​‪​⁯⁫⁮⁯‮​⁬‎‫‌‌⁯‮) \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮.\u202E‍‌‎‍‫‪‎‌⁯‫⁫‏‮‏⁪⁯‫​‌‌⁫‬‍‍‮⁪⁫‮‬‪⁯​‮⁭‫⁫⁪‎‪‮(_param1.\u206F​‪‪‌‮‬‫⁮​⁭‎‪​‬⁯‫‎⁭‪‌​‮‮‌​‌‮‏‭‎‫‌‮⁭‍‭‫‬‫‮())));
    }
    catch (Exception ex)
    {
      throw new Exception("Bouncy Castle X509Crl could not be created.", ex);
    }
    \u202B⁫‏⁬‌‌⁫⁮‬‎​‎⁯⁬⁬⁯‎‬‏⁯⁮⁭‎⁫‎⁮​‍​‍‭‭⁭⁭‫‮‍⁮‌‌‮ obj2 = obj1.\u206F⁫‮⁫‪⁪‌‭‬⁬‮‪‏‫⁮⁬‎‫⁫‬⁫⁯‮‬⁫⁭‍⁮‫⁮⁯⁬‭⁭‫‌‌⁭‍‮‮(\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202A‪⁭⁫‍‌⁭‬⁬⁪‪‪‫​‍‬‬‫‌⁭‏‎‮‏⁯‬‪‮‌⁯‎‫‮​‍‍⁫⁯‭‮‮(_param2));
    if (obj2 == null)
      return;
    \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj3 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮(_param2);
    if (!obj3.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(obj2.\u202D⁬​⁮​‮‍⁪⁮​‏‬‫⁬⁬‍⁯⁬‏‮​‍‍‭⁯⁬‬‎‪​⁪⁮‎⁪‪⁭⁪‬⁯⁯‮(), true) && !obj3.\u202C⁮⁪⁫‪‫‮⁬⁮‏⁫‎‭‌⁬⁬​‏⁬‮‍‮‪⁬‪‌‫‌⁭‪⁪‪‫‫⁫‬‏⁯‭‮(_param1.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮, true))
      return;
    int num = 0;
    if (obj2.\u206D‍‍⁪‭​⁮‬‫⁪‏⁮‌‎⁫⁬⁫‎⁮‫⁪‎⁯⁫‬⁭‪⁭⁯‪‫⁭‫‏​‭⁭⁫​‏‮)
    {
      try
      {
        \u200B⁭‍‬⁯​‫​⁫⁮⁭⁬‎​​‭‪‏‌‮⁯‏‬‬‬⁯‍‪‪‫‮⁪⁮‍‬‮‮⁭⁭‭‮ obj4 = \u200B⁭‍‬⁯​‫​⁫⁮⁭⁬‎​​‭‪‏‌‮⁯‏‬‬‬⁯‍‪‪‫‮⁪⁮‍‬‮‮⁭⁭‭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) obj2, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202A‍⁭⁫⁮‎‪⁮​‮‎⁯‏‬‍‎⁪‮‍‪⁮⁮⁬‮‮‬‫‬​‮‌‮⁮⁬⁬‏⁪⁯‭‍‮));
        if (obj4 != null)
          num = obj4.\u202E‭‫⁪‮​‎⁮‏‬⁬⁫‬‍‍‌‏‍⁭‮‭⁭⁫‮⁭‍‎⁬‫‮‬⁮‌⁪⁬‭⁮⁬‬‪‮;
      }
      catch (Exception ex)
      {
        throw new Exception("Reason code CRL entry extension could not be decoded.", ex);
      }
    }
    DateTime dateTime = obj2.\u206A‎‪‭​⁯‍‏‍‪‫⁯⁫‮‎⁫⁭‪‏​‪‭‎‎⁯‌​​‬‫​‭‏⁬⁯‍⁯‬‭⁮‮;
    if (_param0.Ticks < dateTime.Ticks)
    {
      switch (num)
      {
        case 0:
        case 1:
        case 2:
        case 10:
          break;
        default:
          return;
      }
    }
    _param3.\u202A‪⁭‪⁪‎‌⁫⁭‬⁯‭⁯‎⁯‮⁭⁫⁪‌‍⁭‍⁮‭⁫⁬‭‬⁬⁫‍‭⁫⁫⁮‎⁬‫⁪‮ = num;
    _param3.\u206A‎‪‭​⁯‍‏‍‪‫⁯⁫‮‎⁫⁭‪‏​‪‭‎‎⁯‌​​‬‫​‭‏⁬⁯‍⁯‬‭⁮‮ = new \u202E⁯‎‎⁭‏‮‮‫‏⁮‬⁬​‌‭⁮‮⁯‌‮‬⁭⁫⁯⁭‭⁯‍⁬‬⁯‮⁭‍‌‮⁭‭‌‮(dateTime);
  }

  internal static \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ \u200D‍⁫​⁭​⁪⁭​‍‌⁬‪⁯⁬‪‬⁮‭‮‍‬​⁭‌‍⁭⁯‍‍​‫⁫‎‫‪‮⁫‬‫‮(
    IList _param0,
    int _param1)
  {
    \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj1 = ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0[_param1]).\u200C‍‭‭⁯‎‌‏‎‍‍⁯‪⁪‭‪‬‬⁪‎‎⁬‎⁬‮‏⁯‮‪‪‍‌⁮‏‪‌‭⁯‍‭‮();
    if (!(obj1 is \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮))
      return obj1;
    \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ obj2 = (\u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮) obj1;
    if (obj2.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮ != null)
      return (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) obj2;
    for (int index = _param1 + 1; index < _param0.Count; ++index)
    {
      \u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮ obj3 = ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param0[index]).\u200C‍‭‭⁯‎‌‏‎‍‍⁯‪⁪‭‪‬‬⁪‎‎⁬‎⁬‮‏⁯‮‪‪‍‌⁮‏‪‌‭⁯‍‭‮();
      \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ obj4 = obj3 is \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮ ? (\u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮) obj3 : throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("DSA parameters cannot be inherited from previous certificate.");
      if (obj4.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮ != null)
      {
        \u206B‮‪​‏​⁫‮⁬‫‫⁯⁫⁪⁪⁪⁯‏‎‬⁮​⁭⁭⁯‌⁬⁬‍‫⁮⁯‏‭‎⁮‫⁪‏‍‮ obj5 = obj4.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        try
        {
          return (\u206D⁬‬⁫‪‎⁭⁭‌​⁬‌⁯‍‍⁯⁭‬‫‪‭‏⁮‏‭‬‫⁮‌‏⁯‫‫⁫⁫‭⁭‏‌‍‮) new \u206E‭‭⁭‍​⁮⁬⁬‏⁬‭‫⁮‫‭‭‎‫‍‎⁭‏‍⁮‏⁯⁭⁫​‭‪​‮‪‎‫‪⁫‬‮(obj2.\u202E‪‏⁭‎‍‮⁪⁮​‍⁯⁬⁬‬‮⁬‪‍‮‏‎‭‏‌​⁬‍⁬⁮‪‫⁪⁯‏‎⁫‌⁭‎‮, obj5);
        }
        catch (Exception ex)
        {
          throw new Exception(ex.Message);
        }
      }
    }
    throw new \u202A‮⁭⁯‬‍⁮​‫⁮⁫‪‍⁯⁫‫‮⁪⁮‫‭‭⁮‎‎⁯​⁫​‬‫‍‍‬⁯⁯‪‭⁫⁬‮("DSA parameters cannot be inherited from previous certificate.");
  }

  internal static DateTime \u200E‪⁯⁫‌‪⁪⁫⁯⁭‮‍‪⁬‌‌‎‪‪‏‎⁪‭⁫⁭​⁫‭‎‫‌‌‪‎⁫‏‪‮⁫⁮‮(
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param0,
    \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ _param1,
    int _param2)
  {
    if (_param0.\u206B⁮⁮​⁫‫‎⁫‭‮‫⁬⁮⁮‪⁯⁯‌⁯⁪‍‭⁯⁫‭‪⁮⁪⁯‫‍⁮‎‬‭‍‫​⁯‏‮ != 1 || _param2 <= 0)
      return \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‭⁬⁬‪‏‌‬‪​⁯‎‮​⁭‏⁯⁮‭‫⁯‮‭‫‫‎‮‮‭‌‮‮⁫‎⁯​⁯⁭‏⁬‮(_param0);
    if (_param2 - 1 == 0)
    {
      \u202B⁬‮​‎⁭⁬⁪‪‫‪‪‬‪⁫‌‌‫‫⁪⁪‮‌‮‎⁪‬⁭⁮‮‎⁮‬‮⁬‭⁮‬‫⁭‮ obj;
      try
      {
        obj = \u202B⁬‮​‎⁭⁬⁪‪‫‪‪‬‪⁫‌‌‫‫⁪⁪‮‌‮‎⁪‬⁭⁮‮‎⁮‬‮⁬‭⁮‬‫⁭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) ((\u206E⁮‫⁭⁯‎⁬⁯‎‍⁭‪‎⁬‌‪​‎‍‏‌⁫‍‪​⁭⁭​⁫‬‪‫​⁫​⁯⁬‏⁬‍‮) _param1.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param2 - 1]).\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(\u200B​‭‌⁬⁮‬⁮‮⁪‎‮⁮⁯‬‍⁫​⁯‍‫⁭⁭‎‏⁯‪‮⁪‮​‪⁮⁭‏‬‏​⁭‏‮.\u206D‭‎⁯⁫‮⁭⁯‫‏‪⁫⁭⁫⁮⁪⁮⁪‭‫​‭⁫‍⁫⁭⁫‪‭⁮‍⁯‏⁮‌‌⁯‫‍⁬‮));
      }
      catch (ArgumentException ex)
      {
        throw new Exception("Date of cert gen extension could not be read.");
      }
      if (obj != null)
      {
        try
        {
          return obj.\u202C‪‮⁭⁭‫⁭‭‎‏⁭‪‫​⁬⁪⁫‪​‌⁬⁮‍⁬‌‎⁭‮‏⁭‮‭‭⁯⁪⁮⁯‎‍‮();
        }
        catch (ArgumentException ex)
        {
          throw new Exception("Date from date of cert gen extension could not be parsed.", (Exception) ex);
        }
      }
    }
    return ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param1.\u202B‪‏⁫‮⁬⁪⁪‪⁬‍‪‏⁭‬‏‍‪‎‍‫‪⁭‌‎‍⁯‫‌‬‫‌‍⁯‮‪⁯⁬⁫⁪‮[_param2 - 1]).\u206B‏⁮‌‬⁯‮‌​‌⁪⁭‎⁫⁪​‎‮⁮⁪​‬‍⁬‪​​⁯⁪⁯⁮⁫‏‌‪⁬‫⁭‎⁫‮;
  }

  internal static ICollection \u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(
    X509CertStoreSelector _param0,
    IList _param1)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    foreach (IX509Store x509Store in (IEnumerable) _param1)
    {
      try
      {
        foreach (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ match in (IEnumerable) x509Store.GetMatches((\u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮) _param0))
          obj.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) match);
      }
      catch (Exception ex)
      {
        throw new Exception("Problem while picking certificates from X.509 store.", ex);
      }
    }
    return (ICollection) obj;
  }

  internal static void \u206C⁮⁯‍‎⁪‏‫‏⁫‏⁮‎‎⁭‎‎‏‏‬⁫⁪‌⁮​‭‍⁭‭‌‪⁬⁪‮⁫‭‌⁬⁮‭‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    ICollection _param1,
    \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮ _param2,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param3)
  {
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    if (_param0.\u202D⁪⁪⁬‪‮⁯‎⁭‍⁪⁭‫‪‬⁭‏⁮‮⁬‌‭‍‫​‍‍‌⁮‭‫⁯⁪⁯⁭⁬‎⁭‬⁬‮ != null)
    {
      \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮[] objArray = _param0.\u202D⁪⁪⁬‪‮⁯‎⁭‍⁪⁭‫‪‬⁭‏⁮‮⁬‌‭‍‫​‍‍‌⁮‭‫⁯⁪⁯⁭⁬‎⁭‬⁬‮.\u206B‌⁫‏⁬‮⁪‪‬‎⁮​⁪⁮‮​⁪‬‫‍⁪⁯⁮‎‌‭‫‫⁯‏⁭‭⁬⁬‬‍⁯‭‬‭‮();
      for (int index = 0; index < objArray.Length; ++index)
      {
        if (objArray[index].\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 4)
        {
          try
          {
            list.Add((object) \u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) objArray[index].\u202D‍‬‎‪⁯‭‏⁪‮‪⁫⁬‍‏⁬‫⁭‍⁪‏‫‫‌‫‍⁯‏‫⁯‌⁮⁬‭‌‫⁬‬⁫‫‮.ToAsn1Object()));
          }
          catch (IOException ex)
          {
            throw new Exception("CRL issuer information from distribution point cannot be decoded.", (Exception) ex);
          }
        }
      }
    }
    else
    {
      if (_param0.\u202E‭⁯‌‮‬‭‏⁬⁫‭‬‍‪⁭‭⁪⁯‎‭‬‌⁭⁪‏⁫⁮⁬⁫⁭⁬⁯‭⁬⁮⁮‍‌⁮‮‮ == null)
        throw new Exception("CRL issuer is omitted from distribution point but no distributionPoint field present.");
      foreach (\u202C​‭‬‌‏‎‬‎⁭‬⁯‪‮​​‏‎‍‌⁬⁭‎‍⁬⁫‎⁮⁮‮⁫⁬‭‍⁫⁭⁮‬⁮⁭‮ obj in (IEnumerable) _param1)
        list.Add((object) obj);
    }
    _param2.\u200D‎⁯​⁮‍‏⁯⁬​⁭⁭⁯‭‍⁫‮​⁫⁮‪⁪‍‪‬‪​‎‍‮‬⁫⁫‮‏‍‪‫‎‮‮ = (ICollection) list;
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ \u200F‭‫⁪‮⁮‌‏‌‬⁯⁭⁫​‎⁯‮⁪⁬​‭⁭⁫⁪‬‬‏⁯⁪‍⁫‏⁮⁯⁬‏‮​‌‪‮(
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮ _param0,
    object _param1,
    DateTime _param2,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param3)
  {
    \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮ obj1 = new \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮();
    try
    {
      \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
      if (_param1 is \u202E‫⁪‍‌⁫⁪⁮​⁫‭⁫⁮‍⁯‌‎⁮‫⁬⁮‌⁪‍‮‎​‮​​‫‌‫⁫‫‌‌⁮⁯⁬‮)
        obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) ((\u202E‫⁪‍‌⁫⁪⁮​⁫‭⁫⁮‍⁯‌‎⁮‫⁬⁮‌⁪‍‮‎​‮​​‫‌‫⁫‫‌‌⁮⁯⁬‮) _param1).\u202A‎‍‏‮‫‍⁪‍‌‫⁭⁬⁭⁬‏⁮​‎⁭⁫​​‎‪‍⁭‏‭‬‭‌⁬⁫‎‌‬⁮‮‎‮.\u200E‍‮‍‍‪‫‪⁬‫‎‫‫‫‌⁪‎‎⁮‮‎‌‬‮‪⁪‬‬⁫⁬‭⁪⁯⁭⁬‬⁬⁫⁪‬‮()[0]);
      else
        obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200B​⁫‎⁬​‪​‮‎‎‎⁫⁮⁬‏⁭⁮‫⁪‎‍‬⁪‍‭‎‭‍‌‫‭⁭‍​​‬​⁬‎‮(_param1));
      \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C⁮⁯‍‎⁪‏‫‏⁫‏⁮‎‎⁭‎‎‏‏‬⁫⁪‌⁮​‭‍⁭‭‌‪⁬⁪‮⁫‭‌⁬⁮‭‮(_param0, (ICollection) obj2, obj1, _param3);
    }
    catch (Exception ex)
    {
      throw new Exception("Could not get issuer information from distribution point.", ex);
    }
    switch (_param1)
    {
      case \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _:
        obj1.\u202A‬‏⁯‭⁭⁭‫‭‭​‪‏⁭‫‬‌⁭⁭⁮‍⁫⁮⁮‪⁮‪‎​‮‫⁯‍⁭⁬⁮‭⁬‪⁫‮ = (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param1;
        break;
      case \u202E‫⁪‍‌⁫⁪⁮​⁫‭⁫⁮‍⁯‌‎⁮‫⁬⁮‌⁪‍‮‎​‮​​‫‌‫⁫‫‌‌⁮⁯⁬‮ _:
        obj1.\u202C‭‍‏‫⁭⁯‪​‌⁯‫‌⁮‭⁪‏⁮​‫‮‌‬‍‍‬‪‍‭‏‎⁬⁫‌⁮⁫⁯‎⁯‬‮ = (\u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮) _param1;
        break;
    }
    obj1.\u206D⁮⁭‍⁭‬‏⁯‌⁫⁬‪‬‍‮‎‏‎‍‪⁪‎‎⁬‫​⁮‏‏‌‭⁮‍‭‫‍‏‏‭⁯‮ = true;
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj3 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202E​‪⁮‬‮​‪⁭​⁯⁫‬⁬⁪‌⁮‮‮‍⁪‍⁭‫‬⁬‎‎⁫⁯‎‌⁬‬‬⁯‌⁯‭⁫‮.\u200E‪⁬‏⁬‏‎⁬⁪‌⁯‎‫‌‎‮​⁪‬⁯‮‌⁯‮⁫⁯‭‪⁬⁪‭‍⁯⁯‫‭⁫‎‍‍‮(obj1, _param3, _param2);
    if (!obj3.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      return obj3;
    if (_param1 is \u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮)
      throw new Exception("No CRLs found for issuer \"" + ((object) ((\u202A‭‮⁫‎‮‍‌‬⁭⁯‮‍‍‍⁮‮‏‍‪‫‌⁬‪‍⁫‫​‪‍‬‌‮⁭‌‫⁮⁫⁮‪‮) _param1).\u202A‎‍‏‮‫‍⁪‍‌‫⁭⁬⁭⁬‏⁮​‎⁭⁫​​‎‪‍⁭‏‭‬‭‌⁬⁫‎‌‬⁮‮‎‮.\u200E‍‮‍‍‪‫‪⁬‫‎‫‫‫‌⁪‎‎⁮‮‎‌‬‮‪⁪‬‬⁫⁬‭⁪⁯⁭⁬‬⁬⁫⁪‬‮()[0])?.ToString() + "\"");
    throw new Exception("No CRLs found for issuer \"" + ((object) ((\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮) _param1).\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮)?.ToString() + "\"");
  }

  internal static \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ \u206C⁪‬⁭‎‏‬⁮‎‏⁮‭‬⁭⁯⁭‎‌‪⁬‪‍⁫⁮‮‫‫‬⁮‌‎‍‫‪⁬⁮‭‍‮‍‮(
    DateTime _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1,
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param2)
  {
    \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮ obj1 = new \u202E‌​‮‌‪⁭⁭‫‫‭​⁯‮​⁪⁬⁪‪⁫⁭‍⁯‍⁯‪‬⁯⁭‭‭⁮‌​‍⁬‍‪⁫‏‮();
    try
    {
      IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
      list.Add((object) _param2.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮);
      obj1.\u200D‎⁯​⁮‍‏⁯⁬​⁭⁭⁯‭‍⁫‮​⁫⁮‪⁪‍‪‬‪​‎‍‮‬⁫⁫‮‏‍‪‫‎‮‮ = (ICollection) list;
    }
    catch (IOException ex)
    {
      throw new Exception("Cannot extract issuer from CRL.", (Exception) ex);
    }
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = (\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮) null;
    try
    {
      \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj3 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param2, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C‬⁪⁭​⁪‍‪​⁮‪‪‪‏⁭⁪‎​⁬⁯⁭⁪⁫⁭‏‫‫⁫⁪​‭⁫‏⁮‎⁬⁫‮‏‮);
      if (obj3 != null)
        obj2 = \u202E‭⁮‌⁭⁪‍⁪‬‎⁪⁮‎‮‪‏⁪‌‪⁯‮‮⁪‎⁬⁯⁪‍⁪⁭‬‪⁫⁪​⁬⁫⁬‭‪‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj3).\u206F‎‬‭‌⁯‫​⁪⁬‪⁫‮​​⁮‭​‌⁪‮‏⁪‏‏‎‪⁬⁬⁪⁮‭⁫⁯‪⁬‏‬‌‫‮;
    }
    catch (Exception ex)
    {
      throw new Exception("CRL number extension could not be extracted from CRL.", ex);
    }
    byte[] numArray = (byte[]) null;
    try
    {
      \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ obj4 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮((\u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮) _param2, \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮);
      if (obj4 != null)
        numArray = obj4.GetDerEncoded();
    }
    catch (Exception ex)
    {
      throw new Exception("Issuing distribution point extension value could not be read.", ex);
    }
    obj1.\u206A‫‬‎⁯​⁬‫‫⁭‍​‬‭​‭⁬⁯⁪‍‍‎‮⁯​‍‍​‎‍⁪⁬‮‌‬⁮⁬‌‎⁬‮ = obj2 == null ? (\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮) null : obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One);
    obj1.\u202C⁯‏⁭‍‌⁫⁪‪‭‍‫‫​⁪‏‬‍‬⁯‏‮‭⁪‎‌‬‏⁮‮‫‮‭‮⁬⁪‬‭‭‍‮ = numArray;
    obj1.\u206E⁬‮‬‪‮⁬⁪⁮‎‪⁫‬⁭‪‌⁮‎‌‪⁭⁬‪​⁪‬‍⁪‫‎‍‫‍‬‎⁫‏‌⁬⁮‮ = true;
    obj1.\u200D⁭⁮⁬​⁮‮⁪⁫‭‫⁪⁫‎‬⁪‫⁪⁫⁮⁭‌‮​⁬‮⁮‪‎‭‫⁪‎⁮⁫⁪⁬‬‌‬‮ = obj2;
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj5 = \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202E​‪⁮‬‮​‪⁭​⁯⁫‬⁬⁪‌⁮‮‮‍⁪‍⁭‫‬⁬‎‎⁫⁯‎‌⁬‬‬⁯‌⁯‭⁫‮.\u200E‪⁬‏⁬‏‎⁬⁪‌⁯‎‫‌‎‮​⁪‬⁯‮‌⁯‮⁫⁯‭‪⁬⁪‭‍⁯⁯‫‭⁫‎‍‍‮(obj1, _param1, _param0);
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj6 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    foreach (\u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ obj7 in (IEnumerable) obj5)
    {
      if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206C‮‌​‏‮‌⁫​‫‭⁮‭‎​‏⁪‫⁯‫‮‫⁭‍⁯⁭⁫‏​‌⁭‎​‭‍‏‏‏⁯‎‮(obj7))
        obj6.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) obj7);
    }
    return obj6;
  }

  private static bool \u206C‮‌​‏‮‌⁫​‫‭⁮‭‎​‏⁪‫⁯‫‮‫⁭‍⁯⁭⁫‏​‌⁭‎​‭‍‏‏‏⁯‎‮(
    \u200D‍​⁬‎‮⁮⁭⁮‌‎‭‮‎‍⁪⁬⁬‍⁬‎​⁯‭⁮‫‎‪⁭⁫‌⁮⁬‭‪‪‎⁪⁯⁪‮ _param0)
  {
    return _param0.\u206E‍‌⁫‏⁮‪‭‍⁭⁯‍‌⁬‌⁫⁯​​⁮‬⁭‫‭‫⁪⁯⁫‍‏⁬‏⁮‎⁭⁪‭‫⁮‮().\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) \u206A⁭⁪‬‌⁪⁫⁫⁮‬​‌‬‭⁬‪‮⁬‫⁭⁭⁬‪‍⁫‎​⁫⁭⁯‌⁫‏‌⁫⁬⁯‪⁫‫‮.\u206E‪⁪‍​‬‮⁮‌‮⁭‪‭‍​‪‮‬‌‬‎⁪‬⁮⁫⁫⁭‪‭‪‮⁫⁬‭‪‌‎‌‌⁫‮.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
  }

  internal static ICollection \u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(
    X509AttrCertStoreSelector _param0,
    IList _param1)
  {
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    foreach (IX509Store x509Store in (IEnumerable) _param1)
    {
      try
      {
        foreach (\u202E‫⁪‍‌⁫⁪⁮​⁫‭⁫⁮‍⁯‌‎⁮‫⁬⁮‌⁪‍‮‎​‮​​‫‌‫⁫‫‌‌⁮⁯⁬‮ match in (IEnumerable) x509Store.GetMatches((\u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮) _param0))
          obj.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) match);
      }
      catch (Exception ex)
      {
        throw new Exception("Problem while picking certificates from X.509 store.", ex);
      }
    }
    return (ICollection) obj;
  }

  internal static void \u200B‌‎‎‎‬‏​⁭‫​​‏⁭⁪‍‭‭⁭‫​‌⁪​‭⁮⁪​⁮‮‬‫⁬⁬⁮‫⁭⁬‍‭‮(
    \u202C‍‫‫⁫⁮⁯‮‮‪⁬‪⁬‎‎‪‌⁪⁬‎‭‍⁫‫‌⁫⁪⁯​‭⁫‬‏‎‫‮‫‏‍‫‮ _param0,
    \u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮ _param1)
  {
    if (_param0 == null)
      return;
    \u202B‌‌‪⁮‬⁫⁮‮⁯‎‌‌‍⁪‏‎‪‬⁪⁭⁪⁪⁭‮‫‮⁬‌⁭‭⁫‎⁮⁬⁫‪‪⁪⁭‮[] objArray1;
    try
    {
      objArray1 = _param0.\u206C‫‪‎‪‌​‏⁬⁪‮⁯‍‍‌‌⁯‍⁯‍​‫‪‫‮‬‌‍‎⁯‏‪⁪‭​‫⁫‏⁪‪‮();
    }
    catch (Exception ex)
    {
      throw new Exception("Distribution points could not be read.", ex);
    }
    for (int index1 = 0; index1 < objArray1.Length; ++index1)
    {
      \u200D⁮⁫⁯‬​⁭⁪‏‬‬‮⁬‍⁭‎⁪‍⁬⁯⁬‎⁪‪⁪‮⁯‮‬‍‮‪‎⁮‬‪‍⁪‫‍‮ obj = objArray1[index1].\u202E‭⁯‌‮‬‭‏⁬⁫‭‬‍‪⁭‭⁪⁯‎‭‬‌⁭⁪‏⁫⁮⁬⁫⁭⁬⁯‭⁬⁮⁮‍‌⁮‮‮;
      if (obj != null && obj.\u200E⁪‮‪⁯⁬⁮‬‮‏​‍‍⁯‫⁪‎‎⁯⁯⁬‬⁫‍⁬‫‮‏‪‫‌⁯‏⁭‌‫⁪⁫‎‎‮ == 0)
      {
        \u200E‍⁬⁪‮⁫⁬‬⁬⁯‏‎⁬‏⁪‪⁪⁪‮⁬‍‎‎‌‭‮‭⁭‎‫​‎⁯⁬​‭⁮‏‎‏‮[] objArray2 = \u206F⁭‌‫⁬‎‎‏​‎⁯‎‬‎⁬‫‫‭‫⁬‮‌⁭‎⁪​‍‮⁮⁭‍‍⁬​⁯⁭‪⁪‬‌‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) obj.\u202D‍‬‎‪⁯‭‏⁪‮‪⁫⁬‍‏⁬‫⁭‍⁪‏‫‫‌‫‍⁯‏‫⁯‌⁮⁬‭‌‫⁬‬⁫‫‮).\u206B‌⁫‏⁬‮⁪‪‬‎⁮​⁪⁮‮​⁪‬‫‍⁪⁯⁮‎‌‭‫‫⁯‏⁭‭⁬⁬‬‍⁯‭‬‭‮();
        for (int index2 = 0; index2 < objArray2.Length; ++index2)
        {
          if (objArray2[index2].\u202E‌‮⁬‏⁫‮‍‫‏​​‮‎⁬⁪⁫‭‎⁫⁪‏‮‫⁬‭‏⁯‎⁫‍‪‪​​⁫‭​⁯‪‮ == 6)
            \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200E⁪‏‪‫​⁬⁭‬⁫‪‮‍⁫‌⁫⁯‏⁮‏‌⁫‎‍​‎‏⁮‮‌⁫‌⁬⁪⁮​​‮⁯‫‮(((\u200C⁪‎‍‭‏⁭‭⁫‎⁪⁫⁮‍‍⁪‌⁭‪⁭‭‍‭‭‎⁯‫‌‭​‪⁪⁬‏​‏⁫‫⁭‏‮) \u206E‬‌⁫‮⁮‮‬‬⁫‎‏⁮⁪‬​‎​‌⁫‪‮​‭‮​‎‍​‬⁫‪⁮⁯‪​‮‏⁫‎‮.\u206E‏‫‮‫‫⁫⁬‬⁯‎‮‮‫‏​‬⁭⁭⁯‭‫‍‌‮‎‬‪⁬​⁪‭‪‏‬⁬⁪‏⁬⁭‮((object) objArray2[index2].\u202D‍‬‎‪⁯‭‏⁪‮‪⁫⁬‍‏⁬‫⁭‍⁪‏‫‫‌‫‍⁯‏‫⁯‌⁮⁬‭‌‫⁬‬⁫‫‮)).\u206B‪‎‌‪⁮⁮‮‎‏⁯‭‭​⁮⁮⁮‎⁭‍‫⁮‏‫‪‪⁯‍⁫⁪‮‭⁭‌‭‍‎‫⁮‭‮(), _param1);
        }
      }
    }
  }

  internal static bool \u200D‭‍⁬‌‌⁫⁪⁮⁫⁪⁭⁭‌⁭‍​‎⁮⁫⁬‬⁭‭⁬‭‍‭‫‏‏‪‬‪​⁪‌⁭‎⁪‮(
    int _param0,
    IList[] _param1,
    \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ _param2,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param3)
  {
    IList list = _param1[_param0 - 1];
    for (int index = 0; index < list.Count; ++index)
    {
      \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj1 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index];
      if (obj1.\u202D⁮​‫‬⁪‎‏⁮⁪⁫⁪​‮‪‍⁮‪⁮‎‌⁫⁮⁬‬⁬⁫‍‭⁪‫​‫‮‬⁪‬‏‌‎‮.\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) _param2.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮))
      {
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
        obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) _param2.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
        \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj3 = new \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮(\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(), _param0, obj2, obj1, _param3, _param2.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮, false);
        obj1.\u202B‭‬⁪​‭⁬‪⁫⁮‫​‭‭⁭‫⁪‌⁫‫‌‬‎‬⁪‬‫⁭⁯‬‏⁫⁭⁫‍‪⁮​‎‭‮(obj3);
        _param1[_param0].Add((object) obj3);
        return true;
      }
    }
    return false;
  }

  internal static void \u200B‌⁫‌‬‍‍‮‫‮⁭⁪‮⁭‮⁬‌⁪‮‏‎⁬‪⁯⁭⁫⁮‌⁮‍‮⁪⁭‌⁮‎‪‮⁫⁪‮(
    int _param0,
    IList[] _param1,
    \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ _param2,
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ _param3)
  {
    IList list = _param1[_param0 - 1];
    for (int index = 0; index < list.Count; ++index)
    {
      \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj1 = (\u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮) list[index];
      if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202D‍⁮‬‪​‏‎⁫⁭⁪‪⁪‭⁮⁮‍⁭‍‏‪​‭‍⁪⁫⁬‪‬‪⁭‌​‎‭‬​⁮⁭‮.Equals(obj1.\u206D‭⁯‭‌⁭‏‍‬‌⁪‫⁫​⁭‭‍‬⁪⁯‏‌‍⁭‌⁮⁭‎‏⁮⁫⁯⁫​⁫‫⁬⁭‏⁪‮))
      {
        \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
        obj2.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((object) _param2.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮);
        \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮ obj3 = new \u202A⁯‎​‬⁯‫‍⁯‎⁯‭‌⁪‏⁬⁯‪‎⁫⁪‬⁭‫‌⁮⁯⁪​⁯‪⁪‌⁬‮‭​⁭‭‭‮(\u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮(), _param0, obj2, obj1, _param3, _param2.\u202D⁯​‪‮⁫‭⁮‭⁭⁬⁫‭​‪‪‮‍‫‬⁮‬‮‮‏‫‍‏​‪​⁯⁪​‍‭‮‏‫‪‮, false);
        obj1.\u202B‭‬⁪​‭⁬‪⁫⁮‫​‭‭⁭‫⁪‌⁫‫‌‬‎‬⁪‬‫⁭⁯‬‏⁫⁭⁫‍‪⁮​‎‭‮(obj3);
        _param1[_param0].Add((object) obj3);
        break;
      }
    }
  }

  internal static ICollection \u202C‮​‪‪‪⁬‪‎‮​⁭‬⁫‍⁬⁮⁪⁫‫⁪‍‏‌‏‎⁮‪⁭‌​‬​‏‭​⁬⁪⁪‏‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param0,
    \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ _param1)
  {
    X509CertStoreSelector certStoreSelector = new X509CertStoreSelector();
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    try
    {
      certStoreSelector.Subject = _param0.\u200B‌‭⁮‭⁮‮⁬‭‏⁮⁯​⁪‍⁮​⁭‏‮‎‭⁭⁭⁭⁭⁮‍‍‍⁭⁪​‌​⁮⁪⁭⁫‏‮;
    }
    catch (IOException ex)
    {
      throw new Exception("Subject criteria for certificate selector to find issuer certificate could not be set.", (Exception) ex);
    }
    try
    {
      obj.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector, _param1.\u200C‬⁬⁬‮⁪⁫⁬‫‏⁫‮‎‍‮‎⁮⁯‎‮⁫‎⁪‏‪⁫‌‭⁫‏⁮​‏‎⁮‭​⁬⁮‍‮()));
      obj.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮(certStoreSelector, _param1.\u206B‌‬⁪⁫‍⁪‍⁭‌‏‪‮⁯⁬‮‪‮‮⁪⁮⁫‏‭‮⁭‬‏‬⁫‌​‭⁬⁮‌‬‮‭⁬‮()));
    }
    catch (Exception ex)
    {
      throw new Exception("Issuer certificate cannot be searched.", ex);
    }
    return (ICollection) obj;
  }

  internal static \u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮ \u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(
    \u200C‮⁭‍⁭⁬⁯⁯‬⁮‏⁭‬⁬⁫‍‮‪‫⁪⁬‎‍‬‭​‪⁫‪‭‫‍‏‫‭⁬‎‮​⁪‮ _param0,
    \u202D‎‮‏‬⁮‎⁭⁬⁪‪⁬⁬‍⁭‎‎‫​‌⁪⁯⁪‮‪‏⁪⁪‫⁮‍​⁭⁪⁭⁯‏‍‭⁫‮ _param1)
  {
    \u202D‭⁬⁯‫‎‮‭⁪‬⁮⁭‏‍‫​‭⁬⁯‬⁬‫‎⁯‎⁭‮⁪⁬⁫‮‮⁮​⁭⁯⁮⁬‪‮ obj = _param0.\u200D⁭‫⁪‬⁪‬‫‬‏‮‏⁪‮‍⁫​‪‬‎⁪⁪‌‭⁫​⁯⁪⁬‫⁯​‌‎‪‌⁪⁫⁮‫‮(_param1);
    return obj == null ? (\u206C‭‍⁮‪‮⁭‫⁮‮‬‎​‌‮‎‍⁬​⁪‫⁫‪‭‌‌‪⁭⁭⁪‍‮⁯⁭‍‎⁪‬⁬‍‮) null : \u206C‎‬⁬‌‬‍⁬‌‭⁮⁬‮‮‎‍‫⁬⁬⁮​‪‏‏‎⁬‎‭‏‭⁪‎⁪‬‍⁪‌‭⁬‪‮.\u206B‫⁭‍‪‍‫‌‮⁬⁭⁫⁪‏‎​​‏‮⁭‭⁭‫‫‪⁪‍‎⁭‪⁪⁮⁬⁮⁮⁯⁬⁫‪‬‮(obj);
  }
}
