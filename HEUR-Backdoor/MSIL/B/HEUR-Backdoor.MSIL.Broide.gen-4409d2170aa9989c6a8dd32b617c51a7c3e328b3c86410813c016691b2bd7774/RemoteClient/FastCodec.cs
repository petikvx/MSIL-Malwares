// Decompiled with JetBrains decompiler
// Type: RemoteClient.FastCodec
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Runtime.InteropServices;
using System.Security;

namespace RemoteClient
{
  [SuppressUnmanagedCodeSecurity]
  public class FastCodec
  {
    private unsafe byte* Byte\u002A_3;
    private Size Size_4;
    private uint int_23;
    private int int_24;

    [DllImport("msvcrt.dll", EntryPoint = "memcmp", CallingConvention = CallingConvention.Cdecl)]
    public static extern unsafe int smethod_18(byte* Param_40, byte* Param_41, uint Param_42);

    [DllImport("msvcrt.dll", EntryPoint = "memcmp", CallingConvention = CallingConvention.Cdecl)]
    public static extern int smethod_19(IntPtr Param_43, IntPtr Param_44, uint Param_45);

    [DllImport("msvcrt.dll", EntryPoint = "memcpy", CallingConvention = CallingConvention.Cdecl)]
    public static extern int smethod_20(IntPtr Param_46, IntPtr Param_47, uint Param_48);

    [DllImport("msvcrt.dll", EntryPoint = "memcpy", CallingConvention = CallingConvention.Cdecl)]
    public static extern unsafe int smethod_21(byte* Param_49, byte* Param_50, uint Param_51);

    public FastCodec(Size Param_53) => this.Size_4 = Param_53;

    public unsafe void method_22(BitmapData Param_55, MemoryStream Param_56)
    {
      try
      {
        if (this.int_23 == 0U)
        {
          this.int_23 = (uint) (Param_55.Stride * this.Size_4.Height);
          this.Byte\u002A_3 = (byte*) (void*) Marshal.AllocHGlobal((IntPtr) (long) this.int_23);
          FastCodec.smethod_21(this.Byte\u002A_3, (byte*) (void*) Param_55.Scan0, this.int_23);
          using (Bitmap bitmap = new Bitmap(this.Size_4.Width, this.Size_4.Height, Param_55.Stride, PixelFormat.Format24bppRgb, (IntPtr) (void*) this.Byte\u002A_3))
            bitmap.Save((Stream) Param_56, ImageFormat.Jpeg);
          this.int_24 = (int) Param_56.Length;
        }
        else
        {
          for (int index = 0; (long) (index + 90) <= (long) this.int_23; index += 90)
          {
            if (FastCodec.smethod_18(this.Byte\u002A_3 + index, (byte*) ((IntPtr) (void*) Param_55.Scan0 + index), 90U) != 0)
            {
              Param_56.Write(BitConverter.GetBytes(index), 0, 4);
              byte[] buffer = new byte[90];
              fixed (byte* numPtr = buffer)
                FastCodec.smethod_21(numPtr, (byte*) ((IntPtr) (void*) Param_55.Scan0 + index), 90U);
              Param_56.Write(buffer, 0, buffer.Length);
            }
          }
          FastCodec.smethod_21(this.Byte\u002A_3, (byte*) (void*) Param_55.Scan0, this.int_23);
          if (Param_56.Length <= (long) this.int_24)
            return;
          Param_56.SetLength(0L);
          Param_56.Write(new byte[6]
          {
            (byte) 78,
            (byte) 69,
            (byte) 87,
            (byte) 66,
            (byte) 77,
            (byte) 80
          }, 0, 6);
          using (Bitmap bitmap = new Bitmap(this.Size_4.Width, this.Size_4.Height, Param_55.Stride, PixelFormat.Format24bppRgb, (IntPtr) (void*) this.Byte\u002A_3))
            bitmap.Save((Stream) Param_56, ImageFormat.Jpeg);
          this.int_24 = (int) Param_56.Length;
        }
      }
      catch
      {
      }
    }

    public unsafe void method_23() => Marshal.FreeHGlobal((IntPtr) (void*) this.Byte\u002A_3);
  }
}
