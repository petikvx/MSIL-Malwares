// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.Resources1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using System;
using System.Drawing;
using System.IO;
using System.Reflection;

namespace SmartAssembly.SmartExceptionsCore
{
  internal class Resources1
  {
    public static Bitmap GetBitmap(string key)
    {
      Stream manifestResourceStream;
      try
      {
        Bitmap bitmap;
        try
        {
          manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("SmartAssembly.SmartUsageWithUI.Resources." + key + ".png");
          bitmap = manifestResourceStream == null ? (Bitmap) null : new Bitmap(manifestResourceStream);
        }
        catch
        {
          bitmap = (Bitmap) null;
        }
        return bitmap;
      }
      catch (Exception ex)
      {
        Stream o1 = manifestResourceStream;
        Bitmap bitmap;
        Bitmap o2 = bitmap;
        string o3 = key;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    public static Icon GetIcon(string key)
    {
      Stream manifestResourceStream;
      try
      {
        Icon icon;
        try
        {
          manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("SmartAssembly.SmartUsageWithUI.Resources." + key + ".ico");
          icon = manifestResourceStream == null ? (Icon) null : new Icon(manifestResourceStream);
        }
        catch
        {
          icon = (Icon) null;
        }
        return icon;
      }
      catch (Exception ex)
      {
        Stream o1 = manifestResourceStream;
        Icon icon;
        Icon o2 = icon;
        string o3 = key;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }
  }
}
