// Decompiled with JetBrains decompiler
// Type: s220824736514050.s820276167648377
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using s111377166353221;
using s119009636400799;
using s442252528567994;
using s920410516682998;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace s220824736514050
{
  public static class s820276167648377
  {
    public static Guid s591057928635590(string s676480822263876)
    {
      Guid result;
      s224125339561461.s367026656561726.TryGetValue(s676480822263876, out result);
      if (result == Guid.Empty)
        Guid.TryParse(s676480822263876, out result);
      return result;
    }

    public static Guid s011035710628855(string s495007205156576)
    {
      if (s495007205156576.StartsWith("*"))
        s495007205156576 = s495007205156576.Substring(1);
      s495007205156576 = s495007205156576.ToUpperInvariant();
      byte[] buffer = new byte[s495007205156576.Length * 2 + 16];
      uint num1 = 1210854834;
      uint num2 = 3281012680;
      uint num3 = 2281183765;
      uint num4 = 3217109243;
      for (int index = 3; 0 <= index; --index)
      {
        buffer[index] = (byte) num1;
        num1 >>= 8;
        buffer[index + 4] = (byte) num2;
        num2 >>= 8;
        buffer[index + 8] = (byte) num3;
        num3 >>= 8;
        buffer[index + 12] = (byte) num4;
        num4 >>= 8;
      }
      for (int index = 0; index < s495007205156576.Length; ++index)
      {
        buffer[2 * index + 16 + 1] = (byte) s495007205156576[index];
        buffer[2 * index + 16] = (byte) ((uint) s495007205156576[index] >> 8);
      }
      byte[] hash = SHA1.Create().ComputeHash(buffer);
      return new Guid(((((int) hash[3] << 8) + (int) hash[2] << 8) + (int) hash[1] << 8) + (int) hash[0], (short) (((int) hash[5] << 8) + (int) hash[4]), (short) ((int) (short) (((int) hash[7] << 8) + (int) hash[6]) & 4095 | 20480), hash[8], hash[9], hash[10], hash[11], hash[12], hash[13], hash[14], hash[15]);
    }

    public static string s403794264096305(Guid s271769707493726)
    {
      string str;
      s224125339561461.s471517294726064.TryGetValue(s271769707493726, out str);
      if (str == null)
        str = s271769707493726.ToString();
      return str;
    }

    public static unsafe bool s195707778036609(Guid s973445803858322) => ((int) *(byte*) ((IntPtr) &s973445803858322 + 7) & 240) == 80 || s973445803858322 == s516912170260088.s038302504017622;

    public static IEnumerable<Guid> s993872630938071() => (IEnumerable<Guid>) s224125339561461.s471517294726064.Keys;

    public static unsafe List<Guid> s274568802737551()
    {
      int s605595431100712 = 0;
      int s697879424542264_1 = s134995860702422.s385611622648092((s134995860702422.s115323245773962) 0, (void*) null, 0, (void*) null, 0, ref s605595431100712);
      switch (s697879424542264_1)
      {
        case 0:
        case 122:
          byte* s600365558577234 = stackalloc byte[s605595431100712];
          int s697879424542264_2 = s134995860702422.s385611622648092((s134995860702422.s115323245773962) 0, (void*) null, 0, (void*) s600365558577234, s605595431100712, ref s605595431100712);
          if (s697879424542264_2 != 0)
            Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264_2));
          Guid* guidPtr = (Guid*) s600365558577234;
          List<Guid> guidList = new List<Guid>();
          int num = s605595431100712 / sizeof (Guid);
          for (int index = 0; index < num; ++index)
            guidList.Add(guidPtr[index]);
          return guidList;
        default:
          Marshal.ThrowExceptionForHR(s134995860702422.s378247297349470(s697879424542264_1));
          goto case 0;
      }
    }

    public static List<Guid> s471816243210527(int s557256748419978)
    {
      List<Guid> guidList = new List<Guid>();
      foreach (Guid s623698577400643 in s820276167648377.s274568802737551())
      {
        List<s134995860702422.s138699372264905> s138699372264905List = s820276167648377.s485586722312421(s623698577400643, s557256748419978);
        if (s138699372264905List != null && s138699372264905List.Count > 0)
          guidList.Add(s623698577400643);
      }
      return guidList;
    }

    public static List<s981003658415317> s968552961186878(Guid s421627729665706) => s820276167648377.s131682563682471(s421627729665706, (s134995860702422.s146527992529525) 0);

    internal static unsafe List<s134995860702422.s138699372264905> s485586722312421(
      Guid s623698577400643,
      int s095214034464373)
    {
      int s605595431100712 = 256;
      byte* s600365558577234;
      int num;
      do
      {
        byte* numPtr = stackalloc byte[s605595431100712];
        s600365558577234 = numPtr;
        num = s134995860702422.s385611622648092((s134995860702422.s115323245773962) 1, (void*) &s623698577400643, sizeof (Guid), (void*) s600365558577234, s605595431100712, ref s605595431100712);
        if (num == 0)
          goto label_4;
      }
      while (num == 122);
      return (List<s134995860702422.s138699372264905>) null;
label_4:
      List<s134995860702422.s138699372264905> s138699372264905List = new List<s134995860702422.s138699372264905>();
      s134995860702422.s798601121368304* s798601121368304Ptr = (s134995860702422.s798601121368304*) s600365558577234;
      s134995860702422.s234765852428476* s234765852428476Ptr = (s134995860702422.s234765852428476*) (s798601121368304Ptr + 1);
      for (int index1 = 0; index1 < ((s134995860702422.s115323245773962*) s798601121368304Ptr)->s833016361942776; ++index1)
      {
        if (s095214034464373 == 0 || s234765852428476Ptr->s019465106331051 == s095214034464373)
        {
          s134995860702422.s138699372264905* s138699372264905Ptr = (s134995860702422.s138699372264905*) (s234765852428476Ptr + 1);
          for (int index2 = 0; index2 < s234765852428476Ptr->s803243845059312; ++index2)
            s138699372264905List.Add(s138699372264905Ptr[index2]);
        }
        if (((s134995860702422.s798601121368304*) s234765852428476Ptr)->s762712816067515 != 0)
          s234765852428476Ptr = (s134995860702422.s234765852428476*) ((UIntPtr) s234765852428476Ptr + (UIntPtr) ((s134995860702422.s798601121368304*) s234765852428476Ptr)->s762712816067515);
        else
          break;
      }
      return s138699372264905List;
    }

    private static List<s981003658415317> s131682563682471(
      Guid s710152407446026,
      s134995860702422.s146527992529525 s290735905341274)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
