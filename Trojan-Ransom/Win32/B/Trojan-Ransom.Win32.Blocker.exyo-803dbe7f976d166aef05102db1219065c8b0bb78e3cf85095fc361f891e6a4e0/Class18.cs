// Decompiled with JetBrains decompiler
// Type: insomnia.Class18
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System;
using System.Net;

namespace insomnia
{
  internal class Class18
  {
    public static IPAddress Method3(bool A_0) => Class18.Method2(Dns.GetHostEntry(Dns.GetHostName()), A_0);

    public static IPAddress Method2(IPHostEntry A_0, bool A_1)
    {
      if (A_0 == null)
        throw new ArgumentNullException("host");
      if (A_0.AddressList.Length != 1)
      {
        foreach (IPAddress address in A_0.AddressList)
        {
          bool flag;
          if ((flag = Class18.Method1(address)) && A_1 || !flag && !A_1)
            return address;
        }
      }
      return A_0.AddressList[0];
    }

    public static bool Method1(IPAddress A_0)
    {
      byte[] numArray = A_0 != null ? A_0.GetAddressBytes() : throw new ArgumentNullException("address");
      if (numArray[0] == (byte) 10 || numArray[0] == (byte) 192 && numArray[1] == (byte) 168)
        return true;
      return numArray[0] == (byte) 172 && numArray[1] >= (byte) 16 && numArray[1] <= (byte) 31;
    }
  }
}
