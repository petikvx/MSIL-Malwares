// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cab8849a7bf7875b
// MVID: B8136FDA-4EB0-4CA7-9502-281BC34A634B
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hjc-f20e5d33e431ce6f4aedcb085c959ae1bda3809f8f5bbdd4d18dd58683a28d4d.exe

using \u0001;
using \u0002;
using \u0003;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Xml;

namespace \u0002
{
  internal class \u000E : \u0008.\u0005
  {
    internal \u0004 \u0001;
    internal byte[] \u0001;
    [NonSerialized]
    internal static \u0007.\u0003 \u001B;

    public \u000E([In] \u0004 obj0)
    {
      try
      {
        this.\u0001 = obj0;
      }
      catch (Exception ex)
      {
        \u0004 obj = obj0;
        \u0012.\u0001(ex, (object) this, (object) obj);
        throw;
      }
    }

    internal unsafe void \u0001()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      Dictionary<string, ulong> dictionary;
      MemoryStream w;
      XmlWriter xmlWriter1;
      \u0011 obj1;
      DateTime dateTime;
      Guid guid1;
      WindowsIdentity windowsIdentity;
      SecurityIdentifier securityIdentifier;
      MD5CryptoServiceProvider cryptoServiceProvider;
      Guid guid2;
      string str1;
      \u0011 obj2;
      \u0011 obj3;
      ulong[] numArray;
      \u0011 obj4;
      Dictionary<string, ulong>.Enumerator enumerator;
      KeyValuePair<string, ulong> current;
      try
      {
        if (this.\u0001 != null || \u0012.\u0001(this.\u0001))
          return;
        do
        {
          numArray = \u0012.\u0001(this.\u0001);
          dictionary = \u0012.\u0001(this.\u0001);
        }
        while (false);
        w = new MemoryStream();
        xmlWriter1 = (XmlWriter) new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
        \u0014.\u007E\u0084((object) xmlWriter1);
        obj1 = new \u0011(xmlWriter1, \u000E.\u001B(7517));
        try
        {
          \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(4504), \u0018.\u007E\u009E((object) \u000E.\u001B(1987)));
          \u008B obj5 = \u008B.\u007E\u009A\u0002;
          XmlWriter xmlWriter2 = xmlWriter1;
          string str2 = \u000E.\u001B(4521);
          dateTime = \u0080\u0003.\u0092\u0005();
          string str3 = dateTime.ToString(\u000E.\u001B(4534));
          obj5((object) xmlWriter2, str2, str3);
          \u008B obj6 = \u008B.\u007E\u009A\u0002;
          XmlWriter xmlWriter3 = xmlWriter1;
          string str4 = \u000E.\u001B(4548);
          guid1 = \u0082\u0003.\u0094\u0005();
          string str5 = guid1.ToString(\u000E.\u001B(4404));
          obj6((object) xmlWriter3, str4, str5);
          windowsIdentity = \u000E\u0004.\u0083\u0006();
          securityIdentifier = \u000F\u0004.\u007E\u0084\u0006((object) windowsIdentity);
          cryptoServiceProvider = new MD5CryptoServiceProvider();
          try
          {
            guid2 = new Guid(\u0008\u0002.\u007E\u0098\u0003((object) cryptoServiceProvider, \u0005\u0002.\u007E\u0095\u0003((object) \u001A.\u000F\u0002(), \u0018.\u007E\u009C((object) securityIdentifier))));
            str1 = guid2.ToString();
          }
          finally
          {
            if (cryptoServiceProvider != null)
              \u0014.\u007E\u0016((object) cryptoServiceProvider);
          }
          \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(4539), str1);
          obj2 = new \u0011(xmlWriter1, \u000E.\u001B(5028));
          try
          {
            \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(5019), \u000E.\u001B(7534));
          }
          finally
          {
            do
            {
              if (obj2 != null)
                \u0014.\u007E\u0016((object) obj2);
            }
            while (false);
          }
          obj3 = new \u0011(xmlWriter1, \u000E.\u001B(7539));
          try
          {
            *(int*) ((IntPtr) voidPtr + 8) = 0;
            while (*(int*) ((IntPtr) voidPtr + 8) < numArray.Length)
            {
              if (numArray[*(int*) ((IntPtr) voidPtr + 8)] > 0UL)
              {
                \u0098.\u007E\u0018\u0003((object) xmlWriter1, \u000E.\u001B(7552));
                \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(7565), ((int*) ((IntPtr) voidPtr + 8))->ToString());
                \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(5019), numArray[*(int*) ((IntPtr) voidPtr + 8)].ToString());
                \u0014.\u007E\u008C((object) xmlWriter1);
              }
              *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
            }
          }
          finally
          {
            if (obj3 != null)
              \u0014.\u007E\u0016((object) obj3);
          }
          obj4 = new \u0011(xmlWriter1, \u000E.\u001B(7570));
          try
          {
            enumerator = dictionary.GetEnumerator();
            try
            {
              while (enumerator.MoveNext())
              {
                current = enumerator.Current;
                if (current.Value > 0UL)
                {
                  \u0098.\u007E\u0018\u0003((object) xmlWriter1, \u000E.\u001B(7552));
                  \u008B.\u007E\u009A\u0002((object) xmlWriter1, \u000E.\u001B(4334), current.Key);
                  \u008B obj7 = \u008B.\u007E\u009A\u0002;
                  XmlWriter xmlWriter4 = xmlWriter1;
                  string str6 = \u000E.\u001B(5019);
                  *(long*) voidPtr = (long) current.Value;
                  string str7 = ((ulong*) voidPtr)->ToString();
                  obj7((object) xmlWriter4, str6, str7);
                  \u0014.\u007E\u008C((object) xmlWriter1);
                }
              }
            }
            finally
            {
              if (true)
                enumerator.Dispose();
            }
          }
          finally
          {
            if (obj4 != null)
              \u0014.\u007E\u0016((object) obj4);
          }
        }
        finally
        {
          if (obj1 != null)
            \u0014.\u007E\u0016((object) obj1);
        }
        \u0014.\u007E\u0086((object) xmlWriter1);
        \u0014.\u007E\u0087((object) xmlWriter1);
        \u0014.\u007E\u0088((object) w);
        this.\u0001 = \u0015.\u007E\u008F((object) w);
        this.\u0001 = (\u0004) null;
      }
      catch (Exception ex)
      {
        object[] objArray = new object[20]
        {
          (object) numArray,
          (object) dictionary,
          (object) w,
          (object) xmlWriter1,
          (object) windowsIdentity,
          (object) securityIdentifier,
          (object) str1,
          (object) cryptoServiceProvider,
          (object) *(int*) ((IntPtr) voidPtr + 8),
          (object) current,
          (object) obj1,
          (object) dateTime,
          (object) guid1,
          (object) guid2,
          (object) obj2,
          (object) obj3,
          (object) obj4,
          (object) enumerator,
          (object) (ulong) *(long*) voidPtr,
          (object) this
        };
        \u0012.\u0001(ex, objArray);
        throw;
      }
    }

    static \u000E() => \u0005.\u0002.\u0001(typeof (\u000E));
  }
}
