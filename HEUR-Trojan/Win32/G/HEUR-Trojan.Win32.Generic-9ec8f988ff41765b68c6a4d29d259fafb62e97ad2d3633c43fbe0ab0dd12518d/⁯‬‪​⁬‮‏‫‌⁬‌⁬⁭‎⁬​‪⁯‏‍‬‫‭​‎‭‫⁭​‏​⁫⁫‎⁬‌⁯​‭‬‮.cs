// Decompiled with JetBrains decompiler
// Type: ⁯‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using Org.BouncyCastle.X509.Store;
using System;
using System.Collections;

public class \u206F‬‪​⁬‮‏‫‌⁬‌⁬⁭‎⁬​‪⁯‏‍‬‫‭​‎‭‫⁭​‏​⁫⁫‎⁬‌⁯​‭‬‮
{
  private Exception \u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮;

  public virtual \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮ \u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(
    \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ _param1)
  {
    \u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮ obj1 = (\u202B⁬⁬​​⁮‫‭⁬‫‪‮⁯‫⁭⁯​⁪⁮‏‍‎‮⁬‭⁪⁪‍‮‍‍⁯‮⁮‏‏‮‌‪⁭‮) _param1.\u206D‏‫‎⁮⁭⁮‭⁫‌⁫​‫⁭‌⁭⁬⁭⁮‏⁯‍‪‍⁮‭‭⁫⁭‭‍‪⁯⁪⁯‌‮‬‎‌‮();
    if (!(obj1 is X509CertStoreSelector))
      throw new \u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮("TargetConstraints must be an instance of " + typeof (X509CertStoreSelector).FullName + " for " + \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B‮‬​‭‮⁪‫‫‍‌⁮‎‍‬‪‫⁬⁮​⁯⁭‎‫⁯‎⁭⁯‍‭‮⁫​‪‮‭⁪‭‫‭‮((object) this) + " class.");
    \u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮ obj2 = (\u206D‬⁯‮‏‌⁪‬⁪⁫⁫‪⁯‫‎​⁮‍⁯⁪⁪‪‬‫⁬‭⁯‫‎⁭‫‪⁯⁪⁯‍‬‬⁮‭‮) new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
    try
    {
      obj2.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200D‬⁯‍‮‫‫⁮⁭‪‌‌⁮‫‭‏‬​⁫‮⁬​‬‍⁫‍​​‌⁭⁬⁬‎‫⁮⁬⁫⁫⁫⁬‮((X509CertStoreSelector) obj1, _param1.\u200C‬⁬⁬‮⁪⁫⁬‫‏⁫‮‎‍‮‎⁮⁯‎‮⁫‎⁪‏‪⁫‌‭⁫‏⁮​‏‎⁮‭​⁬⁮‍‮()));
    }
    catch (Exception ex)
    {
      throw new \u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮("Error finding target certificate.", ex);
    }
    if (obj2.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
      throw new \u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮("No certificate found matching targetConstraints.");
    \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮ obj3 = (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    foreach (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj4 in (IEnumerable) obj2)
    {
      obj3 = this.\u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(obj4, _param1, list);
      if (obj3 != null)
        break;
    }
    if (obj3 == null && this.\u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮ != null)
      throw new \u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮(this.\u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮.Message, this.\u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮.InnerException);
    return obj3 != null || this.\u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮ != null ? obj3 : throw new \u202E‌‮‬‬‪⁭‭‍⁬⁪⁪‎​⁫⁬⁮‪⁬⁯‌⁫‌‏‏‌⁭‎⁫‪⁪⁫⁬‫⁭⁪⁪‮‍‮‮("Unable to find certificate chain.");
  }

  protected virtual \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮ \u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(
    \u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ _param1,
    \u200E‭‪⁪‪⁮⁪⁪⁫‍⁮⁯⁯‮‪⁮⁫‭⁫‭‫‮⁮‪‍⁬⁭⁮‭⁫‪‌‫⁫‮‬⁬‎​⁬‮ _param2,
    IList _param3)
  {
    if (_param3.Contains((object) _param1))
      return (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    if (_param2.\u200D‬‏⁯‪⁬⁫‮‎‎‫‫⁯‏​‍‭​‏‭‍⁪⁪⁯‬‌‫​‮‬‬⁮​‏‪‎⁫⁯⁬‮().\u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮((object) _param1))
      return (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    if (_param2.\u202A‍‫⁭‭‪‪‎‭‪‌‪‭⁯‬‭⁪‏⁬‌‌‬⁮⁮‏⁮⁮⁭⁮⁭‮‬⁯⁭⁭⁪⁮‬‬⁯‮ != -1 && _param3.Count - 1 > _param2.\u202A‍‫⁭‭‪‪‎‭‪‌‪‭⁯‬‭⁪‏⁬‌‌‬⁮⁮‏⁮⁮⁭⁮⁭‮‬⁯⁭⁭⁪⁮‬‬⁯‮)
      return (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    _param3.Add((object) _param1);
    \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮ obj1 = (\u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮) null;
    \u206A‮⁪‫‫⁭⁮‌‮‫⁬‫‪‫⁫‌‍‮‍‍⁫‫‌‪⁭‏‏‫‭⁬‌‏‏⁫‬⁭⁯​⁭‏‮ obj2 = new \u206A‮⁪‫‫⁭⁮‌‮‫⁬‫‪‫⁫‌‍‮‍‍⁫‫‌‪⁭‏‏‫‭⁬‌‏‏⁫‬⁭⁯​⁭‏‮();
    try
    {
      if (\u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u206A‮‮‌⁫⁬⁮⁯‬‭​‍‌⁬‌⁭‍‎‫‫⁫‮‏‭⁭‎‏​​‫‫⁪⁫‍⁪‮‎‌⁬⁯‮(_param1, _param2.\u200C‬‪⁮⁫​⁯⁫‌⁬⁭‫​‭​‏⁬‫⁪​​‏‭‏‏⁫‍‌‬‭⁭⁬‪⁫‪‪‭⁮⁪‪‮()))
      {
        \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮ obj3;
        try
        {
          obj3 = new \u206F⁬⁫⁪⁪⁪‬​‬⁬‮⁭⁯‪‍‌⁬⁬‍‫‬‏⁯‬​‌‎⁮​‫⁪‌‎‍‫‏⁭⁪‍⁯‮((ICollection) _param3);
        }
        catch (Exception ex)
        {
          throw new Exception("Certification path could not be constructed from certificate list.", ex);
        }
        \u202D⁫‏⁭⁮​‪‍‏‬‏‮⁭‎‫⁯‭‮‍⁪‍​‌⁮⁬⁯‮​⁭⁮‭‍‭⁪⁪‫‌⁯‪⁭‮ obj4;
        try
        {
          obj4 = obj2.\u200B⁮​‌‭‪‎⁮‌‌‌⁯‭‮⁮⁮​‬⁮‏​‍‫⁭⁯‭⁯⁮⁭‌​​⁪‎‭‭⁭‏‫‬‮(obj3, (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param2);
        }
        catch (Exception ex)
        {
          throw new Exception("Certification path could not be validated.", ex);
        }
        return new \u202E⁭⁫‬⁫‍‮⁫⁯‍‪⁮‏‏‫‏⁯‌‍‬⁭⁯⁬‏⁯⁫‫⁬‬⁫​‍⁬⁪⁯‮‎‬‭⁪‮(obj3, obj4.\u200E‏‭⁪‭⁬⁭‍‪⁪‎⁮‪‭‍⁭‌⁮⁯⁬‫‪⁪‏‎‭‮⁫‫‍​​⁪⁮⁬⁮‌‍⁬‭‮, obj4.\u206D‍⁪⁪⁪⁬‭⁭​​‎‎​‭‮‍⁮‏‭‏‭‪‏⁯⁯‬⁪‍‌⁭⁮‪​⁫‎‮‬‏⁭⁪‮, obj4.\u206C‮‬⁫‎⁯⁬‪‌⁬‍⁬⁭‪‌‎‮‮‎⁭⁯‫‬⁫‭⁮⁫⁬‪‍⁪‌‫​⁫⁫‮‫‍‮);
      }
      try
      {
        \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u200C‏‫‍‎‌‫⁭‭‍‪⁭⁯‫⁭⁫⁫‭‮‪⁮‫‭‍⁪⁪‍‬‍⁫‬‌‫⁪‌‭⁬‎‏⁪‮(_param1, (\u206C⁫⁪‫‏‬⁫⁭⁬‏‬‎‫‏​⁫‏⁬‍⁫‌‭⁯⁬⁯‎‪⁬‬‭⁭‫⁭⁬‍‫‏⁯‫‭‮) _param2);
      }
      catch (\u200D‪‫‎‏‬‮⁬‏‭‭‬⁯⁮‮‪‭‌‮‎⁯‏⁪‮​⁯⁯⁭⁪‫‏⁯‎⁬​​‭‫‮⁫‮ ex)
      {
        throw new Exception("No additiontal X.509 stores can be added from certificate locations.", (Exception) ex);
      }
      \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮ obj5 = new \u202B​⁮⁭⁯‎⁫⁮⁪‭‭⁭⁮‍‎‌⁯‫⁫‎​⁫​‪‬‬‍⁫⁬‎‫⁪‏‌⁪​‪‎‮⁮‮();
      try
      {
        obj5.\u206C‮‍‫‌⁫⁮⁯⁫⁪⁫‮⁭‎‮​‬⁯‬‮⁯⁫⁪‏‍‬‪‎⁫‭‫‎⁮⁮‮‌‎‮‌⁯‮((IEnumerable) \u202D‌⁪​⁮⁪⁬‎‎‮‮‬​‎‬‫​‭⁭⁭‫‫⁭‮⁫​‌‌‎‬⁫⁪⁭‭‪‫‮⁯‮‎‮.\u202C‮​‪‪‪⁬‪‎‮​⁭‬⁫‍⁬⁮⁪⁫‫⁪‍‏‌‏‎⁮‪⁭‌​‬​‏‭​⁬⁪⁪‏‮(_param1, _param2));
      }
      catch (Exception ex)
      {
        throw new Exception("Cannot find issuer certificate for certificate in certification path.", ex);
      }
      if (obj5.\u202E‮‬⁭⁮⁫‮‮⁭‎⁭⁭‭‬‌​‫⁯‍‭‌‍‫‪‍‏‮‌‏⁭‍⁫‎⁬‮‌⁫⁮​‌‮)
        throw new Exception("No issuer certificate for certificate in certification path found.");
      foreach (\u206D⁫‍⁯‏‍‌‫‫‮⁯‭‫‌⁪‬​⁫‪⁯‮⁪‎‮‬‮⁭‬⁪‪⁫‏‮⁭‭‭‎‬⁭‌‮ obj6 in obj5)
      {
        obj1 = this.\u206A‫⁬⁬‬⁪‪‮‏⁫⁪‎‍‮⁬​‪‎‏‍⁭⁮‪‭⁯‪⁪‎‭‪⁮⁬⁫‫‬⁪‭⁯⁮⁪‮(obj6, _param2, _param3);
        if (obj1 != null)
          break;
      }
    }
    catch (Exception ex)
    {
      this.\u206C‭⁪⁮‮‭‏⁪⁯‌⁯⁯⁭⁮‮⁫‎​⁮‫‎⁪⁯⁫‏‮‏⁭⁭⁫⁯⁭‮‭‮‬⁭⁭‭⁯‮ = ex;
    }
    if (obj1 == null)
      _param3.Remove((object) _param1);
    return obj1;
  }
}
