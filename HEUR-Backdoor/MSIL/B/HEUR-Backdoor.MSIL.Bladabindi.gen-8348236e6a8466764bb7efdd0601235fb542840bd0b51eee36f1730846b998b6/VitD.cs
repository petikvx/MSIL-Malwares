// Decompiled with JetBrains decompiler
// Type: Milky_System.VitD
// Assembly: HostSecurityManagerOptions, Version=8.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: 8998D101-643A-45E5-99F2-56481F352480
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Bladabindi.gen-8348236e6a8466764bb7efdd0601235fb542840bd0b51eee36f1730846b998b6.exe

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace Milky_System
{
  [DebuggerNonUserCode]
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  [CompilerGenerated]
  internal class VitD
  {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;

    internal VitD()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager ResourceManager
    {
      get
      {
        bool flag = object.ReferenceEquals((object) VitD.resourceMan, (object) null);
label_1:
        int num1 = -690309693;
        ResourceManager resourceManager;
        ResourceManager resourceMan;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -635253387)) % 7U)
          {
            case 1:
              int num3 = !flag ? -887377420 : (num3 = -1658402119);
              num1 = num3 ^ (int) num2 * -2122033823;
              continue;
            case 2:
              VitD.resourceMan = resourceManager;
              num1 = (int) num2 * 859974852 ^ 1310834414;
              continue;
            case 3:
              num1 = (int) num2 * -632364800 ^ -1624442574;
              continue;
            case 4:
              goto label_1;
            case 5:
              resourceMan = VitD.resourceMan;
              num1 = -1344669266;
              continue;
            case 6:
              resourceManager = new ResourceManager(\u003CModule\u003E.\u202B‌‏‭‫⁬‌‪‮⁪‌⁪‎⁫⁯⁬‏‎⁫⁯‏‍‍‬⁬‌⁬‫‬‮‮‭‮‮‪⁭⁬‫​‮‮<string>(1539058820U), typeof (VitD).Assembly);
              num1 = (int) num2 * 1271883746 ^ 1067455018;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return resourceMan;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Culture
    {
      get
      {
        CultureInfo resourceCulture = VitD.resourceCulture;
label_1:
        int num1 = -753975178;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1261388275)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -363631155 ^ -1813206758;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return resourceCulture;
      }
      set => VitD.resourceCulture = value;
    }

    internal static byte[] CurrentSystemTimeZone
    {
      get
      {
        object objectValue = RuntimeHelpers.GetObjectValue(VitD.ResourceManager.GetObject(\u003CModule\u003E.\u200E⁯‫⁬‬‏‬⁮‮⁮⁪‪‍‎‏‬⁮⁪‌‫‫⁭⁯⁪⁬⁪⁪⁭⁭⁪⁭⁪‬‫‏⁯‮⁪​‫‮<string>(170298697U), VitD.resourceCulture));
label_1:
        int num1 = -1960968981;
        byte[] currentSystemTimeZone;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1872676647)) % 3U)
          {
            case 1:
              currentSystemTimeZone = (byte[]) objectValue;
              num1 = (int) num2 * -1301025605 ^ 742882872;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return currentSystemTimeZone;
      }
    }
  }
}
