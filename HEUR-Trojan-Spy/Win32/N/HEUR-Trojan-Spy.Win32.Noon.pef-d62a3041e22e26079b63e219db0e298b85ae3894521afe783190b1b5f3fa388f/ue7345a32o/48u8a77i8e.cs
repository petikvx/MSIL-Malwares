// Decompiled with JetBrains decompiler
// Type: ue7345a32o.48u8a77i8e
// Assembly: ao2u718188, Version=0.17.1.12262, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 3DF97629-1C85-445F-828B-3AC8EB815CA9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Noon.pef-d62a3041e22e26079b63e219db0e298b85ae3894521afe783190b1b5f3fa388f.exe

using \u00306uo1e5904;
using \u0032a360iaooi;
using \u0033oeu1e6192;
using \u0035a6974u213;
using Microsoft.ApplicationInsights.Extensibility.Implementation.Tracing;
using Microsoft.Runtime.CompilerServices;
using System;
using System.Globalization;
using System.IO;
using System.Net;
using System.Threading;
using System.Threading.Tasks;

namespace ue7345a32o
{
  internal class \u00348u8a77i8e : IDisposable
  {
    protected readonly AutoResetEvent DelayHandler;
    private readonly TimeSpan \u0034aa64e48u7;
    private readonly TimeSpan \u0036215o59659;
    private readonly AutoResetEvent \u0036e59i9o771;
    private bool \u003628oi75ei5;
    private TimeSpan \u0031508i06867;
    private ooe0i71e11 i5oee7i799;
    private int o10ai36eu5;
    private \u0036361a60298 \u0038ouu6269e0;

    private TimeSpan i6ue907a25 => this.\u0038ouu6269e0.ooao97a8uo;

    public void o4i2584a96()
    {
      if (Interlocked.Increment(ref this.o10ai36eu5) != 1)
        return;
      ConfiguredTaskAwaitable configuredTaskAwaitable = AwaitExtensions.ConfigureAwait(this.\u00318u8a434i5(), false);
      ConfiguredTaskAwaitable.ConfiguredTaskAwaiter awaiter = ((ConfiguredTaskAwaitable) ref configuredTaskAwaitable).GetAwaiter();
      ((ConfiguredTaskAwaitable.ConfiguredTaskAwaiter) ref awaiter).GetResult();
      this.DelayHandler.Dispose();
      this.\u0036e59i9o771.Dispose();
    }

    internal Task \u00318u8a434i5()
    {
      this.\u003628oi75ei5 = true;
      this.DelayHandler.Set();
      return Task.Factory.StartNew((Action) (() =>
      {
        try
        {
          this.\u0036e59i9o771.WaitOne(this.\u0031508i06867);
        }
        catch (ObjectDisposedException ex)
        {
        }
      }));
    }

    protected void SendLoop()
    {
      TimeSpan a83iu992ai = TimeSpan.Zero;
      TimeSpan nextSendInterval = this.\u0034aa64e48u7;
      try
      {
        while (!this.\u003628oi75ei5)
        {
          using (\u0036uue6eooo8 obj = this.i5oee7i799.\u0032551140e00())
          {
            if (!this.\u003628oi75ei5)
            {
              if (obj != null)
              {
                if (!this.Send(obj, ref nextSendInterval))
                  this.i5oee7i799.o45o002ae3(obj);
              }
              else
                nextSendInterval = this.\u0034aa64e48u7;
            }
            else
              break;
          }
          \u00348u8a77i8e.eeaeu69591(a83iu992ai, nextSendInterval);
          this.DelayHandler.WaitOne(nextSendInterval);
          a83iu992ai = nextSendInterval;
        }
        this.\u0036e59i9o771.Set();
      }
      catch (ObjectDisposedException ex)
      {
      }
    }

    protected virtual bool Send(\u0036uue6eooo8 transmission, ref TimeSpan nextSendInterval)
    {
      try
      {
        if (transmission != null)
        {
          ConfiguredTaskAwaitable configuredTaskAwaitable = AwaitExtensions.ConfigureAwait(transmission.SendAsync(), false);
          ConfiguredTaskAwaitable.ConfiguredTaskAwaiter awaiter = ((ConfiguredTaskAwaitable) ref configuredTaskAwaitable).GetAwaiter();
          ((ConfiguredTaskAwaitable.ConfiguredTaskAwaiter) ref awaiter).GetResult();
          nextSendInterval = this.i6ue907a25;
        }
      }
      catch (WebException ex)
      {
        int? nullable = \u00348u8a77i8e.\u003402o6433i8(ex);
        nextSendInterval = this.\u003799o307o72(nullable, nextSendInterval, this.\u0036215o59659);
        return \u00348u8a77i8e.a1eou64790(nullable, ex.Status);
      }
      catch (Exception ex)
      {
        nextSendInterval = this.\u003799o307o72(new int?(), nextSendInterval, this.\u0036215o59659);
        string str = string.Format((IFormatProvider) CultureInfo.InvariantCulture, \u0033457o91ea7.\u0039u51uui516("\u000F\vs2,\u0018~r\u0004g.(!3\u0019\nq=\u001A1c*\f\u001F<3<\u001E\a3\v\u007Ffc\u0014 /", "rM0tkG8zI7eeyoXM75Vl9kJP4hqXK"), new object[1]
        {
          (object) ex
        });
        CoreEventSource.Log.LogVerbose(str, \u0033457o91ea7.\u0039u51uui516("\u0013\v{31\u001Du1\u0015", "rM0tkG8zI7eeyoXM75Vl9kJP4hqXK"));
      }
      return false;
    }

    private static void eeaeu69591(TimeSpan a83iu992ai, TimeSpan a18a4u82e0)
    {
      if (Math.Abs(a18a4u82e0.TotalSeconds - a83iu992ai.TotalSeconds) <= 60.0)
        return;
      CoreEventSource.Log.LogVerbose(\u0033457o91ea7.\u0039u51uui516("4\0`(c\u001Cu<\u0005v#*q.\u001E\u0011zo\b%}yB", "rM0tkG8zI7eeyoXM75Vl9kJP4hqXK") + (object) a18a4u82e0, \u0033457o91ea7.\u0039u51uui516("\u0013\v{31\u001Du1\u0015", "rM0tkG8zI7eeyoXM75Vl9kJP4hqXK"));
    }

    private static int? \u003402o6433i8(WebException u575592712) => u575592712.Response is HttpWebResponse response ? new int?((int) response.StatusCode) : new int?();

    private static bool a1eou64790(int? _param0, WebExceptionStatus _param1)
    {
      switch (_param1)
      {
        case WebExceptionStatus.NameResolutionFailure:
        case WebExceptionStatus.ConnectFailure:
        case WebExceptionStatus.Timeout:
        case WebExceptionStatus.ProxyNameResolutionFailure:
          return true;
        default:
          if (!_param0.HasValue)
            return false;
          switch (_param0.Value)
          {
            case 408:
            case 500:
            case 502:
            case 503:
            case 511:
              return true;
            default:
              return false;
          }
      }
    }

    private TimeSpan \u003799o307o72(int? _param1, TimeSpan _param2, TimeSpan _param3)
    {
      if (_param1.HasValue && _param1.Value == 400)
        return this.i6ue907a25;
      return _param2.TotalSeconds == 0.0 ? TimeSpan.FromSeconds(1.0) : TimeSpan.FromSeconds(Math.Min(_param2.TotalSeconds * 2.0, _param3.TotalSeconds));
    }

    protected \u00348u8a77i8e(
      string fullPath,
      Uri address,
      byte[] content,
      string contentType,
      string contentEncoding)
      : this(address, content, contentType, contentEncoding, new TimeSpan())
    {
      ((\u0036uue6eooo8) this).\u003738a087070 = fullPath;
      ((\u0036uue6eooo8) this).\u003242o7ee156 = Path.GetFileName(fullPath);
    }
  }
}
