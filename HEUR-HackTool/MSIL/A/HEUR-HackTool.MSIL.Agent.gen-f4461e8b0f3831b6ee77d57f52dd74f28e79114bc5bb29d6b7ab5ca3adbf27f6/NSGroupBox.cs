// Decompiled with JetBrains decompiler
// Type: BlackNET_Builder.NSGroupBox
// Assembly: BlackNET Builder, Version=3.7.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B8A14F4-2444-48A4-BCEA-3077100A9E22
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Agent.gen-f4461e8b0f3831b6ee77d57f52dd74f28e79114bc5bb29d6b7ab5ca3adbf27f6.exe

using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Text;
using System.Windows.Forms;

namespace BlackNET_Builder
{
  internal class NSGroupBox : ContainerControl
  {
    private bool _DrawSeperator;
    private string _Title;
    private string _SubTitle;
    private Font _TitleFont;
    private Font _SubTitleFont;
    private GraphicsPath GP1;
    private GraphicsPath GP2;
    private PointF PT1;
    private SizeF SZ1;
    private SizeF SZ2;
    private Pen P1;
    private Pen P2;
    private SolidBrush B1;

    public bool DrawSeperator
    {
      get => this._DrawSeperator;
      set
      {
        this._DrawSeperator = value;
        this.Invalidate();
      }
    }

    public string Title
    {
      get => this._Title;
      set
      {
        this._Title = value;
        this.Invalidate();
      }
    }

    public string SubTitle
    {
      get => this._SubTitle;
      set
      {
        this._SubTitle = value;
        this.Invalidate();
      }
    }

    public NSGroupBox()
    {
      this._Title = "GroupBox";
      this._SubTitle = "Details";
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.Opaque | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint | ControlStyles.OptimizedDoubleBuffer, true);
      this.SetStyle(ControlStyles.Selectable, false);
      this._TitleFont = new Font("Verdana", 10f);
      this._SubTitleFont = new Font("Verdana", 6.5f);
      this.P1 = new Pen(Color.FromArgb(24, 24, 24));
      this.P2 = new Pen(Color.FromArgb(55, 55, 55));
      this.B1 = new SolidBrush(Color.FromArgb(51, 181, 229));
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      ThemeModule.G = e.Graphics;
      ThemeModule.G.TextRenderingHint = TextRenderingHint.ClearTypeGridFit;
      ThemeModule.G.Clear(this.BackColor);
      ThemeModule.G.SmoothingMode = SmoothingMode.AntiAlias;
      this.GP1 = ThemeModule.CreateRound(0, 0, checked (this.Width - 1), checked (this.Height - 1), 7);
      this.GP2 = ThemeModule.CreateRound(1, 1, checked (this.Width - 3), checked (this.Height - 3), 7);
      ThemeModule.G.DrawPath(this.P1, this.GP1);
      ThemeModule.G.DrawPath(this.P2, this.GP2);
      this.SZ1 = ThemeModule.G.MeasureString(this._Title, this._TitleFont, this.Width, StringFormat.GenericTypographic);
      this.SZ2 = ThemeModule.G.MeasureString(this._SubTitle, this._SubTitleFont, this.Width, StringFormat.GenericTypographic);
      ThemeModule.G.DrawString(this._Title, this._TitleFont, Brushes.Black, 6f, 6f);
      ThemeModule.G.DrawString(this._Title, this._TitleFont, (Brush) this.B1, 5f, 5f);
      this.PT1 = new PointF(6f, this.SZ1.Height + 4f);
      ThemeModule.G.DrawString(this._SubTitle, this._SubTitleFont, Brushes.Black, this.PT1.X + 1f, this.PT1.Y + 1f);
      ThemeModule.G.DrawString(this._SubTitle, this._SubTitleFont, Brushes.WhiteSmoke, this.PT1.X, this.PT1.Y);
      if (!this._DrawSeperator)
        return;
      int num = checked ((int) Math.Round((double) unchecked (this.PT1.Y + this.SZ2.Height)) + 8);
      ThemeModule.G.DrawLine(this.P1, 4, num, checked (this.Width - 5), num);
      ThemeModule.G.DrawLine(this.P2, 4, checked (num + 1), checked (this.Width - 5), checked (num + 1));
    }
  }
}
