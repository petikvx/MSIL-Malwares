// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: CustomQueryInterfaceMo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B293447-7555-427F-9A9F-AB127E35E000
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d42aac0420fddf3828862d0a9a1e79708beccbc282bf11d5b45daa35c47ba73f.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1161941421;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1498570279)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 502649567 ^ -2088883977;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1968884502 ^ 1713759102;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 510952707;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1530848180)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1597869065 ^ -1444583231;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -107479345 ^ 1652097017;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count => 0;

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 963324867;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 571502124)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1188033909 ^ -517109672;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1323627730;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1910658598)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1322328459 ^ 829980038;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -1951496940;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -401636210)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -621539504 ^ -1713738609;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -466488351;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1789066209)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1309545025 ^ -1499186723;
              continue;
            case 2:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -809372990 ^ -761525630;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1434746375;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 859268549)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1997777013 ^ 53717004;
            continue;
          case 3:
            num1 = (int) num2 * 23731016 ^ -523779700;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = 855060872;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 888642644)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -849815607 ^ -682489086;
              continue;
            case 1:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1830621729 ^ 696704211;
              continue;
            case 3:
              goto label_1;
            case 4:
              asInt = result;
              num1 = (int) num2 * -1489439656 ^ 928261764;
              continue;
            case 5:
              asInt = 0;
              num1 = 982673874;
              continue;
            case 6:
              int num3 = !flag ? -1310809590 : (num3 = -2024798655);
              num1 = num3 ^ (int) num2 * 1664373013;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1843487828;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1878174777)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1197555983 ^ 273580523;
              continue;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1244796456 ^ -1457828179;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 396866992;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1099442277)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1659594953 ^ 1303209973;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = 2007682766;
              continue;
            case 3:
              num1 = (int) num2 * 1991287286 ^ 445961761;
              continue;
            case 4:
              int num3 = !flag ? -1921772269 : (num3 = -943791680);
              num1 = num3 ^ (int) num2 * -132166155;
              continue;
            case 5:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200F‫‎⁭⁭⁭⁭⁮​‌‫⁮‪‎‎⁯‌⁪‮⁪⁮‌‭‫‮‌‮‪‬⁮⁮‬‌‬⁮‭‬⁪‍‭‮(), out result);
              num1 = (int) num2 * 1079151042 ^ -752721693;
              continue;
            case 7:
              num1 = (int) num2 * -412350017 ^ 651893666;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -2025591404;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2069711280)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 707937852 ^ 1482681131;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -44069458;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -733575412)) % 8U)
          {
            case 0:
              asDouble = 0.0;
              num1 = -2074874345;
              continue;
            case 2:
              result = 0.0;
              num1 = (int) num2 * -756275590 ^ 454379423;
              continue;
            case 3:
              num1 = (int) num2 * -1220936472 ^ -563971987;
              continue;
            case 4:
              asDouble = result;
              num1 = (int) num2 * -2127541908 ^ 1770868674;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * 349402222 ^ 1949521457;
              continue;
            case 7:
              int num3 = double.TryParse(this.Value, out result) ? -338111362 : (num3 = -147328790);
              num1 = num3 ^ (int) num2 * -786893222;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = -59758331;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -580789790)) % 7U)
          {
            case 1:
              asBool = !JSONNode.\u206C‏‌⁯⁮‫‪⁬⁮​⁪⁭​⁯‌​⁭⁮‫⁫⁪‬‮‮‌‌​⁪‌⁬​‫‏‮⁮⁪‮‬‍‍‮(this.Value);
              num1 = -556529364;
              continue;
            case 2:
              int num3 = flag ? 1477353339 : (num3 = 1925874843);
              num1 = num3 ^ (int) num2 * -209834365;
              continue;
            case 3:
              num1 = (int) num2 * -264752066 ^ 331035213;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * 1115328017 ^ -827319625;
              continue;
            case 5:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 784510512 ^ -1222515265;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1984107030;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1904865633)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1994130972;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * 596672750 ^ 523097455;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -875008974;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1443896345)) % 4U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -413591093 ^ 1810794674;
              continue;
            case 2:
              num1 = (int) num2 * -1858723669 ^ 946207809;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = 1989574925;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2003808189)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1844942861 ^ 2061372234;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 828309689;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 845652763)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            str2 = d.Value;
            break;
          case 3:
            num1 = (int) num2 * 1314804619 ^ -1715430777;
            continue;
          case 4:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -585664576 ^ 1734405317;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 1579134163;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1600095890;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1831855582)) % 8U)
        {
          case 0:
            goto label_1;
          case 2:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 3:
            flag1 = (object) a == b;
            num1 = 860170031;
            continue;
          case 4:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -146386262 ^ -2000387420;
            continue;
          case 5:
            int num4 = flag2 ? 926436111 : (num4 = 306810018);
            num1 = num4 ^ (int) num2 * -2116013997;
            continue;
          case 6:
            flag1 = true;
            num1 = (int) num2 * 447706702 ^ -875464587;
            continue;
          case 7:
            num1 = (int) num2 * 1591125828 ^ 102278547;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = 726119987;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -1670383604;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1020670771)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1080863748 ^ 725041331;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1128249724 ^ 598905801;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -396395245;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -275882823)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * 905233313 ^ -500136753;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u206A⁭⁬‎‪‬‎‍⁭‌⁪⁫‭‬⁯‪‫‮‎‌‭‫⁭⁫‌‍‭‪‮⁮⁮⁮⁮⁬‫⁯‬‫‮⁭‮();
label_1:
      int num1 = 371906828;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1741379486)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -2093751053 ^ 1029830355;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 1958752759;
      int num2;
      char ch1;
      char ch2;
      string str1;
      char ch3;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 474102568)) % 33U)
        {
          case 0:
            num1 = (int) num3 * 1505570928 ^ -1893487665;
            continue;
          case 1:
label_24:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\b");
            num1 = 1859610175;
            continue;
          case 2:
            int num4;
            num1 = num4 = ch2 == '"' ? 1680104203 : (num4 = 1276883697);
            continue;
          case 3:
            num1 = (int) num3 * 1755949165 ^ -492088424;
            continue;
          case 4:
label_7:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, ch3.ToString());
            num1 = 1859610175;
            continue;
          case 5:
            ch1 = ch3;
            num1 = (int) num3 * -941227827 ^ 916996455;
            continue;
          case 6:
label_23:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\r");
            num1 = 955045908;
            continue;
          case 7:
            str3 = str1;
            num1 = (int) num3 * 1299793616 ^ -1570355160;
            continue;
          case 8:
            num1 = (int) num3 * 1689664222 ^ 722673507;
            continue;
          case 9:
            ch3 = JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(str2, num2);
            num1 = 1017838994;
            continue;
          case 10:
            num1 = (int) num3 * -1025605010 ^ -1607767177;
            continue;
          case 11:
            int num5;
            num1 = num5 = num2 >= JSONNode.\u200E⁯⁬‪⁮⁫‌⁫‎‌‍‭⁪‫​⁪⁭​‬​‭‫​⁬⁫‪‭⁬‭‮‫‮‪⁪‍‬‫⁭‮‎‮(str2) ? 1729869326 : (num5 = 1550280070);
            continue;
          case 12:
            num2 = 0;
            num1 = (int) num3 * -1240047580 ^ -87606359;
            continue;
          case 13:
            num1 = 369132679;
            continue;
          case 14:
            num1 = (int) num3 * 1991213254 ^ 1122524799;
            continue;
          case 15:
label_31:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\f");
            num1 = 1859610175;
            continue;
          case 16:
            num1 = (int) num3 * 134598933 ^ 476904795;
            continue;
          case 17:
label_32:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\t");
            num1 = 797160001;
            continue;
          case 18:
label_21:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\n");
            num1 = 1987259220;
            continue;
          case 20:
            num1 = (int) num3 * -1298704489 ^ -985511757;
            continue;
          case 21:
            int num6;
            num1 = num6 = ch2 != '\\' ? 1946268228 : (num6 = 1272112814);
            continue;
          case 22:
            num1 = (int) num3 * 188122150 ^ -774459467;
            continue;
          case 23:
            num1 = (int) num3 * 28440612 ^ -2082377137;
            continue;
          case 24:
            ch2 = ch1;
            num1 = (int) num3 * -1179504023 ^ 932507528;
            continue;
          case 25:
            num1 = (int) num3 * -1786898879 ^ 684261871;
            continue;
          case 26:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\\"");
            num1 = 1859610175;
            continue;
          case 27:
            switch (ch2)
            {
              case '\b':
                goto label_24;
              case '\t':
                goto label_32;
              case '\n':
                goto label_21;
              case '\v':
                goto label_7;
              case '\f':
                goto label_31;
              case '\r':
                goto label_23;
              default:
                num1 = (int) num3 * 676613879 ^ -15067212;
                continue;
            }
          case 28:
            ++num2;
            num1 = (int) num3 * -1919199783 ^ 1275725061;
            continue;
          case 29:
            str1 = "";
            num1 = (int) num3 * -755057474 ^ -779098321;
            continue;
          case 30:
            goto label_1;
          case 31:
            str1 = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(str1, "\\\\");
            num1 = 1529800730;
            continue;
          case 32:
            str2 = aText;
            num1 = (int) num3 * -2045724039 ^ -1500622764;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1752843082;
      string aItem;
      int num2;
      JSONNode jsonNode1;
      bool flag1;
      string aKey;
      char ch1;
      char ch2;
      char ch3;
      char ch4;
      Stack<JSONNode> jsonNodeStack;
      bool flag2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      JSONNode jsonNode2;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1702581925)) % 156U)
        {
          case 0:
            num1 = (int) num3 * -1431048771 ^ -421766398;
            continue;
          case 1:
            aKey = JSONNode.\u202E‫‮‪‎⁮‬‬‍‭‌‭‬‪⁪‫‮‎‭⁫⁮⁭‏‍⁪⁮​‏‮‪‬‎‌‌​‎‬‫‭‭‮(aKey);
            num1 = (int) num3 * 1541741986 ^ -1070798838;
            continue;
          case 2:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1310301496 ^ 431705389;
            continue;
          case 3:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1253005833 ^ 5423748;
            continue;
          case 4:
            int num4;
            num1 = num4 = ch4 == 'n' ? 1955805251 : (num4 = 1668619027);
            continue;
          case 5:
            num1 = (int) num3 * -1131414293 ^ -2021338018;
            continue;
          case 6:
            int num5;
            num1 = num5 = !flag4 ? 694927052 : (num5 = 226396244);
            continue;
          case 7:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1013177673 ^ -1552265164;
            continue;
          case 8:
            int num6 = !flag14 ? -1158964778 : (num6 = -1646811112);
            num1 = num6 ^ (int) num3 * 988753637;
            continue;
          case 9:
            aKey = "";
            aItem = "";
            num1 = 825088038;
            continue;
          case 10:
            num1 = (int) num3 * 502339809 ^ 567611487;
            continue;
          case 11:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1387080848 ^ 1437052846;
            continue;
          case 12:
            ch2 = JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2);
            num1 = 1861328713;
            continue;
          case 13:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1815080787 ^ 1630371254;
            continue;
          case 14:
label_98:
            flag8 = flag4;
            num1 = 621786410;
            continue;
          case 15:
            num1 = (int) num3 * 614439204 ^ -771720303;
            continue;
          case 16:
            goto label_1;
          case 17:
            int num7;
            num1 = num7 = !JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aKey, "") ? 835272694 : (num7 = 872634835);
            continue;
          case 18:
            num1 = (int) num3 * -1667542769 ^ 761314785;
            continue;
          case 19:
            jsonNodeStack.Pop();
            num1 = 1603131588;
            continue;
          case 20:
label_152:
            flag7 = flag4;
            num1 = 2089842940;
            continue;
          case 21:
            int num8;
            num1 = num8 = JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aKey, "") ? 814133805 : (num8 = 1996982962);
            continue;
          case 22:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, "\n");
            num1 = 856330992;
            continue;
          case 23:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * -650118584 ^ 1439024657;
            continue;
          case 24:
            aKey = JSONNode.\u202E‫‮‪‎⁮‬‬‍‭‌‭‬‪⁪‫‮‎‭⁫⁮⁭‏‍⁪⁮​‏‮‪‬‎‌‌​‎‬‫‭‭‮(aKey);
            num1 = (int) num3 * -1462966561 ^ -806829501;
            continue;
          case 25:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 123606124 ^ 147392303;
            continue;
          case 26:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1599453007 ^ 1908487613;
            continue;
          case 27:
            int num9;
            num1 = num9 = ch2 > ']' ? 1692704731 : (num9 = 841389306);
            continue;
          case 28:
            num1 = (int) num3 * 1826441242 ^ 1175725824;
            continue;
          case 29:
            int num10 = flag10 ? -1561264481 : (num10 = -1355744834);
            num1 = num10 ^ (int) num3 * 1124641929;
            continue;
          case 30:
          case 61:
          case 62:
          case 100:
          case 121:
label_36:
            ++num2;
            num1 = 1442329703;
            continue;
          case 31:
            num1 = 945891840;
            continue;
          case 32:
            flag14 = jsonNodeStack.Count == 0;
            num1 = 1031881597;
            continue;
          case 33:
            num1 = (int) num3 * -1089714651 ^ 1432477424;
            continue;
          case 34:
            int num11;
            num1 = num11 = ch2 == '{' ? 1195703827 : (num11 = 2086670987);
            continue;
          case 35:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -840606175 ^ 1505688075;
            continue;
          case 36:
            int num12 = flag2 ? 758597946 : (num12 = 340474436);
            num1 = num12 ^ (int) num3 * 2019447658;
            continue;
          case 37:
            int num13 = flag13 ? -357548794 : (num13 = -1757762776);
            num1 = num13 ^ (int) num3 * 934369427;
            continue;
          case 39:
            aItem = "";
            num1 = (int) num3 * -787941435 ^ 1648043264;
            continue;
          case 40:
            int num14 = ch4 <= 'f' ? -2122161567 : (num14 = -1720532423);
            num1 = num14 ^ (int) num3 * -980785857;
            continue;
          case 41:
            num1 = (int) num3 * 1090669000 ^ -780705129;
            continue;
          case 42:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 988894999 ^ 591189646;
            continue;
          case 43:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, "\f");
            num1 = 856330992;
            continue;
          case 44:
            int num15;
            num1 = num15 = ch2 == '}' ? 1644853845 : (num15 = 269847373);
            continue;
          case 45:
            num1 = (int) num3 * 2023165457 ^ 316992006;
            continue;
          case 46:
            num1 = (int) num3 * 585148492 ^ -2095850758;
            continue;
          case 47:
            num1 = (int) num3 * 1073294280 ^ 1864560255;
            continue;
          case 48:
            num1 = 1034571767;
            continue;
          case 49:
            num2 += 4;
            num1 = (int) num3 * 1517760458 ^ -1560042058;
            continue;
          case 50:
            num1 = (int) num3 * 1464412296 ^ -1876303563;
            continue;
          case 51:
            switch (ch4)
            {
              case 'r':
                goto label_31;
              case 's':
                goto label_7;
              case 't':
                goto label_110;
              case 'u':
                goto label_148;
              default:
                num1 = 444623303;
                continue;
            }
          case 52:
            int num16 = ch2 > ',' ? 478055754 : (num16 = 16058854);
            num1 = num16 ^ (int) num3 * -195182706;
            continue;
          case 53:
            flag10 = flag4;
            num1 = 1192893144;
            continue;
          case 54:
            int num17 = flag3 ? -1699274764 : (num17 = -1400302029);
            num1 = num17 ^ (int) num3 * -34480761;
            continue;
          case 55:
            num1 = (int) num3 * -396072919 ^ 302069377;
            continue;
          case 56:
            int num18 = !flag12 ? -1553123740 : (num18 = -581355884);
            num1 = num18 ^ (int) num3 * 917485551;
            continue;
          case 57:
            int num19 = flag9 ? 266281439 : (num19 = 1905020460);
            num1 = num19 ^ (int) num3 * 353310141;
            continue;
          case 58:
            num1 = (int) num3 * 1617362770 ^ 2000653716;
            continue;
          case 59:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, "\b");
            num1 = 1604952280;
            continue;
          case 60:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -448536456 ^ 276253527;
            continue;
          case 63:
            int num20 = flag16 ? -1275151863 : (num20 = -897412852);
            num1 = num20 ^ (int) num3 * -1203407452;
            continue;
          case 64:
label_31:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, "\r");
            num1 = 856330992;
            continue;
          case 65:
            int num21;
            num1 = num21 = !flag4 ? 70741406 : (num21 = 1200394859);
            continue;
          case 66:
            num1 = (int) num3 * -1531938274 ^ 1639477526;
            continue;
          case 67:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -343946470 ^ 1188524488;
            continue;
          case 68:
            num1 = (int) num3 * -246355379 ^ 108656850;
            continue;
          case 69:
            int num22;
            num1 = num22 = JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aKey, "") ? 244200076 : (num22 = 1578342858);
            continue;
          case 70:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1639466593 ^ -1270800320;
            continue;
          case 71:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 753620341 ^ 877348231;
            continue;
          case 72:
            num1 = (int) num3 * -1911153829 ^ -366843782;
            continue;
          case 73:
            flag16 = jsonNode1 != (object) null;
            num1 = (int) num3 * -755463178 ^ -757624432;
            continue;
          case 74:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1036125981 ^ 1722428294;
            continue;
          case 75:
            num1 = (int) num3 * 492275631 ^ -1664566487;
            continue;
          case 76:
            num1 = (int) num3 * 198465640 ^ 1352189288;
            continue;
          case 77:
            num1 = (int) num3 * -857076082 ^ -1207141004;
            continue;
          case 78:
            num1 = (int) num3 * -378060777 ^ -825254692;
            continue;
          case 79:
            num1 = 1549415927;
            continue;
          case 80:
            int num23 = flag1 ? -1695324065 : (num23 = -34752709);
            num1 = num23 ^ (int) num3 * 908632081;
            continue;
          case 81:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 676572424;
            continue;
          case 82:
            num1 = (int) num3 * 293732386 ^ -173153319;
            continue;
          case 83:
            goto label_70;
          case 84:
            aItem = "";
            num1 = (int) num3 * 268827749 ^ 2133566634;
            continue;
          case 85:
            aKey = "";
            num1 = 2143658613;
            continue;
          case 86:
            aKey = "";
            num1 = 673650586;
            continue;
          case 87:
            ch4 = ch3;
            num1 = (int) num3 * 753694104 ^ 1490607709;
            continue;
          case 88:
            int num24;
            num1 = num24 = ch2 == ' ' ? 503514707 : (num24 = 1075797251);
            continue;
          case 89:
            int num25 = flag7 ? 124545058 : (num25 = 1686716532);
            num1 = num25 ^ (int) num3 * -880443747;
            continue;
          case 90:
            int num26 = flag5 ? 2050908564 : (num26 = 1510816350);
            num1 = num26 ^ (int) num3 * -353005093;
            continue;
          case 91:
            num1 = (int) num3 * 243233118 ^ -1225307955;
            continue;
          case 92:
            num1 = (int) num3 * -648033019 ^ 1653069036;
            continue;
          case 93:
            flag3 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -65130267 ^ 122341446;
            continue;
          case 94:
            int num27 = !flag11 ? -1847324779 : (num27 = -2049574539);
            num1 = num27 ^ (int) num3 * 1191390860;
            continue;
          case 95:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1926935080;
            continue;
          case 96:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 800994215 ^ 1647696885;
            continue;
          case 97:
            switch (ch2)
            {
              case '[':
                goto label_98;
              case '\\':
                goto label_91;
              case ']':
                goto label_152;
              default:
                num1 = 725884805;
                continue;
            }
          case 98:
            num1 = (int) num3 * 363490483 ^ -2070622839;
            continue;
          case 99:
            num1 = 2093987340;
            continue;
          case 101:
            ch1 = JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2);
            ch3 = ch1;
            num1 = (int) num3 * 1395023621 ^ -1344684161;
            continue;
          case 102:
            num1 = (int) num3 * -1472135168 ^ -807405795;
            continue;
          case 103:
            switch (ch2)
            {
              case '\t':
                goto label_105;
              case '\n':
              case '\r':
                goto label_36;
              case '\v':
              case '\f':
                goto label_18;
              default:
                num1 = (int) num3 * 1246654801 ^ 1043442136;
                continue;
            }
          case 104:
            int num28 = !flag15 ? -1367628404 : (num28 = -876986826);
            num1 = num28 ^ (int) num3 * 581665913;
            continue;
          case 105:
            num1 = (int) num3 * -1873397629 ^ 765360739;
            continue;
          case 106:
            int num29;
            num1 = num29 = ch4 == 'f' ? 186922274 : (num29 = 2073692500);
            continue;
          case 107:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1125810210 ^ -867904991;
            continue;
          case 108:
label_7:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, ch1.ToString());
            num1 = 1382540925;
            continue;
          case 109:
            jsonNode2 = jsonNode1;
            num1 = 1799299483;
            continue;
          case 110:
label_105:
            int num30;
            num1 = num30 = !flag4 ? 1774649792 : (num30 = 2033301998);
            continue;
          case 111:
            num1 = (int) num3 * -1834786984 ^ -580988551;
            continue;
          case 112:
            int num31 = ch4 != 'b' ? 315260443 : (num31 = 1490433098);
            num1 = num31 ^ (int) num3 * 417610881;
            continue;
          case 113:
            int num32;
            num1 = num32 = ch2 == '"' ? 2036347007 : (num32 = 1215918950);
            continue;
          case 114:
            flag4 = !flag4;
            num1 = 983852233;
            continue;
          case 115:
            int num33 = flag8 ? -1971081518 : (num33 = -2073083836);
            num1 = num33 ^ (int) num3 * 829343046;
            continue;
          case 116:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -934994304 ^ 1963250254;
            continue;
          case 117:
            flag15 = JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aItem, "");
            num1 = (int) num3 * 1294516527 ^ 869064170;
            continue;
          case 118:
            num1 = (int) num3 * 1119602233 ^ -1085162507;
            continue;
          case 119:
            num1 = (int) num3 * 2090386858 ^ 1290205740;
            continue;
          case 120:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 2015687923 ^ -856935757;
            continue;
          case 122:
            aItem = "";
            num1 = (int) num3 * -2126795175 ^ 982957181;
            continue;
          case 123:
            flag6 = flag4;
            num1 = (int) num3 * -493653497 ^ -648660817;
            continue;
          case 124:
            num1 = (int) num3 * -1685656001 ^ -1032575997;
            continue;
          case 125:
            goto label_133;
          case 126:
            int num34;
            num1 = num34 = num2 >= JSONNode.\u200E⁯⁬‪⁮⁫‌⁫‎‌‍‭⁪‫​⁪⁭​‬​‭‫​⁬⁫‪‭⁬‭‮‫‮‪⁪‍‬‫⁭‮‎‮(aJSON) ? 580368228 : (num34 = 245588809);
            continue;
          case (uint) sbyte.MaxValue:
            int num35 = ch2 != ':' ? 2066207253 : (num35 = 1346275679);
            num1 = num35 ^ (int) num3 * 1041906485;
            continue;
          case 128:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 747724619 ^ 151902497;
            continue;
          case 129:
            num1 = 1318356631;
            continue;
          case 130:
            string s = JSONNode.\u202D​‌⁪‪‌‮⁫‎⁬⁪‪⁮‭⁮⁮‮⁭⁪⁫⁬‌⁭‍⁮⁫‌‎⁯‭‍⁮⁭‮‍​‌‪‏‌‮(aJSON, num2 + 1, 4);
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 381766776 ^ -1305860088;
            continue;
          case 131:
            int num36 = !flag6 ? -197249720 : (num36 = -1586924501);
            num1 = num36 ^ (int) num3 * -1623816551;
            continue;
          case 132:
            num1 = (int) num3 * -1880187747 ^ -1108179161;
            continue;
          case 133:
            flag1 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1024064956 ^ -801923747;
            continue;
          case 134:
            num1 = (int) num3 * -2054484920 ^ -1442432854;
            continue;
          case 135:
            flag13 = JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aItem, "");
            num1 = 879385248;
            continue;
          case 136:
            int num37;
            num1 = num37 = ch2 == ',' ? 2075455812 : (num37 = 1672043910);
            continue;
          case 137:
            flag5 = flag4;
            num1 = (int) num3 * -809841526 ^ -1270474231;
            continue;
          case 138:
            aKey = aItem;
            num1 = 127065911;
            continue;
          case 139:
            num1 = (int) num3 * 898210669 ^ 1909854739;
            continue;
          case 140:
            aItem = "";
            num1 = (int) num3 * 714428056 ^ -1439383740;
            continue;
          case 141:
            num1 = (int) num3 * 832079862 ^ 1055282670;
            continue;
          case 142:
label_91:
            ++num2;
            num1 = 1265571134;
            continue;
          case 143:
label_110:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, "\t");
            num1 = 999530439;
            continue;
          case 144:
            aItem = "";
            aKey = "";
            flag4 = false;
            num1 = (int) num3 * -963713240 ^ -1489155106;
            continue;
          case 145:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -328063403 ^ -1748842672;
            continue;
          case 146:
label_148:
            num1 = 1062770659;
            continue;
          case 147:
            int num38 = ch2 > ' ' ? 223962331 : (num38 = 321551905);
            num1 = num38 ^ (int) num3 * 1611807133;
            continue;
          case 148:
            flag11 = JSONNode.\u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮(aKey, "");
            num1 = 1991917155;
            continue;
          case 149:
            num1 = (int) num3 * 2072822589 ^ -1475233269;
            continue;
          case 150:
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1301464488 ^ 368816325;
            continue;
          case 151:
label_18:
            aItem = JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮(aItem, JSONNode.\u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮(aJSON, num2).ToString());
            num1 = 1607381951;
            continue;
          case 152:
            num1 = (int) num3 * -2130048166 ^ -267063737;
            continue;
          case 153:
            int num39 = !(jsonNode1 is JSONArray) ? -314639336 : (num39 = -1035750971);
            num1 = num39 ^ (int) num3 * 1401060440;
            continue;
          case 154:
            aKey = "";
            num1 = 2081602717;
            continue;
          case 155:
            aKey = JSONNode.\u202E‫‮‪‎⁮‬‬‍‭‌‭‬‪⁪‫‮‎‭⁫⁮⁭‏‍⁪⁮​‏‮‪‬‎‌‌​‎‬‫‭‭‮(aKey);
            num1 = (int) num3 * -939128402 ^ -765536483;
            continue;
          default:
            goto label_156;
        }
      }
label_70:
      throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("JSON Parse: Quotation marks seems to be messed up.");
label_133:
      throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -470401347;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1851829495)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u206C⁯‪⁯‭‫‭‎⁪‫‫⁬‌⁬‭‍⁭⁭⁪⁭⁭‪‎‎‪‭⁫‪‭⁮‮‏⁮‪‍‮⁪‍⁯‍‮(aData);
            num1 = (int) num2 * 147313130 ^ 674646993;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206F‍‮‏⁭⁬‬⁬⁯⁯‬‌⁯‮⁮⁮‬‌⁪⁬‬‍‭‬‬‎​‏⁪⁬‎‎‭⁫‎‏​‌⁯‭‮(JSONNode.\u200F‍⁬‮‫‎‭⁭⁯‌⁬​‌‌⁫⁫‏⁫‫‍⁯⁪‫⁭‏‭⁭‌‫⁬​‮‭‭⁬‍‎⁮‭‫‮((FileSystemInfo) JSONNode.\u202B⁭‎‫‫‫⁬⁬‍‬‫​⁬​​⁯​⁭‏⁭‮​‍⁪⁯⁬⁫‫‌​‫⁬‬‌⁬⁫⁭‭‏‌‮(JSONNode.\u202B‬​‮‎⁭⁭‬​⁫⁭⁮‎‍⁮‏⁬‌​⁬⁬⁮⁬​‏‍⁬⁬‬‭⁬⁯⁫⁭⁯⁭‭‏‬‍‮(aFileName))));
      FileStream aData = JSONNode.\u202E⁪‍‍⁮‮‌⁬⁬‬‏‌‌‬‌⁯‪‎⁫⁪‪⁫‪⁮⁫⁭‌‍‮‮‏⁮⁬⁮‫‎⁬‌⁭‏‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1201759763;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1631913118)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200F‍‮‫​‭​⁫‍‍⁮‬​‍‬‌‏‮‭‌⁭‌⁮‪‭⁫⁫‏‬‮⁯‭⁪‬⁭‌‌‎⁫‍‮((IDisposable) aData);
                num1 = (int) num2 * 268403937 ^ 1869342260;
                continue;
              case 3:
                num1 = (int) num2 * 1940689708 ^ 923054772;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206D‫​​‏‪‍⁫⁮‌‌‮‌⁯​‪‮‮⁫⁯‮​‎⁪⁮‏‬‮‍‎⁪‍‮⁮‬‎⁬​⁪‪‮();
      try
      {
label_2:
        int num1 = -1182543379;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -717535973)) % 5U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1866642388 ^ -849030862;
              continue;
            case 2:
              JSONNode.\u206A⁮‎⁭⁬‍⁮‎⁮‎‌⁪‬‌⁪​‌⁬​‮⁫⁫​⁫⁮‫​‬‫‍​‭‌​‭‍‮‎⁬⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * 937704120 ^ 2081453999;
              continue;
            case 4:
              num1 = (int) num2 * -1164502622 ^ 1693300249;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return JSONNode.\u200E‭⁫‬⁪‪‏‪‫‍‌⁬⁯‍‍⁬‌⁬⁯⁮‭​⁭‎‫‏‮⁭⁫‫‬‌‪‭⁬‪‮‫‎⁭‮(JSONNode.\u200B‪⁮⁪⁪⁫⁮​⁭‎⁭‮⁯⁫‎⁭⁬⁪‭⁪⁬‏​‍⁫⁫‬⁪‭‪⁫⁫‭‭‪⁫⁮⁬⁮‍‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -1289490166;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -717535973)) % 3U)
            {
              case 0:
                goto label_9;
              case 2:
                JSONNode.\u200F‍‮‫​‭​⁫‍‍⁮‬​‍‬‌‏‮‭‌⁭‌⁮‪‭⁫⁫‏‬‮⁯‭⁪‬⁭‌‌‎⁫‍‮((IDisposable) aData);
                num3 = (int) num4 * -420355773 ^ -352025356;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -220343367;
      JSONNode jsonNode;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag1;
      int num2;
      string aKey;
      JSONBinaryTag jsonBinaryTag2;
      int num3;
      bool flag1;
      bool flag2;
      int num4;
      int num5;
      JSONArray jsonArray;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1424883018)) % 44U)
        {
          case 0:
            num1 = (int) num6 * -900441098 ^ 548500959;
            continue;
          case 1:
label_32:
            num1 = -1184317947;
            continue;
          case 2:
label_42:
            num1 = -786819830;
            continue;
          case 3:
            num1 = (int) num6 * -2076613843 ^ 1956430422;
            continue;
          case 4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C​‪⁪‪‫⁭⁯⁭⁯‫⁪‏‭⁯⁪⁫⁬⁫‫‎⁭‮‍⁮‬‭‬‎‍​⁯⁭‫‌‫⁫⁫‫⁯‮(aReader));
            num1 = (int) num6 * 501210700 ^ -1004013713;
            continue;
          case 5:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1909651798;
            continue;
          case 6:
            num2 = 0;
            num1 = (int) num6 * 1049063843 ^ 1060996221;
            continue;
          case 7:
label_8:
            num1 = -283773884;
            continue;
          case 8:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -913448459 ^ -209075733;
            continue;
          case 9:
            aKey = JSONNode.\u206E‬‏‏​⁯‫⁮‫‭‪‮⁭⁭⁭‍‏⁯⁪‏‌‪‌‬‌‬‬‎‎‮‎⁪​‪⁯⁯⁪⁭⁪‮(aReader);
            num1 = (int) num6 * 255421082 ^ 1314005575;
            continue;
          case 10:
            num1 = -453592917;
            continue;
          case 11:
label_7:
            num1 = -1076557152;
            continue;
          case 12:
            goto label_1;
          case 13:
label_10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B⁬‎​⁮⁬‮⁫‌‭‏⁮⁯⁮⁬‏‏‬‬‎⁪‍‮‮‪⁯‮‫‮‍⁬⁮‍‮‮⁯‌‭‭‭‮(aReader));
            num1 = -1059343105;
            continue;
          case 14:
            num1 = (int) num6 * 1073331418 ^ 1903401441;
            continue;
          case 15:
            num3 = 0;
            num1 = (int) num6 * 208185374 ^ 2000546168;
            continue;
          case 16:
            num1 = (int) num6 * -573163785 ^ 1698677443;
            continue;
          case 17:
            num1 = (int) num6 * -1284131505 ^ 2046676904;
            continue;
          case 18:
label_24:
            num1 = -1194182803;
            continue;
          case 19:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 229922507 ^ 1468003016;
            continue;
          case 20:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1998006138 ^ -372317476;
            continue;
          case 21:
            num1 = (int) num6 * 96191049 ^ -1176171338;
            continue;
          case 22:
            int num7 = !flag2 ? 29020705 : (num7 = 791259044);
            num1 = num7 ^ (int) num6 * -1729949316;
            continue;
          case 23:
            num5 = JSONNode.\u206C​‪⁪‪‫⁭⁯⁭⁯‫⁪‏‭⁯⁪⁫⁬⁫‫‎⁭‮‍⁮‬‭‬‎‍​⁯⁭‫‌‫⁫⁫‫⁯‮(aReader);
            num1 = (int) num6 * 1614494964 ^ -997815906;
            continue;
          case 24:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 1362285657 ^ 1140617621;
            continue;
          case 25:
            num1 = (int) num6 * 1037573119 ^ -1292286245;
            continue;
          case 26:
label_23:
            num1 = -1344149286;
            continue;
          case 27:
            num1 = (int) num6 * 1272612776 ^ -1570491724;
            continue;
          case 28:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1862828751 ^ 1609129159;
            continue;
          case 29:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_24;
              case JSONBinaryTag.Class:
                goto label_8;
              case JSONBinaryTag.Value:
                goto label_23;
              case JSONBinaryTag.IntValue:
                goto label_42;
              case JSONBinaryTag.DoubleValue:
                goto label_7;
              case JSONBinaryTag.BoolValue:
                goto label_10;
              case JSONBinaryTag.FloatValue:
                goto label_32;
              default:
                num1 = (int) num6 * 321179110 ^ -2011127982;
                continue;
            }
          case 30:
            num4 = JSONNode.\u206C​‪⁪‪‫⁭⁯⁭⁯‫⁪‏‭⁯⁪⁫⁬⁫‫‎⁭‮‍⁮‬‭‬‎‍​⁯⁭‫‌‫⁫⁫‫⁯‮(aReader);
            num1 = (int) num6 * 605700439 ^ -172251796;
            continue;
          case 31:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -736194827 ^ -379641516;
            continue;
          case 32:
            flag1 = num3 < num5;
            num1 = -1359101142;
            continue;
          case 34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F⁫‪⁭⁯⁪‎‫‍⁬⁯⁫‮‫‌‍⁮⁭⁮⁪‌‮⁪⁫⁯‌​‌⁯⁫‏⁯⁯⁭⁬‌‏‏⁬‎‮(aReader));
            num1 = (int) num6 * 1619817154 ^ -279008130;
            continue;
          case 35:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202E‫⁭‌‌‫‌⁯‪⁮⁮‌‎‪‫⁮‍⁭⁮⁯‌‫‫‭⁪‬‍⁭‮‬‭⁪‏⁮⁭⁬⁮‍‪‎‮(aReader);
            num1 = (int) num6 * -1684260798 ^ -2068283156;
            continue;
          case 36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E‬‏‏​⁯‫⁮‫‭‪‮⁭⁭⁭‍‏⁯⁪‏‌‪‌‬‌‬‬‎‎‮‎⁪​‪⁯⁯⁪⁭⁪‮(aReader));
            num1 = (int) num6 * -2131412617 ^ 102228107;
            continue;
          case 37:
            num1 = (int) num6 * -1053113042 ^ 518589089;
            continue;
          case 38:
            ++num2;
            num1 = (int) num6 * 1077584586 ^ -320236164;
            continue;
          case 39:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏⁯​‏‌⁪⁮⁮‬‍‮‮⁪⁫⁬‬⁮⁯⁬‏‪‫⁮‍‍‬⁪⁭⁫‎‭⁭⁭‌‮‮‬​‫‮(aReader));
            num1 = (int) num6 * 1352883208 ^ 913890599;
            continue;
          case 40:
            int num8 = !flag1 ? 168987334 : (num8 = 93826083);
            num1 = num8 ^ (int) num6 * 1827031288;
            continue;
          case 41:
            ++num3;
            num1 = (int) num6 * 720264406 ^ -1201562468;
            continue;
          case 42:
            flag2 = num2 < num4;
            num1 = -1188171476;
            continue;
          case 43:
            goto label_6;
          default:
            goto label_46;
        }
      }
label_6:
      throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮(JSONNode.\u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_46:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A⁯⁬⁮‌‭‮⁮‏⁮​‍⁪⁮⁪‮⁭‏‭‫‎‎‏​⁮⁫‮‏‬⁮‬⁬⁮‭⁫‭⁬⁭‎⁯‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 271777284;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 959136354)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1294899180 ^ -1740213142;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 273359170;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 959136354)) % 3U)
            {
              case 1:
                JSONNode.\u200F‍‮‫​‭​⁫‍‍⁮‬​‍‬‌‏‮‭‌⁭‌⁮‪‭⁫⁫‏‬‮⁯‭⁪‬⁭‌‌‎⁫‍‮((IDisposable) aReader);
                num3 = (int) num4 * -675831603 ^ 1010052096;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202B⁭⁮‬‌‍‏‬⁫‎​⁯‫⁪‪⁯​‬‫⁭⁪‬‬⁬⁮‭‪‫⁮‪⁫​‫‪‬‭‎‭‬‭‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -2013002051;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -823260160)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -1829622717 ^ 946901066;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -1531949127;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -823260160)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u200F‍‮‫​‭​⁫‍‍⁮‬​‍‬‌‏‮‭‌⁭‌⁮‪‭⁫⁫‏‬‮⁯‭⁪‬⁭‌‌‎⁫‍‮((IDisposable) aData);
                num3 = (int) num4 * 709341923 ^ 791945383;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u202E‪‭‏‬⁫‍‍⁬‏‮‭‍‭⁭‏‭⁬⁬⁪⁫⁬‮⁯⁯‏⁫⁯‫⁬‪‍​​‪‪⁫‪⁫‬‮(JSONNode.\u200C⁯​‮⁯⁪‫‫⁯​⁯‎⁭⁬⁮‏‭‬‬‮‬‫‌‌⁪​‭⁭⁬⁮⁮‭‭⁬⁯⁪⁯‎‌‭‮(aBase64));
label_1:
      int num1 = -1719610029;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1662377775)) % 5U)
        {
          case 1:
            JSONNode.\u206A⁮‎⁭⁬‍⁮‎⁮‎‌⁪‬‌⁪​‌⁬​‮⁫⁫​⁫⁮‫​‬‫‍​‭‌​‭‍‮‎⁬⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * 1426939554 ^ -2038078842;
            continue;
          case 2:
            num1 = (int) num2 * 188606284 ^ -1464491820;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1218707043 ^ 899412532;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u200F‫‎⁭⁭⁭⁭⁮​‌‫⁮‪‎‎⁯‌⁪‮⁪⁮‌‭‫‮‌‮‪‬⁮⁮‬‌‬⁮‭‬⁪‍‭‮() => CultureInfo.InvariantCulture;

    static bool \u206C‏‌⁯⁮‫‪⁬⁮​⁪⁭​⁯‌​⁭⁮‫⁫⁪‬‮‮‌‌​⁪‌⁬​‫‏‮⁮⁪‮‬‍‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206A⁭⁬‎‪‬‎‍⁭‌⁪⁫‭‬⁯‪‫‮‎‌‭‫⁭⁫‌‍‭‪‮⁮⁮⁮⁮⁬‫⁯‬‫‮⁭‮() => base.GetHashCode();

    static char \u202C⁫‫⁭⁬​⁬‬⁪‬‌⁬‮‌⁮⁫⁫‍‬⁯⁭⁬‍‎‎⁫‌‌‎⁫⁬⁭⁭‎‮⁬‌‍‭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202D⁭‭‍⁯‎‌⁮‫⁯‫⁫‪⁪‮‬‮⁪​⁮⁮‮⁭‍⁫‎⁭​⁪⁬‎⁬‌‮⁪‌⁯⁬⁪⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200E⁯⁬‪⁮⁫‌⁫‎‌‍‭⁪‫​⁪⁭​‬​‭‫​⁬⁫‪‭⁬‭‮‫‮‪⁪‍‬‫⁭‮‎‮([In] string obj0) => obj0.Length;

    static string \u202E‫‮‪‎⁮‬‬‍‭‌‭‬‪⁪‫‮‎‭⁫⁮⁭‏‍⁪⁮​‏‮‪‬‎‌‌​‎‬‫‭‭‮([In] string obj0) => obj0.Trim();

    static bool \u200B‌⁭‪‪⁮‫⁭⁫‫​‫‬‮‎‍⁮⁯⁮‌⁯​‫‭‪⁫⁮‍​‪⁯⁯⁪⁯​⁫‫‍‏‌‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202A⁬⁬⁮‭‏‍‮‭⁪⁮‪⁪⁭‌‎‮⁬‌⁯‍⁪‫‎⁫⁭‪​‍‍⁪⁫‌‎‮‪⁫‎​‬‮([In] string obj0) => new Exception(obj0);

    static string \u202D​‌⁪‪‌‮⁫‎⁬⁪‪⁮‭⁮⁮‮⁭⁪⁫⁬‌⁭‍⁮⁫‌‎⁯‭‍⁮⁭‮‍​‌‪‏‌‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C⁯‪⁯‭‫‭‎⁪‫‫⁬‌⁬‭‍⁭⁭⁪⁭⁭‪‎‎‪‭⁫‪‭⁮‮‏⁮‪‍‮⁪‍⁯‍‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202B‬​‮‎⁭⁭‬​⁫⁭⁮‎‍⁮‏⁬‌​⁬⁬⁮⁬​‏‍⁬⁬‬‭⁬⁯⁫⁭⁯⁭‭‏‬‍‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202B⁭‎‫‫‫⁬⁬‍‬‫​⁬​​⁯​⁭‏⁭‮​‍⁪⁯⁬⁫‫‌​‫⁬‬‌⁬⁫⁭‭‏‌‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200F‍⁬‮‫‎‭⁭⁯‌⁬​‌‌⁫⁫‏⁫‫‍⁯⁪‫⁭‏‭⁭‌‫⁬​‮‭‭⁬‍‎⁮‭‫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206F‍‮‏⁭⁬‬⁬⁯⁯‬‌⁯‮⁮⁮‬‌⁪⁬‬‍‭‬‬‎​‏⁪⁬‎‎‭⁫‎‏​‌⁯‭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202E⁪‍‍⁮‮‌⁬⁬‬‏‌‌‬‌⁯‪‎⁫⁪‪⁫‪⁮⁫⁭‌‍‮‮‏⁮⁬⁮‫‎⁬‌⁭‏‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F‍‮‫​‭​⁫‍‍⁮‬​‍‬‌‏‮‭‌⁭‌⁮‪‭⁫⁫‏‬‮⁯‭⁪‬⁭‌‌‎⁫‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206D‫​​‏‪‍⁫⁮‌‌‮‌⁯​‪‮‮⁫⁯‮​‎⁪⁮‏‬‮‍‎⁪‍‮⁮‬‎⁬​⁪‪‮() => new MemoryStream();

    static void \u206A⁮‎⁭⁬‍⁮‎⁮‎‌⁪‬‌⁪​‌⁬​‮⁫⁫​⁫⁮‫​‬‫‍​‭‌​‭‍‮‎⁬⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200B‪⁮⁪⁪⁫⁮​⁭‎⁭‮⁯⁫‎⁭⁬⁪‭⁪⁬‏​‍⁫⁫‬⁪‭‪⁫⁫‭‭‪⁫⁮⁬⁮‍‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E‭⁫‬⁪‪‏‪‫‍‌⁬⁯‍‍⁬‌⁬⁯⁮‭​⁭‎‫‏‮⁭⁫‫‬‌‪‭⁬‪‮‫‎⁭‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202E‫⁭‌‌‫‌⁯‪⁮⁮‌‎‪‫⁮‍⁭⁮⁯‌‫‫‭⁪‬‍⁭‮‬‭⁪‏⁮⁭⁬⁮‍‪‎‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206C​‪⁪‪‫⁭⁯⁭⁯‫⁪‏‭⁯⁪⁫⁬⁫‫‎⁭‮‍⁮‬‭‬‎‍​⁯⁭‫‌‫⁫⁫‫⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206E‬‏‏​⁯‫⁮‫‭‪‮⁭⁭⁭‍‏⁯⁪‏‌‪‌‬‌‬‬‎‎‮‎⁪​‪⁯⁯⁪⁭⁪‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206F⁫‪⁭⁯⁪‎‫‍⁬⁯⁫‮‫‌‍⁮⁭⁮⁪‌‮⁪⁫⁯‌​‌⁯⁫‏⁯⁯⁭⁬‌‏‏⁬‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202B⁬‎​⁮⁬‮⁫‌‭‏⁮⁯⁮⁬‏‏‬‬‎⁪‍‮‮‪⁯‮‫‮‍⁬⁮‍‮‮⁯‌‭‭‭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C‏⁯​‏‌⁪⁮⁮‬‍‮‮⁪⁫⁬‬⁮⁯⁬‏‪‫⁮‍‍‬⁪⁭⁫‎‭⁭⁭‌‮‮‬​‫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A⁯⁬⁮‌‭‮⁮‏⁮​‍⁪⁮⁪‮⁭‏‭‫‎‎‏​⁮⁫‮‏‬⁮‬⁬⁮‭⁫‭⁬⁭‎⁯‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202B⁭⁮‬‌‍‏‬⁫‎​⁯‫⁪‪⁯​‬‫⁭⁪‬‬⁬⁮‭‪‫⁮‪⁫​‫‪‬‭‎‭‬‭‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200C⁯​‮⁯⁪‫‫⁯​⁯‎⁭⁬⁮‏‭‬‬‮‬‫‌‌⁪​‭⁭⁬⁮⁮‭‭⁬⁯⁪⁯‎‌‭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202E‪‭‏‬⁫‍‍⁬‏‮‭‍‭⁭‏‭⁬⁬⁪⁫⁬‮⁯⁯‏⁫⁯‫⁬‪‍​​‪‪⁫‪⁫‬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
