// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = 1026543322;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2010737875)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * -153877621 ^ 2092351270;
              continue;
            case 2:
              num1 = (int) num2 * -1435728393 ^ 1006099102;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = -1487943346;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1693134673)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -1791371870 ^ 243698659;
            continue;
          case 1:
            num1 = (int) num2 * -1935453660 ^ -1129229659;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 4:
            this.AsDouble = aData;
            num1 = (int) num2 * -1573945104 ^ 210453959;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
      string str = JSONData.\u206B‎‍‫⁯‮⁫‬‮⁮‫⁪⁬⁬⁪⁮⁪​‮‪‏⁫⁬⁪‎‎‍‏‫⁪⁫‬‬‬‬‮⁯⁬‪‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = 1380919549;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1239865833)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1603927781 ^ 1807373772;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1931006260;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 273747160)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = JSONData.\u206B‎‍‫⁯‮⁫‬‮⁮‫⁪⁬⁬⁪⁮⁪​‮‪‏⁫⁬⁪‎‎‍‏‫⁪⁫‬‬‬‬‮⁯⁬‪‬‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1533268695 ^ 469599674;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1006133386;
      JSONData jsonData;
      bool flag1;
      bool flag2;
      bool flag3;
      bool flag4;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 592742475)) % 32U)
        {
          case 0:
            jsonData.AsDouble = this.AsDouble;
            num1 = 129285436;
            continue;
          case 1:
            jsonData = new JSONData("");
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * 105346655 ^ -794470499;
            continue;
          case 2:
            JSONData.\u200F‌⁪‎‫‬‫‎‌‌⁭⁬‏‬‫⁬‭‍‮‫⁭⁫⁮‫⁮‪⁭‍‎​‍‌⁯⁫‌⁫‪‬​‮‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 206726741 ^ -2032042162;
            continue;
          case 3:
            int num3 = !flag1 ? 800343935 : (num3 = 129157861);
            num1 = num3 ^ (int) num2 * -1379820015;
            continue;
          case 4:
            goto label_3;
          case 5:
            JSONData.\u200F⁯‭‭‎‏​‬‮‏‪⁪‭⁬‭‎⁭‫⁯⁫⁫⁮⁪⁭‏⁯⁮‏‬‏⁪⁯‌⁮‭⁯‎‎‏‎‮(aWriter, this.AsBool);
            num1 = (int) num2 * 831811806 ^ 1685728470;
            continue;
          case 6:
            flag4 = JSONData.\u202B‏⁪‬‮‎‭‭⁪⁫⁪⁪‭‬‭⁬⁫‌​⁫⁬‌​⁯‍‬⁭‍‮‎‎⁭‎⁫‎‌‏‎‏‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1845403025 ^ 316220803;
            continue;
          case 7:
            jsonData.AsBool = this.AsBool;
            num1 = 1109580045;
            continue;
          case 8:
            goto label_1;
          case 9:
            flag3 = JSONData.\u202B‏⁪‬‮‎‭‭⁪⁫⁪⁪‭‬‭⁬⁫‌​⁫⁬‌​⁯‍‬⁭‍‮‎‎⁭‎⁫‎‌‏‎‏‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -644642240 ^ -1621014343;
            continue;
          case 10:
            num1 = (int) num2 * 1031448621 ^ 554477933;
            continue;
          case 11:
            num1 = (int) num2 * -1776246971 ^ -2028203112;
            continue;
          case 12:
            JSONData.\u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮(aWriter, (byte) 7);
            num1 = (int) num2 * -1608786648 ^ -1386349687;
            continue;
          case 13:
            JSONData.\u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮(aWriter, (byte) 6);
            num1 = (int) num2 * 1127812253 ^ 1163781028;
            continue;
          case 14:
            int num4 = !flag4 ? 1894195597 : (num4 = 1595118896);
            num1 = num4 ^ (int) num2 * 498792461;
            continue;
          case 15:
            num1 = (int) num2 * 6175763 ^ -1334630966;
            continue;
          case 16:
            JSONData.\u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮(aWriter, (byte) 3);
            num1 = 1733036824;
            continue;
          case 17:
            num1 = (int) num2 * -1035035249 ^ -732510902;
            continue;
          case 18:
            int num5 = flag3 ? -972999846 : (num5 = -1861606210);
            num1 = num5 ^ (int) num2 * -1145075201;
            continue;
          case 19:
            JSONData.\u206E⁮‏‫⁮‎‮⁭​‪‮‍‫‏‌‌⁭⁭​⁮‌‎⁬‎‎⁬⁪‌⁯‎‫⁬⁮‫‪⁬⁫‍⁫⁮‮(aWriter, this.m_Data);
            num1 = (int) num2 * -1687244696 ^ 561579850;
            continue;
          case 20:
            JSONData.\u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮(aWriter, (byte) 4);
            JSONData.\u200D‏⁭‏⁬‍‪‌‌⁫‌‎‎‬​‫⁬‎‭‌‬⁬⁭‮‭⁫​⁪‮‌‏⁮‪‎​⁮​‎⁫‬‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1816084955 ^ 327715741;
            continue;
          case 21:
            flag2 = JSONData.\u202B‏⁪‬‮‎‭‭⁪⁫⁪⁪‭‬‭⁬⁫‌​⁫⁬‌​⁯‍‬⁭‍‮‎‎⁭‎⁫‎‌‏‎‏‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1649742936 ^ -202206951;
            continue;
          case 22:
            num1 = (int) num2 * -1521883857 ^ 1865695108;
            continue;
          case 23:
            flag1 = JSONData.\u202B‏⁪‬‮‎‭‭⁪⁫⁪⁪‭‬‭⁬⁫‌​⁫⁬‌​⁯‍‬⁭‍‮‎‎⁭‎⁫‎‌‏‎‏‭‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -41570930 ^ 1796019946;
            continue;
          case 24:
            num1 = (int) num2 * 656355922 ^ -821545505;
            continue;
          case 25:
            num1 = (int) num2 * -2141161691 ^ 1089286994;
            continue;
          case 26:
            int num6 = flag2 ? -1271138513 : (num6 = -354138781);
            num1 = num6 ^ (int) num2 * 286517060;
            continue;
          case 27:
            jsonData.AsFloat = this.AsFloat;
            num1 = 501414974;
            continue;
          case 28:
            num1 = (int) num2 * 634838260 ^ -1390093473;
            continue;
          case 29:
            JSONData.\u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮(aWriter, (byte) 5);
            num1 = (int) num2 * 288300107 ^ -996214267;
            continue;
          case 30:
            JSONData.\u206D‫⁮‫​⁭⁯‮‏​‮‫​‮‬⁮‮⁪⁮‌​⁫‏‪‌⁫⁬⁯⁫‭‫‎‪‫‍⁯‍​‍‪‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -1139849324 ^ 2123885899;
            continue;
          case 31:
            num1 = (int) num2 * -2037500545 ^ -1653325186;
            continue;
          default:
            goto label_34;
        }
      }
label_3:
      return;
label_34:;
    }

    static string \u206B‎‍‫⁯‮⁫‬‮⁮‫⁪⁬⁬⁪⁮⁪​‮‪‏⁫⁬⁪‎‎‍‏‫⁪⁫‬‬‬‬‮⁯⁬‪‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202B‏⁪‬‮‎‭‭⁪⁫⁪⁪‭‬‭⁬⁫‌​⁫⁬‌​⁯‍‬⁭‍‮‎‎⁭‎⁫‎‌‏‎‏‭‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200F‪⁪‫‌‭‪⁪‮​‏‍‮⁯​⁮⁪‫‬‮⁬‪‬‭‫‭​‍‌⁭⁪‎⁬‭‍‫⁬⁯‭⁬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200D‏⁭‏⁬‍‪‌‌⁫‌‎‎‬​‫⁬‎‭‌‬⁬⁭‮‭⁫​⁪‮‌‏⁮‪‎​⁮​‎⁫‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200F‌⁪‎‫‬‫‎‌‌⁭⁬‏‬‫⁬‭‍‮‫⁭⁫⁮‫⁮‪⁭‍‎​‍‌⁯⁫‌⁫‪‬​‮‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u206D‫⁮‫​⁭⁯‮‏​‮‫​‮‬⁮‮⁪⁮‌​⁫‏‪‌⁫⁬⁯⁫‭‫‎‪‫‍⁯‍​‍‪‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200F⁯‭‭‎‏​‬‮‏‪⁪‭⁬‭‎⁭‫⁯⁫⁫⁮⁪⁭‏⁯⁮‏‬‏⁪⁯‌⁮‭⁯‎‎‏‎‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206E⁮‏‫⁮‎‮⁭​‪‮‍‫‏‌‌⁭⁭​⁮‌‎⁬‎‎⁬⁪‌⁯‎‫⁬⁮‫‪⁬⁫‍⁫⁮‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
