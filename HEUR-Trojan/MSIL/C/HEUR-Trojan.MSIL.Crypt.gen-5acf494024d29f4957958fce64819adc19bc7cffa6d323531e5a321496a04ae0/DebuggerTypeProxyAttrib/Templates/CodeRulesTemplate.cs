// Decompiled with JetBrains decompiler
// Type: DebuggerTypeProxyAttrib.Templates.CodeRulesTemplate
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Pages;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Media;
using System.Windows.Media.Media3D;
using Tourield.Authentication;
using Tourield.Structs;

namespace DebuggerTypeProxyAttrib.Templates
{
  public class CodeRulesTemplate
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static Initializer ReadOrder(Point3D var1, Brush visitor)
    {
      int num1 = 4;
      Initializer initializer1;
      while (true)
      {
        int num2 = num1;
        Initializer initializer2;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              initializer2 = new Initializer(ErrorParserStructBuilder.FindOrder(var1, visitor));
              if (true)
              {
                num2 = 3;
                continue;
              }
              goto label_3;
            case 1:
            case 3:
              goto label_3;
            case 2:
              goto label_1;
            case 5:
              goto label_8;
            default:
              if (true)
              {
                num2 = 2;
                continue;
              }
              goto label_8;
          }
        }
label_1:
        initializer1 = initializer2;
        num1 = 5;
        continue;
label_3:
        initializer2._Instance = var1;
        initializer2.authentication = visitor;
        goto label_1;
      }
label_8:
      return initializer1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static List<Initializer> SetOrder()
    {
      string path = "..\\..\\Map.txt";
      if (!File.Exists(path))
      {
        using (StreamWriter text = File.CreateText(path))
        {
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
          text.WriteLine("DLDLDLDLDLDLDLDLDLDL");
          text.WriteLine("LDLDLDLDLDLDLDLDLDLD");
        }
      }
      int y = 0;
      List<Initializer> initializerList = new List<Initializer>();
      using (StreamReader streamReader = File.OpenText(path))
      {
        string str;
        while ((str = streamReader.ReadLine()) != null)
        {
          ++y;
          int x = 0;
          foreach (char ch in str)
          {
            ++x;
            if ((ch.ToString() ?? "") == "L")
              initializerList.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.LightGray));
            else if ((ch.ToString() ?? "") == "D")
              initializerList.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.DarkGray));
          }
        }
      }
      return initializerList;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static List<Initializer> ExcludeOrder()
    {
      List<Initializer> initializerList = new List<Initializer>();
      int num = 0;
      for (int y = 1; y <= 20; ++y)
      {
        for (int x = 1; x <= 20; ++x)
        {
          ++num;
          if ((num + y % 2) % 2 == 0)
            initializerList.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.LightGray));
          else
            initializerList.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.DarkGray));
          if (num >= 20)
            num = 0;
        }
      }
      return initializerList;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static List<Initializer> CalculateOrder(
      int reference_offset,
      int previous_pred)
    {
      List<Initializer> order = new List<Initializer>();
      int num = 0;
      for (int y = 1; y <= previous_pred; ++y)
      {
        for (int x = 1; x <= reference_offset; ++x)
        {
          ++num;
          if ((num + y % 2 - reference_offset % 2) % 2 == 0)
            order.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.LightGray));
          else
            order.Add(CodeRulesTemplate.ReadOrder(new Point3D((double) x, (double) y, 0.0), (Brush) Brushes.DarkGray));
          if (num >= reference_offset)
            num = 0;
        }
      }
      return order;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static List<Initializer> RestartOrder() => new List<Initializer>()
    {
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 1.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 1.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 1.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 1.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 1.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 1.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 1.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 1.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 1.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 1.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 2.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 2.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 2.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 2.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 2.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 2.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 2.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 2.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 2.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 2.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 3.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 3.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 3.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 3.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 3.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 3.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 3.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 3.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 3.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 3.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 4.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 4.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 4.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 4.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 4.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 4.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 4.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 4.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 4.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 4.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 5.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 5.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 5.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 5.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 5.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 5.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 5.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 5.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 5.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 5.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 6.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 6.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 6.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 6.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 6.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 6.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 6.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 6.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 6.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 6.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 7.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 7.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 7.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 7.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 7.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 7.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 7.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 7.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 7.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 7.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 8.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 8.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 8.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 8.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 8.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 8.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 8.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 8.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 8.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 8.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 9.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 9.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 9.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 9.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 9.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 9.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 9.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 9.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 9.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 9.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(1.0, 10.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(2.0, 10.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(3.0, 10.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(4.0, 10.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(5.0, 10.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(6.0, 10.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(7.0, 10.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(8.0, 10.0, 0.0), (Brush) Brushes.LightGray),
      CodeRulesTemplate.ReadOrder(new Point3D(9.0, 10.0, 0.0), (Brush) Brushes.DarkGray),
      CodeRulesTemplate.ReadOrder(new Point3D(10.0, 10.0, 0.0), (Brush) Brushes.LightGray)
    };

    [MethodImpl(MethodImplOptions.NoInlining)]
    public CodeRulesTemplate()
    {
      RegistryPagePage.ListMethod();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool ReadAttribute() => true;

    internal static bool LogoutAttribute() => false;
  }
}
