// Decompiled with JetBrains decompiler
// Type: Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit.ErrorHandler
// Assembly: alias, Version=18.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 30B32B4B-BB59-4BDE-A34F-3A89FA31757D
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Virus.Win32.Qvod.b-ac27f4b9ea6bdc870c5c3930c4f29eda3be51969560d72a79a191f4f50597cfb.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System.Resources;

namespace Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit
{
  [StandardModule]
  internal sealed class ErrorHandler
  {
    private static ResourceManager resManager = frmAlias.DefInstance.resManager;

    public static short FileErrors(ref int errVal)
    {
      short Buttons = 48;
      string Prompt;
      short num;
      switch (errVal)
      {
        case 52:
        case 64:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_5");
          break;
        case 54:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_7");
          Buttons = (short) 50;
          break;
        case 55:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_8");
          break;
        case 57:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_3");
          Buttons = (short) 53;
          break;
        case 61:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_4");
          Buttons = (short) 50;
          break;
        case 62:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_9");
          break;
        case 68:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_1");
          Buttons = (short) 53;
          break;
        case 71:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_2");
          Buttons = (short) 53;
          break;
        case 76:
          Prompt = ErrorHandler.resManager.GetString("ERRHAND_6");
          break;
        default:
          num = (short) 3;
          goto label_16;
      }
      switch (checked ((short) Interaction.MsgBox((object) Prompt, (MsgBoxStyle) Buttons, (object) ErrorHandler.resManager.GetString("ERRHAND_TITLE"))))
      {
        case 1:
        case 2:
        case 3:
          num = (short) 2;
          break;
        case 4:
          num = (short) 0;
          break;
        case 5:
          num = (short) 1;
          break;
        default:
          num = (short) 3;
          break;
      }
label_16:
      return num;
    }

    public static void ShowError()
    {
      string Prompt = ErrorHandler.resManager.GetString("ERRHAND_10") + "\r\n\r\n" + Information.Err().Description + "\r\n" + ErrorHandler.resManager.GetString("ERRHAND_10") + Conversions.ToString(Information.Err().Number);
      Interaction.Beep();
      int num = (int) Interaction.MsgBox((object) Prompt, MsgBoxStyle.Information, (object) Information.Err().Description);
    }
  }
}
