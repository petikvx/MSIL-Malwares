// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Server
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Server
  {
    public int Port;
    public int SwitchingTime;
    public ArrayList Clients;
    public int Turn;
    private TcpListener Listener;
    private Thread Reciever;
    private bool Wait;

    public Server()
    {
label_7:
      int num1 = 124;
      int num2 = 4;
      while (true)
      {
        switch (num2 ^ 62)
        {
          case 55:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E8);
            num2 = 9;
            continue;
          case 56:
            switch (num1)
            {
              case 57:
                this.Wait = true;
                num1 = 125;
                goto label_1;
              case 58:
                this.Reciever = new Thread(new ThreadStart(this.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E8));
                num1 = 121;
                goto label_1;
              case 59:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E8);
                num1 = 123;
                goto label_1;
              case 60:
                this.Clients = new ArrayList();
                num1 = 122;
                goto label_1;
              case 61:
                goto label_8;
              default:
                num2 = 7;
                continue;
            }
          case 57:
            goto label_7;
          case 58:
label_1:
            num1 ^= 64;
            break;
        }
        num2 = 6;
      }
label_8:;
    }

    public event Server.OnNewClientEventHandler OnNewClient
    {
      add
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_6:
        int num1 = 124;
        int num2 = 1;
        while (true)
        {
          switch (num2 ^ 63)
          {
            case 59:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E9);
              num2 = 4;
              continue;
            case 60:
              goto label_6;
            case 61:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1)
              {
                case 60:
                  clientEventHandler2 = comparand + value;
                  num1 = 126;
                  goto label_2;
                case 61:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = 0;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 62:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = 125;
                  goto label_2;
                case 63:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.Send);
                  num1 = (int) sbyte.MaxValue;
                  goto label_2;
                case 64:
                  goto label_9;
                default:
                  num2 = 3;
                  continue;
              }
            case 62:
label_2:
              num1 ^= 64;
              break;
          }
          num2 = 2;
        }
label_9:;
      }
      remove
      {
        Server.OnNewClientEventHandler clientEventHandler1 = this.OnNewClientEvent;
label_1:
        Server.OnNewClientEventHandler comparand = clientEventHandler1;
label_5:
        int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(26);
        int num2 = -119;
        while (true)
        {
          switch ((num2 ^ 64) + 58)
          {
            case 0:
              goto label_5;
            case 1:
              Server.OnNewClientEventHandler clientEventHandler2;
              switch (num1 + 64)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.EndWaitForConnections);
                  num1 = -1;
                  goto label_2;
                case 1:
                  clientEventHandler1 = Interlocked.CompareExchange<Server.OnNewClientEventHandler>(ref this.OnNewClientEvent, clientEventHandler2, comparand);
                  num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
                  goto label_2;
                case 2:
                  clientEventHandler2 = comparand - value;
                  num1 = -2;
                  goto label_2;
                case 3:
                  if (clientEventHandler1 == comparand)
                  {
                    num1 = -5;
                    goto label_2;
                  }
                  else
                    goto label_1;
                case 4:
                  goto label_13;
                default:
                  num2 = -122;
                  continue;
              }
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\u002Ector);
              num2 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(56);
              continue;
            case 3:
label_2:
              num1 ^= 63;
              break;
          }
          num2 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(57);
        }
label_13:;
      }
    }

    public void StartWaitForConnections()
    {
label_7:
      int num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(36);
      int num2 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(63);
      while (true)
      {
        switch ((num2 ^ 56) + 54)
        {
          case 0:
            IPHostEntry hostEntry;
            IPAddress localaddr;
            switch (num1 + 59)
            {
              case 0:
                localaddr = (IPAddress) hostEntry.AddressList.GetValue(2);
                num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.EndWaitForConnections);
                num1 = -2;
                goto label_1;
              case 2:
                num1 = -13;
                goto label_1;
              case 3:
                hostEntry = Dns.GetHostEntry(Dns.GetHostName());
                num1 = -3;
                goto label_1;
              case 4:
                this.Reciever.Start();
                num1 = -1;
                goto label_1;
              case 5:
                this.Listener = new TcpListener(localaddr, this.Port);
                num1 = -15;
                goto label_1;
              case 6:
                goto label_12;
              default:
                num2 = -12;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.add_OnNewClient);
            num2 = -13;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 56;
            break;
        }
        num2 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
      }
label_12:;
    }

    private void \uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E8()
    {
      this.Listener.Start();
label_30:
      while (true)
      {
        try
        {
          Player1 player1 = new Player1();
label_3:
          int num1 = 0;
          bool flag;
          object Left;
          while (true)
          {
            switch (num1 ^ 64)
            {
              case 61:
                player1.Stream = player1.Client.GetStream();
                num1 = 2;
                continue;
              case 62:
                if (flag)
                {
                  num1 = 3;
                  continue;
                }
                goto label_12;
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.Send);
                num1 = (int) sbyte.MaxValue;
                continue;
              case 64:
                player1.Client = this.Listener.AcceptTcpClient();
                num1 = 125;
                continue;
              case 65:
                flag = Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false);
                num1 = 126;
                continue;
              case 66:
                Left = (object) player1.Recieve();
                num1 = 1;
                continue;
              case 67:
                goto label_11;
              default:
                goto label_3;
            }
          }
label_11:
          int num2 = 0;
          goto label_13;
label_12:
          num2 = 1;
label_13:
          if (num2 == 0)
          {
            player1.Send("OK");
label_16:
            int num3 = 114;
            while (true)
            {
              switch (num3 ^ 54)
              {
                case 64:
                  this.Clients.Add((object) player1);
                  num3 = 116;
                  continue;
                case 65:
                  num3 = 115;
                  continue;
                case 66:
                  Application.OpenForms[0].Invoke((Delegate) new MethodInvoker(this.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E9));
                  num3 = 119;
                  continue;
                case 67:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.remove_OnNewClient);
                  num3 = 117;
                  continue;
                case 68:
                  num3 = 118;
                  continue;
                case 69:
                  goto label_30;
                default:
                  goto label_16;
              }
            }
          }
          else if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "<policy-file-request/>", false) ? 1 : 0) == 0)
          {
            player1.SendHandshake();
            Left = (object) player1.Recieve();
            if ((!Operators.ConditionalCompareObjectEqual(Left, (object) "game=Vändtia", false) ? 1 : 0) == 0)
            {
              player1.Send("OK");
            }
            else
            {
              player1.Send("wronggame");
              player1.Stream.Close();
            }
          }
          else
          {
            player1.Send("wronggame");
            player1.Stream.Close();
          }
        }
        catch (SocketException ex)
        {
          ProjectData.SetProjectError((Exception) ex);
          if ((ex.SocketErrorCode == SocketError.Interrupted ? 1 : 0) == 0)
            throw;
          else
            ProjectData.ClearProjectError();
        }
      }
    }

    public void EndWaitForConnections()
    {
label_4:
      int num1 = 12;
      int num2 = 8;
      while (true)
      {
        switch (num2 ^ 53)
        {
          case 58:
            goto label_4;
          case 59:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.add_OnNewClient);
            num2 = 14;
            continue;
          case 60:
            switch (num1)
            {
              case 53:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.StartWaitForConnections);
                num1 = 15;
                goto label_1;
              case 54:
                this.Reciever.Abort();
                num1 = 2;
                goto label_1;
              case 55:
                num1 = 0;
                goto label_1;
              case 56:
                num1 = 3;
                goto label_1;
              case 57:
                this.Listener.Stop();
                num1 = 13;
                goto label_1;
              case 58:
                goto label_10;
              default:
                num2 = 15;
                continue;
            }
          case 61:
label_1:
            num1 ^= 58;
            break;
        }
        num2 = 9;
      }
label_10:;
    }

    public void Send(string Text)
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
label_13:
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
label_9:
          int num1 = 0;
          int num2 = -15;
          while (true)
          {
            switch ((num2 ^ 53) + 63)
            {
              case 0:
                switch (num1)
                {
                  case 53:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E9);
                    num1 = 3;
                    goto label_3;
                  case 54:
                    current.Send(Text);
                    num1 = 1;
                    goto label_3;
                  case 55:
                    num1 = 14;
                    goto label_3;
                  case 56:
                    goto label_13;
                  default:
                    num2 = -10;
                    continue;
                }
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.add_OnNewClient);
                num2 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
                continue;
              case 2:
                goto label_9;
              case 3:
label_3:
                num1 ^= 54;
                break;
            }
            // ISSUE: reference to a compiler-generated method
            num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
          }
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    public void CancelAll()
    {
      IEnumerator enumerator;
      try
      {
        enumerator = this.Clients.GetEnumerator();
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          Player1 current = (Player1) enumerator.Current;
          if ((!current.Client.Connected ? 1 : 0) == 0)
          {
            current.Client.Client.Shutdown(SocketShutdown.Both);
label_10:
            // ISSUE: reference to a compiler-generated method
            int num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
            int num2 = (int) sbyte.MaxValue;
            while (true)
            {
              switch (num2 ^ 61)
              {
                case 63:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.StartWaitForConnections);
                  num2 = 2;
                  continue;
                case 64:
                  switch (num1 + 58)
                  {
                    case 0:
                      current.Client.Close();
                      num1 = -16;
                      goto label_4;
                    case 1:
                      current.Client.Client.Close();
                      num1 = -15;
                      goto label_4;
                    case 2:
                      num1 = -10;
                      goto label_4;
                    case 3:
                      num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(24);
                      goto label_4;
                    case 4:
                      num1 = -1;
                      goto label_4;
                    case 5:
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.\uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E9);
                      num1 = -13;
                      goto label_4;
                    case 6:
                      num1 = -11;
                      goto label_4;
                    case 7:
                      current.Stream.Close();
                      num1 = -14;
                      goto label_4;
                    case 8:
                      goto label_19;
                    default:
                      num2 = 124;
                      continue;
                  }
                case 65:
                  goto label_10;
                case 66:
label_4:
                  num1 ^= 56;
                  break;
              }
              num2 = 125;
            }
          }
label_19:;
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
    }

    private void \uE244\uEBDF\uE910\uEBEF\uEA18\uE545\uF7C9\uEE1D\uF8D6\uEF43\uF0F0\uE6E9()
    {
      // ISSUE: reference to a compiler-generated field
      Server.OnNewClientEventHandler onNewClientEvent = this.OnNewClientEvent;
      if ((onNewClientEvent == null ? 1 : 0) != 0)
        return;
      Server.OnNewClientEventHandler clientEventHandler = onNewClientEvent;
      ArrayList clients;
      int index;
      Player1 player1 = (Player1) (clients = this.Clients)[index = checked (this.Clients.Count - 1)];
      ref Player1 local = ref player1;
      clientEventHandler(ref local);
label_7:
      int num1 = 8;
      int num2 = -123;
      while (true)
      {
        switch ((num2 ^ 64) + 62)
        {
          case 0:
            switch (num1)
            {
              case 53:
                clients[index] = (object) player1;
                num1 = 6;
                goto label_2;
              case 54:
                num1 = 11;
                goto label_2;
              case 55:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Server.Send);
                num1 = 9;
                goto label_2;
              case 56:
                goto label_13;
              default:
                num2 = -125;
                continue;
            }
          case 1:
            goto label_7;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Server.StartWaitForConnections);
            num2 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(67);
            continue;
          case 3:
label_2:
            num1 ^= 62;
            break;
        }
        num2 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(59);
      }
label_13:;
    }

    public delegate void OnNewClientEventHandler(ref Player1 Client);
  }
}
