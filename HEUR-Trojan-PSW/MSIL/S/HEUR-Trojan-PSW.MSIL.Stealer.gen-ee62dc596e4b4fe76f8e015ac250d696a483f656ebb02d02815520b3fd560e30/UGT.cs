// Decompiled with JetBrains decompiler
// Type: wG.UGT
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace wG
{
  public class UGT : tc, Au
  {
    internal static UGT iir;

    [CompilerGenerated]
    [SpecialName]
    public Xp f19() => this.Fmw;

    [CompilerGenerated]
    [SpecialName]
    public void J1F(Xp _param1) => this.Fmw = _param1;

    [CompilerGenerated]
    [SpecialName]
    public IList<OZ> WmI() => this.Bmq;

    [CompilerGenerated]
    [SpecialName]
    public void pm1(IList<OZ> _param1) => this.Bmq = _param1;

    [SpecialName]
    public OZ lmu() => this.WmI()[this.WmI().Count - 1];

    [SpecialName]
    public void kmW(OZ _param1) => this.WmI()[this.WmI().Count - 1] = _param1;

    [SpecialName]
    public tn pmP() => this.lmu().BC0().if6();

    public UGT()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.pm1((IList<OZ>) new List<OZ>());
    }

    public override string ToString()
    {
      string str1 = "";
      foreach (OZ oz in (IEnumerable<OZ>) this.WmI())
        str1 = str1 + oz.T1V() + ".";
      string str2 = (string) UGT.li3((object) str1, (object) ".".ToCharArray());
      int num1 = 0;
      if (UGT.YiG() != null)
        goto label_10;
label_1:
      switch (num1)
      {
        default:
          return str2;
      }
label_10:
      int num2;
      num1 = num2;
      goto label_1;
    }

    public override bool Equals(object _param1)
    {
      if (!(_param1 is UGT))
        return false;
label_5:
      UGT ugt = _param1 as UGT;
      if (this.WmI().Count != ugt.WmI().Count)
        return false;
      int index = 0;
      int num = 0;
      if (UGT.YiG() == null)
        goto label_11;
label_1:
      while (true)
      {
        switch (num)
        {
          case 1:
            if (index < this.WmI().Count)
            {
              num = UGT.AiZ() ? 0 : 0;
              continue;
            }
            goto label_6;
          case 2:
            goto label_3;
          case 4:
            goto label_5;
          default:
            if ((string) UGT.PiJ((object) this.WmI()[index]) != ugt.WmI()[index].T1V() || ((sC) UGT.xi1((object) this.WmI()[index])).if6() != ((sC) UGT.xi1((object) ugt.WmI()[index])).if6())
            {
              num = 2;
              continue;
            }
            ++index;
            goto case 1;
        }
      }
label_3:
      return false;
label_6:
      return true;
label_11:
      num = 1;
      goto label_1;
    }

    public override int GetHashCode()
    {
      int num1 = 0;
      int index = 0;
      int num2 = 0;
      if (UGT.AiZ())
        goto label_4;
label_1:
      int hashCode;
      switch (num2)
      {
        case 1:
          return hashCode;
        default:
          for (; index < this.WmI().Count; ++index)
            num1 = num1 + this.WmI()[index].T1V().GetHashCode() + this.WmI()[index].BC0().if6().GetHashCode();
          hashCode = num1;
          goto case 1;
      }
label_4:
      num2 = 0;
      goto label_1;
    }

    internal static bool AiZ() => UGT.iir == null;

    internal static UGT YiG() => UGT.iir;

    internal static object li3([In] object obj0, [In] object obj1) => (object) ((string) obj0).TrimEnd((char[]) obj1);

    internal static object PiJ([In] object obj0) => (object) ((OZ) obj0).T1V();

    internal static object xi1([In] object obj0) => (object) ((OZ) obj0).BC0();
  }
}
