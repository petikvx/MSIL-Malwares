// Decompiled with JetBrains decompiler
// Type: ImageUtil
// Assembly: q是, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A217F07-6E26-47B2-8CBC-BCC0D26AE04B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-566554b534a53102dd67fc20bd07ca49241b51616d73619e383e80bdfc4fe08a.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;

public static class ImageUtil
{
  private const int bytesPerPixel = 4;

  public static Image Opacity(Image originalImage, double opacity)
  {
label_1:
    int num1 = 1506183608;
    int num2;
    byte[] numArray;
    int num3;
    bool flag1;
    IntPtr num4;
    int length;
    BitmapData bitmapData;
    bool flag2;
    Bitmap bitmap;
    PixelFormat pixelFormat;
    Rectangle rectangle;
    Image image;
    while (true)
    {
      uint num5;
      switch ((num5 = (uint) (num1 ^ 1299150271)) % 30U)
      {
        case 0:
          bitmapData = ImageUtil.\u200C⁭⁫⁫‫⁫⁬‭‎‭⁪‭⁯‪⁫​⁫​⁮‌‭‍⁪‏⁯‭⁪⁪‬⁪‫‍‬⁬‎‌‪‏‌‌‮(bitmap, rectangle, ImageLockMode.ReadWrite, pixelFormat);
          num1 = (int) num5 * 1086356422 ^ 1055340400;
          continue;
        case 1:
          num3 = 0;
          num1 = (int) num5 * -438356507 ^ 1701013060;
          continue;
        case 2:
          num1 = (int) num5 * -1244863900 ^ -1526676408;
          continue;
        case 3:
          ImageUtil.\u200B​⁬‬⁬​⁫‍⁪‫‎⁪‬‭⁯⁯⁮‮⁯‍⁭⁭‪‎‫‍‌‍⁪‌‏​​⁪‫‫⁪⁭‍‭‮(numArray, 0, num4, length);
          num1 = (int) num5 * -579130990 ^ -700608965;
          continue;
        case 4:
          num2 = 0;
          num1 = 748705335;
          continue;
        case 5:
          ImageUtil.\u202E‎⁫⁫⁭⁬⁯⁭‭‪⁫‏⁪‫⁬⁪⁯‏​‎‫⁮⁯‫‍⁪‌‫⁮‏⁮⁬‪⁪⁮‌‫⁬‏⁫‮(bitmap, bitmapData);
          image = (Image) bitmap;
          num1 = (int) num5 * 437574162 ^ -1475026404;
          continue;
        case 6:
          num1 = (int) num5 * -2098946877 ^ -229861338;
          continue;
        case 7:
          num4 = ImageUtil.\u200B⁭⁭‌‎⁭‪‏⁯‫‏‍​‮‎‬⁯⁬⁯⁯‮‍⁮‫‭‏⁮‏⁯‏⁯‍‏‏‪‪‌⁬⁪⁯‮(bitmapData);
          num1 = (int) num5 * -609762018 ^ 1804138593;
          continue;
        case 8:
          flag2 = numArray[num3 + 4 - 1] == (byte) 0;
          num1 = (int) num5 * -1946360182 ^ -2119819415;
          continue;
        case 9:
          bitmap = (Bitmap) ImageUtil.\u200D‌⁪⁬‏⁮​⁯⁪⁪‬‎⁫⁫⁮‪⁪‬‎‎‪⁭⁭‮‬​‫‮‫⁪‌‬⁮‏⁪⁫‎‬⁭⁪‮(originalImage);
          pixelFormat = PixelFormat.Format32bppArgb;
          rectangle = new Rectangle(0, 0, ImageUtil.\u202A⁪⁫⁯⁪‎‌‌‏‎​‬⁯‌​⁪‫​‪‬‭⁭‏⁫‭‬‌‫‭‎⁪‎​‫⁪‍‫⁬‭‍‮((Image) bitmap), ImageUtil.\u206A‪‭‏‮⁭⁯‌‍​‌‏‎⁬⁪‎‬‪⁮‭‌‭‪⁯⁯‌‫⁭​⁫‭‎‫‪⁪‬⁯‍‫‍‮((Image) bitmap));
          num1 = 629590587;
          continue;
        case 10:
          ++num2;
          num1 = (int) num5 * -380549226 ^ -1215466525;
          continue;
        case 11:
          image = originalImage;
          num1 = (int) num5 * 1902124895 ^ -1424483867;
          continue;
        case 12:
          numArray = new byte[length];
          num1 = (int) num5 * -1313099470 ^ 1716033749;
          continue;
        case 13:
          flag1 = (ImageUtil.\u200C‎⁭⁫‎‌⁬‏‮‫‫⁫‎‪‫‫⁭‬​⁭⁯‍‍⁭‫‎‌⁮⁯⁯⁬​⁭⁭‏⁪⁫⁯⁬‫‮(originalImage) & PixelFormat.Indexed) == PixelFormat.Indexed;
          num1 = (int) num5 * 1885062223 ^ 922700709;
          continue;
        case 14:
          int num6 = flag2 ? -927301633 : (num6 = -810872289);
          num1 = num6 ^ (int) num5 * -1370355494;
          continue;
        case 15:
          int num7;
          num1 = num7 = num3 >= numArray.Length ? 633266044 : (num7 = 169439503);
          continue;
        case 16:
          num1 = (int) num5 * -148985253 ^ -675294296;
          continue;
        case 17:
          ++num2;
          numArray[num3 + num2] = (byte) ((double) numArray[num3 + num2] * opacity);
          num1 = (int) num5 * -906726907 ^ -306272514;
          continue;
        case 18:
          length = ImageUtil.\u202A⁪⁫⁯⁪‎‌‌‏‎​‬⁯‌​⁪‫​‪‬‭⁭‏⁫‭‬‌‫‭‎⁪‎​‫⁪‍‫⁬‭‍‮((Image) bitmap) * ImageUtil.\u206A‪‭‏‮⁭⁯‌‍​‌‏‎⁬⁪‎‬‪⁮‭‌‭‪⁯⁯‌‫⁭​⁫‭‎‫‪⁪‬⁯‍‫‍‮((Image) bitmap) * 4;
          num1 = (int) num5 * -336379542 ^ 707847471;
          continue;
        case 19:
          num1 = (int) num5 * -198353855 ^ -1569349915;
          continue;
        case 21:
          goto label_1;
        case 22:
          ++num2;
          num1 = (int) num5 * -1641405330 ^ 1175084260;
          continue;
        case 23:
          int num8 = !flag1 ? -763547475 : (num8 = -1453096621);
          num1 = num8 ^ (int) num5 * -636551535;
          continue;
        case 24:
          num1 = 581444867;
          continue;
        case 25:
          num3 += 4;
          num1 = 1955679416;
          continue;
        case 26:
          ImageUtil.\u202A⁪⁬⁭⁪⁬⁪‭⁭‎‮‭⁮‭‪​‏⁯‪‎⁯⁪‫‪⁮‮‫⁯‭‭⁮‍‏⁪‭‏⁬‏⁬‮‮(num4, numArray, 0, length);
          num1 = (int) num5 * -38894650 ^ -2096643934;
          continue;
        case 27:
          num1 = (int) num5 * 1578972181 ^ -888055838;
          continue;
        case 28:
          num1 = (int) num5 * 479929561 ^ 190681124;
          continue;
        case 29:
          num1 = (int) num5 * 477937931 ^ -275663890;
          continue;
        default:
          goto label_31;
      }
    }
label_31:
    return image;
  }

  static PixelFormat \u200C‎⁭⁫‎‌⁬‏‮‫‫⁫‎‪‫‫⁭‬​⁭⁯‍‍⁭‫‎‌⁮⁯⁯⁬​⁭⁭‏⁪⁫⁯⁬‫‮([In] Image obj0) => obj0.PixelFormat;

  static object \u200D‌⁪⁬‏⁮​⁯⁪⁪‬‎⁫⁫⁮‪⁪‬‎‎‪⁭⁭‮‬​‫‮‫⁪‌‬⁮‏⁪⁫‎‬⁭⁪‮([In] Image obj0) => obj0.Clone();

  static int \u202A⁪⁫⁯⁪‎‌‌‏‎​‬⁯‌​⁪‫​‪‬‭⁭‏⁫‭‬‌‫‭‎⁪‎​‫⁪‍‫⁬‭‍‮([In] Image obj0) => obj0.Width;

  static int \u206A‪‭‏‮⁭⁯‌‍​‌‏‎⁬⁪‎‬‪⁮‭‌‭‪⁯⁯‌‫⁭​⁫‭‎‫‪⁪‬⁯‍‫‍‮([In] Image obj0) => obj0.Height;

  static BitmapData \u200C⁭⁫⁫‫⁫⁬‭‎‭⁪‭⁯‪⁫​⁫​⁮‌‭‍⁪‏⁯‭⁪⁪‬⁪‫‍‬⁬‎‌‪‏‌‌‮(
    [In] Bitmap obj0,
    [In] Rectangle obj1,
    [In] ImageLockMode obj2,
    [In] PixelFormat obj3)
  {
    return obj0.LockBits(obj1, obj2, obj3);
  }

  static IntPtr \u200B⁭⁭‌‎⁭‪‏⁯‫‏‍​‮‎‬⁯⁬⁯⁯‮‍⁮‫‭‏⁮‏⁯‏⁯‍‏‏‪‪‌⁬⁪⁯‮([In] BitmapData obj0) => obj0.Scan0;

  static void \u202A⁪⁬⁭⁪⁬⁪‭⁭‎‮‭⁮‭‪​‏⁯‪‎⁯⁪‫‪⁮‮‫⁯‭‭⁮‍‏⁪‭‏⁬‏⁬‮‮(
    [In] IntPtr obj0,
    [In] byte[] obj1,
    [In] int obj2,
    [In] int obj3)
  {
    Marshal.Copy(obj0, obj1, obj2, obj3);
  }

  static void \u200B​⁬‬⁬​⁫‍⁪‫‎⁪‬‭⁯⁯⁮‮⁯‍⁭⁭‪‎‫‍‌‍⁪‌‏​​⁪‫‫⁪⁭‍‭‮(
    [In] byte[] obj0,
    [In] int obj1,
    [In] IntPtr obj2,
    [In] int obj3)
  {
    Marshal.Copy(obj0, obj1, obj2, obj3);
  }

  static void \u202E‎⁫⁫⁭⁬⁯⁭‭‪⁫‏⁪‫⁬⁪⁯‏​‎‫⁮⁯‫‍⁪‌‫⁮‏⁮⁬‪⁪⁮‌‫⁬‏⁫‮([In] Bitmap obj0, [In] BitmapData obj1) => obj0.UnlockBits(obj1);
}
