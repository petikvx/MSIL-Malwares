// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEUnion
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;
using System.Collections.Generic;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEUnion : TEList
  {
    public override bool Includes(DateTime aDate)
    {
      List<TemporalExpression>.Enumerator enumerator = this.Expressions.GetEnumerator();
      bool flag;
      try
      {
label_5:
        int num1 = !enumerator.MoveNext() ? -1519966166 : (num1 = -1625886485);
        TemporalExpression current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1358643210)) % 8U)
          {
            case 0:
              num1 = -1625886485;
              continue;
            case 1:
              num1 = -495363372;
              continue;
            case 2:
              goto label_5;
            case 3:
              flag = true;
              num1 = (int) num2 * 270678200 ^ 1527253432;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = -919730031;
              continue;
            case 6:
              goto label_18;
            case 7:
              int num3 = current.Includes(aDate) ? -2032038266 : (num3 = -183279364);
              num1 = num3 ^ (int) num2 * -2008525123;
              continue;
            default:
              goto label_14;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_10:
        int num4 = -1441328661;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1358643210)) % 3U)
          {
            case 0:
              goto label_10;
            case 2:
              num4 = (int) num5 * 750184136 ^ -2112353700;
              continue;
            default:
              goto label_13;
          }
        }
label_13:;
      }
label_14:
      flag = false;
label_15:
      int num6 = -1407941385;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1358643210)) % 3U)
        {
          case 0:
            goto label_15;
          case 1:
            num6 = (int) num7 * 226453956 ^ -1868985650;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return flag;
    }
  }
}
