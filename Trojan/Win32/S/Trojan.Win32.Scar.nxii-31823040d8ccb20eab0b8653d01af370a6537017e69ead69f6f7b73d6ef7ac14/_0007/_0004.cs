// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0007;
using \u0014;
using \u0015;
using \u0016;
using Newtonsoft.Json;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;

namespace \u0007
{
  internal sealed class \u0004 : \u0005.\u0005
  {
    [NonSerialized]
    internal static GetString \u0011;

    public override void \u0001([In] JsonWriter obj0, [In] object obj1, [In] \u0003 obj2)
    {
      Regex regex = (Regex) obj1;
      \u001B obj;
      if (true)
      {
        if (true)
        {
          obj = obj0 as \u001B;
          goto label_6;
        }
      }
      else
        goto label_7;
label_3:
      if (true)
      {
        \u0006.\u0001(this, obj0, regex, obj2);
        return;
      }
label_6:
      if (obj == null)
        goto label_3;
label_7:
      \u0006.\u0001(obj, regex, this);
      if (false)
        goto label_6;
    }

    public override object \u0001([In] \u0012.\u0007 obj0, [In] Type obj1, [In] object obj2, [In] \u0003 obj3)
    {
      while (obj0.\u0001() != JsonToken.StartObject)
      {
        do
        {
          while (obj0.\u0001() == JsonToken.String)
          {
            if (true)
              return \u0006.\u0001(obj0, this);
          }
        }
        while (false);
        if (true)
          throw \u0006.\u0001(obj0, \u0004.\u0011(28088));
      }
      return (object) \u0006.\u0001(obj3, this, obj0);
    }

    public override bool \u0001([In] Type obj0) => (object) obj0 == (object) \u0004\u0002.\u0084\u0004(__typeref (Regex));

    static \u0004() => Strings.CreateGetStringDelegate(typeof (\u0004));
  }
}
