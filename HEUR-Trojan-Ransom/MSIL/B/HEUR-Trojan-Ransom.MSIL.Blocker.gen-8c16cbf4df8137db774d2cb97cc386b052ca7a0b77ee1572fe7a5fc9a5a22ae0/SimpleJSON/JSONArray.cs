// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: SZGenericArrayEnumerat, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E834FD24-872B-47C0-BFE1-9B14E3D5CFBB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8c16cbf4df8137db774d2cb97cc386b052ca7a0b77ee1572fe7a5fc9a5a22ae0.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2061388841;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -580463031)) % 7U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -143159107 ^ 1037346498;
              continue;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -251940996 ^ -319891234;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              goto label_1;
            case 5:
              jsonNode = this.m_List[aIndex];
              num1 = -155128011;
              continue;
            case 6:
              num1 = (int) num2 * -2052858238 ^ -1974712607;
              continue;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -422366402 : (num4 = -738463913);
        }
label_11:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -992592197;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2065621739)) % 8U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List[aIndex] = value;
              num1 = -1107837531;
              continue;
            case 2:
              num1 = (int) num2 * -1034632875 ^ 1355520855;
              continue;
            case 3:
              num1 = (int) num2 * 1488063129 ^ -620124956;
              continue;
            case 4:
              int num3 = !flag ? 805748632 : (num3 = 1134000612);
              num1 = num3 ^ (int) num2 * 1174603097;
              continue;
            case 5:
              this.m_List.Add(value);
              num1 = (int) num2 * 811939795 ^ -1169348743;
              continue;
            case 6:
              goto label_4;
            case 7:
              goto label_1;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_4:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -906577311;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1230998956;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1044772713)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -382531791 ^ -932676969;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1899732123 ^ -739653282;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1224482713;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1147885252)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -887266524 ^ -1733393778;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 968574399 ^ -413316164;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_List.Count;
label_1:
        int num1 = 1287886415;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 950057173)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1571976546 ^ -1357993681;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1985259511;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1759683186)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 2:
            jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -1586597934;
            continue;
          case 3:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 88619649 ^ 1242525000;
            continue;
          case 4:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 808732496 ^ -1466419488;
            continue;
          case 6:
            num1 = (int) num2 * -1883356782 ^ 1904837391;
            continue;
          case 7:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 622202290 ^ 373320857;
              continue;
            }
            num3 = 1;
            break;
          default:
            goto label_12;
        }
        int num4;
        num1 = num4 = num3 == 0 ? -1709891140 : (num4 = -95403915);
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1154041645;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -166102130)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1766638293 ^ -1367850705;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 2141308127;
          List<JSONNode>.Enumerator enumerator;
          JSONNode N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 1104964448)) % 21U)
            {
              case 0:
                num2 = (int) num3 * -1472772632 ^ 680913768;
                continue;
              case 1:
              case 16:
                this.\u003C\u003E1__state = -1;
                num2 = 1573302548;
                continue;
              case 2:
                goto label_16;
              case 3:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -298602392 ^ -1725024070;
                continue;
              case 4:
                enumerator = this.m_List.GetEnumerator();
                num2 = (int) num3 * -1953285979 ^ 79223587;
                continue;
              case 5:
                goto label_4;
              case 6:
                goto label_1;
              case 7:
              case 8:
                this.\u003C\u003E1__state = -3;
                num2 = 1317067419;
                continue;
              case 9:
                num2 = (int) num3 * 2035002972 ^ -1061175084;
                continue;
              case 10:
                N = (JSONNode) null;
                num2 = (int) num3 * 1457537265 ^ -376420026;
                continue;
              case 11:
                int num4;
                num2 = num4 = enumerator.MoveNext() ? 514341483 : (num4 = 526160101);
                continue;
              case 12:
                enumerator = new List<JSONNode>.Enumerator();
                num2 = (int) num3 * -478923523 ^ -233259677;
                continue;
              case 13:
                int num5 = num1 != 0 ? -1585595438 : (num5 = -83912044);
                num2 = num5 ^ (int) num3 * 65673954;
                continue;
              case 14:
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * -218969779 ^ 730974279;
                continue;
              case 15:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -64793749 ^ -241945248;
                continue;
              case 18:
                N = enumerator.Current;
                this.\u003C\u003E2__current = N;
                num2 = 847897577;
                continue;
              case 19:
                num2 = (int) num3 * -2140268275 ^ -794107773;
                continue;
              case 20:
                int num6;
                num2 = num6 = num1 == 1 ? 1551626817 : (num6 = 96245);
                continue;
              default:
                goto label_20;
            }
          }
label_4:
          return true;
label_16:
          return false;
label_20:
          return false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -806582937;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -86442814)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "[ ";
            num1 = (int) num2 * -705294100 ^ 1393481921;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num3 = enumerator.MoveNext() ? -1260902871 : (num3 = -151460108);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -86442814)) % 9U)
          {
            case 0:
              str = JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(str, JSONArray.\u202D⁯⁬‌‌​‏​⁬‎‫‪‫‭⁫‪⁮‌‫‫⁮⁪⁫⁫‎‬⁯​‫‬‎‫⁫‏⁫⁮‭‎‎‭‮((object) current));
              num3 = -1905043581;
              continue;
            case 1:
              num3 = (int) num4 * -2120423449 ^ -282182179;
              continue;
            case 2:
              str = JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(str, ", ");
              num3 = (int) num4 * -1249883032 ^ 1841480031;
              continue;
            case 3:
              int num5 = JSONArray.\u206A‪⁭⁭‭‪‬‌‬‬‏⁭‪⁪⁪‍⁭‎‍⁫‬‏‫‭⁮‮‍⁭‪‫‪‫‏⁪‮‏⁫⁬‮⁬‮(str) > 2 ? -1658508312 : (num5 = -946464807);
              num3 = num5 ^ (int) num4 * -449987403;
              continue;
            case 4:
              num3 = (int) num4 * 2097542155 ^ 1227126248;
              continue;
            case 5:
              num3 = -1260902871;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -545855570;
              continue;
            case 8:
              goto label_9;
            default:
              goto label_16;
          }
        }
      }
label_16:
      return JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1140651119;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 119385176)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 479642771 ^ -455191130;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_10:
        int num3 = enumerator.MoveNext() ? 2072730518 : (num3 = 1710755072);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 119385176)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u206B‭⁪⁮⁫‎‎‮‎⁪‬⁬‫⁬⁬‭‬⁪⁮⁮⁪‫⁭⁬⁪⁮‬⁮‭‫‌⁪⁪⁪‌‍‍‏‎⁮‮(str1, "\n", aPrefix, "   ");
              num3 = 686025197;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 231302511;
              continue;
            case 2:
              str1 = JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(str1, ", ");
              num3 = (int) num4 * 663238572 ^ -1468366070;
              continue;
            case 4:
              flag = JSONArray.\u206A‪⁭⁭‭‪‬‌‬‬‏⁭‪⁪⁪‍⁭‎‍⁫‬‏‫‭⁮‮‍⁭‪‫‪‫‏⁪‮‏⁫⁬‮⁬‮(str1) > 3;
              num3 = (int) num4 * 1749302533 ^ -1179089214;
              continue;
            case 5:
              str1 = JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(str1, current.ToString(JSONArray.\u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮(aPrefix, "   ")));
              num3 = (int) num4 * 415781889 ^ 1690302448;
              continue;
            case 6:
              int num5 = flag ? -1334282175 : (num5 = -1087808014);
              num3 = num5 ^ (int) num4 * -1778595484;
              continue;
            case 7:
              goto label_10;
            case 8:
              num3 = 2072730518;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u206B‭⁪⁮⁫‎‎‮‎⁪‬⁬‫⁬⁬‭‬⁪⁮⁮⁪‫⁭⁬⁪⁮‬⁮‭‫‌⁪⁪⁪‌‍‍‏‎⁮‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = 96137774;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 119385176)) % 4U)
        {
          case 0:
            goto label_17;
          case 2:
            str3 = str2;
            num6 = (int) num7 * 1803262037 ^ -1024080767;
            continue;
          case 3:
            num6 = (int) num7 * 2084381798 ^ -1125393613;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1602499335;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1389100698)) % 10U)
        {
          case 0:
            num1 = (int) num2 * 988691574 ^ -1290993222;
            continue;
          case 1:
            JSONArray.\u206E‏⁯‍​⁯⁪‮‭‮‌‌⁫⁭‭⁭⁯‏‍⁮⁪⁮‌‮⁮‍⁬⁬‪‭⁬‫⁮‎‬⁮⁫‌⁫‏‮(aWriter, (byte) 1);
            JSONArray.\u206F⁮⁪‪⁮⁮⁬⁬​​​⁬⁯‪‪‍​‏‏‍⁬⁬‬‭⁫‍‬⁬‫‫‪‌‎⁬‎⁬⁮‫⁪⁫‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -1391513639 ^ -469339524;
            continue;
          case 2:
            int num3 = flag ? 986870584 : (num3 = 653454580);
            num1 = num3 ^ (int) num2 * 1171911446;
            continue;
          case 3:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 1822701722 ^ 1501564859;
            continue;
          case 4:
            goto label_3;
          case 5:
            goto label_1;
          case 6:
            num1 = -2093324725;
            continue;
          case 7:
            index = 0;
            num1 = (int) num2 * 935556347 ^ -710044957;
            continue;
          case 8:
            flag = index < this.m_List.Count;
            num1 = -479053628;
            continue;
          case 9:
            ++index;
            num1 = (int) num2 * -264195073 ^ -1820118313;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -1455567928;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -985366077)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 2127547746 ^ 829456450;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u206A‪⁭⁭‭‪‬‌‬‬‏⁭‪⁪⁪‍⁭‎‍⁫‬‏‫‭⁮‮‍⁭‪‫‪‫‏⁪‮‏⁫⁬‮⁬‮([In] string obj0) => obj0.Length;

    static string \u200E‏‎⁮⁮⁬⁯⁯‮​‫⁮​‍‪⁭⁬⁫‍‬​‎⁭⁪‮‎⁬​‮‫⁭⁪⁫‫‍⁫⁬⁬​⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D⁯⁬‌‌​‏​⁬‎‫‪‫‭⁫‪⁮‌‫‫⁮⁪⁫⁫‎‬⁯​‫‬‎‫⁫‏⁫⁮‭‎‎‭‮([In] object obj0) => obj0.ToString();

    static string \u206B‭⁪⁮⁫‎‎‮‎⁪‬⁬‫⁬⁬‭‬⁪⁮⁮⁪‫⁭⁬⁪⁮‬⁮‭‫‌⁪⁪⁪‌‍‍‏‎⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‏⁯‍​⁯⁪‮‭‮‌‌⁫⁭‭⁭⁯‏‍⁮⁪⁮‌‮⁮‍⁬⁬‪‭⁬‫⁮‎‬⁮⁫‌⁫‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F⁮⁪‪⁮⁮⁬⁬​​​⁬⁯‪‪‍​‏‏‍⁬⁬‬‭⁫‍‬⁬‫‫‪‌‎⁬‎⁬⁮‫⁪⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
