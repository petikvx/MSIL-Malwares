// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Jbkttgjy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2E2A819A-CCD1-40A6-A838-713DABA6E2A0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\UDS-Trojan.Multi.GenericML.xnet-ba0fec15d6c5e15df9fd3ac351711716a58c081b27b0f60fa90a77affd84a123.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Threading;

internal static class \u0003\u2000
{
  private static object \u0002;
  private static Dictionary<string, bool> \u0003;
  private static Dictionary<string, string> \u0005;
  private static Dictionary<string, string> \u0008;
  private static int \u0006;

  static \u0003\u2000()
  {
    object obj = new object();
    if (true)
      goto label_4;
label_1:
    Dictionary<string, bool> dictionary1 = new Dictionary<string, bool>();
    if (true)
      goto label_5;
label_2:
    Dictionary<string, string> dictionary2 = new Dictionary<string, string>();
    if (true)
      goto label_6;
label_3:
    \u0003\u2000.\u0008 = new Dictionary<string, string>();
    \u0003\u2000.\u0005.Add(\u0008\u2006.\u0002(2093218016), \u0008\u2006.\u0002(2093218038));
    \u0003\u2000.\u0005.Add(\u0008\u2006.\u0002(2093218003), \u0008\u2006.\u0002(2093217966));
    return;
label_6:
    \u0003\u2000.\u0005 = dictionary2;
    goto label_3;
label_5:
    \u0003\u2000.\u0003 = dictionary1;
    goto label_2;
label_4:
    \u0003\u2000.\u0002 = obj;
    goto label_1;
  }

  private static string \u0002(CultureInfo _param0)
  {
    CultureInfo cultureInfo1 = _param0;
    if (true)
      ;
    if (cultureInfo1 == null)
      return string.Empty;
    CultureInfo cultureInfo2 = _param0;
    if (true)
      ;
    return cultureInfo2.Name;
  }

  private static Assembly \u0002(AssemblyName _param0)
  {
    Assembly[] assemblies = AppDomain.CurrentDomain.GetAssemblies();
    if (true)
      goto label_2;
label_1:
    int index;
    if (true)
      index = 0;
    Assembly[] assemblyArray;
    for (; index < assemblyArray.Length; ++index)
    {
      Assembly assembly1 = assemblyArray[index];
      if (true)
        goto label_6;
label_5:
      Assembly assembly2;
      AssemblyName name = assembly2.GetName();
      if (string.Equals(name.Name, _param0.Name, StringComparison.InvariantCultureIgnoreCase) && string.Equals(\u0003\u2000.\u0002(name.CultureInfo), \u0003\u2000.\u0002(_param0.CultureInfo), StringComparison.InvariantCultureIgnoreCase))
        return assembly2;
      continue;
label_6:
      assembly2 = assembly1;
      goto label_5;
    }
    return (Assembly) null;
label_2:
    assemblyArray = assemblies;
    goto label_1;
  }

  private static void \u0002(Stream _param0, Stream _param1)
  {
    byte[] numArray = new byte[81920];
    byte[] buffer;
    if (true)
      buffer = numArray;
    while (true)
    {
      int num = _param0.Read(buffer, 0, buffer.Length);
      if (true)
        goto label_6;
label_4:
      int count;
      if (num != 0)
      {
        _param1.Write(buffer, 0, count);
        continue;
      }
      break;
label_6:
      count = num;
      goto label_4;
    }
  }

  private static Stream \u0002(string _param0)
  {
    Assembly executingAssembly = Assembly.GetExecutingAssembly();
    if (true)
      goto label_2;
label_1:
    Assembly assembly;
    if (!_param0.EndsWith(\u0008\u2006.\u0002(2093217936)))
      return assembly.GetManifestResourceStream(_param0);
    Stream manifestResourceStream = assembly.GetManifestResourceStream(_param0);
    Stream stream;
    if (true)
      stream = manifestResourceStream;
    try
    {
      DeflateStream deflateStream1 = new DeflateStream(stream, CompressionMode.Decompress);
      DeflateStream deflateStream2;
      if (true)
        deflateStream2 = deflateStream1;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        \u0003\u2000.\u0002((Stream) deflateStream2, (Stream) memoryStream);
        memoryStream.Position = 0L;
        return (Stream) memoryStream;
      }
      finally
      {
        deflateStream2.Dispose();
      }
    }
    finally
    {
      stream?.Dispose();
    }
label_2:
    assembly = executingAssembly;
    goto label_1;
  }

  private static Stream \u0002(Dictionary<string, string> _param0, string _param1)
  {
    Dictionary<string, string> dictionary = _param0;
    if (true)
      ;
    string key = _param1;
    if (true)
      ;
    string str1;
    ref string local = ref str1;
    if (!dictionary.TryGetValue(key, out local))
      return (Stream) null;
    string str2 = str1;
    if (true)
      ;
    return \u0003\u2000.\u0002(str2);
  }

  private static byte[] \u0002(Stream _param0)
  {
    byte[] numArray = new byte[_param0.Length];
    if (true)
      goto label_2;
label_1:
    byte[] buffer;
    _param0.Read(buffer, 0, buffer.Length);
    return buffer;
label_2:
    buffer = numArray;
    goto label_1;
  }

  private static Assembly \u0002(
    Dictionary<string, string> _param0,
    Dictionary<string, string> _param1,
    AssemblyName _param2)
  {
    string lowerInvariant = _param2.Name.ToLowerInvariant();
    if (true)
      goto label_2;
label_1:
    string str1;
    if (_param2.CultureInfo != null && !string.IsNullOrEmpty(_param2.CultureInfo.Name))
    {
      string str2 = _param2.CultureInfo.Name + \u0008\u2006.\u0002(2093217890) + str1;
      if (true)
        str1 = str2;
    }
    Stream stream1 = \u0003\u2000.\u0002(_param0, str1);
    Stream stream2;
    if (true)
      stream2 = stream1;
    byte[] rawAssembly;
    try
    {
      if (stream2 == null)
        return (Assembly) null;
      rawAssembly = \u0003\u2000.\u0002(stream2);
    }
    finally
    {
      stream2?.Dispose();
    }
    using (Stream stream3 = \u0003\u2000.\u0002(_param1, str1))
    {
      if (stream3 != null)
      {
        byte[] rawSymbolStore = \u0003\u2000.\u0002(stream3);
        return Assembly.Load(rawAssembly, rawSymbolStore);
      }
    }
    return Assembly.Load(rawAssembly);
label_2:
    str1 = lowerInvariant;
    goto label_1;
  }

  public static Assembly \u0002(object _param0, ResolveEventArgs _param1)
  {
    object obj1 = \u0003\u2000.\u0002;
    if (true)
      goto label_2;
label_1:
    bool flag;
    if (true)
      flag = false;
    object obj2;
    try
    {
      object obj3 = obj2;
      ref bool local = ref flag;
      if (true)
        goto label_6;
label_5:
      if (\u0003\u2000.\u0003.ContainsKey(_param1.Name))
        return (Assembly) null;
      goto label_11;
label_6:
      Monitor.Enter(obj3, ref local);
      goto label_5;
    }
    finally
    {
      if (flag)
        Monitor.Exit(obj2);
    }
label_11:
    AssemblyName assemblyRef = new AssemblyName(_param1.Name);
    Assembly assembly1 = \u0003\u2000.\u0002(assemblyRef);
    if (assembly1 != (Assembly) null)
      return assembly1;
    Assembly assembly2 = \u0003\u2000.\u0002(\u0003\u2000.\u0005, \u0003\u2000.\u0008, assemblyRef);
    if (assembly2 == (Assembly) null)
    {
      lock (\u0003\u2000.\u0002)
        \u0003\u2000.\u0003[_param1.Name] = true;
      if ((assemblyRef.Flags & AssemblyNameFlags.Retargetable) != AssemblyNameFlags.None)
        assembly2 = Assembly.Load(assemblyRef);
    }
    return assembly2;
label_2:
    obj2 = obj1;
    goto label_1;
  }

  public static void \u0002()
  {
    if (Interlocked.Exchange(ref \u0003\u2000.\u0006, 1) == 1)
      return;
    AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(\u0003\u2000.\u0002);
  }
}
