// Decompiled with JetBrains decompiler
// Type: MapGenerator.Scripts.MapController
// Assembly: T城0Dڤ席成ne顾, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EEB6DA7B-B1F6-4BD2-B33A-435ABC0FFA57
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Backdoor.MSIL.Agobot.gen-8ad5c8884f5ce7c6ecdabcadab5c52688f35185d5a4542e60e842abf0f346508.exe

using MapGenerator.Scripts.Interfaces;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace MapGenerator.Scripts
{
  public class MapController : IMapEditor
  {
    private Tile[,] pmJMDvlkpn;
    private int tyMMS6yoG3;
    private int Mm1MgwGsoK;
    public static Dictionary<int, Color> TileTypes;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MapController(int X, int Y, int value)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public MapController(Tile[,] map)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void GenerateMap(int defaultValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Tile[,] GetMap()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static MapController()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void sGDKhQmEB4I7QQavtpR()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void q5NI1EmJq0gZ4RV9bJu([In] object obj0)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool ikRdD3mGqYCOxpdpTwq()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static bool qVHLw6m3fZ2ZlEdOqu0()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void VmcwPPm9I6c742byLdX([In] object obj0, [In] int obj1, [In] int obj2, [In] object obj3)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color rTq3PDmweAqcubvwJmg()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color UbYCGCmc8EPWSLYRvZm()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color OlRb29mdXLFlBIrnYCI()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color sWkytimgKJTh2wPp356()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color YOUYJbmH9NYck7LKofC()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color EatNTnm5yxEj7KayB4O()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color RU8FeHmFUSfcyFskw93()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static Color ScHU9CmoGMJTGxpu24Y()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
