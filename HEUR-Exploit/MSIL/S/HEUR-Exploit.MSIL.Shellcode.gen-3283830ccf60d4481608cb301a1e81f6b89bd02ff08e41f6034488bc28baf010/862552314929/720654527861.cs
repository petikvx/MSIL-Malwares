// Decompiled with JetBrains decompiler
// Type: 862552314929.720654527861
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003208825527781;
using \u003226094756440;
using \u003384276752884;
using \u003545704640419;
using \u003587801749628;
using \u003603600525092;
using \u003700941046987;
using System;
using System.Globalization;

namespace \u003862552314929
{
  public class \u003720654527861 : \u003909935353356
  {
    public virtual void \u003226100675104(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      long num;
      switch (_param2)
      {
        case DateTime dateTime:
          num = \u003519131386819.\u003189791925550(dateTime.ToUniversalTime());
          break;
        case DateTimeOffset dateTimeOffset:
          num = \u003519131386819.\u003189791925550(dateTimeOffset.ToUniversalTime().UtcDateTime);
          break;
        default:
          throw new \u003479281034910("Expected date object value.");
      }
      _param1.\u003509665668317("Date");
      _param1.\u003935752976562(num);
      _param1.\u003085237973103();
    }

    public virtual object \u003768999660775(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      if (_param1.\u003271751439454 == \u003293768301571.Null)
      {
        if (!\u003560732527318.\u003645351876055(_param2))
          throw \u003479281034910.\u003188723322269(_param1, "Cannot convert null value to {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param2));
        return (object) null;
      }
      if (_param1.\u003271751439454 != \u003293768301571.StartConstructor || !string.Equals(_param1.\u003255783382022.ToString(), "Date", StringComparison.Ordinal))
        throw \u003479281034910.\u003188723322269(_param1, "Unexpected token or value when parsing date. Token: {0}, Value: {1}".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454, _param1.\u003255783382022));
      _param1.\u003776737810718();
      DateTime dateTime = _param1.\u003271751439454 == \u003293768301571.Integer ? \u003519131386819.\u003001393328202((long) _param1.\u003255783382022) : throw \u003479281034910.\u003188723322269(_param1, "Unexpected token parsing date. Expected Integer, got {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454));
      _param1.\u003776737810718();
      if (_param1.\u003271751439454 != \u003293768301571.EndConstructor)
        throw \u003479281034910.\u003188723322269(_param1, "Unexpected token parsing date. Expected EndConstructor, got {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003271751439454));
      return (\u003560732527318.\u003876583190049(_param2) ? Nullable.GetUnderlyingType(_param2) : _param2) == typeof (DateTimeOffset) ? (object) new DateTimeOffset(dateTime) : (object) dateTime;
    }
  }
}
