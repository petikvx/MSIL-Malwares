// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: AdjustmentRu, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 295D2DB0-E85F-4EE4-A4D8-BB22DC4EE57D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-56431be0898e907a3b97e42a4c9d74cbdb487ed8617dcf64fb3a8dddef6dded1.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -373146047;
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1596053281)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = !flag ? 1294630245 : (num3 = 352273396);
              num1 = num3 ^ (int) num2 * -76206586;
              continue;
            case 2:
              num1 = (int) num2 * -222645750 ^ -145755152;
              continue;
            case 4:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -1101060864;
              continue;
            case 5:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -23693387 ^ 746112612;
              continue;
            case 6:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 1322516807 ^ -668466172;
              continue;
            case 7:
              num1 = (int) num2 * -1198300359 ^ 134436371;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1372163404;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1014418869)) % 7U)
          {
            case 0:
              this.m_Dict.Add(aKey, value);
              num1 = -1542800380;
              continue;
            case 1:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? -870113861 : (num3 = -1986240035);
              num1 = num3 ^ (int) num2 * -543668206;
              continue;
            case 2:
              num1 = (int) num2 * 345410547 ^ -1935015903;
              continue;
            case 3:
              goto label_1;
            case 4:
              goto label_3;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1229155136 ^ 1679791085;
              continue;
            case 6:
              num1 = (int) num2 * 2119848980 ^ -1469880476;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1538679569;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -12674028)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1037105210 ^ -591689658;
              continue;
            case 3:
              num1 = (int) num2 * -251847088 ^ 727830416;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -292145872;
              continue;
            case 5:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 6:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -158124964 ^ 1428200384;
              continue;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -110594532 : (num4 = -1967855222);
        }
label_11:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -1791246165;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -245790873)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 2133398218 ^ 1546173598;
              continue;
            case 3:
              goto label_4;
            case 4:
              int num3 = flag ? 335632967 : (num3 = 432828334);
              num1 = num3 ^ (int) num2 * 333999612;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -807594677;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -35998820;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -581215050)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 1600914517 ^ -1667947996;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 709768787;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 60060600)) % 13U)
        {
          case 0:
            num1 = (int) num2 * 641471639 ^ 395210112;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1791465903 ^ 1443527085;
            continue;
          case 3:
            int num3 = !this.m_Dict.ContainsKey(aKey) ? 941166590 : (num3 = 1172508434);
            num1 = num3 ^ (int) num2 * 1592244058;
            continue;
          case 4:
            flag = !JSONClass.\u206A‭‪‭⁮‎‫⁯‬‮​‏‎​⁪⁯‮‭⁮‎​‫⁮‬‍‮‌⁫‮‬‫‬‍​‍‍‫⁯⁮‫‮(aKey);
            num1 = (int) num2 * 1891331909 ^ -1584697961;
            continue;
          case 5:
            this.m_Dict.Add(aKey, aItem);
            num1 = 2105734084;
            continue;
          case 6:
            goto label_1;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 497909736 ^ 1598171972;
            continue;
          case 8:
            int num4 = !flag ? 815542108 : (num4 = 1584988686);
            num1 = num4 ^ (int) num2 * 1021914896;
            continue;
          case 9:
            num1 = (int) num2 * 86463641 ^ -194427801;
            continue;
          case 10:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 357629067;
            continue;
          case 11:
            num1 = (int) num2 * 520764612 ^ 990834212;
            continue;
          case 12:
            num1 = 1466636703;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode Remove(string aKey)
    {
      if (this.m_Dict.ContainsKey(aKey))
        goto label_4;
label_1:
      int num1 = 877282164;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 296767222)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -1784917558 ^ -286244840;
            continue;
          case 1:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 887106879 ^ 735807465;
            continue;
          case 2:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1880728969 ^ 1264359707;
            continue;
          case 3:
            num1 = (int) num2 * 1976641741 ^ 805045775;
            continue;
          case 4:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 1815487648 ^ 395579471;
            continue;
          case 5:
            goto label_4;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode2;
label_4:
      jsonNode1 = this.m_Dict[aKey];
      num1 = 276565474;
      goto label_2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_6;
label_1:
      int num1 = 1492256220;
label_2:
      JSONNode jsonNode;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1640806682)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = !flag ? -1827859184 : (num3 = -837008383);
            num1 = num3 ^ (int) num2 * 892964153;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -602704517 ^ 244933752;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = 1262866183;
            continue;
          case 4:
            num1 = (int) num2 * -801757778 ^ 1208108221;
            continue;
          case 5:
            num1 = (int) num2 * 402166786 ^ -1210060705;
            continue;
          case 6:
            goto label_5;
          default:
            goto label_11;
        }
      }
label_5:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_7;
label_11:
      return jsonNode;
label_6:
      num4 = 1;
label_7:
      flag = num4 != 0;
      num1 = 489413211;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -63043053;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1230132746)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 228461552 ^ -1192644483;
              continue;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -839598528;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -611788099)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -2011797648 ^ 2120545328;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_15;
label_1:
        int num2 = -2101534141;
label_2:
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1349095130)) % 19U)
          {
            case 0:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? -699638062 : (num4 = -947629299);
              continue;
            case 1:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -123853453 ^ -717341302;
              continue;
            case 2:
              int num5;
              num2 = num5 = num1 == 1 ? -380834413 : (num5 = -1680615636);
              continue;
            case 3:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              enumerator1 = true;
              num2 = (int) num3 * 120853099 ^ -797553956;
              continue;
            case 4:
              goto label_13;
            case 5:
            case 12:
              goto label_15;
            case 7:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 333512628 ^ -1940606685;
              continue;
            case 8:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = -1994211131;
              continue;
            case 9:
              num2 = (int) num3 * -706767480 ^ -621919822;
              continue;
            case 10:
              num2 = (int) num3 * 363424207 ^ 1924757478;
              continue;
            case 11:
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = -563868339;
              continue;
            case 13:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * -1409396212 ^ 1792761022;
              continue;
            case 15:
              goto label_1;
            case 16:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              enumerator1 = false;
              num2 = (int) num3 * -1473665975 ^ -1186490887;
              continue;
            case 18:
              num2 = (int) num3 * 1707749028 ^ -740714178;
              continue;
            default:
              goto label_18;
          }
        }
label_13:
        enumerator1 = false;
        goto label_18;
label_15:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        enumerator = this.m_Dict.GetEnumerator();
        num2 = -1695696883;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_18:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1945936675;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1408386928)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 641421180 ^ -775624283;
            continue;
          case 2:
            goto label_1;
          case 3:
            str1 = "{";
            num1 = (int) num2 * 587393780 ^ 1707041348;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 1707323299 : (num3 = 1562056016);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1408386928)) % 9U)
          {
            case 0:
              num3 = 1562056016;
              continue;
            case 1:
              num3 = (int) num4 * 1313201096 ^ 1831961277;
              continue;
            case 2:
              goto label_12;
            case 3:
              str1 = JSONClass.\u206D⁬⁫‍⁫​‫‪⁭‌‌⁮‌⁫⁫‬‎‪⁫‬‏⁯​‭‌‎‫​​‬⁭‏‏⁮‫‍⁮‭‏⁫‮(str1, ", ");
              num3 = (int) num4 * 1568747736 ^ -1008568148;
              continue;
            case 4:
              int num5 = JSONClass.\u206D⁮⁮⁮‍‎‭‮‮‍‬⁯⁪‭​‬⁫‌⁬‭‎‎⁮‌‍⁬‪‏‪⁭⁯‫‮⁫‫‌⁪‪⁯⁮‮(str1) > 2 ? -1787427289 : (num5 = -83271875);
              num3 = num5 ^ (int) num4 * 597553363;
              continue;
            case 5:
              num3 = (int) num4 * -498563977 ^ -296269772;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = 2008993769;
              continue;
            case 8:
              str1 = JSONClass.\u200F​⁭‍‬‍​‪​‪‏‎‏⁮‏‏⁫‬⁫⁬‫‏⁯‬‎⁭⁭‬⁪‬⁪⁮‫‏⁬‎‬⁫‮‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206D‪‮​⁪‮‫‬‬⁫‍​‬⁪​⁪⁯‌⁮‎‏‪‮⁬‭‮‌‪⁮‪⁮‎⁮‬‫‎‪⁭‫‏‮((object) current.Value)
              });
              num3 = 214663088;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONClass.\u206D⁬⁫‍⁫​‫‪⁭‌‌⁮‌⁫⁫‬‎‪⁫‬‏⁯​‭‌‎‫​​‬⁭‏‏⁮‫‍⁮‭‏⁫‮(str1, "}");
label_18:
      int num6 = 2073504815;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1408386928)) % 3U)
        {
          case 0:
            goto label_18;
          case 1:
            num6 = (int) num7 * 940801330 ^ 683364587;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = 1725726230;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1480359278)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -499557537 ^ -715860792;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_9:
        int num3 = !enumerator.MoveNext() ? 236198423 : (num3 = 936509494);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1480359278)) % 10U)
          {
            case 0:
              flag = JSONClass.\u206D⁮⁮⁮‍‎‭‮‮‍‬⁯⁪‭​‬⁫‌⁬‭‎‎⁮‌‍⁬‪‏‪⁭⁯‫‮⁫‫‌⁪‪⁯⁮‮(str1) > 3;
              num3 = (int) num4 * -1289442015 ^ 1049888057;
              continue;
            case 1:
              str1 = JSONClass.\u206D⁬⁫‍⁫​‫‪⁭‌‌⁮‌⁫⁫‬‎‪⁫‬‏⁯​‭‌‎‫​​‬⁭‏‏⁮‫‍⁮‭‏⁫‮(str1, ", ");
              num3 = (int) num4 * 562442605 ^ -124793873;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = 1133817247;
              continue;
            case 3:
              num3 = (int) num4 * -1309598121 ^ 685127521;
              continue;
            case 4:
              goto label_9;
            case 6:
              num3 = 936509494;
              continue;
            case 7:
              int num5 = flag ? 60555799 : (num5 = 622008250);
              num3 = num5 ^ (int) num4 * -2083496186;
              continue;
            case 8:
              str1 = JSONClass.\u200D⁬‌⁫‮​‎‬‪‌‪‫‏⁭⁫‭⁯⁬⁯‫⁬​⁭‬‎⁮⁭‬‬​‌⁬‪⁮⁪⁮⁮⁬⁯⁫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u200F​⁭‍‬‍​‪​‪‏‎‏⁮‏‏⁫‬⁫⁬‫‏⁯‬‎⁭⁭‬⁪‬⁪⁮‫‏⁬‎‬⁫‮‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206D⁬⁫‍⁫​‫‪⁭‌‌⁮‌⁫⁫‬‎‪⁫‬‏⁯​‭‌‎‫​​‬⁭‏‏⁮‫‍⁮‭‏⁫‮(aPrefix, "   "))
              });
              num3 = 588909593;
              continue;
            case 9:
              num3 = (int) num4 * 252674839 ^ 1061090031;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = 346665836;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1480359278)) % 3U)
          {
            case 0:
              goto label_17;
            case 1:
              num6 = (int) num7 * 742274740 ^ -695675766;
              continue;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONClass.\u200D⁬‌⁫‮​‎‬‪‌‪‫‏⁭⁫‭⁯⁬⁯‫⁬​⁭‬‎⁮⁭‬‬​‌⁬‪⁮⁪⁮⁮⁬⁯⁫‮(str1, "\n", aPrefix, "}");
label_22:
      int num8 = 979899695;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1480359278)) % 4U)
        {
          case 1:
            str3 = str2;
            num8 = (int) num9 * -878021089 ^ -1611639945;
            continue;
          case 2:
            num8 = (int) num9 * -2037029680 ^ 624658022;
            continue;
          case 3:
            goto label_22;
          default:
            goto label_26;
        }
      }
label_26:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -180708176;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1830273386)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONClass.\u206D‌⁪‏⁯⁫⁬⁪⁯‮‍‍‭⁯⁪⁯‮⁪‬‮‫⁬⁬⁭‎⁬⁪‭​‬‭⁬‏⁪⁪⁪‫⁭⁭⁯‮(aWriter, (byte) 2);
            JSONClass.\u200D⁬‫⁪‎‎​‬⁬‭⁬‎‌‪​‭‎⁮‌‬⁭‎​⁬‫‬⁬⁫‎‬​‭⁭​⁬‌‎‫‌‌‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1391198192 ^ 1248312881;
            continue;
          case 3:
            num1 = (int) num2 * -2076945319 ^ 1651728856;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? -926574249 : (num3 = -655197953);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1830273386)) % 9U)
          {
            case 0:
              num3 = (int) num4 * -119676619 ^ 1784983164;
              continue;
            case 1:
              num3 = (int) num4 * 1976545737 ^ 1646132087;
              continue;
            case 2:
              goto label_17;
            case 3:
              num3 = (int) num4 * 1601731822 ^ 1292096328;
              continue;
            case 4:
              JSONClass.\u202B‬⁫‬⁯⁫⁬⁪⁫⁯‌‎‏⁯‏‍​‏‏⁯‌‏⁭‪‎‌‪⁬⁬‭⁯‫⁯⁭​‫‪‮‍‮‮(aWriter, current);
              num3 = (int) num4 * -1151809258 ^ -959628030;
              continue;
            case 5:
              num3 = -926574249;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1417479645;
              continue;
            case 7:
              goto label_14;
            case 8:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 47776590 ^ 1809026564;
              continue;
            default:
              goto label_9;
          }
        }
label_17:
        return;
label_9:;
      }
    }

    static bool \u206A‭‪‭⁮‎‫⁯‬‮​‏‎​⁪⁯‮‭⁮‎​‫⁮‬‍‮‌⁫‮‬‫‬‍​‍‍‫⁯⁮‫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206D⁮⁮⁮‍‎‭‮‮‍‬⁯⁪‭​‬⁫‌⁬‭‎‎⁮‌‍⁬‪‏‪⁭⁯‫‮⁫‫‌⁪‪⁯⁮‮([In] string obj0) => obj0.Length;

    static string \u206D⁬⁫‍⁫​‫‪⁭‌‌⁮‌⁫⁫‬‎‪⁫‬‏⁯​‭‌‎‫​​‬⁭‏‏⁮‫‍⁮‭‏⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D‪‮​⁪‮‫‬‬⁫‍​‬⁪​⁪⁯‌⁮‎‏‪‮⁬‭‮‌‪⁮‪⁮‎⁮‬‫‎‪⁭‫‏‮([In] object obj0) => obj0.ToString();

    static string \u200F​⁭‍‬‍​‪​‪‏‎‏⁮‏‏⁫‬⁫⁬‫‏⁯‬‎⁭⁭‬⁪‬⁪⁮‫‏⁬‎‬⁫‮‏‮([In] string[] obj0) => string.Concat(obj0);

    static string \u200D⁬‌⁫‮​‎‬‪‌‪‫‏⁭⁫‭⁯⁬⁯‫⁬​⁭‬‎⁮⁭‬‬​‌⁬‪⁮⁪⁮⁮⁬⁯⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206D‌⁪‏⁯⁫⁬⁪⁯‮‍‍‭⁯⁪⁯‮⁪‬‮‫⁬⁬⁭‎⁬⁪‭​‬‭⁬‏⁪⁪⁪‫⁭⁭⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200D⁬‫⁪‎‎​‬⁬‭⁬‎‌‪​‭‎⁮‌‬⁭‎​⁬‫‬⁬⁫‎‬​‭⁭​⁬‌‎‫‌‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202B‬⁫‬⁯⁫⁬⁪⁫⁯‌‎‏⁯‏‍​‏‏⁯‌‏⁭‪‎‌‪⁬⁬‭⁯‫⁯⁭​‫‪‮‍‮‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
