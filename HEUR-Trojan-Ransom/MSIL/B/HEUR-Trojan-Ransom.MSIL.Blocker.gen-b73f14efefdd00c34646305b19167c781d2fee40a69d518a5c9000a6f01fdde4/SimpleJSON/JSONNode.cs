// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: Ma, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E05311B-A9F1-497C-9B8A-F93F05B83D6B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b73f14efefdd00c34646305b19167c781d2fee40a69d518a5c9000a6f01fdde4.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2028790596;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1767866783)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -2034150467 ^ -1959078489;
              continue;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -970419077 ^ 669561154;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -860410763;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1328173884)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1083128572 ^ -1423521301;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * -982532698 ^ -1496561910;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -370984985;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -155857990)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1400487579 ^ -1150533899;
              continue;
            case 1:
              count = 0;
              num1 = (int) num2 * -660740680 ^ 1695633122;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1754631383;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1552344343)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * -2040296634 ^ -1266667628;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1963204588;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1510237193)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -843946374 ^ 160318644;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1651850542;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1137905428)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1264519759 ^ 367871281;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -1499156877;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1595923457)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              goto label_4;
            case 3:
            case 4:
              this.\u003C\u003E1__state = -1;
              num2 = -1575770757;
              continue;
            case 5:
              num2 = (int) num3 * -823362500 ^ 1830652175;
              continue;
            case 6:
              int num4 = num1 != 0 ? 1503753221 : (num4 = 845300842);
              num2 = num4 ^ (int) num3 * -1055905108;
              continue;
            default:
              goto label_7;
          }
        }
label_4:
        return false;
label_7:
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
          if (num1 == 0)
            goto label_22;
label_1:
          int num2 = 2107355728;
label_2:
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 109059707)) % 34U)
            {
              case 0:
                enumerator2 = C.DeepChilds.GetEnumerator();
                num2 = (int) num3 * -1838045735 ^ -164829669;
                continue;
              case 1:
                num2 = (int) num3 * 1679166401 ^ -1483827630;
                continue;
              case 3:
                deepChilds = true;
                num2 = (int) num3 * -1357066980 ^ -142919039;
                continue;
              case 4:
                this.\u003C\u003E2__current = D;
                num2 = (int) num3 * -1136954359 ^ 825190132;
                continue;
              case 5:
                goto label_1;
              case 6:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -722814038 ^ -1049863876;
                continue;
              case 7:
                int num4;
                num2 = num4 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202E⁭‎‫‌‍‏‫‌⁪‍‏‪‫‏‮‫⁮⁯⁪‎‫‌‮⁫‎‌‌⁮‍‭⁫⁮​⁭⁭⁫‬⁪‫‮((IEnumerator) enumerator2) ? 883438908 : (num4 = 166762101);
                continue;
              case 9:
                num2 = (int) num3 * -363649324 ^ -706838490;
                continue;
              case 10:
                C = enumerator1.Current;
                num2 = 1135933530;
                continue;
              case 11:
              case 29:
                this.\u003C\u003E1__state = -4;
                num2 = 2123224212;
                continue;
              case 12:
              case 28:
                goto label_22;
              case 13:
                D = (JSONNode) null;
                num2 = (int) num3 * 1439016464 ^ -569505894;
                continue;
              case 14:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1961850986 ^ -1666957304;
                continue;
              case 15:
                num2 = (int) num3 * 12652475 ^ -1445043988;
                continue;
              case 16:
                int num5;
                num2 = num5 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u202E⁭‎‫‌‍‏‫‌⁪‍‏‪‫‏‮‫⁮⁯⁪‎‫‌‮⁫‎‌‌⁮‍‭⁫⁮​⁭⁭⁫‬⁪‫‮((IEnumerator) enumerator1) ? 1678036859 : (num5 = 601579511);
                continue;
              case 17:
                D = enumerator2.Current;
                num2 = 1493547675;
                continue;
              case 18:
                deepChilds = false;
                num2 = 1517100819;
                continue;
              case 19:
                deepChilds = false;
                num2 = (int) num3 * -452764031 ^ 1262088228;
                continue;
              case 20:
                num2 = (int) num3 * -1285855055 ^ 1915399157;
                continue;
              case 21:
                int num6;
                num2 = num6 = num1 != 1 ? 1311547120 : (num6 = 706135224);
                continue;
              case 22:
                this.\u003C\u003Em__Finally2();
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -698869075 ^ 91896745;
                continue;
              case 23:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -1728224561 ^ -644383597;
                continue;
              case 24:
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * -1447590048 ^ 701608284;
                continue;
              case 25:
                num2 = (int) num3 * -2123539200 ^ 552798394;
                continue;
              case 27:
                num2 = (int) num3 * 564126247 ^ 1096592962;
                continue;
              case 30:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * 1605153817 ^ -1814566151;
                continue;
              case 31:
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * -835522613 ^ -1263154511;
                continue;
              case 32:
                C = (JSONNode) null;
                num2 = (int) num3 * -730139255 ^ 1660053733;
                continue;
              case 33:
                num2 = (int) num3 * -1222575242 ^ 696370089;
                continue;
              default:
                goto label_32;
            }
          }
label_22:
          this.\u003C\u003E1__state = -1;
          num2 = 990236450;
          goto label_2;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_32:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1460808748;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 509111279)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1943824109 ^ -1190870005;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1178704054;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1566281895)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = 67053851;
              continue;
            case 2:
              int num3 = !int.TryParse(this.Value, out result) ? -303362996 : (num3 = -1912964158);
              num1 = num3 ^ (int) num2 * -1928292783;
              continue;
            case 3:
              result = 0;
              num1 = (int) num2 * -1771276281 ^ 1189351872;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * 94537365 ^ -518538750;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200C‍⁫‬‪⁮​⁫‮‏‬⁬‪‫‮⁯‏‎⁭‎‪⁬‭‏⁮‬⁮⁯⁯⁪‮‍⁭‍‌‪‍‪‌‎‮(), out result);
label_1:
        int num1 = -295021358;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -468106910)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -2051823487 ^ 1764973675;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = -1371305058;
              continue;
            case 3:
              int num3 = flag ? 1673913736 : (num3 = 1878739724);
              num1 = num3 ^ (int) num2 * 1325481752;
              continue;
            case 4:
              num1 = (int) num2 * -1217163624 ^ 1227840037;
              continue;
            case 5:
              num1 = (int) num2 * 1082565710 ^ -886122971;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -352550090;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1887617824)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 86486934 ^ 1156744543;
              continue;
            case 3:
              num1 = (int) num2 * 1719573517 ^ -1035085602;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 677982025;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 716707045)) % 7U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 1370705328 ^ 906153805;
              continue;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -823622431 ^ -1956857482;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = 313013552;
              continue;
            case 4:
              goto label_1;
            case 5:
              int num3 = flag ? 1451546938 : (num3 = 1439034192);
              num1 = num3 ^ (int) num2 * -739550454;
              continue;
            case 6:
              num1 = (int) num2 * -577270559 ^ -583766456;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1289435819;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1204617696)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -943831380 ^ 447550487;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1549903899;
        bool flag;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1867123227)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              result = false;
              num1 = (int) num2 * 309171500 ^ -52422764;
              continue;
            case 2:
              asBool = result;
              num1 = (int) num2 * 343157916 ^ 1507690085;
              continue;
            case 4:
              asBool = !JSONNode.\u206B⁮‬‌‪‌‌‮‬‏‌‏‏⁬​‬⁬‏​‪‬‌⁪‮⁬⁭​‫‌‭⁪‪‮‏‎⁫​⁯‌⁪‮(this.Value);
              num1 = -212725507;
              continue;
            case 5:
              int num3 = !flag ? 70425981 : (num3 = 29005740);
              num1 = num3 ^ (int) num2 * -1991133971;
              continue;
            case 6:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 308575293 ^ -1172245817;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 324794136;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1883104909)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 1982589350;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 325187550;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 488552112)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * 2122191651 ^ -1592704691;
              continue;
            case 3:
              num1 = (int) num2 * 574236983 ^ 540216448;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1925622538;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1440690081)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -570552691 ^ -1509717322;
              continue;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * -277050088 ^ -1709928852;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 421840681;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2006135716)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 686389450 ^ 1436168598;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 99433645 ^ 331568469;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1657385487;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -2075804856)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1478403984 ^ 552865067;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            str2 = d.Value;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -1888515354;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 304437270;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 861368908)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 2061637358 ^ -1810311654;
            continue;
          case 1:
            goto label_3;
          case 2:
            flag2 = true;
            num1 = (int) num2 * -1645231302 ^ 872606893;
            continue;
          case 3:
            goto label_1;
          case 5:
            flag2 = (object) a == b;
            num1 = 449730788;
            continue;
          case 6:
            int num3 = flag1 ? 1485504730 : (num3 = 1183366060);
            num1 = num3 ^ (int) num2 * -1911109365;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = 1897281746;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 520947100;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 312783666)) % 3U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1821785392 ^ 372652809;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -2145551344;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1761246479)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -508067149 ^ 422334951;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode() => this.\u206D⁯⁬‬⁯‮‌⁯‬⁬⁬⁪‎⁭⁪⁫​‪‭‎‬‮⁬‫​‫​‌⁪⁯⁯⁯‎‭‭‎⁭⁮⁫⁪‮();

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 1272011074;
      char ch1;
      string str2;
      int num2;
      char ch2;
      string str3;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1175626626)) % 30U)
        {
          case 0:
            num1 = (int) num3 * 75877556 ^ -604273251;
            continue;
          case 1:
            num1 = (int) num3 * 1608773947 ^ -196507112;
            continue;
          case 2:
            ch1 = JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(str2, num2);
            ch3 = ch1;
            num1 = 104802844;
            continue;
          case 3:
            num1 = (int) num3 * -1199682994 ^ -1497560177;
            continue;
          case 4:
            num1 = (int) num3 * -1750384250 ^ 1254089436;
            continue;
          case 5:
            num1 = 677370674;
            continue;
          case 6:
            num1 = (int) num3 * 621425370 ^ -1615501341;
            continue;
          case 7:
            int num4;
            num1 = num4 = ch2 == '\\' ? 414916130 : (num4 = 142965096);
            continue;
          case 8:
            num1 = (int) num3 * -1285952149 ^ 364590939;
            continue;
          case 9:
label_7:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\r");
            num1 = 559030408;
            continue;
          case 10:
            int num5;
            num1 = num5 = num2 >= JSONNode.\u206D⁫‫‮‭‮‌‍⁬⁫​‪‬‮⁯‫⁫‍⁬⁬⁫‪⁪​‎⁮​⁮⁭‫‮⁮⁪‌⁬‍​‭‍⁫‮(str2) ? 1308100764 : (num5 = 489304746);
            continue;
          case 11:
            num1 = (int) num3 * -1852359152 ^ 359645829;
            continue;
          case 12:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\\\");
            num1 = 839161485;
            continue;
          case 13:
label_15:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\b");
            num1 = 1495094337;
            continue;
          case 14:
            ch2 = ch3;
            num1 = (int) num3 * -1230507115 ^ -1640356329;
            continue;
          case 15:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\\"");
            num1 = 1811734969;
            continue;
          case 16:
label_12:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\f");
            num1 = 59520032;
            continue;
          case 17:
label_3:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\t");
            num1 = 2021273717;
            continue;
          case 18:
            ++num2;
            num1 = (int) num3 * 1327407921 ^ -188290858;
            continue;
          case 19:
            goto label_1;
          case 20:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * -1829389842 ^ -139649050;
            continue;
          case 21:
            switch (ch2)
            {
              case '\b':
                goto label_15;
              case '\t':
                goto label_3;
              case '\n':
                goto label_24;
              case '\v':
                goto label_9;
              case '\f':
                goto label_12;
              case '\r':
                goto label_7;
              default:
                num1 = (int) num3 * -1092626469 ^ 1366540363;
                continue;
            }
          case 22:
label_24:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, "\\n");
            num1 = 130083829;
            continue;
          case 23:
            num1 = (int) num3 * 2067821737 ^ 670358478;
            continue;
          case 25:
label_9:
            str1 = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(str1, ch1.ToString());
            num1 = 2021273717;
            continue;
          case 26:
            str3 = str1;
            num1 = (int) num3 * -1626978274 ^ 794338914;
            continue;
          case 27:
            int num6;
            num1 = num6 = ch2 != '"' ? 99747511 : (num6 = 1239207115);
            continue;
          case 28:
            num1 = (int) num3 * -1160463951 ^ 1874473489;
            continue;
          case 29:
            num1 = (int) num3 * -1979993556 ^ 1581385835;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1739483245;
      bool flag1;
      int num2;
      string aItem;
      bool flag2;
      JSONNode jsonNode1;
      char ch1;
      Stack<JSONNode> jsonNodeStack;
      char ch2;
      bool flag3;
      bool flag4;
      string aKey;
      char ch3;
      string s;
      bool flag5;
      bool flag6;
      char ch4;
      bool flag7;
      bool flag8;
      bool flag9;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1901850578)) % 144U)
        {
          case 0:
            jsonNode2 = jsonNode1;
            num1 = 532090860;
            continue;
          case 1:
            int num4 = ch1 == ':' ? 369966017 : (num4 = 1843302289);
            num1 = num4 ^ (int) num3 * 1429622497;
            continue;
          case 2:
            num1 = (int) num3 * -1471356126 ^ -1985529221;
            continue;
          case 3:
            num1 = (int) num3 * 381021952 ^ -2115435227;
            continue;
          case 4:
          case 30:
          case 58:
          case 85:
          case 132:
label_5:
            ++num2;
            num1 = 1707514650;
            continue;
          case 5:
            num1 = (int) num3 * 715756225 ^ -1938448611;
            continue;
          case 6:
            int num5 = !flag8 ? 632205163 : (num5 = 1767680677);
            num1 = num5 ^ (int) num3 * 607533240;
            continue;
          case 7:
            int num6;
            num1 = num6 = ch1 != '}' ? 328727825 : (num6 = 849879557);
            continue;
          case 8:
            int num7 = !flag7 ? 1013432341 : (num7 = 1128408802);
            num1 = num7 ^ (int) num3 * -1942906287;
            continue;
          case 9:
            int num8;
            num1 = num8 = ch1 != ' ' ? 615343089 : (num8 = 1603521690);
            continue;
          case 10:
            switch (ch1)
            {
              case '\t':
                goto label_13;
              case '\n':
              case '\r':
                goto label_5;
              case '\v':
              case '\f':
                goto label_132;
              default:
                num1 = (int) num3 * -656468329 ^ -1892681376;
                continue;
            }
          case 11:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 586018464 ^ -1650114664;
            continue;
          case 12:
            num1 = (int) num3 * -1747705687 ^ 1422794964;
            continue;
          case 13:
            switch (ch2)
            {
              case 'r':
                goto label_76;
              case 's':
                goto label_84;
              case 't':
                goto label_131;
              case 'u':
                goto label_63;
              default:
                num1 = 66122538;
                continue;
            }
          case 14:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1766056398;
            continue;
          case 15:
            ch1 = ch3;
            num1 = (int) num3 * 3608283 ^ -316341078;
            continue;
          case 16:
            int num9 = flag9 ? -34473874 : (num9 = -598937585);
            num1 = num9 ^ (int) num3 * -33058968;
            continue;
          case 17:
            int num10 = !flag1 ? 1813611839 : (num10 = 2031171967);
            num1 = num10 ^ (int) num3 * 802156956;
            continue;
          case 18:
            num1 = (int) num3 * 1670037662 ^ -677856195;
            continue;
          case 19:
            int num11;
            num1 = num11 = ch2 == 'f' ? 877416041 : (num11 = 614265380);
            continue;
          case 20:
label_131:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, "\t");
            num1 = 2095778897;
            continue;
          case 21:
            int num12 = !(jsonNode1 is JSONArray) ? 147076927 : (num12 = 799711237);
            num1 = num12 ^ (int) num3 * 175208171;
            continue;
          case 22:
            num1 = (int) num3 * -675145365 ^ -991610074;
            continue;
          case 23:
            num1 = 1032157561;
            continue;
          case 24:
            num1 = (int) num3 * 1930668243 ^ 33820828;
            continue;
          case 25:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -58646614 ^ 270568722;
            continue;
          case 26:
            num1 = 1753947939;
            continue;
          case 27:
            aKey = aItem;
            aItem = "";
            num1 = 551660654;
            continue;
          case 28:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, "\b");
            num1 = 540836374;
            continue;
          case 29:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 689153780 ^ 79402575;
            continue;
          case 31:
            num1 = 1038171006;
            continue;
          case 32:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -105680155 ^ -1041066591;
            continue;
          case 33:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1114253123 ^ -647945484;
            continue;
          case 34:
            num1 = (int) num3 * 50640443 ^ 1707487434;
            continue;
          case 35:
            num1 = (int) num3 * 1208255367 ^ -1808393051;
            continue;
          case 36:
            num1 = (int) num3 * 1133712216 ^ 45737264;
            continue;
          case 37:
            num1 = (int) num3 * -1786796185 ^ 424694316;
            continue;
          case 38:
            int num13;
            num1 = num13 = jsonNodeStack.Count != 0 ? 1241023263 : (num13 = 1004827685);
            continue;
          case 39:
            num1 = (int) num3 * 778756452 ^ 488138168;
            continue;
          case 40:
            aKey = JSONNode.\u200D⁮⁭⁪‏‎‏⁪‪⁫⁪⁭‬‌⁬‎‭‎⁯‪⁪‬⁫⁫⁯⁯⁯⁫⁫⁮⁪‪‌​⁬‪‬​‎⁬‮(aKey);
            num1 = (int) num3 * 966230632 ^ -474972574;
            continue;
          case 41:
            num1 = (int) num3 * -819064246 ^ 932759698;
            continue;
          case 42:
            flag7 = JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aKey, "");
            num1 = 1636606010;
            continue;
          case 43:
            ch3 = JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2);
            num1 = (int) num3 * -1037877674 ^ -372212145;
            continue;
          case 44:
            num1 = (int) num3 * 108896662 ^ -133262484;
            continue;
          case 45:
            aKey = "";
            flag2 = false;
            num1 = (int) num3 * -1379158064 ^ 1478622164;
            continue;
          case 46:
            aKey = JSONNode.\u200D⁮⁭⁪‏‎‏⁪‪⁫⁪⁭‬‌⁬‎‭‎⁯‪⁪‬⁫⁫⁯⁯⁯⁫⁫⁮⁪‪‌​⁬‪‬​‎⁬‮(aKey);
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1144362877 ^ 1462768564;
            continue;
          case 47:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -89296334 ^ 1760892190;
            continue;
          case 48:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -431361717 ^ -883944805;
            continue;
          case 49:
label_42:
            int num14;
            num1 = num14 = !flag2 ? 393376783 : (num14 = 738133054);
            continue;
          case 50:
            num1 = (int) num3 * 601469118 ^ 537445382;
            continue;
          case 51:
            flag3 = JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aItem, "");
            num1 = 299784736;
            continue;
          case 52:
            num1 = (int) num3 * 1387387806 ^ -514457647;
            continue;
          case 53:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 443714445 ^ 1901851026;
            continue;
          case 54:
            num1 = (int) num3 * 533972175 ^ -1986156515;
            continue;
          case 55:
            goto label_3;
          case 56:
label_13:
            int num15;
            num1 = num15 = flag2 ? 725384311 : (num15 = 325521479);
            continue;
          case 57:
            int num16;
            num1 = num16 = flag2 ? 1672539523 : (num16 = 1040888236);
            continue;
          case 59:
            s = JSONNode.\u202C‍‎‏⁬‪‮⁬⁬‮⁮​‬⁭‪⁫‍‮‬‬‏‌‍‪‮‍⁭‍‍‫‏‫‍⁯‏‫⁪​‫⁭‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * 817970660 ^ -732363135;
            continue;
          case 60:
            num1 = (int) num3 * 1040576856 ^ -579963768;
            continue;
          case 61:
            jsonNodeStack.Pop();
            flag1 = JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aItem, "");
            num1 = 1091591987;
            continue;
          case 62:
            num1 = (int) num3 * -481181966 ^ -778371647;
            continue;
          case 63:
            int num17;
            num1 = num17 = !JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aKey, "") ? 127906551 : (num17 = 943614111);
            continue;
          case 64:
            num1 = (int) num3 * 1861765746 ^ 1166827415;
            continue;
          case 65:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -905426737 ^ -1004555399;
            continue;
          case 66:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -867109686 ^ -2044682402;
            continue;
          case 67:
            num1 = (int) num3 * -1688421257 ^ -776071049;
            continue;
          case 68:
            int num18 = !flag5 ? 1717877360 : (num18 = 329991271);
            num1 = num18 ^ (int) num3 * -2051931555;
            continue;
          case 69:
label_76:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, "\r");
            num1 = 1696819054;
            continue;
          case 70:
            goto label_1;
          case 71:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 584006052 ^ 1288751556;
            continue;
          case 72:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -643390316 ^ -38470501;
            continue;
          case 73:
            int num19 = flag2 ? 641067783 : (num19 = 908660952);
            num1 = num19 ^ (int) num3 * 1196548330;
            continue;
          case 74:
            int num20 = jsonNode1 != (object) null ? 1790610448 : (num20 = 591342418);
            num1 = num20 ^ (int) num3 * 651157582;
            continue;
          case 75:
            int num21 = !flag2 ? -1190240211 : (num21 = -1893482366);
            num1 = num21 ^ (int) num3 * 1651728305;
            continue;
          case 76:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 1581806830;
            continue;
          case 77:
            flag2 = !flag2;
            num1 = 1825576904;
            continue;
          case 78:
            int num22 = ch2 == 'b' ? 885906950 : (num22 = 791722520);
            num1 = num22 ^ (int) num3 * 337631020;
            continue;
          case 79:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * 1369408852 ^ 1730626217;
            continue;
          case 80:
label_63:
            num1 = 1364009001;
            continue;
          case 81:
            aKey = "";
            aItem = "";
            flag4 = jsonNodeStack.Count > 0;
            num1 = 1699204728;
            continue;
          case 82:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, "\n");
            num1 = 6605124;
            continue;
          case 83:
            num1 = (int) num3 * -190471515 ^ -697979265;
            continue;
          case 84:
            num1 = (int) num3 * 1691757847 ^ -804611624;
            continue;
          case 86:
            num1 = (int) num3 * 677375271 ^ 146285346;
            continue;
          case 87:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 707974376 ^ -2067077451;
            continue;
          case 88:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -1528824051 ^ 1026181463;
            continue;
          case 89:
            num1 = (int) num3 * 136502276 ^ 570545427;
            continue;
          case 90:
            aKey = "";
            aItem = "";
            num1 = 2770155;
            continue;
          case 91:
            int num23;
            num1 = num23 = ch1 > ']' ? 2126627854 : (num23 = 1745440163);
            continue;
          case 92:
            num1 = (int) num3 * -439753969 ^ -522662414;
            continue;
          case 93:
            int num24;
            num1 = num24 = ch1 != ',' ? 687901766 : (num24 = 444112989);
            continue;
          case 94:
            int num25;
            num1 = num25 = ch1 == '"' ? 292064607 : (num25 = 2027487527);
            continue;
          case 95:
            num1 = 902259909;
            continue;
          case 96:
            int num26 = jsonNode1 is JSONArray ? -121592137 : (num26 = -2081984323);
            num1 = num26 ^ (int) num3 * -2038310232;
            continue;
          case 97:
            num1 = (int) num3 * 2019941564 ^ -1058026009;
            continue;
          case 98:
label_132:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = 1825576904;
            continue;
          case 99:
            num1 = (int) num3 * -1326379890 ^ -2019948266;
            continue;
          case 100:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 763337957 ^ -1230562932;
            continue;
          case 101:
            num1 = (int) num3 * 585606107 ^ 1810771866;
            continue;
          case 102:
            num1 = (int) num3 * -1119197571 ^ 1806951972;
            continue;
          case 103:
label_88:
            flag5 = flag2;
            num1 = 2136226966;
            continue;
          case 104:
            num1 = (int) num3 * 624626275 ^ 1288802920;
            continue;
          case 105:
            aKey = JSONNode.\u200D⁮⁭⁪‏‎‏⁪‪⁫⁪⁭‬‌⁬‎‭‎⁯‪⁪‬⁫⁫⁯⁯⁯⁫⁫⁮⁪‪‌​⁬‪‬​‎⁬‮(aKey);
            num1 = (int) num3 * 235189362 ^ -1873223911;
            continue;
          case 106:
            num1 = (int) num3 * 1900285396 ^ -131751668;
            continue;
          case 107:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, "\f");
            num1 = 2033714776;
            continue;
          case 108:
            int num27;
            num1 = num27 = ch1 == '{' ? 1531416411 : (num27 = 970374881);
            continue;
          case 109:
            int num28;
            num1 = num28 = JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aKey, "") ? 1904561269 : (num28 = 19037677);
            continue;
          case 111:
            num1 = (int) num3 * 99648060 ^ -1719530587;
            continue;
          case 112:
            int num29 = ch1 <= ' ' ? 402746168 : (num29 = 1685310140);
            num1 = num29 ^ (int) num3 * 1772711204;
            continue;
          case 113:
            num1 = (int) num3 * -2081004209 ^ -1576732269;
            continue;
          case 114:
            flag6 = flag2;
            num1 = 221839210;
            continue;
          case 115:
            num1 = (int) num3 * -2142931304 ^ 2085666444;
            continue;
          case 116:
            num1 = (int) num3 * -1478141171 ^ 1479116287;
            continue;
          case 117:
            num1 = 556482040;
            continue;
          case 118:
            num1 = 185898662;
            continue;
          case 119:
            aKey = "";
            aItem = "";
            num1 = 1681786324;
            continue;
          case 120:
            int num30 = !flag6 ? 1661735801 : (num30 = 1796549286);
            num1 = num30 ^ (int) num3 * 1938567030;
            continue;
          case 121:
            num1 = (int) num3 * 925520413 ^ -1192071592;
            continue;
          case 122:
            int num31 = flag4 ? -318192803 : (num31 = -410060488);
            num1 = num31 ^ (int) num3 * 1206450987;
            continue;
          case 123:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 328739563 ^ 744292065;
            continue;
          case 124:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1896516982 ^ 1261165855;
            continue;
          case 125:
            int num32 = ch1 <= ',' ? 1412918809 : (num32 = 1598046306);
            num1 = num32 ^ (int) num3 * -121603017;
            continue;
          case 126:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 803164012 ^ -193774560;
            continue;
          case (uint) sbyte.MaxValue:
            int num33;
            num1 = num33 = !flag2 ? 286041345 : (num33 = 1031084529);
            continue;
          case 128:
            int num34;
            num1 = num34 = ch2 == 'n' ? 1408194528 : (num34 = 319205344);
            continue;
          case 129:
            num1 = (int) num3 * -2053816289 ^ 840204187;
            continue;
          case 130:
            int num35 = !flag3 ? 1423797705 : (num35 = 930703246);
            num1 = num35 ^ (int) num3 * 1435137078;
            continue;
          case 131:
            goto label_69;
          case 133:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1721934947 ^ -1852497034;
            continue;
          case 134:
label_84:
            aItem = JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮(aItem, ch4.ToString());
            num1 = 1504177317;
            continue;
          case 135:
            num1 = (int) num3 * 978537226 ^ -2079050014;
            continue;
          case 136:
            flag8 = num2 < JSONNode.\u206D⁫‫‮‭‮‌‍⁬⁫​‪‬‮⁯‫⁫‍⁬⁬⁫‪⁪​‎⁮​⁮⁭‫‮⁮⁪‌⁬‍​‭‍⁫‮(aJSON);
            num1 = 1757151460;
            continue;
          case 137:
            int num36 = !(jsonNode1 is JSONArray) ? 1280794955 : (num36 = 397902982);
            num1 = num36 ^ (int) num3 * 1809435499;
            continue;
          case 138:
            int num37;
            num1 = num37 = JSONNode.\u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮(aKey, "") ? 432100681 : (num37 = 202016120);
            continue;
          case 139:
            ch4 = JSONNode.\u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮(aJSON, num2);
            ch2 = ch4;
            int num38 = ch2 > 'f' ? 48806717 : (num38 = 354810499);
            num1 = num38 ^ (int) num3 * 280862317;
            continue;
          case 140:
            num1 = (int) num3 * 1121098424 ^ 476167400;
            continue;
          case 141:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            int num39;
            num1 = num39 = !(jsonNode1 != (object) null) ? 556482040 : (num39 = 1253333888);
            continue;
          case 142:
            switch (ch1)
            {
              case '[':
                goto label_42;
              case '\\':
                goto label_18;
              case ']':
                goto label_88;
              default:
                num1 = 1054648122;
                continue;
            }
          case 143:
label_18:
            ++num2;
            num1 = 2085653289;
            continue;
          default:
            goto label_144;
        }
      }
label_3:
      throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("JSON Parse: Too many closing brackets");
label_69:
      throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_144:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -722667801;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -330148104)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Serialize(aWriter);
            num1 = (int) num2 * 837882181 ^ 1911287219;
            continue;
          case 2:
            goto label_3;
          case 3:
            aWriter = JSONNode.\u200C⁪‮‌‬⁫⁮‌‪‪‬⁮‌​‪​‎⁮‬⁯‪⁬​⁮‪‌​⁬‪‬⁫‎⁯⁬‪‌⁫⁮⁯‎‮(aData);
            num1 = (int) num2 * -223943051 ^ -1799938162;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206C‏⁭⁫​⁯‭‏‬‍⁮⁯‍‪⁬⁪‌‏⁯‎⁭‬‌‭‌‭​‎‎‮‮‌‪‍‫‭‍‫‬⁭‮(JSONNode.\u206B‭⁫‭‌‏⁫‬⁮‌⁮⁪⁬‍⁭⁯⁫​⁯‎⁯⁪‎‫‎‎⁭‎‌‫⁮⁫‭‭⁪⁯​​‪‌‮((FileSystemInfo) JSONNode.\u202B​⁪‭‫‫‪⁭‌‍⁯​⁭‭‮‬​⁪‮​‎⁫⁭‬‬‍‏​⁪‍⁯⁪⁪​‫‎‭⁬⁬⁯‮(JSONNode.\u202E‭‍‍‪⁬​‫⁮⁮⁭⁫‎⁯‌‍‏⁯⁪‬​​‎⁯‎‌⁪‫‬⁮‍⁪⁯⁮‌‎‫⁭⁭⁫‮(aFileName))));
      FileStream aData = JSONNode.\u200D‪⁯⁮⁮‌⁯‮‭‬‪‮⁪⁮‏‍‬⁯‮‫⁬‏‏⁫⁪‭⁮⁯⁬‫‪⁭⁮⁭⁫⁭‮⁯‫‭‮(aFileName);
      try
      {
label_2:
        int num1 = -667781637;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1781243582)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 692219128 ^ 825361000;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 44200870 ^ -1471716404;
              continue;
            case 2:
              goto label_10;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -1973931479;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1781243582)) % 4U)
            {
              case 0:
                num3 = (int) num4 * 2036240472 ^ -120598025;
                continue;
              case 2:
                goto label_8;
              case 3:
                JSONNode.\u206B‫⁫‍⁯⁪‫⁬‏‬⁭‏⁬​‫⁮⁮‫‍​⁯⁭⁮‭‪‭‍⁫⁫⁮⁪‏‏⁫‎‎‎‬‫‍‮((IDisposable) aData);
                num3 = (int) num4 * 847367417 ^ -518902151;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206D⁭‏⁪⁭⁭⁭⁪⁭‎‪‏‮⁯​‮⁪⁮‬‮⁮‎⁬⁯‭‮‪⁮⁭‪​‪‎⁭‍‪⁭‭⁬⁮‮();
      string base64;
      try
      {
label_2:
        int num1 = 1936019387;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 276381943)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1222728327 ^ 476074638;
              continue;
            case 1:
              JSONNode.\u206B‫‏‫‍‌‍‪⁮‪‬‭‬⁮‏‭‍⁬‎‏⁯‫⁭‌‪‍‏‪​⁫⁪‌‫‮⁭‌⁯⁮⁯‮((Stream) aData, 0L);
              num1 = (int) num2 * -1162725294 ^ 1939589752;
              continue;
            case 3:
              num1 = (int) num2 * 957889602 ^ 1629503962;
              continue;
            case 4:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 979505077 ^ -202067620;
              continue;
            case 5:
              goto label_2;
            case 6:
              base64 = JSONNode.\u200F‌⁪⁭‏⁮⁯⁪‮‍⁬‭‍‮⁭‌⁯‮‎‮⁯‬⁭‪⁬⁫‍‭‪‌⁮⁯‏‭‍⁪⁭‪‫⁮‮(JSONNode.\u202C⁮⁯⁮‍⁭‌‌⁫​⁬​‏‎⁮⁭⁯⁭⁮‮‮‮⁮‭‍‬⁮​⁫‍‌‫‫⁭‍‭⁫⁮‫‬‮(aData));
              num1 = (int) num2 * -1990099780 ^ -1146363435;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_10:
          int num3 = 1982435897;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 276381943)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -545498716 ^ -1264319193;
                continue;
              case 2:
                JSONNode.\u206B‫⁫‍⁯⁪‫⁬‏‬⁭‏⁬​‫⁮⁮‫‍​⁯⁭⁮‭‪‭‍⁫⁫⁮⁪‏‏⁫‎‎‎‬‫‍‮((IDisposable) aData);
                num3 = (int) num4 * 1998913067 ^ -166178876;
                continue;
              case 3:
                goto label_10;
              default:
                goto label_14;
            }
          }
        }
label_14:;
      }
label_15:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -389251821;
      JSONBinaryTag jsonBinaryTag1;
      JSONNode jsonNode;
      JSONClass jsonClass;
      string aKey;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag2;
      int num2;
      int num3;
      int num4;
      bool flag;
      int num5;
      JSONArray jsonArray;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -2047434085)) % 41U)
        {
          case 0:
            int num7 = flag ? 762590714 : (num7 = 775906314);
            num1 = num7 ^ (int) num6 * -1799849247;
            continue;
          case 1:
label_23:
            num1 = -1840155155;
            continue;
          case 2:
            flag = num5 < num4;
            num1 = -1371075378;
            continue;
          case 3:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1927653574 ^ -86511284;
            continue;
          case 4:
            num1 = (int) num6 * -1591983119 ^ 595522649;
            continue;
          case 5:
label_36:
            num1 = -1711216751;
            continue;
          case 6:
            ++num2;
            num1 = (int) num6 * 137809431 ^ 1780643651;
            continue;
          case 7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F⁭‭‬⁪‌⁯‭⁫‭⁫‍‏‍⁭⁫⁫‏‎‮‭‫⁯‭⁭⁪‏⁪​‪⁬⁪⁫‎‪‬‎​⁪⁭‮(aReader));
            num1 = (int) num6 * 400426200 ^ 301541101;
            continue;
          case 8:
            num1 = (int) num6 * 135844502 ^ -1549072809;
            continue;
          case 9:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁬⁫‭⁯⁮⁫‪‬⁪⁫‏‬⁬⁪‪⁭⁮‬‮‏‏‍⁪⁭‭‎⁫⁪⁭​⁪⁯⁭‏‪‎⁪‌⁪‮(aReader));
            num1 = (int) num6 * -1281770084 ^ 609058973;
            continue;
          case 10:
            num3 = JSONNode.\u206D⁬⁫‭⁯⁮⁫‪‬⁪⁫‏‬⁬⁪‪⁭⁮‬‮‏‏‍⁪⁭‭‎⁫⁪⁭​⁪⁯⁭‏‪‎⁪‌⁪‮(aReader);
            num1 = (int) num6 * 253968496 ^ -922123283;
            continue;
          case 11:
            aKey = JSONNode.\u206D⁮⁪‪⁮‌‌‫⁪‮‌⁫‫⁭⁬‪‪‪‌‍‏‭‮⁪⁭⁮‫‪‏‫‌‏⁬⁬‮‭⁫⁮‏‪‮(aReader);
            num1 = (int) num6 * -1684415607 ^ 43460112;
            continue;
          case 12:
label_22:
            num1 = -832447317;
            continue;
          case 13:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 631266330 ^ -968354768;
            continue;
          case 14:
            num4 = JSONNode.\u206D⁬⁫‭⁯⁮⁫‪‬⁪⁫‏‬⁬⁪‪⁭⁮‬‮‏‏‍⁪⁭‭‎⁫⁪⁭​⁪⁯⁭‏‪‎⁪‌⁪‮(aReader);
            num1 = (int) num6 * 777396785 ^ 1633926992;
            continue;
          case 15:
            num1 = (int) num6 * -1998375268 ^ -755728732;
            continue;
          case 16:
label_12:
            num1 = -302603657;
            continue;
          case 17:
label_21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‭‪‭⁯‭‪​‮⁫⁫‬⁪​​⁪⁫‌⁮⁪⁯⁪‎⁬‪‬​‪⁪‍⁭​⁪‫​⁫‭​‬⁭‮(aReader));
            num1 = -2072818019;
            continue;
          case 18:
            ++num5;
            num1 = (int) num6 * -1045090810 ^ -273327878;
            continue;
          case 19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁮⁪‪⁮‌‌‫⁪‮‌⁫‫⁭⁬‪‪‪‌‍‏‭‮⁪⁭⁮‫‪‏‫‌‏⁬⁬‮‭⁫⁮‏‪‮(aReader));
            num1 = (int) num6 * -1695454874 ^ 1070603956;
            continue;
          case 21:
            num1 = (int) num6 * 1599362206 ^ 1295877062;
            continue;
          case 22:
            num1 = -423132988;
            continue;
          case 23:
            goto label_1;
          case 24:
label_8:
            num1 = -1538628178;
            continue;
          case 25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‪⁬⁭⁬⁭‫‭‎‫​‬‭⁯‬⁮‍⁫⁭⁭‪‫⁯⁯⁭⁮‌​‭⁫‏⁪‫⁪‏⁯‌⁬⁭⁯‮(aReader));
            num1 = (int) num6 * -487504813 ^ -959480353;
            continue;
          case 26:
            int num8;
            num1 = num8 = num2 < num3 ? -377133733 : (num8 = -37240295);
            continue;
          case 27:
            num1 = (int) num6 * 897659442 ^ 687022841;
            continue;
          case 28:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_12;
              case JSONBinaryTag.Class:
                goto label_8;
              case JSONBinaryTag.Value:
                goto label_22;
              case JSONBinaryTag.IntValue:
                goto label_11;
              case JSONBinaryTag.DoubleValue:
                goto label_21;
              case JSONBinaryTag.BoolValue:
                goto label_36;
              case JSONBinaryTag.FloatValue:
                goto label_23;
              default:
                num1 = (int) num6 * -1525940533 ^ -790388574;
                continue;
            }
          case 29:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200D‍⁫‭‬‮‎‌‌‏‭‎⁬⁭‌‏⁪‪‌​‏‬‏‍‎‌‮‫‫⁪‬‏‏⁯‌‮‍⁫⁮‫‮(aReader);
            num1 = (int) num6 * 1540460745 ^ 467771287;
            continue;
          case 30:
            num1 = (int) num6 * 150321725 ^ -1831616731;
            continue;
          case 31:
            goto label_6;
          case 32:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1319909138;
            continue;
          case 33:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 1177586645 ^ 1914518914;
            continue;
          case 34:
label_11:
            num1 = -1019397044;
            continue;
          case 35:
            num1 = -1626053502;
            continue;
          case 36:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1584110901 ^ 356616681;
            continue;
          case 37:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1954915859 ^ -827183021;
            continue;
          case 38:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -795707975 ^ -283006607;
            continue;
          case 39:
            jsonArray = new JSONArray();
            num5 = 0;
            num1 = (int) num6 * -521804707 ^ 493026808;
            continue;
          case 40:
            num2 = 0;
            num1 = (int) num6 * 1289968894 ^ 814348820;
            continue;
          default:
            goto label_43;
        }
      }
label_6:
      throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮(JSONNode.\u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_43:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202D‍‌⁯‪​‌‪‫‌‌‏⁪⁬⁬⁪⁬⁫‬⁬⁭‭‮‏⁬⁫‬‪‌⁯⁯⁭‍‫‬⁫​⁯⁯‫‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1374879197;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 851905610)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 845146467 ^ -1991301236;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 1223825215;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 851905610)) % 3U)
            {
              case 1:
                JSONNode.\u206B‫⁫‍⁯⁪‫⁬‏‬⁭‏⁬​‫⁮⁮‫‍​⁯⁭⁮‭‪‭‍⁫⁫⁮⁪‏‏⁫‎‎‎‬‫‍‮((IDisposable) aReader);
                num3 = (int) num4 * 1539107869 ^ -1218926337;
                continue;
              case 2:
                goto label_6;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202C⁯⁫⁮‌⁭‮‬‫‪​‭‬‭⁯⁬⁬⁬‬‬​‏‬⁭​​‫‍‮⁯⁯⁯⁯‫⁬‬⁫​‏‫‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -641602912;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1943220628)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -1906395878 ^ -1976311654;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -895393950;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1943220628)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -802424603 ^ 678527769;
                continue;
              case 2:
                JSONNode.\u206B‫⁫‍⁯⁪‫⁬‏‬⁭‏⁬​‫⁮⁮‫‍​⁯⁭⁮‭‪‭‍⁫⁫⁮⁪‏‏⁫‎‎‎‬‫‍‮((IDisposable) aData);
                num3 = (int) num4 * 1194553171 ^ -1336432729;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 1547273784;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1772083418)) % 6U)
        {
          case 0:
            goto label_1;
          case 2:
            numArray = JSONNode.\u202C⁫⁭⁮‎⁮​⁯⁯‎‬‍‫‬‎‎⁪⁯‪‪‪​⁪‏⁯‭‫‭‌‪⁭‮​‏⁬⁬‏⁬​⁬‮(aBase64);
            num1 = (int) num2 * -1743504732 ^ -932147907;
            continue;
          case 3:
            JSONNode.\u206B‫‏‫‍‌‍‪⁮‪‬‭‬⁮‏‭‍⁬‎‏⁯‫⁭‌‪‍‏‪​⁫⁪‌‫‮⁭‌⁯⁮⁯‮((Stream) aData, 0L);
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 857079260 ^ 655423360;
            continue;
          case 4:
            num1 = (int) num2 * 211236088 ^ 1343668549;
            continue;
          case 5:
            aData = JSONNode.\u202B⁭‫‭‌​‬‪‎‏⁯⁮⁪​‮‫‪​⁫⁮‪‍⁪⁮‎‏⁮⁭​‫​⁮‬‍⁮‭‏‫‭⁭‮(numArray);
            num1 = (int) num2 * -1905511546 ^ -2147317095;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 188858848;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 20283686)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -139580251 ^ -957382273;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200C‍⁫‬‪⁮​⁫‮‏‬⁬‪‫‮⁯‏‎⁭‎‪⁬‭‏⁮‬⁮⁯⁯⁪‮‍⁭‍‌‪‍‪‌‎‮() => CultureInfo.InvariantCulture;

    static bool \u206B⁮‬‌‪‌‌‮‬‏‌‏‏⁬​‬⁬‏​‪‬‌⁪‮⁬⁭​‫‌‭⁪‪‮‏‎⁫​⁯‌⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206D⁯⁬‬⁯‮‌⁯‬⁬⁬⁪‎⁭⁪⁫​‪‭‎‬‮⁬‫​‫​‌⁪⁯⁯⁯‎‭‭‎⁭⁮⁫⁪‮() => base.GetHashCode();

    static char \u206C⁬​‬‪‏‎‮‌⁭‍⁯​‏​‬⁬‫‪​‮⁭⁫‪‭‬‬‏‎⁬‪‪⁭‌‫⁯‏‪‎‭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206D‏⁬‌⁬‏⁬‫‮⁯​⁮‭⁪‮‪‌‎⁬‏‏‌⁫⁭‫‪‍‎‭‍‭‏‪‮‌⁭⁯‍‍‎‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206D⁫‫‮‭‮‌‍⁬⁫​‪‬‮⁯‫⁫‍⁬⁬⁫‪⁪​‎⁮​⁮⁭‫‮⁮⁪‌⁬‍​‭‍⁫‮([In] string obj0) => obj0.Length;

    static string \u200D⁮⁭⁪‏‎‏⁪‪⁫⁪⁭‬‌⁬‎‭‎⁯‪⁪‬⁫⁫⁯⁯⁯⁫⁫⁮⁪‪‌​⁬‪‬​‎⁬‮([In] string obj0) => obj0.Trim();

    static bool \u202D‌‌‫⁪‎⁬‎‫⁪‮⁯‬‬⁫‎⁬⁬‪‫‮‌‬‍‭‭‭⁪‏⁮⁬⁪‮‫‫⁪‮​​‏‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202D⁪⁪⁭‏‬⁪⁯‮⁪⁪⁮‮‌​⁮‭​‌‎⁫‪⁭⁭‮⁫⁮⁫⁯⁫‌⁬‭‌‬‍​⁬‬‪‮([In] string obj0) => new Exception(obj0);

    static string \u202C‍‎‏⁬‪‮⁬⁬‮⁮​‬⁭‪⁫‍‮‬‬‏‌‍‪‮‍⁭‍‍‫‏‫‍⁯‏‫⁪​‫⁭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200C⁪‮‌‬⁫⁮‌‪‪‬⁮‌​‪​‎⁮‬⁯‪⁬​⁮‪‌​⁬‪‬⁫‎⁯⁬‪‌⁫⁮⁯‎‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202E‭‍‍‪⁬​‫⁮⁮⁭⁫‎⁯‌‍‏⁯⁪‬​​‎⁯‎‌⁪‫‬⁮‍⁪⁯⁮‌‎‫⁭⁭⁫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202B​⁪‭‫‫‪⁭‌‍⁯​⁭‭‮‬​⁪‮​‎⁫⁭‬‬‍‏​⁪‍⁯⁪⁪​‫‎‭⁬⁬⁯‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206B‭⁫‭‌‏⁫‬⁮‌⁮⁪⁬‍⁭⁯⁫​⁯‎⁯⁪‎‫‎‎⁭‎‌‫⁮⁫‭‭⁪⁯​​‪‌‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206C‏⁭⁫​⁯‭‏‬‍⁮⁯‍‪⁬⁪‌‏⁯‎⁭‬‌‭‌‭​‎‎‮‮‌‪‍‫‭‍‫‬⁭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D‪⁯⁮⁮‌⁯‮‭‬‪‮⁪⁮‏‍‬⁯‮‫⁬‏‏⁫⁪‭⁮⁯⁬‫‪⁭⁮⁭⁫⁭‮⁯‫‭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206B‫⁫‍⁯⁪‫⁬‏‬⁭‏⁬​‫⁮⁮‫‍​⁯⁭⁮‭‪‭‍⁫⁫⁮⁪‏‏⁫‎‎‎‬‫‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206D⁭‏⁪⁭⁭⁭⁪⁭‎‪‏‮⁯​‮⁪⁮‬‮⁮‎⁬⁯‭‮‪⁮⁭‪​‪‎⁭‍‪⁭‭⁬⁮‮() => new MemoryStream();

    static void \u206B‫‏‫‍‌‍‪⁮‪‬‭‬⁮‏‭‍⁬‎‏⁯‫⁭‌‪‍‏‪​⁫⁪‌‫‮⁭‌⁯⁮⁯‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202C⁮⁯⁮‍⁭‌‌⁫​⁬​‏‎⁮⁭⁯⁭⁮‮‮‮⁮‭‍‬⁮​⁫‍‌‫‫⁭‍‭⁫⁮‫‬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‌⁪⁭‏⁮⁯⁪‮‍⁬‭‍‮⁭‌⁯‮‎‮⁯‬⁭‪⁬⁫‍‭‪‌⁮⁯‏‭‍⁪⁭‪‫⁮‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200D‍⁫‭‬‮‎‌‌‏‭‎⁬⁭‌‏⁪‪‌​‏‬‏‍‎‌‮‫‫⁪‬‏‏⁯‌‮‍⁫⁮‫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D⁬⁫‭⁯⁮⁫‪‬⁪⁫‏‬⁬⁪‪⁭⁮‬‮‏‏‍⁪⁭‭‎⁫⁪⁭​⁪⁯⁭‏‪‎⁪‌⁪‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D⁮⁪‪⁮‌‌‫⁪‮‌⁫‫⁭⁬‪‪‪‌‍‏‭‮⁪⁭⁮‫‪‏‫‌‏⁬⁬‮‭⁫⁮‏‪‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200E‭‪‭⁯‭‪​‮⁫⁫‬⁪​​⁪⁫‌⁮⁪⁯⁪‎⁬‪‬​‪⁪‍⁭​⁪‫​⁫‭​‬⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206F⁭‭‬⁪‌⁯‭⁫‭⁫‍‏‍⁭⁫⁫‏‎‮‭‫⁯‭⁭⁪‏⁪​‪⁬⁪⁫‎‪‬‎​⁪⁭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200C‪⁬⁭⁬⁭‫‭‎‫​‬‭⁯‬⁮‍⁫⁭⁭‪‫⁯⁯⁭⁮‌​‭⁫‏⁪‫⁪‏⁯‌⁬⁭⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202D‍‌⁯‪​‌‪‫‌‌‏⁪⁬⁬⁪⁬⁫‬⁬⁭‭‮‏⁬⁫‬‪‌⁯⁯⁭‍‫‬⁫​⁯⁯‫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202C⁯⁫⁮‌⁭‮‬‫‪​‭‬‭⁯⁬⁬⁬‬‬​‏‬⁭​​‫‍‮⁯⁯⁯⁯‫⁬‬⁫​‏‫‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202C⁫⁭⁮‎⁮​⁯⁯‎‬‍‫‬‎‎⁪⁯‪‪‪​⁪‏⁯‭‫‭‌‪⁭‮​‏⁬⁬‏⁬​⁬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202B⁭‫‭‌​‬‪‎‏⁯⁮⁪​‮‫‪​⁫⁮‪‍⁪⁮‎‏⁮⁭​‫​⁮‬‍⁮‭‏‫‭⁭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
