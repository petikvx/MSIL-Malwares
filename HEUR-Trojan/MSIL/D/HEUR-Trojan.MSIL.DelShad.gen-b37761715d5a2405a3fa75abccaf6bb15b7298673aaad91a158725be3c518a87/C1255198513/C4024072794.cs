// Decompiled with JetBrains decompiler
// Type: C1255198513.C4024072794
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;

namespace C1255198513
{
  public sealed class C4024072794 : C3904355907.C2852464175
  {
    private const ulong C3554254475 = 1024;
    private const ulong C3904355907 = 128;
    private const ulong C1255198513 = 4;
    private const int C3554254475 = 64;
    private const int C3904355907 = 72;
    private static int[][] C3554254475 = (int[][]) null;
    private static int[][] C3904355907 = (int[][]) null;
    private static readonly C3554254475.C3865851505 C3554254475 = new C3554254475.C3865851505(new byte[16]
    {
      (byte) 239,
      (byte) 99,
      (byte) 109,
      (byte) 223,
      (byte) 140,
      (byte) 41,
      (byte) 68,
      (byte) 75,
      (byte) 145,
      (byte) 247,
      (byte) 169,
      (byte) 164,
      (byte) 3,
      (byte) 227,
      (byte) 10,
      (byte) 12
    });
    public static readonly string C3554254475 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Ke();
    public static readonly string C3904355907 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KI();
    public static readonly string C1255198513 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Ki();
    public static readonly string C1908338681 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KJ();
    public static readonly string C1037565863 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kj();
    public static readonly string C112844655 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KK();
    public static readonly string C2746444292 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kk();
    private const uint C3554254475 = 16;
    private const uint C3904355907 = 19;
    private const int C1255198513 = 8;
    private const int C1908338681 = 2147483647;
    internal const ulong C1908338681 = 1;
    internal const ulong C1037565863 = 4294967295;
    internal const ulong C112844655 = 8192;
    internal const ulong C2746444292 = 2147483647;
    internal const uint C1255198513 = 1;
    internal const uint C1908338681 = 16777215;
    internal const ulong C2564639436 = 2;
    internal const ulong C3568589458 = 1048576;
    internal const uint C1037565863 = 2;

    private static byte[] C3554254475(
      [In] byte[] obj0,
      [In] byte[] obj1,
      [In] uint obj2,
      [In] ulong obj3,
      [In] ulong obj4,
      [In] int obj5,
      [In] uint obj6,
      [In] byte[] obj7,
      [In] byte[] obj8)
    {
      obj7 = obj7 ?? C3554254475.C2137352139.C3554254475;
      obj8 = obj8 ?? C3554254475.C2137352139.C3554254475;
      C4024072794.C1908338681();
      C4024072794.C3554254475 c3554254475 = new C4024072794.C3554254475()
      {
        C3554254475 = obj6,
        C3554254475 = (ulong) obj2,
        C3904355907 = obj4,
        C1255198513 = obj3 / 1024UL
      };
      c3554254475.C1908338681 = Math.Max(c3554254475.C1255198513, 8UL * c3554254475.C3554254475);
      c3554254475.C1037565863 = c3554254475.C1908338681 / (c3554254475.C3554254475 * 4UL);
      c3554254475.C1908338681 = c3554254475.C1037565863 * c3554254475.C3554254475 * 4UL;
      c3554254475.C112844655 = c3554254475.C1037565863 * 4UL;
      Debug.Assert(1024L == 128L * (long) Marshal.SizeOf(typeof (ulong)));
      c3554254475.C3554254475 = new ulong[checked ((ulong) unchecked ((long) c3554254475.C1908338681 * 128L))];
      C3904355907.C3707901625 c3707901625 = new C3904355907.C3707901625();
      Debug.Assert(c3707901625.HashSize == 512);
      byte[] numArray1 = new byte[4];
      C3554254475.C2137352139.C3554254475(obj2, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475((uint) obj5, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475((uint) c3554254475.C1255198513, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475((uint) obj4, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475(obj6, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475(0U, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      C3554254475.C2137352139.C3554254475((uint) obj0.Length, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      c3707901625.TransformBlock(obj0, 0, obj0.Length, obj0, 0);
      C3554254475.C2137352139.C3554254475((uint) obj1.Length, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      c3707901625.TransformBlock(obj1, 0, obj1.Length, obj1, 0);
      C3554254475.C2137352139.C3554254475((uint) obj7.Length, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      c3707901625.TransformBlock(obj7, 0, obj7.Length, obj7, 0);
      C3554254475.C2137352139.C3554254475((uint) obj8.Length, numArray1, 0);
      c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
      c3707901625.TransformBlock(obj8, 0, obj8.Length, obj8, 0);
      c3707901625.TransformFinalBlock(C3554254475.C2137352139.C3554254475, 0, 0);
      byte[] hash = c3707901625.Hash;
      Debug.Assert(hash.Length == 64);
      byte[] destinationArray = new byte[72];
      Array.Copy((Array) hash, (Array) destinationArray, hash.Length);
      C3554254475.C2137352139.C3904355907(hash);
      C4024072794.C3554254475(c3554254475, destinationArray, c3707901625);
      C3554254475.C2137352139.C3904355907(destinationArray);
      C4024072794.C3554254475(c3554254475);
      byte[] numArray2 = C4024072794.C3554254475(c3554254475, obj5, c3707901625);
      c3707901625.Clear();
      C3554254475.C2137352139.C3554254475<ulong>(c3554254475.C3554254475);
      return numArray2;
    }

    private static void C3554254475([In] ulong[] obj0, [In] ulong obj1, [In] byte[] obj2)
    {
      Debug.Assert(obj1 + 128UL - 1UL <= (ulong) int.MaxValue);
      int num = (int) obj1;
      for (int index = 0; index < 128; ++index)
        obj0[num + index] = C3554254475.C2137352139.C1255198513(obj2, index << 3);
    }

    private static void C3554254475([In] byte[] obj0, [In] ulong[] obj1)
    {
      for (int index = 0; index < 128; ++index)
        C3554254475.C2137352139.C3554254475(obj1[index], obj0, index << 3);
    }

    private static void C3554254475([In] ulong[] obj0, [In] ulong obj1, [In] ulong[] obj2, [In] ulong obj3) => Array.Copy((Array) obj2, (long) obj3, (Array) obj0, (long) obj1, 128L);

    private static void C3904355907([In] ulong[] obj0, [In] ulong obj1, [In] ulong[] obj2, [In] ulong obj3)
    {
      Debug.Assert(obj1 + 128UL - 1UL <= (ulong) int.MaxValue);
      Debug.Assert(obj3 + 128UL - 1UL <= (ulong) int.MaxValue);
      int num1 = (int) obj1;
      int num2 = (int) obj3;
      for (int index = 0; index < 128; ++index)
        obj0[num1 + index] ^= obj2[num2 + index];
    }

    private static void C3554254475(
      [In] byte[] obj0,
      [In] int obj1,
      [In] byte[] obj2,
      [In] int obj3,
      [In] C3904355907.C3707901625 obj4)
    {
      Debug.Assert(obj4 != null && obj4.HashSize == 512);
      byte[] numArray1 = new byte[4];
      C3554254475.C2137352139.C3554254475((uint) obj1, numArray1, 0);
      if (obj1 <= 64)
      {
        C3904355907.C3707901625 c3707901625 = obj1 == 64 ? obj4 : new C3904355907.C3707901625(obj1);
        if (obj1 == 64)
          c3707901625.Initialize();
        c3707901625.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
        c3707901625.TransformBlock(obj2, 0, obj3, obj2, 0);
        c3707901625.TransformFinalBlock(C3554254475.C2137352139.C3554254475, 0, 0);
        Array.Copy((Array) c3707901625.Hash, (Array) obj0, obj1);
        if (obj1 >= 64)
          return;
        c3707901625.Clear();
      }
      else
      {
        obj4.Initialize();
        obj4.TransformBlock(numArray1, 0, numArray1.Length, numArray1, 0);
        obj4.TransformBlock(obj2, 0, obj3, obj2, 0);
        obj4.TransformFinalBlock(C3554254475.C2137352139.C3554254475, 0, 0);
        byte[] numArray2 = new byte[64];
        Array.Copy((Array) obj4.Hash, (Array) numArray2, numArray2.Length);
        int num = 32;
        Array.Copy((Array) numArray2, (Array) obj0, num);
        int length = obj1 - num;
        obj4.Initialize();
        while (length > 64)
        {
          byte[] hash = obj4.ComputeHash(numArray2);
          Array.Copy((Array) hash, (Array) numArray2, 64);
          Array.Copy((Array) hash, 0, (Array) obj0, num, 32);
          num += 32;
          length -= 32;
          C3554254475.C2137352139.C3904355907(hash);
        }
        using (C3904355907.C3707901625 c3707901625 = new C3904355907.C3707901625(length))
        {
          byte[] hash = c3707901625.ComputeHash(numArray2);
          Array.Copy((Array) hash, 0, (Array) obj0, num, length);
          C3554254475.C2137352139.C3904355907(hash);
        }
        C3554254475.C2137352139.C3904355907(numArray2);
      }
    }

    private static void C3554254475([In] ulong[] obj0, [In] int obj1, [In] int obj2, [In] int obj3, [In] int obj4)
    {
      ulong num1 = obj0[obj1];
      ulong num2 = obj0[obj2];
      ulong num3 = obj0[obj3];
      ulong num4 = obj0[obj4];
      ulong num5 = (ulong) (((long) num1 & (long) uint.MaxValue) * ((long) num2 & (long) uint.MaxValue));
      ulong num6 = num1 + (num2 + (num5 << 1));
      ulong num7 = C3554254475.C2137352139.C3904355907(num4 ^ num6, 32);
      ulong num8 = (ulong) (((long) num3 & (long) uint.MaxValue) * ((long) num7 & (long) uint.MaxValue));
      ulong num9 = num3 + (num7 + (num8 << 1));
      ulong num10 = C3554254475.C2137352139.C3904355907(num2 ^ num9, 24);
      ulong num11 = (ulong) (((long) num6 & (long) uint.MaxValue) * ((long) num10 & (long) uint.MaxValue));
      ulong num12 = num6 + (num10 + (num11 << 1));
      ulong num13 = C3554254475.C2137352139.C3904355907(num7 ^ num12, 16);
      ulong num14 = (ulong) (((long) num9 & (long) uint.MaxValue) * ((long) num13 & (long) uint.MaxValue));
      ulong num15 = num9 + (num13 + (num14 << 1));
      ulong num16 = C3554254475.C2137352139.C3904355907(num10 ^ num15, 63);
      obj0[obj1] = num12;
      obj0[obj2] = num16;
      obj0[obj3] = num15;
      obj0[obj4] = num13;
    }

    private static void C3554254475([In] ulong[] obj0, [In] int[] obj1)
    {
      C4024072794.C3554254475(obj0, obj1[0], obj1[4], obj1[8], obj1[12]);
      C4024072794.C3554254475(obj0, obj1[1], obj1[5], obj1[9], obj1[13]);
      C4024072794.C3554254475(obj0, obj1[2], obj1[6], obj1[10], obj1[14]);
      C4024072794.C3554254475(obj0, obj1[3], obj1[7], obj1[11], obj1[15]);
      C4024072794.C3554254475(obj0, obj1[0], obj1[5], obj1[10], obj1[15]);
      C4024072794.C3554254475(obj0, obj1[1], obj1[6], obj1[11], obj1[12]);
      C4024072794.C3554254475(obj0, obj1[2], obj1[7], obj1[8], obj1[13]);
      C4024072794.C3554254475(obj0, obj1[3], obj1[4], obj1[9], obj1[14]);
    }

    private static void C3554254475([In] C4024072794.C3554254475 obj0, [In] byte[] obj1, [In] C3904355907.C3707901625 obj2)
    {
      byte[] numArray = new byte[new IntPtr(1024)];
      for (ulong index = 0; index < obj0.C3554254475; ++index)
      {
        C3554254475.C2137352139.C3554254475(0U, obj1, 64);
        C3554254475.C2137352139.C3554254475((uint) index, obj1, 68);
        C4024072794.C3554254475(numArray, 1024, obj1, 72, obj2);
        C4024072794.C3554254475(obj0.C3554254475, index * obj0.C112844655 * 128UL, numArray);
        C3554254475.C2137352139.C3554254475(1U, obj1, 64);
        C4024072794.C3554254475(numArray, 1024, obj1, 72, obj2);
        C4024072794.C3554254475(obj0.C3554254475, (ulong) ((long) index * (long) obj0.C112844655 + 1L) * 128UL, numArray);
      }
      C3554254475.C2137352139.C3904355907(numArray);
    }

    private static ulong C3554254475(
      [In] C4024072794.C3554254475 obj0,
      [In] C4024072794.C3904355907 obj1,
      [In] uint obj2,
      [In] bool obj3)
    {
      ulong num1;
      if (obj1.C3554254475 == 0UL)
      {
        if (obj1.C1255198513 == 0UL)
        {
          Debug.Assert(obj1.C1908338681 > 0UL);
          num1 = obj1.C1908338681 - 1UL;
        }
        else
          num1 = !obj3 ? (ulong) ((long) obj1.C1255198513 * (long) obj0.C1037565863 - (obj1.C1908338681 == 0UL ? 1L : 0L)) : obj1.C1255198513 * obj0.C1037565863 + obj1.C1908338681 - 1UL;
      }
      else
        num1 = !obj3 ? (ulong) ((long) obj0.C112844655 - (long) obj0.C1037565863 - (obj1.C1908338681 == 0UL ? 1L : 0L)) : obj0.C112844655 - obj0.C1037565863 + obj1.C1908338681 - 1UL;
      Debug.Assert(num1 <= (ulong) uint.MaxValue);
      ulong num2 = (ulong) obj2;
      ulong num3 = num2 * num2 >> 32;
      ulong num4 = num1 - 1UL - (num1 * num3 >> 32);
      ulong num5 = 0;
      if (obj1.C3554254475 > 0UL)
        num5 = (long) obj1.C1255198513 + 1L == 4L ? 0UL : (obj1.C1255198513 + 1UL) * obj0.C1037565863;
      Debug.Assert(num5 <= (ulong) uint.MaxValue);
      Debug.Assert(obj0.C112844655 <= (ulong) uint.MaxValue);
      return (num5 + num4) % obj0.C112844655;
    }

    private static void C3554254475([In] C4024072794.C3554254475 obj0)
    {
      int c3554254475 = (int) obj0.C3554254475;
      C4024072794.C3904355907[] c3904355907Array = new C4024072794.C3904355907[c3554254475];
      for (ulong index1 = 0; index1 < obj0.C3904355907; ++index1)
      {
        for (ulong index2 = 0; index2 < 4UL; ++index2)
        {
          for (int index3 = 0; index3 < c3554254475; ++index3)
          {
            C4024072794.C3904355907 state = new C4024072794.C3904355907();
            state.C3554254475 = obj0;
            state.C3554254475 = index1;
            state.C3904355907 = (ulong) index3;
            state.C1255198513 = index2;
            if (!ThreadPool.QueueUserWorkItem(new WaitCallback(C4024072794.C3554254475), (object) state))
            {
              Debug.Assert(false);
              throw new OutOfMemoryException();
            }
            c3904355907Array[index3] = state;
          }
          for (int index4 = 0; index4 < c3554254475; ++index4)
          {
            c3904355907Array[index4].C3554254475.WaitOne();
            c3904355907Array[index4].C3554254475();
          }
        }
      }
    }

    private static void C3554254475([In] object obj0)
    {
      if (!(obj0 is C4024072794.C3904355907 c3904355907))
      {
        Debug.Assert(false);
      }
      else
      {
        try
        {
          C4024072794.C3554254475 c3554254475 = c3904355907.C3554254475;
          if (c3554254475 == null)
          {
            Debug.Assert(false);
            return;
          }
          Debug.Assert(c3554254475.C3554254475 >= 16U);
          bool flag = c3554254475.C3554254475 >= 19U;
          ulong num1 = 0;
          if (c3904355907.C3554254475 == 0UL && c3904355907.C1255198513 == 0UL)
            num1 = 2UL;
          ulong num2 = (ulong) ((long) c3904355907.C3904355907 * (long) c3554254475.C112844655 + (long) c3904355907.C1255198513 * (long) c3554254475.C1037565863) + num1;
          ulong num3 = num2 % c3554254475.C112844655 == 0UL ? (ulong) ((long) num2 + (long) c3554254475.C112844655 - 1L) : num2 - 1UL;
          ulong[] numArray1 = new ulong[new IntPtr(128)];
          ulong[] numArray2 = new ulong[new IntPtr(128)];
          for (ulong index = num1; index < c3554254475.C1037565863; ++index)
          {
            if (num2 % c3554254475.C112844655 == 1UL)
              num3 = num2 - 1UL;
            ulong num4 = c3554254475.C3554254475[checked ((ulong) unchecked ((long) num3 * 128L))];
            ulong num5 = (num4 >> 32) % c3554254475.C3554254475;
            if (c3904355907.C3554254475 == 0UL && c3904355907.C1255198513 == 0UL)
              num5 = c3904355907.C3904355907;
            c3904355907.C1908338681 = index;
            ulong num6 = C4024072794.C3554254475(c3554254475, c3904355907, (uint) num4, (long) num5 == (long) c3904355907.C3904355907);
            ulong num7 = (c3554254475.C112844655 * num5 + num6) * 128UL;
            ulong num8 = num2 * 128UL;
            C4024072794.C3554254475(c3554254475.C3554254475, num3 * 128UL, num7, num8, c3904355907.C3554254475 > 0UL & flag, numArray1, numArray2);
            ++num2;
            ++num3;
          }
          C3554254475.C2137352139.C3554254475<ulong>(numArray1);
          C3554254475.C2137352139.C3554254475<ulong>(numArray2);
        }
        catch (Exception ex)
        {
          Debug.Assert(false);
        }
        try
        {
          c3904355907.C3554254475.Set();
        }
        catch (Exception ex)
        {
          Debug.Assert(false);
        }
      }
    }

    private static void C1908338681()
    {
      if (C4024072794.C3554254475 == null)
      {
        int[][] numArray = new int[8][];
        Debug.Assert(numArray.Length == 8);
        int num = 0;
        for (int index1 = 0; index1 < 8; ++index1)
        {
          numArray[index1] = new int[16];
          for (int index2 = 0; index2 < 16; ++index2)
          {
            numArray[index1][index2] = num;
            ++num;
          }
        }
        C4024072794.C3554254475 = numArray;
      }
      if (C4024072794.C3904355907 != null)
        return;
      int[][] numArray1 = new int[8][];
      for (int index3 = 0; index3 < 8; ++index3)
      {
        numArray1[index3] = new int[16];
        for (int index4 = 0; index4 < 16; ++index4)
        {
          int num = index4 / 2;
          numArray1[index3][index4] = 2 * index3 + 16 * num + (index4 & 1);
        }
      }
      C4024072794.C3904355907 = numArray1;
    }

    private static void C3554254475(
      [In] ulong[] obj0,
      [In] ulong obj1,
      [In] ulong obj2,
      [In] ulong obj3,
      [In] bool obj4,
      [In] ulong[] obj5,
      [In] ulong[] obj6)
    {
      C4024072794.C3554254475(obj5, 0UL, obj0, obj2);
      C4024072794.C3904355907(obj5, 0UL, obj0, obj1);
      C4024072794.C3554254475(obj6, 0UL, obj5, 0UL);
      if (obj4)
        C4024072794.C3904355907(obj6, 0UL, obj0, obj3);
      int[][] c3554254475 = C4024072794.C3554254475;
      int[][] c3904355907 = C4024072794.C3904355907;
      for (int index = 0; index < 8; ++index)
        C4024072794.C3554254475(obj5, c3554254475[index]);
      for (int index = 0; index < 8; ++index)
        C4024072794.C3554254475(obj5, c3904355907[index]);
      C4024072794.C3554254475(obj0, obj3, obj6, 0UL);
      C4024072794.C3904355907(obj0, obj3, obj5, 0UL);
    }

    private static byte[] C3554254475([In] C4024072794.C3554254475 obj0, [In] int obj1, [In] C3904355907.C3707901625 obj2)
    {
      ulong[] numArray1 = new ulong[new IntPtr(128)];
      C4024072794.C3554254475(numArray1, 0UL, obj0.C3554254475, (obj0.C112844655 - 1UL) * 128UL);
      for (ulong index = 1; index < obj0.C3554254475; ++index)
        C4024072794.C3904355907(numArray1, 0UL, obj0.C3554254475, (ulong) ((long) index * (long) obj0.C112844655 + (long) obj0.C112844655 - 1L) * 128UL);
      byte[] numArray2 = new byte[new IntPtr(1024)];
      C4024072794.C3554254475(numArray2, numArray1);
      byte[] numArray3 = new byte[obj1];
      C4024072794.C3554254475(numArray3, obj1, numArray2, 1024, obj2);
      C3554254475.C2137352139.C3554254475<ulong>(numArray1);
      C3554254475.C2137352139.C3904355907(numArray2);
      return numArray3;
    }

    [SpecialName]
    public override C3554254475.C3865851505 C3554254475() => C4024072794.C3554254475;

    [SpecialName]
    public override string C3904355907() => DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KF();

    public override C1304234792 C1255198513()
    {
      C1304234792 c1304234792 = base.C1255198513();
      c1304234792.C3904355907(C4024072794.C1037565863, 19U);
      c1304234792.C3904355907(C4024072794.C1908338681, 2UL);
      c1304234792.C3904355907(C4024072794.C1255198513, 1048576UL);
      c1304234792.C3904355907(C4024072794.C3904355907, 2U);
      return c1304234792;
    }

    public override void C3554254475([In] C1304234792 obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
      }
      else
      {
        Debug.Assert(C4024072794.C3554254475.Equals(obj0.C3554254475()));
        byte[] numArray = C3904355907.C2746444292.C3554254475().C3554254475(32U);
        obj0.C3554254475(C4024072794.C3554254475, numArray);
      }
    }

    public override byte[] C3554254475([In] byte[] obj0, [In] C1304234792 obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kb());
      byte[] numArray1 = obj1 != null ? obj1.C1908338681(C4024072794.C3554254475) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.JC());
      if (numArray1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kf());
      if (numArray1.Length < 8 || numArray1.Length > int.MaxValue)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kf());
      uint num1 = obj1.C3554254475(C4024072794.C3904355907, 0U);
      if (num1 < 1U || num1 > 16777215U)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KG());
      ulong num2 = obj1.C3554254475(C4024072794.C1255198513, 0UL);
      if (num2 < 8192UL || num2 > (ulong) int.MaxValue)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kg());
      ulong num3 = obj1.C3554254475(C4024072794.C1908338681, 0UL);
      if (num3 < 1UL || num3 > (ulong) uint.MaxValue)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.KH());
      uint num4 = obj1.C3554254475(C4024072794.C1037565863, 0U);
      if (num4 < 16U || num4 > 19U)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Kh());
      byte[] numArray2 = obj1.C1908338681(C4024072794.C112844655);
      byte[] numArray3 = obj1.C1908338681(C4024072794.C2746444292);
      byte[] numArray4 = C4024072794.C3554254475(obj0, numArray1, num1, num2, num3, 32, num4, numArray2, numArray3);
      if (num2 > 104857600UL)
        GC.Collect();
      return numArray4;
    }

    public override C1304234792 C3554254475([In] uint obj0)
    {
      C1304234792 c1304234792 = this.C1255198513();
      this.C3554254475(c1304234792);
      this.C3554254475(c1304234792, C4024072794.C1908338681, 1UL, (ulong) uint.MaxValue, obj0, true);
      return c1304234792;
    }

    private sealed class C3554254475
    {
      public uint C3554254475 = 0;
      public ulong C3554254475 = 0;
      public ulong C3904355907 = 0;
      public ulong C1255198513 = 0;
      public ulong C1908338681 = 0;
      public ulong C1037565863 = 0;
      public ulong C112844655 = 0;
      public ulong[] C3554254475 = (ulong[]) null;
    }

    private sealed class C3904355907
    {
      public C4024072794.C3554254475 C3554254475 = (C4024072794.C3554254475) null;
      public ManualResetEvent C3554254475 = new ManualResetEvent(false);
      public ulong C3554254475 = 0;
      public ulong C3904355907 = 0;
      public ulong C1255198513 = 0;
      public ulong C1908338681 = 0;

      public void C3554254475()
      {
        if (this.C3554254475 != null)
        {
          this.C3554254475.Close();
          this.C3554254475 = (ManualResetEvent) null;
        }
        else
          Debug.Assert(false);
      }
    }
  }
}
