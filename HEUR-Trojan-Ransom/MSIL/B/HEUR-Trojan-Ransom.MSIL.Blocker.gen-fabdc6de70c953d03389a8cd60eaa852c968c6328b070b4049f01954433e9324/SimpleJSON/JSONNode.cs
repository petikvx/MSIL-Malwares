// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: WhenAllPromi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: EC39505B-F84A-4834-9FA9-F8C42A2FB5BC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fabdc6de70c953d03389a8cd60eaa852c968c6328b070b4049f01954433e9324.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 959420692;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1070723875)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -2065518423 ^ -2103830887;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 664559804;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1112758577)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1175844294 ^ 1518060445;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1523351695;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1393804408)) % 3U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * -1109799126 ^ -1947200656;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 16048356;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1899570354)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1089151284 ^ -1969753915;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * 191442760 ^ 124972963;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -266650855;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -238846078)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1938204635 ^ -164253171;
            continue;
          case 3:
            this.Add("", aItem);
            num1 = (int) num2 * -1516941604 ^ -1394494684;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -1528331424;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1146459322)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1745553614 ^ -143288041;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1690774654 ^ -253248297;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1669111175;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1576582708)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1520342469 ^ -873236782;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1658858664 ^ -1480896740;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 593236492;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1450355472)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 419370012 ^ 238969593;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = -179011976;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -2117090706)) % 29U)
            {
              case 0:
                num2 = (int) num3 * 1151559367 ^ 2107152739;
                continue;
              case 1:
                num2 = (int) num3 * -1451911831 ^ 1581876360;
                continue;
              case 2:
                D = enumerator2.Current;
                num2 = -2109091283;
                continue;
              case 3:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * 1234932871 ^ 721667584;
                continue;
              case 4:
                goto label_21;
              case 5:
                int num4;
                num2 = num4 = num1 != 1 ? -1616425709 : (num4 = -1970790610);
                continue;
              case 6:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * -952369230 ^ 1080366417;
                continue;
              case 7:
              case 14:
                this.\u003C\u003E1__state = -1;
                num2 = -1035179966;
                continue;
              case 8:
                int num5;
                num2 = num5 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200B⁫‪‎‌⁫‬‬‏⁫⁬⁬⁯​⁮⁪‍‬⁪⁬⁬⁫‪​‍‬‮‮‌⁫⁭⁯‮‍⁬⁫⁪‏‬‌‮((IEnumerator) enumerator2) ? -1070445644 : (num5 = -1564743972);
                continue;
              case 9:
                goto label_29;
              case 10:
                num2 = (int) num3 * -559560987 ^ -1950533881;
                continue;
              case 11:
                C = (JSONNode) null;
                num2 = (int) num3 * -1195481064 ^ -1956364721;
                continue;
              case 12:
                int num6;
                num2 = num6 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200B⁫‪‎‌⁫‬‬‏⁫⁬⁬⁯​⁮⁪‍‬⁪⁬⁬⁫‪​‍‬‮‮‌⁫⁭⁯‮‍⁬⁫⁪‏‬‌‮((IEnumerator) enumerator1) ? -617348158 : (num6 = -641017529);
                continue;
              case 13:
                num2 = (int) num3 * -569771550 ^ -617561291;
                continue;
              case 15:
                num2 = (int) num3 * -179948644 ^ 1500741898;
                continue;
              case 16:
                goto label_1;
              case 17:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * -1175898476 ^ -1039585176;
                continue;
              case 18:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -1327516985 ^ 962307016;
                continue;
              case 19:
                num2 = (int) num3 * 687994379 ^ 802975090;
                continue;
              case 20:
              case 26:
                this.\u003C\u003E1__state = -4;
                D = (JSONNode) null;
                num2 = -594893636;
                continue;
              case 21:
                deepChilds = false;
                num2 = -2119387172;
                continue;
              case 22:
                C = enumerator1.Current;
                num2 = -1639928108;
                continue;
              case 23:
                num2 = (int) num3 * -946598348 ^ 1683325040;
                continue;
              case 24:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * 1164918130 ^ -848038207;
                continue;
              case 25:
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -1487232506 ^ 1483808121;
                continue;
              case 28:
                int num7 = num1 == 0 ? -573199893 : (num7 = -407785063);
                num2 = num7 ^ (int) num3 * -26848185;
                continue;
              default:
                goto label_27;
            }
          }
label_21:
          this.\u003C\u003E2__current = D;
          this.\u003C\u003E1__state = 1;
          deepChilds = true;
          goto label_29;
label_27:
          enumerator1 = (IEnumerator<JSONNode>) null;
          deepChilds = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_29:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -883590522;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1985577417)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 176041088 ^ -1808836655;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1898846429 ^ 1362692858;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1171978983;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1789667968)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1034183204 ^ 1176156591;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 392080262;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1125088247)) % 8U)
          {
            case 0:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -1307381222 ^ -1072555759;
              continue;
            case 1:
              result = 0;
              num1 = (int) num2 * 542838075 ^ -1596758628;
              continue;
            case 2:
              goto label_1;
            case 4:
              num1 = (int) num2 * -128385761 ^ -114597648;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * -569301023 ^ 1108521046;
              continue;
            case 6:
              int num3 = flag ? -829141980 : (num3 = -2044869914);
              num1 = num3 ^ (int) num2 * -1167750063;
              continue;
            case 7:
              asInt = 0;
              num1 = 215415324;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -373457474;
        bool flag;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2129496220)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -2106781747 ^ -2131739338;
              continue;
            case 1:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206A‎‬⁫‮⁯‬‫⁫⁮⁪‌‭‮‍⁬⁮‬‍‎⁮‍⁯‎‏‎​‫⁯‌​‭⁬⁮‫‎⁫‬‮‪‮(), out result);
              num1 = (int) num2 * 1434766693 ^ -2145866497;
              continue;
            case 3:
              result = 0.0f;
              num1 = (int) num2 * -1958438032 ^ -838722485;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = -90889448;
              continue;
            case 5:
              goto label_1;
            case 6:
              asFloat = result;
              num1 = (int) num2 * -580037464 ^ 1412262754;
              continue;
            case 7:
              num1 = (int) num2 * -44886218 ^ -1493070408;
              continue;
            case 8:
              int num3 = flag ? -1605243073 : (num3 = -463757031);
              num1 = num3 ^ (int) num2 * -2053544001;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1564147151;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1027800889)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1082210180 ^ 453499587;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 1793123132;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1149524897)) % 6U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 1886911787 ^ -1833796059;
              continue;
            case 1:
              int num3 = !double.TryParse(this.Value, out result) ? -624343610 : (num3 = -1371849016);
              num1 = num3 ^ (int) num2 * 671628943;
              continue;
            case 2:
              num1 = (int) num2 * 1113269465 ^ -1767530744;
              continue;
            case 3:
              goto label_1;
            case 4:
              asDouble = 0.0;
              num1 = 1468442114;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1815877369;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 585209449)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 8979062 ^ -1713115357;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -2108462139;
        bool asBool;
        bool result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -96055877)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = bool.TryParse(this.Value, out result) ? 1538177410 : (num3 = 1253121315);
              num1 = num3 ^ (int) num2 * 1044650100;
              continue;
            case 3:
              num1 = (int) num2 * -1336965058 ^ 1786781195;
              continue;
            case 4:
              asBool = !JSONNode.\u202E⁮‭‪⁯‍⁪‫‮‏‫⁫‌‍‬⁭‎⁪⁬‌⁮⁮‮⁪‪⁮‏⁮‬‏‬​‫‬‬‌​⁪‌⁭‮(this.Value);
              num1 = -1874670756;
              continue;
            case 5:
              asBool = result;
              num1 = (int) num2 * 244404365 ^ 727465777;
              continue;
            case 6:
              result = false;
              num1 = (int) num2 * -944852780 ^ -12875430;
              continue;
            case 7:
              num1 = (int) num2 * 398820183 ^ 1769806128;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = 1165123948;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1205357553)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 768993655 ^ 304942501;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -1917026117;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2114016660)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 879169748 ^ -231163045;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 788628130;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 778852232)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1237430085 ^ -1002885548;
              continue;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * 329723985 ^ 1606575139;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = 508890069;
label_2:
      uint num2;
      string str1;
      string str2;
      switch ((num2 = (uint) (num1 ^ 2073426716)) % 3U)
      {
        case 0:
          goto label_1;
        case 2:
          str2 = d.Value;
          goto label_5;
        default:
          return str1;
      }
label_4:
      str2 = (string) null;
label_5:
      str1 = str2;
      num1 = 975511542;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1751443464;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1488944809)) % 8U)
        {
          case 0:
            int num4 = !flag2 ? -251845259 : (num4 = -1883472362);
            num1 = num4 ^ (int) num2 * -1680954852;
            continue;
          case 1:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -1531115781 ^ 716300879;
            continue;
          case 3:
            num1 = (int) num2 * -996752095 ^ -1879543032;
            continue;
          case 4:
            flag1 = (object) a == b;
            num1 = 1496146530;
            continue;
          case 5:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 6:
            goto label_1;
          case 7:
            flag1 = true;
            num1 = (int) num2 * 810215922 ^ 839666029;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = 953998033;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -101113279;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -601378165)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 827481750 ^ -425725630;
            continue;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * -757602516 ^ 1299042662;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1199240996;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2042374927)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 2113718093 ^ 1991530469;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1160593963;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1373287478)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 559244461 ^ -2014132629;
            continue;
          case 2:
            goto label_1;
          case 3:
            hashCode = this.\u206A‫‏‭⁭‪⁯‌‭‌‮‬‭‪⁮​‍‬‬⁯‍⁯‫‎⁫‎⁬‭‫⁭⁫⁮⁬​‬⁭‫⁭‫‎‮();
            num1 = (int) num2 * 1587422293 ^ -2044788327;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 168646079;
      string str1;
      string str2;
      char ch1;
      int num2;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1696480348)) % 33U)
        {
          case 0:
            str3 = str1;
            num1 = (int) num3 * -726601125 ^ 1433456386;
            continue;
          case 1:
            num1 = (int) num3 * 775905959 ^ -352920067;
            continue;
          case 2:
            num1 = (int) num3 * -1857627110 ^ 1146622775;
            continue;
          case 3:
            str1 = "";
            num1 = (int) num3 * 847412521 ^ 830924749;
            continue;
          case 4:
            num1 = (int) num3 * -1029098621 ^ 1293325106;
            continue;
          case 5:
            num1 = (int) num3 * -1117699278 ^ -1083063151;
            continue;
          case 6:
            num2 = 0;
            num1 = (int) num3 * -984542280 ^ -239099639;
            continue;
          case 7:
            num1 = (int) num3 * 1356508062 ^ 2082667283;
            continue;
          case 8:
            ch1 = ch3;
            switch (ch1)
            {
              case '\b':
                goto label_10;
              case '\t':
                goto label_12;
              case '\n':
                goto label_21;
              case '\v':
                goto label_27;
              case '\f':
                goto label_13;
              case '\r':
                goto label_22;
              default:
                num1 = (int) num3 * -42437494 ^ -2030636030;
                continue;
            }
          case 9:
label_27:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, ch2.ToString());
            num1 = 1202470681;
            continue;
          case 10:
            num1 = (int) num3 * -1285542380 ^ 1670840401;
            continue;
          case 11:
            num1 = (int) num3 * -1836156332 ^ 111089721;
            continue;
          case 12:
label_13:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\f");
            num1 = 1698237809;
            continue;
          case 13:
            num1 = (int) num3 * 268251419 ^ 276389378;
            continue;
          case 14:
label_12:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\t");
            num1 = 1050260021;
            continue;
          case 15:
            num1 = (int) num3 * 459890764 ^ -310378024;
            continue;
          case 16:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\\\");
            num1 = 509520729;
            continue;
          case 18:
            ch2 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(str2, num2);
            num1 = 682163926;
            continue;
          case 19:
label_22:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\r");
            num1 = 1851371590;
            continue;
          case 20:
label_21:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\n");
            num1 = 1050260021;
            continue;
          case 21:
            num1 = (int) num3 * 2132890498 ^ -220220276;
            continue;
          case 22:
            ch3 = ch2;
            num1 = (int) num3 * -561670801 ^ 730732855;
            continue;
          case 23:
            ++num2;
            num1 = 1016948182;
            continue;
          case 24:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\\"");
            num1 = 1050260021;
            continue;
          case 25:
label_10:
            str1 = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, "\\b");
            num1 = 1690579326;
            continue;
          case 26:
            num1 = (int) num3 * -1251973439 ^ 761013185;
            continue;
          case 27:
            int num4;
            num1 = num4 = num2 < JSONNode.\u202A⁫⁮‭⁬‪​‎⁪‏‭‎⁭‪‭‏‭‌‎⁭‮⁬⁪⁪‍⁫​‎​‏⁫⁭‏‏⁭⁫⁯​⁫‏‮(str2) ? 979511672 : (num4 = 161514939);
            continue;
          case 28:
            str2 = aText;
            num1 = (int) num3 * -429781586 ^ 1047800055;
            continue;
          case 29:
            num1 = (int) num3 * 442349323 ^ 338831659;
            continue;
          case 30:
            int num5;
            num1 = num5 = ch1 != '\\' ? 1096132266 : (num5 = 1296341256);
            continue;
          case 31:
            int num6;
            num1 = num6 = ch1 == '"' ? 848621439 : (num6 = 575128776);
            continue;
          case 32:
            goto label_1;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1348839935;
      bool flag1;
      string aItem;
      int num2;
      char ch1;
      string aKey;
      char ch2;
      char ch3;
      bool flag2;
      bool flag3;
      Stack<JSONNode> jsonNodeStack;
      JSONNode jsonNode1;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      char ch4;
      JSONNode jsonNode2;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch5;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 627162490)) % 150U)
        {
          case 0:
            aKey = JSONNode.\u206C⁮‭‭‎‎⁯‫‫‌⁪‍‎‎⁯‌‍⁯⁮⁯⁭‏‭⁬‮‍‌‫⁭⁪‎⁯‬‭‪⁭⁬‬⁯⁬‮(aKey);
            num1 = (int) num3 * 1938447984 ^ 143382013;
            continue;
          case 1:
            num1 = (int) num3 * 1431070070 ^ 1273499960;
            continue;
          case 2:
            aKey = "";
            num1 = (int) num3 * 1254031220 ^ 646776517;
            continue;
          case 3:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -2105391756 ^ 855750755;
            continue;
          case 4:
          case 31:
          case 52:
          case 56:
          case 146:
label_42:
            ++num2;
            num1 = 1003615111;
            continue;
          case 5:
            aItem = "";
            num1 = (int) num3 * 1521413684 ^ -1309950318;
            continue;
          case 6:
            num1 = (int) num3 * 833963843 ^ 130855550;
            continue;
          case 7:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1929909544 ^ 1798712119;
            continue;
          case 8:
            flag10 = flag3;
            num1 = (int) num3 * 1370942528 ^ -521524134;
            continue;
          case 9:
            int num4 = jsonNode1 is JSONArray ? -1243613357 : (num4 = -972028846);
            num1 = num4 ^ (int) num3 * 377821378;
            continue;
          case 10:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, "\b");
            num1 = 1334081029;
            continue;
          case 11:
            num1 = (int) num3 * -662395081 ^ 349903050;
            continue;
          case 12:
            int num5 = flag6 ? 471690338 : (num5 = 1396105558);
            num1 = num5 ^ (int) num3 * 633356844;
            continue;
          case 13:
            string str1 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str1, str2);
            num1 = (int) num3 * -1752808029 ^ -1076436478;
            continue;
          case 14:
            switch (ch2)
            {
              case '\t':
                goto label_16;
              case '\n':
              case '\r':
                goto label_42;
              case '\v':
              case '\f':
                goto label_44;
              default:
                num1 = (int) num3 * -2043075803 ^ -1005401327;
                continue;
            }
          case 15:
label_148:
            flag8 = flag3;
            num1 = 668380472;
            continue;
          case 17:
            string str3 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str3, str4);
            num1 = (int) num3 * -1910584517 ^ 1985086225;
            continue;
          case 18:
            int num6;
            num1 = num6 = !JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aItem, "") ? 917579016 : (num6 = 321163904);
            continue;
          case 19:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 500639299 ^ -1641878667;
            continue;
          case 20:
label_118:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, "\t");
            num1 = 1664421473;
            continue;
          case 21:
            num1 = (int) num3 * -1928627076 ^ -1625280383;
            continue;
          case 22:
            ch5 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            num1 = 1545372160;
            continue;
          case 23:
            num1 = (int) num3 * 1385438445 ^ -917429476;
            continue;
          case 24:
            int num7;
            num1 = num7 = ch4 != 'f' ? 295589434 : (num7 = 1009296301);
            continue;
          case 25:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2048912766 ^ 1033473779;
            continue;
          case 26:
            num1 = (int) num3 * 1171177231 ^ -1059218947;
            continue;
          case 27:
            num1 = (int) num3 * 1342525891 ^ -1672376577;
            continue;
          case 28:
            flag5 = JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aKey, "");
            num1 = 1896544523;
            continue;
          case 29:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 604314957 ^ -1729634893;
            continue;
          case 30:
            num1 = (int) num3 * 1978686534 ^ -1786162737;
            continue;
          case 32:
            int num8;
            num1 = num8 = ch4 == 'n' ? 2020827049 : (num8 = 2030767443);
            continue;
          case 33:
            int num9 = ch4 != 'b' ? -1250666442 : (num9 = -1407256299);
            num1 = num9 ^ (int) num3 * 1420476391;
            continue;
          case 34:
label_143:
            num1 = 451049793;
            continue;
          case 35:
            num1 = (int) num3 * -708876539 ^ 896412394;
            continue;
          case 36:
            num1 = (int) num3 * 1974146111 ^ 581330028;
            continue;
          case 37:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1876248324 ^ 1464207334;
            continue;
          case 38:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -20587382 ^ 1463919054;
            continue;
          case 39:
            flag3 = false;
            num1 = (int) num3 * 1728764885 ^ 799276315;
            continue;
          case 40:
            int num10;
            num1 = num10 = ch2 == '{' ? 37466378 : (num10 = 1987886609);
            continue;
          case 41:
label_48:
            ++num2;
            num1 = 1822200024;
            continue;
          case 42:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            int num11;
            num1 = num11 = !(jsonNode1 != (object) null) ? 1885939827 : (num11 = 1831020487);
            continue;
          case 43:
            num1 = (int) num3 * -986581702 ^ -2123343362;
            continue;
          case 44:
            num1 = (int) num3 * -169968084 ^ 1348041212;
            continue;
          case 45:
            num1 = (int) num3 * -1635024128 ^ 2118117777;
            continue;
          case 46:
label_13:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, ch3.ToString());
            num1 = 1064319121;
            continue;
          case 47:
label_91:
            int num12;
            num1 = num12 = !flag3 ? 51831097 : (num12 = 1761363508);
            continue;
          case 48:
            num1 = (int) num3 * 1394167162 ^ -1715453043;
            continue;
          case 49:
            flag9 = num2 < JSONNode.\u202A⁫⁮‭⁬‪​‎⁪‏‭‎⁭‪‭‏‭‌‎⁭‮⁬⁪⁪‍⁫​‎​‏⁫⁭‏‏⁭⁫⁯​⁫‏‮(aJSON);
            num1 = 256315370;
            continue;
          case 50:
            jsonNode2 = jsonNode1;
            num1 = 1809315748;
            continue;
          case 51:
            ch3 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            num1 = (int) num3 * -309753770 ^ 147734503;
            continue;
          case 53:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, "\n");
            num1 = 584348077;
            continue;
          case 54:
            flag7 = jsonNode1 != (object) null;
            num1 = (int) num3 * -790041484 ^ -2070931522;
            continue;
          case 55:
            jsonNodeStack.Pop();
            flag1 = JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aItem, "");
            num1 = 154313624;
            continue;
          case 57:
label_16:
            int num13;
            num1 = num13 = flag3 ? 894644217 : (num13 = 1486125675);
            continue;
          case 58:
            int num14 = ch2 <= ',' ? 477830604 : (num14 = 1411084675);
            num1 = num14 ^ (int) num3 * 936398423;
            continue;
          case 59:
            string s = JSONNode.\u202D⁬⁯‎​⁯‫⁪‬⁭‍⁪‫‪‭​‍‏⁮‫⁫‭⁮‪​‎⁪‏⁮‍‏⁬⁫⁪‭⁯‮⁫⁬⁯‮(aJSON, num2 + 1, 4);
            string str5 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str5, str6);
            num2 += 4;
            num1 = (int) num3 * -325491422 ^ 843853453;
            continue;
          case 60:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1806337150 ^ -1878285297;
            continue;
          case 61:
            int num15;
            num1 = num15 = jsonNodeStack.Count != 0 ? 104484521 : (num15 = 333986521);
            continue;
          case 62:
            num1 = (int) num3 * -1499047569 ^ -1873940594;
            continue;
          case 63:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 283374628 ^ 958040896;
            continue;
          case 64:
            switch (ch4)
            {
              case 'r':
                goto label_75;
              case 's':
                goto label_13;
              case 't':
                goto label_118;
              case 'u':
                goto label_143;
              default:
                num1 = 687111717;
                continue;
            }
          case 65:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 763613038 ^ -1904726321;
            continue;
          case 66:
            aKey = "";
            aItem = "";
            num1 = 1832111119;
            continue;
          case 67:
            num1 = (int) num3 * 797081395 ^ 125062980;
            continue;
          case 68:
            num1 = (int) num3 * -1224893812 ^ 2028059931;
            continue;
          case 69:
            goto label_137;
          case 70:
            int num16;
            num1 = num16 = ch2 == '"' ? 137830609 : (num16 = 260108104);
            continue;
          case 71:
            num1 = (int) num3 * -259058513 ^ -1437160320;
            continue;
          case 72:
            num1 = (int) num3 * 1363150302 ^ 1281661845;
            continue;
          case 73:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, "\f");
            num1 = 2058154487;
            continue;
          case 74:
            int num17 = flag11 ? -1809639454 : (num17 = -1683739165);
            num1 = num17 ^ (int) num3 * 1335867829;
            continue;
          case 75:
            string str7 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str7, str8);
            num1 = (int) num3 * -917108184 ^ 1557037373;
            continue;
          case 76:
            aItem = "";
            flag2 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 1807828748 ^ -654491093;
            continue;
          case 77:
            num1 = (int) num3 * -925836922 ^ 1419294386;
            continue;
          case 78:
            num1 = (int) num3 * 42796566 ^ 485897658;
            continue;
          case 79:
            num1 = (int) num3 * -762012661 ^ 456221797;
            continue;
          case 80:
            int num18;
            num1 = num18 = ch2 == ',' ? 267918912 : (num18 = 1625675888);
            continue;
          case 81:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 210137370 ^ 1349496658;
            continue;
          case 82:
            int num19 = ch2 != ':' ? 1529162550 : (num19 = 331548737);
            num1 = num19 ^ (int) num3 * -1663865464;
            continue;
          case 83:
            string str9 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str9, str10);
            num1 = (int) num3 * 1782270376 ^ 1613937114;
            continue;
          case 84:
label_75:
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(aItem, "\r");
            num1 = 1238023625;
            continue;
          case 85:
            num1 = (int) num3 * -573112972 ^ -555175550;
            continue;
          case 86:
            ch2 = ch5;
            num1 = (int) num3 * 956444725 ^ 1233740946;
            continue;
          case 87:
            num1 = (int) num3 * -1486370043 ^ 1294949674;
            continue;
          case 88:
            num1 = (int) num3 * 1482041321 ^ 521089348;
            continue;
          case 89:
            int num20;
            num1 = num20 = ch2 > ']' ? 601690776 : (num20 = 1289676694);
            continue;
          case 90:
            num1 = (int) num3 * 235599964 ^ -1442197308;
            continue;
          case 91:
            num1 = (int) num3 * -1931012734 ^ 605928018;
            continue;
          case 92:
            aItem = "";
            num1 = (int) num3 * 1097557886 ^ 1134563553;
            continue;
          case 93:
            num1 = (int) num3 * -1071682310 ^ 439928945;
            continue;
          case 94:
            num1 = 1751808230;
            continue;
          case 95:
            num1 = 917579016;
            continue;
          case 96:
            goto label_67;
          case 97:
            num1 = (int) num3 * -1017480303 ^ 147989068;
            continue;
          case 98:
            int num21 = flag1 ? 261553758 : (num21 = 1675724252);
            num1 = num21 ^ (int) num3 * 1878401117;
            continue;
          case 99:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -368292710 ^ 1816240464;
            continue;
          case 100:
            int num22;
            num1 = num22 = !JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aKey, "") ? 339464207 : (num22 = 203750266);
            continue;
          case 101:
            aKey = "";
            num1 = 1330049746;
            continue;
          case 102:
            int num23 = flag9 ? -821497318 : (num23 = -352687423);
            num1 = num23 ^ (int) num3 * 1561586990;
            continue;
          case 103:
            ch4 = ch3;
            num1 = (int) num3 * 362791886 ^ -1799282188;
            continue;
          case 104:
            num1 = 1885939827;
            continue;
          case 105:
            string str11 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str11, str12);
            num1 = (int) num3 * 1253624131 ^ 963399446;
            continue;
          case 106:
            int num24;
            num1 = num24 = !JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aKey, "") ? 753485276 : (num24 = 2083584597);
            continue;
          case 107:
            num1 = (int) num3 * -681520442 ^ -1759364760;
            continue;
          case 108:
            int num25;
            num1 = num25 = ch2 == '}' ? 1788954171 : (num25 = 2132412781);
            continue;
          case 109:
label_44:
            string str13 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str13, str14);
            num1 = 1028881859;
            continue;
          case 110:
            int num26;
            num1 = num26 = JSONNode.\u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮(aKey, "") ? 655020219 : (num26 = 2031024584);
            continue;
          case 111:
            num1 = 1703302400;
            continue;
          case 112:
            switch (ch2)
            {
              case '[':
                goto label_148;
              case '\\':
                goto label_48;
              case ']':
                goto label_91;
              default:
                num1 = 1655721240;
                continue;
            }
          case 113:
            num1 = (int) num3 * -649754928 ^ -2013430815;
            continue;
          case 114:
            num1 = (int) num3 * -964134180 ^ -1568050122;
            continue;
          case 115:
            flag6 = flag3;
            num1 = (int) num3 * -1398759544 ^ 1343927114;
            continue;
          case 116:
            int num27;
            num1 = num27 = flag3 ? 702473080 : (num27 = 1588210852);
            continue;
          case 117:
            int num28 = !flag5 ? 2127109759 : (num28 = 1531280554);
            num1 = num28 ^ (int) num3 * 1893720981;
            continue;
          case 118:
            aKey = "";
            num1 = 897609421;
            continue;
          case 119:
            int num29 = !(jsonNode1 is JSONArray) ? 686805723 : (num29 = 998047472);
            num1 = num29 ^ (int) num3 * -1288274537;
            continue;
          case 120:
            int num30;
            num1 = num30 = ch2 == ' ' ? 1558318525 : (num30 = 839746756);
            continue;
          case 121:
            num1 = (int) num3 * 1568787956 ^ 1416595558;
            continue;
          case 122:
            num1 = 1255931334;
            continue;
          case 123:
            aKey = aItem;
            aItem = "";
            num1 = 1364343350;
            continue;
          case 124:
            num1 = (int) num3 * -1452102705 ^ 1717246477;
            continue;
          case 125:
            goto label_1;
          case 126:
            int num31 = ch4 > 'f' ? 443940206 : (num31 = 1708426691);
            num1 = num31 ^ (int) num3 * 1551014527;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * 1354527323 ^ 1085319435;
            continue;
          case 128:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 856053091;
            continue;
          case 129:
            flag3 = !flag3;
            num1 = 1384340786;
            continue;
          case 130:
            int num32 = !flag7 ? 1190337054 : (num32 = 493945181);
            num1 = num32 ^ (int) num3 * 1301801050;
            continue;
          case 131:
            num1 = (int) num3 * -604615769 ^ 1983979821;
            continue;
          case 132:
            int num33 = flag8 ? -109954381 : (num33 = -588292020);
            num1 = num33 ^ (int) num3 * 122019971;
            continue;
          case 133:
            int num34 = !flag2 ? -1811208883 : (num34 = -1510717076);
            num1 = num34 ^ (int) num3 * 1907674239;
            continue;
          case 134:
            string str15 = aItem;
            ch1 = JSONNode.\u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮(aJSON, num2);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮(str15, str16);
            num1 = (int) num3 * -779082979 ^ 1277473032;
            continue;
          case 135:
            flag11 = flag3;
            num1 = 1228713666;
            continue;
          case 136:
            int num35 = ch2 > ' ' ? 1370685530 : (num35 = 1864272228);
            num1 = num35 ^ (int) num3 * 927272214;
            continue;
          case 137:
            num1 = (int) num3 * -1160468912 ^ 1670719260;
            continue;
          case 138:
            num1 = (int) num3 * 1487494027 ^ -1717850349;
            continue;
          case 139:
            aKey = JSONNode.\u206C⁮‭‭‎‎⁯‫‫‌⁪‍‎‎⁯‌‍⁯⁮⁯⁭‏‭⁬‮‍‌‫⁭⁪‎⁯‬‭‪⁭⁬‬⁯⁬‮(aKey);
            num1 = (int) num3 * 1852191364 ^ 1501768807;
            continue;
          case 140:
            aKey = JSONNode.\u206C⁮‭‭‎‎⁯‫‫‌⁪‍‎‎⁯‌‍⁯⁮⁯⁭‏‭⁬‮‍‌‫⁭⁪‎⁯‬‭‪⁭⁬‬⁯⁬‮(aKey);
            int num36 = !(jsonNode1 is JSONArray) ? -1299170156 : (num36 = -1857975753);
            num1 = num36 ^ (int) num3 * -417864071;
            continue;
          case 141:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -692411424 ^ 502610713;
            continue;
          case 142:
            int num37 = flag10 ? 2127745761 : (num37 = 855089664);
            num1 = num37 ^ (int) num3 * -466748264;
            continue;
          case 143:
            int num38 = !flag4 ? -1186610731 : (num38 = -602491504);
            num1 = num38 ^ (int) num3 * 847067239;
            continue;
          case 144:
            aKey = "";
            num1 = 2065913106;
            continue;
          case 145:
            num1 = (int) num3 * -174508678 ^ 105425788;
            continue;
          case 147:
            num1 = (int) num3 * -94533230 ^ -612239084;
            continue;
          case 148:
            flag4 = flag3;
            num1 = 1619155499;
            continue;
          case 149:
            int num39 = jsonNode1 is JSONArray ? -1472806328 : (num39 = -34996207);
            num1 = num39 ^ (int) num3 * -1562634909;
            continue;
          default:
            goto label_150;
        }
      }
label_67:
      throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("JSON Parse: Quotation marks seems to be messed up.");
label_137:
      throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("JSON Parse: Too many closing brackets");
label_150:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1601053313;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1802437779)) % 3U)
        {
          case 1:
            aWriter = JSONNode.\u202D‮⁫‎‍‍‪⁮⁮‏⁭‫⁬⁫‌‫‪⁬⁬‎⁪‭⁫​‍⁫‍‬‍‬⁪‍​‎‫⁪‌‫‫‭‮(aData);
            num1 = (int) num2 * 525625488 ^ 1624409424;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.Serialize(aWriter);
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202D‬‫‌​‮‮⁮‭‏​‭‭‌⁯‌⁬⁮⁯‪⁯⁬‎‬‪⁮‬‭⁭‌⁬⁭‏‌⁭‭⁭‮⁯‮(JSONNode.\u202D⁬‫​‍‌‍‪​⁫‪⁮⁫⁬​‎‍‭‍‭⁮‎⁪⁭⁯‏‪⁮‭⁯⁮‎‏‭‌⁯‫⁮‍‭‮((FileSystemInfo) JSONNode.\u200E‬‏‍‭‎‬‏⁯​‫⁭⁭‬‏‌⁬‍‫‪⁪⁪⁫‫⁭⁫‎‍‫‏‬‫​‬⁯⁫​‍⁫‏‮(JSONNode.\u200F‮‫‭​‮⁯‮‪‬⁬‭⁭‏⁯⁬‪‬‪‮⁪‭‏‪⁬‏‏⁫‫‬‎⁮⁮‌‫​⁯‏⁮⁬‮(aFileName))));
      FileStream aData = JSONNode.\u202B‫‍⁪⁫‮⁭​⁮‍‏‭⁪‭‍⁮‫‬​⁫‮​‏⁫⁯⁮‌‍‍‭‍‏⁫​‭⁫‌⁫​⁪‮(aFileName);
      try
      {
label_2:
        int num1 = 616173557;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 108031382)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * -1253601675 ^ -1394207255;
              continue;
            case 2:
              goto label_10;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 160144653 ^ -1359264004;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 32276900;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 108031382)) % 4U)
            {
              case 0:
                goto label_8;
              case 1:
                num3 = (int) num4 * 2019291644 ^ 1452440061;
                continue;
              case 2:
                JSONNode.\u200E‎‭‌‮‍‪‪⁪‌‫‮‭‮⁪⁬⁮‭‮‬⁫⁯‌⁯‎‪‫⁪⁮‍⁮‮‬⁬‌⁪⁯‬‭⁮‮((IDisposable) aData);
                num3 = (int) num4 * -61959478 ^ -1749341397;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206E‏‌‏‮⁬⁯‬‮​⁬⁫⁮​⁮⁮‌⁫‌​⁯‏‫‫⁭​‌⁫‭⁮⁫‮‍‎‎⁯⁫‍‍‎‮();
      string base64;
      try
      {
label_2:
        int num1 = 1617633600;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 613031795)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1817753388 ^ 1616351308;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -966382911 ^ 1043324818;
              continue;
            case 3:
              JSONNode.\u206B‌‎⁭‫‭⁫‫⁯⁬‫‌‏⁯‭‮‮⁭‌⁯⁫⁪‪⁮‍⁭‪‌‎‫⁯‪‬⁯⁯‪‫‪‍‍‮((Stream) aData, 0L);
              num1 = (int) num2 * -2124228604 ^ 1477602614;
              continue;
            case 4:
              goto label_2;
            case 5:
              base64 = JSONNode.\u206B‭⁬‌​‏‌‭‌‍‪⁫⁬‮⁬‪​‏‭‫​⁫‎⁪⁮‭‪‬⁯‌​‎‫‭⁫‍​‮‍‪‮(JSONNode.\u206C‪⁬⁪​‮⁬‮‭‮‬‮⁭​⁫‏‏⁮‎⁬‫‎⁬​‭‍⁪⁬⁬‪‏⁫⁪⁯‏‍‪‎⁫‏‮(aData));
              num1 = (int) num2 * 646261889 ^ 1193261806;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 1134341554;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 613031795)) % 3U)
            {
              case 1:
                JSONNode.\u200E‎‭‌‮‍‪‪⁪‌‫‮‭‮⁪⁬⁮‭‮‬⁫⁯‌⁯‎‪‫⁪⁮‍⁮‮‬⁬‌⁪⁯‬‭⁮‮((IDisposable) aData);
                num3 = (int) num4 * 1729241443 ^ 1946502437;
                continue;
              case 2:
                goto label_9;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202B‬‎‌‬‮⁪‮⁫⁪‪⁫⁬‫⁫⁭‏⁮‬‎​‭⁪⁭‎⁪‫​‍‬‭⁭‮⁪‌⁬⁬‮⁮‏‮(aReader);
label_1:
      int num1 = 58732454;
      JSONArray jsonArray;
      int num2;
      int num3;
      JSONNode jsonNode;
      int num4;
      bool flag1;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag2;
      int num5;
      bool flag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1297885814)) % 35U)
        {
          case 1:
            num1 = (int) num6 * -1392336964 ^ 1932055733;
            continue;
          case 2:
            num1 = (int) num6 * -254868957 ^ 1238525670;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏⁭‍⁫⁯⁮⁯‍‎⁯‍​‍‮‮‭​​⁪⁬‬⁪⁬‎⁪⁮‭‬⁮⁬⁯‌⁬‏⁬‏⁮‍⁮‮(aReader));
            num1 = (int) num6 * 825302801 ^ -1385123096;
            continue;
          case 4:
label_13:
            num1 = 1207429210;
            continue;
          case 5:
            int num7 = flag1 ? -1283907934 : (num7 = -114819348);
            num1 = num7 ^ (int) num6 * 895712161;
            continue;
          case 6:
            num1 = (int) num6 * -1374776222 ^ -1831730179;
            continue;
          case 7:
            num4 = 0;
            num1 = (int) num6 * 875843382 ^ 1923085831;
            continue;
          case 8:
            flag1 = num2 < num5;
            num1 = 1329249809;
            continue;
          case 9:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1635717434 ^ 1000758655;
            continue;
          case 10:
label_24:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F‍⁬‍‬⁮‮​‌‪⁭‪⁮‪‮⁯‍⁭‌⁮⁮⁭‮⁭⁬‬‌‫‍​‬⁫⁪‎‪‌⁪‮⁫‎‮(aReader));
            num1 = 1665639539;
            continue;
          case 11:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -625815874 ^ -786679697;
            continue;
          case 12:
            goto label_1;
          case 13:
label_3:
            num1 = 1559645917;
            continue;
          case 14:
label_9:
            num1 = 344920824;
            continue;
          case 15:
            num1 = (int) num6 * -1598591553 ^ -285790250;
            continue;
          case 16:
            num1 = (int) num6 * -938994804 ^ 1776583521;
            continue;
          case 17:
            num2 = 0;
            num1 = (int) num6 * 1897200646 ^ 1124516545;
            continue;
          case 18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‎‭‬‎‌​‮‮⁬‌‪⁮⁯‏‍‌⁯⁪‮⁬⁭‍⁯​‬‪⁪⁯‪‍​⁪⁪⁯‮​‎‍‫‮(aReader));
            num1 = (int) num6 * 1898682791 ^ -379066400;
            continue;
          case 19:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_32;
              case JSONBinaryTag.Class:
                goto label_36;
              case JSONBinaryTag.Value:
                goto label_24;
              case JSONBinaryTag.IntValue:
                goto label_9;
              case JSONBinaryTag.DoubleValue:
                goto label_13;
              case JSONBinaryTag.BoolValue:
                goto label_3;
              case JSONBinaryTag.FloatValue:
                goto label_6;
              default:
                num1 = (int) num6 * -2142287734 ^ -1815487956;
                continue;
            }
          case 20:
            string aKey = JSONNode.\u206F‍⁬‍‬⁮‮​‌‪⁭‪⁮‪‮⁯‍⁭‌⁮⁮⁭‮⁭⁬‬‌‫‍​‬⁫⁪‎‪‌⁪‮⁫‎‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = 1162830173;
            continue;
          case 21:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1963544172 ^ 466300767;
            continue;
          case 22:
            num3 = JSONNode.\u200F‏⁫⁫‪⁯⁬‍⁮‎⁫‍‮‏‮‌‪‭⁫‭‌⁭⁭‮⁪​⁪​⁫‫‮‌⁯⁭‮‭‍​‏⁯‮(aReader);
            num1 = (int) num6 * -559585086 ^ -671396203;
            continue;
          case 23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‏⁫⁫‪⁯⁬‍⁮‎⁫‍‮‏‮‌‪‭⁫‭‌⁭⁭‮⁪​⁪​⁫‫‮‌⁯⁭‮‭‍​‏⁯‮(aReader));
            num1 = (int) num6 * 19371152 ^ -431038835;
            continue;
          case 24:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E‎⁮⁮⁭‎⁫‏⁬‍⁫⁮‬‏⁫‌⁪‫‏‍​​⁪⁪⁯​⁫‎⁮‏‍‮⁪⁯‎⁪​⁪​‮‮(aReader));
            num1 = (int) num6 * -1202189186 ^ -2052155195;
            continue;
          case 25:
            ++num2;
            num1 = (int) num6 * 631461588 ^ 1403793399;
            continue;
          case 26:
label_36:
            num5 = JSONNode.\u200F‏⁫⁫‪⁯⁬‍⁮‎⁫‍‮‏‮‌‪‭⁫‭‌⁭⁭‮⁪​⁪​⁫‫‮‌⁯⁭‮‭‍​‏⁯‮(aReader);
            jsonClass = new JSONClass();
            num1 = 955782321;
            continue;
          case 27:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -381140820 ^ 310511214;
            continue;
          case 28:
            goto label_15;
          case 29:
            int num8 = !flag2 ? 1896074346 : (num8 = 1995310937);
            num1 = num8 ^ (int) num6 * -189494008;
            continue;
          case 30:
label_6:
            num1 = 871879746;
            continue;
          case 31:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1630132498;
            continue;
          case 32:
            flag2 = num4 < num3;
            num1 = 1976976106;
            continue;
          case 33:
label_32:
            num1 = 883109797;
            continue;
          case 34:
            ++num4;
            num1 = (int) num6 * 1113915858 ^ -1184469499;
            continue;
          default:
            goto label_37;
        }
      }
label_15:
      throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮(JSONNode.\u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_37:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206D‫‏‌⁮‍⁪⁮⁪⁮‫‌‏‫⁪‮‏⁯‭‎‏⁫⁫⁯‭‮⁫⁯⁯‍​‮​⁯⁬‪⁮‍‍‭‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1247667249;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 303806234)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 491812145 ^ -1727979483;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 776911688;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 303806234)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u200E‎‭‌‮‍‪‪⁪‌‫‮‭‮⁪⁬⁮‭‮‬⁫⁯‌⁯‎‪‫⁪⁮‍⁮‮‬⁬‌⁪⁯‬‭⁮‮((IDisposable) aReader);
                num3 = (int) num4 * 1094085491 ^ 1659569664;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206A⁪⁮‌⁪⁮⁫⁮‪⁭‫​​‌⁪‍‍⁮‬‪⁯⁬‮​‬⁫‏‭‭‬‎⁯⁯⁮⁭‮‮‌‏‍‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1005396450;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -133267085)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -2090328500 ^ 551404589;
                continue;
              case 1:
                JSONNode.\u200E‎‭‌‮‍‪‪⁪‌‫‮‭‮⁪⁬⁮‭‮‬⁫⁯‌⁯‎‪‫⁪⁮‍⁮‮‬⁬‌⁪⁯‬‭⁮‮((IDisposable) aData);
                num1 = (int) num2 * 1347934621 ^ -1028908566;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u200C⁬‬⁯​​‪⁯‏⁬‏⁪‪‭⁭‌⁫⁭‪⁮‍⁯⁯⁪⁯‎‌‫​‍‬‍‍⁫⁫‫‬‍⁪‎‮(JSONNode.\u202E​‌⁭‭⁬‬⁭⁯⁫⁬⁮⁮‌‪‌‮⁭‎⁪⁭‎⁭⁮⁮⁪⁪‫‏‭⁬‍⁯⁭‍⁬⁪⁬‬⁮‮(aBase64));
      JSONNode.\u206B‌‎⁭‫‭⁫‫⁯⁬‫‌‏⁯‭‮‮⁭‌⁯⁫⁪‪⁮‍⁭‪‌‎‫⁯‪‬⁯⁯‪‫‪‍‍‮((Stream) aData, 0L);
      return JSONNode.LoadFromStream((Stream) aData);
    }

    public JSONNode()
    {
label_1:
      int num1 = -367339794;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2124461367)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1271279064 ^ 463442820;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u206A‎‬⁫‮⁯‬‫⁫⁮⁪‌‭‮‍⁬⁮‬‍‎⁮‍⁯‎‏‎​‫⁯‌​‭⁬⁮‫‎⁫‬‮‪‮() => CultureInfo.InvariantCulture;

    static bool \u202E⁮‭‪⁯‍⁪‫‮‏‫⁫‌‍‬⁭‎⁪⁬‌⁮⁮‮⁪‪⁮‏⁮‬‏‬​‫‬‬‌​⁪‌⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206A‫‏‭⁭‪⁯‌‭‌‮‬‭‪⁮​‍‬‬⁯‍⁯‫‎⁫‎⁬‭‫⁭⁫⁮⁬​‬⁭‫⁭‫‎‮() => base.GetHashCode();

    static char \u200C⁯‌‪⁮‮⁯⁮‫⁯‭⁪‫‏‍‌‪‌⁪⁪‍⁪‬⁮⁭‌⁬‍‏‫‭‬‎⁮⁫‎‏⁭⁬‏‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C⁭‏⁫‏⁫⁯⁮‭⁬‎‏‫⁫‌‫⁭‬‎‬⁪⁭‮⁭‌⁯⁭‬⁫‌‍‬⁬‍‍⁯⁭‬‮‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202A⁫⁮‭⁬‪​‎⁪‏‭‎⁭‪‭‏‭‌‎⁭‮⁬⁪⁪‍⁫​‎​‏⁫⁭‏‏⁭⁫⁯​⁫‏‮([In] string obj0) => obj0.Length;

    static string \u206C⁮‭‭‎‎⁯‫‫‌⁪‍‎‎⁯‌‍⁯⁮⁯⁭‏‭⁬‮‍‌‫⁭⁪‎⁯‬‭‪⁭⁬‬⁯⁬‮([In] string obj0) => obj0.Trim();

    static bool \u200F‬‌⁫‍​‬⁮‍‭⁪‬‪‬⁬‎‫‏‮⁫‌‮⁫⁯‪⁫‍⁫‬‪⁪⁫​‮⁫‎‭⁯⁪‮‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202A‌​⁫‬‪‏⁯⁯‫‬‏⁪‫‭‮‮​‌‬‫⁪‫⁪‍‮⁫⁭‮‍‌⁪‮‮⁮‍⁬‮‫‏‮([In] string obj0) => new Exception(obj0);

    static string \u202D⁬⁯‎​⁯‫⁪‬⁭‍⁪‫‪‭​‍‏⁮‫⁫‭⁮‪​‎⁪‏⁮‍‏⁬⁫⁪‭⁯‮⁫⁬⁯‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202D‮⁫‎‍‍‪⁮⁮‏⁭‫⁬⁫‌‫‪⁬⁬‎⁪‭⁫​‍⁫‍‬‍‬⁪‍​‎‫⁪‌‫‫‭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F‮‫‭​‮⁯‮‪‬⁬‭⁭‏⁯⁬‪‬‪‮⁪‭‏‪⁬‏‏⁫‫‬‎⁮⁮‌‫​⁯‏⁮⁬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200E‬‏‍‭‎‬‏⁯​‫⁭⁭‬‏‌⁬‍‫‪⁪⁪⁫‫⁭⁫‎‍‫‏‬‫​‬⁯⁫​‍⁫‏‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D⁬‫​‍‌‍‪​⁫‪⁮⁫⁬​‎‍‭‍‭⁮‎⁪⁭⁯‏‪⁮‭⁯⁮‎‏‭‌⁯‫⁮‍‭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202D‬‫‌​‮‮⁮‭‏​‭‭‌⁯‌⁬⁮⁯‪⁯⁬‎‬‪⁮‬‭⁭‌⁬⁭‏‌⁭‭⁭‮⁯‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202B‫‍⁪⁫‮⁭​⁮‍‏‭⁪‭‍⁮‫‬​⁫‮​‏⁫⁯⁮‌‍‍‭‍‏⁫​‭⁫‌⁫​⁪‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200E‎‭‌‮‍‪‪⁪‌‫‮‭‮⁪⁬⁮‭‮‬⁫⁯‌⁯‎‪‫⁪⁮‍⁮‮‬⁬‌⁪⁯‬‭⁮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206E‏‌‏‮⁬⁯‬‮​⁬⁫⁮​⁮⁮‌⁫‌​⁯‏‫‫⁭​‌⁫‭⁮⁫‮‍‎‎⁯⁫‍‍‎‮() => new MemoryStream();

    static void \u206B‌‎⁭‫‭⁫‫⁯⁬‫‌‏⁯‭‮‮⁭‌⁯⁫⁪‪⁮‍⁭‪‌‎‫⁯‪‬⁯⁯‪‫‪‍‍‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206C‪⁬⁪​‮⁬‮‭‮‬‮⁭​⁫‏‏⁮‎⁬‫‎⁬​‭‍⁪⁬⁬‪‏⁫⁪⁯‏‍‪‎⁫‏‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206B‭⁬‌​‏‌‭‌‍‪⁫⁬‮⁬‪​‏‭‫​⁫‎⁪⁮‭‪‬⁯‌​‎‫‭⁫‍​‮‍‪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202B‬‎‌‬‮⁪‮⁫⁪‪⁫⁬‫⁫⁭‏⁮‬‎​‭⁪⁭‎⁪‫​‍‬‭⁭‮⁪‌⁬⁬‮⁮‏‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F‏⁫⁫‪⁯⁬‍⁮‎⁫‍‮‏‮‌‪‭⁫‭‌⁭⁭‮⁪​⁪​⁫‫‮‌⁯⁭‮‭‍​‏⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206F‍⁬‍‬⁮‮​‌‪⁭‪⁮‪‮⁯‍⁭‌⁮⁮⁭‮⁭⁬‬‌‫‍​‬⁫⁪‎‪‌⁪‮⁫‎‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200E‎⁮⁮⁭‎⁫‏⁬‍⁫⁮‬‏⁫‌⁪‫‏‍​​⁪⁪⁯​⁫‎⁮‏‍‮⁪⁯‎⁪​⁪​‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202C‎‭‬‎‌​‮‮⁬‌‪⁮⁯‏‍‌⁯⁪‮⁬⁭‍⁯​‬‪⁪⁯‪‍​⁪⁪⁯‮​‎‍‫‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C‏⁭‍⁫⁯⁮⁯‍‎⁯‍​‍‮‮‭​​⁪⁬‬⁪⁬‎⁪⁮‭‬⁮⁬⁯‌⁬‏⁬‏⁮‍⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206D‫‏‌⁮‍⁪⁮⁪⁮‫‌‏‫⁪‮‏⁯‭‎‏⁫⁫⁯‭‮⁫⁯⁯‍​‮​⁯⁬‪⁮‍‍‭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206A⁪⁮‌⁪⁮⁫⁮‪⁭‫​​‌⁪‍‍⁮‬‪⁯⁬‮​‬⁫‏‭‭‬‎⁯⁯⁮⁭‮‮‌‏‍‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202E​‌⁭‭⁬‬⁭⁯⁫⁬⁮⁮‌‪‌‮⁭‎⁪⁭‎⁭⁮⁮⁪⁪‫‏‭⁬‍⁯⁭‍⁬⁪⁬‬⁮‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C⁬‬⁯​​‪⁯‏⁬‏⁪‪‭⁭‌⁫⁭‪⁮‍⁯⁯⁪⁯‎‌‫​‍‬‍‍⁫⁫‫‬‍⁪‎‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
