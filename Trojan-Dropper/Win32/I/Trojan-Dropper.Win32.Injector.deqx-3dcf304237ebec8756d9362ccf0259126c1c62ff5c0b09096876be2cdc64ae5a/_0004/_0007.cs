// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0004;
using Microsoft.Win32;
using SmartAssembly.SmartUsageCore;
using System;
using System.Runtime.InteropServices;

namespace \u0004
{
  internal static class \u0007
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    static \u0007() => \u0003.\u0002(typeof (\u0007));

    public static void \u0002()
    {
      int num1;
      int num2;
      int num3;
      try
      {
        try
        {
          while (\u0007.\u0002(\u0007.\u0001(1687)))
          {
            \u0007.\u0002(\u0007.\u0001(1692));
            if (true)
              goto label_13;
          }
label_2:
          int num4 = \u0007.\u0002(\u0007.\u0001(1733)) ? 1 : 0;
label_3:
          if (num4 != 0)
          {
            \u0007.\u0002(\u0007.\u0001(1742));
          }
          else
          {
            if (true)
            {
              if (\u0007.\u0002(\u0007.\u0001(1783)))
              {
                \u0007.\u0002(\u0007.\u0001(1792));
                goto label_13;
              }
              else if (\u0007.\u0002(\u0007.\u0001(1833)))
              {
                \u0007.\u0002(\u0007.\u0001(1850));
                goto label_13;
              }
              else if (true)
              {
                if (!\u0007.\u0002(\u0007.\u0001(1891)))
                  goto label_13;
              }
              else
                goto label_2;
            }
            \u0007.\u0002(\u0007.\u0001(1904));
          }
label_13:
          int num5;
          do
          {
            int num6 = \u001B\u0004.\u007E\u0019\u0005((object) \u0081\u0005.\u007E\u008A\u0004((object) \u0019\u0005.\u0010\u0004()));
            if (true)
              goto label_27;
label_14:
            switch (num1)
            {
              case 5:
                int num7 = \u001B\u0004.\u007E\u001A\u0005((object) \u0081\u0005.\u007E\u008A\u0004((object) \u0019\u0005.\u0010\u0004()));
                if (true)
                  goto label_28;
label_16:
                switch (num2)
                {
                  case 0:
                    \u0007.\u0002(\u0007.\u0001(1945));
                    goto label_26;
                  case 1:
                    \u0007.\u0002(\u0007.\u0001(1978));
                    goto label_26;
                  case 2:
                    \u0007.\u0002(\u0007.\u0001(2007));
                    goto label_26;
                  default:
                    goto label_26;
                }
label_28:
                num2 = num7;
                goto label_16;
              case 6:
                int num8 = \u001B\u0004.\u007E\u001A\u0005((object) \u0081\u0005.\u007E\u008A\u0004((object) \u0019\u0005.\u0010\u0004()));
                if (true)
                  goto label_29;
label_22:
                num5 = num3;
                if (true)
                {
                  switch (num5)
                  {
                    case 0:
                      \u0007.\u0002(\u0007.\u0001(2040));
                      continue;
                    case 1:
                      goto label_25;
                    default:
                      goto label_26;
                  }
                }
                else
                  goto label_17;
label_29:
                num3 = num8;
                goto label_22;
              default:
                goto label_26;
            }
label_27:
            num1 = num6;
            goto label_14;
          }
          while (false);
          goto label_26;
label_17:
          num4 = num5;
          goto label_3;
label_25:
          \u0007.\u0002(\u0007.\u0001(2081));
label_26:
          \u0007.\u0003();
          \u0007.\u0004();
          \u0007.\u0005();
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num3;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    public static void \u0003()
    {
      try
      {
        try
        {
          \u0007.\u0002(\u0090\u0004.\u0005\u0003((object) \u0007.\u0001(2118), (object) \u0016\u0005.\u0007\u0004()));
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0004.\u0002(ex);
        throw;
      }
    }

    public static void \u0004()
    {
      try
      {
        try
        {
          \u0007.\u0002(\u0092\u0004.\u0007\u0003(\u0007.\u0001(2147), \u0019\u0004.\u007E\u0017\u0007((object) \u000F\u0006.\u0016\u0007())));
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0004.\u0002(ex);
        throw;
      }
    }

    public static void \u0005()
    {
      try
      {
        try
        {
          \u0007.\u0002(\u0007.\u0001(2180) + (object) (\u0007.\u0002() ? 64 : 32));
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        \u0008.\u0004.\u0002(ex);
        throw;
      }
    }

    private static bool \u0002()
    {
      bool wow64Process;
      try
      {
        if (\u0016\u0005.\u0083\u0004() != 8)
          goto label_4;
label_1:
        int num = 0;
label_2:
        if (num == 0)
          return true;
        goto label_7;
label_4:
        num = \u0007.\u0002(\u0007.\u0001(2209), \u0007.\u0001(2226)) ? 1 : 0;
        if (true)
        {
          if (num == 0)
            goto label_12;
        }
        else
          goto label_2;
label_6:
        if (!\u0007.\u0002(\u0007.\u0002(), out wow64Process))
          goto label_12;
label_7:
        if (true)
        {
          if (true)
          {
            if (true)
            {
              if (true)
                return wow64Process;
              goto label_4;
            }
            else
              goto label_6;
          }
          else
            goto label_4;
        }
        else
          goto label_1;
label_12:
        return false;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<bool> o1 = (ValueType) wow64Process;
        \u0008.\u0004.\u0002(ex, (object) o1);
        throw;
      }
    }

    private static bool \u0002([In] string obj0, [In] string obj1)
    {
      IntPtr hModule;
      try
      {
        IntPtr num1 = \u0007.\u0002(obj0);
        if (true)
          goto label_10;
label_1:
        IntPtr num2 = hModule;
        int num3;
        if (true)
        {
          IntPtr zero = IntPtr.Zero;
          num3 = num2 == zero ? 1 : 0;
        }
        else
          goto label_8;
label_3:
        if (num3 != 0)
        {
          num3 = 0;
        }
        else
        {
          num2 = \u0007.\u0002(hModule, obj1);
          goto label_8;
        }
label_5:
        if (num3 == 0)
          return num3 != 0;
        goto label_3;
label_8:
        IntPtr zero1 = IntPtr.Zero;
        num3 = num2 != zero1 ? 1 : 0;
        if (true)
          return num3 != 0;
        goto label_5;
label_10:
        hModule = num1;
        goto label_1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<IntPtr> o1 = (ValueType) hModule;
        string o2 = obj0;
        string o3 = obj1;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
    private static extern IntPtr \u0002();

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle", CharSet = CharSet.Auto)]
    private static extern IntPtr \u0002([In] string obj0);

    [DllImport("kernel32", EntryPoint = "GetProcAddress", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern IntPtr \u0002(IntPtr hModule, [MarshalAs(UnmanagedType.LPStr)] string procName);

    [DllImport("kernel32.dll", EntryPoint = "IsWow64Process", CharSet = CharSet.Auto, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0002(IntPtr hProcess, out bool wow64Process);

    private static bool \u0002([In] string obj0)
    {
      RegistryKey registryKey1;
      bool flag;
      try
      {
        if (true)
        {
          if (true)
            goto label_17;
label_2:
          try
          {
            RegistryKey registryKey2 = \u0015\u0006.\u007E\u0084\u0007((object) Registry.LocalMachine, \u0092\u0004.\u0007\u0003(\u0007.\u0001(2247), obj0));
            if (true)
              goto label_12;
label_3:
            if (registryKey1 == null)
            {
              RegistryKey registryKey3 = \u0015\u0006.\u007E\u0084\u0007((object) Registry.LocalMachine, \u0092\u0004.\u0007\u0003(\u0007.\u0001(2308), obj0));
              if (true)
                registryKey1 = registryKey3;
            }
            do
            {
              do
              {
                if (true)
                {
                  int num = registryKey1 != null ? 1 : 0;
                  if (true)
                    flag = num != 0;
                }
              }
              while (false);
              if (false)
                break;
            }
            while (false);
            goto label_16;
label_12:
            registryKey1 = registryKey2;
            goto label_3;
          }
          finally
          {
            if (registryKey1 != null)
              \u0008\u0004.\u007E\u0081\u0007((object) registryKey1);
          }
label_17:
          registryKey1 = (RegistryKey) null;
          goto label_2;
        }
label_16:
        return flag;
      }
      catch (Exception ex)
      {
        RegistryKey o1 = registryKey1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o2 = (ValueType) flag;
        string o3 = obj0;
        \u0008.\u0004.\u0002(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }

    [\u0004.\u0008]
    public static void \u0002([FeatureName, \u000E] string featureName) => \u0006.\u0001.\u0003(featureName);
  }
}
