// Decompiled with JetBrains decompiler
// Type: 755873945405.159876482462
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using \u003755873945405;
using System;
using System.IO;

namespace \u003755873945405
{
  internal static class \u003159876482462
  {
    public static string \u003033406776279(string _param0)
    {
      string str;
      \u003159876482462.\u003482857265322(_param0, out str, out string _);
      return str;
    }

    public static void \u003482857265322(string _param0, out string _param1, out string _param2)
    {
      _param1 = (string) null;
      _param2 = (string) null;
      try
      {
        if (!Path.IsPathRooted(_param0))
          return;
        for (DirectoryInfo parent = Directory.GetParent(_param0); parent != null; parent = parent.Parent)
        {
          FileInfo[] files = parent.GetFiles("*.nuspec");
          if (files.Length != 0)
          {
            _param1 = Path.GetFileNameWithoutExtension(files[0].Name);
            _param2 = _param0.Substring(parent.FullName.Length + 1).Replace('\\', '/');
            break;
          }
        }
      }
      catch (Exception ex)
      {
      }
    }
  }
}
