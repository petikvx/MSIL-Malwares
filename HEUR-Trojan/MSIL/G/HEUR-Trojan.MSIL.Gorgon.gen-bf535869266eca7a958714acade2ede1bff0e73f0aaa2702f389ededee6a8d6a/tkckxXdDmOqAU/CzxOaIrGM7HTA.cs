// Decompiled with JetBrains decompiler
// Type: tkckxXdDmOqAU.CzxOaIrGM7HTA
// Assembly: Udby4Jt48oXkJ, Version=3.17.2.31, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 37899E89-D673-4F5B-A193-2E4DF6A54096
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-bf535869266eca7a958714acade2ede1bff0e73f0aaa2702f389ededee6a8d6a.exe

using \u0036mHL90hQ651VX;
using ceA4g63ooLxLL;
using DeEOd4t4s8aNC;
using DrtahteR2mfQY;
using HqLTLdqt37SZu;
using hujG0QbsYScYh;
using mhZ8amQVr4JAO;
using RyoVh3LEVVetm;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using u1QgJKQJKYhz7;
using ub7Ca2UAzDvyr;
using WJ76rsrub1mBk;

namespace tkckxXdDmOqAU
{
  internal class CzxOaIrGM7HTA
  {
    private readonly ZXanyxTevNgJC Detf3Mot6s0KR;
    private readonly k9GIezgLKxgFf m4hvZNVL29upL;
    private readonly string kk8xLvpOif36U;
    private readonly Up2ciG6wVdM5T mLWjGtOgt8k8x;
    private readonly string lmHd24Dqnwm2V;

    public CzxOaIrGM7HTA(
      ZXanyxTevNgJC authenticator,
      string resource,
      string clientId,
      string extraQueryParameters)
    {
      this.Detf3Mot6s0KR = authenticator;
      this.mLWjGtOgt8k8x = vmgkKHlLDILn4.b7NJHkAt5Gsmo(this.Detf3Mot6s0KR.rhafajw6KTC34);
      this.m4hvZNVL29upL = new k9GIezgLKxgFf(clientId);
      this.kk8xLvpOif36U = resource;
      this.lmHd24Dqnwm2V = extraQueryParameters;
    }

    private string HYG9tawsZ7DX2()
    {
      dooNxm6mSPOHK dooNxm6mSpohk = new dooNxm6mSPOHK(this.kk8xLvpOif36U, this.m4hvZNVL29upL);
      if (this.mLWjGtOgt8k8x != null && this.mLWjGtOgt8k8x.eZN2XN0Q86ZV4 != Guid.Empty)
        dooNxm6mSpohk["client-request-id"] = this.mLWjGtOgt8k8x.eZN2XN0Q86ZV4.ToString();
      foreach (KeyValuePair<string, string> keyValuePair in (IEnumerable<KeyValuePair<string, string>>) GJEiDscb2qzH7.VbxNU8geROHUg())
        dooNxm6mSpohk[keyValuePair.Key] = keyValuePair.Value;
      if (!string.IsNullOrWhiteSpace(this.lmHd24Dqnwm2V))
      {
        foreach (KeyValuePair<string, string> keyValuePair in \u0037BKomckZ2VHww.vvzmwqlHCT7Qk(this.lmHd24Dqnwm2V, '&', false, this.mLWjGtOgt8k8x))
        {
          if (dooNxm6mSpohk.ContainsKey(keyValuePair.Key))
            throw new LlM9VbgWu20VY("duplicate_query_parameter", string.Format((IFormatProvider) CultureInfo.CurrentCulture, "Duplicate query parameter '{0}' in extraQueryParameters", new object[1]
            {
              (object) keyValuePair.Key
            }));
        }
        dooNxm6mSpohk.kMNR5BUNiRUXl = this.lmHd24Dqnwm2V;
      }
      return new Uri(new Uri(this.Detf3Mot6s0KR.xb97RaFkayVxV), "?" + (object) dooNxm6mSpohk).AbsoluteUri;
    }

    internal Task<YPCsMswKdqs1z> mkJ29WVH4DtTI()
    {
      // ISSUE: variable of a compiler-generated type
      CzxOaIrGM7HTA.sta9QjA7nhXdM stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.fLlfETJq3RJQK = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.D7OThulUuKteh = AsyncTaskMethodBuilder<YPCsMswKdqs1z>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(EiJ5pMu5PAuU3.\u0035WBjpbIL6zBiF&) ref stateMachine).njS8Zexgfc1PG = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.D7OThulUuKteh.Start<CzxOaIrGM7HTA.sta9QjA7nhXdM>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.D7OThulUuKteh.Task;
    }

    private void HpScWU49cXFmw()
    {
      if (this.Detf3Mot6s0KR.NyQUHwnQg72Kv == kb6kJoyftgn0H.ADFS)
        throw new LlM9VbgWu20VY("invalid_authority_type", string.Format((IFormatProvider) CultureInfo.CurrentCulture, "Invalid authority type. This method overload is not supported by '{0}'", new object[1]
        {
          (object) this.Detf3Mot6s0KR.zhjvQCF1C6DTp
        }));
    }
  }
}
