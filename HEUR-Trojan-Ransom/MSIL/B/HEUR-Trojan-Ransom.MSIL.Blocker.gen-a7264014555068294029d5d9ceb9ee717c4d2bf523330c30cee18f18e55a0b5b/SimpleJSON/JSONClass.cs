// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: cDisplayClass1, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0E93EC79-9513-4BD1-8651-98C7CADA4D7F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a7264014555068294029d5d9ceb9ee717c4d2bf523330c30cee18f18e55a0b5b.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -2022018906;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1692005971)) % 6U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -422355110;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? -532364839 : (num3 = -578557137);
              num1 = num3 ^ (int) num2 * -1875219308;
              continue;
            case 4:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -789681290 ^ -1641534554;
              continue;
            case 5:
              num1 = (int) num2 * 140567027 ^ -959645577;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1898094637;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -695512833)) % 8U)
          {
            case 0:
              int num3 = flag ? 160292941 : (num3 = 401165072);
              num1 = num3 ^ (int) num2 * 1644103689;
              continue;
            case 1:
              num1 = (int) num2 * -722905134 ^ 288783232;
              continue;
            case 2:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 348129493 ^ 1223560108;
              continue;
            case 3:
              goto label_1;
            case 4:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1226671398 ^ 671856431;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * 1260189627 ^ 1313740960;
              continue;
            case 7:
              this.m_Dict.Add(aKey, value);
              num1 = -1674175511;
              continue;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 668906551;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1782231918)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 1044988012 ^ 1268697663;
              continue;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              int num4 = flag ? 1988101163 : (num4 = 1184826363);
              num1 = num4 ^ (int) num2 * -900831963;
              continue;
            case 4:
              num1 = (int) num2 * -1645186751 ^ -15191551;
              continue;
            case 5:
              goto label_1;
            case 6:
              jsonNode = (JSONNode) null;
              num1 = 279543399;
              continue;
            case 7:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 553281230 ^ -1385252338;
              continue;
            case 8:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 326398982 ^ 2111199730;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 821543276;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1594994017;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 95791556)) % 6U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              num1 = (int) num2 * 850708578 ^ -1370728298;
              continue;
            case 2:
              goto label_3;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1444331450 ^ -509530800;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              int num4 = !flag ? 1266824566 : (num4 = 2014403373);
              num1 = num4 ^ (int) num2 * 1813905137;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 1868201642;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1288993665;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1985478306)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1378498080 ^ 2013721704;
              continue;
            case 3:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1936678513 ^ 416729058;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1245892568;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -238875073)) % 15U)
        {
          case 0:
            int num3 = flag1 ? 214028811 : (num3 = 977444090);
            num1 = num3 ^ (int) num2 * 648451488;
            continue;
          case 1:
            num1 = (int) num2 * -757114314 ^ 1709742932;
            continue;
          case 2:
            num1 = (int) num2 * 616320698 ^ 1328676229;
            continue;
          case 3:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -926249317;
            continue;
          case 4:
            num1 = (int) num2 * -543650082 ^ -1349245597;
            continue;
          case 5:
            int num4 = flag2 ? -985324620 : (num4 = -1118786111);
            num1 = num4 ^ (int) num2 * -14220595;
            continue;
          case 6:
            goto label_3;
          case 7:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -1925488057 ^ 153338236;
            continue;
          case 8:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1238944797 ^ -1802438036;
            continue;
          case 9:
            flag1 = !JSONClass.\u202E‫​‫‏‬⁫‍⁮⁫⁫⁮‫⁬‪‬‌⁬‎⁮​‎‌⁬⁪⁭‌⁫⁫⁭⁬‍⁭‫⁯⁭​⁫⁮‮(aKey);
            num1 = (int) num2 * 1341462008 ^ -2077547458;
            continue;
          case 10:
            num1 = -381304301;
            continue;
          case 11:
            this.m_Dict.Add(aKey, aItem);
            num1 = -786494659;
            continue;
          case 12:
            goto label_1;
          case 13:
            num1 = (int) num2 * -259152636 ^ 2030150796;
            continue;
          case 14:
            num1 = (int) num2 * 521679408 ^ -1145027394;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 7582634;
      bool flag;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1244188232)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1775527286 ^ -1924191244;
            continue;
          case 2:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1285998265 ^ 1328934871;
            continue;
          case 3:
            JSONNode jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = 214979976;
            continue;
          case 4:
            int num3 = !flag ? 864976734 : (num3 = 571647871);
            num1 = num3 ^ (int) num2 * 1509570461;
            continue;
          case 5:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -391633465 ^ 364851468;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1916899916;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 160062297)) % 8U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = 192315501;
            continue;
          case 1:
            num1 = (int) num2 * 2004564724 ^ -1208653543;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 2128590196 ^ -1221017968;
            continue;
          case 3:
            int num4 = !flag ? -228537473 : (num4 = -1505506899);
            num1 = num4 ^ (int) num2 * 1454618002;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1290615431 ^ -1989544171;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            goto label_1;
          case 7:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = 508590490;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1815844159;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1925423675)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 815903768 ^ -243895488;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_9;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 1682129030;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1925423675)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num3 = (int) num4 * 398791453 ^ -1979269101;
              continue;
            case 2:
              goto label_6;
            default:
              goto label_9;
          }
        }
      }
label_9:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 525136888;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1861339898)) % 3U)
          {
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 322411801 ^ -1084327407;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 1934638895;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 20345762)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 959465846 ^ -303361299;
            continue;
          case 1:
            str1 = "{";
            num1 = (int) num2 * 1436494699 ^ 242927645;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? 2014996712 : (num3 = 1969817254);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 20345762)) % 9U)
          {
            case 0:
              num3 = 2014996712;
              continue;
            case 1:
              num3 = (int) num4 * -353124923 ^ 598517343;
              continue;
            case 3:
              goto label_12;
            case 4:
              num3 = (int) num4 * 912012321 ^ 1818995211;
              continue;
            case 5:
              str1 = JSONClass.\u206F⁫‌‏‎⁭‍‮‪​‍⁮‬⁪‏⁯‏⁮‫‎⁭‬⁬⁪⁯⁬‎⁭⁪‪⁫‏⁪‮‪‫‏‪⁯⁬‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202D⁪‬‮‫⁮‬‎⁯⁭‭‌⁯‍⁯​⁭‎‭‪⁭​‌⁭‭⁯‬⁪​‎‬‮‭‍⁮‏⁬⁫‬‫‮((object) current.Value)
              });
              num3 = 1327814061;
              continue;
            case 6:
              int num5 = JSONClass.\u200B‏‎⁭‎⁫‎⁮⁯⁭⁭‍‬‎⁮‎‬⁮‏‏⁯⁮‌‍‪‌‎‏‭‎‭‮‌⁭⁬‎⁪⁬⁪⁫‮(str1) <= 2 ? -1409241787 : (num5 = -1706042641);
              num3 = num5 ^ (int) num4 * -1309516574;
              continue;
            case 7:
              str1 = JSONClass.\u200B⁯⁫‫‍⁯‮‌⁬⁯‍‌‪⁫⁪⁫‫‭​⁬⁯‫⁬⁫‍‮‫⁬‪‏‌‭‏​‪⁭‏⁭‍‭‮(str1, ", ");
              num3 = (int) num4 * 1656783910 ^ -1970378497;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = 908514101;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONClass.\u200B⁯⁫‫‍⁯‮‌⁬⁯‍‌‪⁫⁪⁫‫‭​⁬⁯‫⁬⁫‍‮‫⁬‪‏‌‭‏​‪⁭‏⁭‍‭‮(str1, "}");
label_18:
      int num6 = 641853782;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 20345762)) % 3U)
        {
          case 0:
            goto label_18;
          case 1:
            num6 = (int) num7 * 192608244 ^ 1406790838;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -457032182;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1245325459)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -1332254735 ^ 117839098;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_10:
        int num3 = enumerator.MoveNext() ? -1471841899 : (num3 = -1216256684);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1245325459)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u200B⁯⁫‫‍⁯‮‌⁬⁯‍‌‪⁫⁪⁫‫‭​⁬⁯‫⁬⁫‍‮‫⁬‪‏‌‭‏​‪⁭‏⁭‍‭‮(str1, ", ");
              num3 = (int) num4 * -199108169 ^ -835908690;
              continue;
            case 1:
              str1 = JSONClass.\u206F⁫‌‏‎⁭‍‮‪​‍⁮‬⁪‏⁯‏⁮‫‎⁭‬⁬⁪⁯⁬‎⁭⁪‪⁫‏⁪‮‪‫‏‪⁯⁬‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200B⁯⁫‫‍⁯‮‌⁬⁯‍‌‪⁫⁪⁫‫‭​⁬⁯‫⁬⁫‍‮‫⁬‪‏‌‭‏​‪⁭‏⁭‍‭‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -174465207 ^ -720037351;
              continue;
            case 2:
              num3 = (int) num4 * -1355241331 ^ -28100056;
              continue;
            case 3:
              goto label_10;
            case 4:
              num3 = -1471841899;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1526293602;
              continue;
            case 7:
              int num5 = JSONClass.\u200B‏‎⁭‎⁫‎⁮⁯⁭⁭‍‬‎⁮‎‬⁮‏‏⁯⁮‌‍‪‌‎‏‭‎‭‮‌⁭⁬‎⁪⁬⁪⁫‮(str1) > 3 ? -876080062 : (num5 = -945095993);
              num3 = num5 ^ (int) num4 * 55877545;
              continue;
            case 8:
              str1 = JSONClass.\u206B‎‬‌⁬‭‎‏‍​⁭⁬‍⁬‮‫‮‏⁬‮‬‌⁯⁯‏‬‌⁪‬‭⁬‪⁬‎‌‏‏⁫​‪‮(str1, "\n", aPrefix, "   ");
              num3 = -1244586430;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u206B‎‬‌⁬‭‎‏‍​⁭⁬‍⁬‮‫‮‏⁬‮‬‌⁯⁯‏‬‌⁪‬‭⁬‪⁬‎‌‏‏⁫​‪‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = -1265596766;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1245325459)) % 4U)
        {
          case 0:
            goto label_17;
          case 2:
            num6 = (int) num7 * -1073063179 ^ 345078258;
            continue;
          case 3:
            str3 = str2;
            num6 = (int) num7 * 1964274381 ^ -266067416;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206E‮‏‫‬‌‌⁬‎‮⁭⁫‏⁯‬‌‬⁭‎⁬⁬⁬⁭‭⁪‎‮⁫​‮‏‏‬‪⁯⁫⁭‎⁫‎‮(aWriter, (byte) 2);
label_1:
      int num1 = -1580436755;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1897494113)) % 5U)
        {
          case 0:
            JSONClass.\u202D​​‏⁫⁯‪‬⁪⁯⁪⁪‌​‫‮‬‏⁮⁪⁫‍⁪‪⁪⁫‫‏⁬⁫‪‪​‮‏⁯‏‬‏‪‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1395534522 ^ -2093478643;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 407998006 ^ -1392281601;
            continue;
          case 4:
            num1 = (int) num2 * 1489839106 ^ 1962917468;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -756065614 : (num3 = -833013179);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1897494113)) % 8U)
          {
            case 0:
              num3 = -833013179;
              continue;
            case 1:
              num3 = (int) num4 * 670312813 ^ -245326743;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -859103951;
              continue;
            case 3:
              num3 = (int) num4 * -1373393044 ^ -1412968684;
              continue;
            case 4:
              JSONClass.\u206D‭​⁬‍‎‮⁫‌‪⁫⁭‭‌‍⁬‎⁭‭⁭‎‏‎⁯⁭⁬⁭​​‌‎‎‫​‮‫⁮‌‫‏‮(aWriter, current);
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1698560270 ^ 2134651350;
              continue;
            case 5:
              goto label_17;
            case 6:
              num3 = (int) num4 * 660000003 ^ 748194353;
              continue;
            case 7:
              goto label_14;
            default:
              goto label_10;
          }
        }
label_17:
        return;
label_10:;
      }
    }

    static bool \u202E‫​‫‏‬⁫‍⁮⁫⁫⁮‫⁬‪‬‌⁬‎⁮​‎‌⁬⁪⁭‌⁫⁫⁭⁬‍⁭‫⁯⁭​⁫⁮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B‏‎⁭‎⁫‎⁮⁯⁭⁭‍‬‎⁮‎‬⁮‏‏⁯⁮‌‍‪‌‎‏‭‎‭‮‌⁭⁬‎⁪⁬⁪⁫‮([In] string obj0) => obj0.Length;

    static string \u200B⁯⁫‫‍⁯‮‌⁬⁯‍‌‪⁫⁪⁫‫‭​⁬⁯‫⁬⁫‍‮‫⁬‪‏‌‭‏​‪⁭‏⁭‍‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202D⁪‬‮‫⁮‬‎⁯⁭‭‌⁯‍⁯​⁭‎‭‪⁭​‌⁭‭⁯‬⁪​‎‬‮‭‍⁮‏⁬⁫‬‫‮([In] object obj0) => obj0.ToString();

    static string \u206F⁫‌‏‎⁭‍‮‪​‍⁮‬⁪‏⁯‏⁮‫‎⁭‬⁬⁪⁯⁬‎⁭⁪‪⁫‏⁪‮‪‫‏‪⁯⁬‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B‎‬‌⁬‭‎‏‍​⁭⁬‍⁬‮‫‮‏⁬‮‬‌⁯⁯‏‬‌⁪‬‭⁬‪⁬‎‌‏‏⁫​‪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‮‏‫‬‌‌⁬‎‮⁭⁫‏⁯‬‌‬⁭‎⁬⁬⁬⁭‭⁪‎‮⁫​‮‏‏‬‪⁯⁫⁭‎⁫‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202D​​‏⁫⁯‪‬⁪⁯⁪⁪‌​‫‮‬‏⁮⁪⁫‍⁪‪⁪⁫‫‏⁬⁫‪‪​‮‏⁯‏‬‏‪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206D‭​⁬‍‎‮⁫‌‪⁫⁭‭‌‍⁬‎⁭‭⁭‎‏‎⁯⁭⁬⁭​​‌‎‎‫​‮‫⁮‌‫‏‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
