// Decompiled with JetBrains decompiler
// Type: .
// Assembly: derver, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 76892F40-3DAD-430C-AF53-E7AE49BEB72F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Generic-07a4bc5a4a12d6d36ee0484e98a39c60cb30aff0d55c88d79edf9fd137667aca.exe

using \u0005;
using System;
using System.Runtime.CompilerServices;

namespace \u0005
{
  internal class \u0002
  {
    public static int \u0001;
    public static int[] \u0001;
    public static int[] \u0002;
    public static int[] \u0003;
    public static int[] \u0004;
    public static int[] \u0005;

    static \u0002()
    {
      if (true)
        \u0002.\u0001 = Math.Min((int) ushort.MaxValue, 65531);
label_2:
      int length1 = 10;
      int length2;
      while (true)
      {
        int[] numArray = new int[length1];
        // ISSUE: field reference
        RuntimeHelpers.InitializeArray((Array) numArray, __fieldref (\u0003.\u0001));
        \u0002.\u0001 = numArray;
        if (true)
        {
          \u0002.\u0002 = new int[10]
          {
            0,
            4,
            5,
            6,
            4,
            16,
            16,
            32,
            128,
            258
          };
          \u0002.\u0003 = new int[10]
          {
            0,
            8,
            16,
            32,
            16,
            32,
            128,
            128,
            258,
            258
          };
          length2 = 10;
          if (length2 == 0)
            length1 = length2;
          else
            break;
        }
        else
          goto label_2;
      }
      int[] numArray1 = new int[length2];
      // ISSUE: field reference
      RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0003.\u0001));
      \u0002.\u0004 = numArray1;
      \u0002.\u0005 = new int[10]
      {
        0,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        2
      };
    }
  }
}
