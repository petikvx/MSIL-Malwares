// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: Ma, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E05311B-A9F1-497C-9B8A-F93F05B83D6B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b73f14efefdd00c34646305b19167c781d2fee40a69d518a5c9000a6f01fdde4.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 517838325;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1243913753)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -887516360 ^ -1942394218;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.m_Node = aNode;
            num1 = (int) num2 * 420419449 ^ 1339537663;
            continue;
          case 4:
            num1 = (int) num2 * 561648704 ^ -201251462;
            continue;
          case 5:
            this.m_Key = aKey;
            num1 = (int) num2 * -1540675584 ^ -732455617;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 661459058;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 115358315)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = this.m_Key == null;
            num1 = (int) num2 * 445184864 ^ -933198745;
            continue;
          case 2:
            num1 = (int) num2 * 1257430928 ^ 922208337;
            continue;
          case 3:
            num1 = (int) num2 * -1666223181 ^ 391472395;
            continue;
          case 4:
            num1 = (int) num2 * -1917161104 ^ 536656637;
            continue;
          case 6:
            num1 = (int) num2 * 580947594 ^ -654685047;
            continue;
          case 7:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1727089782 ^ 1499867735;
            continue;
          case 8:
            int num3 = !flag ? 1148336361 : (num3 = 577491752);
            num1 = num3 ^ (int) num2 * 726145095;
            continue;
          case 9:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1958784960 ^ -771211078;
            continue;
          case 10:
            num1 = 156269132;
            continue;
          default:
            goto label_12;
        }
      }
label_12:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -67011860;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -741422285)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 48423173 ^ -680114429;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 1802902056 ^ 1578450384;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal.Add(value);
              num1 = (int) num2 * -252193070 ^ 1758748529;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -1629268559;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1297294482)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -812877924 ^ -1225386917;
              continue;
            case 3:
              aVal.Add(aKey, value);
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -326159848 ^ -1841439204;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 1777049813;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 438789978)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal.Add(aItem);
            num1 = (int) num2 * -1386265449 ^ 1292386110;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1537401746 ^ 365055871;
            continue;
          case 4:
            num1 = (int) num2 * -1442923997 ^ 121677036;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1890386497;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 35070664)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            JSONClass aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1719593518 ^ 1185623766;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -2073389456;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1875365963)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = true;
            num1 = (int) num2 * 2048065951 ^ 1892171156;
            continue;
          case 2:
            num1 = (int) num2 * -395132966 ^ 125585002;
            continue;
          case 3:
            goto label_4;
          case 4:
            num1 = (int) num2 * 80799680 ^ -884730210;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = -193325097;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -1191638443;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1333385472)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 192296213 ^ 1821790128;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1670080929;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 889090459)) % 8U)
        {
          case 0:
            flag1 = (object) this == obj;
            num1 = 2004999343;
            continue;
          case 1:
            num1 = (int) num2 * -1672495748 ^ 1964018760;
            continue;
          case 2:
            flag2 = obj == null;
            num1 = (int) num2 * 933812864 ^ -235213072;
            continue;
          case 3:
            int num3 = flag2 ? -1742272021 : (num3 = -1945894971);
            num1 = num3 ^ (int) num2 * 226473962;
            continue;
          case 4:
            num1 = (int) num2 * -307954753 ^ -1082917896;
            continue;
          case 5:
            goto label_1;
          case 6:
            flag1 = true;
            num1 = (int) num2 * 1767981360 ^ -446540038;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag1;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = 76654291;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1885506850)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1612195532 ^ 1824980248;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 207092628;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 359314330)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1562035429 ^ -361397828;
            continue;
          case 2:
            str = "";
            num1 = (int) num2 * -1459100425 ^ 86926245;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 1566401014;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2065758924)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * -869143258 ^ -2074378902;
              continue;
            case 2:
              asInt = 0;
              num1 = (int) num2 * -808666223 ^ 1969769758;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2046553947 ^ -554429173;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -2072390063;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -412855665)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -734013671 ^ -1454650990;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -543171786 ^ -1354021760;
              continue;
            case 3:
              num1 = (int) num2 * 1903885025 ^ 1289168082;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = -2016308751;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -302811639)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 250057279 ^ 2082410663;
              continue;
            case 1:
              asFloat = 0.0f;
              num1 = (int) num2 * -1425295613 ^ -303022938;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2063241947 ^ -789231630;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -53142866;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -952026950)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 1491727810 ^ 1372819463;
              continue;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -34112962 ^ 800203962;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 40353342 ^ 252090102;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = 381024406;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1182287487)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 181616917 ^ -1387311892;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              asDouble = 0.0;
              num1 = (int) num2 * -841466766 ^ -751697035;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1145956566;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1152567311)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 638572982 ^ -645504383;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -2033769254 ^ 1536226435;
              continue;
            case 4:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1844155573 ^ -1367445655;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1229973960;
        bool asBool;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1309898821)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1247957745 ^ 678834079;
              continue;
            case 3:
              asBool = false;
              num1 = (int) num2 * 1491025201 ^ -302918513;
              continue;
            case 4:
              num1 = (int) num2 * -2077250810 ^ 1607325887;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1165203019 ^ 1399752651;
              continue;
            case 6:
              aVal = new JSONData(false);
              num1 = (int) num2 * 677565545 ^ 587227979;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
        this.Set((JSONNode) aVal);
label_1:
        int num1 = 1524587951;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1284037073)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = aVal;
              num1 = (int) num2 * 969988039 ^ -390748244;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1357244149;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1319120970)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 924754818 ^ 481307653;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -924688204 ^ -2070089137;
              continue;
            case 4:
              num1 = (int) num2 * 1809339204 ^ -1076783582;
              continue;
            case 5:
              asObject = aVal;
              num1 = (int) num2 * -976718446 ^ 640502160;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
