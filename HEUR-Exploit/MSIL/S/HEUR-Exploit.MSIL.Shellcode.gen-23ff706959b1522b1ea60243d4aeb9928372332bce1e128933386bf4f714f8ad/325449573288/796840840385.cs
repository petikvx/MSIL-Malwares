// Decompiled with JetBrains decompiler
// Type: 325449573288.796840840385
// Assembly: 569990687827, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 58118FF0-4F0E-4F7B-A626-B24D4B565FEB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-23ff706959b1522b1ea60243d4aeb9928372332bce1e128933386bf4f714f8ad.exe

using \u003058024371533;
using \u003072322574441;
using \u003289294859337;
using \u003325449573288;
using \u003607860947036;
using \u003802679321319;
using \u003823387107881;
using \u003897582011847;
using \u003919702849670;
using Microsoft.VisualStudio.Utilities.Internal;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;

namespace \u003325449573288
{
  public class \u003796840840385 : IRemoteControlClient, IDisposable
  {
    private static Action<string, IDictionary<string, object>> \u003244353787793 = new Action<string, IDictionary<string, object>>(\u003796840840385.\u003938925518895.\u003643019281583.\u003933391027316);
    private static Action<string, IDictionary<string, object>, IDictionary<string, object>> \u003813573326583 = new Action<string, IDictionary<string, object>, IDictionary<string, object>>(\u003796840840385.\u003938925518895.\u003643019281583.\u003175081865383);
    private const int \u003472376209249 = 60;
    private const int \u003897564981368 = 1380;
    private const int \u003547633270080 = 1;
    private const int \u003852270776613 = 5;
    private const int \u003746144653321 = 60;
    private const int \u003335121320132 = 1;
    private readonly int \u003661684489347 = 15000;
    private readonly int \u003476508909966;
    private readonly System.Threading.Timer \u003623668213376;
    private readonly Random \u003497478084975 = new Random();
    private readonly IRemoteControlHTTPRequestor \u003674561693778;
    private readonly SemaphoreSlim \u003114661571587 = new SemaphoreSlim(1, 1);
    private readonly CancellationTokenSource \u003668413220287 = new CancellationTokenSource();
    private readonly IFileReader \u003946190413887;
    private readonly bool \u003472558713770;
    private bool \u003750528346248;

    public \u003796840840385(
      string hostId,
      string baseUrl,
      string relativePath,
      int pollingIntervalMins = 1380,
      int theHttpRequestTimeoutSeconds = 60,
      int overrideReadFileTelemetryFrequency = 1)
      : this((IRegistryTools) new RegistryTools(), hostId, baseUrl, relativePath, pollingIntervalMins)
    {
      if (!this.\u003138050282908.\u003259581639358)
      {
        this.\u003476508909966 = Math.Min(60, theHttpRequestTimeoutSeconds);
        if (this.\u003472558713770)
          return;
        this.\u003674561693778 = (IRemoteControlHTTPRequestor) new \u003100549162658(this.\u003132474777773, this.\u003476508909966 * 1000);
        this.\u003623668213376 = new System.Threading.Timer((TimerCallback) (_param1 => TaskExtensions.SwallowException(this.\u003005373812691(_param1, this.\u003668413220287.Token))));
        this.\u003623668213376.Change(0, -1);
      }
      else
        this.\u003946190413887 = (IFileReader) new \u003240196003219(this.\u003132474777773);
    }

    internal \u003796840840385(
      IRemoteControlHTTPRequestor requestor,
      IRegistryTools theRegistryTools,
      string hostId,
      string baseUrl,
      string relativePath,
      int pollingIntervalMins = 1380,
      int httpRequestTimeoutSeconds = 60,
      int maxRandomDownloadDelaySeconds = 0)
      : this(theRegistryTools, hostId, baseUrl, relativePath, pollingIntervalMins)
    {
      this.\u003661684489347 = maxRandomDownloadDelaySeconds;
      this.\u003674561693778 = requestor;
      this.\u003623668213376 = new System.Threading.Timer((TimerCallback) (_param1 => TaskExtensions.SwallowException(this.\u003005373812691(_param1, this.\u003668413220287.Token))), (object) null, -1, -1);
    }

    internal \u003796840840385(
      IRegistryTools theRegistryTools,
      IFileReader theFileReader,
      string hostId,
      string baseUrl,
      string relativePath)
      : this(theRegistryTools, hostId, baseUrl, relativePath, 1380)
    {
      this.\u003946190413887 = theFileReader;
    }

    private \u003796840840385(
      IRegistryTools registryTools,
      string hostId,
      string baseUrl,
      string relativePath,
      int pollingIntervalMins)
    {
      this.\u003138050282908 = \u003163567084209.\u003052680111972(registryTools, hostId, baseUrl, relativePath);
      this.\u003922912779849 = Math.Max(5, pollingIntervalMins);
      int num = 0;
      try
      {
        num = Convert.ToInt32(registryTools.GetRegistryValueFromCurrentUserRoot("Software\\Microsoft\\VisualStudio\\RemoteControl", "TurnOffSwitch", (object) 0));
      }
      catch
      {
      }
      this.\u003472558713770 = num == 1;
    }

    public static Action<string, IDictionary<string, object>> \u003179635476049
    {
      get => \u003796840840385.\u003244353787793;
      set
      {
        CodeContract.RequiresArgumentNotNull<Action<string, IDictionary<string, object>>>(value, nameof (value));
        \u003796840840385.\u003244353787793 = value;
      }
    }

    public static Action<string, IDictionary<string, object>, IDictionary<string, object>> \u003554967877046
    {
      get => \u003796840840385.\u003813573326583;
      set
      {
        CodeContract.RequiresArgumentNotNull<Action<string, IDictionary<string, object>, IDictionary<string, object>>>(value, nameof (value));
        \u003796840840385.\u003813573326583 = value;
      }
    }

    public string \u003132474777773 => this.\u003138050282908.\u003821254168454;

    public int \u003922912779849 { get; }

    internal \u003163567084209 \u003138050282908 { get; }

    public Stream \u003394010793116(\u003189302834131 _param1)
    {
      if (this.\u003472558713770)
        return (Stream) null;
      if (this.\u003750528346248)
        throw new ObjectDisposedException(nameof (\u003796840840385));
      return this.\u003192958557184(_param1).Result;
    }

    public Task<Stream> \u003192958557184(\u003189302834131 _param1)
    {
      // ISSUE: variable of a compiler-generated type
      \u003796840840385.\u003174068052347 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003892307510441 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003034731778684 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003892626938300 = AsyncTaskMethodBuilder<Stream>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003019420258235&) ref stateMachine).\u003046018584174 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003892626938300.Start<\u003796840840385.\u003174068052347>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003892626938300.Task;
    }

    public void \u003894193152289()
    {
      if (this.\u003750528346248)
        return;
      if (this.\u003623668213376 != null)
        this.\u003623668213376.Dispose();
      this.\u003668413220287.Cancel();
      if (this.\u003674561693778 != null)
        this.\u003674561693778.Cancel();
      this.\u003750528346248 = true;
    }

    internal bool \u003676815774919()
    {
      if (this.\u003750528346248)
        throw new ObjectDisposedException(nameof (\u003796840840385));
      return this.\u003511690057244(new CancellationToken(false)).Result;
    }

    private Task<\u003083528900411> \u003451656068848()
    {
      // ISSUE: variable of a compiler-generated type
      \u003796840840385.\u003456037237007 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003328026651856 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003007182729004 = AsyncTaskMethodBuilder<\u003083528900411>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003796840840385.\u003174068052347&) ref stateMachine).\u003023936387473 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003007182729004.Start<\u003796840840385.\u003456037237007>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003007182729004.Task;
    }

    private Task \u003005373812691(object _param1, CancellationToken _param2)
    {
      // ISSUE: variable of a compiler-generated type
      \u003796840840385.\u003872390628240 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003676702239377 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003122896587708 = _param2;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003532830385173 = AsyncTaskMethodBuilder.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003796840840385.\u003456037237007&) ref stateMachine).\u003027218542501 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003532830385173.Start<\u003796840840385.\u003872390628240>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003532830385173.Task;
    }

    private Task<bool> \u003511690057244(CancellationToken _param1)
    {
      // ISSUE: variable of a compiler-generated type
      \u003796840840385.\u003840684413543 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003981038543792 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003084280657636 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003643653651683 = AsyncTaskMethodBuilder<bool>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003796840840385.\u003872390628240&) ref stateMachine).\u003379353985674 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003643653651683.Start<\u003796840840385.\u003840684413543>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003643653651683.Task;
    }

    private Task<\u003083528900411> \u003517114206832(bool _param1 = false)
    {
      // ISSUE: variable of a compiler-generated type
      \u003796840840385.\u003938925518895 stateMachine;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003479788172696 = this;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003318387296091 = _param1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003437283615495 = AsyncTaskMethodBuilder<\u003083528900411>.Create();
      // ISSUE: cast to a reference type
      // ISSUE: explicit reference operation
      // ISSUE: reference to a compiler-generated field
      (^(\u003796840840385.\u003840684413543&) ref stateMachine).\u003862270196791 = -1;
      // ISSUE: reference to a compiler-generated field
      stateMachine.\u003437283615495.Start<\u003796840840385.\u003938925518895>(ref stateMachine);
      // ISSUE: reference to a compiler-generated field
      return stateMachine.\u003437283615495.Task;
    }

    private void \u003546120340500(\u003083528900411 _param1)
    {
      Dictionary<string, object> dictionary1 = new Dictionary<string, object>()
      {
        {
          "VS.RemoteControl.DownloadFile.FullUrl",
          (object) this.\u003132474777773
        },
        {
          "VS.RemoteControl.DownloadFile.IsSuccess",
          (object) _param1.\u003046813656264
        },
        {
          "VS.RemoteControl.DownloadFile.HttpRequestTimeoutInSecs",
          (object) this.\u003476508909966
        },
        {
          "VS.RemoteControl.DownloadFile.IsFromCache",
          (object) _param1.\u003521594415012
        },
        {
          "VS.RemoteControl.DownloadFile.PollingIntervalInMins",
          (object) this.\u003922912779849
        }
      };
      Dictionary<string, object> dictionary2 = new Dictionary<string, object>();
      if (_param1.\u003046813656264)
      {
        dictionary1.Add("VS.RemoteControl.DownloadFile.IsNotFound", (object) (_param1.\u003908752374550 == HttpStatusCode.NotFound));
        if (_param1.\u003109862577938 != null)
          dictionary1.Add("VS.RemoteControl.DownloadFile.StreamSize", (object) _param1.\u003109862577938.Length);
        if (_param1.\u003414072407060.HasValue)
          dictionary1.Add("VS.RemoteControl.DownloadFile.AgeInSecs", (object) _param1.\u003414072407060.Value);
      }
      else
      {
        if (_param1.\u003908752374550 != HttpStatusCode.Unused)
          dictionary1.Add("VS.RemoteControl.DownloadFile.ErrorCode", (object) System.Enum.GetName(typeof (HttpStatusCode), (object) _param1.\u003908752374550));
        dictionary2.Add("VS.RemoteControl.DownloadFile.ErrorMessage", (object) _param1.\u003624818229958);
      }
      \u003796840840385.\u003554967877046("VS/RemoteControl/DownloadFile", (IDictionary<string, object>) dictionary1, (IDictionary<string, object>) dictionary2);
    }

    private bool \u003438584493470(\u003083528900411 _param1)
    {
      if (!_param1.\u003521594415012 || !_param1.\u003414072407060.HasValue)
        return false;
      int? nullable = _param1.\u003414072407060;
      int num = this.\u003922912779849 * 60;
      return nullable.GetValueOrDefault() <= num & nullable.HasValue;
    }
  }
}
