// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Identifiers.EventConsumer
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Wrappers;

namespace TYPELIBA.Identifiers
{
  public class EventConsumer : Form
  {
    private IContainer m_PropertyConsumer;
    private ToolStripContainer _AccountConsumer;
    private TextBox _SingletonConsumer;
    private TextBox templateConsumer;
    private Label _ParamsConsumer;
    private Label m_PolicyConsumer;
    private Button _RefConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public EventConsumer()
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              goto label_6;
            case 1:
            case 4:
              goto label_2;
            case 3:
              ManagerParamsID.NewExpression();
              if (EventConsumer.StopCreator())
              {
                num2 = 4;
                continue;
              }
              goto label_2;
            case 5:
              goto label_7;
            default:
              goto label_5;
          }
        }
label_2:
        this.m_PropertyConsumer = (IContainer) null;
        // ISSUE: explicit constructor call
        base.\u002Ector();
        goto label_6;
label_5:
        num1 = 0;
        continue;
label_6:
        this.PushRepository();
        num1 = 5;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void NewRepository(object setup, EventArgs connection)
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InsertRepository(object last, EventArgs ord)
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        string text1;
        string text2;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              int num3 = (int) MessageBox.Show("Author added!");
              this.templateConsumer.Text = "";
              this._SingletonConsumer.Text = "";
              num2 = 4;
              continue;
            case 1:
            case 6:
              text1 = this._SingletonConsumer.Text;
              if (EventConsumer.StopCreator())
              {
                num2 = 5;
                continue;
              }
              goto case 0;
            case 2:
              text2 = this.templateConsumer.Text;
              num2 = 6;
              continue;
            case 4:
              goto label_9;
            case 5:
              if (text2.Length > 0 && text1.Length > 0)
              {
                MethodProcess.GetConsumer(text2, text1);
                goto case 0;
              }
              else
              {
                int num4 = (int) MessageBox.Show("Invalid entry, try again.");
                if (true)
                {
                  num2 = 7;
                  continue;
                }
                goto label_11;
              }
            case 7:
              goto label_12;
            default:
              goto label_7;
          }
        }
label_7:
        num1 = 0;
      }
label_9:
      return;
label_12:
      return;
label_11:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool nodef)
    {
      int num1 = 4;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 1:
            num2 = this.m_PropertyConsumer != null ? 1 : 0;
            break;
          case 2:
          case 3:
label_7:
            this.m_PropertyConsumer.Dispose();
            goto label_8;
          case 4:
            if (!nodef)
            {
              num2 = 0;
              break;
            }
            num1 = 0;
            continue;
          case 5:
            goto label_4;
          default:
            num1 = 3;
            continue;
        }
        if (num2 != 0)
          goto label_7;
label_8:
        base.Dispose(nodef);
        num1 = 5;
      }
label_4:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PushRepository()
    {
      int num1 = 17;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            this._ParamsConsumer.AutoSize = true;
            this._ParamsConsumer.Location = new Point(12, 46);
            num2 = 3;
            break;
          case 1:
            this._AccountConsumer.SuspendLayout();
            this.SuspendLayout();
            this._AccountConsumer.BottomToolStripPanelVisible = false;
            num1 = 12;
            continue;
          case 2:
            this._AccountConsumer.PerformLayout();
            num2 = 4;
            break;
          case 3:
            this._ParamsConsumer.Name = "label2";
            this._ParamsConsumer.Size = new Size(61, 13);
            this._ParamsConsumer.TabIndex = 2;
            this._ParamsConsumer.Text = "Last Name:";
            this.templateConsumer.Location = new Point(76, 9);
            this.templateConsumer.Name = "firstNameTextBox";
            this.templateConsumer.Size = new Size(100, 20);
            this.templateConsumer.TabIndex = 3;
            num2 = 7;
            break;
          case 4:
          case 16:
            this.ResumeLayout(false);
            if (EventConsumer.StopCreator())
            {
              num1 = 19;
              continue;
            }
            goto case 8;
          case 5:
            this._SingletonConsumer.Size = new Size(100, 20);
            this._SingletonConsumer.TabIndex = 4;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.ClientSize = new Size(193, 128);
            this.Controls.Add((Control) this._AccountConsumer);
            this.Name = "InsertAuthor";
            this.Text = "Insert Author";
            this.Load += new EventHandler(this.NewRepository);
            this._AccountConsumer.ContentPanel.ResumeLayout(false);
            this._AccountConsumer.ContentPanel.PerformLayout();
            this._AccountConsumer.ResumeLayout(false);
            if (true)
            {
              num1 = 2;
              continue;
            }
            goto case 1;
          case 6:
            this._AccountConsumer.ContentPanel.Controls.Add((Control) this.templateConsumer);
            this._AccountConsumer.ContentPanel.Controls.Add((Control) this._ParamsConsumer);
            this._AccountConsumer.ContentPanel.Controls.Add((Control) this.m_PolicyConsumer);
            num2 = 11;
            break;
          case 7:
            this._SingletonConsumer.Location = new Point(76, 46);
            this._SingletonConsumer.Name = "lastNameTextBox";
            if (true)
            {
              num1 = 5;
              continue;
            }
            goto case 9;
          case 8:
            this._RefConsumer = new Button();
            if (true)
            {
              num1 = 14;
              continue;
            }
            goto case 11;
          case 9:
          case 13:
            this.m_PolicyConsumer.Size = new Size(60, 13);
            this.m_PolicyConsumer.TabIndex = 1;
            num2 = 10;
            break;
          case 10:
            this.m_PolicyConsumer.Text = "First Name:";
            num1 = 0;
            continue;
          case 11:
            this._AccountConsumer.ContentPanel.Controls.Add((Control) this._RefConsumer);
            this._AccountConsumer.ContentPanel.Size = new Size(193, 128);
            this._AccountConsumer.Dock = DockStyle.Fill;
            this._AccountConsumer.LeftToolStripPanelVisible = false;
            this._AccountConsumer.Location = new Point(0, 0);
            this._AccountConsumer.Name = "toolStripContainer1";
            this._AccountConsumer.RightToolStripPanelVisible = false;
            this._AccountConsumer.Size = new Size(193, 128);
            this._AccountConsumer.TabIndex = 1;
            this._AccountConsumer.Text = "toolStripContainer1";
            int num3 = 18;
            num1 = EventConsumer.TestCreator() ? num3 : num3;
            continue;
          case 12:
            this._AccountConsumer.ContentPanel.Controls.Add((Control) this._SingletonConsumer);
            num1 = 6;
            continue;
          case 14:
            this.m_PolicyConsumer = new Label();
            this._ParamsConsumer = new Label();
            this.templateConsumer = new TextBox();
            this._SingletonConsumer = new TextBox();
            this._AccountConsumer.ContentPanel.SuspendLayout();
            num2 = 1;
            break;
          case 15:
            this.m_PolicyConsumer.Name = "label1";
            goto case 9;
          case 17:
            this._AccountConsumer = new ToolStripContainer();
            num2 = 8;
            break;
          case 18:
            this._AccountConsumer.TopToolStripPanelVisible = false;
            this._RefConsumer.Location = new Point(76, 93);
            this._RefConsumer.Name = "addAuthorButton";
            this._RefConsumer.Size = new Size(75, 23);
            this._RefConsumer.TabIndex = 0;
            this._RefConsumer.Text = "Add";
            this._RefConsumer.UseVisualStyleBackColor = true;
            this._RefConsumer.Click += new EventHandler(this.InsertRepository);
            this.m_PolicyConsumer.AutoSize = true;
            this.m_PolicyConsumer.Location = new Point(12, 9);
            num2 = 15;
            break;
          case 19:
            goto label_10;
          default:
            num2 = 13;
            break;
        }
        num1 = num2;
      }
label_10:;
    }

    internal static bool StopCreator() => true;

    internal static bool TestCreator() => false;
  }
}
