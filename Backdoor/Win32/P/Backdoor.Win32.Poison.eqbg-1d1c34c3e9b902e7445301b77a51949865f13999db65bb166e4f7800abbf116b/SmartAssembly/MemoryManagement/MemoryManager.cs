// Decompiled with JetBrains decompiler
// Type: SmartAssembly.MemoryManagement.MemoryManager
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0007;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace SmartAssembly.MemoryManagement
{
  public sealed class MemoryManager
  {
    internal static MemoryManager \u0001;
    private long \u0001;

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0001(IntPtr _param0, int _param1, int _param2);

    private void \u0001()
    {
      Process currentProcess;
      try
      {
        try
        {
          currentProcess = Process.GetCurrentProcess();
          try
          {
            MemoryManager.\u0001(currentProcess.Handle, -1, -1);
          }
          finally
          {
            if (currentProcess == null)
              goto label_4;
label_3:
            currentProcess.Dispose();
label_4:
            if (false)
              goto label_3;
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        Process process = currentProcess;
        \u0004.\u0001(ex, (object) process, (object) this);
        throw;
      }
    }

    private void \u0001(object _param1, EventArgs _param2)
    {
      DateTime now;
      long num1;
      try
      {
        try
        {
          now = DateTime.Now;
label_1:
          long num2 = now.Ticks;
          if (true)
            goto label_5;
label_2:
          if (true)
          {
            if (num2 <= 10000000L)
              return;
            this.\u0001 = num1;
            this.\u0001();
            return;
          }
          goto label_7;
label_5:
          num1 = num2;
          if (true)
            num2 = num1;
          else
            goto label_1;
label_7:
          long num3 = this.\u0001;
          num2 -= num3;
          goto label_2;
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<long> local1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> local2 = (ValueType) now;
        object obj = _param1;
        EventArgs eventArgs = _param2;
        \u0004.\u0001(ex, (object) local1, (object) local2, (object) this, obj, (object) eventArgs);
        throw;
      }
    }

    internal MemoryManager()
    {
      DateTime now = DateTime.Now;
      this.\u0001 = now.Ticks;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      try
      {
        Application.Idle += new EventHandler(this.\u0001);
        this.\u0001();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> local = (ValueType) now;
        \u0004.\u0001(ex, (object) local, (object) this);
        throw;
      }
    }
  }
}
