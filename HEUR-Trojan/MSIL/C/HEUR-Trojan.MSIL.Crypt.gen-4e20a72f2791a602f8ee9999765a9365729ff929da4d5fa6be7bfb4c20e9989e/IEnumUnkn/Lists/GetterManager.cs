// Decompiled with JetBrains decompiler
// Type: IEnumUnkn.Lists.GetterManager
// Assembly: IEnumUnkn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA80F1E7-116A-4A8E-96EA-FFB7A6C2BB6E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-4e20a72f2791a602f8ee9999765a9365729ff929da4d5fa6be7bfb4c20e9989e.exe

using IEnumUnkn.Structs;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace IEnumUnkn.Lists
{
  internal class GetterManager
  {
    internal static Module _ObjectManager;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void UpdateStub(int typemdt)
    {
      int num1 = 4;
      if (GetterManager.PushStub())
        goto label_5;
label_1:
      Type type;
      FieldInfo[] fields = type.GetFields();
      int index = 0;
      goto label_9;
label_4:
      int num2;
      num1 = num2;
label_5:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            type = GetterManager._ObjectManager.ResolveType(33554432 + typemdt);
            if (true)
            {
              num1 = 2;
              continue;
            }
            goto label_8;
          case 1:
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          case 5:
            goto label_8;
          case 6:
            goto label_12;
          default:
            goto label_6;
        }
      }
label_3:
      FieldInfo fieldInfo;
      MethodInfo method = (MethodInfo) GetterManager._ObjectManager.ResolveMethod(fieldInfo.MetadataToken + 100663296);
      goto label_8;
label_12:
      return;
label_6:
      num2 = 5;
      goto label_4;
label_8:
      fieldInfo.SetValue((object) null, (object) (MulticastDelegate) Delegate.CreateDelegate(type, method));
      ++index;
label_9:
      if (index < fields.Length)
      {
        fieldInfo = fields[index];
        num1 = 3;
        goto label_5;
      }
      else
      {
        num2 = 6;
        goto label_4;
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public GetterManager()
    {
      ListenerManager.InitStub();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static GetterManager()
    {
      ListenerManager.InitStub();
      GetterManager._ObjectManager = typeof (GetterManager).Assembly.ManifestModule;
    }

    internal static bool PushStub() => true;

    internal static bool MapStub() => false;

    internal delegate void ReaderIndexerObject(object o);
  }
}
