// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.NET.Common.CommonNetPlatform
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Messages;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Versioning;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

namespace PreEmptive.Analytics.NET.Common
{
  public abstract class CommonNetPlatform : IPlatform, IAsyncProvider
  {
    public readonly Configuration Config;
    protected readonly ILogger Logger;

    public CommonNetPlatform(Configuration config, [Optional] ILogger logger)
    {
      this.Config = config;
      if (logger == null)
        logger = (ILogger) new BlankLogger();
      this.Logger = logger;
    }

    public virtual IXMLTransmitter CreateXMLTransmitter()
    {
      int num1 = -9750;
      int num2 = num1;
      num1 = -9750;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 0;
          if (num4 == 0)
            ;
          num4 = 1;
          if (num4 == 0)
            ;
          return (IXMLTransmitter) new XMLTransmitter(this.Config, this.Logger);
        default:
          goto case 1;
      }
    }

    public virtual AgentInfo GetAgentInfo()
    {
      int A_1 = 11;
label_1:
      AgentInfo agentInfo = new AgentInfo();
      try
      {
        Version version = Assembly.GetExecutingAssembly().GetName().Version;
        agentInfo.Version = version.Major.ToString() + PreEmptive.Analytics.Common.Utilities.Utils.a("醾", A_1) + (object) version.Minor;
      }
      catch
      {
        agentInfo.Version = PreEmptive.Analytics.Common.Utilities.Utils.a("达\uEFC0\uF3C2", A_1);
      }
      switch (true ? 1 : 0)
      {
        case 0:
        case 2:
          goto label_1;
        default:
          if (false)
            ;
          if (true)
            ;
          return agentInfo;
      }
    }

    public virtual HostInfo GetHostInfo()
    {
      int A_1 = 11;
      int num1 = 0;
      switch (num1)
      {
        default:
          HostInfo hostInfo;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              hostInfo = new HostInfo();
              num2 = 23;
              num1 = num2;
              goto default;
            default:
              string str1;
              while (true)
              {
                TargetFrameworkAttribute customAttribute;
                string str2;
                string[] strArray1;
                string[] strArray2;
                string str3;
                string[] strArray3;
                string[] strArray4;
                switch (num1)
                {
                  case 0:
                    goto label_44;
                  case 1:
                    str3 = "";
                    break;
                  case 2:
                    num2 = 12;
                    num1 = num2;
                    continue;
                  case 3:
                    str2 = strArray1[0];
                    num2 = 9;
                    num1 = num2;
                    continue;
                  case 4:
                    str3 = customAttribute.FrameworkDisplayName;
                    break;
                  case 5:
                    strArray3 = customAttribute.FrameworkName.Split(new string[1]
                    {
                      PreEmptive.Analytics.Common.Utilities.Utils.a("\uE9BE꓀뇂뛄껆ꛈꗊ\uF0CC많", A_1)
                    }, StringSplitOptions.None);
                    goto label_36;
                  case 6:
                    hostInfo.Name = CommonNetPlatform.a(string.IsNullOrEmpty(Environment.UserDomainName) ? Environment.MachineName : string.Format(PreEmptive.Analytics.Common.Utilities.Utils.a("쒾\uF1C0뻂\uEBC4볆\uF8C8뛊", A_1), (object) Environment.UserDomainName, (object) Environment.MachineName));
                    hostInfo.Locale = CultureInfo.CurrentCulture.Name;
                    customAttribute = Attribute.GetCustomAttribute(this.GetType().Assembly, typeof (TargetFrameworkAttribute)) as TargetFrameworkAttribute;
                    num2 = 22;
                    num1 = num2;
                    continue;
                  case 7:
                    if (str2.Length > 0)
                    {
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    goto case 9;
                  case 8:
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 9:
                    str1 = PreEmptive.Analytics.Common.Utilities.Utils.a("达\uEFC0\uF3C2", A_1);
                    num2 = 17;
                    num1 = num2;
                    continue;
                  case 10:
                    strArray4 = customAttribute.FrameworkName.Split(',');
                    goto label_24;
                  case 11:
                    if (string.IsNullOrEmpty(str2))
                    {
                      num2 = 14;
                      num1 = num2;
                      continue;
                    }
                    goto case 9;
                  case 12:
                    strArray3 = new string[0];
                    goto label_36;
                  case 13:
                    str1 = strArray2[1];
                    num2 = 20;
                    num1 = num2;
                    continue;
                  case 14:
                    num2 = 18;
                    num1 = num2;
                    continue;
                  case 15:
                    hostInfo.SourceLangName = !string.IsNullOrEmpty(str2) ? str2 : PreEmptive.Analytics.Common.Utilities.Utils.a("醾迀蛂釄\uE7C6諈\uA7CA곌볎ꋐ뫒뛔", A_1);
                    num2 = 0;
                    num1 = num2;
                    continue;
                  case 16:
                    strArray4 = new string[0];
                    goto label_24;
                  case 17:
label_30:
                    if (customAttribute == null)
                    {
                      num2 = 2;
                      num1 = num2;
                      continue;
                    }
                    num2 = 5;
                    num1 = num2;
                    continue;
                  case 18:
                    if (customAttribute == null)
                    {
                      num2 = 21;
                      num1 = num2;
                      continue;
                    }
                    num2 = 10;
                    num1 = num2;
                    continue;
                  case 19:
                    if (strArray2.Length == 2)
                    {
                      num2 = 13732;
                      int num3 = num2;
                      num2 = 13732;
                      int num4 = num2;
                      switch (num3 == num4 ? 1 : 0)
                      {
                        case 0:
                        case 2:
                          goto label_30;
                        default:
                          num2 = 0;
                          if (num2 == 0)
                            ;
                          num2 = 13;
                          num1 = num2;
                          continue;
                      }
                    }
                    else
                      goto case 20;
                  case 20:
                    num2 = 15;
                    num1 = num2;
                    continue;
                  case 21:
                    num2 = 16;
                    num1 = num2;
                    continue;
                  case 22:
                    if (customAttribute == null)
                    {
                      num2 = 8;
                      num1 = num2;
                      continue;
                    }
                    num2 = 4;
                    num1 = num2;
                    continue;
                  case 23:
                    try
                    {
                      hostInfo.IPAddress = ((IEnumerable<IPAddress>) Dns.GetHostAddresses(Environment.MachineName)).FirstOrDefault<IPAddress>((Func<IPAddress, bool>) (A_0 =>
                      {
                        int num5 = 27362;
                        int num6 = num5;
                        num5 = 27362;
                        int num7 = num5;
                        switch (num6 == num7)
                        {
                          case true:
                            int num8 = 1;
                            if (num8 == 0)
                              ;
                            num8 = 0;
                            if (num8 == 0)
                              ;
                            return A_0.AddressFamily == AddressFamily.InterNetwork;
                          default:
                            goto case 1;
                        }
                      })).ToString();
                    }
                    catch
                    {
                      hostInfo.IPAddress = PreEmptive.Analytics.Common.Utilities.Utils.a("达\uEFC0\uF3C2\uEBC4\uF7C6\uE7C8\uFBCA", A_1);
                    }
                    num1 = 6;
                    continue;
                  default:
                    goto label_3;
                }
                str2 = str3;
                num2 = 11;
                num1 = num2;
                continue;
label_24:
                strArray1 = strArray4;
                num2 = 1;
                if (num2 == 0)
                  ;
                num2 = 7;
                num1 = num2;
                continue;
label_36:
                strArray2 = strArray3;
                num2 = 19;
                num1 = num2;
              }
label_44:
              hostInfo.SourceLangVersion = !string.IsNullOrEmpty(str1) ? str1 : PreEmptive.Analytics.Common.Utilities.Utils.a("达\uEFC0\uF3C2", A_1);
              hostInfo.Virtualized = new bool?(false);
              return hostInfo;
          }
      }
    }

    public virtual OSInfo GetOSInfo()
    {
      int num1 = -22958;
      int num2 = num1;
      num1 = -22958;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          return new OSInfo();
        default:
          goto case 1;
      }
    }

    public virtual UserInfo GetUserInfo()
    {
      int num1 = 3692;
      int num2 = num1;
      num1 = 3692;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          return new UserInfo();
        default:
          goto case 1;
      }
    }

    public virtual string GetDefaultEndpoint()
    {
      int A_1 = 1;
      int num1 = -121;
      int num2 = num1;
      num1 = -121;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          if (true)
            ;
          if (false)
            ;
          return PreEmptive.Analytics.Common.Utilities.Utils.a("운\uD8B6钸좺鎼횾꿀ꗂ\uAAC4\uE8C6駈맊\uA8CC諎볐ꏒꇔ뻖꿘뻚\uF3DC裞蓠臢쯤듦賨駪鯬蛮鋰雲蛴\uD9F6듸黺軼賾怀搂氄椆済␊䀌樎成怒琔瀖瀘甚稜䰞䐠儢匤並䨨个第ᰮἰ䀲䌴吶ᘸ欺䠼崾ⵀ⩂㙄⽆", A_1);
        default:
          goto case 1;
      }
    }

    public virtual IList<StackInfo> GetStackInfo(Exception exception)
    {
      int A_1 = 17;
      int num1 = 0;
      switch (num1)
      {
        default:
          List<StackInfo> stackInfo;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              stackInfo = new List<StackInfo>();
              num2 = 4;
              num1 = num2;
              goto default;
            default:
              while (true)
              {
                StackTrace stackTrace1;
                StackFrame[] stackFrameArray1;
                int index;
                StackFrame stackFrame;
                MethodBase method;
                int count;
                Type declaringType;
                bool? nullable;
                StackFrame[] stackFrameArray2;
                int num3;
                StackTrace stackTrace2;
                switch (num1)
                {
                  case 0:
                    stackFrameArray2 = stackTrace1.GetFrames();
                    if (stackFrameArray2 == null)
                    {
                      num2 = 14;
                      num1 = num2;
                      continue;
                    }
                    goto label_14;
                  case 1:
                    if (declaringType.FullName == PreEmptive.Analytics.Common.Utilities.Utils.a("雄뻆뫈뿊\uA8CCꋎ\uFFD0鳒럔뷖볘룚\uA9DC", A_1))
                    {
                      num2 = 1;
                      if (num2 == 0)
                        ;
                      num2 = 24;
                      num1 = num2;
                      continue;
                    }
                    goto case 26;
                  case 2:
                    num2 = 18;
                    num1 = num2;
                    continue;
                  case 3:
                    if (nullable.GetValueOrDefault())
                    {
                      num2 = 12;
                      num1 = num2;
                      continue;
                    }
                    num2 = 21;
                    num1 = num2;
                    continue;
                  case 4:
                    if (string.IsNullOrEmpty(exception.StackTrace))
                    {
                      num2 = 30;
                      num1 = num2;
                      continue;
                    }
                    num2 = 29;
                    num1 = num2;
                    continue;
                  case 5:
label_33:
                    num2 = 17;
                    num1 = num2;
                    continue;
                  case 6:
                    num2 = 28;
                    num1 = num2;
                    continue;
                  case 7:
                    goto label_54;
                  case 8:
                    if (!declaringType.FullName.StartsWith(PreEmptive.Analytics.Common.Utilities.Utils.a("闄뗆곈車ꃌ뿎ꗐ뫒ꏔ닖\uF7D8裚닜賞", A_1)))
                    {
                      num2 = 5;
                      num1 = num2;
                      continue;
                    }
                    goto case 20;
                  case 9:
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 10:
                    if (!declaringType.FullName.StartsWith(PreEmptive.Analytics.Common.Utilities.Utils.a("闄뗆곈車ꃌ뿎ꗐ뫒ꏔ닖\uF7D8髚돜뻞跠髢釤軦諨飪", A_1)))
                    {
                      num2 = 23;
                      num1 = num2;
                      continue;
                    }
                    goto case 20;
                  case 11:
                    num3 = !nullable.HasValue ? 1 : 0;
                    goto label_22;
                  case 12:
                    num2 = 11;
                    num1 = num2;
                    continue;
                  case 13:
                    stackTrace2 = new StackTrace(true);
                    break;
                  case 14:
                    stackFrameArray2 = new StackFrame[0];
                    goto label_14;
                  case 15:
                  case 25:
                    num2 = 22;
                    num1 = num2;
                    continue;
                  case 16:
                    stackInfo.Add(new StackInfo(count, declaringType != (Type) null ? declaringType.FullName : PreEmptive.Analytics.Common.Utilities.Utils.a("郄꧆ꋈꗊꋌ룎뿐", A_1), method.Name, method.a(), stackFrame.GetFileName(), stackFrame.GetFileLineNumber().ToString()));
                    num2 = 20;
                    num1 = num2;
                    continue;
                  case 17:
                    if (declaringType != (Type) null)
                    {
                      num2 = 9;
                      num1 = num2;
                      continue;
                    }
                    goto case 26;
                  case 18:
                    if (Guid.TryParse(method.Name, out Guid _))
                      goto case 20;
                    else
                      goto label_47;
                  case 19:
                    num2 = -9294;
                    int num4 = num2;
                    num2 = -9294;
                    int num5 = num2;
                    switch (num4 == num5 ? 1 : 0)
                    {
                      case 0:
                      case 2:
                        goto label_47;
                      default:
                        num2 = 0;
                        if (num2 == 0)
                          ;
                        if (method.a() == PreEmptive.Analytics.Common.Utilities.Utils.a("雄뻆뫈뿊\uA8CCꋎ\uFFD0藒뫔뻖뷘\uF3DA铜뇞闠돢釤闦짨쟪췬ꛮ\u9FF0蟲ꗴ菶诸\uDBFA퇼\uDFFE䠀洂焄圆紈礊ⴌ☎", A_1))
                        {
                          num2 = 2;
                          num1 = num2;
                          continue;
                        }
                        goto label_48;
                    }
                  case 20:
                    ++index;
                    num2 = 25;
                    num1 = num2;
                    continue;
                  case 21:
                    num3 = 1;
                    goto label_22;
                  case 22:
                    if (index < stackFrameArray1.Length)
                    {
                      stackFrame = stackFrameArray1[index];
                      method = stackFrame.GetMethod();
                      count = stackInfo.Count;
                      declaringType = method.DeclaringType;
                      nullable = exception.Data[(object) PreEmptive.Analytics.Common.Utilities.Utils.a("賄꧆\uAAC8\uA7CA료ꯎ듐菒\uA7D4닖鳘뛚규ꯞ裠闢胤ꛦ蟨諪臬雮藰髲雴蓶뿸觺鳼鋾搀瀂", A_1)] as bool?;
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    num2 = 7;
                    num1 = num2;
                    continue;
                  case 23:
                    num2 = 8;
                    num1 = num2;
                    continue;
                  case 24:
                    num2 = 19;
                    num1 = num2;
                    continue;
                  case 26:
label_48:
                    num2 = 16;
                    num1 = num2;
                    continue;
                  case 27:
                    num2 = 10;
                    num1 = num2;
                    continue;
                  case 28:
                    if (declaringType != (Type) null)
                    {
                      num2 = 27;
                      num1 = num2;
                      continue;
                    }
                    goto case 5;
                  case 29:
                    stackTrace2 = new StackTrace(exception, true);
                    break;
                  case 30:
                    num2 = 13;
                    num1 = num2;
                    continue;
                  default:
                    goto label_3;
                }
                stackTrace1 = stackTrace2;
                num2 = 0;
                num1 = num2;
                continue;
label_14:
                stackFrameArray1 = stackFrameArray2;
                index = 0;
                num2 = 15;
                num1 = num2;
                continue;
label_22:
                if (num3 != 0)
                {
                  num2 = 6;
                  num1 = num2;
                  continue;
                }
                goto label_33;
label_47:
                num2 = 26;
                num1 = num2;
              }
label_54:
              return (IList<StackInfo>) stackInfo;
          }
      }
    }

    public virtual IList<ComponentInfo> GetComponentInfo()
    {
      int num1 = 0;
      switch (num1)
      {
        default:
          int num2;
          List<ComponentInfo> componentInfo;
          Assembly[] assemblies;
          int index;
          switch (0)
          {
            case 0:
label_3:
              num2 = 1;
              if (num2 == 0)
                ;
              num2 = -7330;
              int num3 = num2;
              num2 = -7330;
              int num4 = num2;
              switch (num3 == num4 ? 1 : 0)
              {
                case 0:
                case 2:
                  break;
                default:
                  num2 = 0;
                  if (num2 == 0)
                    ;
                  componentInfo = new List<ComponentInfo>();
                  assemblies = AppDomain.CurrentDomain.GetAssemblies();
                  index = 0;
                  num2 = 3;
                  num1 = num2;
                  goto label_2;
              }
              break;
            default:
label_2:
              while (true)
              {
                switch (num1)
                {
                  case 0:
                    if (index >= assemblies.Length)
                    {
                      num2 = 1;
                      num1 = num2;
                      continue;
                    }
                    AssemblyName name = assemblies[index].GetName();
                    componentInfo.Add(new ComponentInfo(name.Name, name.Version.ToString(), name.FullName));
                    ++index;
                    num2 = 2;
                    num1 = num2;
                    continue;
                  case 1:
                    goto label_11;
                  case 2:
                  case 3:
                    goto label_7;
                  default:
                    goto label_3;
                }
              }
label_11:
              return (IList<ComponentInfo>) componentInfo;
          }
label_7:
          num2 = 0;
          num1 = num2;
          goto label_2;
      }
    }

    public virtual ISettingsStore GetSettingsStore()
    {
      if (!NetUtilities.RunningInMono())
        return (ISettingsStore) new SettingsStore(this.Config.ApplicationID.ToString());
      switch (true ? 1 : 0)
      {
        case 0:
        case 2:
          return (ISettingsStore) new MonoSettingsStore(this.Config.ApplicationID.ToString());
        default:
          if (false)
            ;
          if (true)
            goto case 0;
          else
            goto case 0;
      }
    }

    public virtual SystemInfo GetSystemInfo(bool fulldata)
    {
      int num1 = 25704;
      int num2 = num1;
      num1 = 25704;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 0;
          if (num4 == 0)
            ;
          num4 = 1;
          if (num4 == 0)
            ;
          return new SystemInfo();
        default:
          goto case 1;
      }
    }

    public virtual PerformanceInfo GetPerformanceInfo(bool fulldata)
    {
      int num1 = 11545;
      int num2 = num1;
      num1 = 11545;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          return new PerformanceInfo();
        default:
          goto case 1;
      }
    }

    public virtual IOfflineDataStore GetOfflineDataStore()
    {
      if (!NetUtilities.RunningInMono())
        return (IOfflineDataStore) new OfflineDataStore((IOfflineStorageManager) new OfflineStorageManager(this.Config.ApplicationID.ToString()), this.Logger);
      switch (true ? 1 : 0)
      {
        case 0:
        case 2:
          if (false)
            ;
          return (IOfflineDataStore) new OfflineDataStore((IOfflineStorageManager) new MonoOfflineStorageManager(this.Config.ApplicationID.ToString()), this.Logger);
        default:
          if (true)
            goto case 0;
          else
            goto case 0;
      }
    }

    public static BinaryInfo GetCurrentBinaryInfo()
    {
      int num1 = 0;
      switch (num1)
      {
        default:
          MethodBase method;
          BinaryInfo currentBinaryInfo;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              method = new StackTrace().GetFrame(1).GetMethod();
              currentBinaryInfo = new BinaryInfo();
              currentBinaryInfo.MethodName = method.Name;
              num2 = 4;
              num1 = num2;
              goto default;
            default:
              Assembly assembly;
              while (true)
              {
                switch (num1)
                {
                  case 0:
                    goto label_13;
                  case 1:
                    if (System.IO.File.Exists(assembly.Location))
                    {
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    goto label_13;
                  case 2:
                    num2 = -9903;
                    int num3 = num2;
                    num2 = -9903;
                    int num4 = num2;
                    switch (num3 == num4 ? 1 : 0)
                    {
                      case 0:
                      case 2:
                        goto label_13;
                      default:
                        num2 = 0;
                        if (num2 == 0)
                          ;
                        assembly = method.DeclaringType.Module.Assembly;
                        currentBinaryInfo.LoadFromAssembly(assembly);
                        currentBinaryInfo.ClassName = method.DeclaringType.FullName;
                        num2 = 1;
                        num1 = num2;
                        continue;
                    }
                  case 3:
                    currentBinaryInfo.LastModified = new DateTime?(new FileInfo(assembly.Location).LastWriteTimeUtc);
                    num2 = 0;
                    num1 = num2;
                    continue;
                  case 4:
                    num2 = 1;
                    if (num2 == 0)
                      ;
                    if (method.DeclaringType != (Type) null)
                    {
                      num2 = 2;
                      num1 = num2;
                      continue;
                    }
                    goto label_13;
                  default:
                    goto label_3;
                }
              }
label_13:
              return currentBinaryInfo;
          }
      }
    }

    internal static string a(string A_0)
    {
      int A_1 = 12;
      int num1 = 0;
      switch (num1)
      {
        default:
          if (false)
            ;
          MD5 md5 = MD5.Create();
          string str;
          try
          {
            byte[] hash;
            StringBuilder stringBuilder;
            int index;
            int num2;
            switch (0)
            {
              case 0:
label_5:
                hash = md5.ComputeHash(Encoding.UTF8.GetBytes(A_0));
                stringBuilder = new StringBuilder();
                index = 0;
                num2 = 4;
                num1 = num2;
                goto default;
              default:
                while (true)
                {
                  switch (num1)
                  {
                    case 0:
                      num2 = 16776;
                      int num3 = num2;
                      num2 = 16776;
                      int num4 = num2;
                      switch (num3 == num4 ? 1 : 0)
                      {
                        case 0:
                        case 2:
                          goto label_7;
                        default:
                          num2 = 0;
                          if (num2 == 0)
                            ;
                          if (index < hash.Length)
                          {
                            stringBuilder.Append(hash[index].ToString(PreEmptive.Analytics.Common.Utilities.Utils.a("뢿\uF0C1", A_1)));
                            ++index;
                            num2 = 2;
                            num1 = num2;
                            continue;
                          }
                          num2 = 1;
                          num1 = num2;
                          continue;
                      }
                    case 1:
                      str = stringBuilder.ToString();
                      num2 = 3;
                      num1 = num2;
                      continue;
                    case 2:
                    case 4:
label_7:
                      num2 = 0;
                      num1 = num2;
                      continue;
                    case 3:
                      goto label_20;
                    default:
                      goto label_5;
                  }
                }
            }
          }
          finally
          {
            int num5 = 2;
            while (true)
            {
              switch (num5)
              {
                case 0:
                  md5.Dispose();
                  num5 = 1;
                  continue;
                case 1:
                  goto label_19;
                case 2:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
              }
              if (md5 != null)
                num5 = 0;
              else
                break;
            }
label_19:;
          }
label_20:
          return str;
      }
    }

    public void ExecuteAsyncIfSupported(Action action, [Optional] bool highPriority)
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = -4286;
      int num2 = num1;
      num1 = -4286;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            ;
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: reference to a compiler-generated method
          new Thread(new ThreadStart(new CommonNetPlatform.a()
          {
            a = action
          }.b))
          {
            Priority = (highPriority ? ThreadPriority.AboveNormal : ThreadPriority.BelowNormal),
            IsBackground = true
          }.Start();
          break;
        default:
          goto case 1;
      }
    }

    public virtual Configuration.ApplicationStopBehavior GetStopBehaviorDefaults()
    {
      int num1 = -29783;
      int num2 = num1;
      num1 = -29783;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          return PlatformClient.CoreDefaultStopBehavior();
        default:
          goto case 1;
      }
    }
  }
}
