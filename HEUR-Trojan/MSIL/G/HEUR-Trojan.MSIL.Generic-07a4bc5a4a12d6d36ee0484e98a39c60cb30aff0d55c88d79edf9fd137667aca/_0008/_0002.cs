// Decompiled with JetBrains decompiler
// Type: .
// Assembly: derver, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 76892F40-3DAD-430C-AF53-E7AE49BEB72F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Generic-07a4bc5a4a12d6d36ee0484e98a39c60cb30aff0d55c88d79edf9fd137667aca.exe

using \u0003;
using \u0004;
using \u0006;
using \u0008;
using System;
using System.Runtime.InteropServices;

namespace \u0008
{
  internal sealed class \u0002
  {
    public static int \u0001;
    public static int \u0002;
    public static int \u0003;
    public static int \u0004;
    public static int \u0005;
    private static int \u0006;
    private static int \u0007;
    private static int \u0008;
    internal static int \u000E;
    private static int \u000F;
    internal static int \u0010;
    private static int \u0011;
    private static int \u0012;
    private static int \u0013;
    private static int \u0014;
    internal int \u0015;
    internal bool \u0001;
    internal int \u0016;
    internal int \u0017;
    internal \u0007 \u0001;
    internal \u000E \u0001;
    [NonSerialized]
    internal static \u0003.\u0004 \u008A;

    public \u0002()
      : this(\u0002.\u0003, false)
    {
    }

    public \u0002([In] int obj0, [In] bool obj1)
    {
      if (obj0 == \u0002.\u0003)
        obj0 = 6;
      else if (obj0 < \u0002.\u0004 || obj0 > \u0002.\u0001)
        throw new ArgumentOutOfRangeException(\u0002.\u008A(993));
      this.\u0001 = new \u0007();
      this.\u0001 = new \u000E(this.\u0001);
      this.\u0001 = obj1;
      \u0005.\u0001(this, \u0008.\u0003.\u0001);
      \u0005.\u0001(obj0, this);
      \u0005.\u0001(this);
    }

    static \u0002()
    {
      \u0002.\u0001(typeof (\u0002));
      int num1 = 9;
      if (num1 != 0)
      {
        \u0002.\u0001 = num1;
        int num2 = 1;
        if (num2 != 0)
        {
          \u0002.\u0002 = num2;
          \u0002.\u0003 = -1;
          num1 = 0;
        }
        else
        {
          num1 = num2;
          goto label_9;
        }
      }
      else
        goto label_6;
label_4:
      \u0002.\u0004 = num1;
      \u0002.\u0005 = 8;
      \u0002.\u0006 = 1;
      int num3 = 4;
      if (num3 != 0)
      {
        \u0002.\u0007 = num3;
        num1 = 8;
      }
      else
      {
        num1 = num3;
        goto label_9;
      }
label_6:
      if (num1 != 0)
      {
        if (num1 != 0)
        {
          \u0002.\u0008 = num1;
          \u0002.\u000E = 0;
          \u0002.\u000F = 1;
          \u0002.\u0010 = 16;
          \u0002.\u0011 = 20;
          num1 = 28;
        }
        else
          goto label_4;
      }
label_9:
      \u0002.\u0012 = num1;
      \u0002.\u0013 = 30;
      \u0002.\u0014 = (int) sbyte.MaxValue;
    }
  }
}
