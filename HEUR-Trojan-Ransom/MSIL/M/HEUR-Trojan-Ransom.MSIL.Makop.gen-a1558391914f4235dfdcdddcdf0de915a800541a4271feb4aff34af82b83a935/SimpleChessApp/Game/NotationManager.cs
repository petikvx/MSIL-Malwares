// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.NotationManager
// Assembly: fC, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2BFFC2A0-BEF7-47FD-8B55-B5339EE53E65
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-a1558391914f4235dfdcdddcdf0de915a800541a4271feb4aff34af82b83a935.exe

using System.ComponentModel;

namespace SimpleChessApp.Game
{
  public class NotationManager
  {
    public BindingList<Turn> Moves { get; set; }

    public NotationManager()
    {
label_1:
      int num1 = 828360580;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1021591580)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Moves = new BindingList<Turn>();
            num1 = (int) num2 * -1891579773 ^ 60146295;
            continue;
          case 2:
            num1 = (int) num2 * 994507665 ^ -1657445268;
            continue;
          case 3:
            num1 = (int) num2 * -1756762547 ^ 929079230;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    internal void Clear()
    {
label_1:
      int num1 = 618515929;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 784320228)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Moves.Clear();
            num1 = (int) num2 * 1389007069 ^ -1068139849;
            continue;
          case 2:
            num1 = (int) num2 * 305787490 ^ 1597325071;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }
  }
}
