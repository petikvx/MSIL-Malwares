// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: StaticIndexRangePartitionForArr, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AF5A1990-133C-4640-B616-63D01D46DEA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7c7116c6a0f1e06e4c252ea45668b85c1fdf3f35216097be1208e14be4066b36.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -891837321;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1923969394)) % 7U)
          {
            case 1:
              num1 = (int) num2 * -766294922 ^ 1409914934;
              continue;
            case 2:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -892367786 ^ 324849868;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 502046894 ^ 1625044942;
              continue;
            case 5:
              int num3 = this.m_Dict.ContainsKey(aKey) ? -1858349420 : (num3 = -219613135);
              num1 = num3 ^ (int) num2 * 1209969684;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -2064564068;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 370048859;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 196932431)) % 8U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1193196494 ^ 1248862645;
              continue;
            case 2:
              this.m_Dict.Add(aKey, value);
              num1 = 925041473;
              continue;
            case 3:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1815101136 ^ -1727478848;
              continue;
            case 4:
              int num3 = flag ? 562220368 : (num3 = 1530675881);
              num1 = num3 ^ (int) num2 * -452063769;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -776952435 ^ -926774735;
              continue;
            case 7:
              num1 = (int) num2 * -625566710 ^ 184386424;
              continue;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1413178052;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1671073260)) % 7U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -2009086280 ^ -42298195;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -178346100 ^ 917136919;
              continue;
            case 3:
              goto label_1;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -992936869;
              continue;
            case 6:
              int num4 = !flag ? 465694635 : (num4 = 164881683);
              num1 = num4 ^ (int) num2 * -1270482097;
              continue;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = -1370361186;
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 885870880;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 804823639)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -834253889 ^ -699845632;
              continue;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1271116779 ^ -564368154;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              goto label_3;
            case 4:
              int num4 = !flag ? 225297248 : (num4 = 390394615);
              num1 = num4 ^ (int) num2 * 662351792;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 150111519;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1722594496;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -97417203)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 472512214 ^ 1417063977;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -843404395;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1979229953)) % 12U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1088238804 ^ 697818026;
            continue;
          case 2:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -285675936;
            continue;
          case 3:
            goto label_3;
          case 4:
            int num3 = !flag2 ? -1058578259 : (num3 = -2144667715);
            num1 = num3 ^ (int) num2 * -1280893751;
            continue;
          case 5:
            num1 = -285675936;
            continue;
          case 6:
            flag2 = !JSONClass.\u202B⁯⁫⁬‭‪‎‬‫‮⁭⁮​⁭‫‏⁪​‭‎⁭‪‏‫‪⁯⁯‫⁪‭⁫⁯‪⁬‫‏‍⁫‭‮‮(aKey);
            num1 = (int) num2 * -340746771 ^ 1629220949;
            continue;
          case 7:
            int num4 = flag1 ? 1205983163 : (num4 = 1811892017);
            num1 = num4 ^ (int) num2 * -743086405;
            continue;
          case 8:
            num1 = (int) num2 * -1878595862 ^ 1880928514;
            continue;
          case 9:
            num1 = (int) num2 * 1408198432 ^ 1490205578;
            continue;
          case 10:
            flag1 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1102777672 ^ 1516537940;
            continue;
          case 11:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1115021061;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -393968615;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1288515756)) % 9U)
        {
          case 0:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -558727803 ^ 2136772464;
            continue;
          case 1:
            int num3 = flag ? -134210759 : (num3 = -573199625);
            num1 = num3 ^ (int) num2 * -654305926;
            continue;
          case 2:
            jsonNode1 = this.m_Dict[aKey];
            num1 = -1173256692;
            continue;
          case 3:
            num1 = (int) num2 * -905752202 ^ -148702601;
            continue;
          case 4:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -96258569 ^ -1297194330;
            continue;
          case 5:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -384151795 ^ 420513020;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * -1329635468 ^ -1410679643;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 669146942;
label_2:
      bool flag;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 687789595)) % 7U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = 1146039446;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -148002285 ^ -934222447;
            continue;
          case 3:
            int num3 = !flag ? 351826605 : (num3 = 2051893203);
            num1 = num3 ^ (int) num2 * -916783985;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * 1647644042 ^ 60481146;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_5;
label_10:
      return jsonNode;
label_4:
      num4 = 1;
label_5:
      flag = num4 != 0;
      num1 = 1377392087;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1179431749;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1233057813)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -208555882 ^ 676410064;
              continue;
            default:
              goto label_10;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 61851631;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1233057813)) % 3U)
          {
            case 0:
              goto label_6;
            case 2:
              num3 = (int) num4 * -1832147755 ^ -127106498;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        jsonNode = (JSONNode) null;
      }
label_10:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
        getChildsD14.\u003C\u003E4__this = this;
label_1:
        int num1 = -996592212;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1013350079)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -1980492971 ^ 1469217229;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "{";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_4:
        int num1 = !enumerator.MoveNext() ? -268117459 : (num1 = -1807346089);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -234233884)) % 8U)
          {
            case 0:
              num1 = -1807346089;
              continue;
            case 2:
              str1 = JSONClass.\u200C‮‫‌​‌‎⁫‮‬‌‭‎‌‫⁫⁭⁯⁬‏⁯‫‏⁫‫⁭​​​⁫‫‭⁬⁭‭‎‍⁪‏⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202B‮‎⁮‫‏‮​⁭⁭‫‎‪‮‌⁮⁪⁮‍‭‎‏‮⁬⁯‏‍⁮‮‫⁪⁬⁭‫⁬⁪⁮​‎⁫‮((object) current.Value)
              });
              num1 = -1353487502;
              continue;
            case 3:
              current = enumerator.Current;
              num1 = -558202149;
              continue;
            case 4:
              str1 = JSONClass.\u202A⁪‌‎‮‍‍‬‬‌‎⁪⁭⁭​⁬‮‫⁪⁯⁬‫⁭‍‫⁭⁭‫‍‍‬⁫‮⁪‬⁮‏⁫⁪⁫‮(str1, ", ");
              num1 = (int) num2 * 285883263 ^ -1110189718;
              continue;
            case 5:
              int num3 = !flag ? -693292524 : (num3 = -1344010910);
              num1 = num3 ^ (int) num2 * -877800166;
              continue;
            case 6:
              goto label_4;
            case 7:
              flag = JSONClass.\u200C⁪⁯⁫​‌⁫‪⁬‎‏‪⁫‮‪⁮⁫‫⁫⁪‌⁭⁯‬‭⁫⁪‮⁮⁯⁯‪‌⁭‎‎⁮​‭‬‮(str1) > 2;
              num1 = (int) num2 * -2051853213 ^ 1607211548;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      string str2 = JSONClass.\u202A⁪‌‎‮‍‍‬‬‌‎⁪⁭⁭​⁬‮‫⁪⁯⁬‫⁭‍‫⁭⁭‫‍‍‬⁫‮⁪‬⁮‏⁫⁪⁫‮(str1, "}");
label_12:
      int num4 = -264923192;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -234233884)) % 3U)
        {
          case 0:
            goto label_12;
          case 1:
            num4 = (int) num5 * 1351752488 ^ 691210129;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_7:
        int num1 = !enumerator.MoveNext() ? 698121400 : (num1 = 570691318);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 163466827)) % 10U)
          {
            case 0:
              int num3 = !flag ? -1109623396 : (num3 = -170694679);
              num1 = num3 ^ (int) num2 * 909623171;
              continue;
            case 1:
              str1 = JSONClass.\u206D​‌‏‭‬‫‍⁯‪‌‍‬⁭‫‭⁫‬⁯‪‬⁯⁯‌⁭⁯‍​⁪⁯‌‍‍⁯‪⁫‪⁭⁬‫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u200C‮‫‌​‌‎⁫‮‬‌‭‎‌‫⁫⁭⁯⁬‏⁯‫‏⁫‫⁭​​​⁫‫‭⁬⁭‭‎‍⁪‏⁪‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202A⁪‌‎‮‍‍‬‬‌‎⁪⁭⁭​⁬‮‫⁪⁯⁬‫⁭‍‫⁭⁭‫‍‍‬⁫‮⁪‬⁮‏⁫⁪⁫‮(aPrefix, "   "))
              });
              num1 = 1880970757;
              continue;
            case 2:
              goto label_7;
            case 3:
              num1 = 570691318;
              continue;
            case 4:
              str1 = JSONClass.\u202A⁪‌‎‮‍‍‬‬‌‎⁪⁭⁭​⁬‮‫⁪⁯⁬‫⁭‍‫⁭⁭‫‍‍‬⁫‮⁪‬⁮‏⁫⁪⁫‮(str1, ", ");
              num1 = (int) num2 * -1588642040 ^ -465960808;
              continue;
            case 5:
              num1 = (int) num2 * 353669547 ^ -866109590;
              continue;
            case 6:
              num1 = (int) num2 * 592305577 ^ 1313801643;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = 1564271652;
              continue;
            case 8:
              flag = JSONClass.\u200C⁪⁯⁫​‌⁫‪⁬‎‏‪⁫‮‪⁮⁫‫⁫⁪‌⁭⁯‬‭⁫⁪‮⁮⁯⁯‪‌⁭‎‎⁮​‭‬‮(str1) > 3;
              num1 = (int) num2 * -1709605389 ^ -1453205317;
              continue;
            default:
              goto label_13;
          }
        }
      }
label_13:
      string str2 = JSONClass.\u206D​‌‏‭‬‫‍⁯‪‌‍‬⁭‫‭⁫‬⁯‪‬⁯⁯‌⁭⁯‍​⁪⁯‌‍‍⁯‪⁫‪⁭⁬‫‮(str1, "\n", aPrefix, "}");
label_14:
      int num4 = 249264870;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 163466827)) % 4U)
        {
          case 0:
            goto label_14;
          case 1:
            str3 = str2;
            num4 = (int) num5 * -814296540 ^ 1746141940;
            continue;
          case 3:
            num4 = (int) num5 * -41392560 ^ 730876361;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1362574919;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 864057272)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -392459856 ^ -501619269;
            continue;
          case 2:
            JSONClass.\u202A⁫⁯‪‪‭⁮‎‭‏‌⁬‍‪⁫⁫‏⁪‬⁭‬⁪⁪⁯‬‫‏​‫‫⁭‮‏⁫⁪‏⁮‍‬‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1694405883 ^ -474480957;
            continue;
          case 3:
            JSONClass.\u202A‫‪‍‏‮‫‍‮​⁪⁫⁯‮‌⁯⁭‏⁮⁫‬‮‏‮‭‌‍⁯‭‪‭⁬‏‫‍⁭⁮‪‫⁪‮(aWriter, (byte) 2);
            num1 = (int) num2 * -361584684 ^ 1283655056;
            continue;
          case 5:
            num1 = (int) num2 * 1573956283 ^ 618791465;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? 1282672667 : (num3 = 1915103738);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 864057272)) % 7U)
          {
            case 0:
              JSONClass.\u202C‏‍⁭⁮‮‫‭⁯‏‍‌⁪⁭‮‬‪‍‫‫⁯‫‫‍‫⁯‍⁫‭‬‌‮⁬⁫⁫​‮⁭‪‮(aWriter, current);
              num3 = (int) num4 * -1617449109 ^ 1897666605;
              continue;
            case 1:
              goto label_12;
            case 2:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -483072563 ^ 1340704374;
              continue;
            case 3:
              num3 = (int) num4 * 2045169644 ^ 1852404027;
              continue;
            case 4:
              num3 = 1282672667;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 557242180;
              continue;
            case 6:
              goto label_17;
            default:
              goto label_11;
          }
        }
label_17:
        return;
label_11:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 341535374;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1563486867)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 906783620 ^ -1612212923;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u202B⁯⁫⁬‭‪‎‬‫‮⁭⁮​⁭‫‏⁪​‭‎⁭‪‏‫‪⁯⁯‫⁪‭⁫⁯‪⁬‫‏‍⁫‭‮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200C⁪⁯⁫​‌⁫‪⁬‎‏‪⁫‮‪⁮⁫‫⁫⁪‌⁭⁯‬‭⁫⁪‮⁮⁯⁯‪‌⁭‎‎⁮​‭‬‮([In] string obj0) => obj0.Length;

    static string \u202A⁪‌‎‮‍‍‬‬‌‎⁪⁭⁭​⁬‮‫⁪⁯⁬‫⁭‍‫⁭⁭‫‍‍‬⁫‮⁪‬⁮‏⁫⁪⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B‮‎⁮‫‏‮​⁭⁭‫‎‪‮‌⁮⁪⁮‍‭‎‏‮⁬⁯‏‍⁮‮‫⁪⁬⁭‫⁬⁪⁮​‎⁫‮([In] object obj0) => obj0.ToString();

    static string \u200C‮‫‌​‌‎⁫‮‬‌‭‎‌‫⁫⁭⁯⁬‏⁯‫‏⁫‫⁭​​​⁫‫‭⁬⁭‭‎‍⁪‏⁪‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206D​‌‏‭‬‫‍⁯‪‌‍‬⁭‫‭⁫‬⁯‪‬⁯⁯‌⁭⁯‍​⁪⁯‌‍‍⁯‪⁫‪⁭⁬‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202A‫‪‍‏‮‫‍‮​⁪⁫⁯‮‌⁯⁭‏⁮⁫‬‮‏‮‭‌‍⁯‭‪‭⁬‏‫‍⁭⁮‪‫⁪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A⁫⁯‪‪‭⁮‎‭‏‌⁬‍‪⁫⁫‏⁪‬⁭‬⁪⁪⁯‬‫‏​‫‫⁭‮‏⁫⁪‏⁮‍‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202C‏‍⁭⁮‮‫‭⁯‏‍‌⁪⁭‮‬‪‍‫‫⁯‫‫‍‫⁯‍⁫‭‬‌‮⁬⁫⁫​‮⁭‪‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
