// Decompiled with JetBrains decompiler
// Type: DoubleMapper
// Assembly: IDynamicMessageS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 27E16815-1EE5-4D7C-AD78-EB45F6CA3CA3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqn-4ac70e6596359a19fddd3380edc192f01f7e789c9cf8dd3afa68fd5f9ef8bdb5.exe

using System;
using System.Globalization;

public class DoubleMapper
{
  public double MAX_VALUE = double.MaxValue;
  public double MIN_VALUE = double.MinValue;

  internal double parseDouble(string value)
  {
label_1:
    int num1 = 225805892;
    double num2;
    while (true)
    {
      uint num3;
      switch ((num3 = (uint) (num1 ^ 1588138781)) % 4U)
      {
        case 0:
          goto label_1;
        case 1:
          num2 = double.Parse(value, (IFormatProvider) DoubleMapper.\u202C‫‎‫⁫⁯⁯⁬‌‮‎‭‮‌‪‍‎‎‬‍‎‮‫‬⁪‭‮‭‮‬‎⁮‫⁬​‏⁬⁮‍‮());
          num1 = (int) num3 * 1089422493 ^ -89923597;
          continue;
        case 3:
          num1 = (int) num3 * 424648878 ^ -11059203;
          continue;
        default:
          goto label_5;
      }
    }
label_5:
    return num2;
  }

  static CultureInfo \u202C‫‎‫⁫⁯⁯⁬‌‮‎‭‮‌‪‍‎‎‬‍‎‮‫‬⁪‭‮‭‮‬‎⁮‫⁬​‏⁬⁮‍‮() => CultureInfo.InvariantCulture;
}
