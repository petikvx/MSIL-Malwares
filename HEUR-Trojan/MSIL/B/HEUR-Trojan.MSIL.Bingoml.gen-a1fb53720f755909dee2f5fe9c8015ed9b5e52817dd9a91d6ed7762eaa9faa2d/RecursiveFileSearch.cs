// Decompiled with JetBrains decompiler
// Type: Ohrxmi.RecursiveFileSearch
// Assembly: Mhaedjy, Version=4.6.5.0, Culture=neutral, PublicKeyToken=null
// MVID: D5147E88-4426-4F99-BBCA-DD92DA902390
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-a1fb53720f755909dee2f5fe9c8015ed9b5e52817dd9a91d6ed7762eaa9faa2d.exe

using System;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;

namespace Ohrxmi
{
  internal class RecursiveFileSearch
  {
    internal static Stopwatch stopwatch = new Stopwatch();
    internal static StringCollection log = new StringCollection();

    internal static void WalkDirectoryTree(DirectoryInfo root)
    {
      if (!RecursiveFileSearch.stopwatch.IsRunning)
        RecursiveFileSearch.stopwatch.Start();
      if (RecursiveFileSearch.stopwatch.Elapsed.TotalSeconds > 20.0)
      {
        RecursiveFileSearch.stopwatch.Stop();
      }
      else
      {
        FileInfo[] fileInfoArray = (FileInfo[]) null;
        try
        {
          fileInfoArray = root.GetFiles("*.*");
        }
        catch (UnauthorizedAccessException ex)
        {
          RecursiveFileSearch.log.Add(ex.Message);
        }
        catch (DirectoryNotFoundException ex)
        {
          Console.WriteLine(ex.Message);
        }
        if (fileInfoArray == null)
          return;
        foreach (FileInfo fileInfo in fileInfoArray)
        {
          if (RecursiveFileSearch.stopwatch.Elapsed.TotalSeconds > 20.0)
          {
            RecursiveFileSearch.stopwatch.Stop();
            return;
          }
          Console.WriteLine(fileInfo.FullName);
        }
        foreach (DirectoryInfo directory in root.GetDirectories())
        {
          if (RecursiveFileSearch.stopwatch.Elapsed.TotalSeconds > 20.0)
          {
            RecursiveFileSearch.stopwatch.Stop();
            break;
          }
          RecursiveFileSearch.WalkDirectoryTree(directory);
        }
      }
    }
  }
}
