// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: RuntimeParameterIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E46F8FBF-E963-420D-9D24-515F2113904E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-899a15627241e59e9347d18a6286ac2587425c3cd941d6b095f01d1a9205dac5.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = 1316356633;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 920189898)) % 6U)
        {
          case 0:
            this.m_Key = (string) null;
            num1 = (int) num2 * -702733327 ^ -1460529660;
            continue;
          case 1:
            num1 = (int) num2 * -1499921461 ^ -201795856;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -871175448 ^ -464773804;
            continue;
          case 5:
            num1 = (int) num2 * 963819162 ^ -804944090;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1333476027;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1081143715)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * 1122535380 ^ 618746973;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -1916767448;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1570060856)) % 11U)
        {
          case 0:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1370114644 ^ -1006454500;
            continue;
          case 1:
            num1 = (int) num2 * 1641014604 ^ 1530422320;
            continue;
          case 2:
            num1 = (int) num2 * -1194804605 ^ -807111731;
            continue;
          case 3:
            int num3 = flag ? 2069395509 : (num3 = 1378198692);
            num1 = num3 ^ (int) num2 * -281690838;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag = this.m_Key == null;
            num1 = (int) num2 * 1560015579 ^ 573600055;
            continue;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -1986333921;
            continue;
          case 7:
            num1 = (int) num2 * 1105908159 ^ 1471855150;
            continue;
          case 8:
            this.m_Node = (JSONNode) null;
            num1 = -1816415835;
            continue;
          case 9:
            goto label_3;
          case 10:
            num1 = (int) num2 * 44054888 ^ 1449788208;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1315998482;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -839315067)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1969763457 ^ 620404436;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 700977628 ^ -824730079;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -6241054;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -632747712)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -957256106 ^ -1638077868;
              continue;
            case 3:
              aVal.Add(value);
              num1 = (int) num2 * -1826968379 ^ 1922833059;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1997886613 ^ -1925360589;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1923040797;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1245854407)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 578824700 ^ -1026330844;
              continue;
            case 3:
              num1 = (int) num2 * 1628715762 ^ 1351499000;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 367349461;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 787595113)) % 3U)
        {
          case 1:
            aVal.Add(aItem);
            num1 = (int) num2 * -2093365150 ^ 1972999772;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.Set((JSONNode) aVal);
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
label_1:
      int num1 = -1630232196;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -886239205)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 457999287 ^ -671940084;
            continue;
          case 3:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -2132901454 ^ 776809219;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -925846884;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1798806907)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            flag1 = b == null;
            num1 = (int) num2 * -340358701 ^ -97675766;
            continue;
          case 2:
            num1 = (int) num2 * 2011638325 ^ 2000139316;
            continue;
          case 4:
            int num3 = flag1 ? -204166414 : (num3 = -457802616);
            num1 = num3 ^ (int) num2 * -1876359984;
            continue;
          case 5:
            flag2 = (object) a == b;
            num1 = -287699165;
            continue;
          case 6:
            num1 = (int) num2 * -1395968673 ^ 636589908;
            continue;
          case 7:
            flag2 = true;
            num1 = (int) num2 * 751764409 ^ -1296678040;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -399771740;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -272113319)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 401543052 ^ -1259338970;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -921748042 ^ 1512442343;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_4;
label_1:
      int num1 = -1122157180;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1391978421)) % 5U)
        {
          case 1:
            flag = true;
            num1 = (int) num2 * -1531627042 ^ 189308342;
            continue;
          case 2:
            goto label_4;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * -1637604256 ^ 933740067;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) this == obj;
      num1 = -1088399997;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -830473315;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1035839120)) % 3U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 2008430359 ^ -1083210575;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = -121076519;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1018341086)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 751477418 ^ 1297496971;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = -450508199;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -704366930)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 259246783 ^ -1738363525;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = -1919386551;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2137413829)) % 6U)
          {
            case 0:
              asInt = 0;
              num1 = (int) num2 * -1992743057 ^ 645021066;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1783814940 ^ 1633506535;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 598144108 ^ -2119726539;
              continue;
            case 5:
              num1 = (int) num2 * 467246841 ^ -1815290525;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0f));
label_1:
        int num1 = -1259642292;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -446082759)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asFloat = 0.0f;
              num1 = (int) num2 * 275996716 ^ -376342797;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -426047235;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1155987017)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 618301070 ^ -870786216;
              continue;
            case 1:
              num1 = (int) num2 * 2055409046 ^ -1038007837;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * -131719560 ^ 1792389443;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -1338093739;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1748524446)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 644285706 ^ -544287996;
              continue;
            case 2:
              num1 = (int) num2 * 1399784028 ^ 319319967;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -1953829937 ^ -2126131972;
              continue;
            case 5:
              num1 = (int) num2 * -1079698937 ^ 1713516931;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1256805643;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -11093685)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -693570234 ^ -1818696995;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1771721162 ^ 173782903;
              continue;
            case 3:
              num1 = (int) num2 * -534775337 ^ 2105480114;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 542308130;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1350042665)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1722125513 ^ -1374915838;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * -1401548454 ^ 1165686087;
              continue;
            case 3:
              aVal = new JSONData(false);
              num1 = (int) num2 * -1095379062 ^ -1366586967;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 544536616;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1211568947)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1065152341 ^ 857322060;
              continue;
            case 3:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1276281320 ^ 1297398901;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -984581063;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1516349420)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = aVal;
              num1 = (int) num2 * -329976049 ^ 63699067;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1522270671 ^ -305457839;
              continue;
            case 4:
              num1 = (int) num2 * 231657890 ^ -524326745;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1038987594;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1155379297)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1870966970 ^ 502482407;
              continue;
            case 1:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -47911467 ^ 155108397;
              continue;
            case 3:
              num1 = (int) num2 * -297027486 ^ 1912465985;
              continue;
            case 4:
              asObject = aVal;
              num1 = (int) num2 * 584529553 ^ -1492234215;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
