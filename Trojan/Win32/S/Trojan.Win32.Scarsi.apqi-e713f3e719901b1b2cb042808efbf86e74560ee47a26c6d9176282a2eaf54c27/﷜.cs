// Decompiled with JetBrains decompiler
// Type: ﷜
// Assembly: C, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D2E568C6-598F-4547-B67D-EBC6962F4D09
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Scarsi.apqi-e713f3e719901b1b2cb042808efbf86e74560ee47a26c6d9176282a2eaf54c27.exe

using System.Runtime.CompilerServices;

internal class \uFDDC
{
  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static string \uFDD0(string _param0, int _param1)
  {
    int num1 = 201596314 + _param1;
    int num2 = 0;
    char[] charArray;
    while (true)
    {
      int index1;
      switch (num2)
      {
        case 0:
          charArray = _param0.ToCharArray();
          num2 = 1;
          continue;
        case 1:
          index1 = 0;
          break;
        case 2:
          ++index1;
          num2 = 3;
          continue;
      }
      if (index1 < charArray.Length)
      {
        char[] chArray = charArray;
        int index2 = index1;
        char ch = charArray[index1];
        int num3 = (int) ch & (int) byte.MaxValue;
        int num4 = num1;
        int num5 = num4 + 1;
        int num6 = (num3 ^ num4) << 8;
        int num7 = (int) ch >> 8;
        int num8 = num5;
        num1 = num8 + 1;
        int num9 = (int) (byte) (num7 ^ num8);
        int num10 = (int) (ushort) (num6 | num9);
        chArray[index2] = (char) num10;
        num2 = 2;
      }
      else
        break;
    }
    return string.Intern(new string(charArray));
  }
}
