// Decompiled with JetBrains decompiler
// Type: BlockGameApp.Models.Moon
// Assembly: FormatterAssemblySt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 877C36BA-E94F-4F44-80EE-D68074F87B8D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqs-8ed13e4fb92eef7aee7b0a64e9a77c702327206d71ea5cb0806d987f1b14ea9c.exe

using System.Drawing;

namespace BlockGameApp.Models
{
  public class Moon : Player
  {
    private Brush _glowBrush;
    private Rectangle[] _arrGlowShapes = (Rectangle[]) null;

    public Moon(int x, int y, int width, int height, Rectangle bounds, int velocity)
      : this(x, y, width, height, bounds, velocity, Color.Empty, Color.Empty)
    {
    }

    public Moon(
      int x,
      int y,
      int width,
      int height,
      Rectangle bounds,
      int velocity,
      Color fill,
      Color outline,
      int outlineWidth = 2)
      : base(x, y, width, height, bounds, velocity, fill, outline, outlineWidth)
    {
      this._glowBrush = (Brush) new SolidBrush(Color.FromArgb(20, fill));
    }

    public Rectangle[] GlowShapes
    {
      get
      {
        if (this._arrGlowShapes == null)
        {
          this._arrGlowShapes = new Rectangle[3];
          int num1 = (int) ((double) this.X + (double) this.Width * 0.5);
          int num2 = (int) ((double) this.Y + (double) this.Height * 0.5);
          int width1 = (int) ((double) this.Width + (double) this.Width * 0.2);
          int height1 = (int) ((double) this.Height + (double) this.Height * 0.2);
          this._arrGlowShapes[0] = new Rectangle((int) ((double) num1 - (double) width1 * 0.5), (int) ((double) num2 - (double) height1 * 0.5), width1, height1);
          int width2 = (int) ((double) this.Width + (double) this.Width * 0.4);
          int height2 = (int) ((double) this.Height + (double) this.Height * 0.4);
          this._arrGlowShapes[1] = new Rectangle((int) ((double) num1 - (double) width2 * 0.5), (int) ((double) num2 - (double) height2 * 0.5), width2, height2);
          int width3 = (int) ((double) this.Width + (double) this.Width * 0.6);
          int height3 = (int) ((double) this.Height + (double) this.Height * 0.6);
          this._arrGlowShapes[2] = new Rectangle((int) ((double) num1 - (double) width3 * 0.5), (int) ((double) num2 - (double) height3 * 0.5), width3, height3);
        }
        return this._arrGlowShapes;
      }
    }

    public override void Draw(Graphics graphics)
    {
      graphics.FillRectangle(this._glowBrush, this.GlowShapes[0]);
      graphics.FillRectangle(this._glowBrush, this.GlowShapes[1]);
      graphics.FillRectangle(this._glowBrush, this.GlowShapes[2]);
      base.Draw(graphics);
    }

    public override void Move(float delta)
    {
      int y = this.Y;
      int x = this.X;
      int num1 = y - (int) ((double) this.Velocity * (double) delta);
      int num2 = x + (int) ((double) this.Velocity * (double) delta * 0.8);
      if (num1 + this.Height < this.Bounds.Y && num2 > this.Bounds.Width)
      {
        this.X = this.Bounds.X;
        this.Y = this.Bounds.Height;
      }
      else
      {
        this.X = num2;
        this.Y = num1;
      }
      int num3 = (int) ((double) this.X + (double) this.Width * 0.5);
      int num4 = (int) ((double) this.Y + (double) this.Height * 0.5);
      int num5 = (int) ((double) num3 - (double) this.GlowShapes[0].Width * 0.5);
      int num6 = (int) ((double) num4 - (double) this.GlowShapes[0].Height * 0.5);
      this.GlowShapes[0].X = num5;
      this.GlowShapes[0].Y = num6;
      int num7 = (int) ((double) num3 - (double) this.GlowShapes[1].Width * 0.5);
      int num8 = (int) ((double) num4 - (double) this.GlowShapes[1].Height * 0.5);
      this.GlowShapes[1].X = num7;
      this.GlowShapes[1].Y = num8;
      int num9 = (int) ((double) num3 - (double) this.GlowShapes[2].Width * 0.5);
      int num10 = (int) ((double) num4 - (double) this.GlowShapes[2].Height * 0.5);
      this.GlowShapes[2].X = num9;
      this.GlowShapes[2].Y = num10;
    }
  }
}
