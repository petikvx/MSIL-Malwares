// Decompiled with JetBrains decompiler
// Type: .
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cab8849a7bf7875b
// MVID: B8136FDA-4EB0-4CA7-9502-281BC34A634B
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hjc-f20e5d33e431ce6f4aedcb085c959ae1bda3809f8f5bbdd4d18dd58683a28d4d.exe

using \u0001;
using \u0002;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal class \u0003
  {
    private static string \u0001;
    private static string \u0002;
    private static byte[] \u0001;
    private static Hashtable \u0001;
    private static bool \u0001;
    private static int \u0001;

    public static string \u0001([In] int obj0)
    {
      int num1;
      int num2;
      int num3;
      string str1;
      byte[] numArray1;
      string str2;
      string str3;
      try
      {
        int num4 = obj0;
        if (true)
        {
          int num5 = \u0003.\u0001;
          obj0 = num4 - num5;
          if (\u0003.\u0001)
          {
            str3 = (string) \u007F.\u007E\u001D\u0002((object) \u0003.\u0001, (object) obj0);
            switch (str3)
            {
              case null:
                break;
              default:
                str1 = str3;
                goto label_21;
            }
          }
          num3 = 0;
          num1 = obj0;
          int num6;
          int num7;
          do
          {
            num2 = (int) \u0003.\u0001[num1++];
            num6 = num2;
            num7 = 128;
            if (num7 != 0)
            {
              if ((num6 & num7) == 0)
              {
                num3 = num2;
                if (num3 == 0)
                  str1 = string.Empty;
                else
                  goto label_13;
              }
              else
                goto label_8;
            }
            else
              goto label_10;
          }
          while (false);
          goto label_21;
label_8:
          if ((num2 & 64) == 0)
          {
            int num8 = num2 & 63;
            num7 = 8;
            num6 = num8;
          }
          else
          {
            num4 = ((num2 & 31) << 24) + ((int) \u0003.\u0001[num1++] << 16) + ((int) \u0003.\u0001[num1++] << 8);
            goto label_12;
          }
label_10:
          num3 = (num6 << num7) + (int) \u0003.\u0001[num1++];
          goto label_13;
        }
label_12:
        int num9 = (int) \u0003.\u0001[num1++];
        num3 = num4 + num9;
label_13:
        string str4;
        try
        {
          numArray1 = \u009E\u0002.\u0012\u0005(\u0015\u0003.\u007E\u0084\u0005((object) \u001A.\u000E\u0002(), \u0003.\u0001, num1, num3));
          str2 = \u009B.\u001D\u0003(\u0015\u0003.\u007E\u0084\u0005((object) \u001A.\u000E\u0002(), numArray1, 0, numArray1.Length));
          if (\u0003.\u0001)
          {
            try
            {
              \u009C\u0002.\u007E\u0010\u0005((object) \u0003.\u0001, (object) obj0, (object) str2);
            }
            catch
            {
            }
          }
          str4 = str2;
        }
        catch
        {
          str4 = (string) null;
        }
        str1 = str4;
      }
      catch (Exception ex)
      {
        string str5 = str3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num2;
        byte[] numArray2 = numArray1;
        string str6 = str2;
        string str7;
        string str8 = str7;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        \u0012.\u0001(ex, (object) str5, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str6, (object) str8, (object) local4);
        throw;
      }
label_21:
      return str1;
    }

    static \u0003()
    {
      int length;
      Stream stream1;
      Assembly assembly1;
      try
      {
        \u0003.\u0001 = "0";
        \u0003.\u0002 = "87";
        \u0003.\u0001 = (byte[]) null;
        \u0003.\u0001 = (Hashtable) null;
        \u0003.\u0001 = false;
        \u0003.\u0001 = 0;
        if (\u001E.\u0018\u0002(\u0003.\u0001, "1"))
        {
          \u0003.\u0001 = true;
          \u0003.\u0001 = new Hashtable();
        }
        \u0003.\u0001 = \u0016\u0003.\u0086\u0005(\u0003.\u0002);
        assembly1 = \u0088.\u0097\u0002();
        stream1 = \u008A.\u007E\u0099\u0002((object) assembly1, "{e2767638-0090-46f0-ad45-5a73809e6ebb}");
        try
        {
          int num1 = \u0017\u0003.\u0087\u0005(\u0087.\u007E\u0096\u0002((object) stream1));
          while (true)
          {
            length = num1;
            \u0003.\u0001 = new byte[length];
            int num2 = \u0012.\u007E\u0014((object) stream1, \u0003.\u0001, 0, length);
            if (false)
              num1 = num2;
            else
              break;
          }
          \u0014.\u007E\u001A((object) stream1);
        }
        finally
        {
          if (stream1 != null)
            \u0014.\u007E\u0016((object) stream1);
        }
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream2 = stream1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) length;
        \u0012.\u0001(ex, (object) assembly2, (object) stream2, (object) local);
        throw;
      }
    }
  }
}
