// Decompiled with JetBrains decompiler
// Type: ICSharpCode.SharpZipLib.Zip.ZipInputStream
// Assembly: TheBot, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7E6D888C-8D83-46CE-907A-18F99381A0FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Backdoor.MSIL.IrcBot.an-523fbc7f8f4234f5b7e59adb51579626a43c55d41ac674e758828414fbdebd93.exe

using ICSharpCode.SharpZipLib.Checksums;
using ICSharpCode.SharpZipLib.Encryption;
using ICSharpCode.SharpZipLib.Zip.Compression;
using ICSharpCode.SharpZipLib.Zip.Compression.Streams;
using System;
using System.IO;
using System.Security.Cryptography;

namespace ICSharpCode.SharpZipLib.Zip
{
  public class ZipInputStream : InflaterInputStream
  {
    private ZipInputStream.ReadDataHandler \uE006;
    private Crc32 \uE005 = new Crc32();
    private ZipEntry \uE004;
    private long \uE003;
    private int \uE002;
    private int \uE001;
    private string \uE000;

    public ZipInputStream(Stream baseInputStream)
      : base(baseInputStream, new Inflater(true))
    {
      this.\uE006 = new ZipInputStream.ReadDataHandler(this.\uE003);
    }

    public string Password
    {
      get => this.\uE000;
      set => this.\uE000 = value;
    }

    public bool CanDecompressEntry => this.\uE004 != null && this.\uE004.CanDecompress;

    public ZipEntry GetNextEntry()
    {
      if (this.\uE005 == null)
        throw new InvalidOperationException(\uE01B.\uE000("\uE15A\uE175\uE176\uE16A\uE17C\uE17D\uE137", 57625));
      if (this.\uE004 != null)
        this.CloseEntry();
      int num1 = this.inputBuffer.ReadLeInt();
      switch (num1)
      {
        case 33639248:
        case 84233040:
        case 101010256:
          this.Close();
          return (ZipEntry) null;
        default:
          if (num1 != 117853008 && num1 != 101075792)
          {
            if (num1 == 808471376 || num1 == 134695760)
              num1 = this.inputBuffer.ReadLeInt();
            if (num1 != 67324752)
              throw new ZipException(\uE01B.\uE000("\uE8B2\uE897\uE88A\uE88B\uE882\uE8C5\uE8A9\uE88A\uE886\uE884\uE889\uE8C5\uE88D\uE880\uE884\uE881\uE880\uE897\uE8C5\uE896\uE88C\uE882\uE88B\uE884\uE891\uE890\uE897\uE880\uE8DF\uE8C5\uE8D5\uE89D", 59621) + string.Format(\uE01B.\uE000("\uF203\uF248\uF242\uF220\uF205", 62072), (object) num1));
            short num2 = (short) this.inputBuffer.ReadLeShort();
            this.\uE001 = this.inputBuffer.ReadLeShort();
            this.\uE002 = this.inputBuffer.ReadLeShort();
            uint num3 = (uint) this.inputBuffer.ReadLeInt();
            int num4 = this.inputBuffer.ReadLeInt();
            this.csize = (long) this.inputBuffer.ReadLeInt();
            this.\uE003 = (long) this.inputBuffer.ReadLeInt();
            int length1 = this.inputBuffer.ReadLeShort();
            int length2 = this.inputBuffer.ReadLeShort();
            bool flag = (this.\uE001 & 1) == 1;
            byte[] numArray = new byte[length1];
            this.inputBuffer.ReadRawBuffer(numArray);
            this.\uE004 = new ZipEntry(ZipConstants.ConvertToStringExt(this.\uE001, numArray), (int) num2);
            this.\uE004.Flags = this.\uE001;
            this.\uE004.CompressionMethod = (CompressionMethod) this.\uE002;
            if ((this.\uE001 & 8) == 0)
            {
              this.\uE004.Crc = (long) num4 & (long) uint.MaxValue;
              this.\uE004.Size = this.\uE003 & (long) uint.MaxValue;
              this.\uE004.CompressedSize = this.csize & (long) uint.MaxValue;
              this.\uE004.\uE000 = (byte) (num4 >> 24 & (int) byte.MaxValue);
            }
            else
            {
              if (num4 != 0)
                this.\uE004.Crc = (long) num4 & (long) uint.MaxValue;
              if (this.\uE003 != 0L)
                this.\uE004.Size = this.\uE003 & (long) uint.MaxValue;
              if (this.csize != 0L)
                this.\uE004.CompressedSize = this.csize & (long) uint.MaxValue;
              this.\uE004.\uE000 = (byte) (num3 >> 8 & (uint) byte.MaxValue);
            }
            this.\uE004.DosTime = (long) num3;
            if (length2 > 0)
            {
              byte[] buffer = new byte[length2];
              this.inputBuffer.ReadRawBuffer(buffer);
              this.\uE004.ExtraData = buffer;
            }
            this.\uE004.\uE000(true);
            if (this.\uE004.CompressedSize >= 0L)
              this.csize = this.\uE004.CompressedSize;
            if (this.\uE004.Size >= 0L)
              this.\uE003 = this.\uE004.Size;
            if (this.\uE002 == 0 && (!flag && this.csize != this.\uE003 || flag && this.csize - 12L != this.\uE003))
              throw new ZipException(\uE01B.\uE000("\uEDD8\uEDFF\uEDE4\uEDF9\uEDEE\uEDEF\uEDA7\uEDAB\uEDE9\uEDFE\uEDFF\uEDAB\uEDE8\uEDE4\uEDE6\uEDFB\uEDF9\uEDEE\uEDF8\uEDF8\uEDEE\uEDEF\uEDAB\uEDAA\uEDB6\uEDAB\uEDFE\uEDE5\uEDE8\uEDE4\uEDE6\uEDFB\uEDF9\uEDEE\uEDF8\uEDF8\uEDEE\uEDEF", 60811));
            this.\uE006 = !this.\uE004.IsCompressionMethodSupported() ? new ZipInputStream.ReadDataHandler(this.\uE002) : new ZipInputStream.ReadDataHandler(this.\uE001);
            return this.\uE004;
          }
          goto case 33639248;
      }
    }

    private void \uE000()
    {
      if (this.inputBuffer.ReadLeInt() != 134695760)
        throw new ZipException(\uE01B.\uE000("\uE0BB\uE09E\uE08B\uE09E\uE0DF\uE09B\uE09A\uE08C\uE09C\uE08D\uE096\uE08F\uE08B\uE090\uE08D\uE0DF\uE08C\uE096\uE098\uE091\uE09E\uE08B\uE08A\uE08D\uE09A\uE0DF\uE091\uE090\uE08B\uE0DF\uE099\uE090\uE08A\uE091\uE09B", 57599));
      this.\uE004.Crc = (long) this.inputBuffer.ReadLeInt() & (long) uint.MaxValue;
      if (this.\uE004.LocalHeaderRequiresZip64)
      {
        this.csize = this.inputBuffer.ReadLeLong();
        this.\uE003 = this.inputBuffer.ReadLeLong();
      }
      else
      {
        this.csize = (long) this.inputBuffer.ReadLeInt();
        this.\uE003 = (long) this.inputBuffer.ReadLeInt();
      }
      this.\uE004.CompressedSize = this.csize;
      this.\uE004.Size = this.\uE003;
    }

    private void \uE000(bool _param1)
    {
      this.StopDecrypting();
      if ((this.\uE001 & 8) != 0)
        this.\uE000();
      this.\uE003 = 0L;
      if (_param1 && (this.\uE005.Value & (long) uint.MaxValue) != this.\uE004.Crc && this.\uE004.Crc != -1L)
        throw new ZipException(\uE01B.\uE000("\uEAE8\uEAF9\uEAE8\uEA8B\uEAC6\uEAC2\uEAD8\uEAC6\uEACA\uEADF\uEAC8\uEAC3", 60075));
      this.\uE005.Reset();
      if (this.\uE002 == 8)
        this.inf.Reset();
      this.\uE004 = (ZipEntry) null;
    }

    public void CloseEntry()
    {
      if (this.\uE005 == null)
        throw new InvalidOperationException(\uE01B.\uE000("\uE83D\uE812\uE811\uE80D\uE81B\uE81A", 59518));
      if (this.\uE004 == null)
        return;
      if (this.\uE002 == 8)
      {
        if ((this.\uE001 & 8) != 0)
        {
          byte[] buffer = new byte[4096];
          do
            ;
          while (this.Read(buffer, 0, buffer.Length) > 0);
          return;
        }
        this.csize -= this.inf.TotalIn;
        this.inputBuffer.Available += this.inf.RemainingInput;
      }
      if ((long) this.inputBuffer.Available > this.csize && this.csize >= 0L)
      {
        this.inputBuffer.Available = (int) ((long) this.inputBuffer.Available - this.csize);
      }
      else
      {
        this.csize -= (long) this.inputBuffer.Available;
        this.inputBuffer.Available = 0;
        long num;
        ZipInputStream zipInputStream;
        for (; this.csize != 0L; zipInputStream.csize -= num)
        {
          num = this.Skip(this.csize);
          if (num <= 0L)
            throw new ZipException(\uE01B.\uE000("\uF3D8\uF3EB\uF3F2\uF3A2\uF3E3\uF3F0\uF3E1\uF3EA\uF3EB\uF3F4\uF3E7\uF3A2\uF3E7\uF3EC\uF3E6\uF3F1\uF3A2\uF3E7\uF3E3\uF3F0\uF3EE\uF3FB\uF3AC", 62338));
          zipInputStream = this;
        }
      }
      this.\uE000(false);
    }

    public override int Available => this.\uE004 == null ? 0 : 1;

    public override long Length
    {
      get
      {
        if (this.\uE004 == null)
          throw new InvalidOperationException(\uE01B.\uE000("\uEF54\uEF75\uEF3A\uEF79\uEF6F\uEF68\uEF68\uEF7F\uEF74\uEF6E\uEF3A\uEF7F\uEF74\uEF6E\uEF68\uEF63", 61210));
        return this.\uE004.Size >= 0L ? this.\uE004.Size : throw new ZipException(\uE01B.\uE000("\uF6B7\uF69E\uF695\uF69C\uF68F\uF693\uF6DB\uF695\uF694\uF68F\uF6DB\uF69A\uF68D\uF69A\uF692\uF697\uF69A\uF699\uF697\uF69E\uF6DB\uF69D\uF694\uF689\uF6DB\uF68F\uF693\uF69E\uF6DB\uF698\uF68E\uF689\uF689\uF69E\uF695\uF68F\uF6DB\uF69E\uF695\uF68F\uF689\uF682", 63227));
      }
    }

    public override int ReadByte()
    {
      byte[] buffer = new byte[1];
      return this.Read(buffer, 0, 1) <= 0 ? -1 : (int) buffer[0] & (int) byte.MaxValue;
    }

    private int \uE003(byte[] _param1, int _param2, int _param3) => throw new InvalidOperationException(\uE01B.\uE000("\uF66E\uF655\uF65A\uF659\uF657\uF65E\uF61B\uF64F\uF654\uF61B\uF649\uF65E\uF65A\uF65F\uF61B\uF65D\uF649\uF654\uF656\uF61B\uF64F\uF653\uF652\uF648\uF61B\uF648\uF64F\uF649\uF65E\uF65A\uF656", 63035));

    private int \uE002(byte[] _param1, int _param2, int _param3) => throw new ZipException(\uE01B.\uE000("\uF33F\uF303\uF30E\uF34B\uF308\uF304\uF306\uF31B\uF319\uF30E\uF318\uF318\uF302\uF304\uF305\uF34B\uF306\uF30E\uF31F\uF303\uF304\uF30F\uF34B\uF30D\uF304\uF319\uF34B\uF31F\uF303\uF302\uF318\uF34B\uF30E\uF305\uF31F\uF319\uF312\uF34B\uF302\uF318\uF34B\uF305\uF304\uF31F\uF34B\uF318\uF31E\uF31B\uF31B\uF304\uF319\uF31F\uF30E\uF30F", 62315));

    private int \uE001(byte[] _param1, int _param2, int _param3)
    {
      if (!this.CanDecompressEntry)
        throw new ZipException(\uE01B.\uE000("\uF139\uF11C\uF117\uF107\uF114\uF107\uF10C\uF155\uF116\uF114\uF11B\uF11B\uF11A\uF101\uF155\uF110\uF10D\uF101\uF107\uF114\uF116\uF101\uF155\uF101\uF11D\uF11C\uF106\uF155\uF110\uF11B\uF101\uF107\uF10C\uF15B\uF155\uF123\uF110\uF107\uF106\uF11C\uF11A\uF11B\uF155\uF107\uF110\uF104\uF100\uF11C\uF107\uF110\uF111\uF155\uF11C\uF106\uF155\uF15D", 61813) + this.\uE004.Version.ToString() + \uE01B.\uE000("\uF881", 63656));
      if (this.\uE004.IsCrypted)
      {
        this.inputBuffer.CryptoTransform = this.\uE000 != null ? new PkzipClassicManaged().CreateDecryptor(PkzipClassic.GenerateKeys(ZipConstants.ConvertToArray(this.\uE000)), (byte[]) null) : throw new ZipException(\uE01B.\uE000("\uEC1B\uEC3A\uEC75\uEC25\uEC34\uEC26\uEC26\uEC22\uEC3A\uEC27\uEC31\uEC75\uEC26\uEC30\uEC21\uEC7B", 60501));
        byte[] outBuffer = new byte[12];
        this.inputBuffer.ReadClearTextBuffer(outBuffer, 0, 12);
        if ((int) outBuffer[11] != (int) this.\uE004.\uE000)
          throw new ZipException(\uE01B.\uE000("\uF25B\uF27C\uF264\uF273\uF27E\uF27B\uF276\uF232\uF262\uF273\uF261\uF261\uF265\uF27D\uF260\uF276", 61970));
        if (this.csize >= 12L)
          this.csize -= 12L;
        else if ((this.\uE004.Flags & 8) == 0)
          throw new ZipException(string.Format(\uE01B.\uE000("\uEC0C\uEC27\uEC3D\uEC3B\uEC30\uEC69\uEC2A\uEC26\uEC24\uEC39\uEC3B\uEC2C\uEC3A\uEC3A\uEC2C\uEC2D\uEC69\uEC3A\uEC20\uEC33\uEC2C\uEC69\uEC32\uEC79\uEC34\uEC69\uEC3D\uEC26\uEC26\uEC69\uEC3A\uEC24\uEC28\uEC25\uEC25\uEC69\uEC2F\uEC26\uEC3B\uEC69\uEC2C\uEC27\uEC2A\uEC3B\uEC30\uEC39\uEC3D\uEC20\uEC26\uEC27", 60489), (object) this.csize));
      }
      else
        this.inputBuffer.CryptoTransform = (ICryptoTransform) null;
      if (this.csize > 0L || (this.\uE001 & 8) != 0)
      {
        if (this.\uE002 == 8 && this.inputBuffer.Available > 0)
          this.inputBuffer.SetInflaterInput(this.inf);
        this.\uE006 = new ZipInputStream.ReadDataHandler(this.\uE000);
        return this.\uE000(_param1, _param2, _param3);
      }
      this.\uE006 = new ZipInputStream.ReadDataHandler(this.\uE003);
      return 0;
    }

    public override int Read(byte[] buffer, int offset, int count)
    {
      if (buffer == null)
        throw new ArgumentNullException(\uE01B.\uE000("\uEDC8\uEDDF\uEDCC\uEDCC\uEDCF\uEDD8", 60842));
      if (offset < 0)
        throw new ArgumentOutOfRangeException(\uE01B.\uE000("\uF201\uF208\uF208\uF21D\uF20B\uF21A", 62062), \uE01B.\uE000("\uF4AA\uF488\uF487\uF487\uF486\uF49D\uF4C9\uF48B\uF48C\uF4C9\uF487\uF48C\uF48E\uF488\uF49D\uF480\uF49F\uF48C", 62697));
      if (count < 0)
        throw new ArgumentOutOfRangeException(\uE01B.\uE000("\uED5B\uED57\uED4D\uED56\uED4C", 60728), \uE01B.\uE000("\uF4AA\uF488\uF487\uF487\uF486\uF49D\uF4C9\uF48B\uF48C\uF4C9\uF487\uF48C\uF48E\uF488\uF49D\uF480\uF49F\uF48C", 62697));
      if (buffer.Length - offset < count)
        throw new ArgumentException(\uE01B.\uE000("\uE3CD\uE3EA\uE3F2\uE3E5\uE3E8\uE3ED\uE3E0\uE3A4\uE3EB\uE3E2\uE3E2\uE3F7\uE3E1\uE3F0\uE3AB\uE3E7\uE3EB\uE3F1\uE3EA\uE3F0\uE3A4\uE3E7\uE3EB\uE3E9\uE3E6\uE3ED\uE3EA\uE3E5\uE3F0\uE3ED\uE3EB\uE3EA", 58244));
      return this.\uE006(buffer, offset, count);
    }

    private int \uE000(byte[] _param1, int _param2, int _param3)
    {
      if (this.\uE005 == null)
        throw new InvalidOperationException(\uE01B.\uE000("\uE83D\uE812\uE811\uE80D\uE81B\uE81A", 59518));
      if (this.\uE004 == null || _param3 <= 0)
        return 0;
      if (_param2 + _param3 > _param1.Length)
        throw new ArgumentException(\uE01B.\uE000("\uF2BB\uF292\uF292\uF287\uF291\uF280\uF2D4\uF2DF\uF2D4\uF297\uF29B\uF281\uF29A\uF280\uF2D4\uF291\uF28C\uF297\uF291\uF291\uF290\uF287\uF2D4\uF296\uF281\uF292\uF292\uF291\uF286\uF2D4\uF287\uF29D\uF28E\uF291", 62196));
      bool flag = false;
      switch (this.\uE002)
      {
        case 0:
          if ((long) _param3 > this.csize && this.csize >= 0L)
            _param3 = (int) this.csize;
          if (_param3 > 0)
          {
            _param3 = this.inputBuffer.ReadClearTextBuffer(_param1, _param2, _param3);
            if (_param3 > 0)
            {
              this.csize -= (long) _param3;
              this.\uE003 -= (long) _param3;
            }
          }
          if (this.csize == 0L)
          {
            flag = true;
            break;
          }
          if (_param3 < 0)
            throw new ZipException(\uE01B.\uE000("\uF37A\uF370\uF379\uF31F\uF356\uF351\uF31F\uF34C\uF34B\uF350\uF34D\uF35A\uF35B\uF31F\uF35D\uF353\uF350\uF35C\uF354", 62271));
          break;
        case 8:
          _param3 = base.Read(_param1, _param2, _param3);
          if (_param3 <= 0)
          {
            this.inputBuffer.Available = this.inf.IsFinished ? this.inf.RemainingInput : throw new ZipException(\uE01B.\uE000("\uE643\uE664\uE66C\uE666\uE66B\uE67E\uE66F\uE678\uE62A\uE664\uE665\uE67E\uE62A\uE66C\uE663\uE664\uE663\uE679\uE662\uE66F\uE66E\uE62B", 58890));
            if ((this.\uE001 & 8) == 0 && (this.inf.TotalIn != this.csize || this.inf.TotalOut != this.\uE003))
              throw new ZipException(\uE01B.\uE000("\uE8CF\uE8F5\uE8E6\uE8F9\uE8BC\uE8F1\uE8F5\uE8EF\uE8F1\uE8FD\uE8E8\uE8FF\uE8F4\uE8A6\uE8BC", 59548) + (object) this.csize + \uE01B.\uE000("\uED1B", 60704) + (object) this.\uE003 + \uE01B.\uE000("\uF00A\uF016\uF007\uF014\uF00A", 61482) + (object) this.inf.TotalIn + \uE01B.\uE000("\uED1B", 60704) + (object) this.inf.TotalOut);
            this.inf.Reset();
            flag = true;
            break;
          }
          break;
      }
      if (_param3 > 0)
        this.\uE005.Update(_param1, _param2, _param3);
      if (flag)
        this.\uE000(true);
      return _param3;
    }

    public override void Close()
    {
      this.\uE006 = new ZipInputStream.ReadDataHandler(this.\uE003);
      this.\uE005 = (Crc32) null;
      this.\uE004 = (ZipEntry) null;
      base.Close();
    }

    private delegate int ReadDataHandler(byte[] b, int offset, int length);
  }
}
