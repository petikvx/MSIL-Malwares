// Decompiled with JetBrains decompiler
// Type: iKeylogg_v_2._0.Fp
// Assembly: iKeylogg v2, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 78503FFA-555C-4BC6-896F-5622120BF4EC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Constructor.MSIL.Logger.v-8daacbbea0563990816926718ebd57f03f257308584d6e6620e3461cdff7be60.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace iKeylogg_v_2._0
{
  [DesignerGenerated]
  public class Fp : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("GroupBox5")]
    private GroupBox _GroupBox5;
    [AccessedThroughProperty("type")]
    private ComboBox _type;
    [AccessedThroughProperty("CheckBox14C")]
    private CheckBox _CheckBox14C;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;

    [DebuggerNonUserCode]
    static Fp()
    {
    }

    [DebuggerNonUserCode]
    public Fp()
    {
      lock (Fp.__ENCList)
        Fp.__ENCList.Add(new WeakReference((object) this));
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.GroupBox5 = new GroupBox();
      this.type = new ComboBox();
      this.CheckBox14C = new CheckBox();
      this.TextBox4 = new TextBox();
      this.Button1 = new Button();
      this.GroupBox5.SuspendLayout();
      this.SuspendLayout();
      this.GroupBox5.Controls.Add((Control) this.type);
      this.GroupBox5.Controls.Add((Control) this.CheckBox14C);
      this.GroupBox5.Controls.Add((Control) this.TextBox4);
      GroupBox groupBox5_1 = this.GroupBox5;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      groupBox5_1.Location = point2;
      this.GroupBox5.Name = "GroupBox5";
      GroupBox groupBox5_2 = this.GroupBox5;
      Size size1 = new Size(271, 79);
      Size size2 = size1;
      groupBox5_2.Size = size2;
      this.GroupBox5.TabIndex = 75;
      this.GroupBox5.TabStop = false;
      this.type.Enabled = false;
      this.type.ForeColor = Color.Black;
      this.type.Items.AddRange(new object[3]
      {
        (object) "B",
        (object) "KB",
        (object) "MB"
      });
      ComboBox type1 = this.type;
      point1 = new Point(222, 47);
      Point point3 = point1;
      type1.Location = point3;
      this.type.Name = "type";
      ComboBox type2 = this.type;
      size1 = new Size(43, 21);
      Size size3 = size1;
      type2.Size = size3;
      this.type.TabIndex = 52;
      this.type.Text = "B";
      this.CheckBox14C.AutoSize = true;
      CheckBox checkBox14C1 = this.CheckBox14C;
      point1 = new Point(11, 20);
      Point point4 = point1;
      checkBox14C1.Location = point4;
      this.CheckBox14C.Name = "CheckBox14C";
      CheckBox checkBox14C2 = this.CheckBox14C;
      size1 = new Size(81, 17);
      Size size4 = size1;
      checkBox14C2.Size = size4;
      this.CheckBox14C.TabIndex = 22;
      this.CheckBox14C.Text = "File Pumper";
      this.CheckBox14C.UseVisualStyleBackColor = true;
      this.TextBox4.Enabled = false;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(9, 48);
      Point point5 = point1;
      textBox4_1.Location = point5;
      this.TextBox4.MaxLength = 32799;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(207, 20);
      Size size5 = size1;
      textBox4_2.Size = size5;
      this.TextBox4.TabIndex = 24;
      this.TextBox4.TextAlign = HorizontalAlignment.Center;
      this.Button1.Enabled = false;
      Button button1_1 = this.Button1;
      point1 = new Point(197, 97);
      Point point6 = point1;
      button1_1.Location = point6;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(86, 23);
      Size size6 = size1;
      button1_2.Size = size6;
      this.Button1.TabIndex = 78;
      this.Button1.Text = "Save Settings";
      this.Button1.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(288, 129);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.GroupBox5);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Fp);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = "File Pumper";
      this.GroupBox5.ResumeLayout(false);
      this.GroupBox5.PerformLayout();
      this.ResumeLayout(false);
    }

    internal virtual GroupBox GroupBox5
    {
      [DebuggerNonUserCode] get => this._GroupBox5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._GroupBox5 = value;
    }

    internal virtual ComboBox type
    {
      [DebuggerNonUserCode] get => this._type;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.type_SelectedIndexChanged);
        if (this._type != null)
          this._type.SelectedIndexChanged -= eventHandler;
        this._type = value;
        if (this._type == null)
          return;
        this._type.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual CheckBox CheckBox14C
    {
      [DebuggerNonUserCode] get => this._CheckBox14C;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox14C_CheckedChanged);
        if (this._CheckBox14C != null)
          this._CheckBox14C.CheckedChanged -= eventHandler;
        this._CheckBox14C = value;
        if (this._CheckBox14C == null)
          return;
        this._CheckBox14C.CheckedChanged += eventHandler;
      }
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TextBox4_TextChanged);
        if (this._TextBox4 != null)
          this._TextBox4.TextChanged -= eventHandler;
        this._TextBox4 = value;
        if (this._TextBox4 == null)
          return;
        this._TextBox4.TextChanged += eventHandler;
      }
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    private void CheckBox14C_CheckedChanged(object sender, EventArgs e)
    {
      if (this.CheckBox14C.Checked)
      {
        this.type.Enabled = true;
        this.TextBox4.Enabled = true;
        this.Button1.Enabled = true;
      }
      else
      {
        this.type.Enabled = false;
        this.TextBox4.Enabled = false;
        this.Button1.Enabled = false;
      }
    }

    private void TextBox4_TextChanged(object sender, EventArgs e)
    {
    }

    private void type_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    private void Button1_Click(object sender, EventArgs e) => this.Hide();
  }
}
