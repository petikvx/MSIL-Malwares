// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartUsageCore.UsageReportSender
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D96FE905-3567-4568-B7BF-8C667D038E34
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.DarkKomet.aykq-fdc0862a8406ebbcbbf4f093602f275a5f88cc2d88940d115e6108504c21b1f4.exe

using SmartAssembly.Delegates;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections.Generic;
using System.IO;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Xml;

namespace SmartAssembly.SmartUsageCore
{
  public sealed class UsageReportSender : ReportSender
  {
    private UsageCounts m_UsageCounts;
    private byte[] m_ReportData;
    [NonSerialized]
    internal static GetString \u0087;

    public UsageReportSender(UsageCounts usageCounts) => this.m_UsageCounts = usageCounts;

    private unsafe void GenerateReportData()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
      UsageCounts usageCounts = this.m_UsageCounts;
      this.m_UsageCounts = (UsageCounts) null;
      if (this.m_ReportData != null || usageCounts == null || usageCounts.IsEmpty)
        return;
      ulong[] staticFeatureCounts = usageCounts.StaticFeatureCounts;
      Dictionary<string, ulong> dynamicFeatureCounts = usageCounts.DynamicFeatureCounts;
      MemoryStream w = new MemoryStream();
      XmlWriter xmlWriter1 = (XmlWriter) new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
      xmlWriter1.WriteStartDocument();
      using (new XmlElementSpanner(xmlWriter1, UsageReportSender.\u0087(2234)))
      {
        xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2251), UsageReportSender.\u0087(1165).ToUpper());
        xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2268), DateTime.Now.ToString(UsageReportSender.\u0087(2281)));
        xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2286), Guid.NewGuid().ToString(UsageReportSender.\u0087(2299)));
        SecurityIdentifier user = WindowsIdentity.GetCurrent().User;
        string str1;
        using (MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider())
          str1 = new Guid(cryptoServiceProvider.ComputeHash(Encoding.Unicode.GetBytes(user.ToString()))).ToString();
        xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2304), str1);
        using (new XmlElementSpanner(xmlWriter1, UsageReportSender.\u0087(2313)))
          xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2330), UsageReportSender.\u0087(2339));
        using (new XmlElementSpanner(xmlWriter1, UsageReportSender.\u0087(2344)))
        {
          *(int*) ((IntPtr) voidPtr + 8) = 0;
          while (*(int*) ((IntPtr) voidPtr + 8) < staticFeatureCounts.Length)
          {
            if (staticFeatureCounts[*(int*) ((IntPtr) voidPtr + 8)] > 0UL)
            {
              xmlWriter1.WriteStartElement(UsageReportSender.\u0087(2357));
              xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2370), ((int*) ((IntPtr) voidPtr + 8))->ToString());
              xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2330), staticFeatureCounts[*(int*) ((IntPtr) voidPtr + 8)].ToString());
              xmlWriter1.WriteEndElement();
            }
            *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
          }
        }
        using (new XmlElementSpanner(xmlWriter1, UsageReportSender.\u0087(2375)))
        {
          foreach (KeyValuePair<string, ulong> keyValuePair in dynamicFeatureCounts)
          {
            if (keyValuePair.Value > 0UL)
            {
              xmlWriter1.WriteStartElement(UsageReportSender.\u0087(2357));
              xmlWriter1.WriteAttributeString(UsageReportSender.\u0087(2396), keyValuePair.Key);
              XmlWriter xmlWriter2 = xmlWriter1;
              string localName = UsageReportSender.\u0087(2330);
              *(long*) voidPtr = (long) keyValuePair.Value;
              string str2 = ((ulong*) voidPtr)->ToString();
              xmlWriter2.WriteAttributeString(localName, str2);
              xmlWriter1.WriteEndElement();
            }
          }
        }
      }
      xmlWriter1.WriteEndDocument();
      xmlWriter1.Flush();
      w.Flush();
      this.m_ReportData = w.ToArray();
    }

    public void SendReport()
    {
label_0:
      if (this.m_UsageCounts == null)
        this.m_UsageCounts = UsageCountStore.GetAllUsageCountsAndReset();
      do
      {
        this.GenerateReportData();
        if (true)
          this.SendReport(this.m_ReportData, ReportSender.NotificationEmailSettings.NullEmailSettings);
        else
          goto label_0;
      }
      while (false);
    }

    static UsageReportSender() => SmartAssembly.HouseOfCards.Strings.CreateGetStringDelegate(typeof (UsageReportSender));
  }
}
