// Decompiled with JetBrains decompiler
// Type: c.Wrappers.DicWrapper
// Assembly: c, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CCB3E154-F36D-403E-8019-8861E9AEB8FC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Vobfus.gen-191db013c67081442ef5e75edd00c2572f6ec9d7f629ddac9bba8942722c061d.exe

using c.Configurations;
using c.Connections;
using c.Specifications;
using Fireball.Docking;
using GLuaR.Attributes;
using GLuaR.Importers;
using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace c.Wrappers
{
  public class DicWrapper : DockableWindow
  {
    private ExceptionComparatorSpec m_RoleWrapper;
    private IContainer structWrapper;
    private Label itemWrapper;
    private TextBox _ParamsWrapper;
    private TextBox _BroadcasterWrapper;
    private Label m_ListenerWrapper;
    private Label m_InterpreterWrapper;
    private ComboBox _PrinterWrapper;
    private TextBox productWrapper;
    private Label codeWrapper;
    private GroupBox _CreatorWrapper;
    private Label proxyWrapper;
    private TextBox _HelperWrapper;
    private TextBox m_StrategyWrapper;
    private Label m_GlobalWrapper;
    private TextBox attrWrapper;
    private Label _UtilsWrapper;
    private TextBox m_ParserWrapper;
    private Label authenticationWrapper;
    private GroupBox _ConfigurationWrapper;
    private CheckBox managerWrapper;
    private ListView prototypeWrapper;
    private Label _TokenWrapper;
    private ColumnHeader exceptionWrapper;
    private ColumnHeader _RequestWrapper;
    private Button serializerWrapper;
    private Button m_IssuerWrapper;
    private Button _DatabaseWrapper;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public DicWrapper(ExceptionComparatorSpec i)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_13;
            case 1:
              goto label_11;
            case 2:
              goto label_2;
            case 3:
            case 6:
              this.managerWrapper.Checked = i.m_Printer;
              for (int index = 0; index < i.m_Creator.Count; ++index)
              {
                ListViewItem owner = new ListViewItem(index.ToString());
                owner.SubItems.Add(new ListViewItem.ListViewSubItem(owner, i.m_Creator[index].token.ToString()));
                this.prototypeWrapper.Items.Add(owner);
              }
              num2 = 9;
              continue;
            case 4:
            case 5:
              goto label_1;
            case 7:
              this.m_RoleWrapper = i;
              if (DicWrapper.EnableRegistry())
              {
                num2 = 2;
                continue;
              }
              goto case 3;
            case 8:
              this._HelperWrapper.Text = i.m_Global;
              this.attrWrapper.Text = i.@struct;
              this.m_StrategyWrapper.Text = i._Role;
              this.m_ParserWrapper.Text = i._Item;
              num2 = 3;
              continue;
            case 9:
              goto label_14;
            default:
              goto label_5;
          }
        }
label_1:
        this._PrinterWrapper.SelectedItem = (object) i.strategy.ToString();
        this.productWrapper.Text = i.m_Attr;
        num1 = 8;
        continue;
label_2:
        this._ParamsWrapper.Text = i.m_Product;
        this._BroadcasterWrapper.Text = i._Params;
        goto label_1;
label_5:
        num1 = 5;
        continue;
label_11:
        ImporterMapper.InitAccount();
        num1 = 0;
        continue;
label_13:
        this.structWrapper = (IContainer) null;
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this.GetRule();
        num1 = 7;
      }
label_14:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ResolveRule(object param, EventArgs attr)
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        ConsumerWrapper consumerWrapper;
        while (true)
        {
          switch (num2)
          {
            case 0:
              consumerWrapper = new ConsumerWrapper();
              int num3 = 5;
              num2 = DicWrapper.FindRegistry() ? num3 : num3;
              continue;
            case 1:
            case 5:
              goto label_1;
            case 2:
              goto label_4;
            case 3:
              goto label_13;
            case 4:
              goto label_5;
            case 6:
              goto label_12;
            default:
              goto label_11;
          }
        }
label_1:
        if (consumerWrapper.ShowDialog() != DialogResult.OK)
        {
          num1 = 3;
          continue;
        }
        bool flag = consumerWrapper.ComputeDefinition() == -1;
label_5:
        if (!flag)
        {
          this.SearchRule(consumerWrapper.ComputeDefinition());
          num1 = 6;
          continue;
        }
        break;
label_11:
        num1 = 4;
      }
      return;
label_4:
      return;
label_13:
      return;
label_12:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void StopRule(object var1, EventArgs caller)
    {
      int num = 3;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            flag = this.prototypeWrapper.SelectedItems.Count > 0;
            if (true)
            {
              num = 2;
              continue;
            }
            goto case 4;
          case 1:
          case 2:
            if (!flag)
              goto label_2;
            else
              goto case 4;
          case 4:
            this.prototypeWrapper.Items.Remove(this.prototypeWrapper.SelectedItems[0]);
            if (DicWrapper.EnableRegistry())
            {
              num = 5;
              continue;
            }
            goto label_7;
          case 5:
            goto label_7;
          default:
            num = 4;
            continue;
        }
      }
label_2:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PatchRule(object asset, EventArgs cust)
    {
      int num = 3;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            flag = this._PrinterWrapper.SelectedItem.ToString() == "Addon";
            num = 2;
            continue;
          case 1:
          case 2:
            if (!flag)
            {
              this._ConfigurationWrapper.Enabled = false;
              num = 5;
              continue;
            }
            goto label_4;
          case 4:
            goto label_4;
          case 5:
            goto label_7;
          default:
            if (true)
            {
              num = 4;
              continue;
            }
            goto label_4;
        }
      }
label_4:
      this._ConfigurationWrapper.Enabled = true;
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ForgotRule(object def, EventArgs map) => this.Save();

    public ExceptionComparatorSpec Project
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.m_RoleWrapper;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SearchRule(int vHigh)
    {
      int num1 = 4;
      while (true)
      {
        int num2 = num1;
        int count;
        ListViewItem owner;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_6;
            case 1:
            case 3:
              owner = new ListViewItem(count.ToString());
              owner.SubItems.Add(new ListViewItem.ListViewSubItem(owner, vHigh.ToString()));
              goto case 2;
            case 2:
              this.prototypeWrapper.Items.Add(owner);
              num2 = 5;
              continue;
            case 5:
              goto label_5;
            default:
              int num3 = 2;
              num2 = DicWrapper.FindRegistry() ? num3 : num3;
              continue;
          }
        }
label_6:
        count = this.prototypeWrapper.Items.Count;
        num1 = 3;
      }
label_5:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Save()
    {
      int num1 = 4;
      IEnumerator enumerator;
      while (true)
      {
        int num2 = num1;
        char[] charArray;
        while (true)
        {
          int index1;
          char[] invalidFileNameChars;
          char ch1;
          int index2;
          switch (num2)
          {
            case 0:
              goto label_9;
            case 1:
            case 8:
              this.m_RoleWrapper.m_Printer = this.managerWrapper.Checked;
              this.m_RoleWrapper.m_Creator.Clear();
              enumerator = this.prototypeWrapper.Items.GetEnumerator();
              if (DicWrapper.EnableRegistry())
              {
                num2 = 11;
                continue;
              }
              goto case 5;
            case 2:
              index1 = 0;
              goto case 10;
            case 3:
              this.m_RoleWrapper.strategy = (LsBrkCond) Enum.Parse(typeof (LsBrkCond), this._PrinterWrapper.SelectedItem.ToString());
              this.m_RoleWrapper.m_Attr = this.productWrapper.Text;
              this.m_RoleWrapper.m_Global = this._HelperWrapper.Text;
              this.m_RoleWrapper.@struct = this.attrWrapper.Text;
              this.m_RoleWrapper._Role = this.m_StrategyWrapper.Text;
              this.m_RoleWrapper._Item = this.m_ParserWrapper.Text;
              if (true)
              {
                num2 = 1;
                continue;
              }
              goto case 7;
            case 4:
              goto label_13;
            case 5:
            case 6:
              this.m_RoleWrapper.m_Product = this._ParamsWrapper.Text;
              this.m_RoleWrapper._Params = this._BroadcasterWrapper.Text;
              num2 = 3;
              continue;
            case 7:
              index2 = 0;
              break;
            case 9:
              ++index2;
              break;
            case 10:
              if (index1 < invalidFileNameChars.Length)
              {
                char ch2 = invalidFileNameChars[index1];
                if ((int) ch1 != (int) ch2)
                {
                  ++index1;
                  if (true)
                  {
                    num2 = 10;
                    continue;
                  }
                  goto case 3;
                }
                else
                  goto label_3;
              }
              else
                goto label_12;
            case 11:
              goto label_23;
            default:
              if (DicWrapper.EnableRegistry())
              {
                num2 = 0;
                continue;
              }
              goto case 1;
          }
          if (index2 < charArray.Length)
          {
            ch1 = charArray[index2];
            invalidFileNameChars = Path.GetInvalidFileNameChars();
            int num3 = 2;
            num2 = DicWrapper.FindRegistry() ? num3 : num3;
          }
          else
            goto label_16;
        }
label_9:
        File.Copy(this.m_RoleWrapper._Code + "\\" + this.m_RoleWrapper.m_Product + ".glu", this.m_RoleWrapper._Code + "\\" + this._ParamsWrapper.Text + ".glu");
        File.Delete(this.m_RoleWrapper._Code + "\\" + this.m_RoleWrapper.m_Product + ".glu");
label_10:
        this.m_RoleWrapper._Interpreter = this.m_RoleWrapper._Code + "\\" + this._ParamsWrapper.Text + ".glu";
        num1 = 5;
        continue;
label_12:
        num1 = 9;
        continue;
label_13:
        charArray = this._ParamsWrapper.Text.ToCharArray();
        num1 = 7;
        continue;
label_16:
        if (!(this.m_RoleWrapper.m_Product != this._ParamsWrapper.Text))
          goto label_10;
        else
          goto label_9;
      }
label_3:
      int num4 = (int) ConsumerConfigConfig.EnableFactory("The project name you have chosen is invalid.");
      return;
label_23:
      try
      {
        while (enumerator.MoveNext())
        {
          ListViewItem current = (ListViewItem) enumerator.Current;
          int num5 = 3;
          ProcessPropertyConnector propertyConnector;
          while (true)
          {
            switch (num5)
            {
              case 0:
              case 3:
                propertyConnector = new ProcessPropertyConnector();
                propertyConnector.token = Convert.ToInt32(current.SubItems[1].Text);
                goto case 1;
              case 1:
              case 2:
                this.m_RoleWrapper.m_Creator.Add(propertyConnector);
                if (true)
                {
                  num5 = 4;
                  continue;
                }
                goto case 0;
              case 4:
                goto label_29;
              default:
                if (DicWrapper.EnableRegistry())
                {
                  num5 = 2;
                  continue;
                }
                goto label_29;
            }
          }
label_29:;
        }
      }
      finally
      {
        if (enumerator is IDisposable disposable)
          disposable.Dispose();
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void GetRule()
    {
      int num1 = 34;
      if (DicWrapper.EnableRegistry())
        goto label_22;
label_1:
      this._HelperWrapper.Size = new Size(97, 20);
      this._HelperWrapper.TabIndex = 11;
      this._ConfigurationWrapper.Controls.Add((Control) this.m_IssuerWrapper);
      this._ConfigurationWrapper.Controls.Add((Control) this.serializerWrapper);
      this._ConfigurationWrapper.Controls.Add((Control) this._TokenWrapper);
      this._ConfigurationWrapper.Controls.Add((Control) this.prototypeWrapper);
      int num2 = 11;
label_21:
      num1 = num2;
label_22:
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_38;
          case 1:
            goto label_50;
          case 2:
            goto label_36;
          case 3:
          case 24:
            goto label_15;
          case 4:
            goto label_8;
          case 5:
            goto label_4;
          case 6:
            goto label_29;
          case 7:
            goto label_10;
          case 8:
            goto label_19;
          case 9:
            this.serializerWrapper.Size = new Size(20, 20);
            this.serializerWrapper.TabIndex = 2;
            this.serializerWrapper.Text = "+";
            this.serializerWrapper.UseVisualStyleBackColor = true;
            this.serializerWrapper.Click += new EventHandler(this.ResolveRule);
            this._TokenWrapper.AutoSize = true;
            this._TokenWrapper.Location = new Point(6, 16);
            this._TokenWrapper.Name = "label9";
            this._TokenWrapper.Size = new Size(99, 13);
            this._TokenWrapper.TabIndex = 1;
            this._TokenWrapper.Text = "GCF Requirements:";
            this.prototypeWrapper.Columns.AddRange(new ColumnHeader[2]
            {
              this.exceptionWrapper,
              this._RequestWrapper
            });
            this.prototypeWrapper.FullRowSelect = true;
            this.prototypeWrapper.GridLines = true;
            this.prototypeWrapper.Location = new Point(6, 34);
            this.prototypeWrapper.MultiSelect = false;
            this.prototypeWrapper.Name = "listView1";
            this.prototypeWrapper.Size = new Size(408, 82);
            this.prototypeWrapper.TabIndex = 0;
            this.prototypeWrapper.UseCompatibleStateImageBehavior = false;
            this.prototypeWrapper.View = View.Details;
            this.exceptionWrapper.Text = "Index";
            if (true)
            {
              num1 = 40;
              continue;
            }
            goto label_38;
          case 10:
            goto label_9;
          case 11:
            this._ConfigurationWrapper.Location = new Point(16, 206);
            if (true)
            {
              num1 = 5;
              continue;
            }
            goto label_50;
          case 12:
            this._BroadcasterWrapper.Size = new Size(200, 20);
            this._BroadcasterWrapper.TabIndex = 3;
            this.m_ListenerWrapper.AutoSize = true;
            this.m_ListenerWrapper.Location = new Point(236, 18);
            if (!DicWrapper.FindRegistry())
            {
              num1 = 15;
              continue;
            }
            goto label_43;
          case 13:
            goto label_24;
          case 14:
            goto label_31;
          case 15:
            this.m_ListenerWrapper.Name = "label2";
            this.m_ListenerWrapper.Size = new Size(63, 13);
            if (DicWrapper.EnableRegistry())
            {
              num1 = 30;
              continue;
            }
            goto label_8;
          case 16:
            goto label_40;
          case 17:
            goto label_12;
          case 18:
            this.managerWrapper.UseVisualStyleBackColor = true;
            this.m_ParserWrapper.Location = new Point(212, 32);
            this.m_ParserWrapper.Name = "textBox7";
            this.m_ParserWrapper.Size = new Size(200, 20);
            this.m_ParserWrapper.TabIndex = 17;
            this.authenticationWrapper.AutoSize = true;
            this.authenticationWrapper.Location = new Point(212, 16);
            this.authenticationWrapper.Name = "label8";
            this.authenticationWrapper.Size = new Size(49, 13);
            this.authenticationWrapper.TabIndex = 16;
            num1 = 39;
            continue;
          case 19:
            goto label_53;
          case 20:
            this.m_GlobalWrapper.Text = "Email:";
            this.attrWrapper.Location = new Point(6, 32);
            if (true)
            {
              num1 = 13;
              continue;
            }
            goto label_46;
          case 21:
            goto label_6;
          case 22:
            this.serializerWrapper.Location = new Point(368, 9);
            num1 = 25;
            continue;
          case 23:
            goto label_1;
          case 25:
            goto label_28;
          case 26:
          case 32:
            goto label_27;
          case 27:
            goto label_48;
          case 28:
            goto label_39;
          case 29:
            this._RequestWrapper.Text = "Application ID";
            this._RequestWrapper.Width = 334;
            this._DatabaseWrapper.Location = new Point(361, 334);
            num1 = 19;
            continue;
          case 30:
            goto label_46;
          case 31:
            goto label_16;
          case 33:
            goto label_13;
          case 34:
            this.itemWrapper = new Label();
            num1 = 4;
            continue;
          case 35:
            this.m_StrategyWrapper.Location = new Point(6, 71);
            this.m_StrategyWrapper.Name = "textBox6";
            this.m_StrategyWrapper.Size = new Size(200, 20);
            if (!DicWrapper.FindRegistry())
            {
              num1 = 32;
              continue;
            }
            goto label_6;
          case 36:
            goto label_51;
          case 37:
            this._DatabaseWrapper.Size = new Size(75, 23);
            if (true)
            {
              num1 = 46;
              continue;
            }
            goto case 20;
          case 38:
            this._BroadcasterWrapper.Name = "textBox2";
            int num3 = 12;
            num1 = DicWrapper.FindRegistry() ? num3 : num3;
            continue;
          case 39:
            this.authenticationWrapper.Text = "Website:";
            goto case 35;
          case 40:
            goto label_41;
          case 41:
            goto label_52;
          case 42:
            this._CreatorWrapper.Name = "groupBox1";
            this._CreatorWrapper.Size = new Size(420, 100);
            this._CreatorWrapper.TabIndex = 9;
            this._CreatorWrapper.TabStop = false;
            this._CreatorWrapper.Text = "Author Info";
            this.managerWrapper.AutoSize = true;
            this.managerWrapper.Location = new Point(212, 73);
            this.managerWrapper.Name = "checkBox1";
            num1 = 41;
            continue;
          case 43:
            goto label_17;
          case 44:
            goto label_3;
          case 45:
            this.m_GlobalWrapper.Location = new Point(6, 55);
            this.m_GlobalWrapper.Name = "label7";
            this.m_GlobalWrapper.Size = new Size(35, 13);
            this.m_GlobalWrapper.TabIndex = 14;
            if (DicWrapper.EnableRegistry())
            {
              num1 = 20;
              continue;
            }
            goto label_31;
          case 46:
            goto label_32;
          case 47:
            this.itemWrapper.Location = new Point(16, 18);
            this.itemWrapper.Name = "label1";
            num1 = 33;
            continue;
          case 48:
            this._PrinterWrapper.FormattingEnabled = true;
            this._PrinterWrapper.Items.AddRange(new object[2]
            {
              (object) "Addon",
              (object) "Gamemode"
            });
            this._PrinterWrapper.Location = new Point(16, 73);
            this._PrinterWrapper.Name = "comboBox1";
            this._PrinterWrapper.Size = new Size(200, 21);
            this._PrinterWrapper.TabIndex = 6;
            this._PrinterWrapper.SelectedIndexChanged += new EventHandler(this.PatchRule);
            this.productWrapper.Location = new Point(236, 73);
            if (true)
            {
              num1 = 8;
              continue;
            }
            goto label_48;
          case 49:
            goto label_43;
          case 50:
            this.attrWrapper.Size = new Size(200, 20);
            if (true)
            {
              num1 = 14;
              continue;
            }
            goto label_3;
          case 51:
            goto label_26;
          default:
            goto label_23;
        }
      }
label_3:
      this.serializerWrapper = new Button();
      num2 = 2;
      goto label_21;
label_4:
      this._ConfigurationWrapper.Name = "groupBox2";
      this._ConfigurationWrapper.Size = new Size(420, 122);
      this._ConfigurationWrapper.TabIndex = 12;
      this._ConfigurationWrapper.TabStop = false;
      this._ConfigurationWrapper.Text = "Addon Specific";
      this.m_IssuerWrapper.FlatStyle = FlatStyle.Popup;
      this.m_IssuerWrapper.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.m_IssuerWrapper.Location = new Point(394, 9);
      num2 = 21;
      goto label_21;
label_6:
      this.m_IssuerWrapper.Name = "button2";
      this.m_IssuerWrapper.Size = new Size(20, 20);
      this.m_IssuerWrapper.TabIndex = 3;
      this.m_IssuerWrapper.Text = "-";
      this.m_IssuerWrapper.UseVisualStyleBackColor = true;
      this.m_IssuerWrapper.Click += new EventHandler(this.StopRule);
      this.serializerWrapper.FlatStyle = FlatStyle.Popup;
      this.serializerWrapper.Font = new Font("Microsoft Sans Serif", 6.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      num2 = 22;
      goto label_21;
label_8:
      this._ParamsWrapper = new TextBox();
      this._BroadcasterWrapper = new TextBox();
      num2 = 16;
      goto label_21;
label_9:
      this._ConfigurationWrapper = new GroupBox();
      this.m_IssuerWrapper = new Button();
      num2 = 44;
      goto label_21;
label_10:
      this._CreatorWrapper.SuspendLayout();
      this._ConfigurationWrapper.SuspendLayout();
      ((Control) this).SuspendLayout();
      this.itemWrapper.AutoSize = true;
      num2 = 47;
      goto label_21;
label_12:
      this.m_InterpreterWrapper.TabIndex = 4;
      this.m_InterpreterWrapper.Text = "Project Type:";
      this._PrinterWrapper.DropDownStyle = ComboBoxStyle.DropDownList;
      num2 = 48;
      goto label_21;
label_13:
      this.itemWrapper.Size = new Size(74, 13);
      this.itemWrapper.TabIndex = 0;
      this.itemWrapper.Text = "Project Name:";
      this._ParamsWrapper.Location = new Point(16, 34);
      this._ParamsWrapper.Name = "textBox1";
      this._ParamsWrapper.Size = new Size(200, 20);
      this._ParamsWrapper.TabIndex = 1;
      this._BroadcasterWrapper.Location = new Point(236, 34);
      num2 = 38;
      goto label_21;
label_15:
      this.codeWrapper = new Label();
      this._CreatorWrapper = new GroupBox();
      this.managerWrapper = new CheckBox();
      this.m_ParserWrapper = new TextBox();
      this.authenticationWrapper = new Label();
      num2 = 27;
      goto label_21;
label_16:
      this._HelperWrapper.Name = "textBox4";
      num2 = 23;
      goto label_21;
label_17:
      this._CreatorWrapper.Controls.Add((Control) this._UtilsWrapper);
      this._CreatorWrapper.Location = new Point(16, 100);
      num2 = 42;
      goto label_21;
label_19:
      this.productWrapper.Name = "textBox3";
      this.productWrapper.Size = new Size(97, 20);
      this.productWrapper.TabIndex = 8;
      this.codeWrapper.AutoSize = true;
      this.codeWrapper.Location = new Point(236, 57);
      this.codeWrapper.Name = "label4";
      this.codeWrapper.Size = new Size(45, 13);
      this.codeWrapper.TabIndex = 7;
      this.codeWrapper.Text = "Version:";
      this._CreatorWrapper.Controls.Add((Control) this.managerWrapper);
      this._CreatorWrapper.Controls.Add((Control) this.m_ParserWrapper);
      this._CreatorWrapper.Controls.Add((Control) this.authenticationWrapper);
      this._CreatorWrapper.Controls.Add((Control) this.m_StrategyWrapper);
      this._CreatorWrapper.Controls.Add((Control) this.m_GlobalWrapper);
      this._CreatorWrapper.Controls.Add((Control) this.attrWrapper);
      num2 = 43;
      goto label_21;
label_26:
      return;
label_23:
      num2 = 35;
      goto label_21;
label_24:
      this.attrWrapper.Name = "textBox5";
      num2 = 50;
      goto label_21;
label_27:
      this.m_StrategyWrapper.TabIndex = 15;
      this.m_GlobalWrapper.AutoSize = true;
      num2 = 45;
      goto label_21;
label_28:
      this.serializerWrapper.Name = "button1";
      num2 = 9;
      goto label_21;
label_29:
      this._ConfigurationWrapper.PerformLayout();
      ((Control) this).ResumeLayout(false);
      ((Control) this).PerformLayout();
      num2 = 51;
      goto label_21;
label_31:
      this.attrWrapper.TabIndex = 13;
      this._UtilsWrapper.AutoSize = true;
      this._UtilsWrapper.Location = new Point(6, 16);
      this._UtilsWrapper.Name = "label6";
      this._UtilsWrapper.Size = new Size(38, 13);
      this._UtilsWrapper.TabIndex = 12;
      num2 = 0;
      goto label_21;
label_32:
      this._DatabaseWrapper.TabIndex = 13;
      this._DatabaseWrapper.Text = "Save";
      this._DatabaseWrapper.UseVisualStyleBackColor = true;
      this._DatabaseWrapper.Click += new EventHandler(this.ForgotRule);
      ((ContainerControl) this).AutoScaleDimensions = new SizeF(6f, 13f);
      ((ContainerControl) this).AutoScaleMode = AutoScaleMode.Font;
      ((Control) this).Controls.Add((Control) this._DatabaseWrapper);
      ((Control) this).Controls.Add((Control) this._ConfigurationWrapper);
      ((Control) this).Controls.Add((Control) this._HelperWrapper);
      ((Control) this).Controls.Add((Control) this.proxyWrapper);
      ((Control) this).Controls.Add((Control) this._CreatorWrapper);
      ((Control) this).Controls.Add((Control) this.productWrapper);
      ((Control) this).Controls.Add((Control) this.codeWrapper);
      num2 = 49;
      goto label_21;
label_36:
      this._TokenWrapper = new Label();
      this.prototypeWrapper = new ListView();
      this.exceptionWrapper = new ColumnHeader();
      num2 = 28;
      goto label_21;
label_38:
      this._UtilsWrapper.Text = "Name:";
      this.proxyWrapper.AutoSize = true;
      this.proxyWrapper.Location = new Point(338, 57);
      this.proxyWrapper.Name = "label5";
      this.proxyWrapper.Size = new Size(45, 13);
      this.proxyWrapper.TabIndex = 10;
      this.proxyWrapper.Text = "Update:";
      this._HelperWrapper.Location = new Point(339, 73);
      num2 = 31;
      goto label_21;
label_39:
      this._RequestWrapper = new ColumnHeader();
      this._DatabaseWrapper = new Button();
      num2 = 7;
      goto label_21;
label_40:
      this.m_ListenerWrapper = new Label();
      this.m_InterpreterWrapper = new Label();
      this._PrinterWrapper = new ComboBox();
      this.productWrapper = new TextBox();
      num2 = 24;
      goto label_21;
label_41:
      this.exceptionWrapper.Width = 70;
      num2 = 29;
      goto label_21;
label_43:
      ((Control) this).Controls.Add((Control) this._PrinterWrapper);
      ((Control) this).Controls.Add((Control) this.m_InterpreterWrapper);
      ((Control) this).Controls.Add((Control) this._BroadcasterWrapper);
      ((Control) this).Controls.Add((Control) this.m_ListenerWrapper);
      ((Control) this).Controls.Add((Control) this._ParamsWrapper);
      ((Control) this).Controls.Add((Control) this.itemWrapper);
      ((Control) this).Name = "ProjectProperties";
      ((Form) this).Size = new Size(503, 408);
      this._CreatorWrapper.ResumeLayout(false);
      this._CreatorWrapper.PerformLayout();
      num2 = 36;
      goto label_21;
label_46:
      this.m_ListenerWrapper.TabIndex = 2;
      this.m_ListenerWrapper.Text = "Description:";
      this.m_InterpreterWrapper.AutoSize = true;
      this.m_InterpreterWrapper.Location = new Point(16, 57);
      this.m_InterpreterWrapper.Name = "label3";
      this.m_InterpreterWrapper.Size = new Size(70, 13);
      num2 = 17;
      goto label_21;
label_48:
      this.m_StrategyWrapper = new TextBox();
      num2 = 1;
      goto label_21;
label_50:
      this.m_GlobalWrapper = new Label();
      this.attrWrapper = new TextBox();
      this._UtilsWrapper = new Label();
      this.proxyWrapper = new Label();
      this._HelperWrapper = new TextBox();
      num2 = 10;
      goto label_21;
label_51:
      this._ConfigurationWrapper.ResumeLayout(false);
      num2 = 6;
      goto label_21;
label_52:
      this.managerWrapper.Size = new Size(75, 17);
      this.managerWrapper.TabIndex = 18;
      this.managerWrapper.Text = "Hide Entry";
      num2 = 18;
      goto label_21;
label_53:
      this._DatabaseWrapper.Name = "button3";
      num2 = 37;
      goto label_21;
    }

    internal static bool EnableRegistry() => true;

    internal static bool FindRegistry() => false;
  }
}
