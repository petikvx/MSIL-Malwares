// Decompiled with JetBrains decompiler
// Type: eg2012.DialogRestore
// Assembly: SinkStack, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A02AD0B4-EB98-42A4-95E2-E2AB11E6E27B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\UDS-DangerousObject.Multi.Generic-1dfce723a17d9979985d027a8b4bf09a943153bb9ff23d082b21825c41104f96.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace eg2012
{
  [DesignerGenerated]
  public class DialogRestore : Form
  {
    private IContainer components;
    private DirectoryInfo di;
    private List<string> exts;
    private string _restored;

    public DialogRestore()
    {
      this.exts = new List<string>();
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.TableLayoutPanel1 = new TableLayoutPanel();
      this.OK_Button = new Button();
      this.Cancel_Button = new Button();
      this.lFind = new ListBox();
      this.TableLayoutPanel1.SuspendLayout();
      this.SuspendLayout();
      this.TableLayoutPanel1.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.TableLayoutPanel1.ColumnCount = 2;
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Controls.Add((Control) this.OK_Button, 0, 0);
      this.TableLayoutPanel1.Controls.Add((Control) this.Cancel_Button, 1, 0);
      this.TableLayoutPanel1.Location = new Point(92, 274);
      this.TableLayoutPanel1.Name = "TableLayoutPanel1";
      this.TableLayoutPanel1.RowCount = 1;
      this.TableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Size = new Size(146, 29);
      this.TableLayoutPanel1.TabIndex = 0;
      this.OK_Button.Anchor = AnchorStyles.None;
      this.OK_Button.Location = new Point(3, 3);
      this.OK_Button.Name = "OK_Button";
      this.OK_Button.Size = new Size(67, 23);
      this.OK_Button.TabIndex = 0;
      this.OK_Button.Text = "OK";
      this.Cancel_Button.Anchor = AnchorStyles.None;
      this.Cancel_Button.DialogResult = DialogResult.Cancel;
      this.Cancel_Button.Location = new Point(76, 3);
      this.Cancel_Button.Name = "Cancel_Button";
      this.Cancel_Button.Size = new Size(67, 23);
      this.Cancel_Button.TabIndex = 1;
      this.Cancel_Button.Text = "Cancel";
      this.lFind.FormattingEnabled = true;
      this.lFind.Location = new Point(9, 4);
      this.lFind.Name = "lFind";
      this.lFind.Size = new Size(229, 264);
      this.lFind.TabIndex = 2;
      this.AcceptButton = (IButtonControl) this.OK_Button;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.Cancel_Button;
      this.ClientSize = new Size(250, 315);
      this.Controls.Add((Control) this.lFind);
      this.Controls.Add((Control) this.TableLayoutPanel1);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (DialogRestore);
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "Vanad bugid";
      this.TableLayoutPanel1.ResumeLayout(false);
      this.ResumeLayout(false);
    }

    [field: AccessedThroughProperty("TableLayoutPanel1")]
    internal virtual TableLayoutPanel TableLayoutPanel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button OK_Button
    {
      get => this._OK_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OK_Button_Click);
        Button okButton1 = this._OK_Button;
        if (okButton1 != null)
          okButton1.Click -= eventHandler;
        this._OK_Button = value;
        Button okButton2 = this._OK_Button;
        if (okButton2 == null)
          return;
        okButton2.Click += eventHandler;
      }
    }

    internal virtual Button Cancel_Button
    {
      get => this._Cancel_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Cancel_Button_Click);
        Button cancelButton1 = this._Cancel_Button;
        if (cancelButton1 != null)
          cancelButton1.Click -= eventHandler;
        this._Cancel_Button = value;
        Button cancelButton2 = this._Cancel_Button;
        if (cancelButton2 == null)
          return;
        cancelButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lFind")]
    internal virtual ListBox lFind { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal string restored => this._restored;

    private void OK_Button_Click(object sender, EventArgs e)
    {
      if (this.lFind.SelectedIndex < 0)
      {
        this._restored = string.Empty;
        this.DialogResult = DialogResult.Cancel;
      }
      else
      {
        this._restored = this.lFind.SelectedItem.ToString();
        try
        {
          foreach (object ext in this.exts)
          {
            string str = string.Format("\\{0}{1}", (object) this._restored, ext);
            FileInfo fileInfo = new FileInfo(this.di.FullName + str);
            try
            {
              if (fileInfo.Exists)
                fileInfo.MoveTo(this.di.Parent.FullName + str);
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
        }
        finally
        {
          List<string>.Enumerator enumerator;
          enumerator.Dispose();
        }
        this.DialogResult = DialogResult.OK;
      }
      this.Close();
    }

    private void Cancel_Button_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.Cancel;
      this.Close();
    }

    internal bool Init(string dir)
    {
      if (string.IsNullOrWhiteSpace(dir))
        return false;
      if (!dir.EndsWith("\\"))
        dir += "\\";
      dir += "backup\\";
      this.di = new DirectoryInfo(dir);
      if (!this.di.Exists)
        return false;
      this.lFind.Items.Clear();
      this.exts.Clear();
      this.exts.Add(channelClasses.ActiveChannel.Ext);
      if (!channelClasses.ActiveChannel.HD)
      {
        this.exts.Add("_w.via");
        this.exts.Add("_v.via");
      }
      FileInfo[] files = this.di.GetFiles();
      int index = 0;
      while (index < files.Length)
      {
        FileInfo fileInfo = files[index];
        if (Operators.CompareString(fileInfo.Extension.ToLower(), channelClasses.ActiveChannel.Ext, false) == 0 && !fileInfo.Name.Contains("_w.") && !fileInfo.Name.Contains("_v."))
          this.lFind.Items.Add((object) fileInfo.Name.Replace(fileInfo.Extension, string.Empty));
        checked { ++index; }
      }
      return true;
    }
  }
}
