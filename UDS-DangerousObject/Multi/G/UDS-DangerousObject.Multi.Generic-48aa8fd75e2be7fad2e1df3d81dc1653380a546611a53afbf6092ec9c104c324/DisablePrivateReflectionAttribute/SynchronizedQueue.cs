// Decompiled with JetBrains decompiler
// Type: DisablePrivateReflectionAttribute.SynchronizedQueue
// Assembly: RegistrySecurity, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CE443B41-988D-4319-9971-B451F2F12365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\UDS-DangerousObject.Multi.Generic-48aa8fd75e2be7fad2e1df3d81dc1653380a546611a53afbf6092ec9c104c324.exe

using HijriCalendar;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace DisablePrivateReflectionAttribute
{
  [DesignerGenerated]
  public class SynchronizedQueue : Form
  {
    private IContainer components;

    public SynchronizedQueue()
    {
      this.Activated += new EventHandler(this.Dialog2_Activated);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.TableLayoutPanel1 = new TableLayoutPanel();
      this.OK_Button = new Button();
      this.Cancel_Button = new Button();
      this.lFind = new ListBox();
      this.tFind = new TextBox();
      this.lId = new Label();
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.lName = new Label();
      this.TableLayoutPanel1.SuspendLayout();
      this.SuspendLayout();
      this.TableLayoutPanel1.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.TableLayoutPanel1.ColumnCount = 2;
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Controls.Add((Control) this.OK_Button, 0, 0);
      this.TableLayoutPanel1.Controls.Add((Control) this.Cancel_Button, 1, 0);
      this.TableLayoutPanel1.Location = new Point(175, 201);
      this.TableLayoutPanel1.Name = "TableLayoutPanel1";
      this.TableLayoutPanel1.RowCount = 1;
      this.TableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Size = new Size(146, 29);
      this.TableLayoutPanel1.TabIndex = 0;
      this.OK_Button.Anchor = AnchorStyles.None;
      this.OK_Button.Location = new Point(3, 3);
      this.OK_Button.Name = "OK_Button";
      this.OK_Button.Size = new Size(67, 23);
      this.OK_Button.TabIndex = 0;
      this.OK_Button.Text = "OK";
      this.Cancel_Button.Anchor = AnchorStyles.None;
      this.Cancel_Button.DialogResult = DialogResult.Cancel;
      this.Cancel_Button.Location = new Point(76, 3);
      this.Cancel_Button.Name = "Cancel_Button";
      this.Cancel_Button.Size = new Size(67, 23);
      this.Cancel_Button.TabIndex = 1;
      this.Cancel_Button.Text = "Cancel";
      this.lFind.FormattingEnabled = true;
      this.lFind.Location = new Point(12, 38);
      this.lFind.Name = "lFind";
      this.lFind.Size = new Size(309, 160);
      this.lFind.TabIndex = 1;
      this.tFind.Location = new Point(12, 12);
      this.tFind.Name = "tFind";
      this.tFind.Size = new Size(309, 20);
      this.tFind.TabIndex = 2;
      this.tFind.TextAlign = HorizontalAlignment.Center;
      this.lId.AutoSize = true;
      this.lId.Location = new Point(12, 218);
      this.lId.Name = "lId";
      this.lId.Size = new Size(0, 13);
      this.lId.TabIndex = 3;
      this.Label1.AutoSize = true;
      this.Label1.Location = new Point(116, 49);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(124, 13);
      this.Label1.TabIndex = 4;
      this.Label1.Text = "Trüki otsitava saate nimi!";
      this.Label2.AutoSize = true;
      this.Label2.Location = new Point(12, 201);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(0, 13);
      this.Label2.TabIndex = 3;
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(12, 209);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(0, 13);
      this.Label3.TabIndex = 3;
      this.lName.AutoSize = true;
      this.lName.Location = new Point(12, 232);
      this.lName.Name = "lName";
      this.lName.Size = new Size(0, 13);
      this.lName.TabIndex = 5;
      this.AcceptButton = (IButtonControl) this.OK_Button;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.Cancel_Button;
      this.ClientSize = new Size(328, 250);
      this.Controls.Add((Control) this.lName);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.lId);
      this.Controls.Add((Control) this.tFind);
      this.Controls.Add((Control) this.lFind);
      this.Controls.Add((Control) this.TableLayoutPanel1);
      this.Controls.Add((Control) this.Label1);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = "Dialog2";
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "Lisa saade";
      this.TableLayoutPanel1.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("TableLayoutPanel1")]
    internal virtual TableLayoutPanel TableLayoutPanel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button OK_Button
    {
      get => this._OK_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OK_Button_Click);
        Button okButton1 = this._OK_Button;
        if (okButton1 != null)
          okButton1.Click -= eventHandler;
        this._OK_Button = value;
        Button okButton2 = this._OK_Button;
        if (okButton2 == null)
          return;
        okButton2.Click += eventHandler;
      }
    }

    internal virtual Button Cancel_Button
    {
      get => this._Cancel_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Cancel_Button_Click);
        Button cancelButton1 = this._Cancel_Button;
        if (cancelButton1 != null)
          cancelButton1.Click -= eventHandler;
        this._Cancel_Button = value;
        Button cancelButton2 = this._Cancel_Button;
        if (cancelButton2 == null)
          return;
        cancelButton2.Click += eventHandler;
      }
    }

    internal virtual ListBox lFind
    {
      get => this._lFind;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.lFind_DoubleClick);
        EventHandler eventHandler2 = new EventHandler(this.lFind_SelectedIndexChanged);
        ListBox lFind1 = this._lFind;
        if (lFind1 != null)
        {
          lFind1.DoubleClick -= eventHandler1;
          lFind1.SelectedIndexChanged -= eventHandler2;
        }
        this._lFind = value;
        ListBox lFind2 = this._lFind;
        if (lFind2 == null)
          return;
        lFind2.DoubleClick += eventHandler1;
        lFind2.SelectedIndexChanged += eventHandler2;
      }
    }

    internal virtual TextBox tFind
    {
      get => this._tFind;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tFind_TextChanged);
        TextBox tFind1 = this._tFind;
        if (tFind1 != null)
          tFind1.TextChanged -= eventHandler;
        this._tFind = value;
        TextBox tFind2 = this._tFind;
        if (tFind2 == null)
          return;
        tFind2.TextChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lId")]
    internal virtual Label lId { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lName")]
    internal virtual Label lName { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private void OK_Button_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.OK;
      this.tFind.Text = string.Empty;
      this.Close();
    }

    private void Cancel_Button_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.Cancel;
      this.tFind.Text = string.Empty;
      this.Close();
    }

    private void tFind_TextChanged(object sender, EventArgs e)
    {
      Func.Guide.Fill(this.tFind.Text, this.lFind);
      this.lFind.Visible = this.lFind.Items.Count != 0;
      this.Label1.Text = this.tFind.Text.Length < 2 ? "Trüki otsitava saate nimi!" : "Ei leia sellist saadet!";
    }

    private void lFind_DoubleClick(object sender, EventArgs e)
    {
      if (this.lFind.SelectedIndex < 0)
        return;
      this.DialogResult = DialogResult.OK;
      this.tFind.Text = string.Empty;
      this.Close();
    }

    private void lFind_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (this.lFind.SelectedIndex < 0)
        return;
      string[] strArray = this.lFind.SelectedItem.ToString().Split('=');
      this.lId.Text = strArray[0].Trim();
      this.lName.Text = strArray[1].Trim();
    }

    private void Dialog2_Activated(object sender, EventArgs e) => this.tFind.Select();
  }
}
