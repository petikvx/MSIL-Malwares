// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ByteTokenEncodi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 9BCE2B70-1A4C-43FA-BCC8-8DBBEE1C54F3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0d4b7a493ffb322f46927f4d290740e9157c549cdb50db1ce746065332ed317c.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -1857036681;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -286876551)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 73398588 ^ -1417260769;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = -614526954;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1599217845)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1029229558 ^ -22935620;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 429766113;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 7578952)) % 4U)
          {
            case 1:
              count = 0;
              num1 = (int) num2 * 1191818313 ^ 1989578139;
              continue;
            case 2:
              num1 = (int) num2 * -1431679125 ^ -336185558;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1851425418;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1007897239)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1536051406 ^ 1888265054;
            continue;
          case 3:
            num1 = (int) num2 * 226763421 ^ 21494394;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 144956531;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1015171726)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -235282292 ^ -1120534895;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -326524030 ^ 1816699980;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -905220156;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1148741110)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * -1315437915 ^ 1338184840;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 1870120238;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1118371401)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -962529853 ^ 309224060;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 deepChilds = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1795585319;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 201100745)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds.\u003C\u003E4__this = this;
              num1 = (int) num2 * -605422716 ^ 1614444019;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 14187349;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 889507619)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 878051720 ^ 1179577904;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 138731137;
        int asInt;
        int result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 288263151)) % 9U)
          {
            case 1:
              asInt = result;
              num1 = (int) num2 * 1027320469 ^ -1260679451;
              continue;
            case 2:
              result = 0;
              num1 = (int) num2 * 965336052 ^ 1165702650;
              continue;
            case 3:
              int num3 = flag ? -876932306 : (num3 = -1162409704);
              num1 = num3 ^ (int) num2 * -572585319;
              continue;
            case 4:
              num1 = (int) num2 * -204791051 ^ 1286087084;
              continue;
            case 5:
              goto label_1;
            case 6:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -1450446351 ^ 30481861;
              continue;
            case 7:
              asInt = 0;
              num1 = 543928522;
              continue;
            case 8:
              num1 = (int) num2 * -705574720 ^ -1323798331;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -1810545715;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -577266625)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1307039283 ^ 639163585;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1774150798;
        float asFloat;
        float result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 859028803)) % 6U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = 681355916;
              continue;
            case 1:
              result = 0.0f;
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206C‫⁯⁬⁮‏‭⁪‬‍‏‭‪⁬​‬⁯‍⁯‫⁪⁯⁭⁮‏⁪‎⁮‪‭​‬‎‍‌‫⁮⁫⁭‫‮(), out result) ? 1498672419 : (num3 = 991380678);
              num1 = num3 ^ (int) num2 * 1343925925;
              continue;
            case 3:
              num1 = (int) num2 * -167432429 ^ -1272580024;
              continue;
            case 4:
              goto label_1;
            case 5:
              asFloat = result;
              num1 = (int) num2 * -1225880728 ^ 181993597;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1540519551;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1290042163)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1828703464 ^ -1757721124;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1751341881;
        double result;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1842581423)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = result;
              num1 = (int) num2 * -1787691612 ^ -1501347541;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = -320262469;
              continue;
            case 3:
              num1 = (int) num2 * 252912787 ^ -519903679;
              continue;
            case 4:
              result = 0.0;
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -73300930 ^ -1082300042;
              continue;
            case 6:
              int num3 = !flag ? -1290690139 : (num3 = -804684013);
              num1 = num3 ^ (int) num2 * 550647965;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1695267074;
        bool asBool;
        bool result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1892101987)) % 7U)
          {
            case 0:
              asBool = result;
              num1 = (int) num2 * 1081783435 ^ -1966518794;
              continue;
            case 1:
              result = false;
              num1 = (int) num2 * 1233689710 ^ -1491636804;
              continue;
            case 2:
              num1 = (int) num2 * -1155427374 ^ -791631297;
              continue;
            case 3:
              asBool = !JSONNode.\u206D⁭⁭​‎⁫‏‎​‭‪‫‫‮⁮⁪‫‌⁬‏‮‪⁭⁪‍⁬‫⁪⁫⁯⁭⁫⁮‏‍‭⁮‪‍‫‮(this.Value);
              num1 = -1548917563;
              continue;
            case 5:
              goto label_1;
            case 6:
              int num3 = bool.TryParse(this.Value, out result) ? 1729110972 : (num3 = 1866190885);
              num1 = num3 ^ (int) num2 * 684087678;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -946974533;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -230015191)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 2051768973 ^ 1852667595;
              continue;
            case 2:
              this.Value = value ? "true" : "false";
              num1 = -2103008272;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = 149444953;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 44349023)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1592668897 ^ -1363160518;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -539878750;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1910859871)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 963663066 ^ 393877936;
              continue;
            case 2:
              goto label_1;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * -832759812 ^ -1820962435;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = -481524329;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -922804070)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1132602255 ^ 717148363;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -772020409;
label_2:
      uint num2;
      string str1;
      string str2;
      switch ((num2 = (uint) (num1 ^ -1296576402)) % 3U)
      {
        case 0:
          goto label_1;
        case 1:
          str2 = d.Value;
          goto label_5;
        default:
          return str1;
      }
label_4:
      str2 = (string) null;
label_5:
      str1 = str2;
      num1 = -855058256;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -808946100;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -403537212)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -582838982 ^ 1224037416;
            continue;
          case 1:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 1701902960 ^ 1617351249;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * -1715392215 ^ -1943956348;
            continue;
          case 3:
            flag1 = (object) a == b;
            num1 = -1138185652;
            continue;
          case 4:
            int num4 = flag2 ? 684359392 : (num4 = 1851098296);
            num1 = num4 ^ (int) num2 * -909100198;
            continue;
          case 5:
            num1 = (int) num2 * -1217155889 ^ -106432020;
            continue;
          case 6:
            goto label_1;
          case 7:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_13;
        }
        flag2 = num3 != 0;
        num1 = -1919018383;
      }
label_13:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1520188576;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1411534391)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 2002765159 ^ 33570505;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode()
    {
label_1:
      int num1 = -427533057;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -102295758)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -413456097 ^ -449053028;
            continue;
          case 1:
            hashCode = this.\u206D⁫‭‎‏​⁫⁯‫⁯‮‪⁮‌⁫‏‫‏⁭‬⁭⁬⁬⁬⁮⁭​⁬‫‫‮​⁯⁫⁮‌‍⁬‫‮();
            num1 = (int) num2 * 1577585136 ^ 2136664870;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -133185578;
      string str1;
      int num2;
      char ch1;
      string str2;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -177024667)) % 35U)
        {
          case 0:
            goto label_1;
          case 1:
            int num4;
            num1 = num4 = ch2 == '\\' ? -164819469 : (num4 = -1334835332);
            continue;
          case 2:
label_9:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\r");
            num1 = -472901571;
            continue;
          case 3:
            str1 = aText;
            num1 = (int) num3 * 1290376987 ^ -1532751091;
            continue;
          case 4:
            num2 = 0;
            num1 = (int) num3 * 107780320 ^ 247026000;
            continue;
          case 5:
            num1 = (int) num3 * 1981704480 ^ 2100208481;
            continue;
          case 6:
            int num5;
            num1 = num5 = ch2 == '"' ? -2094635973 : (num5 = -2042751464);
            continue;
          case 7:
            str2 = "";
            num1 = (int) num3 * 117387691 ^ -268273368;
            continue;
          case 8:
            num1 = -134912546;
            continue;
          case 9:
label_23:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\n");
            num1 = -1206839845;
            continue;
          case 10:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200B‪‫‎⁮‭⁮⁯⁭‪⁫⁬‌‏‍‎‎⁭⁮⁪‪‏‮‪‭⁯⁯‍⁫⁮‌‍⁮‌‎⁬‎⁮‮‫‮(str1) ? -862501021 : (num6 = -1182322540);
            continue;
          case 11:
            num1 = (int) num3 * 1054369107 ^ 1242372850;
            continue;
          case 12:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\\"");
            num1 = -1774072877;
            continue;
          case 13:
            num1 = (int) num3 * -123881363 ^ -836879344;
            continue;
          case 14:
label_31:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\t");
            num1 = -1108731903;
            continue;
          case 15:
            num1 = (int) num3 * -1430517185 ^ 1165967271;
            continue;
          case 16:
            num1 = (int) num3 * 10598398 ^ 539514694;
            continue;
          case 17:
            num1 = (int) num3 * 322463186 ^ 1827053492;
            continue;
          case 18:
            num1 = (int) num3 * 530870677 ^ -490723450;
            continue;
          case 19:
label_34:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\f");
            num1 = -1864317336;
            continue;
          case 20:
            num1 = (int) num3 * 1176884321 ^ -318777204;
            continue;
          case 21:
            num1 = (int) num3 * 1390767745 ^ 1247880710;
            continue;
          case 22:
            str3 = str2;
            num1 = (int) num3 * -369725445 ^ 824791575;
            continue;
          case 23:
            ch3 = ch1;
            num1 = (int) num3 * -1541911369 ^ -877265743;
            continue;
          case 24:
            ++num2;
            num1 = (int) num3 * -214114105 ^ 1999075181;
            continue;
          case 25:
            num1 = (int) num3 * -1031670427 ^ 650558116;
            continue;
          case 26:
            num1 = (int) num3 * 1627756754 ^ 2072450694;
            continue;
          case 27:
            ch1 = JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(str1, num2);
            num1 = -780922080;
            continue;
          case 28:
            ch2 = ch3;
            switch (ch2)
            {
              case '\b':
                goto label_33;
              case '\t':
                goto label_31;
              case '\n':
                goto label_23;
              case '\v':
                goto label_8;
              case '\f':
                goto label_34;
              case '\r':
                goto label_9;
              default:
                num1 = (int) num3 * -1908139855 ^ -59514716;
                continue;
            }
          case 29:
label_33:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\b");
            num1 = -253025780;
            continue;
          case 30:
            num1 = (int) num3 * -1366444234 ^ -1367993093;
            continue;
          case 32:
label_8:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, ch1.ToString());
            num1 = -322347756;
            continue;
          case 33:
            str2 = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(str2, "\\\\");
            num1 = -943832357;
            continue;
          case 34:
            num1 = (int) num3 * -581420455 ^ -117313326;
            continue;
          default:
            goto label_37;
        }
      }
label_37:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1731292063;
      int num2;
      string aItem;
      JSONNode jsonNode1;
      Stack<JSONNode> jsonNodeStack;
      char ch1;
      bool flag1;
      string aKey;
      bool flag2;
      char ch2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch3;
      bool flag7;
      JSONNode jsonNode2;
      bool flag8;
      bool flag9;
      bool flag10;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1426162603)) % 146U)
        {
          case 0:
            int num4 = !flag10 ? 1739674023 : (num4 = 1801762302);
            num1 = num4 ^ (int) num3 * -2063343813;
            continue;
          case 1:
            int num5;
            num1 = num5 = ch2 == ',' ? -95114276 : (num5 = -663967263);
            continue;
          case 2:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 174297571 ^ 878644080;
            continue;
          case 3:
            num1 = (int) num3 * -1358221783 ^ 1565702628;
            continue;
          case 4:
            int num6;
            num1 = num6 = ch2 != '{' ? -730783095 : (num6 = -2105099624);
            continue;
          case 5:
            int num7;
            num1 = num7 = !flag2 ? -753547032 : (num7 = -1028518357);
            continue;
          case 6:
            num1 = (int) num3 * -368187845 ^ 796221917;
            continue;
          case 7:
            aItem = "";
            num1 = (int) num3 * 1204582845 ^ 844437786;
            continue;
          case 8:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1320178283 ^ -1794772025;
            continue;
          case 9:
            num1 = (int) num3 * -653375431 ^ 2076823994;
            continue;
          case 10:
            switch (ch3)
            {
              case 'r':
                goto label_34;
              case 's':
                goto label_7;
              case 't':
                goto label_63;
              case 'u':
                goto label_67;
              default:
                num1 = -1982740711;
                continue;
            }
          case 11:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -804782798 ^ 524853158;
            continue;
          case 12:
            num1 = (int) num3 * 152232321 ^ -944065234;
            continue;
          case 13:
            switch (ch2)
            {
              case '\t':
                goto label_60;
              case '\n':
              case '\r':
                goto label_143;
              case '\v':
              case '\f':
                goto label_59;
              default:
                num1 = (int) num3 * -2034620123 ^ 1024318178;
                continue;
            }
          case 14:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1248017746 ^ 214697025;
            continue;
          case 15:
            int num8;
            num1 = num8 = ch2 != '"' ? -1125625644 : (num8 = -1698947090);
            continue;
          case 16:
            int num9 = flag6 ? -1089431195 : (num9 = -644251586);
            num1 = num9 ^ (int) num3 * 631042158;
            continue;
          case 17:
            num1 = (int) num3 * 446868970 ^ 1991684957;
            continue;
          case 18:
            aKey = JSONNode.\u200B‮⁪‮⁮⁭‏‮‮‬‮⁪‪⁮⁯⁫⁭‫⁮​⁪⁮⁭⁮‎‎‬‎‫⁫⁬⁮‍‎‮⁭‏⁮‍⁯‮(aKey);
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 784915345 ^ -938720051;
            continue;
          case 19:
            num1 = (int) num3 * 380830581 ^ 1411053799;
            continue;
          case 20:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, "\n");
            num1 = -400729910;
            continue;
          case 21:
            num1 = (int) num3 * 579416470 ^ 426345353;
            continue;
          case 22:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -227291309 ^ -173175710;
            continue;
          case 23:
            num1 = (int) num3 * 951322278 ^ -1047939119;
            continue;
          case 24:
            int num10;
            num1 = num10 = ch2 != ' ' ? -28100659 : (num10 = -1473581712);
            continue;
          case 25:
            aKey = "";
            num1 = -1781258839;
            continue;
          case 26:
            int num11;
            num1 = num11 = JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aKey, "") ? -1810390154 : (num11 = -490350967);
            continue;
          case 27:
            flag5 = JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aKey, "");
            num1 = -859814156;
            continue;
          case 28:
            num1 = (int) num3 * 517098309 ^ -2108574997;
            continue;
          case 29:
            int num12 = flag1 ? 948808684 : (num12 = 410859915);
            num1 = num12 ^ (int) num3 * -231714394;
            continue;
          case 30:
            num1 = (int) num3 * -1667496357 ^ -1282061957;
            continue;
          case 31:
            num1 = (int) num3 * -1105502175 ^ 1603234160;
            continue;
          case 32:
            aItem = "";
            flag10 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 123742541 ^ -1819821959;
            continue;
          case 33:
            num1 = (int) num3 * -1735091309 ^ 1484414387;
            continue;
          case 34:
            goto label_64;
          case 35:
label_60:
            int num13;
            num1 = num13 = flag2 ? -2002058692 : (num13 = -398988764);
            continue;
          case 36:
            num1 = (int) num3 * -325312823 ^ 812803362;
            continue;
          case 37:
            int num14 = !flag9 ? 1632253285 : (num14 = 153292023);
            num1 = num14 ^ (int) num3 * 810291376;
            continue;
          case 38:
            aItem = "";
            num1 = (int) num3 * -1365261498 ^ 187854404;
            continue;
          case 39:
            aKey = JSONNode.\u200B‮⁪‮⁮⁭‏‮‮‬‮⁪‪⁮⁯⁫⁭‫⁮​⁪⁮⁭⁮‎‎‬‎‫⁫⁬⁮‍‎‮⁭‏⁮‍⁯‮(aKey);
            num1 = (int) num3 * -3016066 ^ 1204365688;
            continue;
          case 40:
            num1 = (int) num3 * 742867163 ^ -521773381;
            continue;
          case 41:
            num1 = -1130458793;
            continue;
          case 42:
            num1 = (int) num3 * 1087068187 ^ 184717300;
            continue;
          case 43:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * -187621495 ^ 232406763;
            continue;
          case 44:
            int num15 = !flag7 ? -1492021409 : (num15 = -947133935);
            num1 = num15 ^ (int) num3 * 1225519562;
            continue;
          case 45:
label_118:
            ++num2;
            int num16;
            num1 = num16 = !flag2 ? -916434235 : (num16 = -1075110044);
            continue;
          case 46:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1261055363 ^ 295053669;
            continue;
          case 47:
            flag8 = flag2;
            num1 = -1736607238;
            continue;
          case 48:
            num1 = (int) num3 * -1227914669 ^ 708481740;
            continue;
          case 49:
            flag4 = num2 < JSONNode.\u200B‪‫‎⁮‭⁮⁯⁭‪⁫⁬‌‏‍‎‎⁭⁮⁪‪‏‮‪‭⁯⁯‍⁫⁮‌‍⁮‌‎⁬‎⁮‮‫‮(aJSON);
            num1 = -326343556;
            continue;
          case 50:
            num1 = (int) num3 * -1967184627 ^ -1281055637;
            continue;
          case 51:
            num1 = (int) num3 * 1163003343 ^ 558654284;
            continue;
          case 52:
label_59:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = -2043167472;
            continue;
          case 53:
            jsonNode2 = jsonNode1;
            num1 = -1112585952;
            continue;
          case 54:
            num1 = (int) num3 * -1340903837 ^ 189839880;
            continue;
          case 55:
            jsonNodeStack.Pop();
            num1 = -699579696;
            continue;
          case 56:
            ch2 = JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2);
            int num17 = ch2 > ',' ? -268501794 : (num17 = -1382434095);
            num1 = num17 ^ (int) num3 * -779397412;
            continue;
          case 57:
          case 58:
          case 69:
          case 82:
          case 137:
label_143:
            ++num2;
            num1 = -1048428906;
            continue;
          case 59:
label_67:
            num1 = -1372668186;
            continue;
          case 60:
label_79:
            int num18;
            num1 = num18 = !flag2 ? -234232130 : (num18 = -1142194719);
            continue;
          case 61:
            int num19;
            num1 = num19 = ch2 <= ']' ? -961767136 : (num19 = -1021703401);
            continue;
          case 62:
            num1 = (int) num3 * -938523844 ^ -194687336;
            continue;
          case 63:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -164311323 ^ 1171438128;
            continue;
          case 65:
            aKey = aItem;
            num1 = -776389168;
            continue;
          case 66:
            num1 = (int) num3 * -89729884 ^ -1634270833;
            continue;
          case 67:
            num1 = -777329349;
            continue;
          case 68:
            int num20;
            num1 = num20 = jsonNodeStack.Count != 0 ? -1489337882 : (num20 = -180450741);
            continue;
          case 70:
            int num21 = !flag3 ? -788412191 : (num21 = -1686458841);
            num1 = num21 ^ (int) num3 * 501669255;
            continue;
          case 71:
            num1 = (int) num3 * 640867499 ^ -1280885317;
            continue;
          case 72:
            int num22;
            num1 = num22 = ch2 == '}' ? -1493355096 : (num22 = -2055603825);
            continue;
          case 73:
            string s = JSONNode.\u206E‌⁪‭‫‍‪‮‬‬‏‍‍​​‪⁮​​‪⁪‫‮⁮‬‪‎‌⁭‍‏‍​⁭‎⁭⁪⁯⁬‏‮(aJSON, num2 + 1, 4);
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * 1410392353 ^ -83053546;
            continue;
          case 74:
            num1 = (int) num3 * 42357975 ^ 778711241;
            continue;
          case 75:
            int num23;
            num1 = num23 = ch3 == 'n' ? -415552697 : (num23 = -1997117867);
            continue;
          case 76:
            goto label_87;
          case 77:
            num1 = (int) num3 * 1703562488 ^ 672479032;
            continue;
          case 78:
            int num24;
            num1 = num24 = JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aKey, "") ? -570559429 : (num24 = -1565700870);
            continue;
          case 79:
            num1 = (int) num3 * 241185822 ^ 1763572343;
            continue;
          case 80:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1037252534 ^ 1529561574;
            continue;
          case 81:
            num1 = -702892590;
            continue;
          case 83:
            int num25 = ch2 == ':' ? 1615085649 : (num25 = 1021856563);
            num1 = num25 ^ (int) num3 * 1925410472;
            continue;
          case 84:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, "\f");
            num1 = -1942928907;
            continue;
          case 85:
            int num26 = ch3 == 'b' ? -558670695 : (num26 = -952142400);
            num1 = num26 ^ (int) num3 * -1557518406;
            continue;
          case 86:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -2043167472;
            continue;
          case 87:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1400510222 ^ 209860558;
            continue;
          case 88:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -174428021 ^ -192975982;
            continue;
          case 89:
            aKey = "";
            num1 = -193317375;
            continue;
          case 90:
            num1 = -916434235;
            continue;
          case 91:
label_22:
            flag3 = flag2;
            num1 = -906200227;
            continue;
          case 92:
            num1 = (int) num3 * 420724279 ^ 1882440073;
            continue;
          case 93:
            num1 = -1445577858;
            continue;
          case 94:
            int num27 = jsonNode1 is JSONArray ? -1958577753 : (num27 = -420168085);
            num1 = num27 ^ (int) num3 * 317100074;
            continue;
          case 95:
label_63:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, "\t");
            num1 = -1060283670;
            continue;
          case 96:
            num1 = (int) num3 * 1512875955 ^ -1704177477;
            continue;
          case 97:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -694548669 ^ -659173783;
            continue;
          case 98:
            num1 = (int) num3 * -720063770 ^ -1920053055;
            continue;
          case 99:
            num1 = (int) num3 * -1970212986 ^ 1972938926;
            continue;
          case 100:
            num1 = (int) num3 * 1931646371 ^ 1948272713;
            continue;
          case 101:
            goto label_1;
          case 102:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, "\b");
            num1 = -1098015572;
            continue;
          case 103:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -552940805 ^ -1887915048;
            continue;
          case 104:
            flag6 = JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aKey, "");
            num1 = -235700613;
            continue;
          case 105:
            int num28 = flag2 ? 2082107239 : (num28 = 257411854);
            num1 = num28 ^ (int) num3 * -780584038;
            continue;
          case 106:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -551907419 ^ 1419887888;
            continue;
          case 107:
            int num29 = !flag8 ? 708802404 : (num29 = 1841141010);
            num1 = num29 ^ (int) num3 * -1895929625;
            continue;
          case 108:
            int num30 = !(jsonNode1 is JSONArray) ? -1487206416 : (num30 = -1005652576);
            num1 = num30 ^ (int) num3 * -1756289566;
            continue;
          case 109:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * -789942692 ^ 2064891444;
            continue;
          case 110:
            ch1 = JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2);
            num1 = (int) num3 * -2009986983 ^ -1363596040;
            continue;
          case 111:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            int num31;
            num1 = num31 = jsonNode1 != (object) null ? -1368919469 : (num31 = -777329349);
            continue;
          case 112:
label_7:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, ch1.ToString());
            num1 = -126300469;
            continue;
          case 113:
            flag2 = !flag2;
            num1 = -988116489;
            continue;
          case 114:
            flag2 = false;
            num1 = (int) num3 * -1868985173 ^ 1320255728;
            continue;
          case 115:
            num1 = (int) num3 * 786650532 ^ -1174586427;
            continue;
          case 116:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 702313294 ^ 2042332370;
            continue;
          case 117:
            ch3 = ch1;
            int num32 = ch3 > 'f' ? 605625030 : (num32 = 517649678);
            num1 = num32 ^ (int) num3 * -1012149608;
            continue;
          case 118:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1833664330;
            continue;
          case 119:
label_34:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, "\r");
            num1 = -390451050;
            continue;
          case 120:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * 229070593 ^ 711871980;
            continue;
          case 121:
            num1 = (int) num3 * -795039630 ^ -1304400471;
            continue;
          case 122:
            num1 = (int) num3 * 1423893511 ^ 2010461808;
            continue;
          case 123:
            int num33 = jsonNode1 != (object) null ? -1616377738 : (num33 = -1027965856);
            num1 = num33 ^ (int) num3 * 2045231142;
            continue;
          case 124:
            num1 = (int) num3 * 1587352736 ^ -829616566;
            continue;
          case 125:
            num1 = (int) num3 * -1913524971 ^ 873830577;
            continue;
          case 126:
            int num34;
            num1 = num34 = flag2 ? -126137110 : (num34 = -161576136);
            continue;
          case (uint) sbyte.MaxValue:
            int num35 = flag5 ? 67769020 : (num35 = 1816878457);
            num1 = num35 ^ (int) num3 * -119553537;
            continue;
          case 128:
            num1 = -355768335;
            continue;
          case 129:
            num1 = (int) num3 * -1105946513 ^ -311831843;
            continue;
          case 130:
            aItem = JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮(aItem, JSONNode.\u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮(aJSON, num2).ToString());
            num1 = (int) num3 * 12069783 ^ -787859000;
            continue;
          case 131:
            switch (ch2)
            {
              case '[':
                goto label_79;
              case '\\':
                goto label_118;
              case ']':
                goto label_22;
              default:
                num1 = -1205816989;
                continue;
            }
          case 132:
            int num36 = ch2 > ' ' ? 1525914496 : (num36 = 361646110);
            num1 = num36 ^ (int) num3 * -1073346205;
            continue;
          case 133:
            int num37 = !JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aItem, "") ? 1683486713 : (num37 = 1268373014);
            num1 = num37 ^ (int) num3 * 653183643;
            continue;
          case 134:
            aKey = JSONNode.\u200B‮⁪‮⁮⁭‏‮‮‬‮⁪‪⁮⁯⁫⁭‫⁮​⁪⁮⁭⁮‎‎‬‎‫⁫⁬⁮‍‎‮⁭‏⁮‍⁯‮(aKey);
            num1 = (int) num3 * 410753920 ^ -835062483;
            continue;
          case 135:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 504793128 ^ -598182977;
            continue;
          case 136:
            num1 = (int) num3 * 948007059 ^ -944732541;
            continue;
          case 138:
            int num38;
            num1 = num38 = ch3 == 'f' ? -595947571 : (num38 = -822260558);
            continue;
          case 139:
            aKey = "";
            num1 = (int) num3 * 16618858 ^ -1556054519;
            continue;
          case 140:
            num1 = (int) num3 * 154305043 ^ -185796077;
            continue;
          case 141:
            num1 = (int) num3 * 826649246 ^ -416032040;
            continue;
          case 142:
            num1 = (int) num3 * 86678230 ^ -129912323;
            continue;
          case 143:
            flag1 = JSONNode.\u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮(aItem, "");
            num1 = -944684550;
            continue;
          case 144:
            aKey = "";
            aItem = "";
            num1 = -1535381151;
            continue;
          case 145:
            int num39 = !flag4 ? -525615532 : (num39 = -2013660576);
            num1 = num39 ^ (int) num3 * -752159806;
            continue;
          default:
            goto label_146;
        }
      }
label_64:
      throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("JSON Parse: Quotation marks seems to be messed up.");
label_87:
      throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("JSON Parse: Too many closing brackets");
label_146:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 339378026;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1926771808)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Serialize(JSONNode.\u202C‭‭‎‏‭⁬⁬⁪‎⁬‎​⁫‪‭‌‌‌⁫⁮‎‭‮⁬‮⁪‌‎‌‫‬⁫⁮‮‍‪‌⁭‌‮(aData));
            num1 = (int) num2 * -1633727864 ^ -1623755089;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206B‮‭‮⁯‎⁮‏⁫‍⁭​‌‏‏‍‫‪⁫⁮‭‍⁯⁮‬‎‌‌⁭⁪⁭‍‌‪‫‎‭⁭‎‬‮(JSONNode.\u202A⁭‭‮‬⁯‫‫⁮⁮‮‫‌‪‮‫⁬‏‎​⁫⁯⁭⁬⁮⁭‪⁭⁬‫‫​‍‌⁯⁮⁯⁬⁭⁯‮((FileSystemInfo) JSONNode.\u202C⁫⁮‪‭⁭‎‌‬‮⁮‬⁫⁮‪‍‪⁯​⁬‮‪‍‬‏​‭​⁮⁭‎⁬‌‍‎‎‮‌⁫‬‮(JSONNode.\u200C‫‏⁮‏⁪⁯‬‏‮‌‎‪⁯⁬‎⁫‍‏​‏⁯‏⁯‍‬⁯⁮⁫⁬‮‮‏⁮​‮‪‪⁮‌‮(aFileName))));
      FileStream aData = JSONNode.\u202A​‍‎‏‍‏‪⁮‪⁭‎‪​⁬‬⁯⁮⁮‌‭‬‪‮‭‬⁮⁬‮‍⁭⁪‫⁭‍‮‍‎⁭‏‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1512081245;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 664934073)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * -1748808796 ^ 2040087771;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 27948004;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 664934073)) % 4U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u200D⁬‏⁬⁬‬‮‭‌‮⁪⁬​‏⁮⁯⁫‮⁯⁫⁫⁫‬‎‎‍⁭⁮‮​‮‪⁫‮‫‫⁪⁯⁬‏‮((IDisposable) aData);
                num3 = (int) num4 * -610528355 ^ 369736775;
                continue;
              case 3:
                num3 = (int) num4 * -174691039 ^ -2094919040;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200C⁫‮⁬‫‫​‏‮‍‏‎⁮⁯⁮‬⁪‮‫‪‬‫⁮‫‫‬⁬‮⁭‍⁫‪⁬‪‍‎‭‭‭‍‮();
      string base64;
      try
      {
label_2:
        int num1 = 580714152;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 716387371)) % 6U)
          {
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -739060205 ^ -797089744;
              continue;
            case 2:
              num1 = (int) num2 * 1747547104 ^ -28345714;
              continue;
            case 3:
              goto label_2;
            case 4:
              base64 = JSONNode.\u206F‏⁯‍‭‬⁪‮⁫‌⁫‎⁫‏‮‬​‭⁮⁮‏‮⁫‏‫⁯⁬⁮‌⁯⁭‫⁭‪‌⁭‍‮⁬⁬‮(JSONNode.\u200D‭‍‭​‎‌‍‮‭‎‌​​‍‭‫‎​‫⁫⁬​⁬⁫‌‮‬‫​⁫‪⁯‪⁯⁮⁪‍​‎‮(aData));
              num1 = (int) num2 * 856681276 ^ -978432779;
              continue;
            case 5:
              JSONNode.\u202B​‮‪‪‏‪​‎‎⁫‍⁬​⁪‏‬‏⁭⁭⁪⁫⁫‏⁪‭‮⁪‫‮⁭⁭⁮⁯⁯‎‏⁯‪‭‮((Stream) aData, 0L);
              num1 = (int) num2 * -852789725 ^ -419044090;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 1823125961;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 716387371)) % 3U)
            {
              case 1:
                JSONNode.\u200D⁬‏⁬⁬‬‮‭‌‮⁪⁬​‏⁮⁯⁫‮⁯⁫⁫⁫‬‎‎‍⁭⁮‮​‮‪⁫‮‫‫⁪⁯⁬‏‮((IDisposable) aData);
                num3 = (int) num4 * -693094888 ^ -1044028057;
                continue;
              case 2:
                goto label_9;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 71365071;
      bool flag;
      int num2;
      int num3;
      JSONNode jsonNode;
      string aKey;
      JSONNode aItem;
      int num4;
      int num5;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      JSONClass jsonClass;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 252551254)) % 38U)
        {
          case 0:
            jsonClass.Add(aKey, aItem);
            ++num2;
            num1 = (int) num6 * 1342587958 ^ -1949021247;
            continue;
          case 1:
label_6:
            num1 = 892696165;
            continue;
          case 2:
            num1 = (int) num6 * 1330978013 ^ 752778251;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206F‮⁮⁪‭⁬‌⁮⁮‌‎‏‫⁮⁮‎‬⁬‫⁮‭‬⁯⁫⁯‌‮‫⁮‭‌‏‎‫⁯⁫‍⁮‪⁭‮(aReader));
            num1 = (int) num6 * -608880195 ^ -218575824;
            continue;
          case 4:
label_25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁪⁪⁭‭⁭‬⁭⁮‫⁯⁫‏‍⁫⁮‭‍‍⁫‏‍⁪‮‎⁮⁪‍‏‍⁭‌‭‪‪⁬⁯‌⁮‮‮(aReader));
            num1 = 1620119479;
            continue;
          case 5:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -497423890 ^ 1364931105;
            continue;
          case 6:
            goto label_21;
          case 7:
label_34:
            num1 = 971415278;
            continue;
          case 8:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1737736891;
            continue;
          case 9:
            num1 = 288531984;
            continue;
          case 10:
            num5 = JSONNode.\u202A⁮⁯⁭‮⁯⁮​‌​‭⁭⁬⁮‌‭‮⁪‬‏⁪⁮⁮⁪‮‫⁪‮‍‎‭‎‍‪⁪⁭​⁭​⁭‮(aReader);
            num1 = (int) num6 * 1506039523 ^ -2041828943;
            continue;
          case 11:
            int num7;
            num1 = num7 = num2 < num3 ? 754121039 : (num7 = 1711610913);
            continue;
          case 12:
label_7:
            num1 = 1488740512;
            continue;
          case 14:
            num2 = 0;
            num1 = (int) num6 * -1330160003 ^ 2131693446;
            continue;
          case 15:
            ++num4;
            num1 = (int) num6 * 1127452588 ^ 550552995;
            continue;
          case 16:
label_36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁬​‍‍⁬‎‎‭⁬⁫‏⁫‏‌‮‫⁯​‫‮‏‎‫‍⁮‍⁫​⁬​‎⁫‫‫‫⁯‮⁮⁭‮(aReader));
            num1 = 1620119479;
            continue;
          case 17:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 1507794270 ^ 2130380422;
            continue;
          case 18:
            num1 = (int) num6 * 1807108099 ^ 396465350;
            continue;
          case 19:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 1974566066 ^ 1110846342;
            continue;
          case 20:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 95245122 ^ -779079391;
            continue;
          case 21:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1678110781 ^ -937216890;
            continue;
          case 22:
            aKey = JSONNode.\u202C‏⁭⁭⁫‌⁫‌‬‍‌⁫‌⁫⁪‏‎⁮​‪‌‌‭​‬⁭‍⁫⁫‌‍‎‮‮⁫‭‭⁫‏⁬‮(aReader);
            num1 = (int) num6 * -1383636489 ^ -2070965828;
            continue;
          case 23:
            num1 = (int) num6 * -1472772327 ^ 288220324;
            continue;
          case 24:
            num4 = 0;
            num1 = (int) num6 * -432604320 ^ 167537631;
            continue;
          case 25:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_7;
              case JSONBinaryTag.Class:
                goto label_38;
              case JSONBinaryTag.Value:
                goto label_34;
              case JSONBinaryTag.IntValue:
                goto label_27;
              case JSONBinaryTag.DoubleValue:
                goto label_36;
              case JSONBinaryTag.BoolValue:
                goto label_25;
              case JSONBinaryTag.FloatValue:
                goto label_6;
              default:
                num1 = (int) num6 * 1888598007 ^ -374267361;
                continue;
            }
          case 26:
label_27:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A⁮⁯⁭‮⁯⁮​‌​‭⁭⁬⁮‌‭‮⁪‬‏⁪⁮⁮⁪‮‫⁪‮‍‎‭‎‍‪⁪⁭​⁭​⁭‮(aReader));
            num1 = 1620119479;
            continue;
          case 27:
            num1 = (int) num6 * 1829813653 ^ 2036841390;
            continue;
          case 28:
            num1 = (int) num6 * 832372519 ^ -1979431793;
            continue;
          case 29:
label_38:
            num1 = 17521954;
            continue;
          case 30:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 657280038 ^ 703708496;
            continue;
          case 31:
            int num8 = flag ? -2093855611 : (num8 = -1129845055);
            num1 = num8 ^ (int) num6 * 1639235131;
            continue;
          case 32:
            num3 = JSONNode.\u202A⁮⁯⁭‮⁯⁮​‌​‭⁭⁬⁮‌‭‮⁪‬‏⁪⁮⁮⁪‮‫⁪‮‍‎‭‎‍‪⁪⁭​⁭​⁭‮(aReader);
            num1 = (int) num6 * -1552814678 ^ -507402327;
            continue;
          case 33:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202E⁮⁪‫‮‫⁭⁫​‮‬​⁯⁬⁪‮⁭⁯‍⁭⁭⁭⁫‌⁯​‬‫‬⁭⁮‏‪⁯‌‎‭⁮⁯⁪‮(aReader);
            num1 = (int) num6 * 226973200 ^ 519876573;
            continue;
          case 34:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏⁭⁭⁫‌⁫‌‬‍‌⁫‌⁫⁪‏‎⁮​‪‌‌‭​‬⁭‍⁫⁫‌‍‎‮‮⁫‭‭⁫‏⁬‮(aReader));
            num1 = (int) num6 * -1626432140 ^ -1141875750;
            continue;
          case 35:
            flag = num4 < num5;
            num1 = 1313194109;
            continue;
          case 36:
            goto label_1;
          case 37:
            num1 = (int) num6 * -551896292 ^ 540149675;
            continue;
          default:
            goto label_40;
        }
      }
label_21:
      throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮(JSONNode.\u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206A‌‎‪⁯⁯⁭‫⁭⁫‎⁯‫‬⁫‫⁫⁮‎⁯⁭⁬‭​⁬⁪‎‫⁬‪⁭‪‪‭​⁬‪⁮‌‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1434378537;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1234762807)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 436197132 ^ 25210704;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -969304564;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1234762807)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -288206159 ^ 364115539;
                continue;
              case 1:
                JSONNode.\u200D⁬‏⁬⁬‬‮‭‌‮⁪⁬​‏⁮⁯⁫‮⁯⁫⁫⁫‬‎‎‍⁭⁮‮​‮‪⁫‮‫‫⁪⁯⁬‏‮((IDisposable) aReader);
                num3 = (int) num4 * 1458862095 ^ 1317378494;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E‮​‪⁪‭‌‏‮⁮⁬‪⁯⁮​‏‍‬⁮⁮⁪‫⁭‌⁫⁭⁪‭⁭⁭‭‭‭⁫‎⁭‬⁬‬‮‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -620938948;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -54149626)) % 4U)
            {
              case 1:
                num1 = (int) num2 * 1632256066 ^ -1812069680;
                continue;
              case 2:
                JSONNode.\u200D⁬‏⁬⁬‬‮‭‌‮⁪⁬​‏⁮⁯⁫‮⁯⁫⁫⁫‬‎‎‍⁭⁮‮​‮‪⁫‮‫‫⁪⁯⁬‏‮((IDisposable) aData);
                num1 = (int) num2 * 1269456859 ^ -1445358727;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1444714391;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1123964698)) % 5U)
        {
          case 0:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1025906803 ^ 879957339;
            continue;
          case 1:
            aData = JSONNode.\u200B‮⁪‍‪‪‮‍‬⁮‬‪‪‪‬​‌‭‭⁯‍‭​⁪‪‪⁯‮‌⁫‫⁭‮‍‬‏‏⁯‫‭‮(JSONNode.\u202A​​⁭⁬‪‪‪⁭‎⁭‌⁯​‭⁪⁭⁮⁫​‎⁭​⁯⁭⁮‏‮‫‫⁬⁫⁯‏‍​‍⁭‏‍‮(aBase64));
            JSONNode.\u202B​‮‪‪‏‪​‎‎⁫‍⁬​⁪‏‬‏⁭⁭⁪⁫⁫‏⁪‭‮⁪‫‮⁭⁭⁮⁯⁯‎‏⁯‪‭‮((Stream) aData, 0L);
            num1 = (int) num2 * 470675707 ^ -110888828;
            continue;
          case 2:
            num1 = (int) num2 * -1976777943 ^ 2144988189;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u206C‫⁯⁬⁮‏‭⁪‬‍‏‭‪⁬​‬⁯‍⁯‫⁪⁯⁭⁮‏⁪‎⁮‪‭​‬‎‍‌‫⁮⁫⁭‫‮() => CultureInfo.InvariantCulture;

    static bool \u206D⁭⁭​‎⁫‏‎​‭‪‫‫‮⁮⁪‫‌⁬‏‮‪⁭⁪‍⁬‫⁪⁫⁯⁭⁫⁮‏‍‭⁮‪‍‫‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206D⁫‭‎‏​⁫⁯‫⁯‮‪⁮‌⁫‏‫‏⁭‬⁭⁬⁬⁬⁮⁭​⁬‫‫‮​⁯⁫⁮‌‍⁬‫‮() => base.GetHashCode();

    static char \u202C⁫⁯‪‌‫‪‭‮‍‫‮‫⁬‬‏⁭⁭⁫‫⁪‬⁬⁮⁬‌‪⁫‬⁫‫‭‫⁪‬​‎⁯‌⁪‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206D‭⁮​⁫‌‭‎‮‎‭⁮⁬​⁮‏‎‬‍​⁯‪⁯‭‪‭​⁬‫⁬⁬‫‎⁪⁯⁫‮‌‌⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200B‪‫‎⁮‭⁮⁯⁭‪⁫⁬‌‏‍‎‎⁭⁮⁪‪‏‮‪‭⁯⁯‍⁫⁮‌‍⁮‌‎⁬‎⁮‮‫‮([In] string obj0) => obj0.Length;

    static string \u200B‮⁪‮⁮⁭‏‮‮‬‮⁪‪⁮⁯⁫⁭‫⁮​⁪⁮⁭⁮‎‎‬‎‫⁫⁬⁮‍‎‮⁭‏⁮‍⁯‮([In] string obj0) => obj0.Trim();

    static bool \u206E​‫‬‮‮‎⁯​‮‎‭⁮‭‬‮‮‎​‎⁬‫‏‮‭⁮⁭⁯‍‏‭⁬​‏‫‌‎‮‍‎‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202E‍‏‪‬‭‏​⁬‎‫⁭‭‮⁫‎‏‎‍‫⁯⁬‬⁮​‫‮‍‎⁯‫⁯⁫‭‮‮⁯⁮‫⁯‮([In] string obj0) => new Exception(obj0);

    static string \u206E‌⁪‭‫‍‪‮‬‬‏‍‍​​‪⁮​​‪⁪‫‮⁮‬‪‎‌⁭‍‏‍​⁭‎⁭⁪⁯⁬‏‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202C‭‭‎‏‭⁬⁬⁪‎⁬‎​⁫‪‭‌‌‌⁫⁮‎‭‮⁬‮⁪‌‎‌‫‬⁫⁮‮‍‪‌⁭‌‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200C‫‏⁮‏⁪⁯‬‏‮‌‎‪⁯⁬‎⁫‍‏​‏⁯‏⁯‍‬⁯⁮⁫⁬‮‮‏⁮​‮‪‪⁮‌‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202C⁫⁮‪‭⁭‎‌‬‮⁮‬⁫⁮‪‍‪⁯​⁬‮‪‍‬‏​‭​⁮⁭‎⁬‌‍‎‎‮‌⁫‬‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202A⁭‭‮‬⁯‫‫⁮⁮‮‫‌‪‮‫⁬‏‎​⁫⁯⁭⁬⁮⁭‪⁭⁬‫‫​‍‌⁯⁮⁯⁬⁭⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206B‮‭‮⁯‎⁮‏⁫‍⁭​‌‏‏‍‫‪⁫⁮‭‍⁯⁮‬‎‌‌⁭⁪⁭‍‌‪‫‎‭⁭‎‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202A​‍‎‏‍‏‪⁮‪⁭‎‪​⁬‬⁯⁮⁮‌‭‬‪‮‭‬⁮⁬‮‍⁭⁪‫⁭‍‮‍‎⁭‏‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200D⁬‏⁬⁬‬‮‭‌‮⁪⁬​‏⁮⁯⁫‮⁯⁫⁫⁫‬‎‎‍⁭⁮‮​‮‪⁫‮‫‫⁪⁯⁬‏‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200C⁫‮⁬‫‫​‏‮‍‏‎⁮⁯⁮‬⁪‮‫‪‬‫⁮‫‫‬⁬‮⁭‍⁫‪⁬‪‍‎‭‭‭‍‮() => new MemoryStream();

    static void \u202B​‮‪‪‏‪​‎‎⁫‍⁬​⁪‏‬‏⁭⁭⁪⁫⁫‏⁪‭‮⁪‫‮⁭⁭⁮⁯⁯‎‏⁯‪‭‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200D‭‍‭​‎‌‍‮‭‎‌​​‍‭‫‎​‫⁫⁬​⁬⁫‌‮‬‫​⁫‪⁯‪⁯⁮⁪‍​‎‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206F‏⁯‍‭‬⁪‮⁫‌⁫‎⁫‏‮‬​‭⁮⁮‏‮⁫‏‫⁯⁬⁮‌⁯⁭‫⁭‪‌⁭‍‮⁬⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202E⁮⁪‫‮‫⁭⁫​‮‬​⁯⁬⁪‮⁭⁯‍⁭⁭⁭⁫‌⁯​‬‫‬⁭⁮‏‪⁯‌‎‭⁮⁯⁪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202A⁮⁯⁭‮⁯⁮​‌​‭⁭⁬⁮‌‭‮⁪‬‏⁪⁮⁮⁪‮‫⁪‮‍‎‭‎‍‪⁪⁭​⁭​⁭‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C‏⁭⁭⁫‌⁫‌‬‍‌⁫‌⁫⁪‏‎⁮​‪‌‌‭​‬⁭‍⁫⁫‌‍‎‮‮⁫‭‭⁫‏⁬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206C⁬​‍‍⁬‎‎‭⁬⁫‏⁫‏‌‮‫⁯​‫‮‏‎‫‍⁮‍⁫​⁬​‎⁫‫‫‫⁯‮⁮⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F⁪⁪⁭‭⁭‬⁭⁮‫⁯⁫‏‍⁫⁮‭‍‍⁫‏‍⁪‮‎⁮⁪‍‏‍⁭‌‭‪‪⁬⁯‌⁮‮‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206F‮⁮⁪‭⁬‌⁮⁮‌‎‏‫⁮⁮‎‬⁬‫⁮‭‬⁯⁫⁯‌‮‫⁮‭‌‏‎‫⁯⁫‍⁮‪⁭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206A‌‎‪⁯⁯⁭‫⁭⁫‎⁯‫‬⁫‫⁫⁮‎⁯⁭⁬‭​⁬⁪‎‫⁬‪⁭‪‪‭​⁬‪⁮‌‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E‮​‪⁪‭‌‏‮⁮⁬‪⁯⁮​‏‍‬⁮⁮⁪‫⁭‌⁫⁭⁪‭⁭⁭‭‭‭⁫‎⁭‬⁬‬‮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202A​​⁭⁬‪‪‪⁭‎⁭‌⁯​‭⁪⁭⁮⁫​‎⁭​⁯⁭⁮‏‮‫‫⁬⁫⁯‏‍​‍⁭‏‍‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200B‮⁪‍‪‪‮‍‬⁮‬‪‪‪‬​‌‭‭⁯‍‭​⁪‪‪⁯‮‌⁫‫⁭‮‍‬‏‏⁯‫‭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
