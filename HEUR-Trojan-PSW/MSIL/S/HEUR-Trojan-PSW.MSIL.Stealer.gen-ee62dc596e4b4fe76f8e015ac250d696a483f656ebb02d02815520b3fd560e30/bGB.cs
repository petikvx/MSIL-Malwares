// Decompiled with JetBrains decompiler
// Type: wG.bGB
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace wG
{
  public class bGB : tc, Au
  {
    private static bGB cib;

    [CompilerGenerated]
    [SpecialName]
    public Xp f19() => this.Kmx;

    [CompilerGenerated]
    [SpecialName]
    public void J1F(Xp _param1) => this.Kmx = _param1;

    [CompilerGenerated]
    [SpecialName]
    public tn Tmm() => this.em7;

    [CompilerGenerated]
    [SpecialName]
    public void jmj(tn _param1) => this.em7 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public IList<tc> PmR() => this.jmY;

    [CompilerGenerated]
    [SpecialName]
    public void qm4(IList<tc> _param1) => this.jmY = _param1;

    [CompilerGenerated]
    [SpecialName]
    public gGG omN() => this.TmQ;

    [CompilerGenerated]
    [SpecialName]
    public void zmg(gGG _param1) => this.TmQ = _param1;

    public bGB()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.qm4((IList<tc>) new List<tc>());
    }

    public override string ToString()
    {
      string empty = string.Empty;
      using (IEnumerator<tc> enumerator = this.PmR().GetEnumerator())
      {
        while (bGB.cii((object) enumerator))
        {
          tc current = enumerator.Current;
          empty += current.ToString();
        }
      }
      string str = "(" + empty + ")";
      int num1 = 0;
      if (bGB.JiP() != null)
        goto label_10;
label_1:
      switch (num1)
      {
        default:
          return str;
      }
label_10:
      int num2;
      num1 = num2;
      goto label_1;
    }

    internal static bool yim() => bGB.cib == null;

    internal static bGB JiP() => bGB.cib;

    internal static bool cii([In] object obj0) => ((IEnumerator) obj0).MoveNext();
  }
}
