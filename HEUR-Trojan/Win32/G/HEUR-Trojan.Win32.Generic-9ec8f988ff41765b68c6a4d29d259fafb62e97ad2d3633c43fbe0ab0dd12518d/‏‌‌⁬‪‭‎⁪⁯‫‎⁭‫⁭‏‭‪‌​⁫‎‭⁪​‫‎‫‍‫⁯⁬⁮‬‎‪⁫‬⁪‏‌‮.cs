// Decompiled with JetBrains decompiler
// Type: ‏‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Text;

internal class \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮
{
  private static readonly ushort[] \u200F‏⁭⁫⁮‍‮⁪⁬‭​⁬‭⁬‬⁭‌‌‭‮⁫‎‏⁪‪⁯‌‫‏‪‪‎⁮‏​‏⁯⁮⁬⁭‮ = new ushort[256]
  {
    (ushort) 0,
    (ushort) 1,
    (ushort) 4,
    (ushort) 5,
    (ushort) 16,
    (ushort) 17,
    (ushort) 20,
    (ushort) 21,
    (ushort) 64,
    (ushort) 65,
    (ushort) 68,
    (ushort) 69,
    (ushort) 80,
    (ushort) 81,
    (ushort) 84,
    (ushort) 85,
    (ushort) 256,
    (ushort) 257,
    (ushort) 260,
    (ushort) 261,
    (ushort) 272,
    (ushort) 273,
    (ushort) 276,
    (ushort) 277,
    (ushort) 320,
    (ushort) 321,
    (ushort) 324,
    (ushort) 325,
    (ushort) 336,
    (ushort) 337,
    (ushort) 340,
    (ushort) 341,
    (ushort) 1024,
    (ushort) 1025,
    (ushort) 1028,
    (ushort) 1029,
    (ushort) 1040,
    (ushort) 1041,
    (ushort) 1044,
    (ushort) 1045,
    (ushort) 1088,
    (ushort) 1089,
    (ushort) 1092,
    (ushort) 1093,
    (ushort) 1104,
    (ushort) 1105,
    (ushort) 1108,
    (ushort) 1109,
    (ushort) 1280,
    (ushort) 1281,
    (ushort) 1284,
    (ushort) 1285,
    (ushort) 1296,
    (ushort) 1297,
    (ushort) 1300,
    (ushort) 1301,
    (ushort) 1344,
    (ushort) 1345,
    (ushort) 1348,
    (ushort) 1349,
    (ushort) 1360,
    (ushort) 1361,
    (ushort) 1364,
    (ushort) 1365,
    (ushort) 4096,
    (ushort) 4097,
    (ushort) 4100,
    (ushort) 4101,
    (ushort) 4112,
    (ushort) 4113,
    (ushort) 4116,
    (ushort) 4117,
    (ushort) 4160,
    (ushort) 4161,
    (ushort) 4164,
    (ushort) 4165,
    (ushort) 4176,
    (ushort) 4177,
    (ushort) 4180,
    (ushort) 4181,
    (ushort) 4352,
    (ushort) 4353,
    (ushort) 4356,
    (ushort) 4357,
    (ushort) 4368,
    (ushort) 4369,
    (ushort) 4372,
    (ushort) 4373,
    (ushort) 4416,
    (ushort) 4417,
    (ushort) 4420,
    (ushort) 4421,
    (ushort) 4432,
    (ushort) 4433,
    (ushort) 4436,
    (ushort) 4437,
    (ushort) 5120,
    (ushort) 5121,
    (ushort) 5124,
    (ushort) 5125,
    (ushort) 5136,
    (ushort) 5137,
    (ushort) 5140,
    (ushort) 5141,
    (ushort) 5184,
    (ushort) 5185,
    (ushort) 5188,
    (ushort) 5189,
    (ushort) 5200,
    (ushort) 5201,
    (ushort) 5204,
    (ushort) 5205,
    (ushort) 5376,
    (ushort) 5377,
    (ushort) 5380,
    (ushort) 5381,
    (ushort) 5392,
    (ushort) 5393,
    (ushort) 5396,
    (ushort) 5397,
    (ushort) 5440,
    (ushort) 5441,
    (ushort) 5444,
    (ushort) 5445,
    (ushort) 5456,
    (ushort) 5457,
    (ushort) 5460,
    (ushort) 5461,
    (ushort) 16384,
    (ushort) 16385,
    (ushort) 16388,
    (ushort) 16389,
    (ushort) 16400,
    (ushort) 16401,
    (ushort) 16404,
    (ushort) 16405,
    (ushort) 16448,
    (ushort) 16449,
    (ushort) 16452,
    (ushort) 16453,
    (ushort) 16464,
    (ushort) 16465,
    (ushort) 16468,
    (ushort) 16469,
    (ushort) 16640,
    (ushort) 16641,
    (ushort) 16644,
    (ushort) 16645,
    (ushort) 16656,
    (ushort) 16657,
    (ushort) 16660,
    (ushort) 16661,
    (ushort) 16704,
    (ushort) 16705,
    (ushort) 16708,
    (ushort) 16709,
    (ushort) 16720,
    (ushort) 16721,
    (ushort) 16724,
    (ushort) 16725,
    (ushort) 17408,
    (ushort) 17409,
    (ushort) 17412,
    (ushort) 17413,
    (ushort) 17424,
    (ushort) 17425,
    (ushort) 17428,
    (ushort) 17429,
    (ushort) 17472,
    (ushort) 17473,
    (ushort) 17476,
    (ushort) 17477,
    (ushort) 17488,
    (ushort) 17489,
    (ushort) 17492,
    (ushort) 17493,
    (ushort) 17664,
    (ushort) 17665,
    (ushort) 17668,
    (ushort) 17669,
    (ushort) 17680,
    (ushort) 17681,
    (ushort) 17684,
    (ushort) 17685,
    (ushort) 17728,
    (ushort) 17729,
    (ushort) 17732,
    (ushort) 17733,
    (ushort) 17744,
    (ushort) 17745,
    (ushort) 17748,
    (ushort) 17749,
    (ushort) 20480,
    (ushort) 20481,
    (ushort) 20484,
    (ushort) 20485,
    (ushort) 20496,
    (ushort) 20497,
    (ushort) 20500,
    (ushort) 20501,
    (ushort) 20544,
    (ushort) 20545,
    (ushort) 20548,
    (ushort) 20549,
    (ushort) 20560,
    (ushort) 20561,
    (ushort) 20564,
    (ushort) 20565,
    (ushort) 20736,
    (ushort) 20737,
    (ushort) 20740,
    (ushort) 20741,
    (ushort) 20752,
    (ushort) 20753,
    (ushort) 20756,
    (ushort) 20757,
    (ushort) 20800,
    (ushort) 20801,
    (ushort) 20804,
    (ushort) 20805,
    (ushort) 20816,
    (ushort) 20817,
    (ushort) 20820,
    (ushort) 20821,
    (ushort) 21504,
    (ushort) 21505,
    (ushort) 21508,
    (ushort) 21509,
    (ushort) 21520,
    (ushort) 21521,
    (ushort) 21524,
    (ushort) 21525,
    (ushort) 21568,
    (ushort) 21569,
    (ushort) 21572,
    (ushort) 21573,
    (ushort) 21584,
    (ushort) 21585,
    (ushort) 21588,
    (ushort) 21589,
    (ushort) 21760,
    (ushort) 21761,
    (ushort) 21764,
    (ushort) 21765,
    (ushort) 21776,
    (ushort) 21777,
    (ushort) 21780,
    (ushort) 21781,
    (ushort) 21824,
    (ushort) 21825,
    (ushort) 21828,
    (ushort) 21829,
    (ushort) 21840,
    (ushort) 21841,
    (ushort) 21844,
    (ushort) 21845
  };
  private static readonly int[] \u202E‬⁫⁯‬⁮⁫⁯‏‌‍‏⁯⁫⁬⁪‪‭⁭⁬‫⁭⁬‏⁮‭​⁪⁮‍⁭‬⁬‏‏⁯⁫‌‏‮‮ = new int[128]
  {
    0,
    1,
    8,
    9,
    64,
    65,
    72,
    73,
    512,
    513,
    520,
    521,
    576,
    577,
    584,
    585,
    4096,
    4097,
    4104,
    4105,
    4160,
    4161,
    4168,
    4169,
    4608,
    4609,
    4616,
    4617,
    4672,
    4673,
    4680,
    4681,
    32768,
    32769,
    32776,
    32777,
    32832,
    32833,
    32840,
    32841,
    33280,
    33281,
    33288,
    33289,
    33344,
    33345,
    33352,
    33353,
    36864,
    36865,
    36872,
    36873,
    36928,
    36929,
    36936,
    36937,
    37376,
    37377,
    37384,
    37385,
    37440,
    37441,
    37448,
    37449,
    262144,
    262145,
    262152,
    262153,
    262208,
    262209,
    262216,
    262217,
    262656,
    262657,
    262664,
    262665,
    262720,
    262721,
    262728,
    262729,
    266240,
    266241,
    266248,
    266249,
    266304,
    266305,
    266312,
    266313,
    266752,
    266753,
    266760,
    266761,
    266816,
    266817,
    266824,
    266825,
    294912,
    294913,
    294920,
    294921,
    294976,
    294977,
    294984,
    294985,
    295424,
    295425,
    295432,
    295433,
    295488,
    295489,
    295496,
    295497,
    299008,
    299009,
    299016,
    299017,
    299072,
    299073,
    299080,
    299081,
    299520,
    299521,
    299528,
    299529,
    299584,
    299585,
    299592,
    299593
  };
  private static readonly int[] \u202C‍‍‎⁯‌⁭‬⁯⁭​‮‪‌‪‎‬⁬‪‭‮⁫‭​‏‮‎⁯‪‍‪⁭‮⁯⁮⁭‎⁫‪⁯‮ = new int[256]
  {
    0,
    1,
    16,
    17,
    256,
    257,
    272,
    273,
    4096,
    4097,
    4112,
    4113,
    4352,
    4353,
    4368,
    4369,
    65536,
    65537,
    65552,
    65553,
    65792,
    65793,
    65808,
    65809,
    69632,
    69633,
    69648,
    69649,
    69888,
    69889,
    69904,
    69905,
    1048576,
    1048577,
    1048592,
    1048593,
    1048832,
    1048833,
    1048848,
    1048849,
    1052672,
    1052673,
    1052688,
    1052689,
    1052928,
    1052929,
    1052944,
    1052945,
    1114112,
    1114113,
    1114128,
    1114129,
    1114368,
    1114369,
    1114384,
    1114385,
    1118208,
    1118209,
    1118224,
    1118225,
    1118464,
    1118465,
    1118480,
    1118481,
    16777216,
    16777217,
    16777232,
    16777233,
    16777472,
    16777473,
    16777488,
    16777489,
    16781312,
    16781313,
    16781328,
    16781329,
    16781568,
    16781569,
    16781584,
    16781585,
    16842752,
    16842753,
    16842768,
    16842769,
    16843008,
    16843009,
    16843024,
    16843025,
    16846848,
    16846849,
    16846864,
    16846865,
    16847104,
    16847105,
    16847120,
    16847121,
    17825792,
    17825793,
    17825808,
    17825809,
    17826048,
    17826049,
    17826064,
    17826065,
    17829888,
    17829889,
    17829904,
    17829905,
    17830144,
    17830145,
    17830160,
    17830161,
    17891328,
    17891329,
    17891344,
    17891345,
    17891584,
    17891585,
    17891600,
    17891601,
    17895424,
    17895425,
    17895440,
    17895441,
    17895680,
    17895681,
    17895696,
    17895697,
    268435456,
    268435457,
    268435472,
    268435473,
    268435712,
    268435713,
    268435728,
    268435729,
    268439552,
    268439553,
    268439568,
    268439569,
    268439808,
    268439809,
    268439824,
    268439825,
    268500992,
    268500993,
    268501008,
    268501009,
    268501248,
    268501249,
    268501264,
    268501265,
    268505088,
    268505089,
    268505104,
    268505105,
    268505344,
    268505345,
    268505360,
    268505361,
    269484032,
    269484033,
    269484048,
    269484049,
    269484288,
    269484289,
    269484304,
    269484305,
    269488128,
    269488129,
    269488144,
    269488145,
    269488384,
    269488385,
    269488400,
    269488401,
    269549568,
    269549569,
    269549584,
    269549585,
    269549824,
    269549825,
    269549840,
    269549841,
    269553664,
    269553665,
    269553680,
    269553681,
    269553920,
    269553921,
    269553936,
    269553937,
    285212672,
    285212673,
    285212688,
    285212689,
    285212928,
    285212929,
    285212944,
    285212945,
    285216768,
    285216769,
    285216784,
    285216785,
    285217024,
    285217025,
    285217040,
    285217041,
    285278208,
    285278209,
    285278224,
    285278225,
    285278464,
    285278465,
    285278480,
    285278481,
    285282304,
    285282305,
    285282320,
    285282321,
    285282560,
    285282561,
    285282576,
    285282577,
    286261248,
    286261249,
    286261264,
    286261265,
    286261504,
    286261505,
    286261520,
    286261521,
    286265344,
    286265345,
    286265360,
    286265361,
    286265600,
    286265601,
    286265616,
    286265617,
    286326784,
    286326785,
    286326800,
    286326801,
    286327040,
    286327041,
    286327056,
    286327057,
    286330880,
    286330881,
    286330896,
    286330897,
    286331136,
    286331137,
    286331152,
    286331153
  };
  private static readonly int[] \u200B⁮‍‪‬‏‬⁯‍‫⁭‍‏‍‎⁬⁫‭⁬‎⁮‬⁬⁭​‪‫⁭‬⁭‫⁮‮‏⁬⁭‮​‮‌‮ = new int[128]
  {
    0,
    1,
    32,
    33,
    1024,
    1025,
    1056,
    1057,
    32768,
    32769,
    32800,
    32801,
    33792,
    33793,
    33824,
    33825,
    1048576,
    1048577,
    1048608,
    1048609,
    1049600,
    1049601,
    1049632,
    1049633,
    1081344,
    1081345,
    1081376,
    1081377,
    1082368,
    1082369,
    1082400,
    1082401,
    33554432,
    33554433,
    33554464,
    33554465,
    33555456,
    33555457,
    33555488,
    33555489,
    33587200,
    33587201,
    33587232,
    33587233,
    33588224,
    33588225,
    33588256,
    33588257,
    34603008,
    34603009,
    34603040,
    34603041,
    34604032,
    34604033,
    34604064,
    34604065,
    34635776,
    34635777,
    34635808,
    34635809,
    34636800,
    34636801,
    34636832,
    34636833,
    1073741824,
    1073741825,
    1073741856,
    1073741857,
    1073742848,
    1073742849,
    1073742880,
    1073742881,
    1073774592,
    1073774593,
    1073774624,
    1073774625,
    1073775616,
    1073775617,
    1073775648,
    1073775649,
    1074790400,
    1074790401,
    1074790432,
    1074790433,
    1074791424,
    1074791425,
    1074791456,
    1074791457,
    1074823168,
    1074823169,
    1074823200,
    1074823201,
    1074824192,
    1074824193,
    1074824224,
    1074824225,
    1107296256,
    1107296257,
    1107296288,
    1107296289,
    1107297280,
    1107297281,
    1107297312,
    1107297313,
    1107329024,
    1107329025,
    1107329056,
    1107329057,
    1107330048,
    1107330049,
    1107330080,
    1107330081,
    1108344832,
    1108344833,
    1108344864,
    1108344865,
    1108345856,
    1108345857,
    1108345888,
    1108345889,
    1108377600,
    1108377601,
    1108377632,
    1108377633,
    1108378624,
    1108378625,
    1108378656,
    1108378657
  };
  private static readonly long[] \u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮ = new long[512]
  {
    0L,
    1L,
    128L,
    129L,
    16384L,
    16385L,
    16512L,
    16513L,
    2097152L,
    2097153L,
    2097280L,
    2097281L,
    2113536L,
    2113537L,
    2113664L,
    2113665L,
    268435456L,
    268435457L,
    268435584L,
    268435585L,
    268451840L,
    268451841L,
    268451968L,
    268451969L,
    270532608L,
    270532609L,
    270532736L,
    270532737L,
    270548992L,
    270548993L,
    270549120L,
    270549121L,
    34359738368L,
    34359738369L,
    34359738496L,
    34359738497L,
    34359754752L,
    34359754753L,
    34359754880L,
    34359754881L,
    34361835520L,
    34361835521L,
    34361835648L,
    34361835649L,
    34361851904L,
    34361851905L,
    34361852032L,
    34361852033L,
    34628173824L,
    34628173825L,
    34628173952L,
    34628173953L,
    34628190208L,
    34628190209L,
    34628190336L,
    34628190337L,
    34630270976L,
    34630270977L,
    34630271104L,
    34630271105L,
    34630287360L,
    34630287361L,
    34630287488L,
    34630287489L,
    4398046511104L,
    4398046511105L,
    4398046511232L,
    4398046511233L,
    4398046527488L,
    4398046527489L,
    4398046527616L,
    4398046527617L,
    4398048608256L,
    4398048608257L,
    4398048608384L,
    4398048608385L,
    4398048624640L,
    4398048624641L,
    4398048624768L,
    4398048624769L,
    4398314946560L,
    4398314946561L,
    4398314946688L,
    4398314946689L,
    4398314962944L,
    4398314962945L,
    4398314963072L,
    4398314963073L,
    4398317043712L,
    4398317043713L,
    4398317043840L,
    4398317043841L,
    4398317060096L,
    4398317060097L,
    4398317060224L,
    4398317060225L,
    4432406249472L,
    4432406249473L,
    4432406249600L,
    4432406249601L,
    4432406265856L,
    4432406265857L,
    4432406265984L,
    4432406265985L,
    4432408346624L,
    4432408346625L,
    4432408346752L,
    4432408346753L,
    4432408363008L,
    4432408363009L,
    4432408363136L,
    4432408363137L,
    4432674684928L,
    4432674684929L,
    4432674685056L,
    4432674685057L,
    4432674701312L,
    4432674701313L,
    4432674701440L,
    4432674701441L,
    4432676782080L,
    4432676782081L,
    4432676782208L,
    4432676782209L,
    4432676798464L,
    4432676798465L,
    4432676798592L,
    4432676798593L,
    562949953421312L,
    562949953421313L,
    562949953421440L,
    562949953421441L,
    562949953437696L,
    562949953437697L,
    562949953437824L,
    562949953437825L,
    562949955518464L,
    562949955518465L,
    562949955518592L,
    562949955518593L,
    562949955534848L,
    562949955534849L,
    562949955534976L,
    562949955534977L,
    562950221856768L,
    562950221856769L,
    562950221856896L,
    562950221856897L,
    562950221873152L,
    562950221873153L,
    562950221873280L,
    562950221873281L,
    562950223953920L,
    562950223953921L,
    562950223954048L,
    562950223954049L,
    562950223970304L,
    562950223970305L,
    562950223970432L,
    562950223970433L,
    562984313159680L,
    562984313159681L,
    562984313159808L,
    562984313159809L,
    562984313176064L,
    562984313176065L,
    562984313176192L,
    562984313176193L,
    562984315256832L,
    562984315256833L,
    562984315256960L,
    562984315256961L,
    562984315273216L,
    562984315273217L,
    562984315273344L,
    562984315273345L,
    562984581595136L,
    562984581595137L,
    562984581595264L,
    562984581595265L,
    562984581611520L,
    562984581611521L,
    562984581611648L,
    562984581611649L,
    562984583692288L,
    562984583692289L,
    562984583692416L,
    562984583692417L,
    562984583708672L,
    562984583708673L,
    562984583708800L,
    562984583708801L,
    567347999932416L,
    567347999932417L,
    567347999932544L,
    567347999932545L,
    567347999948800L,
    567347999948801L,
    567347999948928L,
    567347999948929L,
    567348002029568L,
    567348002029569L,
    567348002029696L,
    567348002029697L,
    567348002045952L,
    567348002045953L,
    567348002046080L,
    567348002046081L,
    567348268367872L,
    567348268367873L,
    567348268368000L,
    567348268368001L,
    567348268384256L,
    567348268384257L,
    567348268384384L,
    567348268384385L,
    567348270465024L,
    567348270465025L,
    567348270465152L,
    567348270465153L,
    567348270481408L,
    567348270481409L,
    567348270481536L,
    567348270481537L,
    567382359670784L,
    567382359670785L,
    567382359670912L,
    567382359670913L,
    567382359687168L,
    567382359687169L,
    567382359687296L,
    567382359687297L,
    567382361767936L,
    567382361767937L,
    567382361768064L,
    567382361768065L,
    567382361784320L,
    567382361784321L,
    567382361784448L,
    567382361784449L,
    567382628106240L,
    567382628106241L,
    567382628106368L,
    567382628106369L,
    567382628122624L,
    567382628122625L,
    567382628122752L,
    567382628122753L,
    567382630203392L,
    567382630203393L,
    567382630203520L,
    567382630203521L,
    567382630219776L,
    567382630219777L,
    567382630219904L,
    567382630219905L,
    72057594037927936L,
    72057594037927937L,
    72057594037928064L,
    72057594037928065L,
    72057594037944320L,
    72057594037944321L,
    72057594037944448L,
    72057594037944449L,
    72057594040025088L,
    72057594040025089L,
    72057594040025216L,
    72057594040025217L,
    72057594040041472L,
    72057594040041473L,
    72057594040041600L,
    72057594040041601L,
    72057594306363392L,
    72057594306363393L,
    72057594306363520L,
    72057594306363521L,
    72057594306379776L,
    72057594306379777L,
    72057594306379904L,
    72057594306379905L,
    72057594308460544L,
    72057594308460545L,
    72057594308460672L,
    72057594308460673L,
    72057594308476928L,
    72057594308476929L,
    72057594308477056L,
    72057594308477057L,
    72057628397666304L,
    72057628397666305L,
    72057628397666432L,
    72057628397666433L,
    72057628397682688L,
    72057628397682689L,
    72057628397682816L,
    72057628397682817L,
    72057628399763456L,
    72057628399763457L,
    72057628399763584L,
    72057628399763585L,
    72057628399779840L,
    72057628399779841L,
    72057628399779968L,
    72057628399779969L,
    72057628666101760L,
    72057628666101761L,
    72057628666101888L,
    72057628666101889L,
    72057628666118144L,
    72057628666118145L,
    72057628666118272L,
    72057628666118273L,
    72057628668198912L,
    72057628668198913L,
    72057628668199040L,
    72057628668199041L,
    72057628668215296L,
    72057628668215297L,
    72057628668215424L,
    72057628668215425L,
    72061992084439040L,
    72061992084439041L,
    72061992084439168L,
    72061992084439169L,
    72061992084455424L,
    72061992084455425L,
    72061992084455552L,
    72061992084455553L,
    72061992086536192L,
    72061992086536193L,
    72061992086536320L,
    72061992086536321L,
    72061992086552576L,
    72061992086552577L,
    72061992086552704L,
    72061992086552705L,
    72061992352874496L,
    72061992352874497L,
    72061992352874624L,
    72061992352874625L,
    72061992352890880L,
    72061992352890881L,
    72061992352891008L,
    72061992352891009L,
    72061992354971648L,
    72061992354971649L,
    72061992354971776L,
    72061992354971777L,
    72061992354988032L,
    72061992354988033L,
    72061992354988160L,
    72061992354988161L,
    72062026444177408L,
    72062026444177409L,
    72062026444177536L,
    72062026444177537L,
    72062026444193792L,
    72062026444193793L,
    72062026444193920L,
    72062026444193921L,
    72062026446274560L,
    72062026446274561L,
    72062026446274688L,
    72062026446274689L,
    72062026446290944L,
    72062026446290945L,
    72062026446291072L,
    72062026446291073L,
    72062026712612864L,
    72062026712612865L,
    72062026712612992L,
    72062026712612993L,
    72062026712629248L,
    72062026712629249L,
    72062026712629376L,
    72062026712629377L,
    72062026714710016L,
    72062026714710017L,
    72062026714710144L,
    72062026714710145L,
    72062026714726400L,
    72062026714726401L,
    72062026714726528L,
    72062026714726529L,
    72620543991349248L,
    72620543991349249L,
    72620543991349376L,
    72620543991349377L,
    72620543991365632L,
    72620543991365633L,
    72620543991365760L,
    72620543991365761L,
    72620543993446400L,
    72620543993446401L,
    72620543993446528L,
    72620543993446529L,
    72620543993462784L,
    72620543993462785L,
    72620543993462912L,
    72620543993462913L,
    72620544259784704L,
    72620544259784705L,
    72620544259784832L,
    72620544259784833L,
    72620544259801088L,
    72620544259801089L,
    72620544259801216L,
    72620544259801217L,
    72620544261881856L,
    72620544261881857L,
    72620544261881984L,
    72620544261881985L,
    72620544261898240L,
    72620544261898241L,
    72620544261898368L,
    72620544261898369L,
    72620578351087616L,
    72620578351087617L,
    72620578351087744L,
    72620578351087745L,
    72620578351104000L,
    72620578351104001L,
    72620578351104128L,
    72620578351104129L,
    72620578353184768L,
    72620578353184769L,
    72620578353184896L,
    72620578353184897L,
    72620578353201152L,
    72620578353201153L,
    72620578353201280L,
    72620578353201281L,
    72620578619523072L,
    72620578619523073L,
    72620578619523200L,
    72620578619523201L,
    72620578619539456L,
    72620578619539457L,
    72620578619539584L,
    72620578619539585L,
    72620578621620224L,
    72620578621620225L,
    72620578621620352L,
    72620578621620353L,
    72620578621636608L,
    72620578621636609L,
    72620578621636736L,
    72620578621636737L,
    72624942037860352L,
    72624942037860353L,
    72624942037860480L,
    72624942037860481L,
    72624942037876736L,
    72624942037876737L,
    72624942037876864L,
    72624942037876865L,
    72624942039957504L,
    72624942039957505L,
    72624942039957632L,
    72624942039957633L,
    72624942039973888L,
    72624942039973889L,
    72624942039974016L,
    72624942039974017L,
    72624942306295808L,
    72624942306295809L,
    72624942306295936L,
    72624942306295937L,
    72624942306312192L,
    72624942306312193L,
    72624942306312320L,
    72624942306312321L,
    72624942308392960L,
    72624942308392961L,
    72624942308393088L,
    72624942308393089L,
    72624942308409344L,
    72624942308409345L,
    72624942308409472L,
    72624942308409473L,
    72624976397598720L,
    72624976397598721L,
    72624976397598848L,
    72624976397598849L,
    72624976397615104L,
    72624976397615105L,
    72624976397615232L,
    72624976397615233L,
    72624976399695872L,
    72624976399695873L,
    72624976399696000L,
    72624976399696001L,
    72624976399712256L,
    72624976399712257L,
    72624976399712384L,
    72624976399712385L,
    72624976666034176L,
    72624976666034177L,
    72624976666034304L,
    72624976666034305L,
    72624976666050560L,
    72624976666050561L,
    72624976666050688L,
    72624976666050689L,
    72624976668131328L,
    72624976668131329L,
    72624976668131456L,
    72624976668131457L,
    72624976668147712L,
    72624976668147713L,
    72624976668147840L,
    72624976668147841L
  };
  private const string \u206F‭⁬‌‏‭⁭‍⁫‮⁭⁬‮⁯‌‬⁯⁭‫⁫⁯⁫‮‫‎‍⁯⁯⁬‏‏‬‬⁭⁫‌⁬‎⁬‬‮ = "0000000000000000000000000000000000000000000000000000000000000000";
  internal static readonly byte[] \u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮ = new byte[256]
  {
    (byte) 0,
    (byte) 1,
    (byte) 2,
    (byte) 2,
    (byte) 3,
    (byte) 3,
    (byte) 3,
    (byte) 3,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 4,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 5,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 6,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 7,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8,
    (byte) 8
  };
  private long[] \u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(int _param1) => this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = new long[_param1];

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(long[] _param1) => this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = _param1;

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(long[] _param1, int _param2, int _param3)
  {
    if (_param2 == 0 && _param3 == _param1.Length)
    {
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = _param1;
    }
    else
    {
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = new long[_param3];
      Array.Copy((Array) _param1, _param2, (Array) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, _param3);
    }
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1)
  {
    if (_param1 == null || _param1.\u202C⁪⁮‬⁭‌‍‍⁫‍‌⁪⁮⁫‭‏⁫‎‭​‪⁪‏‍‎‮⁫‫⁬‭⁫⁬‭⁪⁫‮‮‌⁭⁭‮ < 0)
      throw new ArgumentException("invalid F2m field value", "bigInt");
    if (_param1.\u202C⁪⁮‬⁭‌‍‍⁫‍‌⁪⁮⁫‭‏⁫‎‭​‪⁪‏‍‎‮⁫‫⁬‭⁫⁬‭⁪⁫‮‮‌⁭⁭‮ == 0)
    {
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = new long[1];
    }
    else
    {
      byte[] numArray = _param1.\u202E‫‪⁭‍​‌‬⁯⁬‏‪⁪⁯‭⁭​‍⁮‎‬‌‏⁭⁯‌⁬‮​‭‭⁮‫‫⁮‍‭⁮⁬⁬‮();
      int length1 = numArray.Length;
      int num1 = 0;
      if (numArray[0] == (byte) 0)
      {
        --length1;
        num1 = 1;
      }
      int length2 = (length1 + 7) / 8;
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = new long[length2];
      int index1 = length2 - 1;
      int num2 = length1 % 8 + num1;
      long num3 = 0;
      int index2 = num1;
      if (num1 < num2)
      {
        for (; index2 < num2; ++index2)
          num3 = num3 << 8 | (long) numArray[index2];
        this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index1--] = num3;
      }
      for (; index1 >= 0; --index1)
      {
        long num4 = 0;
        for (int index3 = 0; index3 < 8; ++index3)
          num4 = num4 << 8 | (long) numArray[index2++];
        this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index1] = num4;
      }
    }
  }

  internal void \u202D‪‪‌‌⁭‎‪‎‏⁯⁬‌⁮⁯⁬‭‪‪⁭⁯‬‬‎‌‎⁮‪‌‭⁭‪‭⁬⁪⁭⁭‍‫⁪‮(long[] _param1, int _param2) => Array.Copy((Array) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) _param1, _param2, this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length);

  public bool \u202E⁪‫​⁭‬‌‭‮‏‫​‌‍⁮‬‌⁭‏⁯‬⁮‪‪⁬‬⁯⁬‏‍‫⁬‌‮⁯​‭‎‫⁪‮()
  {
    long[] numArray = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    if (numArray[0] != 1L)
      return false;
    for (int index = 1; index < numArray.Length; ++index)
    {
      if (numArray[index] != 0L)
        return false;
    }
    return true;
  }

  public bool \u202A⁮‍‬‫‌⁫‬‍⁮⁭‍‎‭‌‍‬‫⁬‪⁬⁬‬‫⁭‮⁪‮‬​‏‍​⁫⁭‏‌⁭​⁫‮()
  {
    foreach (long num in this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮)
    {
      if (num != 0L)
        return false;
    }
    return true;
  }

  public int \u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮() => this.\u200B‍‌⁯⁬‬‫‮⁮‪‍‍⁮‌‬⁭‬‮‏⁫⁫​⁫⁫‏‎‍⁭⁫⁯‪‫‬⁯‮‍⁬​‭⁫‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length);

  public int \u200B‍‌⁯⁬‬‫‮⁮‪‍‍⁮‌‬⁭‬‮‏⁫⁫​⁫⁫‏‎‍⁭⁫⁯‪‫‬⁯‮‍⁬​‭⁫‮(int _param1)
  {
    long[] numArray = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    _param1 = Math.Min(_param1, numArray.Length);
    if (_param1 < 1)
      return 0;
    if (numArray[0] != 0L)
    {
      do
        ;
      while (numArray[--_param1] == 0L);
      return _param1 + 1;
    }
    while (numArray[--_param1] == 0L)
    {
      if (_param1 <= 0)
        return 0;
    }
    return _param1 + 1;
  }

  public int \u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮()
  {
    int length = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length;
    while (length != 0)
    {
      long num = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[--length];
      if (num != 0L)
        return (length << 6) + \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮(num);
    }
    return 0;
  }

  private int \u200D‮‏⁪‏​‮‭‬⁪‍​‬​‪‏⁮‌‪⁪‮⁬‪⁬⁯⁭‮‭⁮⁫⁯⁮‭⁮⁭‍⁪​‎⁬‮(int _param1)
  {
    int num1 = (int) ((uint) (_param1 + 62) >> 6);
    while (num1 != 0)
    {
      long num2 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[--num1];
      if (num2 != 0L)
        return (num1 << 6) + \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮(num2);
    }
    return 0;
  }

  private static int \u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮(long _param0)
  {
    int index1 = (int) ((ulong) _param0 >> 32);
    int num1;
    if (index1 == 0)
    {
      index1 = (int) _param0;
      num1 = 0;
    }
    else
      num1 = 32;
    int index2 = (int) ((uint) index1 >> 16);
    int num2;
    if (index2 == 0)
    {
      int index3 = (int) ((uint) index1 >> 8);
      num2 = index3 == 0 ? (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮[index1] : 8 + (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮[index3];
    }
    else
    {
      int index4 = (int) ((uint) index2 >> 8);
      num2 = index4 == 0 ? 16 + (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮[index2] : 24 + (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮[index4];
    }
    return num1 + num2;
  }

  private long[] \u206B‌‏‮‮‭⁪‍⁪‭⁭⁪⁭​‎⁫​‌⁬‍‭‬⁬⁪‭​‫⁪⁬‌‎​⁬‌‍⁭‌‪‭‍‮(int _param1)
  {
    long[] destinationArray = new long[_param1];
    Array.Copy((Array) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, 0, Math.Min(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length, _param1));
    return destinationArray;
  }

  public \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u200F⁭⁬‬‏‫⁭‫⁪‬⁬⁭⁯‭‎‫‭⁪‌​⁫‍⁬‎⁭⁯‪‌‬‭‎‌‮‭⁬‍​‬​‮‮()
  {
    int num1 = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (num1 == 0)
      return \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Zero;
    long num2 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[num1 - 1];
    byte[] numArray1 = new byte[8];
    int num3 = 0;
    bool flag = false;
    for (int index = 7; index >= 0; --index)
    {
      byte num4 = (byte) ((ulong) num2 >> 8 * index);
      if (flag || num4 != (byte) 0)
      {
        flag = true;
        numArray1[num3++] = num4;
      }
    }
    byte[] numArray2 = new byte[8 * (num1 - 1) + num3];
    for (int index = 0; index < num3; ++index)
      numArray2[index] = numArray1[index];
    for (int index1 = num1 - 2; index1 >= 0; --index1)
    {
      long num5 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index1];
      for (int index2 = 7; index2 >= 0; --index2)
        numArray2[num3++] = (byte) ((ulong) num5 >> 8 * index2);
    }
    return new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray2);
  }

  private static long \u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3)
  {
    int num1 = 64 - _param3;
    long num2 = 0;
    for (int index = 0; index < _param2; ++index)
    {
      long num3 = _param0[_param1 + index];
      _param0[_param1 + index] = num3 << _param3 | num2;
      num2 = (long) ((ulong) num3 >> num1);
    }
    return num2;
  }

  private static long \u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    int num1 = 64 - _param5;
    long num2 = 0;
    for (int index = 0; index < _param4; ++index)
    {
      long num3 = _param0[_param1 + index];
      _param2[_param3 + index] = num3 << _param5 | num2;
      num2 = (long) ((ulong) num3 >> num1);
    }
    return num2;
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200B⁪‎⁭‌‬‬‫⁪⁬‏⁪⁪‏‮⁬‬⁪⁫⁭⁭‍‎‍⁬‎⁯‎⁭‪⁬⁯‪⁪⁪‎⁭‭‬‮()
  {
    if (this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length == 0)
      return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(new long[1]
      {
        1L
      });
    long[] numArray = this.\u206B‌‏‮‮‭⁪‍⁪‭⁭⁪⁭​‎⁫​‌⁬‍‭‬⁬⁪‭​‫⁪⁬‌‎​⁬‌‍⁭‌‪‭‍‮(Math.Max(1, this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮()));
    numArray[0] ^= 1L;
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray);
  }

  private void \u206C⁫‏‍⁯⁪‎‬⁮⁪‮⁯‬⁬⁪⁯⁪‍⁯⁫⁪‎⁭‬‏‫​​​​​‬‬​⁫⁮‮⁮‭‏‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2,
    int _param3)
  {
    int num1 = (int) ((uint) (_param2 + 63) >> 6);
    int num2 = (int) ((uint) _param3 >> 6);
    int num3 = _param3 & 63;
    if (num3 == 0)
    {
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, num2, _param1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, num1);
    }
    else
    {
      long num4 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, num2, _param1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, num1, num3);
      if (num4 == 0L)
        return;
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[num1 + num2] ^= num4;
    }
  }

  private static long \u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    int num1 = 64 - _param5;
    long num2 = 0;
    for (int index = 0; index < _param4; ++index)
    {
      long num3 = _param2[_param3 + index];
      _param0[_param1 + index] ^= num3 << _param5 | num2;
      num2 = (long) ((ulong) num3 >> num1);
    }
    return num2;
  }

  private static long \u200E‍‪⁪‌⁭​⁬‌⁯‎⁮⁮‬‏⁬⁪‫‪‌⁬⁯‌‫‎‬‍​‭⁭​⁪‌‮‭‏‍‌‫⁯‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    int num1 = 64 - _param5;
    long num2 = 0;
    int num3 = _param4;
    while (--num3 >= 0)
    {
      long num4 = _param2[_param3 + num3];
      _param0[_param1 + num3] ^= (long) ((ulong) num4 >> _param5) | num2;
      num2 = num4 << num1;
    }
    return num2;
  }

  public void \u200D⁪⁫‮⁯⁬⁪‌⁮‎⁭‌‏‏‬‌‌⁬‪‮‭‭‬‫⁪‌‬‌​⁪‫‮‎‫‫⁮‬‍‎‬‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2)
  {
    int num1 = _param1.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (num1 == 0)
      return;
    int num2 = num1 + _param2;
    if (num2 > this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length)
      this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = this.\u206B‌‏‮‮‭⁪‍⁪‭⁭⁪⁭​‎⁫​‌⁬‍‭‬⁬⁪‭​‫⁪⁬‌‎​⁬‌‍⁭‌‪‭‍‮(num2);
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, _param2, _param1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, num1);
  }

  private static void \u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
      _param0[_param1 + index] ^= _param2[_param3 + index];
  }

  private static void \u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    long[] _param4,
    int _param5,
    int _param6)
  {
    for (int index = 0; index < _param6; ++index)
      _param4[_param5 + index] = _param0[_param1 + index] ^ _param2[_param3 + index];
  }

  private static void \u206D⁭‍⁬‫​‍⁬⁯‮⁯‍⁭⁭‫‍⁪⁮‌‎⁮‪⁫⁭​‪⁫‬‎‭‬⁯⁫⁪​⁯‭⁭‮‭‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    long[] _param4,
    int _param5,
    int _param6)
  {
    for (int index = 0; index < _param6; ++index)
      _param0[_param1 + index] ^= _param2[_param3 + index] ^ _param4[_param5 + index];
  }

  private static void \u200D​‮‌‮⁫‌‌‫‌‪‮‬⁫⁭‍⁯⁮‍‏⁮‏⁮⁭⁫‍‪⁬‎⁬‏‫‎‭‮‭⁭‎⁯‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
    {
      long num = _param0[_param1 + index];
      _param0[_param2 + index] ^= num;
      _param0[_param3 + index] ^= num;
    }
  }

  public int \u206F‌⁬‎‮‎⁮​‫​⁫⁯‍​⁫⁯​⁯‎⁭‮⁬‪‮‎‪​⁮‪‌​‬⁫‬​​‍‬‮‍‮ => this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length;

  private static void \u202D‍‏⁮‎⁯⁪⁯⁭‫‍⁮‭‪‎⁬‫⁭‏⁭⁭‪‌​⁪⁪‭⁯⁪⁫⁬⁪⁭‭‮‍‫⁭‌‮‮(
    long[] _param0,
    int _param1,
    int _param2,
    long _param3)
  {
    int index = _param1 + (int) ((uint) _param2 >> 6);
    int num1 = _param2 & 63;
    if (num1 == 0)
    {
      _param0[index] ^= _param3;
    }
    else
    {
      _param0[index] ^= _param3 << num1;
      _param3 = (long) ((ulong) _param3 >> 64 - num1);
      if (_param3 == 0L)
        return;
      int num2;
      _param0[num2 = index + 1] ^= _param3;
    }
  }

  public bool \u200F⁫‏⁪‪⁭‌⁯⁪‬‮‍‌‬‏⁫‪‏‪⁮⁭‍⁪‫‪‍‭⁯⁫⁮‍⁬‪‬‪‮‏⁫⁬‎‮() => this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮.Length != 0 && ((ulong) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0] & 1UL) > 0UL;

  private static bool \u202B‫‏‮‬⁫‌‬⁬⁯‪‬‏‬‎‏‭‪⁭⁬‬‫⁯​⁬‍‍​⁪⁮⁯‏⁮‎⁬​⁯‫‎‍‮(
    long[] _param0,
    int _param1,
    int _param2)
  {
    int num1 = (int) ((uint) _param2 >> 6);
    long num2 = 1L << _param2;
    return (_param0[_param1 + num1] & num2) != 0L;
  }

  private static void \u200E​‫⁪⁮‫​⁪‫⁬‫‌‮‎⁬⁮​‏​‮‮‍‭⁭‌‭⁭‮⁯‎‭‏‭⁭⁪‍‏‬‌⁫‮(
    long[] _param0,
    int _param1,
    int _param2)
  {
    int num1 = (int) ((uint) _param2 >> 6);
    long num2 = 1L << _param2;
    _param0[_param1 + num1] ^= num2;
  }

  private static void \u202D​‪‭​⁬‫⁯⁫‏‍‪⁬⁭‎‪‎‮⁪⁫⁭‌‍⁮‎‮‭‍‌⁫⁬‫⁯‬‌⁭⁭‌​⁭‮(
    long _param0,
    long[] _param1,
    int _param2,
    long[] _param3,
    int _param4)
  {
    if ((_param0 & 1L) != 0L)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(_param3, _param4, _param1, 0, _param2);
    int num1 = 1;
    while ((_param0 = (long) ((ulong) _param0 >> 1)) != 0L)
    {
      if ((_param0 & 1L) != 0L)
      {
        long num2 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(_param3, _param4, _param1, 0, _param2, num1);
        if (num2 != 0L)
          _param3[_param4 + _param2] ^= num2;
      }
      ++num1;
    }
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u206B‌⁮‫⁯‭⁪⁪‬‪⁬‪‭‪​‍‌⁪‪⁬⁬⁪⁬‫‏‫‪‏‫⁯‭‎⁫‌​⁫‮‭⁫⁪‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = this.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num1 == 0)
      return this;
    int num2 = _param1.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num2 == 0)
      return _param1;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj1 = this;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj2 = _param1;
    if (num1 > num2)
    {
      obj1 = _param1;
      obj2 = this;
      int num3 = num1;
      num1 = num2;
      num2 = num3;
    }
    int num4 = (int) ((uint) (num1 + 63) >> 6);
    int length1 = (int) ((uint) (num2 + 63) >> 6);
    int length2 = (int) ((uint) (num1 + num2 + 62) >> 6);
    if (num4 == 1)
    {
      long num5 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0];
      if (num5 == 1L)
        return obj2;
      long[] numArray = new long[length2];
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D​‪‭​⁬‫⁯⁫‏‍‪⁬⁭‎‪‎‮⁪⁫⁭‌‍⁮‎‮‭‍‌⁫⁬‫⁯‬‌⁭⁭‌​⁭‮(num5, obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, length1, numArray, 0);
      return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(numArray, 0, length2, _param2, _param3);
    }
    int num6 = (int) ((uint) (num2 + 7 + 63) >> 6);
    int[] numArray1 = new int[16];
    long[] destinationArray = new long[num6 << 4];
    int destinationIndex = num6;
    numArray1[1] = destinationIndex;
    Array.Copy((Array) obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, destinationIndex, length1);
    for (int index = 2; index < 16; ++index)
    {
      numArray1[index] = (destinationIndex += num6);
      if ((index & 1) == 0)
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, (int) ((uint) destinationIndex >> 1), destinationArray, destinationIndex, num6, 1);
      else
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(destinationArray, num6, destinationArray, destinationIndex - num6, destinationArray, destinationIndex, num6);
    }
    long[] numArray2 = new long[destinationArray.Length];
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, 0, numArray2, 0, destinationArray.Length, 4);
    long[] numArray3 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    long[] numArray4 = new long[length2];
    int num7 = 15;
    for (int index1 = 56; index1 >= 0; index1 -= 8)
    {
      for (int index2 = 1; index2 < num4; index2 += 2)
      {
        int num8 = (int) ((ulong) numArray3[index2] >> index1);
        int index3 = num8 & num7;
        int index4 = (int) ((uint) num8 >> 4) & num7;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D⁭‍⁬‫​‍⁬⁯‮⁯‍⁭⁭‫‍⁪⁮‌‎⁮‪⁫⁭​‪⁫‬‎‭‬⁯⁫⁪​⁯‭⁭‮‭‮(numArray4, index2 - 1, destinationArray, numArray1[index3], numArray2, numArray1[index4], num6);
      }
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(numArray4, 0, length2, 8);
    }
    for (int index5 = 56; index5 >= 0; index5 -= 8)
    {
      for (int index6 = 0; index6 < num4; index6 += 2)
      {
        int num9 = (int) ((ulong) numArray3[index6] >> index5);
        int index7 = num9 & num7;
        int index8 = (int) ((uint) num9 >> 4) & num7;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D⁭‍⁬‫​‍⁬⁯‮⁯‍⁭⁭‫‍⁪⁮‌‎⁮‪⁫⁭​‪⁫‬‎‭‬⁯⁫⁪​⁯‭⁭‮‭‮(numArray4, index6, destinationArray, numArray1[index7], numArray2, numArray1[index8], num6);
      }
      if (index5 > 0)
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(numArray4, 0, length2, 8);
    }
    return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(numArray4, 0, length2, _param2, _param3);
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u206D‍‏‮‎⁪‪​⁪‏‏‫⁮‍‬‎⁮⁯‫‏‬‍‭‌‎‫‮‍‫⁯‌⁪‮‭⁮⁫‌⁫⁭⁭‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = this.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num1 == 0)
      return this;
    int num2 = _param1.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num2 == 0)
      return _param1;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj1 = this;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj2 = _param1;
    if (num1 > num2)
    {
      obj1 = _param1;
      obj2 = this;
      int num3 = num1;
      num1 = num2;
      num2 = num3;
    }
    int num4 = (int) ((uint) (num1 + 63) >> 6);
    int length1 = (int) ((uint) (num2 + 63) >> 6);
    int length2 = (int) ((uint) (num1 + num2 + 62) >> 6);
    if (num4 == 1)
    {
      long num5 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0];
      if (num5 == 1L)
        return obj2;
      long[] numArray = new long[length2];
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D​‪‭​⁬‫⁯⁫‏‍‪⁬⁭‎‪‎‮⁪⁫⁭‌‍⁮‎‮‭‍‌⁫⁬‫⁯‬‌⁭⁭‌​⁭‮(num5, obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, length1, numArray, 0);
      return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(numArray, 0, length2, _param2, _param3);
    }
    int num6 = (int) ((uint) (num2 + 7 + 63) >> 6);
    int[] numArray1 = new int[16];
    long[] destinationArray = new long[num6 << 4];
    int destinationIndex = num6;
    numArray1[1] = destinationIndex;
    Array.Copy((Array) obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, destinationIndex, length1);
    for (int index = 2; index < 16; ++index)
    {
      numArray1[index] = (destinationIndex += num6);
      if ((index & 1) == 0)
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, (int) ((uint) destinationIndex >> 1), destinationArray, destinationIndex, num6, 1);
      else
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(destinationArray, num6, destinationArray, destinationIndex - num6, destinationArray, destinationIndex, num6);
    }
    long[] numArray2 = new long[destinationArray.Length];
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, 0, numArray2, 0, destinationArray.Length, 4);
    long[] numArray3 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    long[] numArray4 = new long[length2 << 3];
    int num7 = 15;
    for (int index1 = 0; index1 < num4; ++index1)
    {
      long num8 = numArray3[index1];
      int num9 = index1;
      while (true)
      {
        int index2 = (int) num8 & num7;
        long num10 = (long) ((ulong) num8 >> 4);
        int index3 = (int) num10 & num7;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D⁭‍⁬‫​‍⁬⁯‮⁯‍⁭⁭‫‍⁪⁮‌‎⁮‪⁫⁭​‪⁫‬‎‭‬⁯⁫⁪​⁯‭⁭‮‭‮(numArray4, num9, destinationArray, numArray1[index2], numArray2, numArray1[index3], num6);
        num8 = (long) ((ulong) num10 >> 4);
        if (num8 != 0L)
          num9 += length2;
        else
          break;
      }
    }
    int length3 = numArray4.Length;
    while ((length3 -= length2) != 0)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(numArray4, length3 - length2, numArray4, length3, length2, 8);
    return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(numArray4, 0, length2, _param2, _param3);
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200D⁯⁭‍​‪‬‮‌⁪⁯⁬⁭‫‮⁮⁪‫⁯⁭‌‌⁮​‌⁭⁫⁫‭​‮⁯‏‪⁯⁫‪⁫⁭‍‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = this.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num1 == 0)
      return this;
    int num2 = _param1.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num2 == 0)
      return _param1;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj1 = this;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj2 = _param1;
    if (num1 > num2)
    {
      obj1 = _param1;
      obj2 = this;
      int num3 = num1;
      num1 = num2;
      num2 = num3;
    }
    int num4 = (int) ((uint) (num1 + 63) >> 6);
    int length1 = (int) ((uint) (num2 + 63) >> 6);
    int length2 = (int) ((uint) (num1 + num2 + 62) >> 6);
    if (num4 == 1)
    {
      long num5 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0];
      if (num5 == 1L)
        return obj2;
      long[] numArray = new long[length2];
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D​‪‭​⁬‫⁯⁫‏‍‪⁬⁭‎‪‎‮⁪⁫⁭‌‍⁮‎‮‭‍‌⁫⁬‫⁯‬‌⁭⁭‌​⁭‮(num5, obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, length1, numArray, 0);
      return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(numArray, 0, length2, _param2, _param3);
    }
    int num6 = 4;
    int num7 = 16;
    int num8 = 64;
    int num9 = 8;
    int num10 = num8 < 64 ? num7 : num7 - 1;
    int num11 = (int) ((uint) (num2 + num10 + 63) >> 6);
    int num12 = num11 * num9;
    int num13 = num6 * num9;
    int[] numArray1 = new int[1 << num6];
    int num14 = num4;
    numArray1[0] = num14;
    int num15 = num14 + num12;
    numArray1[1] = num15;
    for (int index = 2; index < numArray1.Length; ++index)
    {
      num15 += length2;
      numArray1[index] = num15;
    }
    long[] destinationArray = new long[num15 + length2 + 1];
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B⁪‍​‎​⁮‮‍‮⁭‌‏‍‭‫‬⁮‫⁮⁯‫​‪⁭‮​​⁮‏‎‏‭⁫⁭⁪‍‬‭‮‮(obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, destinationArray, 0, num4, num6);
    int destinationIndex = num4;
    Array.Copy((Array) obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, destinationIndex, length1);
    for (int index = 1; index < num9; ++index)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, num4, destinationArray, destinationIndex += num11, num11, index);
    int num16 = (1 << num6) - 1;
    int num17 = 0;
    while (true)
    {
      int index1 = 0;
      do
      {
        long num18 = (long) ((ulong) destinationArray[index1] >> num17);
        int num19 = 0;
        int num20 = num4;
        while (true)
        {
          int index2 = (int) num18 & num16;
          if (index2 != 0)
            \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(destinationArray, index1 + numArray1[index2], destinationArray, num20, num11);
          if (++num19 != num9)
          {
            num20 += num11;
            num18 = (long) ((ulong) num18 >> num6);
          }
          else
            break;
        }
      }
      while (++index1 < num4);
      if ((num17 += num13) >= num8)
      {
        if (num17 < 64)
        {
          num17 = 64 - num6;
          num16 &= num16 << num8 - num17;
        }
        else
          break;
      }
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, num4, num12, num9);
    }
    int length3 = numArray1.Length;
    while (--length3 > 1)
    {
      if (((long) length3 & 1L) == 0L)
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(destinationArray, numArray1[(int) ((uint) length3 >> 1)], destinationArray, numArray1[length3], length2, num7);
      else
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200D​‮‌‮⁫‌‌‫‌‪‮‬⁫⁭‍⁯⁮‍‏⁮‏⁮⁭⁫‍‪⁬‎⁬‏‫‎‭‮‭⁭‎⁯‮(destinationArray, numArray1[length3], numArray1[length3 - 1], numArray1[1], length2);
    }
    return \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(destinationArray, numArray1[1], length2, _param2, _param3);
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u206B‬‭⁬‭⁫⁮⁬⁯⁮⁮‌‭‌‎‎⁬⁯‮‬‏‎‫‌⁯‮⁭​⁮‭‭‎​‮⁫‫‫⁮‪‮(
    int _param1,
    int[] _param2)
  {
    long[] numArray = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮);
    int num = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(numArray, 0, numArray.Length, _param1, _param2);
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray, 0, num);
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u202D⁫‪​‏‍⁯⁭⁪‪‭‭‏‭​​‭⁫‌‍⁮‬‮‬⁭⁬‪‎‪⁪⁪‌​‫⁫‫‍‏‍⁪‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = this.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num1 == 0)
      return this;
    int num2 = _param1.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    if (num2 == 0)
      return _param1;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj1 = this;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj2 = _param1;
    if (num1 > num2)
    {
      obj1 = _param1;
      obj2 = this;
      int num3 = num1;
      num1 = num2;
      num2 = num3;
    }
    int num4 = (int) ((uint) (num1 + 63) >> 6);
    int length1 = (int) ((uint) (num2 + 63) >> 6);
    int length2 = (int) ((uint) (num1 + num2 + 62) >> 6);
    if (num4 == 1)
    {
      long num5 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0];
      if (num5 == 1L)
        return obj2;
      long[] numArray = new long[length2];
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D​‪‭​⁬‫⁯⁫‏‍‪⁬⁭‎‪‎‮⁪⁫⁭‌‍⁮‎‮‭‍‌⁫⁬‫⁯‬‌⁭⁭‌​⁭‮(num5, obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, length1, numArray, 0);
      return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray, 0, length2);
    }
    int num6 = (int) ((uint) (num2 + 7 + 63) >> 6);
    int[] numArray1 = new int[16];
    long[] destinationArray = new long[num6 << 4];
    int destinationIndex = num6;
    numArray1[1] = destinationIndex;
    Array.Copy((Array) obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, destinationIndex, length1);
    for (int index = 2; index < 16; ++index)
    {
      numArray1[index] = (destinationIndex += num6);
      if ((index & 1) == 0)
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, (int) ((uint) destinationIndex >> 1), destinationArray, destinationIndex, num6, 1);
      else
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(destinationArray, num6, destinationArray, destinationIndex - num6, destinationArray, destinationIndex, num6);
    }
    long[] numArray2 = new long[destinationArray.Length];
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‪‌⁭⁯‌⁫‭⁬‎⁪‫‍⁯⁮‪⁭‭‫⁮‫⁪⁯⁫‬⁫​‮⁪‭‏‬‪⁫‮‍‎‪‏‫‮(destinationArray, 0, numArray2, 0, destinationArray.Length, 4);
    long[] numArray3 = obj1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    long[] numArray4 = new long[length2 << 3];
    int num7 = 15;
    for (int index1 = 0; index1 < num4; ++index1)
    {
      long num8 = numArray3[index1];
      int num9 = index1;
      while (true)
      {
        int index2 = (int) num8 & num7;
        long num10 = (long) ((ulong) num8 >> 4);
        int index3 = (int) num10 & num7;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D⁭‍⁬‫​‍⁬⁯‮⁯‍⁭⁭‫‍⁪⁮‌‎⁮‪⁫⁭​‪⁫‬‎‭‬⁯⁫⁪​⁯‭⁭‮‭‮(numArray4, num9, destinationArray, numArray1[index2], numArray2, numArray1[index3], num6);
        num8 = (long) ((ulong) num10 >> 4);
        if (num8 != 0L)
          num9 += length2;
        else
          break;
      }
    }
    int length3 = numArray4.Length;
    while ((length3 -= length2) != 0)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206D‎‏‭‎‪‭‭‏‎⁫⁬‮⁬‫‫‏‎‬​⁭‌⁫⁬‭⁯⁭⁪‍‮​‭⁮‌‭‮‎⁯⁪‪‮(numArray4, length3 - length2, numArray4, length3, length2, 8);
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray4, 0, length2);
  }

  public void \u200B⁭‭‌⁭‎‎​‏‪‮⁫⁯‫⁯⁮‫‪⁬‭‭‏​‏⁭‍⁫‮‍‮‍‍‌‭‎⁪⁬⁮⁬‌‮(int _param1, int[] _param2)
  {
    long[] sourceArray = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮;
    int length = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(sourceArray, 0, sourceArray.Length, _param1, _param2);
    if (length >= sourceArray.Length)
      return;
    this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮ = new long[length];
    Array.Copy((Array) sourceArray, 0, (Array) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, length);
  }

  private static \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200F⁭⁯‍​⁬​‭⁭⁭⁬‏‫⁮‭‌‮‌⁬⁪⁯​‫‍‮‭‌‫⁮‎‭⁫‌‮‫‭⁪⁭⁭⁭‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int[] _param4)
  {
    int num = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(_param0, _param1, _param2, _param3, _param4);
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(_param0, _param1, num);
  }

  private static int \u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int[] _param4)
  {
    int num1 = _param3 + 63 >> 6;
    if (_param2 < num1)
      return _param2;
    int num2 = Math.Min(_param2 << 6, (_param3 << 1) - 1);
    int num3;
    for (num3 = (_param2 << 6) - num2; num3 >= 64; num3 -= 64)
      --_param2;
    int length = _param4.Length;
    int num4 = _param4[length - 1];
    int num5 = length > 1 ? _param4[length - 2] : 0;
    int num6 = Math.Max(_param3, num4 + 64);
    int num7 = num3 + Math.Min(num2 - num6, _param3 - num5) >> 6;
    if (num7 > 1)
    {
      int num8 = _param2 - num7;
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200C⁯‮‮‮‫‮‬‎‏‭⁯⁫‏⁬‭‮⁮⁪‌⁬‏‫⁫‭⁭‏​⁬⁫⁬‪‭‎‪‪‫‌‫‫‮(_param0, _param1, _param2, num8, _param3, _param4);
      while (_param2 > num8)
        _param0[_param1 + --_param2] = 0L;
      num2 = num8 << 6;
    }
    if (num2 > num6)
    {
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202E⁯⁯⁭​‍⁬⁪⁭⁪⁭​‌‪⁪⁫⁫‌​‏‎‪‪​‎‪‏​‏⁮‪‌‎‎⁮‫‫‪⁮⁪‮(_param0, _param1, _param2, num6, _param3, _param4);
      num2 = num6;
    }
    if (num2 > _param3)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206B⁫​‮⁪‮⁫⁮⁫‌‭‪⁬‬⁪⁯⁬‎‪‬⁮‌⁫⁯‫‪⁬⁯‭‮‬‫‎⁯​⁭⁯‍⁮‬‮(_param0, _param1, num2, _param3, _param4);
    return num1;
  }

  private static void \u206B⁫​‮⁪‮⁫⁮⁫‌‭‪⁬‬⁪⁯⁬‎‪‬⁮‌⁫⁯‫‪⁬⁯‭‮‬‫‎⁯​⁭⁯‍⁮‬‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int[] _param4)
  {
    while (--_param2 >= _param3)
    {
      if (\u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202B‫‏‮‬⁫‌‬⁬⁯‪‬‏‬‎‏‭‪⁭⁬‬‫⁯​⁬‍‍​⁪⁮⁯‏⁮‎⁬​⁯‫‎‍‮(_param0, _param1, _param2))
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200C⁭‬‌‮⁪⁬⁪⁬⁮⁫‍⁯‍‭‌⁬‍⁭⁭‫‎‬​‌​⁯⁯⁬⁯⁬‪⁫⁮‍‎‮​‌‌‮(_param0, _param1, _param2, _param3, _param4);
    }
  }

  private static void \u200C⁭‬‌‮⁪⁬⁪⁬⁮⁫‍⁯‍‭‌⁬‍⁭⁭‫‎‬​‌​⁯⁯⁬⁯⁬‪⁫⁮‍‎‮​‌‌‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int[] _param4)
  {
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E​‫⁪⁮‫​⁪‫⁬‫‌‮‎⁬⁮​‏​‮‮‍‭⁭‌‭⁭‮⁯‎‭‏‭⁭⁪‍‏‬‌⁫‮(_param0, _param1, _param2);
    int num = _param2 - _param3;
    int length = _param4.Length;
    while (--length >= 0)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E​‫⁪⁮‫​⁪‫⁬‫‌‮‎⁬⁮​‏​‮‮‍‭⁭‌‭⁭‮⁯‎‭‏‭⁭⁪‍‏‬‌⁫‮(_param0, _param1, _param4[length] + num);
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E​‫⁪⁮‫​⁪‫⁬‫‌‮‎⁬⁮​‏​‮‮‍‭⁭‌‭⁭‮⁯‎‭‏‭⁭⁪‍‏‬‌⁫‮(_param0, _param1, num);
  }

  private static void \u202E⁯⁯⁭​‍⁬⁪⁭⁪⁭​‌‪⁪⁫⁫‌​‏‎‪‪​‎‪‏​‏⁮‪‌‎‎⁮‫‫‪⁮⁪‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int _param4,
    int[] _param5)
  {
    int num1 = (int) ((uint) _param3 >> 6);
    while (--_param2 > num1)
    {
      long num2 = _param0[_param1 + _param2];
      if (num2 != 0L)
      {
        _param0[_param1 + _param2] = 0L;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E‬‮‫‮⁬‌⁬⁪‍‭‮‪‬⁭⁭​​‌‌​⁮⁬‪‪​‭⁭⁮‬⁭⁬‌⁯‬‏⁬⁪⁬⁯‮(_param0, _param1, _param2 << 6, num2, _param4, _param5);
      }
    }
    int num3 = _param3 & 63;
    long num4 = (long) ((ulong) _param0[_param1 + num1] >> num3);
    if (num4 == 0L)
      return;
    _param0[_param1 + num1] ^= num4 << num3;
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E‬‮‫‮⁬‌⁬⁪‍‭‮‪‬⁭⁭​​‌‌​⁮⁬‪‪​‭⁭⁮‬⁭⁬‌⁯‬‏⁬⁪⁬⁯‮(_param0, _param1, _param3, num4, _param4, _param5);
  }

  private static void \u200E‬‮‫‮⁬‌⁬⁪‍‭‮‪‬⁭⁭​​‌‌​⁮⁬‪‪​‭⁭⁮‬⁭⁬‌⁯‬‏⁬⁪⁬⁯‮(
    long[] _param0,
    int _param1,
    int _param2,
    long _param3,
    int _param4,
    int[] _param5)
  {
    int num = _param2 - _param4;
    int length = _param5.Length;
    while (--length >= 0)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D‍‏⁮‎⁯⁪⁯⁭‫‍⁮‭‪‎⁬‫⁭‏⁭⁭‪‌​⁪⁪‭⁯⁪⁫⁬⁪⁭‭‮‍‫⁭‌‮‮(_param0, _param1, num + _param5[length], _param3);
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202D‍‏⁮‎⁯⁪⁯⁭‫‍⁮‭‪‎⁬‫⁭‏⁭⁭‪‌​⁪⁪‭⁯⁪⁫⁬⁪⁭‭‮‍‫⁭‌‮‮(_param0, _param1, num, _param3);
  }

  private static void \u200C⁯‮‮‮‫‮‬‎‏‭⁯⁫‏⁬‭‮⁮⁪‌⁬‏‫⁫‭⁭‏​⁬⁫⁬‪‭‎‪‪‫‌‫‫‮(
    long[] _param0,
    int _param1,
    int _param2,
    int _param3,
    int _param4,
    int[] _param5)
  {
    int num = (_param3 << 6) - _param4;
    int length = _param5.Length;
    while (--length >= 0)
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁫⁮⁯‫⁫‍‏‍⁭‬⁬⁯‪‮⁬⁮⁪‮​‎‏‭⁮‪⁯‬‎‍‎⁭‏‌​‍⁯‏‮‫‫‮(_param0, _param1, _param0, _param1 + _param3, _param2 - _param3, num + _param5[length]);
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁫⁮⁯‫⁫‍‏‍⁭‬⁬⁯‪‮⁬⁮⁪‮​‎‏‭⁮‪⁯‬‎‍‎⁭‏‌​‍⁯‏‮‫‫‮(_param0, _param1, _param0, _param1 + _param3, _param2 - _param3, num);
  }

  private static void \u200E⁫⁮⁯‫⁫‍‏‍⁭‬⁬⁯‪‮⁬⁮⁪‮​‎‏‭⁮‪⁯‬‎‍‎⁭‏‌​‍⁯‏‮‫‫‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    _param1 += (int) ((uint) _param5 >> 6);
    _param5 &= 63;
    if (_param5 == 0)
    {
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(_param0, _param1, _param2, _param3, _param4);
    }
    else
    {
      long num = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E‍‪⁪‌⁭​⁬‌⁯‎⁮⁮‬‏⁬⁪‫‪‌⁬⁯‌‫‎‬‍​‭⁭​⁪‌‮‭‏‍‌‫⁯‮(_param0, _param1 + 1, _param2, _param3, _param4, 64 - _param5);
      _param0[_param1] ^= num;
    }
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u202B⁫⁭‎​⁪​‎⁫‍‭‮⁭⁪‪‏​‏‎⁬⁯⁫⁯‍⁮‬⁭⁫‮⁫⁪‭‏‭‫‏⁯⁭‭‬‮(
    int _param1,
    int[] _param2)
  {
    int num1 = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (num1 == 0)
      return this;
    int length = num1 << 1;
    long[] numArray1 = new long[length];
    int num2 = 0;
    while (num2 < length)
    {
      long num3 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[(int) ((uint) num2 >> 1)];
      long[] numArray2 = numArray1;
      int index1 = num2;
      int num4 = index1 + 1;
      long num5 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) num3);
      numArray2[index1] = num5;
      long[] numArray3 = numArray1;
      int index2 = num4;
      num2 = index2 + 1;
      long num6 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) ((ulong) num3 >> 32));
      numArray3[index2] = num6;
    }
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray1, 0, \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(numArray1, 0, numArray1.Length, _param1, _param2));
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200F⁪⁮⁮‫‮⁭⁬⁫‏⁬‏‏‬‮⁮‮⁫‪‏‎⁫‭‬‭⁪⁮⁬‌‮‌‮‌​⁪‏⁪‫⁬‪‮(
    int _param1,
    int _param2,
    int[] _param3)
  {
    int length = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (length == 0)
      return this;
    long[] destinationArray = new long[_param2 + 63 >> 6 << 1];
    Array.Copy((Array) this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, (Array) destinationArray, 0, length);
    while (--_param1 >= 0)
    {
      \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F‮‪⁬‏‮⁮‌‮⁪‭⁪⁭⁫‎‫‪⁪⁭‪‫​‪‌⁬⁯‌‫‬‏‌‎‪‫‭‮⁫⁭‌‬‮(destinationArray, length, _param2, _param3);
      length = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁪‏⁭‮‪​⁪⁪‏‎‌⁯​‌‮‍⁫‍‎‫‌‬‭‍‎​‬‭⁫⁪‎‬⁫‪‬‌⁪​‪‮(destinationArray, 0, destinationArray.Length, _param2, _param3);
    }
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(destinationArray, 0, length);
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200E‎‪⁬‬‏‌⁪⁭‌⁯‮‎‍‬⁬‮⁭‭‏‫‫⁪⁫‪‍‭‫⁪‎‍⁫‫‎‍‏⁯‫‫‮‮(
    int _param1,
    int[] _param2)
  {
    int num1 = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (num1 == 0)
      return this;
    int length = num1 << 1;
    long[] numArray1 = new long[length];
    int num2 = 0;
    while (num2 < length)
    {
      long num3 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[(int) ((uint) num2 >> 1)];
      long[] numArray2 = numArray1;
      int index1 = num2;
      int num4 = index1 + 1;
      long num5 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) num3);
      numArray2[index1] = num5;
      long[] numArray3 = numArray1;
      int index2 = num4;
      num2 = index2 + 1;
      long num6 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) ((ulong) num3 >> 32));
      numArray3[index2] = num6;
    }
    return new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(numArray1, 0, numArray1.Length);
  }

  private static void \u200F‮‪⁬‏‮⁮‌‮⁪‭⁪⁭⁫‎‫‪⁪⁭‪‫​‪‌⁬⁯‌‫‬‏‌‎‪‫‭‮⁫⁭‌‬‮(
    long[] _param0,
    int _param1,
    int _param2,
    int[] _param3)
  {
    int num1 = _param1 << 1;
    while (--_param1 >= 0)
    {
      long num2 = _param0[_param1];
      int num3;
      _param0[num3 = num1 - 1] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) ((ulong) num2 >> 32));
      _param0[num1 = num3 - 1] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) num2);
    }
  }

  private static void \u200B⁪‍​‎​⁮‮‍‮⁭‌‏‍‭‫‬⁮‫⁮⁯‫​‪⁭‮​​⁮‏‎‏‭⁫⁭⁪‍‬‭‮‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    switch (_param5)
    {
      case 3:
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202B​⁯⁫‎‌⁮‫‬‍⁪‭‭⁬‎‮‎‎⁫‭‫‪‭‌​‮‫‏‍‫‏​⁫‫⁯⁪⁫‭⁯‪‮(_param0, _param1, _param2, _param3, _param4);
        break;
      case 5:
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202B⁪⁮⁫⁯​⁫‮‏‬‎‍‮⁭‮⁪⁬⁯⁬‏‍⁮​‎‏​⁬‏‪⁫‌‫‎‫​‭‌‮​‫‮(_param0, _param1, _param2, _param3, _param4);
        break;
      case 7:
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202C‮⁬‪‌‬⁫⁭⁫‬⁬‌‪‮⁯⁮​⁮‬‭‏‬‎​⁮‮‪⁮⁪‏‍⁭‮‌⁯‫​⁭⁭⁪‮(_param0, _param1, _param2, _param3, _param4);
        break;
      default:
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206F⁭‎⁮⁮⁫⁮‍⁬‬‪⁯⁭⁬‍⁮⁭‮‫⁭‏‬‎⁯​⁯‏‬‪⁬‪⁮⁮⁬‫‬‏‫⁫⁪‮(_param0, _param1, _param2, _param3, _param4, (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200E⁭‫‪‍​⁫⁭⁫⁮⁭⁪⁭‍⁯⁯⁫‌‏‮⁫‭‭⁫⁮⁯⁭‬⁫⁫‎‏⁮‭‍‪⁬‎‬‍‮[_param5] - 1);
        break;
    }
  }

  private static void \u202B​⁯⁫‎‌⁮‫‬‍⁪‭‭⁬‎‮‎‎⁫‭‫‪‭‌​‮‫‏‍‫‏​⁫‫⁯⁪⁫‭⁯‪‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
      _param2[_param3 + index] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202B​⁯⁫‎‌⁮‫‬‍⁪‭‭⁬‎‮‎‎⁫‭‫‪‭‌​‮‫‏‍‫‏​⁫‫⁯⁪⁫‭⁯‪‮(_param0[_param1 + index]);
  }

  private static long \u202B​⁯⁫‎‌⁮‫‬‍⁪‭‭⁬‎‮‎‎⁫‭‫‪‭‌​‮‫‏‍‫‏​⁫‫⁯⁪⁫‭⁯‪‮(long _param0) => _param0 & long.MinValue | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206C⁫‌⁮‍⁪‭‏‪‍‭‬​‍‪‭⁭‎‌‌⁭‮⁯‫⁪⁮⁪‮​‮⁭⁭‌‎⁮‍‭⁮‪⁭‮((int) _param0 & 2097151) | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206C⁫‌⁮‍⁪‭‏‪‍‭‬​‍‪‭⁭‎‌‌⁭‮⁯‫⁪⁮⁪‮​‮⁭⁭‌‎⁮‍‭⁮‪⁭‮((int) ((ulong) _param0 >> 21) & 2097151) << 1 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206C⁫‌⁮‍⁪‭‏‪‍‭‬​‍‪‭⁭‎‌‌⁭‮⁯‫⁪⁮⁪‮​‮⁭⁭‌‎⁮‍‭⁮‪⁭‮((int) ((ulong) _param0 >> 42) & 2097151) << 2;

  private static long \u206C⁫‌⁮‍⁪‭‏‪‍‭‬​‍‪‭⁭‎‌‌⁭‮⁯‫⁪⁮⁪‮​‮⁭⁭‌‎⁮‍‭⁮‪⁭‮(int _param0)
  {
    int num1 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202E‬⁫⁯‬⁮⁫⁯‏‌‍‏⁯⁫⁬⁪‪‭⁭⁬‫⁭⁬‏⁮‭​⁪⁮‍⁭‬⁬‏‏⁯⁫‌‏‮‮[_param0 & (int) sbyte.MaxValue];
    int num2 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202E‬⁫⁯‬⁮⁫⁯‏‌‍‏⁯⁫⁬⁪‪‭⁭⁬‫⁭⁬‏⁮‭​⁪⁮‍⁭‬⁬‏‏⁯⁫‌‏‮‮[(int) ((uint) _param0 >> 7) & (int) sbyte.MaxValue];
    return ((long) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202E‬⁫⁯‬⁮⁫⁯‏‌‍‏⁯⁫⁬⁪‪‭⁭⁬‫⁭⁬‏⁮‭​⁪⁮‍⁭‬⁬‏‏⁯⁫‌‏‮‮[(int) ((uint) _param0 >> 14)] & (long) uint.MaxValue) << 42 | ((long) num2 & (long) uint.MaxValue) << 21 | (long) num1 & (long) uint.MaxValue;
  }

  private static void \u202B⁪⁮⁫⁯​⁫‮‏‬‎‍‮⁭‮⁪⁬⁯⁬‏‍⁮​‎‏​⁬‏‪⁫‌‫‎‫​‭‌‮​‫‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
      _param2[_param3 + index] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202B⁪⁮⁫⁯​⁫‮‏‬‎‍‮⁭‮⁪⁬⁯⁬‏‍⁮​‎‏​⁬‏‪⁫‌‫‎‫​‭‌‮​‫‮(_param0[_param1 + index]);
  }

  private static long \u202B⁪⁮⁫⁯​⁫‮‏‬‎‍‮⁭‮⁪⁬⁯⁬‏‍⁮​‎‏​⁬‏‪⁫‌‫‎‫​‭‌‮​‫‮(long _param0) => \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮((int) _param0 & 8191) | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮((int) ((ulong) _param0 >> 13) & 8191) << 1 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮((int) ((ulong) _param0 >> 26) & 8191) << 2 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮((int) ((ulong) _param0 >> 39) & 8191) << 3 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮((int) ((ulong) _param0 >> 52) & 8191) << 4;

  private static long \u206A⁫‫⁫⁭⁯⁭‭‪⁬‬‌⁬⁬⁫‬⁫‏‪‎‍⁭⁯⁮‍‭⁭⁪⁬⁯‌‏‎‏⁮⁬‏‎⁫‎‮(int _param0)
  {
    int num = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B⁮‍‪‬‏‬⁯‍‫⁭‍‏‍‎⁬⁫‭⁬‎⁮‬⁬⁭​‪‫⁭‬⁭‫⁮‮‏⁬⁭‮​‮‌‮[_param0 & (int) sbyte.MaxValue];
    return ((long) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B⁮‍‪‬‏‬⁯‍‫⁭‍‏‍‎⁬⁫‭⁬‎⁮‬⁬⁭​‪‫⁭‬⁭‫⁮‮‏⁬⁭‮​‮‌‮[(int) ((uint) _param0 >> 7)] & (long) uint.MaxValue) << 35 | (long) num & (long) uint.MaxValue;
  }

  private static void \u202C‮⁬‪‌‬⁫⁭⁫‬⁬‌‪‮⁯⁮​⁮‬‭‏‬‎​⁮‮‪⁮⁪‏‍⁭‮‌⁯‫​⁭⁭⁪‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4)
  {
    for (int index = 0; index < _param4; ++index)
      _param2[_param3 + index] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202C‮⁬‪‌‬⁫⁭⁫‬⁬‌‪‮⁯⁮​⁮‬‭‏‬‎​⁮‮‪⁮⁪‏‍⁭‮‌⁯‫​⁭⁭⁪‮(_param0[_param1 + index]);
  }

  private static long \u202C‮⁬‪‌‬⁫⁭⁫‬⁬‌‪‮⁯⁮​⁮‬‭‏‬‎​⁮‮‪⁮⁪‏‍⁭‮‌⁯‫​⁭⁭⁪‮(long _param0) => _param0 & long.MinValue | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) _param0 & 511] | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 9) & 511] << 1 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 18) & 511] << 2 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 27) & 511] << 3 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 36) & 511] << 4 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 45) & 511] << 5 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202A‮⁬⁭‮‬⁮⁭‫‫⁪‮‪‫⁬‬‮‭​‏‎⁫‪‍​‍‎‌‬‏⁭⁪⁪⁭‌⁮⁮‏‍⁫‮[(int) ((ulong) _param0 >> 54) & 511] << 6;

  private static void \u206F⁭‎⁮⁮⁫⁮‍⁬‬‪⁯⁭⁬‍⁮⁭‮‫⁭‏‬‎⁯​⁯‏‬‪⁬‪⁮⁮⁬‫‬‏‫⁫⁪‮(
    long[] _param0,
    int _param1,
    long[] _param2,
    int _param3,
    int _param4,
    int _param5)
  {
    for (int index = 0; index < _param4; ++index)
      _param2[_param3 + index] = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206F⁭‎⁮⁮⁫⁮‍⁬‬‪⁯⁭⁬‍⁮⁭‮‫⁭‏‬‎⁯​⁯‏‬‪⁬‪⁮⁮⁬‫‬‏‫⁫⁪‮(_param0[_param1 + index], _param5);
  }

  private static long \u206F⁭‎⁮⁮⁫⁮‍⁬‬‪⁯⁭⁬‍⁮⁭‮‫⁭‏‬‎⁯​⁯‏‬‪⁬‪⁮⁮⁬‫‬‏‫⁫⁪‮(long _param0, int _param1)
  {
    while (_param1 > 1)
    {
      _param1 -= 2;
      _param0 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‫⁪⁬‬⁮‍​‌‫‭‏⁭‎‌‫‬‍‬⁯‌‎‍‬⁫‌⁭⁯‌‬‮‍‍‭‮⁪​‭‭⁫‮((int) _param0 & (int) ushort.MaxValue) | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‫⁪⁬‬⁮‍​‌‫‭‏⁭‎‌‫‬‍‬⁯‌‎‍‬⁫‌⁭⁯‌‬‮‍‍‭‮⁪​‭‭⁫‮((int) ((ulong) _param0 >> 16) & (int) ushort.MaxValue) << 1 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‫⁪⁬‬⁮‍​‌‫‭‏⁭‎‌‫‬‍‬⁯‌‎‍‬⁫‌⁭⁯‌‬‮‍‍‭‮⁪​‭‭⁫‮((int) ((ulong) _param0 >> 32) & (int) ushort.MaxValue) << 2 | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200B‫⁪⁬‬⁮‍​‌‫‭‏⁭‎‌‫‬‍‬⁯‌‎‍‬⁫‌⁭⁯‌‬‮‍‍‭‮⁪​‭‭⁫‮((int) ((ulong) _param0 >> 48) & (int) ushort.MaxValue) << 3;
    }
    if (_param1 > 0)
      _param0 = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) _param0) | \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮((int) ((ulong) _param0 >> 32)) << 1;
    return _param0;
  }

  private static long \u200B‫⁪⁬‬⁮‍​‌‫‭‏⁭‎‌‫‬‍‬⁯‌‎‍‬⁫‌⁭⁯‌‬‮‍‍‭‮⁪​‭‭⁫‮(int _param0)
  {
    int num = \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202C‍‍‎⁯‌⁭‬⁯⁭​‮‪‌‪‎‬⁬‪‭‮⁫‭​‏‮‎⁯‪‍‪⁭‮⁯⁮⁭‎⁫‪⁯‮[_param0 & (int) byte.MaxValue];
    return ((long) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u202C‍‍‎⁯‌⁭‬⁯⁭​‮‪‌‪‎‬⁬‪‭‮⁫‭​‏‮‎⁯‪‍‪⁭‮⁯⁮⁭‎⁫‪⁯‮[(int) ((uint) _param0 >> 8)] & (long) uint.MaxValue) << 32 | (long) num & (long) uint.MaxValue;
  }

  private static long \u206E‏⁪‭‏‭‫⁮⁫‬‭⁭‪‭⁫‬⁬‫‮⁪‫‎‪‍⁫⁬⁯‬⁭‬⁮‭‫⁮‫‌⁭‮‭⁭‮(int _param0)
  {
    int num = (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F‏⁭⁫⁮‍‮⁪⁬‭​⁬‭⁬‬⁭‌‌‭‮⁫‎‏⁪‪⁯‌‫‏‪‪‎⁮‏​‏⁯⁮⁬⁭‮[_param0 & (int) byte.MaxValue] | (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F‏⁭⁫⁮‍‮⁪⁬‭​⁬‭⁬‬⁭‌‌‭‮⁫‎‏⁪‪⁯‌‫‏‪‪‎⁮‏​‏⁯⁮⁬⁭‮[(int) ((uint) _param0 >> 8) & (int) byte.MaxValue] << 16;
    return ((long) ((int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F‏⁭⁫⁮‍‮⁪⁬‭​⁬‭⁬‬⁭‌‌‭‮⁫‎‏⁪‪⁯‌‫‏‪‪‎⁮‏​‏⁯⁮⁬⁭‮[(int) ((uint) _param0 >> 16) & (int) byte.MaxValue] | (int) \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200F‏⁭⁫⁮‍‮⁪⁬‭​⁬‭⁬‬⁭‌‌‭‮⁫‎‏⁪‪⁯‌‫‏‪‪‎⁮‏​‏⁯⁮⁬⁭‮[(int) ((uint) _param0 >> 24)] << 16) & (long) uint.MaxValue) << 32 | (long) num & (long) uint.MaxValue;
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u200B⁫‮‍‬‎​‏‪‏​‏‫⁪⁫⁯‍‬⁯⁪‎‪​⁬‫‌‍‌‪⁭‭‪‫‫‪‮⁬‬‍‪‮(
    int _param1,
    int[] _param2)
  {
    int num1 = this.\u200B‬‫⁫‌⁮‍⁭‌⁭⁯⁮‍​‎​‬‪‭⁪‏‮⁫‎⁮‎‮⁭⁫⁯‬‏​⁮‎‪‏‬‮‪‮();
    switch (num1)
    {
      case 0:
        throw new InvalidOperationException();
      case 1:
        return this;
      default:
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj1 = this.\u202B⁬‭‬‭‭‫⁭‮⁯‪‭‪⁯⁬‭‎‎‬​‌⁭‫​⁭‭‫‮‫‬‪‌‎‌‮‬‍⁬‍⁫‮();
        int num2 = _param1 + 63 >> 6;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj2 = new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(num2);
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮.\u200C⁭‬‌‮⁪⁬⁪⁬⁮⁫‍⁯‍‭‌⁬‍⁭⁭‫‎‬​‌​⁯⁯⁬⁯⁬‪⁫⁮‍‎‮​‌‌‮(obj2.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮, 0, _param1, _param1, _param2);
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj3 = new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(num2);
        obj3.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[0] = 1L;
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ obj4 = new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(num2);
        int[] numArray1 = new int[2]{ num1, _param1 + 1 };
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮[] objArray1 = new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮[2]
        {
          obj1,
          obj2
        };
        int[] numArray2 = new int[2]{ 1, 0 };
        \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮[] objArray2 = new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮[2]
        {
          obj3,
          obj4
        };
        int index = 1;
        int num3 = numArray1[index];
        int num4 = numArray2[index];
        int num5 = num3 - numArray1[1 - index];
        while (true)
        {
          if (num5 < 0)
          {
            num5 = -num5;
            numArray1[index] = num3;
            numArray2[index] = num4;
            index = 1 - index;
            num3 = numArray1[index];
            num4 = numArray2[index];
          }
          objArray1[index].\u206C⁫‏‍⁯⁪‎‬⁮⁪‮⁯‬⁬⁪⁯⁪‍⁯⁫⁪‎⁭‬‏‫​​​​​‬‬​⁫⁮‮⁮‭‏‮(objArray1[1 - index], numArray1[1 - index], num5);
          int num6 = objArray1[index].\u200D‮‏⁪‏​‮‭‬⁪‍​‬​‪‏⁮‌‪⁪‮⁬‪⁬⁯⁭‮‭⁮⁫⁯⁮‭⁮⁭‍⁪​‎⁬‮(num3);
          if (num6 != 0)
          {
            int num7 = numArray2[1 - index];
            objArray2[index].\u206C⁫‏‍⁯⁪‎‬⁮⁪‮⁯‬⁬⁪⁯⁪‍⁯⁫⁪‎⁭‬‏‫​​​​​‬‬​⁫⁮‮⁮‭‏‮(objArray2[1 - index], num7, num5);
            int num8 = num7 + num5;
            if (num8 > num4)
              num4 = num8;
            else if (num8 == num4)
              num4 = objArray2[index].\u200D‮‏⁪‏​‮‭‬⁪‍​‬​‪‏⁮‌‪⁪‮⁬‪⁬⁯⁭‮‭⁮⁫⁯⁮‭⁮⁭‍⁪​‎⁬‮(num4);
            num5 += num6 - num3;
            num3 = num6;
          }
          else
            break;
        }
        return objArray2[1 - index];
    }
  }

  bool object.\u200F​⁮‫⁭‌‬‭‬‎‭‍‍‌‭⁮‫‪‫‬⁬‮‬‬‏‮‫⁬‏​⁮⁮‍​⁬⁮⁬‍‪‌‮(object _param1) => this.\u200F​⁮‫⁭‌‬‭‬‎‭‍‍‌‭⁮‫‪‫‬⁬‮‬‬‏‮‫⁬‏​⁮⁮‍​⁬⁮⁬‍‪‌‮(_param1 as \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮);

  public virtual bool \u200F​⁮‫⁭‌‬‭‬‎‭‍‍‌‭⁮‫‪‫‬⁬‮‬‬‏‮‫⁬‏​⁮⁮‍​⁬⁮⁬‍‪‌‮(
    \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ _param1)
  {
    if (this == _param1)
      return true;
    if (_param1 == null)
      return false;
    int num = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (_param1.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮() != num)
      return false;
    for (int index = 0; index < num; ++index)
    {
      if (this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index] != _param1.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index])
        return false;
    }
    return true;
  }

  int object.\u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮()
  {
    int num1 = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    int num2 = 1;
    for (int index = 0; index < num1; ++index)
    {
      long num3 = this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index];
      num2 = (num2 * 31 ^ (int) num3) * 31 ^ (int) ((ulong) num3 >> 32);
    }
    return num2;
  }

  public \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮ \u202B⁬‭‬‭‭‫⁭‮⁯‪‭‪⁯⁬‭‎‎‬​‌⁭‫​⁭‭‫‮‫‬‪‌‎‌‮‬‍⁬‍⁫‮() => new \u200F‌‌⁬‪‭‎⁪⁯‫‎⁭‫⁭‏‭‪‌​⁫‎‭⁪​‫‎‫‍‫⁯⁬⁮‬‎‪⁫‬⁪‏‌‮(\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮));

  string object.\u206E​‎​‭‍‌‌⁮⁪⁫​‎‭‪⁯‬‎⁫⁫‪‪⁫⁯‪⁫‪​​‪‏​​​⁬‌‭‎⁪‮()
  {
    int num = this.\u206C‮‬‬⁮​⁬‎⁫‭⁫​‭‮‭‬‫‫‏⁯‭‫⁬⁯‬‫‫‮⁯⁮‍‫⁪‮‬⁪⁬‬‏‪‮();
    if (num == 0)
      return "0";
    int index;
    StringBuilder stringBuilder = new StringBuilder(Convert.ToString(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index = num - 1], 2));
    while (--index >= 0)
    {
      string str = Convert.ToString(this.\u206C‌‪⁬⁮‫‬‏‭​‍​‮⁯⁫⁬‫‭⁪‭‏​‫‬⁬‮⁭‪‍‌‍‏‭‍‌‫‭‬‭‎‮[index], 2);
      int length = str.Length;
      if (length < 64)
        stringBuilder.Append("0000000000000000000000000000000000000000000000000000000000000000".Substring(length));
      stringBuilder.Append(str);
    }
    return stringBuilder.ToString();
  }
}
