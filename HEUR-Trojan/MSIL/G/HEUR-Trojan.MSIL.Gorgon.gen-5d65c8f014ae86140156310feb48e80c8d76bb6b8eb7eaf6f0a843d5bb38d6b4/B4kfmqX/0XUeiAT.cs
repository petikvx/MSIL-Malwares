// Decompiled with JetBrains decompiler
// Type: B4kfmqX.0XUeiAT
// Assembly: rIHK739, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: DCC06416-0005-44FB-A994-2D27682899C4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-5d65c8f014ae86140156310feb48e80c8d76bb6b8eb7eaf6f0a843d5bb38d6b4.exe

using FGSORDf;
using Newtonsoft.Json;
using System;
using System.Linq;
using System.Reflection;

namespace B4kfmqX
{
  public abstract class \u0030XUeiAT : JsonConverter
  {
    public string CQUQury { get; protected set; }

    public static Type \u0031zfpZMb(Type YallppK, string cJp4WGh)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u0030XUeiAT.OtlGtmG otlGtmG = (\u0030XUeiAT.OtlGtmG) new M2AxVoZ.\u0031kdsrXq();
      // ISSUE: reference to a compiler-generated field
      ((M2AxVoZ.\u0031kdsrXq) otlGtmG).CQIyZDG = YallppK;
      // ISSUE: reference to a compiler-generated field
      if (((M2AxVoZ.\u0031kdsrXq) otlGtmG).CQIyZDG == (Type) null)
        throw new ArgumentNullException("baseType");
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated method
      foreach (TypeInfo element in ((M2AxVoZ.\u0031kdsrXq) otlGtmG).CQIyZDG.GetTypeInfo().Assembly.DefinedTypes.Where<TypeInfo>(otlGtmG.MYPP6vQ ?? (otlGtmG.MYPP6vQ = new Func<TypeInfo, bool>(otlGtmG.CJ3U702))))
      {
        string str = element.Name;
        if (element.GetCustomAttributes<JsonObjectAttribute>().Any<JsonObjectAttribute>())
        {
          string id = ((JsonContainerAttribute) element.GetCustomAttribute<JsonObjectAttribute>())?.Id;
          // ISSUE: reference to a compiler-generated field
          str = string.IsNullOrEmpty(id) || id == ((JsonContainerAttribute) ((M2AxVoZ.\u0031kdsrXq) otlGtmG).CQIyZDG.GetTypeInfo().GetCustomAttribute<JsonObjectAttribute>())?.Id ? element.Name : id;
        }
        if (str != null && str.Equals(cJp4WGh, StringComparison.OrdinalIgnoreCase))
          return element.AsType();
      }
      return (Type) null;
    }
  }
}
