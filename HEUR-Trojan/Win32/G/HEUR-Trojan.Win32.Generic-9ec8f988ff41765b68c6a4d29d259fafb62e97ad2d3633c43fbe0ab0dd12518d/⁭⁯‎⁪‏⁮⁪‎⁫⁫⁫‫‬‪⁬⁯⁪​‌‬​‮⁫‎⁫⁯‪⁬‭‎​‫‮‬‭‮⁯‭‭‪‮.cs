// Decompiled with JetBrains decompiler
// Type: ⁭⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮ : 
  \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮
{
  private ulong[] \u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮;
  private ulong[] \u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮;
  private ulong[][] \u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮;
  private int \u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮;
  private int \u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮;
  private const int \u206F⁫⁫⁬‬‫⁯‫⁪⁮⁬‎‭⁯‏‫‫⁮‎‫⁯‌‏⁪‭⁫‪⁪​‭⁫⁪⁫‮⁭⁭⁯⁬⁫⁮‮ = 10;
  private const int \u200E‭​‌⁪‎⁯⁪⁯‎​‬‮‮⁯‪⁭⁬​⁮⁬‌‭⁫⁭​⁮⁭⁫⁮‬‬‬‬⁪‌‫‭⁯‍‮ = 14;
  private const int \u200B⁬⁫⁮⁫‪⁪‭‬⁭‫⁬‍‮‪‌⁪⁯​‪‍​⁪‭‌⁬‪⁬​⁭‌⁮‏‏⁮⁫⁬‍⁭‍‮ = 18;
  private int \u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private const ulong \u206A‍‮⁫‏‪‍‪⁫⁬⁬‫⁯‌‮‮⁪⁬‌⁫⁫‪‎‬‮⁮⁭‬⁮‌‫‪⁪​‎⁪⁪‬‍‍‮ = 290207332435296513;
  private const ulong \u200C‎‬‍‌⁮‬‬‎‎‌‬‏‌⁮‪‫‍⁯‮‌‌‫‬​⁬⁬⁬‍‌⁮⁫⁫⁯⁮⁯‏‪‬‏‮ = 14616231584692868525;
  private static readonly byte[] \u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮ = new byte[256]
  {
    (byte) 168,
    (byte) 67,
    (byte) 95,
    (byte) 6,
    (byte) 107,
    (byte) 117,
    (byte) 108,
    (byte) 89,
    (byte) 113,
    (byte) 223,
    (byte) 135,
    (byte) 149,
    (byte) 23,
    (byte) 240,
    (byte) 216,
    (byte) 9,
    (byte) 109,
    (byte) 243,
    (byte) 29,
    (byte) 203,
    (byte) 201,
    (byte) 77,
    (byte) 44,
    (byte) 175,
    (byte) 121,
    (byte) 224,
    (byte) 151,
    (byte) 253,
    (byte) 111,
    (byte) 75,
    (byte) 69,
    (byte) 57,
    (byte) 62,
    (byte) 221,
    (byte) 163,
    (byte) 79,
    (byte) 180,
    (byte) 182,
    (byte) 154,
    (byte) 14,
    (byte) 31,
    (byte) 191,
    (byte) 21,
    (byte) 225,
    (byte) 73,
    (byte) 210,
    (byte) 147,
    (byte) 198,
    (byte) 146,
    (byte) 114,
    (byte) 158,
    (byte) 97,
    (byte) 209,
    (byte) 99,
    (byte) 250,
    (byte) 238,
    (byte) 244,
    (byte) 25,
    (byte) 213,
    (byte) 173,
    (byte) 88,
    (byte) 164,
    (byte) 187,
    (byte) 161,
    (byte) 220,
    (byte) 242,
    (byte) 131,
    (byte) 55,
    (byte) 66,
    (byte) 228,
    (byte) 122,
    (byte) 50,
    (byte) 156,
    (byte) 204,
    (byte) 171,
    (byte) 74,
    (byte) 143,
    (byte) 110,
    (byte) 4,
    (byte) 39,
    (byte) 46,
    (byte) 231,
    (byte) 226,
    (byte) 90,
    (byte) 150,
    (byte) 22,
    (byte) 35,
    (byte) 43,
    (byte) 194,
    (byte) 101,
    (byte) 102,
    (byte) 15,
    (byte) 188,
    (byte) 169,
    (byte) 71,
    (byte) 65,
    (byte) 52,
    (byte) 72,
    (byte) 252,
    (byte) 183,
    (byte) 106,
    (byte) 136,
    (byte) 165,
    (byte) 83,
    (byte) 134,
    (byte) 249,
    (byte) 91,
    (byte) 219,
    (byte) 56,
    (byte) 123,
    (byte) 195,
    (byte) 30,
    (byte) 34,
    (byte) 51,
    (byte) 36,
    (byte) 40,
    (byte) 54,
    (byte) 199,
    (byte) 178,
    (byte) 59,
    (byte) 142,
    (byte) 119,
    (byte) 186,
    (byte) 245,
    (byte) 20,
    (byte) 159,
    (byte) 8,
    (byte) 85,
    (byte) 155,
    (byte) 76,
    (byte) 254,
    (byte) 96,
    (byte) 92,
    (byte) 218,
    (byte) 24,
    (byte) 70,
    (byte) 205,
    (byte) 125,
    (byte) 33,
    (byte) 176,
    (byte) 63,
    (byte) 27,
    (byte) 137,
    byte.MaxValue,
    (byte) 235,
    (byte) 132,
    (byte) 105,
    (byte) 58,
    (byte) 157,
    (byte) 215,
    (byte) 211,
    (byte) 112,
    (byte) 103,
    (byte) 64,
    (byte) 181,
    (byte) 222,
    (byte) 93,
    (byte) 48,
    (byte) 145,
    (byte) 177,
    (byte) 120,
    (byte) 17,
    (byte) 1,
    (byte) 229,
    (byte) 0,
    (byte) 104,
    (byte) 152,
    (byte) 160,
    (byte) 197,
    (byte) 2,
    (byte) 166,
    (byte) 116,
    (byte) 45,
    (byte) 11,
    (byte) 162,
    (byte) 118,
    (byte) 179,
    (byte) 190,
    (byte) 206,
    (byte) 189,
    (byte) 174,
    (byte) 233,
    (byte) 138,
    (byte) 49,
    (byte) 28,
    (byte) 236,
    (byte) 241,
    (byte) 153,
    (byte) 148,
    (byte) 170,
    (byte) 246,
    (byte) 38,
    (byte) 47,
    (byte) 239,
    (byte) 232,
    (byte) 140,
    (byte) 53,
    (byte) 3,
    (byte) 212,
    (byte) 127,
    (byte) 251,
    (byte) 5,
    (byte) 193,
    (byte) 94,
    (byte) 144,
    (byte) 32,
    (byte) 61,
    (byte) 130,
    (byte) 247,
    (byte) 234,
    (byte) 10,
    (byte) 13,
    (byte) 126,
    (byte) 248,
    (byte) 80,
    (byte) 26,
    (byte) 196,
    (byte) 7,
    (byte) 87,
    (byte) 184,
    (byte) 60,
    (byte) 98,
    (byte) 227,
    (byte) 200,
    (byte) 172,
    (byte) 82,
    (byte) 100,
    (byte) 16,
    (byte) 208,
    (byte) 217,
    (byte) 19,
    (byte) 12,
    (byte) 18,
    (byte) 41,
    (byte) 81,
    (byte) 185,
    (byte) 207,
    (byte) 214,
    (byte) 115,
    (byte) 141,
    (byte) 129,
    (byte) 84,
    (byte) 192,
    (byte) 237,
    (byte) 78,
    (byte) 68,
    (byte) 167,
    (byte) 42,
    (byte) 133,
    (byte) 37,
    (byte) 230,
    (byte) 202,
    (byte) 124,
    (byte) 139,
    (byte) 86,
    (byte) 128
  };
  private static readonly byte[] \u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮ = new byte[256]
  {
    (byte) 206,
    (byte) 187,
    (byte) 235,
    (byte) 146,
    (byte) 234,
    (byte) 203,
    (byte) 19,
    (byte) 193,
    (byte) 233,
    (byte) 58,
    (byte) 214,
    (byte) 178,
    (byte) 210,
    (byte) 144,
    (byte) 23,
    (byte) 248,
    (byte) 66,
    (byte) 21,
    (byte) 86,
    (byte) 180,
    (byte) 101,
    (byte) 28,
    (byte) 136,
    (byte) 67,
    (byte) 197,
    (byte) 92,
    (byte) 54,
    (byte) 186,
    (byte) 245,
    (byte) 87,
    (byte) 103,
    (byte) 141,
    (byte) 49,
    (byte) 246,
    (byte) 100,
    (byte) 88,
    (byte) 158,
    (byte) 244,
    (byte) 34,
    (byte) 170,
    (byte) 117,
    (byte) 15,
    (byte) 2,
    (byte) 177,
    (byte) 223,
    (byte) 109,
    (byte) 115,
    (byte) 77,
    (byte) 124,
    (byte) 38,
    (byte) 46,
    (byte) 247,
    (byte) 8,
    (byte) 93,
    (byte) 68,
    (byte) 62,
    (byte) 159,
    (byte) 20,
    (byte) 200,
    (byte) 174,
    (byte) 84,
    (byte) 16,
    (byte) 216,
    (byte) 188,
    (byte) 26,
    (byte) 107,
    (byte) 105,
    (byte) 243,
    (byte) 189,
    (byte) 51,
    (byte) 171,
    (byte) 250,
    (byte) 209,
    (byte) 155,
    (byte) 104,
    (byte) 78,
    (byte) 22,
    (byte) 149,
    (byte) 145,
    (byte) 238,
    (byte) 76,
    (byte) 99,
    (byte) 142,
    (byte) 91,
    (byte) 204,
    (byte) 60,
    (byte) 25,
    (byte) 161,
    (byte) 129,
    (byte) 73,
    (byte) 123,
    (byte) 217,
    (byte) 111,
    (byte) 55,
    (byte) 96,
    (byte) 202,
    (byte) 231,
    (byte) 43,
    (byte) 72,
    (byte) 253,
    (byte) 150,
    (byte) 69,
    (byte) 252,
    (byte) 65,
    (byte) 18,
    (byte) 13,
    (byte) 121,
    (byte) 229,
    (byte) 137,
    (byte) 140,
    (byte) 227,
    (byte) 32,
    (byte) 48,
    (byte) 220,
    (byte) 183,
    (byte) 108,
    (byte) 74,
    (byte) 181,
    (byte) 63,
    (byte) 151,
    (byte) 212,
    (byte) 98,
    (byte) 45,
    (byte) 6,
    (byte) 164,
    (byte) 165,
    (byte) 131,
    (byte) 95,
    (byte) 42,
    (byte) 218,
    (byte) 201,
    (byte) 0,
    (byte) 126,
    (byte) 162,
    (byte) 85,
    (byte) 191,
    (byte) 17,
    (byte) 213,
    (byte) 156,
    (byte) 207,
    (byte) 14,
    (byte) 10,
    (byte) 61,
    (byte) 81,
    (byte) 125,
    (byte) 147,
    (byte) 27,
    (byte) 254,
    (byte) 196,
    (byte) 71,
    (byte) 9,
    (byte) 134,
    (byte) 11,
    (byte) 143,
    (byte) 157,
    (byte) 106,
    (byte) 7,
    (byte) 185,
    (byte) 176,
    (byte) 152,
    (byte) 24,
    (byte) 50,
    (byte) 113,
    (byte) 75,
    (byte) 239,
    (byte) 59,
    (byte) 112,
    (byte) 160,
    (byte) 228,
    (byte) 64,
    byte.MaxValue,
    (byte) 195,
    (byte) 169,
    (byte) 230,
    (byte) 120,
    (byte) 249,
    (byte) 139,
    (byte) 70,
    (byte) 128,
    (byte) 30,
    (byte) 56,
    (byte) 225,
    (byte) 184,
    (byte) 168,
    (byte) 224,
    (byte) 12,
    (byte) 35,
    (byte) 118,
    (byte) 29,
    (byte) 37,
    (byte) 36,
    (byte) 5,
    (byte) 241,
    (byte) 110,
    (byte) 148,
    (byte) 40,
    (byte) 154,
    (byte) 132,
    (byte) 232,
    (byte) 163,
    (byte) 79,
    (byte) 119,
    (byte) 211,
    (byte) 133,
    (byte) 226,
    (byte) 82,
    (byte) 242,
    (byte) 130,
    (byte) 80,
    (byte) 122,
    (byte) 47,
    (byte) 116,
    (byte) 83,
    (byte) 179,
    (byte) 97,
    (byte) 175,
    (byte) 57,
    (byte) 53,
    (byte) 222,
    (byte) 205,
    (byte) 31,
    (byte) 153,
    (byte) 172,
    (byte) 173,
    (byte) 114,
    (byte) 44,
    (byte) 221,
    (byte) 208,
    (byte) 135,
    (byte) 190,
    (byte) 94,
    (byte) 166,
    (byte) 236,
    (byte) 4,
    (byte) 198,
    (byte) 3,
    (byte) 52,
    (byte) 251,
    (byte) 219,
    (byte) 89,
    (byte) 182,
    (byte) 194,
    (byte) 1,
    (byte) 240,
    (byte) 90,
    (byte) 237,
    (byte) 167,
    (byte) 102,
    (byte) 33,
    (byte) 127,
    (byte) 138,
    (byte) 39,
    (byte) 199,
    (byte) 192,
    (byte) 41,
    (byte) 215
  };
  private static readonly byte[] \u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮ = new byte[256]
  {
    (byte) 147,
    (byte) 217,
    (byte) 154,
    (byte) 181,
    (byte) 152,
    (byte) 34,
    (byte) 69,
    (byte) 252,
    (byte) 186,
    (byte) 106,
    (byte) 223,
    (byte) 2,
    (byte) 159,
    (byte) 220,
    (byte) 81,
    (byte) 89,
    (byte) 74,
    (byte) 23,
    (byte) 43,
    (byte) 194,
    (byte) 148,
    (byte) 244,
    (byte) 187,
    (byte) 163,
    (byte) 98,
    (byte) 228,
    (byte) 113,
    (byte) 212,
    (byte) 205,
    (byte) 112,
    (byte) 22,
    (byte) 225,
    (byte) 73,
    (byte) 60,
    (byte) 192,
    (byte) 216,
    (byte) 92,
    (byte) 155,
    (byte) 173,
    (byte) 133,
    (byte) 83,
    (byte) 161,
    (byte) 122,
    (byte) 200,
    (byte) 45,
    (byte) 224,
    (byte) 209,
    (byte) 114,
    (byte) 166,
    (byte) 44,
    (byte) 196,
    (byte) 227,
    (byte) 118,
    (byte) 120,
    (byte) 183,
    (byte) 180,
    (byte) 9,
    (byte) 59,
    (byte) 14,
    (byte) 65,
    (byte) 76,
    (byte) 222,
    (byte) 178,
    (byte) 144,
    (byte) 37,
    (byte) 165,
    (byte) 215,
    (byte) 3,
    (byte) 17,
    (byte) 0,
    (byte) 195,
    (byte) 46,
    (byte) 146,
    (byte) 239,
    (byte) 78,
    (byte) 18,
    (byte) 157,
    (byte) 125,
    (byte) 203,
    (byte) 53,
    (byte) 16,
    (byte) 213,
    (byte) 79,
    (byte) 158,
    (byte) 77,
    (byte) 169,
    (byte) 85,
    (byte) 198,
    (byte) 208,
    (byte) 123,
    (byte) 24,
    (byte) 151,
    (byte) 211,
    (byte) 54,
    (byte) 230,
    (byte) 72,
    (byte) 86,
    (byte) 129,
    (byte) 143,
    (byte) 119,
    (byte) 204,
    (byte) 156,
    (byte) 185,
    (byte) 226,
    (byte) 172,
    (byte) 184,
    (byte) 47,
    (byte) 21,
    (byte) 164,
    (byte) 124,
    (byte) 218,
    (byte) 56,
    (byte) 30,
    (byte) 11,
    (byte) 5,
    (byte) 214,
    (byte) 20,
    (byte) 110,
    (byte) 108,
    (byte) 126,
    (byte) 102,
    (byte) 253,
    (byte) 177,
    (byte) 229,
    (byte) 96,
    (byte) 175,
    (byte) 94,
    (byte) 51,
    (byte) 135,
    (byte) 201,
    (byte) 240,
    (byte) 93,
    (byte) 109,
    (byte) 63,
    (byte) 136,
    (byte) 141,
    (byte) 199,
    (byte) 247,
    (byte) 29,
    (byte) 233,
    (byte) 236,
    (byte) 237,
    (byte) 128,
    (byte) 41,
    (byte) 39,
    (byte) 207,
    (byte) 153,
    (byte) 168,
    (byte) 80,
    (byte) 15,
    (byte) 55,
    (byte) 36,
    (byte) 40,
    (byte) 48,
    (byte) 149,
    (byte) 210,
    (byte) 62,
    (byte) 91,
    (byte) 64,
    (byte) 131,
    (byte) 179,
    (byte) 105,
    (byte) 87,
    (byte) 31,
    (byte) 7,
    (byte) 28,
    (byte) 138,
    (byte) 188,
    (byte) 32,
    (byte) 235,
    (byte) 206,
    (byte) 142,
    (byte) 171,
    (byte) 238,
    (byte) 49,
    (byte) 162,
    (byte) 115,
    (byte) 249,
    (byte) 202,
    (byte) 58,
    (byte) 26,
    (byte) 251,
    (byte) 13,
    (byte) 193,
    (byte) 254,
    (byte) 250,
    (byte) 242,
    (byte) 111,
    (byte) 189,
    (byte) 150,
    (byte) 221,
    (byte) 67,
    (byte) 82,
    (byte) 182,
    (byte) 8,
    (byte) 243,
    (byte) 174,
    (byte) 190,
    (byte) 25,
    (byte) 137,
    (byte) 50,
    (byte) 38,
    (byte) 176,
    (byte) 234,
    (byte) 75,
    (byte) 100,
    (byte) 132,
    (byte) 130,
    (byte) 107,
    (byte) 245,
    (byte) 121,
    (byte) 191,
    (byte) 1,
    (byte) 95,
    (byte) 117,
    (byte) 99,
    (byte) 27,
    (byte) 35,
    (byte) 61,
    (byte) 104,
    (byte) 42,
    (byte) 101,
    (byte) 232,
    (byte) 145,
    (byte) 246,
    byte.MaxValue,
    (byte) 19,
    (byte) 88,
    (byte) 241,
    (byte) 71,
    (byte) 10,
    (byte) 127,
    (byte) 197,
    (byte) 167,
    (byte) 231,
    (byte) 97,
    (byte) 90,
    (byte) 6,
    (byte) 70,
    (byte) 68,
    (byte) 66,
    (byte) 4,
    (byte) 160,
    (byte) 219,
    (byte) 57,
    (byte) 134,
    (byte) 84,
    (byte) 170,
    (byte) 140,
    (byte) 52,
    (byte) 33,
    (byte) 139,
    (byte) 248,
    (byte) 12,
    (byte) 116,
    (byte) 103
  };
  private static readonly byte[] \u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮ = new byte[256]
  {
    (byte) 104,
    (byte) 141,
    (byte) 202,
    (byte) 77,
    (byte) 115,
    (byte) 75,
    (byte) 78,
    (byte) 42,
    (byte) 212,
    (byte) 82,
    (byte) 38,
    (byte) 179,
    (byte) 84,
    (byte) 30,
    (byte) 25,
    (byte) 31,
    (byte) 34,
    (byte) 3,
    (byte) 70,
    (byte) 61,
    (byte) 45,
    (byte) 74,
    (byte) 83,
    (byte) 131,
    (byte) 19,
    (byte) 138,
    (byte) 183,
    (byte) 213,
    (byte) 37,
    (byte) 121,
    (byte) 245,
    (byte) 189,
    (byte) 88,
    (byte) 47,
    (byte) 13,
    (byte) 2,
    (byte) 237,
    (byte) 81,
    (byte) 158,
    (byte) 17,
    (byte) 242,
    (byte) 62,
    (byte) 85,
    (byte) 94,
    (byte) 209,
    (byte) 22,
    (byte) 60,
    (byte) 102,
    (byte) 112,
    (byte) 93,
    (byte) 243,
    (byte) 69,
    (byte) 64,
    (byte) 204,
    (byte) 232,
    (byte) 148,
    (byte) 86,
    (byte) 8,
    (byte) 206,
    (byte) 26,
    (byte) 58,
    (byte) 210,
    (byte) 225,
    (byte) 223,
    (byte) 181,
    (byte) 56,
    (byte) 110,
    (byte) 14,
    (byte) 229,
    (byte) 244,
    (byte) 249,
    (byte) 134,
    (byte) 233,
    (byte) 79,
    (byte) 214,
    (byte) 133,
    (byte) 35,
    (byte) 207,
    (byte) 50,
    (byte) 153,
    (byte) 49,
    (byte) 20,
    (byte) 174,
    (byte) 238,
    (byte) 200,
    (byte) 72,
    (byte) 211,
    (byte) 48,
    (byte) 161,
    (byte) 146,
    (byte) 65,
    (byte) 177,
    (byte) 24,
    (byte) 196,
    (byte) 44,
    (byte) 113,
    (byte) 114,
    (byte) 68,
    (byte) 21,
    (byte) 253,
    (byte) 55,
    (byte) 190,
    (byte) 95,
    (byte) 170,
    (byte) 155,
    (byte) 136,
    (byte) 216,
    (byte) 171,
    (byte) 137,
    (byte) 156,
    (byte) 250,
    (byte) 96,
    (byte) 234,
    (byte) 188,
    (byte) 98,
    (byte) 12,
    (byte) 36,
    (byte) 166,
    (byte) 168,
    (byte) 236,
    (byte) 103,
    (byte) 32,
    (byte) 219,
    (byte) 124,
    (byte) 40,
    (byte) 221,
    (byte) 172,
    (byte) 91,
    (byte) 52,
    (byte) 126,
    (byte) 16,
    (byte) 241,
    (byte) 123,
    (byte) 143,
    (byte) 99,
    (byte) 160,
    (byte) 5,
    (byte) 154,
    (byte) 67,
    (byte) 119,
    (byte) 33,
    (byte) 191,
    (byte) 39,
    (byte) 9,
    (byte) 195,
    (byte) 159,
    (byte) 182,
    (byte) 215,
    (byte) 41,
    (byte) 194,
    (byte) 235,
    (byte) 192,
    (byte) 164,
    (byte) 139,
    (byte) 140,
    (byte) 29,
    (byte) 251,
    byte.MaxValue,
    (byte) 193,
    (byte) 178,
    (byte) 151,
    (byte) 46,
    (byte) 248,
    (byte) 101,
    (byte) 246,
    (byte) 117,
    (byte) 7,
    (byte) 4,
    (byte) 73,
    (byte) 51,
    (byte) 228,
    (byte) 217,
    (byte) 185,
    (byte) 208,
    (byte) 66,
    (byte) 199,
    (byte) 108,
    (byte) 144,
    (byte) 0,
    (byte) 142,
    (byte) 111,
    (byte) 80,
    (byte) 1,
    (byte) 197,
    (byte) 218,
    (byte) 71,
    (byte) 63,
    (byte) 205,
    (byte) 105,
    (byte) 162,
    (byte) 226,
    (byte) 122,
    (byte) 167,
    (byte) 198,
    (byte) 147,
    (byte) 15,
    (byte) 10,
    (byte) 6,
    (byte) 230,
    (byte) 43,
    (byte) 150,
    (byte) 163,
    (byte) 28,
    (byte) 175,
    (byte) 106,
    (byte) 18,
    (byte) 132,
    (byte) 57,
    (byte) 231,
    (byte) 176,
    (byte) 130,
    (byte) 247,
    (byte) 254,
    (byte) 157,
    (byte) 135,
    (byte) 92,
    (byte) 129,
    (byte) 53,
    (byte) 222,
    (byte) 180,
    (byte) 165,
    (byte) 252,
    (byte) 128,
    (byte) 239,
    (byte) 203,
    (byte) 187,
    (byte) 107,
    (byte) 118,
    (byte) 186,
    (byte) 90,
    (byte) 125,
    (byte) 120,
    (byte) 11,
    (byte) 149,
    (byte) 227,
    (byte) 173,
    (byte) 116,
    (byte) 152,
    (byte) 59,
    (byte) 54,
    (byte) 100,
    (byte) 109,
    (byte) 220,
    (byte) 240,
    (byte) 89,
    (byte) 169,
    (byte) 76,
    (byte) 23,
    (byte) 127,
    (byte) 145,
    (byte) 184,
    (byte) 201,
    (byte) 87,
    (byte) 27,
    (byte) 224,
    (byte) 97
  };
  private static readonly byte[] \u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮ = new byte[256]
  {
    (byte) 164,
    (byte) 162,
    (byte) 169,
    (byte) 197,
    (byte) 78,
    (byte) 201,
    (byte) 3,
    (byte) 217,
    (byte) 126,
    (byte) 15,
    (byte) 210,
    (byte) 173,
    (byte) 231,
    (byte) 211,
    (byte) 39,
    (byte) 91,
    (byte) 227,
    (byte) 161,
    (byte) 232,
    (byte) 230,
    (byte) 124,
    (byte) 42,
    (byte) 85,
    (byte) 12,
    (byte) 134,
    (byte) 57,
    (byte) 215,
    (byte) 141,
    (byte) 184,
    (byte) 18,
    (byte) 111,
    (byte) 40,
    (byte) 205,
    (byte) 138,
    (byte) 112,
    (byte) 86,
    (byte) 114,
    (byte) 249,
    (byte) 191,
    (byte) 79,
    (byte) 115,
    (byte) 233,
    (byte) 247,
    (byte) 87,
    (byte) 22,
    (byte) 172,
    (byte) 80,
    (byte) 192,
    (byte) 157,
    (byte) 183,
    (byte) 71,
    (byte) 113,
    (byte) 96,
    (byte) 196,
    (byte) 116,
    (byte) 67,
    (byte) 108,
    (byte) 31,
    (byte) 147,
    (byte) 119,
    (byte) 220,
    (byte) 206,
    (byte) 32,
    (byte) 140,
    (byte) 153,
    (byte) 95,
    (byte) 68,
    (byte) 1,
    (byte) 245,
    (byte) 30,
    (byte) 135,
    (byte) 94,
    (byte) 97,
    (byte) 44,
    (byte) 75,
    (byte) 29,
    (byte) 129,
    (byte) 21,
    (byte) 244,
    (byte) 35,
    (byte) 214,
    (byte) 234,
    (byte) 225,
    (byte) 103,
    (byte) 241,
    (byte) 127,
    (byte) 254,
    (byte) 218,
    (byte) 60,
    (byte) 7,
    (byte) 83,
    (byte) 106,
    (byte) 132,
    (byte) 156,
    (byte) 203,
    (byte) 2,
    (byte) 131,
    (byte) 51,
    (byte) 221,
    (byte) 53,
    (byte) 226,
    (byte) 89,
    (byte) 90,
    (byte) 152,
    (byte) 165,
    (byte) 146,
    (byte) 100,
    (byte) 4,
    (byte) 6,
    (byte) 16,
    (byte) 77,
    (byte) 28,
    (byte) 151,
    (byte) 8,
    (byte) 49,
    (byte) 238,
    (byte) 171,
    (byte) 5,
    (byte) 175,
    (byte) 121,
    (byte) 160,
    (byte) 24,
    (byte) 70,
    (byte) 109,
    (byte) 252,
    (byte) 137,
    (byte) 212,
    (byte) 199,
    byte.MaxValue,
    (byte) 240,
    (byte) 207,
    (byte) 66,
    (byte) 145,
    (byte) 248,
    (byte) 104,
    (byte) 10,
    (byte) 101,
    (byte) 142,
    (byte) 182,
    (byte) 253,
    (byte) 195,
    (byte) 239,
    (byte) 120,
    (byte) 76,
    (byte) 204,
    (byte) 158,
    (byte) 48,
    (byte) 46,
    (byte) 188,
    (byte) 11,
    (byte) 84,
    (byte) 26,
    (byte) 166,
    (byte) 187,
    (byte) 38,
    (byte) 128,
    (byte) 72,
    (byte) 148,
    (byte) 50,
    (byte) 125,
    (byte) 167,
    (byte) 63,
    (byte) 174,
    (byte) 34,
    (byte) 61,
    (byte) 102,
    (byte) 170,
    (byte) 246,
    (byte) 0,
    (byte) 93,
    (byte) 189,
    (byte) 74,
    (byte) 224,
    (byte) 59,
    (byte) 180,
    (byte) 23,
    (byte) 139,
    (byte) 159,
    (byte) 118,
    (byte) 176,
    (byte) 36,
    (byte) 154,
    (byte) 37,
    (byte) 99,
    (byte) 219,
    (byte) 235,
    (byte) 122,
    (byte) 62,
    (byte) 92,
    (byte) 179,
    (byte) 177,
    (byte) 41,
    (byte) 242,
    (byte) 202,
    (byte) 88,
    (byte) 110,
    (byte) 216,
    (byte) 168,
    (byte) 47,
    (byte) 117,
    (byte) 223,
    (byte) 20,
    (byte) 251,
    (byte) 19,
    (byte) 73,
    (byte) 136,
    (byte) 178,
    (byte) 236,
    (byte) 228,
    (byte) 52,
    (byte) 45,
    (byte) 150,
    (byte) 198,
    (byte) 58,
    (byte) 237,
    (byte) 149,
    (byte) 14,
    (byte) 229,
    (byte) 133,
    (byte) 107,
    (byte) 64,
    (byte) 33,
    (byte) 155,
    (byte) 9,
    (byte) 25,
    (byte) 43,
    (byte) 82,
    (byte) 222,
    (byte) 69,
    (byte) 163,
    (byte) 250,
    (byte) 81,
    (byte) 194,
    (byte) 181,
    (byte) 209,
    (byte) 144,
    (byte) 185,
    (byte) 243,
    (byte) 55,
    (byte) 193,
    (byte) 13,
    (byte) 186,
    (byte) 65,
    (byte) 17,
    (byte) 56,
    (byte) 123,
    (byte) 190,
    (byte) 208,
    (byte) 213,
    (byte) 105,
    (byte) 54,
    (byte) 200,
    (byte) 98,
    (byte) 27,
    (byte) 130,
    (byte) 143
  };
  private static readonly byte[] \u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮ = new byte[256]
  {
    (byte) 131,
    (byte) 242,
    (byte) 42,
    (byte) 235,
    (byte) 233,
    (byte) 191,
    (byte) 123,
    (byte) 156,
    (byte) 52,
    (byte) 150,
    (byte) 141,
    (byte) 152,
    (byte) 185,
    (byte) 105,
    (byte) 140,
    (byte) 41,
    (byte) 61,
    (byte) 136,
    (byte) 104,
    (byte) 6,
    (byte) 57,
    (byte) 17,
    (byte) 76,
    (byte) 14,
    (byte) 160,
    (byte) 86,
    (byte) 64,
    (byte) 146,
    (byte) 21,
    (byte) 188,
    (byte) 179,
    (byte) 220,
    (byte) 111,
    (byte) 248,
    (byte) 38,
    (byte) 186,
    (byte) 190,
    (byte) 189,
    (byte) 49,
    (byte) 251,
    (byte) 195,
    (byte) 254,
    (byte) 128,
    (byte) 97,
    (byte) 225,
    (byte) 122,
    (byte) 50,
    (byte) 210,
    (byte) 112,
    (byte) 32,
    (byte) 161,
    (byte) 69,
    (byte) 236,
    (byte) 217,
    (byte) 26,
    (byte) 93,
    (byte) 180,
    (byte) 216,
    (byte) 9,
    (byte) 165,
    (byte) 85,
    (byte) 142,
    (byte) 55,
    (byte) 118,
    (byte) 169,
    (byte) 103,
    (byte) 16,
    (byte) 23,
    (byte) 54,
    (byte) 101,
    (byte) 177,
    (byte) 149,
    (byte) 98,
    (byte) 89,
    (byte) 116,
    (byte) 163,
    (byte) 80,
    (byte) 47,
    (byte) 75,
    (byte) 200,
    (byte) 208,
    (byte) 143,
    (byte) 205,
    (byte) 212,
    (byte) 60,
    (byte) 134,
    (byte) 18,
    (byte) 29,
    (byte) 35,
    (byte) 239,
    (byte) 244,
    (byte) 83,
    (byte) 25,
    (byte) 53,
    (byte) 230,
    (byte) 127,
    (byte) 94,
    (byte) 214,
    (byte) 121,
    (byte) 81,
    (byte) 34,
    (byte) 20,
    (byte) 247,
    (byte) 30,
    (byte) 74,
    (byte) 66,
    (byte) 155,
    (byte) 65,
    (byte) 115,
    (byte) 45,
    (byte) 193,
    (byte) 92,
    (byte) 166,
    (byte) 162,
    (byte) 224,
    (byte) 46,
    (byte) 211,
    (byte) 40,
    (byte) 187,
    (byte) 201,
    (byte) 174,
    (byte) 106,
    (byte) 209,
    (byte) 90,
    (byte) 48,
    (byte) 144,
    (byte) 132,
    (byte) 249,
    (byte) 178,
    (byte) 88,
    (byte) 207,
    (byte) 126,
    (byte) 197,
    (byte) 203,
    (byte) 151,
    (byte) 228,
    (byte) 22,
    (byte) 108,
    (byte) 250,
    (byte) 176,
    (byte) 109,
    (byte) 31,
    (byte) 82,
    (byte) 153,
    (byte) 13,
    (byte) 78,
    (byte) 3,
    (byte) 145,
    (byte) 194,
    (byte) 77,
    (byte) 100,
    (byte) 119,
    (byte) 159,
    (byte) 221,
    (byte) 196,
    (byte) 73,
    (byte) 138,
    (byte) 154,
    (byte) 36,
    (byte) 56,
    (byte) 167,
    (byte) 87,
    (byte) 133,
    (byte) 199,
    (byte) 124,
    (byte) 125,
    (byte) 231,
    (byte) 246,
    (byte) 183,
    (byte) 172,
    (byte) 39,
    (byte) 70,
    (byte) 222,
    (byte) 223,
    (byte) 59,
    (byte) 215,
    (byte) 158,
    (byte) 43,
    (byte) 11,
    (byte) 213,
    (byte) 19,
    (byte) 117,
    (byte) 240,
    (byte) 114,
    (byte) 182,
    (byte) 157,
    (byte) 27,
    (byte) 1,
    (byte) 63,
    (byte) 68,
    (byte) 229,
    (byte) 135,
    (byte) 253,
    (byte) 7,
    (byte) 241,
    (byte) 171,
    (byte) 148,
    (byte) 24,
    (byte) 234,
    (byte) 252,
    (byte) 58,
    (byte) 130,
    (byte) 95,
    (byte) 5,
    (byte) 84,
    (byte) 219,
    (byte) 0,
    (byte) 139,
    (byte) 227,
    (byte) 72,
    (byte) 12,
    (byte) 202,
    (byte) 120,
    (byte) 137,
    (byte) 10,
    byte.MaxValue,
    (byte) 62,
    (byte) 91,
    (byte) 129,
    (byte) 238,
    (byte) 113,
    (byte) 226,
    (byte) 218,
    (byte) 44,
    (byte) 184,
    (byte) 181,
    (byte) 204,
    (byte) 110,
    (byte) 168,
    (byte) 107,
    (byte) 173,
    (byte) 96,
    (byte) 198,
    (byte) 8,
    (byte) 4,
    (byte) 2,
    (byte) 232,
    (byte) 245,
    (byte) 79,
    (byte) 164,
    (byte) 243,
    (byte) 192,
    (byte) 206,
    (byte) 67,
    (byte) 37,
    (byte) 28,
    (byte) 33,
    (byte) 51,
    (byte) 15,
    (byte) 175,
    (byte) 71,
    (byte) 237,
    (byte) 102,
    (byte) 99,
    (byte) 147,
    (byte) 170
  };
  private static readonly byte[] \u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮ = new byte[256]
  {
    (byte) 69,
    (byte) 212,
    (byte) 11,
    (byte) 67,
    (byte) 241,
    (byte) 114,
    (byte) 237,
    (byte) 164,
    (byte) 194,
    (byte) 56,
    (byte) 230,
    (byte) 113,
    (byte) 253,
    (byte) 182,
    (byte) 58,
    (byte) 149,
    (byte) 80,
    (byte) 68,
    (byte) 75,
    (byte) 226,
    (byte) 116,
    (byte) 107,
    (byte) 30,
    (byte) 17,
    (byte) 90,
    (byte) 198,
    (byte) 180,
    (byte) 216,
    (byte) 165,
    (byte) 138,
    (byte) 112,
    (byte) 163,
    (byte) 168,
    (byte) 250,
    (byte) 5,
    (byte) 217,
    (byte) 151,
    (byte) 64,
    (byte) 201,
    (byte) 144,
    (byte) 152,
    (byte) 143,
    (byte) 220,
    (byte) 18,
    (byte) 49,
    (byte) 44,
    (byte) 71,
    (byte) 106,
    (byte) 153,
    (byte) 174,
    (byte) 200,
    (byte) 127,
    (byte) 249,
    (byte) 79,
    (byte) 93,
    (byte) 150,
    (byte) 111,
    (byte) 244,
    (byte) 179,
    (byte) 57,
    (byte) 33,
    (byte) 218,
    (byte) 156,
    (byte) 133,
    (byte) 158,
    (byte) 59,
    (byte) 240,
    (byte) 191,
    (byte) 239,
    (byte) 6,
    (byte) 238,
    (byte) 229,
    (byte) 95,
    (byte) 32,
    (byte) 16,
    (byte) 204,
    (byte) 60,
    (byte) 84,
    (byte) 74,
    (byte) 82,
    (byte) 148,
    (byte) 14,
    (byte) 192,
    (byte) 40,
    (byte) 246,
    (byte) 86,
    (byte) 96,
    (byte) 162,
    (byte) 227,
    (byte) 15,
    (byte) 236,
    (byte) 157,
    (byte) 36,
    (byte) 131,
    (byte) 126,
    (byte) 213,
    (byte) 124,
    (byte) 235,
    (byte) 24,
    (byte) 215,
    (byte) 205,
    (byte) 221,
    (byte) 120,
    byte.MaxValue,
    (byte) 219,
    (byte) 161,
    (byte) 9,
    (byte) 208,
    (byte) 118,
    (byte) 132,
    (byte) 117,
    (byte) 187,
    (byte) 29,
    (byte) 26,
    (byte) 47,
    (byte) 176,
    (byte) 254,
    (byte) 214,
    (byte) 52,
    (byte) 99,
    (byte) 53,
    (byte) 210,
    (byte) 42,
    (byte) 89,
    (byte) 109,
    (byte) 77,
    (byte) 119,
    (byte) 231,
    (byte) 142,
    (byte) 97,
    (byte) 207,
    (byte) 159,
    (byte) 206,
    (byte) 39,
    (byte) 245,
    (byte) 128,
    (byte) 134,
    (byte) 199,
    (byte) 166,
    (byte) 251,
    (byte) 248,
    (byte) 135,
    (byte) 171,
    (byte) 98,
    (byte) 63,
    (byte) 223,
    (byte) 72,
    (byte) 0,
    (byte) 20,
    (byte) 154,
    (byte) 189,
    (byte) 91,
    (byte) 4,
    (byte) 146,
    (byte) 2,
    (byte) 37,
    (byte) 101,
    (byte) 76,
    (byte) 83,
    (byte) 12,
    (byte) 242,
    (byte) 41,
    (byte) 175,
    (byte) 23,
    (byte) 108,
    (byte) 65,
    (byte) 48,
    (byte) 233,
    (byte) 147,
    (byte) 85,
    (byte) 247,
    (byte) 172,
    (byte) 104,
    (byte) 38,
    (byte) 196,
    (byte) 125,
    (byte) 202,
    (byte) 122,
    (byte) 62,
    (byte) 160,
    (byte) 55,
    (byte) 3,
    (byte) 193,
    (byte) 54,
    (byte) 105,
    (byte) 102,
    (byte) 8,
    (byte) 22,
    (byte) 167,
    (byte) 188,
    (byte) 197,
    (byte) 211,
    (byte) 34,
    (byte) 183,
    (byte) 19,
    (byte) 70,
    (byte) 50,
    (byte) 232,
    (byte) 87,
    (byte) 136,
    (byte) 43,
    (byte) 129,
    (byte) 178,
    (byte) 78,
    (byte) 100,
    (byte) 28,
    (byte) 170,
    (byte) 145,
    (byte) 88,
    (byte) 46,
    (byte) 155,
    (byte) 92,
    (byte) 27,
    (byte) 81,
    (byte) 115,
    (byte) 66,
    (byte) 35,
    (byte) 1,
    (byte) 110,
    (byte) 243,
    (byte) 13,
    (byte) 190,
    (byte) 61,
    (byte) 10,
    (byte) 45,
    (byte) 31,
    (byte) 103,
    (byte) 51,
    (byte) 25,
    (byte) 123,
    (byte) 94,
    (byte) 234,
    (byte) 222,
    (byte) 139,
    (byte) 203,
    (byte) 169,
    (byte) 140,
    (byte) 141,
    (byte) 173,
    (byte) 73,
    (byte) 130,
    (byte) 228,
    (byte) 186,
    (byte) 195,
    (byte) 21,
    (byte) 209,
    (byte) 224,
    (byte) 137,
    (byte) 252,
    (byte) 177,
    (byte) 185,
    (byte) 181,
    (byte) 7,
    (byte) 121,
    (byte) 184,
    (byte) 225
  };
  private static readonly byte[] \u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮ = new byte[256]
  {
    (byte) 178,
    (byte) 182,
    (byte) 35,
    (byte) 17,
    (byte) 167,
    (byte) 136,
    (byte) 197,
    (byte) 166,
    (byte) 57,
    (byte) 143,
    (byte) 196,
    (byte) 232,
    (byte) 115,
    (byte) 34,
    (byte) 67,
    (byte) 195,
    (byte) 130,
    (byte) 39,
    (byte) 205,
    (byte) 24,
    (byte) 81,
    (byte) 98,
    (byte) 45,
    (byte) 247,
    (byte) 92,
    (byte) 14,
    (byte) 59,
    (byte) 253,
    (byte) 202,
    (byte) 155,
    (byte) 13,
    (byte) 15,
    (byte) 121,
    (byte) 140,
    (byte) 16,
    (byte) 76,
    (byte) 116,
    (byte) 28,
    (byte) 10,
    (byte) 142,
    (byte) 124,
    (byte) 148,
    (byte) 7,
    (byte) 199,
    (byte) 94,
    (byte) 20,
    (byte) 161,
    (byte) 33,
    (byte) 87,
    (byte) 80,
    (byte) 78,
    (byte) 169,
    (byte) 128,
    (byte) 217,
    (byte) 239,
    (byte) 100,
    (byte) 65,
    (byte) 207,
    (byte) 60,
    (byte) 238,
    (byte) 46,
    (byte) 19,
    (byte) 41,
    (byte) 186,
    (byte) 52,
    (byte) 90,
    (byte) 174,
    (byte) 138,
    (byte) 97,
    (byte) 51,
    (byte) 18,
    (byte) 185,
    (byte) 85,
    (byte) 168,
    (byte) 21,
    (byte) 5,
    (byte) 246,
    (byte) 3,
    (byte) 6,
    (byte) 73,
    (byte) 181,
    (byte) 37,
    (byte) 9,
    (byte) 22,
    (byte) 12,
    (byte) 42,
    (byte) 56,
    (byte) 252,
    (byte) 32,
    (byte) 244,
    (byte) 229,
    (byte) 127,
    (byte) 215,
    (byte) 49,
    (byte) 43,
    (byte) 102,
    (byte) 111,
    byte.MaxValue,
    (byte) 114,
    (byte) 134,
    (byte) 240,
    (byte) 163,
    (byte) 47,
    (byte) 120,
    (byte) 0,
    (byte) 188,
    (byte) 204,
    (byte) 226,
    (byte) 176,
    (byte) 241,
    (byte) 66,
    (byte) 180,
    (byte) 48,
    (byte) 95,
    (byte) 96,
    (byte) 4,
    (byte) 236,
    (byte) 165,
    (byte) 227,
    (byte) 139,
    (byte) 231,
    (byte) 29,
    (byte) 191,
    (byte) 132,
    (byte) 123,
    (byte) 230,
    (byte) 129,
    (byte) 248,
    (byte) 222,
    (byte) 216,
    (byte) 210,
    (byte) 23,
    (byte) 206,
    (byte) 75,
    (byte) 71,
    (byte) 214,
    (byte) 105,
    (byte) 108,
    (byte) 25,
    (byte) 153,
    (byte) 154,
    (byte) 1,
    (byte) 179,
    (byte) 133,
    (byte) 177,
    (byte) 249,
    (byte) 89,
    (byte) 194,
    (byte) 55,
    (byte) 233,
    (byte) 200,
    (byte) 160,
    (byte) 237,
    (byte) 79,
    (byte) 137,
    (byte) 104,
    (byte) 109,
    (byte) 213,
    (byte) 38,
    (byte) 145,
    (byte) 135,
    (byte) 88,
    (byte) 189,
    (byte) 201,
    (byte) 152,
    (byte) 220,
    (byte) 117,
    (byte) 192,
    (byte) 118,
    (byte) 245,
    (byte) 103,
    (byte) 107,
    (byte) 126,
    (byte) 235,
    (byte) 82,
    (byte) 203,
    (byte) 209,
    (byte) 91,
    (byte) 159,
    (byte) 11,
    (byte) 219,
    (byte) 64,
    (byte) 146,
    (byte) 26,
    (byte) 250,
    (byte) 172,
    (byte) 228,
    (byte) 225,
    (byte) 113,
    (byte) 31,
    (byte) 101,
    (byte) 141,
    (byte) 151,
    (byte) 158,
    (byte) 149,
    (byte) 144,
    (byte) 93,
    (byte) 183,
    (byte) 193,
    (byte) 175,
    (byte) 84,
    (byte) 251,
    (byte) 2,
    (byte) 224,
    (byte) 53,
    (byte) 187,
    (byte) 58,
    (byte) 77,
    (byte) 173,
    (byte) 44,
    (byte) 61,
    (byte) 86,
    (byte) 8,
    (byte) 27,
    (byte) 74,
    (byte) 147,
    (byte) 106,
    (byte) 171,
    (byte) 184,
    (byte) 122,
    (byte) 242,
    (byte) 125,
    (byte) 218,
    (byte) 63,
    (byte) 254,
    (byte) 62,
    (byte) 190,
    (byte) 234,
    (byte) 170,
    (byte) 68,
    (byte) 198,
    (byte) 208,
    (byte) 54,
    (byte) 72,
    (byte) 112,
    (byte) 150,
    (byte) 119,
    (byte) 36,
    (byte) 83,
    (byte) 223,
    (byte) 243,
    (byte) 131,
    (byte) 40,
    (byte) 50,
    (byte) 69,
    (byte) 30,
    (byte) 164,
    (byte) 211,
    (byte) 162,
    (byte) 70,
    (byte) 110,
    (byte) 156,
    (byte) 221,
    (byte) 99,
    (byte) 212,
    (byte) 157
  };

  public \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮(int _param1)
  {
    if (_param1 != 128 && _param1 != 256 && _param1 != 512)
      throw new ArgumentException("unsupported block length: only 128/256/512 are allowed");
    this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ = _param1 / 64;
    this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮ = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    if (!(_param2 is \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮))
      throw new ArgumentException("Invalid parameter passed to Dstu7624Engine Init");
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    byte[] numArray1 = ((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) _param2).\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮();
    int num1 = numArray1.Length << 3;
    int num2 = this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ << 6;
    if (num1 != 128 && num1 != 256 && num1 != 512)
      throw new ArgumentException("unsupported key length: only 128/256/512 are allowed");
    if (num1 != num2 && num1 != 2 * num2)
      throw new ArgumentException("Unsupported key length");
    switch (num1)
    {
      case 128:
        this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ = 10;
        break;
      case 256:
        this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ = 14;
        break;
      case 512:
        this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ = 18;
        break;
    }
    this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮ = num1 / 64;
    this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮ = new ulong[this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ + 1][];
    for (int index = 0; index < this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮.Length; ++index)
      this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index] = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ = new ulong[this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮];
    if (numArray1.Length != this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮ * 8)
      throw new ArgumentException("Invalid key parameter passed to Dstu7624Engine Init");
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(numArray1, 0, this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮);
    ulong[] numArray2 = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    this.\u200C⁪‬‪⁮‭‪‬‫‬⁭‍‎‏⁬⁬‪‪‫⁯‫‍‍⁬‭⁪‌⁬‮⁬‮‭‮‌‏‮‌⁪‪‍‮(this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮, numArray2);
    this.\u206B⁯⁪⁪⁭‪​‍‏‭‮‪‬‌‭⁯‍⁭⁭​‬‏⁬‍⁬⁫‮⁭⁫⁫⁫‭⁪⁫⁯‌‌​‭‮(this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮, numArray2);
    this.\u200B‬‪‬‌‌​‪‌‮‍‌⁮⁮‎⁫‮⁭‮‪‮‏‬‌‭‬⁫⁮⁯‎‏⁬⁬‭‏⁬⁯⁫‌‍‮();
  }

  private void \u200C⁪‬‪⁮‭‪‬‫‬⁭‍‎‏⁬⁬‪‪‫⁯‫‍‍⁬‭⁪‌⁬‮⁬‮‭‮‌‏‮‌⁪‪‍‮(ulong[] _param1, ulong[] _param2)
  {
    ulong[] destinationArray1 = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    ulong[] destinationArray2 = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮ = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] += (ulong) (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ + this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮ + 1);
    if (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ == this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮)
    {
      Array.Copy((Array) _param1, 0, (Array) destinationArray1, 0, destinationArray1.Length);
      Array.Copy((Array) _param1, 0, (Array) destinationArray2, 0, destinationArray2.Length);
    }
    else
    {
      Array.Copy((Array) _param1, 0, (Array) destinationArray1, 0, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮);
      Array.Copy((Array) _param1, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮, (Array) destinationArray2, 0, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮);
    }
    for (int index = 0; index < this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮.Length; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] += destinationArray1[index];
    this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
    for (int index = 0; index < this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮.Length; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] ^= destinationArray2[index];
    this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
    for (int index = 0; index < this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮.Length; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] += destinationArray1[index];
    this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
    Array.Copy((Array) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, 0, (Array) _param2, 0, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮);
  }

  private void \u206B⁯⁪⁪⁭‪​‍‏‭‮‪‬‌‭⁯‍⁭⁭​‬‏⁬‍⁬⁫‮⁭⁫⁫⁫‭⁪⁫⁯‌‌​‭‮(ulong[] _param1, ulong[] _param2)
  {
    ulong[] destinationArray = new ulong[this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮];
    ulong[] numArray = new ulong[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮];
    int index1 = 0;
    Array.Copy((Array) _param1, 0, (Array) destinationArray, 0, this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮);
    ulong num1 = 281479271743489;
    while (true)
    {
      for (int index2 = 0; index2 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index2)
        numArray[index2] = _param2[index2] + num1;
      for (int index3 = 0; index3 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index3)
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index3] = destinationArray[index3] + numArray[index3];
      this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
      for (int index4 = 0; index4 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index4)
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index4] ^= numArray[index4];
      this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
      for (int index5 = 0; index5 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index5)
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index5] += numArray[index5];
      Array.Copy((Array) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, 0, (Array) this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index1], 0, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮);
      if (this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ != index1)
      {
        if (this.\u200D‭‫‬⁮‬​⁪⁪‎‎​‎⁫⁮⁪‪‏⁫⁪‌⁫⁫⁭‬‏‪‍‪⁭‎‬⁯‎‏‪⁭‬⁯‍‮ != this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮)
        {
          index1 += 2;
          num1 <<= 1;
          for (int index6 = 0; index6 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index6)
            numArray[index6] = _param2[index6] + num1;
          for (int index7 = 0; index7 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index7)
            this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index7] = destinationArray[this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ + index7] + numArray[index7];
          this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
          for (int index8 = 0; index8 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index8)
            this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index8] ^= numArray[index8];
          this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
          for (int index9 = 0; index9 < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index9)
            this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index9] += numArray[index9];
          Array.Copy((Array) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, 0, (Array) this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index1], 0, this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮);
          if (this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮ == index1)
            goto label_33;
        }
        index1 += 2;
        num1 <<= 1;
        ulong num2 = destinationArray[0];
        for (int index10 = 1; index10 < destinationArray.Length; ++index10)
          destinationArray[index10 - 1] = destinationArray[index10];
        destinationArray[destinationArray.Length - 1] = num2;
      }
      else
        break;
    }
    return;
label_33:;
  }

  private void \u200B‬‪‬‌‌​‪‌‮‍‌⁮⁮‎⁫‮⁭‮‪‮‏‬‌‭‬⁫⁮⁯‎‏⁬⁬‭‏⁬⁯⁫‌‍‮()
  {
    for (int index = 1; index < this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮; index += 2)
      this.\u206C‮‍‭​⁯‪‌‍‫⁬⁫​⁪‏⁯‭‪⁯⁭⁪⁭‏‎​‬​‭⁬⁪⁬⁭‍⁭⁭‪‫‭‌⁬‮(this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index - 1], this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index]);
  }

  public virtual int \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    if (this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ == null)
      throw new InvalidOperationException("Dstu7624Engine not initialised");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, this.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(), "input buffer too short");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param3, _param4, this.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮(), "output buffer too short");
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
    {
      if (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ == 2)
      {
        this.\u202D⁭‬‌‪‫⁬​⁮‏‌‌⁫‭​‎‬‌⁭‍‭​⁯‌⁪‌‫⁮‎‪‏⁬⁬‫‬‮⁪‌‍‬‮(_param1, _param2, _param3, _param4);
      }
      else
      {
        \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2, this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮);
        this.\u202D​⁭‬‍⁪⁮⁪‍‪‍⁫⁭⁭‍‌⁯‬‮⁭‎‪‫⁮‏⁬‎‪​⁭‮‬‭​‫⁯‏⁭⁮⁭‮(0);
        int num = 0;
        while (true)
        {
          this.\u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮();
          if (++num != this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮)
            this.\u200C‍‫‪⁫⁭⁬⁪​⁯‏‌‬‭⁬⁮⁬⁯‌⁯‪⁮‎​⁪‬‌​‬‏‍⁭‭​‍‪‍‫‪⁪‮(num);
          else
            break;
        }
        this.\u202D​⁭‬‍⁪⁮⁪‍‪‍⁫⁭⁭‍‌⁯‬‮⁭‎‪‫⁮‏⁬‎‪​⁭‮‬‭​‫⁯‏⁭⁮⁭‮(this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮);
        \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, _param3, _param4);
      }
    }
    else if (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ == 2)
    {
      this.\u202D⁯‪⁯‬⁬‪‎‪‬‏⁯‭⁬⁮⁭⁪​​⁯‬‬‏⁫‪‌‪‮‭⁪‍‮‎‌‭‎‏⁭⁮⁯‮(_param1, _param2, _param3, _param4);
    }
    else
    {
      \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2, this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮);
      this.\u200F⁪‭‪⁭⁬⁭‌‫‌‭‪‏‭‌‍‏‎‮⁬⁫⁬⁮‫‫⁬⁮‪⁫​‫⁯⁪‬‬⁮‪‎⁮‬‮(this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮);
      int num = this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮;
      while (true)
      {
        this.\u206C‎‍⁭‪‫⁭⁮‌⁯⁪‎‫⁫‍⁯⁯‎‏‍⁮⁫‏‌‏‮‌​⁭⁮‭‫‮‎‌‏⁮⁫⁬‬‮();
        if (--num != 0)
          this.\u200C‍‫‪⁫⁭⁬⁪​⁯‏‌‬‭⁬⁮⁬⁯‌⁯‪⁮‎​⁪‬‌​‬‏‍⁭‭​‍‪‍‫‪⁪‮(num);
        else
          break;
      }
      this.\u200F⁪‭‪⁭⁬⁭‌‫‌‭‪‏‭‌‍‏‎‮⁬⁫⁬⁮‫‫⁬⁮‪⁫​‫⁯⁪‬‬⁮‪‎⁮‬‮(0);
      \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, _param3, _param4);
    }
    return this.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
  }

  private void \u206A⁪⁪‏‭⁯⁫‍⁪⁭‌‭‫‍⁮‍⁪⁪⁪‍‮‭‍⁭‭⁮‬⁪‏‮⁫⁮⁫‏‪‏⁫⁪‮⁭‮()
  {
    this.\u202E⁫⁫‌​‮‏‍⁪‮⁯⁫⁬⁪⁬‏‭⁬⁪⁮‬​⁫⁭‪⁯⁫‮⁪‬⁮‌⁭‎⁬‬⁬‪​‫‮();
    this.\u200B‪‭‮⁬⁬⁭‬‏‌‬‬⁭⁭‏‎‮‫⁯‪⁮‌‎‮‏‭‭⁯‌‫‫‍‍⁫‬‬‪‪​‮‮();
    this.\u200F⁯‌‌⁪‭‎⁫‬‮‍‍​‬‪⁬⁫‏‪‬‫‍⁮⁫⁭‭⁪⁪⁭‏‮‭‪‍‭⁬‏‬‍‏‮();
  }

  private void \u206C‎‍⁭‪‫⁭⁮‌⁯⁪‎‫⁫‍⁯⁯‎‏‍⁮⁫‏‌‏‮‌​⁭⁮‭‫‮‎‌‏⁮⁫⁬‬‮()
  {
    this.\u206F‪‬‬⁭⁮‭​‍‮‮⁮⁪‬⁪⁬‪⁬‏⁬‏‏‌‪⁯‮‮‭‏‬⁪⁫‌⁭​⁬‍⁫‮‬‮();
    this.\u206E​‏‮⁪⁮⁯‍​‪‭⁯​‫‏⁯‭‪‏⁫⁫‍‫‍⁭‏⁭‬‏‏​⁮‍​‌​⁫⁮‫⁯‮();
    this.\u206C‌⁬‫‎‏‬‌‮‬‭​⁭‬​‪⁫‌‮‏‎‌‫‍‍⁭⁯⁭‍‮⁬‮​‍‌⁭⁫‮⁬‪‮();
  }

  private void \u202D⁯‪⁯‬⁬‪‎‪‬‏⁯‭⁬⁮⁭⁪​​⁯‬‬‏⁫‪‌‪‮‭⁪‍‮‎‌‭‎‏⁭⁮⁯‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    ulong num1 = \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2);
    ulong num2 = \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2 + 8);
    ulong[] numArray1 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮];
    ulong num3 = num1 - numArray1[0];
    ulong num4 = num2 - numArray1[1];
    int index = this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮;
    ulong num5;
    ulong num6;
    while (true)
    {
      ulong num7 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202A‮​‮‪​⁭‎‏‏⁭‮‮⁪‎‬‎⁭⁫‏‏⁪​​‌⁫‭​⁮‌⁫⁮‎⁪‪‭‏⁫‪⁯‮(num3);
      ulong num8 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202A‮​‮‪​⁭‎‏‏⁭‮‮⁪‎‬‎⁭⁫‏‏⁪​​‌⁫‭​⁮‌⁫⁮‎⁪‪‭‏⁫‪⁯‮(num4);
      uint num9 = (uint) num7;
      uint num10 = (uint) (num7 >> 32);
      uint num11 = (uint) num8;
      uint num12 = (uint) (num8 >> 32);
      int num13 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num9 & (int) byte.MaxValue];
      byte num14 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num9 >> 8) & (int) byte.MaxValue];
      byte num15 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num9 >> 16) & (int) byte.MaxValue];
      byte num16 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num9 >> 24)];
      int num17 = (int) num14 << 8;
      uint num18 = (uint) (num13 | num17 | (int) num15 << 16 | (int) num16 << 24);
      int num19 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num12 & (int) byte.MaxValue];
      byte num20 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num12 >> 8) & (int) byte.MaxValue];
      byte num21 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num12 >> 16) & (int) byte.MaxValue];
      byte num22 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num12 >> 24)];
      int num23 = (int) num20 << 8;
      uint num24 = (uint) (num19 | num23 | (int) num21 << 16 | (int) num22 << 24);
      num5 = (ulong) num18 | (ulong) num24 << 32;
      int num25 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num11 & (int) byte.MaxValue];
      byte num26 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num11 >> 8) & (int) byte.MaxValue];
      byte num27 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num11 >> 16) & (int) byte.MaxValue];
      byte num28 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num11 >> 24)];
      int num29 = (int) num26 << 8;
      uint num30 = (uint) (num25 | num29 | (int) num27 << 16 | (int) num28 << 24);
      int num31 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num10 & (int) byte.MaxValue];
      byte num32 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num10 >> 8) & (int) byte.MaxValue];
      byte num33 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num10 >> 16) & (int) byte.MaxValue];
      byte num34 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num10 >> 24)];
      int num35 = (int) num32 << 8;
      uint num36 = (uint) (num31 | num35 | (int) num33 << 16 | (int) num34 << 24);
      num6 = (ulong) num30 | (ulong) num36 << 32;
      if (--index != 0)
      {
        ulong[] numArray2 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index];
        num3 = num5 ^ numArray2[0];
        num4 = num6 ^ numArray2[1];
      }
      else
        break;
    }
    ulong[] numArray3 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[0];
    ulong num37 = num5 - numArray3[0];
    ulong num38 = num6 - numArray3[1];
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(num37, _param3, _param4);
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(num38, _param3, _param4 + 8);
  }

  private void \u202D⁭‬‌‪‫⁬​⁮‏‌‌⁫‭​‎‬‌⁭‍‭​⁯‌⁪‌‫⁮‎‪‏⁬⁬‫‬‮⁪‌‍‬‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    ulong num1 = \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2);
    ulong num2 = \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u202A⁮‌⁪‭‌‎‪⁫⁮⁪⁯​‌‭⁪‍‫‪⁭⁬⁪⁯⁪‫⁬‎‌‬⁬‍⁯‮⁮⁬‌‏‬‫‫‮(_param1, _param2 + 8);
    ulong[] numArray1 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[0];
    ulong num3 = num1 + numArray1[0];
    ulong num4 = num2 + numArray1[1];
    int index = 0;
    ulong num5;
    ulong num6;
    while (true)
    {
      uint num7 = (uint) num3;
      uint num8 = (uint) (num3 >> 32);
      uint num9 = (uint) num4;
      uint num10 = (uint) (num4 >> 32);
      int num11 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num7 & (int) byte.MaxValue];
      byte num12 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num7 >> 8) & (int) byte.MaxValue];
      byte num13 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num7 >> 16) & (int) byte.MaxValue];
      byte num14 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num7 >> 24)];
      int num15 = (int) num12 << 8;
      uint num16 = (uint) (num11 | num15 | (int) num13 << 16 | (int) num14 << 24);
      int num17 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num10 & (int) byte.MaxValue];
      byte num18 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num10 >> 8) & (int) byte.MaxValue];
      byte num19 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num10 >> 16) & (int) byte.MaxValue];
      byte num20 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num10 >> 24)];
      int num21 = (int) num18 << 8;
      uint num22 = (uint) (num17 | num21 | (int) num19 << 16 | (int) num20 << 24);
      ulong num23 = (ulong) num16 | (ulong) num22 << 32;
      int num24 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num9 & (int) byte.MaxValue];
      byte num25 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num9 >> 8) & (int) byte.MaxValue];
      byte num26 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num9 >> 16) & (int) byte.MaxValue];
      byte num27 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num9 >> 24)];
      int num28 = (int) num25 << 8;
      uint num29 = (uint) (num24 | num28 | (int) num26 << 16 | (int) num27 << 24);
      int num30 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num8 & (int) byte.MaxValue];
      byte num31 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num8 >> 8) & (int) byte.MaxValue];
      byte num32 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num8 >> 16) & (int) byte.MaxValue];
      byte num33 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num8 >> 24)];
      int num34 = (int) num31 << 8;
      uint num35 = (uint) (num30 | num34 | (int) num32 << 16 | (int) num33 << 24);
      ulong num36 = (ulong) num29 | (ulong) num35 << 32;
      num5 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮(num23);
      num6 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮(num36);
      if (++index != this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮)
      {
        ulong[] numArray2 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[index];
        num3 = num5 ^ numArray2[0];
        num4 = num6 ^ numArray2[1];
      }
      else
        break;
    }
    ulong[] numArray3 = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[this.\u206F‮‌‍‏‭‫⁬⁭⁭⁭‬​⁮‍‪‎‌⁯​‭⁪⁬‏⁪‎⁭‭‪​‎⁭‫‏⁪⁯​‪‬⁯‮];
    ulong num37 = num5 + numArray3[0];
    ulong num38 = num6 + numArray3[1];
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(num37, _param3, _param4);
    \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u200D⁯‌​‮​‌⁪‭‫‌‭⁫​‏‬⁬‍⁬‭‎⁬‪‎⁯‍‎‬‎‎⁯‬‏‎⁮‬‪‫‍‍‮(num38, _param3, _param4 + 8);
  }

  private void \u202E⁫⁫‌​‮‏‍⁪‮⁯⁫⁬⁪⁬‏‭⁬⁪⁮‬​⁫⁭‪⁯⁫‮⁪‬⁮‌⁭‎⁬‬⁬‪​‫‮()
  {
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
    {
      uint num1;
      uint num2 = (uint) ((ulong) (num1 = (uint) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index]) >> 32);
      int num3 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num1 & (int) byte.MaxValue];
      byte num4 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num1 >> 8) & (int) byte.MaxValue];
      byte num5 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num1 >> 16) & (int) byte.MaxValue];
      byte num6 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num1 >> 24)];
      int num7 = (int) num4 << 8;
      uint num8 = (uint) (num3 | num7 | (int) num5 << 16 | (int) num6 << 24);
      int num9 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁫⁫‌‏⁮‎⁯‭⁫‪‪⁮⁭⁫⁯⁪‮‪‎⁯⁬‌‬⁫⁭​⁪⁭⁫⁫‮‪‪⁬⁬‎⁮​⁭‮[(int) num2 & (int) byte.MaxValue];
      byte num10 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200B⁪⁪‭⁬⁯‫⁫‬‍⁯⁮⁬‫⁫⁮⁭‏‍‬⁬‎‮​‪⁪‭‍‫⁪⁫⁫‪‏⁫‌⁭⁮⁫‮[(int) (num2 >> 8) & (int) byte.MaxValue];
      byte num11 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206E⁯​⁫⁮⁭‫⁬‭⁫‮‭⁬‏⁭‪‮⁭‮‮‎⁯‏‍‪‫‫​‏⁯‫⁭⁫‮⁭⁪‮⁫⁯‪‮[(int) (num2 >> 16) & (int) byte.MaxValue];
      byte num12 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A‌​⁭‫‌⁭‮‬‌‮⁮‏‌⁭⁯‏‏‫⁯‎⁬⁮⁫⁬‪‌‫⁪⁪‪⁪⁫​‏‫‏‪⁪‍‮[(int) (num2 >> 24)];
      int num13 = (int) num10 << 8;
      uint num14 = (uint) (num9 | num13 | (int) num11 << 16 | (int) num12 << 24);
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] = (ulong) num8 | (ulong) num14 << 32;
    }
  }

  private void \u206C‌⁬‫‎‏‬‌‮‬‭​⁭‬​‪⁫‌‮‏‎‌‫‍‍⁭⁯⁭‍‮⁬‮​‍‌⁭⁫‮⁬‪‮()
  {
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
    {
      uint num1;
      uint num2 = (uint) ((ulong) (num1 = (uint) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index]) >> 32);
      int num3 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num1 & (int) byte.MaxValue];
      byte num4 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num1 >> 8) & (int) byte.MaxValue];
      byte num5 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num1 >> 16) & (int) byte.MaxValue];
      byte num6 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num1 >> 24)];
      int num7 = (int) num4 << 8;
      uint num8 = (uint) (num3 | num7 | (int) num5 << 16 | (int) num6 << 24);
      int num9 = (int) \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A⁬⁯‍‫⁮⁪⁭⁯‎‬⁫‮‬‮⁯⁯⁫​‏⁭‮‫‬‮⁪​⁭⁭‏⁪⁪⁭‮‪‎‪⁭‫‮‮[(int) num2 & (int) byte.MaxValue];
      byte num10 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‭‪‬⁯‏⁭⁮‬‏⁭⁯‫‌‮​‌‭‬⁭​‭⁬‫‏‎⁫‭‭‮⁬‫‪‎‍⁬‍‍‪⁯‮[(int) (num2 >> 8) & (int) byte.MaxValue];
      byte num11 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206D‬⁯‪‍⁭⁫‭‫‌‬⁪‍‌⁬‪‮​‎‪⁭‭⁭⁪‪⁫‪⁭⁫‌⁬⁫‌⁮‍‮‎​‬⁮‮[(int) (num2 >> 16) & (int) byte.MaxValue];
      byte num12 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202E⁪⁫‮‍⁬‏‮‏⁭‮⁮‏‌‫⁯⁬‎‪‬⁪⁬⁭⁯‫‏‏‭⁭‬⁬⁪⁮‬‪⁬⁭‪‬‮[(int) (num2 >> 24)];
      int num13 = (int) num10 << 8;
      uint num14 = (uint) (num9 | num13 | (int) num11 << 16 | (int) num12 << 24);
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] = (ulong) num8 | (ulong) num14 << 32;
    }
  }

  private void \u200B‪‭‮⁬⁬⁭‬‏‌‬‬⁭⁭‏‎‮‫⁯‪⁮‌‎‮‏‭‭⁯‌‫‫‍‍⁫‬‬‪‪​‮‮()
  {
    switch (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮)
    {
      case 2:
        ulong num1 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num2 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num3 = (ulong) (((long) num1 ^ (long) num2) & -4294967296L);
        ulong num4 = num1 ^ num3;
        ulong num5 = num2 ^ num3;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num4;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num5;
        break;
      case 4:
        ulong num6 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num7 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num8 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2];
        ulong num9 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3];
        ulong num10 = (ulong) (((long) num6 ^ (long) num8) & -4294967296L);
        ulong num11 = num6 ^ num10;
        ulong num12 = num8 ^ num10;
        ulong num13 = (ulong) (((long) num7 ^ (long) num9) & 281474976645120L);
        ulong num14 = num7 ^ num13;
        ulong num15 = num9 ^ num13;
        ulong num16 = (ulong) (((long) num11 ^ (long) num14) & -281470681808896L);
        ulong num17 = num11 ^ num16;
        ulong num18 = num14 ^ num16;
        ulong num19 = (ulong) (((long) num12 ^ (long) num15) & -281470681808896L);
        ulong num20 = num12 ^ num19;
        ulong num21 = num15 ^ num19;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num17;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num18;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2] = num20;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3] = num21;
        break;
      case 8:
        ulong num22 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num23 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num24 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2];
        ulong num25 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3];
        ulong num26 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[4];
        ulong num27 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[5];
        ulong num28 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[6];
        ulong num29 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[7];
        ulong num30 = (ulong) (((long) num22 ^ (long) num26) & -4294967296L);
        ulong num31 = num22 ^ num30;
        ulong num32 = num26 ^ num30;
        ulong num33 = (ulong) (((long) num23 ^ (long) num27) & 72057594021150720L);
        ulong num34 = num23 ^ num33;
        ulong num35 = num27 ^ num33;
        ulong num36 = (ulong) (((long) num24 ^ (long) num28) & 281474976645120L);
        ulong num37 = num24 ^ num36;
        ulong num38 = num28 ^ num36;
        ulong num39 = (ulong) (((long) num25 ^ (long) num29) & 1099511627520L);
        ulong num40 = num25 ^ num39;
        ulong num41 = num29 ^ num39;
        ulong num42 = (ulong) (((long) num31 ^ (long) num37) & -281470681808896L);
        ulong num43 = num31 ^ num42;
        ulong num44 = num37 ^ num42;
        ulong num45 = (ulong) (((long) num34 ^ (long) num40) & 72056494543077120L);
        ulong num46 = num34 ^ num45;
        ulong num47 = num40 ^ num45;
        ulong num48 = (ulong) (((long) num32 ^ (long) num38) & -281470681808896L);
        ulong num49 = num32 ^ num48;
        ulong num50 = num38 ^ num48;
        ulong num51 = (ulong) (((long) num35 ^ (long) num41) & 72056494543077120L);
        ulong num52 = num35 ^ num51;
        ulong num53 = num41 ^ num51;
        ulong num54 = (ulong) (((long) num43 ^ (long) num46) & -71777214294589696L);
        ulong num55 = num43 ^ num54;
        ulong num56 = num46 ^ num54;
        ulong num57 = (ulong) (((long) num44 ^ (long) num47) & -71777214294589696L);
        ulong num58 = num44 ^ num57;
        ulong num59 = num47 ^ num57;
        ulong num60 = (ulong) (((long) num49 ^ (long) num52) & -71777214294589696L);
        ulong num61 = num49 ^ num60;
        ulong num62 = num52 ^ num60;
        ulong num63 = (ulong) (((long) num50 ^ (long) num53) & -71777214294589696L);
        ulong num64 = num50 ^ num63;
        ulong num65 = num53 ^ num63;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num55;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num56;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2] = num58;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3] = num59;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[4] = num61;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[5] = num62;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[6] = num64;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[7] = num65;
        break;
      default:
        throw new InvalidOperationException("unsupported block length: only 128/256/512 are allowed");
    }
  }

  private void \u206E​‏‮⁪⁮⁯‍​‪‭⁯​‫‏⁯‭‪‏⁫⁫‍‫‍⁭‏⁭‬‏‏​⁮‍​‌​⁫⁮‫⁯‮()
  {
    switch (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮)
    {
      case 2:
        ulong num1 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num2 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num3 = (ulong) (((long) num1 ^ (long) num2) & -4294967296L);
        ulong num4 = num1 ^ num3;
        ulong num5 = num2 ^ num3;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num4;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num5;
        break;
      case 4:
        ulong num6 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num7 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num8 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2];
        ulong num9 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3];
        ulong num10 = (ulong) (((long) num6 ^ (long) num7) & -281470681808896L);
        ulong num11 = num6 ^ num10;
        ulong num12 = num7 ^ num10;
        ulong num13 = (ulong) (((long) num8 ^ (long) num9) & -281470681808896L);
        ulong num14 = num8 ^ num13;
        ulong num15 = num9 ^ num13;
        ulong num16 = (ulong) (((long) num11 ^ (long) num14) & -4294967296L);
        ulong num17 = num11 ^ num16;
        ulong num18 = num14 ^ num16;
        ulong num19 = (ulong) (((long) num12 ^ (long) num15) & 281474976645120L);
        ulong num20 = num12 ^ num19;
        ulong num21 = num15 ^ num19;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num17;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num20;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2] = num18;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3] = num21;
        break;
      case 8:
        ulong num22 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0];
        ulong num23 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1];
        ulong num24 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2];
        ulong num25 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3];
        ulong num26 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[4];
        ulong num27 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[5];
        ulong num28 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[6];
        ulong num29 = this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[7];
        ulong num30 = (ulong) (((long) num22 ^ (long) num23) & -71777214294589696L);
        ulong num31 = num22 ^ num30;
        ulong num32 = num23 ^ num30;
        ulong num33 = (ulong) (((long) num24 ^ (long) num25) & -71777214294589696L);
        ulong num34 = num24 ^ num33;
        ulong num35 = num25 ^ num33;
        ulong num36 = (ulong) (((long) num26 ^ (long) num27) & -71777214294589696L);
        ulong num37 = num26 ^ num36;
        ulong num38 = num27 ^ num36;
        ulong num39 = (ulong) (((long) num28 ^ (long) num29) & -71777214294589696L);
        ulong num40 = num28 ^ num39;
        ulong num41 = num29 ^ num39;
        ulong num42 = (ulong) (((long) num31 ^ (long) num34) & -281470681808896L);
        ulong num43 = num31 ^ num42;
        ulong num44 = num34 ^ num42;
        ulong num45 = (ulong) (((long) num32 ^ (long) num35) & 72056494543077120L);
        ulong num46 = num32 ^ num45;
        ulong num47 = num35 ^ num45;
        ulong num48 = (ulong) (((long) num37 ^ (long) num40) & -281470681808896L);
        ulong num49 = num37 ^ num48;
        ulong num50 = num40 ^ num48;
        ulong num51 = (ulong) (((long) num38 ^ (long) num41) & 72056494543077120L);
        ulong num52 = num38 ^ num51;
        ulong num53 = num41 ^ num51;
        ulong num54 = (ulong) (((long) num43 ^ (long) num49) & -4294967296L);
        ulong num55 = num43 ^ num54;
        ulong num56 = num49 ^ num54;
        ulong num57 = (ulong) (((long) num46 ^ (long) num52) & 72057594021150720L);
        ulong num58 = num46 ^ num57;
        ulong num59 = num52 ^ num57;
        ulong num60 = (ulong) (((long) num44 ^ (long) num50) & 281474976645120L);
        ulong num61 = num44 ^ num60;
        ulong num62 = num50 ^ num60;
        ulong num63 = (ulong) (((long) num47 ^ (long) num53) & 1099511627520L);
        ulong num64 = num47 ^ num63;
        ulong num65 = num53 ^ num63;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[0] = num55;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[1] = num58;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[2] = num61;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[3] = num64;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[4] = num56;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[5] = num59;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[6] = num62;
        this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[7] = num65;
        break;
      default:
        throw new InvalidOperationException("unsupported block length: only 128/256/512 are allowed");
    }
  }

  private void \u202D​⁭‬‍⁪⁮⁪‍‪‍⁫⁭⁭‍‌⁯‬‮⁭‎‪‫⁮‏⁬‎‪​⁭‮‬‭​‫⁯‏⁭⁮⁭‮(int _param1)
  {
    ulong[] numArray = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[_param1];
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] += numArray[index];
  }

  private void \u200F⁪‭‪⁭⁬⁭‌‫‌‭‪‏‭‌‍‏‎‮⁬⁫⁬⁮‫‫⁬⁮‪⁫​‫⁯⁪‬‬⁮‪‎⁮‬‮(int _param1)
  {
    ulong[] numArray = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[_param1];
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] -= numArray[index];
  }

  private void \u200C‍‫‪⁫⁭⁬⁪​⁯‏‌‬‭⁬⁮⁬⁯‌⁯‪⁮‎​⁪‬‌​‬‏‍⁭‭​‍‪‍‫‪⁪‮(int _param1)
  {
    ulong[] numArray = this.\u200B‫‬⁭⁫‌‮‎‬‌‮‪‬‏⁫‮⁭‎‫‮⁮⁯‫‬‬⁮​⁫⁮‎‎⁯⁮⁪‬‬‍⁮​‭‮[_param1];
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] ^= numArray[index];
  }

  private static ulong \u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮(ulong _param0)
  {
    ulong num1 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(_param0);
    ulong num2 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(8, _param0) ^ _param0;
    ulong num3 = num2 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(16, num2) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(48, _param0);
    ulong num4 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202C‭‍⁪⁫⁪‍⁪‭‏​⁫‮‫‌⁭⁫‫‏‪‪⁫⁮⁭​⁬⁮⁭‍‏‎‭⁭⁮‮‭⁯‮‮‬‮(num3 ^ _param0 ^ num1);
    return num3 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(32, num4) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(40, num1) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(48, num1);
  }

  private void \u200F⁯‌‌⁪‭‎⁫‬‮‍‍​‬‪⁬⁫‏‪‬‫‍⁮⁫⁭‭⁪⁪⁭‏‮‭‪‍‭⁬‏‬‍‏‮()
  {
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮(this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index]);
  }

  private static ulong \u202A‮​‮‪​⁭‎‏‏⁭‮‮⁪‎‬‎⁭⁫‏‏⁪​​‌⁫‭​⁮‌⁫⁮‎⁪‪‭‏⁫‪⁯‮(ulong _param0)
  {
    ulong num1 = _param0;
    ulong num2 = num1 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(8, num1);
    ulong num3 = num2 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(32, num2) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(48, _param0);
    ulong num4 = num3 ^ _param0;
    ulong num5 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(48, _param0);
    ulong num6 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(56, _param0);
    ulong num7 = num4 ^ num6;
    ulong num8 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(56, num4) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num7);
    ulong num9 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(16, num4) ^ _param0 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(40, \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num8) ^ _param0);
    ulong num10 = num4 ^ num5 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num9);
    ulong num11 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(16, num3) ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num10);
    ulong num12 = num4 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(24, _param0) ^ num5 ^ num6 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num11);
    ulong num13 = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(32, num4) ^ _param0 ^ num6 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(num12);
    return num3 ^ \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(\u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(40, num13));
  }

  private void \u206F‪‬‬⁭⁮‭​‍‮‮⁮⁪‬⁪⁬‪⁬‏⁬‏‏‌‪⁯‮‮‭‏‬⁪⁫‌⁭​⁬‍⁫‮‬‮()
  {
    for (int index = 0; index < this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮; ++index)
      this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index] = \u206D⁯‎⁪‏⁮⁪‎⁫⁫⁫‫‬‪⁬⁯⁪​‌‬​‮⁫‎⁫⁯‪⁬‭‎​‫‮‬‭‮⁯‭‭‪‮.\u202A‮​‮‪​⁭‎‏‏⁭‮‮⁪‎‬‎⁭⁫‏‏⁪​​‌⁫‭​⁮‌⁫⁮‎⁪‪‭‏⁫‪⁯‮(this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮[index]);
  }

  private static ulong \u206B‏⁫‬⁭⁭‍​⁬​⁮‬‌‭‭‫⁮‮⁯‮​‮‏⁫‭⁬⁫‬‍‍‮⁯‫⁯⁯⁮​‫‏⁫‮(ulong _param0) => (ulong) (((long) _param0 & 9187201950435737471L) << 1 ^ (long) ((_param0 & 9259542123273814144UL) >> 7) * 29L);

  private static ulong \u202C‭‍⁪⁫⁪‍⁪‭‏​⁫‮‫‌⁭⁫‫‏‪‪⁫⁮⁭​⁬⁮⁭‍‏‎‭⁭⁮‮‭⁯‮‮‬‮(ulong _param0) => (ulong) (((long) _param0 & 4557430888798830399L) << 2 ^ (long) ((_param0 & 9259542123273814144UL) >> 6) * 29L ^ (long) ((_param0 & 4629771061636907072UL) >> 6) * 29L);

  private static ulong \u206A​​⁭‍‬‫‍⁫⁭‮‫⁫‌‏‏​⁯‌‏⁪⁮‎‪‏⁬‫⁪‌‍⁮⁫⁯‫‮⁭⁭‍​‮‮(int _param0, ulong _param1) => _param1 >> _param0 | _param1 << -_param0;

  private void \u206C‮‍‭​⁯‪‌‍‫⁬⁫​⁪‏⁯‭‪⁯⁭⁪⁭‏‎​‬​‭⁬⁪⁬⁭‍⁭⁭‪‫‭‌⁬‮(ulong[] _param1, ulong[] _param2)
  {
    switch (this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮)
    {
      case 2:
        ulong num1 = _param1[0];
        ulong num2 = _param1[1];
        _param2[0] = num1 >> 56 | num2 << 8;
        _param2[1] = num2 >> 56 | num1 << 8;
        break;
      case 4:
        ulong num3 = _param1[0];
        ulong num4 = _param1[1];
        ulong num5 = _param1[2];
        ulong num6 = _param1[3];
        _param2[0] = num4 >> 24 | num5 << 40;
        _param2[1] = num5 >> 24 | num6 << 40;
        _param2[2] = num6 >> 24 | num3 << 40;
        _param2[3] = num3 >> 24 | num4 << 40;
        break;
      case 8:
        ulong num7 = _param1[0];
        ulong num8 = _param1[1];
        ulong num9 = _param1[2];
        ulong num10 = _param1[3];
        ulong num11 = _param1[4];
        ulong num12 = _param1[5];
        ulong num13 = _param1[6];
        ulong num14 = _param1[7];
        _param2[0] = num9 >> 24 | num10 << 40;
        _param2[1] = num10 >> 24 | num11 << 40;
        _param2[2] = num11 >> 24 | num12 << 40;
        _param2[3] = num12 >> 24 | num13 << 40;
        _param2[4] = num13 >> 24 | num14 << 40;
        _param2[5] = num14 >> 24 | num7 << 40;
        _param2[6] = num7 >> 24 | num8 << 40;
        _param2[7] = num8 >> 24 | num9 << 40;
        break;
      default:
        throw new InvalidOperationException("unsupported block length: only 128/256/512 are allowed");
    }
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "DSTU7624";

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => this.\u200C‌⁫‬⁬⁮​⁭‮‬⁯‮‬‏​‭‍‬‬‏⁭⁪‌‮‬⁬‌‎⁪⁫​‏‏⁯‪‬⁪​‫⁯‮ << 3;

  public virtual bool \u200F‍‌⁭‬⁯‪‌‍‮‬‏​⁭‪‬‌​‬‍‭‮‬​⁭‬‎‬‌‪‬⁪‏​‎‎​‮⁬‎‮ => false;

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮() => Array.Clear((Array) this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮, 0, this.\u206F‮‎⁭⁪‬​⁬‍‬‫‌⁮‍‮‭​‌‏⁭⁫⁯⁬​‫⁭‏‏‍⁬‍‪⁫⁭‬‪⁮⁬⁬⁭‮.Length);
}
