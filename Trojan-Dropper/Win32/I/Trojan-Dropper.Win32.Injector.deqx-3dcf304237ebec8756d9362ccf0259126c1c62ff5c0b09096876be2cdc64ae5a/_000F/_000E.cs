// Decompiled with JetBrains decompiler
// Type: .
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0008;
using \u000F;
using ClassLibrary1.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace \u000F
{
  [StandardModule]
  [DebuggerNonUserCode]
  [HideModuleName]
  [CompilerGenerated]
  internal sealed class \u000E
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    static \u000E()
    {
      // ISSUE: type reference
      \u0003.\u0002(\u0087\u0005.\u0092\u0004(__typeref (\u000E)));
      bool flag = false;
      Assembly assembly = \u009F\u0005.\u008F\u0006();
      // ISSUE: reference to a compiler-generated method
      \u000E.\u0002(assembly.Location, true, ref flag);
      // ISSUE: reference to a compiler-generated field
      if (!flag || !\u0089\u0004.\u007E\u0097\u0002((object) \u0019\u0004.\u007E\u0084\u0006((object) assembly), \u000E.\u0001(8449)))
      {
        // ISSUE: reference to a compiler-generated field
        throw new SecurityException(\u000E.\u0001(8474));
      }
    }

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
    [return: MarshalAs(UnmanagedType.U1)]
    private static extern bool \u0002([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.U1)] bool _param1, [MarshalAs(UnmanagedType.U1)] ref bool _param2);

    [HelpKeyword("My.Settings")]
    internal static MySettings Settings
    {
      get
      {
        try
        {
          MySettings mySettings = MySettings.Default;
          return mySettings;
        }
        catch (Exception ex)
        {
          MySettings mySettings;
          MySettings o1 = mySettings;
          \u0004.\u0002(ex, (object) o1);
          throw;
        }
      }
    }
  }
}
