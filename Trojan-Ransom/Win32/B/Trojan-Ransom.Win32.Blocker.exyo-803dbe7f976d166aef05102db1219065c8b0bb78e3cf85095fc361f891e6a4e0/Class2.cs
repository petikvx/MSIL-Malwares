// Decompiled with JetBrains decompiler
// Type: insomnia.Class2
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace insomnia
{
  public class Class2 : IDisposable
  {
    private Class2.Interface4 Field3;
    private Class2.Interface3 Field2;
    private string Field1 = "";

    public Class2()
    {
      if (Environment.OSVersion.Platform == PlatformID.Win32NT)
        this.Field3 = (Class2.Interface4) new Class2.Class3();
      else
        this.Field2 = (Class2.Interface3) new Class2.Class3();
    }

    public Class2(string linkFile)
      : this()
    {
      this.Method3(linkFile);
    }

    ~Class2() => this.Dispose();

    public void Dispose()
    {
      if (this.Field3 != null)
      {
        Marshal.ReleaseComObject((object) this.Field3);
        this.Field3 = (Class2.Interface4) null;
      }
      if (this.Field2 == null)
        return;
      Marshal.ReleaseComObject((object) this.Field2);
      this.Field2 = (Class2.Interface3) null;
    }

    public string Property67
    {
      get => this.Field1;
      set => this.Field1 = value;
    }

    public string Property66
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        int A_3 = 0;
        if (this.Field2 == null)
          this.Field3.Method5(A_1, A_1.Capacity, out A_3);
        else
          this.Field2.Method5(A_1, A_1.Capacity, out A_3);
        return A_1.ToString();
      }
      set
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        int A_3 = 0;
        if (this.Field2 == null)
          this.Field3.Method5(A_1, A_1.Capacity, out A_3);
        else
          this.Field2.Method5(A_1, A_1.Capacity, out A_3);
        if (this.Field2 == null)
          this.Field3.Method4(value, A_3);
        else
          this.Field2.Method4(value, A_3);
      }
    }

    public int Property65
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        int A_3 = 0;
        if (this.Field2 == null)
          this.Field3.Method5(A_1, A_1.Capacity, out A_3);
        else
          this.Field2.Method5(A_1, A_1.Capacity, out A_3);
        return A_3;
      }
      set
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        int A_3 = 0;
        if (this.Field2 == null)
          this.Field3.Method5(A_1, A_1.Capacity, out A_3);
        else
          this.Field2.Method5(A_1, A_1.Capacity, out A_3);
        if (this.Field2 == null)
          this.Field3.Method4(A_1.ToString(), value);
        else
          this.Field2.Method4(A_1.ToString(), value);
      }
    }

    public string Property64
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        if (this.Field2 == null)
        {
          Class2.Struct3 A_3 = new Class2.Struct3();
          this.Field3.Method18(A_1, A_1.Capacity, ref A_3, 2U);
        }
        else
        {
          Class2.Struct2 A_3 = new Class2.Struct2();
          this.Field2.Method18(A_1, A_1.Capacity, ref A_3, 2U);
        }
        return A_1.ToString();
      }
      set
      {
        if (this.Field2 == null)
          this.Field3.Method1(value);
        else
          this.Field2.Method1(value);
      }
    }

    public string Property63
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        if (this.Field2 == null)
          this.Field3.Method13(A_1, A_1.Capacity);
        else
          this.Field2.Method13(A_1, A_1.Capacity);
        return A_1.ToString();
      }
      set
      {
        if (this.Field2 == null)
          this.Field3.Method12(value);
        else
          this.Field2.Method12(value);
      }
    }

    public string Property62
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(1024, 1024);
        if (this.Field2 == null)
          this.Field3.Method15(A_1, A_1.Capacity);
        else
          this.Field2.Method15(A_1, A_1.Capacity);
        return A_1.ToString();
      }
      set
      {
        if (this.Field2 == null)
          this.Field3.Method14(value);
        else
          this.Field2.Method14(value);
      }
    }

    public string Property61
    {
      get
      {
        StringBuilder A_1 = new StringBuilder(260, 260);
        if (this.Field2 == null)
          this.Field3.Method11(A_1, A_1.Capacity);
        else
          this.Field2.Method11(A_1, A_1.Capacity);
        return A_1.ToString();
      }
      set
      {
        if (this.Field2 == null)
          this.Field3.Method10(value);
        else
          this.Field2.Method10(value);
      }
    }

    public Class2.Enum5 Property60
    {
      get
      {
        uint A_1 = 0;
        if (this.Field2 == null)
          this.Field3.Method7(out A_1);
        else
          this.Field2.Method7(out A_1);
        return (Class2.Enum5) A_1;
      }
      set
      {
        if (this.Field2 == null)
          this.Field3.Method6((uint) value);
        else
          this.Field2.Method6((uint) value);
      }
    }

    public void Method5() => this.Method4(this.Field1);

    public void Method4(string A_1)
    {
      if (this.Field2 == null)
      {
        ((Class2.Interface2) this.Field3).Method3(A_1, true);
        this.Field1 = A_1;
      }
      else
      {
        ((Class2.Interface2) this.Field2).Method3(A_1, true);
        this.Field1 = A_1;
      }
    }

    public void Method3(string A_1) => this.Method1(A_1, IntPtr.Zero, Class2.Enum3.Field9 | Class2.Enum3.Field6, (ushort) 1);

    public void Method2(string A_1, IntPtr A_2, Class2.Enum3 A_3) => this.Method1(A_1, A_2, A_3, (ushort) 1);

    public void Method1(string A_1, IntPtr A_2, Class2.Enum3 A_3, ushort A_4)
    {
      uint A_2_1 = (A_3 & Class2.Enum3.Field6) != Class2.Enum3.Field6 ? (uint) A_3 : (uint) (A_3 | (Class2.Enum3) ((int) A_4 << 16));
      if (this.Field2 == null)
      {
        ((Class2.Interface2) this.Field3).Method4(A_1, 0U);
        this.Field3.Method2(A_2, A_2_1);
        this.Field1 = A_1;
      }
      else
      {
        ((Class2.Interface2) this.Field2).Method4(A_1, 0U);
        this.Field2.Method2(A_2, A_2_1);
        this.Field1 = A_1;
      }
    }

    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    private struct Struct1
    {
      public uint Field2;
      public uint Field1;
    }

    [StructLayout(LayoutKind.Sequential, Pack = 4)]
    private struct Struct2
    {
      public uint Field10;
      public Class2.Struct1 Field9;
      public Class2.Struct1 Field8;
      public Class2.Struct1 Field7;
      public uint Field6;
      public uint Field5;
      public uint Field4;
      public uint Field3;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)]
      public string Field2;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 14)]
      public string Field1;
    }

    [StructLayout(LayoutKind.Sequential, Pack = 4, CharSet = CharSet.Unicode)]
    private struct Struct3
    {
      public uint Field10;
      public Class2.Struct1 Field9;
      public Class2.Struct1 Field8;
      public Class2.Struct1 Field7;
      public uint Field6;
      public uint Field5;
      public uint Field4;
      public uint Field3;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 260)]
      public string Field2;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 14)]
      public string Field1;
    }

    [Guid("00021401-0000-0000-C000-000000000046")]
    [ClassInterface(ClassInterfaceType.None)]
    [ComImport]
    private class Class3
    {
      [MethodImpl(MethodImplOptions.InternalCall, MethodCodeType = MethodCodeType.Runtime)]
      public extern Class3();
    }

    private enum Enum2 : uint
    {
      Field2 = 1,
      Field1 = 2,
    }

    [Flags]
    public enum Enum3 : uint
    {
      Field9 = 2,
      Field8 = 128, // 0x00000080
      Field7 = 64, // 0x00000040
      Field6 = 1,
      Field5 = 257, // 0x00000101
      Field4 = 8,
      Field3 = 16, // 0x00000010
      Field2 = 32, // 0x00000020
      Field1 = 4,
    }

    [Flags]
    private enum Enum4 : uint
    {
      Field14 = 0,
      Field13 = 1,
      Field12 = Field13, // 0x00000001
      Field11 = 2,
      Field10 = Field11 | Field12, // 0x00000003
      Field9 = Field10, // 0x00000003
      Field8 = 4,
      Field7 = Field8 | Field12, // 0x00000005
      Field6 = Field8 | Field11, // 0x00000006
      Field5 = Field6 | Field12, // 0x00000007
      Field4 = 8,
      Field3 = Field4 | Field12, // 0x00000009
      Field2 = Field4 | Field11, // 0x0000000A
      Field1 = Field2, // 0x0000000A
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("0000010C-0000-0000-C000-000000000046")]
    [ComImport]
    private interface Interface1
    {
      [MethodImpl(MethodImplOptions.PreserveSig)]
      void Method1(out Guid A_1);
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("0000010B-0000-0000-C000-000000000046")]
    [ComImport]
    private interface Interface2
    {
      [MethodImpl(MethodImplOptions.PreserveSig)]
      void Method6(out Guid A_1);

      void Method5();

      void Method4([MarshalAs(UnmanagedType.LPWStr)] string A_1, uint A_2);

      void Method3([MarshalAs(UnmanagedType.LPWStr)] string A_1, [MarshalAs(UnmanagedType.Bool)] bool A_2);

      void Method2([MarshalAs(UnmanagedType.LPWStr)] string A_1);

      void Method1([MarshalAs(UnmanagedType.LPWStr)] out string A_1);
    }

    [Guid("000214EE-0000-0000-C000-000000000046")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [ComImport]
    private interface Interface3
    {
      void Method18([MarshalAs(UnmanagedType.LPStr), Out] StringBuilder A_1, int A_2, ref Class2.Struct2 A_3, uint A_4);

      void Method17(out IntPtr A_1);

      void Method16(IntPtr A_1);

      void Method15([MarshalAs(UnmanagedType.LPStr), Out] StringBuilder A_1, int A_2);

      void Method14([MarshalAs(UnmanagedType.LPStr)] string A_1);

      void Method13([MarshalAs(UnmanagedType.LPStr), Out] StringBuilder A_1, int A_2);

      void Method12([MarshalAs(UnmanagedType.LPStr)] string A_1);

      void Method11([MarshalAs(UnmanagedType.LPStr), Out] StringBuilder A_1, int A_2);

      void Method10([MarshalAs(UnmanagedType.LPStr)] string A_1);

      void Method9(out short A_1);

      void Method8(short A_1);

      void Method7(out uint A_1);

      void Method6(uint A_1);

      void Method5([MarshalAs(UnmanagedType.LPStr), Out] StringBuilder A_1, int A_2, out int A_3);

      void Method4([MarshalAs(UnmanagedType.LPStr)] string A_1, int A_2);

      void Method3([MarshalAs(UnmanagedType.LPStr)] string A_1, uint A_2);

      void Method2(IntPtr A_1, uint A_2);

      void Method1([MarshalAs(UnmanagedType.LPStr)] string A_1);
    }

    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    [Guid("000214F9-0000-0000-C000-000000000046")]
    [ComImport]
    private interface Interface4
    {
      void Method18([MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder A_1, int A_2, ref Class2.Struct3 A_3, uint A_4);

      void Method17(out IntPtr A_1);

      void Method16(IntPtr A_1);

      void Method15([MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder A_1, int A_2);

      void Method14([MarshalAs(UnmanagedType.LPWStr)] string A_1);

      void Method13([MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder A_1, int A_2);

      void Method12([MarshalAs(UnmanagedType.LPWStr)] string A_1);

      void Method11([MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder A_1, int A_2);

      void Method10([MarshalAs(UnmanagedType.LPWStr)] string A_1);

      void Method9(out short A_1);

      void Method8(short A_1);

      void Method7(out uint A_1);

      void Method6(uint A_1);

      void Method5([MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder A_1, int A_2, out int A_3);

      void Method4([MarshalAs(UnmanagedType.LPWStr)] string A_1, int A_2);

      void Method3([MarshalAs(UnmanagedType.LPWStr)] string A_1, uint A_2);

      void Method2(IntPtr A_1, uint A_2);

      void Method1([MarshalAs(UnmanagedType.LPWStr)] string A_1);
    }

    public enum Enum5 : uint
    {
      Field3 = 1,
      Field1 = 3,
      Field2 = 7,
    }

    private class Class4
    {
      [DllImport("Shell32", CharSet = CharSet.Auto)]
      internal static extern int ExtractIconEx(
        [MarshalAs(UnmanagedType.LPTStr)] string A_0,
        int A_1,
        IntPtr[] A_2,
        IntPtr[] A_3,
        int A_4);

      [DllImport("user32")]
      internal static extern int DestroyIcon(IntPtr A_0);
    }
  }
}
