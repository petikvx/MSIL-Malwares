// Decompiled with JetBrains decompiler
// Type: 706729402040.021428543015
// Assembly: 341658236064, Version=3.1.2.23007, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 307D4BC7-4605-49A1-A696-CC8CC5C1D6BD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-9d52a7814f157b00620b7405701cf26d9edc2be1ad2620905db66c87fcee811b.exe

using \u003706729402040;
using \u003785552231676;
using \u003896890811494;
using System;
using System.Globalization;

namespace \u003706729402040
{
  public abstract class \u003021428543015 : \u003281886728672
  {
    private static readonly string[] \u003416615469584 = new string[1]
    {
      ""
    };

    public string \u003706157989564 { get; set; }

    public string \u003177076750786 { get; set; }

    public string[] \u003928131047775 { get; set; }

    internal \u003021428543015()
      : base()
    {
    }

    protected override void ExecuteCore()
    {
      if (string.IsNullOrEmpty(this.\u003706157989564) && string.IsNullOrEmpty(this.\u003177076750786))
        throw new ArgumentException("Either FormattedText or ResourceName must be specified.");
      if (!string.IsNullOrEmpty(this.\u003706157989564) && !string.IsNullOrEmpty(this.\u003177076750786))
        throw new ArgumentException("Only one of FormattedText and ResourceName can be specified.");
      string message;
      if (!string.IsNullOrEmpty(this.\u003177076750786))
      {
        if (this.\u003928131047775 == null || this.\u003928131047775.Length == 0)
          this.\u003928131047775 = \u003021428543015.\u003416615469584;
        message = string.Format((IFormatProvider) CultureInfo.CurrentCulture, \u003064471764011.\u003976363670377.GetString(this.\u003177076750786, \u003064471764011.\u003495102257049), (object[]) this.\u003928131047775);
      }
      else
        message = this.\u003706157989564;
      this.LogMessage(message);
    }

    protected abstract void LogMessage(string message);
  }
}
