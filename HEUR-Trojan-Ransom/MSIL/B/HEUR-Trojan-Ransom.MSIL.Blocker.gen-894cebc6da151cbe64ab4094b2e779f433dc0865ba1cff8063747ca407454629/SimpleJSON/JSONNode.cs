// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 477238597;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 141700793)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1117714499 ^ 1594458128;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -94184580;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1369285942)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1558454862 ^ 778305662;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = 79567007;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1921437712)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1656248472 ^ 1203817255;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1619862936;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 20515162)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1724871018 ^ -1464441365;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * -1687477815 ^ 978190209;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1220828372;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -535411092)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * 1408846608 ^ 895770308;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 2035757496;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1191314561)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1066181115 ^ -860647834;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 59954228;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1858165179)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1437521542 ^ 1936821499;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 1472395902 ^ 959695588;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -912536832;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2084001732)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -700741477 ^ -475658905;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = -1970162730;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2147280973)) % 4U)
          {
            case 0:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -1418833876 ^ -435607176;
              continue;
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1027308865 ^ -130366894;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1623839866;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 60907209)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1472809172 ^ -584323451;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1024840971;
        bool flag;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1504304949)) % 8U)
          {
            case 0:
              asInt = 0;
              num1 = -1348269350;
              continue;
            case 1:
              num1 = (int) num2 * -7008881 ^ -1597582458;
              continue;
            case 3:
              int num3 = flag ? 1594358677 : (num3 = 1353124026);
              num1 = num3 ^ (int) num2 * -1718344293;
              continue;
            case 4:
              goto label_1;
            case 5:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -1765352805 ^ -1880801769;
              continue;
            case 6:
              result = 0;
              num1 = (int) num2 * 1538737306 ^ 615933106;
              continue;
            case 7:
              asInt = result;
              num1 = (int) num2 * -273883638 ^ 1175413983;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1373504971;
        float result;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1726786793)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -178969432 ^ -1453602518;
              continue;
            case 2:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‍⁫‍⁬‬‪⁭⁭⁯​‌⁭‬⁪‍‬‏⁭‎​‫⁯‮‪‮​‮‬‪​​⁯‮​‫​⁯‌⁫‮(), out result);
              num1 = (int) num2 * 2123848313 ^ -1965434034;
              continue;
            case 3:
              int num3 = !flag ? -471596210 : (num3 = -2004708667);
              num1 = num3 ^ (int) num2 * 1162248186;
              continue;
            case 4:
              asFloat = result;
              num1 = (int) num2 * 441629093 ^ -1840411907;
              continue;
            case 6:
              num1 = (int) num2 * 830401191 ^ -46941832;
              continue;
            case 7:
              asFloat = 0.0f;
              num1 = -1162130906;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 288060301;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 721549561)) % 7U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 1117397614 ^ 1993492233;
              continue;
            case 1:
              int num3 = !flag ? 1132163651 : (num3 = 935505085);
              num1 = num3 ^ (int) num2 * -96535790;
              continue;
            case 2:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1787913911 ^ -1760167329;
              continue;
            case 3:
              num1 = (int) num2 * 452328524 ^ -1295259897;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = 1736076999;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 143282101;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1675524741)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1346157265 ^ 787884675;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 590659093;
        bool asBool;
        bool result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2106808908)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = false;
              num1 = (int) num2 * 190314886 ^ 1886039687;
              continue;
            case 2:
              asBool = result;
              num1 = (int) num2 * 1867280515 ^ 909768157;
              continue;
            case 4:
              asBool = !JSONNode.\u202D‪‬‍​⁮⁪⁮‭‬‮‭‎‫‪‭‮‮‭‍⁪‍‬‪‭‬‭​‌‬⁪‏⁬‎⁮⁯‮​‮⁭‮(this.Value);
              num1 = 695563890;
              continue;
            case 5:
              int num3 = bool.TryParse(this.Value, out result) ? 866440102 : (num3 = 1506685272);
              num1 = num3 ^ (int) num2 * 1877169312;
              continue;
            case 6:
              num1 = (int) num2 * -1285357226 ^ -1071928325;
              continue;
            case 7:
              num1 = (int) num2 * -657510209 ^ 1145452126;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -705328188;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2113978540)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1291316787 ^ 973305191;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject => this as JSONClass;

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1798873126;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1604749911)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 158480090 ^ -1680216760;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -867196489 ^ 2124915948;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1891809848;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 1279736294)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 17656415 ^ 1209482747;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            str2 = d.Value;
            break;
          case 4:
            num1 = (int) num2 * -1406965854 ^ -74127851;
            continue;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = 607125368;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 1740709405;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 530633982)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1478684417 ^ -875271134;
            continue;
          case 1:
            goto label_3;
          case 3:
            flag = true;
            num1 = (int) num2 * 768971488 ^ -2087006370;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag = (object) a == b;
            num1 = 111930914;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag;
label_4:
      num3 = 0;
label_5:
      num1 = num3 != 0 ? 922128069 : (num1 = 614406931);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 302707776;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2633618)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1976256223 ^ 252041223;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 354633654;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 560326113)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * -910716872 ^ -789306953;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u200D⁪‍‮‌‌‪‏⁬⁫‫​⁫‮⁮‫‪‎‭‪‪‌‫⁮⁯‌‎‌​⁬‬⁬⁭‭‮⁪‮‬⁭‪‮();
label_1:
      int num1 = -803054173;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1122859073)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1205303579 ^ -1825083424;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -1515413439;
      char ch1;
      char ch2;
      char ch3;
      int num2;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -295864243)) % 29U)
        {
          case 0:
            goto label_1;
          case 1:
label_30:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\t");
            num1 = -322157864;
            continue;
          case 2:
            num1 = (int) num3 * -14284206 ^ -1278556507;
            continue;
          case 3:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\\"");
            num1 = -322157864;
            continue;
          case 4:
            int num4;
            num1 = num4 = ch2 != '"' ? -1713838065 : (num4 = -1303700309);
            continue;
          case 5:
            num1 = (int) num3 * -1310030188 ^ 885172751;
            continue;
          case 6:
            ch2 = ch1;
            num1 = (int) num3 * -1357197840 ^ 1360216474;
            continue;
          case 7:
            num1 = (int) num3 * 1386305300 ^ 138400508;
            continue;
          case 8:
            num2 = 0;
            num1 = (int) num3 * -962440607 ^ 1866237530;
            continue;
          case 9:
            switch (ch2)
            {
              case '\b':
                goto label_4;
              case '\t':
                goto label_30;
              case '\n':
                goto label_21;
              case '\v':
                goto label_26;
              case '\f':
                goto label_23;
              case '\r':
                goto label_5;
              default:
                num1 = (int) num3 * 1527405800 ^ 1143492662;
                continue;
            }
          case 10:
            ch1 = ch3;
            num1 = (int) num3 * -519484124 ^ 375434213;
            continue;
          case 11:
label_5:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\r");
            num1 = -322157864;
            continue;
          case 12:
            num1 = (int) num3 * -2109081830 ^ 1517095346;
            continue;
          case 13:
            ch3 = JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(str2, num2);
            num1 = -1578092453;
            continue;
          case 14:
            ++num2;
            num1 = (int) num3 * -1163129828 ^ -1605246092;
            continue;
          case 15:
            num1 = -659220492;
            continue;
          case 16:
            num1 = (int) num3 * 280181199 ^ 1136311333;
            continue;
          case 17:
label_4:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\b");
            num1 = -699020156;
            continue;
          case 18:
            str3 = str1;
            num1 = (int) num3 * -1267649121 ^ -450055283;
            continue;
          case 19:
            num1 = (int) num3 * -1844024374 ^ -1164166406;
            continue;
          case 20:
            num1 = (int) num3 * -1852007131 ^ -1103421407;
            continue;
          case 21:
            str2 = aText;
            num1 = (int) num3 * -627183139 ^ -1059471254;
            continue;
          case 22:
            int num5;
            num1 = num5 = ch2 != '\\' ? -513773886 : (num5 = -494688002);
            continue;
          case 23:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u200F⁭⁮‮‫‪‭⁭‎⁮⁬⁫‫⁯‍‬​⁮‫‭⁬‎‭‬‮​‏‏‭⁬‌‍‎⁯⁮⁮⁪‪‍⁯‮(str2) ? -1433193259 : (num6 = -1603257252);
            continue;
          case 25:
label_23:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\f");
            num1 = -322157864;
            continue;
          case 26:
label_21:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\n");
            num1 = -322157864;
            continue;
          case 27:
label_26:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, ch3.ToString());
            num1 = -322157864;
            continue;
          case 28:
            str1 = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(str1, "\\\\");
            num1 = -322157864;
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -627309300;
      char ch1;
      string aKey;
      JSONNode jsonNode1;
      bool flag1;
      bool flag2;
      string aItem;
      char ch2;
      bool flag3;
      char ch3;
      bool flag4;
      bool flag5;
      int num2;
      bool flag6;
      Stack<JSONNode> jsonNodeStack;
      bool flag7;
      string s;
      bool flag8;
      JSONNode jsonNode2;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      char ch4;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -921062485)) % 159U)
        {
          case 0:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 342335086 ^ -1939476843;
            continue;
          case 1:
            flag15 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1067083688 ^ 761052447;
            continue;
          case 2:
            int num4 = ch1 > ' ' ? 1984273785 : (num4 = 1789032387);
            num1 = num4 ^ (int) num3 * 1662246269;
            continue;
          case 3:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -962180044 ^ -1399430388;
            continue;
          case 4:
label_83:
            s = JSONNode.\u202C‌⁮‫‮‬​‎‎⁫‬⁭​⁮‏​‏‫‬‏‎⁮‍⁫‫⁫‎⁮‌⁬‏⁮‫⁬‎‏​‫⁭⁬‮(aJSON, num2 + 1, 4);
            num1 = -311192859;
            continue;
          case 5:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 260583427 ^ 303912782;
            continue;
          case 6:
            num1 = (int) num3 * 216162709 ^ 1080682772;
            continue;
          case 7:
            num1 = (int) num3 * -190143869 ^ 1220792370;
            continue;
          case 8:
          case 43:
          case 51:
          case 92:
          case 105:
label_108:
            ++num2;
            num1 = -793309767;
            continue;
          case 9:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1595822440 ^ -783019775;
            continue;
          case 10:
            int num5;
            num1 = num5 = ch3 != 'f' ? -961313853 : (num5 = -1726381410);
            continue;
          case 11:
            flag6 = !flag6;
            num1 = -94114261;
            continue;
          case 12:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1885819070 ^ -1646752030;
            continue;
          case 13:
            int num6 = flag4 ? 753930504 : (num6 = 1041006979);
            num1 = num6 ^ (int) num3 * 807474287;
            continue;
          case 14:
            int num7 = flag6 ? 1678790242 : (num7 = 2067075090);
            num1 = num7 ^ (int) num3 * -160917945;
            continue;
          case 15:
            ch1 = JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2);
            int num8;
            num1 = num8 = ch1 <= ',' ? -1289954342 : (num8 = -890820292);
            continue;
          case 16:
            num1 = (int) num3 * 658081829 ^ -1995831574;
            continue;
          case 17:
            flag6 = false;
            num1 = (int) num3 * -26018604 ^ 1729796351;
            continue;
          case 18:
            num1 = (int) num3 * 1790132021 ^ -1179136971;
            continue;
          case 19:
            num1 = (int) num3 * 579431176 ^ 1953720770;
            continue;
          case 20:
            num1 = (int) num3 * 1137577047 ^ 1633095131;
            continue;
          case 21:
            num1 = (int) num3 * 1320953717 ^ 1889960880;
            continue;
          case 22:
            flag5 = JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aItem, "");
            num1 = (int) num3 * 174177145 ^ -720624527;
            continue;
          case 23:
            switch (ch1)
            {
              case '\t':
                goto label_113;
              case '\n':
              case '\r':
                goto label_108;
              case '\v':
              case '\f':
                goto label_32;
              default:
                num1 = (int) num3 * -651679227 ^ 493555087;
                continue;
            }
          case 24:
            int num9;
            num1 = num9 = ch1 != ' ' ? -647300142 : (num9 = -2051642163);
            continue;
          case 25:
label_48:
            int num10;
            num1 = num10 = flag6 ? -420485909 : (num10 = -335358092);
            continue;
          case 26:
            jsonNodeStack.Pop();
            num1 = -876876571;
            continue;
          case 27:
            num1 = (int) num3 * -991788922 ^ -1466786367;
            continue;
          case 28:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1897466528 ^ -281827172;
            continue;
          case 29:
            int num11 = flag9 ? 2070290396 : (num11 = 1200217973);
            num1 = num11 ^ (int) num3 * 1110340421;
            continue;
          case 30:
            int num12;
            num1 = num12 = jsonNodeStack.Count != 0 ? -1333122388 : (num12 = -1874156929);
            continue;
          case 31:
            num1 = (int) num3 * -1522716621 ^ 1693940444;
            continue;
          case 32:
            ch4 = ch2;
            num1 = (int) num3 * 2142150916 ^ -1674439436;
            continue;
          case 33:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 996436124 ^ 1859598389;
            continue;
          case 34:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -878288584 ^ -530173300;
            continue;
          case 35:
            num1 = (int) num3 * -586920434 ^ 1105234287;
            continue;
          case 36:
            num1 = (int) num3 * -1739360124 ^ 200129752;
            continue;
          case 37:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * -624873225 ^ 1815845022;
            continue;
          case 38:
            num1 = (int) num3 * -1999075369 ^ 214317332;
            continue;
          case 39:
            num1 = (int) num3 * -1680394825 ^ 1167920607;
            continue;
          case 40:
            switch (ch3)
            {
              case 'r':
                goto label_78;
              case 's':
                goto label_6;
              case 't':
                goto label_124;
              case 'u':
                goto label_83;
              default:
                num1 = -1204687558;
                continue;
            }
          case 41:
            num1 = (int) num3 * 418384674 ^ -221124082;
            continue;
          case 42:
            int num13;
            num1 = num13 = JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aKey, "") ? -2068275594 : (num13 = -1949335733);
            continue;
          case 44:
            int num14 = !flag5 ? -1322021144 : (num14 = -1122630153);
            num1 = num14 ^ (int) num3 * -1009453720;
            continue;
          case 45:
            num1 = (int) num3 * -138266810 ^ -1058951475;
            continue;
          case 46:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -566822322 ^ -969649654;
            continue;
          case 47:
            aKey = "";
            num1 = -97766500;
            continue;
          case 48:
            aKey = JSONNode.\u200C⁮⁪⁮‏⁮‌⁭‮⁫‍⁯⁭⁯‎​⁬⁫‎‍⁯‎⁫‭‌‎‍‎‍⁭‫​⁮​‪‌‍‮‮⁮‮(aKey);
            num1 = (int) num3 * 1177466927 ^ 1800731521;
            continue;
          case 49:
            ch2 = JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2);
            num1 = (int) num3 * -373345759 ^ -1735196266;
            continue;
          case 50:
            num1 = (int) num3 * 1306226226 ^ 1057814901;
            continue;
          case 52:
            int num15 = ch3 == 'b' ? -1863250814 : (num15 = -1836706224);
            num1 = num15 ^ (int) num3 * -1177177846;
            continue;
          case 53:
            num2 = 0;
            num1 = (int) num3 * 1191782583 ^ 559798100;
            continue;
          case 54:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * -1402952356 ^ 251097926;
            continue;
          case 55:
            aItem = "";
            num1 = (int) num3 * -48991693 ^ -376965903;
            continue;
          case 56:
            aKey = "";
            num1 = -1375517312;
            continue;
          case 57:
            num1 = (int) num3 * -728626023 ^ 740075777;
            continue;
          case 58:
            int num16 = flag7 ? 456252003 : (num16 = 1054429333);
            num1 = num16 ^ (int) num3 * -1056965825;
            continue;
          case 59:
            int num17 = flag11 ? -38291258 : (num17 = -409957468);
            num1 = num17 ^ (int) num3 * -456620238;
            continue;
          case 60:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1293704640 ^ -550324682;
            continue;
          case 61:
            num1 = (int) num3 * 572380029 ^ -173809725;
            continue;
          case 63:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 14825509 ^ 119014151;
            continue;
          case 64:
label_19:
            ++num2;
            flag7 = flag6;
            num1 = -1261863635;
            continue;
          case 65:
            num1 = (int) num3 * -554190121 ^ 1745132226;
            continue;
          case 66:
            goto label_1;
          case 67:
            aItem = "";
            num1 = (int) num3 * 1695753479 ^ 1297686909;
            continue;
          case 68:
            int num18;
            num1 = num18 = !flag6 ? -160909302 : (num18 = -71794606);
            continue;
          case 69:
            int num19;
            num1 = num19 = ch1 == '"' ? -569137750 : (num19 = -1907402072);
            continue;
          case 70:
            int num20 = !flag12 ? 1104774980 : (num20 = 259856909);
            num1 = num20 ^ (int) num3 * 52310030;
            continue;
          case 71:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            flag13 = jsonNode1 != (object) null;
            num1 = -620019701;
            continue;
          case 72:
            num1 = (int) num3 * 1161557088 ^ -470194706;
            continue;
          case 73:
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 2094384362 ^ -1364933975;
            continue;
          case 74:
            int num21 = !flag15 ? 1297646977 : (num21 = 170446839);
            num1 = num21 ^ (int) num3 * 1852666602;
            continue;
          case 75:
label_6:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, ch2.ToString());
            num1 = -1993296607;
            continue;
          case 76:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1580709967 ^ -2054651110;
            continue;
          case 77:
            int num22 = flag8 ? 2093832044 : (num22 = 1708467899);
            num1 = num22 ^ (int) num3 * 1509143084;
            continue;
          case 78:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -2032479409 ^ 41103736;
            continue;
          case 79:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1822811370 ^ -16905289;
            continue;
          case 80:
            num1 = (int) num3 * -704104045 ^ 442490112;
            continue;
          case 81:
            int num23;
            num1 = num23 = ch1 != '{' ? -1068610801 : (num23 = -2067965878);
            continue;
          case 82:
            ch3 = ch4;
            num1 = (int) num3 * -1056350203 ^ 1062091859;
            continue;
          case 83:
label_124:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, "\t");
            num1 = -1897446837;
            continue;
          case 84:
            int num24 = flag2 ? 1487717193 : (num24 = 2042107889);
            num1 = num24 ^ (int) num3 * 305965327;
            continue;
          case 85:
            aKey = JSONNode.\u200C⁮⁪⁮‏⁮‌⁭‮⁫‍⁯⁭⁯‎​⁬⁫‎‍⁯‎⁫‭‌‎‍‎‍⁭‫​⁮​‪‌‍‮‮⁮‮(aKey);
            num1 = (int) num3 * -230589793 ^ -840806781;
            continue;
          case 86:
            num1 = (int) num3 * -883439026 ^ -1237318708;
            continue;
          case 87:
            jsonNode2 = jsonNode1;
            num1 = -1787507691;
            continue;
          case 88:
            num1 = (int) num3 * -781713920 ^ 637192864;
            continue;
          case 89:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -2075987522 ^ 2032971138;
            continue;
          case 90:
            int num25 = !flag1 ? 1323616218 : (num25 = 1281357650);
            num1 = num25 ^ (int) num3 * -1509155653;
            continue;
          case 91:
            aKey = "";
            aItem = "";
            num1 = -558745626;
            continue;
          case 93:
            aItem = "";
            num1 = (int) num3 * -1114020336 ^ 1025427175;
            continue;
          case 94:
            flag8 = JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aKey, "");
            num1 = -1548787755;
            continue;
          case 95:
            goto label_92;
          case 96:
            num1 = (int) num3 * -1987062419 ^ -145448351;
            continue;
          case 97:
            num1 = (int) num3 * -2036175662 ^ -1033374015;
            continue;
          case 98:
            goto label_55;
          case 99:
            aKey = aItem;
            num1 = -900238316;
            continue;
          case 100:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -545064449 ^ -694962809;
            continue;
          case 101:
label_32:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = -1140877437;
            continue;
          case 102:
            num1 = (int) num3 * 2098022834 ^ -366245275;
            continue;
          case 103:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, "\n");
            num1 = -1897446837;
            continue;
          case 104:
            switch (ch1)
            {
              case '[':
                goto label_80;
              case '\\':
                goto label_19;
              case ']':
                goto label_48;
              default:
                num1 = -428621044;
                continue;
            }
          case 106:
            int num26 = flag3 ? -952043091 : (num26 = -413065077);
            num1 = num26 ^ (int) num3 * 291880554;
            continue;
          case 107:
            num1 = (int) num3 * -1999537486 ^ 577567583;
            continue;
          case 108:
            flag14 = jsonNode1 != (object) null;
            num1 = (int) num3 * 198427670 ^ 1467322533;
            continue;
          case 109:
            num1 = (int) num3 * -681979485 ^ 1379063469;
            continue;
          case 110:
            num1 = (int) num3 * -1691418109 ^ -1869301342;
            continue;
          case 111:
            num1 = (int) num3 * -29867884 ^ -1369459844;
            continue;
          case 112:
            int num27 = flag10 ? -115348584 : (num27 = -972103865);
            num1 = num27 ^ (int) num3 * 1964686172;
            continue;
          case 113:
            int num28;
            num1 = num28 = num2 >= JSONNode.\u200F⁭⁮‮‫‪‭⁭‎⁮⁬⁫‫⁯‍‬​⁮‫‭⁬‎‭‬‮​‏‏‭⁬‌‍‎⁯⁮⁮⁪‪‍⁯‮(aJSON) ? -24780945 : (num28 = -93014973);
            continue;
          case 114:
label_113:
            int num29;
            num1 = num29 = flag6 ? -447581587 : (num29 = -1890944859);
            continue;
          case 115:
            num1 = (int) num3 * 1226030032 ^ 1578724124;
            continue;
          case 116:
            num1 = (int) num3 * -1726635588 ^ -1327858104;
            continue;
          case 117:
            num1 = (int) num3 * 1275335876 ^ -159246892;
            continue;
          case 118:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -297385728 ^ -1065366535;
            continue;
          case 119:
            int num30 = flag14 ? -1195572654 : (num30 = -275444496);
            num1 = num30 ^ (int) num3 * 1231925937;
            continue;
          case 120:
            int num31;
            num1 = num31 = ch1 != '}' ? -1659452455 : (num31 = -2140389219);
            continue;
          case 121:
            num1 = -2125812920;
            continue;
          case 122:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, "\f");
            num1 = -1897446837;
            continue;
          case 123:
            int num32;
            num1 = num32 = !JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aItem, "") ? -1657953741 : (num32 = -83057118);
            continue;
          case 124:
            int num33;
            num1 = num33 = flag6 ? -7525002 : (num33 = -956249470);
            continue;
          case 125:
            int num34 = ch3 <= 'f' ? -2097922394 : (num34 = -846981862);
            num1 = num34 ^ (int) num3 * -973397375;
            continue;
          case 126:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, JSONNode.\u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1709162225 ^ -1507207105;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = -1657953741;
            continue;
          case 128:
label_80:
            flag12 = flag6;
            num1 = -1306405030;
            continue;
          case 129:
            num1 = (int) num3 * -1254415212 ^ 231717238;
            continue;
          case 130:
            int num35;
            num1 = num35 = ch1 != ',' ? -824861726 : (num35 = -1518860985);
            continue;
          case 131:
            flag9 = JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aKey, "");
            num1 = -1085931436;
            continue;
          case 132:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1971728371 ^ 1450131838;
            continue;
          case 133:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -680860566;
            continue;
          case 134:
            flag3 = JSONNode.\u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮(aKey, "");
            num1 = -672450815;
            continue;
          case 135:
            num1 = (int) num3 * 49202107 ^ 1106593908;
            continue;
          case 136:
            num1 = (int) num3 * 547269137 ^ 70718383;
            continue;
          case 137:
            aKey = JSONNode.\u200C⁮⁪⁮‏⁮‌⁭‮⁫‍⁯⁭⁯‎​⁬⁫‎‍⁯‎⁫‭‌‎‍‎‍⁭‫​⁮​‪‌‍‮‮⁮‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -2028729140 ^ -227858040;
            continue;
          case 138:
            num1 = (int) num3 * -1470784033 ^ 521184665;
            continue;
          case 139:
            int num36;
            num1 = num36 = ch1 > ']' ? -2103495448 : (num36 = -1801849778);
            continue;
          case 140:
            num1 = -254720014;
            continue;
          case 141:
            num1 = (int) num3 * -1388691071 ^ -930677369;
            continue;
          case 142:
            int num37 = flag13 ? 919180319 : (num37 = 76954660);
            num1 = num37 ^ (int) num3 * -514317087;
            continue;
          case 143:
            int num38 = ch1 != ':' ? 249383506 : (num38 = 596680958);
            num1 = num38 ^ (int) num3 * -1415557657;
            continue;
          case 144:
            num1 = (int) num3 * -1858090222 ^ 2067848471;
            continue;
          case 145:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, "\b");
            num1 = -639970602;
            continue;
          case 146:
label_78:
            aItem = JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮(aItem, "\r");
            num1 = -1897446837;
            continue;
          case 147:
            num1 = (int) num3 * 1900374519 ^ 1148944148;
            continue;
          case 148:
            num1 = (int) num3 * 1606636767 ^ 1588938025;
            continue;
          case 149:
            aItem = "";
            num1 = (int) num3 * -1371108855 ^ -430758100;
            continue;
          case 150:
            num1 = -277044348;
            continue;
          case 151:
            aKey = "";
            num1 = -225964175;
            continue;
          case 152:
            flag11 = flag6;
            num1 = -1664112542;
            continue;
          case 153:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -922327134 ^ 306706558;
            continue;
          case 154:
            num1 = -696032145;
            continue;
          case 155:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1175164112 ^ -612602060;
            continue;
          case 156:
            num1 = (int) num3 * -1856960647 ^ 551329649;
            continue;
          case 157:
            int num39;
            num1 = num39 = ch3 == 'n' ? -553316663 : (num39 = -491792680);
            continue;
          case 158:
            num1 = (int) num3 * 1655171921 ^ 1620188792;
            continue;
          default:
            goto label_159;
        }
      }
label_55:
      throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("JSON Parse: Quotation marks seems to be messed up.");
label_92:
      throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("JSON Parse: Too many closing brackets");
label_159:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
      this.Serialize(JSONNode.\u200B‬‏‪⁬​⁬‮‮⁬⁬‎‌‏‮‏‬⁭​⁯⁫⁬‪‍‮‪‏‭‬‮⁮⁪‫⁭‮‏⁯‌‌⁬‮(aData));
label_1:
      int num1 = -757241397;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2003826456)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -2034333541 ^ -659946754;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206C‪‌⁮‫⁫⁯‭⁯‭‭​​⁫‏⁪‮⁮‫⁪⁪‎⁪‍⁮⁮⁫⁭‬⁭⁯‏‎​‍⁮‭⁯⁪⁬‮(JSONNode.\u202E‬‪‏⁬‏⁯‍⁬⁬⁫‎‎‌‭‏‬‌‌⁬‎‫‮⁮⁫‌​​⁪‍​‫⁪‌⁯⁫‪‮⁮‎‮((FileSystemInfo) JSONNode.\u206A‫⁫‪⁪⁯‪​⁪‬‫‭‍⁪⁮​⁭‍⁪‬‏‬‭‮⁬⁪⁭‭⁪‮‫‭⁭⁭‫⁪‎‍​⁫‮(JSONNode.\u202D‪‌‪‬‎‮⁯‮‫‮⁬‏⁭‏‭⁬⁫⁮⁮‍‌‬‭⁬⁫‭⁬​⁬⁫⁫‮‏⁪‫‌⁫⁬⁮‮(aFileName))));
      FileStream aData = JSONNode.\u206A⁫‏‏‍‎‍⁯‍‏⁭‍‫⁬‌‌⁬​⁬​‌‏⁪‪​‏​⁬⁬‪‬‭‎⁫⁫‬‏‭‍‮‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1699093458;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 461506703)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 418423142 ^ 1255936369;
                continue;
              case 1:
                JSONNode.\u200C⁯​⁭‪‭⁬​‫⁭‏⁪⁬​⁭⁯‌⁪‏‏⁪‎‪‭⁫⁯⁫⁬⁮‫‬‌‫‏⁯‫⁫‍‍‭‮((IDisposable) aData);
                num1 = (int) num2 * 1360805265 ^ 1140523282;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206B‪⁪‎‏​​⁬‪‪‬‌⁯‪⁬‭⁭‬‭⁭‍‍‬⁮​‎‎⁬‌‮⁮‮⁫⁪‌⁫⁭​⁬⁫‮();
      string base64;
      try
      {
label_2:
        int num1 = -674041622;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1703364981)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1437408724 ^ -576237412;
              continue;
            case 3:
              JSONNode.\u202A‏⁮⁫⁮⁫​‬‪⁮‌⁪‌⁯‬⁬‍​‍‮‍⁪‏​⁯⁪‬⁬​‫⁯‫​⁬​‮⁪‌‍‫‮((Stream) aData, 0L);
              base64 = JSONNode.\u206E‌‬‮⁫‭‫‌⁫⁯‍‍⁯‫⁮​‫⁭⁫⁯‎‫⁬⁫⁫‮⁯⁫‮‬‍‏⁫⁫‬⁬⁫‫‮‫‮(JSONNode.\u206E‭⁫‮‭‍⁪‏‫‌⁯​⁪‏‏​⁭‎‎‫‌⁬‌⁮‭⁮‫⁮⁮‫‏‭​‭‎‫⁮‍⁮‍‮(aData));
              num1 = (int) num2 * -850287981 ^ 1247233228;
              continue;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -267002642;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1703364981)) % 4U)
            {
              case 1:
                JSONNode.\u200C⁯​⁭‪‭⁬​‫⁭‏⁪⁬​⁭⁯‌⁪‏‏⁪‎‪‭⁫⁯⁫⁬⁮‫‬‌‫‏⁯‫⁫‍‍‭‮((IDisposable) aData);
                num3 = (int) num4 * 947565366 ^ 112649450;
                continue;
              case 2:
                goto label_7;
              case 3:
                num3 = (int) num4 * -738239936 ^ 1292153151;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 136714436;
      JSONClass jsonClass;
      JSONNode jsonNode;
      int num2;
      JSONArray jsonArray;
      int num3;
      int num4;
      JSONBinaryTag jsonBinaryTag;
      int num5;
      bool flag;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1701801286)) % 32U)
        {
          case 0:
            num1 = (int) num6 * 1125151830 ^ -88391854;
            continue;
          case 1:
            num5 = JSONNode.\u206D⁫⁪‪‫‎‭‫⁪‎‬‭‮‬‬​⁯‮⁭‎‬‫‏‬‎‭‪‎‌⁮‭‪⁬⁬‬‬⁪‪⁯‌‮(aReader);
            jsonArray = new JSONArray();
            num3 = 0;
            num1 = (int) num6 * -16340944 ^ 338827136;
            continue;
          case 2:
            jsonBinaryTag = (JSONBinaryTag) JSONNode.\u202E⁬⁪‌‍⁯​‮‭‮​‍‍⁪‭‌‎⁭‫‍‌⁪​⁯‍⁮‍‌⁯⁭‎‍‏⁬‏‫⁮⁯​⁬‮(aReader);
            switch (jsonBinaryTag)
            {
              case JSONBinaryTag.Array:
                goto label_24;
              case JSONBinaryTag.Class:
                goto label_30;
              case JSONBinaryTag.Value:
                goto label_23;
              case JSONBinaryTag.IntValue:
                goto label_17;
              case JSONBinaryTag.DoubleValue:
                goto label_19;
              case JSONBinaryTag.BoolValue:
                goto label_31;
              case JSONBinaryTag.FloatValue:
                goto label_11;
              default:
                num1 = (int) num6 * 882796845 ^ 529955143;
                continue;
            }
          case 3:
label_19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‎⁭⁯⁪‪⁬‪‍​‫‬‬⁪‬⁬‫⁮⁭‏‏⁮‏‭​‌‍‏‭⁮‍⁫⁫⁪‌‬‬⁭‫⁭‮(aReader));
            num1 = 2061040934;
            continue;
          case 4:
            ++num2;
            num1 = (int) num6 * 1275420569 ^ 1565696821;
            continue;
          case 5:
label_31:
            num1 = 1530777748;
            continue;
          case 6:
            jsonClass = new JSONClass();
            num2 = 0;
            num1 = (int) num6 * -2016501319 ^ -703872312;
            continue;
          case 7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‌​⁬‭‌‭‬⁬⁪‪​⁫‎‏‏‮⁫⁮‍‎⁪‌‎‭⁫‌‫‪⁮⁪‪‌⁬⁪‍‮‎⁭⁮‮(aReader));
            num1 = (int) num6 * 1308580434 ^ 1684352258;
            continue;
          case 8:
            num1 = 2101610805;
            continue;
          case 9:
label_23:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁪⁭‫‏‌‪⁭‍‌‏‬‫⁬‫⁯‏‬‌‬⁮⁮‬⁯‭​⁬‏‬‎‮⁭‍​⁮‬‮⁬‭‮(aReader));
            num1 = 28131090;
            continue;
          case 10:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1670578240 ^ 377638290;
            continue;
          case 11:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num3;
            num1 = 1567723952;
            continue;
          case 12:
label_30:
            num4 = JSONNode.\u206D⁫⁪‪‫‎‭‫⁪‎‬‭‮‬‬​⁯‮⁭‎‬‫‏‬‎‭‪‎‌⁮‭‪⁬⁬‬‬⁪‪⁯‌‮(aReader);
            num1 = 1887589024;
            continue;
          case 13:
            num1 = (int) num6 * 1075962921 ^ 712674023;
            continue;
          case 14:
            num1 = (int) num6 * 1575095602 ^ 1494813918;
            continue;
          case 15:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 858289587 ^ -1004904725;
            continue;
          case 16:
            num1 = (int) num6 * 2035190398 ^ -1013305998;
            continue;
          case 17:
label_17:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁫⁪‪‫‎‭‫⁪‎‬‭‮‬‬​⁯‮⁭‎‬‫‏‬‎‭‪‎‌⁮‭‪⁬⁬‬‬⁪‪⁯‌‮(aReader));
            num1 = 28131090;
            continue;
          case 18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁮⁫⁬⁫⁪⁮⁬⁬‪‭‎⁬‎⁯‫‎‍‬‬⁪‫⁯‍‪⁫‫‮⁪‪⁭‫‫⁪‏‪⁫‌⁬‌‮(aReader));
            num1 = (int) num6 * -316057772 ^ 888067907;
            continue;
          case 19:
            string aKey = JSONNode.\u200C⁪⁭‫‏‌‪⁭‍‌‏‬‫⁬‫⁯‏‬‌‬⁮⁮‬⁯‭​⁬‏‬‎‮⁭‍​⁮‬‮⁬‭‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 753537633 ^ -1843166885;
            continue;
          case 21:
label_11:
            num1 = 474903649;
            continue;
          case 22:
            flag = num3 < num5;
            num1 = 1634343448;
            continue;
          case 23:
            int num7;
            num1 = num7 = num2 < num4 ? 1233182798 : (num7 = 217557132);
            continue;
          case 24:
            num1 = (int) num6 * -1204691335 ^ 602223177;
            continue;
          case 25:
            goto label_21;
          case 26:
            num1 = (int) num6 * -1215654746 ^ 673610382;
            continue;
          case 27:
            num1 = (int) num6 * -12311941 ^ 1574697954;
            continue;
          case 28:
label_24:
            num1 = 367688167;
            continue;
          case 29:
            num1 = 1898329535;
            continue;
          case 30:
            int num8 = !flag ? -1548579249 : (num8 = -450675637);
            num1 = num8 ^ (int) num6 * -1164742035;
            continue;
          case 31:
            goto label_1;
          default:
            goto label_34;
        }
      }
label_21:
      throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮(JSONNode.\u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag.ToString()));
label_34:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‬⁭⁭⁭⁬‍⁫⁪⁪⁯‌‍⁪⁪‬‏‬‌‭⁮⁫‫⁪⁭‏⁯‍‍‪⁪‭‪‪‬‪‌‬​‎‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1435700045;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1769773457)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -1073956815 ^ -489042146;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 1029990191;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1769773457)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -120370944 ^ -962589571;
                continue;
              case 2:
                JSONNode.\u200C⁯​⁭‪‭⁬​‫⁭‏⁪⁬​⁭⁯‌⁪‏‏⁪‎‪‭⁫⁯⁫⁬⁮‫‬‌‫‏⁯‫⁫‍‍‭‮((IDisposable) aReader);
                num3 = (int) num4 * 527329859 ^ -97541966;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202C⁪‌‭‪⁫‪⁮‍‪‎‍‌⁬⁮‪⁪‫‫‎‮‫‏⁪‌⁭⁮‭⁮‫‏‪⁬‮⁪⁭‫‭​⁮‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1548089837;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 704596672)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200C⁯​⁭‪‭⁬​‫⁭‏⁪⁬​⁭⁯‌⁪‏‏⁪‎‪‭⁫⁯⁫⁬⁮‫‬‌‫‏⁯‫⁫‍‍‭‮((IDisposable) aData);
                num1 = (int) num2 * 450660503 ^ 1409744180;
                continue;
              case 3:
                num1 = (int) num2 * 1319957910 ^ 1330416800;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -2024800210;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -752304268)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONNode.\u202A‏⁮⁫⁮⁫​‬‪⁮‌⁪‌⁯‬⁬‍​‍‮‍⁪‏​⁯⁪‬⁬​‫⁯‫​⁬​‮⁪‌‍‫‮((Stream) aData, 0L);
            num1 = (int) num2 * -775666106 ^ -686192256;
            continue;
          case 2:
            aData = JSONNode.\u200E⁪‌⁯‎⁮‌‪​⁯‫‍⁪‌⁬‫⁯‭⁮‌⁭⁬‫⁮⁭‭⁮⁮⁬⁫​⁪‌⁮⁬‏‬‌‎‫‮(JSONNode.\u202E‫⁬​⁮‫‏​‏‪‌‫⁪‫⁫⁪⁪‬‏‎‪‌‏⁪‌‫⁬⁪⁬‬‍⁮‌​⁪⁫‎‎​‏‮(aBase64));
            num1 = (int) num2 * -1557405719 ^ 1538971300;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1808485985 ^ 752355526;
            continue;
          case 4:
            num1 = (int) num2 * 2000416388 ^ 1246555881;
            continue;
          case 5:
            num1 = (int) num2 * 1335180647 ^ -635026779;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u202E‍⁫‍⁬‬‪⁭⁭⁯​‌⁭‬⁪‍‬‏⁭‎​‫⁯‮‪‮​‮‬‪​​⁯‮​‫​⁯‌⁫‮() => CultureInfo.InvariantCulture;

    static bool \u202D‪‬‍​⁮⁪⁮‭‬‮‭‎‫‪‭‮‮‭‍⁪‍‬‪‭‬‭​‌‬⁪‏⁬‎⁮⁯‮​‮⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200D⁪‍‮‌‌‪‏⁬⁫‫​⁫‮⁮‫‪‎‭‪‪‌‫⁮⁯‌‎‌​⁬‬⁬⁭‭‮⁪‮‬⁭‪‮() => base.GetHashCode();

    static char \u206A⁪⁮‫‏⁭⁪‏‬⁯‪‭⁬​‬‌‏‪‪⁫‎⁬‬‬⁮‫‪⁯‍‪‫⁭‎⁬⁭⁭‌⁫⁭⁭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200D‎⁪‎⁭‍⁮‪‍‪‭‮⁭‫⁮‌⁬​‬‫​‮‮‏⁭‌‬⁬⁬‪‬‭‍‍​‏​​⁯‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F⁭⁮‮‫‪‭⁭‎⁮⁬⁫‫⁯‍‬​⁮‫‭⁬‎‭‬‮​‏‏‭⁬‌‍‎⁯⁮⁮⁪‪‍⁯‮([In] string obj0) => obj0.Length;

    static string \u200C⁮⁪⁮‏⁮‌⁭‮⁫‍⁯⁭⁯‎​⁬⁫‎‍⁯‎⁫‭‌‎‍‎‍⁭‫​⁮​‪‌‍‮‮⁮‮([In] string obj0) => obj0.Trim();

    static bool \u206E⁪‪‌⁫‏​⁫⁫‍​‍‏‪‪⁬⁭‫⁭⁯‮‏⁯‪​‭‎⁯‌‏‎​‎‪‏‌‭‮‌‭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200E‌⁫​‮‍‏⁪‍​‬⁪​‬⁫‌​‭‭​‮⁪‬​⁬⁬‮‭‌​‫‫‫‭⁮‭‫⁬‎‫‮([In] string obj0) => new Exception(obj0);

    static string \u202C‌⁮‫‮‬​‎‎⁫‬⁭​⁮‏​‏‫‬‏‎⁮‍⁫‫⁫‎⁮‌⁬‏⁮‫⁬‎‏​‫⁭⁬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200B‬‏‪⁬​⁬‮‮⁬⁬‎‌‏‮‏‬⁭​⁯⁫⁬‪‍‮‪‏‭‬‮⁮⁪‫⁭‮‏⁯‌‌⁬‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202D‪‌‪‬‎‮⁯‮‫‮⁬‏⁭‏‭⁬⁫⁮⁮‍‌‬‭⁬⁫‭⁬​⁬⁫⁫‮‏⁪‫‌⁫⁬⁮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206A‫⁫‪⁪⁯‪​⁪‬‫‭‍⁪⁮​⁭‍⁪‬‏‬‭‮⁬⁪⁭‭⁪‮‫‭⁭⁭‫⁪‎‍​⁫‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202E‬‪‏⁬‏⁯‍⁬⁬⁫‎‎‌‭‏‬‌‌⁬‎‫‮⁮⁫‌​​⁪‍​‫⁪‌⁯⁫‪‮⁮‎‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206C‪‌⁮‫⁫⁯‭⁯‭‭​​⁫‏⁪‮⁮‫⁪⁪‎⁪‍⁮⁮⁫⁭‬⁭⁯‏‎​‍⁮‭⁯⁪⁬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206A⁫‏‏‍‎‍⁯‍‏⁭‍‫⁬‌‌⁬​⁬​‌‏⁪‪​‏​⁬⁬‪‬‭‎⁫⁫‬‏‭‍‮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200C⁯​⁭‪‭⁬​‫⁭‏⁪⁬​⁭⁯‌⁪‏‏⁪‎‪‭⁫⁯⁫⁬⁮‫‬‌‫‏⁯‫⁫‍‍‭‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206B‪⁪‎‏​​⁬‪‪‬‌⁯‪⁬‭⁭‬‭⁭‍‍‬⁮​‎‎⁬‌‮⁮‮⁫⁪‌⁫⁭​⁬⁫‮() => new MemoryStream();

    static void \u202A‏⁮⁫⁮⁫​‬‪⁮‌⁪‌⁯‬⁬‍​‍‮‍⁪‏​⁯⁪‬⁬​‫⁯‫​⁬​‮⁪‌‍‫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206E‭⁫‮‭‍⁪‏‫‌⁯​⁪‏‏​⁭‎‎‫‌⁬‌⁮‭⁮‫⁮⁮‫‏‭​‭‎‫⁮‍⁮‍‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206E‌‬‮⁫‭‫‌⁫⁯‍‍⁯‫⁮​‫⁭⁫⁯‎‫⁬⁫⁫‮⁯⁫‮‬‍‏⁫⁫‬⁬⁫‫‮‫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202E⁬⁪‌‍⁯​‮‭‮​‍‍⁪‭‌‎⁭‫‍‌⁪​⁯‍⁮‍‌⁯⁭‎‍‏⁬‏‫⁮⁯​⁬‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D⁫⁪‪‫‎‭‫⁪‎‬‭‮‬‬​⁯‮⁭‎‬‫‏‬‎‭‪‎‌⁮‭‪⁬⁬‬‬⁪‪⁯‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200C⁪⁭‫‏‌‪⁭‍‌‏‬‫⁬‫⁯‏‬‌‬⁮⁮‬⁯‭​⁬‏‬‎‮⁭‍​⁮‬‮⁬‭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206C‎⁭⁯⁪‪⁬‪‍​‫‬‬⁪‬⁬‫⁮⁭‏‏⁮‏‭​‌‍‏‭⁮‍⁫⁫⁪‌‬‬⁭‫⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F⁮⁫⁬⁫⁪⁮⁬⁬‪‭‎⁬‎⁯‫‎‍‬‬⁪‫⁯‍‪⁫‫‮⁪‪⁭‫‫⁪‏‪⁫‌⁬‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200F‌​⁬‭‌‭‬⁬⁪‪​⁫‎‏‏‮⁫⁮‍‎⁪‌‎‭⁫‌‫‪⁮⁪‪‌⁬⁪‍‮‎⁭⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‬⁭⁭⁭⁬‍⁫⁪⁪⁯‌‍⁪⁪‬‏‬‌‭⁮⁫‫⁪⁭‏⁯‍‍‪⁪‭‪‪‬‪‌‬​‎‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202C⁪‌‭‪⁫‪⁮‍‪‎‍‌⁬⁮‪⁪‫‫‎‮‫‏⁪‌⁭⁮‭⁮‫‏‪⁬‮⁪⁭‫‭​⁮‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202E‫⁬​⁮‫‏​‏‪‌‫⁪‫⁫⁪⁪‬‏‎‪‌‏⁪‌‫⁬⁪⁬‬‍⁮‌​⁪⁫‎‎​‏‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200E⁪‌⁯‎⁮‌‪​⁯‫‍⁪‌⁬‫⁯‭⁮‌⁭⁬‫⁮⁭‭⁮⁮⁬⁫​⁪‌⁮⁬‏‬‌‎‫‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
