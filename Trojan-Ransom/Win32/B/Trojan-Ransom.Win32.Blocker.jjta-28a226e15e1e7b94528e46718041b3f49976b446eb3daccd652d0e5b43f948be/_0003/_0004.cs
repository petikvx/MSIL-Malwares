// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0004;
using \u0007;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0003
{
  internal sealed class \u0004 : \u0008.\u0004
  {
    internal static readonly string \u0001;
    internal static readonly string \u0002;
    private static bool? \u0001;
    [NonSerialized]
    internal static \u000F.\u0001 \u001C;

    public static void \u0001([In] uint obj0)
    {
      \u0003.\u0004 obj1;
      try
      {
        obj1 = new \u0003.\u0004();
        \u0003.\u0004 obj2 = obj1;
        int num = (int) obj0;
        if (false)
          return;
        obj2.\u0001((uint) num);
      }
      catch (Exception ex)
      {
        \u0003.\u0004 obj3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<uint> local = (ValueType) obj0;
        \u0001.\u0003.\u0001(ex, (object) obj3, (object) local);
        throw;
      }
    }

    public static void \u0001([In] string obj0)
    {
      \u0003.\u0004 obj1;
      try
      {
        do
        {
          obj1 = new \u0003.\u0004();
          obj1.\u0001(obj0);
        }
        while (false);
      }
      catch (Exception ex)
      {
        \u0003.\u0004 obj2 = obj1;
        string str = obj0;
        \u0001.\u0003.\u0001(ex, (object) obj2, (object) str);
        throw;
      }
    }

    protected override void \u0001([In] \u000F.\u000F obj0)
    {
      try
      {
        obj0.\u0002();
      }
      catch (Exception ex)
      {
        \u000F.\u000F obj = obj0;
        \u0001.\u0003.\u0001(ex, (object) this, (object) obj);
        throw;
      }
    }

    protected override bool \u0001()
    {
      bool flag;
      try
      {
        flag = \u0003.\u0004.\u0001();
      }
      catch (Exception ex)
      {
        \u0001.\u0003.\u0001(ex, (object) this);
        throw;
      }
      return flag;
    }

    private static bool \u0001()
    {
      bool flag;
      try
      {
        do
        {
          if (!\u0003.\u0004.\u0001.HasValue)
            goto label_3;
label_1:
          continue;
label_3:
          \u0003.\u0004.\u0001();
          goto label_1;
        }
        while (false);
        flag = \u0003.\u0004.\u0001.Value;
      }
      catch (Exception ex)
      {
        \u0001.\u0003.\u0001(ex);
        throw;
      }
      return flag;
    }

    private static void \u0001()
    {
      object obj1;
      RegistryKey registryKey1;
      bool flag;
      string str1;
      try
      {
        do
        {
          registryKey1 = (RegistryKey) null;
          try
          {
            str1 = \u0094\u0002.\u0002\u0005(\u0003.\u0004.\u001C(3094030), \u0003.\u0004.\u0002, \u0003.\u0004.\u001C(3087185), \u0003.\u0004.\u0001);
            registryKey1 = \u001C.\u007E\u0080\u0002((object) Registry.CurrentUser, str1);
            obj1 = \u0005\u0004.\u007E\u0086\u0006((object) registryKey1, \u0003.\u0004.\u001C(3094043));
            if (obj1 == null)
            {
              \u0006\u0004.\u007E\u0087\u0006((object) registryKey1, \u0003.\u0004.\u001C(3094043), (object) bool.FalseString);
              flag = \u0003.\u0004.\u0002();
              \u0007\u0004.\u007E\u0088\u0006((object) registryKey1, \u0003.\u0004.\u001C(3094043), (object) flag.ToString(), RegistryValueKind.String);
              \u0003.\u0004.\u0001 = new bool?(flag);
            }
            else
              \u0003.\u0004.\u0001 = new bool?(\u0008\u0004.\u0089\u0006(obj1));
          }
          catch
          {
            \u0003.\u0004.\u0001 = new bool?(false);
          }
          finally
          {
            if (registryKey1 != null)
              \u0015.\u007E\u008B((object) registryKey1);
          }
        }
        while (false);
      }
      catch (Exception ex)
      {
        RegistryKey registryKey2 = registryKey1;
        string str2 = str1;
        object obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag;
        \u0001.\u0003.\u0001(ex, (object) registryKey2, (object) str2, obj2, (object) local);
        throw;
      }
    }

    private static bool \u0002()
    {
      \u0005 obj1;
      bool flag1;
      bool flag2;
      try
      {
        do
        {
          do
          {
            obj1 = new \u0005();
            try
            {
              int num = (int) \u001F\u0003.\u007E\u0097\u0005((object) obj1);
              flag1 = \u001F\u0003.\u007E\u0098\u0005((object) obj1) == DialogResult.Yes;
            }
            finally
            {
              if (obj1 != null)
                \u0015.\u007E\u008D((object) obj1);
            }
          }
          while (false);
          flag2 = flag1;
        }
        while (false);
      }
      catch (Exception ex)
      {
        \u0005 obj2 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> local = (ValueType) flag1;
        \u0001.\u0003.\u0001(ex, (object) obj2, (object) local);
        throw;
      }
      return flag2;
    }

    static \u0004()
    {
      try
      {
        do
        {
          \u0002.\u0001(typeof (\u0003.\u0004));
        }
        while (false);
        \u0003.\u0004.\u0001 = \u0003.\u0004.\u001C(3089325);
        \u0003.\u0004.\u0002 = \u0003.\u0004.\u001C(3090747);
      }
      catch (Exception ex)
      {
        \u0001.\u0003.\u0001(ex);
        throw;
      }
    }
  }
}
