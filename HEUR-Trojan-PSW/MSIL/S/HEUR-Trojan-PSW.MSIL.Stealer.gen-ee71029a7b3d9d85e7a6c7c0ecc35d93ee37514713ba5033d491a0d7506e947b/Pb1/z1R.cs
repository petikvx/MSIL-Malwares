// Decompiled with JetBrains decompiler
// Type: Pb1.z1R
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using Fe7;
using m5F8;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Pz9;
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Windows.Forms;
using w9J;
using x7X;
using Yg8;
using z0R5;

namespace Pb1
{
  [DesignerGenerated]
  public class z1R : Form
  {
    [AccessedThroughProperty("Ⴐ")]
    private RadioButton ႳႨ;
    [AccessedThroughProperty("Ⴄ")]
    private Button ႳႷ;
    [AccessedThroughProperty("Ⴓ")]
    private Label ႳႰ;
    [AccessedThroughProperty("Ⴀ")]
    private Label ႳႭ;
    [AccessedThroughProperty("Ⴃ")]
    private Label ႳႥ;
    [AccessedThroughProperty("Ⴍ")]
    private Label ႳႤ;
    [AccessedThroughProperty("Ⴅ")]
    private Label ႳႣ;
    [AccessedThroughProperty("Ⴈ")]
    private Label ႳႼ;
    [AccessedThroughProperty("ႰႷ")]
    private Label ႨႳ;
    [AccessedThroughProperty("ႰႳ")]
    private Button ႨႰ;
    public string ႨႭ;
    public string ႨႥ;
    public string ႨႤ;
    private a0X.q5F Ⴅ = new a0X.q5F();

    public z1R()
    {
      this.Shown += new EventHandler(this.Er3);
      this.Load += new EventHandler(this.Rt8);
      this.w5W();
    }

    protected virtual void x2B([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴅ.Ⴗ == null)
          return;
        this.Ⴅ.Ⴗ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void w5W()
    {
      this.Ⴗ = new RadioButton();
      this.Ⴐ = new RadioButton();
      this.Ⴄ = new Button();
      this.Ⴓ = new Label();
      this.Ⴀ = new Label();
      this.Ⴃ = new Label();
      this.Ⴍ = new Label();
      this.Ⴅ = new Label();
      this.Ⴈ = new Label();
      this.Ⴜ = new Label();
      this.ႰႷ = new Label();
      this.ႰႰ = new Label();
      this.ႰႤ = new Label();
      this.ႰႳ = new Button();
      this.SuspendLayout();
      this.Ⴗ.AutoSize = true;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(274, 85);
      this.Ⴗ.Name = "radApproved";
      this.Ⴗ.Size = new Size(98, 21);
      this.Ⴗ.TabIndex = 1;
      this.Ⴗ.TabStop = true;
      this.Ⴗ.Text = "Approved";
      this.Ⴗ.UseVisualStyleBackColor = true;
      this.Ⴐ.AutoSize = true;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.Location = new Point(50, 85);
      this.Ⴐ.Name = "radRejected";
      this.Ⴐ.Size = new Size(93, 21);
      this.Ⴐ.TabIndex = 0;
      this.Ⴐ.TabStop = true;
      this.Ⴐ.Text = "Rejected";
      this.Ⴐ.UseVisualStyleBackColor = true;
      this.Ⴄ.BackColor = Color.SeaGreen;
      this.Ⴄ.Cursor = Cursors.Hand;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴄ.Location = new Point(454, 85);
      this.Ⴄ.Name = "btnUpdate";
      this.Ⴄ.Size = new Size(106, 40);
      this.Ⴄ.TabIndex = 14;
      this.Ⴄ.Text = "&Update";
      this.Ⴄ.UseVisualStyleBackColor = false;
      this.Ⴓ.AutoSize = true;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.Location = new Point(114, 294);
      this.Ⴓ.Name = "Label4";
      this.Ⴓ.Size = new Size(70, 17);
      this.Ⴓ.TabIndex = 13;
      this.Ⴓ.Text = "Duration";
      this.Ⴀ.AutoSize = true;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.Location = new Point(115, 241);
      this.Ⴀ.Name = "Label3";
      this.Ⴀ.Size = new Size(68, 17);
      this.Ⴀ.TabIndex = 12;
      this.Ⴀ.Text = "Reason:";
      this.Ⴃ.AutoSize = true;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.Location = new Point(106, 187);
      this.Ⴃ.Name = "Label2";
      this.Ⴃ.Size = new Size(78, 17);
      this.Ⴃ.TabIndex = 11;
      this.Ⴃ.Text = "People ID";
      this.Ⴍ.AutoSize = true;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(108, 134);
      this.Ⴍ.Name = "Label1";
      this.Ⴍ.Size = new Size(77, 17);
      this.Ⴍ.TabIndex = 10;
      this.Ⴍ.Text = "Leave ID:";
      this.Ⴅ.BackColor = SystemColors.GradientInactiveCaption;
      this.Ⴅ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(270, 24);
      this.Ⴅ.Name = "lblName";
      this.Ⴅ.Size = new Size(130, 38);
      this.Ⴅ.TabIndex = 18;
      this.Ⴈ.BackColor = SystemColors.GradientInactiveCaption;
      this.Ⴈ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.Location = new Point(46, 23);
      this.Ⴈ.Name = "lblID";
      this.Ⴈ.Size = new Size(130, 39);
      this.Ⴈ.TabIndex = 17;
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(270, 134);
      this.Ⴜ.Name = "Label5";
      this.Ⴜ.Size = new Size(57, 17);
      this.Ⴜ.TabIndex = 19;
      this.Ⴜ.Text = "Label5";
      this.ႰႷ.AutoSize = true;
      this.ႰႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႰႷ.Location = new Point(270, 187);
      this.ႰႷ.Name = "Label6";
      this.ႰႷ.Size = new Size(57, 17);
      this.ႰႷ.TabIndex = 20;
      this.ႰႷ.Text = "Label6";
      this.ႰႰ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.ႰႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႰႰ.Location = new Point(270, 222);
      this.ႰႰ.Name = "Label7";
      this.ႰႰ.Size = new Size(392, 59);
      this.ႰႰ.TabIndex = 21;
      this.ႰႰ.Text = "Label7";
      this.ႰႤ.AutoSize = true;
      this.ႰႤ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႰႤ.Location = new Point(270, 294);
      this.ႰႤ.Name = "Label8";
      this.ႰႤ.Size = new Size(57, 17);
      this.ႰႤ.TabIndex = 22;
      this.ႰႤ.Text = "Label8";
      this.ႰႳ.AutoSize = true;
      this.ႰႳ.BackColor = Color.IndianRed;
      this.ႰႳ.Cursor = Cursors.Hand;
      this.ႰႳ.DialogResult = DialogResult.Cancel;
      this.ႰႳ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႰႳ.ForeColor = SystemColors.ControlLightLight;
      this.ႰႳ.Location = new Point(565, 85);
      this.ႰႳ.Margin = new Padding(3, 2, 3, 2);
      this.ႰႳ.Name = "btnExit";
      this.ႰႳ.Size = new Size(97, 40);
      this.ႰႳ.TabIndex = 23;
      this.ႰႳ.Text = "&Exit";
      this.ႰႳ.UseVisualStyleBackColor = false;
      this.AcceptButton = (IButtonControl) this.Ⴄ;
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.CancelButton = (IButtonControl) this.ႰႳ;
      this.ClientSize = new Size(724, 363);
      this.Controls.Add((Control) this.ႰႳ);
      this.Controls.Add((Control) this.ႰႤ);
      this.Controls.Add((Control) this.ႰႰ);
      this.Controls.Add((Control) this.ႰႷ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴍ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Margin = new Padding(3, 2, 3, 2);
      this.Name = "ႭႥ";
      this.Text = "Update_Leave";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual RadioButton Ⴗ
    {
      get => this.Ⴅ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴍ = (object) value as RadioButton;
    }

    internal virtual RadioButton Ⴐ
    {
      get => this.ႳႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႨ = value;
    }

    internal virtual Button Ⴄ
    {
      get => this.ႳႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Rb0);
        ButtonBase ⴓⴗ1 = (ButtonBase) this.ႳႷ;
        if (ⴓⴗ1 is Button)
          ⴓⴗ1.Click -= obj as EventHandler;
        this.ႳႷ = value;
        ButtonBase ⴓⴗ2 = (ButtonBase) this.ႳႷ;
        if (!(ⴓⴗ2 is Button))
          return;
        ⴓⴗ2.Click += (EventHandler) obj;
      }
    }

    internal virtual Label Ⴓ
    {
      get => this.ႳႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႰ = value;
    }

    internal virtual Label Ⴀ
    {
      get => this.ႳႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႭ = value;
    }

    internal virtual Label Ⴃ
    {
      get => this.ႳႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႥ = value;
    }

    internal virtual Label Ⴍ
    {
      get => this.ႳႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႤ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.ႳႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႣ = value;
    }

    internal virtual Label Ⴈ
    {
      get => this.ႳႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႼ = value;
    }

    internal virtual Label Ⴜ
    {
      get => this.Ⴅ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴐ = value;
    }

    internal virtual Label ႰႷ
    {
      get => this.ႨႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႳ = value;
    }

    internal virtual Label ႰႰ
    {
      get => this.Ⴅ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴅ = (object) value as Label;
    }

    internal virtual Label ႰႤ
    {
      get => this.Ⴅ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴓ = (Control) value as Label;
    }

    internal virtual Button ႰႳ
    {
      get => this.ႨႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.k3X);
        IButtonControl ⴈⴐ1 = (IButtonControl) this.ႨႰ;
        if (ⴈⴐ1 is Button)
          (ⴈⴐ1 as Button).Click -= obj as EventHandler;
        this.ႨႰ = value;
        IButtonControl ⴈⴐ2 = (IButtonControl) this.ႨႰ;
        if (!(ⴈⴐ2 is Button))
          return;
        ((Control) ⴈⴐ2).Click += (EventHandler) obj;
      }
    }

    private void m7C()
    {
      this.Ⴜ.Text = "";
      this.ႰႷ.Text = "";
      this.Ⴐ.Checked = true;
      this.ႰႰ.Text = "";
      this.ႰႤ.Text = "";
    }

    private void Er3([In] object obj0, [In] EventArgs obj1)
    {
      this.m7C();
      this.Ⴈ.Text = Ec63.Ⴅ;
      this.Ⴅ.Text = Ec63.Ⴀ;
      this.m7C();
      Table<w2M> ⴍ = new Tt1().Ⴍ;
      Expression expression = (Expression) Expression.Parameter(typeof (w2M), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<w2M, bool>> predicate = Expression.Lambda<Func<w2M, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (w2M.Go6))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (z1R)), FieldInfo.GetFieldFromHandle(__fieldref (z1R.ႨႥ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), expression as ParameterExpression);
      object obj = (object) ⴍ.FirstOrDefault<w2M>(predicate);
      if (!(obj is w2M))
      {
        int num = (int) MessageBox.Show("Customer not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        this.Ⴜ.Text = (obj as w2M).Ⴍ;
        this.ႰႷ.Text = ((w2M) obj).Ⴐ;
        this.ႰႰ.Text = (obj as w2M).Ⴅ;
        this.ႰႤ.Text = (obj as w2M).Ⴀ.ToString();
        ISerializable serializable = (ISerializable) new Font("Times New Roman", 12f, FontStyle.Bold);
        Color brown = Color.Brown;
        this.Ⴜ.Font = serializable as Font;
        this.Ⴜ.ForeColor = brown;
        this.ႰႷ.Font = (Font) serializable;
        this.ႰႷ.ForeColor = brown;
        this.ႰႰ.Font = (Font) serializable;
        this.ႰႰ.ForeColor = brown;
        this.ႰႤ.Font = serializable as Font;
        this.ႰႤ.ForeColor = brown;
        IConvertible ⴃ = (IConvertible) (obj as w2M).Ⴃ;
        if (Operators.CompareString(ⴃ as string, "Rejected", false) != 0)
        {
          if (Operators.CompareString(ⴃ as string, "Approved", false) == 0)
            this.Ⴗ.Checked = true;
        }
        else
          this.Ⴐ.Checked = true;
        En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (Manager) - Leave approval";
      }
    }

    private void Rb0([In] object obj0, [In] EventArgs obj1)
    {
      object obj2 = (object) new Tt1();
      Table<w2M> ⴍ = (obj2 as Tt1).Ⴍ;
      object obj3 = (object) Expression.Parameter(typeof (w2M), "o");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<w2M, bool>> predicate1 = Expression.Lambda<Func<w2M, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) obj3, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (w2M.Go6))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (z1R)), FieldInfo.GetFieldFromHandle(__fieldref (z1R.ႨႥ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), obj3 as ParameterExpression);
      INotifyPropertyChanging propertyChanging = (INotifyPropertyChanging) ⴍ.FirstOrDefault<w2M>(predicate1);
      Table<Af03> ⴃ = (obj2 as Tt1).Ⴃ;
      object obj4 = (object) Expression.Parameter(typeof (Af03), "a");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate2 = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (obj4 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) this, typeof (z1R)), FieldInfo.GetFieldFromHandle(__fieldref (z1R.ႨႤ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (ParameterExpression) obj4);
      object obj5 = (object) ⴃ.FirstOrDefault<Af03>(predicate2);
      if (!(propertyChanging is w2M))
      {
        int num = (int) MessageBox.Show("Leave Application not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else if ((Af03) obj5 == null)
      {
        int num = (int) MessageBox.Show("Staff not found", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.Close();
      }
      else
      {
        ((w2M) propertyChanging).Ⴐ = new DateTime?(Conversions.ToDate(DateAndTime.Today.ToShortDateString()));
        (propertyChanging as w2M).Ⴃ = this.Ⴐ.Checked ? "Rejected" : "Approved";
        if (((Af03) obj5).Ⴀ < ((w2M) propertyChanging).Ⴀ & this.Ⴗ.Checked)
        {
          int num = Math.Abs(checked (((Af03) obj5).Ⴀ - (propertyChanging as w2M).Ⴀ));
          INotifyPropertyChanged entity = (INotifyPropertyChanged) new Wf2();
          ((Wf2) entity).Ⴗ = int.Parse(y0P.Wd4());
          (entity as Wf2).Ⴗ = "extraholiday";
          (entity as Wf2).Ⴓ = Convert.ToDouble(Decimal.Multiply(new Decimal(checked (num * 9)), ((Af03) obj5).Ⴃ));
          (entity as Wf2).Ⴃ = this.ႨႤ;
          ((Wf2) entity).Ⴍ = "money";
          ((Wf2) entity).Ⴄ = new DateTime?(DateTime.Now);
          (obj2 as Tt1).Ⴃ.InsertOnSubmit(entity as Wf2);
          (obj5 as Af03).Ⴃ = checked ((obj5 as Af03).Ⴃ + num);
          (obj2 as Tt1).SubmitChanges();
          ((Af03) obj5).Ⴀ = 0;
        }
        else if (this.Ⴗ.Checked)
          (obj5 as Af03).Ⴀ = checked ((obj5 as Af03).Ⴀ - (propertyChanging as w2M).Ⴀ);
        ((DataContext) obj2).SubmitChanges();
        int num1 = (int) MessageBox.Show("Leave [" + (propertyChanging as w2M).Ⴍ + "]updated", "Done", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        En6.Ⴈ.Ⴓ.Pg6f((Form) En6.Ⴈ.Ⴃ);
      }
    }

    private void Rt8([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴈ.Text = Ec63.Ⴅ;
      this.Ⴅ.Text = Ec63.Ⴀ;
    }

    private void k3X([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴓ.Close();

    internal sealed class Kk4
    {
      internal MaskedTextBox Ⴍ;
      internal Label Ⴗ;
      internal Label Ⴃ;
      internal Button Ⴅ;
      internal GroupBox Ⴓ;
      internal Label Ⴐ;
      internal Label Ⴈ;
      internal Label Ⴄ;
      internal Label Ⴀ;
      internal Label Ⴜ;
      internal ComboBox ႷႭ;
      internal Button ႷႷ;

      internal Kk4()
      {
      }
    }
  }
}
