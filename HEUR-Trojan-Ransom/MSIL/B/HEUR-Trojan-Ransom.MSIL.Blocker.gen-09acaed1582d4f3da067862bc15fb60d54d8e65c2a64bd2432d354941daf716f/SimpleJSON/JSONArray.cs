// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: PEFileEvidenceFacto, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 33D8CF26-6BC9-4426-B954-9C7650E72B0A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-09acaed1582d4f3da067862bc15fb60d54d8e65c2a64bd2432d354941daf716f.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 978355475;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1905213769)) % 9U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1428834271 ^ 1285737828;
              continue;
            case 2:
              int num4 = flag ? -1386086625 : (num4 = -1303055891);
              num1 = num4 ^ (int) num2 * 262948261;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 525718032 ^ -4744942;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 5:
              num1 = (int) num2 * -569868163 ^ 757806723;
              continue;
            case 6:
              jsonNode = this.m_List[aIndex];
              num1 = 1147550037;
              continue;
            case 8:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -127615606 ^ -864071242;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 1955649072;
        }
label_13:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_9;
label_1:
        int num1 = 1379091879;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1064032777)) % 7U)
          {
            case 0:
              this.m_List[aIndex] = value;
              num1 = 1509468003;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -340864043 ^ -627370624;
              continue;
            case 3:
              goto label_8;
            case 4:
              int num3 = flag ? 2120829868 : (num3 = 835594407);
              num1 = num3 ^ (int) num2 * -732670735;
              continue;
            case 5:
              goto label_1;
            case 6:
              this.m_List.Add(value);
              num1 = (int) num2 * -1555986293 ^ -1566788208;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:
        return;
label_8:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_10;
label_9:
        num4 = 1;
label_10:
        flag = num4 != 0;
        num1 = 1408044022;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -559501405;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1036604977)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1219069631 ^ -969312829;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -592242053;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -117934832)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -676525378 ^ 982316244;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 1694122946 ^ 1965430091;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -516124422;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -633527858)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1128124944 ^ 1691297542;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = -1959256031;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1912377750)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -321506209 ^ -1630598905;
            continue;
          case 3:
            jsonNode2 = this.m_List[aIndex];
            num1 = -1462024594;
            continue;
          case 4:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * -2043267777 ^ 1119572501;
            continue;
          case 5:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -514818055 ^ -714461174;
            continue;
          case 6:
            goto label_3;
          default:
            goto label_10;
        }
      }
label_3:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_10:
      return jsonNode1;
label_4:
      num3 = 1;
label_5:
      num1 = num3 != 0 ? -148088272 : (num1 = -263910702);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -389990624;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -532962710)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -900448767 ^ -1461246829;
            continue;
          case 3:
            num1 = (int) num2 * 1752522492 ^ 154851435;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 1327700738;
          List<JSONNode>.Enumerator enumerator;
          JSONNode N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 1964196530)) % 25U)
            {
              case 0:
                int num4;
                num2 = num4 = num1 != 1 ? 121000244 : (num4 = 313090694);
                continue;
              case 1:
                this.\u003C\u003E2__current = N;
                num2 = (int) num3 * -1393389248 ^ 1675938767;
                continue;
              case 2:
              case 24:
                this.\u003C\u003E1__state = -1;
                num2 = 1130155789;
                continue;
              case 3:
                int num5;
                num2 = num5 = enumerator.MoveNext() ? 1246688546 : (num5 = 1719563207);
                continue;
              case 4:
                num2 = (int) num3 * 960511982 ^ -148183696;
                continue;
              case 5:
                childs = false;
                num2 = 1141884267;
                continue;
              case 6:
              case 13:
                this.\u003C\u003E1__state = -3;
                num2 = 77964534;
                continue;
              case 7:
                num2 = (int) num3 * 774031229 ^ -474742652;
                continue;
              case 8:
                N = (JSONNode) null;
                num2 = (int) num3 * -763497519 ^ -1503152546;
                continue;
              case 9:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -161451575 ^ -525045016;
                continue;
              case 10:
                num2 = (int) num3 * 1065538898 ^ 2027847028;
                continue;
              case 11:
                enumerator = this.m_List.GetEnumerator();
                num2 = (int) num3 * -1376043297 ^ -1462903241;
                continue;
              case 12:
                goto label_1;
              case 14:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -927595430 ^ 335186614;
                continue;
              case 15:
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * -880534655 ^ -773726808;
                continue;
              case 16:
                int num6 = num1 != 0 ? -296347127 : (num6 = -927226319);
                num2 = num6 ^ (int) num3 * 798542609;
                continue;
              case 17:
                enumerator = new List<JSONNode>.Enumerator();
                num2 = (int) num3 * -2009657414 ^ -1598345355;
                continue;
              case 18:
                goto label_6;
              case 19:
                goto label_25;
              case 20:
                num2 = (int) num3 * 125934117 ^ 321592383;
                continue;
              case 21:
                num2 = (int) num3 * 1658503928 ^ -747491209;
                continue;
              case 23:
                N = enumerator.Current;
                num2 = 1097821691;
                continue;
              default:
                goto label_23;
            }
          }
label_6:
          childs = true;
          goto label_25;
label_23:
          childs = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_25:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_6:
        int num1 = enumerator.MoveNext() ? 498377245 : (num1 = 1822617118);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1583384827)) % 9U)
          {
            case 0:
              num1 = 498377245;
              continue;
            case 1:
              str1 = JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(str1, ", ");
              num1 = (int) num2 * 463790752 ^ -1541788253;
              continue;
            case 3:
              int num3 = !flag ? 183442638 : (num3 = 850318119);
              num1 = num3 ^ (int) num2 * -2103117759;
              continue;
            case 4:
              flag = JSONArray.\u206A‏‮‪‮‍⁬‮‎‮‏‭‌‏⁫⁯‭⁭‎⁪‫‍‭⁪⁭‏‏‭​‭‫​‌‍⁭‍‮‫‍⁮‮(str1) > 2;
              num1 = (int) num2 * -5745884 ^ -1411670230;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = 1299024671;
              continue;
            case 6:
              goto label_6;
            case 7:
              str1 = JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(str1, JSONArray.\u202B‭‪‍​​​‎‍⁫⁫⁪⁫‪‮⁮‌⁭​‎⁪‌⁯⁬⁮‭​⁫‏‮‏⁫‎⁬⁪‫‭‏‮⁭‮((object) current));
              num1 = 1771832281;
              continue;
            case 8:
              num1 = (int) num2 * 1774245568 ^ -1726749980;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(str1, " ]");
label_13:
      int num4 = 1075966819;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1583384827)) % 3U)
        {
          case 0:
            goto label_13;
          case 1:
            num4 = (int) num5 * -1131622201 ^ -1313293390;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_7:
        int num1 = enumerator.MoveNext() ? -529033880 : (num1 = -786467750);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -295197826)) % 7U)
          {
            case 0:
              int num3 = JSONArray.\u206A‏‮‪‮‍⁬‮‎‮‏‭‌‏⁫⁯‭⁭‎⁪‫‍‭⁪⁭‏‏‭​‭‫​‌‍⁭‍‮‫‍⁮‮(str1) <= 3 ? 1318027835 : (num3 = 1676764915);
              num1 = num3 ^ (int) num2 * -1773956126;
              continue;
            case 1:
              goto label_7;
            case 3:
              str1 = JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(str1, ", ");
              num1 = (int) num2 * -695661163 ^ -1003141110;
              continue;
            case 4:
              current = enumerator.Current;
              num1 = -327033722;
              continue;
            case 5:
              str1 = JSONArray.\u206D‎‭‮⁪​‌​⁯⁫⁭‪‏⁭​‪⁪⁬⁭‎​‬⁫‮‍‮‪‎‎‮‫‮‏⁪‎‏‮​‭⁯‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(str1, current.ToString(JSONArray.\u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮(aPrefix, "   ")));
              num1 = -466686522;
              continue;
            case 6:
              num1 = -529033880;
              continue;
            default:
              goto label_14;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_10:
        int num4 = -1867894710;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -295197826)) % 3U)
          {
            case 0:
              goto label_10;
            case 2:
              num4 = (int) num5 * 721734028 ^ 967461811;
              continue;
            default:
              goto label_13;
          }
        }
label_13:;
      }
label_14:
      string str2 = JSONArray.\u206D‎‭‮⁪​‌​⁯⁫⁭‪‏⁭​‪⁪⁬⁭‎​‬⁫‮‍‮‪‎‎‮‫‮‏⁪‎‏‮​‭⁯‮(str1, "\n", aPrefix, "]");
label_15:
      int num6 = -1404165861;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -295197826)) % 4U)
        {
          case 0:
            num6 = (int) num7 * -883540442 ^ -1616425771;
            continue;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -2113248992 ^ -665631694;
            continue;
          case 2:
            goto label_15;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1078508658;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 648338051)) % 10U)
        {
          case 0:
            int num3 = !flag ? 955414201 : (num3 = 1988487134);
            num1 = num3 ^ (int) num2 * 371783292;
            continue;
          case 1:
            JSONArray.\u200C⁭⁮⁪⁯‎‍⁪⁯‭‪​⁭⁫⁫⁪⁫⁬⁫‬⁯‍‪‍‍‫⁪‏‫⁮⁯‭‭⁫⁮⁬‫‌⁭‬‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1427121851 ^ -1167795882;
            continue;
          case 2:
            flag = index < this.m_List.Count;
            num1 = 1098913613;
            continue;
          case 3:
            index = 0;
            num1 = (int) num2 * 1435091887 ^ -1993228154;
            continue;
          case 4:
            num1 = (int) num2 * 138921748 ^ 2094414950;
            continue;
          case 5:
            goto label_1;
          case 6:
            goto label_3;
          case 7:
            JSONArray.\u202B‮‮‍⁬‭‎⁭⁮⁮‍‌⁫⁪‬‎⁪‍‍‭‫​⁪‬‪‮⁭‮‍‬⁯‫⁮⁭‍‌⁫‫⁭‬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1282675742 ^ -1839510240;
            continue;
          case 8:
            ++index;
            num1 = (int) num2 * -886142417 ^ 2037874771;
            continue;
          case 9:
            this.m_List[index].Serialize(aWriter);
            num1 = 491903649;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u206A‏‮‪‮‍⁬‮‎‮‏‭‌‏⁫⁯‭⁭‎⁪‫‍‭⁪⁭‏‏‭​‭‫​‌‍⁭‍‮‫‍⁮‮([In] string obj0) => obj0.Length;

    static string \u200D⁭‫⁬⁮⁯⁬‭‫‏⁫​‍⁬‏‌⁮‬‭‪⁯⁯⁮​⁪‭‪‬⁬⁪‫‮‍⁯⁪⁮⁬‪‮‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B‭‪‍​​​‎‍⁫⁫⁪⁫‪‮⁮‌⁭​‎⁪‌⁯⁬⁮‭​⁫‏‮‏⁫‎⁬⁪‫‭‏‮⁭‮([In] object obj0) => obj0.ToString();

    static string \u206D‎‭‮⁪​‌​⁯⁫⁭‪‏⁭​‪⁪⁬⁭‎​‬⁫‮‍‮‪‎‎‮‫‮‏⁪‎‏‮​‭⁯‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200C⁭⁮⁪⁯‎‍⁪⁯‭‪​⁭⁫⁫⁪⁫⁬⁫‬⁯‍‪‍‍‫⁪‏‫⁮⁯‭‭⁫⁮⁬‫‌⁭‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202B‮‮‍⁬‭‎⁭⁮⁮‍‌⁫⁪‬‎⁪‍‍‭‫​⁪‬‪‮⁭‮‍‬⁯‫⁮⁭‍‌⁫‫⁭‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
