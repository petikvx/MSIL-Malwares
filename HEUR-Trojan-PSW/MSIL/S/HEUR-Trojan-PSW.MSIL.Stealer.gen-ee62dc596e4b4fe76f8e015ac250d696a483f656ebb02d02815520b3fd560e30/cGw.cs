// Decompiled with JetBrains decompiler
// Type: wG.cGw
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;

namespace wG
{
  public class cGw
  {
    internal static cGw h4l;

    public static string GRu(PJ _param0)
    {
      switch (_param0)
      {
        case HL _:
          return ((MW) cGw.Y4V((object) (_param0 as HL))).T1V();
        case sC _:
          int num = 1;
          if (!cGw.G4n())
            goto label_8;
label_1:
          string str1;
          switch (num)
          {
            case 1:
              str1 = (_param0 as sC).if6().ToString();
              string str2 = str1;
              if (str2 == "Ubyte" || cGw.p49((object) str2, (object) "Sbyte"))
                goto case 2;
              else
                break;
            case 2:
              return "Byte";
            case 3:
              return "Byte";
          }
          return str1;
label_8:
          num = 1;
          goto label_1;
        default:
          return "/* TODO!!! */";
      }
    }

    public static string yRW(sC _param0)
    {
      tn tn = _param0.if6();
      string s = tn.ToString();
      // ISSUE: reference to a compiler-generated method
      uint stringHash = \u003CPrivateImplementationDetails\u003E.ComputeStringHash(s);
      if (stringHash > 1608375669U)
        goto label_24;
      else
        goto label_37;
label_1:
      int num1;
      int num2 = num1;
label_2:
      string str;
      while (true)
      {
        switch (num2)
        {
          case 1:
            if (stringHash != 1167299699U)
            {
              if (cGw.G4n())
              {
                num2 = 10;
                continue;
              }
              goto label_1;
            }
            else
              goto label_18;
          case 2:
            goto label_26;
          case 3:
            goto label_9;
          case 4:
            goto label_13;
          case 5:
            if (stringHash <= 1167299699U)
            {
              if (stringHash != 1152886286U)
              {
                num2 = cGw.O4s() == null ? 1 : 0;
                continue;
              }
              if (s == "Ulong")
              {
                str = "UInt64";
                num2 = 4;
                continue;
              }
              goto label_30;
            }
            else
              goto label_27;
          case 6:
            goto label_12;
          case 7:
            goto label_34;
          case 8:
            goto label_7;
          case 9:
            goto label_29;
          case 10:
            goto label_30;
          case 11:
            goto label_24;
          case 12:
            goto label_23;
          default:
            goto label_35;
        }
      }
label_7:
      str = "Int64";
      goto label_13;
label_9:
      if (stringHash == 4168357374U)
        goto label_34;
      else
        goto label_30;
label_12:
      if (s == "Uint")
      {
        str = "UInt32";
        goto label_13;
      }
      else
        goto label_30;
label_18:
      if (s == "Long")
        goto label_7;
      else
        goto label_30;
label_27:
      if (stringHash != 1312746433U)
      {
        if (stringHash == 1608375669U && cGw.p49((object) s, (object) "Short"))
        {
          str = "Int16";
          goto label_13;
        }
        else
          goto label_30;
      }
      else
        goto label_12;
label_29:
      if (stringHash == 2574022184U && s == "Sbyte")
      {
        str = "SByte";
        goto label_13;
      }
      else
        goto label_30;
label_34:
      if (s == "Int")
      {
        str = "Int32";
        goto label_13;
      }
      else
        goto label_30;
label_35:
      str = tn.ToString();
label_13:
      return str;
label_23:
      str = "UInt16";
      goto label_13;
label_24:
      if (stringHash > 2574022184U)
      {
        if (stringHash != 2805976770U)
        {
          if (cGw.O4s() == null)
          {
            num2 = 3;
            goto label_2;
          }
          else
            goto label_1;
        }
        else if (s == "Ushort")
          goto label_23;
        else
          goto label_30;
      }
      else if (stringHash != 1621152906U)
      {
        if (cGw.O4s() == null)
        {
          num2 = 9;
          goto label_2;
        }
        else
          goto label_1;
      }
      else if (!(s == "Ubyte"))
        goto label_30;
label_26:
      str = "Byte";
      goto label_13;
label_30:
      tn = cGw.b4C((object) _param0);
      num2 = 0;
      if (cGw.O4s() != null)
      {
        num2 = 0;
        goto label_2;
      }
      else
        goto label_2;
label_37:
      num2 = 5;
      goto label_2;
    }

    public static string aRK(gz _param0, MW _param1) => cGw.MRP(_param0.Kmk(), _param1).Trim();

    public static string MRP(bGB _param0, MW _param1)
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append("(");
      int num1 = 5;
      tc tc;
      int index;
      UGT ugt;
      while (true)
      {
        switch (num1)
        {
          case 1:
label_17:
            ++index;
            num1 = 7;
            continue;
          case 2:
            stringBuilder.Append(nameof (\u0020) + tc?.ToString() + nameof (\u0020));
            goto case 1;
          case 3:
            tc = _param0.PmR()[index];
            num1 = 4;
            continue;
          case 4:
            switch (tc)
            {
              case bGB _:
                num1 = 8;
                continue;
              case UGT _:
                ugt = tc as UGT;
                stringBuilder.Append((string) cGw.O4D((object) _param1.T1V()));
                using (IEnumerator<OZ> enumerator = ugt.WmI().GetEnumerator())
                {
                  while (enumerator.MoveNext())
                  {
                    OZ current = enumerator.Current;
                    cGw.c47((object) stringBuilder, cGw.y4t((object) ".", (object) current.T1V()));
                  }
                  goto label_21;
                }
              case bGa _:
                bGa bGa = tc as bGa;
                cGw.c47((object) stringBuilder, cGw.j4F((object) new string[5]
                {
                  (string) cGw.I4e(cGw.j4R((object) bGa)),
                  ".",
                  bGa.amO().T1V(),
                  "Enum.",
                  bGa.XmE().tyi()
                }));
                int num2;
                num1 = cGw.G4n() ? 1 : num2;
                continue;
              case Jo _:
                Jo jo = tc as Jo;
                stringBuilder.Append(jo.T1V());
                goto label_17;
              default:
                num1 = 2;
                continue;
            }
          case 5:
            index = 0;
            goto case 7;
          case 6:
label_21:
            if (_param0.PmR().Count > index + 2 && _param0.PmR()[index + 2] is bGa || index >= 2 && _param0.PmR()[index - 2] is bGa)
            {
              stringBuilder.Append("." + ugt.WmI()[ugt.WmI().Count - 1]?.ToString());
              goto case 1;
            }
            else
              goto case 1;
          case 7:
            if (index < _param0.PmR().Count)
              goto case 3;
            else
              goto label_19;
          case 8:
            stringBuilder.Append(cGw.MRP(tc as bGB, _param1));
            goto case 1;
          default:
            goto label_3;
        }
      }
label_3:
      string str;
      return str;
label_19:
      stringBuilder.Append(")");
      str = stringBuilder.ToString();
      goto label_3;
    }

    public cGw()
    {
      XTG.fvQjdC();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static object Y4V([In] object obj0) => (object) ((HL) obj0).pfX();

    internal static bool p49([In] object obj0, [In] object obj1) => (string) obj0 == (string) obj1;

    internal static bool G4n() => cGw.h4l == null;

    internal static cGw O4s() => cGw.h4l;

    internal static tn b4C([In] object obj0) => ((sC) obj0).if6();

    internal static object O4D([In] object obj0) => (object) ((string) obj0).ToLower();

    internal static object y4t([In] object obj0, [In] object obj1) => (object) ((string) obj0 + (string) obj1);

    internal static object c47([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).Append((string) obj1);

    internal static object j4R([In] object obj0) => (object) ((bGa) obj0).amO();

    internal static object I4e([In] object obj0) => (object) ((Ph) obj0).T1V();

    internal static object j4F([In] object obj0) => (object) string.Concat((string[]) obj0);
  }
}
