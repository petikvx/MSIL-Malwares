// Decompiled with JetBrains decompiler
// Type: Star_Admiral.Core.Enemy
// Assembly: HostProtectionExcepti, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3302E24B-E44B-49EF-8377-18CBA1261084
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Backdoor.Win32.Androm.gen-1c4ea60d79cd47479c151fb42ce286b38081387516735919714b866d0fbd6ec7.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Star_Admiral.Core
{
  public class Enemy : Admiral
  {
    private int FleetRow = 0;
    private int[] myFleetPositions = new int[1]{ 1 };
    private PictureBox[] enemySprites = new PictureBox[1];
    private Admiral player;

    public Enemy(
      Board Board,
      int FleetSize,
      int MovementsLeft,
      PictureBox[] EnemySprites,
      Admiral Player,
      Label HealthLabel)
      : base(Board, FleetSize, MovementsLeft, EnemySprites, HealthLabel)
    {
      this.player = Player;
      this.enemySprites = EnemySprites;
    }

    public override void createFleet()
    {
      Node node = this.MyBoard.board[this.FleetRow, this.myFleetPositions[0]];
      int index = 0;
label_1:
      int num1 = 629651331;
      Ship ship;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1790563868)) % 9U)
        {
          case 0:
            ++index;
            num1 = (int) num2 * -1903523253 ^ -1131476040;
            continue;
          case 1:
            ship = new Ship(node, this.enemySprites[index], (Admiral) this);
            ship.name = \u003CModule\u003E.\u200D⁪‬⁪‮‭⁯‎⁭⁪⁪⁮‪⁬⁭⁫‏​⁫‌‏‌‮⁯⁮‎‪‬⁮‮‎‎‭‍‮‍‌‫‪‪‮<string>(900292173U);
            num1 = 236720010;
            continue;
          case 2:
            goto label_3;
          case 3:
            ship.MyNode.shipPlaced = ship;
            num1 = (int) num2 * 1640511584 ^ -1748172766;
            continue;
          case 4:
            ship.MyPictureBox = this.enemySprites[index];
            Enemy.\u206C‏‭‎‍‏‎‮‏‭‭⁫‌⁭​‏‪‮‬⁮‍‎‬⁯‭‌⁯⁫‮‎⁭⁪​‎‍​‍‫‎⁪‮(this.fleet, (object) ship);
            num1 = (int) num2 * 1400144596 ^ -821410488;
            continue;
          case 5:
            ship.MyNode.shipPresent = true;
            num1 = (int) num2 * -206700375 ^ -111140571;
            continue;
          case 6:
            goto label_1;
          case 7:
            num1 = (int) num2 * 1912166987 ^ 743192617;
            continue;
          case 8:
            int num3;
            num1 = num3 = index >= this.fleet_size ? 1670588395 : (num3 = 305094605);
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    private ArrayList DeterminesMovementDirection(Ship enemyShip, Ship PlayerShip)
    {
label_1:
      int num1 = -902894660;
      ArrayList arrayList1;
      while (true)
      {
        uint num2;
        Node node1;
        Node node2;
        Queue queue;
        Node node3;
        Dictionary<Node, Node> dictionary;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1518086204)) % 11U)
        {
          case 0:
            node3 = (Node) queue.Peek();
            num1 = (int) num2 * -294015384 ^ 98382165;
            continue;
          case 1:
            queue = new Queue();
            num1 = (int) num2 * 1978518518 ^ -236381259;
            continue;
          case 3:
            node1 = enemyShip.MyNode;
            num1 = (int) num2 * -2078295437 ^ -58660521;
            continue;
          case 4:
            node2 = PlayerShip.MyNode;
            num1 = (int) num2 * 82305487 ^ -1496649420;
            continue;
          case 5:
label_42:
            if (queue.Count() == 0)
            {
              num3 = -83125240;
              goto label_32;
            }
            else
              goto case 9;
          case 6:
            goto label_1;
          case 7:
            queue.EnQueue((object) node1);
            num1 = (int) num2 * 102207803 ^ 1851434006;
            continue;
          case 8:
            queue.DeQueue();
            num1 = (int) num2 * -2022979846 ^ 1601581118;
            continue;
          case 9:
            num1 = -151936242;
            continue;
          case 10:
            dictionary = new Dictionary<Node, Node>();
            dictionary.Add(node1, (Node) null);
            num1 = (int) num2 * 68619199 ^ 1172349660;
            continue;
          default:
            IEnumerator enumerator = Enemy.\u202D⁮‏‪‬‏‍‏⁬⁫‫‌‪⁫‏‬‌‍⁪‍‬‫‬⁪‭⁬‍‍‌‎⁫‌⁮⁮‎⁫‌‭​⁬‮(node3.neighbors);
            try
            {
label_22:
              int num4 = Enemy.\u200F⁫⁮‪‪‬‭‮⁫‬⁮⁭‏⁭⁭‫‌‏‭‫‪‬‭‎‍‬⁭⁮‍‪‮‎‫⁫‭‌⁬‬‭⁪‮(enumerator) ? -1002408819 : (num4 = -1716645065);
              Node key;
              bool flag;
              while (true)
              {
                uint num5;
                switch ((num5 = (uint) (num4 ^ -1518086204)) % 11U)
                {
                  case 0:
                    queue.EnQueue((object) key);
                    num4 = (int) num5 * 333491003 ^ 703238308;
                    continue;
                  case 1:
                    num4 = (int) num5 * -322012470 ^ -133363432;
                    continue;
                  case 2:
                    num4 = -1158610949;
                    continue;
                  case 3:
                    int num6 = !flag ? 737701459 : (num6 = 1671643055);
                    num4 = num6 ^ (int) num5 * 1416916435;
                    continue;
                  case 4:
                    flag = !dictionary.ContainsKey(key);
                    num4 = (int) num5 * 601185623 ^ -560646553;
                    continue;
                  case 5:
                    dictionary.Add(key, node3);
                    num4 = (int) num5 * 1572157322 ^ -154945870;
                    continue;
                  case 6:
                    num4 = -1002408819;
                    continue;
                  case 8:
                    key = (Node) Enemy.\u200E⁫⁬‬‍⁫‎‪⁪⁭‪​‎⁪⁬‭⁫​‏‮⁪⁯⁪‪‌‫‭⁬⁭​‫‍​‮⁮‬⁯‏‏⁬‮(enumerator);
                    num4 = -748202073;
                    continue;
                  case 9:
                    goto label_22;
                  case 10:
                    num4 = (int) num5 * -1030875425 ^ -536101210;
                    continue;
                  default:
                    goto label_30;
                }
              }
            }
            finally
            {
              if (enumerator is IDisposable disposable)
              {
label_25:
                int num7 = -1861259891;
                while (true)
                {
                  uint num8;
                  switch ((num8 = (uint) (num7 ^ -1518086204)) % 4U)
                  {
                    case 0:
                      goto label_25;
                    case 1:
                      Enemy.\u206F⁬‎‮⁯​⁪⁮‮⁬⁪‌‭⁬‬⁯‪‫⁬‏⁯⁯‏⁭‎⁬⁫‭‏⁫‭‌​⁭‬‎⁭‍‎‮(disposable);
                      num7 = (int) num8 * -426083016 ^ 461319615;
                      continue;
                    case 3:
                      num7 = (int) num8 * -109726447 ^ -396365107;
                      continue;
                    default:
                      goto label_29;
                  }
                }
              }
label_29:;
            }
label_30:
            break;
        }
label_31:
        num3 = -1900270243;
label_32:
        ArrayList arrayList2;
        Node key1;
        bool flag1;
        while (true)
        {
          uint num9;
          switch ((num9 = (uint) (num3 ^ -1518086204)) % 13U)
          {
            case 0:
              num3 = (int) num9 * 383031791 ^ 1661772706;
              continue;
            case 1:
              flag1 = !Enemy.\u200C⁮‏‌‪⁮‏‪‭⁫⁭‎‎⁪⁮‪‮⁪‌⁬‍⁯‍‭⁬⁬⁮⁫⁫​​‎⁮‮‮‍⁫‭‪⁫‮((object) key1, (object) node1);
              num3 = -547412960;
              continue;
            case 2:
              key1 = dictionary[key1];
              num3 = (int) num9 * 1787391532 ^ 13401009;
              continue;
            case 3:
              arrayList2 = Enemy.\u202D‌⁪‬‭‏‬‪⁬‍⁭⁯‎⁪‬⁯‬⁭‍​‌‭‏⁫‭⁭⁬‌⁯‮‫‪‮⁬⁮⁬‌⁮‏⁬‮();
              num3 = (int) num9 * -1112619830 ^ -249357814;
              continue;
            case 4:
              goto label_31;
            case 6:
              num3 = (int) num9 * -1810408784 ^ -629427309;
              continue;
            case 7:
              Enemy.\u206C‏‭‎‍‏‎‮‏‭‭⁫‌⁭​‏‪‮‬⁮‍‎‬⁯‭‌⁯⁫‮‎⁭⁪​‎‍​‍‫‎⁪‮(arrayList2, (object) key1);
              num3 = (int) num9 * 1248201664 ^ 1694351539;
              continue;
            case 8:
              key1 = node2;
              num3 = (int) num9 * 563082170 ^ -549421537;
              continue;
            case 9:
              goto label_42;
            case 10:
              num3 = -324692440;
              continue;
            case 11:
              arrayList1 = arrayList2;
              num3 = (int) num9 * 1065040524 ^ 1252217410;
              continue;
            case 12:
              int num10 = flag1 ? 291603589 : (num10 = 1740797246);
              num3 = num10 ^ (int) num9 * -267774248;
              continue;
            default:
              goto label_45;
          }
        }
      }
label_45:
      return arrayList1;
    }

    public void EnemyMove()
    {
label_1:
      int num1 = 1404482230;
      ArrayList arrayList;
      Node node;
      Ship enemyShip;
      int num2;
      int num3;
      bool flag;
      Ship PlayerShip;
      while (true)
      {
        uint num4;
        switch ((num4 = (uint) (num1 ^ 1854505225)) % 20U)
        {
          case 0:
            PictureBox pictureBox1 = enemyShip.MyPictureBox;
            Enemy.\u202A‪‫‭⁪‮⁪‍​⁭‏⁬⁭‌‬‬‮‭‌⁬‍‪‍​⁮⁫‌⁯‌‮‮‍⁪⁬‭⁬⁫‮‏‍‮((Control) pictureBox1, Enemy.\u200C‬‌‬⁪‫‭​‪⁪‫‪⁫‏‪‭⁯‮‌‪⁮‎‪⁬‏⁮⁪‪⁮⁭⁭⁮⁬‮‪⁫‎⁭​‬‮((Control) pictureBox1) + num3 * 50);
            this.scansBoard();
            flag = this.checkIfShipAcquired();
            num1 = (int) num4 * -1134679317 ^ 2017624638;
            continue;
          case 1:
            enemyShip.MyNode.shipPlaced = enemyShip;
            num1 = (int) num4 * -349787776 ^ -949996055;
            continue;
          case 2:
            Enemy.\u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮(Enemy.\u206A⁪‍⁮‎⁫⁮⁫⁬‭‌⁭⁭⁪‎⁭‍⁭‬‫‏⁮⁬‏‏‬⁭‌‎‬⁬‬⁪‪⁯⁮⁭‭‮‮(\u003CModule\u003E.\u200F⁮⁪‫⁭‎⁮​‎‌‎‎⁭‎⁮⁫‏‏⁬⁪⁭‫‎‮‫‍‭‏‏‮‌‏‪‭‎‮​‎‮‭‮<string>(1771536967U), Enemy.\u200B‬‎​‭​‬‌‬‍⁯​‫‎‫⁫⁬⁯‮‫⁫‮‏‎‮​​‎‭‮⁬‮‪⁭⁯​⁭⁫‪⁯‮((object) arrayList)));
            num1 = (int) num4 * -647153390 ^ -694683653;
            continue;
          case 3:
            num1 = (int) num4 * 2087721265 ^ 2003776458;
            continue;
          case 4:
            Enemy.\u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮(Enemy.\u206C⁫​⁮⁬⁯‎‬‎⁮‭‎‏‌⁬⁫⁪‪​‭⁫‌‍‬⁭‌‏‭⁮⁯‎‮⁮⁪⁯⁮‍​‭‪‮(\u003CModule\u003E.\u200D⁪‬⁪‮‭⁯‎⁭⁪⁪⁮‪⁬⁭⁫‏​⁫‌‏‌‮⁯⁮‎‪‬⁮‮‎‎‭‍‮‍‌‫‪‪‮<string>(2327302618U), node.X_coordinate.ToString(), node.Y_coordinate.ToString()));
            num1 = (int) num4 * -1389154195 ^ -1590756425;
            continue;
          case 5:
            Enemy.\u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮(Enemy.\u206C⁫​⁮⁬⁯‎‬‎⁮‭‎‏‌⁬⁫⁪‪​‭⁫‌‍‬⁭‌‏‭⁮⁯‎‮⁮⁪⁯⁮‍​‭‪‮(\u003CModule\u003E.\u202B⁬‍‎‮⁮‬‏‏⁬‬⁯‭‌‬‭‭‪⁭‮‏‍‭‍‍‮‎⁮‭⁪⁬‏‬⁬‏‭‎⁭​‮‮<string>(741611587U), enemyShip.MyNode.X_coordinate.ToString(), enemyShip.MyNode.Y_coordinate.ToString()));
            PlayerShip = (Ship) Enemy.\u202B‭​⁯‎​‮⁪⁫‫​‫‪‏⁬⁭‍⁭⁪⁭‏‌‮‮⁬‍⁮⁭‭‌‎⁭‌‫⁮‫‮⁪‪⁫‮(this.player.fleet, 0);
            arrayList = Enemy.\u202D‌⁪‬‭‏‬‪⁬‍⁭⁯‎⁪‬⁯‬⁭‍​‌‭‏⁫‭⁭⁬‌⁯‮‫‪‮⁬⁮⁬‌⁮‏⁬‮();
            num1 = (int) num4 * 792530975 ^ -218138626;
            continue;
          case 6:
            num1 = (int) num4 * 1412738466 ^ -110182389;
            continue;
          case 7:
            num1 = (int) num4 * -1109604411 ^ -1396656101;
            continue;
          case 8:
            PictureBox pictureBox2 = enemyShip.MyPictureBox;
            Enemy.\u206F⁪⁫‌‫‬‏‬‮‭⁯‎⁪‮⁫‬⁬⁬‭⁭‭‍‌⁭⁪‬‪⁭‌‌⁬‏⁯‍‬‮‪‌‪‫‮((Control) pictureBox2, Enemy.\u200E⁭‬‮‏⁯⁬⁫‮‬‭‮‮‪⁫‫⁫‍‭⁬‭‮‫‭‌‏‫‍​‎‪‍‭‫‎⁭‫⁪‍‌‮((Control) pictureBox2) + num2 * 50);
            num1 = (int) num4 * -1635856264 ^ 1164892402;
            continue;
          case 9:
            goto label_1;
          case 10:
            num1 = (int) num4 * -1962140974 ^ 847132135;
            continue;
          case 11:
            enemyShip = (Ship) Enemy.\u202B‭​⁯‎​‮⁪⁫‫​‫‪‏⁬⁭‍⁭⁪⁭‏‌‮‮⁬‍⁮⁭‭‌‎⁭‌‫⁮‫‮⁪‪⁫‮(this.fleet, 0);
            Enemy.\u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮(Enemy.\u206A⁪‍⁮‎⁫⁮⁫⁬‭‌⁭⁭⁪‎⁭‍⁭‬‫‏⁮⁬‏‏‬⁭‌‎‬⁬‬⁪‪⁯⁮⁭‭‮‮(\u003CModule\u003E.\u200D⁪‬⁪‮‭⁯‎⁭⁪⁪⁮‪⁬⁭⁫‏​⁫‌‏‌‮⁯⁮‎‪‬⁮‮‎‎‭‍‮‍‌‫‪‪‮<string>(3084228520U), enemyShip.name));
            num1 = (int) num4 * -51083585 ^ 1168618231;
            continue;
          case 12:
            arrayList = this.DeterminesMovementDirection(enemyShip, PlayerShip);
            num1 = (int) num4 * 846956664 ^ 349480003;
            continue;
          case 13:
            int num5 = (int) Enemy.\u206B​‍‭⁪⁭‭⁯‮‭‌‬‪⁬‭⁯⁬⁮‪⁯‭‪‍‎⁬‭⁫‏⁪‬‌‮‪‭‫‭​‫⁫‏‮(\u003CModule\u003E.\u200C⁪‏⁫​​‍‌⁮⁫‮⁬‍⁪‮​⁭​⁮⁮‎‎⁫⁯‭‍⁮⁯⁬⁯‫‏⁫‪‫​⁬‎⁬‏‮<string>(2713868411U));
            num1 = (int) num4 * 1094712114 ^ 759784822;
            continue;
          case 14:
            num2 = node.X_coordinate - enemyShip.MyNode.X_coordinate;
            num3 = node.Y_coordinate - enemyShip.MyNode.Y_coordinate;
            enemyShip.MyNode.shipPlaced = (Ship) null;
            enemyShip.MyNode.shipPresent = false;
            enemyShip.MyNode = node;
            num1 = (int) num4 * -1246947412 ^ 509548173;
            continue;
          case 15:
            Enemy.\u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮(Enemy.\u200B‬‎​‭​‬‌‬‍⁯​‫‎‫⁫⁬⁯‮‫⁫‮‏‎‮​​‎‭‮⁬‮‪⁭⁯​⁭⁫‪⁯‮((object) enemyShip.MyPictureBox));
            num1 = (int) num4 * -472661578 ^ -1042865262;
            continue;
          case 16:
            enemyShip.MyNode.shipPresent = true;
            num1 = (int) num4 * -341762628 ^ 333594404;
            continue;
          case 17:
            goto label_3;
          case 18:
            node = (Node) Enemy.\u202B‭​⁯‎​‮⁪⁫‫​‫‪‏⁬⁭‍⁭⁪⁭‏‌‮‮⁬‍⁮⁭‭‌‎⁭‌‫⁮‫‮⁪‪⁫‮(arrayList, Enemy.\u202A⁮‌⁮​‍‫‎‮‮‮⁮⁭​⁭‎‏‬⁭‌⁪⁮‭​⁭‎‬⁯⁭‌⁪⁬‭‬‮‍‭‌‎⁮‮(arrayList) - 1);
            num1 = (int) num4 * -1421645144 ^ -1682171387;
            continue;
          case 19:
            int num6 = !flag ? -181170840 : (num6 = -2103953086);
            num1 = num6 ^ (int) num4 * 993782068;
            continue;
          default:
            goto label_22;
        }
      }
label_3:
      return;
label_22:;
    }

    public bool checkIfShipAcquired()
    {
label_1:
      int num1 = 959531653;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1237926830)) % 6U)
        {
          case 0:
            num1 = 1838128055;
            continue;
          case 1:
            int num3 = this.shipAcquired == null ? -1807397999 : (num3 = -1777853659);
            num1 = num3 ^ (int) num2 * 1525186957;
            continue;
          case 2:
            flag = false;
            num1 = (int) num2 * 1724764690 ^ 1368874676;
            continue;
          case 3:
            goto label_1;
          case 5:
            flag = true;
            num1 = (int) num2 * -263983520 ^ 729514484;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public void EnemyTurn()
    {
      this.movements_left = 5;
label_1:
      int num1 = 2136589861;
      bool flag;
      Ship selectedShip;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 278069054)) % 15U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = 2029505254;
            continue;
          case 2:
            --this.movements_left;
            num1 = 1584349961;
            continue;
          case 3:
            num1 = (int) num2 * 220151799 ^ -875572205;
            continue;
          case 4:
            flag = this.movements_left > 0;
            num1 = 2079405364;
            continue;
          case 5:
            num1 = (int) num2 * -2096104337 ^ -501641193;
            continue;
          case 6:
            goto label_3;
          case 7:
            this.Attack(selectedShip);
            Enemy.\u200E⁯‬⁯⁬‭‭​⁮‎‌⁪‍‫⁯​‭​‮​⁬⁮‮​‌‏‫⁭⁫‮‏⁬‏‏‎‍‭‭‎⁪‮((Control) selectedShip.shipAcquired.MyTextBox, Enemy.\u206A⁪‍⁮‎⁫⁮⁫⁬‭‌⁭⁭⁪‎⁭‍⁭‬‫‏⁮⁬‏‏‬⁭‌‎‬⁬‬⁪‪⁯⁮⁭‭‮‮(\u003CModule\u003E.\u200F⁮⁪‫⁭‎⁮​‎‌‎‎⁭‎⁮⁫‏‏⁬⁪⁭‫‎‮‫‍‭‏‏‮‌‏‪‭‎‮​‎‮‭‮<string>(2050795013U), selectedShip.shipAcquired.health.ToString()));
            num1 = (int) num2 * 2111010393 ^ -844402063;
            continue;
          case 8:
            num1 = (int) num2 * -1516523861 ^ -1719190528;
            continue;
          case 9:
            this.EnemyMove();
            num1 = (int) num2 * -365249619 ^ 1599730289;
            continue;
          case 10:
            int num3;
            num1 = num3 = this.checkIfShipAcquired() ? 1820090425 : (num3 = 1635372478);
            continue;
          case 11:
            num1 = (int) num2 * -1195953981 ^ -68191372;
            continue;
          case 12:
            num1 = (int) num2 * -12392021 ^ 866050465;
            continue;
          case 13:
            int num4 = !flag ? 1053859021 : (num4 = 510474274);
            num1 = num4 ^ (int) num2 * -1141521007;
            continue;
          case 14:
            selectedShip = (Ship) Enemy.\u202B‭​⁯‎​‮⁪⁫‫​‫‪‏⁬⁭‍⁭⁪⁭‏‌‮‮⁬‍⁮⁭‭‌‎⁭‌‫⁮‫‮⁪‪⁫‮(this.fleet, 0);
            num1 = (int) num2 * -1794607529 ^ -1215278616;
            continue;
          default:
            goto label_17;
        }
      }
label_3:
      return;
label_17:;
    }

    static int \u206C‏‭‎‍‏‎‮‏‭‭⁫‌⁭​‏‪‮‬⁮‍‎‬⁯‭‌⁯⁫‮‎⁭⁪​‎‍​‍‫‎⁪‮([In] ArrayList obj0, [In] object obj1) => obj0.Add(obj1);

    static IEnumerator \u202D⁮‏‪‬‏‍‏⁬⁫‫‌‪⁫‏‬‌‍⁪‍‬‫‬⁪‭⁬‍‍‌‎⁫‌⁮⁮‎⁫‌‭​⁬‮([In] ArrayList obj0) => obj0.GetEnumerator();

    static object \u200E⁫⁬‬‍⁫‎‪⁪⁭‪​‎⁪⁬‭⁫​‏‮⁪⁯⁪‪‌‫‭⁬⁭​‫‍​‮⁮‬⁯‏‏⁬‮([In] IEnumerator obj0) => obj0.Current;

    static bool \u200F⁫⁮‪‪‬‭‮⁫‬⁮⁭‏⁭⁭‫‌‏‭‫‪‬‭‎‍‬⁭⁮‍‪‮‎‫⁫‭‌⁬‬‭⁪‮([In] IEnumerator obj0) => obj0.MoveNext();

    static void \u206F⁬‎‮⁯​⁪⁮‮⁬⁪‌‭⁬‬⁯‪‫⁬‏⁯⁯‏⁭‎⁬⁫‭‏⁫‭‌​⁭‬‎⁭‍‎‮([In] IDisposable obj0) => obj0.Dispose();

    static ArrayList \u202D‌⁪‬‭‏‬‪⁬‍⁭⁯‎⁪‬⁯‬⁭‍​‌‭‏⁫‭⁭⁬‌⁯‮‫‪‮⁬⁮⁬‌⁮‏⁬‮() => new ArrayList();

    static bool \u200C⁮‏‌‪⁮‏‪‭⁫⁭‎‎⁪⁮‪‮⁪‌⁬‍⁯‍‭⁬⁬⁮⁫⁫​​‎⁮‮‮‍⁫‭‪⁫‮([In] object obj0, [In] object obj1) => obj0.Equals(obj1);

    static object \u202B‭​⁯‎​‮⁪⁫‫​‫‪‏⁬⁭‍⁭⁪⁭‏‌‮‮⁬‍⁮⁭‭‌‎⁭‌‫⁮‫‮⁪‪⁫‮([In] ArrayList obj0, [In] int obj1) => obj0[obj1];

    static string \u206A⁪‍⁮‎⁫⁮⁫⁬‭‌⁭⁭⁪‎⁭‍⁭‬‫‏⁮⁬‏‏‬⁭‌‎‬⁬‬⁪‪⁯⁮⁭‭‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static void \u206E⁬‏‏​⁬⁯​‫‫⁭‍‏‬⁮⁬‫⁪⁪‏⁭‌‏‏‎‭‪‪‏‬‏‪​‎⁬‏‫⁯‎‮‮([In] string obj0) => Console.WriteLine(obj0);

    static string \u200B‬‎​‭​‬‌‬‍⁯​‫‎‫⁫⁬⁯‮‫⁫‮‏‎‮​​‎‭‮⁬‮‪⁭⁯​⁭⁫‪⁯‮([In] object obj0) => obj0.ToString();

    static string \u206C⁫​⁮⁬⁯‎‬‎⁮‭‎‏‌⁬⁫⁪‪​‭⁫‌‍‬⁭‌‏‭⁮⁯‎‮⁮⁪⁯⁮‍​‭‪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static int \u202A⁮‌⁮​‍‫‎‮‮‮⁮⁭​⁭‎‏‬⁭‌⁪⁮‭​⁭‎‬⁯⁭‌⁪⁬‭‬‮‍‭‌‎⁮‮([In] ArrayList obj0) => obj0.Count;

    static int \u200E⁭‬‮‏⁯⁬⁫‮‬‭‮‮‪⁫‫⁫‍‭⁬‭‮‫‭‌‏‫‍​‎‪‍‭‫‎⁭‫⁪‍‌‮([In] Control obj0) => obj0.Left;

    static void \u206F⁪⁫‌‫‬‏‬‮‭⁯‎⁪‮⁫‬⁬⁬‭⁭‭‍‌⁭⁪‬‪⁭‌‌⁬‏⁯‍‬‮‪‌‪‫‮([In] Control obj0, [In] int obj1) => obj0.Left = obj1;

    static int \u200C‬‌‬⁪‫‭​‪⁪‫‪⁫‏‪‭⁯‮‌‪⁮‎‪⁬‏⁮⁪‪⁮⁭⁭⁮⁬‮‪⁫‎⁭​‬‮([In] Control obj0) => obj0.Top;

    static void \u202A‪‫‭⁪‮⁪‍​⁭‏⁬⁭‌‬‬‮‭‌⁬‍‪‍​⁮⁫‌⁯‌‮‮‍⁪⁬‭⁬⁫‮‏‍‮([In] Control obj0, [In] int obj1) => obj0.Top = obj1;

    static DialogResult \u206B​‍‭⁪⁭‭⁯‮‭‌‬‪⁬‭⁯⁬⁮‪⁯‭‪‍‎⁬‭⁫‏⁪‬‌‮‪‭‫‭​‫⁫‏‮([In] string obj0) => MessageBox.Show(obj0);

    static void \u200E⁯‬⁯⁬‭‭​⁮‎‌⁪‍‫⁯​‭​‮​⁬⁮‮​‌‏‫⁭⁫‮‏⁬‏‏‎‍‭‭‎⁪‮([In] Control obj0, [In] string obj1) => obj0.Text = obj1;
  }
}
