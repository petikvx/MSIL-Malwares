// Decompiled with JetBrains decompiler
// Type: ?1?.?30?
// Assembly: Server, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B16D8A9B-E0EE-4C85-A3BA-4405997EF24D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.bgfw-a4892676fe7d1d73d3b37d39e1a1e9d1be41dca8bcf297ce0ddfed35c970d2b7.exe

using \u003F1\u003F;
using System;

namespace \u003F1\u003F
{
  internal class \u003F30\u003F
  {
    private const int \u003F1\u003F = 0;
    private const int \u003F15\u003F = 1;
    private const int \u003F16\u003F = 2;
    private const int \u003F17\u003F = 3;
    private const int \u003F18\u003F = 4;
    private const int \u003F19\u003F = 5;
    private static readonly int[] \u003F1\u003F = new int[3]
    {
      3,
      3,
      11
    };
    private static readonly int[] \u003F15\u003F = new int[3]
    {
      2,
      3,
      7
    };
    private byte[] \u003F1\u003F;
    private byte[] \u003F15\u003F;
    private \u003F31\u003F \u003F1\u003F;
    private int \u003F20\u003F;
    private int \u003F21\u003F;
    private int \u003F22\u003F;
    private int \u003F23\u003F;
    private int \u002E;
    private int \u003F25\u003F;
    private byte \u003F1\u003F;
    private int \u003F26\u003F;
    private static readonly int[] \u003F16\u003F = new int[19]
    {
      16,
      17,
      18,
      0,
      8,
      7,
      9,
      6,
      10,
      5,
      11,
      4,
      12,
      3,
      13,
      2,
      14,
      1,
      15
    };

    public bool \u003F1\u003F(\u003F48\u003F _param1)
    {
      while (true)
      {
        switch (this.\u003F20\u003F)
        {
          case 0:
            this.\u003F21\u003F = _param1.\u003F1\u003F(5);
            if (this.\u003F21\u003F >= 0)
            {
              this.\u003F21\u003F += 257;
              _param1.\u003F15\u003F(5);
              this.\u003F20\u003F = 1;
              goto case 1;
            }
            else
              goto label_21;
          case 1:
            this.\u003F22\u003F = _param1.\u003F1\u003F(5);
            if (this.\u003F22\u003F >= 0)
            {
              ++this.\u003F22\u003F;
              _param1.\u003F15\u003F(5);
              this.\u002E = this.\u003F21\u003F + this.\u003F22\u003F;
              this.\u003F15\u003F = new byte[this.\u002E];
              this.\u003F20\u003F = 2;
              goto case 2;
            }
            else
              goto label_22;
          case 2:
            this.\u003F23\u003F = _param1.\u003F1\u003F(4);
            if (this.\u003F23\u003F >= 0)
            {
              this.\u003F23\u003F += 4;
              _param1.\u003F15\u003F(4);
              this.\u003F1\u003F = new byte[19];
              this.\u003F26\u003F = 0;
              this.\u003F20\u003F = 3;
              goto case 3;
            }
            else
              goto label_23;
          case 3:
            for (; this.\u003F26\u003F < this.\u003F23\u003F; ++this.\u003F26\u003F)
            {
              int num = _param1.\u003F1\u003F(3);
              if (num < 0)
                return false;
              _param1.\u003F15\u003F(3);
              this.\u003F1\u003F[\u003F30\u003F.\u003F16\u003F[this.\u003F26\u003F]] = (byte) num;
            }
            this.\u003F1\u003F = new \u003F31\u003F(this.\u003F1\u003F);
            this.\u003F1\u003F = (byte[]) null;
            this.\u003F26\u003F = 0;
            this.\u003F20\u003F = 4;
            goto case 4;
          case 4:
            int num1;
            while (((num1 = this.\u003F1\u003F.\u003F1\u003F(_param1)) & -16) == 0)
            {
              this.\u003F15\u003F[this.\u003F26\u003F++] = this.\u003F1\u003F = (byte) num1;
              if (this.\u003F26\u003F == this.\u002E)
                return true;
            }
            if (num1 >= 0)
            {
              if (num1 < 17)
              {
                if (this.\u003F26\u003F == 0)
                  goto label_30;
              }
              else
                goto label_29;
label_15:
              this.\u003F25\u003F = num1 - 16;
              this.\u003F20\u003F = 5;
              goto case 5;
label_29:
              this.\u003F1\u003F = (byte) 0;
              goto label_15;
            }
            else
              goto label_28;
          case 5:
            int num2 = \u003F30\u003F.\u003F15\u003F[this.\u003F25\u003F];
            int num3 = _param1.\u003F1\u003F(num2);
            if (num3 >= 0)
            {
              _param1.\u003F15\u003F(num2);
              int num4 = num3 + \u003F30\u003F.\u003F1\u003F[this.\u003F25\u003F];
              if (this.\u003F26\u003F + num4 <= this.\u002E)
              {
                while (num4-- > 0)
                  this.\u003F15\u003F[this.\u003F26\u003F++] = this.\u003F1\u003F;
                if (this.\u003F26\u003F != this.\u002E)
                {
                  this.\u003F20\u003F = 4;
                  continue;
                }
                goto label_34;
              }
              else
                goto label_32;
            }
            else
              goto label_31;
          default:
            continue;
        }
      }
label_21:
      return false;
label_22:
      return false;
label_23:
      return false;
label_28:
      return false;
label_30:
      throw new Exception();
label_31:
      return false;
label_32:
      throw new Exception();
label_34:
      return true;
    }

    public \u003F31\u003F \u003F1\u003F()
    {
      byte[] destinationArray = new byte[this.\u003F21\u003F];
      Array.Copy((Array) this.\u003F15\u003F, 0, (Array) destinationArray, 0, this.\u003F21\u003F);
      return new \u003F31\u003F(destinationArray);
    }

    public \u003F31\u003F \u003F15\u003F()
    {
      byte[] destinationArray = new byte[this.\u003F22\u003F];
      Array.Copy((Array) this.\u003F15\u003F, this.\u003F21\u003F, (Array) destinationArray, 0, this.\u003F22\u003F);
      return new \u003F31\u003F(destinationArray);
    }
  }
}
