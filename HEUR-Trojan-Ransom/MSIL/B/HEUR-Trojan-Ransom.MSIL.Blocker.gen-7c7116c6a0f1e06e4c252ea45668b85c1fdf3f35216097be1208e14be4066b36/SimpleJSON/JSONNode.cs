// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: StaticIndexRangePartitionForArr, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AF5A1990-133C-4640-B616-63D01D46DEA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7c7116c6a0f1e06e4c252ea45668b85c1fdf3f35216097be1208e14be4066b36.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 903943087;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 13390452)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1765452914 ^ -1305520194;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1084511042;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1630157328)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * -898258767 ^ 862835097;
              continue;
            case 3:
              num1 = (int) num2 * 1167399610 ^ 285765599;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 2104548137;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1494614906)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * -508109836 ^ 1183979033;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1951555562;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1940704167)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1218461369 ^ 1751926790;
            continue;
          case 2:
            num1 = (int) num2 * -1264966578 ^ -876137528;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1675640068;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -440468298)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1931919701 ^ 1778554606;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 889767595;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 610498002)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -301163596 ^ 2101332617;
            continue;
          case 3:
            num1 = (int) num2 * 860121975 ^ -346784343;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 297265158;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 344277765)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -2011548653 ^ -409166878;
              continue;
            case 3:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * 533992732 ^ -325822205;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1792846553;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1801191254)) % 3U)
          {
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -872467780 ^ 1248373089;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -1055164893;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1278866878)) % 4U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 2114247552 ^ 256530560;
            continue;
          case 2:
            num1 = (int) num2 * 117706874 ^ 1759982922;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 280466943;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1662160912)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1614140003 ^ -95848113;
            continue;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * -384616081 ^ -180062832;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = 1765255309;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 800166402)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = result;
              num1 = (int) num2 * -477650514 ^ -500523358;
              continue;
            case 2:
              num1 = (int) num2 * -605299377 ^ 99674368;
              continue;
            case 3:
              int num3 = !int.TryParse(this.Value, out result) ? 1596729831 : (num3 = 1009237591);
              num1 = num3 ^ (int) num2 * 743256612;
              continue;
            case 5:
              asInt = 0;
              num1 = 1080643078;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1915728537;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2053130567)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1022134447 ^ -393972603;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -306171863 ^ -636556660;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = 2014957277;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1002246513)) % 5U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * -117730316 ^ -1105279077;
              continue;
            case 1:
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‫‪‭‌‮⁬⁪‎⁫‬⁬⁫⁬⁮‎⁫‏‪‎⁯‭⁭‏‍‎‌⁭‭‌‍⁪‪⁬⁪⁭⁭‍‎⁭‮(), out result) ? 1554506777 : (num3 = 483948435);
              num1 = num3 ^ (int) num2 * 319877203;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = 444324971;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -2110414563;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -646139934)) % 6U)
          {
            case 1:
              int num3 = !double.TryParse(this.Value, out result) ? -643879456 : (num3 = -1509575749);
              num1 = num3 ^ (int) num2 * 462534035;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * 2136624623 ^ -2005073879;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = -1104586952;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * 384006193 ^ 1198894255;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -707422242;
        bool result;
        bool flag;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1135454420)) % 6U)
          {
            case 0:
              asBool = result;
              num1 = (int) num2 * 1791630515 ^ 1130499971;
              continue;
            case 1:
              int num3 = !flag ? -206699897 : (num3 = -1241509416);
              num1 = num3 ^ (int) num2 * 270639996;
              continue;
            case 2:
              result = false;
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 494990923 ^ -814303979;
              continue;
            case 3:
              asBool = !JSONNode.\u202C‍⁪‭‫‮‮‌⁬⁪⁪⁭⁭‫⁭‬⁬‬‍⁯⁫⁭‫⁭⁫‪‍⁫‎‌⁫⁬‎‫‭⁬‍⁮‬‬‮(this.Value);
              num1 = -270202029;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
        JSONArray asArray = this as JSONArray;
label_1:
        int num1 = -2122104821;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1867668225)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 7758712 ^ 1909464310;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -225554407;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -637224480)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1600698557 ^ -950597233;
              continue;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1329701474 ^ -640968662;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -286173712;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1204579654)) % 5U)
        {
          case 1:
            str2 = d.Value;
            break;
          case 2:
            num1 = (int) num2 * -1639810309 ^ 813039944;
            continue;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -234601333 ^ 795016244;
              continue;
            }
            str2 = (string) null;
            break;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1613498078;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -503466540;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -99034061)) % 6U)
        {
          case 0:
            int num3 = flag1 ? 2049610322 : (num3 = 2099402428);
            num1 = num3 ^ (int) num2 * 1767599656;
            continue;
          case 1:
            goto label_3;
          case 3:
            flag2 = true;
            num1 = (int) num2 * -1538015465 ^ 1894672124;
            continue;
          case 4:
            goto label_1;
          case 5:
            flag2 = (object) a == b;
            num1 = -1857991349;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -524275341;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -12484841;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1575240159)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1684623499 ^ -1956597695;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1374606751;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1594818986)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -690839829 ^ -1752919129;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * 1762839258 ^ -390340463;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1197271678;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -8507945)) % 4U)
        {
          case 1:
            hashCode = this.\u200B‏‬‍‫‪‪‮⁬‭​‍‍‪⁬‏⁭⁯⁯‭⁮​⁪‭‌‌​‬⁬‬⁭‬⁮‎‭⁪‏⁫‫‭‮();
            num1 = (int) num2 * 97651936 ^ -2029386280;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1369775810 ^ 571157897;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 452632449;
      string str1;
      int num2;
      string str2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1843989891)) % 30U)
        {
          case 0:
            switch (ch2)
            {
              case '\b':
                goto label_30;
              case '\t':
                goto label_4;
              case '\n':
                goto label_25;
              case '\v':
                goto label_20;
              case '\f':
                goto label_7;
              case '\r':
                goto label_5;
              default:
                num1 = (int) num3 * 586697996 ^ -2094895326;
                continue;
            }
          case 1:
label_25:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\n");
            num1 = 989875767;
            continue;
          case 2:
            num1 = (int) num3 * -1739878924 ^ -1325273781;
            continue;
          case 3:
            num1 = (int) num3 * -1818906850 ^ -1648203646;
            continue;
          case 4:
label_20:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, ch3.ToString());
            num1 = 1680917146;
            continue;
          case 5:
            ++num2;
            num1 = (int) num3 * -437664865 ^ 918010652;
            continue;
          case 6:
            num1 = (int) num3 * 1980938682 ^ 1374829097;
            continue;
          case 7:
            num1 = (int) num3 * 929802325 ^ -1618512453;
            continue;
          case 8:
label_4:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\t");
            num1 = 1680917146;
            continue;
          case 9:
label_30:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\b");
            num1 = 1680917146;
            continue;
          case 10:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u200F‪‪‪‭⁯‫⁯​⁬⁯⁮‌‍⁪⁭‎‭⁭⁬⁯⁬‎‮‭‍‫‌⁯‍⁬⁪‮‎‫‪⁬​⁭‮(str2) ? 515886085 : (num4 = 1688743545);
            continue;
          case 11:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\\\");
            num1 = 2092924957;
            continue;
          case 12:
            num1 = (int) num3 * 827333979 ^ 320864176;
            continue;
          case 14:
            ch3 = JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(str2, num2);
            ch1 = ch3;
            num1 = 1557132992;
            continue;
          case 15:
            ch2 = ch1;
            num1 = (int) num3 * 780472650 ^ 283674525;
            continue;
          case 16:
            str1 = "";
            num1 = (int) num3 * 702127739 ^ 780976896;
            continue;
          case 17:
            str2 = aText;
            num2 = 0;
            num1 = (int) num3 * 883803104 ^ -182972210;
            continue;
          case 18:
            str3 = str1;
            num1 = (int) num3 * -1975219609 ^ -1394316918;
            continue;
          case 19:
            num1 = (int) num3 * -894935790 ^ 392436476;
            continue;
          case 20:
            int num5;
            num1 = num5 = ch2 != '\\' ? 826048227 : (num5 = 1691985288);
            continue;
          case 21:
            num1 = (int) num3 * -231532870 ^ 825069213;
            continue;
          case 22:
label_7:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\f");
            num1 = 1888667667;
            continue;
          case 23:
            num1 = 976556654;
            continue;
          case 24:
            goto label_1;
          case 25:
            int num6;
            num1 = num6 = ch2 != '"' ? 223383965 : (num6 = 870771508);
            continue;
          case 26:
            num1 = (int) num3 * -1728187132 ^ 107253834;
            continue;
          case 27:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\\"");
            num1 = 854295070;
            continue;
          case 28:
            num1 = (int) num3 * 1189234947 ^ 148480554;
            continue;
          case 29:
label_5:
            str1 = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(str1, "\\r");
            num1 = 1680917146;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 178435073;
      char ch1;
      bool flag1;
      string aKey;
      bool flag2;
      string aItem;
      int num2;
      bool flag3;
      char ch2;
      bool flag4;
      bool flag5;
      bool flag6;
      JSONNode jsonNode1;
      Stack<JSONNode> jsonNodeStack;
      char ch3;
      bool flag7;
      bool flag8;
      bool flag9;
      char ch4;
      bool flag10;
      JSONNode jsonNode2;
      bool flag11;
      bool flag12;
      bool flag13;
      string s;
      bool flag14;
      bool flag15;
      bool flag16;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2007621946)) % 155U)
        {
          case 0:
            int num4;
            num1 = num4 = num2 < JSONNode.\u200F‪‪‪‭⁯‫⁯​⁬⁯⁮‌‍⁪⁭‎‭⁭⁬⁯⁬‎‮‭‍‫‌⁯‍⁬⁪‮‎‫‪⁬​⁭‮(aJSON) ? 1441725748 : (num4 = 45029249);
            continue;
          case 1:
            num1 = (int) num3 * -395560491 ^ -1801113941;
            continue;
          case 2:
            num1 = 1873595842;
            continue;
          case 3:
            flag13 = JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aItem, "");
            num1 = 367589071;
            continue;
          case 4:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2118897345 ^ -1310350100;
            continue;
          case 5:
            num1 = (int) num3 * -1457827808 ^ 575909968;
            continue;
          case 6:
            jsonNode2 = jsonNode1;
            num1 = 305263741;
            continue;
          case 7:
            num1 = (int) num3 * 197579527 ^ -398000944;
            continue;
          case 8:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1296289638 ^ -819917260;
            continue;
          case 9:
            int num5 = !JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aItem, "") ? -1405370876 : (num5 = -27376498);
            num1 = num5 ^ (int) num3 * 1947572079;
            continue;
          case 10:
            int num6;
            num1 = num6 = ch1 != ',' ? 604585337 : (num6 = 1218386744);
            continue;
          case 11:
            aKey = aItem;
            num1 = 1852714335;
            continue;
          case 12:
          case 66:
          case 94:
          case 104:
          case 154:
label_35:
            ++num2;
            num1 = 2045250009;
            continue;
          case 13:
            num1 = (int) num3 * 1434677228 ^ -894691623;
            continue;
          case 14:
            ch3 = JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2);
            num1 = (int) num3 * -1896772514 ^ 1699049305;
            continue;
          case 15:
            num1 = (int) num3 * -1617919049 ^ 1704639144;
            continue;
          case 16:
            num1 = (int) num3 * 1238733727 ^ -1341532258;
            continue;
          case 17:
            num1 = (int) num3 * -1876793136 ^ 577508272;
            continue;
          case 18:
            flag10 = JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aKey, "");
            num1 = 752098070;
            continue;
          case 19:
label_81:
            ++num2;
            flag6 = flag4;
            num1 = 895461780;
            continue;
          case 20:
            num1 = (int) num3 * 975053483 ^ -1165041828;
            continue;
          case 21:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1620516183 ^ -444466072;
            continue;
          case 22:
label_11:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, "\t");
            num1 = 1859132017;
            continue;
          case 23:
            int num7 = ch1 > ' ' ? 218675132 : (num7 = 1995275548);
            num1 = num7 ^ (int) num3 * -1680389480;
            continue;
          case 24:
            num1 = (int) num3 * -836905690 ^ 307007088;
            continue;
          case 25:
            num2 += 4;
            num1 = (int) num3 * -615276889 ^ 2046965404;
            continue;
          case 26:
label_28:
            int num8;
            num1 = num8 = flag4 ? 594942388 : (num8 = 684011699);
            continue;
          case 27:
            int num9 = flag5 ? -1163395947 : (num9 = -408945996);
            num1 = num9 ^ (int) num3 * -152613529;
            continue;
          case 28:
            num1 = (int) num3 * 308398631 ^ -1339342923;
            continue;
          case 29:
            int num10 = flag9 ? -1579034651 : (num10 = -1144302764);
            num1 = num10 ^ (int) num3 * -8510986;
            continue;
          case 30:
            int num11 = !flag10 ? 2084392717 : (num11 = 1220826676);
            num1 = num11 ^ (int) num3 * -906502687;
            continue;
          case 31:
            num1 = (int) num3 * 46043617 ^ 327020356;
            continue;
          case 32:
            aItem = "";
            num1 = (int) num3 * -772190307 ^ -610090515;
            continue;
          case 33:
            flag4 = false;
            num1 = (int) num3 * -1450939148 ^ 1931526829;
            continue;
          case 34:
            num1 = (int) num3 * 2109385172 ^ 323178100;
            continue;
          case 35:
            num1 = (int) num3 * -2141899553 ^ 974767205;
            continue;
          case 36:
            ch4 = JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2);
            ch2 = ch4;
            num1 = (int) num3 * 1025983192 ^ -14695490;
            continue;
          case 37:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -343638273 ^ 314204671;
            continue;
          case 38:
            num1 = 2082556892;
            continue;
          case 39:
            int num12;
            num1 = num12 = ch1 == '"' ? 885029246 : (num12 = 1728236321);
            continue;
          case 40:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, "\f");
            num1 = 1764453276;
            continue;
          case 41:
            flag15 = JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aKey, "");
            num1 = 1915843679;
            continue;
          case 42:
            goto label_60;
          case 43:
            num1 = (int) num3 * 968511676 ^ -843293440;
            continue;
          case 44:
            num1 = (int) num3 * -161114037 ^ -252888471;
            continue;
          case 45:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 427947781 ^ -871192210;
            continue;
          case 46:
            num1 = (int) num3 * 753118579 ^ -896118759;
            continue;
          case 47:
            num1 = (int) num3 * 947384326 ^ -880780531;
            continue;
          case 48:
            aKey = "";
            num1 = (int) num3 * 743676982 ^ -576080904;
            continue;
          case 49:
            int num13;
            num1 = num13 = !flag4 ? 1244352596 : (num13 = 147902215);
            continue;
          case 50:
            ch1 = ch3;
            num1 = (int) num3 * 801617774 ^ 183732409;
            continue;
          case 51:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1044681616 ^ -2001974606;
            continue;
          case 52:
            num1 = 1464446131;
            continue;
          case 53:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1318988196 ^ 1650072551;
            continue;
          case 54:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1793780029;
            continue;
          case 55:
            int num14;
            num1 = num14 = ch2 != 'n' ? 945171505 : (num14 = 52882144);
            continue;
          case 56:
            int num15 = flag11 ? 1050242087 : (num15 = 1451985993);
            num1 = num15 ^ (int) num3 * -1788185081;
            continue;
          case 57:
label_143:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, "\r");
            num1 = 1587070564;
            continue;
          case 58:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 316162373 ^ -646929359;
            continue;
          case 59:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 419733445 ^ 1395909548;
            continue;
          case 60:
            int num16 = !flag7 ? -1836683523 : (num16 = -1198966008);
            num1 = num16 ^ (int) num3 * 741057886;
            continue;
          case 61:
            flag2 = JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aKey, "");
            num1 = 310185815;
            continue;
          case 62:
            flag14 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 527399074 ^ 769548322;
            continue;
          case 63:
            num1 = (int) num3 * 412448524 ^ -2107194532;
            continue;
          case 64:
            num1 = (int) num3 * 1457076764 ^ 442405976;
            continue;
          case 65:
            num1 = (int) num3 * -480561358 ^ -1994628642;
            continue;
          case 67:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 713574360 ^ -716488416;
            continue;
          case 68:
            int num17;
            num1 = num17 = flag4 ? 161777165 : (num17 = 1120069171);
            continue;
          case 69:
            aKey = JSONNode.\u206D⁪‮​⁭‎‬‭‪‪⁬⁪‍‪‭⁫⁭‎⁫⁯⁯‪⁭‮‌‪⁯‪​⁭⁪⁪⁮​‭‌‮⁪​‬‮(aKey);
            num1 = (int) num3 * -776595222 ^ -1720000994;
            continue;
          case 70:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 1856117232;
            continue;
          case 71:
            flag5 = flag4;
            num1 = (int) num3 * 1096230291 ^ -42593937;
            continue;
          case 72:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1945601319 ^ -846753007;
            continue;
          case 73:
            num1 = (int) num3 * -580771542 ^ 1509073410;
            continue;
          case 74:
            num1 = (int) num3 * -1501661344 ^ -2131724492;
            continue;
          case 75:
            goto label_1;
          case 76:
            int num18;
            num1 = num18 = ch1 != '{' ? 1089711981 : (num18 = 1535008163);
            continue;
          case 77:
            flag16 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1602484147 ^ -2076859457;
            continue;
          case 78:
            int num19 = !flag8 ? -1199912494 : (num19 = -147173835);
            num1 = num19 ^ (int) num3 * -823785890;
            continue;
          case 79:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1319153765 ^ 729761830;
            continue;
          case 80:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, "\b");
            num1 = 1859132017;
            continue;
          case 81:
            int num20 = !flag13 ? -1869138642 : (num20 = -1827426683);
            num1 = num20 ^ (int) num3 * 923899370;
            continue;
          case 82:
            num1 = (int) num3 * 930485896 ^ 948399728;
            continue;
          case 83:
            aKey = JSONNode.\u206D⁪‮​⁭‎‬‭‪‪⁬⁪‍‪‭⁫⁭‎⁫⁯⁯‪⁭‮‌‪⁯‪​⁭⁪⁪⁮​‭‌‮⁪​‬‮(aKey);
            num1 = (int) num3 * -1134628914 ^ -1961473989;
            continue;
          case 84:
            int num21;
            num1 = num21 = ch2 != 'f' ? 1714264892 : (num21 = 56735148);
            continue;
          case 85:
            int num22 = !flag2 ? 858894649 : (num22 = 1497291778);
            num1 = num22 ^ (int) num3 * 1298724556;
            continue;
          case 86:
            num1 = (int) num3 * 154432543 ^ -1002207879;
            continue;
          case 87:
            num1 = 1310551099;
            continue;
          case 88:
            flag9 = JSONNode.\u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮(aKey, "");
            num1 = 1070549729;
            continue;
          case 89:
            switch (ch1)
            {
              case '\t':
                goto label_28;
              case '\n':
              case '\r':
                goto label_35;
              case '\v':
              case '\f':
                goto label_106;
              default:
                num1 = (int) num3 * -37854750 ^ 2055898216;
                continue;
            }
          case 90:
            int num23 = ch2 != 'b' ? 597327291 : (num23 = 486162727);
            num1 = num23 ^ (int) num3 * -1600466029;
            continue;
          case 92:
            num1 = (int) num3 * 1349290855 ^ 1513534191;
            continue;
          case 93:
            int num24 = ch1 > ',' ? -743804048 : (num24 = -99344095);
            num1 = num24 ^ (int) num3 * -2024379294;
            continue;
          case 95:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1296268508 ^ 1039154526;
            continue;
          case 96:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -856788166 ^ -130735667;
            continue;
          case 97:
            num1 = (int) num3 * -1116766664 ^ -1576358354;
            continue;
          case 98:
label_106:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = 1835793098;
            continue;
          case 99:
            int num25 = jsonNode1 != (object) null ? 862321408 : (num25 = 1122909260);
            num1 = num25 ^ (int) num3 * -1223770307;
            continue;
          case 100:
            int num26 = ch2 <= 'f' ? -1886649043 : (num26 = -1368992543);
            num1 = num26 ^ (int) num3 * -1288717056;
            continue;
          case 101:
label_112:
            s = JSONNode.\u202B‫⁫‮⁬‪​⁮⁮​⁮⁯⁯‮‎‌‪‭‬‍‭‪⁭⁭‏⁬​‭‌​⁭‎‏‏⁭‪⁬​‍‫‮(aJSON, num2 + 1, 4);
            num1 = 2020787476;
            continue;
          case 102:
            int num27;
            num1 = num27 = ch1 == '}' ? 1700940678 : (num27 = 1640450253);
            continue;
          case 103:
            aItem = "";
            num1 = (int) num3 * 725521956 ^ 909961112;
            continue;
          case 105:
            aKey = "";
            num1 = 76776436;
            continue;
          case 106:
            flag7 = jsonNodeStack.Count == 0;
            num1 = 1763589227;
            continue;
          case 107:
label_118:
            int num28;
            num1 = num28 = !flag4 ? 676019519 : (num28 = 1953210311);
            continue;
          case 108:
            flag1 = jsonNode1 != (object) null;
            num1 = (int) num3 * -2093742392 ^ 1983691675;
            continue;
          case 109:
            num1 = (int) num3 * 1699237660 ^ -363796347;
            continue;
          case 110:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 124091023 ^ 377463980;
            continue;
          case 111:
            num1 = (int) num3 * -2105236468 ^ 519724549;
            continue;
          case 112:
            int num29 = ch1 != ':' ? -1700639689 : (num29 = -614135091);
            num1 = num29 ^ (int) num3 * 1210728783;
            continue;
          case 113:
            num1 = (int) num3 * -346933757 ^ -1084996292;
            continue;
          case 114:
            int num30 = flag14 ? -881529730 : (num30 = -99908668);
            num1 = num30 ^ (int) num3 * 2108664572;
            continue;
          case 115:
            goto label_14;
          case 116:
            num1 = (int) num3 * -1428689900 ^ 1174494472;
            continue;
          case 117:
            flag4 = !flag4;
            num1 = 315096186;
            continue;
          case 118:
            switch (ch2)
            {
              case 'r':
                goto label_143;
              case 's':
                goto label_131;
              case 't':
                goto label_11;
              case 'u':
                goto label_112;
              default:
                num1 = 893823117;
                continue;
            }
          case 119:
            num1 = (int) num3 * 1921318098 ^ -1611055523;
            continue;
          case 120:
            int num31 = !flag16 ? 301655775 : (num31 = 878648552);
            num1 = num31 ^ (int) num3 * 1029114528;
            continue;
          case 121:
            aKey = JSONNode.\u206D⁪‮​⁭‎‬‭‪‪⁬⁪‍‪‭⁫⁭‎⁫⁯⁯‪⁭‮‌‪⁯‪​⁭⁪⁪⁮​‭‌‮⁪​‬‮(aKey);
            num1 = (int) num3 * 1780837520 ^ -1958284007;
            continue;
          case 122:
            flag3 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1806858703 ^ 1503951403;
            continue;
          case 123:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, "\n");
            num1 = 1859132017;
            continue;
          case 124:
            switch (ch1)
            {
              case '[':
                goto label_118;
              case '\\':
                goto label_81;
              case ']':
                goto label_99;
              default:
                num1 = 55035625;
                continue;
            }
          case 125:
            flag12 = flag4;
            num1 = 1984845148;
            continue;
          case 126:
            aKey = "";
            aItem = "";
            num1 = 241948970;
            continue;
          case (uint) sbyte.MaxValue:
            int num32 = !flag15 ? -304025726 : (num32 = -1065474920);
            num1 = num32 ^ (int) num3 * -10675462;
            continue;
          case 128:
            int num33 = flag6 ? -1603249986 : (num33 = -1968007012);
            num1 = num33 ^ (int) num3 * 983151003;
            continue;
          case 129:
            int num34 = !flag12 ? 524882283 : (num34 = 831651458);
            num1 = num34 ^ (int) num3 * 312580250;
            continue;
          case 130:
            num1 = (int) num3 * 947674860 ^ -66138429;
            continue;
          case 131:
            num1 = (int) num3 * -1544183551 ^ -565278670;
            continue;
          case 132:
label_131:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, ch4.ToString());
            num1 = 1264574578;
            continue;
          case 133:
            num1 = (int) num3 * 637660259 ^ -1990802076;
            continue;
          case 134:
label_99:
            flag8 = flag4;
            num1 = 725021184;
            continue;
          case 135:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 694927240 ^ -1036298482;
            continue;
          case 136:
            num1 = (int) num3 * 547114033 ^ -1100888573;
            continue;
          case 137:
            num1 = (int) num3 * -437638326 ^ -1020363747;
            continue;
          case 138:
            int num35 = jsonNode1 is JSONArray ? 1944332427 : (num35 = 176394204);
            num1 = num35 ^ (int) num3 * 711512570;
            continue;
          case 139:
            int num36;
            num1 = num36 = ch1 > ']' ? 1170732466 : (num36 = 724452277);
            continue;
          case 140:
            num1 = (int) num3 * -976587432 ^ 536256313;
            continue;
          case 141:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1545582033;
            continue;
          case 142:
            aItem = JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮(aItem, JSONNode.\u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1124770182 ^ -1257191273;
            continue;
          case 143:
            num1 = (int) num3 * -563604701 ^ 592948940;
            continue;
          case 144:
            aItem = "";
            num1 = (int) num3 * 2063190371 ^ -1453440513;
            continue;
          case 145:
            int num37 = flag3 ? 852791628 : (num37 = 1564093027);
            num1 = num37 ^ (int) num3 * -158857183;
            continue;
          case 146:
            num1 = 966092896;
            continue;
          case 147:
            aKey = "";
            num1 = 521590640;
            continue;
          case 148:
            int num38;
            num1 = num38 = ch1 != ' ' ? 1572007366 : (num38 = 1945440179);
            continue;
          case 149:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1740679748 ^ -1050593414;
            continue;
          case 150:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1512359440 ^ 1387857318;
            continue;
          case 151:
            int num39 = flag1 ? -1393643867 : (num39 = -1004803388);
            num1 = num39 ^ (int) num3 * -1669459004;
            continue;
          case 152:
            num1 = 636409798;
            continue;
          case 153:
            jsonNodeStack.Pop();
            num1 = 456930464;
            continue;
          default:
            goto label_155;
        }
      }
label_14:
      throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("JSON Parse: Too many closing brackets");
label_60:
      throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("JSON Parse: Quotation marks seems to be messed up.");
label_155:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1203996201;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1208066882)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -819735003 ^ -689042940;
            continue;
          case 1:
            this.Serialize(JSONNode.\u206F‪⁪​‏‪⁮‮​⁯‬⁭‬⁬‫‪⁯‬‬‏‫‮‫⁪‎‏‏‮⁮⁯⁭​⁪‍⁯⁪⁪⁭⁪‍‮(aData));
            num1 = (int) num2 * -38524695 ^ 1549036759;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200F‎⁭‎‌‪‬⁫‍‭‮‌‌‫‪​‮‍‎⁬⁮⁫‮⁯‏⁮⁯⁭‫⁮‏‪‌⁪⁮⁮‭⁭⁯⁭‮(JSONNode.\u206B⁮⁪⁮⁯‍⁯⁬‪‏⁬‏⁯​⁬‎‭‪‍⁫‬⁬‏‬⁮⁫‫⁫‏‪‮⁭⁬⁪‌‎‭​‍‍‮((FileSystemInfo) JSONNode.\u206D‎‌‌‬‮⁯⁫‭‪‌‌‪‬‮⁮‮‮‪‫⁬⁫‎‎‌‍‮⁪⁪‪‌‮‬‪‫​⁯‭‍⁪‮(JSONNode.\u200E⁮‬‎⁯⁮‎‭‏‬⁭‫‭​⁫​‏‮⁭⁬‌⁪​​‌‮‏‎⁮‫⁫⁫⁮‌‏‍⁭⁮‏⁭‮(aFileName))));
      FileStream aData = JSONNode.\u202B‍‭⁪‪‫‪‎⁬⁫‎⁫⁫‏‮‌‍‮⁭‎⁮‌⁫‍⁭‎‎​⁭‬⁫‬⁫‬‭‫⁫​‪‪‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -1064487665;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -439631123)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              num1 = (int) num2 * 1882892511 ^ -2115541551;
              continue;
            case 2:
              goto label_9;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -569192105;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -439631123)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -1053632090 ^ -847760521;
                continue;
              case 2:
                JSONNode.\u200E⁫⁭‏‬‏⁬‭‬⁫⁮​⁬⁬⁬⁯‌⁫‮‪‫⁭‍⁪‏⁮‍‌‏‫‎⁮‎‪‫⁮​⁯‍‮((IDisposable) aData);
                num3 = (int) num4 * -1478806467 ^ 430463650;
                continue;
              case 3:
                goto label_7;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206F​‪⁯‪⁬⁯⁪⁫⁪⁫‍⁬⁪⁭‍​‪‫⁫‫​‪⁪‍⁪‪‬⁮‮⁯‍⁪‍⁪⁯⁯⁪‏‪‮();
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1683962949;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1391405177)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              JSONNode.\u206B‍⁭⁪⁬‍‭‬‭‍‎⁬‏⁮⁮‍‏‪‭‍‌⁭‏⁭‎‬⁬⁬​‫⁮⁫⁯‫⁪‮‫‫⁬‫‮((Stream) aData, 0L);
              num1 = (int) num2 * -564632337 ^ -98423487;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return JSONNode.\u206E‎⁬‮‌​‬‪‍⁫‬⁪⁫⁬​⁪​‍‌⁮‮⁫⁭‮‬⁯‬‪‌‭‎‎‭‏⁬‫⁯‌‪⁪‮(JSONNode.\u206E‫‭‫⁫‫⁮⁯⁪‬‏‍⁮⁪⁯‍‫‮⁫⁪⁪‍⁭⁮‫⁯⁯⁪‪‏‪⁯⁬⁭⁮‏⁫‍‎‪‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = 830712124;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1391405177)) % 4U)
            {
              case 1:
                JSONNode.\u200E⁫⁭‏‬‏⁬‭‬⁫⁮​⁬⁬⁬⁯‌⁫‮‪‫⁭‍⁪‏⁮‍‌‏‫‎⁮‎‪‫⁮​⁯‍‮((IDisposable) aData);
                num3 = (int) num4 * 67289303 ^ -536409448;
                continue;
              case 2:
                num3 = (int) num4 * 866119924 ^ -1020397455;
                continue;
              case 3:
                goto label_7;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1004007606;
      JSONArray jsonArray;
      int num2;
      int num3;
      bool flag1;
      JSONClass jsonClass;
      JSONNode jsonNode;
      string aKey;
      JSONNode aItem;
      bool flag2;
      int num4;
      int num5;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -171187945)) % 40U)
        {
          case 0:
            num4 = 0;
            num1 = (int) num6 * 1313903669 ^ -840981227;
            continue;
          case 1:
label_26:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‎⁭‮⁪‪‍‭⁪​‬‌‭⁪⁯‏⁯⁫‫⁭‭​‬⁬‌‪⁮⁫‬‎‭⁯⁪⁬‌‪‪‌⁭⁭‮(aReader));
            num1 = -1784401024;
            continue;
          case 2:
            num1 = (int) num6 * 472478540 ^ 2141745536;
            continue;
          case 3:
            num1 = (int) num6 * -1890632571 ^ 2121518503;
            continue;
          case 4:
            num1 = (int) num6 * -1818813148 ^ 1080698218;
            continue;
          case 5:
            flag1 = num2 < num3;
            num1 = -992838875;
            continue;
          case 6:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 418306972 ^ 1361863330;
            continue;
          case 7:
            ++num4;
            num1 = (int) num6 * 1496611833 ^ 1041806706;
            continue;
          case 8:
            num5 = JSONNode.\u206D⁬‪⁭⁭⁭​⁯‪‭⁮‭⁮‪​⁪‮‮⁪‌‫‍​⁮⁭‍‭‎‍​‮⁬‌‪‪‬‭⁫‭‭‮(aReader);
            num1 = (int) num6 * -247039537 ^ -502456884;
            continue;
          case 9:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B⁪‍‪⁭​‌‭​⁫‎‮‎‪‪‏‫‪‪⁯⁯​‏⁯​⁫​​‎⁮⁭‫‬⁭⁭‮⁫‫⁯‪‮(aReader));
            num1 = -149779003;
            continue;
          case 10:
            num1 = (int) num6 * -1426831396 ^ 1600177199;
            continue;
          case 11:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -464696566 ^ -913025210;
            continue;
          case 12:
            num1 = (int) num6 * -1676498912 ^ -1459032657;
            continue;
          case 13:
label_18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁫‫‌⁯⁬‪⁮⁭⁫‍‏‬⁮​⁪‮⁫⁬⁪‬‪‭⁬⁯‮‏​⁯‏‮​‏⁯‬‌⁭‭‫⁬‮(aReader));
            num1 = -1783048744;
            continue;
          case 14:
            aKey = JSONNode.\u202C‎⁭‮⁪‪‍‭⁪​‬‌‭⁪⁯‏⁯⁫‫⁭‭​‬⁬‌‪⁮⁫‬‎‭⁯⁪⁬‌‪‪‌⁭⁭‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1429881473 ^ -1521257213;
            continue;
          case 16:
            num1 = -646729191;
            continue;
          case 17:
            num3 = JSONNode.\u206D⁬‪⁭⁭⁭​⁯‪‭⁮‭⁮‪​⁪‮‮⁪‌‫‍​⁮⁭‍‭‎‍​‮⁬‌‪‪‬‭⁫‭‭‮(aReader);
            num1 = (int) num6 * 1443780132 ^ 1462965272;
            continue;
          case 18:
            int num7 = flag1 ? 736227191 : (num7 = 1666234248);
            num1 = num7 ^ (int) num6 * 799421662;
            continue;
          case 19:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * 1760214865 ^ -482200760;
            continue;
          case 20:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -274522837;
            continue;
          case 21:
            num1 = (int) num6 * 1404415703 ^ -850252469;
            continue;
          case 22:
label_6:
            num1 = -253825089;
            continue;
          case 23:
            num1 = (int) num6 * -944176136 ^ -565046640;
            continue;
          case 24:
            ++num2;
            num1 = (int) num6 * 1238647394 ^ 1262009354;
            continue;
          case 25:
            int num8 = !flag2 ? 1909061805 : (num8 = 542053744);
            num1 = num8 ^ (int) num6 * 1858494435;
            continue;
          case 26:
label_31:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‌⁮‫‬‬⁫⁭⁪‭‫⁫‪​‮⁮⁯‪⁮⁭‭‫‌⁬‫‏⁪⁯‎⁪‏‍‮⁫⁯⁮⁬‪⁯‌‮(aReader));
            num1 = -1604122463;
            continue;
          case 27:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1351566304 ^ -477019777;
            continue;
          case 28:
            num1 = -810652295;
            continue;
          case 29:
label_15:
            num1 = -1172230216;
            continue;
          case 30:
            goto label_30;
          case 31:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_27;
              case JSONBinaryTag.Class:
                goto label_6;
              case JSONBinaryTag.Value:
                goto label_26;
              case JSONBinaryTag.IntValue:
                goto label_15;
              case JSONBinaryTag.DoubleValue:
                goto label_20;
              case JSONBinaryTag.BoolValue:
                goto label_18;
              case JSONBinaryTag.FloatValue:
                goto label_31;
              default:
                num1 = (int) num6 * -241175644 ^ 2101261713;
                continue;
            }
          case 32:
label_27:
            num1 = -1348032386;
            continue;
          case 33:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1465444079 ^ 1948797947;
            continue;
          case 34:
            flag2 = num4 < num5;
            num1 = -450858098;
            continue;
          case 35:
            num1 = (int) num6 * 2041509864 ^ 626398496;
            continue;
          case 36:
            goto label_1;
          case 37:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200D⁭⁭‭⁫‎‮‌‮‌⁫‍‮‌‮‫‬​‌⁬‭‭⁮‍‏‬⁭⁪⁪‍⁪‏‮‍‭⁯⁮‌⁬⁮‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 660194362 ^ 1279922226;
            continue;
          case 38:
            num1 = (int) num6 * 1274769728 ^ -445835688;
            continue;
          case 39:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁬‪⁭⁭⁭​⁯‪‭⁮‭⁮‪​⁪‮‮⁪‌‫‍​⁮⁭‍‭‎‍​‮⁬‌‪‪‬‭⁫‭‭‮(aReader));
            num1 = (int) num6 * 1246674085 ^ 564563863;
            continue;
          default:
            goto label_42;
        }
      }
label_30:
      throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮(JSONNode.\u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_42:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200F⁮⁮⁬‬‫‍‍‪⁫‏⁭‍⁬‫‭⁯⁮‌‎‎‫‍⁬‫​‮‬‫⁭⁪‌‌‍⁭⁭⁯⁭​‫‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1348238926;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1691590078)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -1958286344 ^ 811227711;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -1387454773;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1691590078)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u200E⁫⁭‏‬‏⁬‭‬⁫⁮​⁬⁬⁬⁯‌⁫‮‪‫⁭‍⁪‏⁮‍‌‏‫‎⁮‎‪‫⁮​⁯‍‮((IDisposable) aReader);
                num3 = (int) num4 * 706216252 ^ -1847510824;
                continue;
              case 2:
                num3 = (int) num4 * -841125803 ^ 1668457823;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200E⁬‫⁯‪‎‌⁯⁮‮‭‍⁯‍‪⁯⁮‏‫⁬⁬⁪‫⁭‍​​⁮‎⁯‭‫⁯‌‏‫⁪‭‫⁬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -937937499;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -2100147464)) % 4U)
            {
              case 1:
                JSONNode.\u200E⁫⁭‏‬‏⁬‭‬⁫⁮​⁬⁬⁬⁯‌⁫‮‪‫⁭‍⁪‏⁮‍‌‏‫‎⁮‎‪‫⁮​⁯‍‮((IDisposable) aData);
                num1 = (int) num2 * -557001521 ^ -1383879900;
                continue;
              case 2:
                goto label_3;
              case 3:
                num1 = (int) num2 * -1625558383 ^ -693239529;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 68350619;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 287689727)) % 5U)
        {
          case 0:
            JSONNode.\u206B‍⁭⁪⁬‍‭‬‭‍‎⁬‏⁮⁮‍‏‪‭‍‌⁭‏⁭‎‬⁬⁬​‫⁮⁫⁯‫⁪‮‫‫⁬‫‮((Stream) aData, 0L);
            num1 = (int) num2 * -54392108 ^ -615859892;
            continue;
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1309319647 ^ -47244730;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u206D‌‎‌​⁭‎⁯‌⁬⁬⁪‬‮⁪⁬⁯‬‮‮‪‬⁬⁮⁬​‭⁯‏​‎‬‫‌‮⁪‭‮⁭‭‮(JSONNode.\u206B​⁯⁪‭‪⁯‪‫⁪‎⁮‪⁪⁬⁭⁮‏⁮‫‪‌⁪‮​‌‍​​‫⁯‎‍‬‎⁬⁪⁮⁬‮‮(aBase64));
            num1 = (int) num2 * -1126004136 ^ 129092115;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -425012813;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -419967481)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1264999684 ^ 279929086;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u202E‫‪‭‌‮⁬⁪‎⁫‬⁬⁫⁬⁮‎⁫‏‪‎⁯‭⁭‏‍‎‌⁭‭‌‍⁪‪⁬⁪⁭⁭‍‎⁭‮() => CultureInfo.InvariantCulture;

    static bool \u202C‍⁪‭‫‮‮‌⁬⁪⁪⁭⁭‫⁭‬⁬‬‍⁯⁫⁭‫⁭⁫‪‍⁫‎‌⁫⁬‎‫‭⁬‍⁮‬‬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200B‏‬‍‫‪‪‮⁬‭​‍‍‪⁬‏⁭⁯⁯‭⁮​⁪‭‌‌​‬⁬‬⁭‬⁮‎‭⁪‏⁫‫‭‮() => base.GetHashCode();

    static char \u200D‫‭‍⁯⁯⁪‬‮‪‬⁭​⁬‌‏‭​‮‎⁭‍⁭‎‪‭‏‫⁭⁮‫‬‫‏​⁫‮‮‎⁭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C‎⁯‫‌⁫⁬‍‎‮‍‍‎‪​‭‫‫‍‭‍‏‬⁪⁫⁬⁯‍‭⁬​‌⁪‫⁪‎‪‪‫⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F‪‪‪‭⁯‫⁯​⁬⁯⁮‌‍⁪⁭‎‭⁭⁬⁯⁬‎‮‭‍‫‌⁯‍⁬⁪‮‎‫‪⁬​⁭‮([In] string obj0) => obj0.Length;

    static string \u206D⁪‮​⁭‎‬‭‪‪⁬⁪‍‪‭⁫⁭‎⁫⁯⁯‪⁭‮‌‪⁯‪​⁭⁪⁪⁮​‭‌‮⁪​‬‮([In] string obj0) => obj0.Trim();

    static bool \u202C⁫‭⁪‪⁭‪⁪‏⁫⁬⁯​‌⁯‍⁯‭⁬‪‭‎⁮‬⁯⁫‮‮‬‪‭‍⁮⁮⁪‌‪‍​⁫‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206C⁬‌⁮⁫⁮⁬‎⁫⁬‬⁫⁪⁮‏‮‮⁪‎‌‍⁭⁮‬‍​⁭‎⁪‏⁬‌‌‫‫‎‫⁪‍⁭‮([In] string obj0) => new Exception(obj0);

    static string \u202B‫⁫‮⁬‪​⁮⁮​⁮⁯⁯‮‎‌‪‭‬‍‭‪⁭⁭‏⁬​‭‌​⁭‎‏‏⁭‪⁬​‍‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206F‪⁪​‏‪⁮‮​⁯‬⁭‬⁬‫‪⁯‬‬‏‫‮‫⁪‎‏‏‮⁮⁯⁭​⁪‍⁯⁪⁪⁭⁪‍‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200E⁮‬‎⁯⁮‎‭‏‬⁭‫‭​⁫​‏‮⁭⁬‌⁪​​‌‮‏‎⁮‫⁫⁫⁮‌‏‍⁭⁮‏⁭‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206D‎‌‌‬‮⁯⁫‭‪‌‌‪‬‮⁮‮‮‪‫⁬⁫‎‎‌‍‮⁪⁪‪‌‮‬‪‫​⁯‭‍⁪‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206B⁮⁪⁮⁯‍⁯⁬‪‏⁬‏⁯​⁬‎‭‪‍⁫‬⁬‏‬⁮⁫‫⁫‏‪‮⁭⁬⁪‌‎‭​‍‍‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200F‎⁭‎‌‪‬⁫‍‭‮‌‌‫‪​‮‍‎⁬⁮⁫‮⁯‏⁮⁯⁭‫⁮‏‪‌⁪⁮⁮‭⁭⁯⁭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202B‍‭⁪‪‫‪‎⁬⁫‎⁫⁫‏‮‌‍‮⁭‎⁮‌⁫‍⁭‎‎​⁭‬⁫‬⁫‬‭‫⁫​‪‪‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200E⁫⁭‏‬‏⁬‭‬⁫⁮​⁬⁬⁬⁯‌⁫‮‪‫⁭‍⁪‏⁮‍‌‏‫‎⁮‎‪‫⁮​⁯‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206F​‪⁯‪⁬⁯⁪⁫⁪⁫‍⁬⁪⁭‍​‪‫⁫‫​‪⁪‍⁪‪‬⁮‮⁯‍⁪‍⁪⁯⁯⁪‏‪‮() => new MemoryStream();

    static void \u206B‍⁭⁪⁬‍‭‬‭‍‎⁬‏⁮⁮‍‏‪‭‍‌⁭‏⁭‎‬⁬⁬​‫⁮⁫⁯‫⁪‮‫‫⁬‫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206E‫‭‫⁫‫⁮⁯⁪‬‏‍⁮⁪⁯‍‫‮⁫⁪⁪‍⁭⁮‫⁯⁯⁪‪‏‪⁯⁬⁭⁮‏⁫‍‎‪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206E‎⁬‮‌​‬‪‍⁫‬⁪⁫⁬​⁪​‍‌⁮‮⁫⁭‮‬⁯‬‪‌‭‎‎‭‏⁬‫⁯‌‪⁪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200D⁭⁭‭⁫‎‮‌‮‌⁫‍‮‌‮‫‬​‌⁬‭‭⁮‍‏‬⁭⁪⁪‍⁪‏‮‍‭⁯⁮‌⁬⁮‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D⁬‪⁭⁭⁭​⁯‪‭⁮‭⁮‪​⁪‮‮⁪‌‫‍​⁮⁭‍‭‎‍​‮⁬‌‪‪‬‭⁫‭‭‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C‎⁭‮⁪‪‍‭⁪​‬‌‭⁪⁯‏⁯⁫‫⁭‭​‬⁬‌‪⁮⁫‬‎‭⁯⁪⁬‌‪‪‌⁭⁭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202B⁪‍‪⁭​‌‭​⁫‎‮‎‪‪‏‫‪‪⁯⁯​‏⁯​⁫​​‎⁮⁭‫‬⁭⁭‮⁫‫⁯‪‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B⁫‫‌⁯⁬‪⁮⁭⁫‍‏‬⁮​⁪‮⁫⁬⁪‬‪‭⁬⁯‮‏​⁯‏‮​‏⁯‬‌⁭‭‫⁬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200D‌⁮‫‬‬⁫⁭⁪‭‫⁫‪​‮⁮⁯‪⁮⁭‭‫‌⁬‫‏⁪⁯‎⁪‏‍‮⁫⁯⁮⁬‪⁯‌‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200F⁮⁮⁬‬‫‍‍‪⁫‏⁭‍⁬‫‭⁯⁮‌‎‎‫‍⁬‫​‮‬‫⁭⁪‌‌‍⁭⁭⁯⁭​‫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200E⁬‫⁯‪‎‌⁯⁮‮‭‍⁯‍‪⁯⁮‏‫⁬⁬⁪‫⁭‍​​⁮‎⁯‭‫⁯‌‏‫⁪‭‫⁬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206B​⁯⁪‭‪⁯‪‫⁪‎⁮‪⁪⁬⁭⁮‏⁮‫‪‌⁪‮​‌‍​​‫⁯‎‍‬‎⁬⁪⁮⁬‮‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206D‌‎‌​⁭‎⁯‌⁬⁬⁪‬‮⁪⁬⁯‬‮‮‪‬⁬⁮⁬​‭⁯‏​‎‬‫‌‮⁪‭‮⁭‭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
