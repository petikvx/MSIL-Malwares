// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.Messages.ApplicationStart
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Tags;
using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Runtime.InteropServices;

namespace PreEmptive.Analytics.Common.Messages
{
  public class ApplicationStart : Message
  {
    public override string TagName
    {
      get
      {
        int A_1 = 7;
        int num1 = 3646;
        int num2 = num1;
        num1 = 3646;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            if (true)
              ;
            if (false)
              ;
            return Utils.a("\uDABA춼쾾\uECC0냂뇄ꛆ믈뿊", A_1);
          default:
            goto case 1;
        }
      }
    }

    public override string TagDescription
    {
      get
      {
        int A_1 = 16;
        int num1 = 3281;
        int num2 = num1;
        num1 = 3281;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            if (false)
              ;
            if (true)
              ;
            return Utils.a("ꗃ뛅룇ꛉꗋ귍뇏ꛑ뷓맕뛗龎꿛ꫝ臟郡郣", A_1);
          default:
            goto case 1;
        }
      }
    }

    public ApplicationStart(
      HostTag hostTag,
      UserTag userTag,
      Guid session,
      [Optional] ExtendedKeys keys,
      [Optional] BinaryInfoTag binary)
      : base(session, keys, binary)
    {
      this.InnerTags.Add((Tag) hostTag);
      this.InnerTags.Add((Tag) userTag);
    }
  }
}
