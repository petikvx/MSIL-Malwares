// Decompiled with JetBrains decompiler
// Type: ?3?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89823795-D5B3-4CC9-949D-6649607AF138
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bndr-d893b556a8d0493f8839c80049bd91fd0bdbcb93646edcc7b2f28d89325ced11.exe

using System;
using System.IO;

public sealed class \u003F3\u003F : \u003F2\u003F
{
  private uint \u003F0\u003F;
  private uint \u003F5\u003F;
  private uint \u003F9\u003F;
  private uint \u003F11\u003F;
  private uint[] \u003F0\u003F;
  private uint[] \u003F5\u003F;
  private uint[] \u003F9\u003F;
  private uint[] \u003F11\u003F;
  private uint \u003F12\u003F = (uint) byte.MaxValue;
  private bool \u003F0\u003F = true;
  private bool \u003F5\u003F;
  private uint \u003F13\u003F = 1024;
  private uint \u003F14\u003F;
  private uint \u003F15\u003F = 4;
  private uint \u003F17\u003F = 1048576;

  public void \u003F1\u003F(int _param1, bool _param2)
  {
    this.\u003F0\u003F = _param1 > 2;
    int num = 0;
    while (true)
    {
      switch (num)
      {
        case 0:
          this.\u003F5\u003F = _param2;
          num = 1;
          continue;
        case 1:
          if (!this.\u003F0\u003F)
          {
            this.\u003F14\u003F = 2U;
            num = 6;
            continue;
          }
          this.\u003F13\u003F = 1024U;
          num = 2;
          continue;
        case 2:
          this.\u003F14\u003F = 0U;
          num = 3;
          continue;
        case 3:
          this.\u003F15\u003F = 4U;
          num = 4;
          continue;
        case 4:
          this.\u003F17\u003F = this.\u003F5\u003F ? 8388608U : 1048576U;
          num = 5;
          continue;
        case 5:
          goto label_12;
        case 6:
          this.\u003F15\u003F = 2U;
          num = 7;
          continue;
        case 7:
          this.\u003F17\u003F = 65536U;
          num = 8;
          continue;
        default:
          goto label_7;
      }
    }
label_12:
    return;
label_7:;
  }

  private uint \u003F0\u003F(uint _param1, out uint _param2, out uint _param3)
  {
    uint num1 = \u003F15\u003F.\u003F0\u003F[(int) this.\u003F1\u003F[(IntPtr) _param1]] ^ (uint) this.\u003F1\u003F[(IntPtr) (_param1 + 1U)];
    _param2 = num1 & this.\u003F13\u003F - 1U;
    uint num2 = num1 ^ (uint) this.\u003F1\u003F[(IntPtr) (_param1 + 2U)] << 8;
    _param3 = num2 & 262143U;
    return (uint) (((int) num2 ^ (int) \u003F15\u003F.\u003F0\u003F[(int) this.\u003F1\u003F[(IntPtr) (_param1 + 3U)]] << 5) & (int) this.\u003F17\u003F - 1);
  }

  private uint \u003F0\u003F(uint _param1) => (uint) this.\u003F1\u003F[(IntPtr) _param1] ^ (uint) this.\u003F1\u003F[(IntPtr) (_param1 + 1U)] << 8;

  public void \u0005\u2009\u2001\u0002(Stream _param1)
  {
    this.\u003F51\u003F(_param1);
    int num = 0;
    while (true)
    {
      uint index;
      switch (num)
      {
        case 0:
          index = 0U;
          num = 1;
          continue;
        case 1:
          if (index < this.\u003F17\u003F)
          {
            this.\u003F5\u003F[(IntPtr) index] = 0U;
            num = 2;
            continue;
          }
          if (this.\u003F0\u003F)
          {
            index = 0U;
            num = 3;
            continue;
          }
          break;
        case 2:
          ++index;
          goto case 1;
        case 3:
          if (index < this.\u003F13\u003F)
          {
            this.\u003F9\u003F[(IntPtr) index] = 0U;
            num = 4;
            continue;
          }
          index = 0U;
          num = 5;
          continue;
        case 4:
          ++index;
          goto case 3;
        case 5:
          if (index < 262144U)
          {
            this.\u003F11\u003F[(IntPtr) index] = 0U;
            num = 6;
            continue;
          }
          break;
        case 6:
          ++index;
          goto case 5;
        case 7:
          this.\u003F1\u003F(-1);
          num = 8;
          continue;
        default:
          goto label_17;
      }
      this.\u003F0\u003F = 0U;
      num = 7;
    }
label_17:;
  }

  public void \u0005\u2009\u2001\u0002() => this.\u003F51\u003F();

  public void \u0005\u2009\u2001\u0003()
  {
    ++this.\u003F0\u003F;
    if (this.\u003F0\u003F >= this.\u003F5\u003F)
      goto label_2;
label_1:
    this.\u003F52\u003F();
    if (this.\u003F7\u003F != (uint) int.MaxValue)
      return;
    this.\u003F0\u003F();
    return;
label_2:
    this.\u003F0\u003F = 0U;
    goto label_1;
  }

  public byte \u0005\u2009\u2001\u0002(int _param1) => this.\u003F51\u003F(_param1);

  public uint \u0005\u2009\u2001\u0002(int _param1, uint _param2, uint _param3) => this.\u003F51\u003F(_param1, _param2, _param3);

  public uint \u0005\u2009\u2001\u0002() => this.\u003F51\u003F();

  public void \u0008\u2009\u2001\u0002(uint _param1, uint _param2, uint _param3, uint _param4)
  {
    uint num1 = (_param1 + _param2 + _param3 + _param4) / 2U + 256U;
    int num2 = 0;
    while (true)
    {
      switch (num2)
      {
        case 0:
          this.\u003F0\u003F = (uint[]) null;
          num2 = 1;
          continue;
        case 1:
          this.\u003F5\u003F = (uint[]) null;
          num2 = 2;
          continue;
        case 2:
          this.\u003F9\u003F = (uint[]) null;
          num2 = 3;
          continue;
        case 3:
          this.\u003F11\u003F = (uint[]) null;
          num2 = 4;
          continue;
        case 4:
          this.\u003F1\u003F(_param1 + _param2, _param3 + _param4, num1);
          num2 = 5;
          continue;
        case 5:
          if (this.\u003F86\u003F + 256U <= (uint) int.MaxValue)
          {
            this.\u003F9\u003F = _param1;
            num2 = 6;
            continue;
          }
          goto label_15;
        case 6:
          this.\u003F11\u003F = _param3;
          num2 = 7;
          continue;
        case 7:
          this.\u003F5\u003F = _param1 + 1U;
          num2 = 8;
          continue;
        case 8:
          this.\u003F0\u003F = new uint[(IntPtr) (this.\u003F5\u003F * 2U)];
          num2 = 9;
          continue;
        case 9:
          this.\u003F5\u003F = new uint[(IntPtr) this.\u003F17\u003F];
          num2 = 10;
          continue;
        case 10:
          if (this.\u003F0\u003F)
          {
            this.\u003F9\u003F = new uint[(IntPtr) this.\u003F13\u003F];
            num2 = 11;
            continue;
          }
          goto label_17;
        default:
          goto label_14;
      }
    }
label_14:
    this.\u003F11\u003F = new uint[new IntPtr(262144)];
    return;
label_15:
    throw new Exception();
label_17:;
  }

  public uint \u0008\u2009\u2001\u0002(uint[] _param1)
  {
    if (this.\u003F7\u003F + this.\u003F11\u003F > this.\u003F87\u003F)
      goto label_2;
    else
      goto label_76;
label_1:
    uint num1;
    uint num2;
    uint num3;
    uint num4;
    bool flag1;
    bool flag2;
    uint index1;
    int num5;
    while (true)
    {
      uint num6;
      uint index2;
      uint index3;
      uint index4;
      uint index5;
      uint num7;
      uint num8;
      uint num9;
      uint index6;
      uint index7;
      uint val2;
      uint val1;
      uint num10;
      uint num11;
      uint num12;
      uint num13;
      uint index8;
      switch (num5)
      {
        case 0:
          num6 = this.\u003F7\u003F > this.\u003F9\u003F ? this.\u003F7\u003F - this.\u003F9\u003F : 1U;
          num5 = 2;
          continue;
        case 1:
          if (num1 >= this.\u003F15\u003F)
            goto case 0;
          else
            goto label_77;
        case 2:
          index2 = this.\u003F4\u003F + this.\u003F7\u003F;
          num5 = 3;
          continue;
        case 3:
          num2 = 0U;
          num5 = 4;
          continue;
        case 4:
          index3 = 0U;
          num5 = 5;
          continue;
        case 5:
          index4 = 0U;
          num5 = 6;
          continue;
        case 6:
          if (!this.\u003F0\u003F)
          {
            index5 = this.\u003F0\u003F(index2);
            goto case 7;
          }
          else
          {
            index5 = this.\u003F0\u003F(index2, out index3, out index4);
            num5 = 7;
            continue;
          }
        case 7:
          num7 = this.\u003F5\u003F[(IntPtr) index5];
          num5 = 8;
          continue;
        case 8:
          num8 = 0U;
          num5 = 9;
          continue;
        case 9:
          num9 = 0U;
          num5 = 10;
          continue;
        case 10:
          num3 = 0U;
          num5 = 11;
          continue;
        case 11:
          num4 = 0U;
          num5 = 12;
          continue;
        case 12:
          flag1 = false;
          num5 = 13;
          continue;
        case 13:
          flag2 = false;
          num5 = 14;
          continue;
        case 14:
          if (this.\u003F0\u003F)
          {
            num8 = this.\u003F9\u003F[(IntPtr) index3];
            num5 = 15;
            continue;
          }
          goto case 24;
        case 15:
          num9 = this.\u003F11\u003F[(IntPtr) index4];
          num5 = 16;
          continue;
        case 16:
          this.\u003F9\u003F[(IntPtr) index3] = this.\u003F7\u003F;
          num5 = 17;
          continue;
        case 17:
          if (num8 >= num6 && (int) this.\u003F1\u003F[(IntPtr) (this.\u003F4\u003F + num8)] == (int) this.\u003F1\u003F[(IntPtr) index2])
          {
            num3 = (uint) ((int) this.\u003F7\u003F - (int) num8 - 1);
            num5 = 18;
            continue;
          }
          break;
        case 18:
          num2 = 2U;
          num5 = 19;
          continue;
        case 19:
          flag1 = true;
          break;
        case 20:
          if (num9 >= num6 && (int) this.\u003F1\u003F[(IntPtr) (this.\u003F4\u003F + num9)] == (int) this.\u003F1\u003F[(IntPtr) index2])
          {
            num4 = (uint) ((int) this.\u003F7\u003F - (int) num9 - 1);
            num5 = 21;
            continue;
          }
          goto case 24;
        case 21:
          num2 = 3U;
          num5 = 22;
          continue;
        case 22:
          flag2 = true;
          num5 = 23;
          continue;
        case 23:
          if (!flag1)
          {
            num3 = num4;
            num5 = 25;
            continue;
          }
          if (num4 < num3)
          {
            num3 = num4;
            num5 = 24;
            continue;
          }
          goto case 24;
        case 24:
          this.\u003F5\u003F[(IntPtr) index5] = this.\u003F7\u003F;
          num5 = 26;
          continue;
        case 25:
          flag1 = true;
          goto case 24;
        case 26:
          if (num7 >= num6)
          {
            index6 = (uint) (((int) this.\u003F0\u003F << 1) + 1);
            num5 = 30;
            continue;
          }
          this.\u003F0\u003F[(IntPtr) (this.\u003F0\u003F << 1)] = 0U;
          num5 = 27;
          continue;
        case 27:
          this.\u003F0\u003F[(IntPtr) (uint) (((int) this.\u003F0\u003F << 1) + 1)] = 0U;
          num5 = 28;
          continue;
        case 28:
          if (this.\u003F0\u003F)
          {
            _param1[2] = num3;
            num5 = 29;
            continue;
          }
          goto label_36;
        case 29:
          goto label_35;
        case 30:
          index7 = this.\u003F0\u003F << 1;
          num5 = 31;
          continue;
        case 31:
          int num14;
          val2 = (uint) (num14 = (int) this.\u003F14\u003F);
          val1 = (uint) num14;
          index1 = (uint) num14;
          num5 = 32;
          continue;
        case 32:
          _param1[(IntPtr) index1] = (uint) ((int) this.\u003F7\u003F - (int) num7 - 1);
          num5 = 33;
          continue;
        case 33:
          num10 = this.\u003F12\u003F;
          num5 = 34;
          continue;
        case 34:
          if (num10 > 0U)
          {
            num11 = this.\u003F4\u003F + num7;
            num5 = 35;
            continue;
          }
          goto label_67;
        case 35:
          num12 = Math.Min(val1, val2);
          num5 = 36;
          continue;
        case 36:
          while (num12 < num1 && (int) this.\u003F1\u003F[(IntPtr) (num11 + num12)] == (int) this.\u003F1\u003F[(IntPtr) (index2 + num12)])
            num12++;
          num13 = this.\u003F7\u003F - num7;
          num5 = 37;
          continue;
        case 37:
          while (num12 > index1)
            _param1[(IntPtr) ++index1] = num13 - 1U;
          index8 = (uint) ((num13 <= this.\u003F0\u003F ? (int) this.\u003F0\u003F - (int) num13 : (int) this.\u003F0\u003F - (int) num13 + (int) this.\u003F5\u003F) << 1);
          num5 = 38;
          continue;
        case 38:
          if ((int) num12 == (int) num1)
          {
            if (num12 >= this.\u003F11\u003F)
            {
              this.\u003F0\u003F[(IntPtr) index6] = this.\u003F0\u003F[(IntPtr) (index8 + 1U)];
              num5 = 51;
              continue;
            }
            this.\u003F0\u003F[(IntPtr) index6] = num7;
            num5 = 47;
            continue;
          }
          if ((int) this.\u003F1\u003F[(IntPtr) (num11 + num12)] >= (int) this.\u003F1\u003F[(IntPtr) (index2 + num12)])
          {
            this.\u003F0\u003F[(IntPtr) index6] = num7;
            num5 = 43;
            continue;
          }
          this.\u003F0\u003F[(IntPtr) index7] = num7;
          num5 = 39;
          continue;
        case 39:
          index7 = index8 + 1U;
          num5 = 40;
          continue;
        case 40:
          num7 = this.\u003F0\u003F[(IntPtr) index7];
          num5 = 41;
          continue;
        case 41:
          if (num12 > val1)
          {
            val1 = num12;
            num5 = 42;
            continue;
          }
          goto case 42;
        case 42:
        case 46:
        case 50:
          if (num7 >= num6)
          {
            --num10;
            goto case 34;
          }
          else
            goto label_67;
        case 43:
          index6 = index8;
          num5 = 44;
          continue;
        case 44:
          num7 = this.\u003F0\u003F[(IntPtr) index6];
          num5 = 45;
          continue;
        case 45:
          if (num12 > val2)
          {
            val2 = num12;
            num5 = 46;
            continue;
          }
          goto case 42;
        case 47:
          index6 = index8;
          num5 = 48;
          continue;
        case 48:
          num7 = this.\u003F0\u003F[(IntPtr) index6];
          num5 = 49;
          continue;
        case 49:
          if (num12 > val2)
          {
            val2 = num12;
            num5 = 50;
            continue;
          }
          goto case 42;
        case 51:
          this.\u003F0\u003F[(IntPtr) index7] = this.\u003F0\u003F[(IntPtr) index8];
          num5 = 52;
          continue;
        case 52:
          goto label_62;
        case 53:
          this.\u003F0\u003F[(IntPtr) index7] = 0U;
          num5 = 54;
          continue;
        case 54:
          if (this.\u003F0\u003F)
          {
            if (flag1)
            {
              if (index1 >= 2U)
              {
                if (num3 < _param1[2])
                {
                  _param1[2] = num3;
                  goto case 56;
                }
                else
                  goto case 56;
              }
              else
              {
                _param1[2] = num3;
                num5 = 55;
                continue;
              }
            }
            else
              goto case 56;
          }
          else
            goto label_75;
        case 55:
          index1 = 2U;
          num5 = 56;
          continue;
        case 56:
          if (flag2)
          {
            if (index1 < 3U)
            {
              _param1[3] = num4;
              num5 = 57;
              continue;
            }
            goto label_74;
          }
          else
            goto label_75;
        case 57:
          index1 = 3U;
          num5 = 58;
          continue;
        default:
          goto label_75;
      }
      this.\u003F11\u003F[(IntPtr) index4] = this.\u003F7\u003F;
      num5 = 20;
      continue;
label_67:
      this.\u003F0\u003F[(IntPtr) index6] = 0U;
      num5 = 53;
    }
label_35:
    _param1[3] = num4;
label_36:
    return num2;
label_62:
    if (this.\u003F0\u003F)
      goto label_94;
label_64:
    return index1;
label_94:
    if (flag1 && num3 < _param1[2])
      goto label_95;
label_63:
    if (flag2 && num4 < _param1[3])
    {
      _param1[3] = num4;
      goto label_64;
    }
    else
      goto label_64;
label_95:
    _param1[2] = num3;
    goto label_63;
label_74:
    if (num4 < _param1[3])
      _param1[3] = num4;
label_75:
    return index1;
label_77:
    return 0;
label_2:
    num1 = this.\u003F87\u003F - this.\u003F7\u003F;
    num5 = 1;
    goto label_1;
label_76:
    num1 = this.\u003F11\u003F;
    num5 = 0;
    goto label_1;
  }

  public void \u0008\u2009\u2001\u0002()
  {
    if (this.\u003F7\u003F + this.\u003F11\u003F > this.\u003F87\u003F)
      goto label_2;
    else
      goto label_48;
label_1:
    uint num1;
    int num2;
    while (true)
    {
      uint num3;
      uint num4;
      uint index1;
      uint index2;
      uint index3;
      uint num5;
      uint index4;
      uint index5;
      uint val2;
      uint val1;
      uint num6;
      uint num7;
      uint num8;
      uint num9;
      uint index6;
      switch (num2)
      {
        case 0:
          num3 = this.\u003F7\u003F > this.\u003F9\u003F ? this.\u003F7\u003F - this.\u003F9\u003F : 1U;
          num2 = 2;
          continue;
        case 1:
          if (num1 >= this.\u003F15\u003F)
            goto case 0;
          else
            goto label_47;
        case 2:
          num4 = this.\u003F4\u003F + this.\u003F7\u003F;
          num2 = 3;
          continue;
        case 3:
          index1 = 0U;
          num2 = 4;
          continue;
        case 4:
          index2 = 0U;
          num2 = 5;
          continue;
        case 5:
          if (!this.\u003F0\u003F)
          {
            index3 = this.\u003F0\u003F(num4);
            goto case 6;
          }
          else
          {
            index3 = this.\u003F0\u003F(num4, out index1, out index2);
            num2 = 6;
            continue;
          }
        case 6:
          num5 = this.\u003F5\u003F[(IntPtr) index3];
          num2 = 7;
          continue;
        case 7:
          if (this.\u003F0\u003F)
          {
            int num10 = (int) this.\u003F9\u003F[(IntPtr) index1];
            num2 = 8;
            continue;
          }
          break;
        case 8:
          int num11 = (int) this.\u003F11\u003F[(IntPtr) index2];
          num2 = 9;
          continue;
        case 9:
          this.\u003F9\u003F[(IntPtr) index1] = this.\u003F7\u003F;
          num2 = 10;
          continue;
        case 10:
          this.\u003F11\u003F[(IntPtr) index2] = this.\u003F7\u003F;
          break;
        case 11:
          if (num5 >= num3)
          {
            index4 = (uint) (((int) this.\u003F0\u003F << 1) + 1);
            num2 = 14;
            continue;
          }
          this.\u003F0\u003F[(IntPtr) (this.\u003F0\u003F << 1)] = 0U;
          num2 = 12;
          continue;
        case 12:
          this.\u003F0\u003F[(IntPtr) (uint) (((int) this.\u003F0\u003F << 1) + 1)] = 0U;
          num2 = 13;
          continue;
        case 13:
          goto label_60;
        case 14:
          index5 = this.\u003F0\u003F << 1;
          num2 = 15;
          continue;
        case 15:
          val1 = val2 = this.\u003F14\u003F;
          num2 = 16;
          continue;
        case 16:
          num6 = this.\u003F12\u003F;
          num2 = 17;
          continue;
        case 17:
          if (num6 > 0U)
          {
            num7 = this.\u003F4\u003F + num5;
            num2 = 18;
            continue;
          }
          goto label_45;
        case 18:
          num8 = Math.Min(val1, val2);
          num2 = 19;
          continue;
        case 19:
          while (num8 < num1 && (int) this.\u003F1\u003F[(IntPtr) (num7 + num8)] == (int) this.\u003F1\u003F[(IntPtr) (num4 + num8)])
            ++num8;
          num9 = this.\u003F7\u003F - num5;
          num2 = 20;
          continue;
        case 20:
          index6 = (uint) ((num9 <= this.\u003F0\u003F ? (int) this.\u003F0\u003F - (int) num9 : (int) this.\u003F0\u003F - (int) num9 + (int) this.\u003F5\u003F) << 1);
          num2 = 21;
          continue;
        case 21:
          if ((int) num8 == (int) num1)
          {
            if (num8 >= this.\u003F11\u003F)
            {
              this.\u003F0\u003F[(IntPtr) index4] = this.\u003F0\u003F[(IntPtr) (index6 + 1U)];
              num2 = 34;
              continue;
            }
            this.\u003F0\u003F[(IntPtr) index4] = num5;
            num2 = 30;
            continue;
          }
          if ((int) this.\u003F1\u003F[(IntPtr) (num7 + num8)] >= (int) this.\u003F1\u003F[(IntPtr) (num4 + num8)])
          {
            this.\u003F0\u003F[(IntPtr) index4] = num5;
            num2 = 26;
            continue;
          }
          this.\u003F0\u003F[(IntPtr) index5] = num5;
          num2 = 22;
          continue;
        case 22:
          index5 = index6 + 1U;
          num2 = 23;
          continue;
        case 23:
          num5 = this.\u003F0\u003F[(IntPtr) index5];
          num2 = 24;
          continue;
        case 24:
          if (num8 > val1)
          {
            val1 = num8;
            num2 = 25;
            continue;
          }
          goto case 25;
        case 25:
        case 29:
        case 33:
          if (num5 >= num3)
          {
            --num6;
            goto case 17;
          }
          else
            goto label_45;
        case 26:
          index4 = index6;
          num2 = 27;
          continue;
        case 27:
          num5 = this.\u003F0\u003F[(IntPtr) index4];
          num2 = 28;
          continue;
        case 28:
          if (num8 > val2)
          {
            val2 = num8;
            num2 = 29;
            continue;
          }
          goto case 25;
        case 30:
          index4 = index6;
          num2 = 31;
          continue;
        case 31:
          num5 = this.\u003F0\u003F[(IntPtr) index4];
          num2 = 32;
          continue;
        case 32:
          if (num8 > val2)
          {
            val2 = num8;
            num2 = 33;
            continue;
          }
          goto case 25;
        case 34:
          this.\u003F0\u003F[(IntPtr) index5] = this.\u003F0\u003F[(IntPtr) index6];
          num2 = 35;
          continue;
        case 35:
          goto label_18;
        case 36:
          this.\u003F0\u003F[(IntPtr) index5] = 0U;
          num2 = 37;
          continue;
        default:
          goto label_42;
      }
      this.\u003F5\u003F[(IntPtr) index3] = this.\u003F7\u003F;
      num2 = 11;
      continue;
label_45:
      this.\u003F0\u003F[(IntPtr) index4] = 0U;
      num2 = 36;
    }
label_60:
    return;
label_18:
    return;
label_42:
    return;
label_47:
    return;
label_2:
    num1 = this.\u003F87\u003F - this.\u003F7\u003F;
    num2 = 1;
    goto label_1;
label_48:
    num1 = this.\u003F11\u003F;
    num2 = 0;
    goto label_1;
  }

  private void \u003F0\u003F(uint[] _param1, uint _param2, uint _param3)
  {
    uint index = 0;
    int num1 = 0;
    uint num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          if (index < _param2)
          {
            num2 = _param1[(IntPtr) index];
            num1 = 1;
            continue;
          }
          goto label_9;
        case 1:
          if (num2 > _param3)
          {
            num2 -= _param3;
            goto case 2;
          }
          else
          {
            num2 = 0U;
            num1 = 2;
            continue;
          }
        case 2:
          _param1[(IntPtr) index] = num2;
          num1 = 3;
          continue;
        default:
          ++index;
          goto case 0;
      }
    }
label_9:;
  }

  private void \u003F0\u003F()
  {
    uint num1 = this.\u003F7\u003F - this.\u003F9\u003F;
    int num2 = 0;
    while (true)
    {
      uint num3;
      switch (num2)
      {
        case 0:
          num3 = num1 - 1U;
          num2 = 1;
          continue;
        case 1:
          this.\u003F0\u003F(this.\u003F0\u003F, this.\u003F5\u003F * 2U, num3);
          num2 = 2;
          continue;
        case 2:
          this.\u003F0\u003F(this.\u003F5\u003F, this.\u003F17\u003F, num3);
          num2 = 3;
          continue;
        case 3:
          if (this.\u003F0\u003F)
          {
            this.\u003F0\u003F(this.\u003F9\u003F, this.\u003F13\u003F, num3);
            num2 = 4;
            continue;
          }
          break;
        case 4:
          this.\u003F0\u003F(this.\u003F11\u003F, 262144U, num3);
          break;
        default:
          goto label_9;
      }
      this.\u003F1\u003F((int) num3);
      num2 = 5;
    }
label_9:;
  }

  public void \u003F1\u003F(uint _param1) => this.\u003F12\u003F = _param1;
}
