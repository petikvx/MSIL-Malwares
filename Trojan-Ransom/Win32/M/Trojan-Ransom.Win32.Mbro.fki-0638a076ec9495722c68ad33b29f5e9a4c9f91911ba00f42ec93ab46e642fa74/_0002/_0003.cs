// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=1.1.0.0, Culture=neutral, PublicKeyToken=ed61553e989492b3
// MVID: BAAA0E94-9CB2-4361-AD86-CB5008FBF34B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Ransom.Win32.Mbro.fki-0638a076ec9495722c68ad33b29f5e9a4c9f91911ba00f42ec93ab46e642fa74.exe

using \u0002;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0002
{
  internal sealed class \u0003
  {
    private static readonly \u0002.\u0003.\u0003<\u0003.\u0002> \u0001;
    private static readonly \u0002.\u0003.\u0003<\u0002.\u0002> \u0001;
    private static readonly \u0002.\u0003.\u0003<User> \u0001;
    private static \u0002.\u0003.\u0003<\u0002.\u0003.\u0001> \u0001;
    private static readonly \u0002.\u0003.\u0003<\u0002.\u0003.\u0002> \u0001;

    static \u0003()
    {
      if (true)
      {
        if (true)
          \u0002.\u0003.\u0001 = new \u0002.\u0003.\u0003<\u0003.\u0002>();
      }
      else
        goto label_6;
label_5:
      \u0002.\u0003.\u0001 = new \u0002.\u0003.\u0003<\u0002.\u0002>();
      \u0002.\u0003.\u0001 = new \u0002.\u0003.\u0003<User>();
label_6:
      \u0002.\u0003.\u0001 = new \u0002.\u0003.\u0003<\u0002.\u0003.\u0001>();
      if (true)
        goto label_7;
label_3:
      if (true)
        return;
      goto label_5;
label_7:
      \u0002.\u0003.\u0001 = new \u0002.\u0003.\u0003<\u0002.\u0003.\u0002>();
      goto label_3;
    }

    [SpecialName]
    internal static \u0003.\u0002 \u0001() => \u0002.\u0003.\u0001.\u0001();

    [SpecialName]
    internal static \u0002.\u0002 \u0001() => \u0002.\u0003.\u0001.\u0001();

    [SpecialName]
    internal static \u0002.\u0003.\u0001 \u0001() => \u0002.\u0003.\u0001.\u0001();

    internal sealed class \u0001
    {
      public \u0003.\u0006 \u0001;
      [ThreadStatic]
      private static Hashtable \u0001;
      [NonSerialized]
      internal static \u0007 \u0016;

      [SpecialName]
      public \u0003.\u0006 \u0001()
      {
        this.\u0001 = \u0002.\u0003.\u0001.\u0001<\u0003.\u0006>(this.\u0001);
        return this.\u0001;
      }

      private static \u0001 \u0001<\u0001>([In] \u0001 obj0) where \u0001 : Form, new()
      {
        int num1;
        if ((object) obj0 != null)
        {
          if (true)
          {
            int num2 = obj0.IsDisposed ? 1 : 0;
            if (true)
            {
              if (num2 == 0)
                goto label_20;
            }
            else
            {
              num1 = num2;
              goto label_7;
            }
          }
          else
            goto label_9;
        }
        if (true)
        {
          if (\u0002.\u0003.\u0001.\u0001 != null)
          {
            num1 = \u0002.\u0003.\u0001.\u0001.ContainsKey((object) typeof (\u0001)) ? 1 : 0;
          }
          else
          {
            \u0002.\u0003.\u0001.\u0001 = new Hashtable();
            goto label_9;
          }
        }
        else
          goto label_20;
label_7:
        if (num1 != 0)
          throw new InvalidOperationException(Utils.GetResourceString(\u0002.\u0003.\u0001.\u0016(101)));
label_9:
        \u0002.\u0003.\u0001.\u0001.Add((object) typeof (\u0001), (object) null);
        try
        {
          return new \u0001();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          int num3 = ex.InnerException == null ? 1 : 0;
          int num4 = 0;
          int num5;
          if (num4 == 0)
            num5 = num3 == num4 ? 1 : 0;
          else
            goto label_14;
label_13:
          num4 = 0;
          num3 = num5;
label_14:
          num5 = (uint) num3 > (uint) num4 ? 1 : 0;
          if (true)
          {
            if (num5 != 0)
            {
              SuccessfulFiltering;
            }
            else
              throw;
          }
          else
            goto label_13;
        }
        )
        {
          string resourceString;
          if (true)
            resourceString = Utils.GetResourceString(\u0002.\u0003.\u0001.\u0016(142), ex.InnerException.Message);
          throw new InvalidOperationException(resourceString, ex.InnerException);
        }
        finally
        {
          \u0002.\u0003.\u0001.\u0001.Remove((object) typeof (\u0001));
        }
label_20:
        return obj0;
      }

      bool object.\u0001([In] object obj0) => \u000E.\u0084((object) this, \u0008.\u0083(obj0));

      int object.\u0001() => \u000F.\u0086((object) this);

      string object.\u0001() => \u0010.\u0089((object) this);

      static \u0001() => \u0006.\u0002.\u0001(typeof (\u0002.\u0003.\u0001));
    }

    internal sealed class \u0002
    {
      bool object.\u0001([In] object obj0) => \u000E.\u0084((object) this, \u0008.\u0083(obj0));

      int object.\u0001() => \u000F.\u0086((object) this);

      string object.\u0001() => \u0010.\u0089((object) this);
    }

    [ComVisible(false)]
    internal sealed class \u0003<\u0001> where \u0001 : new()
    {
      [ThreadStatic]
      private static \u0001 \u0001;

      [SpecialName]
      internal \u0001 \u0001()
      {
        if ((object) \u0002.\u0003.\u0003<\u0001>.\u0001 == null)
          goto label_2;
label_1:
        return \u0002.\u0003.\u0003<\u0001>.\u0001;
label_2:
        \u0002.\u0003.\u0003<\u0001>.\u0001 = new \u0001();
        goto label_1;
      }
    }
  }
}
