// Decompiled with JetBrains decompiler
// Type: RemoteClient.Compression.jpgCompression
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

namespace RemoteClient.Compression
{
  public class jpgCompression : IDisposable
  {
    private readonly ImageCodecInfo ImageCodecInfo_323;
    private readonly EncoderParameters EncoderParameters_324;

    public jpgCompression(long Param_460)
    {
      EncoderParameter encoderParameter = new EncoderParameter(Encoder.Quality, Param_460);
      this.ImageCodecInfo_323 = this.method_201("image/jpeg");
      this.EncoderParameters_324 = new EncoderParameters(2);
      this.EncoderParameters_324.Param[0] = encoderParameter;
      this.EncoderParameters_324.Param[1] = new EncoderParameter(Encoder.Compression, 5L);
    }

    public void Vmethod_197()
    {
      this.Vmethod_198(true);
      GC.SuppressFinalize((object) this);
    }

    protected virtual void Vmethod_198(bool Param_463)
    {
      if (!Param_463 || this.EncoderParameters_324 == null)
        return;
      this.EncoderParameters_324.Dispose();
    }

    public byte[] method_199(Bitmap Param_465)
    {
      byte[] array;
      using (MemoryStream memoryStream = new MemoryStream())
      {
        Param_465.Save((Stream) memoryStream, this.ImageCodecInfo_323, this.EncoderParameters_324);
        array = memoryStream.ToArray();
      }
      return array;
    }

    public void method_200(Bitmap Param_467, ref Stream Param_468) => Param_467.Save(Param_468, this.ImageCodecInfo_323, this.EncoderParameters_324);

    private ImageCodecInfo method_201(string Param_470)
    {
      ImageCodecInfo[] imageEncoders = ImageCodecInfo.GetImageEncoders();
      int num = imageEncoders.Length - 1;
      ImageCodecInfo imageCodecInfo;
      for (int index = 0; index <= num; ++index)
      {
        if (imageEncoders[index].MimeType == Param_470)
        {
          imageCodecInfo = imageEncoders[index];
          goto label_6;
        }
      }
      imageCodecInfo = (ImageCodecInfo) null;
label_6:
      return imageCodecInfo;
    }
  }
}
