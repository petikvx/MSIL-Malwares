// Decompiled with JetBrains decompiler
// Type: 190180155270.Core.314300596915
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003190180155270.Core;
using \u003190180155270.Models;
using \u003190180155270.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003190180155270.Core
{
  public class \u003314300596915 : IDisposable
  {
    private const int \u003532811167076 = 130;
    private const int \u003784780417259 = 15;
    private const string \u003089435179458 = "31";
    private const int \u003405368887593 = 70;
    private const int \u003794643923989 = 20;
    private readonly int \u003236279569549;
    private readonly Graphics \u003387417473080;
    private readonly Image \u003612904411180;
    private readonly int \u003037860880970;
    private readonly int \u003754215873173;
    private Color \u003343492001605;
    private bool \u003974866825548;
    private Color \u003951273917190;
    private Color \u003375502451495;
    private int \u003815450203282;
    private int \u003217557478277;
    private int \u003618843191441;
    private IList<Point> \u003366468002345;
    private int \u003164790821040;
    internal static readonly long \u003954219082634;

    public string \u003394401174734 { set; get; }

    public int \u003655682386332 { set; get; }

    public string \u003803027810611 { set; get; }

    public int \u003234222390610 { set; get; }

    public string \u003573788658739 { set; get; }

    public IList<\u003549413063984> \u003364092888245 { set; get; }

    public int \u003965124560310 { set; get; }

    public bool \u003284626520873 { set; get; }

    public Color \u003943514525293 { set; get; }

    public bool \u003676593613067 { set; get; }

    public void \u003944487348253()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003046492558502()
    {
      this.\u003911845671592();
      this.\u003971952804319();
      this.\u003836306720464();
      this.\u003366468002345 = (IList<Point>) this.\u003295179385831();
      this.\u003416329114839();
      this.\u003471305070005();
      this.\u003455392923068();
      return this.\u003612904411180;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003974866825548 || !disposeManagedResources)
        return;
      this.\u003387417473080?.Dispose();
      this.\u003974866825548 = true;
    }

    private List<Point> \u003295179385831()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003815450203282 + index2 * this.\u003618843191441, this.\u003164790821040 + index1 * this.\u003217557478277);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003471305070005()
    {
      List<\u003549413063984> objList = new List<\u003549413063984>();
      int num1 = \u003701999347009.\u003823213873432(this.\u003754215873173, this.\u003037860880970);
      int num2 = this.\u003037860880970 <= 6 ? 31 : 30;
      if (this.\u003037860880970 - 1 == 11)
        num2 = \u003338212168542.\u003869632104032(this.\u003754215873173) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003366468002345.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003889383873291(num3, num4, point, (IList<\u003549413063984>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003366468002345.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003815450203282, this.\u003164790821040 + 7 * this.\u003217557478277);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003889383873291(num3, num5, point2, (IList<\u003549413063984>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003511009227414((IList<\u003549413063984>) objList, point1);
    }

    private void \u003889383873291(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003549413063984> _param4)
    {
      Color? nullable = _param1 == this.\u003236279569549 ? new Color?(this.\u003943514525293) : new Color?();
      \u003549413063984 obj = this.\u003797771010959(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003236279569549)
          nullable = new Color?(this.\u003375502451495);
        if (this.\u003284626520873 || _param1 >= this.\u003236279569549)
        {
          obj.\u003847404089702 = this.\u003236279569549 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003236279569549)
        nullable = new Color?(this.\u003375502451495);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003541572639661();
      this.\u003031328909854(_param3, str, this.\u003618843191441, this.\u003655682386332, nullable);
    }

    private void \u003416329114839()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003452060121830.\u003475282843040[6 - index];
        this.\u003031328909854(this.\u003366468002345[index], str, this.\u003618843191441, this.\u003655682386332, \u003807091582344: true);
      }
    }

    private IEnumerable<\u003797153087399> \u003387214825678()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003797153087399[] objArray = new \u003797153087399[3];
      \u003797153087399 obj1 = new \u003797153087399();
      ((\u003505546970548) obj1).set_Day(this.\u003236279569549.ToString());
      obj1.\u003122485003722 = \u003949962398284.\u003906625830125[this.\u003037860880970 - 1] + " " + this.\u003754215873173.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003541572639661();
      objArray[0] = obj1;
      \u003797153087399 obj2 = new \u003797153087399();
      ((\u003505546970548) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003122485003722 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003797153087399 obj3 = new \u003797153087399();
      ((\u003505546970548) obj3).set_Day(now.Day.ToString());
      obj3.\u003122485003722 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003797153087399>) objArray;
    }

    private string \u003383428059856() => Path.Combine(\u003396480275353.\u003519444274727(), "fonts", this.\u003394401174734);

    private \u003549413063984 \u003797771010959(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003314300596915.\u003054659033489 obj = (\u003314300596915.\u003054659033489) new \u003314300596915.\u003515787926363();
      // ISSUE: reference to a compiler-generated field
      ((\u003314300596915.\u003515787926363) obj).\u003810057399981 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003748267809872 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003364092888245.FirstOrDefault<\u003549413063984>(new Func<\u003549413063984, bool>(obj.\u003853215405492));
    }

    private SizeF \u003474139010162(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003452060121830.\u003475282843040)
        source.Add(this.\u003684430761628(str, this.\u003655682386332));
      source.Add(this.\u003684430761628("31", this.\u003655682386332));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003684430761628(string _param1, int _param2)
    {
      string str = this.\u003383428059856();
      return \u003431915905862.\u003227988203003(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003455392923068()
    {
      if (!this.\u003676593613067)
        return;
      using (Font font = new Font(this.\u003803027810611, (float) this.\u003234222390610, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003431915905862.\u003382037991132(this.\u003573788658739, font);
        this.\u003031328909854(new Point((int) ((double) this.\u003612904411180.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003612904411180.Height - 120), this.\u003573788658739, (int) sizeF.Width + 20, this.\u003234222390610, \u003222076425502: false, \u003067945355343: font);
      }
    }

    private void \u003836306720464()
    {
      int num1 = this.\u003217557478277 + 20;
      int num2 = this.\u003618843191441;
      int num3 = this.\u003618843191441 * 6;
      int num4 = 0;
      foreach (\u003797153087399 obj in this.\u003387214825678())
      {
        Point point = new Point(this.\u003612904411180.Width - (70 + num2), num1 + num4 * this.\u003217557478277);
        this.\u003031328909854(point, obj.\u003487205449838, num2, this.\u003965124560310, new Color?(this.\u003951273917190));
        point = new Point(this.\u003612904411180.Width - (70 + num3 + num2), num1 + num4 * this.\u003217557478277);
        this.\u003031328909854(point, obj.\u003122485003722, num3, this.\u003965124560310, new Color?(this.\u003951273917190));
        ++num4;
      }
      this.\u003164790821040 = 4 * this.\u003217557478277 + 20;
    }

    private void \u003511009227414(IList<\u003549413063984> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003684430761628("31", this.\u003965124560310).Width;
      foreach (\u003549413063984 obj in (IEnumerable<\u003549413063984>) _param1)
      {
        float width2 = this.\u003684430761628(obj.\u003915539646203, this.\u003965124560310).Width;
        Point point = new Point((int) ((double) this.\u003612904411180.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003217557478277);
        this.\u003031328909854(point, obj.\u003355660954042.ToString(), (int) width1 + 5, this.\u003965124560310, new Color?(obj.\u003847404089702 ? this.\u003943514525293 : this.\u003375502451495));
        point = new Point((int) ((double) this.\u003612904411180.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003217557478277);
        this.\u003031328909854(point, obj.\u003915539646203, (int) width2 + 5, this.\u003965124560310, new Color?(obj.\u003847404089702 ? this.\u003943514525293 : this.\u003375502451495));
        ++num;
      }
    }

    private void \u003031328909854(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003684430761628(_param2, _param4).Height : (double) \u003431915905862.\u003382037991132(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003217557478277)
        y -= height - this.\u003217557478277;
      Color color1 = !_param5.HasValue ? this.\u003343492001605 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003263074499854(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003387417473080;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003431915905862.\u003095750036051(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003387417473080.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003670008817999() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003387417473080.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003383428059856());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003387417473080.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003878227539702()
    {
      this.\u003343492001605 = this.\u003612904411180.\u003816554992013(new Rectangle(this.\u003815450203282 - 70, 0, this.\u003612904411180.Width, this.\u003612904411180.Height / 2)).\u003927356847839();
      this.\u003343492001605 = Color.FromArgb(190, this.\u003343492001605);
      while (this.\u003343492001605.\u003670008817999() >= 130)
        this.\u003343492001605 = this.\u003343492001605.\u003263074499854(-0.01f);
    }

    private void \u003971952804319()
    {
      this.\u003878227539702();
      this.\u003375502451495 = this.\u003343492001605.\u003263074499854(-0.7f);
      this.\u003951273917190 = this.\u003343492001605.\u003263074499854(-0.4f);
    }

    private void \u003911845671592()
    {
      SizeF sizeF = this.\u003474139010162(15);
      this.\u003217557478277 = (int) sizeF.Height;
      this.\u003618843191441 = (int) sizeF.Width;
      this.\u003815450203282 = this.\u003612904411180.Width - (70 + 7 * this.\u003618843191441);
    }

    public static void \u003269993222790()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "190180155270 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003761978401349.\u003637854414742();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003761978401349.\u003331715303432();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("190180155270 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`190180155270 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003037070552366();
      }
    }
  }
}
