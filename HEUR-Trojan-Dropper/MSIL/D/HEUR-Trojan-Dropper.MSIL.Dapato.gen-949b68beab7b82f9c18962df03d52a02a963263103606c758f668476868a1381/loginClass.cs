// Decompiled with JetBrains decompiler
// Type: AltiumManager.loginClass
// Assembly: LeOcHwILpefYMF8, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A7C159C0-2645-0515-18CC-33AA0158F2C6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-949b68beab7b82f9c18962df03d52a02a963263103606c758f668476868a1381.exe

using AltiumManager.AltiumDatabaseDataSetTableAdapters;
using Microsoft.VisualBasic;
using System;
using System.Data;
using System.Text;

namespace AltiumManager
{
  public class loginClass
  {
    private string pUserName;
    private string pUserPass;

    public string userName
    {
      get
      {
label_4:
        int num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(87);
        int num2 = -49;
        string pUserName;
        while (true)
        {
          switch ((num2 ^ 106) + 94)
          {
            case 0:
              goto label_4;
            case 1:
              switch (num1 + 93)
              {
                case 0:
                case 3:
                  goto label_10;
                case 1:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.userAvailable);
                  num1 = AltiumDatabaseDataSet.UsersDataTable.\uE23F\uE7C9\uEE0F\uE7EA\uED41\uE818\uECBF\uEA9A\uF708\uE0CF\uE6D6\uEB0D(108);
                  goto label_1;
                case 2:
                  pUserName = this.pUserName;
                  num1 = -63;
                  goto label_1;
                default:
                  num2 = -56;
                  continue;
              }
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.set_userPass);
              num2 = -50;
              continue;
            case 3:
label_1:
              num1 ^= 98;
              break;
          }
          num2 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(85);
        }
label_10:
        return pUserName;
      }
      set => this.pUserName = value;
    }

    public string userPass
    {
      get
      {
label_4:
        int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(67);
        int num2 = 9;
        string pUserPass;
        while (true)
        {
          switch (num2 ^ 102)
          {
            case 108:
              goto label_4;
            case 109:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.checkData);
              num2 = 11;
              continue;
            case 110:
              switch (num1 + 97)
              {
                case 0:
                  pUserPass = this.pUserPass;
                  num1 = -61;
                  goto label_1;
                case 1:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.userAvailable);
                  num1 = -62;
                  goto label_1;
                case 2:
                case 3:
                  goto label_10;
                default:
                  num2 = 10;
                  continue;
              }
            case 111:
label_1:
              num1 ^= 98;
              break;
          }
          num2 = 8;
        }
label_10:
        return pUserPass;
      }
      set => this.pUserPass = value;
    }

    public bool checkData()
    {
      if ((!(Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.pUserName, "", false) == 0 | Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.pUserPass, "", false) == 0) ? 1 : 0) == 0)
      {
        int num = (int) Interaction.MsgBox((object) "Data is missing");
        goto label_7;
      }
      else
        goto label_11;
label_2:
      int num1;
      num1 ^= 93;
      goto label_4;
label_3:
      int num2;
      while (true)
      {
        switch (num2 ^ 102)
        {
          case 105:
            switch (num1 + 92)
            {
              case 0:
                goto label_9;
              case 1:
                goto label_11;
              case 2:
                goto label_12;
              case 3:
                goto label_13;
              case 4:
                goto label_15;
              case 5:
                goto label_16;
              case 6:
                goto label_17;
              default:
                num2 = 12;
                continue;
            }
          case 106:
            goto label_7;
          case 107:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.randomPass);
            num2 = 13;
            continue;
          case 108:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_9:
      bool flag;
      if (!flag)
      {
        num1 = -9;
        goto label_2;
      }
      else
        goto label_17;
label_12:
      flag = true;
      num1 = AltiumDatabaseDataSet.\uF5B4\uEBB6\uED16\uE0FF\uE59B\uF026\uEFAB\uE051\uE189\uE10C\uF7F9\uF6D6(53);
      goto label_2;
label_13:
      if (flag)
      {
        num1 = -8;
        goto label_2;
      }
      else
        goto label_17;
label_15:
      // ISSUE: method reference
      RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.get_userPass);
      num1 = -11;
      goto label_2;
label_16:
      flag = false;
      num1 = -6;
      goto label_2;
label_17:
      return flag;
label_4:
      num2 = 15;
      goto label_3;
label_7:
      num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(77);
      num2 = 10;
      goto label_3;
label_11:
      num1 = -5;
      goto label_2;
    }

    public bool userAvailable(
      AltiumDatabaseDataSet.UsersDataTable tempData,
      UsersTableAdapter tempAdapter)
    {
label_7:
      int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(84);
      int num2 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(87);
      while (true)
      {
        switch ((num2 ^ 92) + 104)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.\u002Ector);
            num2 = -60;
            continue;
          case 1:
            DataRow[] dataRowArray;
            bool flag;
            switch (num1 + 98)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.checkData);
                num1 = -12;
                goto label_1;
              case 1:
                tempAdapter.Fill(tempData);
                num1 = -54;
                goto label_1;
              case 2:
                dataRowArray = tempData.Select("Username = '" + this.pUserName + "'");
                num1 = -53;
                goto label_1;
              case 3:
                flag = dataRowArray.Length == 0;
                num1 = -56;
                goto label_1;
              case 4:
                if (flag)
                {
                  num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(85);
                  goto label_1;
                }
                else
                  goto label_15;
              case 5:
                goto label_14;
              default:
                num2 = -58;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 106;
            break;
        }
        num2 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(102);
      }
label_14:
      int num3 = 0;
      goto label_16;
label_15:
      num3 = 1;
label_16:
      bool flag1;
      if (num3 == 0)
      {
        flag1 = true;
        if (flag1)
          goto label_19;
      }
      flag1 = false;
      if (!flag1)
        ;
label_19:
      return flag1;
    }

    public string randomPass()
    {
label_2:
      int num1 = AltiumDatabaseDataSet.UsersDataTable.\uE23F\uE7C9\uEE0F\uE7EA\uED41\uE818\uECBF\uEA9A\uF708\uE0CF\uE6D6\uEB0D(95);
      StringBuilder stringBuilder;
      Random random;
      string str1;
      while (true)
      {
        switch ((num1 ^ 103) + 94)
        {
          case 0:
            stringBuilder = new StringBuilder();
            num1 = -63;
            continue;
          case 1:
            random = new Random();
            num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(102);
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.\u002Ector);
            num1 = -61;
            continue;
          case 3:
            str1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            num1 = -60;
            continue;
          case 4:
            goto label_7;
          default:
            goto label_2;
        }
      }
label_7:
      int num2 = 1;
label_8:
      short startIndex = checked ((short) random.Next(0, str1.Length));
label_10:
      int num3 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(105);
      string str2;
      while (true)
      {
        switch ((num3 ^ 98) + 92)
        {
          case 0:
            str2 = stringBuilder.ToString();
            num3 = -57;
            continue;
          case 1:
          case 6:
            goto label_17;
          case 2:
            if (num2 > 12)
            {
              num3 = -58;
              continue;
            }
            goto label_8;
          case 3:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.\u002Ector);
            num3 = -59;
            continue;
          case 4:
            stringBuilder.Append(str1.Substring((int) startIndex, 1));
            num3 = -53;
            continue;
          case 5:
            checked { ++num2; }
            num3 = -60;
            continue;
          default:
            goto label_10;
        }
      }
label_17:
      return str2;
    }
  }
}
