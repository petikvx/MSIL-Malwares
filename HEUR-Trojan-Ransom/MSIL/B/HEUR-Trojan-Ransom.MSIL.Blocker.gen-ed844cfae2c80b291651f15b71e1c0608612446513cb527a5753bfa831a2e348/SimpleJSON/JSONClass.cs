// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_4;
label_1:
        int num1 = -1203790290;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -357513917)) % 4U)
          {
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -292266047 ^ 917550982;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_4;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
label_4:
        jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
        num1 = -1800022101;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -513425994;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -70725583)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1264473007 ^ 1280922357;
              continue;
            case 1:
              num1 = (int) num2 * 1049629465 ^ 262767321;
              continue;
            case 2:
              this.m_Dict.Add(aKey, value);
              num1 = -541349607;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_1;
            case 5:
              int num3 = this.m_Dict.ContainsKey(aKey) ? -818691539 : (num3 = -2030097993);
              num1 = num3 ^ (int) num2 * -1011969400;
              continue;
            case 6:
              num1 = (int) num2 * -699741246 ^ 1399373457;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_9;
label_1:
        int num1 = -1267876793;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -810910226)) % 8U)
          {
            case 1:
              goto label_8;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = -818094992;
              continue;
            case 3:
              num1 = (int) num2 * -1922436621 ^ -128787497;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1365064264 ^ -2091769667;
              continue;
            case 5:
              int num3 = flag ? 2103812322 : (num3 = 1207555540);
              num1 = num3 ^ (int) num2 * -938731056;
              continue;
            case 6:
              num1 = (int) num2 * 749038890 ^ 1675745490;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_11;
          }
        }
label_8:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_10;
label_11:
        return jsonNode;
label_9:
        num4 = 1;
label_10:
        flag = num4 != 0;
        num1 = -192164357;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 264097534;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1753385640)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1558683844 ^ 607323755;
              continue;
            case 2:
              goto label_4;
            case 3:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_4:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 != 0 ? 668989225 : (num1 = 380063575);
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 784120629;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 142107126)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1492882005 ^ -79910805;
              continue;
            case 3:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -114793815 ^ -1098044728;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1069260719;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -913582878)) % 11U)
        {
          case 0:
            flag = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 677319120 ^ -1229945928;
            continue;
          case 1:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1955891497;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = -101224861;
            continue;
          case 4:
            num1 = (int) num2 * -650802300 ^ 1680804291;
            continue;
          case 5:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1145058675;
            continue;
          case 6:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -2099271345 ^ -947589456;
            continue;
          case 7:
            goto label_3;
          case 8:
            num1 = (int) num2 * -1730430414 ^ -2021200449;
            continue;
          case 9:
            int num3 = !JSONClass.\u206F‪‪⁫‭‭‏‮⁪‮‍⁫‮‬⁪⁯​⁪⁫⁬⁪⁭⁬‬‌⁯‎‮‪‪‫‭⁫⁫‫⁪‏‪‭⁮‮(aKey) ? 1348923587 : (num3 = 1497264183);
            num1 = num3 ^ (int) num2 * -1113701562;
            continue;
          case 10:
            int num4 = !flag ? -1864220481 : (num4 = -1274291785);
            num1 = num4 ^ (int) num2 * -1620401842;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 697241018;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1089846973)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -1487130147 ^ 1332960149;
            continue;
          case 1:
            int num3 = this.m_Dict.ContainsKey(aKey) ? -1043441392 : (num3 = -1449009505);
            num1 = num3 ^ (int) num2 * -329754254;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1910152488 ^ 1050120061;
            continue;
          case 5:
            jsonNode1 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = 2136058549;
            continue;
          case 6:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 396980344 ^ 1529086261;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_8;
label_1:
      int num1 = -1655587719;
label_2:
      JSONNode jsonNode;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -595871970)) % 7U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = -479828085;
            continue;
          case 2:
            goto label_7;
          case 3:
            num1 = (int) num2 * 297332787 ^ -1464648627;
            continue;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -735409488 ^ 808285890;
            continue;
          case 5:
            goto label_1;
          case 6:
            int num3 = !flag ? -1516988635 : (num3 = -1818868883);
            num1 = num3 ^ (int) num2 * 1406150009;
            continue;
          default:
            goto label_10;
        }
      }
label_7:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_9;
label_10:
      return jsonNode;
label_8:
      num4 = 1;
label_9:
      flag = num4 != 0;
      num1 = -136239085;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
        getChildsD14.\u003C\u003E4__this = this;
label_1:
        int num1 = -348824991;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1106616635)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * 1440453130 ^ 1912501007;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_9;
label_1:
        int num2 = -146121415;
label_2:
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -316258644)) % 21U)
          {
            case 1:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -182210867 ^ 1459906942;
              continue;
            case 2:
              goto label_19;
            case 3:
              int num4;
              num2 = num4 = num1 != 1 ? -190631144 : (num4 = -192251491);
              continue;
            case 4:
            case 17:
              goto label_9;
            case 5:
              num2 = (int) num3 * -151264373 ^ 1723556026;
              continue;
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * 1302550086 ^ -817667479;
              continue;
            case 7:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? -1023651655 : (num5 = -900883993);
              continue;
            case 8:
              num2 = (int) num3 * 1206328636 ^ -1746540170;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -389140002 ^ -1262262537;
              continue;
            case 10:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * 51876180 ^ -1355422444;
              continue;
            case 11:
              N = enumerator.Current;
              num2 = -1755413498;
              continue;
            case 12:
            case 14:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = new KeyValuePair<string, JSONNode>();
              num2 = -458508780;
              continue;
            case 13:
              num2 = (int) num3 * -1288477567 ^ 1085094602;
              continue;
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -690212793 ^ 2094147463;
              continue;
            case 16:
              num2 = (int) num3 * 1048517980 ^ 185173028;
              continue;
            case 18:
              enumerator = new Dictionary<string, JSONNode>.Enumerator();
              num2 = (int) num3 * -166933882 ^ 736271837;
              continue;
            case 19:
              goto label_8;
            case 20:
              goto label_1;
            default:
              goto label_20;
          }
        }
label_8:
        return true;
label_19:
        return false;
label_20:
        return false;
label_9:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = -1317247379;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -1883073503;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -765109372)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1181934480 ^ 1320947331;
            continue;
          case 1:
            str1 = "{";
            num1 = (int) num2 * 1158679875 ^ -1228016505;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_13:
        int num3 = enumerator.MoveNext() ? -1129790945 : (num3 = -1431544756);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -765109372)) % 7U)
          {
            case 0:
              int num5 = JSONClass.\u200F‏‏‬‏‍‮⁮⁬‭‮‍‮‫‏⁯⁯‌‏‪‌⁬‪‌⁬‏⁪​‮⁯⁭‬‏⁪⁭‭⁪⁬‏‍‮(str1) <= 2 ? -743106530 : (num5 = -1726899463);
              num3 = num5 ^ (int) num4 * 1511960981;
              continue;
            case 2:
              num3 = -1129790945;
              continue;
            case 3:
              goto label_13;
            case 4:
              str1 = JSONClass.\u200D‬⁮⁬‮‫⁭⁭‌⁯‍‫​‍‏‬⁬⁯‎‏‍‪‌⁪⁯⁭⁭‪⁭⁪⁬⁮‎‎‎⁬⁫‍‬⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206B‌‮⁪‮⁫⁮‎⁭‌‮⁯‫​‌⁯⁪‮‫‍⁯⁮‍‭‏⁮⁫‬⁫‍‪‬​⁫⁫​‌‮‌‌‮((object) current.Value)
              });
              num3 = -2039853249;
              continue;
            case 5:
              str1 = JSONClass.\u206E​⁪‫‪⁪⁪⁬⁯‪‬⁭⁫⁬‮‫‎‍⁬‪​‪‮⁫‭​‍⁭‏‮‬‮‬‌‫​⁪⁬‭‮‮(str1, ", ");
              num3 = (int) num4 * 1267319963 ^ -764398633;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = -1266459353;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONClass.\u206E​⁪‫‪⁪⁪⁬⁯‪‬⁭⁫⁬‮‫‎‍⁬‪​‪‮⁫‭​‍⁭‏‮‬‮‬‌‫​⁪⁬‭‮‮(str1, "}");
label_16:
      int num6 = -309533438;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -765109372)) % 3U)
        {
          case 0:
            goto label_16;
          case 2:
            num6 = (int) num7 * 813891865 ^ 1675227605;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1686324252;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 360183507)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * -576282346 ^ 1621964273;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_13:
        int num3 = !enumerator.MoveNext() ? 1372491002 : (num3 = 139676380);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 360183507)) % 10U)
          {
            case 0:
              str1 = JSONClass.\u206E​⁪‫‪⁪⁪⁬⁯‪‬⁭⁫⁬‮‫‎‍⁬‪​‪‮⁫‭​‍⁭‏‮‬‮‬‌‫​⁪⁬‭‮‮(str1, ", ");
              num3 = (int) num4 * 1749875610 ^ -832297943;
              continue;
            case 2:
              str1 = JSONClass.\u200D‬⁮⁬‮‫⁭⁭‌⁯‍‫​‍‏‬⁬⁯‎‏‍‪‌⁪⁯⁭⁭‪⁭⁪⁬⁮‎‎‎⁬⁫‍‬⁯‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206E​⁪‫‪⁪⁪⁬⁯‪‬⁭⁫⁬‮‫‎‍⁬‪​‪‮⁫‭​‍⁭‏‮‬‮‬‌‫​⁪⁬‭‮‮(aPrefix, "   "))
              });
              num3 = (int) num4 * 681049166 ^ -2140857622;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 1704105777;
              continue;
            case 4:
              num3 = (int) num4 * -1074696535 ^ -233263548;
              continue;
            case 5:
              num3 = 139676380;
              continue;
            case 6:
              str1 = JSONClass.\u206B​⁭⁪‌⁭⁫⁬⁭‬‫⁪‌⁮‏​‫‪‬‫⁫⁬⁪⁫‌‮⁭‪‍‍‌⁯‍⁮‪‬⁪‫‎‌‮(str1, "\n", aPrefix, "   ");
              num3 = 209286963;
              continue;
            case 7:
              int num5 = JSONClass.\u200F‏‏‬‏‍‮⁮⁬‭‮‍‮‫‏⁯⁯‌‏‪‌⁬‪‌⁬‏⁪​‮⁯⁭‬‏⁪⁭‭⁪⁬‏‍‮(str1) <= 3 ? -634799981 : (num5 = -293442075);
              num3 = num5 ^ (int) num4 * 919089706;
              continue;
            case 8:
              goto label_13;
            case 9:
              num3 = (int) num4 * -191889794 ^ -1206800987;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONClass.\u206B​⁭⁪‌⁭⁫⁬⁭‬‫⁪‌⁮‏​‫‪‬‫⁫⁬⁪⁫‌‮⁭‪‍‍‌⁯‍⁮‪‬⁪‫‎‌‮(str1, "\n", aPrefix, "}");
label_18:
      int num6 = 573130521;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 360183507)) % 4U)
        {
          case 1:
            num6 = (int) num7 * -1081396030 ^ 1902483769;
            continue;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -1933788050 ^ 1272534122;
            continue;
          case 3:
            goto label_18;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1551782473;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1230091385)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONClass.\u206F‫‫⁮⁯‎​‌‌⁯⁭‌‪⁭‎⁯⁫‎⁮‏⁯⁮⁬‮​‬⁪‍⁮⁬‭⁭⁪‫‬‍‏⁫‭‮‮(aWriter, (byte) 2);
            num1 = (int) num2 * -817844592 ^ -1602941122;
            continue;
          case 2:
            JSONClass.\u206A⁯‎⁯⁬‪‫⁯‭⁫‏⁮⁫‪⁫⁭‬⁮‪‍⁪​⁮‌⁬‌​‫⁭⁯‬​⁬‬‪⁮‭‬⁮⁪‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 1136953875 ^ -1690048647;
            continue;
          case 4:
            num1 = (int) num2 * -74471402 ^ -1077609624;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_13:
        int num3 = enumerator.MoveNext() ? 1600638851 : (num3 = 268373170);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1230091385)) % 9U)
          {
            case 0:
              goto label_13;
            case 1:
              num3 = (int) num4 * 993938506 ^ -2098005621;
              continue;
            case 2:
              num3 = 1600638851;
              continue;
            case 3:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1522744278 ^ -2094118207;
              continue;
            case 4:
              goto label_21;
            case 5:
              num3 = (int) num4 * -1931431682 ^ 216231383;
              continue;
            case 6:
              num3 = (int) num4 * 6904707 ^ -2122297170;
              continue;
            case 7:
              JSONClass.\u202C⁭‪‬‫‎‮​⁯‏⁭⁭⁯⁭⁫‌‌⁬‮​‬‏⁪‪⁫‭⁫‫⁫‪‎‬⁫‫‎‎⁮‏‏‏‮(aWriter, current);
              num3 = (int) num4 * 787481683 ^ 1943017983;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = 8445846;
              continue;
            default:
              goto label_17;
          }
        }
label_21:
        return;
label_17:;
      }
      finally
      {
        enumerator.Dispose();
label_19:
        int num5 = 2034174556;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ 1230091385)) % 3U)
          {
            case 1:
              num5 = (int) num6 * 295452032 ^ -1243521388;
              continue;
            case 2:
              goto label_19;
            default:
              goto label_23;
          }
        }
label_23:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = -344786693;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1745277051)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 336143164 ^ 241151665;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u206F‪‪⁫‭‭‏‮⁪‮‍⁫‮‬⁪⁯​⁪⁫⁬⁪⁭⁬‬‌⁯‎‮‪‪‫‭⁫⁫‫⁪‏‪‭⁮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200F‏‏‬‏‍‮⁮⁬‭‮‍‮‫‏⁯⁯‌‏‪‌⁬‪‌⁬‏⁪​‮⁯⁭‬‏⁪⁭‭⁪⁬‏‍‮([In] string obj0) => obj0.Length;

    static string \u206E​⁪‫‪⁪⁪⁬⁯‪‬⁭⁫⁬‮‫‎‍⁬‪​‪‮⁫‭​‍⁭‏‮‬‮‬‌‫​⁪⁬‭‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206B‌‮⁪‮⁫⁮‎⁭‌‮⁯‫​‌⁯⁪‮‫‍⁯⁮‍‭‏⁮⁫‬⁫‍‪‬​⁫⁫​‌‮‌‌‮([In] object obj0) => obj0.ToString();

    static string \u200D‬⁮⁬‮‫⁭⁭‌⁯‍‫​‍‏‬⁬⁯‎‏‍‪‌⁪⁯⁭⁭‪⁭⁪⁬⁮‎‎‎⁬⁫‍‬⁯‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206B​⁭⁪‌⁭⁫⁬⁭‬‫⁪‌⁮‏​‫‪‬‫⁫⁬⁪⁫‌‮⁭‪‍‍‌⁯‍⁮‪‬⁪‫‎‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F‫‫⁮⁯‎​‌‌⁯⁭‌‪⁭‎⁯⁫‎⁮‏⁯⁮⁬‮​‬⁪‍⁮⁬‭⁭⁪‫‬‍‏⁫‭‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A⁯‎⁯⁬‪‫⁯‭⁫‏⁮⁫‪⁫⁭‬⁮‪‍⁪​⁮‌⁬‌​‫⁭⁯‬​⁬‬‪⁮‭‬⁮⁪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202C⁭‪‬‫‎‮​⁯‏⁭⁭⁯⁭⁫‌‌⁬‮​‬‏⁪‪⁫‭⁫‫⁫‪‎‬⁫‫‎‎⁮‏‏‏‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
