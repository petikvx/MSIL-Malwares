// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: TimeSpanTok, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: ECAE311E-CE0C-4BF9-8C57-F98A452B360E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7480e4ba962590b3f14f4516861bb1aa80ffa08223a944ee6599cfe3b4e89bce.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1954503273;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1396520482)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1081915466 ^ -665571023;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1019427206;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1554223157)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1620257514 ^ -1549611300;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1602211718 ^ 848031131;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 901780271;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2002865741)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -1977341714 ^ -230576745;
              continue;
            case 2:
              str = "";
              num1 = (int) num2 * 546833617 ^ -740554082;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 235351072;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 50620892)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * -340208673 ^ -1331132443;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1077970145;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -978565096)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1188771749 ^ -2116724600;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -531848106;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -580094177)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1209635455 ^ 340468235;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 2048988230;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1733203331)) % 3U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1661089773 ^ 1915457964;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1089771061;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1606898590)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1942871518 ^ 304198282;
              continue;
            case 3:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1543221415 ^ -1475832894;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 729411748;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1716802130)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * 772006662 ^ 922289341;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -1563570209;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -308465035)) % 9U)
          {
            case 0:
              asInt = 0;
              num1 = -169279082;
              continue;
            case 1:
              int num3 = flag ? 241574800 : (num3 = 744707527);
              num1 = num3 ^ (int) num2 * 89285238;
              continue;
            case 3:
              result = 0;
              num1 = (int) num2 * 393092659 ^ 386716382;
              continue;
            case 4:
              num1 = (int) num2 * 965140734 ^ 572833123;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * -331190656 ^ -1178709976;
              continue;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * -301870581 ^ 691591908;
              continue;
            case 8:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -925716131 ^ 238284220;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -940673835;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1464873516)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -133330936 ^ 1893662091;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        bool flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206C‫‎‮⁬‭⁭⁫⁬‫⁯‭‎‌‏‪‏‎‍⁪⁬‍​⁬‌​⁫‮⁬‌⁯‎‏‮‭⁬‪⁪‬‬‮(), out result);
label_1:
        int num1 = -67108321;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -965943514)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -2109092833 ^ 274363511;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * 1872801806 ^ 721706809;
              continue;
            case 3:
              int num3 = !flag ? 1440996858 : (num3 = 119711041);
              num1 = num3 ^ (int) num2 * 1226246763;
              continue;
            case 5:
              asFloat = 0.0f;
              num1 = -118127762;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -207397387;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1394697703)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 854007337 ^ 772099592;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -2097719972;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -528916879)) % 8U)
          {
            case 0:
              int num3 = flag ? 1334093 : (num3 = 1884312303);
              num1 = num3 ^ (int) num2 * 1934491248;
              continue;
            case 1:
              num1 = (int) num2 * -1573174061 ^ -542521243;
              continue;
            case 2:
              goto label_1;
            case 3:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 2106430912 ^ 2045038921;
              continue;
            case 4:
              asDouble = result;
              num1 = (int) num2 * 36664074 ^ -1577424730;
              continue;
            case 5:
              result = 0.0;
              num1 = (int) num2 * 1825143551 ^ 565458849;
              continue;
            case 6:
              asDouble = 0.0;
              num1 = -134307480;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1148275637;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 84049916)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1780180751 ^ -1968298520;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1693451593;
        bool asBool;
        bool result;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 792612568)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              result = false;
              num1 = (int) num2 * 542567890 ^ -476869639;
              continue;
            case 2:
              num1 = (int) num2 * 632898619 ^ 412654769;
              continue;
            case 3:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -960435746 ^ -275905660;
              continue;
            case 4:
              asBool = !JSONNode.\u202A‍‬‮⁪⁪⁮⁯​⁬‭⁯‎‭‍‮‏​‎⁭‬​‭​‪​⁪‍⁫‏⁯⁭‬​​⁪⁭‬⁬⁪‮(this.Value);
              num1 = 176459930;
              continue;
            case 5:
              asBool = result;
              num1 = (int) num2 * 241268118 ^ 859964153;
              continue;
            case 6:
              int num3 = !flag ? -935773684 : (num3 = -2033984243);
              num1 = num3 ^ (int) num2 * 1507948716;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 276428413;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 964987002)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 236753977;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -702594477;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -159007661)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1388923190 ^ 366563588;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 16093702;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 469293977)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1216711568 ^ -1367776352;
              continue;
            case 2:
              goto label_1;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * 150770758 ^ -1033341877;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = 870805373;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 587999547)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1427889312 ^ -1991187766;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -1589166011;
label_2:
      uint num2;
      string str1;
      string str2;
      switch ((num2 = (uint) (num1 ^ -1824446342)) % 3U)
      {
        case 1:
          str2 = d.Value;
          goto label_5;
        case 2:
          goto label_1;
        default:
          return str1;
      }
label_4:
      str2 = (string) null;
label_5:
      str1 = str2;
      num1 = -1164490774;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 1463496274;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2010562300)) % 6U)
        {
          case 0:
            goto label_1;
          case 2:
            goto label_3;
          case 3:
            flag2 = true;
            num1 = (int) num2 * 1406814978 ^ -1686900505;
            continue;
          case 4:
            int num3 = flag1 ? -822504005 : (num3 = -1622192509);
            num1 = num3 ^ (int) num2 * -574175762;
            continue;
          case 5:
            flag2 = (object) a == b;
            num1 = 932790289;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = 1223487470;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1466554235;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 516410009)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1844031928 ^ 414800625;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode()
    {
      int hashCode = this.\u202D‬‫​​‮⁭⁮‭‎⁯‎⁮​‭‏⁫‏⁫‫⁬⁪‮⁮‫⁮⁯⁯‍⁯​‏⁬‍⁬‭‌​‭‍‮();
label_1:
      int num1 = -120140007;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1810698466)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1848233334 ^ 1045875257;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = 1175373254;
      char ch1;
      int num2;
      string str2;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 879452702)) % 28U)
        {
          case 0:
label_28:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\b");
            num1 = 75591945;
            continue;
          case 1:
label_23:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, ch2.ToString());
            num1 = 1531411147;
            continue;
          case 2:
label_9:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\r");
            num1 = 1484831293;
            continue;
          case 3:
            int num4;
            num1 = num4 = ch1 == '\\' ? 285980674 : (num4 = 1178161712);
            continue;
          case 4:
            ++num2;
            num1 = (int) num3 * -8697794 ^ -1932642357;
            continue;
          case 5:
            num1 = (int) num3 * -2087139751 ^ 1602733828;
            continue;
          case 6:
label_6:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\f");
            num1 = 1484831293;
            continue;
          case 7:
            num1 = 1233193738;
            continue;
          case 8:
            num1 = (int) num3 * -2054252874 ^ -1558915003;
            continue;
          case 9:
            num1 = (int) num3 * 2069484534 ^ 689194811;
            continue;
          case 10:
            num1 = (int) num3 * 61185702 ^ -610940323;
            continue;
          case 11:
            num1 = (int) num3 * -1118222467 ^ -444562848;
            continue;
          case 12:
            goto label_1;
          case 13:
            num1 = (int) num3 * -2064250850 ^ -1868191161;
            continue;
          case 14:
label_7:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\t");
            num1 = 1484831293;
            continue;
          case 15:
            ch2 = JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(str3, num2);
            num1 = 1005776263;
            continue;
          case 16:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\\\");
            num1 = 1646691946;
            continue;
          case 17:
            ch1 = ch2;
            switch (ch1)
            {
              case '\b':
                goto label_28;
              case '\t':
                goto label_7;
              case '\n':
                goto label_12;
              case '\v':
                goto label_23;
              case '\f':
                goto label_6;
              case '\r':
                goto label_9;
              default:
                num1 = (int) num3 * -339059623 ^ 1475597894;
                continue;
            }
          case 19:
            str2 = str1;
            num1 = (int) num3 * 459754799 ^ 1673032857;
            continue;
          case 20:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\\"");
            num1 = 159134719;
            continue;
          case 21:
            int num5;
            num1 = num5 = num2 < JSONNode.\u206E⁫‮‫‭‎‭‫‭⁮⁫‌‭⁫⁬‍‌‮​‍‮‮⁮‍‌‌‪‮‫⁭⁭‍‎‮‬⁮‫‮⁮‭‮(str3) ? 926294701 : (num5 = 1614665025);
            continue;
          case 22:
label_12:
            str1 = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(str1, "\\n");
            num1 = 118078727;
            continue;
          case 23:
            int num6;
            num1 = num6 = ch1 == '"' ? 5950182 : (num6 = 1963725224);
            continue;
          case 24:
            str3 = aText;
            num2 = 0;
            num1 = (int) num3 * -854867546 ^ -814550623;
            continue;
          case 25:
            num1 = (int) num3 * 652045635 ^ -1266775422;
            continue;
          case 26:
            num1 = (int) num3 * 525808536 ^ 2143223483;
            continue;
          case 27:
            num1 = (int) num3 * -1973015168 ^ -1022481219;
            continue;
          default:
            goto label_30;
        }
      }
label_30:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1449432963;
      char ch1;
      char ch2;
      char ch3;
      bool flag1;
      bool flag2;
      Stack<JSONNode> jsonNodeStack;
      string aKey;
      bool flag3;
      string aItem;
      bool flag4;
      bool flag5;
      JSONNode jsonNode1;
      int num2;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      JSONNode jsonNode2;
      bool flag11;
      bool flag12;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1778818606)) % 147U)
        {
          case 0:
label_108:
            ++num2;
            flag7 = flag3;
            num1 = 1046607373;
            continue;
          case 1:
            goto label_67;
          case 2:
            num1 = (int) num3 * 1883891595 ^ -374206077;
            continue;
          case 3:
            num1 = (int) num3 * -1029144593 ^ 2057812023;
            continue;
          case 4:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, "\b");
            num1 = 174854686;
            continue;
          case 5:
          case 9:
          case 58:
          case 92:
          case 99:
label_30:
            ++num2;
            num1 = 277954941;
            continue;
          case 6:
            aKey = JSONNode.\u206F‮‫‭⁭‭‍‪⁭‎‫‍‪‬‏⁫⁯‎‏‍⁪‌​⁪‏⁯‬‏⁬​‏‫⁭⁬⁭⁬​⁬⁯‍‮(aKey);
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 371104504 ^ -1305386136;
            continue;
          case 7:
            ch1 = JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2);
            num1 = (int) num3 * 1494643559 ^ 2074230020;
            continue;
          case 8:
            num1 = (int) num3 * -863902948 ^ -560511564;
            continue;
          case 10:
            int num4;
            num1 = num4 = ch2 == 'n' ? 145836587 : (num4 = 122632897);
            continue;
          case 11:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 2006510722;
            continue;
          case 12:
            aKey = "";
            num1 = 1766527568;
            continue;
          case 13:
            num1 = 1985788382;
            continue;
          case 14:
            int num5 = jsonNodeStack.Count <= 0 ? -1316889911 : (num5 = -1325783063);
            num1 = num5 ^ (int) num3 * 1846757883;
            continue;
          case 15:
            aKey = "";
            flag3 = false;
            num1 = (int) num3 * -1933639579 ^ -1219452569;
            continue;
          case 16:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1270941476 ^ 340994453;
            continue;
          case 17:
            aKey = "";
            aItem = "";
            num1 = 1007726908;
            continue;
          case 18:
label_15:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, "\r");
            num1 = 264978125;
            continue;
          case 19:
            num1 = (int) num3 * 983460074 ^ 1469204047;
            continue;
          case 20:
            aItem = "";
            num1 = (int) num3 * -607563497 ^ -1245422274;
            continue;
          case 21:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, "\f");
            num1 = 1617610531;
            continue;
          case 22:
            num1 = (int) num3 * -162129517 ^ 344262203;
            continue;
          case 23:
            flag8 = JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aKey, "");
            num1 = 72926374;
            continue;
          case 24:
            flag12 = flag3;
            num1 = 960732044;
            continue;
          case 25:
            num1 = 635451031;
            continue;
          case 26:
            num1 = (int) num3 * 1340039273 ^ -1836481168;
            continue;
          case 27:
            int num6;
            num1 = num6 = num2 < JSONNode.\u206E⁫‮‫‭‎‭‫‭⁮⁫‌‭⁫⁬‍‌‮​‍‮‮⁮‍‌‌‪‮‫⁭⁭‍‎‮‬⁮‫‮⁮‭‮(aJSON) ? 1832242184 : (num6 = 1471172430);
            continue;
          case 28:
            num1 = (int) num3 * 1588335892 ^ 1156387866;
            continue;
          case 29:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -478834093 ^ 1942908824;
            continue;
          case 30:
            num1 = (int) num3 * 669037943 ^ 1795770025;
            continue;
          case 31:
            aItem = "";
            num1 = (int) num3 * 1217753610 ^ -428814905;
            continue;
          case 32:
            int num7;
            num1 = num7 = ch3 != '{' ? 1321484238 : (num7 = 255422589);
            continue;
          case 33:
            int num8;
            num1 = num8 = JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aKey, "") ? 1044379408 : (num8 = 612290560);
            continue;
          case 34:
            num1 = (int) num3 * 1349342655 ^ -1056668142;
            continue;
          case 35:
            int num9 = JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aItem, "") ? -1389504904 : (num9 = -1677470373);
            num1 = num9 ^ (int) num3 * 1255808542;
            continue;
          case 36:
            num1 = (int) num3 * -1495504081 ^ -1254671389;
            continue;
          case 37:
            goto label_1;
          case 38:
            int num10 = !flag9 ? 1437705336 : (num10 = 1486325508);
            num1 = num10 ^ (int) num3 * -1542625241;
            continue;
          case 39:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -326218224 ^ -236704605;
            continue;
          case 40:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 2006703573 ^ 461973077;
            continue;
          case 41:
            aKey = aItem;
            num1 = 406066846;
            continue;
          case 42:
            num1 = (int) num3 * -608056906 ^ 1859433228;
            continue;
          case 43:
            int num11 = ch2 == 'b' ? -1642444347 : (num11 = -1974818237);
            num1 = num11 ^ (int) num3 * -429551698;
            continue;
          case 44:
label_121:
            int num12;
            num1 = num12 = !flag3 ? 1648812897 : (num12 = 2008097413);
            continue;
          case 45:
            num1 = (int) num3 * -266614759 ^ -1231812019;
            continue;
          case 46:
            aKey = JSONNode.\u206F‮‫‭⁭‭‍‪⁭‎‫‍‪‬‏⁫⁯‎‏‍⁪‌​⁪‏⁯‬‏⁬​‏‫⁭⁬⁭⁬​⁬⁯‍‮(aKey);
            int num13 = jsonNode1 is JSONArray ? 541197838 : (num13 = 1587616490);
            num1 = num13 ^ (int) num3 * -1670216086;
            continue;
          case 47:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 19233278 ^ -1054022624;
            continue;
          case 48:
            aKey = JSONNode.\u206F‮‫‭⁭‭‍‪⁭‎‫‍‪‬‏⁫⁯‎‏‍⁪‌​⁪‏⁯‬‏⁬​‏‫⁭⁬⁭⁬​⁬⁯‍‮(aKey);
            num1 = (int) num3 * 144085725 ^ 473197345;
            continue;
          case 49:
            int num14;
            num1 = num14 = ch3 != '}' ? 706494698 : (num14 = 1339284018);
            continue;
          case 50:
            num1 = (int) num3 * -2144779893 ^ 487276554;
            continue;
          case 51:
            jsonNodeStack.Pop();
            num1 = 284979604;
            continue;
          case 52:
            int num15 = flag8 ? -709026591 : (num15 = -1334078552);
            num1 = num15 ^ (int) num3 * -274893345;
            continue;
          case 53:
            num1 = (int) num3 * -2022695440 ^ -137209773;
            continue;
          case 54:
            num1 = (int) num3 * -1608813724 ^ -1684899099;
            continue;
          case 55:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -20617267 ^ -1821474409;
            continue;
          case 56:
            num1 = (int) num3 * -1021564082 ^ 1872357595;
            continue;
          case 57:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1163050084 ^ -1780546973;
            continue;
          case 59:
            aItem = "";
            num1 = (int) num3 * -1567214660 ^ 102001468;
            continue;
          case 60:
            num1 = (int) num3 * -800644837 ^ -386229792;
            continue;
          case 61:
            num1 = (int) num3 * 2118973813 ^ -1851086858;
            continue;
          case 62:
            int num16 = flag3 ? -1902355828 : (num16 = -919091802);
            num1 = num16 ^ (int) num3 * 1601795485;
            continue;
          case 63:
            int num17;
            num1 = num17 = JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aKey, "") ? 1476480607 : (num17 = 1473831718);
            continue;
          case 64:
            num1 = (int) num3 * -1754634148 ^ -2135016487;
            continue;
          case 65:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -975409334 ^ -930926893;
            continue;
          case 66:
            int num18 = flag5 ? 213959918 : (num18 = 1408154688);
            num1 = num18 ^ (int) num3 * -1688409627;
            continue;
          case 67:
            int num19 = flag12 ? -1741188327 : (num19 = -1982285914);
            num1 = num19 ^ (int) num3 * -400644493;
            continue;
          case 68:
            num1 = 1263337806;
            continue;
          case 69:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1063720033 ^ -78583434;
            continue;
          case 70:
            goto label_70;
          case 71:
            flag3 = !flag3;
            num1 = 1500581975;
            continue;
          case 72:
            num1 = (int) num3 * 308868239 ^ 468528833;
            continue;
          case 73:
            num1 = (int) num3 * -1800096614 ^ 1825566501;
            continue;
          case 74:
            num1 = (int) num3 * -2031706160 ^ 225081779;
            continue;
          case 75:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 2026254448 ^ 241926717;
            continue;
          case 76:
            int num20 = !flag11 ? 1533655388 : (num20 = 499246594);
            num1 = num20 ^ (int) num3 * -724313618;
            continue;
          case 77:
            num1 = (int) num3 * -1796691000 ^ 2127000712;
            continue;
          case 78:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, "\n");
            num1 = 111286348;
            continue;
          case 79:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1513238941 ^ 1096757228;
            continue;
          case 80:
label_103:
            int num21;
            num1 = num21 = !flag3 ? 933037636 : (num21 = 1077350270);
            continue;
          case 81:
            num1 = (int) num3 * 690475513 ^ 2111308983;
            continue;
          case 82:
            int num22;
            num1 = num22 = ch3 != ',' ? 1147716916 : (num22 = 2132363205);
            continue;
          case 83:
            flag2 = flag3;
            num1 = 882215232;
            continue;
          case 84:
            int num23 = flag10 ? -1387644111 : (num23 = -608913315);
            num1 = num23 ^ (int) num3 * -2023020136;
            continue;
          case 85:
            num1 = (int) num3 * -1044570478 ^ -1112888914;
            continue;
          case 86:
            int num24 = !flag2 ? -232526945 : (num24 = -1337906598);
            num1 = num24 ^ (int) num3 * -58976155;
            continue;
          case 87:
            int num25;
            num1 = num25 = ch2 != 'f' ? 1105177542 : (num25 = 717967460);
            continue;
          case 88:
            num1 = (int) num3 * -1680659354 ^ -2127407704;
            continue;
          case 89:
            int num26;
            num1 = num26 = ch3 == ' ' ? 1645812136 : (num26 = 1027203009);
            continue;
          case 90:
            num1 = 1471342007;
            continue;
          case 91:
label_65:
            flag1 = flag3;
            num1 = 1810882816;
            continue;
          case 93:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = (int) num3 * -2129423358 ^ -1256045781;
            continue;
          case 94:
            int num27 = ch3 > ' ' ? 489834625 : (num27 = 1075966264);
            num1 = num27 ^ (int) num3 * -1051762800;
            continue;
          case 95:
            int num28 = !(jsonNode1 is JSONArray) ? 700980480 : (num28 = 2125336278);
            num1 = num28 ^ (int) num3 * -2144601824;
            continue;
          case 96:
label_64:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, ch1.ToString());
            num1 = 492732885;
            continue;
          case 97:
            switch (ch3)
            {
              case '\t':
                goto label_121;
              case '\n':
              case '\r':
                goto label_30;
              case '\v':
              case '\f':
                goto label_111;
              default:
                num1 = (int) num3 * 2145990130 ^ 77208611;
                continue;
            }
          case 98:
            num1 = (int) num3 * -1955979772 ^ -747640442;
            continue;
          case 100:
            num1 = (int) num3 * 1299956580 ^ 1654365717;
            continue;
          case 101:
            num1 = (int) num3 * 1253845028 ^ -1561785136;
            continue;
          case 102:
            num1 = (int) num3 * -1750804554 ^ -2146552181;
            continue;
          case 103:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            flag11 = jsonNode1 != (object) null;
            num1 = 1368976610;
            continue;
          case 104:
            int num29 = flag7 ? -1519075324 : (num29 = -849970890);
            num1 = num29 ^ (int) num3 * -1543962357;
            continue;
          case 106:
            switch (ch2)
            {
              case 'r':
                goto label_15;
              case 's':
                goto label_64;
              case 't':
                goto label_57;
              case 'u':
                goto label_32;
              default:
                num1 = 335815230;
                continue;
            }
          case 107:
            flag5 = flag3;
            num1 = 1711639282;
            continue;
          case 108:
            switch (ch3)
            {
              case '[':
                goto label_103;
              case '\\':
                goto label_108;
              case ']':
                goto label_65;
              default:
                num1 = 493120979;
                continue;
            }
          case 109:
            int num30;
            num1 = num30 = !JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aItem, "") ? 392743714 : (num30 = 191902134);
            continue;
          case 110:
            num1 = (int) num3 * -507306438 ^ 1003353808;
            continue;
          case 111:
            num1 = (int) num3 * -1515385767 ^ 436371701;
            continue;
          case 112:
            num1 = (int) num3 * 2015423803 ^ 1092569571;
            continue;
          case 113:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1806227915 ^ 870016593;
            continue;
          case 114:
            num1 = (int) num3 * -1920622547 ^ -468599376;
            continue;
          case 115:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * 647366308 ^ 1712414712;
            continue;
          case 116:
            aKey = "";
            aItem = "";
            num1 = 1549212053;
            continue;
          case 117:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 1667439228;
            continue;
          case 118:
            num1 = 392743714;
            continue;
          case 119:
            num1 = (int) num3 * -1824450155 ^ 262616781;
            continue;
          case 120:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -685907842 ^ -1935529857;
            continue;
          case 121:
            ch3 = JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2);
            int num31 = ch3 > ',' ? -427724564 : (num31 = -771631699);
            num1 = num31 ^ (int) num3 * 932763370;
            continue;
          case 122:
            flag9 = jsonNode1 != (object) null;
            num1 = (int) num3 * 212985390 ^ 1526139044;
            continue;
          case 123:
            num1 = (int) num3 * 1619811859 ^ -1973764418;
            continue;
          case 124:
            num1 = (int) num3 * -1780378244 ^ 1246590432;
            continue;
          case 125:
            flag4 = JSONNode.\u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮(aKey, "");
            num1 = 422497071;
            continue;
          case 126:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -809805217 ^ -1726073033;
            continue;
          case (uint) sbyte.MaxValue:
            int num32;
            num1 = num32 = ch3 != '"' ? 1400829136 : (num32 = 1884755153);
            continue;
          case 128:
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -2123572943 ^ -1464243452;
            continue;
          case 129:
            num1 = 296230132;
            continue;
          case 130:
            int num33 = flag4 ? -184119014 : (num33 = -1121853168);
            num1 = num33 ^ (int) num3 * 2048136387;
            continue;
          case 131:
            int num34 = !flag6 ? -2080462081 : (num34 = -2069784540);
            num1 = num34 ^ (int) num3 * 1187059759;
            continue;
          case 132:
            num1 = (int) num3 * -1117597960 ^ 1701124334;
            continue;
          case 133:
label_111:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, JSONNode.\u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮(aJSON, num2).ToString());
            num1 = 1667439228;
            continue;
          case 134:
            ch2 = ch1;
            int num35 = ch2 > 'f' ? -844639768 : (num35 = -2140756665);
            num1 = num35 ^ (int) num3 * 1935555420;
            continue;
          case 135:
            num1 = (int) num3 * -124972517 ^ 92575974;
            continue;
          case 136:
label_32:
            string s = JSONNode.\u202D⁪‎‪‮⁫‭‏‌‬⁮⁯⁪​‌‬⁯⁮‪⁬‪⁯‍⁭⁯⁪⁫‍⁭‮‌⁯⁫‭⁭⁭⁮​‮‏‮(aJSON, num2 + 1, 4);
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = 2120377662;
            continue;
          case 137:
            int num36;
            num1 = num36 = jsonNodeStack.Count == 0 ? 1070921743 : (num36 = 1303685688);
            continue;
          case 138:
            num1 = (int) num3 * -1726821009 ^ -1726230837;
            continue;
          case 139:
            jsonNode2 = jsonNode1;
            num1 = 1858482920;
            continue;
          case 140:
            int num37;
            num1 = num37 = ch3 > ']' ? 441059751 : (num37 = 68233514);
            continue;
          case 141:
            num1 = (int) num3 * -34253296 ^ 1117455134;
            continue;
          case 142:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -2131385086 ^ -161090131;
            continue;
          case 143:
            int num38 = ch3 == ':' ? 1645805903 : (num38 = 673641787);
            num1 = num38 ^ (int) num3 * 544284781;
            continue;
          case 144:
label_57:
            aItem = JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮(aItem, "\t");
            num1 = 937255549;
            continue;
          case 145:
            num1 = (int) num3 * 480543367 ^ 282366945;
            continue;
          case 146:
            int num39 = flag1 ? -1876427254 : (num39 = -1730473516);
            num1 = num39 ^ (int) num3 * 1217139583;
            continue;
          default:
            goto label_147;
        }
      }
label_67:
      throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("JSON Parse: Too many closing brackets");
label_70:
      throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("JSON Parse: Quotation marks seems to be messed up.");
label_147:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -173735760;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1373026959)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u200E‬​⁮‭‌‏⁯‏‏⁮‮‭⁪⁬‎⁪‪⁭‏‏‎‌‬‫⁫⁮‎‭‭‬⁬‬⁯‭⁫‮‍⁬⁮‮(aData);
            num1 = (int) num2 * 181224616 ^ 570341322;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * -629493466 ^ -444536703;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200E​‏⁭⁫‪‎⁬‌‏‬‫​⁬‏​⁮⁪‍‍‮⁬​‌⁪‭‎⁮‌⁬⁫‪‎‍‎‍⁮‭‪‬‮(JSONNode.\u200D⁮‎⁮⁪‮‭‌​⁭⁯⁮⁮‪⁫‪⁮⁫‫‌⁭⁭‌⁪⁪‬⁪⁭⁬‎⁬⁭‎‭⁯‎⁭‭​‫‮((FileSystemInfo) JSONNode.\u200F‌‍⁯‌‮‭‌‪‬‭‭‏⁮​‍⁭⁬⁮⁪⁬‎‎‌‌​⁪‭‌‌⁫‏​⁯‌‮⁯​‌‮(JSONNode.\u202C‎‍‮‎‎⁮‪‫‫‬⁫‍⁭‮‍⁭‎⁭‌⁮⁯‮‭‎‏⁭‍‪​‬‬‮‫‫‫⁫‭‫⁪‮(aFileName))));
      FileStream aData = JSONNode.\u206B⁬⁪‬⁪‮​‮‌⁫‭⁭⁭​⁯⁭‍⁮‫‪⁬‪‏‌‏⁯‮⁬‏‪‪⁯‏‮‮⁯⁬‏⁯‭‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = 1346973298;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1592847575)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * 508072579 ^ -1364334929;
              continue;
            case 2:
              goto label_2;
            case 3:
              num1 = (int) num2 * -118448378 ^ -436034019;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 419246190;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1592847575)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -1026962190 ^ 900306241;
                continue;
              case 1:
                JSONNode.\u206F⁯‭⁭⁯‬⁪‎​‏⁬‎⁪‬⁪⁪⁬‭‏⁭⁮⁫‮⁯⁫⁫⁯⁬⁯⁫‍‎‏‪‏‪⁫⁫⁬⁯‮((IDisposable) aData);
                num3 = (int) num4 * -322282248 ^ -2056619953;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202D⁪‏‎⁭‍⁭⁭‭‍⁮⁯⁪⁯‍‮‪⁬⁭⁯‪‏​​‎‎‫⁯‮⁫‪⁭‫⁮⁪​‪‏‫‌‮();
      try
      {
label_2:
        int num1 = 431757908;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 77656498)) % 4U)
          {
            case 0:
              goto label_2;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -455757180 ^ 1659886789;
              continue;
            case 3:
              JSONNode.\u200B‏‮‌‍‏⁬​⁮⁪⁪⁯‮‍‏‬‬⁫⁫⁮⁮‭‌‎‭⁭‏‬⁯⁬⁯‭‎⁫‎​‮‏‍‫‮((Stream) aData, 0L);
              num1 = (int) num2 * 1648604747 ^ -1923034526;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u200F‬‏⁮⁫‎‫‮​‭‬⁮‬​⁪⁬⁫⁫⁫‌‭‬‎⁫⁬‎⁯⁯⁫‎‪⁮‫‍‌⁮​‭‫‏‮(JSONNode.\u202B⁭​‮‏​⁫‌⁪⁪​​‫⁪⁯‫⁫⁫⁯‌‏‎⁬‬‏‬‎⁪⁬‏‎‎‎‫⁫‪‏⁯⁬⁪‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 393415204;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 77656498)) % 4U)
            {
              case 1:
                num3 = (int) num4 * -1113694829 ^ 1606524697;
                continue;
              case 2:
                JSONNode.\u206F⁯‭⁭⁯‬⁪‎​‏⁬‎⁪‬⁪⁪⁬‭‏⁭⁮⁫‮⁯⁫⁫⁯⁬⁯⁫‍‎‏‪‏‪⁫⁫⁬⁯‮((IDisposable) aData);
                num3 = (int) num4 * 712274609 ^ -1794272943;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200D⁭‮⁭‪⁬‭‪​‬‫‎‫‮‎⁯⁭‮‎‭‎‭⁬‬‫‎⁯‏‍⁯‍⁪‬‮⁭⁭⁭⁭‎‎‮(aReader);
label_1:
      int num1 = 703453498;
      JSONClass jsonClass;
      JSONNode jsonNode;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      JSONArray jsonArray;
      int num2;
      int num3;
      string aKey;
      int num4;
      int num5;
      bool flag;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1183666622)) % 36U)
        {
          case 0:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 340109065 ^ -2117273828;
            continue;
          case 1:
            num1 = (int) num6 * -741403751 ^ 2140405974;
            continue;
          case 2:
            goto label_37;
          case 3:
            int num7 = flag ? 627735290 : (num7 = 1954845145);
            num1 = num7 ^ (int) num6 * 360569940;
            continue;
          case 4:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1870415151 ^ 224042284;
            continue;
          case 5:
label_29:
            num5 = JSONNode.\u202B‍​‍‭‭⁫‎⁭⁪​‫‪‏‮‏‎‪‪‮​‪​‫⁬‪‏​‌‏‫‪‮⁮⁮⁭‏‬‫⁪‮(aReader);
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = 506613197;
            continue;
          case 6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁮⁪‫⁫⁮‌‌⁫‫​‍‭⁬⁬‬⁪‌‍‪‏‫⁫⁪‭​‭‪‪⁫‎⁫⁮‎‮‍⁮⁬⁬‌‮(aReader));
            num1 = (int) num6 * 520861742 ^ -331995137;
            continue;
          case 7:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1204672100 ^ -1659250499;
            continue;
          case 8:
            num1 = (int) num6 * -1450043836 ^ -2073294728;
            continue;
          case 9:
            int num8;
            num1 = num8 = num2 >= num3 ? 1750172845 : (num8 = 1750659164);
            continue;
          case 10:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_3;
              case JSONBinaryTag.Class:
                goto label_29;
              case JSONBinaryTag.Value:
                goto label_6;
              case JSONBinaryTag.IntValue:
                goto label_17;
              case JSONBinaryTag.DoubleValue:
                goto label_10;
              case JSONBinaryTag.BoolValue:
                goto label_19;
              case JSONBinaryTag.FloatValue:
                goto label_22;
              default:
                num1 = (int) num6 * -822089584 ^ 642433378;
                continue;
            }
          case 11:
            ++num4;
            num1 = (int) num6 * 1945401420 ^ -919972182;
            continue;
          case 12:
            num1 = (int) num6 * 1269411276 ^ -1585056853;
            continue;
          case 13:
label_10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C⁬‬‭‏⁭‪⁪‫‭⁭‏‬⁯‮⁫‌‬‬‪⁪⁬​⁬‮⁬‪‎‍⁫‏‍⁭‪⁪⁬⁬‭⁯‪‮(aReader));
            num1 = 808100312;
            continue;
          case 14:
            num2 = 0;
            num1 = (int) num6 * 214092360 ^ 766998759;
            continue;
          case 15:
label_17:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‍​‍‭‭⁫‎⁭⁪​‫‪‏‮‏‎‪‪‮​‪​‫⁬‪‏​‌‏‫‪‮⁮⁮⁭‏‬‫⁪‮(aReader));
            num1 = 893739718;
            continue;
          case 16:
            flag = num4 < num5;
            num1 = 34009801;
            continue;
          case 17:
            num3 = JSONNode.\u202B‍​‍‭‭⁫‎⁭⁪​‫‪‏‮‏‎‪‪‮​‪​‫⁬‪‏​‌‏‫‪‮⁮⁮⁭‏‬‫⁪‮(aReader);
            num1 = (int) num6 * -1556405174 ^ 149379640;
            continue;
          case 18:
            num1 = (int) num6 * -1652589495 ^ -270394083;
            continue;
          case 19:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -38569675 ^ -409832013;
            continue;
          case 20:
            num1 = (int) num6 * -740735109 ^ -57948425;
            continue;
          case 22:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 306003093;
            continue;
          case 23:
            num1 = (int) num6 * -1958749210 ^ -703478004;
            continue;
          case 24:
            goto label_1;
          case 25:
label_3:
            num1 = 789809239;
            continue;
          case 26:
            aKey = JSONNode.\u206C⁮⁪‫⁫⁮‌‌⁫‫​‍‭⁬⁬‬⁪‌‍‪‏‫⁫⁪‭​‭‪‪⁫‎⁫⁮‎‮‍⁮⁬⁬‌‮(aReader);
            num1 = (int) num6 * 2019167667 ^ 1957312575;
            continue;
          case 27:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -215068091 ^ -1591514092;
            continue;
          case 28:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -46234459 ^ 967035022;
            continue;
          case 29:
label_19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B⁬⁭⁪‏‎⁬⁫‪‬‏‌⁫⁯​​‬⁬⁫‬​‫⁫‏‭‮⁪‍⁫‎⁮‮‭‪‌‏⁯‍‬⁫‮(aReader));
            num1 = 1026920330;
            continue;
          case 30:
label_6:
            num1 = 1450009512;
            continue;
          case 31:
            ++num2;
            num1 = (int) num6 * -2090901095 ^ -404993564;
            continue;
          case 32:
            num1 = 1228123272;
            continue;
          case 33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁭⁪‍‪‮‮‌⁬‫⁫‎⁫‬⁭⁪⁭⁫‮‮‫‏‭‌‬⁯‪⁬‍‫⁭‫⁮‭‫⁭‬‮​⁭‮(aReader));
            num1 = (int) num6 * -1280854558 ^ 1937710281;
            continue;
          case 34:
            num1 = (int) num6 * 1062220693 ^ 846595705;
            continue;
          case 35:
label_22:
            num1 = 24307663;
            continue;
          default:
            goto label_38;
        }
      }
label_37:
      throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮(JSONNode.\u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_38:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206C‭‪⁮‏⁯⁪‮⁪‎⁭‍‮‫‬⁭‮⁯‭⁯⁬‭‭‬‫⁭‏‍‮‪⁫‭‌‎‌‍⁮‫⁪‏‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1052995686;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -571123356)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 274868055 ^ 2053157316;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -260812766;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -571123356)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206F⁯‭⁭⁯‬⁪‎​‏⁬‎⁪‬⁪⁪⁬‭‏⁭⁮⁫‮⁯⁫⁫⁯⁬⁯⁫‍‎‏‪‏‪⁫⁫⁬⁯‮((IDisposable) aReader);
                num3 = (int) num4 * 1470191008 ^ 723810844;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202C‫⁪‫‍‎⁫‮‎‭‌⁬‮​⁭​‪‮⁬‏‬⁪⁪⁬‏⁯⁬⁫⁬​⁪‮‫⁪⁫‪⁮‭⁮⁯‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -819489159;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -618977124)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -334850446 ^ 985837126;
                continue;
              case 1:
                JSONNode.\u206F⁯‭⁭⁯‬⁪‎​‏⁬‎⁪‬⁪⁪⁬‭‏⁭⁮⁫‮⁯⁫⁫⁯⁬⁯⁫‍‎‏‪‏‪⁫⁫⁬⁯‮((IDisposable) aData);
                num1 = (int) num2 * 2058400723 ^ 72783079;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 332747928;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 294584201)) % 8U)
        {
          case 1:
            numArray = JSONNode.\u206A⁫⁫⁫‫‭‫‍‭‏‭‫​‮⁪‌⁯⁫⁮‫‬‫‍⁫⁫​‬⁫⁭‬‌‏‭⁮‭‎⁪‎⁮⁪‮(aBase64);
            num1 = (int) num2 * 2017011097 ^ -713255089;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1087197010 ^ 643989087;
            continue;
          case 4:
            num1 = (int) num2 * -1474386960 ^ 1602330164;
            continue;
          case 5:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1028243935 ^ 318801353;
            continue;
          case 6:
            JSONNode.\u200B‏‮‌‍‏⁬​⁮⁪⁪⁯‮‍‏‬‬⁫⁫⁮⁮‭‌‎‭⁭‏‬⁯⁬⁯‭‎⁫‎​‮‏‍‫‮((Stream) aData, 0L);
            num1 = (int) num2 * 1240561702 ^ 2008899977;
            continue;
          case 7:
            aData = JSONNode.\u202D‬‫‍​⁪‍⁭​⁮⁮‬⁯⁮‭​⁫‬⁮‬⁬​​‎​‫‮‍‌‭‏‍‌⁮‌​‮‍⁭‭‮(numArray);
            num1 = (int) num2 * 131093483 ^ -1739455158;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode;
    }

    static CultureInfo \u206C‫‎‮⁬‭⁭⁫⁬‫⁯‭‎‌‏‪‏‎‍⁪⁬‍​⁬‌​⁫‮⁬‌⁯‎‏‮‭⁬‪⁪‬‬‮() => CultureInfo.InvariantCulture;

    static bool \u202A‍‬‮⁪⁪⁮⁯​⁬‭⁯‎‭‍‮‏​‎⁭‬​‭​‪​⁪‍⁫‏⁯⁭‬​​⁪⁭‬⁬⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202D‬‫​​‮⁭⁮‭‎⁯‎⁮​‭‏⁫‏⁫‫⁬⁪‮⁮‫⁮⁯⁯‍⁯​‏⁬‍⁬‭‌​‭‍‮() => base.GetHashCode();

    static char \u200D‎⁯‪⁪​⁯‎‪‪‎⁯⁮⁫⁮⁫‏‪‍‭⁫‭‭‫‎‬⁬⁭‎‍‬‪‭⁭‏⁪⁭‫​⁫‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206E‍‮‍⁮‪⁫⁭⁭‏‍‌‫‏‫‮‫‌‭​⁪‍⁬⁬⁫‍⁬‮‭⁯‫⁫⁫‍​‬​‬⁪‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206E⁫‮‫‭‎‭‫‭⁮⁫‌‭⁫⁬‍‌‮​‍‮‮⁮‍‌‌‪‮‫⁭⁭‍‎‮‬⁮‫‮⁮‭‮([In] string obj0) => obj0.Length;

    static string \u206F‮‫‭⁭‭‍‪⁭‎‫‍‪‬‏⁫⁯‎‏‍⁪‌​⁪‏⁯‬‏⁬​‏‫⁭⁬⁭⁬​⁬⁯‍‮([In] string obj0) => obj0.Trim();

    static bool \u202C⁪‏‌‭⁮‪⁯‫⁯‪‫‫‏⁮⁭‭‬‎⁬‭‮⁫⁫⁬‌‪‏‏⁫⁭‫‪‮⁪⁯⁯⁪‍⁫‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200E⁮‎⁪‍​⁬⁫‍⁫‭‫‏‬⁯⁪‎⁯​‪‭‮⁯‬⁪⁭⁯⁮⁫⁫‎‏‪‬‍‏‎⁬‭‎‮([In] string obj0) => new Exception(obj0);

    static string \u202D⁪‎‪‮⁫‭‏‌‬⁮⁯⁪​‌‬⁯⁮‪⁬‪⁯‍⁭⁯⁪⁫‍⁭‮‌⁯⁫‭⁭⁭⁮​‮‏‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200E‬​⁮‭‌‏⁯‏‏⁮‮‭⁪⁬‎⁪‪⁭‏‏‎‌‬‫⁫⁮‎‭‭‬⁬‬⁯‭⁫‮‍⁬⁮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202C‎‍‮‎‎⁮‪‫‫‬⁫‍⁭‮‍⁭‎⁭‌⁮⁯‮‭‎‏⁭‍‪​‬‬‮‫‫‫⁫‭‫⁪‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200F‌‍⁯‌‮‭‌‪‬‭‭‏⁮​‍⁭⁬⁮⁪⁬‎‎‌‌​⁪‭‌‌⁫‏​⁯‌‮⁯​‌‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200D⁮‎⁮⁪‮‭‌​⁭⁯⁮⁮‪⁫‪⁮⁫‫‌⁭⁭‌⁪⁪‬⁪⁭⁬‎⁬⁭‎‭⁯‎⁭‭​‫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200E​‏⁭⁫‪‎⁬‌‏‬‫​⁬‏​⁮⁪‍‍‮⁬​‌⁪‭‎⁮‌⁬⁫‪‎‍‎‍⁮‭‪‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206B⁬⁪‬⁪‮​‮‌⁫‭⁭⁭​⁯⁭‍⁮‫‪⁬‪‏‌‏⁯‮⁬‏‪‪⁯‏‮‮⁯⁬‏⁯‭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206F⁯‭⁭⁯‬⁪‎​‏⁬‎⁪‬⁪⁪⁬‭‏⁭⁮⁫‮⁯⁫⁫⁯⁬⁯⁫‍‎‏‪‏‪⁫⁫⁬⁯‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202D⁪‏‎⁭‍⁭⁭‭‍⁮⁯⁪⁯‍‮‪⁬⁭⁯‪‏​​‎‎‫⁯‮⁫‪⁭‫⁮⁪​‪‏‫‌‮() => new MemoryStream();

    static void \u200B‏‮‌‍‏⁬​⁮⁪⁪⁯‮‍‏‬‬⁫⁫⁮⁮‭‌‎‭⁭‏‬⁯⁬⁯‭‎⁫‎​‮‏‍‫‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202B⁭​‮‏​⁫‌⁪⁪​​‫⁪⁯‫⁫⁫⁯‌‏‎⁬‬‏‬‎⁪⁬‏‎‎‎‫⁫‪‏⁯⁬⁪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200F‬‏⁮⁫‎‫‮​‭‬⁮‬​⁪⁬⁫⁫⁫‌‭‬‎⁫⁬‎⁯⁯⁫‎‪⁮‫‍‌⁮​‭‫‏‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200D⁭‮⁭‪⁬‭‪​‬‫‎‫‮‎⁯⁭‮‎‭‎‭⁬‬‫‎⁯‏‍⁯‍⁪‬‮⁭⁭⁭⁭‎‎‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202B‍​‍‭‭⁫‎⁭⁪​‫‪‏‮‏‎‪‪‮​‪​‫⁬‪‏​‌‏‫‪‮⁮⁮⁭‏‬‫⁪‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C⁮⁪‫⁫⁮‌‌⁫‫​‍‭⁬⁬‬⁪‌‍‪‏‫⁫⁪‭​‭‪‪⁫‎⁫⁮‎‮‍⁮⁬⁬‌‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200C⁬‬‭‏⁭‪⁪‫‭⁭‏‬⁯‮⁫‌‬‬‪⁪⁬​⁬‮⁬‪‎‍⁫‏‍⁭‪⁪⁬⁬‭⁯‪‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202B⁬⁭⁪‏‎⁬⁫‪‬‏‌⁫⁯​​‬⁬⁫‬​‫⁫‏‭‮⁪‍⁫‎⁮‮‭‪‌‏⁯‍‬⁫‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206D⁭⁪‍‪‮‮‌⁬‫⁫‎⁫‬⁭⁪⁭⁫‮‮‫‏‭‌‬⁯‪⁬‍‫⁭‫⁮‭‫⁭‬‮​⁭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206C‭‪⁮‏⁯⁪‮⁪‎⁭‍‮‫‬⁭‮⁯‭⁯⁬‭‭‬‫⁭‏‍‮‪⁫‭‌‎‌‍⁮‫⁪‏‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202C‫⁪‫‍‎⁫‮‎‭‌⁬‮​⁭​‪‮⁬‏‬⁪⁪⁬‏⁯⁬⁫⁬​⁪‮‫⁪⁫‪⁮‭⁮⁯‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206A⁫⁫⁫‫‭‫‍‭‏‭‫​‮⁪‌⁯⁫⁮‫‬‫‍⁫⁫​‬⁫⁭‬‌‏‭⁮‭‎⁪‎⁮⁪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202D‬‫‍​⁪‍⁭​⁮⁮‬⁯⁮‭​⁫‬⁮‬⁬​​‎​‫‮‍‌‭‏‍‌⁮‌​‮‍⁭‭‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
