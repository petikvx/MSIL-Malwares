// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: CORINFOEHCLAU, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 6CA1C166-25B8-418F-B14D-0C0D6D66CCB2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d9c043de55bafb7aba07942d6de18a86edfe7c52f87ce7a8c852068014a73ab2.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -1152021812;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -833490731)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 963364295 ^ -1116213526;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 2105101093;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2861019)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 533883567 ^ 2042084646;
              continue;
            case 3:
              num1 = (int) num2 * 862859000 ^ -1969887354;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get => "";
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -282655551;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -283592969)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * -157169514 ^ 1965260704;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
      this.Add("", aItem);
label_1:
      int num1 = 1994805876;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1825890138)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -512457849 ^ 821509669;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 112916098;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2050808040)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 23098843 ^ 1934283903;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1523499408 ^ 1159145457;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1275158260;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1280576157)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -579257093 ^ -2033703502;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -793236438;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1281937270)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -682773060 ^ -476929190;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_Childs\u003Ed__17(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = -1025060241;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -1080041317)) % 33U)
            {
              case 0:
                deepChilds = true;
                num2 = (int) num3 * 1639862038 ^ 191733668;
                continue;
              case 1:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1395017697 ^ 1013301636;
                continue;
              case 2:
                goto label_1;
              case 3:
                C = (JSONNode) null;
                num2 = (int) num3 * 179601506 ^ 234005903;
                continue;
              case 5:
              case 17:
                this.\u003C\u003E1__state = -1;
                num2 = -58743663;
                continue;
              case 6:
              case 20:
                this.\u003C\u003E1__state = -4;
                num2 = -1124787101;
                continue;
              case 7:
                C = enumerator1.Current;
                num2 = -752516698;
                continue;
              case 8:
                num2 = (int) num3 * -669452066 ^ 2143449535;
                continue;
              case 9:
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * -1944874874 ^ 1626439113;
                continue;
              case 10:
                deepChilds = false;
                num2 = (int) num3 * 1852966155 ^ 877393443;
                continue;
              case 11:
                D = enumerator2.Current;
                num2 = -558065674;
                continue;
              case 12:
                this.\u003C\u003E2__current = D;
                num2 = (int) num3 * -713981973 ^ -490576906;
                continue;
              case 13:
                int num4;
                num2 = num4 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200D⁯‫⁭‪⁭‍⁮‭⁯‍‍‍⁪‬‪‫‪‏‭‪‏⁫‬‎‎⁪‎‌​‏⁯‫‌‍‮‫‌⁪‏‮((IEnumerator) enumerator1) ? -584708045 : (num4 = -1539426662);
                continue;
              case 14:
                enumerator2 = C.DeepChilds.GetEnumerator();
                num2 = (int) num3 * -80406543 ^ -110544526;
                continue;
              case 15:
                D = (JSONNode) null;
                num2 = (int) num3 * -2069651096 ^ 950759530;
                continue;
              case 16:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1128162762 ^ -1817752081;
                continue;
              case 18:
                int num5 = num1 == 0 ? -1594069220 : (num5 = -789875821);
                num2 = num5 ^ (int) num3 * 1863600545;
                continue;
              case 22:
                int num6;
                num2 = num6 = num1 == 1 ? -48055612 : (num6 = -1378579647);
                continue;
              case 23:
                num2 = (int) num3 * -1187384590 ^ 1901968510;
                continue;
              case 24:
                enumerator1 = this.Childs.GetEnumerator();
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 946291371 ^ 1678787602;
                continue;
              case 25:
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * 1598837354 ^ 1171141346;
                continue;
              case 26:
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 392793752 ^ -727658222;
                continue;
              case 27:
                num2 = (int) num3 * 1338593504 ^ -1444500374;
                continue;
              case 28:
                num2 = (int) num3 * -1254471056 ^ -2058004457;
                continue;
              case 29:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * -1163074914 ^ -280721163;
                continue;
              case 30:
                num2 = (int) num3 * 921535902 ^ 1208425164;
                continue;
              case 31:
                int num7;
                num2 = num7 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200D⁯‫⁭‪⁭‍⁮‭⁯‍‍‍⁪‬‪‫‪‏‭‪‏⁫‬‎‎⁪‎‌​‏⁯‫‌‍‮‫‌⁪‏‮((IEnumerator) enumerator2) ? -356810546 : (num7 = -300832573);
                continue;
              case 32:
                deepChilds = false;
                num2 = -237139008;
                continue;
              default:
                goto label_31;
            }
          }
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_31:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -2093781009;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -340118538)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -812285030 ^ 597414741;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -2100012870;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -497112293)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -396498511 ^ 664231985;
            continue;
          case 3:
            num1 = (int) num2 * -812262148 ^ -1295389895;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1001173072;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 207744636)) % 8U)
          {
            case 1:
              asInt = 0;
              num1 = 785692481;
              continue;
            case 2:
              goto label_1;
            case 3:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -225362700 ^ 195912007;
              continue;
            case 4:
              result = 0;
              num1 = (int) num2 * -987287443 ^ 1069954051;
              continue;
            case 5:
              num1 = (int) num2 * 1125638395 ^ -442140397;
              continue;
            case 6:
              asInt = result;
              num1 = (int) num2 * 918037454 ^ 2005252392;
              continue;
            case 7:
              int num3 = flag ? 1404660036 : (num3 = 1689978499);
              num1 = num3 ^ (int) num2 * 1578599298;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = 133680874;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1251722454)) % 7U)
          {
            case 1:
              int num3 = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202D‪‮‬⁭⁭⁭⁫⁮‍‎⁭​‏⁭⁪⁫‪‭​⁪⁫⁫‎‫⁬‬⁫‍⁫‮‏‬⁮⁪‌​⁯⁪‮‮(), out result) ? -599823269 : (num3 = -428649283);
              num1 = num3 ^ (int) num2 * 317489552;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -836374905 ^ -1114828112;
              continue;
            case 4:
              asFloat = result;
              num1 = (int) num2 * 792885854 ^ 928239238;
              continue;
            case 5:
              num1 = (int) num2 * 1867675535 ^ -1085505464;
              continue;
            case 6:
              asFloat = 0.0f;
              num1 = 2125132200;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 2142634152;
        bool flag;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1587041198)) % 8U)
          {
            case 0:
              int num3 = flag ? -821631213 : (num3 = -1414334673);
              num1 = num3 ^ (int) num2 * -523369295;
              continue;
            case 1:
              asDouble = 0.0;
              num1 = 660039197;
              continue;
            case 2:
              num1 = (int) num2 * 897362655 ^ -241694397;
              continue;
            case 4:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -2017444367 ^ 2011587770;
              continue;
            case 5:
              asDouble = result;
              num1 = (int) num2 * -662353717 ^ -1877330541;
              continue;
            case 6:
              result = 0.0;
              num1 = (int) num2 * -1104779710 ^ -248818442;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1086713464;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 80923505)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1156790092 ^ 1745609267;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = 432320635;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 294134357)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asBool = !JSONNode.\u206C⁫‏⁭⁭⁬‭‎‌‭‭‍‎​⁭⁮⁯‏‎‭​‎⁬‮⁪⁭⁮‫​⁯‍​‪‏‮‌⁬‬‪⁭‮(this.Value);
              num1 = 1469450504;
              continue;
            case 2:
              asBool = result;
              num1 = (int) num2 * -2055791283 ^ -681704182;
              continue;
            case 4:
              int num3 = !flag ? 683210863 : (num3 = 717718877);
              num1 = num3 ^ (int) num2 * 2016008547;
              continue;
            case 5:
              num1 = (int) num2 * 1954977224 ^ -771788896;
              continue;
            case 6:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 770534696 ^ 1789850771;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
        this.Value = value ? "true" : "false";
label_1:
        int num1 = 106316957;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1263162315)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -626465414 ^ 1923159989;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 2110016458;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1888365719)) % 3U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1277387497 ^ 403587452;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -623516304;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1628695107)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -895550179 ^ -1550923357;
              continue;
            case 3:
              num1 = (int) num2 * 1890728151 ^ -1699753694;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = 1161921045;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1638301039)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -143404655 ^ -289369189;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = -487005771;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2049636365)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 1990248202 ^ 966890516;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = -1818011532;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = -357672225;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -15823537)) % 9U)
        {
          case 1:
            flag1 = true;
            num1 = (int) num2 * 353590822 ^ -1756512573;
            continue;
          case 2:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 3:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 1074709552 ^ 398601262;
            continue;
          case 4:
            flag1 = (object) a == b;
            num1 = -1043095962;
            continue;
          case 5:
            num1 = (int) num2 * -1867162366 ^ -684967356;
            continue;
          case 6:
            int num4 = flag2 ? 1531256442 : (num4 = 1659586588);
            num1 = num4 ^ (int) num2 * -1473985675;
            continue;
          case 7:
            num1 = (int) num2 * -362802795 ^ 2082821265;
            continue;
          case 8:
            goto label_1;
          default:
            goto label_13;
        }
        flag2 = num3 != 0;
        num1 = -1962079718;
      }
label_13:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode()
    {
label_1:
      int num1 = 215343759;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1088521012)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1545613810 ^ -1733351607;
            continue;
          case 2:
            goto label_1;
          case 3:
            hashCode = this.\u200B‍‪⁭‭⁮‫⁮​‬‌‪⁮‮⁯⁪‎⁬‮‬⁫‍‮‮⁯‌‪‭‬‫‎‭⁫‍‮‪⁫‮‪‫‮();
            num1 = (int) num2 * -2127210287 ^ -243041613;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -205089413;
      int num2;
      string str2;
      char ch1;
      char ch2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -345919192)) % 33U)
        {
          case 0:
            goto label_1;
          case 1:
label_24:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\b");
            num1 = -1698158936;
            continue;
          case 2:
            num2 = 0;
            num1 = (int) num3 * 2052202198 ^ 880641213;
            continue;
          case 3:
            num1 = -438688121;
            continue;
          case 4:
            num1 = (int) num3 * 1536742073 ^ -115385025;
            continue;
          case 5:
            ++num2;
            num1 = (int) num3 * 353661437 ^ 1276405517;
            continue;
          case 6:
            num1 = (int) num3 * -80509894 ^ -1919423352;
            continue;
          case 7:
            int num4;
            num1 = num4 = num2 < JSONNode.\u202A​‬⁮‮⁯⁮⁭‪​‫​⁮‏‮‪‮‮​‫​‪⁫‫⁪‫‬‍⁭‍‎‎‎⁪‎‍‍⁪‍‮(str2) ? -2080632176 : (num4 = -1895693117);
            continue;
          case 8:
            num1 = (int) num3 * 1475697422 ^ -1720835617;
            continue;
          case 10:
            num1 = (int) num3 * 1855439212 ^ -210832765;
            continue;
          case 11:
            str2 = aText;
            num1 = (int) num3 * -1503879450 ^ -1980602716;
            continue;
          case 12:
            num1 = (int) num3 * 1913269480 ^ 1305259604;
            continue;
          case 13:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\\\");
            num1 = -585252053;
            continue;
          case 14:
            switch (ch2)
            {
              case '\b':
                goto label_24;
              case '\t':
                goto label_23;
              case '\n':
                goto label_26;
              case '\v':
                goto label_14;
              case '\f':
                goto label_34;
              case '\r':
                goto label_18;
              default:
                num1 = (int) num3 * -28510800 ^ -1815138875;
                continue;
            }
          case 15:
            num1 = (int) num3 * -419600414 ^ -723126121;
            continue;
          case 16:
            num1 = (int) num3 * -213649060 ^ -52423326;
            continue;
          case 17:
            num1 = (int) num3 * 1429634508 ^ -1752106632;
            continue;
          case 18:
            num1 = (int) num3 * -630644813 ^ -420129605;
            continue;
          case 19:
label_23:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\t");
            num1 = -542444448;
            continue;
          case 20:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\\"");
            num1 = -94833023;
            continue;
          case 21:
label_34:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\f");
            num1 = -112114093;
            continue;
          case 22:
            num1 = (int) num3 * 23720153 ^ -1898213289;
            continue;
          case 23:
            num1 = (int) num3 * 422423191 ^ -1925711429;
            continue;
          case 24:
            str3 = str1;
            num1 = (int) num3 * -251169761 ^ 1911069540;
            continue;
          case 25:
            int num5;
            num1 = num5 = ch2 == '\\' ? -2056400365 : (num5 = -641669281);
            continue;
          case 26:
label_18:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\r");
            num1 = -1920879986;
            continue;
          case 27:
            num1 = (int) num3 * -1049911086 ^ -814890988;
            continue;
          case 28:
            num1 = (int) num3 * 1446113208 ^ 1847891332;
            continue;
          case 29:
label_26:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, "\\n");
            num1 = -1249725802;
            continue;
          case 30:
            int num6;
            num1 = num6 = ch2 == '"' ? -1027410610 : (num6 = -1319989807);
            continue;
          case 31:
label_14:
            str1 = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, ch1.ToString());
            num1 = -1191848943;
            continue;
          case 32:
            ch1 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(str2, num2);
            ch2 = ch1;
            num1 = -550714006;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = 286714949;
      string aKey;
      string aItem;
      bool flag1;
      char ch1;
      int num2;
      string s;
      bool flag2;
      bool flag3;
      char ch2;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      char ch3;
      bool flag8;
      bool flag9;
      bool flag10;
      char ch4;
      char ch5;
      JSONNode jsonNode2;
      bool flag11;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1165893078)) % 155U)
        {
          case 0:
            num1 = (int) num3 * 1399621608 ^ 611328740;
            continue;
          case 1:
            num1 = (int) num3 * -728584166 ^ -193094998;
            continue;
          case 2:
            int num4;
            num1 = num4 = ch5 != 'n' ? 55010302 : (num4 = 1994308330);
            continue;
          case 3:
            num1 = (int) num3 * -2030626732 ^ 1661963834;
            continue;
          case 4:
            int num5 = flag6 ? 696595045 : (num5 = 2032297554);
            num1 = num5 ^ (int) num3 * 504364622;
            continue;
          case 5:
            aKey = aItem;
            aItem = "";
            num1 = 988391811;
            continue;
          case 6:
            num1 = (int) num3 * 591563504 ^ -294662526;
            continue;
          case 7:
            num1 = (int) num3 * 52362075 ^ 2055944328;
            continue;
          case 8:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 2051247278 ^ 398286142;
            continue;
          case 9:
            string str1 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str2 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str1, str2);
            num1 = (int) num3 * -1640651455 ^ -1232530731;
            continue;
          case 10:
          case 12:
          case 14:
          case 95:
          case 97:
label_17:
            ++num2;
            num1 = 997485920;
            continue;
          case 11:
            num1 = (int) num3 * 176257070 ^ -1388168346;
            continue;
          case 13:
            string str3 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str4 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str3, str4);
            num1 = (int) num3 * -403066131 ^ -1077455568;
            continue;
          case 15:
            string str5 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str6 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str5, str6);
            num1 = (int) num3 * -1310669686 ^ -1906835257;
            continue;
          case 16:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 227264383 ^ -129657967;
            continue;
          case 17:
            int num6 = flag12 ? 752802105 : (num6 = 523732691);
            num1 = num6 ^ (int) num3 * 1975031789;
            continue;
          case 18:
label_23:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, "\t");
            num1 = 251736320;
            continue;
          case 19:
            num1 = 473392738;
            continue;
          case 20:
            int num7 = ch5 == 'b' ? 321678771 : (num7 = 1242849516);
            num1 = num7 ^ (int) num3 * 601166434;
            continue;
          case 21:
            flag10 = jsonNodeStack.Count == 0;
            num1 = 780052443;
            continue;
          case 22:
            int num8;
            num1 = num8 = flag5 ? 2039706582 : (num8 = 1571243045);
            continue;
          case 23:
            num1 = (int) num3 * 1944245753 ^ -182719686;
            continue;
          case 24:
            num1 = (int) num3 * 296859395 ^ 514853322;
            continue;
          case 25:
            int num9 = jsonNode1 != (object) null ? 729778715 : (num9 = 1027117592);
            num1 = num9 ^ (int) num3 * -1462021707;
            continue;
          case 26:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1155688430 ^ 348447171;
            continue;
          case 27:
            aKey = JSONNode.\u200E‏‎‭‫⁭​‬⁯​‭⁬‫‭⁫⁫‫‎‎‬‮​​‬‏⁭⁮‍‌‍‌‬​‭‏‪⁯‪‭⁬‮(aKey);
            num1 = (int) num3 * 2006912918 ^ 962134599;
            continue;
          case 28:
            num1 = 1747862645;
            continue;
          case 29:
            num1 = (int) num3 * -1316420575 ^ 837816465;
            continue;
          case 30:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1705132968 ^ 1964225246;
            continue;
          case 31:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1246762859 ^ -1362390722;
            continue;
          case 32:
            num1 = (int) num3 * -1866317218 ^ -1201829496;
            continue;
          case 33:
label_38:
            string str7 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str8 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str7, str8);
            num1 = 969051650;
            continue;
          case 34:
            switch (ch1)
            {
              case '\t':
                goto label_32;
              case '\n':
              case '\r':
                goto label_17;
              case '\v':
              case '\f':
                goto label_38;
              default:
                num1 = (int) num3 * 674406700 ^ 1348456563;
                continue;
            }
          case 35:
            int num10;
            num1 = num10 = !JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aKey, "") ? 2003442627 : (num10 = 1530642388);
            continue;
          case 36:
            num1 = (int) num3 * 321068082 ^ 942162366;
            continue;
          case 37:
            int num11;
            num1 = num11 = ch1 == ' ' ? 1948460557 : (num11 = 208332744);
            continue;
          case 38:
            num1 = (int) num3 * -1829643742 ^ -104796406;
            continue;
          case 39:
            switch (ch1)
            {
              case '[':
                goto label_83;
              case '\\':
                goto label_75;
              case ']':
                goto label_49;
              default:
                num1 = 308417254;
                continue;
            }
          case 40:
            int num12 = !(jsonNode1 != (object) null) ? 1564337766 : (num12 = 1045865173);
            num1 = num12 ^ (int) num3 * 1128855590;
            continue;
          case 41:
            num1 = (int) num3 * -896726968 ^ -1991286580;
            continue;
          case 42:
            num2 += 4;
            num1 = (int) num3 * -1703359969 ^ -1785887766;
            continue;
          case 43:
            num1 = (int) num3 * -1320035242 ^ 1147014273;
            continue;
          case 44:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1184022490 ^ 167065337;
            continue;
          case 45:
            num1 = (int) num3 * 1899856959 ^ -852712579;
            continue;
          case 46:
            goto label_58;
          case 47:
            int num13 = ch1 != ':' ? 498135179 : (num13 = 270218010);
            num1 = num13 ^ (int) num3 * 457703468;
            continue;
          case 48:
            flag8 = JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aKey, "");
            num1 = 608289255;
            continue;
          case 49:
            int num14;
            num1 = num14 = JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aKey, "") ? 1442607704 : (num14 = 576498548);
            continue;
          case 50:
            flag13 = flag5;
            num1 = (int) num3 * 232986331 ^ -1173322872;
            continue;
          case 51:
            int num15 = !flag10 ? 1706501264 : (num15 = 1808838958);
            num1 = num15 ^ (int) num3 * 1507661180;
            continue;
          case 52:
            aItem = "";
            num1 = (int) num3 * 2082298921 ^ 1338100232;
            continue;
          case 53:
label_75:
            ++num2;
            int num16;
            num1 = num16 = !flag5 ? 2060539042 : (num16 = 2052239210);
            continue;
          case 54:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 888547205 ^ 570923731;
            continue;
          case 55:
            ch3 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            num1 = (int) num3 * -930589850 ^ 1198100115;
            continue;
          case 56:
            string str9 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str10 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str9, str10);
            num1 = (int) num3 * -89952818 ^ -1890400806;
            continue;
          case 57:
            flag5 = !flag5;
            num1 = 1476104718;
            continue;
          case 58:
            aKey = "";
            aItem = "";
            flag9 = jsonNodeStack.Count > 0;
            num1 = 1908651289;
            continue;
          case 59:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, "\f");
            num1 = 1244713968;
            continue;
          case 60:
            num1 = 2060539042;
            continue;
          case 61:
            num1 = (int) num3 * -1501735313 ^ -686825989;
            continue;
          case 62:
label_9:
            s = JSONNode.\u200D‫‌⁬⁪‬‍‍‭⁭‫‮‮‍​‎⁬‬⁫​‍‫‌⁬‌‬‭‌‏‏‮​‪‎‭‫‭‬​‌‮(aJSON, num2 + 1, 4);
            num1 = 1810912380;
            continue;
          case 63:
            num1 = (int) num3 * 582890535 ^ 827686670;
            continue;
          case 64:
            int num17 = !flag4 ? -1841859000 : (num17 = -1157845599);
            num1 = num17 ^ (int) num3 * 1633537640;
            continue;
          case 65:
            jsonNodeStack.Pop();
            flag11 = JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aItem, "");
            num1 = 2070592073;
            continue;
          case 66:
            int num18;
            num1 = num18 = ch1 != ',' ? 1084638660 : (num18 = 1318402308);
            continue;
          case 67:
            num1 = (int) num3 * 539192759 ^ 1938761549;
            continue;
          case 68:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 819183330;
            continue;
          case 69:
label_49:
            flag7 = flag5;
            num1 = 1547426287;
            continue;
          case 70:
            int num19;
            num1 = num19 = ch1 <= ']' ? 2128355502 : (num19 = 2086541169);
            continue;
          case 71:
            aKey = "";
            num1 = (int) num3 * 535274293 ^ -946283129;
            continue;
          case 72:
            num1 = 1841135582;
            continue;
          case 73:
            num1 = (int) num3 * 1518795473 ^ -1853121391;
            continue;
          case 74:
            num1 = (int) num3 * -124502735 ^ 673842675;
            continue;
          case 75:
            aKey = "";
            num1 = 342349548;
            continue;
          case 76:
            int num20;
            num1 = num20 = ch1 == '{' ? 1472160296 : (num20 = 949549746);
            continue;
          case 77:
label_62:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, "\r");
            num1 = 536518329;
            continue;
          case 78:
            int num21 = flag11 ? -441143267 : (num21 = -215583471);
            num1 = num21 ^ (int) num3 * -406380724;
            continue;
          case 79:
            goto label_68;
          case 80:
label_32:
            flag4 = flag5;
            num1 = 531812536;
            continue;
          case 81:
            ch5 = ch3;
            num1 = (int) num3 * -1252574416 ^ 14707577;
            continue;
          case 82:
            num1 = (int) num3 * -13876417 ^ 1682363685;
            continue;
          case 83:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, "\n");
            num1 = 311056467;
            continue;
          case 84:
            int num22 = flag13 ? 830488670 : (num22 = 1987680323);
            num1 = num22 ^ (int) num3 * 1820799906;
            continue;
          case 85:
            num1 = (int) num3 * 826156206 ^ -1076243954;
            continue;
          case 86:
            aKey = "";
            num1 = 1645752611;
            continue;
          case 87:
            num1 = (int) num3 * 2139505257 ^ 802422119;
            continue;
          case 88:
            int num23;
            num1 = num23 = ch1 == '"' ? 1486513492 : (num23 = 1631448934);
            continue;
          case 89:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 372904272 ^ 510831798;
            continue;
          case 90:
            string str11 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str12 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str11, str12);
            num1 = (int) num3 * -1806715094 ^ -1987680955;
            continue;
          case 91:
            ch1 = ch4;
            int num24 = ch1 <= ',' ? -35148469 : (num24 = -1826656691);
            num1 = num24 ^ (int) num3 * -536582410;
            continue;
          case 92:
            flag6 = flag5;
            num1 = 1628746099;
            continue;
          case 93:
            num1 = (int) num3 * 1337221166 ^ -51030911;
            continue;
          case 94:
label_83:
            int num25;
            num1 = num25 = flag5 ? 1740393156 : (num25 = 1035539036);
            continue;
          case 96:
            num1 = (int) num3 * -14233173 ^ -774288745;
            continue;
          case 98:
            int num26;
            num1 = num26 = ch1 != '}' ? 112711476 : (num26 = 1433441472);
            continue;
          case 99:
            int num27 = ch1 > ' ' ? 1450320674 : (num27 = 1262793080);
            num1 = num27 ^ (int) num3 * -1034121700;
            continue;
          case 100:
            flag2 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -2084589908 ^ -290189806;
            continue;
          case 101:
            num1 = (int) num3 * 312445748 ^ 1487291319;
            continue;
          case 102:
            int num28 = !(jsonNode1 is JSONArray) ? 304485317 : (num28 = 1819984881);
            num1 = num28 ^ (int) num3 * 363906443;
            continue;
          case 103:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 758775983 ^ -545302602;
            continue;
          case 104:
            num1 = (int) num3 * 1576311863 ^ -694596418;
            continue;
          case 105:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1591776784 ^ -1401163323;
            continue;
          case 106:
            flag1 = JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aItem, "");
            num1 = 1060347870;
            continue;
          case 107:
            string str13 = aItem;
            ch2 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            string str14 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str13, str14);
            num1 = (int) num3 * 968473149 ^ -862111885;
            continue;
          case 108:
            num1 = (int) num3 * 1062802963 ^ 751126161;
            continue;
          case 109:
            switch (ch5)
            {
              case 'r':
                goto label_62;
              case 's':
                goto label_88;
              case 't':
                goto label_23;
              case 'u':
                goto label_9;
              default:
                num1 = 1073288039;
                continue;
            }
          case 110:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 497802814 ^ 1536020853;
            continue;
          case 111:
            num1 = (int) num3 * 2016985525 ^ 1341108668;
            continue;
          case 112:
            aKey = "";
            num1 = 907942646;
            continue;
          case 113:
            num1 = (int) num3 * 1869649194 ^ 831587952;
            continue;
          case 114:
            flag12 = JSONNode.\u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮(aKey, "");
            num1 = 165173579;
            continue;
          case 115:
            flag5 = false;
            num1 = (int) num3 * 746445408 ^ -1716149961;
            continue;
          case 116:
            num1 = (int) num3 * -804868382 ^ -744650288;
            continue;
          case 117:
            int num29 = flag7 ? 1872420982 : (num29 = 1715690295);
            num1 = num29 ^ (int) num3 * -579696444;
            continue;
          case 118:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 958042686 ^ -1643040087;
            continue;
          case 119:
            jsonNode2 = jsonNode1;
            num1 = 1652712799;
            continue;
          case 120:
            int num30 = !(jsonNode1 is JSONArray) ? 200533148 : (num30 = 2100555512);
            num1 = num30 ^ (int) num3 * -1195578833;
            continue;
          case 121:
            num1 = (int) num3 * 501455769 ^ -507886742;
            continue;
          case 122:
            num1 = 1193373989;
            continue;
          case 123:
            num1 = (int) num3 * -180983599 ^ -1772465190;
            continue;
          case 124:
            int num31;
            num1 = num31 = ch5 != 'f' ? 1934119368 : (num31 = 960962622);
            continue;
          case 125:
            num1 = (int) num3 * 846618205 ^ -569679334;
            continue;
          case 126:
            int num32 = flag9 ? -352290441 : (num32 = -335924374);
            num1 = num32 ^ (int) num3 * -1095764939;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 508328366;
            continue;
          case 128:
            num1 = (int) num3 * 1941684705 ^ 1126414133;
            continue;
          case 129:
            int num33 = ch5 > 'f' ? 2114681041 : (num33 = 709830207);
            num1 = num33 ^ (int) num3 * -1290511791;
            continue;
          case 130:
            ch4 = JSONNode.\u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮(aJSON, num2);
            num1 = (int) num3 * -522610047 ^ -1101004500;
            continue;
          case 131:
            string str15 = aItem;
            ch2 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str16 = ch2.ToString();
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(str15, str16);
            num1 = (int) num3 * -1034431 ^ -1946786572;
            continue;
          case 132:
            aKey = JSONNode.\u200E‏‎‭‫⁭​‬⁯​‭⁬‫‭⁫⁫‫‎‎‬‮​​‬‏⁭⁮‍‌‍‌‬​‭‏‪⁯‪‭⁬‮(aKey);
            num1 = (int) num3 * -1837976886 ^ 799636069;
            continue;
          case 133:
            int num34 = jsonNode1 is JSONArray ? -742717414 : (num34 = -325897264);
            num1 = num34 ^ (int) num3 * 1430955116;
            continue;
          case 134:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, "\b");
            num1 = 499297383;
            continue;
          case 135:
            flag3 = num2 < JSONNode.\u202A​‬⁮‮⁯⁮⁭‪​‫​⁮‏‮‪‮‮​‫​‪⁫‫⁪‫‬‍⁭‍‎‎‎⁪‎‍‍⁪‍‮(aJSON);
            num1 = 345371452;
            continue;
          case 136:
            num1 = (int) num3 * -25537453 ^ -697651141;
            continue;
          case 137:
            int num35 = !flag2 ? -62847178 : (num35 = -943329098);
            num1 = num35 ^ (int) num3 * -1981434993;
            continue;
          case 138:
            num1 = (int) num3 * -1181716495 ^ 1478313531;
            continue;
          case 139:
            int num36 = flag8 ? 1065555855 : (num36 = 1845379896);
            num1 = num36 ^ (int) num3 * -1735706728;
            continue;
          case 140:
            num1 = (int) num3 * 1291134281 ^ 165492852;
            continue;
          case 141:
            num1 = 748957522;
            continue;
          case 142:
            goto label_1;
          case 143:
            num1 = (int) num3 * -1847335763 ^ 1738932534;
            continue;
          case 144:
            num1 = (int) num3 * 208289021 ^ 454023961;
            continue;
          case 145:
            num1 = (int) num3 * -1980701117 ^ -1280674184;
            continue;
          case 146:
            aKey = JSONNode.\u200E‏‎‭‫⁭​‬⁯​‭⁬‫‭⁫⁫‫‎‎‬‮​​‬‏⁭⁮‍‌‍‌‬​‭‏‪⁯‪‭⁬‮(aKey);
            num1 = (int) num3 * 744434070 ^ 424550668;
            continue;
          case 147:
            int num37 = !flag1 ? 2122839050 : (num37 = 904281823);
            num1 = num37 ^ (int) num3 * 421249195;
            continue;
          case 149:
            num1 = (int) num3 * -905210031 ^ -814740515;
            continue;
          case 150:
            num1 = (int) num3 * -696923299 ^ -253229349;
            continue;
          case 151:
            num1 = (int) num3 * 2072344388 ^ -818893073;
            continue;
          case 152:
            int num38;
            num1 = num38 = flag5 ? 1538346055 : (num38 = 685407617);
            continue;
          case 153:
            int num39 = flag3 ? -411823023 : (num39 = -90678);
            num1 = num39 ^ (int) num3 * 258657464;
            continue;
          case 154:
label_88:
            aItem = JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮(aItem, ch3.ToString());
            num1 = 499297383;
            continue;
          default:
            goto label_155;
        }
      }
label_58:
      throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("JSON Parse: Quotation marks seems to be messed up.");
label_68:
      throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("JSON Parse: Too many closing brackets");
label_155:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1482656002;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -689409540)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aWriter = JSONNode.\u202A⁫⁭⁬‎‭‭​⁫⁮‮‬⁬‎‏⁯‮⁬⁪‬⁬​‌‏‭‭‪‌⁪⁪⁪⁫‫‬‬‏‏‎​‮‮(aData);
            num1 = (int) num2 * -1530965372 ^ 68493679;
            continue;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * -263118295 ^ -1193682694;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = 84140292;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 252895093)) % 3U)
        {
          case 1:
            JSONNode.\u202B‎‌‌‬⁪‎​‎⁭‮⁫‏‎‬‎​‮⁮⁯⁯‍‎‍⁫⁯⁪‬⁫‏⁯⁯⁫​‌⁫‪‬⁭⁯‮(JSONNode.\u206E⁯⁮‌⁯​​‎⁪⁯‎⁪‫‎⁬⁬⁮‭⁭‭​‪⁭‎‬⁯‎‪‪‏‭‍‫‌‌⁪⁪⁭​‍‮((FileSystemInfo) JSONNode.\u200C​‭⁫⁯​⁭​⁫‪⁮‍‎‌‌⁬​​⁬‫⁮‌⁫⁪⁭⁬‎⁭⁬⁮‍‌⁬⁮‭⁯⁪‬⁬‭‮(JSONNode.\u200B‮‌‬⁪⁮‌‬‎‏‫‍​⁪⁮​​⁯‮​⁮‪⁯⁮‍⁯‌⁫‮‫‮⁮‫⁯‮⁭‪⁮⁮‏‮(aFileName))));
            num1 = (int) num2 * -1140482450 ^ 838701056;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u202E‭‌‮⁭‬‫⁮‌⁬⁯‌‬⁭‏​‏‫‍‮‏⁪‏‪⁬⁪‫‪⁮⁯⁯‬⁬‪‎‮⁮‎⁬‏‮(aFileName);
      try
      {
label_6:
        int num3 = 1756759664;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 252895093)) % 4U)
          {
            case 0:
              goto label_14;
            case 1:
              this.SaveToStream((Stream) aData);
              num3 = (int) num4 * 59601760 ^ -1573739530;
              continue;
            case 2:
              goto label_6;
            case 3:
              num3 = (int) num4 * -1833717632 ^ 1141035529;
              continue;
            default:
              goto label_10;
          }
        }
label_14:
        return;
label_10:;
      }
      finally
      {
        if (aData != null)
        {
label_12:
          int num5 = 1274425843;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ 252895093)) % 4U)
            {
              case 0:
                goto label_12;
              case 1:
                num5 = (int) num6 * -896137659 ^ -434187585;
                continue;
              case 2:
                JSONNode.\u206B‏‍‪‪‏⁯‌⁭‏⁬‪⁭⁪‌⁫‍‎⁬⁫⁬‎⁯⁭‏‌⁫⁫⁬⁯‏‌‏⁭⁮⁮‍‮‪‏‮((IDisposable) aData);
                num5 = (int) num6 * 577331857 ^ 2075741174;
                continue;
              default:
                goto label_17;
            }
          }
        }
label_17:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206E‏‎‎‌‫⁮‏‫‍‏⁮⁭​⁭⁮​‭⁪‪‪‬​⁯​⁭‭⁫⁭⁫⁯⁯⁫‎‪‭‍‪‍⁪‮();
      string base64;
      try
      {
label_2:
        int num1 = 45431241;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1556608575)) % 5U)
          {
            case 0:
              base64 = JSONNode.\u206F⁮‬‍‎‭​‮‫​‎‪⁮‬​⁮‍‍‏⁪‬⁫‬‮‮‍⁯‫​⁪⁫‬‎‍⁪⁮‏‮⁬⁫‮(JSONNode.\u200B⁪‌⁭‌‪‭⁫‍⁬‭​‌‫⁬‫‍‍‬‮‬⁬‬‏⁯‪⁯‬⁮⁮‪⁬⁬‌⁯‎‭‏⁫⁬‮(aData));
              num1 = (int) num2 * -2139535127 ^ -554869346;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 320922730 ^ -1495592408;
              continue;
            case 3:
              JSONNode.\u202C‮‬⁪⁬⁮‌⁬‍‫‫⁪⁬⁫‍‬⁬​‭‪⁭‮​‍‬‍‪⁭‎‎⁫‬‌⁯‍⁬⁯‭‍‏‮((Stream) aData, 0L);
              num1 = (int) num2 * -706942327 ^ 682384654;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 667222168;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1556608575)) % 3U)
            {
              case 1:
                JSONNode.\u206B‏‍‪‪‏⁯‌⁭‏⁬‪⁭⁪‌⁫‍‎⁬⁫⁬‎⁯⁭‏‌⁫⁫⁬⁯‏‌‏⁭⁮⁮‍‮‪‏‮((IDisposable) aData);
                num3 = (int) num4 * 1396791972 ^ -411336005;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -2134267729;
      int num2;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      JSONNode jsonNode;
      int num3;
      int num4;
      bool flag;
      JSONClass jsonClass;
      JSONArray jsonArray;
      int num5;
      string aKey;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag3;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -101975004)) % 42U)
        {
          case 0:
            num1 = -1064498501;
            continue;
          case 1:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1594215695 ^ -1021230370;
            continue;
          case 2:
label_37:
            num1 = -1186810496;
            continue;
          case 3:
            num5 = JSONNode.\u206C‭‎⁪⁫‭⁫‬⁮⁯⁬‬⁮‍‎‏⁬‌⁮​‫‫⁮⁬‏‫⁭⁫⁬⁮‎⁫​⁮⁮‭⁯‪‫‫‮(aReader);
            num1 = (int) num6 * 1669817491 ^ 1220109639;
            continue;
          case 4:
            int num7 = !flag ? -1514671069 : (num7 = -345763466);
            num1 = num7 ^ (int) num6 * -1886954402;
            continue;
          case 5:
            ++num3;
            num1 = (int) num6 * 1528986720 ^ 937343137;
            continue;
          case 6:
label_9:
            num4 = JSONNode.\u206C‭‎⁪⁫‭⁫‬⁮⁯⁬‬⁮‍‎‏⁬‌⁮​‫‫⁮⁬‏‫⁭⁫⁬⁮‎⁫​⁮⁮‭⁯‪‫‫‮(aReader);
            jsonClass = new JSONClass();
            num1 = -1086528240;
            continue;
          case 7:
            goto label_1;
          case 8:
            num3 = 0;
            num1 = (int) num6 * -154142576 ^ 75376718;
            continue;
          case 9:
            flag = num3 < num4;
            num1 = -1415056226;
            continue;
          case 10:
label_17:
            num1 = -1781220831;
            continue;
          case 11:
            num1 = (int) num6 * 452738526 ^ -409602334;
            continue;
          case 12:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1607986499 ^ -1896740242;
            continue;
          case 13:
            num1 = (int) num6 * 1919273206 ^ -713697075;
            continue;
          case 14:
            num1 = (int) num6 * 1999569789 ^ -343097597;
            continue;
          case 15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‭‎⁪⁫‭⁫‬⁮⁯⁬‬⁮‍‎‏⁬‌⁮​‫‫⁮⁬‏‫⁭⁫⁬⁮‎⁫​⁮⁮‭⁯‪‫‫‮(aReader));
            num1 = (int) num6 * 1659947397 ^ -1692421758;
            continue;
          case 16:
            num1 = -1496650417;
            continue;
          case 17:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 70450361 ^ -2071558524;
            continue;
          case 18:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁪‍⁭⁪‍‪​‌‍⁭‮⁭‪⁮​‌‮‮⁭‎‍‫‫⁯⁬⁫‬‏​‪‍‌‬‎‏‎​‮‌‮(aReader));
            num1 = -1527984320;
            continue;
          case 19:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1121043743 ^ 1862136661;
            continue;
          case 20:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 328509036 ^ 525643708;
            continue;
          case 21:
            aKey = JSONNode.\u206D⁫‌⁭‍⁪⁮‪‬‎⁪‪⁬‌‏​​‎‫⁯‎‍‫⁬‎‏‏‏⁮‍‬‪‎‭‍⁭‍‪​⁬‮(aReader);
            num1 = (int) num6 * 727544650 ^ 916789915;
            continue;
          case 22:
            num1 = (int) num6 * 666900068 ^ -848879824;
            continue;
          case 23:
label_12:
            num1 = -212554089;
            continue;
          case 24:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -868103646;
            continue;
          case 25:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁫‌⁭‍⁪⁮‪‬‎⁪‪⁬‌‏​​‎‫⁯‎‍‫⁬‎‏‏‏⁮‍‬‪‎‭‍⁭‍‪​⁬‮(aReader));
            num1 = (int) num6 * -759786789 ^ -2099514285;
            continue;
          case 27:
            jsonBinaryTag3 = (JSONBinaryTag) JSONNode.\u200D‪⁯⁭​‌‌⁫‍⁮⁭⁭‫‫‎⁭‌‭⁫​‌‬⁪⁭‏‭‏​‬‮⁫​‏⁮‭⁫⁪‬‌‫‮(aReader);
            jsonBinaryTag1 = jsonBinaryTag3;
            num1 = (int) num6 * -1586899316 ^ -1022540697;
            continue;
          case 28:
            num1 = (int) num6 * 90288947 ^ 604994564;
            continue;
          case 29:
label_8:
            num1 = -681581564;
            continue;
          case 30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‭‪⁭‎⁪⁪‪‎‬‭‌​‮⁭‌‌​​⁬⁮‌⁬⁬⁫⁫‮‎‎⁫‪⁯‏‭​⁪‮‮⁬‍‮(aReader));
            num1 = (int) num6 * -116487583 ^ -1504254040;
            continue;
          case 31:
            int num8;
            num1 = num8 = num2 < num5 ? -1413383714 : (num8 = -787122362);
            continue;
          case 32:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‏⁭⁮‌‭‫‍⁪⁫‮‮‏​⁮‏⁮‪‎‬‎⁭‪‍‭‫‍‫‮‫⁮‏‬⁬⁭‮‬⁯‪⁫‮(aReader));
            num1 = (int) num6 * 942484813 ^ -1571015404;
            continue;
          case 33:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -945737304 ^ -1374499095;
            continue;
          case 34:
            num1 = (int) num6 * 2125248441 ^ 1146167489;
            continue;
          case 35:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_12;
              case JSONBinaryTag.Class:
                goto label_9;
              case JSONBinaryTag.Value:
                goto label_13;
              case JSONBinaryTag.IntValue:
                goto label_17;
              case JSONBinaryTag.DoubleValue:
                goto label_8;
              case JSONBinaryTag.BoolValue:
                goto label_20;
              case JSONBinaryTag.FloatValue:
                goto label_37;
              default:
                num1 = (int) num6 * 1539500833 ^ 980522024;
                continue;
            }
          case 36:
label_13:
            num1 = -1271442251;
            continue;
          case 37:
            num1 = (int) num6 * -662932043 ^ -1932853825;
            continue;
          case 38:
            num2 = 0;
            num1 = (int) num6 * 1731542731 ^ -1965406549;
            continue;
          case 39:
            goto label_35;
          case 40:
            num1 = (int) num6 * -799866544 ^ 1701636672;
            continue;
          case 41:
            ++num2;
            num1 = (int) num6 * -1534669368 ^ 47925523;
            continue;
          default:
            goto label_44;
        }
      }
label_35:
      throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮(JSONNode.\u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag3.ToString()));
label_44:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200F‪⁮‌‫‫⁬‭​⁯‌​⁮⁪‪⁯‏‌‮‭‎‬‎⁪‪⁭⁪‪‏‌‪⁮​⁯⁫⁯‮⁪​‫‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1614753640;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 999162258)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 407919415 ^ 751339186;
                continue;
              case 2:
                JSONNode.\u206B‏‍‪‪‏⁯‌⁭‏⁬‪⁭⁪‌⁫‍‎⁬⁫⁬‎⁯⁭‏‌⁫⁫⁬⁯‏‌‏⁭⁮⁮‍‮‪‏‮((IDisposable) aReader);
                num1 = (int) num2 * -1345675295 ^ -984225719;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206E‮⁮⁮⁮⁪‍‏‬‬‭‌⁪⁫⁮⁯‍​‬‬‭‮‬​⁫‫‮‪‎‬‭‮‍‭⁭‌‫⁬⁬‪‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1639458777;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -812847393)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1310987477 ^ -978539682;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -1720785156;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -812847393)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206B‏‍‪‪‏⁯‌⁭‏⁬‪⁭⁪‌⁫‍‎⁬⁫⁬‎⁯⁭‏‌⁫⁫⁬⁯‏‌‏⁭⁮⁮‍‮‪‏‮((IDisposable) aData);
                num3 = (int) num4 * 717633968 ^ -824613235;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1365529581;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1512710749)) % 7U)
        {
          case 1:
            num1 = (int) num2 * -641936011 ^ -241770691;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1060872 ^ -928252150;
            continue;
          case 4:
            numArray = JSONNode.\u200D‮⁬‫‪‎‎‍⁪‪‌⁯⁪‪‪‌‭‭‏⁮‌⁪​‫‍⁬‎⁪⁪⁭‍‍⁮⁪⁯⁫‪⁬‏‪‮(aBase64);
            num1 = (int) num2 * 811552580 ^ -296322458;
            continue;
          case 5:
            num1 = (int) num2 * 1694892482 ^ -2143029172;
            continue;
          case 6:
            aData = JSONNode.\u200C⁫‫‏‌‎⁬⁭‭‭‏‫‫‌⁭‌⁬‌‭‌‌‭‮‪‎‪‎‫‏⁫⁫⁮⁪⁫⁪‪‫‮⁮‏‮(numArray);
            JSONNode.\u202C‮‬⁪⁬⁮‌⁬‍‫‫⁪⁬⁫‍‬⁬​‭‪⁭‮​‍‬‍‪⁭‎‎⁫‬‌⁯‍⁬⁯‭‍‏‮((Stream) aData, 0L);
            num1 = (int) num2 * -1009446030 ^ 1554199253;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u202D‪‮‬⁭⁭⁭⁫⁮‍‎⁭​‏⁭⁪⁫‪‭​⁪⁫⁫‎‫⁬‬⁫‍⁫‮‏‬⁮⁪‌​⁯⁪‮‮() => CultureInfo.InvariantCulture;

    static bool \u206C⁫‏⁭⁭⁬‭‎‌‭‭‍‎​⁭⁮⁯‏‎‭​‎⁬‮⁪⁭⁮‫​⁯‍​‪‏‮‌⁬‬‪⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200B‍‪⁭‭⁮‫⁮​‬‌‪⁮‮⁯⁪‎⁬‮‬⁫‍‮‮⁯‌‪‭‬‫‎‭⁫‍‮‪⁫‮‪‫‮() => base.GetHashCode();

    static char \u200B⁭‫‮⁬​⁮⁮‎⁪‭‌⁭‍⁫‭‎‎⁯⁪​‪‮⁪‮‎‬⁯‬⁬⁪⁫‏⁮⁫⁭‎⁭‪‎‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202C‬⁬⁫‪‬‌‮‭‌‏​​⁬‮​⁫⁭⁭‏⁯⁬⁫⁪‌⁮‭⁯‫​‌⁯‫⁮‭⁭⁬⁮‮⁯‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202A​‬⁮‮⁯⁮⁭‪​‫​⁮‏‮‪‮‮​‫​‪⁫‫⁪‫‬‍⁭‍‎‎‎⁪‎‍‍⁪‍‮([In] string obj0) => obj0.Length;

    static string \u200E‏‎‭‫⁭​‬⁯​‭⁬‫‭⁫⁫‫‎‎‬‮​​‬‏⁭⁮‍‌‍‌‬​‭‏‪⁯‪‭⁬‮([In] string obj0) => obj0.Trim();

    static bool \u200C‏‫⁯⁬‌⁭⁭⁪‫‏⁪‫‌⁯‏‏‌⁪‌‌‎‌‌‏⁮⁫‍⁪⁪‍⁫⁮‪⁪‎⁯‍​⁬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202B​⁯⁬‍⁪‌‎​⁪‪‍‫‌⁭‎‮⁭‏⁯‬‏⁪‮‫‮⁮‬‫‮‭‌⁭⁮‮‌⁬⁮⁯‎‮([In] string obj0) => new Exception(obj0);

    static string \u200D‫‌⁬⁪‬‍‍‭⁭‫‮‮‍​‎⁬‬⁫​‍‫‌⁬‌‬‭‌‏‏‮​‪‎‭‫‭‬​‌‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202A⁫⁭⁬‎‭‭​⁫⁮‮‬⁬‎‏⁯‮⁬⁪‬⁬​‌‏‭‭‪‌⁪⁪⁪⁫‫‬‬‏‏‎​‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200B‮‌‬⁪⁮‌‬‎‏‫‍​⁪⁮​​⁯‮​⁮‪⁯⁮‍⁯‌⁫‮‫‮⁮‫⁯‮⁭‪⁮⁮‏‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C​‭⁫⁯​⁭​⁫‪⁮‍‎‌‌⁬​​⁬‫⁮‌⁫⁪⁭⁬‎⁭⁬⁮‍‌⁬⁮‭⁯⁪‬⁬‭‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206E⁯⁮‌⁯​​‎⁪⁯‎⁪‫‎⁬⁬⁮‭⁭‭​‪⁭‎‬⁯‎‪‪‏‭‍‫‌‌⁪⁪⁭​‍‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202B‎‌‌‬⁪‎​‎⁭‮⁫‏‎‬‎​‮⁮⁯⁯‍‎‍⁫⁯⁪‬⁫‏⁯⁯⁫​‌⁫‪‬⁭⁯‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202E‭‌‮⁭‬‫⁮‌⁬⁯‌‬⁭‏​‏‫‍‮‏⁪‏‪⁬⁪‫‪⁮⁯⁯‬⁬‪‎‮⁮‎⁬‏‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206B‏‍‪‪‏⁯‌⁭‏⁬‪⁭⁪‌⁫‍‎⁬⁫⁬‎⁯⁭‏‌⁫⁫⁬⁯‏‌‏⁭⁮⁮‍‮‪‏‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206E‏‎‎‌‫⁮‏‫‍‏⁮⁭​⁭⁮​‭⁪‪‪‬​⁯​⁭‭⁫⁭⁫⁯⁯⁫‎‪‭‍‪‍⁪‮() => new MemoryStream();

    static void \u202C‮‬⁪⁬⁮‌⁬‍‫‫⁪⁬⁫‍‬⁬​‭‪⁭‮​‍‬‍‪⁭‎‎⁫‬‌⁯‍⁬⁯‭‍‏‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200B⁪‌⁭‌‪‭⁫‍⁬‭​‌‫⁬‫‍‍‬‮‬⁬‬‏⁯‪⁯‬⁮⁮‪⁬⁬‌⁯‎‭‏⁫⁬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u206F⁮‬‍‎‭​‮‫​‎‪⁮‬​⁮‍‍‏⁪‬⁫‬‮‮‍⁯‫​⁪⁫‬‎‍⁪⁮‏‮⁬⁫‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200D‪⁯⁭​‌‌⁫‍⁮⁭⁭‫‫‎⁭‌‭⁫​‌‬⁪⁭‏‭‏​‬‮⁫​‏⁮‭⁫⁪‬‌‫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206C‭‎⁪⁫‭⁫‬⁮⁯⁬‬⁮‍‎‏⁬‌⁮​‫‫⁮⁬‏‫⁭⁫⁬⁮‎⁫​⁮⁮‭⁯‪‫‫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D⁫‌⁭‍⁪⁮‪‬‎⁪‪⁬‌‏​​‎‫⁯‎‍‫⁬‎‏‏‏⁮‍‬‪‎‭‍⁭‍‪​⁬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202A‭‪⁭‎⁪⁪‪‎‬‭‌​‮⁭‌‌​​⁬⁮‌⁬⁬⁫⁫‮‎‎⁫‪⁯‏‭​⁪‮‮⁬‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F⁪‍⁭⁪‍‪​‌‍⁭‮⁭‪⁮​‌‮‮⁭‎‍‫‫⁯⁬⁫‬‏​‪‍‌‬‎‏‎​‮‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206D‏⁭⁮‌‭‫‍⁪⁫‮‮‏​⁮‏⁮‪‎‬‎⁭‪‍‭‫‍‫‮‫⁮‏‬⁬⁭‮‬⁯‪⁫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200F‪⁮‌‫‫⁬‭​⁯‌​⁮⁪‪⁯‏‌‮‭‎‬‎⁪‪⁭⁪‪‏‌‪⁮​⁯⁫⁯‮⁪​‫‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206E‮⁮⁮⁮⁪‍‏‬‬‭‌⁪⁫⁮⁯‍​‬‬‭‮‬​⁫‫‮‪‎‬‭‮‍‭⁭‌‫⁬⁬‪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200D‮⁬‫‪‎‎‍⁪‪‌⁯⁪‪‪‌‭‭‏⁮‌⁪​‫‍⁬‎⁪⁪⁭‍‍⁮⁪⁯⁫‪⁬‏‪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C⁫‫‏‌‎⁬⁭‭‭‏‫‫‌⁭‌⁬‌‭‌‌‭‮‪‎‪‎‫‏⁫⁫⁮⁪⁫⁪‪‫‮⁮‏‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
