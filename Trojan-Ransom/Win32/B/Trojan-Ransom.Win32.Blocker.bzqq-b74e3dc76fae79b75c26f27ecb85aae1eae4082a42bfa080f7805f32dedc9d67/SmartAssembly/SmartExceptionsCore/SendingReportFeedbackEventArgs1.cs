// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.SendingReportFeedbackEventArgs1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.Shared;
using SmartAssembly.SmartExceptionsWithUI;
using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace SmartAssembly.SmartExceptionsCore
{
  public class SendingReportFeedbackEventArgs1 : EventArgs
  {
    private UnhandledExceptionHandlerWithUI.Ⴈ Ⴀ;

    public SendingReportStep1 Step
    {
      get
      {
        try
        {
          SendingReportStep1 ⴃ;
          try
          {
            ⴃ = this.Ⴀ.Ⴃ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴃ;
        }
        catch (Exception ex)
        {
          SendingReportStep1 sendingReportStep1;
          __Boxed<SendingReportStep1> o1 = (Enum) sendingReportStep1;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public bool Failed
    {
      get
      {
        try
        {
          bool ⴐ;
          try
          {
            ⴐ = this.Ⴀ.Ⴐ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴐ;
        }
        catch (Exception ex)
        {
          bool flag;
          __Boxed<bool> o1 = (ValueType) flag;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public string ErrorMessage
    {
      get
      {
        try
        {
          string ⴈ;
          try
          {
            ⴈ = this.Ⴀ.Ⴈ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴈ;
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    public string ReportID
    {
      get
      {
        try
        {
          string ⴄ;
          try
          {
            ⴄ = this.Ⴀ.Ⴄ;
          }
          catch (Exception ex)
          {
            StackFrameHelper.CreateException1(ex, (object) this);
            throw;
          }
          return ⴄ;
        }
        catch (Exception ex)
        {
          string str;
          string o1 = str;
          StackFrameHelper.CreateException2(ex, (object) o1, (object) this);
          throw;
        }
      }
    }

    internal SendingReportFeedbackEventArgs1(SendingReportStep1 Ⴗ, string Ⴅ)
      : this(Ⴗ, Ⴅ, string.Empty)
    {
      try
      {
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o2 = (Enum) Ⴗ;
        string o3 = Ⴅ;
        StackFrameHelper.CreateException3(ex, (object) this, (object) o2, (object) o3);
        throw;
      }
    }

    internal SendingReportFeedbackEventArgs1(SendingReportStep1 Ⴓ, string Ⴗ, string Ⴅ)
    {
      string empty1 = string.Empty;
      this.Ⴀ.Ⴈ = empty1;
      string empty2 = string.Empty;
      this.Ⴀ.Ⴄ = empty2;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      SendingReportStep1 sendingReportStep1;
      bool flag;
      string str1;
      string str2;
      try
      {
        try
        {
          sendingReportStep1 = Ⴓ;
          this.Ⴀ.Ⴃ = sendingReportStep1;
          flag = Ⴗ != null && AppPathFinder.Ⴐ(Ⴗ, 648, 703) > 0;
          this.Ⴀ.Ⴐ = flag;
          str1 = Ⴗ;
          this.Ⴀ.Ⴈ = str1;
          str2 = Ⴅ;
          this.Ⴀ.Ⴄ = str2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<SendingReportStep1> o2 = (Enum) Ⴓ;
          string o3 = Ⴗ;
          string o4 = Ⴅ;
          StackFrameHelper.CreateException4(ex, (object) this, (object) o2, (object) o3, (object) o4);
          throw;
        }
      }
      catch (Exception ex)
      {
        string o1 = empty1;
        string o2 = empty2;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o3 = (Enum) sendingReportStep1;
        // ISSUE: variable of a boxed type
        __Boxed<bool> o4 = (ValueType) flag;
        string o5 = str1;
        string o6 = str2;
        // ISSUE: variable of a boxed type
        __Boxed<SendingReportStep1> o8 = (Enum) Ⴓ;
        string o9 = Ⴗ;
        string o10 = Ⴅ;
        StackFrameHelper.CreateException10(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6, (object) this, (object) o8, (object) o9, (object) o10);
        throw;
      }
    }

    static SendingReportFeedbackEventArgs1()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static System.Type Ⴍ([In] RuntimeTypeHandle obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 123:
            num2 = 0;
            break;
          default:
            num2 = 5;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 7:
              goto label_8;
            case 1:
              goto label_3;
            case 2:
            case 4:
              num1 = 1;
              continue;
            case 5:
              num1 = 1;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.Ⴍ);
              num1 = 1;
              continue;
          }
        }
label_8:
        return System.Type.GetTypeFromHandle(obj0);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<RuntimeTypeHandle> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static string Ⴐ([In] Encoding obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 57:
            num2 = 7;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 7:
              goto label_8;
            case 2:
              num1 = 5;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = 5;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.Ⴐ);
              num1 = 5;
              continue;
          }
        }
label_8:
        return obj0.GetString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Encoding o2 = obj0;
        byte[] o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string[] Ⴀ([In] string obj0, [In] char[] obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 29:
            num2 = 5;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 1:
              num1 = 6;
              continue;
            case 2:
            case 5:
            case 7:
              goto label_8;
            case 3:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.Ⴀ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.Split(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        char[] o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }

    internal static string Ⴄ([In] string obj0, [In] string obj1, [In] string obj2, [In] int obj3, [In] int obj4)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj4 ^ obj3)
        {
          case 60:
            num2 = 3;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 4:
              goto label_3;
            case 1:
            case 6:
              num1 = 0;
              continue;
            case 2:
              num1 = 0;
              continue;
            case 3:
            case 5:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.Ⴄ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0 + obj1 + obj2;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        string o2 = obj0;
        string o3 = obj1;
        string o4 = obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj4;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static void Ⴈ([In] Label obj0, [In] FlatStyle obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_8;
            case 1:
              num1 = 3;
              continue;
            case 2:
            case 4:
            case 5:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 17:
                  num2 = 4;
                  break;
                default:
                  num2 = 1;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.FlatStyle = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        Label o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<FlatStyle> o4 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static ApartmentState Ⴜ([In] Thread obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 81:
            num2 = 7;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_3;
            case 1:
            case 6:
              num1 = 0;
              continue;
            case 4:
            case 5:
              num1 = 0;
              continue;
            case 7:
              goto label_8;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.Ⴜ);
              num1 = 0;
              continue;
          }
        }
label_8:
        return obj0.ApartmentState;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Thread o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void ႰႭ([In] PictureBox obj0, [In] PictureBoxSizeMode obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 4;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 3:
              goto label_7;
            case 1:
              goto label_8;
            case 5:
              num1 = 4;
              continue;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 81:
                  num2 = 0;
                  break;
                default:
                  num2 = 5;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.SizeMode = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        PictureBox o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<PictureBoxSizeMode> o4 = (Enum) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static Cursor ႰႰ([In] int obj0, [In] int obj1)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj1 ^ obj0)
        {
          case 107:
            num2 = 1;
            break;
          default:
            num2 = 6;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              goto label_3;
            case 1:
            case 3:
              goto label_8;
            case 2:
              num1 = 7;
              continue;
            case 6:
              num1 = 7;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (SendingReportFeedbackEventArgs1.ႰႰ);
              num1 = 7;
              continue;
          }
        }
label_8:
        return Cursors.Hand;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        StackFrameHelper.CreateException3(ex, (object) o1, (object) o2, (object) o3);
        throw;
      }
    }
  }
}
