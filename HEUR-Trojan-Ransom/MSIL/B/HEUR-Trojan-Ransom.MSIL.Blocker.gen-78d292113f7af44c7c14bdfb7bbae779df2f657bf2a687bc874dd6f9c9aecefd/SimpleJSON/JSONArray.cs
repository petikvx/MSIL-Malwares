// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: CustomA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ABC0B0F-8965-48BE-A39F-300B4A85D17D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-78d292113f7af44c7c14bdfb7bbae779df2f657bf2a687bc874dd6f9c9aecefd.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1394218522;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 589207272)) % 8U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1665278254 ^ -1050889841;
              continue;
            case 1:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1977618282 ^ -129263147;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              goto label_1;
            case 4:
              int num4 = !flag ? 1848712394 : (num4 = 1626957564);
              num1 = num4 ^ (int) num2 * -350364223;
              continue;
            case 6:
              jsonNode = this.m_List[aIndex];
              num1 = 1544468149;
              continue;
            case 7:
              num1 = (int) num2 * 793965630 ^ -1845357561;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 233391628;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1443794722;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -362422915)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -385622327 ^ 1328613016;
              continue;
            case 2:
              num1 = (int) num2 * -691255391 ^ -1164994482;
              continue;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1384360893 ^ 767384009;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              goto label_3;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              this.m_List.Add(value);
              num1 = (int) num2 * 1814868451 ^ 1511759133;
              continue;
            case 7:
              this.m_List[aIndex] = value;
              num1 = -1955623799;
              continue;
            default:
              goto label_13;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -291119958 : (num4 = -1623907741);
        }
label_3:
        return;
label_13:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1576834066;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -188392277)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1726454381 ^ -199628520;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1289159136 ^ 324585723;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count => this.m_List.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 717750480;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 300371221)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 432498539 ^ 2121068032;
            continue;
          case 2:
            num1 = (int) num2 * 1104161669 ^ 149895868;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = -1110528203;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -596756367)) % 10U)
        {
          case 0:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 520345936 ^ -267940626;
            continue;
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -1492794618 ^ -838675323;
            continue;
          case 2:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1872962288 ^ -2099886014;
            continue;
          case 3:
            num1 = (int) num2 * -778012054 ^ -940860781;
            continue;
          case 4:
            num1 = (int) num2 * -1037609414 ^ -1878878895;
            continue;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            num1 = -525433457;
            continue;
          case 6:
            goto label_3;
          case 7:
            num1 = (int) num2 * -1218380773 ^ 144797178;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_13;
        }
      }
label_3:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_13:
      return jsonNode1;
label_4:
      num3 = 1;
label_5:
      num1 = num3 == 0 ? -1068824136 : (num1 = -1442369710);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 863676386;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 38511008)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -123221397 ^ 898422969;
            continue;
          case 3:
            num1 = (int) num2 * 2077391362 ^ 1846013715;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = 369226340;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 480136458)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -1451686274 ^ 2004989011;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_3;
label_1:
        int num2 = 503635481;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 494371034)) % 20U)
          {
            case 0:
            case 9:
              goto label_3;
            case 1:
              goto label_8;
            case 2:
              N = (JSONNode) null;
              num2 = (int) num3 * 858619628 ^ -617252444;
              continue;
            case 3:
              int num4;
              num2 = num4 = num1 != 1 ? 501665116 : (num4 = 663354012);
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -1480998925 ^ -234800632;
              continue;
            case 6:
              num2 = (int) num3 * 1848320881 ^ -1819081764;
              continue;
            case 7:
              num2 = (int) num3 * 1904250311 ^ -620225344;
              continue;
            case 8:
              goto label_1;
            case 10:
              int num5;
              num2 = num5 = !enumerator.MoveNext() ? 153645871 : (num5 = 2135358806);
              continue;
            case 11:
            case 14:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 1534419408;
              continue;
            case 12:
              N = enumerator.Current;
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = 139256375;
              continue;
            case 13:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * -2101869853 ^ -1151765431;
              continue;
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 395717631 ^ 408712641;
              continue;
            case 16:
              enumerator1 = false;
              num2 = 664148747;
              continue;
            case 17:
              goto label_20;
            case 18:
              num2 = (int) num3 * 1994083335 ^ -804997;
              continue;
            case 19:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * 2060751001 ^ -1396784202;
              continue;
            default:
              goto label_18;
          }
        }
label_8:
        enumerator1 = true;
        goto label_20;
label_18:
        enumerator1 = false;
        goto label_20;
label_3:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = 602373520;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = 348660349;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1395918449)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 225021192 ^ -1440599050;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_8:
        int num3 = !enumerator.MoveNext() ? 317411011 : (num3 = 663060007);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1395918449)) % 8U)
          {
            case 0:
              num3 = 663060007;
              continue;
            case 1:
              num3 = (int) num4 * -2134828329 ^ -2105429471;
              continue;
            case 3:
              str1 = JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(str1, JSONArray.\u206B‏‎‍‌‌⁫⁬‭⁬‫‎⁫​⁪‪‍‎‍⁮⁬⁫⁯⁫‭‭‭⁭‫⁪‫‫⁫⁮‭⁪‏⁯⁫⁮‮((object) current));
              num3 = 1362540224;
              continue;
            case 4:
              str1 = JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(str1, ", ");
              num3 = (int) num4 * 967686174 ^ 238881834;
              continue;
            case 5:
              int num5 = JSONArray.\u206C‪⁮‪‎‫‎‭⁯‮‏‍‌‮‫‪‭⁬‍⁪‭⁪​⁫⁫⁮‮⁫⁮​⁫‫‏⁮‍‏‪‍‍‏‮(str1) > 2 ? 636677939 : (num5 = 784875756);
              num3 = num5 ^ (int) num4 * 1718772246;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = 1970799284;
              continue;
            case 7:
              goto label_8;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(str1, " ]");
label_16:
      int num6 = 37528703;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1395918449)) % 3U)
        {
          case 0:
            goto label_16;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -2142233780 ^ -1170079170;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 776464697;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2065368293)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -1540931275 ^ 62242409;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 736267666 : (num3 = 1431394521);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 2065368293)) % 8U)
          {
            case 0:
              num3 = (int) num4 * -191240583 ^ -567698984;
              continue;
            case 1:
              str1 = JSONArray.\u200B​‬‏‍⁮⁫‎‫‬⁭‫⁭​‌​‍⁪⁮⁯‏‭‬‌‌‌‍‭⁭⁬‬⁪⁫‌‪‍‮⁯‌‪‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(str1, current.ToString(JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(aPrefix, "   ")));
              num3 = 2035641301;
              continue;
            case 2:
              str1 = JSONArray.\u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮(str1, ", ");
              num3 = (int) num4 * -793126605 ^ 189751306;
              continue;
            case 3:
              int num5 = flag ? 1125598950 : (num5 = 1205298941);
              num3 = num5 ^ (int) num4 * -736621165;
              continue;
            case 4:
              current = enumerator.Current;
              flag = JSONArray.\u206C‪⁮‪‎‫‎‭⁯‮‏‍‌‮‫‪‭⁬‍⁪‭⁪​⁫⁫⁮‮⁫⁮​⁫‫‏⁮‍‏‪‍‍‏‮(str1) > 3;
              num3 = 252112470;
              continue;
            case 5:
              goto label_12;
            case 6:
              num3 = 1431394521;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONArray.\u200B​‬‏‍⁮⁫‎‫‬⁭‫⁭​‌​‍⁪⁮⁯‏‭‬‌‌‌‍‭⁭⁬‬⁪⁫‌‪‍‮⁯‌‪‮(str1, "\n", aPrefix, "]");
label_16:
      int num6 = 746416580;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 2065368293)) % 4U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * -973174765 ^ -7593991;
            continue;
          case 2:
            goto label_16;
          case 3:
            num6 = (int) num7 * 1860399484 ^ -1426533731;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1361047524;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 515919273)) % 8U)
        {
          case 0:
            goto label_3;
          case 1:
            int num3 = !flag ? 929489333 : (num3 = 903298102);
            num1 = num3 ^ (int) num2 * 725577452;
            continue;
          case 2:
            flag = index < this.m_List.Count;
            num1 = 1503403776;
            continue;
          case 3:
            num1 = 1451599567;
            continue;
          case 4:
            JSONArray.\u206D⁫⁫​⁬‭‌‭‫‮‪‫⁯⁫⁬⁫‭‍‍‌⁪‪‍⁮⁪⁯‮‭⁬‫​‏‎⁪‮⁬‭⁯⁭⁯‮(aWriter, this.m_List.Count);
            index = 0;
            num1 = (int) num2 * -1115132154 ^ 472042843;
            continue;
          case 5:
            JSONArray.\u206F⁬‏⁮⁭​⁫‮‌⁯‍⁭‭‮⁬‬‌⁭⁬⁫‌‭‍⁫⁯⁫‮‪‫⁪⁫​‏‭​⁮‍‫⁭⁮‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1228155828 ^ -1917777831;
            continue;
          case 6:
            this.m_List[index].Serialize(aWriter);
            ++index;
            num1 = (int) num2 * -2023935716 ^ -1949489013;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    static int \u206C‪⁮‪‎‫‎‭⁯‮‏‍‌‮‫‪‭⁬‍⁪‭⁪​⁫⁫⁮‮⁫⁮​⁫‫‏⁮‍‏‪‍‍‏‮([In] string obj0) => obj0.Length;

    static string \u206C‫‭​‪​‏‏⁭⁬‪‍⁪⁪⁯⁪⁮‍‌‏⁭‬⁮⁮‍‭‪‬‪‭⁯‫⁬⁪‍‭‎‬⁯‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206B‏‎‍‌‌⁫⁬‭⁬‫‎⁫​⁪‪‍‎‍⁮⁬⁫⁯⁫‭‭‭⁭‫⁪‫‫⁫⁮‭⁪‏⁯⁫⁮‮([In] object obj0) => obj0.ToString();

    static string \u200B​‬‏‍⁮⁫‎‫‬⁭‫⁭​‌​‍⁪⁮⁯‏‭‬‌‌‌‍‭⁭⁬‬⁪⁫‌‪‍‮⁯‌‪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F⁬‏⁮⁭​⁫‮‌⁯‍⁭‭‮⁬‬‌⁭⁬⁫‌‭‍⁫⁯⁫‮‪‫⁪⁫​‏‭​⁮‍‫⁭⁮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D⁫⁫​⁬‭‌‭‫‮‪‫⁯⁫⁬⁫‭‍‍‌⁪‪‍⁮⁪⁯‮‭⁬‫​‏‎⁪‮⁬‭⁯⁭⁯‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
