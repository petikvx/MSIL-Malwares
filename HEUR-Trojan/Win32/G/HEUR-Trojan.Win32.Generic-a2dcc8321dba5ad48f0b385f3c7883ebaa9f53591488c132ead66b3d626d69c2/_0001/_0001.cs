// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 4a5c2017-21d9-4074-b899-32a29b0f3c26, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0A04E507-2FF2-4D9E-ACC3-5B6E2C54765E
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-a2dcc8321dba5ad48f0b385f3c7883ebaa9f53591488c132ead66b3d626d69c2.exe

using SmartAssembly.SmartExceptionsCore;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0001
{
  internal sealed class \u0001
  {
    private static \u0001.\u0001 \u0001;
    private long \u0001;

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0003(
      IntPtr process,
      int minimumWorkingSetSize,
      int maximumWorkingSetSize);

    private void \u0003()
    {
      Process currentProcess;
      try
      {
        try
        {
          currentProcess = Process.GetCurrentProcess();
          try
          {
            \u0001.\u0001.\u0003(currentProcess.Handle, -1, -1);
          }
          finally
          {
            currentProcess?.Dispose();
          }
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        Process process = currentProcess;
        throw UnhandledException.\u0003(ex, (object) process, (object) this);
      }
    }

    private void \u0003(object sender, EventArgs e)
    {
      DateTime now;
      long ticks;
      try
      {
        try
        {
          now = DateTime.Now;
          ticks = now.Ticks;
          if (ticks - this.\u0001 <= 10000000L)
            return;
          this.\u0001 = ticks;
          this.\u0003();
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<long> local1 = (ValueType) ticks;
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> local2 = (ValueType) now;
        object obj = sender;
        EventArgs eventArgs = e;
        throw UnhandledException.\u0003(ex, (object) local1, (object) local2, (object) this, obj, (object) eventArgs);
      }
    }

    private \u0001()
    {
      DateTime now = DateTime.Now;
      this.\u0001 = now.Ticks;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      try
      {
        // ISSUE: method pointer
        Application.Idle += new EventHandler((object) this, __methodptr(\u0003));
        this.\u0003();
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<DateTime> local = (ValueType) now;
        throw UnhandledException.\u0003(ex, (object) local, (object) this);
      }
    }

    public static void \u0004()
    {
      try
      {
        try
        {
          if (Environment.OSVersion.Platform != PlatformID.Win32NT)
            return;
          \u0001.\u0001.\u0001 = new \u0001.\u0001();
        }
        catch
        {
        }
      }
      catch (Exception ex)
      {
        throw UnhandledException.\u0003(ex);
      }
    }
  }
}
