// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: SafeArrayTypeMismatchExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: FE98C20D-A437-4C5F-9849-D190358A66A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c0f665918f4ea75327960ddf58cf37e415a6bf6569a4c22aa6291fbac9d171ce.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -2078424894;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -551226909)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -473925397 ^ 1089522861;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 119890408;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 189743417)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -793689630 ^ 788770573;
              continue;
            case 2:
              num1 = (int) num2 * 1692410526 ^ 1601297582;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 539079770;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 218187749)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1261595719 ^ 1758485302;
              continue;
            case 3:
              str = "";
              num1 = (int) num2 * -497657037 ^ 1621645894;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = 1802801805;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1240737666)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -251661173 ^ -1752379733;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1136741644;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1082768277)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -893550382 ^ -1836241727;
            continue;
          case 2:
            num1 = (int) num2 * 360044865 ^ -2043199813;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 2112087266;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2120789560)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -740104406 ^ 1690852150;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 539382801 ^ 384536687;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -295597575;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1935014904)) % 4U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -225954428 ^ -546927341;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 845335554 ^ -182808886;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1785341778;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2118886813)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -1345427802 ^ 1847563520;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 244521431;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 991385099)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1449455636 ^ 65479551;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 874068704;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2143076223)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1777372941 ^ -2029392618;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1865500464;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1340012191)) % 6U)
          {
            case 0:
              asInt = 0;
              num1 = 979553012;
              continue;
            case 2:
              goto label_1;
            case 3:
              asInt = result;
              num1 = (int) num2 * 2119087344 ^ -892749276;
              continue;
            case 4:
              int num3 = !flag ? -128067819 : (num3 = -1259795844);
              num1 = num3 ^ (int) num2 * 1811803272;
              continue;
            case 5:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 41105576 ^ 453483975;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1220854260;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1484982363)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -472727136 ^ -574461072;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1119592742;
        float asFloat;
        bool flag;
        float result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -4521465)) % 8U)
          {
            case 0:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206B‎⁮‎⁯‪‬⁯⁯‪⁬‮⁫‭‮‍‍‪‮⁭‎‏⁭⁪⁪‎⁮‮‫‪‮‍‫‎⁮‏⁫‎⁯‪‮(), out result);
              num1 = (int) num2 * 2111974994 ^ -1251720832;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1969907579 ^ -1828934730;
              continue;
            case 2:
              goto label_1;
            case 3:
              asFloat = 0.0f;
              num1 = -1793495959;
              continue;
            case 5:
              result = 0.0f;
              num1 = (int) num2 * -1157786639 ^ -1327323310;
              continue;
            case 6:
              num1 = (int) num2 * -363404365 ^ -451085879;
              continue;
            case 7:
              int num3 = !flag ? 299814866 : (num3 = 1669506320);
              num1 = num3 ^ (int) num2 * -197629846;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 915165758;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1945387333)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 737942416 ^ -15885498;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 1365456063;
        double result;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 73471126)) % 7U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * -1412121861 ^ 1159903993;
              continue;
            case 1:
              int num3 = !flag ? 463484066 : (num3 = 704719231);
              num1 = num3 ^ (int) num2 * 827112078;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = 1406156339;
              continue;
            case 3:
              goto label_1;
            case 5:
              num1 = (int) num2 * 672012617 ^ 720459403;
              continue;
            case 6:
              result = 0.0;
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 534099367 ^ -211517381;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 2123141964;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 230865813)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -137991130 ^ 447056904;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -18500281 ^ 1999899920;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1954624778;
        bool result;
        bool asBool;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1797387422)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              int num3 = flag ? 505537553 : (num3 = 1197283285);
              num1 = num3 ^ (int) num2 * 475567320;
              continue;
            case 3:
              asBool = result;
              num1 = (int) num2 * 353548196 ^ 2146228432;
              continue;
            case 4:
              result = false;
              num1 = (int) num2 * 1656053409 ^ -1595868397;
              continue;
            case 5:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * -1709413491 ^ 1708864906;
              continue;
            case 6:
              num1 = (int) num2 * 1258814398 ^ -1841997500;
              continue;
            case 7:
              asBool = !JSONNode.\u206C‬⁬⁭‮‪‌‎⁫‫⁭⁪⁫⁬⁯‭‎⁯⁯‮‎⁫‌‭⁬‫‏‭⁯⁫‪‭⁭‏‫‭‍⁮‪‪‮(this.Value);
              num1 = -275181248;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -282053386;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1630355457)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -518280895;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -287327212;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1101994714)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * -622733130 ^ -699407567;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1338063406;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 985284175)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1338499880 ^ -1919511315;
              continue;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1772703321 ^ 2008099226;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 441354927;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 477208438)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -910137249 ^ -550859792;
            continue;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 2067128166 ^ 772665392;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -2127101600;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -837890911)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            num1 = (int) num2 * 1924209247 ^ -833502841;
            continue;
          case 2:
            goto label_1;
          case 4:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 926280440 ^ 444169802;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1920193844;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 2054433130;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1845284153)) % 8U)
        {
          case 0:
            flag1 = (object) a == b;
            num1 = 1416224259;
            continue;
          case 1:
            num1 = (int) num2 * 444219354 ^ 1355379209;
            continue;
          case 3:
            if (b == null)
            {
              num1 = (int) num2 * -1963557643 ^ -148478838;
              continue;
            }
            num3 = 0;
            break;
          case 4:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 5:
            int num4 = flag2 ? 238164990 : (num4 = 1758835873);
            num1 = num4 ^ (int) num2 * 1035834768;
            continue;
          case 6:
            goto label_1;
          case 7:
            flag1 = true;
            num1 = (int) num2 * -1326415652 ^ 856006020;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = 808397100;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 587151015;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 373043516)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 975638162 ^ 1818358190;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1671508369;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 84464508)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1307143377 ^ -1300598440;
            continue;
          case 3:
            num1 = (int) num2 * 5210393 ^ 788370465;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -46054121;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -284289827)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = this.\u200D‬⁯‬‬‫⁮⁯⁬‮⁫​‪‪‪‌⁭‍⁫‍‍‮​‎‬‮‌​‌‭‍⁭‪‏⁯​⁫‏‍‭‮();
            num1 = (int) num2 * 748687803 ^ -589089971;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 1415264514;
      char ch1;
      char ch2;
      string str1;
      char ch3;
      int num2;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2056513703)) % 31U)
        {
          case 0:
label_5:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\r");
            num1 = 1122838550;
            continue;
          case 1:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\\"");
            num1 = 251293532;
            continue;
          case 2:
            num1 = (int) num3 * 408519324 ^ -1119907324;
            continue;
          case 3:
label_28:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\t");
            num1 = 457556609;
            continue;
          case 4:
            int num4;
            num1 = num4 = num2 < JSONNode.\u202A‮⁫‬⁯‍⁪‍⁯‌‍‍⁫‪​⁪⁭⁫⁭⁮‬⁬​⁭‌‪‏⁭‬‎⁮‍⁬‌⁮⁮‎‮‌⁪‮(str2) ? 1707640384 : (num4 = 1414991141);
            continue;
          case 5:
            num1 = (int) num3 * 1914696577 ^ -1969849604;
            continue;
          case 6:
            num2 = 0;
            num1 = (int) num3 * -203313512 ^ -532104790;
            continue;
          case 7:
            num1 = (int) num3 * -330871257 ^ 1686836082;
            continue;
          case 8:
label_7:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\b");
            num1 = 1122838550;
            continue;
          case 9:
            ++num2;
            num1 = 1710057626;
            continue;
          case 10:
            num1 = (int) num3 * 211221690 ^ 1866252072;
            continue;
          case 11:
            num1 = (int) num3 * 865011369 ^ 769069075;
            continue;
          case 13:
            goto label_1;
          case 14:
            num1 = (int) num3 * 1508727045 ^ -421707185;
            continue;
          case 15:
label_16:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, ch1.ToString());
            num1 = 1122838550;
            continue;
          case 16:
            ch2 = ch1;
            num1 = (int) num3 * 71514491 ^ 1927847632;
            continue;
          case 17:
            num1 = (int) num3 * 1040801546 ^ -1413338648;
            continue;
          case 18:
            num1 = (int) num3 * -1894070364 ^ -501214758;
            continue;
          case 19:
label_23:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\f");
            num1 = 97113933;
            continue;
          case 20:
label_8:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\n");
            num1 = 764843234;
            continue;
          case 21:
            str3 = str1;
            num1 = (int) num3 * 1402194827 ^ 1020876913;
            continue;
          case 22:
            ch1 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(str2, num2);
            num1 = 2053425251;
            continue;
          case 23:
            str1 = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, "\\\\");
            num1 = 1886290779;
            continue;
          case 24:
            ch3 = ch2;
            switch (ch3)
            {
              case '\b':
                goto label_7;
              case '\t':
                goto label_28;
              case '\n':
                goto label_8;
              case '\v':
                goto label_16;
              case '\f':
                goto label_23;
              case '\r':
                goto label_5;
              default:
                num1 = (int) num3 * -1104377024 ^ -351402296;
                continue;
            }
          case 25:
            int num5;
            num1 = num5 = ch3 == '"' ? 1907722331 : (num5 = 386263534);
            continue;
          case 26:
            int num6;
            num1 = num6 = ch3 == '\\' ? 317393875 : (num6 = 738513180);
            continue;
          case 27:
            num1 = (int) num3 * -181126147 ^ 1656619160;
            continue;
          case 28:
            str1 = "";
            num1 = (int) num3 * -663783349 ^ -1150811214;
            continue;
          case 29:
            num1 = (int) num3 * -646723170 ^ -323292830;
            continue;
          case 30:
            str2 = aText;
            num1 = (int) num3 * -317236732 ^ 498620899;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = 518623209;
      int num2;
      char ch1;
      char ch2;
      bool flag1;
      string aItem;
      char ch3;
      bool flag2;
      string aKey;
      bool flag3;
      string s;
      char ch4;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch5;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      char ch6;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 432481628)) % 160U)
        {
          case 0:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1578288650 ^ -206567285;
            continue;
          case 1:
            num1 = (int) num3 * -925981830 ^ 1400709098;
            continue;
          case 2:
            num1 = (int) num3 * -1008304558 ^ 621507535;
            continue;
          case 3:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1941037469;
            continue;
          case 4:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, "\b");
            num1 = 490863943;
            continue;
          case 5:
            num1 = (int) num3 * -1011135165 ^ 1710713183;
            continue;
          case 6:
          case 23:
          case 48:
          case 55:
          case 117:
label_54:
            ++num2;
            num1 = 379498014;
            continue;
          case 7:
            int num4;
            num1 = num4 = ch2 != '"' ? 2004329229 : (num4 = 128476401);
            continue;
          case 8:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -827384299 ^ 558656286;
            continue;
          case 9:
            num1 = (int) num3 * 128354783 ^ -570521988;
            continue;
          case 10:
            num1 = (int) num3 * -392866432 ^ 1979050576;
            continue;
          case 11:
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1332785439 ^ -174561727;
            continue;
          case 12:
            string str1 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str2 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str1, str2);
            num1 = (int) num3 * -1285864687 ^ 724441029;
            continue;
          case 13:
            num1 = (int) num3 * 1728544276 ^ 715486324;
            continue;
          case 14:
            num1 = (int) num3 * -891972446 ^ 1293107522;
            continue;
          case 15:
            num1 = (int) num3 * -985186794 ^ 467804993;
            continue;
          case 16:
            num1 = (int) num3 * 2042875143 ^ -398114711;
            continue;
          case 17:
            num1 = (int) num3 * 1079617644 ^ -1123853726;
            continue;
          case 18:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1317281989 ^ 1275014772;
            continue;
          case 19:
            num1 = (int) num3 * 1701111325 ^ 751326052;
            continue;
          case 20:
            flag10 = jsonNodeStack.Count == 0;
            num1 = 1699074534;
            continue;
          case 21:
            aKey = "";
            num1 = 938945697;
            continue;
          case 22:
            num1 = 1737543471;
            continue;
          case 24:
            num1 = (int) num3 * 1006267125 ^ -595244792;
            continue;
          case 25:
            jsonNode2 = jsonNode1;
            num1 = 770579277;
            continue;
          case 26:
            ch5 = ch6;
            num1 = (int) num3 * -653511806 ^ -1774126662;
            continue;
          case 27:
            aKey = aItem;
            num1 = 426130498;
            continue;
          case 28:
            flag3 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -322575106 ^ 152511980;
            continue;
          case 29:
            int num5 = ch5 != 'b' ? -381513135 : (num5 = -2042619837);
            num1 = num5 ^ (int) num3 * -827164105;
            continue;
          case 30:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 2099290962 ^ 1102927827;
            continue;
          case 31:
label_27:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, "\t");
            num1 = 97046973;
            continue;
          case 32:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -462105632 ^ -1917156117;
            continue;
          case 33:
            num1 = (int) num3 * -1822163281 ^ -1059789363;
            continue;
          case 34:
            num1 = (int) num3 * 414134563 ^ -1161576057;
            continue;
          case 35:
            num1 = (int) num3 * 168342425 ^ 1648489983;
            continue;
          case 36:
            aKey = JSONNode.\u202C‍‭‪‮‪⁫‬‮​‍​​⁫‏‮⁪‪‮‭⁬‏‏⁬‭‬⁪⁭‍⁮⁫‍‭‪⁫‮⁬‬‫⁫‮(aKey);
            num1 = (int) num3 * -2038549256 ^ 1349467123;
            continue;
          case 37:
            num1 = 414285154;
            continue;
          case 38:
            string str3 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str4 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str3, str4);
            num1 = (int) num3 * -519432223 ^ 295021039;
            continue;
          case 39:
            num1 = (int) num3 * 2090926607 ^ 1187508605;
            continue;
          case 40:
            int num6 = ch2 <= ' ' ? 801985000 : (num6 = 560747091);
            num1 = num6 ^ (int) num3 * -1336948003;
            continue;
          case 41:
            num1 = (int) num3 * -1478401039 ^ -102464659;
            continue;
          case 42:
            int num7;
            num1 = num7 = !JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aKey, "") ? 1720856286 : (num7 = 1255629072);
            continue;
          case 43:
            num1 = (int) num3 * 2062743518 ^ 41134589;
            continue;
          case 44:
label_8:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, ch3.ToString());
            num1 = 2106788966;
            continue;
          case 45:
            goto label_1;
          case 46:
            flag7 = JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aKey, "");
            num1 = 1118040090;
            continue;
          case 47:
            num1 = (int) num3 * 992036538 ^ 339892981;
            continue;
          case 49:
            num1 = (int) num3 * -138065328 ^ 1177652633;
            continue;
          case 51:
            num1 = (int) num3 * 1406770856 ^ 1269698408;
            continue;
          case 52:
            int num8 = !flag12 ? -594573173 : (num8 = -545682856);
            num1 = num8 ^ (int) num3 * 528083871;
            continue;
          case 53:
            num1 = (int) num3 * 1910399963 ^ 1314807196;
            continue;
          case 54:
            aKey = JSONNode.\u202C‍‭‪‮‪⁫‬‮​‍​​⁫‏‮⁪‪‮‭⁬‏‏⁬‭‬⁪⁭‍⁮⁫‍‭‪⁫‮⁬‬‫⁫‮(aKey);
            int num9 = jsonNode1 is JSONArray ? 614512590 : (num9 = 134814844);
            num1 = num9 ^ (int) num3 * -1263815177;
            continue;
          case 56:
            int num10 = !flag3 ? 1763476315 : (num10 = 7249004);
            num1 = num10 ^ (int) num3 * -363956466;
            continue;
          case 57:
            int num11 = !flag8 ? -34947408 : (num11 = -1268161040);
            num1 = num11 ^ (int) num3 * -713116490;
            continue;
          case 58:
            num1 = (int) num3 * -779985440 ^ -587609712;
            continue;
          case 59:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1434489067;
            continue;
          case 60:
            string str5 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str6 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str5, str6);
            num1 = (int) num3 * -1654478480 ^ 1661127851;
            continue;
          case 61:
            aItem = "";
            num1 = (int) num3 * 1947951015 ^ -1173976754;
            continue;
          case 62:
            string str7 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str8 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str7, str8);
            num1 = (int) num3 * 1001932751 ^ 645956553;
            continue;
          case 63:
            goto label_22;
          case 64:
            ch3 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            ch6 = ch3;
            num1 = (int) num3 * -1923474869 ^ -370315450;
            continue;
          case 65:
            int num12 = flag11 ? -1694413613 : (num12 = -1519355755);
            num1 = num12 ^ (int) num3 * 1378096624;
            continue;
          case 66:
label_26:
            flag6 = flag5;
            num1 = 551989407;
            continue;
          case 67:
            num2 += 4;
            num1 = (int) num3 * -1590913655 ^ 261724198;
            continue;
          case 68:
            string str9 = aItem;
            ch4 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str9, str10);
            num1 = (int) num3 * -183669514 ^ -1604130233;
            continue;
          case 69:
            int num13 = flag14 ? 949453187 : (num13 = 1321760234);
            num1 = num13 ^ (int) num3 * 2036202228;
            continue;
          case 70:
            num1 = (int) num3 * -593377563 ^ -700700043;
            continue;
          case 71:
            num1 = (int) num3 * -2047259186 ^ -263318982;
            continue;
          case 72:
            int num14 = flag1 ? 788286942 : (num14 = 866917058);
            num1 = num14 ^ (int) num3 * 1074875766;
            continue;
          case 73:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -159403586 ^ 1370710692;
            continue;
          case 74:
            num1 = (int) num3 * 21390203 ^ 18105956;
            continue;
          case 75:
            int num15;
            num1 = num15 = flag5 ? 1294141792 : (num15 = 969565091);
            continue;
          case 76:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 2064818110 ^ 2136036576;
            continue;
          case 77:
label_70:
            num1 = 679947144;
            continue;
          case 78:
            num1 = (int) num3 * 1333647634 ^ 1967842239;
            continue;
          case 79:
            switch (ch2)
            {
              case '[':
                goto label_86;
              case '\\':
                goto label_98;
              case ']':
                goto label_133;
              default:
                num1 = 372259195;
                continue;
            }
          case 80:
label_136:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, "\r");
            num1 = 379621750;
            continue;
          case 81:
            num1 = (int) num3 * -1631345192 ^ 1110119896;
            continue;
          case 82:
            aKey = "";
            aItem = "";
            num1 = 2042789555;
            continue;
          case 83:
            int num16 = ch2 != ':' ? 802067692 : (num16 = 1341852259);
            num1 = num16 ^ (int) num3 * 695536485;
            continue;
          case 84:
            s = JSONNode.\u206E⁪‮​⁯‌⁬⁫‏‬​⁭‮⁮‮‮‮‍‏⁫‪‭⁪‎‮‮‮‏‍‌‬⁯⁫‎‮⁬⁮⁪⁫‫‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1310145067 ^ 1823327804;
            continue;
          case 85:
            int num17;
            num1 = num17 = ch2 == '}' ? 324852488 : (num17 = 534602591);
            continue;
          case 86:
            ch2 = ch1;
            num1 = (int) num3 * -1093020871 ^ 1784207710;
            continue;
          case 87:
            int num18;
            num1 = num18 = ch2 == ' ' ? 1825735038 : (num18 = 174634421);
            continue;
          case 88:
label_98:
            ++num2;
            num1 = 695711941;
            continue;
          case 89:
            flag15 = flag5;
            num1 = (int) num3 * -145291905 ^ -279347540;
            continue;
          case 90:
            int num19;
            num1 = num19 = JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aKey, "") ? 1319467061 : (num19 = 1260293706);
            continue;
          case 91:
            num1 = (int) num3 * -392696862 ^ -843874938;
            continue;
          case 92:
            int num20;
            num1 = num20 = ch2 != ',' ? 231474631 : (num20 = 707203927);
            continue;
          case 93:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1726113484 ^ 969961616;
            continue;
          case 94:
            aKey = "";
            num1 = 145376028;
            continue;
          case 95:
            flag2 = JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aItem, "");
            num1 = 1593944569;
            continue;
          case 96:
            int num21;
            num1 = num21 = !flag5 ? 141348967 : (num21 = 145100247);
            continue;
          case 97:
            num1 = (int) num3 * 1197482245 ^ -1398070219;
            continue;
          case 98:
            num1 = 302390601;
            continue;
          case 99:
            int num22 = flag6 ? -203440293 : (num22 = -121580888);
            num1 = num22 ^ (int) num3 * -123434133;
            continue;
          case 100:
            int num23;
            num1 = num23 = ch2 > ']' ? 250352205 : (num23 = 571306255);
            continue;
          case 101:
            flag9 = JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aKey, "");
            num1 = 607444909;
            continue;
          case 102:
            num1 = (int) num3 * -712640785 ^ -1120747101;
            continue;
          case 103:
            jsonNodeStack.Pop();
            num1 = 1873210188;
            continue;
          case 104:
label_157:
            string str11 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str12 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str11, str12);
            num1 = 1304083691;
            continue;
          case 105:
            int num24;
            num1 = num24 = !flag5 ? 344421983 : (num24 = 17293138);
            continue;
          case 106:
            ch1 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            num1 = 646824842;
            continue;
          case 107:
            int num25;
            num1 = num25 = ch5 == 'f' ? 861899858 : (num25 = 1075062393);
            continue;
          case 108:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1304180509 ^ 971446314;
            continue;
          case 109:
            flag5 = !flag5;
            num1 = 724369690;
            continue;
          case 110:
            string str13 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str14 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str13, str14);
            num1 = (int) num3 * -1566497174 ^ 1337921651;
            continue;
          case 111:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -921613060 ^ -855834543;
            continue;
          case 112:
            int num26 = JSONNode.\u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮(aItem, "") ? -438214923 : (num26 = -1387111137);
            num1 = num26 ^ (int) num3 * 482714243;
            continue;
          case 113:
            int num27;
            num1 = num27 = ch2 == '{' ? 1223323381 : (num27 = 1522731053);
            continue;
          case 114:
            num1 = (int) num3 * -1747219063 ^ 310344572;
            continue;
          case 115:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, "\n");
            num1 = 2062282064;
            continue;
          case 116:
            flag5 = false;
            num1 = (int) num3 * -1430726428 ^ -509067434;
            continue;
          case 118:
            num1 = (int) num3 * 1224435961 ^ -1849584111;
            continue;
          case 119:
            int num28 = flag15 ? -213436912 : (num28 = -369694634);
            num1 = num28 ^ (int) num3 * 68009236;
            continue;
          case 120:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 352377793 ^ -2017568926;
            continue;
          case 121:
            num1 = (int) num3 * -742419604 ^ -986008217;
            continue;
          case 122:
            num1 = (int) num3 * 2096649300 ^ 1919535625;
            continue;
          case 123:
            num1 = (int) num3 * 355718352 ^ -2062164796;
            continue;
          case 124:
            switch (ch2)
            {
              case '\t':
                goto label_26;
              case '\n':
              case '\r':
                goto label_54;
              case '\v':
              case '\f':
                goto label_157;
              default:
                num1 = (int) num3 * 1339373907 ^ -1761375833;
                continue;
            }
          case 125:
            flag8 = num2 < JSONNode.\u202A‮⁫‬⁯‍⁪‍⁯‌‍‍⁫‪​⁪⁭⁫⁭⁮‬⁬​⁭‌‪‏⁭‬‎⁮‍⁬‌⁮⁮‎‮‌⁪‮(aJSON);
            num1 = 2048567973;
            continue;
          case 126:
            aItem = "";
            num1 = (int) num3 * -312183174 ^ 216165970;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = 1379932078;
            continue;
          case 128:
            int num29 = flag4 ? -201688625 : (num29 = -291680888);
            num1 = num29 ^ (int) num3 * 1782775490;
            continue;
          case 129:
            num1 = (int) num3 * 1207283209 ^ 850219077;
            continue;
          case 130:
            int num30 = !(jsonNode1 != (object) null) ? 1746633366 : (num30 = 575901231);
            num1 = num30 ^ (int) num3 * 1765637530;
            continue;
          case 131:
            num1 = (int) num3 * -611940280 ^ -1402426573;
            continue;
          case 132:
            int num31 = ch2 > ',' ? -1328872476 : (num31 = -1685124504);
            num1 = num31 ^ (int) num3 * -1321060121;
            continue;
          case 133:
            int num32 = !flag2 ? -1186055950 : (num32 = -871929266);
            num1 = num32 ^ (int) num3 * -846628129;
            continue;
          case 134:
            int num33 = flag7 ? 409011530 : (num33 = 1888108651);
            num1 = num33 ^ (int) num3 * 1070258556;
            continue;
          case 135:
            int num34;
            num1 = num34 = ch5 != 'n' ? 1223741053 : (num34 = 665117583);
            continue;
          case 136:
            num1 = (int) num3 * -722516382 ^ 202682226;
            continue;
          case 137:
            num1 = (int) num3 * 790623524 ^ 1064547968;
            continue;
          case 138:
            flag11 = flag5;
            num1 = (int) num3 * 721696839 ^ 2123422299;
            continue;
          case 139:
            string str15 = aItem;
            ch4 = JSONNode.\u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮(aJSON, num2);
            string str16 = ch4.ToString();
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(str15, str16);
            num1 = (int) num3 * 1390644334 ^ -1280161647;
            continue;
          case 140:
            num1 = 123098266;
            continue;
          case 141:
            int num35 = !flag13 ? 322610638 : (num35 = 922497459);
            num1 = num35 ^ (int) num3 * -406913165;
            continue;
          case 142:
            aItem = JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮(aItem, "\f");
            num1 = 737390244;
            continue;
          case 143:
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -341038693 ^ 315732452;
            continue;
          case 144:
            switch (ch5)
            {
              case 'r':
                goto label_136;
              case 's':
                goto label_8;
              case 't':
                goto label_27;
              case 'u':
                goto label_70;
              default:
                num1 = 2004350257;
                continue;
            }
          case 145:
            int num36 = flag9 ? -1769857252 : (num36 = -551932092);
            num1 = num36 ^ (int) num3 * -1852313235;
            continue;
          case 146:
            int num37 = ch5 > 'f' ? -12819735 : (num37 = -548310797);
            num1 = num37 ^ (int) num3 * -289587903;
            continue;
          case 147:
            aKey = "";
            aItem = "";
            num1 = 648632448;
            continue;
          case 148:
label_133:
            flag4 = flag5;
            num1 = 1552784060;
            continue;
          case 149:
            num2 = 0;
            num1 = (int) num3 * -2121739734 ^ 2129946146;
            continue;
          case 150:
            goto label_104;
          case 151:
            num1 = (int) num3 * -958545914 ^ -1237127948;
            continue;
          case 152:
            int num38 = jsonNode1 is JSONArray ? -1802527167 : (num38 = -1781814570);
            num1 = num38 ^ (int) num3 * -1055231460;
            continue;
          case 153:
            num1 = (int) num3 * 1071639698 ^ 1908950504;
            continue;
          case 154:
            int num39 = !flag10 ? -866866377 : (num39 = -2077262874);
            num1 = num39 ^ (int) num3 * 666833934;
            continue;
          case 155:
            aKey = JSONNode.\u202C‍‭‪‮‪⁫‬‮​‍​​⁫‏‮⁪‪‮‭⁬‏‏⁬‭‬⁪⁭‍⁮⁫‍‭‪⁫‮⁬‬‫⁫‮(aKey);
            num1 = (int) num3 * 163768384 ^ -405871657;
            continue;
          case 156:
            num1 = (int) num3 * -1293661008 ^ 1215527296;
            continue;
          case 157:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1897127652 ^ 1257537126;
            continue;
          case 158:
            flag14 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1648940559 ^ 1394094939;
            continue;
          case 159:
label_86:
            flag12 = flag5;
            num1 = 2056404520;
            continue;
          default:
            goto label_160;
        }
      }
label_22:
      throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_104:
      throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("JSON Parse: Too many closing brackets");
label_160:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1466325091;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -407354296)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Serialize(JSONNode.\u206C‪‮‎‭⁬⁯‎⁮‭⁪⁭‭‏‪⁪⁬⁪⁮⁬‌‭⁯‎⁫‭‌‌‏‪‭⁫‍⁪⁮‫‌‮‬‏‮(aData));
            num1 = (int) num2 * 521568014 ^ 920397764;
            continue;
          case 2:
            num1 = (int) num2 * -929084760 ^ -1822165068;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -566618755;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -101617421)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONNode.\u206A‬⁬‍‌‫‎⁮‭⁪‮‍⁮‍​‎⁪‭⁬‏‫‬‏⁪‬⁭‪⁪⁯‏‪‬‍‌⁪‮‮⁮​‏‮(JSONNode.\u206D⁭⁫⁪​⁮‪‪‬⁫⁬‮‍⁪‏‫‮⁬‍‪⁫⁯‭​⁬⁪⁬‮‎‪‌‏⁮⁪‫​⁫‪⁭⁯‮((FileSystemInfo) JSONNode.\u206A‫‌⁫​⁪‎⁪‏‪‌‏‫‎⁪‮⁬​‪⁬‮‍⁪⁬‎‬‬‏‌‭⁪⁭⁪⁭‫‌‍‪⁫‮‮(JSONNode.\u202B‌‌‮‪⁮⁪‌‭‫​⁪‌‮‎‌⁫‮‌‫‏⁬‌​‏‪‫‌‬‏‭‏‭⁮⁬‌‭⁭‪⁮‮(aFileName))));
            num1 = (int) num2 * 219247900 ^ -1518432637;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u200B‎‭⁫​‭‏‍⁮‌⁮⁯⁮⁬⁮⁯‮‏‌⁫‎‏⁬⁫⁪‮‬‪‌‭‫‭⁯‪​⁬‬⁭⁮‌‮(aFileName);
      try
      {
label_6:
        int num3 = -697902924;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -101617421)) % 4U)
          {
            case 0:
              goto label_6;
            case 1:
              goto label_14;
            case 2:
              num3 = (int) num4 * -1184472900 ^ -1666929786;
              continue;
            case 3:
              this.SaveToStream((Stream) aData);
              num3 = (int) num4 * 1400226009 ^ -29623146;
              continue;
            default:
              goto label_10;
          }
        }
label_14:
        return;
label_10:;
      }
      finally
      {
        if (aData != null)
        {
label_12:
          int num5 = -583588754;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -101617421)) % 3U)
            {
              case 0:
                goto label_12;
              case 1:
                JSONNode.\u200D​⁬⁫​‍⁮‪‪‪‮‌⁯⁭‮⁮‫⁪⁭‎⁯⁯⁭‮‭‍‎⁫‭⁯‬⁫⁬⁪‪⁭‍​⁫‍‮((IDisposable) aData);
                num5 = (int) num6 * -667779088 ^ 1564381698;
                continue;
              default:
                goto label_16;
            }
          }
        }
label_16:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202D‍‍⁭⁭‬⁮‏‌⁬‌‫‭‍​‍‮⁬‮‬⁪⁪⁮⁭⁯‍‏‎‎‍‏⁯⁫‌⁫‬‮⁫⁮⁬‮();
      string base64;
      try
      {
label_2:
        int num1 = 1274812743;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 350860316)) % 6U)
          {
            case 0:
              base64 = JSONNode.\u202D‍⁪‏‎⁯⁭‭​⁪​‮⁮⁪⁪‍‏‪‍⁪⁬⁫⁬‪‌‪‍‍‫‭‎‪⁮⁭‮‪‪‍⁭‏‮(JSONNode.\u200C‎⁬⁬‏‎‎‏⁯​⁮‪‎​⁭⁯‬‏‮⁬‍‮​‎‫‪‬​⁭⁭⁪⁭⁪⁫⁪‎⁬⁭​⁫‮(aData));
              num1 = (int) num2 * 177872872 ^ 280349205;
              continue;
            case 2:
              num1 = (int) num2 * 666828381 ^ 1329057562;
              continue;
            case 3:
              goto label_2;
            case 4:
              JSONNode.\u200C‪​‮‌‌‌‬‬⁬‌‬‬‏⁭‏‮‪‌‫‭‭​‎‏⁮‭⁪⁯‪‏​‮⁮‏‏⁫⁭⁫⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * 1634762408 ^ -1478306566;
              continue;
            case 5:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1836447011 ^ -664377067;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 585307617;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 350860316)) % 3U)
            {
              case 0:
                goto label_9;
              case 1:
                JSONNode.\u200D​⁬⁫​‍⁮‪‪‪‮‌⁯⁭‮⁮‫⁪⁭‎⁯⁯⁭‮‭‍‎⁫‭⁯‬⁫⁬⁪‪⁭‍​⁫‍‮((IDisposable) aData);
                num3 = (int) num4 * 720344370 ^ 1010711972;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1860075860;
      JSONNode jsonNode;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      int num2;
      JSONArray jsonArray;
      string aKey;
      int num3;
      int num4;
      bool flag;
      JSONNode aItem;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1814925707)) % 39U)
        {
          case 0:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E​‎‏‎‬‪​‫‎‭​‎‪⁬⁬⁮⁭‏‭⁯⁪‬‎⁮‍⁮‎⁫⁭‫⁫‌⁬‭‎⁭‌⁫‫‮(aReader));
            num1 = (int) num6 * -1321880040 ^ 364239098;
            continue;
          case 1:
label_22:
            num1 = -68243628;
            continue;
          case 2:
            int num7;
            num1 = num7 = num3 >= num4 ? -2126764664 : (num7 = -692269272);
            continue;
          case 3:
            num1 = (int) num6 * -1001817808 ^ 1863685129;
            continue;
          case 4:
            num1 = -1903638267;
            continue;
          case 5:
            num1 = (int) num6 * 1733253564 ^ -1701866959;
            continue;
          case 6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‏‏‮‭‭⁮‏‏‍‌‫⁪⁪⁫​‍⁭‎‍⁯‭⁬⁪⁯⁬⁬‭‫‎‪​‌‬‫‌‎​‫‌‮(aReader));
            num1 = (int) num6 * -1781367758 ^ -559370284;
            continue;
          case 7:
label_30:
            num1 = -1202889340;
            continue;
          case 8:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1523802531 ^ -103954707;
            continue;
          case 9:
label_24:
            num1 = -1657818499;
            continue;
          case 10:
            goto label_1;
          case 11:
            num5 = JSONNode.\u200F‏‏‮‭‭⁮‏‏‍‌‫⁪⁪⁫​‍⁭‎‍⁯‭⁬⁪⁯⁬⁬‭‫‎‪​‌‬‫‌‎​‫‌‮(aReader);
            num1 = (int) num6 * -1487121344 ^ -419043448;
            continue;
          case 12:
            num1 = (int) num6 * 1747763964 ^ 1170230735;
            continue;
          case 13:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206E⁫⁪‮‪⁪⁭⁫‮‫⁫‭‌‪‎‪⁮⁬‭⁫‬‍‪‭‪‌‌‏‮‭‬‫‮‍⁪⁫‮‌‭‭‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 819238911 ^ 1903375127;
            continue;
          case 14:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1824157236 ^ -276320465;
            continue;
          case 15:
            flag = num2 < num5;
            num1 = -526668766;
            continue;
          case 16:
            num4 = JSONNode.\u200F‏‏‮‭‭⁮‏‏‍‌‫⁪⁪⁫​‍⁭‎‍⁯‭⁬⁪⁯⁬⁬‭‫‎‪​‌‬‫‌‎​‫‌‮(aReader);
            num1 = (int) num6 * -1875033574 ^ 1495390463;
            continue;
          case 17:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_30;
              case JSONBinaryTag.Class:
                goto label_17;
              case JSONBinaryTag.Value:
                goto label_22;
              case JSONBinaryTag.IntValue:
                goto label_6;
              case JSONBinaryTag.DoubleValue:
                goto label_4;
              case JSONBinaryTag.BoolValue:
                goto label_14;
              case JSONBinaryTag.FloatValue:
                goto label_24;
              default:
                num1 = (int) num6 * 1378315015 ^ -1360893870;
                continue;
            }
          case 18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁫‫‫‍⁪⁭‪‬‮‬‌‎⁯‌⁬‫⁮⁮⁪‭⁬‬‮⁫⁪‏⁯‫‬⁫‌⁫‏‌⁮‪‏⁬‮‮(aReader));
            num1 = (int) num6 * 585222335 ^ 1008481953;
            continue;
          case 19:
            num1 = (int) num6 * -530891593 ^ -470004042;
            continue;
          case 20:
            num1 = (int) num6 * -371738539 ^ -979156194;
            continue;
          case 21:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -2077743160 ^ -1332733645;
            continue;
          case 22:
            int num8 = !flag ? -624145688 : (num8 = -474606429);
            num1 = num8 ^ (int) num6 * -368241362;
            continue;
          case 23:
label_14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁮‬‬‫‍⁯⁯⁬‬‪⁬‍‏‪⁫​⁭⁯‮‌⁫‍‭⁪‍⁯‌‏‌‪⁪‍⁮‪‪‎‮‬‪‮(aReader));
            num1 = -2043589254;
            continue;
          case 24:
            num3 = 0;
            num1 = (int) num6 * 1399451918 ^ 992643567;
            continue;
          case 26:
label_17:
            num1 = -1228864554;
            continue;
          case 27:
            goto label_7;
          case 28:
            ++num2;
            num1 = (int) num6 * 1279587564 ^ 612817658;
            continue;
          case 29:
            aKey = JSONNode.\u206E​‎‏‎‬‪​‫‎‭​‎‪⁬⁬⁮⁭‏‭⁯⁪‬‎⁮‍⁮‎⁫⁭‫⁫‌⁬‭‎⁭‌⁫‫‮(aReader);
            num1 = (int) num6 * 1508915708 ^ 1180803016;
            continue;
          case 30:
label_6:
            num1 = -926024968;
            continue;
          case 31:
            num1 = (int) num6 * 1509582580 ^ 441596693;
            continue;
          case 32:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -1460528839;
            continue;
          case 33:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -828615909 ^ -474737911;
            continue;
          case 34:
label_4:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁬⁫⁬‬‫‍⁪⁭‮‪⁪‎‬‏‏⁭⁮‍‪⁫⁬⁮⁮‬⁪⁮‮‫‫‌‭⁫⁬‍​⁪‭‬‏‮(aReader));
            num1 = -901161127;
            continue;
          case 35:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1840752398 ^ -1744511975;
            continue;
          case 36:
            ++num3;
            num1 = (int) num6 * -53139088 ^ -719691785;
            continue;
          case 37:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * 237606523 ^ 1923099429;
            continue;
          case 38:
            num1 = (int) num6 * 837319566 ^ -626910531;
            continue;
          default:
            goto label_41;
        }
      }
label_7:
      throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮(JSONNode.\u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‭‬‌‍‮‍‍​⁫‬⁮⁫⁪‍‌‭‭⁬​‎⁯⁮‭⁮‮‭‭⁬‍‏⁭‎‌⁪‮​​⁭‭‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1601089448;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 511780595)) % 4U)
            {
              case 0:
                goto label_3;
              case 2:
                num1 = (int) num2 * 967674744 ^ 1805916550;
                continue;
              case 3:
                JSONNode.\u200D​⁬⁫​‍⁮‪‪‪‮‌⁯⁭‮⁮‫⁪⁭‎⁯⁯⁭‮‭‍‎⁫‭⁯‬⁫⁬⁪‪⁭‍​⁫‍‮((IDisposable) aReader);
                num1 = (int) num2 * -58036068 ^ -1869945167;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202D⁯⁬‫‏‭⁫‪‪‏‏⁭⁯⁫‪‎⁯‫⁪‬‪⁪​​‪‪‮​‫⁬⁯⁭⁭‎‪​‮⁬‎‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -61944770;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1553112973)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 305989092 ^ 1716280290;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -1613964508;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1553112973)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                num3 = (int) num4 * -2106525071 ^ 1790450544;
                continue;
              case 3:
                JSONNode.\u200D​⁬⁫​‍⁮‪‪‪‮‌⁯⁭‮⁮‫⁪⁭‎⁯⁯⁭‮‭‍‎⁫‭⁯‬⁫⁬⁪‪⁭‍​⁫‍‮((IDisposable) aData);
                num3 = (int) num4 * 762098761 ^ -991488735;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      byte[] numArray = JSONNode.\u206F‮⁭‮⁭‏‬‫‍‮⁮​‎​​‭‏⁫‭‏⁮⁫‎‌‪‌⁮‭‫‮‏⁬‫‭‎‪⁫‎⁭⁯‮(aBase64);
label_1:
      int num1 = -1886345294;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -892888781)) % 7U)
        {
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -570917708 ^ 1789041155;
            continue;
          case 2:
            JSONNode.\u200C‪​‮‌‌‌‬‬⁬‌‬‬‏⁭‏‮‪‌‫‭‭​‎‏⁮‭⁪⁯‪‏​‮⁮‏‏⁫⁭⁫⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * 2013361195 ^ -129714091;
            continue;
          case 3:
            num1 = (int) num2 * -1659455147 ^ -1204507665;
            continue;
          case 4:
            aData = JSONNode.\u200C‏⁫‪‮‍‎⁬‌⁬⁮‭‎‭⁮‏‪⁭‌‪⁫⁪‬​‏​​‫‏⁮⁭‭‪‏‮⁫‌‏‎‬‮(numArray);
            num1 = (int) num2 * 634487211 ^ 1559156014;
            continue;
          case 5:
            num1 = (int) num2 * 1756634968 ^ 317061419;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = 321829805;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1506355599)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -830344992 ^ -1172096884;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u206B‎⁮‎⁯‪‬⁯⁯‪⁬‮⁫‭‮‍‍‪‮⁭‎‏⁭⁪⁪‎⁮‮‫‪‮‍‫‎⁮‏⁫‎⁯‪‮() => CultureInfo.InvariantCulture;

    static bool \u206C‬⁬⁭‮‪‌‎⁫‫⁭⁪⁫⁬⁯‭‎⁯⁯‮‎⁫‌‭⁬‫‏‭⁯⁫‪‭⁭‏‫‭‍⁮‪‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200D‬⁯‬‬‫⁮⁯⁬‮⁫​‪‪‪‌⁭‍⁫‍‍‮​‎‬‮‌​‌‭‍⁭‪‏⁯​⁫‏‍‭‮() => base.GetHashCode();

    static char \u202A⁭‮⁮⁬‍‪‌‭⁪⁯‫‏⁯‮‭⁪⁫​‎⁮⁬⁭‏⁫⁮⁮⁯‍‎‌⁮​⁯⁪⁭⁪‪‪⁯‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202C‬‮‪‭‍‎‭⁭‎‏‭‫⁯​‪​‌⁬⁮‭⁫‏‫‬⁭‭‪‌‏‏⁬‫⁭⁬​‌‏‭⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202A‮⁫‬⁯‍⁪‍⁯‌‍‍⁫‪​⁪⁭⁫⁭⁮‬⁬​⁭‌‪‏⁭‬‎⁮‍⁬‌⁮⁮‎‮‌⁪‮([In] string obj0) => obj0.Length;

    static string \u202C‍‭‪‮‪⁫‬‮​‍​​⁫‏‮⁪‪‮‭⁬‏‏⁬‭‬⁪⁭‍⁮⁫‍‭‪⁫‮⁬‬‫⁫‮([In] string obj0) => obj0.Trim();

    static bool \u206F‭‪⁭‭​⁪‎⁬‪​‪⁭‪‬‍⁭‎⁬⁭⁭‫‏⁫⁬‏⁫⁬‭‬‏‎⁭‫‎⁮⁬‫‫‬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206A⁬‍⁭⁯⁫‎⁭‍‬‌⁫​‎‬‫⁪⁮‫‬‪‬‏⁪‏‮‭⁫⁭‫‫‮‫‌‮‪⁫‎⁫‪‮([In] string obj0) => new Exception(obj0);

    static string \u206E⁪‮​⁯‌⁬⁫‏‬​⁭‮⁮‮‮‮‍‏⁫‪‭⁪‎‮‮‮‏‍‌‬⁯⁫‎‮⁬⁮⁪⁫‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C‪‮‎‭⁬⁯‎⁮‭⁪⁭‭‏‪⁪⁬⁪⁮⁬‌‭⁯‎⁫‭‌‌‏‪‭⁫‍⁪⁮‫‌‮‬‏‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202B‌‌‮‪⁮⁪‌‭‫​⁪‌‮‎‌⁫‮‌‫‏⁬‌​‏‪‫‌‬‏‭‏‭⁮⁬‌‭⁭‪⁮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206A‫‌⁫​⁪‎⁪‏‪‌‏‫‎⁪‮⁬​‪⁬‮‍⁪⁬‎‬‬‏‌‭⁪⁭⁪⁭‫‌‍‪⁫‮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206D⁭⁫⁪​⁮‪‪‬⁫⁬‮‍⁪‏‫‮⁬‍‪⁫⁯‭​⁬⁪⁬‮‎‪‌‏⁮⁪‫​⁫‪⁭⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206A‬⁬‍‌‫‎⁮‭⁪‮‍⁮‍​‎⁪‭⁬‏‫‬‏⁪‬⁭‪⁪⁯‏‪‬‍‌⁪‮‮⁮​‏‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200B‎‭⁫​‭‏‍⁮‌⁮⁯⁮⁬⁮⁯‮‏‌⁫‎‏⁬⁫⁪‮‬‪‌‭‫‭⁯‪​⁬‬⁭⁮‌‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200D​⁬⁫​‍⁮‪‪‪‮‌⁯⁭‮⁮‫⁪⁭‎⁯⁯⁭‮‭‍‎⁫‭⁯‬⁫⁬⁪‪⁭‍​⁫‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202D‍‍⁭⁭‬⁮‏‌⁬‌‫‭‍​‍‮⁬‮‬⁪⁪⁮⁭⁯‍‏‎‎‍‏⁯⁫‌⁫‬‮⁫⁮⁬‮() => new MemoryStream();

    static void \u200C‪​‮‌‌‌‬‬⁬‌‬‬‏⁭‏‮‪‌‫‭‭​‎‏⁮‭⁪⁯‪‏​‮⁮‏‏⁫⁭⁫⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200C‎⁬⁬‏‎‎‏⁯​⁮‪‎​⁭⁯‬‏‮⁬‍‮​‎‫‪‬​⁭⁭⁪⁭⁪⁫⁪‎⁬⁭​⁫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202D‍⁪‏‎⁯⁭‭​⁪​‮⁮⁪⁪‍‏‪‍⁪⁬⁫⁬‪‌‪‍‍‫‭‎‪⁮⁭‮‪‪‍⁭‏‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206E⁫⁪‮‪⁪⁭⁫‮‫⁫‭‌‪‎‪⁮⁬‭⁫‬‍‪‭‪‌‌‏‮‭‬‫‮‍⁪⁫‮‌‭‭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200F‏‏‮‭‭⁮‏‏‍‌‫⁪⁪⁫​‍⁭‎‍⁯‭⁬⁪⁯⁬⁬‭‫‎‪​‌‬‫‌‎​‫‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206E​‎‏‎‬‪​‫‎‭​‎‪⁬⁬⁮⁭‏‭⁯⁪‬‎⁮‍⁮‎⁫⁭‫⁫‌⁬‭‎⁭‌⁫‫‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206B⁬⁫⁬‬‫‍⁪⁭‮‪⁪‎‬‏‏⁭⁮‍‪⁫⁬⁮⁮‬⁪⁮‮‫‫‌‭⁫⁬‍​⁪‭‬‏‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B⁮‬‬‫‍⁯⁯⁬‬‪⁬‍‏‪⁫​⁭⁯‮‌⁫‍‭⁪‍⁯‌‏‌‪⁪‍⁮‪‪‎‮‬‪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200B⁫‫‫‍⁪⁭‪‬‮‬‌‎⁯‌⁬‫⁮⁮⁪‭⁬‬‮⁫⁪‏⁯‫‬⁫‌⁫‏‌⁮‪‏⁬‮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‭‬‌‍‮‍‍​⁫‬⁮⁫⁪‍‌‭‭⁬​‎⁯⁮‭⁮‮‭‭⁬‍‏⁭‎‌⁪‮​​⁭‭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202D⁯⁬‫‏‭⁫‪‪‏‏⁭⁯⁫‪‎⁯‫⁪‬‪⁪​​‪‪‮​‫⁬⁯⁭⁭‎‪​‮⁬‎‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206F‮⁭‮⁭‏‬‫‍‮⁮​‎​​‭‏⁫‭‏⁮⁫‎‌‪‌⁮‭‫‮‏⁬‫‭‎‪⁫‎⁭⁯‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C‏⁫‪‮‍‎⁬‌⁬⁮‭‎‭⁮‏‪⁭‌‪⁫⁪‬​‏​​‫‏⁮⁭‭‪‏‮⁫‌‏‎‬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
