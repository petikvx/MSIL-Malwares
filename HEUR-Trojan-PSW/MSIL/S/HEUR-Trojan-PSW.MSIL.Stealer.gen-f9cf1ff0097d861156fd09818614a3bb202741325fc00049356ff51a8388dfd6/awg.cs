// Decompiled with JetBrains decompiler
// Type: rw.awg
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace rw
{
  public class awg
  {
    private List<hwv> nmE;
    internal static awg WLx;

    [SpecialName]
    public List<hwv> RH2() => this.nmE;

    [CompilerGenerated]
    [SpecialName]
    public hwv rHB() => this.MmX;

    [CompilerGenerated]
    [SpecialName]
    public void UH4(hwv _param1) => this.MmX = _param1;

    [CompilerGenerated]
    [SpecialName]
    public string OH7() => this.Pm1;

    [CompilerGenerated]
    [SpecialName]
    public void yH8(string _param1) => this.Pm1 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public string gmn() => this.ymu;

    [CompilerGenerated]
    [SpecialName]
    public void Kml(string _param1) => this.ymu = _param1;

    public awg(string _param1, string _param2)
    {
      ccw.xFvA3V();
      this.nmE = new List<hwv>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.yH8(_param1);
      this.Kml(_param2);
      this.yH8(string.Empty);
      int num1 = 2;
      if (true)
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      while (true)
      {
        int num3;
        switch (num1)
        {
          case 1:
            goto label_6;
          case 2:
            this.UH4(new hwv(""));
            if (_param2 == null)
            {
              num3 = 0;
              break;
            }
            goto default;
          default:
            num3 = _param2 != string.Empty ? 1 : 0;
            break;
        }
        if (num3 != 0)
        {
          this.rHB().hmy().Add("throw new Exception(\"Enum did not match! " + _param2 + "'.\");");
          if (true)
            num1 = 1;
          else
            goto label_1;
        }
        else
          goto label_8;
      }
label_6:
      return;
label_8:
      this.rHB().hmy().Add("throw new Exception(\"Enum did not match!\");");
    }

    public override string ToString()
    {
      int num1 = 4;
label_1:
      StringBuilder stringBuilder;
      while (true)
      {
        int num2 = num1;
        List<hwv> hwvList1;
        while (true)
        {
          List<hwv> hwvList2;
          hwv hwv1;
          int index1;
          List<hwv>.Enumerator enumerator;
          int index2;
          switch (num2)
          {
            case 1:
label_24:
              this.rHB().FmV(string.Empty);
              index2 = 0;
              goto label_15;
            case 2:
label_25:
              awg.qbZ((object) hwv1, (object) this.OH7());
              num2 = 7;
              continue;
            case 3:
              goto label_5;
            case 4:
              stringBuilder = new StringBuilder();
              num2 = awg.xLz() ? 3 : 3;
              continue;
            case 5:
              hwvList2 = new List<hwv>();
              enumerator = this.nmE.GetEnumerator();
              if (awg.gbK() == null)
              {
                num2 = 6;
                continue;
              }
              goto label_1;
            case 6:
              try
              {
                while (enumerator.MoveNext())
                {
                  hwv current = enumerator.Current;
                  if (current.hmy().Count == 0)
                    hwvList2.Add(current);
                }
                int num3 = 0;
                if (awg.gbK() != null)
                  goto label_13;
label_8:
                switch (num3)
                {
                  default:
                    goto label_24;
                }
label_13:
                int num4;
                num3 = num4;
                goto label_8;
              }
              finally
              {
                enumerator.Dispose();
              }
            case 7:
label_20:
              awg.vbv((object) stringBuilder, (object) hwv1.ToString());
              ++index1;
              break;
            default:
              goto label_19;
          }
label_4:
          if (index1 < hwvList1.Count)
          {
            hwv1 = hwvList1[index1];
            if (index1 != 0)
            {
              stringBuilder.AppendLine(this.OH7() + "else");
              hwv1.nmO(this.OH7() + "\t");
              goto label_20;
            }
            else
              goto label_25;
          }
          else
            goto label_22;
label_15:
          hwv hwv2;
          if (index2 >= awg.gbN((object) hwvList2))
          {
            hwvList1.Add(this.rHB());
            index1 = 0;
            goto label_4;
          }
          else
          {
            hwv2 = hwvList2[index2];
            hwvList1.Remove(hwv2);
            if (index2 != 0)
            {
              hwv hwv3 = this.rHB();
              hwv3.FmV(hwv3.Amo() + " && ");
              num2 = !awg.xLz() ? 0 : 0;
              continue;
            }
          }
label_19:
          hwv hwv4 = this.rHB();
          hwv4.FmV(hwv4.Amo() + "!(" + hwv2.Amo() + ")");
          ++index2;
          goto label_15;
        }
label_5:
        hwvList1 = new List<hwv>((IEnumerable<hwv>) this.nmE);
        num1 = 5;
      }
label_22:
      return stringBuilder.ToString();
    }

    internal static bool xLz() => awg.WLx == null;

    internal static awg gbK() => awg.WLx;

    internal static int gbN([In] object obj0) => ((List<hwv>) obj0).Count;

    internal static void qbZ([In] object obj0, [In] object obj1) => ((hwv) obj0).nmO((string) obj1);

    internal static object vbv([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);
  }
}
