// Decompiled with JetBrains decompiler
// Type: PcInfo
// Assembly: PunisherMiner, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5E38855F-8014-4FAB-90F8-2AFCCACBC0F6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-a984daf88ca5b95be07c38888abaac8d0f4241cc67b3fc5e8e798a5fed89bc6d.exe

using System.IO;
using System.Management;
using System.Net;

public class PcInfo
{
  public static GpuType Gpu
  {
    get
    {
      string str = PcInfo.GpuName();
      if (str.Contains("NVIDIA") || str.Contains("GEFORCE") || str.Contains("nvidia") || str.Contains("geforce"))
        return GpuType.Nvidia;
      return str.Contains("AMD") || str.Contains("amd") ? GpuType.AMD : GpuType.Undefined;
    }
  }

  public static string GetIP()
  {
    try
    {
      return new StreamReader(WebRequest.Create("http://checkip.dyndns.org").GetResponse().GetResponseStream()).ReadToEnd().Trim().Split(':')[1].Substring(1).Split('<')[0];
    }
    catch
    {
      return "";
    }
  }

  public static string GpuName()
  {
    try
    {
      string str = string.Empty;
      using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT * FROM Win32_DisplayConfiguration"))
      {
        foreach (ManagementObject managementObject in managementObjectSearcher.Get())
          str = str + managementObject["Description"].ToString() + "; ";
      }
      return !string.IsNullOrEmpty(str) ? str : "N/A";
    }
    catch
    {
      return "Unknown";
    }
  }
}
