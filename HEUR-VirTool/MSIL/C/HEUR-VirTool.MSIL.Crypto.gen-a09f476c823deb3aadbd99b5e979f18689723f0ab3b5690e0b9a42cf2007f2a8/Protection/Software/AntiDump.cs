// Decompiled with JetBrains decompiler
// Type: Aura.Protection.Software.AntiDump
// Assembly: Kudeta Crypter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 16F9F4AC-EE0C-4DE1-A1E6-B297F2D4338B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-VirTool.MSIL.Crypto.gen-a09f476c823deb3aadbd99b5e979f18689723f0ab3b5690e0b9a42cf2007f2a8.exe

using Aura.Protection.Software.Runtime;
using Aura.Services;
using dnlib.DotNet;
using dnlib.DotNet.Emit;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Aura.Protection.Software
{
  internal class AntiDump
  {
    public static void Execute(ModuleDef mod)
    {
      ModuleDefMD moduleDefMd = ModuleDefMD.Load(typeof (AntiDumpHandler).Module);
      MethodDef staticConstructor = mod.GlobalType.FindOrCreateStaticConstructor();
      int rid = (int) MDToken.ToRID(typeof (AntiDumpHandler).MetadataToken);
      MethodDef methodDef = (MethodDef) InjectHelper.Inject(moduleDefMd.ResolveTypeDef((uint) rid), mod.GlobalType, mod).Single<IDnlibDef>((Func<IDnlibDef, bool>) (method => UTF8String.op_Equality(((IFullName) method).Name, "Initialize")));
      staticConstructor.Body.Instructions.Insert(0, Instruction.Create(OpCodes.Call, (IMethod) methodDef));
      foreach (MethodDef method in (IEnumerable<MethodDef>) mod.GlobalType.Methods)
      {
        if (!UTF8String.op_Inequality(method.Name, ".ctor"))
        {
          mod.GlobalType.Remove(method);
          break;
        }
      }
    }
  }
}
