// Decompiled with JetBrains decompiler
// Type: ⁮⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Collections;
using System.IO;

public sealed class \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮
{
  private readonly short \u202C‌‎⁯⁬⁫‍⁯‬⁪‭‏‎‫‭‫⁯‭​‎‍⁮⁮‭⁪‬⁮‏⁫⁮‪‏‏⁯‫‬‪⁮‎‌‮;
  private readonly IList \u202D‪‌‬⁮⁬‏⁯‏‍​‫‫⁮‫‍‎‎⁪‎‌⁭‫‍​⁮‌‭‍‪‫⁪‍‮⁭⁮⁪‏‌‭‮;

  public \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮(short _param1, IList _param2)
  {
    if (!\u200F‬​‫‏‪​​​‌⁪‮‪‪⁫​‌‫‮⁮‌‎‬‮​⁪‌⁬⁫⁭‎​​⁬‬‌‎⁫‬‬‮.\u200B‎​‮⁭‮‍⁬‎‫‬‌⁪‫​‭‍⁯‭‪‭⁬‍⁬‭⁪‬⁮‬‎‏‮‫⁭‭‎‍⁬⁭⁬‮(_param1))
      throw new ArgumentException("not a valid CertChainType value", "type");
    if (_param2 == null || _param2.Count < 1)
      throw new ArgumentException("must have length > 0", "urlAndHashList");
    if (_param1 == (short) 1 && _param2.Count != 1)
      throw new ArgumentException("must contain exactly one entry when type is " + \u200F‬​‫‏‪​​​‌⁪‮‪‪⁫​‌‫‮⁮‌‎‬‮​⁪‌⁬⁫⁭‎​​⁬‬‌‎⁫‬‬‮.\u202E⁭‏‌​⁯‍⁪⁯⁬‮​‮⁪⁪⁬‬⁭⁬⁪‭⁭‍‏⁫⁫‫‎‬⁮‌‮⁫‮‍‏‎⁬⁯⁫‮(_param1), "urlAndHashList");
    this.\u202C‌‎⁯⁬⁫‍⁯‬⁪‭‏‎‫‭‫⁯‭​‎‍⁮⁮‭⁪‬⁮‏⁫⁮‪‏‏⁯‫‬‪⁮‎‌‮ = _param1;
    this.\u202D‪‌‬⁮⁬‏⁯‏‍​‫‫⁮‫‍‎‎⁪‎‌⁭‫‍​⁮‌‭‍‪‫⁪‍‮⁭⁮⁪‏‌‭‮ = _param2;
  }

  public short \u202E‪⁪‏​⁫⁯⁪⁯‎⁮‌‫⁪⁬‮‏‍‍​‫‍⁯‭⁫‮⁪⁯⁯‫⁯‪‮‭⁪‍⁯‎⁭‍‮ => this.\u202C‌‎⁯⁬⁫‍⁯‬⁪‭‏‎‫‭‫⁯‭​‎‍⁮⁮‭⁪‬⁮‏⁫⁮‪‏‏⁯‫‬‪⁮‎‌‮;

  public IList \u206D⁪‌‫‌‭⁯‏‍‏⁮⁫‮‌⁯‏‏⁪‎‬‏‫‎‪‬​⁫⁭⁮‍‪‌‮‏‍‮‫‎⁪⁪‮ => this.\u202D‪‌‬⁮⁬‏⁯‏‍​‫‫⁮‫‍‎‎⁪‎‌⁭‫‍​⁮‌‭‍‪‫⁪‍‮⁭⁮⁪‏‌‭‮;

  public void \u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮(Stream _param1)
  {
    \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(this.\u202C‌‎⁯⁬⁫‍⁯‬⁪‭‏‎‫‭‫⁯‭​‎‍⁮⁮‭⁪‬⁮‏⁫⁮‪‏‏⁯‫‬‪⁮‎‌‮, _param1);
    \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮.\u206D‪‍⁯⁯‍‪⁪‫‭​‎‮‏‮‭⁬‫⁫‮⁮​‮‬‌‪⁫‪‍‪⁯‮‪‏‬⁯‏‌​⁮‮ obj1 = new \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮.\u206D‪‍⁯⁯‍‪⁪‫‭​‎‮‏‮‭⁬‫⁫‮⁮​‮‬‌‪⁫‪‍‪⁯‮‪‏‬⁯‏‌​⁮‮();
    foreach (\u200C⁬‬⁭‏‏⁬⁫⁮‏‎‬⁯⁫⁮⁮⁫‌‮⁬⁮‬‮‏‫‬‏⁫‏⁪‫⁭⁮‭​​‎‌‌‭‮ obj2 in (IEnumerable) this.\u202D‪‌‬⁮⁬‏⁯‏‍​‫‫⁮‫‍‎‎⁪‎‌⁭‫‍​⁮‌‭‍‪‫⁪‍‮⁭⁮⁪‏‌‭‮)
      obj2.\u206C‮⁯‌⁯‌⁭⁫‪‭​‪‫⁫⁪⁯⁭⁫‎⁬‫‫⁮‎‮⁬⁪‮‎‫‭⁪⁭⁫⁪‪⁪⁬‭‫‮((Stream) obj1);
    obj1.\u206A‮‫⁮⁮‪‭‪‬‌​‪‪⁬‬‍⁬⁫‫‎‫‬⁫⁫‮⁭‍‭‪‎‎⁯​⁪‭‌‮‎⁭‮‮(_param1);
  }

  public static \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮ \u202B‪​⁪‍⁫‮‏‪‎‏‫⁮‫⁬‬⁭‏⁯⁭‮⁪‏‮⁯‪‏⁪‪‌‭⁭‪‮‏‭⁭‍‪⁪‮(
    \u206D⁪⁭‫‬‮⁯‭⁮​‍​⁪⁬⁯‏‍⁮‮‍‬​‍‌‏‭⁯‪‬‎⁪‪‮⁬‎‬‏‪​⁮‮ _param0,
    Stream _param1)
  {
    short num1 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206D​‭‎‪‌⁯‬‬⁪‍‬‎⁬⁯‭‏⁮‭⁪⁯⁫⁪‬‬⁭‫⁭​​‬‬⁭‭⁫‍‬‎⁭⁫‮(_param1);
    if (!\u200F‬​‫‏‪​​​‌⁪‮‪‪⁫​‌‫‮⁮‌‎‬‮​⁪‌⁬⁫⁭‎​​⁬‬‌‎⁫‬‬‮.\u200B‎​‮⁭‮‍⁬‎‫‬‌⁪‫​‭‍⁯‭‪‭⁬‍⁬‭⁪‬⁮‬‎‏‮‫⁭‭‎‍⁬⁭⁬‮(num1))
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
    int num2 = \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206F⁯‌⁯⁬​‭​‭⁮‭⁮‭‬‍⁭‍‎​⁯⁫​‮⁯‏‌⁪⁯​‭⁪⁬⁪‪⁫​‌⁫‎⁮‮(_param1);
    MemoryStream memoryStream = num2 >= 1 ? new MemoryStream(\u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u206A⁫⁯⁯⁫‫⁬‬​‬‪‫‮⁯‎‌‭‫‏‭‭‍‍⁭‭⁪‌‭⁬‮‬‮‭‫‍‪​⁪​⁯‮(num2, _param1), false) : throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
    IList list = \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200C⁮‬‎⁪‌⁮‬​⁬⁭​‏⁮​‍‌⁮‮⁪⁪⁫‪‫‎⁮‎⁬​​‏⁪‪‍‬‪⁬⁫⁪‏‮();
    while (memoryStream.Position < memoryStream.Length)
    {
      \u200C⁬‬⁭‏‏⁬⁫⁮‏‎‬⁯⁫⁮⁮⁫‌‮⁬⁮‬‮‏‫‬‏⁫‏⁪‫⁭⁮‭​​‎‌‌‭‮ obj = \u200C⁬‬⁭‏‏⁬⁫⁮‏‎‬⁯⁫⁮⁮⁫‌‮⁬⁮‬‮‏‫‬‏⁫‏⁪‫⁭⁮‭​​‎‌‌‭‮.\u202B‪​⁪‍⁫‮‏‪‎‏‫⁮‫⁬‬⁭‏⁯⁭‮⁪‏‮⁯‪‏⁪‪‌‭⁭‪‮‏‭⁭‍‪⁪‮(_param0, (Stream) memoryStream);
      list.Add((object) obj);
    }
    if (num1 == (short) 1 && list.Count != 1)
      throw new \u202B‬⁪⁮⁬⁮‫‏‫⁯‮⁬‫‬‍⁬⁮⁬‬‫‫⁮‎‎⁬​‍‎‍‏​⁯‍‬‫‍‫‮⁯‏‮((short) 50);
    return new \u206E⁬‌⁬⁯‮⁫‫‭⁪‪‪⁪⁪⁫‎‍⁭‮⁯‌‪⁪‭‌​⁭‫‪‭‬⁯‍‏‏‏‍‌⁮‏‮(num1, list);
  }

  internal class \u206D‪‍⁯⁯‍‪⁪‫‭​‎‮‏‮‭⁬‫⁫‮⁮​‮‬‌‪⁫‪‍‪⁯‮‪‏‬⁯‏‌​⁮‮ : MemoryStream
  {
    internal \u206D‪‍⁯⁯‍‪⁪‫‭​‎‮‏‮‭⁬‫⁫‮⁮​‮‬‌‪⁫‪‍‪⁯‮‪‏‬⁯‏‌​⁮‮() => \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(0, (Stream) this);

    internal void \u206A‮‫⁮⁮‪‭‪‬‌​‪‪⁬‬‍⁬⁫‫‎‫‬⁫⁫‮⁭‍‭‪‎‎⁯​⁪‭‌‮‎⁭‮‮(Stream _param1)
    {
      int num = (int) this.Length - 2;
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200F⁪‬‏‍⁭‬‫‬⁯‬‎‪⁪‮‫⁬‍‬⁪⁮‍‍‮‎‍⁬‮‪‏‭‬⁫‎‭‬‌‌​‭‮(num);
      this.Seek(0L, SeekOrigin.Begin);
      \u202D⁯‎‌‬⁭⁬⁫‬⁫⁪​⁫⁪⁬​⁮‌‮‌⁮‏⁫‏‏‪‪⁬‍⁫‫‮⁫⁭‬⁭‌‮‭‏‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(num, (Stream) this);
      \u202A‪​‏‌‫‫‎‏⁬⁫⁬‫⁮‌‬‬‮‎⁫‎‍⁮⁪‮‫⁬⁭‬‪‫‮‮‪‮‌‮‫‭‏‮.\u200D⁯‎⁪‫⁪‭⁯⁭‏⁪⁯​‭‏‭‌⁬‭‎‎⁪‮‌‮⁫‍⁮‭‌‎⁭⁪‬⁭‬⁭‎⁭‏‮((MemoryStream) this, _param1);
      \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u202A‎​‬‌‎‬⁫​‭⁮​‍⁫‬‎‍‪‪⁮​⁪⁮‫⁯​​‎​‫‍⁬⁭‏‌​‎‏‏‮‮((Stream) this);
    }
  }
}
