// Decompiled with JetBrains decompiler
// Type: ‍⁪‬‎​‏‮⁯‎‮‭​⁮‏⁪‍‫​⁭⁯⁫‍‭⁯⁪⁫⁬‪‎‫‎‫⁭⁯‭⁪‎‬‎‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.IO;
using System.Text;

internal class \u200D⁪‬‎​‏‮⁯‎‮‭​⁮‏⁪‍‫​⁭⁯⁫‍‭⁯⁪⁫⁬‪‎‫‎‫⁭⁯‭⁪‎‬‎‏‮
{
  public static byte[] \u206A‭‍‍‮⁭⁪‍‫‬⁭‌⁬​⁫⁭⁬⁪‏‫‬​⁬⁪‍‭⁭‍​‮⁬⁬⁯‍⁭⁪⁪‬‬‭‮(string _param0)
  {
    try
    {
      string str = _param0 + ".bak";
      if (\u200D⁪‬‎​‏‮⁯‎‮‭​⁮‏⁪‍‫​⁭⁯⁫‍‭⁯⁪⁫⁬‪‎‫‎‫⁭⁯‭⁪‎‬‎‏‮.\u202A⁭‬​‍‍⁮‎‎‭​‬‏‎⁮‬​‫⁪‪⁬⁯‏‌⁯‭⁫‬​‏‭​⁫⁬⁯⁮‍⁫​⁬‮(_param0))
      {
        try
        {
          return Encoding.UTF8.GetBytes(Encoding.UTF8.GetString(File.ReadAllBytes(_param0)));
        }
        catch
        {
          if (File.Exists(str))
            File.Delete(str);
          File.Copy(_param0, str, true);
          byte[] buffer;
          using (FileStream fileStream = new FileStream(str, FileMode.Open, FileAccess.Read))
          {
            buffer = new byte[fileStream.Length];
            fileStream.Read(buffer, 0, (int) fileStream.Length);
          }
          File.Delete(str);
          return buffer;
        }
      }
      else
      {
        if (File.Exists(str))
          File.Delete(str);
        File.Copy(_param0, str, true);
        byte[] buffer;
        using (FileStream fileStream = new FileStream(str, FileMode.Open, FileAccess.Read))
        {
          buffer = new byte[fileStream.Length];
          fileStream.Read(buffer, 0, (int) fileStream.Length);
        }
        File.Delete(str);
        return buffer;
      }
    }
    catch
    {
      return new byte[0];
    }
  }

  internal static string \u202E‪⁪⁮‎‎​‍⁮‬‍‏‭‏⁮⁯‎⁪⁭⁭‭⁭⁬⁪‪‫‌‬⁮‌⁭‭⁪⁪​​⁭‌‏‭‮() => \u200D⁪‬‎​‏‮⁯‎‮‭​⁮‏⁪‍‫​⁭⁯⁫‍‭⁯⁪⁫⁬‪‎‫‎‫⁭⁯‭⁪‎‬‎‏‮.\u200B‪⁬​‭⁬‪‭⁮‬‪⁫⁫‬⁫⁬‬⁫‌‬​‬​⁬‎‎⁪‍‭⁯‏‏‮‫​‪‬‎⁪‫‮("xfiles");

  public static string \u200B‪⁬​‭⁬‪‭⁮‬‪⁫⁫‬⁫⁬‬⁫‌‬​‬​⁬‎‎⁪‍‭⁯‏‏‮‫​‪‬‎⁪‫‮(string _param0)
  {
    Encoding encoding = \u200D⁪‬‎​‏‮⁯‎‮‭​⁮‏⁪‍‫​⁭⁯⁫‍‭⁯⁪⁫⁬‪‎‫‎‫⁭⁯‭⁪‎‬‎‏‮.\u206C⁭‭‍⁮‮‌‪⁫‮‌⁯⁯⁬⁯‌‌‬‬‮‬‮⁬⁫‎‍⁮‭‏‬‫‬⁭‬​‮‌⁮⁫‍‮();
    byte[] bytes = \u200F‪‎⁯⁬⁪⁬‎‎⁫‍⁬⁮‎‍⁪​⁯‬⁭⁫‍‌​‭⁪⁭‮⁬‍‌‏⁯‭‌⁯‎‬‪‬‮.\u206C‭‬‮‌⁪⁪‍‮‮⁯‭‭‍‪⁯‪​‮‫‮⁯‪‌​‪‭‪‎​‫⁪‮⁬⁫‍‬‮⁬‬‮(_param0, encoding);
    return encoding.GetString(bytes);
  }

  private static Encoding \u206C⁭‭‍⁮‮‌‪⁫‮‌⁯⁯⁬⁯‌‌‬‬‮‬‮⁬⁫‎‍⁮‭‏‬‫‬⁭‬​‮‌⁮⁫‍‮() => (Encoding) new UTF8Encoding();

  private static bool \u202A⁭‬​‍‍⁮‎‎‭​‬‏‎⁮‬​‫⁪‪⁬⁯‏‌⁯‭⁫‬​‏‭​⁫⁬⁯⁮‍⁫​⁬‮(string _param0)
  {
    try
    {
      File.GetAccessControl(_param0);
      return true;
    }
    catch (UnauthorizedAccessException ex)
    {
      return false;
    }
  }
}
