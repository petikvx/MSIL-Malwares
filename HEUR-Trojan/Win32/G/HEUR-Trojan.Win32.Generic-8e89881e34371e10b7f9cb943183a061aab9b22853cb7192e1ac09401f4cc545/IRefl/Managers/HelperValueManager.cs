// Decompiled with JetBrains decompiler
// Type: IRefl.Managers.HelperValueManager
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Definitions;
using IRefl.Producers;
using ProjNet.Candidates;
using ProjNet.Common;
using ProjNet.Structs;
using System;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;

namespace IRefl.Managers
{
  public class HelperValueManager : Rule, DispatcherValueManager, CodeObjectProducer
  {
    private double account;
    private StructTokenizerDef m_Iterator;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal HelperValueManager(
      double item,
      StructTokenizerDef second,
      string template,
      string visitor2,
      long offsetinstance3,
      string key4,
      string connection5,
      string vis6)
    {
      int num1 = 4;
      if (true)
        goto label_3;
label_1:
      // ISSUE: explicit constructor call
      base.\u002Ector(template, visitor2, offsetinstance3, key4, connection5, vis6);
      goto label_5;
label_2:
      int num2;
      num1 = num2;
label_3:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            goto label_1;
          case 2:
          case 3:
            goto label_5;
          case 4:
            goto label_6;
          case 5:
            goto label_7;
          default:
            if (HelperValueManager.PushWrapper())
            {
              num1 = 3;
              continue;
            }
            goto label_5;
        }
      }
label_7:
      return;
label_6:
      PageAdvisorStructBuilder.PrepareCreator();
      num2 = 0;
      goto label_2;
label_5:
      this.account = item;
      this.m_Iterator = second;
      num2 = 5;
      goto label_2;
    }

    public static HelperValueManager Greenwich
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(0.0, (StructTokenizerDef) Message.RunProcess(), nameof (Greenwich), "EPSG", 8901L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Lisbon
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(-9.0754862, (StructTokenizerDef) Message.RunProcess(), nameof (Lisbon), "EPSG", 8902L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Paris
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(2.5969213, (StructTokenizerDef) Message.RunProcess(), nameof (Paris), "EPSG", 8903L, string.Empty, string.Empty, "Value adopted by IGN (Paris) in 1936. Equivalent to 2 deg 20min 14.025sec. Preferred by EPSG to earlier value of 2deg 20min 13.95sec (2.596898 grads) used by RGS London.");
    }

    public static HelperValueManager Bogota
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(-74.04513, (StructTokenizerDef) Message.RunProcess(), nameof (Bogota), "EPSG", 8904L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Madrid
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(-3.411658, (StructTokenizerDef) Message.RunProcess(), nameof (Madrid), "EPSG", 8905L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Rome
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(12.27084, (StructTokenizerDef) Message.RunProcess(), nameof (Rome), "EPSG", 8906L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Bern
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(7.26225, (StructTokenizerDef) Message.RunProcess(), nameof (Bern), "EPSG", 8907L, string.Empty, string.Empty, "1895 value. Newer value of 7 deg 26 min 22.335 sec E determined in 1938.");
    }

    public static HelperValueManager Jakarta
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(106.482779, (StructTokenizerDef) Message.RunProcess(), nameof (Jakarta), "EPSG", 8908L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Ferro
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(-17.4, (StructTokenizerDef) Message.RunProcess(), nameof (Ferro), "EPSG", 8909L, string.Empty, string.Empty, "Used in Austria and former Czechoslovakia.");
    }

    public static HelperValueManager Brussels
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(4.220471, (StructTokenizerDef) Message.RunProcess(), nameof (Brussels), "EPSG", 8910L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Stockholm
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(18.03298, (StructTokenizerDef) Message.RunProcess(), nameof (Stockholm), "EPSG", 8911L, string.Empty, string.Empty, string.Empty);
    }

    public static HelperValueManager Athens
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(23.4258815, (StructTokenizerDef) Message.RunProcess(), nameof (Athens), "EPSG", 8912L, string.Empty, string.Empty, "Used in Greece for older mapping based on Hatt projection.");
    }

    public static HelperValueManager Oslo
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => new HelperValueManager(10.43225, (StructTokenizerDef) Message.RunProcess(), nameof (Oslo), "EPSG", 8913L, string.Empty, string.Empty, "Formerly known as Kristiania or Christiania.");
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double InterruptItem() => this.account;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RevertItem(double v) => this.account = v;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public StructTokenizerDef ComputeItem() => this.m_Iterator;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void ConcatItem(StructTokenizerDef asset) => this.m_Iterator = asset;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertStatus()
    {
      int num = 1;
      StringBuilder stringBuilder;
      string str;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            str = stringBuilder.ToString();
            num = 6;
            continue;
          case 1:
            stringBuilder = new StringBuilder();
            num = 4;
            continue;
          case 2:
          case 5:
            stringBuilder.Append("]");
            goto case 0;
          case 4:
            stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "PRIMEM[\"{0}\", {1}", new object[2]
            {
              (object) this.Name,
              (object) this.InterruptItem()
            });
            if (!string.IsNullOrEmpty(this.CountItem()) && this.SelectItem() > 0L)
            {
              stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.CountItem(), (object) this.SelectItem());
              num = 5;
              continue;
            }
            goto case 2;
          case 6:
            goto label_8;
          default:
            num = 0;
            continue;
        }
      }
label_8:
      return str;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string AssetItem() => string.Format((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "<CS_PrimeMeridian Longitude=\"{0}\" >{1}{2}</CS_PrimeMeridian>", new object[3]
    {
      (object) this.InterruptItem(),
      (object) this.ListRegistry(),
      (object) this.ComputeItem().AssetItem()
    });

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool InvokeItem(object task)
    {
      int num1 = 4;
      HelperValueManager helperValueManager;
      bool flag;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 4:
            flag = !(task is HelperValueManager);
            num1 = 5;
            continue;
          case 1:
          case 5:
            if (flag)
            {
              num1 = 3;
              continue;
            }
            helperValueManager = task as HelperValueManager;
            goto case 2;
          case 2:
            if (helperValueManager.ComputeItem().InvokeItem((object) this.ComputeItem()))
            {
              num1 = 6;
              continue;
            }
            goto label_11;
          case 3:
            goto label_6;
          case 6:
            goto label_10;
          default:
            num1 = 2;
            continue;
        }
      }
label_6:
      return false;
label_10:
      int num2 = helperValueManager.InterruptItem() == this.InterruptItem() ? 1 : 0;
      goto label_12;
label_11:
      num2 = 0;
label_12:
      return num2 != 0;
    }

    internal static bool PushWrapper() => true;

    internal static bool InterruptWrapper() => false;
  }
}
