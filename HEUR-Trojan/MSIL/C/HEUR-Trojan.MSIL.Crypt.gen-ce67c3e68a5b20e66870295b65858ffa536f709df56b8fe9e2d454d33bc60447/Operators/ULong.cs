// Decompiled with JetBrains decompiler
// Type: GenericMath.Operators.ULong
// Assembly: NDp6, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1E52A124-4038-410B-8375-93D4A037FA1F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-ce67c3e68a5b20e66870295b65858ffa536f709df56b8fe9e2d454d33bc60447.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;

namespace GenericMath.Operators
{
  [StandardModule]
  [HideModuleName]
  internal sealed class ULong
  {
    private static ulong UnaryMinus(ulong V)
    {
      if (System.Decimal.Compare(new System.Decimal(V), 0M) == 0)
        return 0;
      throw new OverflowException("Arithmetic operation resulted in an overflow.");
    }

    internal static void Initialize()
    {
      Func<ulong, ulong> func1;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D0 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func1 = ULong._Closure\u0024__.\u0024I1\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D0 = func1 = (Func<ulong, ulong>) (V => V);
      }
      Arithmetic<ulong>.UnaryPlus = func1;
      Arithmetic<ulong>.UnaryMinus = new Func<ulong, ulong>(ULong.UnaryMinus);
      Func<ulong, ulong, ulong> func2;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D1 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func2 = ULong._Closure\u0024__.\u0024I1\u002D1;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D1 = func2 = (Func<ulong, ulong, ulong>) ((L, R) => {checked {L + R;}});
      }
      Arithmetic<ulong>.Add = func2;
      Func<ulong, ulong, ulong> func3;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D2 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func3 = ULong._Closure\u0024__.\u0024I1\u002D2;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D2 = func3 = (Func<ulong, ulong, ulong>) ((L, R) => {checked {L - R;}});
      }
      Arithmetic<ulong>.Subtract = func3;
      Func<ulong, ulong, ulong> func4;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D3 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func4 = ULong._Closure\u0024__.\u0024I1\u002D3;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D3 = func4 = (Func<ulong, ulong, ulong>) ((L, R) => {checked {L * R;}});
      }
      Arithmetic<ulong>.Multiply = func4;
      Func<ulong, ulong, ulong> func5;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D4 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func5 = ULong._Closure\u0024__.\u0024I1\u002D4;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D4 = func5 = (Func<ulong, ulong, ulong>) ((L, R) => L / R);
      }
      Arithmetic<ulong>.Divide = func5;
      Func<ulong, ulong, ulong> func6;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D5 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func6 = ULong._Closure\u0024__.\u0024I1\u002D5;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D5 = func6 = (Func<ulong, ulong, ulong>) ((L, R) => {checked {(ulong) Math.Round(Math.Pow(unchecked ((double) L), unchecked ((double) R)));}});
      }
      Arithmetic<ulong>.Power = func6;
      Func<ulong, ulong, ulong> func7;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D6 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func7 = ULong._Closure\u0024__.\u0024I1\u002D6;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D6 = func7 = (Func<ulong, ulong, ulong>) ((L, R) => L / R);
      }
      Arithmetic<ulong>.IntegerDivide = func7;
      Func<ulong, ulong, ulong> func8;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D7 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func8 = ULong._Closure\u0024__.\u0024I1\u002D7;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D7 = func8 = (Func<ulong, ulong, ulong>) ((L, R) => L % R);
      }
      Arithmetic<ulong>.Modulus = func8;
      Func<ulong, ulong, bool> func9;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D8 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func9 = ULong._Closure\u0024__.\u0024I1\u002D8;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D8 = func9 = (Func<ulong, ulong, bool>) ((L, R) => (long) L == (long) R);
      }
      Arithmetic<ulong>.Equal = func9;
      Func<ulong, ulong, bool> func10;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D9 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func10 = ULong._Closure\u0024__.\u0024I1\u002D9;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D9 = func10 = (Func<ulong, ulong, bool>) ((L, R) => (long) L != (long) R);
      }
      Arithmetic<ulong>.NotEqual = func10;
      Func<ulong, ulong, bool> func11;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D10 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func11 = ULong._Closure\u0024__.\u0024I1\u002D10;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D10 = func11 = (Func<ulong, ulong, bool>) ((L, R) => L < R);
      }
      Arithmetic<ulong>.LessThan = func11;
      Func<ulong, ulong, bool> func12;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D11 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func12 = ULong._Closure\u0024__.\u0024I1\u002D11;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D11 = func12 = (Func<ulong, ulong, bool>) ((L, R) => L <= R);
      }
      Arithmetic<ulong>.LessThanEqual = func12;
      Func<ulong, ulong, bool> func13;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D12 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func13 = ULong._Closure\u0024__.\u0024I1\u002D12;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D12 = func13 = (Func<ulong, ulong, bool>) ((L, R) => L > R);
      }
      Arithmetic<ulong>.MoreThan = func13;
      Func<ulong, ulong, bool> func14;
      // ISSUE: reference to a compiler-generated field
      if (ULong._Closure\u0024__.\u0024I1\u002D13 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func14 = ULong._Closure\u0024__.\u0024I1\u002D13;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        ULong._Closure\u0024__.\u0024I1\u002D13 = func14 = (Func<ulong, ulong, bool>) ((L, R) => L >= R);
      }
      Arithmetic<ulong>.MoreThanEqual = func14;
    }
  }
}
