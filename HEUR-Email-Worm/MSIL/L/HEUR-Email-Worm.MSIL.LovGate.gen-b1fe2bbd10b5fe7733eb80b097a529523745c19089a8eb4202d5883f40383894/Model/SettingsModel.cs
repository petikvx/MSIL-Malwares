// Decompiled with JetBrains decompiler
// Type: CiscoAnyconnectControl.Model.SettingsModel
// Assembly: PermissionSetEntryFiel, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FE7870A8-3D72-435A-B1B6-C43A7BD9D85D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Email-Worm.MSIL.LovGate.gen-b1fe2bbd10b5fe7733eb80b097a529523745c19089a8eb4202d5883f40383894.exe

using System;
using System.ComponentModel;

namespace CiscoAnyconnectControl.Model
{
  [Serializable]
  public class SettingsModel : INotifyPropertyChanged
  {
    private bool _savePassword = true;
    private bool _connectOnSystemStartup = true;
    private bool _reconnectOnConnectionLoss = true;
    private bool _startGuiOnLogon = false;
    private bool _notifyAfterX = true;
    private int _notifyAfterHours = 9;
    private bool _closeToTray;

    public bool SavePassword
    {
      get => this._savePassword;
      set
      {
        if (this._savePassword == value)
          return;
        this._savePassword = value;
        this.OnPropertyChanged();
      }
    }

    public bool ConnectOnSystemStartup
    {
      get => this._connectOnSystemStartup;
      set
      {
        if (this._connectOnSystemStartup == value)
          return;
        this._connectOnSystemStartup = value;
        this.OnPropertyChanged();
      }
    }

    public bool ReconnectOnConnectionLoss
    {
      get => this._reconnectOnConnectionLoss;
      set
      {
        if (this._reconnectOnConnectionLoss == value)
          return;
        this._reconnectOnConnectionLoss = value;
        this.OnPropertyChanged();
      }
    }

    public bool StartGuiOnLogon
    {
      get => this._startGuiOnLogon;
      set
      {
        if (this._startGuiOnLogon == value)
          return;
        this._startGuiOnLogon = value;
        this.OnPropertyChanged();
      }
    }

    public bool NotifyAfterX
    {
      get => this._notifyAfterX;
      set
      {
        if (this._notifyAfterX == value)
          return;
        this._notifyAfterX = value;
        this.OnPropertyChanged();
      }
    }

    public int NotifyAfterHours
    {
      get => this._notifyAfterHours;
      set
      {
        if (this._notifyAfterHours == value)
          return;
        this._notifyAfterHours = value;
        this.OnPropertyChanged();
      }
    }

    public bool CloseToTray
    {
      get => this._closeToTray;
      set
      {
        if (this._closeToTray == value)
          return;
        this._closeToTray = value;
        this.OnPropertyChanged();
      }
    }

    [field: NonSerialized]
    public event PropertyChangedEventHandler PropertyChanged;

    [NotifyPropertyChangedInvocator]
    protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
    {
      PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
      if (propertyChanged == null)
        return;
      propertyChanged((object) this, new PropertyChangedEventArgs(propertyName));
    }
  }
}
