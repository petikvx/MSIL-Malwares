// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ViewModels.EffectSizeVM
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using Standard_Sales.Calculators;
using Standard_Sales.Models;
using Standard_Sales.ResultExporters;
using Standard_Sales.ViewModels.Framework;
using System;
using System.Windows.Input;

namespace Standard_Sales.ViewModels
{
  public class EffectSizeVM : SimpleViewModel
  {
    private readonly IStandard_Salesulator _cohensCalculator;
    private readonly ISaveFileService _saveFileService;
    private readonly IResultExporter _resultExporter;
    private IBaseViewModel _content;
    private ICommand _calculateCommand;

    public EffectSizeVM(
      IStandard_Salesulator cohensCalculator,
      ISaveFileService saveFileService,
      IResultExporter resultExporter,
      IEffectSizeSetupVM effectSizeSetupVM)
    {
label_1:
      int num1 = -1864046781;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1822565327)) % 6U)
        {
          case 0:
            this._cohensCalculator = cohensCalculator;
            num1 = (int) num2 * -1946824137 ^ -1591102320;
            continue;
          case 1:
            this._saveFileService = saveFileService;
            this._resultExporter = resultExporter;
            this.Content = (IBaseViewModel) effectSizeSetupVM;
            num1 = (int) num2 * 247634259 ^ -1647379871;
            continue;
          case 2:
            num1 = (int) num2 * 967766353 ^ -1983553407;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * -730044882 ^ 1439057579;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public ICommand CalculateCommand
    {
      get
      {
label_1:
        int num1 = 1365893627;
        ICommand calculateCommand;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 950024767)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              calculateCommand = this._calculateCommand ?? (this._calculateCommand = (ICommand) new RelayCommand((Action<object>) (p => this.OnCalculateCohens())));
              num1 = 335585946;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return calculateCommand;
      }
    }

    private void OnCalculateCohens()
    {
label_1:
      int num1 = 1336704186;
      ResultVM resultVm;
      EffectSizeResult result;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1714774366)) % 6U)
        {
          case 0:
            resultVm = new ResultVM(result);
            num1 = (int) num2 * -258768283 ^ 147298481;
            continue;
          case 1:
            num1 = (int) num2 * -101034656 ^ 714080583;
            continue;
          case 2:
            goto label_1;
          case 3:
            resultVm.CloseCommand = (ICommand) this.CloseCommand;
            num1 = (int) num2 * 1997613225 ^ -980962318;
            continue;
          case 4:
            result = this._cohensCalculator.CalculateEffectSize();
            num1 = (int) num2 * -1320177875 ^ -1052672034;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      resultVm.SaveCommand = (ICommand) new RelayCommand((Action<object>) (p =>
      {
        this.OnSaveResult(result);
label_1:
        int num3 = 1134549440;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 2055765618)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num3 = (int) num4 * 902727450 ^ 1810935034;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }));
      this.Content = (IBaseViewModel) resultVm;
    }

    private void OnSaveResult(EffectSizeResult result)
    {
label_1:
      int num1 = -1304451796;
      bool flag1;
      string fileName;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -798978383)) % 10U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 189617013 ^ 1791605760;
            continue;
          case 2:
            num1 = (int) num2 * 1525734203 ^ -1005813284;
            continue;
          case 3:
            this._saveFileService.Filter = \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(2247436440U);
            num1 = (int) num2 * 512065435 ^ 1230656611;
            continue;
          case 4:
            this._resultExporter.SaveResult(result, fileName);
            num1 = (int) num2 * 523985166 ^ 637629581;
            continue;
          case 5:
            fileName = this._saveFileService.FileName;
            num1 = (int) num2 * 399703972 ^ 1782975241;
            continue;
          case 6:
            bool? nullable = this._saveFileService.ShowDialog();
            bool flag2 = true;
            flag1 = nullable.GetValueOrDefault() == flag2 & nullable.HasValue;
            num1 = (int) num2 * 1067684710 ^ 2134270841;
            continue;
          case 7:
            num1 = (int) num2 * 741289190 ^ 1756385245;
            continue;
          case 8:
            int num3 = !flag1 ? 1662182131 : (num3 = 1312972432);
            num1 = num3 ^ (int) num2 * 970407105;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public IBaseViewModel Content
    {
      get
      {
        IBaseViewModel content = this._content;
label_1:
        int num1 = 1480504275;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 332494298)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -2011817975 ^ -1561044106;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return content;
      }
      set
      {
label_1:
        int num1 = -620388941;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1785027213)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              this._content = value;
              num1 = (int) num2 * 1461855223 ^ -579156582;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.RaisePropertyChanged();
      }
    }
  }
}
