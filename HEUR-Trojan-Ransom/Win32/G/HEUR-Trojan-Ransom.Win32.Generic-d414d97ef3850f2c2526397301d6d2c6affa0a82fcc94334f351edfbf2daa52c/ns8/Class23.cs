// Decompiled with JetBrains decompiler
// Type: ns8.Class23
// Assembly: TRM, Version=1.0.4536.20171, Culture=neutral, PublicKeyToken=null
// MVID: CEEA56E5-11FC-4347-A0BD-C051910E6353
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan-Ransom.Win32.Generic-d414d97ef3850f2c2526397301d6d2c6affa0a82fcc94334f351edfbf2daa52c.exe

using ns0;
using ns1;
using ns5;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace ns8
{
  internal sealed class Class23 : Class20
  {
    private Dictionary<ushort, ushort> dictionary_0 = new Dictionary<ushort, ushort>();

    public Class23()
    {
    }

    public Class23(string string_1)
      : base(string_1)
    {
    }

    internal Class23(IntPtr intptr_0) => this.vmethod_0(intptr_0);

    internal override IntPtr vmethod_0(IntPtr intptr_0)
    {
      this.dictionary_0.Clear();
      Class38.Struct3 structure;
      for (IntPtr ptr = base.vmethod_0(intptr_0); ptr.ToInt32() < intptr_0.ToInt32() + (int) this.struct2_0.ushort_0; ptr = new IntPtr(ptr.ToInt32() + Marshal.SizeOf((object) structure)))
      {
        structure = (Class38.Struct3) Marshal.PtrToStructure(ptr, typeof (Class38.Struct3));
        this.dictionary_0.Add(structure.ushort_0, structure.ushort_1);
      }
      return new IntPtr(intptr_0.ToInt32() + (int) this.struct2_0.ushort_0);
    }

    internal override void vmethod_1(BinaryWriter binaryWriter_0)
    {
      long position1 = binaryWriter_0.BaseStream.Position;
      base.vmethod_1(binaryWriter_0);
      Dictionary<ushort, ushort>.Enumerator enumerator = this.dictionary_0.GetEnumerator();
      long position2 = binaryWriter_0.BaseStream.Position;
      while (enumerator.MoveNext())
      {
        binaryWriter_0.Write(enumerator.Current.Key);
        binaryWriter_0.Write(enumerator.Current.Value);
      }
      Class15.smethod_5(binaryWriter_0, binaryWriter_0.BaseStream.Position - position2, position1 + 2L);
      Class15.smethod_2(binaryWriter_0);
      Class15.smethod_5(binaryWriter_0, binaryWriter_0.BaseStream.Position - position1, position1);
    }

    public ushort this[ushort ushort_0]
    {
      get => this.dictionary_0[ushort_0];
      set => this.dictionary_0[ushort_0] = value;
    }

    public override string vmethod_2(int int_0)
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.AppendLine(string.Format("{0}BEGIN", (object) new string(' ', int_0)));
      Dictionary<ushort, ushort>.Enumerator enumerator = this.dictionary_0.GetEnumerator();
      while (enumerator.MoveNext())
        stringBuilder.AppendLine(string.Format("{0}VALUE \"Translation\", 0x{1:x}, 0x{2:x}", (object) new string(' ', int_0 + 1), (object) enumerator.Current.Key, (object) enumerator.Current.Value));
      stringBuilder.AppendLine(string.Format("{0}END", (object) new string(' ', int_0)));
      return stringBuilder.ToString();
    }
  }
}
