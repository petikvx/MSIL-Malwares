// Decompiled with JetBrains decompiler
// Type: TK1x04EYHWjARRwci.nsWUrlWEaYTGncqLr
// Assembly: bouNMGxVgGi4SRgWO, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60
// MVID: 3F6A2AF1-3CCB-4F01-AA36-FA31C2E4CFE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Agent.gen-bc408b9f362db28b2e931ff336ec5661cc0ce27b0cdc0ce215fec1b7381aca7f.exe

using jgXgR7N4oMF35Cxps;
using Microsoft.TemplateEngine.Core.Contracts;
using System.Collections.Generic;
using System.Text;

namespace TK1x04EYHWjARRwci
{
  public class nsWUrlWEaYTGncqLr : IPathMatcher
  {
    private readonly IReadOnlyList<IPathMatcher> \u00373hS9cQyJ7IURcvWJ;
    private string Wm58apOVjoFgYhU1Z;

    public nsWUrlWEaYTGncqLr(IList<string> patternList)
    {
      List<IPathMatcher> ipathMatcherList = new List<IPathMatcher>();
      foreach (string pattern in (IEnumerable<string>) patternList)
        ipathMatcherList.Add((IPathMatcher) new Ekh5OnsgkVOYn59p6(pattern));
      this.\u00373hS9cQyJ7IURcvWJ = (IReadOnlyList<IPathMatcher>) ipathMatcherList;
    }

    public string O6NRWQ2XRUTdSmxO2
    {
      get
      {
        if (this.Wm58apOVjoFgYhU1Z == null)
        {
          StringBuilder stringBuilder = new StringBuilder(128);
          stringBuilder.AppendLine("Composite matcher - matches any of these:");
          foreach (IPathMatcher ipathMatcher in (IEnumerable<IPathMatcher>) this.\u00373hS9cQyJ7IURcvWJ)
            stringBuilder.AppendLine("\t" + ipathMatcher.Pattern);
          this.Wm58apOVjoFgYhU1Z = stringBuilder.ToString();
        }
        return this.Wm58apOVjoFgYhU1Z;
      }
    }

    public bool EIShFvG1OgYS5Guml(string w2PrSerBbOcqIhWwL)
    {
      foreach (IPathMatcher ipathMatcher in (IEnumerable<IPathMatcher>) this.\u00373hS9cQyJ7IURcvWJ)
      {
        if (ipathMatcher.IsMatch(w2PrSerBbOcqIhWwL))
          return true;
      }
      return false;
    }
  }
}
