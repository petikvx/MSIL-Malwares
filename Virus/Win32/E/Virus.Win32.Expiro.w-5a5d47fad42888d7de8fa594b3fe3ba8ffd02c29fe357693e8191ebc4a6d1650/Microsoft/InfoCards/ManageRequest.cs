// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.ManageRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: ADE0A079-11DB-4A46-8BDE-D2A592CA8DEA
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Expiro.w-5a5d47fad42888d7de8fa594b3fe3ba8ffd02c29fe357693e8191ebc4a6d1650.exe

using Microsoft.InfoCards.Diagnostics;
using System;
using System.Diagnostics;
using System.IO;
using System.Security.Principal;

namespace Microsoft.InfoCards
{
  internal class ManageRequest : ClientUIRequest
  {
    public ManageRequest(
      Process callingProcess,
      WindowsIdentity callingIdentity,
      InfoCardUIAgent uiAgent,
      IntPtr rpcHandle,
      Stream inArgs,
      Stream outArgs)
      : base(callingProcess, callingIdentity, uiAgent, rpcHandle, inArgs, outArgs, InfoCardUIAgent.CallMode.Manage, ExceptionList.AllNonFatal)
    {
      if (0L != inArgs.Length)
        throw InfoCardTrace.ThrowHelperError((Exception) new CommunicationException(SR.GetString("ServiceRequestBufferLengthInvalid")));
    }

    protected override void OnMarshalInArgs()
    {
    }

    protected override void OnProcess()
    {
      try
      {
        this.StartAndWaitForUIAgent();
      }
      catch (UserCancelledException ex)
      {
      }
    }

    protected override void OnMarshalOutArgs()
    {
    }
  }
}
