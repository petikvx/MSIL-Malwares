// Decompiled with JetBrains decompiler
// Type: 
// Assembly: 6051378510, Version=3.0.0.207, Culture=neutral, PublicKeyToken=null
// MVID: B4BCA71B-A4B7-F6D8-2B26-148B6DE2A0E1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bsymem.gen-66d5553f6356b491658972e5c5aaccf92cc8863c7e7921be112551e0c9cb25b2.exe

using System;
using System.IO;

internal sealed class \uE010
{
  public static void \uE024(Stream _param0, Stream _param1)
  {
    byte[] buffer = new byte[81920];
    \uE010.\uE003 obj = new \uE010.\uE003(_param0);
label_1:
    int count = obj.\uE026(buffer, 0, buffer.Length);
label_3:
    int num = \uE010.\uE025(72);
    while (true)
    {
      switch (num)
      {
        case 0:
          if (count > 0)
          {
            num = 1;
            continue;
          }
          goto label_7;
        case 1:
          _param1.Write(buffer, 0, count);
          num = 2;
          continue;
        case 2:
          goto label_1;
        default:
          goto label_3;
      }
    }
label_7:;
  }

  internal static int \uE025(int _param0)
  {
    switch (_param0 - ~((-414507728 >> 3) + 51813396))
    {
      case 0:
        return ~~449546469 - 449546467;
      case 1:
        return (861873648 - 41231970 ^ 417234570) - 674726145;
      case 3:
        return ~(-~-153403027 >> 1) - 76701512;
      case 4:
        return --6;
      case 5:
        return ~(-96031447 << 1 ^ 192062888);
      case 7:
        return -(~(455994302 - 507314400) - 51320101);
      case 8:
        return ~-12;
      case 13:
        return -323608539 ^ -323608540;
      default:
        return ~((~-803343699 ^ -367408560) + 602395314) ^ -370959948;
    }
  }

  public sealed class \uE003
  {
    private \uE010.\uE005 \uE002 = new \uE010.\uE005(32769);
    private \uE010.\uE004 \uE003;
    private \uE00F \uE00C;
    private int \uE00D = -1;
    private int \uE00E = -1;
    private bool \uE004;
    private int \uE005;
    private long \uE006;
    private long \uE007;
    private bool \uE008;
    private int \uE009;
    private bool \uE00A;

    public \uE003(Stream _param1) => this.\uE003 = new \uE010.\uE004(_param1);

    public int \uE026(byte[] _param1, int _param2, int _param3)
    {
      if ((_param3 == 0 ? 1 : 0) != 0 || (!this.\uE008 ? 1 : 0) == 0)
        return 0;
      int num1 = 0;
      if (num1 == 0)
        goto label_13;
label_3:
      this.\uE008 = !this.\uE027();
label_4:
      if (this.\uE00D >= 0 || (!this.\uE008 ? 1 : 0) == 0)
      {
        if ((!this.\uE008 ? 0 : 1) == 0)
        {
          int num2 = this.\uE028(_param1, _param2 + num1, _param3 - num1);
label_8:
          int num3 = \uE010.\uE025(82);
          while (true)
          {
            switch (num3)
            {
              case 0:
                num1 += num2;
                num3 = 2;
                continue;
              case 1:
                if (num2 > 0)
                {
                  num3 = 0;
                  continue;
                }
                goto label_12;
              case 2:
                goto label_13;
              default:
                goto label_8;
            }
          }
label_12:
          this.\uE00D = -1;
        }
        else
          goto label_14;
      }
      else
        goto label_3;
label_13:
      if (num1 < _param3)
        goto label_4;
label_14:
      return num1;
    }

    private bool \uE027()
    {
      if ((!this.\uE004 ? 662636595 - 662636594 : ~(655351940 - 655351941)) == 0)
        return -0 << 1 != 0;
      this.\uE006 = this.\uE003.\uE00E;
label_4:
      int num1 = \uE010.\uE025(219002492 - 219002346 >> 1);
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            this.\uE00C = (\uE00F) null;
            num1 = -393293245 + 393293247;
            continue;
          case 1:
            if (this.\uE00D == (-301396730 ^ -301396731))
            {
              num1 = 97889134 - 97889131;
              continue;
            }
            goto label_14;
          case 2:
            this.\uE00A = -(529551921 - 529551922) != 0;
            num1 = ~(-463675813 ^ 463675820);
            continue;
          case 3:
            this.\uE003.\uE032();
            num1 = -271489524 - -271489552 >> 2;
            continue;
          case 4:
            this.\uE005 = num2;
            num1 = (661556515 ^ 661556515) >> 3;
            continue;
          case 5:
            this.\uE00D = this.\uE003.\uE031(674239642 - 674239638);
            num1 = ~-343863106 ^ 343863104;
            continue;
          case 6:
            this.\uE004 = this.\uE003.\uE031(117522899 + 478346078 - 595868976) > (-528854523 ^ -528854523);
            num1 = \uE010.\uE025(~(145538313 - 145538388));
            continue;
          case 7:
            num2 = this.\uE003.\uE031(256 >> 4) ^ -196660025 - 446560736 + 643238155;
            num1 = (-1254380062 >> 1) - -627190035;
            continue;
          case 8:
            goto label_29;
          default:
            goto label_4;
        }
      }
label_14:
      if (this.\uE00D == 176 >> 4)
      {
        \uE00D[] objArray1 = \uE00B.\uE004;
label_17:
        int num3 = \uE010.\uE025(~(532349280 - 532349353));
        while (true)
        {
          switch (num3)
          {
            case 0:
              \uE00D[] objArray2 = \uE00B.\uE005;
              num3 = -(418367530 - 418367531);
              continue;
            case 1:
              this.\uE005 = 948160959 - 369514666 ^ 578646293;
              num3 = \uE010.\uE025(~(-2272 >> 5));
              continue;
            case 2:
              this.\uE00A = 84871208 - 84871208 << 4 != 0;
              num3 = 173997443 - 91969355 ^ 82028092;
              continue;
            case 3:
              this.\uE00C = \uE00B.\uE006;
              num3 = (-1330824290 >> 1) + 665412147;
              continue;
            case 4:
              goto label_29;
            default:
              goto label_17;
          }
        }
      }
      else if (this.\uE00D == -182167052 - -182167061)
      {
        \uE00D[] objArray3;
        \uE00D[] objArray4;
        this.\uE02F(this.\uE003, out objArray3, out objArray4);
label_25:
        int num4 = \uE010.\uE025(~(-166 >> 1));
        while (true)
        {
          switch (num4)
          {
            case 0:
              this.\uE00C = \uE00B.\uE012(objArray3, objArray4);
              num4 = -682449970 + 682449972;
              continue;
            case 1:
              this.\uE005 = 186885613 - 186885613 << 1;
              num4 = 234021951 - 234021951 >> 1;
              continue;
            case 2:
              goto label_28;
            default:
              goto label_25;
          }
        }
label_28:
        this.\uE00A = 402728365 - 402728365 != 0;
      }
label_29:
      this.\uE007 = this.\uE003.\uE00E;
      return ~(396745366 - 396745368) != 0;
    }

    private int \uE028(byte[] _param1, int _param2, int _param3)
    {
      int num1 = _param2;
      if (this.\uE00D == 384 >> 7)
      {
        if (this.\uE005 > (-520127563 ^ -520127563) >> 7)
        {
          int num2 = Math.Min(_param3, this.\uE005);
label_4:
          int num3 = \uE010.\uE025(236774023 - 236773941);
          while (true)
          {
            switch (num3)
            {
              case 0:
                this.\uE005 -= num2;
                num3 = -550569947 ^ -550569945;
                continue;
              case 1:
                this.\uE003.\uE033(_param1, _param2, num2);
                num3 = \uE010.\uE025((-869070451 ^ 559758709) + 311544660);
                continue;
              case 2:
                _param3 -= num2;
                num3 = -(129025261 - 129025264);
                continue;
              case 3:
                _param2 += num2;
                num3 = ~-6;
                continue;
              case 4:
                this.\uE002.\uE035(_param1, _param2, num2);
                num3 = -~-1;
                continue;
              case 5:
                goto label_30;
              default:
                goto label_4;
            }
          }
        }
      }
      else if ((!this.\uE00A ? -(0 << 4) : -~0) == 0)
      {
        if (this.\uE009 > (306892335 ^ 306892335))
          this.\uE029(_param1, ref _param2, ref _param3);
        if (_param3 > -(684917021 - 684917021))
        {
          do
          {
            int num4 = \uE010.\uE003.\uE02C(this.\uE003, this.\uE00C.\uE002);
            this.\uE00A = num4 == ~686431073 - -686431330;
            if ((!this.\uE00A ? -39003594 - 123099928 - -162103522 : ~-33 >> 5) == 0)
            {
              if (num4 < -353673634 - -353690018 >> 6)
              {
                byte[] numArray = _param1;
                int index = _param2;
                _param2 = index + (--370301908 - 370301907);
                int num5 = (int) (byte) num4;
                numArray[index] = (byte) num5;
label_18:
                int num6 = \uE010.\uE025(~-577 >> 3);
                while (true)
                {
                  switch (num6)
                  {
                    case 0:
                      this.\uE002.\uE034((byte) num4);
                      num6 = -93821281 - 99127061 - -192948343;
                      continue;
                    case 1:
                      _param3 -= -21062328 ^ -21062327;
                      num6 = ~-408315207 ^ 408315204;
                      continue;
                    case 2:
                      goto label_29;
                    default:
                      goto label_18;
                  }
                }
              }
              else if (num4 <= 2280 >> 3)
              {
                int num7 = \uE010.\uE003.\uE02D(this.\uE003, num4);
label_24:
                int num8 = \uE010.\uE025(113325192 - -37275625 - 150600748);
                int num9;
                while (true)
                {
                  switch (num8)
                  {
                    case 0:
                      this.\uE009 = num7;
                      num8 = 626204488 - 626204485;
                      continue;
                    case 1:
                      this.\uE00E = num9;
                      num8 = -(461163513 - 461163513);
                      continue;
                    case 2:
                      num9 = \uE010.\uE003.\uE02E(this.\uE003, this.\uE00C.\uE003);
                      num8 = -111965841 - -111965873 >> 5;
                      continue;
                    case 3:
                      goto label_28;
                    default:
                      goto label_24;
                  }
                }
label_28:
                this.\uE029(_param1, ref _param2, ref _param3);
              }
label_29:;
            }
            else
              break;
          }
          while (_param3 > 480842185 - 480842185);
        }
      }
label_30:
      this.\uE007 = this.\uE003.\uE00E;
      return _param2 - num1;
    }

    private void \uE029(byte[] _param1, ref int _param2, ref int _param3)
    {
      int num1 = Math.Min(this.\uE009, _param3);
label_2:
      int num2 = \uE010.\uE025(82);
      byte[] sourceArray;
      while (true)
      {
        switch (num2)
        {
          case 0:
            this.\uE009 -= num1;
            num2 = \uE010.\uE025(70);
            continue;
          case 1:
            sourceArray = this.\uE002.\uE036(this.\uE00E, Math.Min(num1, this.\uE00E));
            num2 = 2;
            continue;
          case 2:
            _param3 -= num1;
            num2 = 0;
            continue;
          case 3:
            goto label_13;
          default:
            goto label_2;
        }
      }
label_13:
      while (num1 > sourceArray.Length)
      {
        Array.Copy((Array) sourceArray, 0, (Array) _param1, _param2, sourceArray.Length);
label_9:
        int num3 = \uE010.\uE025(72);
        while (true)
        {
          switch (num3)
          {
            case 0:
              _param2 += sourceArray.Length;
              num3 = 1;
              continue;
            case 1:
              num1 -= sourceArray.Length;
              num3 = 2;
              continue;
            case 2:
              goto label_12;
            default:
              goto label_9;
          }
        }
label_12:
        this.\uE002.\uE035(sourceArray, 0, sourceArray.Length);
      }
      Array.Copy((Array) sourceArray, 0, (Array) _param1, _param2, num1);
label_16:
      int num4 = \uE010.\uE025(82);
      while (true)
      {
        switch (num4)
        {
          case 0:
            this.\uE002.\uE035(sourceArray, 0, num1);
            num4 = 2;
            continue;
          case 1:
            _param2 += num1;
            num4 = 0;
            continue;
          case 2:
            goto label_6;
          default:
            goto label_16;
        }
      }
label_6:;
    }

    public bool \uE02A(int _param1)
    {
      byte[] numArray = new byte[1024];
      int num;
      while (_param1 > 0 && (num = this.\uE026(numArray, 0, Math.Min(1024, _param1))) > 0)
        _param1 -= num;
      return _param1 <= 0;
    }

    public void \uE02B()
    {
      byte[] numArray = new byte[1024];
      do
        ;
      while (this.\uE026(numArray, 0, 1024) > 0);
    }

    private static int \uE02C(\uE010.\uE004 _param0, \uE00E _param1)
    {
      while ((_param1 == null ? 1 : 0) == 0 && (!_param1.\uE002 ? 1 : 0) != 0)
        _param1 = _param0.\uE031(1) > 0 ? _param1.\uE00D : _param1.\uE00C;
      return (int) _param1.\uE003;
    }

    private static int \uE02D(\uE010.\uE004 _param0, int _param1)
    {
      int num1;
      int num2;
      \uE00B.\uE015(_param1, out num1, out num2);
      return num2 > 0 ? num1 + _param0.\uE031(num2) : num1;
    }

    private static int \uE02E(\uE010.\uE004 _param0, \uE00E _param1)
    {
      int index = \uE010.\uE003.\uE02C(_param0, _param1);
label_2:
      int num1 = \uE010.\uE025(70);
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num2 = \uE00B.\uE00B[index];
            num1 = 2;
            continue;
          case 1:
            num3 = _param0.\uE031(num2);
            num1 = 4;
            continue;
          case 2:
            if (num2 > 0)
            {
              num1 = \uE010.\uE025(82);
              continue;
            }
            goto label_9;
          case 3:
            num4 = \uE00B.\uE00A[index];
            num1 = 0;
            continue;
          case 4:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      return num4 + num3;
label_9:
      return num4;
    }

    private void \uE02F(\uE010.\uE004 _param1, out \uE00D[] _param2, out \uE00D[] _param3)
    {
      int length1 = _param1.\uE031(5) + 257;
label_2:
      int num1 = \uE010.\uE025(73);
      int[] numArray1;
      int length2;
      while (true)
      {
        int[] numArray2;
        int index;
        int num2;
        switch (num1)
        {
          case 0:
            numArray2 = \uE00B.\uE007;
            num1 = 1;
            continue;
          case 1:
            numArray1 = new int[19];
            num1 = 5;
            continue;
          case 2:
label_5:
            numArray1[numArray2[index]] = _param1.\uE031(3);
            num1 = 7;
            continue;
          case 3:
            num2 = _param1.\uE031(4) + 4;
            num1 = \uE010.\uE025(72);
            continue;
          case 4:
            if (index != 0)
            {
              num1 = 2;
              continue;
            }
            break;
          case 5:
            index = 0;
            num1 = 4;
            continue;
          case 6:
            length2 = _param1.\uE031(5) + 1;
            num1 = 3;
            continue;
          case 7:
            ++index;
            break;
          default:
            goto label_2;
        }
        if (index < num2)
          goto label_5;
        else
          break;
      }
      \uE00E obj = \uE00B.\uE013(\uE00B.\uE010(numArray1));
label_15:
      int num3 = \uE010.\uE025(70);
      int[] numArray3;
      while (true)
      {
        int index;
        switch (num3)
        {
          case 0:
            if (index != 0)
            {
              num3 = 2;
              continue;
            }
            break;
          case 1:
            index = 0;
            num3 = \uE010.\uE025(72);
            continue;
          case 2:
label_19:
            _param2[index].\uE003 = numArray3[index];
            num3 = 5;
            continue;
          case 3:
            numArray3 = \uE010.\uE003.\uE030(_param1, obj, length1 + length2);
            num3 = 4;
            continue;
          case 4:
            _param2 = new \uE00D[length1];
            num3 = 1;
            continue;
          case 5:
            ++index;
            break;
          default:
            goto label_15;
        }
        if (index < length1)
          goto label_19;
        else
          break;
      }
      \uE00B.\uE011(_param2);
label_26:
      int num4 = \uE010.\uE025(82);
      while (true)
      {
        int index;
        switch (num4)
        {
          case 0:
            index = 0;
            num4 = \uE010.\uE025(69);
            continue;
          case 1:
            _param3 = new \uE00D[length2];
            num4 = 0;
            continue;
          case 2:
            if (index != 0)
            {
              num4 = 3;
              continue;
            }
            break;
          case 3:
label_31:
            _param3[index].\uE003 = numArray3[index + length1];
            num4 = 4;
            continue;
          case 4:
            ++index;
            break;
          default:
            goto label_26;
        }
        if (index < length2)
          goto label_31;
        else
          break;
      }
      \uE00B.\uE011(_param3);
    }

    private static int[] \uE030(\uE010.\uE004 _param0, \uE00E _param1, int _param2)
    {
      int[] numArray = new int[_param2];
label_2:
      int num1 = \uE010.\uE025(72);
      while (true)
      {
        int index;
        int num2;
        switch (num1)
        {
          case 0:
            index = 0;
            num1 = 1;
            continue;
          case 1:
            if (index != 0)
            {
              num1 = 3;
              continue;
            }
            break;
          case 2:
            if (num2 < 16)
            {
              num1 = 4;
              continue;
            }
            switch (num2)
            {
              case 16:
                int num3 = _param0.\uE031(2) + 3;
label_13:
                int num4 = \uE010.\uE025(69);
                while (true)
                {
                  int num5;
                  switch (num4)
                  {
                    case 0:
                      if (num5 != 0)
                      {
                        num4 = \uE010.\uE025(82);
                        continue;
                      }
                      break;
                    case 1:
label_16:
                      numArray[index + num5] = numArray[index - 1];
                      num4 = 3;
                      continue;
                    case 2:
                      num5 = 0;
                      num4 = 0;
                      continue;
                    case 3:
                      ++num5;
                      break;
                    default:
                      goto label_13;
                  }
                  if (num5 < num3)
                    goto label_16;
                  else
                    break;
                }
                index += num3 - 1;
                goto label_26;
              case 17:
label_22:
                int num6 = \uE010.\uE025(72);
                int num7;
                while (true)
                {
                  switch (num6)
                  {
                    case 0:
                      num7 = _param0.\uE031(3) + 3;
                      num6 = 1;
                      continue;
                    case 1:
                      index += num7 - 1;
                      num6 = 2;
                      continue;
                    case 2:
                      goto label_26;
                    default:
                      goto label_22;
                  }
                }
              case 18:
                int num8 = _param0.\uE031(7) + 11;
                index += num8 - 1;
                goto label_26;
              default:
                goto label_26;
            }
          case 3:
label_8:
            num2 = \uE010.\uE003.\uE02C(_param0, _param1);
            num1 = \uE010.\uE025(69);
            continue;
          case 4:
            numArray[index] = num2;
            num1 = 5;
            continue;
          case 5:
label_26:
            ++index;
            break;
          default:
            goto label_2;
        }
        if (index < _param2)
          goto label_8;
        else
          break;
      }
      return numArray;
    }
  }

  private sealed class \uE004
  {
    private uint \uE002;
    private int \uE003;
    private int \uE00C;
    private Stream \uE00D;
    internal long \uE00E;

    internal \uE004(Stream _param1) => this.\uE00D = _param1;

    internal int \uE031(int _param1)
    {
      this.\uE00E += (long) _param1;
      for (int index = _param1 - (this.\uE00C - this.\uE003); index > 0; index -= 8)
      {
        this.\uE002 |= checked ((uint) this.\uE00D.ReadByte()) << this.\uE00C;
        this.\uE00C += 8;
      }
      int num = (int) (this.\uE002 >> this.\uE003) & (1 << _param1) - 1;
      this.\uE003 += _param1;
      if (this.\uE00C == this.\uE003)
      {
        this.\uE00C = this.\uE003 = 0;
        this.\uE002 = 0U;
        return num;
      }
      if (this.\uE003 < 8)
        return num;
      this.\uE002 >>= this.\uE003;
      this.\uE00C -= this.\uE003;
      this.\uE003 = 0;
      return num;
    }

    internal void \uE032()
    {
      if (this.\uE00C != this.\uE003)
        this.\uE00E += (long) (this.\uE00C - this.\uE003);
      this.\uE00C = this.\uE003 = 0;
      this.\uE002 = 0U;
    }

    internal void \uE033(byte[] _param1, int _param2, int _param3) => this.\uE00E += (long) (this.\uE00D.Read(_param1, _param2, _param3) << 3);
  }

  private sealed class \uE005
  {
    private byte[] \uE002;
    private int \uE003;
    internal int \uE00C;
    internal long \uE00D;

    internal \uE005(int _param1)
    {
      this.\uE00C = _param1;
      this.\uE002 = new byte[_param1];
    }

    internal void \uE034(byte _param1)
    {
      this.\uE002[this.\uE003++] = _param1;
      if (this.\uE003 >= this.\uE00C)
        this.\uE003 = 0;
      ++this.\uE00D;
    }

    internal void \uE035(byte[] _param1, int _param2, int _param3)
    {
      this.\uE00D += (long) _param3;
label_2:
      int num1 = \uE010.\uE025(69);
      while (true)
      {
        switch (num1)
        {
          case 0:
            Array.Copy((Array) _param1, _param2, (Array) this.\uE002, 0, this.\uE00C);
            num1 = 1;
            continue;
          case 1:
            this.\uE003 = 0;
            num1 = 3;
            continue;
          case 2:
            if (_param3 >= this.\uE00C)
            {
              num1 = 0;
              continue;
            }
            goto label_8;
          case 3:
            goto label_24;
          default:
            goto label_2;
        }
      }
label_24:
      return;
label_8:
      if (this.\uE003 + _param3 > this.\uE00C)
      {
        int length1 = this.\uE00C - this.\uE003;
label_11:
        int num2 = \uE010.\uE025(72);
        int length2;
        while (true)
        {
          switch (num2)
          {
            case 0:
              length2 = this.\uE003 + _param3 - this.\uE00C;
              num2 = 1;
              continue;
            case 1:
              Array.Copy((Array) _param1, _param2, (Array) this.\uE002, this.\uE003, length1);
              num2 = \uE010.\uE025(69);
              continue;
            case 2:
              Array.Copy((Array) _param1, _param2 + length1, (Array) this.\uE002, 0, length2);
              num2 = 3;
              continue;
            case 3:
              this.\uE003 = length2;
              num2 = 4;
              continue;
            case 4:
              goto label_7;
            default:
              goto label_11;
          }
        }
label_7:;
      }
      else
      {
        Array.Copy((Array) _param1, _param2, (Array) this.\uE002, this.\uE003, _param3);
label_19:
        int num3 = \uE010.\uE025(72);
        while (true)
        {
          switch (num3)
          {
            case 0:
              this.\uE003 += _param3;
              num3 = 1;
              continue;
            case 1:
              if (this.\uE003 == this.\uE00C)
              {
                num3 = 2;
                continue;
              }
              goto label_16;
            case 2:
              goto label_23;
            default:
              goto label_19;
          }
        }
label_16:
        return;
label_23:
        this.\uE003 = 0;
      }
    }

    internal byte[] \uE036(int _param1, int _param2)
    {
      byte[] destinationArray = new byte[_param2];
label_2:
      int num1 = \uE010.\uE025(82);
      while (true)
      {
        switch (num1)
        {
          case 0:
            Array.Copy((Array) this.\uE002, this.\uE003 - _param1, (Array) destinationArray, 0, _param2);
            num1 = 2;
            continue;
          case 1:
            if (this.\uE003 >= _param1)
            {
              num1 = 0;
              continue;
            }
            goto label_6;
          case 2:
            goto label_14;
          default:
            goto label_2;
        }
      }
label_6:
      int num2 = _param1 - this.\uE003;
label_8:
      int num3 = \uE010.\uE025(69);
      while (true)
      {
        switch (num3)
        {
          case 0:
            Array.Copy((Array) this.\uE002, this.\uE00C - num2, (Array) destinationArray, 0, num2);
            num3 = 1;
            continue;
          case 1:
            Array.Copy((Array) this.\uE002, 0, (Array) destinationArray, num2, _param2 - num2);
            num3 = 3;
            continue;
          case 2:
            if (num2 < _param2)
            {
              num3 = 0;
              continue;
            }
            goto label_13;
          case 3:
            goto label_14;
          default:
            goto label_8;
        }
      }
label_13:
      Array.Copy((Array) this.\uE002, this.\uE00C - num2, (Array) destinationArray, 0, _param2);
label_14:
      return destinationArray;
    }
  }
}
