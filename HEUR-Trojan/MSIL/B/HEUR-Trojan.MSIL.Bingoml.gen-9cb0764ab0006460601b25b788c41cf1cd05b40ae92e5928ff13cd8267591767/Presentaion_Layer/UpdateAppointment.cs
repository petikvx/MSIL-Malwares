// Decompiled with JetBrains decompiler
// Type: HospitalMgmtSys.Presentaion_Layer.UpdateAppointment
// Assembly: HospitalMgmtSys, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DCB6B3B1-E0A6-4826-8B58-606618F1AB2B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Bingoml.gen-9cb0764ab0006460601b25b788c41cf1cd05b40ae92e5928ff13cd8267591767.exe

using HospitalMgmtSys.Repository_Layer;
using System;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Windows.Forms;

namespace HospitalMgmtSys.Presentaion_Layer
{
  public class UpdateAppointment : UserControl
  {
    private const string sql = "SELECT p.name as 'pname' ,appointment.appointmentid, appointment.starttime, appointment.date, appointment.personid, appointment.doctorid\n                                        , doctor.specialty, doctor.availabledays , person.name as 'dname'\n                                        FROM person as p, appointment\n                                            RIGHT JOIN doctor\n                                                ON doctor.doctorid = appointment.doctorid\n                                            RIGHT OUTER JOIN employee\n                                                ON employee.empid = doctor.empid\n                                            RIGHT OUTER JOIN person\n                                                ON person.personid = employee.personid\n                                        where appointment.personid = p.personid and appointment.complete = 0";
    private IContainer components = (IContainer) null;
    private DataGridView dgvAppointment;
    private TableLayoutPanel tableLayoutPanel;
    private Label lblAppointmentID;
    private Label lblDoctorID;
    private Label lblPatientID;
    private TextBox txtAppointmentID;
    private TextBox txtDoctorID;
    private TextBox txtPatientID;
    private Button btnDelete;
    private Label lblStartTime;
    private Label lblAptDate;
    private DateTimePicker dtpAppointmentDate;
    private ComboBox cmbAppointmentTime;
    private Button btnUpdate;
    private Button btnSearch;
    private TextBox txtSearch;
    private DataGridViewTextBoxColumn appointmentid;
    private DataGridViewTextBoxColumn personid;
    private DataGridViewTextBoxColumn patientName;
    private DataGridViewTextBoxColumn date;
    private DataGridViewTextBoxColumn starttime;
    private DataGridViewTextBoxColumn doctorId;
    private DataGridViewTextBoxColumn doctorName;
    private DataGridViewTextBoxColumn specialty;
    private DataGridViewTextBoxColumn availableDays;
    private Button btnClear;
    private Label label1;
    private TextBox txtDoctorName;
    private Label label2;
    private TextBox txtPatientName;
    private GroupBox groupBox1;
    private GroupBox groupBox2;

    public UpdateAppointment()
    {
      this.InitializeComponent();
      this.PopulateAppointmentTable();
    }

    private void PopulateAppointmentTable(string query = "SELECT p.name as 'pname' ,appointment.appointmentid, appointment.starttime, appointment.date, appointment.personid, appointment.doctorid\n                                        , doctor.specialty, doctor.availabledays , person.name as 'dname'\n                                        FROM person as p, appointment\n                                            RIGHT JOIN doctor\n                                                ON doctor.doctorid = appointment.doctorid\n                                            RIGHT OUTER JOIN employee\n                                                ON employee.empid = doctor.empid\n                                            RIGHT OUTER JOIN person\n                                                ON person.personid = employee.personid\n                                        where appointment.personid = p.personid and appointment.complete = 0")
    {
      AppointmentRepo appointmentRepo = new AppointmentRepo();
      this.dgvAppointment.AutoGenerateColumns = false;
      this.dgvAppointment.DataSource = (object) appointmentRepo.GetAllAppointmentInformation(query);
    }

    private void dgvAppointment_DoubleClick(object sender, EventArgs e)
    {
      this.txtAppointmentID.Text = this.dgvAppointment.CurrentRow.Cells["appointmentid"].Value.ToString();
      this.txtDoctorID.Text = this.dgvAppointment.CurrentRow.Cells["doctorid"].Value.ToString();
      this.txtPatientID.Text = this.dgvAppointment.CurrentRow.Cells["personid"].Value.ToString();
      this.txtPatientName.Text = this.dgvAppointment.CurrentRow.Cells["patientName"].Value.ToString();
      this.txtDoctorName.Text = this.dgvAppointment.CurrentRow.Cells["doctorName"].Value.ToString();
      this.cmbAppointmentTime.Text = this.dgvAppointment.CurrentRow.Cells["starttime"].Value.ToString();
      this.dtpAppointmentDate.Value = Convert.ToDateTime(this.dgvAppointment.CurrentRow.Cells["date"].Value.ToString());
    }

    private void btnDelete_Click(object sender, EventArgs e)
    {
      try
      {
        if (string.IsNullOrEmpty(this.txtAppointmentID.Text))
          throw new Exception("Select Appointment you want to cancel");
        if (MessageBox.Show("Do you want to cancel this appointment?", "Querstion", MessageBoxButtons.YesNo) != DialogResult.Yes)
          return;
        if (new AppointmentRepo().DeleteAppointment(Convert.ToInt32(this.txtAppointmentID.Text)) == 1)
        {
          int num = (int) MessageBox.Show("Appointment deleted successfully");
          this.PopulateAppointmentTable();
          this.ClearAll();
        }
        else
        {
          int num1 = (int) MessageBox.Show("Appointment not found");
        }
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
    }

    private void btnUpdate_Click(object sender, EventArgs e)
    {
      try
      {
        DateTime dateTime = this.dtpAppointmentDate.Value;
        if (dateTime.Date < DateTime.Today)
          throw new Exception("Selected date must be of today or future");
        DoctorRepo doctorRepo = new DoctorRepo();
        DataTable individualDoctorsInfo = doctorRepo.GetIndividualDoctorsInfo(Convert.ToInt32(this.txtDoctorID.Text));
        doctorRepo.DoctorID = Convert.ToInt32(individualDoctorsInfo.Rows[0]["doctorid"].ToString());
        doctorRepo.Specialty = individualDoctorsInfo.Rows[0]["specialty"].ToString();
        doctorRepo.AvailableDays = individualDoctorsInfo.Rows[0]["availabledays"].ToString();
        doctorRepo.EmployeeIdOfDoctor = Convert.ToInt32(individualDoctorsInfo.Rows[0]["empid"].ToString());
        string[] strArray = doctorRepo.AvailableDays.Split(' ');
        bool flag = false;
        dateTime = this.dtpAppointmentDate.Value;
        string str1 = dateTime.DayOfWeek.ToString().Substring(0, 3);
        foreach (string str2 in strArray)
        {
          if (str2.Equals(str1))
          {
            flag = true;
            break;
          }
          flag = false;
        }
        if (!flag)
          throw new Exception("Doctor not available on this day. Check Available days");
        AppointmentRepo appointmentRepo1 = new AppointmentRepo();
        appointmentRepo1.AppointmentID = Convert.ToInt32(this.txtAppointmentID.Text);
        appointmentRepo1.Time = this.cmbAppointmentTime.Text.ToString();
        AppointmentRepo appointmentRepo2 = appointmentRepo1;
        dateTime = this.dtpAppointmentDate.Value;
        string str3 = dateTime.ToString("MM/dd/yyyy");
        appointmentRepo2.Date = str3;
        appointmentRepo1.DoctorID = Convert.ToInt32(this.txtDoctorID.Text);
        appointmentRepo1.PatientID = Convert.ToInt32(this.txtPatientID.Text);
        if (appointmentRepo1.RowExits(appointmentRepo1.Time, appointmentRepo1.Date, appointmentRepo1.DoctorID))
          throw new Exception("Clash Appointment");
        if (MessageBox.Show("Confirm appointment update?", "Question", MessageBoxButtons.YesNo) != DialogResult.Yes)
          return;
        if (appointmentRepo1.UpdateAppointment(appointmentRepo1.AppointmentID, appointmentRepo1.Time, appointmentRepo1.Date, appointmentRepo1.PatientID, appointmentRepo1.DoctorID) == 1)
        {
          int num = (int) MessageBox.Show("Appointment Updated");
          this.PopulateAppointmentTable();
          this.ClearAll();
        }
        else
        {
          int num1 = (int) MessageBox.Show("Error");
        }
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show(ex.Message);
      }
    }

    private void ClearAll()
    {
      this.txtAppointmentID.Text = string.Empty;
      this.txtDoctorID.Text = string.Empty;
      this.txtPatientID.Text = string.Empty;
      this.cmbAppointmentTime.SelectedIndex = -1;
      this.txtPatientName.Text = string.Empty;
      this.txtDoctorName.Text = string.Empty;
      this.dtpAppointmentDate.Value = DateTime.Today;
    }

    private void CancelAppointment_Load(object sender, EventArgs e) => this.PopulateAppointmentTable();

    private void btnClear_Click(object sender, EventArgs e) => this.ClearAll();

    private void UpdateAppointment_VisibleChanged(object sender, EventArgs e)
    {
      this.ClearAll();
      this.PopulateAppointmentTable();
    }

    private void txtSearch_TextChanged(object sender, EventArgs e) => this.PopulateAppointmentTable("SELECT p.name as 'pname' ,appointment.appointmentid, appointment.starttime, appointment.date, appointment.personid, appointment.doctorid\n                                        , doctor.specialty, doctor.availabledays , person.name as 'dname'\n                                        FROM person as p, appointment\n                                            RIGHT JOIN doctor\n                                                ON doctor.doctorid = appointment.doctorid\n                                            RIGHT OUTER JOIN employee\n                                                ON employee.empid = doctor.empid\n                                            RIGHT OUTER JOIN person\n                                                ON person.personid = employee.personid\n                                        where appointment.personid = p.personid and appointment.complete = 0 and\n                                        p.name like '%" + this.txtSearch.Text + "%'");

    private void btnSearch_Click(object sender, EventArgs e) => this.PopulateAppointmentTable("SELECT p.name as 'pname' ,appointment.appointmentid, appointment.starttime, appointment.date, appointment.personid, appointment.doctorid\n                                        , doctor.specialty, doctor.availabledays , person.name as 'dname'\n                                        FROM person as p, appointment\n                                            RIGHT JOIN doctor\n                                                ON doctor.doctorid = appointment.doctorid\n                                            RIGHT OUTER JOIN employee\n                                                ON employee.empid = doctor.empid\n                                            RIGHT OUTER JOIN person\n                                                ON person.personid = employee.personid\n                                        where appointment.personid = p.personid and appointment.complete = 0 and\n                                        p.name = '" + this.txtSearch.Text + "' ");

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.dgvAppointment = new DataGridView();
      this.appointmentid = new DataGridViewTextBoxColumn();
      this.personid = new DataGridViewTextBoxColumn();
      this.patientName = new DataGridViewTextBoxColumn();
      this.date = new DataGridViewTextBoxColumn();
      this.starttime = new DataGridViewTextBoxColumn();
      this.doctorId = new DataGridViewTextBoxColumn();
      this.doctorName = new DataGridViewTextBoxColumn();
      this.specialty = new DataGridViewTextBoxColumn();
      this.availableDays = new DataGridViewTextBoxColumn();
      this.tableLayoutPanel = new TableLayoutPanel();
      this.lblAppointmentID = new Label();
      this.lblDoctorID = new Label();
      this.lblPatientID = new Label();
      this.txtAppointmentID = new TextBox();
      this.txtDoctorID = new TextBox();
      this.txtPatientID = new TextBox();
      this.btnDelete = new Button();
      this.lblStartTime = new Label();
      this.lblAptDate = new Label();
      this.dtpAppointmentDate = new DateTimePicker();
      this.cmbAppointmentTime = new ComboBox();
      this.btnUpdate = new Button();
      this.btnSearch = new Button();
      this.txtSearch = new TextBox();
      this.btnClear = new Button();
      this.label1 = new Label();
      this.txtDoctorName = new TextBox();
      this.label2 = new Label();
      this.txtPatientName = new TextBox();
      this.groupBox1 = new GroupBox();
      this.groupBox2 = new GroupBox();
      ((ISupportInitialize) this.dgvAppointment).BeginInit();
      this.tableLayoutPanel.SuspendLayout();
      this.groupBox1.SuspendLayout();
      this.groupBox2.SuspendLayout();
      this.SuspendLayout();
      this.dgvAppointment.AllowUserToAddRows = false;
      this.dgvAppointment.AllowUserToDeleteRows = false;
      this.dgvAppointment.AllowUserToResizeColumns = false;
      this.dgvAppointment.AllowUserToResizeRows = false;
      this.dgvAppointment.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.dgvAppointment.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill;
      this.dgvAppointment.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dgvAppointment.Columns.AddRange((DataGridViewColumn) this.appointmentid, (DataGridViewColumn) this.personid, (DataGridViewColumn) this.patientName, (DataGridViewColumn) this.date, (DataGridViewColumn) this.starttime, (DataGridViewColumn) this.doctorId, (DataGridViewColumn) this.doctorName, (DataGridViewColumn) this.specialty, (DataGridViewColumn) this.availableDays);
      this.dgvAppointment.Location = new Point(3, 3);
      this.dgvAppointment.Name = "dgvAppointment";
      this.dgvAppointment.ReadOnly = true;
      this.dgvAppointment.RowTemplate.Height = 24;
      this.dgvAppointment.Size = new Size(1060, 290);
      this.dgvAppointment.TabIndex = 0;
      this.dgvAppointment.TabStop = false;
      this.dgvAppointment.DoubleClick += new EventHandler(this.dgvAppointment_DoubleClick);
      this.appointmentid.DataPropertyName = "appointmentid";
      this.appointmentid.HeaderText = "Appointment ID";
      this.appointmentid.Name = "appointmentid";
      this.appointmentid.ReadOnly = true;
      this.appointmentid.Visible = false;
      this.personid.DataPropertyName = "personid";
      this.personid.HeaderText = "Person ID";
      this.personid.Name = "personid";
      this.personid.ReadOnly = true;
      this.personid.Visible = false;
      this.patientName.DataPropertyName = "pname";
      this.patientName.HeaderText = "Patient Name";
      this.patientName.Name = "patientName";
      this.patientName.ReadOnly = true;
      this.date.DataPropertyName = "date";
      this.date.HeaderText = "Appointment Date";
      this.date.Name = "date";
      this.date.ReadOnly = true;
      this.starttime.DataPropertyName = "starttime";
      this.starttime.HeaderText = "Appointment Time";
      this.starttime.Name = "starttime";
      this.starttime.ReadOnly = true;
      this.doctorId.DataPropertyName = "doctorid";
      this.doctorId.HeaderText = "Doctor ID";
      this.doctorId.Name = "doctorId";
      this.doctorId.ReadOnly = true;
      this.doctorId.Visible = false;
      this.doctorName.DataPropertyName = "dname";
      this.doctorName.HeaderText = "Doctor's Name";
      this.doctorName.Name = "doctorName";
      this.doctorName.ReadOnly = true;
      this.specialty.DataPropertyName = "specialty";
      this.specialty.HeaderText = "Doctor's Specialty";
      this.specialty.Name = "specialty";
      this.specialty.ReadOnly = true;
      this.availableDays.DataPropertyName = "availabledays";
      this.availableDays.HeaderText = "Doctor's Available Days";
      this.availableDays.Name = "availableDays";
      this.availableDays.ReadOnly = true;
      this.tableLayoutPanel.ColumnCount = 1;
      this.tableLayoutPanel.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.tableLayoutPanel.Controls.Add((Control) this.dgvAppointment, 0, 0);
      this.tableLayoutPanel.Location = new Point(19, 310);
      this.tableLayoutPanel.Name = "tableLayoutPanel";
      this.tableLayoutPanel.RowCount = 1;
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.tableLayoutPanel.Size = new Size(1066, 296);
      this.tableLayoutPanel.TabIndex = 6;
      this.lblAppointmentID.AutoSize = true;
      this.lblAppointmentID.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblAppointmentID.Location = new Point(6, 28);
      this.lblAppointmentID.Name = "lblAppointmentID";
      this.lblAppointmentID.Size = new Size(160, 25);
      this.lblAppointmentID.TabIndex = 7;
      this.lblAppointmentID.Text = "Appointment ID";
      this.lblDoctorID.AutoSize = true;
      this.lblDoctorID.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblDoctorID.Location = new Point(6, 72);
      this.lblDoctorID.Name = "lblDoctorID";
      this.lblDoctorID.Size = new Size(102, 25);
      this.lblDoctorID.TabIndex = 7;
      this.lblDoctorID.Text = "Doctor ID";
      this.lblPatientID.AutoSize = true;
      this.lblPatientID.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblPatientID.Location = new Point(6, 116);
      this.lblPatientID.Name = "lblPatientID";
      this.lblPatientID.Size = new Size(106, 25);
      this.lblPatientID.TabIndex = 7;
      this.lblPatientID.Text = "Patient ID";
      this.txtAppointmentID.Enabled = false;
      this.txtAppointmentID.Location = new Point(205, 29);
      this.txtAppointmentID.Name = "txtAppointmentID";
      this.txtAppointmentID.Size = new Size(223, 22);
      this.txtAppointmentID.TabIndex = 8;
      this.txtDoctorID.Enabled = false;
      this.txtDoctorID.Location = new Point(205, 73);
      this.txtDoctorID.Name = "txtDoctorID";
      this.txtDoctorID.Size = new Size(223, 22);
      this.txtDoctorID.TabIndex = 8;
      this.txtPatientID.Enabled = false;
      this.txtPatientID.Location = new Point(205, 117);
      this.txtPatientID.Name = "txtPatientID";
      this.txtPatientID.Size = new Size(223, 22);
      this.txtPatientID.TabIndex = 8;
      this.btnDelete.Location = new Point(855, 272);
      this.btnDelete.Name = "btnDelete";
      this.btnDelete.Size = new Size(112, 30);
      this.btnDelete.TabIndex = 9;
      this.btnDelete.Text = "Delete";
      this.btnDelete.UseVisualStyleBackColor = true;
      this.btnDelete.Click += new EventHandler(this.btnDelete_Click);
      this.lblStartTime.AutoSize = true;
      this.lblStartTime.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblStartTime.Location = new Point(6, 182);
      this.lblStartTime.Name = "lblStartTime";
      this.lblStartTime.Size = new Size(112, 25);
      this.lblStartTime.TabIndex = 7;
      this.lblStartTime.Text = "Start Time";
      this.lblAptDate.AutoSize = true;
      this.lblAptDate.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblAptDate.Location = new Point(6, 130);
      this.lblAptDate.Name = "lblAptDate";
      this.lblAptDate.Size = new Size(184, 25);
      this.lblAptDate.TabIndex = 7;
      this.lblAptDate.Text = "Appointment Date";
      this.dtpAppointmentDate.Anchor = AnchorStyles.Top;
      this.dtpAppointmentDate.CalendarFont = new Font("Microsoft Sans Serif", 7.8f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.dtpAppointmentDate.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.dtpAppointmentDate.Location = new Point(236, 130);
      this.dtpAppointmentDate.Name = "dtpAppointmentDate";
      this.dtpAppointmentDate.Size = new Size(314, 27);
      this.dtpAppointmentDate.TabIndex = 6;
      this.cmbAppointmentTime.DropDownStyle = ComboBoxStyle.DropDownList;
      this.cmbAppointmentTime.FormattingEnabled = true;
      this.cmbAppointmentTime.Items.AddRange(new object[14]
      {
        (object) "16:00:00",
        (object) "16:30:00",
        (object) "17:00:00",
        (object) "17:30:00",
        (object) "18:00:00",
        (object) "18:30:00",
        (object) "19:00:00",
        (object) "19:30:00",
        (object) "20:00:00",
        (object) "20:30:00",
        (object) "21:00:00",
        (object) "21:30:00",
        (object) "22:00:00",
        (object) "22:30:00"
      });
      this.cmbAppointmentTime.Location = new Point(236, 182);
      this.cmbAppointmentTime.Name = "cmbAppointmentTime";
      this.cmbAppointmentTime.Size = new Size(168, 24);
      this.cmbAppointmentTime.TabIndex = 7;
      this.btnUpdate.Location = new Point(738, 272);
      this.btnUpdate.Name = "btnUpdate";
      this.btnUpdate.Size = new Size(112, 30);
      this.btnUpdate.TabIndex = 8;
      this.btnUpdate.Text = "Update";
      this.btnUpdate.UseVisualStyleBackColor = true;
      this.btnUpdate.Click += new EventHandler(this.btnUpdate_Click);
      this.btnSearch.Location = new Point(403, 275);
      this.btnSearch.Name = "btnSearch";
      this.btnSearch.Size = new Size(112, 30);
      this.btnSearch.TabIndex = 12;
      this.btnSearch.Text = "Search";
      this.btnSearch.UseVisualStyleBackColor = true;
      this.btnSearch.Click += new EventHandler(this.btnSearch_Click);
      this.txtSearch.Font = new Font("Microsoft Sans Serif", 10.2f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtSearch.Location = new Point(19, 275);
      this.txtSearch.Name = "txtSearch";
      this.txtSearch.Size = new Size(378, 27);
      this.txtSearch.TabIndex = 11;
      this.txtSearch.TextChanged += new EventHandler(this.txtSearch_TextChanged);
      this.btnClear.Location = new Point(972, 272);
      this.btnClear.Name = "btnClear";
      this.btnClear.Size = new Size(112, 30);
      this.btnClear.TabIndex = 10;
      this.btnClear.Text = "Clear";
      this.btnClear.UseVisualStyleBackColor = true;
      this.btnClear.Click += new EventHandler(this.btnClear_Click);
      this.label1.AutoSize = true;
      this.label1.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label1.Location = new Point(6, 82);
      this.label1.Name = "label1";
      this.label1.Size = new Size(153, 25);
      this.label1.TabIndex = 7;
      this.label1.Text = "Doctor's Name";
      this.txtDoctorName.Enabled = false;
      this.txtDoctorName.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtDoctorName.Location = new Point(236, 79);
      this.txtDoctorName.Name = "txtDoctorName";
      this.txtDoctorName.Size = new Size(223, 30);
      this.txtDoctorName.TabIndex = 8;
      this.label2.AutoSize = true;
      this.label2.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.label2.Location = new Point(6, 37);
      this.label2.Name = "label2";
      this.label2.Size = new Size(157, 25);
      this.label2.TabIndex = 7;
      this.label2.Text = "Patient's Name";
      this.txtPatientName.Enabled = false;
      this.txtPatientName.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.txtPatientName.Location = new Point(236, 32);
      this.txtPatientName.Name = "txtPatientName";
      this.txtPatientName.Size = new Size(223, 30);
      this.txtPatientName.TabIndex = 8;
      this.groupBox1.Controls.Add((Control) this.cmbAppointmentTime);
      this.groupBox1.Controls.Add((Control) this.label2);
      this.groupBox1.Controls.Add((Control) this.txtDoctorName);
      this.groupBox1.Controls.Add((Control) this.txtPatientName);
      this.groupBox1.Controls.Add((Control) this.label1);
      this.groupBox1.Controls.Add((Control) this.lblAptDate);
      this.groupBox1.Controls.Add((Control) this.lblStartTime);
      this.groupBox1.Controls.Add((Control) this.dtpAppointmentDate);
      this.groupBox1.Location = new Point(19, 18);
      this.groupBox1.Name = "groupBox1";
      this.groupBox1.Size = new Size(575, 241);
      this.groupBox1.TabIndex = 12;
      this.groupBox1.TabStop = false;
      this.groupBox1.Text = "Appointment Info";
      this.groupBox2.Controls.Add((Control) this.txtPatientID);
      this.groupBox2.Controls.Add((Control) this.txtDoctorID);
      this.groupBox2.Controls.Add((Control) this.txtAppointmentID);
      this.groupBox2.Controls.Add((Control) this.lblPatientID);
      this.groupBox2.Controls.Add((Control) this.lblDoctorID);
      this.groupBox2.Controls.Add((Control) this.lblAppointmentID);
      this.groupBox2.Location = new Point(619, 27);
      this.groupBox2.Name = "groupBox2";
      this.groupBox2.Size = new Size(462, 174);
      this.groupBox2.TabIndex = 13;
      this.groupBox2.TabStop = false;
      this.groupBox2.Text = "Reference Info";
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.Controls.Add((Control) this.groupBox2);
      this.Controls.Add((Control) this.groupBox1);
      this.Controls.Add((Control) this.btnSearch);
      this.Controls.Add((Control) this.btnUpdate);
      this.Controls.Add((Control) this.btnClear);
      this.Controls.Add((Control) this.btnDelete);
      this.Controls.Add((Control) this.txtSearch);
      this.Controls.Add((Control) this.tableLayoutPanel);
      this.Name = nameof (UpdateAppointment);
      this.Padding = new Padding(0, 0, 0, 20);
      this.Size = new Size(1100, 623);
      this.Load += new EventHandler(this.CancelAppointment_Load);
      this.VisibleChanged += new EventHandler(this.UpdateAppointment_VisibleChanged);
      ((ISupportInitialize) this.dgvAppointment).EndInit();
      this.tableLayoutPanel.ResumeLayout(false);
      this.groupBox1.ResumeLayout(false);
      this.groupBox1.PerformLayout();
      this.groupBox2.ResumeLayout(false);
      this.groupBox2.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
