// Decompiled with JetBrains decompiler
// Type: Standard_Sales.ExcelImport.CellValueParser
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;

namespace Standard_Sales.ExcelImport
{
  public class CellValueParser : ICellValueParser
  {
    public string GetCellValue(
      OpenXmlPartContainer wbPart,
      EnumValue<CellValues> dataType,
      string value)
    {
label_1:
      int num1 = -213951663;
      CellValues cellValues1;
      string str1;
      string str2;
      CellValues cellValues2;
      bool flag;
      string cellValue;
      SharedStringTablePart sharedStringTablePart;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -487395780)) % 25U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -75279792 ^ 2057919526;
            continue;
          case 2:
            cellValues1 = cellValues2;
            num1 = (int) num2 * 1858463011 ^ 925655025;
            continue;
          case 3:
            sharedStringTablePart = wbPart.GetPartsOfType<SharedStringTablePart>().FirstOrDefault<SharedStringTablePart>();
            int num3;
            num1 = num3 = sharedStringTablePart != null ? -1742543687 : (num3 = -2048291602);
            continue;
          case 4:
            str1 = str2;
            num1 = (int) num2 * 635441716 ^ 944534752;
            continue;
          case 6:
            int num4 = cellValues1 != null ? -496596106 : (num4 = -435720575);
            num1 = num4 ^ (int) num2 * -1576791841;
            continue;
          case 7:
            int num5 = CellValueParser.\u202D‏⁭‬⁯‍‍‌⁫‌‎‭‫‏⁪‫⁬⁪‬‮‌‫⁪⁫‫⁮⁭‌⁬⁪‪‫⁫‪⁯‭‭⁭​‏‮(str1, \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(1663947869U)) ? -8290443 : (num5 = -178423350);
            num1 = num5 ^ (int) num2 * 1199158262;
            continue;
          case 8:
            value = CellValueParser.\u200E​⁯⁮⁬‌‏⁪‫‭‎⁪⁮‮‭‫⁯​‪‭‍⁪‮⁮‎‬⁫‏⁯⁮⁪‍‍‏​‪‮⁮⁪‮(((IEnumerable<OpenXmlElement>) CellValueParser.\u202B⁫⁫‮‍‪⁫⁯⁬‫‮‬‭‮‫‌⁬⁭⁭‮‌⁭‫‌⁬⁭‎⁪‬⁬⁪⁫⁪‮‏⁬⁬⁬⁪⁯‮(sharedStringTablePart)).ElementAt<OpenXmlElement>(int.Parse(value)));
            num1 = (int) num2 * 566198955 ^ 678928743;
            continue;
          case 9:
            cellValues2 = dataType.Value;
            num1 = (int) num2 * 938633177 ^ 1073751734;
            continue;
          case 10:
            int num6 = flag ? -1811397873 : (num6 = -1319428926);
            num1 = num6 ^ (int) num2 * -103290361;
            continue;
          case 11:
            value = \u003CModule\u003E.\u206F‌⁮​‫‫‮‬⁭⁬⁫⁮⁫⁭‌‮‌‏‬​⁭⁫‪​‫‮‬‫‬⁪⁬‍‍‮‬⁯‮‏‌‮‮<string>(1025765132U);
            num1 = -1863912010;
            continue;
          case 12:
            num1 = (int) num2 * 1782361495 ^ 1378154456;
            continue;
          case 13:
            value = \u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(2414935000U);
            num1 = -638940776;
            continue;
          case 14:
            str2 = value;
            num1 = -495794844;
            continue;
          case 15:
            num1 = (int) num2 * -2102898042 ^ -1686228370;
            continue;
          case 16:
            num1 = (int) num2 * 375416836 ^ 57811148;
            continue;
          case 17:
            num1 = (int) num2 * -364867918 ^ 1981455286;
            continue;
          case 18:
          case 19:
          case 21:
            num1 = -187284522;
            continue;
          case 20:
            cellValue = value;
            num1 = -1524946030;
            continue;
          case 22:
            flag = dataType != null;
            num1 = (int) num2 * 962393545 ^ -70934811;
            continue;
          case 23:
            num1 = (int) num2 * 419991571 ^ 2080079039;
            continue;
          case 24:
            int num7;
            num1 = num7 = cellValues1 != 3 ? -1846796357 : (num7 = -1842102461);
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return cellValue;
    }

    public CellValueParser()
    {
label_1:
      int num1 = -236297680;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1463559033)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1888962682 ^ -3037689;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static SharedStringTable \u202B⁫⁫‮‍‪⁫⁯⁬‫‮‬‭‮‫‌⁬⁭⁭‮‌⁭‫‌⁬⁭‎⁪‬⁬⁪⁫⁪‮‏⁬⁬⁬⁪⁯‮(
      [In] SharedStringTablePart obj0)
    {
      return obj0.SharedStringTable;
    }

    static string \u200E​⁯⁮⁬‌‏⁪‫‭‎⁪⁮‮‭‫⁯​‪‭‍⁪‮⁮‎‬⁫‏⁯⁮⁪‍‍‏​‪‮⁮⁪‮([In] OpenXmlElement obj0) => obj0.InnerText;

    static bool \u202D‏⁭‬⁯‍‍‌⁫‌‎‭‫‏⁪‫⁬⁪‬‮‌‫⁪⁫‫⁮⁭‌⁬⁪‪‫⁫‪⁯‭‭⁭​‏‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
