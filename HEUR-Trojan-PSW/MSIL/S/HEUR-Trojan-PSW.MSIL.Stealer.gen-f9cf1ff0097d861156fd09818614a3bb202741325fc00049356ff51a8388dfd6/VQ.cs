// Decompiled with JetBrains decompiler
// Type: rw.VQ
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace rw
{
  public class VQ
  {
    private string rM;
    public readonly VQ.ewY o7;
    private static VQ zR;

    public VQ(Kn _param1, vs _param2, string _param3)
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.o7 = this.Q4(_param1, _param2, _param3);
      this.rM = _param3;
    }

    public bool NF() => this.o7 == (VQ.ewY) 2;

    public bool We(out byte[] _param1)
    {
      _param1 = (byte[]) null;
      if (!this.NF())
        return false;
      using (BinaryReader binaryReader = new BinaryReader((Stream) File.Open(this.rM, FileMode.Open, FileAccess.Read)))
      {
        _param1 = binaryReader.ReadBytes((int) VQ.f5((object) binaryReader.BaseStream));
        return true;
      }
    }

    public bool T2(out string _param1)
    {
      _param1 = (string) null;
      Encoding encoding = this.Lr();
      bool flag1;
      if (encoding == null)
      {
        bool flag2 = this.o7 == (VQ.ewY) 2;
        int num1 = 0;
        if (VQ.AS() == null)
          goto label_13;
label_1:
        while (true)
        {
          switch (num1)
          {
            case 1:
              goto label_25;
            case 2:
              goto label_23;
            default:
              if (flag2)
              {
                int num2;
                num1 = VQ.br() ? 1 : num2;
                continue;
              }
              goto label_19;
          }
        }
label_19:
        StreamReader streamReader = new StreamReader(this.rM, true);
        try
        {
          _param1 = streamReader.ReadToEnd();
          flag1 = true;
          goto label_23;
        }
        finally
        {
          if (streamReader != null)
            VQ.HY((object) streamReader);
        }
label_25:
        flag1 = false;
        goto label_23;
label_13:
        num1 = 0;
        goto label_1;
      }
      else
        goto label_24;
label_23:
      return flag1;
label_24:
      if (this.o7 != (VQ.ewY) 5)
      {
        StreamReader streamReader = new StreamReader(this.rM, encoding);
        try
        {
          _param1 = (string) VQ.My((object) streamReader);
          flag1 = true;
          goto label_23;
        }
        finally
        {
          if (streamReader != null)
            VQ.HY((object) streamReader);
        }
      }
      else
      {
        using (BinaryReader binaryReader = new BinaryReader((Stream) VQ.C6((object) this.rM, FileMode.Open, FileAccess.Read)))
        {
          byte[] numArray = (byte[]) VQ.ts((object) binaryReader, (int) binaryReader.BaseStream.Length);
          StringBuilder stringBuilder = new StringBuilder();
          int index = 0;
          while (true)
          {
            bool flag3 = index < numArray.Length;
            int num3 = 0;
            if (!VQ.br())
              goto label_7;
label_3:
            switch (num3)
            {
              case 1:
                char ch = (char) ((uint) numArray[index] << 8 | (uint) numArray[index + 1]);
                VQ.Gm((object) stringBuilder, ch);
                index += 2;
                continue;
              default:
                if (flag3)
                  goto case 1;
                else
                  goto label_4;
            }
label_7:
            int num4;
            num3 = num4;
            goto label_3;
          }
label_4:
          _param1 = stringBuilder.ToString();
          flag1 = true;
          goto label_23;
        }
      }
    }

    private Encoding Lr()
    {
      switch (this.o7)
      {
        case (VQ.ewY) 1:
          return (Encoding) new ASCIIEncoding();
        case (VQ.ewY) 2:
        case (VQ.ewY) 9:
label_2:
          return (Encoding) null;
        case (VQ.ewY) 3:
          return (Encoding) new UTF8Encoding();
        case (VQ.ewY) 4:
        case (VQ.ewY) 5:
        case (VQ.ewY) 6:
label_9:
          return (Encoding) new UnicodeEncoding();
        case (VQ.ewY) 7:
        case (VQ.ewY) 8:
          return (Encoding) new UTF32Encoding();
        default:
          int num1 = 1;
          if (!VQ.br())
            goto label_4;
label_1:
          switch (num1)
          {
            case 1:
              Debug.Assert(false);
              return (Encoding) null;
            case 2:
              goto label_2;
            default:
              goto label_9;
          }
label_4:
          int num2;
          num1 = num2;
          goto label_1;
      }
    }

    private static VQ.ewY BB(string _param0)
    {
      VQ.ewY ewY;
      using (BinaryReader binaryReader = new BinaryReader((Stream) File.Open(_param0, FileMode.Open, FileAccess.Read)))
      {
        byte[] numArray = binaryReader.ReadBytes(4);
        if (numArray.Length != 0)
        {
          if (numArray.Length != 1 && numArray.Length != 3)
            goto label_12;
          else
            goto label_25;
label_3:
          int num1;
          int num2 = num1;
label_4:
          bool flag;
          while (true)
          {
            switch (num2)
            {
              case 1:
                goto label_19;
              case 2:
                if (flag)
                {
                  num2 = 7;
                  continue;
                }
                goto label_8;
              case 3:
                goto label_18;
              case 4:
                goto label_1;
              case 5:
                goto label_24;
              case 6:
                goto label_12;
              case 7:
                goto label_14;
              case 8:
                goto label_23;
              default:
                goto label_20;
            }
          }
label_8:
          if (numArray[0] == (byte) 0 && numArray[1] > (byte) 0)
          {
            ewY = (VQ.ewY) 5;
            goto label_1;
          }
          else
            goto label_23;
label_14:
          ewY = (VQ.ewY) 8;
          goto label_1;
label_18:
          int num3 = numArray[1] == (byte) 0 ? 1 : 0;
          goto label_31;
label_19:
          int num4 = numArray[0] == (byte) 0 ? 1 : 0;
          goto label_29;
label_23:
          ewY = numArray[0] == (byte) 0 || numArray[1] != (byte) 0 ? (VQ.ewY) 3 : (VQ.ewY) 6;
          goto label_1;
label_24:
          int num5 = numArray[0] > (byte) 0 ? 1 : 0;
          goto label_27;
label_12:
          if (numArray.Length == 2)
          {
            if (VQ.AS() == null)
            {
              num2 = 5;
              goto label_4;
            }
            else
              goto label_3;
          }
          else
          {
            num5 = 0;
            goto label_27;
          }
label_20:
          if (numArray.Length == 2)
          {
            if (VQ.AS() == null)
            {
              num2 = 1;
              goto label_4;
            }
            else
              goto label_3;
          }
          else
          {
            num4 = 0;
            goto label_29;
          }
label_25:
          ewY = (VQ.ewY) 3;
          if (VQ.br())
          {
            num2 = 4;
            goto label_4;
          }
          else
            goto label_3;
label_27:
          if (num5 != 0)
          {
            ewY = (VQ.ewY) 6;
            goto label_1;
          }
          else
            goto label_20;
label_29:
          if (num4 == 0)
          {
            if (numArray[0] == (byte) 0)
            {
              num2 = 3;
              goto label_4;
            }
            else
              num3 = 0;
          }
          else
          {
            ewY = (VQ.ewY) 5;
            goto label_1;
          }
label_31:
          flag = num3 != 0;
          num2 = 2;
          if (VQ.AS() == null)
            goto label_4;
          else
            goto label_3;
        }
        else
          ewY = (VQ.ewY) 0;
      }
label_1:
      return ewY;
    }

    private VQ.ewY Q4(Kn _param1, vs _param2, string _param3)
    {
      VQ.ewY ewY;
      bool flag;
      int num1;
      switch (_param1)
      {
        case (Kn) 0:
          if (_param2 == (vs) 2)
          {
            ewY = VQ.wT((object) _param3);
            goto label_6;
          }
          else
          {
            flag = _param2 == (vs) 1;
            num1 = 2;
            break;
          }
        case (Kn) 1:
          ewY = (VQ.ewY) 3;
          int num2;
          num1 = VQ.br() ? 1 : num2;
          break;
        case (Kn) 2:
          ewY = (VQ.ewY) 2;
          goto label_6;
        case (Kn) 3:
          ewY = (VQ.ewY) 1;
          goto label_6;
        default:
label_2:
          ewY = (VQ.ewY) 0;
          goto label_6;
      }
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_6;
          case 2:
            if (flag)
            {
              num1 = !VQ.br() ? 1 : 3;
              continue;
            }
            goto label_7;
          case 3:
            goto label_13;
          default:
            goto label_2;
        }
      }
label_7:
      ewY = (VQ.ewY) 4;
      goto label_6;
label_13:
      ewY = (VQ.ewY) 9;
label_6:
      return ewY;
    }

    internal static bool br() => VQ.zR == null;

    internal static VQ AS() => VQ.zR;

    internal static long f5([In] object obj0) => ((Stream) obj0).Length;

    internal static void HY([In] object obj0) => ((IDisposable) obj0).Dispose();

    internal static object C6([In] object obj0, [In] FileMode obj1, [In] FileAccess obj2) => (object) File.Open((string) obj0, obj1, obj2);

    internal static object ts([In] object obj0, [In] int obj1) => (object) ((BinaryReader) obj0).ReadBytes(obj1);

    internal static object Gm([In] object obj0, [In] char obj1) => (object) ((StringBuilder) obj0).Append(obj1);

    internal static object My([In] object obj0) => (object) ((TextReader) obj0).ReadToEnd();

    internal static VQ.ewY wT([In] object obj0) => VQ.BB((string) obj0);

    public enum ewY
    {
    }
  }
}
