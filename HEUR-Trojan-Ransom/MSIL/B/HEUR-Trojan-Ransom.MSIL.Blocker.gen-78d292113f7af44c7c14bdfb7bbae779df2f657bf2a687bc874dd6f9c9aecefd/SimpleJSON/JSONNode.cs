// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: CustomA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ABC0B0F-8965-48BE-A39F-300B4A85D17D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-78d292113f7af44c7c14bdfb7bbae779df2f657bf2a687bc874dd6f9c9aecefd.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = 2127258697;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 769238749)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1274009044 ^ -1203276986;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 216334508;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 874091312)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -563071327 ^ -1465982800;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -937963802;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -603197581)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              str = "";
              num1 = (int) num2 * 691602876 ^ 1318384085;
              continue;
            case 2:
              num1 = (int) num2 * -852779187 ^ 686952554;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 831229866;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 309697592)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * 1372917169 ^ 676052040;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
      this.Add("", aItem);
label_1:
      int num1 = 1149740275;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1625099891)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1435410320 ^ -844975638;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1081589742;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -604896866)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -924060820 ^ 2047203989;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1602477092;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1497187249)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -2053663614 ^ -180936117;
            continue;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1671676827 ^ -1924990906;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 2120754146;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1364648926)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1585675481 ^ -201888250;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 2089284463;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 408114393)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -139856077 ^ -37025888;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = 1607211811;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2136913243)) % 3U)
          {
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 454242806 ^ -376040636;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -1450942877;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2123702930)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 453002005 ^ -1930679663;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1725862543 ^ -1296938973;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -651266856;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1687027816)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1411668038 ^ -679605010;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = -1260137473;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2065926892)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = -179958875;
              continue;
            case 2:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -835812863 ^ 757680432;
              continue;
            case 3:
              num1 = (int) num2 * -1016802642 ^ -1614872860;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * 695314913 ^ -1855089738;
              continue;
            case 6:
              int num3 = flag ? 897148113 : (num3 = 69141252);
              num1 = num3 ^ (int) num2 * 1240655703;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1977935992;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1186174561)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1221691043 ^ 2019009943;
              continue;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1253776961 ^ 1993609390;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 2094063251;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1484675523)) % 9U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * 340859822 ^ -870363169;
              continue;
            case 1:
              int num3 = flag ? 673420964 : (num3 = 370994031);
              num1 = num3 ^ (int) num2 * 2088559002;
              continue;
            case 2:
              result = 0.0f;
              num1 = (int) num2 * 2089167758 ^ 43782494;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = 580690588;
              continue;
            case 4:
              num1 = (int) num2 * -1078977624 ^ 1316250517;
              continue;
            case 5:
              goto label_1;
            case 6:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202E‏‬‮‎⁫⁪‭⁬‍‏‬‌‌‏⁮‬‬⁭⁭‍⁯‎⁬‪⁮‌‏⁫‭‏‬‪‍⁮⁯⁯‪​⁯‮(), out result);
              num1 = (int) num2 * -344145164 ^ 987272739;
              continue;
            case 8:
              num1 = (int) num2 * -235161356 ^ 602485525;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = -1911577821;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1893099862)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1366052360 ^ 1937708002;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = 1791951396;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 983818424)) % 7U)
          {
            case 0:
              goto label_1;
            case 2:
              asDouble = result;
              num1 = (int) num2 * -591677807 ^ -1745797860;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = 1935115306;
              continue;
            case 4:
              int num3 = flag ? 2002329034 : (num3 = 1451947084);
              num1 = num3 ^ (int) num2 * 1697782932;
              continue;
            case 5:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1406926179 ^ 494090553;
              continue;
            case 6:
              num1 = (int) num2 * 1568085725 ^ -1526121824;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 63185979;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 335049120)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 636980625 ^ 1990165216;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 97190826;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 683002951)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1784813726 ^ -1554838336;
              continue;
            case 1:
              asBool = result;
              num1 = (int) num2 * -652197217 ^ -64730995;
              continue;
            case 3:
              int num3 = !bool.TryParse(this.Value, out result) ? 2021295983 : (num3 = 1033944504);
              num1 = num3 ^ (int) num2 * 1822706259;
              continue;
            case 4:
              result = false;
              num1 = (int) num2 * -1091807211 ^ -344536934;
              continue;
            case 5:
              goto label_1;
            case 6:
              asBool = !JSONNode.\u206A⁯⁪⁮⁫⁫‌‮⁫⁮‌‮‫‍​​‪‫‏‫‍⁮⁯‭‍‎‏​‎⁮⁬‌‪⁯‌‌‬‌‏‪‮(this.Value);
              num1 = 110550515;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -1127118075;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1485493028)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1891611614;
              continue;
            case 2:
              num1 = (int) num2 * -1650006951 ^ -1899778975;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1481889051;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1053949450)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 997955959 ^ -847667419;
              continue;
            case 3:
              asArray = this as JSONArray;
              num1 = (int) num2 * 716053599 ^ 1134711289;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1121556318;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1106440707)) % 4U)
          {
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1314472779 ^ -1577246873;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -314712534 ^ -1046728275;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1356487895;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1933170502)) % 4U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 2:
            goto label_1;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 866769348 ^ 393431878;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -962488921;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -1694645939;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -95230980)) % 6U)
        {
          case 0:
            flag = (object) a == b;
            num1 = -1242646015;
            continue;
          case 1:
            flag = true;
            num1 = (int) num2 * -1018859541 ^ -2041207309;
            continue;
          case 2:
            num1 = (int) num2 * -62210094 ^ 1791222285;
            continue;
          case 4:
            goto label_1;
          case 5:
            goto label_3;
          default:
            goto label_9;
        }
      }
label_3:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_9:
      return flag;
label_4:
      num3 = 0;
label_5:
      num1 = num3 != 0 ? -62039817 : (num1 = -1567780956);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -865024992;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -192004658)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 911662743 ^ 637318821;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -361644711;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1163333748)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1182386153 ^ -1307579659;
            continue;
          case 2:
            num1 = (int) num2 * 220776221 ^ 1400640777;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u202D‍⁮⁭‮‪‮⁪‮‬‮⁮⁬​⁯⁪⁯‫‪‬‪‫⁯⁫⁮‪‫‪​​‌‍‫‮‭⁮⁪‬‍‏‮();
label_1:
      int num1 = 1167884444;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 350628444)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1581011061 ^ -1361516442;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 1905283189;
      char ch1;
      string str1;
      string str2;
      string str3;
      int num2;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 467067328)) % 29U)
        {
          case 0:
            str3 = aText;
            num2 = 0;
            num1 = (int) num3 * 1604060407 ^ 1073136851;
            continue;
          case 1:
label_20:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\r");
            num1 = 330052433;
            continue;
          case 2:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u202B‎⁮​‌‭⁮‪⁯⁫‪⁫​⁮⁭⁭‬‪‭‫‏⁮⁭⁫​⁪⁪​⁮‮⁫‬‎⁭‫‮⁫⁮‍‌‮(str3) ? 275616155 : (num4 = 48540670);
            continue;
          case 3:
            int num5;
            num1 = num5 = ch1 == '"' ? 2034597513 : (num5 = 548279951);
            continue;
          case 4:
            int num6;
            num1 = num6 = ch1 == '\\' ? 1551553582 : (num6 = 1597882885);
            continue;
          case 5:
            str1 = "";
            num1 = (int) num3 * -2094513479 ^ 118219289;
            continue;
          case 6:
            num1 = (int) num3 * -1922206542 ^ 156656419;
            continue;
          case 7:
            num1 = (int) num3 * -2068953634 ^ 1998624273;
            continue;
          case 8:
            num1 = (int) num3 * 179746922 ^ 1520736120;
            continue;
          case 9:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\\\");
            num1 = 311053663;
            continue;
          case 10:
            num1 = (int) num3 * 502496330 ^ 1970534739;
            continue;
          case 11:
            num1 = (int) num3 * 1042879836 ^ 1010598883;
            continue;
          case 12:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\\"");
            num1 = 1482432066;
            continue;
          case 13:
label_16:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\b");
            num1 = 52433061;
            continue;
          case 14:
            num1 = (int) num3 * -1639493855 ^ -534318316;
            continue;
          case 15:
            goto label_1;
          case 16:
            ++num2;
            num1 = 354521168;
            continue;
          case 17:
label_29:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, ch2.ToString());
            num1 = 52433061;
            continue;
          case 18:
            str2 = str1;
            num1 = (int) num3 * -1346171179 ^ -1620983845;
            continue;
          case 19:
label_9:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\t");
            num1 = 52433061;
            continue;
          case 20:
            num1 = (int) num3 * 1126069627 ^ -219464237;
            continue;
          case 21:
            ch2 = JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(str3, num2);
            ch1 = ch2;
            num1 = 1920534921;
            continue;
          case 22:
label_18:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\n");
            num1 = 1690083129;
            continue;
          case 23:
            switch (ch1)
            {
              case '\b':
                goto label_16;
              case '\t':
                goto label_9;
              case '\n':
                goto label_18;
              case '\v':
                goto label_29;
              case '\f':
                goto label_26;
              case '\r':
                goto label_20;
              default:
                num1 = (int) num3 * -1083488488 ^ 658003933;
                continue;
            }
          case 24:
            num1 = (int) num3 * 1751757408 ^ 326741957;
            continue;
          case 26:
            num1 = (int) num3 * 2140423843 ^ -1331182935;
            continue;
          case 27:
            num1 = (int) num3 * 1533145150 ^ 753215740;
            continue;
          case 28:
label_26:
            str1 = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(str1, "\\f");
            num1 = 5503163;
            continue;
          default:
            goto label_31;
        }
      }
label_31:
      return str2;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -1592855911;
      bool flag1;
      char ch1;
      bool flag2;
      bool flag3;
      string aItem;
      JSONNode jsonNode1;
      bool flag4;
      string aKey;
      int num2;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      char ch2;
      char ch3;
      bool flag13;
      char ch4;
      bool flag14;
      bool flag15;
      bool flag16;
      bool flag17;
      bool flag18;
      bool flag19;
      string s;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -328955085)) % 157U)
        {
          case 0:
            flag19 = flag2;
            num1 = (int) num3 * -608097405 ^ -473646512;
            continue;
          case 1:
            int num4 = ch1 != ':' ? 284400574 : (num4 = 302230637);
            num1 = num4 ^ (int) num3 * -125677290;
            continue;
          case 2:
            num1 = (int) num3 * -1699397431 ^ 1095294862;
            continue;
          case 3:
            int num5 = flag9 ? -554399761 : (num5 = -18224075);
            num1 = num5 ^ (int) num3 * 1723372389;
            continue;
          case 4:
            num1 = -480788921;
            continue;
          case 5:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -2024782531 ^ 1769233051;
            continue;
          case 6:
            num1 = (int) num3 * 1078244748 ^ 227755564;
            continue;
          case 7:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -586822335 ^ 77980239;
            continue;
          case 8:
            int num6 = ch4 == 'b' ? 1889686194 : (num6 = 1955672810);
            num1 = num6 ^ (int) num3 * 1468083462;
            continue;
          case 9:
            int num7 = flag16 ? -1755372184 : (num7 = -646214457);
            num1 = num7 ^ (int) num3 * -1736389439;
            continue;
          case 10:
            num1 = (int) num3 * 1778103418 ^ -1886682401;
            continue;
          case 11:
            int num8;
            num1 = num8 = ch4 != 'f' ? -353968603 : (num8 = -2121732783);
            continue;
          case 12:
            s = JSONNode.\u206F⁭​‪‫​‎⁮‬‭‍⁮‍‬‍⁮‌‌​‬‎⁯‍⁬‮‫‭⁮‌‭⁮‫⁪⁮​‎⁪‮‭‎‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1243786583 ^ 633638106;
            continue;
          case 13:
            int num9;
            num1 = num9 = ch1 != '}' ? -1198328209 : (num9 = -694343829);
            continue;
          case 14:
            ch1 = JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2);
            num1 = -1895787838;
            continue;
          case 15:
            int num10 = flag1 ? -1514697773 : (num10 = -825787607);
            num1 = num10 ^ (int) num3 * 166440322;
            continue;
          case 16:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1437276608 ^ 1595269334;
            continue;
          case 17:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1100435321 ^ -1588626281;
            continue;
          case 18:
            goto label_70;
          case 19:
            aKey = JSONNode.\u202B​⁫⁫‎⁫⁫⁪‍‮⁮⁭‮‮‏​⁯⁯‫⁮⁪⁫⁮⁮‎‪‫‏⁯⁫‌‫​​⁭⁬‮⁮‮⁯‮(aKey);
            flag13 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -371001963 ^ -1264470260;
            continue;
          case 20:
            aKey = "";
            aItem = "";
            num1 = -1484176343;
            continue;
          case 21:
            aKey = "";
            num1 = -307536547;
            continue;
          case 22:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1787271647 ^ 727498674;
            continue;
          case 23:
label_64:
            num1 = -1766865206;
            continue;
          case 24:
            num1 = (int) num3 * -1135920935 ^ -1081962002;
            continue;
          case 25:
            int num11 = !flag5 ? -140472234 : (num11 = -506109616);
            num1 = num11 ^ (int) num3 * -1162611252;
            continue;
          case 26:
            flag14 = num2 < JSONNode.\u202B‎⁮​‌‭⁮‪⁯⁫‪⁫​⁮⁭⁭‬‪‭‫‏⁮⁭⁫​⁪⁪​⁮‮⁫‬‎⁭‫‮⁫⁮‍‌‮(aJSON);
            num1 = -640274351;
            continue;
          case 27:
            int num12;
            num1 = num12 = JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aKey, "") ? -1294881246 : (num12 = -675095697);
            continue;
          case 28:
            int num13;
            num1 = num13 = ch1 != '"' ? -2060104381 : (num13 = -1359478595);
            continue;
          case 29:
            int num14 = !flag4 ? -1164303281 : (num14 = -893505513);
            num1 = num14 ^ (int) num3 * -119503460;
            continue;
          case 30:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1854568872 ^ -275530962;
            continue;
          case 31:
            aKey = aItem;
            aItem = "";
            num1 = -210235684;
            continue;
          case 32:
            aKey = "";
            num1 = -1388878596;
            continue;
          case 33:
label_78:
            ++num2;
            num1 = -236562515;
            continue;
          case 34:
            num1 = (int) num3 * -346665458 ^ -964204031;
            continue;
          case 35:
label_8:
            flag3 = flag2;
            num1 = -257978377;
            continue;
          case 36:
            aItem = "";
            num1 = (int) num3 * 1919227012 ^ 539456711;
            continue;
          case 37:
label_84:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = -1940619368;
            continue;
          case 38:
label_71:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, ch2.ToString());
            num1 = -1085566247;
            continue;
          case 39:
            num1 = -708247986;
            continue;
          case 40:
            num1 = (int) num3 * 1208971303 ^ -1995384108;
            continue;
          case 41:
            flag5 = JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aKey, "");
            num1 = -563418709;
            continue;
          case 42:
            int num15;
            num1 = num15 = ch1 <= ']' ? -1630939210 : (num15 = -1531887889);
            continue;
          case 43:
          case 44:
          case 79:
          case 98:
          case 144:
label_82:
            ++num2;
            num1 = -1599626030;
            continue;
          case 45:
            int num16 = flag6 ? -983294168 : (num16 = -900107577);
            num1 = num16 ^ (int) num3 * 52496523;
            continue;
          case 46:
            int num17 = !flag12 ? 1083841319 : (num17 = 1167137923);
            num1 = num17 ^ (int) num3 * 1133810019;
            continue;
          case 47:
            flag7 = flag2;
            num1 = -1195664197;
            continue;
          case 48:
            num1 = (int) num3 * -94275618 ^ -300102274;
            continue;
          case 49:
            goto label_1;
          case 50:
            int num18;
            num1 = num18 = ch1 == '{' ? -753111163 : (num18 = -2112378584);
            continue;
          case 51:
            flag16 = JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aKey, "");
            num1 = -1767299252;
            continue;
          case 52:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1494557201;
            continue;
          case 53:
            num1 = (int) num3 * 528506851 ^ 997321178;
            continue;
          case 54:
            int num19 = flag18 ? -1652154402 : (num19 = -989717264);
            num1 = num19 ^ (int) num3 * 918132201;
            continue;
          case 55:
            num1 = (int) num3 * 1187674191 ^ 584274631;
            continue;
          case 56:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 530775207 ^ 799459405;
            continue;
          case 57:
            num1 = -518577595;
            continue;
          case 58:
            flag12 = JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aKey, "");
            num1 = -1904509496;
            continue;
          case 59:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1715670224 ^ -607276449;
            continue;
          case 60:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1450671042 ^ -1266648296;
            continue;
          case 61:
            goto label_105;
          case 62:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 402346691 ^ 745650845;
            continue;
          case 63:
            int num20 = flag7 ? 1019267776 : (num20 = 1756092838);
            num1 = num20 ^ (int) num3 * -328038396;
            continue;
          case 64:
            num2 = 0;
            num1 = (int) num3 * 1919988704 ^ -538620599;
            continue;
          case 65:
            flag6 = flag2;
            num1 = (int) num3 * -1651951600 ^ -67343083;
            continue;
          case 66:
label_29:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, "\t");
            num1 = -751575449;
            continue;
          case 67:
            num1 = (int) num3 * 204664500 ^ 965368891;
            continue;
          case 68:
            int num21 = ch1 <= ' ' ? -40860474 : (num21 = -1711960443);
            num1 = num21 ^ (int) num3 * -611240394;
            continue;
          case 69:
            num1 = (int) num3 * 612796132 ^ 864417280;
            continue;
          case 70:
            flag10 = flag2;
            num1 = -1668297081;
            continue;
          case 71:
            num1 = (int) num3 * -1454129512 ^ 1792858169;
            continue;
          case 72:
            num1 = (int) num3 * -1978327026 ^ -326587888;
            continue;
          case 73:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1090633579 ^ -1342502376;
            continue;
          case 74:
label_10:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, "\r");
            num1 = -1574132655;
            continue;
          case 75:
            num1 = (int) num3 * 567932316 ^ 1504925493;
            continue;
          case 76:
label_153:
            int num22;
            num1 = num22 = flag2 ? -1659288032 : (num22 = -1206990159);
            continue;
          case 77:
            num1 = (int) num3 * 721102607 ^ -755302481;
            continue;
          case 78:
            num1 = (int) num3 * -1862288394 ^ -1630616353;
            continue;
          case 80:
            num1 = (int) num3 * -802306370 ^ -241017329;
            continue;
          case 81:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1959308888 ^ -824604562;
            continue;
          case 82:
            flag2 = !flag2;
            num1 = -1940619368;
            continue;
          case 83:
            num1 = -145584612;
            continue;
          case 84:
            jsonNodeStack.Pop();
            flag15 = JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aItem, "");
            num1 = -1409188523;
            continue;
          case 85:
            aItem = "";
            aKey = "";
            flag2 = false;
            num1 = (int) num3 * 1302119317 ^ -1871233104;
            continue;
          case 86:
            num1 = (int) num3 * 174117457 ^ -1974109513;
            continue;
          case 87:
            num1 = (int) num3 * -1929528052 ^ -656270210;
            continue;
          case 88:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, "\n");
            num1 = -1112271608;
            continue;
          case 89:
            int num23 = ch1 <= ',' ? -1884673855 : (num23 = -2070929534);
            num1 = num23 ^ (int) num3 * -1054337062;
            continue;
          case 90:
            int num24 = ch4 > 'f' ? 1308790674 : (num24 = 774672486);
            num1 = num24 ^ (int) num3 * 2147081148;
            continue;
          case 91:
            int num25 = !flag11 ? -126042902 : (num25 = -54932263);
            num1 = num25 ^ (int) num3 * 160255416;
            continue;
          case 92:
            switch (ch1)
            {
              case '\t':
                goto label_153;
              case '\n':
              case '\r':
                goto label_82;
              case '\v':
              case '\f':
                goto label_84;
              default:
                num1 = (int) num3 * -1602966551 ^ -1319975240;
                continue;
            }
          case 93:
            aItem = "";
            num1 = (int) num3 * 798615250 ^ -655517077;
            continue;
          case 94:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * -1081518200 ^ -699763551;
            continue;
          case 95:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1436704186 ^ 1441350793;
            continue;
          case 96:
            flag17 = jsonNode1 != (object) null;
            num1 = (int) num3 * -697130319 ^ -593673385;
            continue;
          case 97:
            num1 = (int) num3 * -551858635 ^ 483499109;
            continue;
          case 99:
            num1 = (int) num3 * -413587130 ^ -674690322;
            continue;
          case 100:
            int num26;
            num1 = num26 = ch1 == ',' ? -1242308986 : (num26 = -542325712);
            continue;
          case 101:
            num1 = (int) num3 * -2035416596 ^ 1562668025;
            continue;
          case 102:
            aKey = "";
            aItem = "";
            int num27;
            num1 = num27 = jsonNodeStack.Count <= 0 ? -486561919 : (num27 = -738157673);
            continue;
          case 103:
            num1 = (int) num3 * 69468217 ^ 200958468;
            continue;
          case 104:
            num1 = (int) num3 * -904170841 ^ 1365996459;
            continue;
          case 105:
            int num28 = flag14 ? 933329054 : (num28 = 872340591);
            num1 = num28 ^ (int) num3 * 64419652;
            continue;
          case 106:
            jsonNode2 = jsonNode1;
            num1 = -1848953932;
            continue;
          case 107:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -967944975 ^ -31607932;
            continue;
          case 108:
label_40:
            flag1 = flag2;
            num1 = -200408477;
            continue;
          case 109:
            ch4 = ch3;
            num1 = (int) num3 * -2136560736 ^ 1033933280;
            continue;
          case 110:
            int num29 = flag13 ? 2052765132 : (num29 = 346942513);
            num1 = num29 ^ (int) num3 * -1780397314;
            continue;
          case 111:
            num1 = (int) num3 * 1066385335 ^ 1577177995;
            continue;
          case 112:
            num1 = (int) num3 * -287550077 ^ 1067093514;
            continue;
          case 113:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1698365451 ^ 350687373;
            continue;
          case 114:
            num1 = (int) num3 * -1171496483 ^ -1046506327;
            continue;
          case 115:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, "\f");
            num1 = -787813866;
            continue;
          case 116:
            flag8 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1115208475 ^ 1628529478;
            continue;
          case 117:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 920985147 ^ -1324530982;
            continue;
          case 118:
            ch2 = JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2);
            ch3 = ch2;
            num1 = (int) num3 * 1688386837 ^ 250382783;
            continue;
          case 119:
            flag18 = jsonNodeStack.Count == 0;
            num1 = -1193052665;
            continue;
          case 120:
            int num30 = !flag10 ? 1155189818 : (num30 = 2092044957);
            num1 = num30 ^ (int) num3 * -1619402729;
            continue;
          case 121:
            int num31 = !flag15 ? -1044916405 : (num31 = -1584559054);
            num1 = num31 ^ (int) num3 * 1720437090;
            continue;
          case 122:
            int num32;
            num1 = num32 = ch4 == 'n' ? -671660970 : (num32 = -1116424545);
            continue;
          case 123:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -234492840 ^ -2120206163;
            continue;
          case 124:
            int num33;
            num1 = num33 = flag2 ? -1008119348 : (num33 = -898726189);
            continue;
          case 125:
            int num34;
            num1 = num34 = !JSONNode.\u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮(aItem, "") ? -145584612 : (num34 = -1678199777);
            continue;
          case 126:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, JSONNode.\u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮(aJSON, num2).ToString());
            num1 = (int) num3 * -177507462 ^ -955609409;
            continue;
          case (uint) sbyte.MaxValue:
            int num35 = flag8 ? -2059346092 : (num35 = -1710932389);
            num1 = num35 ^ (int) num3 * -835914654;
            continue;
          case 129:
            switch (ch1)
            {
              case '[':
                goto label_8;
              case '\\':
                goto label_78;
              case ']':
                goto label_40;
              default:
                num1 = -350273848;
                continue;
            }
          case 130:
            int num36 = !flag17 ? -1636775738 : (num36 = -1481765124);
            num1 = num36 ^ (int) num3 * -1833523873;
            continue;
          case 131:
            aItem = JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮(aItem, "\b");
            num1 = -1895084077;
            continue;
          case 132:
            int num37 = !flag3 ? 1063482893 : (num37 = 676444680);
            num1 = num37 ^ (int) num3 * -410546810;
            continue;
          case 133:
            num1 = (int) num3 * 320011503 ^ -1451746810;
            continue;
          case 134:
            num1 = (int) num3 * 795851192 ^ 1099396856;
            continue;
          case 135:
            aKey = JSONNode.\u202B​⁫⁫‎⁫⁫⁪‍‮⁮⁭‮‮‏​⁯⁯‫⁮⁪⁫⁮⁮‎‪‫‏⁯⁫‌‫​​⁭⁬‮⁮‮⁯‮(aKey);
            num1 = (int) num3 * 484473863 ^ -1786877967;
            continue;
          case 136:
            int num38;
            num1 = num38 = ch1 == ' ' ? -789351897 : (num38 = -1487185758);
            continue;
          case 137:
            num1 = (int) num3 * 310014907 ^ 820028607;
            continue;
          case 138:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1521281981 ^ 1753959892;
            continue;
          case 139:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -387145035;
            continue;
          case 140:
            num1 = (int) num3 * -1747713378 ^ 1475787323;
            continue;
          case 141:
            num1 = (int) num3 * 1219516544 ^ -844208396;
            continue;
          case 142:
            num2 += 4;
            num1 = (int) num3 * 1826556864 ^ -1699035296;
            continue;
          case 143:
            num1 = (int) num3 * 2131847260 ^ 915172961;
            continue;
          case 145:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -282230909 ^ 748228786;
            continue;
          case 146:
            num1 = (int) num3 * 17757475 ^ 1780865199;
            continue;
          case 147:
            num1 = (int) num3 * -48856361 ^ 1569935991;
            continue;
          case 148:
            num1 = -605438699;
            continue;
          case 149:
            num1 = (int) num3 * 1908946953 ^ 2036030308;
            continue;
          case 150:
            switch (ch4)
            {
              case 'r':
                goto label_10;
              case 's':
                goto label_71;
              case 't':
                goto label_29;
              case 'u':
                goto label_64;
              default:
                num1 = -947273016;
                continue;
            }
          case 151:
            num1 = (int) num3 * -367223241 ^ -1031765699;
            continue;
          case 152:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1903114987 ^ 1875463049;
            continue;
          case 153:
            aKey = JSONNode.\u202B​⁫⁫‎⁫⁫⁪‍‮⁮⁭‮‮‏​⁯⁯‫⁮⁪⁫⁮⁮‎‪‫‏⁯⁫‌‫​​⁭⁬‮⁮‮⁯‮(aKey);
            num1 = (int) num3 * 300263236 ^ -1179662586;
            continue;
          case 154:
            num1 = (int) num3 * 263776888 ^ -982143663;
            continue;
          case 155:
            num1 = (int) num3 * -1770652890 ^ 1158380049;
            continue;
          case 156:
            int num39 = flag19 ? -456411082 : (num39 = -734931377);
            num1 = num39 ^ (int) num3 * 2144066040;
            continue;
          default:
            goto label_157;
        }
      }
label_70:
      throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_105:
      throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("JSON Parse: Too many closing brackets");
label_157:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 388836375;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1542521)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Serialize(JSONNode.\u202C‍‏‮‪‭⁭‌⁪​⁮⁬⁭‬⁪‭‮⁬⁮​‏‌⁪⁮‮⁮⁪⁪‍‎⁯‭‮⁪⁫‎‪‎‎‭‮(aData));
            num1 = (int) num2 * -2084930402 ^ 2037047026;
            continue;
          case 3:
            num1 = (int) num2 * 1637557772 ^ -1676928212;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200E⁯‪‏‏‫‫⁮⁫⁮⁯⁭‍‭‮‪‭⁯‪‫‭‬⁪⁫⁫⁭‎‭⁭⁫‫​​⁬‫‎‎⁬‎‬‮(JSONNode.\u200D‎⁫‬​‫⁭‌‭​​⁪⁯⁫⁯‭⁯‍‌‍⁪⁮⁫⁫⁭⁯‍⁭‌⁭‌‏‏⁫⁫⁫‎⁯⁬⁯‮((FileSystemInfo) JSONNode.\u200B⁯⁮‎‏⁫​‪⁯‏⁮⁯‏‪⁬⁬‍⁭‌⁯⁯‭⁯‪‌⁫‮⁫⁭‬‪⁯‍⁭​‏⁪​‍‮‮(JSONNode.\u206E⁯​‍‪⁮⁮‏‌​‪‮⁫‌‪​⁫‭‪⁬‎‬‍‌‎​‏‌⁫⁮⁯‍‭‌‌⁮⁯‬⁭⁫‮(aFileName))));
      FileStream aData = JSONNode.\u206A‫⁪‭‫‎​‎⁮⁯‏‮‫⁮​⁬⁯‎⁬​‭‏‫‏‮‭‬⁪⁮​⁭‪‏⁬‪​⁭⁪⁯‍‮(aFileName);
      try
      {
label_2:
        int num1 = 241976052;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1420900845)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -997675482 ^ -1512037291;
              continue;
            case 2:
              num1 = (int) num2 * 1573369581 ^ 713940471;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 1227109168;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1420900845)) % 4U)
            {
              case 0:
                goto label_8;
              case 1:
                JSONNode.\u202D⁭‏​⁭⁪⁫⁫‌‮⁯‎‬⁭⁫‌⁮‭‌‍‬⁯⁮‌‎⁬‮‭⁬‌‫⁯‮‍‭‪‮‏⁯‍‮((IDisposable) aData);
                num3 = (int) num4 * 1264656402 ^ -1449065659;
                continue;
              case 2:
                num3 = (int) num4 * -1836993342 ^ 142173710;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200F‮⁪⁮⁭⁪‭‮‪‎‬‪‌‎‏⁭⁫​⁬⁮⁭‮‭‏⁫⁮‭⁫⁮‭⁬⁬‌⁮‬⁫⁫‫‏‫‮();
      string base64;
      try
      {
label_2:
        int num1 = 903430690;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 717609029)) % 5U)
          {
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1376914207 ^ -1321053650;
              continue;
            case 2:
              num1 = (int) num2 * -495091716 ^ -764684688;
              continue;
            case 3:
              JSONNode.\u206F‌​​⁯⁬⁯⁪⁮​‬⁭⁮⁫‪​⁮‌‭‮⁭⁭‮‏‭⁯‏‮‏‫‭‬‎‎⁭⁫⁯⁪⁯⁪‮((Stream) aData, 0L);
              base64 = JSONNode.\u202A‌⁪‎‬⁫‌​⁪‪‏⁮‭⁮⁬‌‌‬‍⁪⁭​‮‭⁫⁬‎‍‪⁮⁫⁭​⁪‌‎‏⁯​‍‮(JSONNode.\u200B‫⁪⁮‌‎⁭⁬‮‪⁫⁯⁭‍‫‍⁭⁪⁫⁪‫​⁬⁭‏‏‏⁬⁫⁮⁬⁮‎‮⁯‬‫⁮‏‬‮(aData));
              num1 = (int) num2 * 316264220 ^ 1836028667;
              continue;
            case 4:
              goto label_2;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 1421053934;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 717609029)) % 3U)
            {
              case 1:
                JSONNode.\u202D⁭‏​⁭⁪⁫⁫‌‮⁯‎‬⁭⁫‌⁮‭‌‍‬⁯⁮‌‎⁬‮‭⁬‌‫⁯‮‍‭‪‮‏⁯‍‮((IDisposable) aData);
                num3 = (int) num4 * -1219222215 ^ 1308743039;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = 1342924607;
      JSONBinaryTag jsonBinaryTag1;
      int num2;
      int num3;
      JSONArray jsonArray;
      JSONNode jsonNode;
      int num4;
      int num5;
      bool flag;
      JSONBinaryTag jsonBinaryTag2;
      JSONClass jsonClass;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 51847376)) % 39U)
        {
          case 0:
label_31:
            num1 = 605278202;
            continue;
          case 1:
            num1 = (int) num6 * -1861002823 ^ 663822299;
            continue;
          case 2:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1766289144;
            continue;
          case 3:
            int num7 = flag ? 503912760 : (num7 = 1322058874);
            num1 = num7 ^ (int) num6 * -988000738;
            continue;
          case 4:
            int num8;
            num1 = num8 = num2 >= num3 ? 1956724170 : (num8 = 508154078);
            continue;
          case 5:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * 234615370 ^ 1626300413;
            continue;
          case 6:
label_8:
            num1 = 1262496519;
            continue;
          case 7:
            goto label_3;
          case 8:
            num1 = (int) num6 * 2077262395 ^ -367036670;
            continue;
          case 9:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D⁫⁯⁫‌‍⁬‏‍‌⁮⁭‪⁮​‬‏‌‫​‎​⁯​‏‭⁪‫⁭​‪‌⁭⁫⁫⁫‌‮‌‏‮(aReader));
            num1 = (int) num6 * 991608299 ^ 1551718577;
            continue;
          case 10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‭⁪‫‍‮‬‫‍‫‫‬⁫‌‪⁫⁫⁮‬‎‬‫⁪‍‍‮⁫​⁬‫⁬‫‫‮⁮‍‭‪⁪‪‮(aReader));
            num1 = (int) num6 * -1344696527 ^ 450007473;
            continue;
          case 11:
            ++num4;
            num1 = (int) num6 * -949682346 ^ -1091674138;
            continue;
          case 12:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1143065504 ^ -443213088;
            continue;
          case 13:
label_6:
            num1 = 4945703;
            continue;
          case 14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁮‌⁭‮‬‬‎‎‪​‍⁭‍‪‎‪⁭⁬‫‮‏‮⁪​⁭​⁫‌​‪‫‏⁬‬‌‪‭⁫‌‮(aReader));
            num1 = (int) num6 * -949185243 ^ -1913918445;
            continue;
          case 15:
            num1 = (int) num6 * -985057043 ^ -895959552;
            continue;
          case 16:
            num1 = 622621227;
            continue;
          case 17:
            flag = num4 < num5;
            num1 = 1813146844;
            continue;
          case 18:
label_13:
            num3 = JSONNode.\u206D⁮‌⁭‮‬‬‎‎‪​‍⁭‍‪‎‪⁭⁬‫‮‏‮⁪​⁭​⁫‌​‪‫‏⁬‬‌‪‭⁫‌‮(aReader);
            num1 = 540653884;
            continue;
          case 19:
            num1 = (int) num6 * -751775147 ^ -265332249;
            continue;
          case 20:
            goto label_1;
          case 21:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‭⁯⁬​‪‭⁯‬⁫‏‬‬‭‏⁯⁯‮⁬⁬​⁫‌‫‌‏⁫‫⁮‌‭⁫‌‪‮‬‬⁬‌‫‮(aReader));
            num1 = (int) num6 * -500760143 ^ -1926180944;
            continue;
          case 22:
            ++num2;
            num1 = (int) num6 * -1735613301 ^ -481544136;
            continue;
          case 23:
label_30:
            num1 = 956127162;
            continue;
          case 24:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_13;
              case JSONBinaryTag.Class:
                goto label_20;
              case JSONBinaryTag.Value:
                goto label_6;
              case JSONBinaryTag.IntValue:
                goto label_30;
              case JSONBinaryTag.DoubleValue:
                goto label_15;
              case JSONBinaryTag.BoolValue:
                goto label_8;
              case JSONBinaryTag.FloatValue:
                goto label_31;
              default:
                num1 = (int) num6 * -1090075806 ^ -1227869226;
                continue;
            }
          case 25:
            num1 = (int) num6 * 613884147 ^ -1052026479;
            continue;
          case 26:
            num1 = (int) num6 * 717016521 ^ 980583612;
            continue;
          case 27:
            num1 = (int) num6 * 691017057 ^ 563583261;
            continue;
          case 28:
            num1 = (int) num6 * -55497873 ^ 1607216155;
            continue;
          case 29:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1322323940 ^ 2094194917;
            continue;
          case 31:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206D⁪⁭‌‏⁫⁪‮‌‏⁭‪​‬⁫⁪‬⁬‏​⁬‎⁭⁯‭⁫‭⁮‮‌⁯​​‬⁯‭‮⁯⁭‌‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -220290608 ^ -293409547;
            continue;
          case 32:
            num1 = (int) num6 * -1007262269 ^ 1360758726;
            continue;
          case 33:
            num1 = (int) num6 * -1598127428 ^ -1391861012;
            continue;
          case 34:
label_20:
            num5 = JSONNode.\u206D⁮‌⁭‮‬‬‎‎‪​‍⁭‍‪‎‪⁭⁬‫‮‏‮⁪​⁭​⁫‌​‪‫‏⁬‬‌‪‭⁫‌‮(aReader);
            num1 = 2060245070;
            continue;
          case 35:
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = (int) num6 * 1711285455 ^ 99917025;
            continue;
          case 36:
            string aKey = JSONNode.\u200D⁫⁯⁫‌‍⁬‏‍‌⁮⁭‪⁮​‬‏‌‫​‎​⁯​‏‭⁪‫⁭​‪‌⁭⁫⁫⁫‌‮‌‏‮(aReader);
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = 312283233;
            continue;
          case 37:
            num1 = (int) num6 * -1150661610 ^ 550989345;
            continue;
          case 38:
label_15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206E‎‬‎​‮⁫⁮‫⁫‌⁯‌‫⁬‫‬⁪‌⁭‮⁬⁬⁭⁭⁭⁪⁮⁪⁬‪‏⁬‭​​‍⁪‮‎‮(aReader));
            num1 = 39369973;
            continue;
          default:
            goto label_41;
        }
      }
label_3:
      throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮(JSONNode.\u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200F​⁫‭⁮‫‍⁮‌⁬‎‮‌⁪‎⁬​⁯‎⁮​⁮⁬‪‬‪⁮‮‏⁯⁪‎‬‪‏‪‫⁮‮‪‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1959404219;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1643023522)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u202D⁭‏​⁭⁪⁫⁫‌‮⁯‎‬⁭⁫‌⁮‭‌‍‬⁯⁮‌‎⁬‮‭⁬‌‫⁯‮‍‭‪‮‏⁯‍‮((IDisposable) aReader);
                num1 = (int) num2 * -1514858360 ^ -678131836;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206E⁯‏⁬⁮‮⁬⁮‎‎​‬‫‏⁭⁮⁬‪⁪⁬⁬⁫‮⁮​‬​‮⁮‌‫⁯⁮⁯⁭‫⁫‫⁭‪‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -775088982;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -599370166)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 961679609 ^ -1798385459;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -153070143;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -599370166)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                num3 = (int) num4 * 406754229 ^ -1806797519;
                continue;
              case 3:
                JSONNode.\u202D⁭‏​⁭⁪⁫⁫‌‮⁯‎‬⁭⁫‌⁮‭‌‍‬⁯⁮‌‎⁬‮‭⁬‌‫⁯‮‍‭‪‮‏⁯‍‮((IDisposable) aData);
                num3 = (int) num4 * -1449429351 ^ 1058475628;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u206C⁬‮‪‬‬⁯⁫‮‌⁮‭‫⁪‭‬⁮⁪‏‮‫⁭⁫‫⁭‭‏‍⁪‬⁭⁬⁭‬‍‌⁯‮⁪⁯‮(JSONNode.\u206C⁫‮⁪‌⁫⁯‪‫‫‎⁪‏⁮⁬‍‮‭‎‌‍‫⁮⁬⁬‎‏‫⁪‮‪‮‍⁬⁮‭‍‌⁭‫‮(aBase64));
label_1:
      int num1 = 1038931054;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1023127632)) % 5U)
        {
          case 1:
            JSONNode.\u206F‌​​⁯⁬⁯⁪⁮​‬⁭⁮⁫‪​⁮‌‭‮⁭⁭‮‏‭⁯‏‮‏‫‭‬‎‎⁭⁫⁯⁪⁯⁪‮((Stream) aData, 0L);
            num1 = (int) num2 * 1635310731 ^ 40774723;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1011291541 ^ -1076743749;
            continue;
          case 4:
            num1 = (int) num2 * 1726692867 ^ -526370124;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u202E‏‬‮‎⁫⁪‭⁬‍‏‬‌‌‏⁮‬‬⁭⁭‍⁯‎⁬‪⁮‌‏⁫‭‏‬‪‍⁮⁯⁯‪​⁯‮() => CultureInfo.InvariantCulture;

    static bool \u206A⁯⁪⁮⁫⁫‌‮⁫⁮‌‮‫‍​​‪‫‏‫‍⁮⁯‭‍‎‏​‎⁮⁬‌‪⁯‌‌‬‌‏‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202D‍⁮⁭‮‪‮⁪‮‬‮⁮⁬​⁯⁪⁯‫‪‬‪‫⁯⁫⁮‪‫‪​​‌‍‫‮‭⁮⁪‬‍‏‮() => base.GetHashCode();

    static char \u202A⁭‏‫‍‫‫‌‮⁪‎‏⁯⁯⁪‍⁯​‎⁭⁪⁪‎⁮​‏⁬‌​‏‏‏​‮⁫⁬‮⁭⁮‮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206A‎⁫⁫⁭‮‭‪‎‬‪‎⁪‍⁫⁬⁬‭‫‏​⁬​‌‪‌​‏‫‌‮⁮‪​⁬‫⁯⁯⁫⁭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202B‎⁮​‌‭⁮‪⁯⁫‪⁫​⁮⁭⁭‬‪‭‫‏⁮⁭⁫​⁪⁪​⁮‮⁫‬‎⁭‫‮⁫⁮‍‌‮([In] string obj0) => obj0.Length;

    static string \u202B​⁫⁫‎⁫⁫⁪‍‮⁮⁭‮‮‏​⁯⁯‫⁮⁪⁫⁮⁮‎‪‫‏⁯⁫‌‫​​⁭⁬‮⁮‮⁯‮([In] string obj0) => obj0.Trim();

    static bool \u206C⁮‎‍‭⁮‮​⁬‪⁬⁯⁯‪⁭‭⁪‮⁮‮‪‭⁫⁮‬⁫‍‏‮‬⁮‏‫⁭‮⁯‫‪‮⁭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200B‭‬⁬​‎‎‫‮‏‎‮‮⁫‬‮‭‪‎‪‪⁬⁪‬​‌⁬‎⁯‮⁮‌‫⁭⁮‭⁭⁭‪‪‮([In] string obj0) => new Exception(obj0);

    static string \u206F⁭​‪‫​‎⁮‬‭‍⁮‍‬‍⁮‌‌​‬‎⁯‍⁬‮‫‭⁮‌‭⁮‫⁪⁮​‎⁪‮‭‎‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202C‍‏‮‪‭⁭‌⁪​⁮⁬⁭‬⁪‭‮⁬⁮​‏‌⁪⁮‮⁮⁪⁪‍‎⁯‭‮⁪⁫‎‪‎‎‭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206E⁯​‍‪⁮⁮‏‌​‪‮⁫‌‪​⁫‭‪⁬‎‬‍‌‎​‏‌⁫⁮⁯‍‭‌‌⁮⁯‬⁭⁫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200B⁯⁮‎‏⁫​‪⁯‏⁮⁯‏‪⁬⁬‍⁭‌⁯⁯‭⁯‪‌⁫‮⁫⁭‬‪⁯‍⁭​‏⁪​‍‮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200D‎⁫‬​‫⁭‌‭​​⁪⁯⁫⁯‭⁯‍‌‍⁪⁮⁫⁫⁭⁯‍⁭‌⁭‌‏‏⁫⁫⁫‎⁯⁬⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200E⁯‪‏‏‫‫⁮⁫⁮⁯⁭‍‭‮‪‭⁯‪‫‭‬⁪⁫⁫⁭‎‭⁭⁫‫​​⁬‫‎‎⁬‎‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206A‫⁪‭‫‎​‎⁮⁯‏‮‫⁮​⁬⁯‎⁬​‭‏‫‏‮‭‬⁪⁮​⁭‪‏⁬‪​⁭⁪⁯‍‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202D⁭‏​⁭⁪⁫⁫‌‮⁯‎‬⁭⁫‌⁮‭‌‍‬⁯⁮‌‎⁬‮‭⁬‌‫⁯‮‍‭‪‮‏⁯‍‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200F‮⁪⁮⁭⁪‭‮‪‎‬‪‌‎‏⁭⁫​⁬⁮⁭‮‭‏⁫⁮‭⁫⁮‭⁬⁬‌⁮‬⁫⁫‫‏‫‮() => new MemoryStream();

    static void \u206F‌​​⁯⁬⁯⁪⁮​‬⁭⁮⁫‪​⁮‌‭‮⁭⁭‮‏‭⁯‏‮‏‫‭‬‎‎⁭⁫⁯⁪⁯⁪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200B‫⁪⁮‌‎⁭⁬‮‪⁫⁯⁭‍‫‍⁭⁪⁫⁪‫​⁬⁭‏‏‏⁬⁫⁮⁬⁮‎‮⁯‬‫⁮‏‬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202A‌⁪‎‬⁫‌​⁪‪‏⁮‭⁮⁬‌‌‬‍⁪⁭​‮‭⁫⁬‎‍‪⁮⁫⁭​⁪‌‎‏⁯​‍‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206D⁪⁭‌‏⁫⁪‮‌‏⁭‪​‬⁫⁪‬⁬‏​⁬‎⁭⁯‭⁫‭⁮‮‌⁯​​‬⁯‭‮⁯⁭‌‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D⁮‌⁭‮‬‬‎‎‪​‍⁭‍‪‎‪⁭⁬‫‮‏‮⁪​⁭​⁫‌​‪‫‏⁬‬‌‪‭⁫‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200D⁫⁯⁫‌‍⁬‏‍‌⁮⁭‪⁮​‬‏‌‫​‎​⁯​‏‭⁪‫⁭​‪‌⁭⁫⁫⁫‌‮‌‏‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206E‎‬‎​‮⁫⁮‫⁫‌⁯‌‫⁬‫‬⁪‌⁭‮⁬⁬⁭⁭⁭⁪⁮⁪⁬‪‏⁬‭​​‍⁪‮‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u206A‭⁪‫‍‮‬‫‍‫‫‬⁫‌‪⁫⁫⁮‬‎‬‫⁪‍‍‮⁫​⁬‫⁬‫‫‮⁮‍‭‪⁪‪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202A‭⁯⁬​‪‭⁯‬⁫‏‬‬‭‏⁯⁯‮⁬⁬​⁫‌‫‌‏⁫‫⁮‌‭⁫‌‪‮‬‬⁬‌‫‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200F​⁫‭⁮‫‍⁮‌⁬‎‮‌⁪‎⁬​⁯‎⁮​⁮⁬‪‬‪⁮‮‏⁯⁪‎‬‪‏‪‫⁮‮‪‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206E⁯‏⁬⁮‮⁬⁮‎‎​‬‫‏⁭⁮⁬‪⁪⁬⁬⁫‮⁮​‬​‮⁮‌‫⁯⁮⁯⁭‫⁫‫⁭‪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206C⁫‮⁪‌⁫⁯‪‫‫‎⁪‏⁮⁬‍‮‭‎‌‍‫⁮⁬⁬‎‏‫⁪‮‪‮‍⁬⁮‭‍‌⁭‫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206C⁬‮‪‬‬⁯⁫‮‌⁮‭‫⁪‭‬⁮⁪‏‮‫⁭⁫‫⁭‭‏‍⁪‬⁭⁬⁭‬‍‌⁯‮⁪⁯‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
