// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: VersioningHelp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A8C08E3E-24A1-4DAA-9E0F-F1F4BE4809FB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1861855b22d693257e4e3463667e53ae08711a684747fdd32f49c3e7b9c7f04f.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get => this.m_Data;
      set
      {
label_1:
        int num1 = -1786867059;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1990364175)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_Data = value;
              num1 = (int) num2 * 345557802 ^ 901099540;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = 578753952;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1595004577)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 475900378 ^ -516848127;
            continue;
          case 2:
            num1 = (int) num2 * -1454976397 ^ 1726750831;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.AsDouble = aData;
            num1 = (int) num2 * -1257088706 ^ -829843731;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 422580322;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1075911969)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -992780934 ^ -1463568562;
            continue;
          case 1:
            num1 = (int) num2 * 29962632 ^ 888746250;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            this.AsBool = aData;
            num1 = (int) num2 * 1479659919 ^ -2009685001;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(int aData)
    {
label_1:
      int num1 = -1854071112;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -344345102)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.AsInt = aData;
            num1 = (int) num2 * -1793344742 ^ 453814060;
            continue;
          case 2:
            num1 = (int) num2 * 782516901 ^ 1411112229;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override string ToString()
    {
label_1:
      int num1 = -572533858;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -38255986)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = JSONData.\u202A​‫‮⁬‫‬⁯‍⁯‌‭⁪‍​⁯⁮‮‫‏‮‮⁭⁮​‭⁬⁬⁬⁬‪⁯‍⁫‎‏⁭⁫​‭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -523178526 ^ -72468176;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 2057564026;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1126694463)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u202A​‫‮⁬‫‬⁯‍⁯‌‭⁪‍​⁯⁮‮‫‏‮‮⁭⁮​‭⁬⁬⁬⁬‪⁯‍⁫‎‏⁭⁫​‭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 261772717 ^ 925976120;
            continue;
          case 2:
            num1 = (int) num2 * -1395089619 ^ 1714543402;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = -798686220;
      bool flag1;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1765596581)) % 34U)
        {
          case 0:
            JSONData.\u200B‍⁮‎​‮⁫‌‌​‌‫⁪‍⁭​⁮‮‭⁭‬‏⁫‬‮‎‮‬‪‮‮‪‬⁮‮‪‭‬‭‫‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -962786709 ^ -778874191;
            continue;
          case 1:
            JSONData.\u200B⁮‭‬‎⁭⁫⁮‪‭⁭‪⁬⁯‭⁫⁫⁬‏⁫‫⁪‫⁪​‮⁭​‍⁯‏‏⁫⁯‍‍‏‎⁯⁪‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 400156547 ^ -258179132;
            continue;
          case 2:
            num1 = (int) num2 * -28289820 ^ 1484084966;
            continue;
          case 3:
            num1 = (int) num2 * 655300109 ^ -1377510387;
            continue;
          case 4:
            num1 = (int) num2 * -877779047 ^ -1576427831;
            continue;
          case 5:
            num1 = (int) num2 * 1957218020 ^ 1128121186;
            continue;
          case 6:
            int num3 = !flag2 ? 1433534126 : (num3 = 2144053488);
            num1 = num3 ^ (int) num2 * -867255072;
            continue;
          case 7:
            JSONData.\u200C⁯⁬​‎⁮⁭‏⁪‮‏‭‬‍‭‍⁬‮⁪‬⁬‍‏‫⁭‎‮‫‏⁪⁪‌‎‫⁫‎⁭‫⁪‍‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1681694658 ^ -1800133521;
            continue;
          case 8:
            jsonData.AsFloat = this.AsFloat;
            num1 = -1349859359;
            continue;
          case 9:
            JSONData.\u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮(aWriter, (byte) 7);
            num1 = (int) num2 * -181512384 ^ -67013836;
            continue;
          case 10:
            num1 = (int) num2 * -2082223297 ^ -595477854;
            continue;
          case 11:
            goto label_3;
          case 12:
            num1 = (int) num2 * 133400970 ^ -2087052353;
            continue;
          case 13:
            jsonData.AsBool = this.AsBool;
            num1 = -997269652;
            continue;
          case 14:
            num1 = (int) num2 * -2981714 ^ 1501461246;
            continue;
          case 15:
            int num4 = flag1 ? -2085796105 : (num4 = -1423064411);
            num1 = num4 ^ (int) num2 * 597512202;
            continue;
          case 16:
            int num5 = !flag3 ? 641270454 : (num5 = 330960670);
            num1 = num5 ^ (int) num2 * -602949369;
            continue;
          case 17:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1337948366;
            continue;
          case 18:
            num1 = (int) num2 * -1106211330 ^ 984248859;
            continue;
          case 19:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * 1594274554 ^ -1982540678;
            continue;
          case 20:
            JSONData.\u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮(aWriter, (byte) 4);
            num1 = (int) num2 * -304284472 ^ -2119337833;
            continue;
          case 21:
            goto label_1;
          case 22:
            flag3 = JSONData.\u200D⁬‌‭‏⁪‌⁪⁬‮​⁫‭⁯⁪‭⁮‏⁪⁯⁯‬‏‏‍⁪‎‪‬‌⁪‫‎‬⁫​‭⁫‏‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 527126071 ^ -1687374645;
            continue;
          case 23:
            flag1 = JSONData.\u200D⁬‌‭‏⁪‌⁪⁬‮​⁫‭⁯⁪‭⁮‏⁪⁯⁯‬‏‏‍⁪‎‪‬‌⁪‫‎‬⁫​‭⁫‏‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -411369986 ^ 2022219300;
            continue;
          case 24:
            flag2 = JSONData.\u200D⁬‌‭‏⁪‌⁪⁬‮​⁫‭⁯⁪‭⁮‏⁪⁯⁯‬‏‏‍⁪‎‪‬‌⁪‫‎‬⁫​‭⁫‏‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 1855983233 ^ 1670154725;
            continue;
          case 25:
            int num6 = !JSONData.\u200D⁬‌‭‏⁪‌⁪⁬‮​⁫‭⁯⁪‭⁮‏⁪⁯⁯‬‏‏‍⁪‎‪‬‌⁪‫‎‬⁫​‭⁫‏‮(jsonData.m_Data, this.m_Data) ? -1314814378 : (num6 = -7189404);
            num1 = num6 ^ (int) num2 * -2106845283;
            continue;
          case 26:
            num1 = (int) num2 * 890261542 ^ -1542272082;
            continue;
          case 27:
            JSONData.\u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮(aWriter, (byte) 5);
            num1 = (int) num2 * 632038056 ^ 1594891719;
            continue;
          case 28:
            JSONData.\u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮(aWriter, (byte) 3);
            num1 = -1809574338;
            continue;
          case 29:
            JSONData.\u206D‫⁯⁮‮‌⁯⁯‎‪‮‎‎⁬⁬⁯‮​⁬​⁬‎⁬‏‫‎⁪‭‎‬⁬‎‏​‮‬⁪⁪‭⁬‮(aWriter, this.m_Data);
            num1 = (int) num2 * -266497499 ^ 409393528;
            continue;
          case 30:
            JSONData.\u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮(aWriter, (byte) 6);
            num1 = (int) num2 * -923137634 ^ 970128446;
            continue;
          case 31:
            num1 = (int) num2 * 797767633 ^ -1508621632;
            continue;
          case 32:
            JSONData.\u200C⁯⁬‬‍⁫⁫‬‍‫​⁫‭⁭‬‭⁫‭‫‏‭‮⁭‬‎‬‬​‬‍⁭‫⁭⁫‌‮‮‮‬⁬‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1014552570 ^ 837291252;
            continue;
          case 33:
            num1 = (int) num2 * 214473390 ^ 820478252;
            continue;
          default:
            goto label_36;
        }
      }
label_3:
      return;
label_36:;
    }

    static string \u202A​‫‮⁬‫‬⁯‍⁯‌‭⁪‍​⁯⁮‮‫‏‮‮⁭⁮​‭⁬⁬⁬⁬‪⁯‍⁫‎‏⁭⁫​‭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200D⁬‌‭‏⁪‌⁪⁬‮​⁫‭⁯⁪‭⁮‏⁪⁯⁯‬‏‏‍⁪‎‪‬‌⁪‫‎‬⁫​‭⁫‏‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206D⁭‏⁮‪‭⁭‬⁯⁬‫‌⁪‬‪‮‬‏‬‏⁫​⁬⁯‮⁮‌‪​‌⁯‏‌⁬⁪⁬​‬‌‌‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C⁯⁬‬‍⁫⁫‬‍‫​⁫‭⁭‬‭⁫‭‫‏‭‮⁭‬‎‬‬​‬‍⁭‫⁭⁫‌‮‮‮‬⁬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200B⁮‭‬‎⁭⁫⁮‪‭⁭‪⁬⁯‭⁫⁫⁬‏⁫‫⁪‫⁪​‮⁭​‍⁯‏‏⁫⁯‍‍‏‎⁯⁪‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u200B‍⁮‎​‮⁫‌‌​‌‫⁪‍⁭​⁮‮‭⁭‬‏⁫‬‮‎‮‬‪‮‮‪‬⁮‮‪‭‬‭‫‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200C⁯⁬​‎⁮⁭‏⁪‮‏‭‬‍‭‍⁬‮⁪‬⁬‍‏‫⁭‎‮‫‏⁪⁪‌‎‫⁫‎⁭‫⁪‍‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206D‫⁯⁮‮‌⁯⁯‎‪‮‎‎⁬⁬⁯‮​⁬​⁬‎⁬‏‫‎⁪‭‎‬⁬‎‏​‮‬⁪⁪‭⁬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
