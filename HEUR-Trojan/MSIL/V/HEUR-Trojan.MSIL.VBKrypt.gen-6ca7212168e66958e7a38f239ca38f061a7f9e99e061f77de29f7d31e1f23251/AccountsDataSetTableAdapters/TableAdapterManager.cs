// Decompiled with JetBrains decompiler
// Type: ATM_Final.AccountsDataSetTableAdapters.TableAdapterManager
// Assembly: StringMa, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAE20789-B98F-45AF-8006-81C44052C194
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.VBKrypt.gen-6ca7212168e66958e7a38f239ca38f061a7f9e99e061f77de29f7d31e1f23251.exe

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;

namespace ATM_Final.AccountsDataSetTableAdapters
{
  [DesignerCategory("code")]
  [HelpKeyword("vs.data.TableAdapterManager")]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  [ToolboxItem(true)]
  public class TableAdapterManager : Component
  {
    private TableAdapterManager.UpdateOrderOption _updateOrder;
    private TableTableAdapter _tableTableAdapter;
    private bool _backupDataSetBeforeUpdate;
    private IDbConnection _connection;

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public TableAdapterManager.UpdateOrderOption UpdateOrder
    {
      get
      {
        TableAdapterManager.UpdateOrderOption updateOrder = this._updateOrder;
label_1:
        int num1 = 1271735564;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1854669003)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1675880562 ^ -2085933573;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return updateOrder;
      }
      set => this._updateOrder = value;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
    public TableTableAdapter TableTableAdapter
    {
      get => this._tableTableAdapter;
      set
      {
label_1:
        int num1 = -1901628514;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -905911882)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this._tableTableAdapter = value;
              num1 = (int) num2 * -675501406 ^ 1633162717;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public bool BackupDataSetBeforeUpdate
    {
      get
      {
        bool dataSetBeforeUpdate = this._backupDataSetBeforeUpdate;
label_1:
        int num1 = -1177979503;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -955876489)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1762940103 ^ 1396035386;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return dataSetBeforeUpdate;
      }
      set => this._backupDataSetBeforeUpdate = value;
    }

    [Browsable(false)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public IDbConnection Connection
    {
      get
      {
        if (this._connection == null)
          goto label_6;
label_1:
        int num1 = 449726444;
label_2:
        IDbConnection connection;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1853910586)) % 9U)
          {
            case 0:
              goto label_6;
            case 2:
              goto label_1;
            case 3:
              connection = (IDbConnection) this._tableTableAdapter.Connection;
              num1 = (int) num2 * 706455046 ^ -596438559;
              continue;
            case 4:
              num1 = (int) num2 * -139386479 ^ 1020442852;
              continue;
            case 5:
              connection = this._connection;
              num1 = (int) num2 * -106171372 ^ -1236842810;
              continue;
            case 6:
              connection = (IDbConnection) null;
              num1 = 464157310;
              continue;
            case 7:
              num1 = (int) num2 * 1072211958 ^ -1502261284;
              continue;
            case 8:
              goto label_10;
            default:
              goto label_13;
          }
        }
label_10:
        int num3 = this._tableTableAdapter.Connection != null ? 1 : 0;
        goto label_12;
label_13:
        return connection;
label_6:
        if (this._tableTableAdapter != null)
        {
          num1 = 429260548;
          goto label_2;
        }
        else
          num3 = 0;
label_12:
        num1 = num3 == 0 ? 907426800 : (num1 = 1841604496);
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -936103934;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -256482889)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this._connection = value;
              num1 = (int) num2 * -1115186070 ^ 615092386;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    [Browsable(false)]
    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public int TableAdapterInstanceCount
    {
      get
      {
label_1:
        int num1 = 1156258869;
        int num2;
        bool flag;
        int adapterInstanceCount;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num1 ^ 1410383321)) % 9U)
          {
            case 0:
              int num4 = !flag ? 1184280389 : (num4 = 1675461668);
              num1 = num4 ^ (int) num3 * -1543990097;
              continue;
            case 1:
              ++num2;
              num1 = (int) num3 * -1227493790 ^ 953278067;
              continue;
            case 2:
              goto label_1;
            case 3:
              flag = this._tableTableAdapter != null;
              num1 = (int) num3 * -77733772 ^ 1163555154;
              continue;
            case 5:
              adapterInstanceCount = num2;
              num1 = 2020163729;
              continue;
            case 6:
              num1 = (int) num3 * 370749771 ^ 406570880;
              continue;
            case 7:
              num2 = 0;
              num1 = (int) num3 * 1898539742 ^ 665623271;
              continue;
            case 8:
              num1 = (int) num3 * -991792181 ^ -514335016;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return adapterInstanceCount;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateUpdatedRows(
      AccountsDataSet dataSet,
      List<DataRow> allChangedRows,
      List<DataRow> allAddedRows)
    {
label_1:
      int num1 = -934911494;
      int num2;
      while (true)
      {
        uint num3;
        DataRow[] dataRowArray;
        bool flag1;
        int num4;
        bool flag2;
        int num5;
        switch ((num3 = (uint) (num1 ^ -1293080433)) % 15U)
        {
          case 0:
            int num6 = flag1 ? 1213251251 : (num6 = 1651910717);
            num1 = num6 ^ (int) num3 * 1850702319;
            continue;
          case 1:
            int num7 = flag2 ? -250376956 : (num7 = -1965307830);
            num1 = num7 ^ (int) num3 * 1458632112;
            continue;
          case 2:
            num1 = (int) num3 * 500275067 ^ -504046582;
            continue;
          case 3:
            num4 = 0;
            flag2 = this._tableTableAdapter != null;
            num1 = (int) num3 * 385566944 ^ 850520369;
            continue;
          case 4:
            dataRowArray = this.GetRealUpdatedRows(dataRowArray, allAddedRows);
            num1 = (int) num3 * 469279572 ^ -1951722294;
            continue;
          case 6:
            dataRowArray = dataSet.Table.Select((string) null, (string) null, DataViewRowState.ModifiedCurrent);
            num1 = (int) num3 * 1136358639 ^ 1182803296;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = -749758742;
            continue;
          case 9:
            num5 = dataRowArray.Length != 0 ? 1 : 0;
            break;
          case 10:
            num2 = num4;
            num1 = -815688264;
            continue;
          case 11:
            num4 += this._tableTableAdapter.Update(dataRowArray);
            allChangedRows.AddRange((IEnumerable<DataRow>) dataRowArray);
            num1 = (int) num3 * 1245895968 ^ 431594721;
            continue;
          case 12:
            num1 = (int) num3 * 1879369307 ^ -349015311;
            continue;
          case 13:
            if (dataRowArray != null)
            {
              num1 = (int) num3 * 1720995767 ^ 106072287;
              continue;
            }
            num5 = 0;
            break;
          case 14:
            num1 = (int) num3 * -1009474051 ^ -1205389624;
            continue;
          default:
            goto label_19;
        }
        flag1 = num5 != 0;
        num1 = -253426854;
      }
label_19:
      return num2;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateInsertedRows(AccountsDataSet dataSet, List<DataRow> allAddedRows)
    {
label_1:
      int num1 = -340206140;
      int num2;
      while (true)
      {
        uint num3;
        int num4;
        DataRow[] dataRowArray;
        bool flag;
        int num5;
        switch ((num3 = (uint) (num1 ^ -1642440504)) % 13U)
        {
          case 0:
            num4 += this._tableTableAdapter.Update(dataRowArray);
            num1 = (int) num3 * -1249001293 ^ 1310843038;
            continue;
          case 1:
            int num6 = !flag ? 157681551 : (num6 = 2119164733);
            num1 = num6 ^ (int) num3 * -937913406;
            continue;
          case 2:
            num2 = num4;
            num1 = -643303596;
            continue;
          case 4:
            num1 = -1271872099;
            continue;
          case 5:
            num4 = 0;
            num1 = (int) num3 * -1402496025 ^ -1620429489;
            continue;
          case 6:
            int num7 = this._tableTableAdapter == null ? 648978582 : (num7 = 369220883);
            num1 = num7 ^ (int) num3 * 2141117801;
            continue;
          case 7:
            allAddedRows.AddRange((IEnumerable<DataRow>) dataRowArray);
            num1 = (int) num3 * -1457297923 ^ 404336029;
            continue;
          case 8:
            num5 = dataRowArray.Length != 0 ? 1 : 0;
            break;
          case 9:
            goto label_1;
          case 10:
            dataRowArray = dataSet.Table.Select((string) null, (string) null, DataViewRowState.Added);
            if (dataRowArray == null)
            {
              num5 = 0;
              break;
            }
            num1 = (int) num3 * 1107897862 ^ -1604983990;
            continue;
          case 11:
            num1 = (int) num3 * 1510429347 ^ -1500921509;
            continue;
          case 12:
            num1 = (int) num3 * 1479053675 ^ 1795179334;
            continue;
          default:
            goto label_17;
        }
        flag = num5 != 0;
        num1 = -1377318488;
      }
label_17:
      return num2;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private int UpdateDeletedRows(AccountsDataSet dataSet, List<DataRow> allChangedRows)
    {
      int num1 = 0;
label_1:
      int num2 = 254554791;
      int num3;
      while (true)
      {
        uint num4;
        DataRow[] dataRowArray;
        bool flag;
        int num5;
        switch ((num4 = (uint) (num2 ^ 1920698986)) % 12U)
        {
          case 0:
            int num6 = flag ? -986564721 : (num6 = -1779071946);
            num2 = num6 ^ (int) num4 * 1777581609;
            continue;
          case 1:
            flag = this._tableTableAdapter != null;
            num2 = (int) num4 * -832847040 ^ -1577830302;
            continue;
          case 2:
            num2 = (int) num4 * -1739438078 ^ -579480519;
            continue;
          case 3:
            dataRowArray = dataSet.Table.Select((string) null, (string) null, DataViewRowState.Deleted);
            if (dataRowArray == null)
            {
              num5 = 0;
              break;
            }
            num2 = (int) num4 * -1119660218 ^ 318454082;
            continue;
          case 4:
            num3 = num1;
            num2 = 843063531;
            continue;
          case 5:
            num2 = (int) num4 * -1039508751 ^ -2121265315;
            continue;
          case 6:
            num5 = dataRowArray.Length != 0 ? 1 : 0;
            break;
          case 7:
            num2 = 189081534;
            continue;
          case 8:
            num1 += this._tableTableAdapter.Update(dataRowArray);
            allChangedRows.AddRange((IEnumerable<DataRow>) dataRowArray);
            num2 = (int) num4 * 1497409653 ^ -1822965568;
            continue;
          case 9:
            num2 = (int) num4 * 2052420668 ^ -663588731;
            continue;
          case 11:
            goto label_1;
          default:
            goto label_16;
        }
        int num7;
        num2 = num7 = num5 != 0 ? 603872002 : (num7 = 683333757);
      }
label_16:
      return num3;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private DataRow[] GetRealUpdatedRows(DataRow[] updatedRows, List<DataRow> allAddedRows)
    {
      if (updatedRows == null)
        goto label_4;
label_1:
      int num1 = 297614983;
label_2:
      bool flag1;
      DataRow[] realUpdatedRows;
      while (true)
      {
        uint num2;
        List<DataRow> dataRowList;
        DataRow updatedRow;
        int index;
        bool flag2;
        bool flag3;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1849666022)) % 25U)
        {
          case 0:
            num1 = (int) num2 * 1968294410 ^ 688661545;
            continue;
          case 1:
            updatedRow = updatedRows[index];
            flag3 = !allAddedRows.Contains(updatedRow);
            num1 = (int) num2 * -1595045020 ^ 190249420;
            continue;
          case 2:
            num3 = allAddedRows.Count < 1 ? 1 : 0;
            break;
          case 3:
            int num4 = !flag2 ? 1328501218 : (num4 = 1441162271);
            num1 = num4 ^ (int) num2 * 1463139023;
            continue;
          case 4:
            num1 = (int) num2 * -1137241045 ^ 970286518;
            continue;
          case 5:
            if (allAddedRows != null)
            {
              num1 = 900955138;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            realUpdatedRows = dataRowList.ToArray();
            num1 = (int) num2 * -388662800 ^ 1158034945;
            continue;
          case 7:
            realUpdatedRows = updatedRows;
            num1 = (int) num2 * -1644079593 ^ 1044375735;
            continue;
          case 8:
            int num5 = !flag3 ? 2067806957 : (num5 = 1518289568);
            num1 = num5 ^ (int) num2 * 1115958923;
            continue;
          case 9:
            num1 = (int) num2 * 223875006 ^ -917586194;
            continue;
          case 10:
            realUpdatedRows = updatedRows;
            num1 = (int) num2 * 1678860074 ^ 1732913313;
            continue;
          case 11:
            num1 = 1159599193;
            continue;
          case 12:
            dataRowList = new List<DataRow>();
            num1 = 1742903280;
            continue;
          case 13:
            num1 = (int) num2 * 641063195 ^ -1111016724;
            continue;
          case 14:
            ++index;
            num1 = 302662163;
            continue;
          case 15:
            goto label_3;
          case 16:
            goto label_1;
          case 17:
            dataRowList.Add(updatedRow);
            num1 = (int) num2 * -1710263530 ^ 937788999;
            continue;
          case 18:
            num1 = (int) num2 * -557536212 ^ 960405731;
            continue;
          case 19:
            index = 0;
            num1 = (int) num2 * -2108947092 ^ 797435051;
            continue;
          case 20:
            num1 = (int) num2 * 521615562 ^ -1192679355;
            continue;
          case 21:
            int num6 = !flag1 ? 501486880 : (num6 = 1341344629);
            num1 = num6 ^ (int) num2 * 1290176815;
            continue;
          case 22:
            int num7;
            num1 = num7 = index < updatedRows.Length ? 298052278 : (num7 = 66115186);
            continue;
          case 24:
            num1 = (int) num2 * -1311298501 ^ -768999116;
            continue;
          default:
            goto label_31;
        }
        flag2 = num3 != 0;
        num1 = 1085912617;
      }
label_3:
      int num8 = updatedRows.Length < 1 ? 1 : 0;
      goto label_5;
label_31:
      return realUpdatedRows;
label_4:
      num8 = 1;
label_5:
      flag1 = num8 != 0;
      num1 = 183561259;
      goto label_2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public virtual int UpdateAll(AccountsDataSet dataSet)
    {
label_1:
      int num1 = 159934078;
      bool flag1;
      IDbTransaction dbTransaction;
      IDbConnection connection;
      DataSet dataSet1;
      List<DataRow> allAddedRows;
      List<DataAdapter> dataAdapterList;
      List<DataRow> allChangedRows;
      Dictionary<object, IDbConnection> dictionary;
      int num2;
      while (true)
      {
        uint num3;
        bool flag2;
        bool dataSetBeforeUpdate;
        bool flag3;
        bool flag4;
        bool flag5;
        int num4;
        switch ((num3 = (uint) (num1 ^ 1549163941)) % 41U)
        {
          case 0:
            flag5 = !dataSet.HasChanges();
            num1 = 2082610345;
            continue;
          case 1:
            dataSet1.Merge((DataSet) dataSet);
            num1 = (int) num3 * -82818800 ^ -1255385383;
            continue;
          case 2:
            num1 = (int) num3 * -414474011 ^ -327858750;
            continue;
          case 3:
            goto label_31;
          case 4:
            allAddedRows = new List<DataRow>();
            dataAdapterList = new List<DataAdapter>();
            num1 = (int) num3 * -1744854660 ^ 382913807;
            continue;
          case 5:
            num1 = (int) num3 * 94201020 ^ -562623901;
            continue;
          case 6:
            int num5 = dbTransaction == null ? 1872580343 : (num5 = 459306647);
            num1 = num5 ^ (int) num3 * -312907424;
            continue;
          case 7:
            int num6;
            num1 = num6 = connection.State != ConnectionState.Closed ? 860679690 : (num6 = 1879800355);
            continue;
          case 8:
            goto label_32;
          case 9:
            num1 = (int) num3 * 1462358115 ^ 1062960025;
            continue;
          case 10:
            connection = this.Connection;
            num1 = 954020342;
            continue;
          case 11:
            num4 = !this.MatchTableAdapterConnection((IDbConnection) this._tableTableAdapter.Connection) ? 1 : 0;
            break;
          case 12:
            flag1 = false;
            num1 = 519847101;
            continue;
          case 13:
            int num7 = flag3 ? 1037423703 : (num7 = 704527197);
            num1 = num7 ^ (int) num3 * 1018632498;
            continue;
          case 14:
            num1 = (int) num3 * 28605738 ^ 200086443;
            continue;
          case 15:
            flag4 = dataSet == null;
            num1 = (int) num3 * 1042547131 ^ 565445819;
            continue;
          case 16:
            allChangedRows = new List<DataRow>();
            num1 = 120894677;
            continue;
          case 17:
            flag3 = connection == null;
            num1 = (int) num3 * 1546914262 ^ -1518759237;
            continue;
          case 18:
            num1 = (int) num3 * -1224992833 ^ 1808289353;
            continue;
          case 19:
            connection.Close();
            num1 = (int) num3 * -156286727 ^ -923674620;
            continue;
          case 20:
            flag1 = true;
            num1 = (int) num3 * -1935278960 ^ 1192174598;
            continue;
          case 21:
            goto label_1;
          case 22:
            connection.Open();
            num1 = (int) num3 * -1921138234 ^ 1444956988;
            continue;
          case 23:
            int num8 = flag5 ? 298142975 : (num8 = 1175303582);
            num1 = num8 ^ (int) num3 * -310879421;
            continue;
          case 24:
            dictionary = new Dictionary<object, IDbConnection>();
            num2 = 0;
            num1 = (int) num3 * -1984021721 ^ -1047390301;
            continue;
          case 25:
            if (this._tableTableAdapter == null)
            {
              num4 = 0;
              break;
            }
            num1 = 1146347984;
            continue;
          case 26:
            int num9 = (connection.State & ConnectionState.Broken) == ConnectionState.Broken ? -660106242 : (num9 = -23651489);
            num1 = num9 ^ (int) num3 * -872459133;
            continue;
          case 27:
            dbTransaction = connection.BeginTransaction();
            num1 = 925426619;
            continue;
          case 28:
            goto label_43;
          case 30:
            num1 = (int) num3 * -1424027347 ^ -1222060515;
            continue;
          case 31:
            int num10 = !flag2 ? 1456270240 : (num10 = 1299341339);
            num1 = num10 ^ (int) num3 * 600279407;
            continue;
          case 32:
            num1 = (int) num3 * -566941889 ^ 622522974;
            continue;
          case 33:
            goto label_34;
          case 34:
            dataSetBeforeUpdate = this.BackupDataSetBeforeUpdate;
            num1 = (int) num3 * -1352985375 ^ -1046447567;
            continue;
          case 35:
            int num11 = flag4 ? -1920002577 : (num11 = -1156256218);
            num1 = num11 ^ (int) num3 * 309909463;
            continue;
          case 36:
            dataSet1 = new DataSet();
            num1 = (int) num3 * -722068249 ^ -1509841450;
            continue;
          case 37:
            num1 = (int) num3 * 565374722 ^ 1512811749;
            continue;
          case 38:
            dataSet1 = (DataSet) null;
            num1 = (int) num3 * -377803944 ^ 832301590;
            continue;
          case 39:
            goto label_26;
          case 40:
            int num12 = dataSetBeforeUpdate ? -1647358833 : (num12 = -2135214706);
            num1 = num12 ^ (int) num3 * -1279439503;
            continue;
          default:
            goto label_45;
        }
        flag2 = num4 != 0;
        num1 = 132966593;
      }
label_26:
      return 0;
label_31:
      throw new ArgumentNullException(nameof (dataSet));
label_32:
      throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
label_34:
      throw new ApplicationException("The transaction cannot begin. The current data connection does not support transactions or the current state is not allowing the transaction to begin.");
label_43:
      throw new ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterManager TableAdapter property to a valid TableAdapter instance.");
label_45:
      try
      {
        bool flag6 = this._tableTableAdapter != null;
label_47:
        int num13 = 2134277690;
        DataRow dataRow;
        int index1;
        DataRow[] array1;
        int index2;
        bool flag7;
        DataRow[] array2;
        while (true)
        {
          uint num14;
          switch ((num14 = (uint) (num13 ^ 1549163941)) % 47U)
          {
            case 0:
              int num15;
              num13 = num15 = 0 < allChangedRows.Count ? 322125105 : (num15 = 2100492927);
              continue;
            case 1:
              num13 = (int) num14 * -1547957469 ^ 763378451;
              continue;
            case 2:
              int num16 = !this._tableTableAdapter.Adapter.AcceptChangesDuringUpdate ? -792354722 : (num16 = -1141502468);
              num13 = num16 ^ (int) num14 * 1439795078;
              continue;
            case 3:
              num2 += this.UpdateDeletedRows(dataSet, allChangedRows);
              num13 = 1050568675;
              continue;
            case 4:
              num13 = (int) num14 * -306978941 ^ 1873804713;
              continue;
            case 5:
              flag7 = this.UpdateOrder == TableAdapterManager.UpdateOrderOption.UpdateInsertDelete;
              num13 = 189485551;
              continue;
            case 6:
              this._tableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
              dataAdapterList.Add((DataAdapter) this._tableTableAdapter.Adapter);
              num13 = (int) num14 * 1528762775 ^ 1195810679;
              continue;
            case 7:
              this._tableTableAdapter.Transaction = (SqlTransaction) dbTransaction;
              num13 = (int) num14 * -300786331 ^ -1885982764;
              continue;
            case 8:
              dbTransaction.Commit();
              num13 = (int) num14 * 1130555765 ^ 2105872921;
              continue;
            case 9:
              num2 += this.UpdateInsertedRows(dataSet, allAddedRows);
              num13 = 418708463;
              continue;
            case 10:
              allChangedRows.CopyTo(array1);
              index2 = 0;
              num13 = (int) num14 * -323641666 ^ -1107007520;
              continue;
            case 11:
              array2 = new DataRow[allAddedRows.Count];
              num13 = (int) num14 * 1299467819 ^ 482574536;
              continue;
            case 12:
              num13 = (int) num14 * 260101309 ^ 386074112;
              continue;
            case 13:
              int num17 = !flag6 ? -415802632 : (num17 = -1049132099);
              num13 = num17 ^ (int) num14 * 2015218483;
              continue;
            case 14:
              num13 = (int) num14 * -111389735 ^ -1100970879;
              continue;
            case 15:
              array1[index2].AcceptChanges();
              num13 = 1847670921;
              continue;
            case 16:
              index1 = 0;
              num13 = (int) num14 * -2053818633 ^ -1059488329;
              continue;
            case 17:
              int num18;
              num13 = num18 = index1 >= array2.Length ? 905465405 : (num18 = 225235563);
              continue;
            case 18:
              num13 = (int) num14 * 781385170 ^ -473208296;
              continue;
            case 19:
              allAddedRows.CopyTo(array2);
              num13 = (int) num14 * 1280631871 ^ -1002849086;
              continue;
            case 20:
              num13 = (int) num14 * 2058217955 ^ -1134677914;
              continue;
            case 21:
              num13 = (int) num14 * 1711612962 ^ 161278498;
              continue;
            case 22:
              ++index1;
              num13 = (int) num14 * 263515487 ^ -1431488578;
              continue;
            case 23:
              int num19;
              num13 = num19 = index2 >= array1.Length ? 1382052214 : (num19 = 1147554491);
              continue;
            case 24:
              dictionary.Add((object) this._tableTableAdapter, (IDbConnection) this._tableTableAdapter.Connection);
              num13 = (int) num14 * -319405679 ^ -1284035246;
              continue;
            case 25:
              int num20 = 0 >= allAddedRows.Count ? 146371486 : (num20 = 651840834);
              num13 = num20 ^ (int) num14 * -1907064067;
              continue;
            case 26:
              ++index2;
              num13 = (int) num14 * -1027648435 ^ -1918469997;
              continue;
            case 27:
              num2 += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
              num2 += this.UpdateInsertedRows(dataSet, allAddedRows);
              num13 = (int) num14 * 1476398636 ^ -1984206131;
              continue;
            case 28:
              num13 = (int) num14 * -1478673352 ^ -1783309830;
              continue;
            case 29:
              num13 = (int) num14 * -774285543 ^ 2012901394;
              continue;
            case 30:
              num13 = 1046378325;
              continue;
            case 31:
              dataRow.AcceptChanges();
              num13 = (int) num14 * 515434822 ^ -1752390497;
              continue;
            case 32:
              num2 += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
              num13 = (int) num14 * 632764585 ^ 1681743037;
              continue;
            case 33:
              goto label_47;
            case 34:
              array1 = new DataRow[allChangedRows.Count];
              num13 = (int) num14 * 664180844 ^ 1600960182;
              continue;
            case 35:
              int num21 = flag7 ? 190035421 : (num21 = 287618666);
              num13 = num21 ^ (int) num14 * -846454653;
              continue;
            case 36:
              num13 = (int) num14 * 331095935 ^ 1261803649;
              continue;
            case 37:
              num13 = (int) num14 * 274955383 ^ -375008007;
              continue;
            case 38:
              num13 = (int) num14 * 1317659517 ^ 675815235;
              continue;
            case 39:
              num13 = (int) num14 * 1147962542 ^ 19136418;
              continue;
            case 40:
              num13 = (int) num14 * 1352980914 ^ 320243486;
              continue;
            case 41:
              num13 = (int) num14 * 1214019180 ^ 298699835;
              continue;
            case 42:
              num13 = (int) num14 * -1672817144 ^ -1405084559;
              continue;
            case 43:
              this._tableTableAdapter.Connection = (SqlConnection) connection;
              num13 = (int) num14 * 483089730 ^ 1984006914;
              continue;
            case 44:
              num13 = 267602918;
              continue;
            case 46:
              dataRow = array2[index1];
              num13 = (int) num14 * -80427109 ^ 430975458;
              continue;
            default:
              goto label_146;
          }
        }
      }
      catch (Exception ex)
      {
label_95:
        int num22 = 2017041490;
        bool dataSetBeforeUpdate;
        DataRow[] array;
        int index;
        DataRow dataRow;
        while (true)
        {
          uint num23;
          switch ((num23 = (uint) (num22 ^ 1549163941)) % 22U)
          {
            case 0:
              dataRow.AcceptChanges();
              num22 = (int) num23 * 1777366323 ^ 2135676191;
              continue;
            case 1:
              num22 = (int) num23 * 1942354082 ^ 404025716;
              continue;
            case 2:
              num22 = (int) num23 * 901451774 ^ 337515345;
              continue;
            case 3:
              dbTransaction.Rollback();
              num22 = (int) num23 * -1034599132 ^ -1279369150;
              continue;
            case 4:
              int num24 = 0 >= allAddedRows.Count ? 1359929493 : (num24 = 934806383);
              num22 = num24 ^ (int) num23 * -1384106964;
              continue;
            case 5:
              array = new DataRow[allAddedRows.Count];
              allAddedRows.CopyTo(array);
              index = 0;
              num22 = (int) num23 * -249491722 ^ 1944676674;
              continue;
            case 6:
              goto label_95;
            case 7:
              dataRow = array[index];
              num22 = 358383327;
              continue;
            case 8:
              num22 = (int) num23 * 1708714286 ^ -435727863;
              continue;
            case 9:
              num22 = (int) num23 * 2089732756 ^ 524239338;
              continue;
            case 10:
              num22 = 1652763631;
              continue;
            case 11:
              num22 = (int) num23 * 1755515698 ^ 432869704;
              continue;
            case 12:
              num22 = (int) num23 * 570903076 ^ 1453889928;
              continue;
            case 13:
              int num25;
              num22 = num25 = index < array.Length ? 412870654 : (num25 = 2044683751);
              continue;
            case 14:
              num22 = 958394630;
              continue;
            case 16:
              int num26 = dataSetBeforeUpdate ? -1909601847 : (num26 = -1732506149);
              num22 = num26 ^ (int) num23 * 1530572082;
              continue;
            case 17:
              ++index;
              num22 = (int) num23 * 1529754556 ^ 700962778;
              continue;
            case 18:
              dataRow.SetAdded();
              num22 = (int) num23 * -1107543336 ^ -2013190916;
              continue;
            case 19:
              dataSet.Merge(dataSet1);
              num22 = (int) num23 * 845110712 ^ 2097691628;
              continue;
            case 20:
              Debug.Assert(dataSet1 != null);
              dataSet.Clear();
              num22 = (int) num23 * -2315045 ^ 138276902;
              continue;
            case 21:
              dataSetBeforeUpdate = this.BackupDataSetBeforeUpdate;
              num22 = (int) num23 * -2107091488 ^ 1017472419;
              continue;
            default:
              goto label_117;
          }
        }
label_117:
        throw ex;
      }
      finally
      {
label_119:
        int num27 = 1436104859;
        bool flag8;
        bool flag9;
        DataAdapter[] array;
        int index;
        bool flag10;
        DataAdapter dataAdapter;
        while (true)
        {
          uint num28;
          switch ((num28 = (uint) (num27 ^ 1549163941)) % 26U)
          {
            case 0:
              flag10 = this._tableTableAdapter != null;
              num27 = 1463117136;
              continue;
            case 1:
              ++index;
              num27 = (int) num28 * -343586448 ^ -578487741;
              continue;
            case 2:
              flag8 = flag1;
              num27 = (int) num28 * -932432963 ^ -2099321545;
              continue;
            case 3:
              array = new DataAdapter[dataAdapterList.Count];
              num27 = (int) num28 * -1159687647 ^ 518865825;
              continue;
            case 4:
              int num29 = !flag9 ? 1917174026 : (num29 = 517529854);
              num27 = num29 ^ (int) num28 * -851505601;
              continue;
            case 6:
              flag9 = 0 < dataAdapterList.Count;
              num27 = 1033923477;
              continue;
            case 7:
              num27 = 594080552;
              continue;
            case 8:
              num27 = (int) num28 * -1749867438 ^ 1009347405;
              continue;
            case 9:
              this._tableTableAdapter.Connection = (SqlConnection) dictionary[(object) this._tableTableAdapter];
              num27 = (int) num28 * -315050292 ^ -442419169;
              continue;
            case 10:
              num27 = (int) num28 * 1492635608 ^ 1035435041;
              continue;
            case 11:
              num27 = (int) num28 * 980934763 ^ 60042370;
              continue;
            case 12:
              int num30 = !flag8 ? 1704586101 : (num30 = 246589595);
              num27 = num30 ^ (int) num28 * 2031472501;
              continue;
            case 13:
              dataAdapter = array[index];
              num27 = (int) num28 * 40242003 ^ -1032191334;
              continue;
            case 14:
              connection.Close();
              num27 = (int) num28 * 1867804741 ^ -1688467559;
              continue;
            case 15:
              num27 = (int) num28 * -914497633 ^ 2059196705;
              continue;
            case 16:
              num27 = (int) num28 * 1760896678 ^ -1544939394;
              continue;
            case 17:
              int num31 = flag10 ? -1796397995 : (num31 = -1756486458);
              num27 = num31 ^ (int) num28 * -1385138565;
              continue;
            case 18:
              goto label_119;
            case 19:
              index = 0;
              num27 = (int) num28 * -1462469773 ^ 1246501042;
              continue;
            case 20:
              int num32;
              num27 = num32 = index >= array.Length ? 1092663680 : (num32 = 1417554436);
              continue;
            case 21:
              num27 = 1568401480;
              continue;
            case 22:
              dataAdapter.AcceptChangesDuringUpdate = true;
              num27 = (int) num28 * -1225983655 ^ -454694168;
              continue;
            case 23:
              dataAdapterList.CopyTo(array);
              num27 = (int) num28 * -959140343 ^ 1251793465;
              continue;
            case 24:
              num27 = (int) num28 * 1038823077 ^ -1997053200;
              continue;
            case 25:
              this._tableTableAdapter.Transaction = (SqlTransaction) null;
              num27 = (int) num28 * -1131596382 ^ 1639770309;
              continue;
            default:
              goto label_145;
          }
        }
label_145:;
      }
label_146:
      return num2;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected virtual void SortSelfReferenceRows(
      DataRow[] rows,
      DataRelation relation,
      bool childFirst)
    {
label_1:
      int num1 = -970984561;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -725604464)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            Array.Sort<DataRow>(rows, (IComparer<DataRow>) new TableAdapterManager.SelfReferenceComparer(relation, childFirst));
            num1 = (int) num2 * 1250554402 ^ 853692840;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    protected virtual bool MatchTableAdapterConnection(IDbConnection inputConnection)
    {
label_1:
      int num1 = -1091824145;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -958009239)) % 15U)
        {
          case 0:
            flag1 = true;
            num1 = (int) num2 * -1233726891 ^ 2141077780;
            continue;
          case 1:
            num1 = (int) num2 * -1552468703 ^ -900028485;
            continue;
          case 2:
            num3 = inputConnection == null ? 1 : 0;
            break;
          case 4:
            flag1 = true;
            num1 = (int) num2 * -112091556 ^ 2016731106;
            continue;
          case 5:
            goto label_1;
          case 6:
            flag1 = true;
            num1 = (int) num2 * 1219400484 ^ -1406180958;
            continue;
          case 7:
            int num4 = !flag2 ? -1735029869 : (num4 = -1532308384);
            num1 = num4 ^ (int) num2 * -40523236;
            continue;
          case 8:
            num1 = (int) num2 * 1276650509 ^ 537315314;
            continue;
          case 9:
            num1 = (int) num2 * -1187759716 ^ -28955165;
            continue;
          case 10:
            if (this.Connection != null)
            {
              num1 = -1941373513;
              continue;
            }
            num3 = 1;
            break;
          case 11:
            int num5;
            num1 = num5 = !string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, StringComparison.Ordinal) ? -51843429 : (num5 = -1990681336);
            continue;
          case 12:
            flag2 = this._connection != null;
            num1 = (int) num2 * 805404356 ^ 1532830404;
            continue;
          case 13:
            flag1 = false;
            num1 = -1345288456;
            continue;
          case 14:
            num1 = (int) num2 * 2141432368 ^ -448088529;
            continue;
          default:
            goto label_19;
        }
        int num6;
        num1 = num6 = num3 != 0 ? -564467117 : (num6 = -648277125);
      }
label_19:
      return flag1;
    }

    public TableAdapterManager()
    {
label_1:
      int num1 = 1293965741;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 53746941)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -961260240 ^ -664695206;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public enum UpdateOrderOption
    {
      InsertUpdateDelete,
      UpdateInsertDelete,
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private class SelfReferenceComparer : IComparer<DataRow>
    {
      private DataRelation _relation;
      private int _childFirst;

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      internal SelfReferenceComparer(DataRelation relation, bool childFirst)
      {
label_1:
        int num1 = 372502212;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1906870832)) % 10U)
          {
            case 0:
              num1 = (int) num2 * 376714299 ^ -1041089357;
              continue;
            case 1:
              this._childFirst = -1;
              num1 = (int) num2 * -1827622329 ^ -1360339288;
              continue;
            case 2:
              num1 = (int) num2 * 1001320588 ^ 666406701;
              continue;
            case 3:
              num1 = (int) num2 * -472783510 ^ -1689581534;
              continue;
            case 4:
              num1 = (int) num2 * -627535170 ^ -703265183;
              continue;
            case 5:
              num1 = (int) num2 * -1227031523 ^ 431615967;
              continue;
            case 6:
              this._relation = relation;
              int num3 = childFirst ? 1706755632 : (num3 = 1073723928);
              num1 = num3 ^ (int) num2 * 915635235;
              continue;
            case 7:
              goto label_3;
            case 8:
              this._childFirst = 1;
              num1 = 928205993;
              continue;
            case 9:
              goto label_1;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      private DataRow GetRoot(DataRow row, out int distance)
      {
        Debug.Assert(row != null);
label_1:
        int num1 = 1591112659;
        DataRow root;
        while (true)
        {
          uint num2;
          DataRow parentRow;
          DataRow dataRow;
          IDictionary<DataRow, DataRow> dictionary;
          bool flag1;
          bool flag2;
          int num3;
          int num4;
          switch ((num2 = (uint) (num1 ^ 1514269482)) % 30U)
          {
            case 0:
              flag2 = distance == 0;
              num1 = (int) num2 * -1296253591 ^ 1321501722;
              continue;
            case 1:
              dataRow = row;
              num1 = (int) num2 * -1537445601 ^ -1970400020;
              continue;
            case 2:
              num1 = (int) num2 * -1772560865 ^ 456991607;
              continue;
            case 3:
              num3 = !dictionary.ContainsKey(parentRow) ? 1 : 0;
              goto label_30;
            case 4:
              num1 = 277083640;
              continue;
            case 5:
              num1 = (int) num2 * 135028744 ^ -700223234;
              continue;
            case 6:
              num1 = (int) num2 * -81352558 ^ 1811905123;
              continue;
            case 8:
              num1 = (int) num2 * 44362514 ^ -388295224;
              continue;
            case 9:
              dictionary.Clear();
              num1 = (int) num2 * -406788154 ^ -1220934809;
              continue;
            case 10:
              num1 = (int) num2 * -401164765 ^ -168015120;
              continue;
            case 11:
              ++distance;
              num1 = 733079183;
              continue;
            case 12:
              if (parentRow == null)
              {
                num4 = 0;
                break;
              }
              num1 = 1537514190;
              continue;
            case 13:
              distance = 0;
              dictionary = (IDictionary<DataRow, DataRow>) new Dictionary<DataRow, DataRow>();
              num1 = (int) num2 * 731316570 ^ 857127924;
              continue;
            case 14:
              int num5 = flag2 ? 1612100523 : (num5 = 183178400);
              num1 = num5 ^ (int) num2 * 1492595495;
              continue;
            case 15:
              dictionary[row] = row;
              num1 = (int) num2 * 2006626620 ^ 1287312462;
              continue;
            case 16:
              num4 = !dictionary.ContainsKey(parentRow) ? 1 : 0;
              break;
            case 17:
              int num6 = flag1 ? 124166193 : (num6 = 1493946633);
              num1 = num6 ^ (int) num2 * -279278893;
              continue;
            case 18:
              parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Default);
              num1 = (int) num2 * -216827063 ^ 1866307306;
              continue;
            case 19:
              if (parentRow == null)
              {
                num3 = 0;
                goto label_30;
              }
              else
              {
                num1 = 840165683;
                continue;
              }
            case 20:
              dictionary[row] = row;
              num1 = (int) num2 * -57263876 ^ 1903587943;
              continue;
            case 21:
              dataRow = parentRow;
              dictionary[parentRow] = parentRow;
              num1 = (int) num2 * 1616053634 ^ -853766585;
              continue;
            case 22:
              parentRow = parentRow.GetParentRow(this._relation, DataRowVersion.Original);
              num1 = (int) num2 * 1250446555 ^ 222989108;
              continue;
            case 23:
              goto label_1;
            case 24:
              root = dataRow;
              num1 = 559128342;
              continue;
            case 25:
              dictionary[parentRow] = parentRow;
              num1 = (int) num2 * -1170598217 ^ 81144491;
              continue;
            case 26:
              parentRow = row.GetParentRow(this._relation, DataRowVersion.Original);
              num1 = (int) num2 * -610749454 ^ -1137794145;
              continue;
            case 27:
              parentRow = row.GetParentRow(this._relation, DataRowVersion.Default);
              num1 = (int) num2 * 1850081582 ^ -1961014963;
              continue;
            case 28:
              ++distance;
              dataRow = parentRow;
              num1 = (int) num2 * -526888051 ^ 1414569837;
              continue;
            case 29:
              num1 = (int) num2 * 1689107972 ^ -1050072268;
              continue;
            default:
              goto label_37;
          }
          flag1 = num4 != 0;
          num1 = 1314804969;
          continue;
label_30:
          int num7;
          num1 = num7 = num3 == 0 ? 1238570142 : (num7 = 124183147);
        }
label_37:
        return root;
      }

      [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
      [DebuggerNonUserCode]
      public int Compare(DataRow row1, DataRow row2)
      {
label_1:
        int num1 = 1583444413;
        int num2;
        while (true)
        {
          uint num3;
          DataRow root1;
          DataRow root2;
          int distance1;
          bool flag1;
          int distance2;
          bool flag2;
          bool flag3;
          int num4;
          switch ((num3 = (uint) (num1 ^ 1016512037)) % 31U)
          {
            case 0:
              int num5 = flag3 ? -1633216702 : (num5 = -1271162352);
              num1 = num5 ^ (int) num3 * 1721542540;
              continue;
            case 1:
              flag3 = row1 == null;
              num1 = 539682417;
              continue;
            case 2:
              num1 = (int) num3 * 1737208908 ^ -2100804015;
              continue;
            case 3:
              num2 = 1;
              num1 = (int) num3 * -87338773 ^ 352479029;
              continue;
            case 4:
              num1 = (int) num3 * -1235844335 ^ -1103225091;
              continue;
            case 5:
              num2 = 0;
              num1 = (int) num3 * -1221955989 ^ 1407141768;
              continue;
            case 6:
              num1 = (int) num3 * 1363216305 ^ -684588882;
              continue;
            case 7:
              distance1 = 0;
              num1 = (int) num3 * -1039969551 ^ -1737701649;
              continue;
            case 8:
              int num6 = !flag2 ? -1692009431 : (num6 = -400037955);
              num1 = num6 ^ (int) num3 * -996352780;
              continue;
            case 9:
              num1 = (int) num3 * -2037473134 ^ -629739521;
              continue;
            case 10:
              flag1 = row2 == null;
              num1 = 1505206327;
              continue;
            case 11:
              goto label_1;
            case 12:
              num4 = root2.Table != null ? 1 : 0;
              break;
            case 13:
              num2 = 1;
              num1 = 169363809;
              continue;
            case 14:
              if (root1.Table == null)
              {
                num4 = 0;
                break;
              }
              num1 = 1547324170;
              continue;
            case 15:
              distance2 = 0;
              num1 = 855886712;
              continue;
            case 16:
              num1 = (int) num3 * -873978975 ^ -1444198246;
              continue;
            case 17:
              root1 = this.GetRoot(row1, out distance2);
              num1 = (int) num3 * -22310761 ^ -558245195;
              continue;
            case 18:
              int num7 = flag1 ? 1415964498 : (num7 = 400452306);
              num1 = num7 ^ (int) num3 * 55309865;
              continue;
            case 19:
              num1 = (int) num3 * -166979336 ^ -1096962795;
              continue;
            case 20:
              num2 = -1;
              num1 = (int) num3 * -990964142 ^ 1616821294;
              continue;
            case 21:
              int num8 = root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2) ? 1486460077 : (num8 = 1913975085);
              num1 = num8 ^ (int) num3 * 1210417802;
              continue;
            case 22:
              root2 = this.GetRoot(row2, out distance1);
              num1 = (int) num3 * -447128265 ^ -739799461;
              continue;
            case 23:
              flag2 = root1 == root2;
              num1 = (int) num3 * 161481036 ^ 994980532;
              continue;
            case 24:
              num1 = (int) num3 * -1673487836 ^ -1267234131;
              continue;
            case 25:
              num2 = -1;
              num1 = (int) num3 * -2131910232 ^ 2032386625;
              continue;
            case 26:
              int num9 = row1 == row2 ? 828140017 : (num9 = 432920316);
              num1 = num9 ^ (int) num3 * -491775754;
              continue;
            case 27:
              num1 = (int) num3 * -789990632 ^ 2065307894;
              continue;
            case 28:
              num2 = this._childFirst * distance2.CompareTo(distance1);
              num1 = (int) num3 * 1700691421 ^ 1504076793;
              continue;
            case 29:
              num1 = (int) num3 * 71811413 ^ -835382618;
              continue;
            default:
              goto label_35;
          }
          Debug.Assert(num4 != 0);
          num1 = 954092719;
        }
label_35:
        return num2;
      }
    }
  }
}
