// Decompiled with JetBrains decompiler
// Type: ⁭‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;
using System.Text;

public abstract class \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮
{
  public static readonly byte[] \u202B⁫‌⁮⁫‎‬‮⁭‪⁬⁭‌⁯‏‬‮​‪‎⁫‍⁪‭‫​‌⁫⁫⁯‏⁫⁫⁭‌‫⁫‫‪‎‮ = new byte[0];
  public static readonly int[] \u200C‬‫‪‫‌‎‏⁯⁯‭‫‌‍⁮‪⁬‎⁮‌⁪⁫⁪⁯‎‏‪‬‭‍‬‫‏‫⁫‎⁪⁫‍‫‮ = new int[0];

  public static bool \u200C‎​⁯‎‫⁬‍⁫‌⁮‭⁯⁯​‍‏‮‫‭⁪‎‭​​⁯⁪⁪⁮​‫​‬‪‭⁫‏‫‫⁮‮(
    byte[] _param0,
    int _param1,
    int _param2)
  {
    uint num = 0;
    for (int index = 0; index < _param2; ++index)
      num |= (uint) _param0[_param1 + index];
    return num == 0U;
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(bool[] _param0, bool[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(char[] _param0, char[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(byte[] _param0, byte[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(
    byte[] _param0,
    int _param1,
    int _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    int num1 = _param2 - _param1;
    int num2 = _param5 - _param4;
    if (num1 != num2)
      return false;
    for (int index = 0; index < num1; ++index)
    {
      if ((int) _param0[_param1 + index] != (int) _param3[_param4 + index])
        return false;
    }
    return true;
  }

  [Obsolete("Use 'AreEqual' method instead")]
  public static bool \u206C‌‫‬‮⁮⁯‬‪⁪⁪⁬‎⁬‭‬‎‎‌⁭‌‬⁭‭‫‪‫‮‮‮‏⁬‏‪⁯⁫‎‬⁫⁭‮(byte[] _param0, byte[] _param1) => \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(_param0, _param1);

  public static bool \u200F⁬‌‬⁭⁪⁪‏‫⁮⁭‪⁮‎​‍⁬‭⁪⁯⁬‭‌⁬⁬‬‫‮⁫⁯‏⁫⁪‌⁬⁫⁫‬‬‬‮(byte[] _param0, byte[] _param1)
  {
    if (_param0 == null || _param1 == null)
      return false;
    if (_param0 == _param1)
      return true;
    int num1 = Math.Min(_param0.Length, _param1.Length);
    int num2 = _param0.Length ^ _param1.Length;
    for (int index = 0; index < num1; ++index)
      num2 |= (int) _param0[index] ^ (int) _param1[index];
    for (int index = num1; index < _param1.Length; ++index)
      num2 |= (int) _param1[index] ^ (int) ~_param1[index];
    return num2 == 0;
  }

  public static bool \u200F⁬‌‬⁭⁪⁪‏‫⁮⁭‪⁮‎​‍⁬‭⁪⁯⁬‭‌⁬⁬‬‫‮⁫⁯‏⁫⁪‌⁬⁫⁫‬‬‬‮(
    int _param0,
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    if (_param1 == null)
      throw new ArgumentNullException("a");
    if (_param3 == null)
      throw new ArgumentNullException("b");
    if (_param0 < 0)
      throw new ArgumentException("cannot be negative", "len");
    if (_param2 > _param1.Length - _param0)
      throw new IndexOutOfRangeException("'aOff' value invalid for specified length");
    if (_param4 > _param3.Length - _param0)
      throw new IndexOutOfRangeException("'bOff' value invalid for specified length");
    int num = 0;
    for (int index = 0; index < _param0; ++index)
      num |= (int) _param1[_param2 + index] ^ (int) _param3[_param4 + index];
    return num == 0;
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(int[] _param0, int[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  [CLSCompliant(false)]
  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(uint[] _param0, uint[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(long[] _param0, long[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  [CLSCompliant(false)]
  public static bool \u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(
    ulong[] _param0,
    ulong[] _param1)
  {
    if (_param0 == _param1)
      return true;
    return _param0 != null && _param1 != null && \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(_param0, _param1);
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(bool[] _param0, bool[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if (_param0[length] != _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(char[] _param0, char[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if ((int) _param0[length] != (int) _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(byte[] _param0, byte[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if ((int) _param0[length] != (int) _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(int[] _param0, int[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if (_param0[length] != _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(uint[] _param0, uint[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if ((int) _param0[length] != (int) _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(long[] _param0, long[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if (_param0[length] != _param1[length])
        return false;
    }
    return true;
  }

  private static bool \u200E⁯⁮‬‪‎‮⁭​⁭‫⁫‬⁭⁯‭‫‎⁫‏‌‪‍​​‏⁮⁯⁯‬‌​‬‮‪⁮⁮⁯⁪‎‮(
    ulong[] _param0,
    ulong[] _param1)
  {
    int length = _param0.Length;
    if (length != _param1.Length)
      return false;
    while (length != 0)
    {
      --length;
      if ((long) _param0[length] != (long) _param1[length])
        return false;
    }
    return true;
  }

  public static string \u206E​‎​‭‍‌‌⁮⁪⁫​‎‭‪⁯‬‎⁫⁫‪‪⁫⁯‪⁫‪​​‪‏​​​⁬‌‭‎⁪‮(object[] _param0)
  {
    StringBuilder stringBuilder = new StringBuilder("[");
    if (_param0.Length != 0)
    {
      stringBuilder.Append(_param0[0]);
      for (int index = 1; index < _param0.Length; ++index)
        stringBuilder.Append(", ").Append(_param0[index]);
    }
    stringBuilder.Append(']');
    return stringBuilder.ToString();
  }

  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(byte[] _param0)
  {
    if (_param0 == null)
      return 0;
    int length = _param0.Length;
    int num = length + 1;
    while (--length >= 0)
      num = num * 257 ^ (int) _param0[length];
    return num;
  }

  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(
    byte[] _param0,
    int _param1,
    int _param2)
  {
    if (_param0 == null)
      return 0;
    int num1 = _param2;
    int num2 = num1 + 1;
    while (--num1 >= 0)
      num2 = num2 * 257 ^ (int) _param0[_param1 + num1];
    return num2;
  }

  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(int[] _param0)
  {
    if (_param0 == null)
      return 0;
    int length = _param0.Length;
    int num = length + 1;
    while (--length >= 0)
      num = num * 257 ^ _param0[length];
    return num;
  }

  [CLSCompliant(false)]
  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(ushort[] _param0)
  {
    if (_param0 == null)
      return 0;
    int length = _param0.Length;
    int num = length + 1;
    while (--length >= 0)
      num = num * 257 ^ (int) _param0[length];
    return num;
  }

  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(
    int[] _param0,
    int _param1,
    int _param2)
  {
    if (_param0 == null)
      return 0;
    int num1 = _param2;
    int num2 = num1 + 1;
    while (--num1 >= 0)
      num2 = num2 * 257 ^ _param0[_param1 + num1];
    return num2;
  }

  [CLSCompliant(false)]
  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(uint[] _param0)
  {
    if (_param0 == null)
      return 0;
    int length = _param0.Length;
    int num = length + 1;
    while (--length >= 0)
      num = num * 257 ^ (int) _param0[length];
    return num;
  }

  [CLSCompliant(false)]
  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(
    uint[] _param0,
    int _param1,
    int _param2)
  {
    if (_param0 == null)
      return 0;
    int num1 = _param2;
    int num2 = num1 + 1;
    while (--num1 >= 0)
      num2 = num2 * 257 ^ (int) _param0[_param1 + num1];
    return num2;
  }

  [CLSCompliant(false)]
  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(ulong[] _param0)
  {
    if (_param0 == null)
      return 0;
    int length = _param0.Length;
    int num1 = length + 1;
    while (--length >= 0)
    {
      ulong num2 = _param0[length];
      num1 = (num1 * 257 ^ (int) num2) * 257 ^ (int) (num2 >> 32);
    }
    return num1;
  }

  [CLSCompliant(false)]
  public static int \u202A⁯⁬​⁫⁯‮‭‎⁭⁯‫⁭​​‌‍‪‍⁮‏⁭⁯⁯‮⁭​⁯⁪‫‪‏⁮‪‫‪⁮‌‌‭‮(
    ulong[] _param0,
    int _param1,
    int _param2)
  {
    if (_param0 == null)
      return 0;
    int num1 = _param2;
    int num2 = num1 + 1;
    while (--num1 >= 0)
    {
      ulong num3 = _param0[_param1 + num1];
      num2 = (num2 * 257 ^ (int) num3) * 257 ^ (int) (num3 >> 32);
    }
    return num2;
  }

  public static bool[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(bool[] _param0) => _param0 != null ? (bool[]) _param0.Clone() : (bool[]) null;

  public static byte[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(byte[] _param0) => _param0 != null ? (byte[]) _param0.Clone() : (byte[]) null;

  public static short[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(short[] _param0) => _param0 != null ? (short[]) _param0.Clone() : (short[]) null;

  [CLSCompliant(false)]
  public static ushort[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(ushort[] _param0) => _param0 != null ? (ushort[]) _param0.Clone() : (ushort[]) null;

  public static int[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(int[] _param0) => _param0 != null ? (int[]) _param0.Clone() : (int[]) null;

  [CLSCompliant(false)]
  public static uint[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(uint[] _param0) => _param0 != null ? (uint[]) _param0.Clone() : (uint[]) null;

  public static long[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(long[] _param0) => _param0 != null ? (long[]) _param0.Clone() : (long[]) null;

  [CLSCompliant(false)]
  public static ulong[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(ulong[] _param0) => _param0 != null ? (ulong[]) _param0.Clone() : (ulong[]) null;

  public static byte[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(
    byte[] _param0,
    byte[] _param1)
  {
    if (_param0 == null)
      return (byte[]) null;
    if (_param1 == null || _param1.Length != _param0.Length)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param0);
    Array.Copy((Array) _param0, 0, (Array) _param1, 0, _param1.Length);
    return _param1;
  }

  [CLSCompliant(false)]
  public static ulong[] \u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(
    ulong[] _param0,
    ulong[] _param1)
  {
    if (_param0 == null)
      return (ulong[]) null;
    if (_param1 == null || _param1.Length != _param0.Length)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param0);
    Array.Copy((Array) _param0, 0, (Array) _param1, 0, _param1.Length);
    return _param1;
  }

  public static bool \u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮(byte[] _param0, byte _param1)
  {
    for (int index = 0; index < _param0.Length; ++index)
    {
      if ((int) _param0[index] == (int) _param1)
        return true;
    }
    return false;
  }

  public static bool \u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮(short[] _param0, short _param1)
  {
    for (int index = 0; index < _param0.Length; ++index)
    {
      if ((int) _param0[index] == (int) _param1)
        return true;
    }
    return false;
  }

  public static bool \u200E‪‏⁭‍⁭⁪‫‍‏‍‮⁮‬‌⁬⁫⁪‮‫⁯‮‮‭⁬⁯‮‭​⁭‫‪‮‫‎⁬⁮⁭⁭‍‮(int[] _param0, int _param1)
  {
    for (int index = 0; index < _param0.Length; ++index)
    {
      if (_param0[index] == _param1)
        return true;
    }
    return false;
  }

  public static void \u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(byte[] _param0, byte _param1)
  {
    int length = _param0.Length;
    while (length > 0)
      _param0[--length] = _param1;
  }

  public static void \u202E‫⁭‬‌⁫‮‏‫‮‪⁬‫‫⁬⁪⁪⁭‬‏⁫⁮‏⁪‫‬‭‮⁬‪‍‫⁭‪‍⁯‫‭‍‫‮(
    byte[] _param0,
    int _param1,
    int _param2,
    byte _param3)
  {
    for (int index = _param1; index < _param2; ++index)
      _param0[index] = _param3;
  }

  public static byte[] \u206B⁬‍‎⁮⁯‌‎⁬‮‌‏‌⁯‬‭‫⁪‭​⁯⁮⁫⁯⁬⁬⁫‮⁪⁬‭‎‎⁯‏⁬‏‏‭‍‮(byte[] _param0, int _param1)
  {
    byte[] destinationArray = new byte[_param1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, Math.Min(_param1, _param0.Length));
    return destinationArray;
  }

  public static char[] \u206B⁬‍‎⁮⁯‌‎⁬‮‌‏‌⁯‬‭‫⁪‭​⁯⁮⁫⁯⁬⁬⁫‮⁪⁬‭‎‎⁯‏⁬‏‏‭‍‮(char[] _param0, int _param1)
  {
    char[] destinationArray = new char[_param1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, Math.Min(_param1, _param0.Length));
    return destinationArray;
  }

  public static int[] \u206B⁬‍‎⁮⁯‌‎⁬‮‌‏‌⁯‬‭‫⁪‭​⁯⁮⁫⁯⁬⁬⁫‮⁪⁬‭‎‎⁯‏⁬‏‏‭‍‮(int[] _param0, int _param1)
  {
    int[] destinationArray = new int[_param1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, Math.Min(_param1, _param0.Length));
    return destinationArray;
  }

  public static long[] \u206B⁬‍‎⁮⁯‌‎⁬‮‌‏‌⁯‬‭‫⁪‭​⁯⁮⁫⁯⁬⁬⁫‮⁪⁬‭‎‎⁯‏⁬‏‏‭‍‮(long[] _param0, int _param1)
  {
    long[] destinationArray = new long[_param1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, Math.Min(_param1, _param0.Length));
    return destinationArray;
  }

  public static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u206B⁬‍‎⁮⁯‌‎⁬‮‌‏‌⁯‬‭‫⁪‭​⁯⁮⁫⁯⁬⁬⁫‮⁪⁬‭‎‎⁯‏⁬‏‏‭‍‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] _param0,
    int _param1)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] destinationArray = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[_param1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, Math.Min(_param1, _param0.Length));
    return destinationArray;
  }

  public static byte[] \u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(
    byte[] _param0,
    int _param1,
    int _param2)
  {
    int val1 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202A​⁯⁯​⁪‍‌‎⁯⁫⁫‎⁯⁫‌‌‫⁫⁮⁮‪‍⁪‎‫‪⁯​​‬‎‌‪⁬⁯‭⁬⁯‬‮(_param1, _param2);
    byte[] destinationArray = new byte[val1];
    Array.Copy((Array) _param0, _param1, (Array) destinationArray, 0, Math.Min(val1, _param0.Length - _param1));
    return destinationArray;
  }

  public static int[] \u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(
    int[] _param0,
    int _param1,
    int _param2)
  {
    int val1 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202A​⁯⁯​⁪‍‌‎⁯⁫⁫‎⁯⁫‌‌‫⁫⁮⁮‪‍⁪‎‫‪⁯​​‬‎‌‪⁬⁯‭⁬⁯‬‮(_param1, _param2);
    int[] destinationArray = new int[val1];
    Array.Copy((Array) _param0, _param1, (Array) destinationArray, 0, Math.Min(val1, _param0.Length - _param1));
    return destinationArray;
  }

  public static long[] \u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(
    long[] _param0,
    int _param1,
    int _param2)
  {
    int val1 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202A​⁯⁯​⁪‍‌‎⁯⁫⁫‎⁯⁫‌‌‫⁫⁮⁮‪‍⁪‎‫‪⁯​​‬‎‌‪⁬⁯‭⁬⁯‬‮(_param1, _param2);
    long[] destinationArray = new long[val1];
    Array.Copy((Array) _param0, _param1, (Array) destinationArray, 0, Math.Min(val1, _param0.Length - _param1));
    return destinationArray;
  }

  public static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] _param0,
    int _param1,
    int _param2)
  {
    int val1 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202A​⁯⁯​⁪‍‌‎⁯⁫⁫‎⁯⁫‌‌‫⁫⁮⁮‪‍⁪‎‫‪⁯​​‬‎‌‪⁬⁯‭⁬⁯‬‮(_param1, _param2);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] destinationArray = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[val1];
    Array.Copy((Array) _param0, _param1, (Array) destinationArray, 0, Math.Min(val1, _param0.Length - _param1));
    return destinationArray;
  }

  private static int \u202A​⁯⁯​⁪‍‌‎⁯⁫⁫‎⁯⁫‌‌‫⁫⁮⁮‪‍⁪‎‫‪⁯​​‬‎‌‪⁬⁯‭⁬⁯‬‮(int _param0, int _param1)
  {
    int num = _param1 - _param0;
    return num >= 0 ? num : throw new ArgumentException(_param0.ToString() + " > " + _param1.ToString());
  }

  public static byte[] \u202D‭⁬​‌⁯‭⁫‍⁫⁬‍⁭‎⁭⁭‬‭‍‪‭‍⁯‭‏‭‌⁬​⁯‭⁭‫⁬⁬⁭⁫‮⁫‬‮(byte[] _param0, byte _param1)
  {
    if (_param0 == null)
      return new byte[1]{ _param1 };
    int length = _param0.Length;
    byte[] destinationArray = new byte[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, length);
    destinationArray[length] = _param1;
    return destinationArray;
  }

  public static short[] \u202D‭⁬​‌⁯‭⁫‍⁫⁬‍⁭‎⁭⁭‬‭‍‪‭‍⁯‭‏‭‌⁬​⁯‭⁭‫⁬⁬⁭⁫‮⁫‬‮(
    short[] _param0,
    short _param1)
  {
    if (_param0 == null)
      return new short[1]{ _param1 };
    int length = _param0.Length;
    short[] destinationArray = new short[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, length);
    destinationArray[length] = _param1;
    return destinationArray;
  }

  public static int[] \u202D‭⁬​‌⁯‭⁫‍⁫⁬‍⁭‎⁭⁭‬‭‍‪‭‍⁯‭‏‭‌⁬​⁯‭⁭‫⁬⁬⁭⁫‮⁫‬‮(int[] _param0, int _param1)
  {
    if (_param0 == null)
      return new int[1]{ _param1 };
    int length = _param0.Length;
    int[] destinationArray = new int[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, length);
    destinationArray[length] = _param1;
    return destinationArray;
  }

  public static byte[] \u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(
    byte[] _param0,
    byte[] _param1)
  {
    if (_param0 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param1);
    if (_param1 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param0);
    byte[] destinationArray = new byte[_param0.Length + _param1.Length];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, _param0.Length);
    Array.Copy((Array) _param1, 0, (Array) destinationArray, _param0.Length, _param1.Length);
    return destinationArray;
  }

  [CLSCompliant(false)]
  public static ushort[] \u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(
    ushort[] _param0,
    ushort[] _param1)
  {
    if (_param0 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param1);
    if (_param1 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param0);
    ushort[] destinationArray = new ushort[_param0.Length + _param1.Length];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, _param0.Length);
    Array.Copy((Array) _param1, 0, (Array) destinationArray, _param0.Length, _param1.Length);
    return destinationArray;
  }

  public static byte[] \u202C⁫⁫‍⁪‌‫‬‌⁬⁭‫‭‮‭‎​‏⁯⁪‍‎⁬⁯⁪‬‏⁯‏⁯‌⁬⁭‪‫‏‪​‍‎‮(params byte[][] _param0)
  {
    byte[][] numArray1 = new byte[_param0.Length][];
    int num = 0;
    int length = 0;
    for (int index = 0; index < _param0.Length; ++index)
    {
      byte[] numArray2 = _param0[index];
      if (numArray2 != null)
      {
        numArray1[num++] = numArray2;
        length += numArray2.Length;
      }
    }
    byte[] destinationArray = new byte[length];
    int destinationIndex = 0;
    for (int index = 0; index < num; ++index)
    {
      byte[] sourceArray = numArray1[index];
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, destinationIndex, sourceArray.Length);
      destinationIndex += sourceArray.Length;
    }
    return destinationArray;
  }

  public static int[] \u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(int[] _param0, int[] _param1)
  {
    if (_param0 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param1);
    if (_param1 == null)
      return \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u206F‬⁯‪⁬⁮⁭⁮‮‭‬‌‌‎⁪⁫‍‭‍‮‌⁬‮‏‍‪‬‮⁯‫‪‭‬⁭‏⁮⁯​‮⁬‮(_param0);
    int[] destinationArray = new int[_param0.Length + _param1.Length];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 0, _param0.Length);
    Array.Copy((Array) _param1, 0, (Array) destinationArray, _param0.Length, _param1.Length);
    return destinationArray;
  }

  public static byte[] \u206E⁪⁪‬⁮‭⁮‫‭⁫⁮⁮‫​⁮‫‫‮‬‎⁬‪​​​‏⁪‮‫⁫⁫‎‌‪⁭‪‎⁬⁭‭‮(byte[] _param0, byte _param1)
  {
    if (_param0 == null)
      return new byte[1]{ _param1 };
    int length = _param0.Length;
    byte[] destinationArray = new byte[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 1, length);
    destinationArray[0] = _param1;
    return destinationArray;
  }

  public static short[] \u206E⁪⁪‬⁮‭⁮‫‭⁫⁮⁮‫​⁮‫‫‮‬‎⁬‪​​​‏⁪‮‫⁫⁫‎‌‪⁭‪‎⁬⁭‭‮(
    short[] _param0,
    short _param1)
  {
    if (_param0 == null)
      return new short[1]{ _param1 };
    int length = _param0.Length;
    short[] destinationArray = new short[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 1, length);
    destinationArray[0] = _param1;
    return destinationArray;
  }

  public static int[] \u206E⁪⁪‬⁮‭⁮‫‭⁫⁮⁮‫​⁮‫‫‮‬‎⁬‪​​​‏⁪‮‫⁫⁫‎‌‪⁭‪‎⁬⁭‭‮(int[] _param0, int _param1)
  {
    if (_param0 == null)
      return new int[1]{ _param1 };
    int length = _param0.Length;
    int[] destinationArray = new int[length + 1];
    Array.Copy((Array) _param0, 0, (Array) destinationArray, 1, length);
    destinationArray[0] = _param1;
    return destinationArray;
  }

  public static byte[] \u206B‏​‎⁮⁪‮‎⁬⁬​‮⁫‍⁪​⁮⁬⁬‏‮‏‭⁮‎‭⁭‎⁮‫⁯‪⁫‎‪‭⁬​‫‏‮(byte[] _param0)
  {
    if (_param0 == null)
      return (byte[]) null;
    int num = 0;
    int length = _param0.Length;
    byte[] numArray = new byte[length];
    while (--length >= 0)
      numArray[length] = _param0[num++];
    return numArray;
  }

  public static int[] \u206B‏​‎⁮⁪‮‎⁬⁬​‮⁫‍⁪​⁮⁬⁬‏‮‏‭⁮‎‭⁭‎⁮‫⁯‪⁫‎‪‭⁬​‫‏‮(int[] _param0)
  {
    if (_param0 == null)
      return (int[]) null;
    int num = 0;
    int length = _param0.Length;
    int[] numArray = new int[length];
    while (--length >= 0)
      numArray[length] = _param0[num++];
    return numArray;
  }

  public static byte[] \u206A⁭⁭‬‫‌‎⁯‭‪⁯‪​⁮⁪⁫⁮‮‌⁪‏‭‭‍‫‎⁭‬⁪⁫‪⁯‫‭⁫⁫‏‎‮(byte[] _param0)
  {
    if (_param0 == null)
      return (byte[]) null;
    int index1 = 0;
    byte num1;
    for (int index2 = _param0.Length - 1; index1 < index2; _param0[index2--] = num1)
    {
      num1 = _param0[index1];
      byte num2 = _param0[index2];
      _param0[index1++] = num2;
    }
    return _param0;
  }

  public static int[] \u206A⁭⁭‬‫‌‎⁯‭‪⁯‪​⁮⁪⁫⁮‮‌⁪‏‭‭‍‫‎⁭‬⁪⁫‪⁯‫‭⁫⁫‏‎‮(int[] _param0)
  {
    if (_param0 == null)
      return (int[]) null;
    int index1 = 0;
    int num1;
    for (int index2 = _param0.Length - 1; index1 < index2; _param0[index2--] = num1)
    {
      num1 = _param0[index1];
      int num2 = _param0[index2];
      _param0[index1++] = num2;
    }
    return _param0;
  }

  public static void \u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(byte[] _param0)
  {
    if (_param0 == null)
      return;
    Array.Clear((Array) _param0, 0, _param0.Length);
  }

  public static void \u206C‍‫‎⁭⁫‎‫​‬⁮‫‌⁭‎⁪⁯⁫‮​‬⁬‮⁮‬‏​‭‍​⁬‌‌⁯⁬⁮‮​‫‫‮(int[] _param0)
  {
    if (_param0 == null)
      return;
    Array.Clear((Array) _param0, 0, _param0.Length);
  }

  public static bool \u206F⁯⁫‌⁭⁭‎‮‎‭‏⁮⁫⁫‍‪⁫⁫‬​⁭‭⁪‭‭⁯​‬⁪⁮‏⁪​‫⁯⁬⁬⁬‫‮‮(object[] _param0)
  {
    if (_param0 == null)
      return true;
    int length = _param0.Length;
    for (int index = 0; index < length; ++index)
    {
      if (_param0[index] == null)
        return true;
    }
    return false;
  }

  public static bool \u200D‫‎‫‬‌‮‭‬⁭‪‭⁫‎​⁪⁭‍‫‬‮‏⁫⁭⁬⁬‮‎⁬⁮⁮⁯⁬‫‏⁭⁬⁬‪⁯‮(byte[] _param0) => _param0 == null || _param0.Length < 1;

  public static bool \u200D‫‎‫‬‌‮‭‬⁭‪‭⁫‎​⁪⁭‍‫‬‮‏⁫⁭⁬⁬‮‎⁬⁮⁮⁯⁬‫‏⁭⁬⁬‪⁯‮(object[] _param0) => _param0 == null || _param0.Length < 1;
}
