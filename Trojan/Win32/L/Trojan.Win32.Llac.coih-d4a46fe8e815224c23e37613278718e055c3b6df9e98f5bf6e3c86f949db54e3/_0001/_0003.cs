// Decompiled with JetBrains decompiler
// Type: .
// Assembly: FileZilla Client, Version=3.5.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B794D7B0-77D8-4DB9-A117-32697E11C530
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Llac.coih-d4a46fe8e815224c23e37613278718e055c3b6df9e98f5bf6e3c86f949db54e3.exe

using \u0001;
using \u0002;
using System;
using System.Reflection;
using System.Text;

namespace \u0001
{
  internal class \u0003
  {
    internal static readonly byte[] \u0001;

    static \u0003()
    {
      if (\u0003.\u0001 != null)
        return;
label_1:
      int num = 4;
      if (num != 0)
      {
        switch (num)
        {
          case 0:
            goto label_1;
          default:
            num = 1;
            break;
        }
      }
      if (num == 0)
      {
        // ISSUE: method reference
        RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u002Ecctor);
      }
      string str1 = "RmlsZVppbGxhIENsaWVudEZpbGVaaWxsYSBDbGllbnQ=";
      byte[] numArray = Convert.FromBase64String(str1);
      if (true)
        goto label_10;
label_8:
      byte[] bytes;
      string str2 = Encoding.UTF8.GetString(bytes, 0, bytes.Length);
      if (true)
        goto label_11;
label_9:
      \u0003.\u0001 = \u0003.\u0001(Assembly.GetExecutingAssembly().GetManifestResourceStream(str1));
      return;
label_11:
      str1 = str2;
      goto label_9;
label_10:
      bytes = numArray;
      goto label_8;
    }

    internal static string \u0001(int c112a63dfc3c5bb10a050fa1f41e16824)
    {
      int count = 0;
      int num1;
      int num2;
      int num3;
      if (((int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824] & 128) == 0)
      {
label_1:
        int num4 = 7;
        if (num4 != 0)
        {
          switch (num4)
          {
            case 0:
              goto label_1;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0001);
              }
              count = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824];
              c112a63dfc3c5bb10a050fa1f41e16824++;
              goto label_23;
          }
        }
        else
          num3 = num4;
      }
      else
      {
        int num5 = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824];
        if (true)
        {
          if ((num5 & 64) == 0)
          {
label_8:
            switch (1)
            {
              case 0:
                goto label_8;
              default:
                int num6 = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824] & -129;
                if (true)
                {
                  num3 = num6 << 8;
                  goto label_12;
                }
                else
                {
                  num2 = num6;
                  goto label_22;
                }
            }
          }
          else
            num5 = ((int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824] & -193) << 24;
        }
        num1 = num5;
        goto label_18;
      }
label_12:
      int num7 = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824 + 1];
      count = num3 | num7;
      int num8 = c112a63dfc3c5bb10a050fa1f41e16824;
label_13:
      int num9;
      int num10;
      if (true)
      {
        num10 = 2;
        num9 = num8;
      }
      else
      {
        num1 = num8;
        goto label_18;
      }
label_15:
      c112a63dfc3c5bb10a050fa1f41e16824 = num9 + num10;
      goto label_23;
label_18:
      int num11 = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824 + 1] << 16;
      count = num1 | num11;
      if (true)
        count |= (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824 + 2] << 8;
      num9 = count;
      num10 = (int) \u0003.\u0001[c112a63dfc3c5bb10a050fa1f41e16824 + 3];
      if (true)
      {
        count = num9 | num10;
        num2 = c112a63dfc3c5bb10a050fa1f41e16824;
      }
      else
        goto label_15;
label_22:
      c112a63dfc3c5bb10a050fa1f41e16824 = num2 + 4;
label_23:
      num8 = count;
      if (true)
        return num8 < 1 ? string.Empty : string.Intern(Encoding.Unicode.GetString(\u0003.\u0001, c112a63dfc3c5bb10a050fa1f41e16824, count));
      goto label_13;
    }
  }
}
