// Decompiled with JetBrains decompiler
// Type: cours.Graphic
// Assembly: StringResultHand, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 972439AE-5227-4007-A7B1-AD8C12183697
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-b0c6cc3231a21a0edb387339bccfdc42bc5c15a57e76165ea00487144e63b9da.exe

using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;

namespace cours
{
  internal class Graphic
  {
    private PictureBox Pb;

    public void PB(PictureBox v) => this.Pb = v;

    public void Draw(Shape fig)
    {
      Graphics graphics = Graphics.FromHwnd(this.Pb.Handle);
      for (int index = 0; index < fig.Coords.Length; ++index)
      {
        int num = fig.Coords.Length - 1;
        if (index < num)
          graphics.DrawLine(fig.pen, new Point((int) fig.Coords[index].X, (int) fig.Coords[index].Y), new Point((int) fig.Coords[index + 1].X, (int) fig.Coords[index + 1].Y));
        else
          graphics.DrawLine(fig.pen, new Point((int) fig.Coords[index].X, (int) fig.Coords[index].Y), new Point((int) fig.Coords[0].X, (int) fig.Coords[0].Y));
        if (fig.diagonal)
          this.DrawDiagonal(fig);
      }
    }

    public void Draw(List<Shape> shapes)
    {
      foreach (Shape shape in shapes)
        this.Draw(shape);
    }

    public void Draw(List<Quadrangle> shapes)
    {
      foreach (Shape shape in shapes)
        this.Draw(shape);
    }

    public void Draw(List<Triangle> shapes)
    {
      foreach (Shape shape in shapes)
        this.Draw(shape);
    }

    public void DrawDiagonal(Shape q)
    {
      Graphics graphics = Graphics.FromHwnd(this.Pb.Handle);
      graphics.DrawLine(q.pen, (int) q.Coords[0].X, (int) q.Coords[0].Y, (int) q.Coords[2].X, (int) q.Coords[2].Y);
      graphics.DrawLine(q.pen, (int) q.Coords[1].X, (int) q.Coords[1].Y, (int) q.Coords[3].X, (int) q.Coords[3].Y);
    }
  }
}
