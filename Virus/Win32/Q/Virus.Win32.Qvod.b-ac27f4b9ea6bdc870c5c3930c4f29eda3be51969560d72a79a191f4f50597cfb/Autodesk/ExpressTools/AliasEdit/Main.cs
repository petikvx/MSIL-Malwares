// Decompiled with JetBrains decompiler
// Type: Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit.Main
// Assembly: alias, Version=18.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 30B32B4B-BB59-4BDE-A34F-3A89FA31757D
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Virus.Win32.Qvod.b-ac27f4b9ea6bdc870c5c3930c4f29eda3be51969560d72a79a191f4f50597cfb.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Drawing;
using System.Drawing.Printing;
using System.IO;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Autodesk.ExpressTools.AliasEdit.Autodesk.ExpressTools.AliasEdit
{
  [StandardModule]
  internal sealed class Main
  {
    public static short nEdit;
    public static string sFileInMemory;
    public static string sFname;
    public static string sACADPGP;
    public static string sBackup;
    public static string sShells;
    public static string sAliases;
    public static string sAccels;
    public static string[] sAlias;
    public static string[] sUserDefAlias;
    public static string[] sRep;
    public static string[] sUserDefRep;
    public static string[] sShell;
    public static string[] sUserDefShell;
    public static string[] sCommand;
    public static string[] sUserDefCommand;
    public static string[] sFlag;
    public static string[] sUserDefFlag;
    public static string[] sPrompt;
    public static string[] sUserDefPrompt;
    public static string[] sCode;
    public static string[] sAccel;
    public static string[] sMenuRep;
    public static string[] sTagSeq;
    public static string[] sDescr;
    public static short nTotalShell;
    public static short nTotalAlias;
    public static short nTotalAccel;
    public static short nUserDefTotalShell;
    public static short nUserDefTotalAlias;
    public static short nStdRep;
    public static string sEditPrompt;
    public static string sEditAlias;
    public static string sEditRep;
    public static string sEditFlag;
    public static short nChange;
    public static short bEditCancel;
    public static string sSysAliases = "";
    private static ResourceManager resManager;
    public const string END_OF_LINE = "\r\n";
    public const string KEY_STRING = "key";
    public const string NO_ALIAS_STRING = "---";
    public const short ALIAS_TAB = 0;
    public const short SHELL_TAB = 1;
    public const short ACCEL_TAB = 2;
    public const string DEFAULT_PGP = "acad.pgp";
    public const string DEFAULT_MNU = "acad.mnu";
    [AccessedThroughProperty("pd")]
    private static PrintDocument _pd;
    public static short Index;
    public static int y;
    public static int nPage;
    public static int linesPerPage;
    public static int count;
    public static int numCopiesPrinted;
    public static short nCopies;
    public static string sPrintLine;
    public static string[] sHeader1;
    public static string[] sHeader2;
    public static string[] sTitle;
    public static string sSeparator;
    public static string sTextString;
    public const short NUM_SPACE = 30;
    public static Font printFont;
    public static float yPos;
    [SpecialName]
    private static short \u0024STATIC\u0024BogusString\u002401E10E\u0024Length;

    static Main()
    {
      Main.pd = new PrintDocument();
      Main.Index = (short) 0;
      Main.sHeader1 = new string[2];
      Main.sHeader2 = new string[2];
      Main.sTitle = new string[2];
      Main.printFont = new Font("Courier", 10f, FontStyle.Regular);
      Main.yPos = 0.0f;
    }

    public static PrintDocument pd
    {
      get => Main._pd;
      [MethodImpl(MethodImplOptions.Synchronized)] set => Main._pd = value;
    }

    public static void FindSectionBounds(
      string vsSect,
      ref string[] rsMNUFile,
      ref short rnBeginVar,
      ref short rnEndVar,
      short vnEnd)
    {
      rnBeginVar = (short) -1;
      short num1 = vnEnd;
      short index1 = 1;
      while ((int) index1 <= (int) num1)
      {
        if (Operators.CompareString(rsMNUFile[(int) index1], vsSect, false) == 0)
        {
          rnBeginVar = index1;
          break;
        }
        checked { ++index1; }
      }
      rnEndVar = vnEnd;
      int num2 = (int) checked ((short) ((int) rnBeginVar + 1));
      short num3 = vnEnd;
      short index2 = (short) num2;
      while ((int) index2 <= (int) num3)
      {
        if (Operators.CompareString(Strings.Left(rsMNUFile[(int) index2], 3), "***", false) == 0)
        {
          rnEndVar = checked ((short) ((int) index2 - 1));
          break;
        }
        checked { ++index2; }
      }
    }

    public static void ParseMNU(ref object FileName)
    {
      frmAlias.DefInstance.Refresh();
      short FileNumber = checked ((short) FileSystem.FreeFile());
      FileSystem.FileOpen((int) FileNumber, Conversions.ToString(FileName), OpenMode.Input);
      short index1 = 0;
      string[] arySrc1;
      string[] arySrc2 = (string[]) Utils.CopyArray((Array) arySrc1, (Array) new string[checked ((int) Math.Round(unchecked ((double) FileSystem.FileLen(Conversions.ToString(FileName)) / 10.0)) + 1)]);
      Cursor.Current = Cursors.WaitCursor;
      while (!FileSystem.EOF((int) FileNumber))
      {
        checked { ++index1; }
        arySrc2[(int) index1] = FileSystem.LineInput((int) FileNumber);
      }
      short vnEnd = index1;
      string[] rsMNUFile = (string[]) Utils.CopyArray((Array) arySrc2, (Array) new string[checked ((int) index1 + 1)]);
      short rnBeginVar1;
      short rnEndVar1;
      Main.FindSectionBounds("***ACCELERATORS", ref rsMNUFile, ref rnBeginVar1, ref rnEndVar1, vnEnd);
      Main.sAccel = (string[]) Utils.CopyArray((Array) Main.sAccel, (Array) new string[checked ((int) (short) unchecked ((int) rnEndVar1 - (int) rnBeginVar1) + 1)]);
      Main.sMenuRep = (string[]) Utils.CopyArray((Array) Main.sMenuRep, (Array) new string[checked ((int) (short) unchecked ((int) rnEndVar1 - (int) rnBeginVar1) + 1)]);
      if (rnBeginVar1 == (short) -1)
      {
        Main.nTotalAccel = (short) 0;
      }
      else
      {
        short rnBeginVar2;
        short rnEndVar2;
        Main.FindSectionBounds("***HELPSTRINGS", ref rsMNUFile, ref rnBeginVar2, ref rnEndVar2, vnEnd);
        short num1 = checked ((short) unchecked ((int) rnEndVar1 - (int) rnBeginVar1));
        short index2 = 1;
        while ((int) index2 <= (int) num1)
        {
          short index3 = checked ((short) unchecked ((int) rnBeginVar1 + (int) index2));
          string str = Strings.LTrim(rsMNUFile[(int) index3]);
          if (Main.IsAlphaNumeric(str))
          {
            Main.sMenuRep[(int) index2] = Strings.Left(str, Strings.InStr(str, " "));
            Main.sAccel[(int) index2] = Strings.Right(str, checked (Strings.Len(str) - Strings.InStr(str, "[") - 1));
          }
          else if (Operators.CompareString(Strings.Left(str, 1), "[", false) == 0)
          {
            Main.sAccel[(int) index2] = Strings.Left(str, Strings.InStr(str, "]"));
            Main.sMenuRep[(int) index2] = Strings.Right(str, checked (Strings.Len(str) - Strings.InStr(str, "]")));
          }
          checked { ++index2; }
        }
        string str1 = "";
        short index4 = 0;
        short num2 = vnEnd;
        short index5 = 1;
        while ((int) index5 <= (int) num2)
        {
          if (Operators.CompareString(Strings.Left(rsMNUFile[(int) index5], 3), "***", false) == 0)
            str1 = Strings.Right(rsMNUFile[(int) index5], checked (Strings.Len(rsMNUFile[(int) index5]) - 3));
          if (Operators.CompareString(Strings.Left(str1, 3), "POP", false) == 0 && Main.IsAlphaNumeric(rsMNUFile[(int) index5]))
          {
            checked { ++index4; }
            Main.sTagSeq = (string[]) Utils.CopyArray((Array) Main.sTagSeq, (Array) new string[checked ((int) index4 + 1)]);
            Main.sTagSeq[(int) index4] = Strings.Left(rsMNUFile[(int) index5], Strings.InStr(rsMNUFile[(int) index5], " "));
            if (index4 != (short) 233)
              ;
            if (Operators.CompareString(Strings.Trim(Main.sTagSeq[(int) index4]), "ID_Cal", false) != 0)
              ;
          }
          checked { ++index5; }
        }
        short index6 = rnEndVar2;
        Main.sDescr = (string[]) Utils.CopyArray((Array) Main.sDescr, (Array) new string[checked ((int) index4 + 1)]);
        short num3 = index4;
        short index7 = 1;
        while ((int) index7 <= (int) num3)
        {
          short index8 = checked ((short) ((int) rnBeginVar2 + 1));
          if (Operators.CompareString(Main.sTagSeq[(int) index7], "ID_Cal", false) != 0)
            ;
          while ((int) index8 <= (int) index6)
          {
            if (Operators.CompareString(Strings.Left(rsMNUFile[(int) index8], Strings.Len(Main.sTagSeq[(int) index7])), Main.sTagSeq[(int) index7], false) == 0)
            {
              Main.sDescr[(int) index7] = Strings.Right(rsMNUFile[(int) index8], checked (Strings.Len(rsMNUFile[(int) index8]) - Strings.InStr(rsMNUFile[(int) index8], "[") + 1));
              if ((int) index8 < (int) index6)
              {
                rsMNUFile[(int) index8] = rsMNUFile[(int) index6];
                checked { --index6; }
              }
            }
            checked { ++index8; }
          }
          checked { ++index7; }
        }
        short num4 = checked ((short) Information.UBound((Array) Main.sAccel));
        short index9 = 1;
        while ((int) index9 <= (int) num4)
        {
          Main.sMenuRep[(int) index9] = Main.FindAndReplace(Main.sMenuRep[(int) index9], "^C^C", "Ctrl +C, Ctrl +C");
          Main.sMenuRep[(int) index9] = Main.FindAndReplace(Main.sMenuRep[(int) index9], "^", "Ctrl +");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "[", "");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "]", "");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "\"", "");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "\"", "");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "CONTROL", "Ctrl +");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "+", "");
          Main.sAccel[(int) index9] = Main.FindAndReplace(Main.sAccel[(int) index9], "SHIFT", "Shft +");
          checked { ++index9; }
        }
        Cursor.Current = Cursors.Default;
        Main.nTotalAccel = checked ((short) Information.UBound((Array) Main.sAccel));
      }
    }

    public static string FindAndReplace(string vsText, string vsFind, string vsRepl)
    {
      while (true)
      {
        short num = checked ((short) Strings.InStr(vsText, vsFind));
        if (num != (short) 0)
          vsText = Strings.Left(vsText, checked ((int) num - 1)) + vsRepl + Strings.Mid(vsText, checked ((int) num + Strings.Len(vsFind)));
        else
          break;
      }
      return vsText;
    }

    public static void CheckForDuplicates(ref object WhichTab, ref bool Import)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        ListView lvwAlia = (ListView) frmAlias.DefInstance.lvwAlias[Conversions.ToInteger(WhichTab)];
label_2:
        num3 = 3;
        ListView.ListViewItemCollection items = lvwAlia.Items;
label_3:
        num3 = 4;
        short index1 = 0;
label_4:
        num3 = 5;
        lvwAlia.Sort();
label_5:
        num3 = 6;
        short num4 = 0;
        goto label_13;
label_6:
        num3 = 9;
        if (!(Operators.CompareString(items[(int) index1].Text, items[checked ((int) index1 + 1)].Text, false) == 0 & (Operators.CompareString(items[(int) index1].Text, "---", false) != 0 | Import)))
          goto label_12;
label_7:
        num3 = 10;
        if (Operators.CompareString(items[(int) index1].SubItems[1].Text, items[checked ((int) index1 + 1)].SubItems[1].Text, false) != 0)
          goto label_9;
label_8:
        num3 = 11;
        ListView.ListViewItemCollection viewItemCollection1 = items;
        ListView.ListViewItemCollection viewItemCollection2 = viewItemCollection1;
        short index2 = index1;
        int index3 = (int) index2;
        ListViewItem listViewItem = viewItemCollection2[index3];
        ref ListViewItem local1 = ref listViewItem;
        int integer = Conversions.ToInteger(WhichTab);
        ref int local2 = ref integer;
        Main.RemoveAlias(ref local1, ref local2, false, true);
        WhichTab = (object) integer;
        viewItemCollection1[(int) index2] = listViewItem;
        goto label_12;
label_9:
        num3 = 13;
label_10:
        num3 = 14;
        items.RemoveAt((int) index1);
label_11:
        num3 = 15;
        checked { ++num4; }
label_12:
        num3 = 18;
        checked { ++index1; }
label_13:
        num3 = 8;
        if ((int) index1 < checked (items.Count - 2))
          goto label_6;
label_14:
        num3 = 20;
        if (!(Import & num4 > (short) 0))
          goto label_25;
label_15:
        num3 = 21;
        int num5 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_IMPORTDUP") + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("STR_DUPREP") + "---" + frmAlias.DefInstance.resManager.GetString("STR_.")), MsgBoxStyle.Information, (object) frmAlias.DefInstance.resManager.GetString("STR_DUPTITLE"));
        goto label_25;
label_20:
        num2 = num3;
        switch (num1)
        {
          case 1:
label_19:
            int num6 = num2 + 1;
            num2 = 0;
            switch (num6)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
              case 8:
              case 19:
                goto label_13;
              case 9:
                goto label_6;
              case 10:
                goto label_7;
              case 11:
                goto label_8;
              case 12:
              case 16:
              case 17:
              case 18:
                goto label_12;
              case 13:
                goto label_9;
              case 14:
                goto label_10;
              case 15:
                goto label_11;
              case 20:
                goto label_14;
              case 21:
                goto label_15;
              case 22:
              case 23:
              case 25:
              case 28:
                goto label_25;
              case 24:
                goto label_16;
              case 26:
              case 27:
                break;
              default:
                goto label_24;
            }
            break;
          case 2:
label_16:
            num3 = 24;
            if (Information.Err().Number <= 35599)
              break;
            goto label_25;
          default:
            goto label_24;
        }
        num3 = 27;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_19;
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_20;
      }
label_24:
      throw ProjectData.CreateProjectError(-2146828237);
label_25:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static short CurrentTab()
    {
      int num1;
      short num2;
      int num3;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        num2 = checked ((short) frmAlias.DefInstance.tbsMain.SelectedIndex);
        goto label_7;
label_2:
        num3 = -1;
        switch (num1)
        {
          case 2:
            num2 = (short) 0;
            goto label_7;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num3 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_2;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_7:
      int num4 = (int) num2;
      if (num3 == 0)
        return (short) num4;
      ProjectData.ClearProjectError();
      return (short) num4;
    }

    public static void AppendAlias()
    {
      string text1 = "";
      string Left = "";
      string str = "";
      string text2 = "";
      short num = Main.CurrentTab();
      ListView.ListViewItemCollection viewItemCollection = (ListView.ListViewItemCollection) NewLateBinding.LateGet(frmAlias.DefInstance.lvwAlias[(int) num], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
      switch (num)
      {
        case 0:
          frmNewAlias defInstance1 = frmNewAlias.DefInstance;
          Left = defInstance1.txtAlias.Text;
          str = defInstance1.cmbRep.Text;
          text1 = "";
          if (Operators.CompareString(Left, "", false) == 0 | Operators.CompareString(str, "", false) == 0)
          {
            Main.nEdit = (short) 0;
            return;
          }
          break;
        case 1:
          frmNewShell defInstance2 = frmNewShell.DefInstance;
          Left = defInstance2.txtAlias.Text;
          str = defInstance2.txtCommand.Text;
          text2 = defInstance2.comboFlag.Text;
          text1 = defInstance2.txtPrompt.Text;
          if (Operators.CompareString(Left, "", false) == 0)
          {
            Main.nEdit = (short) 0;
            return;
          }
          break;
      }
      short count = checked ((short) viewItemCollection.Count);
      ListViewItem listViewItem = new ListViewItem(Strings.Trim(Strings.UCase(Left)));
      listViewItem.SubItems.Add(Strings.Trim(str));
      Main.nChange = (short) 1;
      if (num == (short) 1)
      {
        listViewItem.SubItems.Add(text2);
        listViewItem.SubItems.Add(text1);
      }
      viewItemCollection.Add(listViewItem);
      switch (num)
      {
        case 0:
          checked { ++Main.nUserDefTotalAlias; }
          Main.sUserDefAlias = (string[]) Utils.CopyArray((Array) Main.sUserDefAlias, (Array) new string[checked ((int) Main.nUserDefTotalAlias + 1)]);
          Main.sUserDefRep = (string[]) Utils.CopyArray((Array) Main.sUserDefRep, (Array) new string[checked ((int) Main.nUserDefTotalAlias + 1)]);
          Main.sUserDefAlias[(int) Main.nUserDefTotalAlias] = Strings.Trim(Strings.UCase(Left));
          Main.sUserDefRep[(int) Main.nUserDefTotalAlias] = Strings.Trim(str);
          break;
        case 1:
          checked { ++Main.nUserDefTotalShell; }
          Main.sUserDefShell = (string[]) Utils.CopyArray((Array) Main.sUserDefShell, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
          Main.sUserDefCommand = (string[]) Utils.CopyArray((Array) Main.sUserDefCommand, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
          Main.sUserDefFlag = (string[]) Utils.CopyArray((Array) Main.sUserDefFlag, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
          Main.sUserDefPrompt = (string[]) Utils.CopyArray((Array) Main.sUserDefPrompt, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
          Main.sUserDefShell[(int) Main.nUserDefTotalShell] = Strings.Trim(Strings.UCase(Left));
          Main.sUserDefCommand[(int) Main.nUserDefTotalShell] = Strings.Trim(str);
          Main.sUserDefFlag[(int) Main.nUserDefTotalShell] = text2;
          Main.sUserDefPrompt[(int) Main.nUserDefTotalShell] = text1;
          break;
      }
      listViewItem.EnsureVisible();
      Main.SelectAListItem(checked ((short) viewItemCollection.IndexOf(listViewItem)), num);
      NewLateBinding.LateSetComplex(frmAlias.DefInstance.cmdRemove[(int) num], (System.Type) null, "Enabled", new object[1]
      {
        (object) true
      }, (string[]) null, (System.Type[]) null, false, true);
      Main.ChkApply();
    }

    public static string GetSaveFile(ref string Filter_Renamed, ref string StartFileName)
    {
label_0:
      int num1;
      string str;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        SaveFileDialog saveFileDialog = frmAlias.DefInstance.cdgSave;
label_2:
        num3 = 3;
        saveFileDialog.Filter = Filter_Renamed;
label_3:
        num3 = 4;
        saveFileDialog.FilterIndex = 0;
label_4:
        num3 = 5;
        saveFileDialog.FileName = StartFileName;
label_5:
        saveFileDialog = (SaveFileDialog) null;
label_6:
        num3 = 7;
        str = "";
label_7:
        num3 = 8;
        string fileName = frmAlias.DefInstance.cdgSave.FileName;
        if (!Main.Exist(ref fileName))
          goto label_14;
label_8:
        num3 = 9;
        short num4 = 7;
label_9:
        num3 = 10;
        if (frmAlias.DefInstance.chkConfirm.CheckState == 0)
          goto label_11;
label_10:
        num3 = 11;
        num4 = checked ((short) Interaction.MsgBox((object) (frmAlias.DefInstance.cdgOpen.FileName + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("STR_CONFEXISTS")), MsgBoxStyle.YesNoCancel | MsgBoxStyle.Exclamation | MsgBoxStyle.DefaultButton2, (object) (frmAlias.DefInstance.resManager.GetString("STR_OVERWRITE") + Main.sFname + frmAlias.DefInstance.resManager.GetString("STR_?"))));
label_11:
        num3 = 13;
        if (num4 == (short) 2)
          goto label_41;
label_12:
        num3 = 16;
        if (num4 != (short) 7)
          goto label_18;
label_13:
        num3 = 17;
        str = Main.GetSaveFile(ref Filter_Renamed, ref StartFileName);
        goto label_18;
label_14:
        num3 = 20;
label_15:
        num3 = 21;
        DialogResult dialogResult = frmAlias.DefInstance.cdgSave.ShowDialog();
label_16:
        num3 = 22;
        if (dialogResult != DialogResult.Cancel)
          goto label_18;
label_17:
        num3 = 23;
        str = "";
        goto label_41;
label_18:
        num3 = 27;
        str = frmAlias.DefInstance.cdgSave.FileName;
        goto label_41;
label_36:
        num2 = num3;
        int num5;
        switch (num1)
        {
          case 1:
label_34:
            num5 = num2 + 1;
            goto label_35;
          case 2:
label_19:
            num3 = 29;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_40;
        }
label_20:
        num3 = 30;
        if (Information.Err().Number == 32755)
          goto label_41;
label_21:
        num3 = 33;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num6 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num7 = (short) num6;
label_22:
        num3 = 34;
        switch (num7)
        {
          case 0:
            break;
          case 1:
            goto label_24;
          case 2:
            goto label_26;
          case 3:
            goto label_29;
          default:
            goto label_30;
        }
label_23:
        num3 = 38;
        str = Main.GetSaveFile(ref Filter_Renamed, ref StartFileName);
        goto label_31;
label_24:
        num3 = 41;
        ProjectData.ClearProjectError();
        num5 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_35;
label_26:
        num3 = 45;
        int num8 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRERR1") + Conversions.ToString(Information.Err().Number) + frmAlias.DefInstance.resManager.GetString("STR_UNRERR2")));
label_27:
        num3 = 46;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_34;
label_29:
        num3 = 50;
        int num9 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRECERR") + Conversions.ToString(Information.Err().Number)));
        goto label_31;
label_30:
        num3 = 53;
        int num10 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_31:
        num3 = 56;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_34;
label_35:
        num2 = 0;
        switch (num5)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
            goto label_8;
          case 10:
            goto label_9;
          case 11:
            goto label_10;
          case 12:
          case 13:
            goto label_11;
          case 14:
          case 24:
          case 28:
          case 31:
          case 57:
            goto label_41;
          case 15:
          case 16:
            goto label_12;
          case 17:
            goto label_13;
          case 18:
          case 19:
          case 25:
          case 26:
          case 27:
            goto label_18;
          case 20:
            goto label_14;
          case 21:
            goto label_15;
          case 22:
            goto label_16;
          case 23:
            goto label_17;
          case 29:
            goto label_19;
          case 30:
            goto label_20;
          case 32:
          case 33:
            goto label_21;
          case 34:
            goto label_22;
          case 35:
          case 39:
          case 42:
          case 43:
          case 47:
          case 48:
          case 51:
          case 54:
          case 55:
          case 56:
            goto label_31;
          case 36:
          case 38:
            goto label_23;
          case 40:
          case 41:
            goto label_24;
          case 44:
          case 45:
            goto label_26;
          case 46:
            goto label_27;
          case 49:
          case 50:
            goto label_29;
          case 52:
          case 53:
            goto label_30;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_36;
      }
label_40:
      throw ProjectData.CreateProjectError(-2146828237);
label_41:
      string saveFile = str;
      if (num2 == 0)
        return saveFile;
      ProjectData.ClearProjectError();
      return saveFile;
    }

    public static string GetOpenFile(ref string Filter_Renamed, ref string StartFileName)
    {
label_0:
      string str;
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        str = "";
label_1:
        num3 = 2;
        OpenFileDialog openFileDialog = frmAlias.DefInstance.cdgOpen;
label_2:
        num3 = 3;
        openFileDialog.Filter = Filter_Renamed;
label_3:
        num3 = 4;
        openFileDialog.FilterIndex = 0;
label_4:
        num3 = 5;
        openFileDialog.FileName = StartFileName;
label_5:
        openFileDialog = (OpenFileDialog) null;
label_6:
        ProjectData.ClearProjectError();
        num1 = 1;
label_7:
        num3 = 8;
        int num4 = (int) frmAlias.DefInstance.cdgOpen.ShowDialog();
label_8:
        num3 = 9;
        if (Information.Err().Number != 32755)
          goto label_11;
label_9:
        num3 = 10;
        Information.Err().Clear();
label_10:
        ProjectData.ClearProjectError();
        goto label_39;
label_11:
        num3 = 14;
label_12:
        ProjectData.ClearProjectError();
        num1 = 3;
label_13:
        num3 = 17;
        string fileName = frmAlias.DefInstance.cdgOpen.FileName;
        if (Main.Exist(ref fileName))
          goto label_16;
label_14:
        num3 = 18;
        int num5 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.cdgOpen.FileName + "\r\n" + frmAlias.DefInstance.resManager.GetString("STR_FILENOTFOUND") + "\r\n" + frmAlias.DefInstance.resManager.GetString("STR_CHECKPATH")), MsgBoxStyle.Exclamation, (object) frmAlias.DefInstance.resManager.GetString("STR_FNFTITLE"));
label_15:
        num3 = 19;
        str = Main.GetOpenFile(ref Filter_Renamed, ref StartFileName);
label_16:
        num3 = 21;
        str = frmAlias.DefInstance.cdgOpen.FileName;
        goto label_39;
label_34:
        num2 = num3;
        int num6;
        switch (num1)
        {
          case 1:
label_32:
            num6 = num2 + 1;
            goto label_33;
          case 2:
          case 3:
label_17:
            num3 = 23;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_38;
        }
label_18:
        num3 = 24;
        if (Information.Err().Number == 32755)
          goto label_39;
label_19:
        num3 = 27;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num7 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num8 = (short) num7;
label_20:
        num3 = 28;
        switch (num8)
        {
          case 0:
            break;
          case 1:
            goto label_22;
          case 2:
            goto label_24;
          case 3:
            goto label_27;
          default:
            goto label_28;
        }
label_21:
        num3 = 32;
        str = Main.GetOpenFile(ref Filter_Renamed, ref StartFileName);
        goto label_29;
label_22:
        num3 = 35;
        ProjectData.ClearProjectError();
        num6 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_33;
label_24:
        num3 = 39;
        int num9 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRERR1") + Conversions.ToString(Information.Err().Number) + frmAlias.DefInstance.resManager.GetString("STR_UNRERR2")));
label_25:
        num3 = 40;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_32;
label_27:
        num3 = 44;
        int num10 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRECERR") + Conversions.ToString(Information.Err().Number)));
        goto label_29;
label_28:
        num3 = 47;
        int num11 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_29:
        num3 = 50;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_32;
label_33:
        num2 = 0;
        switch (num6)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
            goto label_8;
          case 10:
            goto label_9;
          case 11:
            goto label_10;
          case 12:
          case 22:
          case 25:
          case 51:
            goto label_39;
          case 13:
          case 16:
          case 17:
            goto label_13;
          case 14:
            goto label_11;
          case 15:
            goto label_12;
          case 18:
            goto label_14;
          case 19:
            goto label_15;
          case 20:
          case 21:
            goto label_16;
          case 23:
            goto label_17;
          case 24:
            goto label_18;
          case 26:
          case 27:
            goto label_19;
          case 28:
            goto label_20;
          case 29:
          case 33:
          case 36:
          case 37:
          case 41:
          case 42:
          case 45:
          case 48:
          case 49:
          case 50:
            goto label_29;
          case 30:
          case 32:
            goto label_21;
          case 34:
          case 35:
            goto label_22;
          case 38:
          case 39:
            goto label_24;
          case 40:
            goto label_25;
          case 43:
          case 44:
            goto label_27;
          case 46:
          case 47:
            goto label_28;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_34;
      }
label_38:
      throw ProjectData.CreateProjectError(-2146828237);
label_39:
      string openFile = str;
      if (num2 == 0)
        return openFile;
      ProjectData.ClearProjectError();
      return openFile;
    }

    public static void SelectAListItem(short iItemToSelect, short nTab)
    {
      object lvwAlia = frmAlias.DefInstance.lvwAlias[(int) nTab];
      object[] objArray = new object[1]
      {
        (object) iItemToSelect
      };
      object[] Arguments = objArray;
      bool[] flagArray = new bool[1]{ true };
      bool[] CopyBack = flagArray;
      object obj = NewLateBinding.LateGet(lvwAlia, (System.Type) null, "Items", Arguments, (string[]) null, (System.Type[]) null, CopyBack);
      if (flagArray[0])
        iItemToSelect = (short) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (short));
      ((ListViewItem) obj).Selected = true;
    }

    public static void ChkApply()
    {
      if (Main.nChange > (short) 0 | Operators.CompareString(Strings.LCase(Main.sFileInMemory), Strings.LCase(Main.sACADPGP), false) != 0 & Operators.CompareString(Main.sACADPGP, "c:", false) != 0)
      {
        frmAlias defInstance = frmAlias.DefInstance;
        defInstance.cmdApply.Enabled = true;
        defInstance.mnuFileSave.Enabled = true;
      }
      else
      {
        frmAlias defInstance = frmAlias.DefInstance;
        defInstance.cmdApply.Enabled = false;
        defInstance.mnuFileSave.Enabled = false;
      }
      if (Main.nChange == (short) 0)
        frmAlias.DefInstance.cmdCancel.Text = frmAlias.DefInstance.resManager.GetString("BUT_CLOSE");
      else
        frmAlias.DefInstance.cmdCancel.Text = frmAlias.DefInstance.resManager.GetString("BUT_CANCEL");
    }

    public static bool Exist(ref string F)
    {
label_0:
      int num1;
      bool flag;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 1;
label_1:
        int num3 = 2;
        int num4 = checked ((int) FileSystem.FileLen(F));
label_2:
        num3 = 3;
        if (num4 == 0)
          goto label_4;
label_3:
        num3 = 4;
        flag = true;
        goto label_12;
label_4:
        num3 = 6;
label_5:
        num3 = 7;
        flag = false;
        goto label_12;
label_7:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
              case 8:
              case 9:
                goto label_12;
              case 6:
                goto label_4;
              case 7:
                goto label_5;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_7;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_12:
      int num6 = flag ? 1 : 0;
      if (num2 == 0)
        return num6 != 0;
      ProjectData.ClearProjectError();
      return num6 != 0;
    }

    public static void FindBounds(
      string vsSect,
      ref string[] rsMNUFile,
      ref short rnBeginVar,
      ref short rnEndVar,
      short vnEnd)
    {
      rnBeginVar = (short) -1;
      short num1 = vnEnd;
      short index1 = 1;
      while ((int) index1 <= (int) num1)
      {
        if (Operators.CompareString(rsMNUFile[(int) index1], vsSect, false) == 0)
        {
          rnBeginVar = index1;
          break;
        }
        checked { ++index1; }
      }
      rnEndVar = vnEnd;
      int num2 = (int) checked ((short) ((int) rnBeginVar + 1));
      short num3 = vnEnd;
      short index2 = (short) num2;
      while ((int) index2 <= (int) num3)
      {
        if (Operators.CompareString(Strings.Left(rsMNUFile[(int) index2], 3), "***", false) == 0)
        {
          rnEndVar = checked ((short) ((int) index2 - 1));
          break;
        }
        checked { ++index2; }
      }
    }

    public static string GetPath()
    {
label_0:
      int num1;
      string file;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        string str1 = "HKEY_CURRENT_USER\\SOFTWARE\\Autodesk\\AutoCAD\\";
label_2:
        num3 = 3;
        str1 = str1 + BnsReg.acadcurver() + "\\" + BnsReg.acadcurvercookie();
label_3:
        num3 = 4;
        str1 += "\\Profiles";
label_4:
        num3 = 5;
        str1 = str1 + "\\" + BnsReg.GetCurrentAcadProfile();
label_5:
        num3 = 6;
        str1 += "\\General";
label_6:
        num3 = 7;
        string keypath = str1;
        string str2 = "ACAD";
        ref string local1 = ref str2;
        object obj = (object) "";
        ref object local2 = ref obj;
        string path = Conversions.ToString(BnsReg.acet_RegistryRead(keypath, ref local1, ref local2));
label_7:
        num3 = 8;
        file = BnsStr.FindFile("acad.pgp", path);
        goto label_28;
label_23:
        num2 = num3;
        short num4;
        int num5;
        switch (num1)
        {
          case 1:
label_21:
            num5 = num2 + 1;
            goto label_22;
          case 2:
label_8:
            num3 = 10;
            ErrObject errObject = Information.Err();
            int number = errObject.Number;
            int num6 = (int) ErrorHandler.FileErrors(ref number);
            errObject.Number = number;
            num4 = (short) num6;
            break;
          default:
            goto label_27;
        }
label_9:
        num3 = 11;
        switch (num4)
        {
          case 0:
            break;
          case 1:
            goto label_11;
          case 2:
            goto label_13;
          case 3:
            goto label_16;
          default:
            goto label_17;
        }
label_10:
        num3 = 15;
        Main.GetPath();
        goto label_18;
label_11:
        num3 = 18;
        ProjectData.ClearProjectError();
        num5 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_22;
label_13:
        num3 = 22;
        int num7 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRERR1") + Conversions.ToString(Information.Err().Number) + frmAlias.DefInstance.resManager.GetString("STR_UNRERR2")));
label_14:
        num3 = 23;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_21;
label_16:
        num3 = 27;
        int num8 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UNRECERR") + Conversions.ToString(Information.Err().Number)));
        goto label_18;
label_17:
        num3 = 30;
        int num9 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_18:
        num3 = 33;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_21;
label_22:
        num2 = 0;
        switch (num5)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
          case 34:
            goto label_28;
          case 10:
            goto label_8;
          case 11:
            goto label_9;
          case 12:
          case 16:
          case 19:
          case 20:
          case 24:
          case 25:
          case 28:
          case 31:
          case 32:
          case 33:
            goto label_18;
          case 13:
          case 15:
            goto label_10;
          case 17:
          case 18:
            goto label_11;
          case 21:
          case 22:
            goto label_13;
          case 23:
            goto label_14;
          case 26:
          case 27:
            goto label_16;
          case 29:
          case 30:
            goto label_17;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_23;
      }
label_27:
      throw ProjectData.CreateProjectError(-2146828237);
label_28:
      string path1 = file;
      if (num2 == 0)
        return path1;
      ProjectData.ClearProjectError();
      return path1;
    }

    public static bool FindDuplicateCmd(ref string NewString, ref ComboBox listCmds)
    {
      short num1 = checked ((short) (listCmds.Items.Count - 1));
      short num2 = 0;
      bool duplicateCmd;
      while ((int) num2 <= (int) num1)
      {
        string Left = Strings.LCase(NewString);
        System.Type Type = typeof (Strings);
        object[] objArray1 = new object[1];
        object[] objArray2 = objArray1;
        ComboBox.ObjectCollection items = listCmds.Items;
        ComboBox.ObjectCollection objectCollection = items;
        short index1 = num2;
        int index2 = (int) index1;
        object objectValue = RuntimeHelpers.GetObjectValue(objectCollection[index2]);
        objArray2[0] = objectValue;
        object[] objArray3 = objArray1;
        object[] Arguments = objArray3;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object Right = NewLateBinding.LateGet((object) null, Type, "LCase", Arguments, (string[]) null, (System.Type[]) null, CopyBack);
        if (flagArray[0])
          items[(int) index1] = RuntimeHelpers.GetObjectValue(objArray3[0]);
        if (Operators.ConditionalCompareObjectEqual((object) Left, Right, false))
        {
          duplicateCmd = true;
          goto label_8;
        }
        else
          checked { ++num2; }
      }
      duplicateCmd = false;
label_8:
      return duplicateCmd;
    }

    public static ListViewItem FindDuplicate(ref string NewString)
    {
      // ISSUE: unable to decompile the method.
    }

    public static void PrintOneLine(
      ref string line,
      Font font,
      ref float yPos,
      ref int count,
      ref PrintPageEventArgs ev)
    {
      yPos = (float) ev.MarginBounds.Top + (float) count * font.GetHeight(ev.Graphics);
      ev.Graphics.DrawString(line, font, Brushes.Black, (float) ev.MarginBounds.Left, yPos, new StringFormat());
      checked { ++count; }
    }

    public static string GetSpaceString(short num)
    {
      string spaceString = "";
      short num1 = checked ((short) unchecked (30 - (int) num));
      short num2 = 0;
      while ((int) num2 <= (int) num1)
      {
        spaceString += " ";
        checked { ++num2; }
      }
      return spaceString;
    }

    public static void PrintPage(ref PrintPageEventArgs ev)
    {
      Main.printFont = new Font("Courier New", 10f, FontStyle.Bold);
      string line1 = Main.sTitle[(int) Main.Index] + ", Page " + Conversions.ToString(Main.nPage);
      Main.PrintOneLine(ref line1, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
      string line2 = frmAlias.DefInstance.resManager.GetString("PRINT_FILENAME") + Main.sFileInMemory;
      Main.PrintOneLine(ref line2, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
      int numCopiesPrinted = (int) checked ((short) Main.numCopiesPrinted);
      short copies = Main.pd.PrinterSettings.Copies;
      Main.nCopies = (short) numCopiesPrinted;
      while ((int) Main.nCopies <= (int) copies)
      {
        while (Main.Index < (short) 2)
        {
          ListView.ListViewItemCollection viewItemCollection = (ListView.ListViewItemCollection) NewLateBinding.LateGet(frmAlias.DefInstance.lvwAlias[(int) Main.Index], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
          string line3 = "";
          Main.PrintOneLine(ref line3, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          string line4 = "";
          Main.PrintOneLine(ref line4, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          Main.printFont = new Font("Courier New", 10f);
          Main.PrintOneLine(ref Main.sSeparator, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          Main.printFont = new Font("Courier New", 10f, FontStyle.Bold);
          string line5 = Main.sHeader1[(int) Main.Index] + Main.GetSpaceString(checked ((short) Strings.Len(Main.sHeader1[(int) Main.Index]))) + Main.sHeader2[(int) Main.Index];
          Main.PrintOneLine(ref line5, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          Main.printFont = new Font("Courier New", 10f);
          Main.PrintOneLine(ref Main.sSeparator, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          string line6 = "";
          Main.PrintOneLine(ref line6, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
          while (Main.y < viewItemCollection.Count)
          {
            string line7 = viewItemCollection[Main.y].Text + Main.GetSpaceString(checked ((short) Strings.Len(viewItemCollection[Main.y].Text))) + viewItemCollection[Main.y].SubItems[1].Text;
            Main.PrintOneLine(ref line7, Main.printFont, ref Main.yPos, ref Main.count, ref ev);
            checked { ++Main.y; }
            if (Main.count % Main.linesPerPage == 0)
              return;
          }
          checked { ++Main.Index; }
          Main.y = 0;
        }
        Main.numCopiesPrinted = (int) Main.nCopies;
        checked { ++Main.nCopies; }
      }
      Cursor.Current = Cursors.Default;
    }

    public static void PrintMe(object sender, PrintPageEventArgs ev)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        Main.linesPerPage = checked ((int) Math.Round((double) unchecked ((float) ev.MarginBounds.Height / Main.printFont.GetHeight(ev.Graphics))));
label_2:
        num3 = 3;
        Main.sHeader1[0] = frmAlias.DefInstance.resManager.GetString("PRINT_KEYA");
label_3:
        num3 = 4;
        Main.sHeader2[0] = frmAlias.DefInstance.resManager.GetString("PRINT_ACADC");
label_4:
        num3 = 5;
        Main.sHeader1[1] = frmAlias.DefInstance.resManager.GetString("PRINT_KEYA");
label_5:
        num3 = 6;
        Main.sHeader2[1] = frmAlias.DefInstance.resManager.GetString("PRINT_SHELLC");
label_6:
        num3 = 7;
        Main.sTitle[0] = frmAlias.DefInstance.resManager.GetString("PRINT_ACADCA");
label_7:
        num3 = 8;
        Main.sTitle[1] = frmAlias.DefInstance.resManager.GetString("PRINT_SHELLCA");
label_8:
        num3 = 9;
        Main.sSeparator = frmAlias.DefInstance.resManager.GetString("PRINT_SEP") + "\r\n";
label_9:
        num3 = 10;
        Main.PrintPage(ref ev);
label_10:
        num3 = 11;
        if (Main.Index != (short) 2)
          goto label_12;
label_11:
        num3 = 12;
        ev.HasMorePages = false;
        goto label_14;
label_12:
        num3 = 14;
label_13:
        num3 = 15;
        ev.HasMorePages = true;
label_14:
        num3 = 17;
        Main.count = 0;
label_15:
        num3 = 18;
        checked { ++Main.nPage; }
        goto label_35;
label_30:
        num2 = num3;
        int num4;
        switch (num1)
        {
          case 1:
label_28:
            num4 = num2 + 1;
            goto label_29;
          case 2:
label_16:
            num3 = 20;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_34;
        }
label_17:
        num3 = 21;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num5 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num6 = (short) num5;
label_18:
        num3 = 22;
        switch (num6)
        {
          case 0:
            break;
          case 1:
            goto label_20;
          case 2:
            goto label_22;
          case 3:
            goto label_23;
          default:
            goto label_24;
        }
label_19:
        num3 = 26;
        Main.PrintMe(RuntimeHelpers.GetObjectValue(sender), ev);
        goto label_25;
label_20:
        num3 = 29;
        ProjectData.ClearProjectError();
        num4 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_29;
label_22:
        num3 = 33;
        int num7 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("PRINT_ERR"));
        goto label_35;
label_23:
        num3 = 37;
        ErrorHandler.ShowError();
        goto label_25;
label_24:
        num3 = 40;
        int num8 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_25:
        num3 = 43;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_28;
label_29:
        num2 = 0;
        switch (num4)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
            goto label_8;
          case 10:
            goto label_9;
          case 11:
            goto label_10;
          case 12:
            goto label_11;
          case 13:
          case 16:
          case 17:
            goto label_14;
          case 14:
            goto label_12;
          case 15:
            goto label_13;
          case 18:
            goto label_15;
          case 19:
          case 34:
          case 44:
          case 45:
          case 46:
            goto label_35;
          case 20:
            goto label_16;
          case 21:
            goto label_17;
          case 22:
            goto label_18;
          case 23:
          case 27:
          case 30:
          case 31:
          case 35:
          case 38:
          case 41:
          case 42:
          case 43:
            goto label_25;
          case 24:
          case 26:
            goto label_19;
          case 28:
          case 29:
            goto label_20;
          case 32:
          case 33:
            goto label_22;
          case 36:
          case 37:
            goto label_23;
          case 39:
          case 40:
            goto label_24;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_30;
      }
label_34:
      throw ProjectData.CreateProjectError(-2146828237);
label_35:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static bool NoCommandAddedOK()
    {
      string str = frmAlias.DefInstance.resManager.GetString("STR_ERRBLANK");
      short num = checked ((short) Interaction.MsgBox(unchecked (Main.nEdit != (short) 1) ? (object) (str + frmAlias.DefInstance.resManager.GetString("STR_NOADDED")) : (object) (str + frmAlias.DefInstance.resManager.GetString("STR_NOCHANGE")), MsgBoxStyle.Exclamation, (object) frmAlias.DefInstance.resManager.GetString("STR_AINV")));
      return false;
    }

    public static void ReInit(ref bool Suppress)
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        Cursor.Current = Cursors.WaitCursor;
        NewLateBinding.LateCall(NewLateBinding.LateGet(RuntimeHelpers.GetObjectValue(Interaction.GetObject(Class: "Autocad.Application")), (System.Type) null, "activedocument", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, "SetVariable", new object[2]
        {
          (object) "RE-INIT",
          (object) 16
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
        Cursor.Current = Cursors.Default;
        if (!Suppress)
        {
          int num3 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_UPDATED"), MsgBoxStyle.Information);
          goto label_11;
        }
        else
          goto label_11;
label_6:
        num2 = -1;
        switch (num1)
        {
          case 2:
            Cursor.Current = Cursors.Default;
            if (Information.Err().Number == 429)
            {
              int num4 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_NEXTSESS"), MsgBoxStyle.Information);
              goto label_11;
            }
            else if (!Suppress)
            {
              int num5 = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_UPDATEERR1") + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("STR_UPDATEERR2") + "\r\n" + frmAlias.DefInstance.resManager.GetString("STR_ERR") + Conversions.ToString(Information.Err().Number) + "), " + Information.Err().Description), MsgBoxStyle.Exclamation);
              goto label_11;
            }
            else
              goto label_11;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void ParseLineForCommand(
      ref string line,
      ref string str1,
      ref string str2,
      ref string str3,
      ref string str4)
    {
      int num1 = Strings.InStr(1, line, ",");
      if (num1 == 0)
      {
        ref string local = ref str1;
        string x = "$";
        string str = Main.BogusString(ref x);
        local = str;
        str2 = line;
        checked { ++Main.nTotalAlias; }
      }
      else if (num1 == Strings.Len(line))
      {
        str1 = line;
        ref string local = ref str2;
        string x = "?";
        string str = Main.BogusString(ref x);
        local = str;
        checked { ++Main.nTotalAlias; }
      }
      else
      {
        int num2 = Strings.InStr(checked (num1 + 1), line, ",");
        if (num2 == 0)
        {
          checked { ++Main.nTotalAlias; }
          str1 = Strings.Trim(Strings.Left(line, checked (num1 - 1)));
          str2 = Strings.Trim(Strings.Right(line, checked (Strings.Len(line) - num1))).Replace("*", "");
        }
        else
        {
          checked { ++Main.nTotalShell; }
          Main.sShell = (string[]) Utils.CopyArray((Array) Main.sShell, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
          Main.sCommand = (string[]) Utils.CopyArray((Array) Main.sCommand, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
          Main.sFlag = (string[]) Utils.CopyArray((Array) Main.sFlag, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
          Main.sPrompt = (string[]) Utils.CopyArray((Array) Main.sPrompt, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
          Main.sCode = (string[]) Utils.CopyArray((Array) Main.sCode, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
          int num3 = Strings.InStr(checked (num2 + 1), line, ",");
          int num4 = Strings.InStr(checked (num3 + 1), line, ",");
          str1 = Strings.Trim(Strings.Left(line, checked (num1 - 1)));
          str2 = num2 != checked (1 + num1) ? Strings.Trim(Strings.Mid(line, checked (num1 + 1), checked (num2 - num1 + 1))) : "";
          str3 = !(num3 == checked (1 + num2) | num2 == 0) ? Strings.Trim(Strings.Mid(line, checked (num2 + 1), checked (num3 - num2 + 1))) : "";
          if (num4 == checked (1 + num3) | num3 == 0)
          {
            str4 = "";
          }
          else
          {
            str4 = Strings.Trim(Strings.Mid(line, checked (num3 + 1), checked (num4 - num3 + 1)));
            if (Operators.CompareString(Strings.Left(str4, 1), "*", false) != 0)
              return;
            str4 = Strings.Trim(Strings.Right(str4, checked (Strings.Len(str4) - 1)));
          }
        }
      }
    }

    public static void RefreshDefaults(ref int Index, ListViewItem oAliasToRemove)
    {
      StringReader stringReader = new StringReader(Main.sSysAliases);
      string line = stringReader.ReadLine();
      ListViewItem Expression = (ListViewItem) null;
      string str1 = "";
      string str2 = "";
      string str3 = "";
      string str4 = "";
      switch (Index)
      {
        case 0:
          for (; !Information.IsNothing((object) line); line = stringReader.ReadLine())
          {
            if (line.Length > 0 && Operators.CompareString(line.Substring(0, 1), ";", false) != 0 & line.IndexOf(oAliasToRemove.Text + ", ") >= 0)
            {
              Main.sSysAliases.IndexOf(line);
              Main.ParseLineForCommand(ref line, ref str1, ref str2, ref str3, ref str4);
              Expression = new ListViewItem(str1);
              Expression.SubItems.Add(str2);
            }
          }
          break;
        case 1:
          for (; !Information.IsNothing((object) line); line = stringReader.ReadLine())
          {
            if (line.Length > 0 && Operators.CompareString(line.Substring(0, 1), ";", false) != 0 & line.IndexOf(oAliasToRemove.Text + ", ") >= 0)
            {
              Main.sSysAliases.IndexOf(line);
              Main.ParseLineForCommand(ref line, ref str1, ref str2, ref str3, ref str4);
              Expression = new ListViewItem(str1);
              Expression.SubItems.Add(str2);
              Expression.SubItems.Add(str3);
              Expression.SubItems.Add(str4);
            }
          }
          break;
      }
      if (Information.IsNothing((object) Expression))
        return;
      object Instance = NewLateBinding.LateGet(frmAlias.DefInstance.lvwAlias[Index], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
      object[] objArray = new object[1]
      {
        (object) Expression
      };
      object[] Arguments = objArray;
      bool[] flagArray = new bool[1]{ true };
      bool[] CopyBack = flagArray;
      NewLateBinding.LateCall(Instance, (System.Type) null, "Add", Arguments, (string[]) null, (System.Type[]) null, CopyBack, true);
      if (flagArray[0])
      {
        ListViewItem listViewItem = (ListViewItem) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (ListViewItem));
      }
      NewLateBinding.LateCall(frmAlias.DefInstance.lvwAlias[Index], (System.Type) null, "Sort", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      int num = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_RESTOREDDEF1") + str1), MsgBoxStyle.Information, (object) frmAlias.DefInstance.resManager.GetString("STR_RESTOREDDEF2"));
    }

    public static void RemoveAlias(
      ref ListViewItem oAliasToRemove,
      ref int Index,
      bool removeFromFile,
      bool removeFromLV)
    {
label_0:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        ListView.ListViewItemCollection viewItemCollection = (ListView.ListViewItemCollection) NewLateBinding.LateGet(frmAlias.DefInstance.lvwAlias[Index], (System.Type) null, "Items", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null);
label_1:
        num3 = 2;
        int index1 = viewItemCollection.IndexOf(oAliasToRemove);
label_2:
        num3 = 3;
        if (!(Operators.CompareString(Main.sSysAliases, "", false) != 0 & index1 >= 0))
          goto label_58;
label_3:
        num3 = 4;
        ArrayList arrayList1 = (ArrayList) null;
label_4:
        num3 = 5;
        int index2 = -1;
label_5:
        num3 = 6;
        switch (Index)
        {
          case 0:
            break;
          case 1:
            goto label_29;
          default:
            goto label_58;
        }
label_6:
        num3 = 10;
        if (!(!Information.IsNothing((object) Main.sUserDefAlias) & removeFromFile))
          goto label_9;
label_7:
        num3 = 11;
        arrayList1 = new ArrayList((ICollection) Main.sUserDefAlias);
label_8:
        num3 = 12;
        index2 = arrayList1.IndexOf((object) oAliasToRemove.Text);
label_9:
        num3 = 14;
        if (index2 < 0)
          goto label_17;
label_10:
        num3 = 15;
        Main.RefreshDefaults(ref Index, oAliasToRemove);
label_11:
        num3 = 16;
        ArrayList arrayList2 = new ArrayList((ICollection) Main.sUserDefRep);
label_12:
        num3 = 17;
        arrayList1.RemoveAt(index2);
label_13:
        num3 = 18;
        arrayList2.RemoveAt(index2);
label_14:
        num3 = 19;
        Main.sUserDefAlias = (string[]) arrayList1.ToArray(typeof (string));
label_15:
        num3 = 20;
        Main.sUserDefRep = (string[]) arrayList2.ToArray(typeof (string));
label_16:
        num3 = 21;
        checked { --Main.nUserDefTotalAlias; }
        goto label_58;
label_17:
        num3 = 23;
        if (!removeFromFile)
          goto label_58;
label_18:
        num3 = 24;
        StringReader stringReader1 = new StringReader(Main.sSysAliases);
label_19:
        num3 = 25;
        string Expression1 = stringReader1.ReadLine();
        goto label_28;
label_20:
        num3 = 28;
        if (Expression1.Length <= 0)
          goto label_27;
label_21:
        num3 = 29;
        if (!(Operators.CompareString(Expression1.Substring(0, 1), ";", false) != 0 & Expression1.IndexOf(oAliasToRemove.Text) >= 0 & Expression1.IndexOf(oAliasToRemove.SubItems[1].Text) >= 0))
          goto label_27;
label_22:
        num3 = 30;
        int startIndex1 = Main.sSysAliases.IndexOf(Expression1);
        goto label_24;
label_23:
        num3 = 33;
        startIndex1 = Main.sSysAliases.IndexOf(Expression1, checked (startIndex1 + Expression1.Length));
label_24:
        num3 = 32;
        if (Operators.CompareString(Main.sSysAliases.Substring(checked (startIndex1 - 1), 1), ";", false) == 0)
          goto label_23;
label_25:
        num3 = 35;
        if (Main.nEdit == (short) 1)
          goto label_27;
label_26:
        num3 = 36;
        Main.sSysAliases = Main.sSysAliases.Insert(startIndex1, ";;;");
label_27:
        num3 = 40;
        Expression1 = stringReader1.ReadLine();
label_28:
        num3 = 27;
        if (!Information.IsNothing((object) Expression1))
          goto label_20;
        else
          goto label_58;
label_29:
        num3 = 45;
        if (!(!Information.IsNothing((object) Main.sUserDefShell) & removeFromFile))
          goto label_32;
label_30:
        num3 = 46;
        arrayList1 = new ArrayList((ICollection) Main.sUserDefShell);
label_31:
        num3 = 47;
        index2 = arrayList1.IndexOf((object) oAliasToRemove.Text);
label_32:
        num3 = 49;
        if (index2 < 0)
          goto label_46;
label_33:
        num3 = 50;
        Main.RefreshDefaults(ref Index, oAliasToRemove);
label_34:
        num3 = 51;
        arrayList2 = new ArrayList((ICollection) Main.sUserDefCommand);
label_35:
        num3 = 52;
        ArrayList arrayList3 = new ArrayList((ICollection) Main.sUserDefFlag);
label_36:
        num3 = 53;
        ArrayList arrayList4 = new ArrayList((ICollection) Main.sUserDefPrompt);
label_37:
        num3 = 54;
        arrayList1.RemoveAt(index2);
label_38:
        num3 = 55;
        arrayList2.RemoveAt(index2);
label_39:
        num3 = 56;
        arrayList3.RemoveAt(index2);
label_40:
        num3 = 57;
        arrayList4.RemoveAt(index2);
label_41:
        num3 = 58;
        Main.sUserDefShell = (string[]) arrayList1.ToArray(typeof (string));
label_42:
        num3 = 59;
        Main.sUserDefCommand = (string[]) arrayList2.ToArray(typeof (string));
label_43:
        num3 = 60;
        Main.sUserDefFlag = (string[]) arrayList3.ToArray(typeof (string));
label_44:
        num3 = 61;
        Main.sUserDefPrompt = (string[]) arrayList4.ToArray(typeof (string));
label_45:
        num3 = 62;
        checked { --Main.nUserDefTotalShell; }
        goto label_58;
label_46:
        num3 = 64;
        if (!removeFromFile)
          goto label_58;
label_47:
        num3 = 65;
        StringReader stringReader2 = new StringReader(Main.sSysAliases);
label_48:
        num3 = 66;
        string Expression2 = stringReader2.ReadLine();
        goto label_57;
label_49:
        num3 = 69;
        if (Expression2.Length <= 0)
          goto label_56;
label_50:
        num3 = 70;
        if (!(Operators.CompareString(Expression2.Substring(0, 1), ";", false) != 0 & Expression2.IndexOf(oAliasToRemove.Text) >= 0 & Expression2.IndexOf(oAliasToRemove.SubItems[1].Text) >= 0 & Expression2.IndexOf(oAliasToRemove.SubItems[2].Text) >= 0 & Expression2.IndexOf(oAliasToRemove.SubItems[3].Text) >= 0))
          goto label_56;
label_51:
        num3 = 71;
        int startIndex2 = Main.sSysAliases.IndexOf(Expression2);
        goto label_53;
label_52:
        num3 = 74;
        startIndex2 = Main.sSysAliases.IndexOf(Expression2, checked (startIndex2 + Expression2.Length));
label_53:
        num3 = 73;
        if (Operators.CompareString(Main.sSysAliases.Substring(checked (startIndex2 - 1), 1), ";", false) == 0)
          goto label_52;
label_54:
        num3 = 76;
        if (Main.nEdit == (short) 1)
          goto label_56;
label_55:
        num3 = 77;
        Main.sSysAliases = Main.sSysAliases.Insert(startIndex2, ";;;");
label_56:
        num3 = 81;
        Expression2 = stringReader2.ReadLine();
label_57:
        num3 = 68;
        if (!Information.IsNothing((object) Expression2))
          goto label_49;
label_58:
        num3 = 86;
        if (!removeFromLV)
          goto label_60;
label_59:
        num3 = 87;
        viewItemCollection.RemoveAt(index1);
label_60:
        ProjectData.ClearProjectError();
        num1 = 1;
label_61:
        num3 = 90;
        Main.nChange = (short) 1;
        goto label_68;
label_63:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
              case 22:
              case 42:
              case 43:
              case 63:
              case 83:
              case 84:
              case 85:
              case 86:
                goto label_58;
              case 8:
              case 10:
                goto label_6;
              case 11:
                goto label_7;
              case 12:
                goto label_8;
              case 13:
              case 14:
                goto label_9;
              case 15:
                goto label_10;
              case 16:
                goto label_11;
              case 17:
                goto label_12;
              case 18:
                goto label_13;
              case 19:
                goto label_14;
              case 20:
                goto label_15;
              case 21:
                goto label_16;
              case 23:
                goto label_17;
              case 24:
                goto label_18;
              case 25:
                goto label_19;
              case 26:
              case 27:
              case 41:
                goto label_28;
              case 28:
                goto label_20;
              case 29:
                goto label_21;
              case 30:
                goto label_22;
              case 31:
              case 32:
              case 34:
                goto label_24;
              case 33:
                goto label_23;
              case 35:
                goto label_25;
              case 36:
                goto label_26;
              case 37:
              case 38:
              case 39:
              case 40:
                goto label_27;
              case 44:
              case 45:
                goto label_29;
              case 46:
                goto label_30;
              case 47:
                goto label_31;
              case 48:
              case 49:
                goto label_32;
              case 50:
                goto label_33;
              case 51:
                goto label_34;
              case 52:
                goto label_35;
              case 53:
                goto label_36;
              case 54:
                goto label_37;
              case 55:
                goto label_38;
              case 56:
                goto label_39;
              case 57:
                goto label_40;
              case 58:
                goto label_41;
              case 59:
                goto label_42;
              case 60:
                goto label_43;
              case 61:
                goto label_44;
              case 62:
                goto label_45;
              case 64:
                goto label_46;
              case 65:
                goto label_47;
              case 66:
                goto label_48;
              case 67:
              case 68:
              case 82:
                goto label_57;
              case 69:
                goto label_49;
              case 70:
                goto label_50;
              case 71:
                goto label_51;
              case 72:
              case 73:
              case 75:
                goto label_53;
              case 74:
                goto label_52;
              case 76:
                goto label_54;
              case 77:
                goto label_55;
              case 78:
              case 79:
              case 80:
              case 81:
                goto label_56;
              case 87:
                goto label_59;
              case 88:
              case 89:
                goto label_60;
              case 90:
                goto label_61;
              case 91:
                goto label_68;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_63;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_68:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static object KeyNumber(ref string keystring) => (object) Strings.Right(keystring, checked (Strings.Len(keystring) - Strings.Len("key")));

    public static void SavePGP(ref string sFilePath, ref string sFileName, ref bool Suppress)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        bool flag = true;
label_2:
        num3 = 3;
        Main.sAliases = "";
label_3:
        num3 = 4;
        Main.sShells = "";
label_4:
        num3 = 5;
        short WhichTab1 = 0;
        Main.sAliases = Main.PGPString(ref WhichTab1);
label_5:
        num3 = 6;
        short WhichTab2 = 1;
        Main.sShells = Main.PGPString(ref WhichTab2);
label_6:
        num3 = 7;
        if (Operators.CompareString(Main.sSysAliases, "", false) != 0)
          goto label_8;
label_7:
        num3 = 8;
        string str1 = frmAlias.DefInstance.resManager.GetString("SAVE_HEADER1") + "\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER2") + DateAndTime.Today.ToShortDateString() + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER3") + DateAndTime.TimeOfDay.ToShortTimeString() + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER4") + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER5") + "\r\n\r\n" + Main.sShells + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER6") + "\r\n\r\n" + Main.sAliases;
        goto label_10;
label_8:
        num3 = 10;
label_9:
        num3 = 11;
        str1 = frmAlias.DefInstance.resManager.GetString("SAVE_HEADER1") + "\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER2") + DateAndTime.Today.ToShortDateString() + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER3") + DateAndTime.TimeOfDay.ToShortTimeString() + "\r\n\r\n" + frmAlias.DefInstance.resManager.GetString("SAVE_HEADER4") + "\r\n\r\n" + Main.sAliases + "\r\n\r\n" + Main.sShells;
label_10:
        num3 = 13;
        if ((frmAlias.DefInstance.chkConfirm.CheckState & (CheckState) -(Main.Exist(ref sFilePath) ? 1 : 0)) == 0)
          goto label_22;
label_11:
        num3 = 14;
        string str2 = Strings.Left(sFilePath, checked (Strings.Len(sFilePath) - Strings.Len(sFileName)));
label_12:
        num3 = 15;
        if (Operators.CompareString(Strings.Left(sFileName, 10), "Backup of ", false) != 0)
          goto label_20;
label_13:
        num3 = 16;
        int num4 = checked (Strings.InStr(sFileName, "Backup(") + 8);
label_14:
        num3 = 17;
        if (num4 <= 8)
          goto label_17;
label_15:
        num3 = 18;
        short num5 = checked ((short) ((int) Conversions.ToShort(Strings.Mid(sFileName, num4, 1)) + 1));
label_16:
        num3 = 19;
        StringType.MidStmtStr(ref sFileName, num4, 1, Conversions.ToString((int) num5));
        goto label_19;
label_17:
        num3 = 21;
label_18:
        num3 = 22;
        sFileName = "Backup(1) of " + Strings.Right(sFileName, checked (Strings.Len(sFileName) - 10));
label_19:
        num3 = 24;
        string str3 = str2 + sFileName;
        ref string local1 = ref str3;
        object sBackup1 = (object) Main.sBackup;
        ref object local2 = ref sBackup1;
        Main.WriteOut(ref local1, ref local2);
        Main.sBackup = Conversions.ToString(sBackup1);
        goto label_22;
label_20:
        num3 = 26;
label_21:
        num3 = 27;
        string str4 = str2 + "Backup of " + sFileName;
        ref string local3 = ref str4;
        object sBackup2 = (object) Main.sBackup;
        ref object local4 = ref sBackup2;
        Main.WriteOut(ref local3, ref local4);
        Main.sBackup = Conversions.ToString(sBackup2);
label_22:
        num3 = 30;
        ref string local5 = ref sFilePath;
        object obj = (object) str1;
        ref object local6 = ref obj;
        Main.WriteOut(ref local5, ref local6);
        str1 = Conversions.ToString(obj);
label_23:
        num3 = 31;
        Main.sFileInMemory = sFilePath;
label_24:
        num3 = 32;
        Main.sFname = sFileName;
label_25:
        num3 = 33;
        Main.nChange = (short) 0;
label_26:
        num3 = 34;
        Main.CleanUpForm();
label_27:
        num3 = 35;
        Main.ChkApply();
label_28:
        num3 = 36;
        if (!flag)
          goto label_50;
label_29:
        num3 = 37;
        Main.ReInit(ref Suppress);
        goto label_50;
label_45:
        num2 = num3;
        int num6;
        switch (num1)
        {
          case 1:
label_43:
            num6 = num2 + 1;
            goto label_44;
          case 2:
label_30:
            num3 = 40;
            Cursor.Current = Cursors.Default;
            break;
          default:
            goto label_49;
        }
label_31:
        num3 = 41;
        ErrObject errObject = Information.Err();
        int number = errObject.Number;
        int num7 = (int) ErrorHandler.FileErrors(ref number);
        errObject.Number = number;
        short num8 = (short) num7;
label_32:
        num3 = 42;
        switch (num8)
        {
          case 0:
            break;
          case 1:
            goto label_35;
          case 2:
            goto label_50;
          case 3:
            goto label_37;
          default:
            goto label_39;
        }
label_33:
        num3 = 46;
        int num9 = (int) frmAlias.DefInstance.cdgSave.ShowDialog();
label_34:
        num3 = 47;
        string fileName = frmAlias.DefInstance.cdgSave.FileName;
        ref string local7 = ref fileName;
        string title = frmAlias.DefInstance.cdgSave.Title;
        ref string local8 = ref title;
        ref bool local9 = ref Suppress;
        Main.SavePGP(ref local7, ref local8, ref local9);
        goto label_40;
label_35:
        num3 = 50;
        ProjectData.ClearProjectError();
        num6 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_44;
label_37:
        num3 = 57;
        flag = false;
label_38:
        num3 = 58;
        ErrorHandler.ShowError();
        goto label_40;
label_39:
        num3 = 61;
        int num10 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_40:
        num3 = 64;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_43;
label_44:
        num2 = 0;
        switch (num6)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
            goto label_5;
          case 7:
            goto label_6;
          case 8:
            goto label_7;
          case 9:
          case 12:
          case 13:
            goto label_10;
          case 10:
            goto label_8;
          case 11:
            goto label_9;
          case 14:
            goto label_11;
          case 15:
            goto label_12;
          case 16:
            goto label_13;
          case 17:
            goto label_14;
          case 18:
            goto label_15;
          case 19:
            goto label_16;
          case 20:
          case 23:
          case 24:
            goto label_19;
          case 21:
            goto label_17;
          case 22:
            goto label_18;
          case 25:
          case 28:
          case 29:
          case 30:
            goto label_22;
          case 26:
            goto label_20;
          case 27:
            goto label_21;
          case 31:
            goto label_23;
          case 32:
            goto label_24;
          case 33:
            goto label_25;
          case 34:
            goto label_26;
          case 35:
            goto label_27;
          case 36:
            goto label_28;
          case 37:
            goto label_29;
          case 38:
          case 39:
          case 53:
          case 54:
          case 65:
            goto label_50;
          case 40:
            goto label_30;
          case 41:
            goto label_31;
          case 42:
            goto label_32;
          case 43:
          case 48:
          case 51:
          case 52:
          case 55:
          case 59:
          case 62:
          case 63:
          case 64:
            goto label_40;
          case 44:
          case 46:
            goto label_33;
          case 47:
            goto label_34;
          case 49:
          case 50:
            goto label_35;
          case 56:
          case 57:
            goto label_37;
          case 58:
            goto label_38;
          case 60:
          case 61:
            goto label_39;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_45;
      }
label_49:
      throw ProjectData.CreateProjectError(-2146828237);
label_50:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void CleanUpForm()
    {
      frmAlias defInstance = frmAlias.DefInstance;
      defInstance.lblProgress.Visible = false;
      defInstance.Text = frmAlias.DefInstance.resManager.GetString("STR_MAINTITLE");
      if (Operators.CompareString(Main.sFname, "", false) != 0)
        defInstance.Text = Path.GetFileName(Main.sFname) + " - " + frmAlias.DefInstance.resManager.GetString("STR_MAINTITLE");
    }

    public static string PGPString(ref short WhichTab)
    {
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        str1 = "";
        string str2 = "                                        ";
        Cursor.Current = Cursors.WaitCursor;
        ListView lvwAlia = (ListView) frmAlias.DefInstance.lvwAlias[(int) WhichTab];
        ListView.ListViewItemCollection items = lvwAlia.Items;
        lvwAlia.Sort();
        short[] numArray = new short[3];
        switch (WhichTab)
        {
          case 0:
            if (Operators.CompareString(Main.sSysAliases, "", false) == 0)
            {
              short num3 = checked ((short) (lvwAlia.Items.Count - 1));
              short index = 0;
              while ((int) index <= (int) num3)
              {
                string text = lvwAlia.Items[(int) index].Text;
                short Length = checked ((short) (10 - Strings.Len(text)));
                if (Length < (short) 0)
                  Length = (short) 1;
                if (Operators.CompareString(text, "---", false) != 0)
                  str1 = str1 + text + "," + Strings.Left(str2, (int) Length) + "*" + lvwAlia.Items[(int) index].SubItems[1].Text + "\r\n";
                checked { ++index; }
              }
              break;
            }
            str1 = Main.sSysAliases;
            if (Main.nUserDefTotalAlias >= (short) 0)
            {
              short num4 = checked ((short) (Main.sUserDefAlias.Length - 1));
              short index = 0;
              while ((int) index <= (int) num4)
              {
                string sUserDefAlia = Main.sUserDefAlias[(int) index];
                short Length = checked ((short) (10 - Strings.Len(sUserDefAlia)));
                if (Length < (short) 0)
                  Length = (short) 1;
                if (Operators.CompareString(sUserDefAlia, "---", false) != 0)
                  str1 = str1 + sUserDefAlia + "," + Strings.Left(str2, (int) Length) + "*" + Main.sUserDefRep[(int) index] + "\r\n";
                checked { ++index; }
              }
              break;
            }
            break;
          case 1:
            numArray[1] = (short) 0;
            numArray[2] = (short) 0;
            if (Operators.CompareString(Main.sSysAliases, "", false) == 0)
            {
              short num5 = checked ((short) (items.Count - 1));
              short index1 = 0;
              while ((int) index1 <= (int) num5)
              {
                if (Strings.Len(items[(int) index1].Text) > (int) numArray[1])
                  numArray[1] = checked ((short) Strings.Len(items[(int) index1].Text));
                if (Strings.Len(items[(int) index1].SubItems[1].Text) > (int) numArray[2])
                  numArray[2] = checked ((short) Strings.Len(items[(int) index1].SubItems[1].Text));
                checked { ++index1; }
              }
              short num6 = checked ((short) (items.Count - 1));
              short index2 = 0;
              while ((int) index2 <= (int) num6)
              {
                string text = items[(int) index2].Text;
                string str3 = "";
                if (Operators.CompareString(items[(int) index2].SubItems[2].Text, "", false) != 0)
                  str3 = "*";
                short Length1 = checked ((short) ((int) numArray[1] + 1 - Strings.Len(text)));
                short Length2 = checked ((short) ((int) numArray[2] + 1 - Strings.Len(items[(int) index2].SubItems[1].Text)));
                if (Operators.CompareString(text, "---", false) != 0)
                  str1 = str1 + text + "," + Strings.Left(str2, (int) Length1) + items[(int) index2].SubItems[1].Text + "," + Strings.Left(str2, (int) Length2) + items[(int) index2].SubItems[2].Text + "," + str3 + items[(int) index2].SubItems[3].Text + ",\r\n";
                checked { ++index2; }
              }
              break;
            }
            if (Main.nUserDefTotalShell >= (short) 0)
            {
              short num7 = checked ((short) (Main.sUserDefShell.Length - 1));
              short index3 = 0;
              while ((int) index3 <= (int) num7)
              {
                if (Strings.Len(Main.sUserDefShell[(int) index3]) > (int) numArray[1])
                  numArray[1] = checked ((short) Strings.Len(Main.sUserDefShell[(int) index3]));
                if (Strings.Len(Main.sUserDefCommand[(int) index3]) > (int) numArray[2])
                  numArray[2] = checked ((short) Strings.Len(Main.sUserDefCommand[(int) index3]));
                checked { ++index3; }
              }
              short num8 = checked ((short) (Main.sUserDefShell.Length - 1));
              short index4 = 0;
              while ((int) index4 <= (int) num8)
              {
                string str4 = Main.sUserDefShell[(int) index4];
                string str5 = "";
                if (Operators.CompareString(Main.sUserDefPrompt[(int) index4], "", false) != 0)
                  str5 = "*";
                short Length3 = checked ((short) ((int) numArray[1] + 1 - Strings.Len(str4)));
                short Length4 = checked ((short) ((int) numArray[2] + 1 - Strings.Len(Main.sUserDefCommand[(int) index4])));
                if (Operators.CompareString(str4, "---", false) != 0)
                  str1 = str1 + str4 + "," + Strings.Left(str2, (int) Length3) + Main.sUserDefCommand[(int) index4] + "," + Strings.Left(str2, (int) Length4) + Main.sUserDefFlag[(int) index4] + "," + str5 + Main.sUserDefPrompt[(int) index4] + ",\r\n";
                checked { ++index4; }
              }
              break;
            }
            break;
        }
        Cursor.Current = Cursors.Default;
        goto label_54;
label_49:
        num2 = -1;
        switch (num1)
        {
          case 2:
            Cursor.Current = Cursors.Default;
            int num9 = (int) Interaction.MsgBox((object) ("Error in PGPString" + Conversion.Str((object) Information.Err().Number) + ": " + Information.Err().Description));
            goto label_54;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_49;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_54:
      string str6 = str1;
      if (num2 == 0)
        return str6;
      ProjectData.ClearProjectError();
      return str6;
    }

    public static void ShowDialog(ref Form sWhichForm)
    {
      Form form = sWhichForm;
      form.Left = checked ((int) Math.Round(unchecked ((double) frmAlias.DefInstance.Left + (double) checked (frmAlias.DefInstance.Width - form.Width) / 2.0)));
      form.Top = checked ((int) Math.Round(unchecked ((double) frmAlias.DefInstance.Top + (double) checked (frmAlias.DefInstance.Height - form.Height) / 2.0)));
      int num = (int) form.ShowDialog();
    }

    public static void WriteOut(ref string FN, ref object WS)
    {
      FileSystem.FileClose();
      int FileNumber = FileSystem.FreeFile();
      FileSystem.FileOpen(FileNumber, FN, OpenMode.Output);
      FileSystem.PrintLine(FileNumber, RuntimeHelpers.GetObjectValue(WS));
      FileSystem.FileClose();
    }

    public static bool IsAlphaNumeric(string vsAlpha)
    {
label_0:
      bool flag;
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        flag = false;
label_1:
        ProjectData.ClearProjectError();
        num1 = 1;
label_2:
        num3 = 3;
        short num4 = checked ((short) Strings.Asc(vsAlpha));
label_3:
        num3 = 4;
        if (!(num4 >= (short) 48 & num4 <= (short) 57 | num4 >= (short) 65 & num4 <= (short) 90 | num4 >= (short) 97 & num4 <= (short) 122))
          goto label_11;
label_4:
        num3 = 5;
        flag = true;
        goto label_11;
label_6:
        num2 = num3;
        switch (num1)
        {
          case 1:
            int num5 = num2 + 1;
            num2 = 0;
            switch (num5)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_11;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_6;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_11:
      int num6 = flag ? 1 : 0;
      if (num2 == 0)
        return num6 != 0;
      ProjectData.ClearProjectError();
      return num6 != 0;
    }

    public static bool isAcadPGPFile(int FileNum)
    {
      bool flag = false;
      string str1 = "";
      while (!FileSystem.EOF(FileNum))
      {
        string str2 = FileSystem.LineInput(FileNum);
        if (str2.IndexOf("This PGP file was created with the AutoCAD Alias Editor.") >= 0)
        {
          int num = 0;
          do
          {
            str2 = FileSystem.LineInput(FileNum);
            checked { ++num; }
          }
          while (num <= 4);
        }
        str1 = str1 + str2 + "\r\n";
        if (str2.IndexOf("**********----------**********") >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINED").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDDEU").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDFRA").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDITA").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDESP").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDPTB").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDRUS").Trim()) >= 0 | str2.IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDPLK").Trim()) >= 0)
        {
          flag = true;
          string str3;
          for (str3 = FileSystem.LineInput(FileNum); (str3.IndexOf(";") == 0 | Operators.CompareString(Strings.Trim(str3), "", false) == 0) & !FileSystem.EOF(FileNum); str3 = FileSystem.LineInput(FileNum))
            str1 = str1 + str3 + "\r\n";
          Main.sSysAliases = !(FileSystem.EOF(FileNum) & Operators.CompareString(str3, "", false) == 0) ? Main.sSysAliases + str1 : Main.sSysAliases + str1 + str3 + "\r\n";
          str1 = str3 + "\r\n";
        }
      }
      FileSystem.Seek(FileNum, 1L);
      return flag;
    }

    public static void ParsePGPNew(int FileNum, ref bool Import)
    {
      string[] arySrc1 = new string[1];
      int index1 = -1;
      int num1 = -1;
      if (!Import)
        Main.sBackup = "";
      while (!FileSystem.EOF(FileNum))
      {
        checked { ++index1; }
        arySrc1 = (string[]) Utils.CopyArray((Array) arySrc1, (Array) new string[checked (index1 + 1)]);
        arySrc1[index1] = FileSystem.LineInput(FileNum);
        if (arySrc1[index1].IndexOf("**********----------**********") >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINED").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDDEU").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDFRA").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDITA").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDESP").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDPTB").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDRUS").Trim()) >= 0 | arySrc1[index1].IndexOf(frmAlias.DefInstance.resManager.GetString("STR_USERDEFINEDPLK").Trim()) >= 0)
          num1 = index1;
        if (!Import)
          Main.sBackup = Main.sBackup + arySrc1[index1] + "\r\n";
        if (Operators.CompareString(Strings.Trim(arySrc1[index1]), "", false) == 0)
          checked { --index1; }
        else if (Strings.Asc(arySrc1[index1]) == 59 | Strings.Asc(arySrc1[index1]) < 32)
          checked { --index1; }
      }
      FileSystem.FileClose();
      int userDefTotalAlias;
      if (Import)
      {
        num1 = 0;
        userDefTotalAlias = (int) Main.nUserDefTotalAlias;
      }
      else
      {
        Main.nUserDefTotalAlias = (short) -1;
        Main.nUserDefTotalShell = (short) -1;
      }
      string[] arySrc2;
      string[] strArray1 = (string[]) Utils.CopyArray((Array) arySrc2, (Array) new string[checked (index1 + 1 + 1)]);
      string[] arySrc3;
      string[] strArray2 = (string[]) Utils.CopyArray((Array) arySrc3, (Array) new string[checked (index1 + 1 + 1)]);
      string[] arySrc4;
      string[] strArray3 = (string[]) Utils.CopyArray((Array) arySrc4, (Array) new string[checked (index1 + 1 + 1)]);
      string[] arySrc5;
      string[] strArray4 = (string[]) Utils.CopyArray((Array) arySrc5, (Array) new string[checked (index1 + 1 + 1)]);
      short index2 = 0;
      Main.nTotalAlias = (short) -1;
      Main.nTotalShell = (short) -1;
      while ((int) index2 <= index1)
      {
        int num2 = Strings.InStr(1, arySrc1[(int) index2], ",");
        string x;
        int num3;
        if (num2 == 0)
        {
          string[] strArray5 = strArray2;
          int index3 = (int) index2;
          x = "$";
          string str = Main.BogusString(ref x);
          strArray5[index3] = str;
          strArray1[(int) index2] = arySrc1[(int) index2];
          checked { ++Main.nTotalAlias; }
        }
        else if (num2 == Strings.Len(arySrc1[(int) index2]))
        {
          strArray2[(int) index2] = arySrc1[(int) index2];
          string[] strArray6 = strArray1;
          int index4 = (int) index2;
          x = "?";
          string str = Main.BogusString(ref x);
          strArray6[index4] = str;
          checked { ++Main.nTotalAlias; }
        }
        else
        {
          num3 = Strings.InStr(checked (num2 + 1), arySrc1[(int) index2], ",");
          if (num3 == 0)
          {
            checked { ++Main.nTotalAlias; }
            strArray2[(int) Main.nTotalAlias] = Strings.Left(arySrc1[(int) index2], checked (num2 - 1));
            strArray1[(int) Main.nTotalAlias] = Strings.Right(arySrc1[(int) index2], checked (Strings.Len(arySrc1[(int) index2]) - num2));
          }
          else
          {
            checked { ++Main.nTotalShell; }
            Main.sShell = (string[]) Utils.CopyArray((Array) Main.sShell, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sCommand = (string[]) Utils.CopyArray((Array) Main.sCommand, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sFlag = (string[]) Utils.CopyArray((Array) Main.sFlag, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sPrompt = (string[]) Utils.CopyArray((Array) Main.sPrompt, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sCode = (string[]) Utils.CopyArray((Array) Main.sCode, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            int num4 = Strings.InStr(checked (num3 + 1), arySrc1[(int) index2], ",");
            short num5 = checked ((short) Strings.InStr(num4 + 1, arySrc1[(int) index2], ","));
            Main.sShell[(int) Main.nTotalShell] = Strings.Left(arySrc1[(int) index2], checked (num2 - 1));
            Main.sCommand[(int) Main.nTotalShell] = num3 != checked (1 + num2) ? Strings.Mid(arySrc1[(int) index2], checked (num2 + 1), checked (num3 - num2 + 1)) : "";
            Main.sFlag[(int) Main.nTotalShell] = !(num4 == checked (1 + num3) | num3 == 0) ? Strings.Mid(arySrc1[(int) index2], checked (num3 + 1), checked (num4 - num3 + 1)) : "";
            if ((int) num5 == checked (1 + num4) | num4 == 0)
            {
              Main.sPrompt[(int) Main.nTotalShell] = "";
            }
            else
            {
              Main.sPrompt[(int) Main.nTotalShell] = Strings.Mid(arySrc1[(int) index2], checked (num4 + 1), checked ((int) num5 - num4 + 1));
              if (Operators.CompareString(Strings.Left(Main.sPrompt[(int) Main.nTotalShell], 1), "*", false) == 0)
                Main.sPrompt[(int) Main.nTotalShell] = Strings.Right(Main.sPrompt[(int) Main.nTotalShell], checked (Strings.Len(Main.sPrompt[(int) Main.nTotalShell]) - 1));
            }
            Main.sCode[(int) Main.nTotalShell] = num5 != (short) 0 ? Strings.Right(arySrc1[(int) index2], checked (Strings.Len(arySrc1[(int) index2]) - (int) num5)) : "";
          }
        }
        if ((int) index2 >= num1)
        {
          if (num3 == 0)
          {
            checked { ++Main.nUserDefTotalAlias; }
            strArray4[(int) Main.nUserDefTotalAlias] = strArray2[(int) Main.nTotalAlias];
            strArray3[(int) Main.nUserDefTotalAlias] = strArray1[(int) Main.nTotalAlias];
          }
          else
          {
            checked { ++Main.nUserDefTotalShell; }
            Main.sUserDefShell = (string[]) Utils.CopyArray((Array) Main.sUserDefShell, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
            Main.sUserDefCommand = (string[]) Utils.CopyArray((Array) Main.sUserDefCommand, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
            Main.sUserDefFlag = (string[]) Utils.CopyArray((Array) Main.sUserDefFlag, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
            Main.sUserDefPrompt = (string[]) Utils.CopyArray((Array) Main.sUserDefPrompt, (Array) new string[checked ((int) Main.nUserDefTotalShell + 1)]);
            Main.sUserDefShell[(int) Main.nUserDefTotalShell] = Main.sShell[(int) Main.nTotalShell];
            Main.sUserDefCommand[(int) Main.nUserDefTotalShell] = Main.sCommand[(int) Main.nTotalShell];
            Main.sUserDefFlag[(int) Main.nUserDefTotalShell] = Main.sFlag[(int) Main.nTotalShell];
            Main.sUserDefPrompt[(int) Main.nUserDefTotalShell] = Main.sPrompt[(int) Main.nTotalShell];
          }
        }
        checked { ++index2; }
      }
      Main.sAlias = (string[]) Utils.CopyArray((Array) Main.sAlias, (Array) new string[checked ((int) Main.nTotalAlias + 1)]);
      Main.sRep = (string[]) Utils.CopyArray((Array) Main.sRep, (Array) new string[checked ((int) Main.nTotalAlias + 1)]);
      Main.sUserDefAlias = (string[]) Utils.CopyArray((Array) Main.sUserDefAlias, (Array) new string[checked ((int) Main.nUserDefTotalAlias + 1)]);
      Main.sUserDefRep = (string[]) Utils.CopyArray((Array) Main.sUserDefRep, (Array) new string[checked ((int) Main.nUserDefTotalAlias + 1)]);
      short index5 = 0;
      while ((int) index5 <= (int) Main.nTotalAlias)
      {
        strArray1[(int) index5] = Strings.Trim(strArray1[(int) index5]);
        while ((Strings.Asc(strArray1[(int) index5]) <= 42 | Strings.Asc(strArray1[(int) index5]) > 122) & Strings.Len(strArray1[(int) index5]) > 1)
          strArray1[(int) index5] = Strings.Right(strArray1[(int) index5], checked (Strings.Len(strArray1[(int) index5]) - 1));
        Main.sRep[(int) index5] = strArray1[(int) index5];
        Main.sAlias[(int) index5] = strArray2[(int) index5];
        if (Operators.CompareString(Main.sAlias[(int) index5], "", false) == 0)
          Main.sAlias[(int) index5] = "---";
        checked { ++index5; }
      }
      short index6 = checked ((short) userDefTotalAlias);
      while ((int) index6 <= (int) Main.nUserDefTotalAlias)
      {
        if (!Information.IsNothing((object) strArray3[(int) index6]))
        {
          strArray3[(int) index6] = Strings.Trim(strArray3[(int) index6]);
          while ((Strings.Asc(strArray3[(int) index6]) <= 42 | Strings.Asc(strArray3[(int) index6]) > 122) & Strings.Len(strArray3[(int) index6]) > 1)
            strArray3[(int) index6] = Strings.Right(strArray3[(int) index6], checked (Strings.Len(strArray3[(int) index6]) - 1));
          Main.sUserDefRep[(int) index6] = strArray3[(int) index6].ToUpper();
          Main.sUserDefAlias[(int) index6] = strArray4[(int) index6].ToUpper();
          if (Operators.CompareString(Main.sUserDefAlias[(int) index6], "", false) == 0)
            Main.sUserDefAlias[(int) index6] = "---";
        }
        checked { ++index6; }
      }
    }

    public static void ParsePGPOld(int FileNum, ref bool Import)
    {
      string[] arySrc1 = new string[1];
      int index1 = -1;
      if (!Import)
        Main.sBackup = "";
      while (!FileSystem.EOF(FileNum))
      {
        checked { ++index1; }
        arySrc1 = (string[]) Utils.CopyArray((Array) arySrc1, (Array) new string[checked (index1 + 1)]);
        arySrc1[index1] = FileSystem.LineInput(FileNum);
        if (!Import)
          Main.sBackup = Main.sBackup + arySrc1[index1] + "\r\n";
        if (Operators.CompareString(Strings.Trim(arySrc1[index1]), "", false) == 0)
          checked { --index1; }
        else if (Strings.Asc(arySrc1[index1]) == 59 | Strings.Asc(arySrc1[index1]) < 32)
          checked { --index1; }
      }
      FileSystem.FileClose();
      string[] arySrc2;
      string[] strArray1 = (string[]) Utils.CopyArray((Array) arySrc2, (Array) new string[checked (index1 + 1 + 1)]);
      string[] arySrc3;
      string[] strArray2 = (string[]) Utils.CopyArray((Array) arySrc3, (Array) new string[checked (index1 + 1 + 1)]);
      short index2 = 0;
      Main.nTotalAlias = (short) -1;
      Main.nTotalShell = (short) -1;
      while ((int) index2 <= index1)
      {
        int num1 = Strings.InStr(1, arySrc1[(int) index2], ",");
        string x;
        if (num1 == 0)
        {
          string[] strArray3 = strArray2;
          int index3 = (int) index2;
          x = "$";
          string str = Main.BogusString(ref x);
          strArray3[index3] = str;
          strArray1[(int) index2] = arySrc1[(int) index2];
          checked { ++Main.nTotalAlias; }
        }
        else if (num1 == Strings.Len(arySrc1[(int) index2]))
        {
          strArray2[(int) index2] = arySrc1[(int) index2];
          string[] strArray4 = strArray1;
          int index4 = (int) index2;
          x = "?";
          string str = Main.BogusString(ref x);
          strArray4[index4] = str;
          checked { ++Main.nTotalAlias; }
        }
        else
        {
          int num2 = Strings.InStr(checked (num1 + 1), arySrc1[(int) index2], ",");
          if (num2 == 0)
          {
            checked { ++Main.nTotalAlias; }
            strArray2[(int) Main.nTotalAlias] = Strings.Left(arySrc1[(int) index2], checked (num1 - 1));
            strArray1[(int) Main.nTotalAlias] = Strings.Right(arySrc1[(int) index2], checked (Strings.Len(arySrc1[(int) index2]) - num1));
          }
          else
          {
            checked { ++Main.nTotalShell; }
            Main.sShell = (string[]) Utils.CopyArray((Array) Main.sShell, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sCommand = (string[]) Utils.CopyArray((Array) Main.sCommand, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sFlag = (string[]) Utils.CopyArray((Array) Main.sFlag, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sPrompt = (string[]) Utils.CopyArray((Array) Main.sPrompt, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            Main.sCode = (string[]) Utils.CopyArray((Array) Main.sCode, (Array) new string[checked ((int) Main.nTotalShell + 1)]);
            int num3 = Strings.InStr(checked (num2 + 1), arySrc1[(int) index2], ",");
            short num4 = checked ((short) Strings.InStr(num3 + 1, arySrc1[(int) index2], ","));
            Main.sShell[(int) Main.nTotalShell] = Strings.Left(arySrc1[(int) index2], checked (num1 - 1));
            Main.sCommand[(int) Main.nTotalShell] = num2 != checked (1 + num1) ? Strings.Mid(arySrc1[(int) index2], checked (num1 + 1), checked (num2 - num1 + 1)) : "";
            Main.sFlag[(int) Main.nTotalShell] = !(num3 == checked (1 + num2) | num2 == 0) ? Strings.Mid(arySrc1[(int) index2], checked (num2 + 1), checked (num3 - num2 + 1)) : "";
            if ((int) num4 == checked (1 + num3) | num3 == 0)
            {
              Main.sPrompt[(int) Main.nTotalShell] = "";
            }
            else
            {
              Main.sPrompt[(int) Main.nTotalShell] = Strings.Mid(arySrc1[(int) index2], checked (num3 + 1), checked ((int) num4 - num3 + 1));
              if (Operators.CompareString(Strings.Left(Main.sPrompt[(int) Main.nTotalShell], 1), "*", false) == 0)
                Main.sPrompt[(int) Main.nTotalShell] = Strings.Right(Main.sPrompt[(int) Main.nTotalShell], checked (Strings.Len(Main.sPrompt[(int) Main.nTotalShell]) - 1));
            }
            Main.sCode[(int) Main.nTotalShell] = num4 != (short) 0 ? Strings.Right(arySrc1[(int) index2], checked (Strings.Len(arySrc1[(int) index2]) - (int) num4)) : "";
          }
        }
        checked { ++index2; }
      }
      Main.sAlias = (string[]) Utils.CopyArray((Array) Main.sAlias, (Array) new string[checked ((int) Main.nTotalAlias + 1)]);
      Main.sRep = (string[]) Utils.CopyArray((Array) Main.sRep, (Array) new string[checked ((int) Main.nTotalAlias + 1)]);
      short index5 = 0;
      while ((int) index5 <= (int) Main.nTotalAlias)
      {
        strArray1[(int) index5] = Strings.Trim(strArray1[(int) index5]);
        while ((Strings.Asc(strArray1[(int) index5]) <= 42 | Strings.Asc(strArray1[(int) index5]) > 122) & Strings.Len(strArray1[(int) index5]) > 1)
          strArray1[(int) index5] = Strings.Right(strArray1[(int) index5], checked (Strings.Len(strArray1[(int) index5]) - 1));
        Main.sRep[(int) index5] = strArray1[(int) index5];
        Main.sAlias[(int) index5] = strArray2[(int) index5];
        if (Operators.CompareString(Main.sAlias[(int) index5], "", false) == 0)
          Main.sAlias[(int) index5] = "---";
        checked { ++index5; }
      }
    }

    public static void ParsePGP(ref string FileName, ref bool Import)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
label_1:
        int num3 = 2;
        int num4 = FileSystem.FreeFile();
label_2:
        num3 = 3;
        FileSystem.FileOpen(num4, FileName, OpenMode.Input);
label_3:
        num3 = 4;
        if (!(Main.isAcadPGPFile(num4) | Import))
          goto label_5;
label_4:
        num3 = 5;
        Main.ParsePGPNew(num4, ref Import);
        goto label_27;
label_5:
        num3 = 7;
label_6:
        num3 = 8;
        Main.ParsePGPOld(num4, ref Import);
        goto label_27;
label_22:
        num2 = num3;
        short num5;
        int num6;
        switch (num1)
        {
          case 1:
label_20:
            num6 = num2 + 1;
            goto label_21;
          case 2:
label_7:
            num3 = 11;
            ErrObject errObject = Information.Err();
            int number = errObject.Number;
            int num7 = (int) ErrorHandler.FileErrors(ref number);
            errObject.Number = number;
            num5 = (short) num7;
            break;
          default:
            goto label_26;
        }
label_8:
        num3 = 12;
        switch (num5)
        {
          case 0:
            break;
          case 1:
            goto label_10;
          case 2:
            goto label_12;
          case 3:
            goto label_15;
          default:
            goto label_16;
        }
label_9:
        num3 = 16;
        Main.GetPath();
        goto label_17;
label_10:
        num3 = 19;
        ProjectData.ClearProjectError();
        num6 = num2 != 0 ? num2 : throw ProjectData.CreateProjectError(-2146828268);
        goto label_21;
label_12:
        num3 = 23;
        int num8 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_PGPERR1"));
label_13:
        num3 = 24;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_20;
label_15:
        num3 = 28;
        int num9 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_PGPERR2"));
        goto label_27;
label_16:
        num3 = 32;
        int num10 = (int) Interaction.MsgBox((object) frmAlias.DefInstance.resManager.GetString("STR_INTERNALERROR"));
        ProjectData.EndApp();
label_17:
        num3 = 35;
        ProjectData.ClearProjectError();
        if (num2 == 0)
          throw ProjectData.CreateProjectError(-2146828268);
        goto label_20;
label_21:
        num2 = 0;
        switch (num6)
        {
          case 1:
            goto label_0;
          case 2:
            goto label_1;
          case 3:
            goto label_2;
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          case 6:
          case 9:
          case 10:
          case 29:
          case 36:
            goto label_27;
          case 7:
            goto label_5;
          case 8:
            goto label_6;
          case 11:
            goto label_7;
          case 12:
            goto label_8;
          case 13:
          case 17:
          case 20:
          case 21:
          case 25:
          case 26:
          case 30:
          case 33:
          case 34:
          case 35:
            goto label_17;
          case 14:
          case 16:
            goto label_9;
          case 18:
          case 19:
            goto label_10;
          case 22:
          case 23:
            goto label_12;
          case 24:
            goto label_13;
          case 27:
          case 28:
            goto label_15;
          case 31:
          case 32:
            goto label_16;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_22;
      }
label_26:
      throw ProjectData.CreateProjectError(-2146828237);
label_27:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    public static void FillInAllCommands()
    {
      Main.nStdRep = (short) 1000;
      Main.sRep = (string[]) Utils.CopyArray((Array) Main.sRep, (Array) new string[checked ((int) Main.nStdRep + 1)]);
      short index1 = 0;
      string str1 = "";
      string str2 = "";
      string str3 = "";
      string str4 = "";
      string cmd1 = "";
      string cmdFile1 = Main.GetCmdFile(ref cmd1);
      if (Operators.CompareString(cmdFile1, "", false) == 0)
        return;
      FileSystem.FileOpen(1, cmdFile1, OpenMode.Input);
      while (!FileSystem.EOF(1))
      {
        FileSystem.Input(1, ref str3);
        if ((int) index1 > (int) Main.nStdRep)
        {
          checked { Main.nStdRep += (short) 500; }
          Main.sRep = (string[]) Utils.CopyArray((Array) Main.sRep, (Array) new string[checked ((int) Main.nStdRep + 1)]);
        }
        string Left = Strings.LCase(Strings.Left(str3, 2));
        if (Operators.CompareString(Left, "#i", false) == 0)
        {
          str3 = Strings.Trim(Strings.Right(str3, checked (Strings.Len(str3) - 9)));
          short num = checked ((short) Strings.Len(str3));
          string cmd2 = Strings.Left(Strings.Right(str3, checked ((int) num - 1)), checked ((int) num - 2));
          string cmdFile2 = Main.GetCmdFile(ref cmd2);
          if (Operators.CompareString(cmdFile2, "", false) != 0)
          {
            FileSystem.FileOpen(2, cmdFile2, OpenMode.Input);
            while (!FileSystem.EOF(2))
            {
              FileSystem.Input(2, ref str4);
              if (Operators.CompareString(Strings.UCase(str4), Strings.UCase(str1), false) != 0)
              {
                Main.sRep[(int) index1] = str4;
                checked { ++index1; }
              }
              str1 = str4;
            }
            FileSystem.FileClose(2);
          }
        }
        else if (Operators.CompareString(Left, "//", false) != 0 && Operators.CompareString(Strings.UCase(str3), Strings.UCase(str2), false) != 0)
        {
          Main.sRep[(int) index1] = str3;
          checked { ++index1; }
        }
        str2 = str3;
      }
      FileSystem.FileClose(1);
      Main.sRep = (string[]) Utils.CopyArray((Array) Main.sRep, (Array) new string[checked ((int) index1 + 1)]);
      frmNewAlias.DefInstance.cmbRep.Items.Clear();
      short num1 = checked ((short) ((int) index1 - 1));
      short index2 = 0;
      while ((int) index2 <= (int) num1)
      {
        frmNewAlias.DefInstance.cmbRep.Items.Add((object) Main.sRep[(int) index2]);
        checked { ++index2; }
      }
    }

    public static string GetCmdFile(ref string cmd = "")
    {
      string F;
      if (Operators.CompareString(cmd, "", false) != 0)
      {
        F = cmd;
        if (!Main.Exist(ref F))
          F = Path.GetDirectoryName(Application.ExecutablePath) + "\\" + cmd;
      }
      else
        F = Path.GetDirectoryName(Application.ExecutablePath) + "\\alias.pgc";
      if (!Main.Exist(ref F))
      {
        int num = (int) Interaction.MsgBox((object) (frmAlias.DefInstance.resManager.GetString("STR_SUPPORT1") + F + frmAlias.DefInstance.resManager.GetString("STR_SUPPORT2")), Title: ((object) frmAlias.DefInstance.resManager.GetString("STR_FNFTITLE")));
        F = "";
      }
      return F;
    }

    public static string BogusString(ref string x)
    {
      string str = "";
      checked { ++Main.\u0024STATIC\u0024BogusString\u002401E10E\u0024Length; }
      short num1 = Main.\u0024STATIC\u0024BogusString\u002401E10E\u0024Length;
      short num2 = 1;
      while ((int) num2 <= (int) num1)
      {
        str += x;
        checked { ++num2; }
      }
      return str;
    }

    public static string Capitalize(ref string CapString)
    {
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        short num3 = checked ((short) Strings.Len(CapString));
        short num4 = 1;
        while ((int) num4 <= (int) num3)
        {
          if (Strings.Asc(Strings.Mid(CapString, (int) num4, 1)) > 96 & Strings.Asc(Strings.Mid(CapString, (int) num4, 1)) < 123)
          {
            StringType.MidStmtStr(ref CapString, (int) num4, 1, Conversions.ToString(Strings.Chr(checked (Strings.Asc(Strings.Mid(CapString, (int) num4, 1)) - 32))));
            break;
          }
          if (Strings.Asc(Strings.Mid(CapString, (int) num4, 1)) > 64 & Strings.Asc(Strings.Mid(CapString, (int) num4, 1)) < 91)
          {
            string str2 = CapString;
            break;
          }
          checked { ++num4; }
        }
        str1 = CapString;
        goto label_14;
label_9:
        num2 = -1;
        switch (num1)
        {
          case 2:
            str1 = "";
            goto label_14;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_9;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_14:
      string str3 = str1;
      if (num2 == 0)
        return str3;
      ProjectData.ClearProjectError();
      return str3;
    }
  }
}
