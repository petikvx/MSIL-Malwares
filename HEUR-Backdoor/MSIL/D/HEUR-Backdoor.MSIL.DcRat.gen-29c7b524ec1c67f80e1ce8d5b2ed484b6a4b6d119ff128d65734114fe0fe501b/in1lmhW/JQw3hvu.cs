// Decompiled with JetBrains decompiler
// Type: in1lmhW.JQw3hvu
// Assembly: jmZGgwW, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 3D70FD3D-7EEC-4701-9107-04233FCFD67F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.DcRat.gen-29c7b524ec1c67f80e1ce8d5b2ed484b6a4b6d119ff128d65734114fe0fe501b.exe

using Microsoft.ServiceHub.Framework;
using Newtonsoft.Json;
using rNdFNn1;
using System;
using System.Collections.Generic;
using tfCR3Cd;

namespace in1lmhW
{
  [KqMPXdN(1)]
  [y47mzCH(0)]
  internal static class JQw3hvu
  {
    internal static ServiceActivationOptions \u0036sADgvI(string kEOlIdt) => JsonConvert.DeserializeObject<ServiceActivationOptions>(kEOlIdt);

    internal static ServiceActivationOptions WUDepXk(
      ServiceActivationOptions V7aXkMK)
    {
      if (((ServiceActivationOptions) ref V7aXkMK).ActivationArguments != null && ((ServiceActivationOptions) ref V7aXkMK).ActivationArguments.ContainsKey("__servicehub__ServiceHubRemoteServiceBrokerPipeName"))
      {
        Dictionary<string, string> dictionary = new Dictionary<string, string>();
        foreach (string key in ((ServiceActivationOptions) ref V7aXkMK).ActivationArguments.Keys)
        {
          string str;
          if (!key.Equals("__servicehub__ServiceHubRemoteServiceBrokerPipeName", StringComparison.OrdinalIgnoreCase) && ((ServiceActivationOptions) ref V7aXkMK).ActivationArguments.TryGetValue(key, out str))
            dictionary.Add(key, str);
        }
        ((ServiceActivationOptions) ref V7aXkMK).ActivationArguments = (IReadOnlyDictionary<string, string>) dictionary;
      }
      return V7aXkMK;
    }

    internal static string dbnfxFX(this ServiceActivationOptions fnumFaP)
    {
      string str;
      return ((ServiceActivationOptions) ref fnumFaP).ActivationArguments != null && ((ServiceActivationOptions) ref fnumFaP).ActivationArguments.TryGetValue("__servicehub__ServiceHubRemoteServiceBrokerPipeName", out str) ? str : string.Empty;
    }
  }
}
