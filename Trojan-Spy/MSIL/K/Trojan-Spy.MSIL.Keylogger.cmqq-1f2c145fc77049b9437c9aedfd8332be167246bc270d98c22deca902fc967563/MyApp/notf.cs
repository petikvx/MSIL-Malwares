// Decompiled with JetBrains decompiler
// Type: MyApp.notf
// Assembly: CobianRAT, Version=1.0.40.7, Culture=neutral, PublicKeyToken=null
// MVID: E2EA0EB9-E35B-43B8-8108-8D71E6EED121
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Spy.MSIL.Keylogger.cmqq-1f2c145fc77049b9437c9aedfd8332be167246bc270d98c22deca902fc967563.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace MyApp
{
  [DesignerGenerated]
  public sealed class notf : Form
  {
    private static List<WeakReference> zSaxrvEfsW;
    private IContainer FdBxH7PXGM;
    [AccessedThroughProperty("p")]
    private PictureBox qK1x3W77Vk;
    public int OL;
    public int TH;
    private bool JghxeDI2aj;
    public List<notf.GClass15> Items;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    static notf()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerStepThrough]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private void k03x08s4X7()
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual PictureBox p
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public notf()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void AddItem(Bitmap img, string Text)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void back()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void go()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Qi1xFawmG5(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ac3xItTVNs(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void wrk()
    {
      // ISSUE: unable to decompile the method.
    }

    public sealed class GClass15
    {
      public Bitmap bitmap_0;
      public int int_0;
      public int int_1;
      public string string_0;

      [MethodImpl(MethodImplOptions.NoInlining)]
      public GClass15()
      {
        // ISSUE: unable to decompile the method.
      }
    }
  }
}
