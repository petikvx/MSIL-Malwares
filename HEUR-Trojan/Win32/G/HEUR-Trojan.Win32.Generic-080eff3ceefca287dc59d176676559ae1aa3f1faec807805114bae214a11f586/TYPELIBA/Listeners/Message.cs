// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Listeners.Message
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Consumers;
using ProjNet.Pools;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;
using TYPELIBA.Lists;
using TYPELIBA.Serialization;

namespace TYPELIBA.Listeners
{
  public abstract class Message : VisitorMapSerializer, ReponseRepositoryConsumer, Listener, Worker
  {
    private RegistryPolicyList order;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal Message(
      RegistryPolicyList i,
      List<AdapterErrorPool> b,
      string consumer,
      string selection2,
      long counter3_amount,
      string result4,
      string map5,
      string res6)
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector(consumer, selection2, counter3_amount, result4, res6, map5);
      this.order = i;
      if (b.Count != 2)
        throw new ArgumentException("Axis info should contain two axes for horizontal coordinate systems");
      this.FindObject(b);
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public RegistryPolicyList RemoveState() => this.order;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void UpdateState(RegistryPolicyList last) => this.order = last;

    internal static bool FillDispatcher() => true;

    internal static bool CalculateDispatcher() => false;
  }
}
