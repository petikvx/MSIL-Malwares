// Decompiled with JetBrains decompiler
// Type: w.My.न
// Assembly: Stub, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 416A03C6-1169-4785-8C8F-B7DCBEEF5946
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-3fc35088ba76418a38697f688d75da2112d50f56f6e2324a4c9897e3ed81b60f.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace w.My
{
  [HideModuleName]
  [StandardModule]
  [GeneratedCode("MyTemplate", "10.0.0.0")]
  internal sealed class न
  {
    private static readonly object खद;
    private static readonly object अघ;
    private static readonly object ख诶 = (object) new न.ThreadSafeObjectProvider<झह>();
    private static readonly object ञ;

    [HelpKeyword("My.Computer")]
    internal static object 屁
    {
      [DebuggerHidden] get => ((न.ThreadSafeObjectProvider<झह>) न.ख诶).GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static object i
    {
      [DebuggerHidden] get => ((न.ThreadSafeObjectProvider<ऑ尔>) न.खद).GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static object 豆
    {
      [DebuggerHidden] get => ((न.ThreadSafeObjectProvider<User>) न.अघ).GetInstance;
    }

    static न()
    {
      न.खद = (object) new न.ThreadSafeObjectProvider<ऑ尔>();
      न.अघ = (object) new न.ThreadSafeObjectProvider<User>();
      न.ञ = (object) new न.ThreadSafeObjectProvider<न.MyWebServices>();
    }

    [HelpKeyword("My.WebServices")]
    internal static object 尔
    {
      [DebuggerHidden] get => ((न.ThreadSafeObjectProvider<न.MyWebServices>) न.ञ).GetInstance;
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyWebServices
    {
      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new Type GetType() => typeof (न.MyWebServices);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new() => (object) instance == null ? new T() : instance;

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) न.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            न.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return न.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}
