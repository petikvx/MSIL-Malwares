// Decompiled with JetBrains decompiler
// Type: ManagerMarket.AddHD
// Assembly: cDisplayClass310, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C7A4461-A171-4409-B75B-AB5BE5ABB986
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\Backdoor.Win32.Blakken.vor-a227cf3f5fb90a859db6b3a95e95ead7b01dc01615de5433710205c6cd58ec78.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ManagerMarket
{
  [DesignerGenerated]
  public class AddHD : Form
  {
    private IContainer components;
    private DataBaseAccess dataaccess;

    public AddHD()
    {
      this.dataaccess = new DataBaseAccess();
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.txtMaHD = new Label();
      this.txtMaKH = new Label();
      this.Label3 = new Label();
      this.txtMaHDD = new TextBox();
      this.txtMaKHH = new TextBox();
      this.btnOk = new Button();
      this.btnCanc = new Button();
      this.datetimeNgayLap = new DateTimePicker();
      this.SuspendLayout();
      this.txtMaHD.AutoSize = true;
      this.txtMaHD.Location = new Point(13, 26);
      this.txtMaHD.Name = "txtMaHD";
      this.txtMaHD.Size = new Size(41, 13);
      this.txtMaHD.TabIndex = 0;
      this.txtMaHD.Text = "Ma HD";
      this.txtMaKH.AutoSize = true;
      this.txtMaKH.Location = new Point(12, 64);
      this.txtMaKH.Name = "txtMaKH";
      this.txtMaKH.Size = new Size(40, 13);
      this.txtMaKH.TabIndex = 1;
      this.txtMaKH.Text = "Ma KH";
      this.Label3.AutoSize = true;
      this.Label3.Location = new Point(12, 107);
      this.Label3.Name = "Label3";
      this.Label3.Size = new Size(53, 13);
      this.Label3.TabIndex = 2;
      this.Label3.Text = "Ngay Lap";
      this.txtMaHDD.Location = new Point(75, 26);
      this.txtMaHDD.Name = "txtMaHDD";
      this.txtMaHDD.Size = new Size(197, 20);
      this.txtMaHDD.TabIndex = 3;
      this.txtMaKHH.Location = new Point(75, 61);
      this.txtMaKHH.Name = "txtMaKHH";
      this.txtMaKHH.Size = new Size(197, 20);
      this.txtMaKHH.TabIndex = 4;
      this.btnOk.Location = new Point(49, 163);
      this.btnOk.Name = "btnOk";
      this.btnOk.Size = new Size(75, 23);
      this.btnOk.TabIndex = 6;
      this.btnOk.Text = "OK";
      this.btnOk.UseVisualStyleBackColor = true;
      this.btnCanc.Location = new Point(163, 163);
      this.btnCanc.Name = "btnCanc";
      this.btnCanc.Size = new Size(75, 23);
      this.btnCanc.TabIndex = 7;
      this.btnCanc.Text = "Cancel";
      this.btnCanc.UseVisualStyleBackColor = true;
      this.datetimeNgayLap.Location = new Point(71, 101);
      this.datetimeNgayLap.Name = "datetimeNgayLap";
      this.datetimeNgayLap.Size = new Size(200, 20);
      this.datetimeNgayLap.TabIndex = 8;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(284, 262);
      this.Controls.Add((Control) this.datetimeNgayLap);
      this.Controls.Add((Control) this.btnCanc);
      this.Controls.Add((Control) this.btnOk);
      this.Controls.Add((Control) this.txtMaKHH);
      this.Controls.Add((Control) this.txtMaHDD);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.txtMaKH);
      this.Controls.Add((Control) this.txtMaHD);
      this.Name = nameof (AddHD);
      this.Text = nameof (AddHD);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("txtMaHD")]
    internal virtual Label txtMaHD { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMaKH")]
    internal virtual Label txtMaKH { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label3")]
    internal virtual Label Label3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMaHDD")]
    internal virtual TextBox txtMaHDD { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("txtMaKHH")]
    internal virtual TextBox txtMaKHH { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnOk
    {
      get => this._btnOk;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnOk_Click);
        Button btnOk1 = this._btnOk;
        if (btnOk1 != null)
          btnOk1.Click -= eventHandler;
        this._btnOk = value;
        Button btnOk2 = this._btnOk;
        if (btnOk2 == null)
          return;
        btnOk2.Click += eventHandler;
      }
    }

    internal virtual Button btnCanc
    {
      get => this._btnCanc;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnCanc_Click);
        Button btnCanc1 = this._btnCanc;
        if (btnCanc1 != null)
          btnCanc1.Click -= eventHandler;
        this._btnCanc = value;
        Button btnCanc2 = this._btnCanc;
        if (btnCanc2 == null)
          return;
        btnCanc2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("datetimeNgayLap")]
    internal virtual DateTimePicker datetimeNgayLap { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private bool AddStudent() => this.dataaccess.ExecuteNoneQuery("INSERT INTO HoaDon (MaHD,MaKH,Ngaylap)" + string.Format("VALUES ('{0}','{1}','{2}')", (object) this.txtMaHDD.Text, (object) this.txtMaKHH.Text, (object) this.datetimeNgayLap.Value.Date));

    private bool IsEmpty() => string.IsNullOrEmpty(this.txtMaHDD.Text) || string.IsNullOrEmpty(this.txtMaKHH.Text) || string.IsNullOrEmpty(Conversions.ToString(this.datetimeNgayLap.Value.Date));

    private void btnOk_Click(object sender, EventArgs e)
    {
      if (this.IsEmpty())
      {
        int num1 = (int) MessageBox.Show("Chua nhap gia tri", "Error", MessageBoxButtons.OK);
      }
      else
      {
        if (this.AddStudent())
        {
          int num2 = (int) MessageBox.Show("Them thanh cong", "Success", MessageBoxButtons.OK);
          this.DialogResult = DialogResult.OK;
        }
        else
        {
          int num3 = (int) MessageBox.Show("Them that bai", "Error", MessageBoxButtons.OK);
          int num4 = (int) MessageBox.Show("ID " + this.txtMaKHH.Text + "Ten: " + this.txtMaHDD.Text + "Date: " + Conversions.ToString(this.datetimeNgayLap.Value));
          this.DialogResult = DialogResult.No;
        }
        this.Close();
      }
    }

    private void btnCanc_Click(object sender, EventArgs e) => this.Close();
  }
}
