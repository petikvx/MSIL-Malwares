// Decompiled with JetBrains decompiler
// Type: SC_aio.co
// Assembly: SCaio, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4039BEB0-723F-44D4-B6A2-6115173D2A3D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.asho-8d599606a9e08d397b994f3c1f6ab611585cb198.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SC_aio.My;
using System;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace SC_aio
{
  [DesignerGenerated]
  public class co : Form
  {
    private IContainer components;
    [AccessedThroughProperty("offerbox")]
    private ListBox _offerbox;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("Button3")]
    private Button _Button3;
    public Array offers;
    private string offid;

    public co()
    {
      this.Load += new EventHandler(this.co_Load);
      this.offers = (Array) new string[1]
      {
        "CashRocketGPT"
      };
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.offerbox = new ListBox();
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.Button3 = new Button();
      this.SuspendLayout();
      this.offerbox.FormattingEnabled = true;
      ListBox offerbox1 = this.offerbox;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      offerbox1.Location = point2;
      this.offerbox.Name = "offerbox";
      ListBox offerbox2 = this.offerbox;
      Size size1 = new Size(260, 212);
      Size size2 = size1;
      offerbox2.Size = size2;
      this.offerbox.TabIndex = 0;
      Button button1_1 = this.Button1;
      point1 = new Point(12, 227);
      Point point3 = point1;
      button1_1.Location = point3;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(260, 23);
      Size size3 = size1;
      button1_2.Size = size3;
      this.Button1.TabIndex = 1;
      this.Button1.Text = "Complete selected offer";
      this.Button1.UseVisualStyleBackColor = true;
      Button button2_1 = this.Button2;
      point1 = new Point(12, 256);
      Point point4 = point1;
      button2_1.Location = point4;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(260, 23);
      Size size4 = size1;
      button2_2.Size = size4;
      this.Button2.TabIndex = 2;
      this.Button2.Text = "Complete all offers";
      this.Button2.UseVisualStyleBackColor = true;
      Button button3_1 = this.Button3;
      point1 = new Point(12, 284);
      Point point5 = point1;
      button3_1.Location = point5;
      this.Button3.Name = "Button3";
      Button button3_2 = this.Button3;
      size1 = new Size(260, 23);
      Size size5 = size1;
      button3_2.Size = size5;
      this.Button3.TabIndex = 3;
      this.Button3.Text = "Mark all offers as pending";
      this.Button3.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(284, 319);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.offerbox);
      this.Name = nameof (co);
      this.Text = "ShiftCode - Complete Offers";
      this.ResumeLayout(false);
    }

    internal virtual ListBox offerbox
    {
      get => this._offerbox;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._offerbox = value;
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Button Button2
    {
      get => this._Button2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual Button Button3
    {
      get => this._Button3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button3_Click);
        if (this._Button3 != null)
          this._Button3.Click -= eventHandler;
        this._Button3 = value;
        if (this._Button3 == null)
          return;
        this._Button3.Click += eventHandler;
      }
    }

    private void co_Load(object sender, EventArgs e)
    {
      try
      {
        foreach (object offer in this.offers)
          this.offerbox.Items.Add((object) Conversions.ToString(offer));
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
    }

    public object completeoffer(string offer)
    {
      object obj;
      try
      {
        string str = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/members/signupPTS.php?q=" + offer, ""));
        this.offid = str.Remove(0, checked (str.IndexOf("signupPTS.php?signup&ptsID=") + 27)).Split('&')[0];
        if (Operators.ConditionalCompareObjectLessEqual(Conversion.Int((object) this.offid), (object) 0, false))
        {
          int num = (int) Interaction.MsgBox((object) "Offer does not exist or already completed.");
        }
        else
        {
          Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/members/pts/click.php?ptsID=" + this.offid, ""));
          if (Operators.CompareString(offer, "Simple Online Media", false) == 0)
            MyProject.Forms.aio.sendPost("http://aqualeads.com/t/13761_1421166393741d174f57c9.js", "");
          else if (Operators.CompareString(offer, "Gpt Instant Rewardz", false) == 0)
            MyProject.Forms.aio.sendPost("http://loyalpubs.com/t/3067_cc70799d58e4190d445f6d.js", "");
          else if (Operators.CompareString(offer, "Meprizes gpt", false) == 0)
            MyProject.Forms.aio.sendPost("http://aqualeads.com/t/27518_857473d2b3eedef9e726f6.js", "");
          else if (Operators.CompareString(offer, "Real Prizes and Giveaways - Registration - All Countries", false) == 0)
          {
            MyProject.Forms.reg.register("realprizesandgiveaways.com", "");
            MyProject.Forms.aio.sendPost("http://adz20.com/t/4391_4791b74fb6639b9f158f4d.js", "");
            MyProject.Forms.aio.sendPost("http://aqualeads.com/t/27976_b2166f518a7f91e4e5396d.js", "");
          }
          obj = (object) ("Successfully completed " + offer);
          goto label_13;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) (offer + " could not be completed, either not found or malfunction.");
        ProjectData.ClearProjectError();
        goto label_13;
      }
      return (object) "Not in offer complete list.";
label_13:
      return obj;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      int num = (int) Interaction.MsgBox(RuntimeHelpers.GetObjectValue(this.completeoffer(Conversions.ToString(this.offerbox.SelectedItem))));
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      string str = "";
      try
      {
        foreach (object offer1 in this.offers)
        {
          string offer2 = Conversions.ToString(offer1);
          str = Conversions.ToString(Operators.AddObject((object) str, Operators.AddObject(this.completeoffer(offer2), (object) "\r\n")));
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
      int num = (int) Interaction.MsgBox((object) str);
    }

    private void Button3_Click(object sender, EventArgs e)
    {
      string str = "Success";
      int num1;
      while (str.Contains("Success"))
      {
        str = Conversions.ToString(this.completeoffer(""));
        MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/members/signupPTS.php?signup&ptsID=" + this.offid, Conversions.ToString(Operators.AddObject((object) "loginID=", MyProject.Forms.aio.randLetters((object) 5, (object) 10))));
        checked { ++num1; }
      }
      int num2 = (int) Interaction.MsgBox((object) ("Marked " + num1.ToString() + " offers as pending!"));
    }
  }
}
