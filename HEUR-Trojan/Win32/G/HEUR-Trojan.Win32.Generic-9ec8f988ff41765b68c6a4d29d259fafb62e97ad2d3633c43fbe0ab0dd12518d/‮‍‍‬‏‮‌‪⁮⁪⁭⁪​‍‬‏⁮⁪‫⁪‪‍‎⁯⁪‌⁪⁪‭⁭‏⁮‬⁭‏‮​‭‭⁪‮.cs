// Decompiled with JetBrains decompiler
// Type: ‮‍‍‬‏‮‌‪⁮⁪⁭⁪​‍‬‏⁮⁪‫⁪‪‍‎⁯⁪‌⁪⁪‭⁭‏⁮‬⁭‏‮​‭‭⁪‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u202E‍‍‬‏‮‌‪⁮⁪⁭⁪​‍‬‏⁮⁪‫⁪‪‍‎⁯⁪‌⁪⁪‭⁭‏⁮‬⁭‏‮​‭‭⁪‮ : 
  \u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮
{
  private \u202E‍⁪​⁭‍‍‍⁪‌‌‭​‮⁮⁫⁭⁭‪‮​‬‬‌‭⁭‪⁫‏⁭‭⁭⁬‪‎⁭‎‌⁫‮‮ \u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮;
  private \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private int \u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮;

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "ElGamal";

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    if (_param2 is \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮)
    {
      \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮ obj = (\u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮) _param2;
      this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ = (\u202E‍⁪​⁭‍‍‍⁪‌‌‭​‮⁮⁫⁭⁭‪‮​‬‬‌‭⁭‪⁫‏⁭‭⁭⁬‪‎⁭‎‌⁫‮‮) obj.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
      this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = obj.\u206A‫⁯‭⁯⁭‫‌‍​⁭‬‮‪⁭⁭⁬⁯‍​‌‮‪⁪‬⁮⁭‬‌⁬⁬⁬‌‭‏‏⁭⁬​‏‮;
    }
    else
    {
      this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ = (\u202E‍⁪​⁭‍‍‍⁪‌‌‭​‮⁮⁫⁭⁭‪‮​‬‬‌‭⁭‪⁫‏⁭‭⁭⁬‪‎⁭‎‌⁫‮‮) _param2;
      this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = new \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮();
    }
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
    this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ = this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮.\u206B⁪‫‎⁮⁮‬‍‫‍⁮⁯⁮‪⁬‬‎⁫⁪‪⁮​⁫⁭⁭‫⁪⁬⁮‍‪‬‏‭⁫‏‎‏⁬‏‮.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮;
    if (_param1)
    {
      if (!(this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ is \u200E‮⁪‎⁭‌‌⁯⁮⁭⁮⁮‏​⁬‭⁫‏‭‬‏‮​‎‭‌⁯⁭‌⁬‎⁬‍⁯‫⁭⁮‍‭‬‮))
        throw new ArgumentException("ElGamalPublicKeyParameters are required for encryption.");
    }
    else if (!(this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ is \u202B‌‪⁬‎‌⁬⁪‬⁭⁫‮⁯‌⁫⁬‮‍⁯‫‎​​‏‮‎⁪‬‏⁬‎⁫⁭‍⁭‮‌‌⁮⁬‮))
      throw new ArgumentException("ElGamalPrivateKeyParameters are required for decryption.");
  }

  public virtual int \u202D‌⁭⁯‎⁭⁯‫⁬⁭‌‪⁫⁮‏‍⁭‭⁬‫‌​‬⁬⁬​‍​​⁫⁪‭‫‏‭⁪⁫‎⁪⁪‮() => this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ ? (this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ - 1) / 8 : 2 * ((this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ + 7) / 8);

  public virtual int \u206B⁯‏‭⁮‍‫​⁪⁮‬‭⁬‎⁬⁬‮‎⁫⁫​​‫‏‏⁯‍‎⁯⁬‌​⁬‬⁯‫‫⁬‏⁯‮() => this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ ? 2 * ((this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ + 7) / 8) : (this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ - 1) / 8;

  public virtual byte[] \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    if (this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ == null)
      throw new InvalidOperationException("ElGamal engine not initialised");
    int num1 = this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ ? (this.\u200C‭‍​⁫‬⁫⁭‫⁯‌⁬‍⁭‭​⁭⁫‬‭‮‏⁮⁭⁬‪‏‫‌⁪‏⁭​‍⁫‪‎‏⁪⁭‮ - 1 + 7) / 8 : this.\u202D‌⁭⁯‎⁭⁯‫⁬⁭‌‪⁫⁮‏‍⁭‭⁬‫‌​‬⁬⁬​‍​​⁫⁪‭‫‏‭⁪⁫‎⁪⁪‮();
    if (_param3 > num1)
      throw new \u202A⁯⁬⁬‪⁫‌‏‎‬⁮‬⁪⁬‬⁯‍‍‍‌‎‍‍‬‍‮‬⁫​⁬‎⁯‪‏‏‫‍‫‌‫‮("input too large for ElGamal cipher.\n");
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮.\u206B⁪‫‎⁮⁮‬‍‫‍⁮⁯⁮‪⁬‬‎⁫⁪‪⁮​⁫⁭⁭‫⁪⁬⁮‍‪‬‏‭⁫‏‎‏⁬‏‮;
    byte[] numArray1;
    if (this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮ is \u202B‌‪⁬‎‌⁬⁪‬⁭⁫‮⁯‌⁫⁬‮‍⁯‫‎​​‏‮‎⁪‬‏⁬‎⁫⁭‍⁭‮‌‌⁮⁬‮)
    {
      int num2 = _param3 / 2;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param1, _param2, num2);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj3 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param1, _param2 + num2, num2);
      \u202B‌‪⁬‎‌⁬⁪‬⁭⁫‮⁯‌⁫⁬‮‍⁯‫‎​​‏‮‎⁪‬‏⁬‎⁫⁭‍⁭‮‌‌⁮⁬‮ obj4 = (\u202B‌‪⁬‎‌⁬⁪‬⁭⁫‮⁯‌⁫⁬‮‍⁯‫‎​​‏‮‎⁪‬‏⁬‎⁫⁭‍⁭‮‌‌⁮⁬‮) this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj5 = obj1.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One).\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(obj4.\u200B‭‬⁭⁭⁬‫‏‪‬‌⁪‫⁭⁫⁫⁭⁮‎⁫⁫⁮⁯​‏‮⁭‭‏‏⁯⁬⁭⁯‌⁭⁯‫‎⁭‮);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj6 = obj1;
      numArray1 = obj2.\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(obj5, obj6).\u202D⁫‪​‏‍⁯⁭⁪‪‭‭‏‭​​‭⁫‌‍⁮‬‮‬⁭⁬‪‎‪⁪⁪‌​‫⁫‫‍‏‍⁪‮(obj3).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj1).\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
    }
    else
    {
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj7 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, _param1, _param2, _param3);
      if (obj7.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮ >= obj1.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮)
        throw new \u202A⁯⁬⁬‪⁫‌‏‎‬⁮‬⁪⁬‬⁯‍‍‍‌‎‍‍‬‍‮‬⁫​⁬‎⁯‪‏‏‫‍‫‌‫‮("input too large for ElGamal cipher.\n");
      \u200E‮⁪‎⁭‌‌⁯⁮⁭⁮⁮‏​⁬‭⁫‏‭‬‏‮​‎‭‌⁯⁭‌⁬‎⁬‍⁯‫⁭⁮‍‭‬‮ obj8 = (\u200E‮⁪‎⁭‌‌⁯⁮⁭⁮⁮‏​⁬‭⁫‏‭‬‏‮​‎‭‌⁯⁭‌⁬‎⁬‍⁯‫⁭⁮‍‭‬‮) this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮;
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj9 = obj1.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj10;
      do
      {
        obj10 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(obj1.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮, (Random) this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮);
      }
      while (obj10.\u202C⁪⁮‬⁭‌‍‍⁫‍‌⁪⁮⁫‭‏⁫‎‭​‪⁪‏‍‎‮⁫‫⁬‭⁫⁬‭⁪⁫‮‮‌⁭⁭‮ == 0 || obj10.\u202B‎⁬⁪‏⁪‏‎⁮‌‮‌‭‎⁮⁭⁬‬‌‭⁪⁮‌‌⁯⁫‭‏⁫‮‬‭⁫​‍‍‍⁪‮⁭‮(obj9) > 0);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj11 = this.\u206D‮‌‍‪‭‭‏‌‪​‮‏⁪‭‫‬⁫​⁭‫‭‪‬⁬‫‭⁮‏‮⁪‬‏‎⁫⁮‮‎⁪⁫‮.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮.\u202D⁭‏‬‌‪⁫⁮‪​‎‍⁭⁮⁯⁫⁯‪‏‎⁭‬​‫⁪‏⁮⁮⁫‏⁬‭‬‎‭⁯​‫‏⁫‮.\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(obj10, obj1);
      \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj12 = obj7.\u202D⁫‪​‏‍⁯⁭⁪‪‭‭‏‭​​‭⁫‌‍⁮‬‮‬⁭⁬‪‎‪⁪⁪‌​‫⁫‫‍‏‍⁪‮(obj8.\u202E‪‏⁭‎‍‮⁪⁮​‍⁯⁬⁬‬‮⁬‪‍‮‏‎‭‏‌​⁬‍⁬⁮‪‫⁪⁯‏‎⁫‌⁭‎‮.\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(obj10, obj1)).\u206A‎‏⁫⁪‫‪‎⁭‮‮‭⁬⁮⁪⁬‮‍‫‏‮‎⁯‏‏‭⁯‭⁯‍‪⁮‬⁭‏⁬‎‍‭⁮‮(obj1);
      numArray1 = new byte[this.\u206B⁯‏‭⁮‍‫​⁪⁮‬‭⁬‎⁬⁬‮‎⁫⁫​​‫‏‏⁯‍‎⁯⁬‌​⁬‬⁯‫‫⁬‏⁯‮()];
      byte[] numArray2 = obj11.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
      byte[] numArray3 = obj12.\u206D‬​⁪⁭​​⁬‍⁪⁫⁬‫‫⁪‌‬‬⁯‮‌‏‮⁬⁮‎‎‬‭‮‫⁪‪⁯‎⁬‏⁯⁯‮‮();
      numArray2.CopyTo((Array) numArray1, numArray1.Length / 2 - numArray2.Length);
      numArray3.CopyTo((Array) numArray1, numArray1.Length - numArray3.Length);
    }
    return numArray1;
  }
}
