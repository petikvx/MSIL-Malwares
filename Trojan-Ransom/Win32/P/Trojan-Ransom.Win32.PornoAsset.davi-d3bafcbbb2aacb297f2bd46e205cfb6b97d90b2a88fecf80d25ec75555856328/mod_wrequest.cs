// Decompiled with JetBrains decompiler
// Type: ABC_Bot.mod_wrequest
// Assembly: ABC-Bot LITE, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E9E554F4-9AFA-414B-A1D5-AE64E23AD16E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00013-msil\Trojan-Ransom.Win32.PornoAsset.davi-d3bafcbbb2aacb297f2bd46e205cfb6b97d90b2a88fecf80d25ec75555856328.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Net;
using System.Text;

namespace ABC_Bot
{
  [StandardModule]
  internal sealed class mod_wrequest
  {
    public static object request(string url, string post)
    {
label_0:
      int num1;
      object obj1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        ServicePointManager.Expect100Continue = false;
label_2:
        num3 = 3;
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(url);
label_3:
        num3 = 4;
        httpWebRequest.Method = "POST";
label_4:
        num3 = 5;
        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
label_5:
        num3 = 6;
        byte[] bytes = Encoding.UTF8.GetBytes(post);
label_6:
        num3 = 7;
        httpWebRequest.ContentLength = (long) bytes.Length;
label_7:
        num3 = 8;
        Stream stream = httpWebRequest.GetRequestStream();
label_8:
        num3 = 9;
        stream.Write(bytes, 0, bytes.Length);
label_9:
        num3 = 10;
        stream.Close();
label_10:
        num3 = 11;
        HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
label_11:
        num3 = 12;
        stream = response.GetResponseStream();
label_12:
        num3 = 13;
        StreamReader streamReader = new StreamReader(stream);
label_13:
        num3 = 14;
        string end = streamReader.ReadToEnd();
label_14:
        num3 = 15;
        streamReader.Close();
label_15:
        num3 = 16;
        stream.Close();
label_16:
        num3 = 17;
        response.Close();
label_17:
        obj1 = (object) end;
        goto label_24;
label_19:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_24;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_19;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_24:
      object obj2 = obj1;
      if (num2 == 0)
        return obj2;
      ProjectData.ClearProjectError();
      return obj2;
    }
  }
}
