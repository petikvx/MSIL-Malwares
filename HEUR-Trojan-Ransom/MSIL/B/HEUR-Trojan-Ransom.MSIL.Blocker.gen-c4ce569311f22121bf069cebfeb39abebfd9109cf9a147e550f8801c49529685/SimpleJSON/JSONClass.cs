// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: SessionMa, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 29EA69E7-0E4F-4884-A9FC-633229D6DF5B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c4ce569311f22121bf069cebfeb39abebfd9109cf9a147e550f8801c49529685.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1035571791;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1293672343)) % 7U)
          {
            case 0:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -933353431;
              continue;
            case 1:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -1387546395 ^ -1218578175;
              continue;
            case 3:
              int num3 = !flag ? -1646628561 : (num3 = -1972318182);
              num1 = num3 ^ (int) num2 * 398124116;
              continue;
            case 4:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -1081333385 ^ -2063427522;
              continue;
            case 5:
              num1 = (int) num2 * -691108141 ^ 1170639471;
              continue;
            case 6:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = -1630404157;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1869004507)) % 6U)
          {
            case 0:
              this.m_Dict.Add(aKey, value);
              num1 = -1340094666;
              continue;
            case 1:
              goto label_3;
            case 2:
              int num3 = !flag ? -2081852973 : (num3 = -259903472);
              num1 = num3 ^ (int) num2 * -1143396718;
              continue;
            case 3:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 342211233 ^ 613171481;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * 474593362 ^ 1247401900;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -41723942;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1431191471)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 43169207 ^ -254552328;
              continue;
            case 2:
              num1 = (int) num2 * 1601247016 ^ 2137726147;
              continue;
            case 4:
              jsonNode = (JSONNode) null;
              num1 = -1363144821;
              continue;
            case 5:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 6:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1492677333 ^ -557503043;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_11;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -139944068 : (num4 = -1834561038);
        }
label_11:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1419112517;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 819132761)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 47362189 ^ -637964402;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              num1 = (int) num2 * 2110693021 ^ -155591346;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 1503781487 : (num4 = 289382412);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = -633034902;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -24402808)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1310665680 ^ -1214182006;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      bool flag = !JSONClass.\u200B⁬‏⁯‪​‎‭⁪⁮⁮‫⁯‪‌​⁮⁭⁯⁪‏‎‎‍⁭‬‏‍⁯‍⁬‭‌⁬‍⁫‭‪⁭‌‮(aKey);
label_1:
      int num1 = -991034458;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1754174761)) % 11U)
        {
          case 0:
            int num3 = !this.m_Dict.ContainsKey(aKey) ? -222208040 : (num3 = -920613240);
            num1 = num3 ^ (int) num2 * -1420533548;
            continue;
          case 1:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1069859572 ^ -716963405;
            continue;
          case 2:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -472922687;
            continue;
          case 3:
            num1 = (int) num2 * 253871168 ^ -2082748658;
            continue;
          case 4:
            this.m_Dict.Add(aKey, aItem);
            num1 = -765054821;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -443138630 ^ -1471460724;
            continue;
          case 7:
            num1 = -472922687;
            continue;
          case 8:
            int num4 = !flag ? -2105952190 : (num4 = -972641588);
            num1 = num4 ^ (int) num2 * 1134613773;
            continue;
          case 9:
            num1 = (int) num2 * -761135376 ^ 752878283;
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -236465729;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1602383291)) % 8U)
        {
          case 0:
            num1 = (int) num2 * 2089244973 ^ 2032404438;
            continue;
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1374471025 ^ 1487834012;
            continue;
          case 2:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1966194733 ^ -1022299255;
            continue;
          case 4:
            jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            num1 = -1756385494;
            continue;
          case 5:
            goto label_1;
          case 6:
            int num3 = !flag ? 1591690973 : (num3 = 616859048);
            num1 = num3 ^ (int) num2 * -2094426118;
            continue;
          case 7:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1366984536 ^ -1006945946;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 259456320;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 737610218)) % 8U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -2111948074 ^ -379125893;
            continue;
          case 1:
            num1 = (int) num2 * 1861576408 ^ 11793959;
            continue;
          case 2:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1326190661 ^ 1023668259;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            goto label_1;
          case 4:
            jsonNode = (JSONNode) null;
            num1 = 765307436;
            continue;
          case 6:
            num1 = (int) num2 * -1790755926 ^ -1069472253;
            continue;
          case 7:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          default:
            goto label_12;
        }
        int num4;
        num1 = num4 = num3 == 0 ? 56430326 : (num4 = 1008417626);
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 76357733;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1932201872)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 63534296 ^ -130762706;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_6;
          }
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = -1616141248;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -356013086)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -1958506856 ^ -337206771;
              continue;
            case 2:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1304467982 ^ 1552948639;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 279590314;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1366760476)) % 20U)
          {
            case 1:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? 1333892519 : (num4 = 741229713);
              continue;
            case 2:
              num2 = (int) num3 * 250225972 ^ 1097363828;
              continue;
            case 3:
              goto label_11;
            case 4:
              int num5;
              num2 = num5 = num1 != 1 ? 799337216 : (num5 = 1159283706);
              continue;
            case 5:
              goto label_1;
            case 6:
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 4796095;
              continue;
            case 7:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * 1604523293 ^ -1679477805;
              continue;
            case 8:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = new KeyValuePair<string, JSONNode>();
              num2 = 2010267977;
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * 655617855 ^ 686384846;
              continue;
            case 11:
              num2 = (int) num3 * 1035025688 ^ 397759891;
              continue;
            case 12:
              num2 = (int) num3 * 13513575 ^ 929538123;
              continue;
            case 13:
              N = enumerator.Current;
              num2 = 1322308397;
              continue;
            case 14:
              int num6 = num1 != 0 ? 979436518 : (num6 = 1330551894);
              num2 = num6 ^ (int) num3 * -554708950;
              continue;
            case 15:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -899083574 ^ -1332715659;
              continue;
            case 16:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 513533698 ^ -1763499071;
              continue;
            case 17:
              goto label_12;
            case 19:
              num2 = (int) num3 * -1061669613 ^ -1989015175;
              continue;
            default:
              goto label_19;
          }
        }
label_11:
        return false;
label_12:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = 1;
        return true;
label_19:
        enumerator = new Dictionary<string, JSONNode>.Enumerator();
        return false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
    }

    public override string ToString()
    {
      string str1 = "{";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_7:
        int num1 = enumerator.MoveNext() ? -203174750 : (num1 = -956811637);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1675424750)) % 7U)
          {
            case 0:
              str1 = JSONClass.\u202A​‎⁪​​⁯⁬‌‎‎⁯⁬⁭‎⁯⁮⁫‮⁮⁫‍⁮‏‏⁮‏⁯⁮‌⁯⁫‌​‎‭‪‭⁯‍‮(str1, ", ");
              num1 = (int) num2 * 859981917 ^ 1308629020;
              continue;
            case 1:
              int num3 = JSONClass.\u206D⁯‭⁯‪‮‭‍⁫⁬‬‎‍‎⁯‭​‎‍‪‭‪‬‮‌⁬⁯​‭⁬⁬‏‬‎​‭‌⁯‮‌‮(str1) <= 2 ? -1717283092 : (num3 = -130492702);
              num1 = num3 ^ (int) num2 * 1629544656;
              continue;
            case 2:
              str1 = JSONClass.\u206A‎‮‫‭⁯‭‭‬‌⁬⁮‭⁫‪‬⁯‎⁬‮⁫‬⁬⁮‌‫⁫‍⁮‍‌‫‮‭‏‮​‎⁪‌‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206E‌‭⁭⁯⁯⁪⁮⁪⁭‫‭‮⁫‎⁭‏‌‮‬⁭⁫‫⁭‍‬⁯‫‮⁬‬‮‭⁭‌⁫‎‍‭‬‮((object) current.Value)
              });
              num1 = -1928803551;
              continue;
            case 4:
              current = enumerator.Current;
              num1 = -1164862135;
              continue;
            case 5:
              goto label_7;
            case 6:
              num1 = -203174750;
              continue;
            default:
              goto label_10;
          }
        }
      }
label_10:
      string str2 = JSONClass.\u202A​‎⁪​​⁯⁬‌‎‎⁯⁬⁭‎⁯⁮⁫‮⁮⁫‍⁮‏‏⁮‏⁯⁮‌⁯⁫‌​‎‭‪‭⁯‍‮(str1, "}");
label_11:
      int num4 = -1440728666;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -1675424750)) % 3U)
        {
          case 0:
            goto label_11;
          case 2:
            str3 = str2;
            num4 = (int) num5 * 1220088006 ^ -1049655672;
            continue;
          default:
            goto label_14;
        }
      }
label_14:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str = "{ ";
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_7:
        int num1 = enumerator.MoveNext() ? 1063700555 : (num1 = 879135209);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1914349018)) % 8U)
          {
            case 0:
              int num3 = JSONClass.\u206D⁯‭⁯‪‮‭‍⁫⁬‬‎‍‎⁯‭​‎‍‪‭‪‬‮‌⁬⁯​‭⁬⁬‏‬‎​‭‌⁯‮‌‮(str) > 3 ? -756367635 : (num3 = -2073252049);
              num1 = num3 ^ (int) num2 * 2092734953;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = 1700919914;
              continue;
            case 2:
              num1 = 1063700555;
              continue;
            case 4:
              num1 = (int) num2 * -2097143004 ^ -319404028;
              continue;
            case 5:
              str = JSONClass.\u206A⁫‎‎‏​‌⁯⁮‬‬‍⁬‫‬‮‭⁪⁫‭‌​‫⁬​⁯‬‫⁭‫‌‭‫​‏‎‎⁬​‌‮(str, "\n", aPrefix, "   ");
              str = JSONClass.\u206A‎‮‫‭⁯‭‭‬‌⁬⁮‭⁫‪‬⁯‎⁬‮⁫‬⁬⁮‌‫⁫‍⁮‍‌‫‮‭‏‮​‎⁪‌‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202A​‎⁪​​⁯⁬‌‎‎⁯⁬⁭‎⁯⁮⁫‮⁮⁫‍⁮‏‏⁮‏⁯⁮‌⁯⁫‌​‎‭‪‭⁯‍‮(aPrefix, "   "))
              });
              num1 = 1754083438;
              continue;
            case 6:
              goto label_7;
            case 7:
              str = JSONClass.\u202A​‎⁪​​⁯⁬‌‎‎⁯⁬⁭‎⁯⁮⁫‮⁮⁫‍⁮‏‏⁮‏⁯⁮‌⁯⁫‌​‎‭‪‭⁯‍‮(str, ", ");
              num1 = (int) num2 * -1723279261 ^ -813066582;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      return JSONClass.\u206A⁫‎‎‏​‌⁯⁮‬‬‍⁬‫‬‮‭⁪⁫‭‌​‫⁬​⁯‬‫⁭‫‌‭‫​‏‎‎⁬​‌‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u200D‪‪‍⁪‬⁯‍⁮‬⁮⁫⁭​⁭‎​‏⁯​⁫⁯⁪⁮‌‫⁮‎​‬‮⁬‌⁭⁬‪⁭⁬‮‮‮(aWriter, (byte) 2);
label_1:
      int num1 = -2073137084;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -270371641)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1823910999 ^ -1948166472;
            continue;
          case 3:
            JSONClass.\u200E​‬‭‫‬⁫‭‮⁭‍‮‭⁫‬‮​⁭⁭⁪⁫‫⁮​‍‪‬⁫‭‭⁯⁬​⁭⁮‎​‮⁬‬‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -2086156727 ^ 700470682;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -1928674087 : (num3 = -1745780493);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -270371641)) % 7U)
          {
            case 0:
              goto label_12;
            case 1:
              goto label_15;
            case 2:
              JSONClass.\u200E‫‎‏⁫⁭⁫‫⁭⁮‌‮⁫‏‎⁮‬​⁫⁬‎⁪‮⁯⁪‪‮‭‍⁬‮‭‭‌‏‭‎‍‪‎‮(aWriter, current);
              num3 = (int) num4 * -1501586325 ^ -39689826;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = -1576869940;
              continue;
            case 4:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -661428916 ^ 553756323;
              continue;
            case 5:
              num3 = -1745780493;
              continue;
            case 6:
              num3 = (int) num4 * -1524697747 ^ 1936710405;
              continue;
            default:
              goto label_9;
          }
        }
label_15:
        return;
label_9:;
      }
    }

    public JSONClass()
    {
label_1:
      int num1 = 1218264540;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 873281824)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1724133685 ^ -343751455;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static bool \u200B⁬‏⁯‪​‎‭⁪⁮⁮‫⁯‪‌​⁮⁭⁯⁪‏‎‎‍⁭‬‏‍⁯‍⁬‭‌⁬‍⁫‭‪⁭‌‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206D⁯‭⁯‪‮‭‍⁫⁬‬‎‍‎⁯‭​‎‍‪‭‪‬‮‌⁬⁯​‭⁬⁬‏‬‎​‭‌⁯‮‌‮([In] string obj0) => obj0.Length;

    static string \u202A​‎⁪​​⁯⁬‌‎‎⁯⁬⁭‎⁯⁮⁫‮⁮⁫‍⁮‏‏⁮‏⁯⁮‌⁯⁫‌​‎‭‪‭⁯‍‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206E‌‭⁭⁯⁯⁪⁮⁪⁭‫‭‮⁫‎⁭‏‌‮‬⁭⁫‫⁭‍‬⁯‫‮⁬‬‮‭⁭‌⁫‎‍‭‬‮([In] object obj0) => obj0.ToString();

    static string \u206A‎‮‫‭⁯‭‭‬‌⁬⁮‭⁫‪‬⁯‎⁬‮⁫‬⁬⁮‌‫⁫‍⁮‍‌‫‮‭‏‮​‎⁪‌‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206A⁫‎‎‏​‌⁯⁮‬‬‍⁬‫‬‮‭⁪⁫‭‌​‫⁬​⁯‬‫⁭‫‌‭‫​‏‎‎⁬​‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200D‪‪‍⁪‬⁯‍⁮‬⁮⁫⁭​⁭‎​‏⁯​⁫⁯⁪⁮‌‫⁮‎​‬‮⁬‌⁭⁬‪⁭⁬‮‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200E​‬‭‫‬⁫‭‮⁭‍‮‭⁫‬‮​⁭⁭⁪⁫‫⁮​‍‪‬⁫‭‭⁯⁬​⁭⁮‎​‮⁬‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u200E‫‎‏⁫⁭⁫‫⁭⁮‌‮⁫‏‎⁮‬​⁫⁬‎⁪‮⁯⁪‪‮‭‍⁬‮‭‭‌‏‭‎‍‪‎‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
