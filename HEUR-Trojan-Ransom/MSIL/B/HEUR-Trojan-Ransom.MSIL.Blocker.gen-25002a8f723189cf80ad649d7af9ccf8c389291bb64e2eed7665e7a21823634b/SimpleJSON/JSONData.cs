// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
        string data = this.m_Data;
label_1:
        int num1 = 245510302;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1756870123)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 2141010396 ^ 1613091232;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set
      {
label_1:
        int num1 = 193116519;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1324822990)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.m_Data = value;
              num1 = (int) num2 * -492412643 ^ 299854599;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData) => this.AsDouble = aData;

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData)
    {
label_1:
      int num1 = -595323815;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1341269776)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -331084769 ^ 1078018973;
            continue;
          case 2:
            this.AsInt = aData;
            num1 = (int) num2 * 1465187602 ^ 1149073855;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override string ToString() => JSONData.\u206F‍‍‏​⁮⁯⁭‫‎⁮‎⁫‬⁪‪⁮‏⁪‫​⁪‭‪‎‍⁪‍⁪⁭⁬‍⁯⁯⁪⁬⁫⁪‎⁮‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1900948024;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2098961365)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 796452076 ^ 1954674905;
            continue;
          case 3:
            str = JSONData.\u206F‍‍‏​⁮⁯⁭‫‎⁮‎⁫‬⁪‪⁮‏⁪‫​⁪‭‪‎‍⁪‍⁪⁭⁬‍⁯⁯⁪⁬⁫⁪‎⁮‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 776611913 ^ -1921695727;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
label_1:
      int num1 = -785457111;
      bool flag1;
      bool flag2;
      bool flag3;
      bool flag4;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -437272149)) % 33U)
        {
          case 0:
            int num3 = !flag4 ? -1783804814 : (num3 = -569653675);
            num1 = num3 ^ (int) num2 * -761125177;
            continue;
          case 1:
            JSONData.\u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮(aWriter, (byte) 4);
            JSONData.\u202B⁯⁯⁫⁫‏‪⁯⁪⁯⁭‬‏‬⁭‭⁭⁫‌⁬⁯‍‌‪‫⁬​‍⁬​‮‍‭‭⁭⁮‪‍‪⁭‮(aWriter, this.AsInt);
            num1 = (int) num2 * 20624614 ^ 1946086675;
            continue;
          case 2:
            num1 = (int) num2 * -140806085 ^ 1138105964;
            continue;
          case 3:
            JSONData.\u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮(aWriter, (byte) 3);
            num1 = -1426664522;
            continue;
          case 4:
            jsonData.AsDouble = this.AsDouble;
            num1 = -178736333;
            continue;
          case 5:
            jsonData.AsFloat = this.AsFloat;
            num1 = -2267580;
            continue;
          case 6:
            goto label_1;
          case 7:
            int num4 = flag3 ? 2086199444 : (num4 = 1904950225);
            num1 = num4 ^ (int) num2 * 2115184314;
            continue;
          case 8:
            flag2 = JSONData.\u202E⁬‏⁯⁬‬‭‏⁬‌⁯‬⁪‪⁭‮⁬‌‪‫⁫‭⁪‭⁯‪‌⁭‍‌‮‎⁮‍⁯⁯⁯⁬⁬‍‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -76274899 ^ -1747204817;
            continue;
          case 9:
            int num5 = !flag2 ? 1611936317 : (num5 = 1119345128);
            num1 = num5 ^ (int) num2 * -1494545483;
            continue;
          case 10:
            JSONData.\u206F⁪‫‭⁭⁬⁬‮‮⁮‏‫⁯‬‪⁯‬⁪‏‮⁮‌⁭⁮⁮‮‬‮‪‭⁯‭‪⁪‬‫⁬‫‭‍‮(aWriter, this.m_Data);
            num1 = (int) num2 * -818537920 ^ 1277430084;
            continue;
          case 11:
            flag1 = JSONData.\u202E⁬‏⁯⁬‬‭‏⁬‌⁯‬⁪‪⁭‮⁬‌‪‫⁫‭⁪‭⁯‪‌⁭‍‌‮‎⁮‍⁯⁯⁯⁬⁬‍‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1340700738 ^ 94231509;
            continue;
          case 12:
            num1 = (int) num2 * 2017796895 ^ -626068372;
            continue;
          case 13:
            num1 = (int) num2 * -469038578 ^ -718792652;
            continue;
          case 14:
            num1 = (int) num2 * 536519336 ^ 990823322;
            continue;
          case 15:
            jsonData.AsInt = this.AsInt;
            flag4 = JSONData.\u202E⁬‏⁯⁬‬‭‏⁬‌⁯‬⁪‪⁭‮⁬‌‪‫⁫‭⁪‭⁯‪‌⁭‍‌‮‎⁮‍⁯⁯⁯⁬⁬‍‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 955367980 ^ -247381598;
            continue;
          case 16:
            num1 = (int) num2 * 1696555811 ^ 951661841;
            continue;
          case 17:
            goto label_3;
          case 18:
            JSONData.\u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1918741690 ^ 1693784141;
            continue;
          case 19:
            JSONData.\u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮(aWriter, (byte) 7);
            num1 = (int) num2 * -1128839065 ^ -1350750940;
            continue;
          case 20:
            num1 = (int) num2 * -370289664 ^ 1474860283;
            continue;
          case 21:
            flag3 = JSONData.\u202E⁬‏⁯⁬‬‭‏⁬‌⁯‬⁪‪⁭‮⁬‌‪‫⁫‭⁪‭⁯‪‌⁭‍‌‮‎⁮‍⁯⁯⁯⁬⁬‍‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -204292748 ^ -1869144415;
            continue;
          case 22:
            JSONData.\u202D‌‍‌‮‬⁮‪⁮‏⁪‬​⁭⁮‌⁫⁮‮⁫​‬‬‬⁪​⁮‍⁬⁫‫​‍‫‫​‬⁮‬‪‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 528186692 ^ 1505408964;
            continue;
          case 23:
            JSONData.\u200F⁬‍⁬‬‏‬‎‬‫⁯‍‍⁯⁮‮⁮‌⁭‮‮‮‮‪⁯⁫‪‫⁪⁪‍⁯‭‭⁮⁬‎‪⁫⁭‮(aWriter, this.AsBool);
            num1 = (int) num2 * -1361974986 ^ 1542682151;
            continue;
          case 24:
            num1 = (int) num2 * 231428031 ^ -1242950790;
            continue;
          case 25:
            jsonData.AsBool = this.AsBool;
            num1 = -1479368586;
            continue;
          case 26:
            num1 = (int) num2 * 1667785454 ^ -1992769642;
            continue;
          case 27:
            int num6 = !flag1 ? 1234053907 : (num6 = 20611493);
            num1 = num6 ^ (int) num2 * 1661251989;
            continue;
          case 28:
            num1 = (int) num2 * -413061720 ^ 1829383092;
            continue;
          case 29:
            num1 = (int) num2 * -500262096 ^ 265966116;
            continue;
          case 30:
            num1 = (int) num2 * 1100460374 ^ 367569532;
            continue;
          case 31:
            JSONData.\u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮(aWriter, (byte) 6);
            num1 = (int) num2 * -1380723254 ^ -297138536;
            continue;
          case 32:
            JSONData.\u206C⁯⁮⁪⁭⁬⁬‫‍‮‎​⁫‌‌‎‌​‮⁪‏⁫‮⁮‎⁭‪‎‫‭‏‬⁮⁮‭‮⁯⁭⁫‮‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1560225674 ^ -1304717793;
            continue;
          default:
            goto label_35;
        }
      }
label_3:
      return;
label_35:;
    }

    static string \u206F‍‍‏​⁮⁯⁭‫‎⁮‎⁫‬⁪‪⁮‏⁪‫​⁪‭‪‎‍⁪‍⁪⁭⁬‍⁯⁯⁪⁬⁫⁪‎⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202E⁬‏⁯⁬‬‭‏⁬‌⁯‬⁪‪⁭‮⁬‌‪‫⁫‭⁪‭⁯‪‌⁭‍‌‮‎⁮‍⁯⁯⁯⁬⁬‍‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206D‭‫⁯‬‌‮‭​⁪‪‍‬‫⁬⁪​​‬‏⁭‏⁪⁪⁫⁫‎⁫‮​‌‍‌‭‭‮‌‍‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202B⁯⁯⁫⁫‏‪⁯⁪⁯⁭‬‏‬⁭‭⁭⁫‌⁬⁯‍‌‪‫⁬​‍⁬​‮‍‭‭⁭⁮‪‍‪⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206C⁯⁮⁪⁭⁬⁬‫‍‮‎​⁫‌‌‎‌​‮⁪‏⁫‮⁮‎⁭‪‎‫‭‏‬⁮⁮‭‮⁯⁭⁫‮‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202D‌‍‌‮‬⁮‪⁮‏⁪‬​⁭⁮‌⁫⁮‮⁫​‬‬‬⁪​⁮‍⁬⁫‫​‍‫‫​‬⁮‬‪‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200F⁬‍⁬‬‏‬‎‬‫⁯‍‍⁯⁮‮⁮‌⁭‮‮‮‮‪⁯⁫‪‫⁪⁪‍⁯‭‭⁮⁬‎‪⁫⁭‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206F⁪‫‭⁭⁬⁬‮‮⁮‏‫⁯‬‪⁯‬⁪‏‮⁮‌⁭⁮⁮‮‬‮‪‭⁯‭‪⁪‬‫⁬‫‭‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
