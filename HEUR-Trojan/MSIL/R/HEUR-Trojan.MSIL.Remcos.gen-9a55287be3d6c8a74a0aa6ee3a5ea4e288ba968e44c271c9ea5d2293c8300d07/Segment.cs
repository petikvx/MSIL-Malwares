// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.Segment
// Assembly: W2E901dpqsgg43z, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E3EDE543-33A5-3966-9367-08505E2DD4BA
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-9a55287be3d6c8a74a0aa6ee3a5ea4e288ba968e44c271c9ea5d2293c8300d07.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  public class Segment : ICloneable
  {
    private int mX;
    private int mY;
    private int mLastX;
    private int mLastY;
    private Segment.Directions mDirection;
    private ConsoleColor mColor;

    public Segment(int x, int y, Segment.Directions d, ConsoleColor c)
    {
label_5:
      int num1 = 3;
      int num2 = 12;
      while (true)
      {
        switch (num2 ^ 50)
        {
          case 59:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.Draw);
            num2 = 9;
            continue;
          case 60:
            goto label_5;
          case 61:
            switch (num1)
            {
              case 52:
                this.mY = y;
                num1 = 1;
                goto label_1;
              case 53:
                this.mDirection = d;
                num1 = 2;
                goto label_1;
              case 54:
                this.mColor = c;
                num1 = 13;
                goto label_1;
              case 55:
                this.mX = x;
                num1 = 0;
                goto label_1;
              case 56:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.Clone);
                num1 = 12;
                goto label_1;
              case 57:
                goto label_13;
              default:
                num2 = 14;
                continue;
            }
          case 62:
label_1:
            num1 ^= 52;
            break;
        }
        num2 = 15;
      }
label_13:;
    }

    public void Move(Segment.Directions d = Segment.Directions.Same)
    {
      if ((d == Segment.Directions.Same ? 1 : 0) == 0)
        this.mDirection = d;
      this.mLastX = this.mX;
label_4:
      int num1 = 12;
      Segment.Directions mDirection;
      while (true)
      {
        switch (num1 ^ 57)
        {
          case 51:
            num1 = 15;
            continue;
          case 52:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_Y);
            num1 = 13;
            continue;
          case 53:
            this.mLastY = this.mY;
            num1 = 10;
            continue;
          case 54:
            mDirection = this.mDirection;
            num1 = 14;
            continue;
          case 55:
            switch (mDirection)
            {
              case Segment.Directions.Left:
                goto label_11;
              case Segment.Directions.Right:
                goto label_12;
              case Segment.Directions.Up:
                goto label_13;
              case Segment.Directions.Down:
                goto label_15;
              default:
                num1 = 1;
                continue;
            }
          case 56:
            goto label_18;
          default:
            goto label_4;
        }
      }
label_11:
      // ISSUE: variable of a reference type
      int& local1;
      // ISSUE: explicit reference operation
      int num2 = checked (^(local1 = ref this.mX) - 1);
      local1 = num2;
      goto label_18;
label_12:
      // ISSUE: variable of a reference type
      int& local2;
      // ISSUE: explicit reference operation
      int num3 = checked (^(local2 = ref this.mX) + 1);
      local2 = num3;
      goto label_18;
label_13:
      // ISSUE: variable of a reference type
      int& local3;
      // ISSUE: explicit reference operation
      int num4 = checked (^(local3 = ref this.mY) - 1);
      local3 = num4;
      goto label_18;
label_14:
      int num5;
      while (true)
      {
        switch (num5 ^ 53)
        {
          case 59:
          case 61:
            goto label_18;
          case 60:
            // ISSUE: variable of a reference type
            int& local4;
            // ISSUE: explicit reference operation
            int num6 = checked (^(local4 = ref this.mY) + 1);
            local4 = num6;
            num5 = 14;
            continue;
          case 62:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.Draw);
            num5 = 11;
            continue;
          case 63:
            goto label_17;
          default:
            goto label_15;
        }
      }
label_17:
      return;
label_15:
      num5 = 9;
      goto label_14;
label_18:
      num5 = 10;
      goto label_14;
    }

    public void Draw(char c = '█', ConsoleColor bc = ConsoleColor.Black)
    {
label_4:
      int num1 = 2;
      int num2 = (int) sbyte.MinValue;
      while (true)
      {
        switch ((num2 ^ 65) + 66)
        {
          case 0:
            goto label_4;
          case 1:
            switch (num1)
            {
              case 64:
                Console.CursorLeft = this.mX;
                num1 = 10;
                goto label_1;
              case 65:
                num1 = 9;
                goto label_1;
              case 66:
                Console.ForegroundColor = this.mColor;
                num1 = 5;
                goto label_1;
              case 67:
                num1 = 0;
                goto label_1;
              case 68:
                Console.CursorTop = this.mY;
                num1 = 8;
                goto label_1;
              case 69:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_X);
                num1 = 7;
                goto label_1;
              case 70:
                Console.BackgroundColor = bc;
                num1 = 1;
                goto label_1;
              case 71:
                num1 = 11;
                goto label_1;
              case 72:
                num1 = 6;
                goto label_1;
              case 73:
                Console.Write(Conversions.ToString(c), (object) this.mX, (object) this.mY);
                num1 = 3;
                goto label_1;
              case 74:
                num1 = 4;
                goto label_1;
              case 75:
                goto label_15;
              default:
                num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(30);
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.get_LastY);
            num2 = -127;
            continue;
          case 3:
label_1:
            num1 ^= 66;
            break;
        }
        num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
      }
label_15:;
    }

    public void Draw()
    {
label_5:
      int num1 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(32);
      int num2 = 126;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_X);
            num2 = 3;
            continue;
          case 64:
            goto label_5;
          case 65:
            switch (num1 + 66)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.get_Direction);
                num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(65);
                goto label_1;
              case 1:
                Console.CursorTop = this.mY;
                num1 = -6;
                goto label_1;
              case 2:
                Console.BackgroundColor = this.mColor;
                num1 = -3;
                goto label_1;
              case 3:
                num1 = -127;
                goto label_1;
              case 4:
                Console.Write(" ", (object) this.mX, (object) this.mY);
                num1 = -8;
                goto label_1;
              case 5:
                num1 = -4;
                goto label_1;
              case 6:
                num1 = -2;
                goto label_1;
              case 7:
                Console.CursorLeft = this.mX;
                num1 = -1;
                goto label_1;
              case 8:
                num1 = -7;
                goto label_1;
              case 9:
                goto label_13;
              default:
                num2 = 124;
                continue;
            }
          case 66:
label_1:
            num1 ^= 62;
            break;
        }
        num2 = 125;
      }
label_13:;
    }

    public bool IntersectsWith(Segment s) => this.mX == s.X && this.mY == s.Y;

    public object Clone()
    {
label_7:
      int num1 = 7;
      int num2 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(70);
      object obj;
      while (true)
      {
        switch ((num2 ^ 59) + 70)
        {
          case 0:
            switch (num1)
            {
              case 66:
              case 69:
                goto label_10;
              case 67:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_Y);
                num1 = 0;
                goto label_1;
              case 68:
                obj = (object) new Segment(this.mX, this.mY, this.mDirection, this.mColor);
                num1 = 1;
                goto label_1;
              default:
                num2 = -121;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.set_Color);
            num2 = (int) sbyte.MinValue;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 67;
            break;
        }
        num2 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(66);
      }
label_10:
      return obj;
    }

    public object Clone(ConsoleColor newColor)
    {
label_6:
      int num1 = 2;
      int num2 = 5;
      object obj;
      while (true)
      {
        switch (num2 ^ 67)
        {
          case 67:
            switch (num1)
            {
              case 63:
              case 66:
                goto label_10;
              case 64:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.op_Equality);
                num1 = 3;
                goto label_1;
              case 65:
                obj = (object) new Segment(this.mX, this.mY, this.mDirection, newColor);
                num1 = 124;
                goto label_1;
              default:
                num2 = 7;
                continue;
            }
          case 68:
            goto label_6;
          case 69:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.set_Direction);
            num2 = 6;
            continue;
          case 70:
label_1:
            num1 ^= 67;
            break;
        }
        num2 = 0;
      }
label_10:
      return obj;
    }

    public int X
    {
      get
      {
label_7:
        int num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(70);
        int num2 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(72);
        int mX;
        while (true)
        {
          switch ((num2 ^ 71) + 65)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.set_Y);
              num2 = -8;
              continue;
            case 1:
              switch (num1 + 58)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.IntersectsWith);
                  num1 = -121;
                  goto label_1;
                case 1:
                  mX = this.mX;
                  num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(63);
                  goto label_1;
                case 2:
                case 3:
                  goto label_10;
                default:
                  num2 = -122;
                  continue;
              }
            case 2:
              goto label_7;
            case 3:
label_1:
              num1 ^= 65;
              break;
          }
          num2 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(69);
        }
label_10:
        return mX;
      }
      set
      {
label_4:
        int num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(70);
        int num2 = 4;
        while (true)
        {
          switch (num2 ^ 73)
          {
            case 74:
              goto label_4;
            case 75:
              switch (num1 + 58)
              {
                case 0:
                  this.mX = value;
                  num1 = Level.\uF445\uECD1\uEEF4\uE532\uF4BA\uF682\uE473\uEA2E\uF56A\uF26A\uE5BB\uEAF4(71);
                  goto label_1;
                case 1:
                  this.mLastX = this.mX;
                  num1 = -121;
                  goto label_1;
                case 2:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_LastY);
                  num1 = -119;
                  goto label_1;
                case 3:
                  goto label_10;
                default:
                  num2 = 3;
                  continue;
              }
            case 76:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.set_Direction);
              num2 = 5;
              continue;
            case 77:
label_1:
              num1 ^= 65;
              break;
          }
          num2 = 2;
        }
label_10:;
      }
    }

    public int Y
    {
      get
      {
label_5:
        int num1 = AsciiSnake.\uE408\uF03E\uE1B2\uF83C\uE1B5\uEB23\uF0B7\uEA31\uF287\uEA34\uE6A2\uF14E(48);
        int num2 = -5;
        int mY;
        while (true)
        {
          switch ((num2 ^ 74) + 82)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.\u002Ector);
              num2 = AsciiSnake.\uE408\uF03E\uE1B2\uF83C\uE1B5\uEB23\uF0B7\uEA31\uF287\uEA34\uE6A2\uF14E(49);
              continue;
            case 1:
              goto label_5;
            case 2:
              switch (num1 + 71)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.set_X);
                  num1 = -9;
                  goto label_1;
                case 1:
                  mY = this.mY;
                  num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF2.\uEA6D\uEF21\uE194\uF646\uE037\uE8F7\uEA59\uE01F\uE593\uEFE2\uE294\uF565(52);
                  goto label_1;
                case 2:
                case 3:
                  goto label_10;
                default:
                  num2 = -27;
                  continue;
              }
            case 3:
label_1:
              num1 ^= 78;
              break;
          }
          num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(20);
        }
label_10:
        return mY;
      }
      set
      {
label_7:
        int num1 = 24;
        int num2 = 7;
        while (true)
        {
          switch (num2 ^ 72)
          {
            case 76:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_LastY);
              num2 = 4;
              continue;
            case 77:
              switch (num1)
              {
                case 71:
                  this.mY = value;
                  num1 = 27;
                  goto label_1;
                case 72:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.op_Equality);
                  num1 = 25;
                  goto label_1;
                case 73:
                  this.mLastY = this.mY;
                  num1 = 22;
                  goto label_1;
                case 74:
                  goto label_10;
                default:
                  num2 = 6;
                  continue;
              }
            case 78:
              goto label_7;
            case 79:
label_1:
              num1 ^= 81;
              break;
          }
          num2 = 5;
        }
label_10:;
      }
    }

    public Segment.Directions Direction
    {
      get
      {
label_7:
        int num1 = 22;
        int num2 = 7;
        Segment.Directions mDirection;
        while (true)
        {
          switch (num2 ^ 76)
          {
            case 72:
              switch (num1)
              {
                case 81:
                  mDirection = this.mDirection;
                  num1 = 20;
                  goto label_1;
                case 82:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_Direction);
                  num1 = 21;
                  goto label_1;
                case 83:
                case 84:
                  goto label_10;
                default:
                  num2 = 6;
                  continue;
              }
            case 73:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.get_LastX);
              num2 = 5;
              continue;
            case 74:
              goto label_7;
            case 75:
label_1:
              num1 ^= 71;
              break;
          }
          num2 = 4;
        }
label_10:
        return mDirection;
      }
      set => this.mDirection = value;
    }

    public ConsoleColor Color
    {
      get
      {
label_4:
        int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(37);
        int num2 = -15;
        ConsoleColor mColor;
        while (true)
        {
          switch ((num2 ^ 74) + 72)
          {
            case 0:
              goto label_4;
            case 1:
              switch (num1 + 78)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.Clone);
                  num1 = -8;
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  mColor = this.mColor;
                  num1 = -7;
                  goto label_1;
                default:
                  num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(21);
                  continue;
              }
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.get_X);
              num2 = -16;
              continue;
            case 3:
label_1:
              num1 ^= 74;
              break;
          }
          num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(24);
        }
label_10:
        return mColor;
      }
      set => this.mColor = value;
    }

    public int LastX
    {
      get
      {
label_4:
        int num1 = 22;
        int num2 = 3;
        int mLastX;
        while (true)
        {
          switch (num2 ^ 81)
          {
            case 79:
              goto label_4;
            case 80:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_Y);
              num2 = 1;
              continue;
            case 81:
              switch (num1)
              {
                case 78:
                case 81:
                  goto label_10;
                case 79:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.op_Equality);
                  num1 = 9;
                  goto label_1;
                case 80:
                  mLastX = this.mLastX;
                  num1 = 8;
                  goto label_1;
                default:
                  num2 = 30;
                  continue;
              }
            case 82:
label_1:
              num1 ^= 70;
              break;
          }
          num2 = 0;
        }
label_10:
        return mLastX;
      }
    }

    public int LastY
    {
      get
      {
label_4:
        int num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(35);
        int num2 = -3;
        int mLastY;
        while (true)
        {
          switch ((num2 ^ 73) + 79)
          {
            case 0:
              goto label_4;
            case 1:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.op_Inequality);
              num2 = -5;
              continue;
            case 2:
              switch (num1 + 72)
              {
                case 0:
                case 3:
                  goto label_10;
                case 1:
                  mLastY = this.mLastY;
                  num1 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(27);
                  goto label_1;
                case 2:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.get_LastX);
                  num1 = -12;
                  goto label_1;
                default:
                  num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(41);
                  continue;
              }
            case 3:
label_1:
              num1 ^= 78;
              break;
          }
          num2 = Form2.\uE7F6\uEE5A\uF13B\uE62C\uE9E0\uF23D\uEBB4\uF419\uF674\uED40\uE0AF\uE3A4(20);
        }
label_10:
        return mLastY;
      }
    }

    public static bool operator ==(Segment s1, Segment s2) => s1.X == s2.X && s1.Y == s2.Y && s1.Direction == s2.Direction;

    public static bool operator !=(Segment s1, Segment s2)
    {
label_6:
      int num1 = 9;
      int num2 = -6;
      bool flag;
      while (true)
      {
        switch ((num2 ^ 78) + 79)
        {
          case 0:
            switch (num1)
            {
              case 78:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (Segment.get_LastY);
                num1 = 8;
                goto label_1;
              case 79:
                flag = !(s1 == s2);
                num1 = 22;
                goto label_1;
              case 80:
              case 81:
                goto label_10;
              default:
                num2 = -4;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Segment.set_X);
            num2 = -3;
            continue;
          case 3:
label_1:
            num1 ^= 70;
            break;
        }
        num2 = \uE847\uECAC\uE5EA\uE594\uE61D\uF865\uF65E\uF025\uEE4F\uF357\uE1B2\uE961.\uEC90\uE830\uED92\uEA5B\uF4EC\uE676\uF441\uE7AB\uE952\uF03A\uEEBD\uEFF1.\uEEF5\uEA0C\uEADA\uE1C9\uE289\uEDEB\uE9AB\uE1F5\uE72E\uE67B\uF500\uE550(30);
      }
label_10:
      return flag;
    }

    public enum Directions
    {
      Left,
      Right,
      Up,
      Down,
      Same,
    }
  }
}
