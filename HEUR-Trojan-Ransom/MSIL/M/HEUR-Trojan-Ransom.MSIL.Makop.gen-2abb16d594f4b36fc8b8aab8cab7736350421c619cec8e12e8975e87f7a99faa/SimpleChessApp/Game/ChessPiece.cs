// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: طv, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DDF840D-AD0E-4D2F-A03C-7E334C2C97A3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-2abb16d594f4b36fc8b8aab8cab7736350421c619cec8e12e8975e87f7a99faa.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = -945349357;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1700910421)) % 6U)
        {
          case 0:
            this.Color = c;
            this.Current = this.Home = h;
            num1 = (int) num2 * -839979993 ^ 140201542;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 889972446 ^ 1691210026;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.Kind = p;
            num1 = (int) num2 * -176656207 ^ -1391988137;
            continue;
          case 5:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * -1113834847 ^ -184435872;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
      this.Id = ChessPiece.idd++;
      this.Kind = p;
      this.Color = c;
    }

    public string SpecialName
    {
      get
      {
        string specialName = ChessPiece.\u202B‌‎⁫‍​‫‫‪‫‏‍‭⁪​⁬‬‍‫⁭⁪​⁯‭⁭⁭‎⁪⁮‪‮⁬⁭⁭⁫⁬⁪‭‪⁮‮(\u003CModule\u003E.\u200F‮​⁫‍⁬⁪‪‏‍⁯⁫⁪⁭⁬‮‍‫‭⁫‮‬‭⁮‮‭⁪⁫⁫‭⁮⁬⁭⁪⁪‌‫‭‍⁭‮<string>(1024082824U), (object) this.Current.Name, (object) this.Kind);
label_1:
        int num1 = 1063922754;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 444863918)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1373713372 ^ -1932512596;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return specialName;
      }
    }

    static string \u202B‌‎⁫‍​‫‫‪‫‏‍‭⁪​⁬‬‍‫⁭⁪​⁯‭⁭⁭‎⁪⁮‪‮⁬⁭⁭⁫⁬⁪‭‪⁮‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
