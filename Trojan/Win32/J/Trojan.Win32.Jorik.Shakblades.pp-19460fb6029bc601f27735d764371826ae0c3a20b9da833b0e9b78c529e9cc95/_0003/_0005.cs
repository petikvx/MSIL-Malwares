// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Public Service, Version=6.0.240.7, Culture=neutral, PublicKeyToken=null
// MVID: FB6DF727-9CD8-4F53-ACDF-580EE570059D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Jorik.Shakblades.pp-19460fb6029bc601f27735d764371826ae0c3a20b9da833b0e9b78c529e9cc95.exe

using \u0001;
using \u0004;
using \u0005;
using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0003
{
  internal sealed class \u0005 : Control
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private Label \u0001 = new Label();
    private Image \u0001;
    private Icon \u0001;
    private Bitmap \u0001;
    private \u0005.\u0001 \u0001;
    private float \u0001 = 1f;
    private float \u0002 = 1f;

    [SpecialName]
    public void \u0003([In] \u0005.\u0001 obj0)
    {
      if (this.\u0001 == obj0)
        return;
      this.\u0001 = obj0;
      switch (this.\u0001)
      {
        case \u0005.\u0001.\u0002:
          this.\u0001 = \u0002.\u0003(\u0003.\u0005.\u0001(3197));
          break;
        case \u0005.\u0001.\u0003:
          this.\u0001 = \u0002.\u0003(\u0003.\u0005.\u0001(3210));
          break;
        default:
          this.\u0001 = (Bitmap) null;
          break;
      }
      \u0090\u0004.\u007E\u0083\u0008((object) this);
    }

    [SpecialName]
    public override string get_Text() => \u0013\u0006.\u007E\u0014\u0008((object) this.\u0001);

    [SpecialName]
    public override void set_Text([In] string obj0) => \u0093\u0004.\u007E\u0015\u0008((object) this.\u0001, obj0);

    protected override void Dispose([In] bool obj0)
    {
      if (obj0)
        goto label_7;
label_6:
      \u0001\u0006.\u001C\u0008((object) this, obj0);
      return;
label_7:
      if (this.\u0001 != null)
      {
        \u0090\u0004.\u007E\u008E\u000E((object) this.\u0001);
        this.\u0001 = (Icon) null;
      }
      if (this.\u0001 != null)
      {
        \u0090\u0004.\u007E\u0082\u000E((object) this.\u0001);
        this.\u0001 = (Image) null;
      }
      if (this.\u0001 != null)
      {
        \u0090\u0004.\u007E\u0082\u000E((object) this.\u0001);
        this.\u0001 = (Bitmap) null;
        goto label_6;
      }
      else
        goto label_6;
    }

    protected override void OnResize([In] EventArgs obj0)
    {
      \u001E\u0004.\u007E\u0087\u0008((object) this.\u0001, \u008B\u0005.\u0008\u0004(13f * this.\u0001), \u008B\u0005.\u0008\u0004(15f * this.\u0002), \u009F\u0002.\u0018\u0008((object) this) - \u008B\u0005.\u0008\u0004(69f * this.\u0001), \u009F\u0002.\u0004\u0008((object) this) - \u008B\u0005.\u0008\u0004(18f * this.\u0002));
      \u0096\u0005.\u0082\u0008((object) this, obj0);
    }

    protected override void ScaleCore([In] float obj0, [In] float obj1)
    {
      this.\u0001 = obj0;
      this.\u0002 = obj1;
      \u0006\u0004.\u0086\u0008((object) this, obj0, obj1);
      \u0096\u0005.\u007E\u0082\u0008((object) this, EventArgs.Empty);
    }

    protected override void OnPaint([In] PaintEventArgs obj0)
    {
      \u008D\u0004.\u0081\u0008((object) this, obj0);
      \u0082\u0005.\u007E\u0087\u000E((object) \u0012\u0006.\u007E\u008C\u0008((object) obj0), \u009C\u0003.\u009B\u000E(), 0, \u000F\u0003.\u009A\u0007((object) this).Height - 2, \u000F\u0003.\u009A\u0007((object) this).Width, \u000F\u0003.\u009A\u0007((object) this).Height - 2);
      \u0082\u0005.\u007E\u0087\u000E((object) \u0012\u0006.\u007E\u008C\u0008((object) obj0), \u009C\u0003.\u009C\u000E(), 0, \u000F\u0003.\u009A\u0007((object) this).Height - 1, \u000F\u0003.\u009A\u0007((object) this).Width, \u000F\u0003.\u009A\u0007((object) this).Height - 1);
      Rectangle rectangle = new Rectangle(\u000F\u0003.\u009A\u0007((object) this).Width - \u008B\u0005.\u0008\u0004(48f * this.\u0001), \u008B\u0005.\u0008\u0004(11f * this.\u0002), \u008B\u0005.\u0008\u0004(32f * this.\u0001), \u008B\u0005.\u0008\u0004(32f * this.\u0002));
      if (this.\u0001 != null)
      {
        \u009F\u0004.\u007E\u008A\u000E((object) \u0012\u0006.\u007E\u008C\u0008((object) obj0), this.\u0001, rectangle, new Rectangle(0, 0, 32, 32), GraphicsUnit.Pixel);
      }
      else
      {
        if (this.\u0001 == null)
          return;
        \u0097\u0005.\u007E\u0089\u000E((object) \u0012\u0006.\u007E\u008C\u0008((object) obj0), this.\u0001, rectangle);
        if (this.\u0001 == null)
          return;
        \u009F\u0004.\u007E\u008A\u000E((object) \u0012\u0006.\u007E\u008C\u0008((object) obj0), (Image) this.\u0001, new Rectangle(rectangle.Right - \u008B\u0005.\u0008\u0004(12f * this.\u0001), rectangle.Bottom - \u008B\u0005.\u0008\u0004(12f * this.\u0002), \u008B\u0005.\u0008\u0004(16f * this.\u0001), \u008B\u0005.\u0008\u0004(16f * this.\u0002)), new Rectangle(0, 0, 16, 16), GraphicsUnit.Pixel);
      }
    }

    protected override void OnFontChanged([In] EventArgs obj0)
    {
      try
      {
        \u007F\u0004.\u007E\u0002\u0008((object) this.\u0001, new Font(\u0099\u0003.\u007E\u0001\u0008((object) this), FontStyle.Bold));
        \u0096\u0005.\u007F\u0008((object) this, obj0);
      }
      catch
      {
      }
    }

    public \u0005()
    {
      try
      {
        \u0090\u0005.\u007E\u0011\u000E((object) this.\u0001, FlatStyle.System);
        \u007F\u0004.\u007E\u0002\u0008((object) this.\u0001, new Font(\u0099\u0003.\u007E\u0001\u0008((object) this), FontStyle.Bold));
      }
      catch
      {
      }
      \u008F\u0004.\u007E\u008A\u0008((object) \u0092\u0004.\u009B\u0007((object) this), (Control) this.\u0001);
      \u009F\u0005.\u007E\u0097\u0007((object) this, \u0088\u0003.\u009A\u000E());
      \u0001\u0006.\u0013\u0008((object) this, false);
      \u0095\u0005.\u007E\u009E\u0007((object) this, DockStyle.Top);
      \u009B\u0003.\u0005\u0008((object) this, 58);
      \u0018\u0003.\u0088\u0008((object) this, ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
      this.\u0001 = \u0006.\u0003();
      \u0096\u0005.\u007E\u0082\u0008((object) this, EventArgs.Empty);
    }

    public \u0005([In] string obj0)
      : this()
    {
      \u0093\u0004.\u007E\u0015\u0008((object) this.\u0001, obj0);
    }

    static \u0005() => \u0001.\u0003.\u0003();
  }
}
