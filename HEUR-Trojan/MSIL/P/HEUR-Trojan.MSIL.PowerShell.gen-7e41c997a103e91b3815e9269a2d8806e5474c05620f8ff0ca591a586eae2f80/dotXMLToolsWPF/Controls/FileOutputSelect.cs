// Decompiled with JetBrains decompiler
// Type: dotXMLToolsWPF.Controls.FileOutputSelect
// Assembly: LeaseMana, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 529A6AA6-AEB5-47F3-B86B-C5E3C5F9FA62
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-7e41c997a103e91b3815e9269a2d8806e5474c05620f8ff0ca591a586eae2f80.exe

using Microsoft.Win32;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace dotXMLToolsWPF.Controls
{
  public class FileOutputSelect : UserControl, IComponentConnector
  {
    internal TextBox tbOutputFilePath;
    private bool _contentLoaded;

    public FileOutputSelect() => this.InitializeComponent();

    public string OutputFilePath => this.tbOutputFilePath.Text;

    private void Button_Click(object sender, RoutedEventArgs e)
    {
      OpenFileDialog openFileDialog = new OpenFileDialog();
      openFileDialog.Filter = "CSV Files(*.txt,*.csv)|*.txt;*.csv";
      openFileDialog.CheckFileExists = true;
      openFileDialog.Multiselect = false;
      bool? nullable = openFileDialog.ShowDialog();
      bool flag = true;
      if (!(nullable.GetValueOrDefault() == flag & nullable.HasValue))
        return;
      this.tbOutputFilePath.Text = openFileDialog.FileName;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    public void InitializeComponent()
    {
      if (this._contentLoaded)
        return;
      this._contentLoaded = true;
      Application.LoadComponent((object) this, new Uri("/LeaseMana;component/controls/fileoutputselect.xaml", UriKind.Relative));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    void IComponentConnector.Connect(int connectionId, object target)
    {
      switch (connectionId)
      {
        case 1:
          this.tbOutputFilePath = (TextBox) target;
          break;
        case 2:
          ((ButtonBase) target).Click += new RoutedEventHandler(this.Button_Click);
          break;
        default:
          this._contentLoaded = true;
          break;
      }
    }
  }
}
