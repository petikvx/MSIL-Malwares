// Decompiled with JetBrains decompiler
// Type: Uٷأ嵱ٕ.΅cOŚ㠰
// Assembly: iJMJnUDAnLMGBkvrphkwZ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BCFE5CC-61DE-4CD2-8DAF-2FBF230839CD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-3faa06bbade229a8aa4255134ad2bb94b129e470fbfc5ff6863adf68bc0280b9.exe

using \uFFFD콪\uFFFDKߟ;
using Bϒzׁۚ;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Uٷأ嵱ٕ
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  internal sealed class \u0385cOŚ㠰
  {
    private static readonly \u0385cOŚ㠰.ThreadSafeObjectProvider<A\uFFFDiΑƚ> \u05B5鈇\uFFFD\uFFFD\uFFFD = new \u0385cOŚ㠰.ThreadSafeObjectProvider<A\uFFFDiΑƚ>();
    private static readonly \u0385cOŚ㠰.ThreadSafeObjectProvider<쐬\uFFFD뫆לс> \uFFFDֵ\uFFFDʭ߂ = new \u0385cOŚ㠰.ThreadSafeObjectProvider<쐬\uFFFD뫆לс>();
    private static readonly \u0385cOŚ㠰.ThreadSafeObjectProvider<User> \uFFFD\u05C9ŎƉɇ = new \u0385cOŚ㠰.ThreadSafeObjectProvider<User>();
    private static \u0385cOŚ㠰.ThreadSafeObjectProvider<\u0385cOŚ㠰.MyForms> ɇ\u0609\uFFFDչå = new \u0385cOŚ㠰.ThreadSafeObjectProvider<\u0385cOŚ㠰.MyForms>();
    private static readonly \u0385cOŚ㠰.ThreadSafeObjectProvider<\u0385cOŚ㠰.MyWebServices> J\uFFFD盀ή꾯 = new \u0385cOŚ㠰.ThreadSafeObjectProvider<\u0385cOŚ㠰.MyWebServices>();

    [HelpKeyword("My.Computer")]
    internal static A\uFFFDiΑƚ \u00ABіבՄ\u07B4
    {
      [DebuggerHidden] get => \u0385cOŚ㠰.\u05B5鈇\uFFFD\uFFFD\uFFFD.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static 쐬\uFFFD뫆לс \uF0B9\uFFFD\uFFFDϘ븤
    {
      [DebuggerHidden] get => \u0385cOŚ㠰.\uFFFDֵ\uFFFDʭ߂.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User Ԍ\uDA2C\uDF63ŧٗ
    {
      [DebuggerHidden] get => \u0385cOŚ㠰.\uFFFD\u05C9ŎƉɇ.GetInstance;
    }

    [HelpKeyword("My.Forms")]
    internal static \u0385cOŚ㠰.MyForms \uFFFDɢKϱ\u02F3
    {
      [DebuggerHidden] get => \u0385cOŚ㠰.ɇ\u0609\uFFFDչå.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static \u0385cOŚ㠰.MyWebServices \u0097ל̳Ŵ\uFFFD
    {
      [DebuggerHidden] get => \u0385cOŚ㠰.J\uFFFD盀ή꾯.GetInstance;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    internal sealed class MyForms
    {
      [ThreadStatic]
      private static Hashtable m_FormBeingCreated;

      [DebuggerHidden]
      private static T Create__Instance__<T>(T Instance) where T : Form, new()
      {
        if ((object) Instance != null && !Instance.IsDisposed)
          return Instance;
        if (\u0385cOŚ㠰.MyForms.m_FormBeingCreated != null)
        {
          if (\u0385cOŚ㠰.MyForms.m_FormBeingCreated.ContainsKey((object) typeof (T)))
            throw new InvalidOperationException(Utils.GetResourceString("WinForms_RecursiveFormCreate"));
        }
        else
          \u0385cOŚ㠰.MyForms.m_FormBeingCreated = new Hashtable();
        \u0385cOŚ㠰.MyForms.m_FormBeingCreated.Add((object) typeof (T), (object) null);
        TargetInvocationException invocationException;
        try
        {
          return new T();
        }
        catch (TargetInvocationException ex) when (
        {
          // ISSUE: unable to correctly present filter
          ProjectData.SetProjectError((Exception) ex);
          invocationException = ex;
          if (invocationException.InnerException != null)
          {
            SuccessfulFiltering;
          }
          else
            throw;
        }
        )
        {
          throw new InvalidOperationException(Utils.GetResourceString("WinForms_SeeInnerException", invocationException.InnerException.Message), invocationException.InnerException);
        }
        finally
        {
          \u0385cOŚ㠰.MyForms.m_FormBeingCreated.Remove((object) typeof (T));
        }
      }

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) where T : Form
      {
        instance.Dispose();
        instance = default (T);
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyForms()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal new System.Type GetType() => typeof (\u0385cOŚ㠰.MyForms);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class MyWebServices
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new System.Type GetType() => typeof (\u0385cOŚ㠰.MyWebServices);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new() => (object) instance == null ? new T() : instance;

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) \u0385cOŚ㠰.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            \u0385cOŚ㠰.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return \u0385cOŚ㠰.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}
