// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportingService2
// Assembly: 5555, Version=0.0.0.0, Culture=neutral, PublicKeyToken=f1fbbd7db53bfdb4
// MVID: 0D11B329-2752-44F3-ACE5-4122455C2392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.arpc-0c7d5e5565ff7304f705e1aeb4d7e4e31ffcea64aa2ae579695a932615bbef73.exe

using \u0008;
using System;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "ReportingServiceSoap", Namespace = "http://www.smartassembly.com/webservices/Reporting/")]
  internal sealed class ReportingService2 : SoapHttpClientProtocol
  {
    public ReportingService2(string serverURL)
    {
      try
      {
        \u001E\u0005.\u0095\u000F((object) this, \u0088\u0003.\u009D(serverURL, "Reporting.asmx"));
        \u0094\u0005.\u0096\u000F((object) this, 180000);
      }
      catch (Exception ex)
      {
        string str = serverURL;
        \u0005.\u0002(ex, (object) this, (object) str);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/Reporting/UploadReport2")]
    public string UploadReport2(
      string licenseID,
      [XmlElement(DataType = "base64Binary")] byte[] data,
      string email,
      string appFriendlyName,
      string buildFriendlyNumber)
    {
      object[] parameters;
      try
      {
        object[] objArray = new object[5];
        if (true)
          parameters = objArray;
        parameters[0] = (object) licenseID;
        parameters[1] = (object) data;
        parameters[2] = (object) email;
        parameters[3] = (object) appFriendlyName;
        parameters[4] = (object) buildFriendlyNumber;
        return (string) this.Invoke(nameof (UploadReport2), parameters)[0];
      }
      catch (Exception ex)
      {
        object[] objArray = parameters;
        string str1 = licenseID;
        byte[] numArray = data;
        string str2 = email;
        string str3 = appFriendlyName;
        string str4 = buildFriendlyNumber;
        \u0005.\u0002(ex, (object) objArray, (object) this, (object) str1, (object) numArray, (object) str2, (object) str3, (object) str4);
        throw;
      }
    }
  }
}
