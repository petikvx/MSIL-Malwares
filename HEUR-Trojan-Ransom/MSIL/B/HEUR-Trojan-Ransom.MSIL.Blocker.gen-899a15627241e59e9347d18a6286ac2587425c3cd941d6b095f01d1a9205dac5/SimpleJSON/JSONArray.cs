// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: RuntimeParameterIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E46F8FBF-E963-420D-9D24-515F2113904E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-899a15627241e59e9347d18a6286ac2587425c3cd941d6b095f01d1a9205dac5.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1968469087;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1174108132)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 1813007203 ^ 319771803;
              continue;
            case 1:
              num1 = (int) num2 * -1581579188 ^ 268578825;
              continue;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              goto label_1;
            case 5:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1301854902 ^ 1466009964;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1899846439 ^ 1644307517;
              continue;
            case 7:
              jsonNode = this.m_List[aIndex];
              num1 = 1236856322;
              continue;
            case 8:
              int num4 = !flag ? 987203103 : (num4 = 1399700351);
              num1 = num4 ^ (int) num2 * 1916582999;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 1140941578;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1481729524;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1766813861)) % 8U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              this.m_List[aIndex] = value;
              num1 = -1790928083;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1962870797 ^ -2035939080;
              continue;
            case 4:
              goto label_3;
            case 5:
              this.m_List.Add(value);
              num1 = (int) num2 * 445944349 ^ -824868679;
              continue;
            case 6:
              num1 = (int) num2 * -1231555639 ^ 799373273;
              continue;
            case 7:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1899213897 ^ -1632100110;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_13;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -1722175890 : (num4 = -616194198);
        }
label_3:
        return;
label_13:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 113481794;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1296505353)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -545103187 ^ 1095807600;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 535718985;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2008385572)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * -1266595378 ^ -1928880947;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1434655008;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -957477928)) % 3U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1861122660 ^ -1796231897;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 2072926819;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 503502941)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1455993348 ^ -891527321;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = -1248089381;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1620690376)) % 9U)
        {
          case 0:
            num1 = (int) num2 * 217702989 ^ 1782927064;
            continue;
          case 2:
            num1 = (int) num2 * 1700358906 ^ -574190558;
            continue;
          case 3:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 2099468483 ^ 1535831044;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 505635718 ^ -2091350608;
            continue;
          case 6:
            goto label_3;
          case 7:
            jsonNode1 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -830423531;
            continue;
          case 8:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1143269509 ^ -2108866416;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      int num3 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_12:
      return jsonNode2;
label_4:
      num3 = 1;
label_5:
      num1 = num3 == 0 ? -697730674 : (num1 = -280784534);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 1659376810;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1946576504)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * 1775722178 ^ 1796191995;
            continue;
          case 3:
            num1 = (int) num2 * 79574860 ^ 1495818265;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -1360933025;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1031531979)) % 4U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 982904607 ^ -437639494;
              continue;
            case 2:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * -676577553 ^ 1974730606;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_14;
label_1:
        int num2 = -150118311;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -1486722033)) % 21U)
          {
            case 0:
              enumerator1 = false;
              num2 = -1280951122;
              continue;
            case 1:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -472111832 ^ -230590568;
              continue;
            case 2:
              num2 = (int) num3 * 943051467 ^ 1962145575;
              continue;
            case 3:
              enumerator = this.m_List.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -4877329 ^ 338841932;
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 178852400 ^ -1444476710;
              continue;
            case 6:
              enumerator = new List<JSONNode>.Enumerator();
              enumerator1 = false;
              num2 = (int) num3 * 420446606 ^ -1116625790;
              continue;
            case 8:
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = -2090707466;
              continue;
            case 9:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? -1665950964 : (num4 = -1849955759);
              continue;
            case 10:
            case 11:
              goto label_14;
            case 12:
              int num5;
              num2 = num5 = num1 == 1 ? -511454169 : (num5 = -379445713);
              continue;
            case 13:
              goto label_1;
            case 14:
              goto label_12;
            case 16:
              num2 = (int) num3 * 436475453 ^ 1453900092;
              continue;
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * -404092652 ^ 2060405256;
              continue;
            case 18:
              num2 = (int) num3 * -954529738 ^ -746103974;
              continue;
            case 19:
              N = enumerator.Current;
              num2 = -252406858;
              continue;
            case 20:
              num2 = (int) num3 * 1562975691 ^ 197604870;
              continue;
            default:
              goto label_20;
          }
        }
label_12:
        enumerator1 = true;
        goto label_20;
label_14:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = -114025094;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_20:
      return enumerator1;
    }

    public override string ToString()
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_5:
        int num1 = !enumerator.MoveNext() ? 29415949 : (num1 = 164190132);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 839058533)) % 8U)
          {
            case 1:
              current = enumerator.Current;
              num1 = 252466569;
              continue;
            case 2:
              int num3 = !flag ? -15256427 : (num3 = -1458512442);
              num1 = num3 ^ (int) num2 * 551416435;
              continue;
            case 3:
              goto label_5;
            case 4:
              flag = JSONArray.\u202D‫‎⁭‬​‮‏‍‌‬⁬‭‫‪‬⁭‌⁬‫‍⁪​⁭‍‎‫‎‎‬‬⁫⁬‌‏⁬‌‎‪‎‮(str1) > 2;
              num1 = (int) num2 * 2146373777 ^ 859187491;
              continue;
            case 5:
              str1 = JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(str1, ", ");
              num1 = (int) num2 * 721523765 ^ 873780394;
              continue;
            case 6:
              str1 = JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(str1, JSONArray.\u202C‫⁯‏⁮‪‪​⁫‪‍⁭‮⁬‪⁯⁪‪⁯⁬‭‪‎‭‪‏‭⁯⁬⁯⁯‮‪⁪⁭‫‫⁫⁯⁮‮((object) current));
              num1 = 820661534;
              continue;
            case 7:
              num1 = 164190132;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = 1583524522;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 839058533)) % 3U)
          {
            case 0:
              goto label_11;
            case 1:
              num4 = (int) num5 * -1261484584 ^ -1477293627;
              continue;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      string str2 = JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(str1, " ]");
label_16:
      int num6 = 763081634;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 839058533)) % 3U)
        {
          case 0:
            goto label_16;
          case 2:
            str3 = str2;
            num6 = (int) num7 * 1388264099 ^ 1638699550;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_4:
        int num1 = enumerator.MoveNext() ? -448566856 : (num1 = -769450308);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1571961751)) % 10U)
          {
            case 0:
              str1 = JSONArray.\u206E‌‌‭​⁮‏⁯‍‭⁫‏⁫‬⁬⁬‬⁭‭⁮​‮‬⁭⁫‌⁮‫‏‬⁫‏⁬⁯‬⁫⁮⁮‏‮(str1, "\n", aPrefix, "   ");
              num1 = -756962665;
              continue;
            case 1:
              goto label_4;
            case 2:
              num1 = (int) num2 * -27400019 ^ 1130246898;
              continue;
            case 4:
              int num3 = flag ? -1502441602 : (num3 = -1282871395);
              num1 = num3 ^ (int) num2 * 985807647;
              continue;
            case 5:
              num1 = -448566856;
              continue;
            case 6:
              flag = JSONArray.\u202D‫‎⁭‬​‮‏‍‌‬⁬‭‫‪‬⁭‌⁬‫‍⁪​⁭‍‎‫‎‎‬‬⁫⁬‌‏⁬‌‎‪‎‮(str1) > 3;
              num1 = (int) num2 * -26018508 ^ -1987088795;
              continue;
            case 7:
              current = enumerator.Current;
              num1 = -1547843255;
              continue;
            case 8:
              str1 = JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(str1, current.ToString(JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(aPrefix, "   ")));
              num1 = (int) num2 * 173640835 ^ -1870127091;
              continue;
            case 9:
              str1 = JSONArray.\u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮(str1, ", ");
              num1 = (int) num2 * -1038293833 ^ 1019759660;
              continue;
            default:
              goto label_13;
          }
        }
      }
label_13:
      string str2 = JSONArray.\u206E‌‌‭​⁮‏⁯‍‭⁫‏⁫‬⁬⁬‬⁭‭⁮​‮‬⁭⁫‌⁮‫‏‬⁫‏⁬⁯‬⁫⁮⁮‏‮(str1, "\n", aPrefix, "]");
label_14:
      int num4 = -2005957690;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -1571961751)) % 3U)
        {
          case 1:
            str3 = str2;
            num4 = (int) num5 * 1008674523 ^ 1875584005;
            continue;
          case 2:
            goto label_14;
          default:
            goto label_17;
        }
      }
label_17:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u202A‭​⁯‪⁫⁭‍⁭‮​‎⁯‭‏⁫​‏‎​‍‪⁯‪‭‭⁮‌​‫‮‌⁫‬‎‌‭‭⁫⁪‮(aWriter, (byte) 1);
label_1:
      int num1 = -290484001;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -411629978)) % 8U)
        {
          case 0:
            index = 0;
            num1 = (int) num2 * 1441205692 ^ -1985561939;
            continue;
          case 1:
            JSONArray.\u202E⁪⁫⁫‌‪‭‏⁬​‌⁪⁪⁫⁭⁯‏‬‪⁬‫‍⁭​⁮⁭⁮⁯‭⁫‏‏‫‬‪‪​⁫⁬‬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -717868736 ^ 474125934;
            continue;
          case 2:
            goto label_1;
          case 3:
            int num3;
            num1 = num3 = index < this.m_List.Count ? -1460490687 : (num3 = -1292560685);
            continue;
          case 4:
            num1 = (int) num2 * 43968517 ^ 2064209556;
            continue;
          case 5:
            goto label_3;
          case 6:
            ++index;
            num1 = (int) num2 * -351138471 ^ 677231155;
            continue;
          case 7:
            this.m_List[index].Serialize(aWriter);
            num1 = -1474418230;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    static int \u202D‫‎⁭‬​‮‏‍‌‬⁬‭‫‪‬⁭‌⁬‫‍⁪​⁭‍‎‫‎‎‬‬⁫⁬‌‏⁬‌‎‪‎‮([In] string obj0) => obj0.Length;

    static string \u206B‮⁪⁯‮‏⁯‫‭‫⁯‪‫‏⁭‫‌‍‪⁬‮‍​⁪⁬⁬⁭⁬⁯‍⁫‌⁮‭⁯⁫⁪‭⁪⁮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C‫⁯‏⁮‪‪​⁫‪‍⁭‮⁬‪⁯⁪‪⁯⁬‭‪‎‭‪‏‭⁯⁬⁯⁯‮‪⁪⁭‫‫⁫⁯⁮‮([In] object obj0) => obj0.ToString();

    static string \u206E‌‌‭​⁮‏⁯‍‭⁫‏⁫‬⁬⁬‬⁭‭⁮​‮‬⁭⁫‌⁮‫‏‬⁫‏⁬⁯‬⁫⁮⁮‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202A‭​⁯‪⁫⁭‍⁭‮​‎⁯‭‏⁫​‏‎​‍‪⁯‪‭‭⁮‌​‫‮‌⁫‬‎‌‭‭⁫⁪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202E⁪⁫⁫‌‪‭‏⁬​‌⁪⁪⁫⁭⁯‏‬‪⁬‫‍⁭​⁮⁭⁮⁯‭⁫‏‏‫‬‪‪​⁫⁬‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
