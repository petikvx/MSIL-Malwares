// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: CustomQueryInterfaceMo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B293447-7555-427F-9A9F-AB127E35E000
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d42aac0420fddf3828862d0a9a1e79708beccbc282bf11d5b45daa35c47ba73f.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -77116141;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1111443184)) % 6U)
          {
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1004599231 ^ -143264087;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 3:
              jsonNode = this.m_List[aIndex];
              num1 = -902426040;
              continue;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1140040400 ^ -1178139976;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -1903857851 : (num4 = -1016350403);
        }
label_10:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 90456990;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 410642773)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1194933142 ^ -203787672;
              continue;
            case 2:
              this.m_List[aIndex] = value;
              num1 = 731180322;
              continue;
            case 3:
              goto label_3;
            case 4:
              this.m_List.Add(value);
              num1 = (int) num2 * -219803579 ^ 862506;
              continue;
            case 5:
              goto label_4;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:
        return;
label_4:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 != 0 ? 726492453 : (num1 = 838698819);
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1683159945;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 456404676)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -623778778 ^ -1829324689;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1610811812 ^ -195915684;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1593203571;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1996659667)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * -450457987 ^ 762408462;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 2094863374;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 509095399)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * 726659186 ^ -388575213;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      this.m_List.Add(aItem);
label_1:
      int num1 = 1089969222;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 149346926)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -320695825 ^ -1519503112;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_9;
label_1:
      int num1 = -339237577;
label_2:
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1560642347)) % 8U)
        {
          case 0:
            jsonNode1 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = -122802879;
            continue;
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1476148869 ^ -431860795;
            continue;
          case 2:
            goto label_8;
          case 4:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1655471909 ^ -771521049;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -1078985338 ^ 774801058;
            continue;
          case 7:
            int num3 = flag ? 1392559662 : (num3 = 673768511);
            num1 = num3 ^ (int) num2 * -1115719842;
            continue;
          default:
            goto label_11;
        }
      }
label_8:
      int num4 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_10;
label_11:
      return jsonNode2;
label_9:
      num4 = 1;
label_10:
      flag = num4 != 0;
      num1 = -704299718;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 654636130;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 616965323)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -429779745 ^ 437810418;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 childs = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 1773845613;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1273421908)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 314674404 ^ -2125881831;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -215732182;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1284184491)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -75248383 ^ -1763433258;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -175062066 : (num3 = -293957038);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1284184491)) % 7U)
          {
            case 0:
              str1 = JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(str1, ", ");
              num3 = (int) num4 * 1067379621 ^ -1934736159;
              continue;
            case 1:
              int num5 = JSONArray.\u200E⁪‮‬⁫‏‍⁬​‌⁭‌⁪‌⁭⁫⁫​⁫​‌‭⁬⁬‎‮‭‬⁬​‏‏‏‌⁮‪‌⁪‫‍‮(str1) > 2 ? -244097172 : (num5 = -14909916);
              num3 = num5 ^ (int) num4 * -1528179198;
              continue;
            case 2:
              goto label_12;
            case 4:
              current = enumerator.Current;
              num3 = -1497722908;
              continue;
            case 5:
              str1 = JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(str1, JSONArray.\u200E‭‏​⁯⁮‌⁫⁪‏‏⁬​‏⁪‌⁪‮⁫‏⁭‌⁯⁫⁬‍⁯⁬‮‎‏‪​‭⁮⁪⁬‏⁬‬‮((object) current));
              num3 = -786375474;
              continue;
            case 6:
              num3 = -293957038;
              continue;
            default:
              goto label_14;
          }
        }
      }
label_14:
      string str2 = JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(str1, " ]");
label_15:
      int num6 = -1077265980;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1284184491)) % 4U)
        {
          case 0:
            goto label_15;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1490145006 ^ 2092230905;
            continue;
          case 2:
            num6 = (int) num7 * 1133557326 ^ 2007627690;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_4:
        int num1 = enumerator.MoveNext() ? -208209835 : (num1 = -1662058795);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1998930870)) % 9U)
          {
            case 0:
              num1 = -208209835;
              continue;
            case 1:
              flag = JSONArray.\u200E⁪‮‬⁫‏‍⁬​‌⁭‌⁪‌⁭⁫⁫​⁫​‌‭⁬⁬‎‮‭‬⁬​‏‏‏‌⁮‪‌⁪‫‍‮(str1) > 3;
              num1 = (int) num2 * -1019134727 ^ 830043359;
              continue;
            case 2:
              num1 = (int) num2 * 101048712 ^ -1825117911;
              continue;
            case 3:
              str1 = JSONArray.\u206E‌‍‌⁫‏‎⁭⁭​‌⁭‬⁭‮‏‍‌‍‎​‭‎‪‪‫‍‏‮⁫‏⁯⁯‍‫‌‬⁭‍⁮‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(str1, current.ToString(JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(aPrefix, "   ")));
              num1 = -1773422193;
              continue;
            case 4:
              current = enumerator.Current;
              num1 = -1858953586;
              continue;
            case 5:
              goto label_4;
            case 7:
              int num3 = !flag ? 1042276375 : (num3 = 1533796071);
              num1 = num3 ^ (int) num2 * -228293878;
              continue;
            case 8:
              str1 = JSONArray.\u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮(str1, ", ");
              num1 = (int) num2 * -1677511959 ^ 1746014306;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONArray.\u206E‌‍‌⁫‏‎⁭⁭​‌⁭‬⁭‮‏‍‌‍‎​‭‎‪‪‫‍‏‮⁫‏⁯⁯‍‫‌‬⁭‍⁮‮(str1, "\n", aPrefix, "]");
label_13:
      int num4 = -840802085;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -1998930870)) % 3U)
        {
          case 0:
            goto label_13;
          case 1:
            num4 = (int) num5 * -1931070325 ^ 1330457094;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206E‫‏‮‬⁪‎‎‫‫⁫‍⁫‪‏‎‏⁭⁬‏‬‌‪‪‪‪⁬⁭⁬‮⁬‮​⁬‎⁭⁭‎⁫‍‮(aWriter, (byte) 1);
label_1:
      int num1 = -1165055603;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1979631449)) % 10U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3;
            num1 = num3 = index >= this.m_List.Count ? -736425642 : (num3 = -849958534);
            continue;
          case 2:
            ++index;
            num1 = (int) num2 * 812873196 ^ 1988069206;
            continue;
          case 3:
            num1 = (int) num2 * -1174851750 ^ -1427217021;
            continue;
          case 4:
            index = 0;
            num1 = (int) num2 * 1761220408 ^ -1514274498;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * -13096484 ^ 1546053810;
            continue;
          case 7:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -936711334 ^ 1389552471;
            continue;
          case 8:
            JSONArray.\u206E‪‭⁮‭‏‫​‏‍⁭⁫⁭‮⁫‏‎‍‍‪⁭‏‪‍‍‬⁮‪‏‭‎‏‌‎‌‬‭⁪⁫⁬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 2121971547 ^ 1804960581;
            continue;
          case 9:
            num1 = -1560886566;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -1309135037;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -843886968)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1111671736 ^ -692008433;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u200E⁪‮‬⁫‏‍⁬​‌⁭‌⁪‌⁭⁫⁫​⁫​‌‭⁬⁬‎‮‭‬⁬​‏‏‏‌⁮‪‌⁪‫‍‮([In] string obj0) => obj0.Length;

    static string \u200D​​‎‎‎⁬‭‏⁯⁬⁪‪‫‭⁬‮‌⁮‫‫⁯‍‭​‭‏⁫‍‪‪‬‏‫‪‍⁭⁬‪‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200E‭‏​⁯⁮‌⁫⁪‏‏⁬​‏⁪‌⁪‮⁫‏⁭‌⁯⁫⁬‍⁯⁬‮‎‏‪​‭⁮⁪⁬‏⁬‬‮([In] object obj0) => obj0.ToString();

    static string \u206E‌‍‌⁫‏‎⁭⁭​‌⁭‬⁭‮‏‍‌‍‎​‭‎‪‪‫‍‏‮⁫‏⁯⁯‍‫‌‬⁭‍⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E‫‏‮‬⁪‎‎‫‫⁫‍⁫‪‏‎‏⁭⁬‏‬‌‪‪‪‪⁬⁭⁬‮⁬‮​⁬‎⁭⁭‎⁫‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E‪‭⁮‭‏‫​‏‍⁭⁫⁭‮⁫‏‎‍‍‪⁭‏‪‍‍‬⁮‪‏‭‎‏‌‎‌‬‭⁪⁫⁬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
