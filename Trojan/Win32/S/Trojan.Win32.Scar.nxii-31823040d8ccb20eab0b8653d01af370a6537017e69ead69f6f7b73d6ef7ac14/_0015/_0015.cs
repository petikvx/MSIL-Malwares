// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0003;
using \u0012;
using \u0014;
using \u0015;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace \u0015
{
  internal sealed class \u0015 : \u0005.\u0005
  {
    private static readonly \u0004<Type, \u0007> \u0001;
    [NonSerialized]
    internal static GetString \u0019;

    public override void \u0001([In] JsonWriter obj0, [In] object obj1, [In] \u0016.\u0003 obj2)
    {
label_0:
      \u0007 obj3 = \u0015.\u0015.\u0001.\u0001(\u0001\u0002.\u007E\u0017\u0004(obj1));
      DefaultContractResolver contractResolver = obj2.\u0001() as DefaultContractResolver;
      if (true)
        goto label_11;
label_2:
      Type type = \u0006.\u0001(obj3, \u0015.\u0015.\u0019(13813));
      object obj4;
      while (true)
      {
        \u0006.\u0001(obj0, obj2, type, obj4);
        if (true)
        {
          obj0.\u0002(contractResolver != null ? contractResolver.\u0003(\u0015.\u0015.\u0019(13818)) : \u0015.\u0015.\u0019(13818));
          if (true)
          {
            if (true)
            {
              obj4 = \u0006.\u0001(obj3, obj1, \u0015.\u0015.\u0019(13818));
              break;
            }
            goto label_0;
          }
          else
            goto label_9;
        }
      }
      type = \u0006.\u0001(obj3, \u0015.\u0015.\u0019(13818));
label_9:
      \u0006.\u0001(obj0, obj2, type, obj4);
      do
      {
        obj0.\u0011();
      }
      while (false);
      return;
label_11:
      obj0.\u0002();
      obj0.\u0002(contractResolver != null ? contractResolver.\u0003(\u0015.\u0015.\u0019(13813)) : \u0015.\u0015.\u0019(13813));
      obj4 = \u0006.\u0001(obj3, obj1, \u0015.\u0015.\u0019(13813));
      goto label_2;
    }

    public override object \u0001([In] \u0007 obj0, [In] Type obj1, [In] object obj2, [In] \u0016.\u0003 obj3)
    {
      object obj4;
      object obj5;
      int num1;
      if (obj0.\u0001() != JsonToken.Null)
      {
        obj4 = (object) null;
        obj5 = (object) null;
        \u0006.\u0001(obj0);
        num1 = \u0006.\u0001(obj1) ? 1 : 0;
      }
      else
        goto label_14;
label_4:
      Type type = num1 != 0 ? \u0099\u0002.\u001F\u0006(obj1) : obj1;
      \u0007 obj6 = \u0015.\u0015.\u0001.\u0001(type);
      while (obj0.\u0001() == JsonToken.PropertyName)
      {
        string str = \u0001.\u007E\u0001(obj0.\u0001());
        if (\u008E\u0002.\u0007\u0006(str, \u0015.\u0015.\u0019(13813), StringComparison.OrdinalIgnoreCase))
        {
          \u0006.\u0001(obj0);
          obj4 = \u0006.\u0001(obj3, obj0, \u0006.\u0001(obj6, \u0015.\u0015.\u0019(13813)));
        }
        else if (true)
        {
          if (\u008E\u0002.\u0007\u0006(str, \u0015.\u0015.\u0019(13818), StringComparison.OrdinalIgnoreCase))
          {
            \u0006.\u0001(obj0);
            obj5 = \u0006.\u0001(obj3, obj0, \u0006.\u0001(obj6, \u0015.\u0015.\u0019(13818)));
          }
          else
            \u0006.\u0001(obj0);
        }
        \u0006.\u0001(obj0);
      }
      return obj6.\u0001()(new object[2]{ obj4, obj5 });
label_14:
      int num2 = \u0006.\u0001(obj1) ? 1 : 0;
      if (true)
      {
        if (num2 != 0)
          return (object) null;
        throw \u0006.\u0001(obj0, \u0015.\u0015.\u0019(27992));
      }
      num1 = num2;
      goto label_4;
    }

    public override bool \u0001([In] Type obj0)
    {
      int num1 = \u0006.\u0001(obj0) ? 1 : 0;
      if (true)
      {
        if (num1 == 0)
          goto label_11;
label_2:
        Type type1 = \u0099\u0002.\u001F\u0006(obj0);
        goto label_12;
label_11:
        type1 = obj0;
label_12:
        Type type2 = type1;
        int num2 = \u000E.\u000E(type2) ? 1 : 0;
        if (true)
        {
          if (num2 != 0)
          {
            if (true)
              num2 = \u000E.\u0003(type2) ? 1 : 0;
            else
              goto label_2;
          }
          else
            goto label_9;
        }
        if (num2 != 0)
        {
          // ISSUE: type reference
          return (object) \u0001\u0002.\u007E\u001E\u0004((object) type2) == (object) \u0004\u0002.\u0084\u0004(__typeref (KeyValuePair<,>));
        }
label_9:
        num1 = 0;
      }
      return num1 != 0 ? num1 != 0 : num1 != 0;
    }

    static \u0015()
    {
      Strings.CreateGetStringDelegate(typeof (\u0015.\u0015));
      \u0015.\u0015.\u0001 = new \u0004<Type, \u0007>(new Func<Type, \u0007>(\u0006.\u0001));
    }
  }
}
