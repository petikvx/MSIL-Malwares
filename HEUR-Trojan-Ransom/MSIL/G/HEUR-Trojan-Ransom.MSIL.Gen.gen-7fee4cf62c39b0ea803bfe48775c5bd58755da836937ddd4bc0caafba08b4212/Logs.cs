// Decompiled with JetBrains decompiler
// Type: NitroRansomware.Logs
// Assembly: NitroRansomware, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C989A13D-5F3F-4320-BD02-9CABC445FF12
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Gen.gen-7fee4cf62c39b0ea803bfe48775c5bd58755da836937ddd4bc0caafba08b4212.exe

using System;
using System.IO;

namespace NitroRansomware
{
  internal class Logs
  {
    private string save;
    private string filename;
    private string config;
    private int type;

    public Logs(string configType, int outType)
    {
      this.save = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory);
      this.filename = "\\logs.txt";
      this.config = configType;
      this.type = outType;
    }

    private void Write(string append, string message)
    {
      if (this.type == 1)
      {
        using (StreamWriter streamWriter = File.AppendText(this.save + this.filename))
        {
          string str = string.Format("{0} {1} - ", (object) DateTime.Now.ToString("[hh:mm:ss]"), (object) append);
          streamWriter.Write(str + message);
          streamWriter.Write("\n");
        }
      }
      else if (this.type == 0)
      {
        Console.Write(string.Format("{0} {1} - ", (object) DateTime.Now.ToString("[hh:mm:ss]"), (object) append) + message);
        Console.Write("\n");
      }
      else
      {
        using (StreamWriter streamWriter = File.AppendText(this.save + this.filename))
        {
          string str = string.Format("{0} {1} - ", (object) DateTime.Now.ToString("[hh:mm:ss]"), (object) append);
          streamWriter.Write(str + message);
          streamWriter.Write("\n");
        }
        Console.Write(string.Format("{0} {1} - ", (object) DateTime.Now.ToString("[hh:mm:ss]"), (object) append) + message);
        Console.Write("\n");
      }
    }

    public void Debug(string message)
    {
      if (!(this.config == "DEBUG"))
        return;
      this.Write("DEBUG", message);
    }

    public void Info(string message)
    {
      if (this.config == "DEBUG")
      {
        this.Write("INFO", message);
      }
      else
      {
        if (!(this.config == "INFO"))
          return;
        this.Write("INFO", message);
      }
    }

    public void Warning(string message)
    {
      if (!(this.config != "ERROR"))
        return;
      this.Write("WARNING", message);
    }

    public void Error(string message) => this.Write("ERROR", message);
  }
}
