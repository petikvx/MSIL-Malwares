// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: LoadHi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 984E9D2E-DA60-4984-B27B-15EC3C1BAA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-5f4b796f8ee524790172ed29cc21d32e43d347e3c306781f420d7844e0a776c9.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = -926823137;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -212363428)) % 6U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 1524671356 ^ 1286981399;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -695163436;
              continue;
            case 2:
              num1 = (int) num2 * -800468749 ^ 1119977743;
              continue;
            case 3:
              int num3 = !flag ? -506955280 : (num3 = -1081518283);
              num1 = num3 ^ (int) num2 * -844824157;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1824609295;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -629402051)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -149402547 ^ 1469154793;
              continue;
            case 1:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1665463329 ^ 64061618;
              continue;
            case 2:
              goto label_3;
            case 3:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 261086441 ^ -1729115661;
              continue;
            case 4:
              int num3 = flag ? -1020679949 : (num3 = -1150809354);
              num1 = num3 ^ (int) num2 * -1042374489;
              continue;
            case 5:
              goto label_1;
            case 6:
              this.m_Dict.Add(aKey, value);
              num1 = -1130602678;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = -1233380737;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -39867000)) % 7U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = -1102255637;
              continue;
            case 1:
              int num3 = !flag ? -190054000 : (num3 = -1126491098);
              num1 = num3 ^ (int) num2 * -392082336;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -674657181 ^ -1051312236;
              continue;
            case 3:
              goto label_6;
            case 4:
              num1 = (int) num2 * 884761674 ^ -895810185;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_6:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_8;
label_10:
        return jsonNode;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = -1920598743;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 734505950;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1123027571)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_4;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -1016670543 ^ -421618914;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:
        return;
label_4:
        int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 == 0 ? 1089288141 : (num1 = 128020144);
        goto label_2;
      }
    }

    public override int Count => this.m_Dict.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
      bool flag1 = !JSONClass.\u206F‍​‭⁭‪‭‍⁯‫⁯⁯‏​‬⁮​‪⁫⁮⁬​‭⁮⁭‎‮‬‮‌⁫‪‪‍⁬⁫‌​‪⁮‮(aKey);
label_1:
      int num1 = -1661614664;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -776224961)) % 14U)
        {
          case 0:
            flag2 = this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1151743918 ^ -55987502;
            continue;
          case 1:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -124917863;
            continue;
          case 2:
            num1 = (int) num2 * 567079955 ^ 569182648;
            continue;
          case 3:
            int num3 = flag2 ? -389129916 : (num3 = -1524580817);
            num1 = num3 ^ (int) num2 * -218581788;
            continue;
          case 4:
            num1 = (int) num2 * 440581237 ^ 1999025070;
            continue;
          case 5:
            num1 = (int) num2 * 1505963258 ^ -379268053;
            continue;
          case 6:
            goto label_1;
          case 7:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1487066255 ^ -1261405345;
            continue;
          case 8:
            this.m_Dict.Add(aKey, aItem);
            num1 = -990812346;
            continue;
          case 9:
            int num4 = !flag1 ? -728217815 : (num4 = -1014678874);
            num1 = num4 ^ (int) num2 * 45883725;
            continue;
          case 10:
            num1 = (int) num2 * -1985644137 ^ -2059559741;
            continue;
          case 11:
            goto label_3;
          case 12:
            num1 = (int) num2 * -1797178995 ^ 121851724;
            continue;
          case 13:
            num1 = -342025333;
            continue;
          default:
            goto label_16;
        }
      }
label_3:
      return;
label_16:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 909468523;
      bool flag;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1293666697)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -370285560 ^ 543291936;
            continue;
          case 1:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * -927191491 ^ -944607816;
            continue;
          case 2:
            int num3 = !flag ? -88344487 : (num3 = -1837326781);
            num1 = num3 ^ (int) num2 * -1141267577;
            continue;
          case 4:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * -1759590018 ^ 307954901;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -1775947086 ^ 1371718262;
            continue;
          case 7:
            jsonNode1 = this.m_Dict[aKey];
            num1 = 573639222;
            continue;
          case 8:
            this.m_Dict.Remove(aKey);
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * -1669807422 ^ -1133428228;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = -2093805050;
label_2:
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1401918197)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1533408808 ^ -778235611;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = -869579227;
            continue;
          case 4:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      int num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_5;
label_8:
      return jsonNode;
label_4:
      num3 = 1;
label_5:
      num1 = num3 == 0 ? -1463383667 : (num1 = -2075778965);
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 738489088;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1350091168)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 687295443 ^ 81834446;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_9;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 1149094020;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1350091168)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              jsonNode = (JSONNode) null;
              num3 = (int) num4 * 803823217 ^ -1013742545;
              continue;
            default:
              goto label_9;
          }
        }
      }
label_9:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 869571884;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 578824761)) % 4U)
          {
            case 0:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -123447905 ^ -2015020206;
              continue;
            case 1:
              getChildsD14.\u003C\u003E4__this = this;
              num1 = (int) num2 * -200317545 ^ 1435294010;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -1995150734;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1750791438)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "{";
            num1 = (int) num2 * 577853141 ^ 1505045309;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -703056115 : (num3 = -1353145007);
        bool flag;
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1750791438)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u206F‬‭⁫⁪⁮‬‮‌‬‮⁭‬‭⁮‍⁮⁭‎​⁪⁫‭‎⁫‮‎‫⁬‍‫‪​‎⁪⁯⁫‎‫‏‮(str1, ", ");
              num3 = (int) num4 * 276243364 ^ 1186034381;
              continue;
            case 1:
              goto label_11;
            case 2:
              num3 = (int) num4 * 221513210 ^ -796287850;
              continue;
            case 3:
              num3 = -1353145007;
              continue;
            case 4:
              int num5 = !flag ? 167660869 : (num5 = 750662124);
              num3 = num5 ^ (int) num4 * 288072956;
              continue;
            case 5:
              flag = JSONClass.\u200F‌⁮‍‏⁭⁯​⁮⁯‪‌‎‮⁭‏​⁭‪⁪⁪‏‎⁮​‫⁯⁬‏‫‍⁫‏‮​⁫⁯‎​‏‮(str1) > 2;
              num3 = (int) num4 * 482923476 ^ -1226587894;
              continue;
            case 7:
              str1 = JSONClass.\u206E​‪‎⁪‮‌‏‭⁫‪‪‮‭​⁭⁭⁮‫‬‌‏‫‪​‭⁪‌⁭⁮⁮‮⁭‭‬‬⁮⁪⁫⁭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206D‪​​‌‌‏‭‎‌⁭⁪​⁬‏⁭⁭⁫‫⁯⁫‎⁪‍‪‎‫‫⁪‮‎⁫⁯‮⁬⁬⁭⁮‎‬‮((object) current.Value)
              });
              num3 = -266412727;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = -2018158927;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u206F‬‭⁫⁪⁮‬‮‌‬‮⁭‬‭⁮‍⁮⁭‎​⁪⁫‭‎⁫‮‎‫⁬‍‫‪​‎⁪⁯⁫‎‫‏‮(str1, "}");
label_17:
      int num6 = -809424548;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1750791438)) % 3U)
        {
          case 0:
            goto label_17;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1407981084 ^ 1646279312;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str = "{ ";
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_6:
        int num1 = enumerator.MoveNext() ? -735529960 : (num1 = -1286249295);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1701249658)) % 8U)
          {
            case 0:
              num1 = -735529960;
              continue;
            case 1:
              str = JSONClass.\u206F‬‭⁫⁪⁮‬‮‌‬‮⁭‬‭⁮‍⁮⁭‎​⁪⁫‭‎⁫‮‎‫⁬‍‫‪​‎⁪⁯⁫‎‫‏‮(str, ", ");
              num1 = (int) num2 * -54397158 ^ -971018983;
              continue;
            case 2:
              goto label_6;
            case 3:
              int num3 = !flag ? -437725564 : (num3 = -124543904);
              num1 = num3 ^ (int) num2 * -1465051539;
              continue;
            case 4:
              flag = JSONClass.\u200F‌⁮‍‏⁭⁯​⁮⁯‪‌‎‮⁭‏​⁭‪⁪⁪‏‎⁮​‫⁯⁬‏‫‍⁫‏‮​⁫⁯‎​‏‮(str) > 3;
              num1 = (int) num2 * 688999605 ^ -2091440727;
              continue;
            case 5:
              str = JSONClass.\u206D⁮⁯‎⁬‏⁪‏⁬‪‌‎⁬‬⁪‏​‍‎⁫‍‬‪​⁯‮⁮⁯‪‭‍⁬⁭‬⁮⁫⁯‌‭⁮‮(str, "\n", aPrefix, "   ");
              str = JSONClass.\u206E​‪‎⁪‮‌‏‭⁫‪‪‮‭​⁭⁭⁮‫‬‌‏‫‪​‭⁪‌⁭⁮⁮‮⁭‭‬‬⁮⁪⁫⁭‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u206F‬‭⁫⁪⁮‬‮‌‬‮⁭‬‭⁮‍⁮⁭‎​⁪⁫‭‎⁫‮‎‫⁬‍‫‪​‎⁪⁯⁫‎‫‏‮(aPrefix, "   "))
              });
              num1 = -938451908;
              continue;
            case 6:
              current = enumerator.Current;
              num1 = -222439174;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = -826127632;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1701249658)) % 3U)
          {
            case 1:
              num4 = (int) num5 * 198215180 ^ 2145864250;
              continue;
            case 2:
              goto label_11;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      return JSONClass.\u206D⁮⁯‎⁬‏⁪‏⁬‪‌‎⁬‬⁪‏​‍‎⁫‍‬‪​⁯‮⁮⁯‪‭‍⁬⁭‬⁮⁫⁯‌‭⁮‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1777076314;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1191146481)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -770583324 ^ -153822661;
            continue;
          case 3:
            JSONClass.\u200B‎‏⁮​⁪‎‭‌‏‎⁪‬‌​​‏⁪⁭‮‪‬‮‬⁭‪⁪‏⁫‫‪‬‍‪‌‫‏‍⁮‎‮(aWriter, (byte) 2);
            JSONClass.\u202E‬⁬⁭‭‌⁫‮⁮⁭⁮⁮⁮‌‪⁭‫‍⁯‭‬‭‬⁯‌‍‎‎‭⁬​‍‪⁯‍⁭‎‌‍⁯‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1244527973 ^ 366447497;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 381225897 : (num3 = 1318255036);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1191146481)) % 8U)
          {
            case 0:
              goto label_19;
            case 1:
              num3 = (int) num4 * -281789633 ^ 507950513;
              continue;
            case 2:
              num3 = (int) num4 * 1299614401 ^ 1393195920;
              continue;
            case 3:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 777797530 ^ 1741038750;
              continue;
            case 4:
              num3 = 1318255036;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 1142722471;
              continue;
            case 6:
              JSONClass.\u206B‬⁭‮‍⁪⁫⁬‍⁫⁭⁯⁮⁬⁬‍​‍‎‪‭‎⁫‎⁫‪‬‎‎‮‪‫‎‌‎‮‫⁫⁭‌‮(aWriter, current);
              num3 = (int) num4 * -1309038357 ^ 453548369;
              continue;
            case 7:
              goto label_12;
            default:
              goto label_15;
          }
        }
label_19:
        return;
label_15:;
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num5 = 892894007;
        while (true)
        {
          uint num6;
          switch ((num6 = (uint) (num5 ^ 1191146481)) % 3U)
          {
            case 0:
              goto label_17;
            case 1:
              num5 = (int) num6 * 931577173 ^ -1946400702;
              continue;
            default:
              goto label_21;
          }
        }
label_21:;
      }
    }

    static bool \u206F‍​‭⁭‪‭‍⁯‫⁯⁯‏​‬⁮​‪⁫⁮⁬​‭⁮⁭‎‮‬‮‌⁫‪‪‍⁬⁫‌​‪⁮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200F‌⁮‍‏⁭⁯​⁮⁯‪‌‎‮⁭‏​⁭‪⁪⁪‏‎⁮​‫⁯⁬‏‫‍⁫‏‮​⁫⁯‎​‏‮([In] string obj0) => obj0.Length;

    static string \u206F‬‭⁫⁪⁮‬‮‌‬‮⁭‬‭⁮‍⁮⁭‎​⁪⁫‭‎⁫‮‎‫⁬‍‫‪​‎⁪⁯⁫‎‫‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D‪​​‌‌‏‭‎‌⁭⁪​⁬‏⁭⁭⁫‫⁯⁫‎⁪‍‪‎‫‫⁪‮‎⁫⁯‮⁬⁬⁭⁮‎‬‮([In] object obj0) => obj0.ToString();

    static string \u206E​‪‎⁪‮‌‏‭⁫‪‪‮‭​⁭⁭⁮‫‬‌‏‫‪​‭⁪‌⁭⁮⁮‮⁭‭‬‬⁮⁪⁫⁭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206D⁮⁯‎⁬‏⁪‏⁬‪‌‎⁬‬⁪‏​‍‎⁫‍‬‪​⁯‮⁮⁯‪‭‍⁬⁭‬⁮⁫⁯‌‭⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200B‎‏⁮​⁪‎‭‌‏‎⁪‬‌​​‏⁪⁭‮‪‬‮‬⁭‪⁪‏⁫‫‪‬‍‪‌‫‏‍⁮‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202E‬⁬⁭‭‌⁫‮⁮⁭⁮⁮⁮‌‪⁭‫‍⁯‭‬‭‬⁯‌‍‎‎‭⁬​‍‪⁯‍⁭‎‌‍⁯‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206B‬⁭‮‍⁪⁫⁬‍⁫⁭⁯⁮⁬⁬‍​‍‎‪‭‎⁫‎⁫‪‬‎‎‮‪‫‎‌‎‮‫⁫⁭‌‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
