// Decompiled with JetBrains decompiler
// Type: My.MyProject
// Assembly: ROD, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E979E2DB-C9F1-42A2-973C-8D09E8A5042D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Generic-6729ed2ad627d1ba321c50ea02bf4839564ecf122398fe54f78429c0e1c190c4.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.Ⴓ<MyComputer> Ⴀ = new MyProject.Ⴓ<MyComputer>();
    private static readonly MyProject.Ⴓ<MyApplication> Ⴅ = new MyProject.Ⴓ<MyApplication>();
    private static readonly MyProject.Ⴓ<User> Ⴓ = new MyProject.Ⴓ<User>();
    private static readonly MyProject.Ⴓ<MyProject.Ⴅ> Ⴐ = new MyProject.Ⴓ<MyProject.Ⴅ>();

    [HelpKeyword("My.Computer")]
    internal static MyComputer Ⴓ => MyProject.Ⴀ.Ⴈ();

    [HelpKeyword("My.Application")]
    internal static MyApplication Ⴃ => MyProject.Ⴅ.Ⴈ();

    [HelpKeyword("My.User")]
    internal static User Ⴀ => MyProject.Ⴓ.Ⴈ();

    [HelpKeyword("My.WebServices")]
    internal static MyProject.Ⴅ Ⴐ => MyProject.Ⴐ.Ⴈ();

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class Ⴅ
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object Ⴗ) => base.Equals(MyComputer.Ⴃ(Ⴗ, 986, 1016));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal Type Ⴍ() => Ⴗ.Ⴅ.Ⴓ(__typeref (MyProject.Ⴅ), 1, 116);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      private static T Ⴀ<T>(T Ⴄ) where T : new()
      {
label_3:
        int num = (object) Ⴄ != null ? 8 : 2;
        T obj;
        while (true)
        {
          switch (num)
          {
            case 1:
              goto label_3;
            case 2:
              obj = new T();
              goto case 5;
            case 3:
              num = 4;
              continue;
            case 4:
            case 6:
              goto label_8;
            case 5:
              num = 4;
              continue;
            case 8:
              obj = Ⴄ;
              num = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MyProject.Ⴅ.Ⴀ);
              num = 1;
              continue;
          }
        }
label_8:
        return obj;
      }

      private void Ⴐ<T>(ref T Ⴄ) => Ⴄ = default (T);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴅ()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class Ⴓ<Ⴍ> where Ⴍ : new()
    {
      [ThreadStatic]
      private static Ⴍ Ⴈ;

      [SpecialName]
      internal Ⴍ Ⴈ()
      {
label_3:
        int num = (object) MyProject.Ⴓ<Ⴍ>.Ⴈ != null ? 4 : 5;
        while (true)
        {
          switch (num)
          {
            case 0:
              goto label_3;
            case 2:
              goto label_6;
            case 3:
            case 4:
            case 6:
              goto label_5;
            case 5:
              MyProject.Ⴓ<Ⴍ>.Ⴈ = new Ⴍ();
              num = 4;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MyProject.Ⴓ<>.Ⴈ);
              num = 0;
              continue;
          }
        }
label_5:
        Ⴍ ⴈ = MyProject.Ⴓ<Ⴍ>.Ⴈ;
label_6:
        return ⴈ;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public Ⴓ()
      {
      }
    }
  }
}
