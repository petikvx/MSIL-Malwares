// Decompiled with JetBrains decompiler
// Type: Fuil.My.MySettings
// Assembly: Fuil, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6BC8D743-EB65-4839-AC83-C122C5094563
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.ajzs-0241d79932eca2c6ab1d9f6fb3104d0bd086c50f828964d4355b0ca878a45119.exe

using \u0002;
using \u0004;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace Fuil.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \u0001 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0002;
    private static object \u0003 = RuntimeHelpers.GetObjectValue(new object());

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    private static void \u0001(object _param0, EventArgs _param1)
    {
      if (!\u0001.Application.SaveMySettingsOnExit)
        return;
      \u0001.Settings.Save();
    }

    public static MySettings Default
    {
      get
      {
        while (!MySettings.\u0002)
        {
          object obj = MySettings.\u0003;
          object Expression = obj;
          if (true)
            goto label_11;
label_2:
          if (true)
          {
            Monitor.Enter(obj);
            try
            {
              do
              {
                if (MySettings.\u0002)
                  goto label_6;
label_4:
                if (true)
                {
                  \u0001.Application.Shutdown += (ShutdownEventHandler) ((_param0, _param1) =>
                  {
                    if (!\u0001.Application.SaveMySettingsOnExit)
                      return;
                    \u0001.Settings.Save();
                  });
                  if (true)
                    MySettings.\u0002 = true;
                  else
                    continue;
                }
                else
                  continue;
label_6:
                if (false)
                  goto label_4;
              }
              while (false);
              break;
            }
            finally
            {
              Monitor.Exit(obj);
            }
          }
          else
            continue;
label_11:
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          goto label_2;
        }
        return MySettings.\u0001;
      }
    }
  }
}
