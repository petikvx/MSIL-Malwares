// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ClaimTyp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 6CD146E8-0143-4099-A2FD-F452B55D5FF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-200a5cb8bf6489144c66e3b85eaeec5327dc66321001f4c0fda42840d0f230ec.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -2108993498;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -38333443)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -210357407 ^ 622094075;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -2135241412;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -272208888)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1375275858 ^ -1628248239;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -21389709;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1969378472)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1818774309 ^ -1902641701;
              continue;
            case 3:
              str = "";
              num1 = (int) num2 * 1363711018 ^ 627187436;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1388258296;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 299017099)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1319467133 ^ 1570222784;
              continue;
            case 3:
              count = 0;
              num1 = (int) num2 * -120915917 ^ 1523628500;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 978421015;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1396854159)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Add("", aItem);
            num1 = (int) num2 * 1294015679 ^ 233040958;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey) => (JSONNode) null;

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1101811941;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1003991304)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1881835545 ^ -869368897;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 115977760;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 639682121)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -87201779 ^ -905592626;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -228523982;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1470028833)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -1484466399 ^ 231999587;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = 72098263;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 11059726)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1609292590 ^ 891595683;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 1099307442;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1740639024)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 334874428 ^ -1429097158;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1365660031;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1633180354)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1140902220 ^ -674066167;
            continue;
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * -517177681 ^ -659089927;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
        int result = 0;
label_1:
        int num1 = -1645769274;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -251570390)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = result;
              num1 = (int) num2 * 1443141865 ^ 1871359680;
              continue;
            case 3:
              num1 = (int) num2 * 51129823 ^ 818745157;
              continue;
            case 4:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1462057284 ^ -359952572;
              continue;
            case 5:
              asInt = 0;
              num1 = -835081739;
              continue;
            case 6:
              int num3 = !flag ? 2120525867 : (num3 = 258663095);
              num1 = num3 ^ (int) num2 * -1697379622;
              continue;
            case 7:
              num1 = (int) num2 * 1876788378 ^ -1802707730;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1383291833;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1928299823)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1383444170 ^ 1969153683;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -1151752123;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1212384214)) % 7U)
          {
            case 0:
              int num3 = !flag ? 413431305 : (num3 = 1386424454);
              num1 = num3 ^ (int) num2 * 517606589;
              continue;
            case 1:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206D​‮‮‍⁮‍‏⁭‌​⁭‎‪‮‪‫⁭‍‍‏‫⁯‍⁬‎‏⁭‬‌⁬‭⁬⁪​‫⁪‪⁫‪‮(), out result);
              num1 = (int) num2 * 1668859997 ^ 60932035;
              continue;
            case 2:
              num1 = (int) num2 * -1951903828 ^ -1358451903;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = -1056591931;
              continue;
            case 5:
              goto label_1;
            case 6:
              asFloat = result;
              num1 = (int) num2 * 2079570212 ^ 1695495601;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1377764405;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2123963976)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1198384853 ^ 92284171;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -671007955;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1053210176)) % 8U)
          {
            case 1:
              int num3 = flag ? -1990292414 : (num3 = -2031258029);
              num1 = num3 ^ (int) num2 * 1856297861;
              continue;
            case 2:
              num1 = (int) num2 * 10738073 ^ -1676366390;
              continue;
            case 3:
              num1 = (int) num2 * 1111911237 ^ 2012853695;
              continue;
            case 4:
              goto label_1;
            case 5:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1266870885 ^ -1453128456;
              continue;
            case 6:
              asDouble = 0.0;
              num1 = -198720238;
              continue;
            case 7:
              asDouble = result;
              num1 = (int) num2 * 1851874256 ^ -855418885;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 2028919720;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 660289319)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 411562105 ^ -511121822;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1628753101;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2128777866)) % 6U)
          {
            case 0:
              int num3 = bool.TryParse(this.Value, out result) ? 1792624835 : (num3 = 1801481020);
              num1 = num3 ^ (int) num2 * -1168986394;
              continue;
            case 1:
              result = false;
              num1 = (int) num2 * -2111365335 ^ 260356741;
              continue;
            case 2:
              asBool = !JSONNode.\u200F‍‌⁪‌‫⁭​‫⁬‬⁫‮⁯⁫‏⁯⁭⁯⁯‎‭⁯‪‮⁫‮‪⁬⁮​⁮⁬‎‎⁬‍‪‪‪‮(this.Value);
              num1 = 795288959;
              continue;
            case 4:
              goto label_1;
            case 5:
              asBool = result;
              num1 = (int) num2 * 2105620143 ^ 1786402296;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1500747890;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1721134903)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 542176968;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -754846028 ^ 522153313;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 158773510;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1039862760)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1525643639 ^ -937851779;
              continue;
            case 3:
              num1 = (int) num2 * -888052539 ^ 1911899306;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1221937468;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 82888171)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -781048202 ^ -1555336794;
              continue;
            case 2:
              goto label_1;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * -1401076886 ^ -562969643;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1096163298;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 973400779)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1923607374 ^ 1383596102;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1333439072;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -546138539)) % 4U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -202107924 ^ 57002117;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            goto label_1;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -1498929798;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 2016148804;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1263558346)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = true;
            num1 = (int) num2 * -2005749688 ^ 876425075;
            continue;
          case 3:
            num1 = (int) num2 * 1789722772 ^ -1041239633;
            continue;
          case 4:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 5:
            flag = (object) a == b;
            num1 = 1410139673;
            continue;
          case 6:
            if (b == null)
            {
              num1 = (int) num2 * 1680733744 ^ -98121301;
              continue;
            }
            num3 = 0;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1313930254 : (num4 = 1397981485);
      }
label_11:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 2025077804;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1426240661)) % 4U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 1023146457 ^ -1273431326;
            continue;
          case 2:
            num1 = (int) num2 * -93472086 ^ -1895966591;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1055608399;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -936156953)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = this.\u206F‎‬⁮‎⁪‎‏‮⁮‬⁬‌⁯‬‎‍‬‬‎​‍​‮⁭⁭‭‏‬​‫‮‬‬‮‭‍​‬⁮‮();
            num1 = (int) num2 * 885633632 ^ 77205024;
            continue;
          case 3:
            num1 = (int) num2 * 786925464 ^ -1712839766;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -692595861;
      int num2;
      string str2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1764453209)) % 30U)
        {
          case 0:
            ch2 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(str2, num2);
            num1 = -1213816023;
            continue;
          case 1:
            num1 = (int) num3 * 139471619 ^ 641581509;
            continue;
          case 2:
            num1 = (int) num3 * -646676575 ^ -275574095;
            continue;
          case 3:
label_24:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, ch2.ToString());
            num1 = -633526636;
            continue;
          case 5:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\\\");
            num1 = -596573244;
            continue;
          case 6:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\\"");
            num1 = -465556538;
            continue;
          case 7:
            num1 = (int) num3 * -615279520 ^ -1088449110;
            continue;
          case 8:
            int num4;
            num1 = num4 = ch1 == '\\' ? -588011310 : (num4 = -1769849816);
            continue;
          case 9:
            num1 = (int) num3 * -1002558722 ^ 1797346478;
            continue;
          case 10:
label_17:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\n");
            num1 = -802066653;
            continue;
          case 11:
            ch1 = ch3;
            switch (ch1)
            {
              case '\b':
                goto label_27;
              case '\t':
                goto label_26;
              case '\n':
                goto label_17;
              case '\v':
                goto label_24;
              case '\f':
                goto label_23;
              case '\r':
                goto label_9;
              default:
                num1 = (int) num3 * 1730537160 ^ 1023553368;
                continue;
            }
          case 12:
            int num5;
            num1 = num5 = num2 >= JSONNode.\u200F‭‎​⁪⁬⁯‌⁬‍‭‫​‫⁪‭‏⁪‍⁫‍‫⁪‪‬⁬‭‏‏⁫‪⁮⁯⁯⁫⁯⁮‌‬‍‮(str2) ? -483143757 : (num5 = -230416561);
            continue;
          case 13:
            ++num2;
            num1 = -1283346109;
            continue;
          case 14:
            ch3 = ch2;
            num1 = (int) num3 * 1523330060 ^ -1671401192;
            continue;
          case 15:
            num2 = 0;
            num1 = (int) num3 * 896427210 ^ -1700271975;
            continue;
          case 16:
label_9:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\r");
            num1 = -1848153454;
            continue;
          case 17:
            num1 = (int) num3 * 1211825927 ^ 1902745831;
            continue;
          case 18:
            str2 = aText;
            num1 = (int) num3 * -367595084 ^ -1627803586;
            continue;
          case 19:
label_26:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\t");
            num1 = -633526636;
            continue;
          case 20:
            num1 = (int) num3 * -1650757100 ^ 694334164;
            continue;
          case 21:
            goto label_1;
          case 22:
            num1 = (int) num3 * -217666608 ^ -1329028652;
            continue;
          case 23:
            int num6;
            num1 = num6 = ch1 != '"' ? -440082234 : (num6 = -2123856219);
            continue;
          case 24:
            str3 = str1;
            num1 = (int) num3 * -1623689073 ^ 253470577;
            continue;
          case 25:
            num1 = (int) num3 * 1043323020 ^ 295479192;
            continue;
          case 26:
label_27:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\b");
            num1 = -1856818825;
            continue;
          case 27:
            num1 = (int) num3 * -1818419907 ^ -1132949897;
            continue;
          case 28:
label_23:
            str1 = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, "\\f");
            num1 = -908042564;
            continue;
          case 29:
            num1 = (int) num3 * -2025671887 ^ 863664106;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = -2001600467;
      bool flag1;
      bool flag2;
      bool flag3;
      string aItem;
      int num2;
      char ch1;
      string aKey;
      bool flag4;
      char ch2;
      char ch3;
      char ch4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      char ch5;
      bool flag9;
      bool flag10;
      bool flag11;
      JSONNode jsonNode2;
      bool flag12;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1297607679)) % 151U)
        {
          case 0:
            num1 = -1438229569;
            continue;
          case 1:
            num1 = (int) num3 * 1345267344 ^ -1929748428;
            continue;
          case 2:
            flag11 = flag1;
            num1 = -49525816;
            continue;
          case 3:
            int num4;
            num1 = num4 = ch3 == 'n' ? -1645325653 : (num4 = -1718151508);
            continue;
          case 4:
            flag1 = !flag1;
            num1 = -514242651;
            continue;
          case 5:
            string str1 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str2 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str1, str2);
            num1 = (int) num3 * -1663086674 ^ -2136377185;
            continue;
          case 6:
            num1 = (int) num3 * 956038986 ^ 1828413048;
            continue;
          case 7:
            num1 = (int) num3 * -1365925984 ^ -1689058949;
            continue;
          case 8:
            ch5 = ch2;
            num1 = (int) num3 * 1664760511 ^ -40067128;
            continue;
          case 9:
label_70:
            flag2 = flag1;
            num1 = -61712109;
            continue;
          case 10:
            int num5 = flag10 ? 434072480 : (num5 = 2970097);
            num1 = num5 ^ (int) num3 * 1235009549;
            continue;
          case 11:
            int num6;
            num1 = num6 = ch4 == '"' ? -1949955819 : (num6 = -873770036);
            continue;
          case 12:
label_57:
            num1 = -1084066714;
            continue;
          case 13:
            num1 = (int) num3 * 1762648451 ^ -1628308928;
            continue;
          case 14:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, "\n");
            num1 = -475297073;
            continue;
          case 15:
            int num7 = ch4 <= ',' ? 1539971851 : (num7 = 1917420120);
            num1 = num7 ^ (int) num3 * -1844923435;
            continue;
          case 16:
            int num8;
            num1 = num8 = !JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aKey, "") ? -286015682 : (num8 = -1097830503);
            continue;
          case 17:
          case 37:
          case 75:
          case 109:
          case 144:
label_51:
            ++num2;
            num1 = -1027758695;
            continue;
          case 18:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1051623733 ^ -344348615;
            continue;
          case 19:
            flag12 = num2 < JSONNode.\u200F‭‎​⁪⁬⁯‌⁬‍‭‫​‫⁪‭‏⁪‍⁫‍‫⁪‪‬⁬‭‏‏⁫‪⁮⁯⁯⁫⁯⁮‌‬‍‮(aJSON);
            num1 = -1401947439;
            continue;
          case 20:
            num1 = (int) num3 * -893475965 ^ 992314011;
            continue;
          case 21:
            aKey = "";
            aItem = "";
            num1 = -978192440;
            continue;
          case 22:
            num1 = (int) num3 * -1711828892 ^ -321366574;
            continue;
          case 23:
            num1 = (int) num3 * -694025342 ^ 1659799999;
            continue;
          case 24:
            int num9;
            num1 = num9 = jsonNodeStack.Count != 0 ? -711082 : (num9 = -1260930984);
            continue;
          case 25:
            int num10 = !(jsonNode1 != (object) null) ? 797264922 : (num10 = 1183729656);
            num1 = num10 ^ (int) num3 * 517787294;
            continue;
          case 26:
            num1 = (int) num3 * -771702322 ^ -296002525;
            continue;
          case 27:
label_129:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, "\r");
            num1 = -731878863;
            continue;
          case 28:
label_3:
            int num11;
            num1 = num11 = !flag1 ? -1326442301 : (num11 = -135459695);
            continue;
          case 29:
            string s = JSONNode.\u206B⁮‭‮⁭‮‬​‫⁫⁯⁯‍‭‌‭‬‍‭⁮⁬‮⁮‏‌​‎⁯‎‫⁪‎⁯⁭‪‭⁯‏‬‍‮(aJSON, num2 + 1, 4);
            string str3 = aItem;
            ch1 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str4 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str3, str4);
            num1 = (int) num3 * 237351760 ^ -100212376;
            continue;
          case 30:
            int num12;
            num1 = num12 = ch4 == ' ' ? -882409048 : (num12 = -1050242304);
            continue;
          case 31:
            num2 = 0;
            num1 = (int) num3 * -393093644 ^ -1350635150;
            continue;
          case 32:
            num1 = (int) num3 * -395418030 ^ 803798691;
            continue;
          case 33:
            goto label_135;
          case 34:
            num1 = -935530606;
            continue;
          case 35:
            int num13 = !flag12 ? 200118041 : (num13 = 1442444584);
            num1 = num13 ^ (int) num3 * 108471850;
            continue;
          case 36:
            num1 = (int) num3 * 695315593 ^ -1613724788;
            continue;
          case 38:
            num1 = (int) num3 * 1650749445 ^ -1000130996;
            continue;
          case 39:
            num1 = (int) num3 * -1532840209 ^ 345844326;
            continue;
          case 40:
            num1 = (int) num3 * -1119428916 ^ -191055029;
            continue;
          case 41:
            ch3 = ch5;
            int num14 = ch3 > 'f' ? 868074317 : (num14 = 1065707410);
            num1 = num14 ^ (int) num3 * 737240852;
            continue;
          case 42:
            int num15;
            num1 = num15 = ch4 == '{' ? -1764964256 : (num15 = -1303046284);
            continue;
          case 43:
            string str5 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str6 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str5, str6);
            num1 = (int) num3 * 1002175072 ^ -1440549897;
            continue;
          case 44:
            num1 = (int) num3 * -1496096528 ^ 396473698;
            continue;
          case 45:
label_13:
            string str7 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str8 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str7, str8);
            num1 = -188967132;
            continue;
          case 46:
            ch4 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            num1 = (int) num3 * -740236638 ^ -1392889119;
            continue;
          case 47:
            aKey = aItem;
            num1 = -2091654620;
            continue;
          case 48:
            num1 = (int) num3 * -608550572 ^ -63752566;
            continue;
          case 49:
            num1 = (int) num3 * -1650915004 ^ 239218821;
            continue;
          case 50:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -190831063 ^ -894959588;
            continue;
          case 51:
            int num16 = ch4 <= ' ' ? 440235997 : (num16 = 712693223);
            num1 = num16 ^ (int) num3 * -1893586023;
            continue;
          case 52:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1148510774 ^ -1537238701;
            continue;
          case 53:
            num1 = (int) num3 * -1242020682 ^ -180019137;
            continue;
          case 54:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 517810767 ^ 389851872;
            continue;
          case 55:
label_35:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, ch2.ToString());
            num1 = -330671374;
            continue;
          case 56:
            flag1 = false;
            num1 = (int) num3 * 1186207483 ^ 151211552;
            continue;
          case 57:
            int num17 = flag7 ? 1297050640 : (num17 = 1849232150);
            num1 = num17 ^ (int) num3 * -2070912195;
            continue;
          case 58:
            int num18;
            num1 = num18 = ch4 <= ']' ? -580102532 : (num18 = -330209945);
            continue;
          case 59:
            num1 = (int) num3 * -1040743701 ^ 1698179442;
            continue;
          case 60:
            num1 = (int) num3 * -1275415167 ^ -1387692039;
            continue;
          case 61:
            aKey = "";
            num1 = (int) num3 * 554708146 ^ -1195752711;
            continue;
          case 62:
            num1 = (int) num3 * -546605537 ^ 181624683;
            continue;
          case 63:
            flag7 = flag1;
            num1 = -1680220309;
            continue;
          case 64:
            num1 = (int) num3 * -1612684882 ^ 2123065948;
            continue;
          case 65:
            int num19 = flag11 ? -1237526134 : (num19 = -1164644836);
            num1 = num19 ^ (int) num3 * -1627241193;
            continue;
          case 66:
            num1 = (int) num3 * -254131919 ^ -188924077;
            continue;
          case 67:
            num1 = -955122951;
            continue;
          case 68:
            int num20 = !flag2 ? 1106914063 : (num20 = 141762227);
            num1 = num20 ^ (int) num3 * 705808077;
            continue;
          case 69:
            aKey = JSONNode.\u206F⁬‫‬‪‪‏​⁮⁮⁮⁭‬‎⁪​⁮​⁯⁫‪‌‫⁫‭‎‌⁭‫‍‫‍⁪‪‌‎​‫⁯‪‮(aKey);
            int num21 = jsonNode1 is JSONArray ? -795850457 : (num21 = -336465273);
            num1 = num21 ^ (int) num3 * 1954177783;
            continue;
          case 70:
            ch2 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            num1 = (int) num3 * -63795653 ^ -790210273;
            continue;
          case 71:
            num1 = (int) num3 * -557989597 ^ 758184014;
            continue;
          case 72:
            num1 = -334415949;
            continue;
          case 73:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1967163176 ^ 283548313;
            continue;
          case 74:
            num1 = (int) num3 * 1637345390 ^ 1988055316;
            continue;
          case 76:
            num1 = (int) num3 * 183440803 ^ -1986889540;
            continue;
          case 77:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1125270285 ^ 85299940;
            continue;
          case 78:
            num1 = (int) num3 * 1368127563 ^ -785890661;
            continue;
          case 79:
            aKey = "";
            aItem = "";
            flag9 = jsonNodeStack.Count > 0;
            num1 = -978476282;
            continue;
          case 80:
            flag3 = flag1;
            num1 = -1633880737;
            continue;
          case 81:
            num1 = -998744990;
            continue;
          case 82:
            num1 = (int) num3 * 711697450 ^ 2094580348;
            continue;
          case 83:
            int num22;
            num1 = num22 = !JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aKey, "") ? -300290165 : (num22 = -1896172111);
            continue;
          case 84:
            num1 = (int) num3 * 508262653 ^ 1213279040;
            continue;
          case 85:
            flag4 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1600222617 ^ 1024818966;
            continue;
          case 86:
            num1 = (int) num3 * 411104680 ^ -429574629;
            continue;
          case 87:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -470147850;
            continue;
          case 88:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -836158208;
            continue;
          case 89:
            int num23 = flag8 ? -2042003679 : (num23 = -1053976755);
            num1 = num23 ^ (int) num3 * -1267577709;
            continue;
          case 91:
            int num24;
            num1 = num24 = ch4 == ',' ? -485642261 : (num24 = -1268015501);
            continue;
          case 92:
            int num25;
            num1 = num25 = ch4 == '}' ? -2015511639 : (num25 = -1246072345);
            continue;
          case 93:
label_50:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, "\t");
            num1 = -34117533;
            continue;
          case 94:
            int num26;
            num1 = num26 = ch3 == 'f' ? -924813528 : (num26 = -1393614017);
            continue;
          case 95:
            switch (ch4)
            {
              case '[':
                goto label_3;
              case '\\':
                goto label_115;
              case ']':
                goto label_70;
              default:
                num1 = -1882479762;
                continue;
            }
          case 96:
            int num27;
            num1 = num27 = !JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aKey, "") ? -1635951395 : (num27 = -1099049515);
            continue;
          case 97:
            num1 = (int) num3 * 12595558 ^ 1845097274;
            continue;
          case 98:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1436070291 ^ -609982565;
            continue;
          case 99:
            jsonNode2 = jsonNode1;
            num1 = -1336027498;
            continue;
          case 100:
            jsonNodeStack.Pop();
            num1 = -55503270;
            continue;
          case 101:
            num1 = (int) num3 * -1539920773 ^ 200290551;
            continue;
          case 102:
            num1 = (int) num3 * -1409547018 ^ 1140981202;
            continue;
          case 103:
            int num28 = !flag4 ? 193321098 : (num28 = 451551528);
            num1 = num28 ^ (int) num3 * 1252759695;
            continue;
          case 104:
            int num29 = ch4 == ':' ? 2132923797 : (num29 = 845567194);
            num1 = num29 ^ (int) num3 * 1364176447;
            continue;
          case 105:
            aKey = "";
            num1 = -1816007953;
            continue;
          case 106:
            goto label_95;
          case 107:
            int num30 = !flag6 ? 85979382 : (num30 = 1037812676);
            num1 = num30 ^ (int) num3 * -1062880098;
            continue;
          case 108:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 419376770 ^ -1526578519;
            continue;
          case 110:
            num1 = (int) num3 * 1525469563 ^ -1373719596;
            continue;
          case 111:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, "\f");
            num1 = -306195477;
            continue;
          case 112:
            num1 = -851236919;
            continue;
          case 113:
label_40:
            int num31;
            num1 = num31 = !flag1 ? -804297986 : (num31 = -948280947);
            continue;
          case 114:
            aItem = "";
            num1 = (int) num3 * 331328595 ^ 1934327837;
            continue;
          case 115:
            num2 += 4;
            num1 = (int) num3 * 1839717223 ^ -1866948948;
            continue;
          case 116:
            goto label_1;
          case 117:
            aItem = "";
            num1 = (int) num3 * 1273041067 ^ -1534579309;
            continue;
          case 118:
            string str9 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str10 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str9, str10);
            num1 = (int) num3 * -1331233701 ^ 1447230010;
            continue;
          case 119:
            int num32 = ch3 != 'b' ? -61371264 : (num32 = -1897151802);
            num1 = num32 ^ (int) num3 * -691422493;
            continue;
          case 120:
            aKey = JSONNode.\u206F⁬‫‬‪‪‏​⁮⁮⁮⁭‬‎⁪​⁮​⁯⁫‪‌‫⁫‭‎‌⁭‫‍‫‍⁪‪‌‎​‫⁯‪‮(aKey);
            int num33 = jsonNode1 is JSONArray ? 650778204 : (num33 = 1416112730);
            num1 = num33 ^ (int) num3 * 251105391;
            continue;
          case 121:
            flag5 = JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aItem, "");
            num1 = (int) num3 * 1726880747 ^ 81865660;
            continue;
          case 122:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -340929834;
            continue;
          case 123:
            switch (ch4)
            {
              case '\t':
                goto label_40;
              case '\n':
              case '\r':
                goto label_51;
              case '\v':
              case '\f':
                goto label_13;
              default:
                num1 = (int) num3 * 1600824237 ^ 1990522997;
                continue;
            }
          case 124:
            int num34 = !flag5 ? -353985159 : (num34 = -491066175);
            num1 = num34 ^ (int) num3 * -1162941604;
            continue;
          case 125:
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(aItem, "\b");
            num1 = -34117533;
            continue;
          case 126:
            int num35 = flag1 ? 154777344 : (num35 = 1137813133);
            num1 = num35 ^ (int) num3 * -1029569556;
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2030076150 ^ -955133389;
            continue;
          case 128:
            string str11 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str12 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str11, str12);
            num1 = (int) num3 * -530489596 ^ -294879412;
            continue;
          case 129:
            int num36;
            num1 = num36 = !JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aItem, "") ? -935530606 : (num36 = -1399459314);
            continue;
          case 130:
            int num37 = !flag9 ? -14391711 : (num37 = -2035687680);
            num1 = num37 ^ (int) num3 * -554065626;
            continue;
          case 131:
            num1 = (int) num3 * 745225459 ^ -1730535584;
            continue;
          case 132:
label_115:
            ++num2;
            flag8 = flag1;
            num1 = -306414457;
            continue;
          case 133:
            string str13 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str14 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str13, str14);
            num1 = (int) num3 * -1762249409 ^ -393953003;
            continue;
          case 134:
            num1 = (int) num3 * 119662646 ^ -1117805494;
            continue;
          case 135:
            num1 = (int) num3 * 317983557 ^ -1811125999;
            continue;
          case 136:
            num1 = (int) num3 * -497042894 ^ 1022411418;
            continue;
          case 137:
            string str15 = aItem;
            ch1 = JSONNode.\u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮(aJSON, num2);
            string str16 = ch1.ToString();
            aItem = JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮(str15, str16);
            num1 = (int) num3 * 94597098 ^ 103938027;
            continue;
          case 138:
            switch (ch3)
            {
              case 'r':
                goto label_129;
              case 's':
                goto label_35;
              case 't':
                goto label_50;
              case 'u':
                goto label_57;
              default:
                num1 = -1464187583;
                continue;
            }
          case 139:
            num1 = (int) num3 * 885429569 ^ -1520807891;
            continue;
          case 140:
            num1 = (int) num3 * -1848553961 ^ 2020868782;
            continue;
          case 141:
            int num38 = !(jsonNode1 != (object) null) ? 1283711964 : (num38 = 816985809);
            num1 = num38 ^ (int) num3 * -448239031;
            continue;
          case 142:
            num1 = (int) num3 * 340034237 ^ 157968922;
            continue;
          case 143:
            num1 = (int) num3 * 122745009 ^ 1888598946;
            continue;
          case 145:
            int num39 = !flag3 ? 310137471 : (num39 = 1631921580);
            num1 = num39 ^ (int) num3 * 1747409660;
            continue;
          case 146:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1663914359 ^ 290248637;
            continue;
          case 147:
            num1 = (int) num3 * -1923621385 ^ 855448166;
            continue;
          case 148:
            aKey = JSONNode.\u206F⁬‫‬‪‪‏​⁮⁮⁮⁭‬‎⁪​⁮​⁯⁫‪‌‫⁫‭‎‌⁭‫‍‫‍⁪‪‌‎​‫⁯‪‮(aKey);
            num1 = (int) num3 * -1512568695 ^ -18764219;
            continue;
          case 149:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1597108250 ^ 884269974;
            continue;
          case 150:
            flag6 = JSONNode.\u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮(aKey, "");
            num1 = -708849079;
            continue;
          default:
            goto label_151;
        }
      }
label_95:
      throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("JSON Parse: Quotation marks seems to be messed up.");
label_135:
      throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("JSON Parse: Too many closing brackets");
label_151:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData) => this.Serialize(JSONNode.\u200E‏‬⁪⁪⁬‌⁫‎‬‮‍⁪‫‍⁭‫‬‮‏‏⁪⁪⁬‫‏‬⁭⁭⁬‬‌⁬‬‎⁯⁪‮⁫‫‮(aData));

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200D‬‫⁪​‏‍⁬⁯‎‭⁫‮⁬‮⁯​⁭‍‌​‍​⁫‪⁭⁬‏⁬⁮⁭‍⁪‫‪‭⁫‎⁪‌‮(JSONNode.\u200B⁯‬⁪‭⁬‬‬‏‫‫⁬⁭‏‍‭​‪‏⁪⁮‎⁯⁬⁮‮‌⁬⁫‍‏‫⁭⁪‫‌​‮‮‮‮((FileSystemInfo) JSONNode.\u200B‏‬‏⁬‭⁮⁭​‮​⁫​‮⁫⁫​‫‭‪⁮‬⁪‎⁪‎‪‪‭⁫‭‮⁭⁯‭​⁪⁬‍‮‮(JSONNode.\u202E‍‏‪⁫⁭‍‏⁫‎​‮‏​​‏‭‏‮‫‭‍‎⁮‫⁮‫‪‌‎‍‭‏⁫‏⁫‎‮⁫‮‮(aFileName))));
      FileStream aData = JSONNode.\u202E⁮⁫​⁮⁫⁫⁫‮‎‬‭‭⁫‬‌​⁯‪⁪⁮‭⁪‏‮‌​​‬​⁬‭⁪‮‬‮‪‮‌‮(aFileName);
      try
      {
label_2:
        int num1 = -587472565;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -59265730)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1594641772 ^ 150564757;
              continue;
            case 2:
              goto label_10;
            case 3:
              num1 = (int) num2 * 1002730153 ^ -1178414217;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -1182198864;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -59265730)) % 3U)
            {
              case 1:
                JSONNode.\u202B‎‪⁮⁫‮‭‍‮‌‫‬‭‪​⁪⁪⁬‪⁭⁯⁭‫⁭‭‫⁯​‪‫‬‮⁮⁯‌‫⁬‪‭⁭‮((IDisposable) aData);
                num3 = (int) num4 * 894235726 ^ -249467166;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206E⁯‫⁬‌‍‭‪‌‪‮⁬⁯‌‏⁫⁬⁬⁪‎⁫‫‪⁮‌⁪‎‎⁫‏‌⁪​‎⁮⁫‫‬‭⁭‮();
      string base64;
      try
      {
label_2:
        int num1 = -2106418339;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -318739240)) % 6U)
          {
            case 0:
              goto label_2;
            case 1:
              base64 = JSONNode.\u200C⁬⁪‍⁫‬​​‪‭⁬‏‬‍⁯‏‎‬‎‍‫‮‎⁪‮⁪‎‎‫‌‭‍‮⁬⁯‏‪‍⁫‭‮(JSONNode.\u202B⁫​‪‪⁬‎‮‌​⁪⁫‫‌‭⁯‎‏⁪‭‮‏‎‬‎‮‌‮​⁫‎⁮‮​‏‮⁪⁬⁮‌‮(aData));
              num1 = (int) num2 * 493781295 ^ -313974191;
              continue;
            case 2:
              JSONNode.\u200D⁬⁮⁪⁪‫‍‮‮‪‪‮​⁭​‭​⁯‫⁭‫‭⁫⁯‌‭‬‫‪‭‍‪‌‏⁪‌‏⁮⁭⁬‮((Stream) aData, 0L);
              num1 = (int) num2 * 1716023572 ^ 47535897;
              continue;
            case 3:
              num1 = (int) num2 * 2040337156 ^ 550640310;
              continue;
            case 5:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -357582543 ^ -1471821408;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -331418288;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -318739240)) % 3U)
            {
              case 1:
                JSONNode.\u202B‎‪⁮⁫‮‭‍‮‌‫‬‭‪​⁪⁪⁬‪⁭⁯⁭‫⁭‭‫⁯​‪‫‬‮⁮⁯‌‫⁬‪‭⁭‮((IDisposable) aData);
                num3 = (int) num4 * -803179430 ^ -328993138;
                continue;
              case 2:
                goto label_9;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -886676702;
      JSONClass jsonClass;
      JSONNode jsonNode;
      JSONArray jsonArray;
      int num2;
      int num3;
      JSONBinaryTag jsonBinaryTag;
      int num4;
      bool flag;
      string aKey;
      JSONNode aItem;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1053991571)) % 34U)
        {
          case 0:
            int num7;
            num1 = num7 = num3 >= num5 ? -126936010 : (num7 = -243945545);
            continue;
          case 1:
label_24:
            num1 = -1392002866;
            continue;
          case 2:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = -1375462282;
            continue;
          case 3:
label_22:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‎‮‭‎⁮‏⁬⁫⁭‮‏‮⁮⁭‍‍⁯⁪‌‮⁯‎⁮⁪⁫‮‭⁮‎‫⁯⁪⁬‍⁫‮‍‌‌‮(aReader));
            num1 = -1081175213;
            continue;
          case 4:
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -697022435 ^ 765781841;
            continue;
          case 5:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 886502157 ^ 265881369;
            continue;
          case 6:
label_27:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‪‎‎‬‭‎‬⁬‭⁭‫⁫​⁪‌⁯​⁯‬‭‭⁬‍‎⁮⁪⁬⁯‌‍​‫⁬⁯⁮‮⁪‎⁭‮(aReader));
            num1 = -1081175213;
            continue;
          case 7:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -2044875266 ^ 93524577;
            continue;
          case 8:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -869905497 ^ -1099634617;
            continue;
          case 9:
            jsonBinaryTag = (JSONBinaryTag) JSONNode.\u206A​⁫‪⁫‪⁫⁫‌⁯⁪⁫‭‏‌‌‫⁮‮‪‭‌‮‎⁭‭‮⁭⁬⁬‎⁭⁫⁬‫⁫‭⁯⁯‫‮(aReader);
            num1 = (int) num6 * -1641886276 ^ -1456504521;
            continue;
          case 10:
            num1 = (int) num6 * 220128850 ^ -1361105509;
            continue;
          case 11:
            num1 = (int) num6 * -2048420252 ^ -125768299;
            continue;
          case 12:
            goto label_12;
          case 13:
label_21:
            num5 = JSONNode.\u206D‎‮‭‎⁮‏⁬⁫⁭‮‏‮⁮⁭‍‍⁯⁪‌‮⁯‎⁮⁪⁫‮‭⁮‎‫⁯⁪⁬‍⁫‮‍‌‌‮(aReader);
            num1 = -1673746310;
            continue;
          case 14:
label_13:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‬⁬⁭‫⁯‎‮‎‮⁬⁭‫​‭‪‍‪‮‭‍‫‬⁫⁯‫‌⁯‎‍⁪‪⁬‭‫⁪⁪⁫⁬‎‮(aReader));
            num1 = -41536098;
            continue;
          case 15:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁫⁯⁫‬‏⁫‎‎‌⁫⁭‍⁮‍‍⁮⁫‌‭‮‫‬⁯⁪⁬⁫⁯‌⁯⁭⁪‮‮‏‫⁪‏‭‭‮(aReader));
            num1 = (int) num6 * -731282487 ^ -1207866729;
            continue;
          case 16:
            ++num3;
            num1 = (int) num6 * 187832600 ^ -1592631845;
            continue;
          case 17:
            num1 = (int) num6 * -76504730 ^ -1693306751;
            continue;
          case 18:
            aKey = JSONNode.\u202C‪‎‎‬‭‎‬⁬‭⁭‫⁫​⁪‌⁯​⁯‬‭‭⁬‍‎⁮⁪⁬⁯‌‍​‫⁬⁯⁮‮⁪‎⁭‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = -903430628;
            continue;
          case 19:
            num1 = (int) num6 * 1973492569 ^ 1057078098;
            continue;
          case 20:
            switch (jsonBinaryTag)
            {
              case JSONBinaryTag.Array:
                goto label_18;
              case JSONBinaryTag.Class:
                goto label_21;
              case JSONBinaryTag.Value:
                goto label_27;
              case JSONBinaryTag.IntValue:
                goto label_22;
              case JSONBinaryTag.DoubleValue:
                goto label_34;
              case JSONBinaryTag.BoolValue:
                goto label_13;
              case JSONBinaryTag.FloatValue:
                goto label_24;
              default:
                num1 = (int) num6 * -1674602593 ^ -1565508864;
                continue;
            }
          case 21:
            jsonClass = new JSONClass();
            num3 = 0;
            num1 = (int) num6 * -1827068825 ^ -2145241782;
            continue;
          case 22:
            num1 = -292958077;
            continue;
          case 23:
            flag = num2 < num4;
            num1 = -2076215648;
            continue;
          case 24:
            goto label_1;
          case 25:
label_34:
            num1 = -337974780;
            continue;
          case 26:
            num1 = (int) num6 * 1304754265 ^ 1511000194;
            continue;
          case 27:
            num1 = (int) num6 * -729411853 ^ -2022342984;
            continue;
          case 28:
label_18:
            num4 = JSONNode.\u206D‎‮‭‎⁮‏⁬⁫⁭‮‏‮⁮⁭‍‍⁯⁪‌‮⁯‎⁮⁪⁫‮‭⁮‎‫⁯⁪⁬‍⁫‮‍‌‌‮(aReader);
            num1 = -935587547;
            continue;
          case 29:
            int num8 = flag ? -1751830816 : (num8 = -1873193876);
            num1 = num8 ^ (int) num6 * 865304047;
            continue;
          case 31:
            num1 = (int) num6 * -1594962960 ^ 159398051;
            continue;
          case 32:
            num1 = (int) num6 * 882580763 ^ 1139994161;
            continue;
          case 33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁫‬‭⁭‫‌‍‭⁯⁫‍⁯‫‭‏‏‮‍‭⁭‫⁭‭‮‫⁫⁪​⁯⁭‮‌‪‬⁪⁭⁫⁯‪‮(aReader));
            num1 = (int) num6 * 391218238 ^ 134625002;
            continue;
          default:
            goto label_36;
        }
      }
label_12:
      throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮(JSONNode.\u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag.ToString()));
label_36:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206E​⁯⁮​​⁫⁭​‫‏‮‬⁭‫⁯⁬⁭​‪⁫‫‮​‌‫⁫⁮‪⁭⁬‌⁬‍⁭⁮⁮‫⁪‍‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 188163579;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 731929186)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1992149444 ^ -1025448003;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 759841655;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 731929186)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -771627445 ^ 2117978852;
                continue;
              case 1:
                JSONNode.\u202B‎‪⁮⁫‮‭‍‮‌‫‬‭‪​⁪⁪⁬‪⁭⁯⁭‫⁭‭‫⁯​‪‫‬‮⁮⁯‌‫⁬‪‭⁭‮((IDisposable) aReader);
                num3 = (int) num4 * 240932685 ^ -909916621;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200F⁯‪‏‏⁫⁯‭‌‭‎‬​‎‬⁮‌⁬​⁮‍‌‍‌⁮⁬‮⁪‮‮⁯‮‎‫‪⁭‮‮⁫‬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 2129160476;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 2101261814)) % 3U)
            {
              case 0:
                goto label_3;
              case 2:
                JSONNode.\u202B‎‪⁮⁫‮‭‍‮‌‫‬‭‪​⁪⁪⁬‪⁭⁯⁭‫⁭‭‫⁯​‪‫‬‮⁮⁯‌‫⁬‪‭⁭‮((IDisposable) aData);
                num1 = (int) num2 * -827753883 ^ 1863638046;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = 2083788338;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 15351666)) % 6U)
        {
          case 1:
            num1 = (int) num2 * 1809920516 ^ 730890363;
            continue;
          case 2:
            aData = JSONNode.\u202B⁪‌‍‎‮‪⁫‪‪‫‬‭‭‭⁯⁮⁬‭‮‬⁬‮‬‍‭⁫⁯⁪‫⁪⁫‌‮⁯⁭‬‏‏‏‮(numArray);
            JSONNode.\u200D⁬⁮⁪⁪‫‍‮‮‪‪‮​⁭​‭​⁯‫⁭‫‭⁫⁯‌‭‬‫‪‭‍‪‌‏⁪‌‏⁮⁭⁬‮((Stream) aData, 0L);
            num1 = (int) num2 * -1690657406 ^ 84829793;
            continue;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1412600249 ^ -1923141461;
            continue;
          case 4:
            numArray = JSONNode.\u200B⁪‬‫⁯⁭⁭⁫⁯⁫⁭​‫‫⁯‏‭⁫⁫‪‮‭‏‪⁯‏‮⁫⁯‏⁮‏⁯⁪⁭‏⁬‍⁯‏‮(aBase64);
            num1 = (int) num2 * 1244629396 ^ 837515510;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -261086039;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1440071473)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1697794350 ^ -743032319;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u206D​‮‮‍⁮‍‏⁭‌​⁭‎‪‮‪‫⁭‍‍‏‫⁯‍⁬‎‏⁭‬‌⁬‭⁬⁪​‫⁪‪⁫‪‮() => CultureInfo.InvariantCulture;

    static bool \u200F‍‌⁪‌‫⁭​‫⁬‬⁫‮⁯⁫‏⁯⁭⁯⁯‎‭⁯‪‮⁫‮‪⁬⁮​⁮⁬‎‎⁬‍‪‪‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206F‎‬⁮‎⁪‎‏‮⁮‬⁬‌⁯‬‎‍‬‬‎​‍​‮⁭⁭‭‏‬​‫‮‬‬‮‭‍​‬⁮‮() => base.GetHashCode();

    static char \u206F‪‭​‍⁬​‮⁮‏⁪⁬‬‭‌‭‪⁯‪‎‫⁪‭⁯⁬⁮‭‏⁫⁭‫‭‏‭​‮‍⁮‬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C⁯⁯‭‫​‬‪‪⁪⁬⁭‍‍⁪‎‮‍⁬​‭⁯⁫‎⁬⁪‬‮‌‭​‬‏‬⁪⁮‮‮‪‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F‭‎​⁪⁬⁯‌⁬‍‭‫​‫⁪‭‏⁪‍⁫‍‫⁪‪‬⁬‭‏‏⁫‪⁮⁯⁯⁫⁯⁮‌‬‍‮([In] string obj0) => obj0.Length;

    static string \u206F⁬‫‬‪‪‏​⁮⁮⁮⁭‬‎⁪​⁮​⁯⁫‪‌‫⁫‭‎‌⁭‫‍‫‍⁪‪‌‎​‫⁯‪‮([In] string obj0) => obj0.Trim();

    static bool \u200E⁫‭​‎⁭‌​⁬‮⁯‬‌⁮⁬‏‏​⁯‎‬⁪‏‮‭‫​⁬‮⁪⁪‏‮‪‮‍‌⁮‎‍‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206D⁮⁯‫⁯‭‪⁬‫‪⁮‭‮⁯‮‌‬‍‮‬⁪‮‫‪‫⁬‎‮⁯​‬⁬⁮‪⁮⁫⁮‌⁬⁭‮([In] string obj0) => new Exception(obj0);

    static string \u206B⁮‭‮⁭‮‬​‫⁫⁯⁯‍‭‌‭‬‍‭⁮⁬‮⁮‏‌​‎⁯‎‫⁪‎⁯⁭‪‭⁯‏‬‍‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200E‏‬⁪⁪⁬‌⁫‎‬‮‍⁪‫‍⁭‫‬‮‏‏⁪⁪⁬‫‏‬⁭⁭⁬‬‌⁬‬‎⁯⁪‮⁫‫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202E‍‏‪⁫⁭‍‏⁫‎​‮‏​​‏‭‏‮‫‭‍‎⁮‫⁮‫‪‌‎‍‭‏⁫‏⁫‎‮⁫‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200B‏‬‏⁬‭⁮⁭​‮​⁫​‮⁫⁫​‫‭‪⁮‬⁪‎⁪‎‪‪‭⁫‭‮⁭⁯‭​⁪⁬‍‮‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200B⁯‬⁪‭⁬‬‬‏‫‫⁬⁭‏‍‭​‪‏⁪⁮‎⁯⁬⁮‮‌⁬⁫‍‏‫⁭⁪‫‌​‮‮‮‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200D‬‫⁪​‏‍⁬⁯‎‭⁫‮⁬‮⁯​⁭‍‌​‍​⁫‪⁭⁬‏⁬⁮⁭‍⁪‫‪‭⁫‎⁪‌‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202E⁮⁫​⁮⁫⁫⁫‮‎‬‭‭⁫‬‌​⁯‪⁪⁮‭⁪‏‮‌​​‬​⁬‭⁪‮‬‮‪‮‌‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202B‎‪⁮⁫‮‭‍‮‌‫‬‭‪​⁪⁪⁬‪⁭⁯⁭‫⁭‭‫⁯​‪‫‬‮⁮⁯‌‫⁬‪‭⁭‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206E⁯‫⁬‌‍‭‪‌‪‮⁬⁯‌‏⁫⁬⁬⁪‎⁫‫‪⁮‌⁪‎‎⁫‏‌⁪​‎⁮⁫‫‬‭⁭‮() => new MemoryStream();

    static void \u200D⁬⁮⁪⁪‫‍‮‮‪‪‮​⁭​‭​⁯‫⁭‫‭⁫⁯‌‭‬‫‪‭‍‪‌‏⁪‌‏⁮⁭⁬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202B⁫​‪‪⁬‎‮‌​⁪⁫‫‌‭⁯‎‏⁪‭‮‏‎‬‎‮‌‮​⁫‎⁮‮​‏‮⁪⁬⁮‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200C⁬⁪‍⁫‬​​‪‭⁬‏‬‍⁯‏‎‬‎‍‫‮‎⁪‮⁪‎‎‫‌‭‍‮⁬⁯‏‪‍⁫‭‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A​⁫‪⁫‪⁫⁫‌⁯⁪⁫‭‏‌‌‫⁮‮‪‭‌‮‎⁭‭‮⁭⁬⁬‎⁭⁫⁬‫⁫‭⁯⁯‫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D‎‮‭‎⁮‏⁬⁫⁭‮‏‮⁮⁭‍‍⁯⁪‌‮⁯‎⁮⁪⁫‮‭⁮‎‫⁯⁪⁬‍⁫‮‍‌‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C‪‎‎‬‭‎‬⁬‭⁭‫⁫​⁪‌⁯​⁯‬‭‭⁬‍‎⁮⁪⁬⁯‌‍​‫⁬⁯⁮‮⁪‎⁭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206B⁫‬‭⁭‫‌‍‭⁯⁫‍⁯‫‭‏‏‮‍‭⁭‫⁭‭‮‫⁫⁪​⁯⁭‮‌‪‬⁪⁭⁫⁯‪‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F‬⁬⁭‫⁯‎‮‎‮⁬⁭‫​‭‪‍‪‮‭‍‫‬⁫⁯‫‌⁯‎‍⁪‪⁬‭‫⁪⁪⁫⁬‎‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200B⁫⁯⁫‬‏⁫‎‎‌⁫⁭‍⁮‍‍⁮⁫‌‭‮‫‬⁯⁪⁬⁫⁯‌⁯⁭⁪‮‮‏‫⁪‏‭‭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206E​⁯⁮​​⁫⁭​‫‏‮‬⁭‫⁯⁬⁭​‪⁫‫‮​‌‫⁫⁮‪⁭⁬‌⁬‍⁭⁮⁮‫⁪‍‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200F⁯‪‏‏⁫⁯‭‌‭‎‬​‎‬⁮‌⁬​⁮‍‌‍‌⁮⁬‮⁪‮‮⁯‮‎‫‪⁭‮‮⁫‬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200B⁪‬‫⁯⁭⁭⁫⁯⁫⁭​‫‫⁯‏‭⁫⁫‪‮‭‏‪⁯‏‮⁫⁯‏⁮‏⁯⁪⁭‏⁬‍⁯‏‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202B⁪‌‍‎‮‪⁫‪‪‫‬‭‭‭⁯⁮⁬‭‮‬⁬‮‬‍‭⁫⁯⁪‫⁪⁫‌‮⁯⁭‬‏‏‏‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
