// Decompiled with JetBrains decompiler
// Type: @Ժ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using bZ7XJEldHTftmLrPY6u;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Text;

internal sealed class \u0040Ժ : Stream
{
  public DateTime? \u0040ӓ;
  private int \u0040Ӕ;
  internal object \u0040ӕ;
  internal bool \u0040Ӗ;
  private bool \u0040ӗ;
  internal object \u0040Ә;
  internal object \u0040ә;
  private int \u0040Ӛ;
  internal static readonly DateTime \u0040ӛ;
  internal static readonly object \u0040Ӝ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.YNk(bool _param1)
  {
    try
    {
      if (this.\u0040Ӗ)
        return;
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 3:
            if (this.\u0040ӕ == null)
              goto label_10;
            else
              goto default;
          case 4:
            this.\u0040Ӛ = \u0040ԝ.\u0040գ((\u0040Ո) this.\u0040ӕ);
            if (true)
            {
              num = 6;
              continue;
            }
            goto case 5;
          case 5:
            if (_param1)
            {
              \u0040Ժ.\u0040Ӡ();
              num = !\u0040Ժ.\u0040ӟ() ? 0 : 3;
              continue;
            }
            goto label_10;
          case 6:
            goto label_10;
          default:
            \u0040Ժ.\u0040ӝ(this.\u0040ӕ);
            if (\u0040Ժ.\u0040ӟ())
            {
              num = 4;
              continue;
            }
            goto case 4;
        }
      }
label_10:
      this.\u0040Ӗ = true;
    }
    finally
    {
      \u0040Ժ.\u0040Ӟ((object) this, _param1);
    }
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.i9S()
  {
    if (this.\u0040Ӗ)
      throw new ObjectDisposedException((string) \u0040Ժ.\u0040ӡ(574024));
    return \u0040Ժ.\u0040Ӣ(((\u0040Ո) this.\u0040ӕ).\u0040ӝ);
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.\u0033s4() => false;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  bool Stream.\u0033nW()
  {
    if (this.\u0040Ӗ)
      throw new ObjectDisposedException((string) \u0040Ժ.\u0040ӡ(574024));
    return \u0040Ժ.\u0040ӣ(((\u0040Ո) this.\u0040ӕ).\u0040ӝ);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u003761()
  {
    if (this.\u0040Ӗ)
      throw new ObjectDisposedException((string) \u0040Ժ.\u0040ӡ(574024));
    \u0040Ժ.\u0040Ӥ(this.\u0040ӕ);
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.Yg3() => throw new NotImplementedException();

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.SU3()
  {
    if (((\u0040Ո) this.\u0040ӕ).\u0040Ӕ == (\u0040Ո.\u0040ӓ) 0)
      return ((\u0040Չ) ((\u0040Ո) this.\u0040ӕ).\u0040ӓ).\u0040Ӛ + (long) this.\u0040Ӕ;
    return ((\u0040Ո) this.\u0040ӕ).\u0040Ӕ == (\u0040Ո.\u0040ӓ) 1 ? ((\u0040Չ) ((\u0040Ո) this.\u0040ӕ).\u0040ӓ).\u0040Ӗ + (long) ((\u0040Ո) this.\u0040ӕ).\u0040ӣ : 0L;
  }

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.\u0035i7(long _param1) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  int Stream.Td7(byte[] _param1, int _param2, int _param3)
  {
    if (this.\u0040Ӗ)
      throw new ObjectDisposedException((string) \u0040Ժ.\u0040ӡ(574024));
    int num = \u0040Ժ.\u0040ӥ(this.\u0040ӕ, (object) _param1, _param2, _param3);
    if (this.\u0040ӗ)
      return num;
    this.\u0040ӗ = true;
    \u0040ԝ.\u0040ٜ(this, (string) ((\u0040Ո) this.\u0040ӕ).\u0040Ӡ);
    \u0040ԝ.\u0040ޓ((string) ((\u0040Ո) this.\u0040ӕ).\u0040ӡ, this);
    return num;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  long Stream.\u00392X(long _param1, SeekOrigin _param2) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.irC(long _param1) => throw new NotImplementedException();

  [MethodImpl(MethodImplOptions.NoInlining)]
  void Stream.Vi7(byte[] _param1, int _param2, int _param3)
  {
    \u0040Ժ.\u0040Ӡ();
    int num = !\u0040Ժ.\u0040ӟ() ? 6 : 5;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 5:
          if (this.\u0040Ӗ)
          {
            if (true)
            {
              num = 3;
              continue;
            }
            goto case 2;
          }
          else if (((\u0040Ո) this.\u0040ӕ).\u0040Ӕ != (\u0040Ո.\u0040ӓ) 2)
            goto case 4;
          else
            goto case 2;
        case 1:
          this.\u0040Ӕ = \u0040ԝ.\u0040ן(this);
          num = 4;
          continue;
        case 2:
        case 6:
          if (((\u0040Ո) this.\u0040ӕ).\u0040ӗ != (d0PsxKlKEbhsDQhk6Pl) 0)
            goto label_2;
          else
            goto case 1;
        case 3:
          goto label_9;
        case 4:
          \u0040Ժ.\u0040Ӧ(this.\u0040ӕ, (object) _param1, _param2, _param3);
          num = 7;
          continue;
        case 7:
          goto label_11;
        default:
          num = 1;
          continue;
      }
    }
label_2:
    throw new InvalidOperationException();
label_11:
    return;
label_9:
    throw new ObjectDisposedException((string) \u0040Ժ.\u0040ӡ(574024));
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  static \u0040Ժ()
  {
    int num = 4;
    if (\u0040Ժ.\u0040Ӡ())
      ;
    while (true)
    {
      switch (num)
      {
        case 1:
        case 3:
          \u0040Ժ.\u0040ӛ = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
          break;
        case 4:
          \u0040Ժ.\u0040ӧ();
          if (\u0040Ժ.\u0040Ӡ())
          {
            if (\u0040Ժ.\u0040ӟ())
            {
              num = 0;
              continue;
            }
            break;
          }
          num = 3;
          continue;
        case 5:
          goto label_3;
      }
      \u0040Ժ.\u0040Ӝ = \u0040Ժ.\u0040Ө(\u0040Ժ.\u0040ӡ(591720));
      num = 5;
    }
label_3:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӝ(object _param0) => ((Stream) _param0).Dispose();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӟ(object _param0, bool _param1) => __nonvirtual (((Stream) _param0).Dispose(_param1));

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӟ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӡ() => false;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӡ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӣ(object _param0) => ((Stream) _param0).CanRead;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӣ(object _param0) => ((Stream) _param0).CanWrite;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӥ(object _param0) => ((Stream) _param0).Flush();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ӥ(object _param0, object _param1, int _param2, int _param3) => ((Stream) _param0).Read((byte[]) _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӧ(object _param0, object _param1, int _param2, int _param3) => ((Stream) _param0).Write((byte[]) _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӧ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ө(object _param0) => (object) Encoding.GetEncoding((string) _param0);
}
