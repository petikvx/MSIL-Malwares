// Decompiled with JetBrains decompiler
// Type: IePKNcXLTNIMcTZdW.dfKKaWJYLbbMZfIJa
// Assembly: aQcPbbbdLQZSSTKIM, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 47E00139-9DB6-4FCB-A5FC-38C8169637E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.Crypt.gen-26a2f8823cf62fe2f297178d880650845074c3de7a3615533e5daeb96cb06bb6.exe

using eWZNdcQbIJISRORUV;
using LXhbeVUUZXSKhLaOZ;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Formatting.Rules;
using Microsoft.VisualStudio.ComponentModelHost;
using Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem;
using Microsoft.VisualStudio.LanguageServices.Implementation.TaskList;
using Microsoft.VisualStudio.LanguageServices.Remote;
using Microsoft.VisualStudio.LanguageServices.Remote.CSharp;
using Microsoft.VisualStudio.LiveShare.WebEditors.ContainedLanguage;
using Microsoft.VisualStudio.Shell;
using Microsoft.VisualStudio.Shell.Interop;
using Microsoft.VisualStudio.TextManager.Interop;
using Microsoft.VisualStudio.Utilities;
using System;
using System.ComponentModel.Composition;
using System.Linq;
using WJfOKNMacQQaJQaXV;

namespace IePKNcXLTNIMcTZdW
{
  [Export(typeof (IContainedLanguageProvider))]
  internal class dfKKaWJYLbbMZfIJa : IContainedLanguageProvider
  {
    private readonly IContentTypeRegistryService LdhaWIWNOTNQWcdhd;
    private readonly SVsServiceProvider IbOKXbTfeYSfTWTIg;
    private readonly RemoteLanguageServiceWorkspace dgKbUcdYUTegUVNaL;
    private readonly cNgJSfVWdPZIOMWOd QbdYLbaKSTbNbJKPK;

    public IContentType WYcWIVVVXQRhRaJYO(string MaONRWXdZWJPNfSNJ) => this.LdhaWIWNOTNQWcdhd.GetContentType("C#_LSP");

    public IVsContainedLanguage gZOfYRhhfXMLbehIc(
      string XSObUUgVgJUORbKJh,
      IVsTextBufferCoordinator gPYNYfMOIJSfaMbTd)
    {
      IComponentModel service = ((IServiceProvider) this.IbOKXbTfeYSfTWTIg).GetService(typeof (SComponentModel)) as IComponentModel;
      AbstractProject abstractProject = ((dfKKaWJYLbbMZfIJa) this.QbdYLbaKSTbNbJKPK).bMXaYYYXVJhRJIWaL(XSObUUgVgJUORbKJh);
      CSharpLspLanguageService lspLanguageService = CSharpLspLanguageService.FromServiceProvider((IServiceProvider) this.IbOKXbTfeYSfTWTIg);
      return (IVsContainedLanguage) new Microsoft.VisualStudio.LanguageServices.Implementation.Venus.ContainedLanguage<CSharpLspPackage, CSharpLspLanguageService>(gPYNYfMOIJSfaMbTd, service, abstractProject, (IVsHierarchy) new ZMMXUOQXeZZIXXfRQ(XSObUUgVgJUORbKJh), uint.MaxValue, lspLanguageService, (SourceCodeKind) 0, (IFormattingRule) null, (Workspace) this.dgKbUcdYUTegUVNaL);
    }

    public AbstractProject bMXaYYYXVJhRJIWaL(string aUSWaWgNIPQJhSWIN)
    {
      // ISSUE: variable of a compiler-generated type
      cNgJSfVWdPZIOMWOd.KNITfURYTWXLUMgRc kniTfUrytwxluMgRc = (cNgJSfVWdPZIOMWOd.KNITfURYTWXLUMgRc) new WShISVYLTJhfTLTRc();
      // ISSUE: reference to a compiler-generated field
      kniTfUrytwxluMgRc.MLQSOQbROMKJUdcJe = aUSWaWgNIPQJhSWIN;
      VisualStudioProjectTracker projectTracker = ((cNgJSfVWdPZIOMWOd) this).cVPYIeUNIUYSSJMMZ.ProjectTracker;
      // ISSUE: reference to a compiler-generated method
      AbstractProject abstractProject1 = ImmutableArrayExtensions.FirstOrDefault<AbstractProject>(projectTracker.ImmutableProjects, new Func<AbstractProject, bool>(kniTfUrytwxluMgRc.ccKaKgbLghdbQPZTe));
      if (abstractProject1 != null)
        return abstractProject1;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      AbstractProject abstractProject2 = (AbstractProject) new cNgJSfVWdPZIOMWOd(projectTracker, (Func<ProjectId, IVsReportExternalErrors>) null, kniTfUrytwxluMgRc.MLQSOQbROMKJUdcJe, kniTfUrytwxluMgRc.MLQSOQbROMKJUdcJe, (IVsHierarchy) null, "C#_LSP", Guid.NewGuid(), (IServiceProvider) ((cNgJSfVWdPZIOMWOd) this).ZQbVIXJbSUUMcdWQX, (VisualStudioWorkspaceImpl) null, (HostDiagnosticUpdateSource) null);
      projectTracker.AddProject(abstractProject2);
      return abstractProject2;
    }
  }
}
