// Decompiled with JetBrains decompiler
// Type: Pz9.w2M
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using Ft2;
using System;
using System.Collections;
using System.ComponentModel;
using System.Data.Linq.Mapping;
using System.Runtime.InteropServices;
using System.Threading;

namespace Pz9
{
  [Table(Name = "dbo.Leave")]
  public class w2M : INotifyPropertyChanging, INotifyPropertyChanged
  {
    private static PropertyChangingEventArgs Ⴐ = new PropertyChangingEventArgs(string.Empty);
    private string _leave_id;
    private DateTime _leave_date;
    private DateTime _apply_date;
    private int _leave_duration;
    private string _reason;
    private string _people_id;
    private string _status;
    private DateTime? _Reject_approve_date;
    private Df9.d9F Ⴀ;

    [Column(CanBeNull = false, DbType = "VarChar(10) NOT NULL", IsPrimaryKey = true, Storage = "_leave_id")]
    public string Ⴍ
    {
      get => this._leave_id;
      [param: In] set
      {
        if (string.Equals(this._leave_id, value))
          return;
        this.e3E6();
        this._leave_id = value;
        this.e6C4("leave_id");
      }
    }

    [Column(DbType = "Date NOT NULL", Storage = "_leave_date")]
    public DateTime Ⴈ
    {
      get => this._leave_date;
      [param: In] set
      {
        if (DateTime.Compare(this._leave_date, value) == 0)
          return;
        this.e3E6();
        this._leave_date = value;
        this.e6C4("leave_date");
      }
    }

    [Column(DbType = "Date NOT NULL", Storage = "_apply_date")]
    public DateTime Ⴀ
    {
      get => this._apply_date;
      [param: In] set
      {
        if (DateTime.Compare(this._apply_date, value) == 0)
          return;
        this.e3E6();
        this._apply_date = value;
        this.e6C4("apply_date");
      }
    }

    [Column(DbType = "Int NOT NULL", Storage = "_leave_duration")]
    public int Ⴀ
    {
      get => this._leave_duration;
      [param: In] set
      {
        if (this._leave_duration == value)
          return;
        this.e3E6();
        this._leave_duration = value;
        this.e6C4("leave_duration");
      }
    }

    [Column(CanBeNull = false, DbType = "VarChar(100) NOT NULL", Storage = "_reason")]
    public string Ⴅ
    {
      get => this._reason;
      [param: In] set
      {
        if (string.Equals(this._reason, value))
          return;
        this.e3E6();
        this._reason = value;
        this.e6C4("reason");
      }
    }

    [Column(CanBeNull = false, DbType = "VarChar(10) NOT NULL", Storage = "_people_id")]
    public string Ⴐ
    {
      get => (IEnumerable) this._people_id as string;
      [param: In] set
      {
        if (string.Equals(this._people_id, value))
          return;
        this.e3E6();
        this._people_id = value;
        this.e6C4("people_id");
      }
    }

    [Column(DbType = "VarChar(10)", Storage = "_status")]
    public string Ⴃ
    {
      get => (IEnumerable) this._status as string;
      [param: In] set
      {
        if (string.Equals(this._status, value))
          return;
        this.e3E6();
        this._status = value;
        this.e6C4("status");
      }
    }

    [Column(DbType = "Date", Storage = "_Reject_approve_date")]
    public DateTime? Ⴐ
    {
      get => this._Reject_approve_date;
      [param: In] set
      {
        if (this._Reject_approve_date.Equals((object) value))
          return;
        this.e3E6();
        this._Reject_approve_date = value;
        this.e6C4("Reject_approve_date");
      }
    }

    public event PropertyChangingEventHandler Ⴐ
    {
      add
      {
        object obj1 = (object) this.Ⴀ.Ⴈ;
        object obj2;
        do
        {
          obj2 = (object) (PropertyChangingEventHandler) obj1;
          obj1 = (object) Interlocked.CompareExchange<PropertyChangingEventHandler>(ref this.Ⴀ.Ⴈ, (object) (PropertyChangingEventHandler) Delegate.Combine((Delegate) obj2, (Delegate) value) as PropertyChangingEventHandler, obj2 as PropertyChangingEventHandler);
        }
        while ((PropertyChangingEventHandler) obj1 != obj2 as PropertyChangingEventHandler);
      }
      remove
      {
        object obj = (object) this.Ⴀ.Ⴈ;
        MulticastDelegate comparand;
        do
        {
          comparand = (MulticastDelegate) (obj as PropertyChangingEventHandler);
          obj = (object) Interlocked.CompareExchange<PropertyChangingEventHandler>(ref this.Ⴀ.Ⴈ, (MulticastDelegate) ((comparand as PropertyChangingEventHandler) - value) as PropertyChangingEventHandler, comparand as PropertyChangingEventHandler);
        }
        while (obj as PropertyChangingEventHandler != (PropertyChangingEventHandler) comparand);
      }
    }

    public event PropertyChangedEventHandler Ⴓ
    {
      add
      {
        object obj = (object) this.Ⴀ.Ⴐ;
        MulticastDelegate comparand;
        do
        {
          comparand = (MulticastDelegate) obj;
          obj = (object) Interlocked.CompareExchange<PropertyChangedEventHandler>(ref this.Ⴀ.Ⴐ, (MulticastDelegate) ((comparand as PropertyChangedEventHandler) + value) as PropertyChangedEventHandler, comparand as PropertyChangedEventHandler);
        }
        while ((PropertyChangedEventHandler) obj != comparand as PropertyChangedEventHandler);
      }
      remove
      {
        object obj = (object) this.Ⴀ.Ⴐ;
        MulticastDelegate multicastDelegate;
        do
        {
          multicastDelegate = (MulticastDelegate) (obj as PropertyChangedEventHandler);
          obj = (object) Interlocked.CompareExchange<PropertyChangedEventHandler>(ref this.Ⴀ.Ⴐ, (PropertyChangedEventHandler) Delegate.Remove((Delegate) multicastDelegate, (Delegate) value), (PropertyChangedEventHandler) multicastDelegate);
        }
        while (obj as PropertyChangedEventHandler != multicastDelegate as PropertyChangedEventHandler);
      }
    }

    protected virtual void e3E6()
    {
      if (this.Ⴀ.Ⴈ == null)
        return;
      object ⴈ = (object) this.Ⴀ.Ⴈ;
      if (!(ⴈ is PropertyChangingEventHandler))
        return;
      (ⴈ as PropertyChangingEventHandler)((object) this, w2M.Ⴐ);
    }

    protected virtual void e6C4([In] string obj0)
    {
      if (this.Ⴀ.Ⴐ == null)
        return;
      object ⴐ = (object) this.Ⴀ.Ⴐ;
      if ((PropertyChangedEventHandler) ⴐ == null)
        return;
      ((PropertyChangedEventHandler) ⴐ)((object) this, new PropertyChangedEventArgs(obj0));
    }
  }
}
