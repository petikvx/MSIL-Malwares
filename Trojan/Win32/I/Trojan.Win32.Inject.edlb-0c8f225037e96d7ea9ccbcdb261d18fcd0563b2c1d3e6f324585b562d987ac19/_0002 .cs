// Decompiled with JetBrains decompiler
// Type:  
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 32BC53D7-A239-4C18-BE53-ECC907E1DE31
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Inject.edlb-0c8f225037e96d7ea9ccbcdb261d18fcd0563b2c1d3e6f324585b562d987ac19.exe

using System;

internal struct \u0002\u2001
{
  private \u000E\u2000[] \u0002;
  private int \u0003;

  public \u0002\u2001(int _param1)
  {
    this.\u0003 = _param1;
    this.\u0002 = new \u000E\u2000[1 << _param1];
  }

  public void \u0002()
  {
    for (uint index = 1; (long) index < (long) (1 << this.\u0003); ++index)
      this.\u0002[(IntPtr) index].\u0002();
  }

  public void \u0002(\u0005\u2001 _param1, uint _param2)
  {
    uint index = 1;
    int num1 = this.\u0003;
    while (num1 > 0)
    {
      --num1;
      uint num2 = _param2 >> num1 & 1U;
      this.\u0002[(IntPtr) index].\u0002(_param1, num2);
      index = index << 1 | num2;
    }
  }

  public void \u0003(\u0005\u2001 _param1, uint _param2)
  {
    uint index1 = 1;
    for (uint index2 = 0; (long) index2 < (long) this.\u0003; ++index2)
    {
      uint num = _param2 & 1U;
      this.\u0002[(IntPtr) index1].\u0002(_param1, num);
      index1 = index1 << 1 | num;
      _param2 >>= 1;
    }
  }

  public uint \u0002(uint _param1)
  {
    uint num1 = 0;
    uint index = 1;
    int num2 = this.\u0003;
    while (num2 > 0)
    {
      --num2;
      uint num3 = _param1 >> num2 & 1U;
      num1 += this.\u0002[(IntPtr) index].\u0002(num3);
      index = (index << 1) + num3;
    }
    return num1;
  }

  public uint \u0003(uint _param1)
  {
    uint num1 = 0;
    uint index1 = 1;
    for (int index2 = this.\u0003; index2 > 0; --index2)
    {
      uint num2 = _param1 & 1U;
      _param1 >>= 1;
      num1 += this.\u0002[(IntPtr) index1].\u0002(num2);
      index1 = index1 << 1 | num2;
    }
    return num1;
  }

  public static uint \u0002(\u000E\u2000[] _param0, uint _param1, int _param2, uint _param3)
  {
    uint num1 = 0;
    uint num2 = 1;
    for (int index = _param2; index > 0; --index)
    {
      uint num3 = _param3 & 1U;
      _param3 >>= 1;
      num1 += _param0[(IntPtr) (_param1 + num2)].\u0002(num3);
      num2 = num2 << 1 | num3;
    }
    return num1;
  }

  public static void \u0002(
    \u000E\u2000[] _param0,
    uint _param1,
    \u0005\u2001 _param2,
    int _param3,
    uint _param4)
  {
    uint num1 = 1;
    for (int index = 0; index < _param3; ++index)
    {
      uint num2 = _param4 & 1U;
      _param0[(IntPtr) (_param1 + num1)].\u0002(_param2, num2);
      num1 = num1 << 1 | num2;
      _param4 >>= 1;
    }
  }
}
