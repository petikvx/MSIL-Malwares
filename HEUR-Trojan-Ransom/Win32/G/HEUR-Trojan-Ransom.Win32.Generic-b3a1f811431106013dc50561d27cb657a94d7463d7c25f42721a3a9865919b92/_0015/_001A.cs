// Decompiled with JetBrains decompiler
// Type: .
// Assembly: USD payment 01-09-2012.pdfi, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EC12A138-F0DC-4201-8C73-2693DFCF5C12
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-b3a1f811431106013dc50561d27cb657a94d7463d7c25f42721a3a9865919b92.exe

using \u0006;
using \u0015;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0015
{
  internal class \u001A
  {
    internal sealed class \u001E
    {
      internal static readonly int[] \u0001;
      internal static readonly int[] \u0002;
      internal static readonly int[] \u0003;
      internal static readonly int[] \u0004;
      internal int \u0005;
      internal int \u0006;
      internal int \u0007;
      internal int \u0008;
      internal int \u000E;
      internal bool \u000F;
      internal \u001A.\u0087 \u0010;
      internal \u001A.\u008F \u0011;
      internal \u001A.\u0095 \u0012;
      internal \u001A.\u0092 \u0013;
      internal \u001A.\u0092 \u0014;

      public \u001E([In] byte[] obj0)
      {
        this.\u0010 = new \u001A.\u0087();
        this.\u0011 = new \u001A.\u008F();
        this.\u0005 = 2;
        \u0002.\u009B\u0007(obj0, this.\u0010, obj0.Length, 0);
      }

      static \u001E()
      {
        do
        {
          int length1 = 29;
          int length2;
          while (true)
          {
            int[] numArray1 = new int[length1];
            // ISSUE: field reference
            RuntimeFieldHandle fldHandle1 = __fieldref (\u009B.\u0005);
            if (true)
              goto label_9;
label_2:
            \u001A.\u001E.\u0001 = numArray1;
            if (true)
            {
              int[] numArray2 = new int[29];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle2 = __fieldref (\u009B.\u0006);
              if (true)
                goto label_10;
label_4:
              \u001A.\u001E.\u0002 = numArray2;
              int[] numArray3 = new int[30];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle3 = __fieldref (\u009B.\u0007);
              if (true)
                goto label_11;
label_5:
              \u001A.\u001E.\u0003 = numArray3;
              length2 = 30;
              if (length2 == 0)
              {
                length1 = length2;
                continue;
              }
              break;
label_11:
              RuntimeHelpers.InitializeArray((Array) numArray3, fldHandle3);
              goto label_5;
label_10:
              RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
              goto label_4;
            }
            else
              goto label_8;
label_9:
            RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
            goto label_2;
          }
          int[] numArray = new int[length2];
          // ISSUE: field reference
          RuntimeFieldHandle fldHandle = __fieldref (\u009B.\u0008);
          if (true)
            goto label_12;
label_7:
          \u001A.\u001E.\u0004 = numArray;
          goto label_8;
label_12:
          RuntimeHelpers.InitializeArray((Array) numArray, fldHandle);
          goto label_7;
label_8:;
        }
        while (false);
      }
    }

    internal sealed class \u0087
    {
      internal byte[] \u0001;
      internal int \u0002 = 0;
      internal int \u0003 = 0;
      internal uint \u0004 = 0;
      internal int \u0005 = 0;
    }

    internal sealed class \u008F
    {
      internal byte[] \u0001 = new byte[32768];
      internal int \u0002 = 0;
      internal int \u0003 = 0;
    }

    internal sealed class \u0092
    {
      internal short[] \u0001;
      public static readonly \u001A.\u0092 \u0002;
      public static readonly \u001A.\u0092 \u0003;

      static \u0092()
      {
        byte[] numArray1 = new byte[288];
        if (true)
          goto label_25;
label_1:
        if (true)
          goto label_26;
label_2:
        byte[] numArray2;
        int num1;
        if (true)
        {
          while (num1 < 144)
          {
            byte[] numArray3 = numArray2;
            int index = num1;
            int num2 = index + 1;
            if (true)
              goto label_27;
label_5:
            numArray3[index] = (byte) 8;
            continue;
label_27:
            num1 = num2;
            goto label_5;
          }
          if (true)
          {
            while (num1 < 256)
            {
              byte[] numArray4 = numArray2;
              int index = num1;
              int num3 = index + 1;
              if (true)
                goto label_28;
label_9:
              numArray4[index] = (byte) 9;
              continue;
label_28:
              num1 = num3;
              goto label_9;
            }
          }
          else
            goto label_19;
        }
        else
          goto label_17;
label_13:
        int num4;
        int num5;
        while (true)
        {
          num4 = num1;
          num5 = 280;
          if (num5 != 0)
          {
            if (num4 < num5)
            {
              byte[] numArray5 = numArray2;
              int index = num1;
              int num6 = index + 1;
              if (true)
                goto label_29;
label_12:
              numArray5[index] = (byte) 7;
              continue;
label_29:
              num1 = num6;
              goto label_12;
            }
            else
              goto label_17;
          }
          else
            break;
        }
        int num7 = num5;
        int num8 = num4;
        goto label_22;
label_17:
        while (num1 < 288)
        {
          byte[] numArray6 = numArray2;
          int index = num1;
          int num9 = index + 1;
          if (true)
            goto label_30;
label_16:
          numArray6[index] = (byte) 8;
          continue;
label_30:
          num1 = num9;
          goto label_16;
        }
        \u001A.\u0092.\u0002 = new \u001A.\u0092(numArray2);
        numArray2 = new byte[32];
label_19:
        num1 = 0;
label_21:
        num8 = num1;
        num7 = 32;
label_22:
        if (num8 < num7)
        {
          numArray2[num1++] = (byte) 5;
          goto label_21;
        }
        else
        {
          if (true)
          {
            \u001A.\u0092.\u0003 = new \u001A.\u0092(numArray2);
            return;
          }
          goto label_13;
        }
label_26:
        num1 = 0;
        goto label_2;
label_25:
        numArray2 = numArray1;
        goto label_1;
      }

      public \u0092([In] byte[] obj0) => \u0002.\u008F\u0007(obj0, this);
    }

    internal sealed class \u0095
    {
      internal static readonly int[] \u0001;
      internal static readonly int[] \u0002;
      internal byte[] \u0003;
      internal byte[] \u0004;
      internal \u001A.\u0092 \u0005;
      internal int \u0006;
      internal int \u0007;
      internal int \u0008;
      internal int \u000E;
      internal int \u000F;
      internal int \u0010;
      internal byte \u0011;
      internal int \u0012;
      internal static readonly int[] \u0013;

      static \u0095()
      {
label_0:
        int[] numArray1 = new int[3];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle1 = __fieldref (\u009B.\u000E);
        if (true)
          goto label_9;
label_1:
        \u001A.\u0095.\u0001 = numArray1;
        int length;
        do
        {
          if (true)
          {
            length = 3;
            if (length != 0)
            {
              int[] numArray2 = new int[length];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle2 = __fieldref (\u009B.\u000F);
              if (true)
                goto label_10;
label_5:
              \u001A.\u0095.\u0002 = numArray2;
              continue;
label_10:
              RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
              goto label_5;
            }
            else
              goto label_7;
          }
          else
            goto label_0;
        }
        while (false);
        length = 19;
label_7:
        int[] numArray3 = new int[length];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle3 = __fieldref (\u009B.\u0010);
        if (true)
          goto label_11;
label_8:
        \u001A.\u0095.\u0013 = numArray3;
        return;
label_11:
        RuntimeHelpers.InitializeArray((Array) numArray3, fldHandle3);
        goto label_8;
label_9:
        RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
        goto label_1;
      }
    }

    internal sealed class \u0097
    {
      private static readonly int[] \u0001;
      internal static readonly byte[] \u0002;
      private static readonly short[] \u0003;
      private static readonly byte[] \u0004;
      private static readonly short[] \u0005;
      private static readonly byte[] \u0006;

      static \u0097()
      {
label_0:
        int[] numArray1 = new int[19];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle1 = __fieldref (\u009B.\u0011);
        if (true)
          goto label_27;
label_1:
        \u001A.\u0097.\u0001 = numArray1;
label_2:
        byte[] numArray2 = new byte[16];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle2 = __fieldref (\u009B.\u0012);
        if (true)
          goto label_28;
label_3:
        \u001A.\u0097.\u0002 = numArray2;
        \u001A.\u0097.\u0003 = new short[286];
        \u001A.\u0097.\u0004 = new byte[286];
        int index1;
        if (true)
        {
          if (true)
          {
            index1 = 0;
            goto label_8;
          }
          else
            goto label_8;
        }
        else
          goto label_10;
label_6:
        byte[] numArray3 = \u001A.\u0097.\u0004;
        int index2 = index1;
        int num1 = index2 + 1;
        if (true)
          goto label_30;
label_7:
        numArray3[index2] = (byte) 8;
        goto label_8;
label_30:
        index1 = num1;
        goto label_7;
label_8:
        if (index1 < 144)
        {
          \u001A.\u0097.\u0003[index1] = \u0002.\u0084\u0007(48 + index1 << 8);
          goto label_6;
        }
        else
          goto label_12;
label_10:
        byte[] numArray4 = \u001A.\u0097.\u0004;
        int index3 = index1;
        int num2 = index3 + 1;
        if (true)
          goto label_31;
label_11:
        numArray4[index3] = (byte) 9;
        goto label_12;
label_31:
        index1 = num2;
        goto label_11;
label_12:
        if (index1 < 256)
        {
          \u001A.\u0097.\u0003[index1] = \u0002.\u0084\u0007(256 + index1 << 7);
          goto label_10;
        }
        else
        {
          while (true)
          {
            int num3 = index1;
label_17:
            if (num3 < 280)
            {
              \u001A.\u0097.\u0003[index1] = \u0002.\u0084\u0007(index1 - 256 << 9);
              if (true)
              {
                byte[] numArray5 = \u001A.\u0097.\u0004;
                int index4 = index1;
                int num4 = index4 + 1;
                if (true)
                  goto label_32;
label_15:
                numArray5[index4] = (byte) 7;
                continue;
label_32:
                index1 = num4;
                goto label_15;
              }
              else
                goto label_0;
            }
            else
            {
              for (; index1 < 286; \u001A.\u0097.\u0004[index1++] = (byte) 8)
                \u001A.\u0097.\u0003[index1] = \u0002.\u0084\u0007(index1 - 88 << 8);
              \u001A.\u0097.\u0005 = new short[30];
              \u001A.\u0097.\u0006 = new byte[30];
              if (true)
              {
                int num5;
                for (index1 = 0; index1 < 30; index1 = num5 + 1)
                {
                  \u001A.\u0097.\u0005[index1] = \u0002.\u0084\u0007(index1 << 11);
                  if (true)
                  {
                    \u001A.\u0097.\u0006[index1] = (byte) 5;
                    num5 = index1;
                    if (false)
                    {
                      num3 = num5;
                      goto label_17;
                    }
                  }
                  else
                    goto label_2;
                }
                break;
              }
              goto label_6;
            }
          }
          return;
        }
label_28:
        RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
        goto label_3;
label_27:
        RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
        goto label_1;
      }
    }

    internal sealed class \u009A : MemoryStream
    {
      public \u009A([In] byte[] obj0)
        : base(obj0, false)
      {
      }
    }
  }
}
