// Decompiled with JetBrains decompiler
// Type: 690326161704.495862160573
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003056364933363;
using \u003073564145303;
using \u003219302172411;
using \u003398049663276;
using \u003402511475581;
using \u003475310219084;
using \u003534647440872;
using \u003570935125301;
using \u003690326161704;
using \u003715672977127;
using \u003763242632939;
using \u003769200774489;
using \u003948266173665;
using Microsoft.ProgramSynthesis.Translation.Python;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;

namespace \u003690326161704
{
  internal static class \u003495862160573
  {
    public static Optional<\u003330545282099> \u003903514756719(
      this IRichDataType _param0,
      IPythonColumnInfo _param1,
      \u003392131492675 _param2)
    {
      if (_param0 == null)
        return OptionalUtils.Some<\u003330545282099>(\u003330545282099.\u003643663765691(_param1, _param0));
      if (_param0.\u003430501951709(_param1, _param2))
        return Optional<\u003330545282099>.Nothing;
      switch (_param0)
      {
        case \u003415651442941 obj1:
          return OptionalUtils.Some<\u003330545282099>(obj1.\u003569227553485(_param1));
        case \u003418950873144 obj2:
          return OptionalUtils.Some<\u003330545282099>(obj2.\u003416493013017(_param1, _param2));
        case \u003477499562484 obj3:
          return OptionalUtils.Some<\u003330545282099>(obj3.\u003078186287808(_param1));
        case \u003804667841946 obj4:
          return OptionalUtils.Some<\u003330545282099>(obj4.\u003760675526872(_param1));
        default:
          throw new NotImplementedException(FormattableString.Invariant(FormattableStringFactory.Create("Inline code generation not supported for type: {0}.", (object) _param0)));
      }
    }

    private static \u003330545282099 \u003569227553485(
      this \u003415651442941 _param0,
      IPythonColumnInfo _param1_1)
    {
      string str1 = "{0}";
      string str2 = _param0.\u003758076372869 ? "float" : "int";
      if (_param1_1.FixPandasNaNBug)
        return new \u003330545282099(FormattableString.Invariant(FormattableStringFactory.Create("{0}({1}) if not isinstance({2}, float) or not math.isnan({3}) else {4}", (object) str2, (object) str1, (object) str1, (object) str1, (object) str1)), _param1_1, (IRichDataType) _param0, new string[1]
        {
          "math"
        });
      if (_param0.\u003245054004157.All<\u003301664478184>((Func<\u003301664478184, bool>) (_param1_2 => _param1_2.\u003029880056196())))
        return new \u003330545282099(FormattableString.Invariant(FormattableStringFactory.Create("{0}({1})", (object) str2, (object) str1)), _param1_1, (IRichDataType) _param0, (IEnumerable<string>) null);
      \u003301664478184 obj = _param0.\u003245054004157.Single<\u003301664478184>();
      bool flag = false;
      IEnumerable<KeyValuePair<string, string>> source = obj.\u003803720777683.Concat<KeyValuePair<string, string>>((IEnumerable<KeyValuePair<string, string>>) obj.\u003838478326228);
      if (obj.\u003213158464276 && obj.\u003049172197308 && source.Any<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1_4 => _param1_4.Key == "-" && string.IsNullOrEmpty(_param1_4.Value))))
      {
        flag = true;
        source = source.Where<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1_3 => _param1_3.Key != "-" || !string.IsNullOrEmpty(_param1_3.Value)));
      }
      string str3 = source.\u003901534488910(str1);
      return new \u003330545282099(FormattableString.Invariant(FormattableStringFactory.Create("{0}{1}({2})", (object) (!obj.\u003213158464276 || flag ? string.Empty : "-"), (object) str2, (object) str3)), _param1_1, (IRichDataType) _param0, (IEnumerable<string>) null);
    }

    private static \u003330545282099 \u003416493013017(
      this \u003418950873144 _param0,
      IPythonColumnInfo _param1_1,
      \u003392131492675 _param2)
    {
      \u003513888654302 obj = _param0.\u003237890725016.Single<IEnumerable<\u003513888654302>>().First<\u003513888654302>((Func<\u003513888654302, bool>) (_param1_2 => _param1_2.\u003075930419454.PosixParsingFormatString != null));
      string parsingFormatString = obj.\u003075930419454.PosixParsingFormatString;
      string inlineExpression = FormattableString.Invariant(FormattableStringFactory.Create("datetime.datetime.strptime({0}, {1})", (object) obj.\u003526529034458.\u003901534488910("{0}"), (object) PythonStringUtils.ToPythonLiteral(parsingFormatString)));
      if (_param2 != \u003392131492675.PysparkDataFrame)
        inlineExpression = _param0.\u003063549704997(inlineExpression);
      return new \u003330545282099(inlineExpression, _param1_1, (IRichDataType) _param0, new string[1]
      {
        "datetime"
      });
    }

    private static \u003330545282099 \u003078186287808(
      this \u003477499562484 _param0,
      IPythonColumnInfo _param1)
    {
      return new \u003330545282099(FormattableString.Invariant(FormattableStringFactory.Create("True if {{0}} == {0} else False if {{0}} == {1} else {{0}}", (object) PythonStringUtils.ToPythonLiteral(_param0.\u003304071846640.Single<string>()), (object) PythonStringUtils.ToPythonLiteral(_param0.\u003263248571856.Single<string>()))), _param1, (IRichDataType) _param0, (IEnumerable<string>) null);
    }

    private static \u003330545282099 \u003760675526872(
      this \u003804667841946 _param0,
      IPythonColumnInfo _param1)
    {
      return \u003330545282099.\u003643663765691(_param1, (IRichDataType) _param0);
    }
  }
}
