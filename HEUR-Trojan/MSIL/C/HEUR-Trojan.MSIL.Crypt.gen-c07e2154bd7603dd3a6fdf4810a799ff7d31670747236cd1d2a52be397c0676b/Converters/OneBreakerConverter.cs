// Decompiled with JetBrains decompiler
// Type: Cradiator.Converters.OneBreakerConverter
// Assembly: FileOptio, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0135208B-21B4-457A-BFCD-FFD93FD8BA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c07e2154bd7603dd3a6fdf4810a799ff7d31670747236cd1d2a52be397c0676b.exe

using Cradiator.Extensions;
using Cradiator.Model;
using Cradiator.Services;
using System;
using System.Globalization;
using System.Windows.Data;
using System.Windows.Markup;

namespace Cradiator.Converters
{
  [MarkupExtensionReturnType(typeof (OneBreakerConverter))]
  [ValueConversion(typeof (string), typeof (string))]
  public class OneBreakerConverter : MarkupExtension, IValueConverter
  {
    private readonly IBuildBuster _buildBuster;

    public OneBreakerConverter()
    {
    }

    public OneBreakerConverter([InjectBuildBuster] IBuildBuster buildBuster) => this._buildBuster = buildBuster;

    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
      string breaker = this._buildBuster.FindBreaker(value as string);
      return breaker.IsEmpty() ? (object) string.Empty : (object) string.Format("({0})", (object) breaker);
    }

    public object ConvertBack(
      object value,
      Type targetType,
      object parameter,
      CultureInfo culture)
    {
      throw new NotImplementedException();
    }

    public override object ProvideValue(IServiceProvider serviceProvider) => (object) Ninjector.Get<OneBreakerConverter>();
  }
}
