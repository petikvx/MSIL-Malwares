// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: Encod, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DCFB260-FACB-496A-9BC9-FA9701DCBF71
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d5f77ba2b2ad58cfad5ae3111994ad0f889967e6d4f67ecb9cedf1b8f10a6149.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1916225974;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1219057299)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 986391709 ^ -151480374;
              continue;
            case 2:
              jsonNode = this.m_List[aIndex];
              num1 = 589829925;
              continue;
            case 3:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 4:
              num1 = (int) num2 * 853470100 ^ 341693333;
              continue;
            case 5:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1471077388 ^ -800223916;
              continue;
            case 7:
              int num4 = flag ? 864368200 : (num4 = 567621795);
              num1 = num4 ^ (int) num2 * 2131921598;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 1468967444;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 2126749310;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1476924303)) % 7U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              this.m_List.Add(value);
              num1 = (int) num2 * 207644761 ^ -615115366;
              continue;
            case 2:
              goto label_1;
            case 3:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1374974235 ^ 245770537;
                continue;
              }
              num3 = 1;
              break;
            case 4:
              goto label_3;
            case 5:
              this.m_List[aIndex] = value;
              num1 = 1044485314;
              continue;
            case 6:
              num1 = (int) num2 * 1800335958 ^ 1059122204;
              continue;
            default:
              goto label_12;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 1508523543 : (num4 = 1268212893);
        }
label_3:
        return;
label_12:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -1785017608;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1765833339)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -145994048 ^ 2046288378;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1988228070;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 470837528)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * -723172374 ^ -790777097;
              continue;
            case 3:
              num1 = (int) num2 * -2098935268 ^ 403220577;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count => this.m_List.Count;

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 212018638;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 2086451068)) % 10U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 417028284 ^ 1400416463;
            continue;
          case 2:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1151370676 ^ 1076056022;
            continue;
          case 3:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 4:
            num1 = (int) num2 * 1063855921 ^ 81281121;
            continue;
          case 6:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 1520881314 ^ -1407414717;
            continue;
          case 7:
            jsonNode2 = this.m_List[aIndex];
            num1 = 1485367195;
            continue;
          case 8:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1879438797 ^ -361181735;
            continue;
          case 9:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * -37543076 ^ 559817032;
            continue;
          default:
            goto label_14;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 362822438 : (num4 = 1634760987);
      }
label_14:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1262141239;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1352579643)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 508378664 ^ 1266873297;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 1889204893;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1185631746)) % 4U)
          {
            case 0:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 246864727 ^ 2009622159;
              continue;
            case 2:
              goto label_1;
            case 3:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1641696563 ^ -1567152321;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = 1509385552;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 336993072)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 337187310 ^ 250821964;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? 1780537801 : (num3 = 250598446);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 336993072)) % 7U)
          {
            case 0:
              goto label_11;
            case 1:
              str1 = JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(str1, ", ");
              num3 = (int) num4 * -1357616986 ^ -186940349;
              continue;
            case 2:
              num3 = 250598446;
              continue;
            case 3:
              current = enumerator.Current;
              flag = JSONArray.\u202A⁫⁫‎‍​⁬‪⁪‏‫‮⁬‏⁯‏​⁮⁭⁪‬‎‬‭‏‏⁪​‌‪‎⁫⁪‍‬⁯‪⁬​‪‮(str1) > 2;
              num3 = 222133635;
              continue;
            case 4:
              str1 = JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(str1, JSONArray.\u200D‏⁮‭‌​⁭​‪‏‎‬‮‏⁫‍‬‌‪‏‍‍​⁬‍​‏⁮‏‌​⁮‬⁭‏‪​‫⁫‏‮((object) current));
              num3 = 1439679;
              continue;
            case 5:
              int num5 = flag ? 889615820 : (num5 = 47881312);
              num3 = num5 ^ (int) num4 * 1577533111;
              continue;
            default:
              goto label_14;
          }
        }
      }
label_14:
      string str2 = JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(str1, " ]");
label_15:
      int num6 = 2029526195;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 336993072)) % 3U)
        {
          case 0:
            goto label_15;
          case 1:
            str3 = str2;
            num6 = (int) num7 * 2037274244 ^ 237053781;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1808188820;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1901186325)) % 4U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 746760796 ^ 1077456155;
            continue;
          case 2:
            num1 = (int) num2 * 719851923 ^ -1348048085;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 2081604107 : (num3 = 1019438769);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1901186325)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(str1, ", ");
              num3 = (int) num4 * -434515979 ^ -2124378783;
              continue;
            case 1:
              str1 = JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(str1, current.ToString(JSONArray.\u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮(aPrefix, "   ")));
              num3 = (int) num4 * -1594794473 ^ -1202416981;
              continue;
            case 2:
              num3 = 2081604107;
              continue;
            case 4:
              goto label_11;
            case 5:
              current = enumerator.Current;
              num3 = 413007660;
              continue;
            case 6:
              num3 = (int) num4 * 208537739 ^ 1198875682;
              continue;
            case 7:
              str1 = JSONArray.\u200D⁮‫‍‍⁭⁪‌‫‌⁬‍‍‏‫⁮‬​⁪‍‮‏⁪⁯‭‍​⁪​​⁭⁯‬‫⁬⁪​⁯‪‫‮(str1, "\n", aPrefix, "   ");
              num3 = 393856236;
              continue;
            case 8:
              int num5 = JSONArray.\u202A⁫⁫‎‍​⁬‪⁪‏‫‮⁬‏⁯‏​⁮⁭⁪‬‎‬‭‏‏⁪​‌‪‎⁫⁪‍‬⁯‪⁬​‪‮(str1) > 3 ? -432121882 : (num5 = -1527219374);
              num3 = num5 ^ (int) num4 * 1020894139;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u200D⁮‫‍‍⁭⁪‌‫‌⁬‍‍‏‫⁮‬​⁪‍‮‏⁪⁯‭‍​⁪​​⁭⁯‬‫⁬⁪​⁯‪‫‮(str1, "\n", aPrefix, "]");
label_18:
      int num6 = 203064862;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1901186325)) % 3U)
        {
          case 0:
            goto label_18;
          case 1:
            num6 = (int) num7 * 1877344680 ^ -927627224;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1932423257;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1524277332)) % 10U)
        {
          case 0:
            flag = index < this.m_List.Count;
            num1 = 891877718;
            continue;
          case 1:
            JSONArray.\u202E⁪‪‭⁮⁮⁫‌⁯⁮‮‌‌‎‎⁭⁪‎‏⁪⁪⁭​⁫‏‮‪‮⁪‫‪⁪⁬‬⁭⁬‬⁫‫‫‮(aWriter, (byte) 1);
            num1 = (int) num2 * -1763394937 ^ -1390612992;
            continue;
          case 2:
            goto label_1;
          case 3:
            JSONArray.\u206A‪⁯​​⁮‬⁭‪​‬⁬⁪‭⁭‎‪‍‎⁫‮‮⁮⁬⁭‫⁯‭‌⁪⁬⁬⁭‌⁪‭‮​‮‏‮(aWriter, this.m_List.Count);
            index = 0;
            num1 = (int) num2 * 1421587347 ^ -720010419;
            continue;
          case 4:
            int num3 = !flag ? 1014487411 : (num3 = 946858927);
            num1 = num3 ^ (int) num2 * -81465226;
            continue;
          case 5:
            goto label_3;
          case 6:
            num1 = (int) num2 * -1565108265 ^ 1915414664;
            continue;
          case 7:
            this.m_List[index].Serialize(aWriter);
            num1 = 887594031;
            continue;
          case 8:
            ++index;
            num1 = (int) num2 * -1390777871 ^ 2084047050;
            continue;
          case 9:
            num1 = (int) num2 * -1905927834 ^ -862557016;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u202A⁫⁫‎‍​⁬‪⁪‏‫‮⁬‏⁯‏​⁮⁭⁪‬‎‬‭‏‏⁪​‌‪‎⁫⁪‍‬⁯‪⁬​‪‮([In] string obj0) => obj0.Length;

    static string \u200D‍‎⁭‌‏‭⁬⁪⁮‌‬‫⁬‏⁫​‫⁫⁮⁮‍‭⁫⁪‍⁭⁫⁭‌‌‪‎⁫‎‪‭‎‫‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u200D‏⁮‭‌​⁭​‪‏‎‬‮‏⁫‍‬‌‪‏‍‍​⁬‍​‏⁮‏‌​⁮‬⁭‏‪​‫⁫‏‮([In] object obj0) => obj0.ToString();

    static string \u200D⁮‫‍‍⁭⁪‌‫‌⁬‍‍‏‫⁮‬​⁪‍‮‏⁪⁯‭‍​⁪​​⁭⁯‬‫⁬⁪​⁯‪‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202E⁪‪‭⁮⁮⁫‌⁯⁮‮‌‌‎‎⁭⁪‎‏⁪⁪⁭​⁫‏‮‪‮⁪‫‪⁪⁬‬⁭⁬‬⁫‫‫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A‪⁯​​⁮‬⁭‪​‬⁬⁪‭⁭‎‪‍‎⁫‮‮⁮⁬⁭‫⁯‭‌⁪⁬⁬⁭‌⁪‭‮​‮‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
