// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: PInvokeAttribut, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D5FBD274-2C02-4186-9C35-1EE6A67C7338
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1aab9260ecb3ef6b3d07882eff498982f5146fb73a61ff77f8ea0dfbfb02cde7.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 285944966;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 344049545)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_Key = aKey;
            num1 = (int) num2 * 898546808 ^ -444451436;
            continue;
          case 3:
            num1 = (int) num2 * -940856363 ^ -1540594950;
            continue;
          case 4:
            num1 = (int) num2 * 947999317 ^ -2052546224;
            continue;
          case 5:
            this.m_Node = aNode;
            num1 = (int) num2 * 126047954 ^ 279356993;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
      if (this.m_Key != null)
        goto label_8;
label_1:
      int num1 = 1200981294;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 381892610)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1239599617 ^ 558800037;
            continue;
          case 3:
            num1 = (int) num2 * 963675309 ^ 1135232178;
            continue;
          case 4:
            num1 = (int) num2 * -1993733977 ^ -91556576;
            continue;
          case 5:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 1729046009 ^ 1528788897;
            continue;
          case 6:
            num1 = (int) num2 * 2082116797 ^ -1431496600;
            continue;
          case 7:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -793060816 ^ 832762125;
            continue;
          case 8:
            goto label_8;
          default:
            goto label_10;
        }
      }
label_10:
      this.m_Node = (JSONNode) null;
      return;
label_8:
      num1 = 489701725;
      goto label_2;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 1468475501;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1101061376)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1499835386 ^ 1651654052;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 2141722114;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1814540015)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal.Add(value);
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1720963360 ^ -132763444;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -850433839 ^ -789652560;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -888645567;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -480828081)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1296526890 ^ -269198006;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -1359460138;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1730486557)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1178713857 ^ -1837511770;
              continue;
            case 2:
              num1 = (int) num2 * -466947083 ^ -874488207;
              continue;
            case 3:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 1603438190 ^ 740523156;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1776770650 ^ 1594645267;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -80725134;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1154795025)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal = new JSONArray();
            num1 = (int) num2 * -393664191 ^ -1515778328;
            continue;
          case 2:
            aVal.Add(aItem);
            num1 = (int) num2 * -716053576 ^ -1296067451;
            continue;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * 759463241 ^ -649722934;
            continue;
          case 5:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -911388501 ^ 454407010;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1885370728;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 919790579)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 626967109 ^ -777658285;
            continue;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -680588998 ^ 754256771;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 826317514 ^ 1107922295;
            continue;
          case 5:
            aVal = new JSONClass();
            num1 = (int) num2 * 1425106744 ^ -940029758;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1947869931;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1056915950)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -767207347 ^ 832954165;
            continue;
          case 1:
            flag1 = (object) a == b;
            num1 = -545419408;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * 990888939 ^ -1040314450;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag2 = b == null;
            num1 = (int) num2 * -502390853 ^ -164243979;
            continue;
          case 6:
            int num3 = flag2 ? -1968009463 : (num3 = -617894992);
            num1 = num3 ^ (int) num2 * 866827244;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1582358957;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -573128748)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -36532053 ^ -1177063429;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * -565356553 ^ -1237487389;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -26225407;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -834234201)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            flag1 = true;
            num1 = (int) num2 * 65575015 ^ -1147845583;
            continue;
          case 2:
            flag2 = obj == null;
            num1 = (int) num2 * 1399230937 ^ 1782013373;
            continue;
          case 4:
            int num3 = flag2 ? -1197246530 : (num3 = -1778728682);
            num1 = num3 ^ (int) num2 * -1137000707;
            continue;
          case 5:
            flag1 = (object) this == obj;
            num1 = -1486699502;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag1;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -178266191;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -521192761)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1409172675 ^ 924066100;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = 189891852;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1826034358)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 12356159 ^ 87312935;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1404758630;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1868525587)) % 3U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * 2059842068 ^ 1515745621;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 459401598;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1930576357)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              asInt = 0;
              num1 = (int) num2 * 1760778250 ^ -1088310680;
              continue;
            case 2:
              aVal = new JSONData(0);
              num1 = (int) num2 * 647163100 ^ -1686210078;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 649074324 ^ 1158259013;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1277076115;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1561517193)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -547167573 ^ -1442775691;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * 465963481 ^ 1397580066;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 380454192;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1415550495)) % 5U)
          {
            case 1:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * -1205052039 ^ -1277422958;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = (int) num2 * 20367045 ^ 1676469958;
              continue;
            case 3:
              num1 = (int) num2 * 1231060264 ^ -985769263;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -16937327;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1244164535)) % 5U)
          {
            case 1:
              num1 = (int) num2 * -1550977839 ^ -1918995673;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1677402437 ^ -296591485;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * 708876305 ^ 182113739;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -823129771;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1850392221)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1622679851 ^ -1591694078;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -361451251 ^ 1452162832;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -1811723721;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1298466196)) % 5U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * -911181293 ^ -670292384;
              continue;
            case 1:
              num1 = (int) num2 * 534941673 ^ -808006445;
              continue;
            case 3:
              this.Set((JSONNode) new JSONData(false));
              num1 = (int) num2 * -221018509 ^ -444956417;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -305962243;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -617273568)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1380769135 ^ -1461839639;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 781804252;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1936993744)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * 979306793 ^ 37159889;
              continue;
            case 3:
              num1 = (int) num2 * -1763269267 ^ 594015826;
              continue;
            case 4:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1729031912 ^ -404820399;
              continue;
            case 5:
              num1 = (int) num2 * -222430927 ^ 1256525839;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -640556333;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1908952882)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 299332355 ^ -1175331902;
              continue;
            case 3:
              asObject = aVal;
              num1 = (int) num2 * 1468842113 ^ 2006929499;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
