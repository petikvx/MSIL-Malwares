// Decompiled with JetBrains decompiler
// Type: EventProviderWriter.EndChildrenCallback
// Assembly: RegistrySecurity, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CE443B41-988D-4319-9971-B451F2F12365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\UDS-DangerousObject.Multi.Generic-48aa8fd75e2be7fad2e1df3d81dc1653380a546611a53afbf6092ec9c104c324.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace EventProviderWriter
{
  [DesignerGenerated]
  public class EndChildrenCallback : Form
  {
    private IContainer components;
    private const double sMax = 28800.0;
    private double ratio;
    private bool blocked;

    public EndChildrenCallback() => this.InitializeComponent();

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.TableLayoutPanel1 = new TableLayoutPanel();
      this.OK_Button = new Button();
      this.Cancel_Button = new Button();
      this.lblW = new Label();
      this.lblH = new Label();
      this.numH = new NumericUpDown();
      this.numW = new NumericUpDown();
      this.lblX = new Label();
      this.lblY = new Label();
      this.numY = new NumericUpDown();
      this.numX = new NumericUpDown();
      this.GroupBox1 = new GroupBox();
      this.rPal = new RadioButton();
      this.r768 = new RadioButton();
      this.rFree = new RadioButton();
      this.r720 = new RadioButton();
      this.rOrig = new RadioButton();
      this.bSpec = new Button();
      this.TableLayoutPanel1.SuspendLayout();
      this.numH.BeginInit();
      this.numW.BeginInit();
      this.numY.BeginInit();
      this.numX.BeginInit();
      this.GroupBox1.SuspendLayout();
      this.SuspendLayout();
      this.TableLayoutPanel1.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.TableLayoutPanel1.ColumnCount = 2;
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Controls.Add((Control) this.OK_Button, 0, 0);
      this.TableLayoutPanel1.Controls.Add((Control) this.Cancel_Button, 1, 0);
      this.TableLayoutPanel1.Location = new Point(175, 119);
      this.TableLayoutPanel1.Name = "TableLayoutPanel1";
      this.TableLayoutPanel1.RowCount = 1;
      this.TableLayoutPanel1.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.TableLayoutPanel1.Size = new Size(146, 29);
      this.TableLayoutPanel1.TabIndex = 0;
      this.OK_Button.Anchor = AnchorStyles.None;
      this.OK_Button.Location = new Point(3, 3);
      this.OK_Button.Name = "OK_Button";
      this.OK_Button.Size = new Size(67, 23);
      this.OK_Button.TabIndex = 0;
      this.OK_Button.Text = "OK";
      this.Cancel_Button.Anchor = AnchorStyles.None;
      this.Cancel_Button.DialogResult = DialogResult.Cancel;
      this.Cancel_Button.Location = new Point(76, 3);
      this.Cancel_Button.Name = "Cancel_Button";
      this.Cancel_Button.Size = new Size(67, 23);
      this.Cancel_Button.TabIndex = 1;
      this.Cancel_Button.Text = "Cancel";
      this.lblW.AutoSize = true;
      this.lblW.Location = new Point(13, 39);
      this.lblW.Name = "lblW";
      this.lblW.Size = new Size(18, 13);
      this.lblW.TabIndex = 23;
      this.lblW.Text = "W";
      this.lblH.AutoSize = true;
      this.lblH.Location = new Point(92, 39);
      this.lblH.Name = "lblH";
      this.lblH.Size = new Size(15, 13);
      this.lblH.TabIndex = 22;
      this.lblH.Text = "H";
      this.numH.Location = new Point(112, 37);
      this.numH.Maximum = new Decimal(new int[4]
      {
        576,
        0,
        0,
        0
      });
      this.numH.Name = "numH";
      this.numH.Size = new Size(54, 20);
      this.numH.TabIndex = 21;
      this.numW.Location = new Point(33, 37);
      this.numW.Maximum = new Decimal(new int[4]
      {
        1024,
        0,
        0,
        0
      });
      this.numW.Name = "numW";
      this.numW.Size = new Size(50, 20);
      this.numW.TabIndex = 20;
      this.lblX.AutoSize = true;
      this.lblX.Location = new Point(13, 9);
      this.lblX.Name = "lblX";
      this.lblX.Size = new Size(14, 13);
      this.lblX.TabIndex = 27;
      this.lblX.Text = "X";
      this.lblY.AutoSize = true;
      this.lblY.Location = new Point(92, 9);
      this.lblY.Name = "lblY";
      this.lblY.Size = new Size(14, 13);
      this.lblY.TabIndex = 26;
      this.lblY.Text = "Y";
      this.numY.Location = new Point(112, 7);
      this.numY.Maximum = new Decimal(new int[4]
      {
        500,
        0,
        0,
        0
      });
      this.numY.Name = "numY";
      this.numY.Size = new Size(53, 20);
      this.numY.TabIndex = 25;
      this.numX.Location = new Point(33, 7);
      this.numX.Maximum = new Decimal(new int[4]
      {
        1024,
        0,
        0,
        0
      });
      this.numX.Name = "numX";
      this.numX.Size = new Size(53, 20);
      this.numX.TabIndex = 24;
      this.GroupBox1.Controls.Add((Control) this.rPal);
      this.GroupBox1.Controls.Add((Control) this.r768);
      this.GroupBox1.Controls.Add((Control) this.rFree);
      this.GroupBox1.Controls.Add((Control) this.r720);
      this.GroupBox1.Controls.Add((Control) this.rOrig);
      this.GroupBox1.Location = new Point(12, 63);
      this.GroupBox1.Name = "GroupBox1";
      this.GroupBox1.Size = new Size(154, 85);
      this.GroupBox1.TabIndex = 29;
      this.GroupBox1.TabStop = false;
      this.GroupBox1.Text = "Proportsioon";
      this.rPal.AutoSize = true;
      this.rPal.Location = new Point(64, 17);
      this.rPal.Name = "rPal";
      this.rPal.Size = new Size(70, 17);
      this.rPal.TabIndex = 4;
      this.rPal.TabStop = true;
      this.rPal.Text = "720->768";
      this.rPal.UseVisualStyleBackColor = true;
      this.r768.AutoSize = true;
      this.r768.Location = new Point(64, 63);
      this.r768.Name = "r768";
      this.r768.Size = new Size(76, 17);
      this.r768.TabIndex = 3;
      this.r768.TabStop = true;
      this.r768.Text = "768->1024";
      this.r768.UseVisualStyleBackColor = true;
      this.rFree.AutoSize = true;
      this.rFree.Location = new Point(6, 40);
      this.rFree.Name = "rFree";
      this.rFree.Size = new Size(50, 17);
      this.rFree.TabIndex = 2;
      this.rFree.TabStop = true;
      this.rFree.Text = "Vaba";
      this.rFree.UseVisualStyleBackColor = true;
      this.r720.AutoSize = true;
      this.r720.Location = new Point(64, 40);
      this.r720.Name = "r720";
      this.r720.Size = new Size(76, 17);
      this.r720.TabIndex = 1;
      this.r720.TabStop = true;
      this.r720.Text = "720->1024";
      this.r720.UseVisualStyleBackColor = true;
      this.rOrig.AutoSize = true;
      this.rOrig.Location = new Point(6, 19);
      this.rOrig.Name = "rOrig";
      this.rOrig.Size = new Size(52, 17);
      this.rOrig.TabIndex = 0;
      this.rOrig.TabStop = true;
      this.rOrig.Text = "Algne";
      this.rOrig.UseVisualStyleBackColor = true;
      this.bSpec.Location = new Point(178, 36);
      this.bSpec.Name = "bSpec";
      this.bSpec.Size = new Size(84, 21);
      this.bSpec.TabIndex = 30;
      this.bSpec.Text = "max lubatud";
      this.bSpec.UseVisualStyleBackColor = true;
      this.bSpec.Visible = false;
      this.AcceptButton = (IButtonControl) this.OK_Button;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.CancelButton = (IButtonControl) this.Cancel_Button;
      this.ClientSize = new Size(333, 160);
      this.Controls.Add((Control) this.bSpec);
      this.Controls.Add((Control) this.GroupBox1);
      this.Controls.Add((Control) this.lblX);
      this.Controls.Add((Control) this.lblY);
      this.Controls.Add((Control) this.numY);
      this.Controls.Add((Control) this.numX);
      this.Controls.Add((Control) this.lblW);
      this.Controls.Add((Control) this.lblH);
      this.Controls.Add((Control) this.numH);
      this.Controls.Add((Control) this.numW);
      this.Controls.Add((Control) this.TableLayoutPanel1);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = "DialogResize";
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = "Bugi suurus ja positsioon";
      this.TableLayoutPanel1.ResumeLayout(false);
      this.numH.EndInit();
      this.numW.EndInit();
      this.numY.EndInit();
      this.numX.EndInit();
      this.GroupBox1.ResumeLayout(false);
      this.GroupBox1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [field: AccessedThroughProperty("TableLayoutPanel1")]
    internal virtual TableLayoutPanel TableLayoutPanel1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button OK_Button
    {
      get => this._OK_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.OK_Button_Click);
        Button okButton1 = this._OK_Button;
        if (okButton1 != null)
          okButton1.Click -= eventHandler;
        this._OK_Button = value;
        Button okButton2 = this._OK_Button;
        if (okButton2 == null)
          return;
        okButton2.Click += eventHandler;
      }
    }

    internal virtual Button Cancel_Button
    {
      get => this._Cancel_Button;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Cancel_Button_Click);
        Button cancelButton1 = this._Cancel_Button;
        if (cancelButton1 != null)
          cancelButton1.Click -= eventHandler;
        this._Cancel_Button = value;
        Button cancelButton2 = this._Cancel_Button;
        if (cancelButton2 == null)
          return;
        cancelButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblW")]
    internal virtual Label lblW { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblH")]
    internal virtual Label lblH { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual NumericUpDown numH
    {
      get => this._numH;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcW);
        NumericUpDown numH1 = this._numH;
        if (numH1 != null)
          numH1.ValueChanged -= eventHandler;
        this._numH = value;
        NumericUpDown numH2 = this._numH;
        if (numH2 == null)
          return;
        numH2.ValueChanged += eventHandler;
      }
    }

    internal virtual NumericUpDown numW
    {
      get => this._numW;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcH);
        NumericUpDown numW1 = this._numW;
        if (numW1 != null)
          numW1.ValueChanged -= eventHandler;
        this._numW = value;
        NumericUpDown numW2 = this._numW;
        if (numW2 == null)
          return;
        numW2.ValueChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblX")]
    internal virtual Label lblX { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblY")]
    internal virtual Label lblY { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("numY")]
    internal virtual NumericUpDown numY { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("numX")]
    internal virtual NumericUpDown numX { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("GroupBox1")]
    internal virtual GroupBox GroupBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("rFree")]
    internal virtual RadioButton rFree { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual RadioButton r720
    {
      get => this._r720;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcW);
        RadioButton r720_1 = this._r720;
        if (r720_1 != null)
          r720_1.CheckedChanged -= eventHandler;
        this._r720 = value;
        RadioButton r720_2 = this._r720;
        if (r720_2 == null)
          return;
        r720_2.CheckedChanged += eventHandler;
      }
    }

    internal virtual RadioButton rOrig
    {
      get => this._rOrig;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcW);
        RadioButton rOrig1 = this._rOrig;
        if (rOrig1 != null)
          rOrig1.CheckedChanged -= eventHandler;
        this._rOrig = value;
        RadioButton rOrig2 = this._rOrig;
        if (rOrig2 == null)
          return;
        rOrig2.CheckedChanged += eventHandler;
      }
    }

    internal virtual RadioButton r768
    {
      get => this._r768;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcW);
        RadioButton r768_1 = this._r768;
        if (r768_1 != null)
          r768_1.CheckedChanged -= eventHandler;
        this._r768 = value;
        RadioButton r768_2 = this._r768;
        if (r768_2 == null)
          return;
        r768_2.CheckedChanged += eventHandler;
      }
    }

    internal virtual RadioButton rPal
    {
      get => this._rPal;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ReCalcW);
        RadioButton rPal1 = this._rPal;
        if (rPal1 != null)
          rPal1.CheckedChanged -= eventHandler;
        this._rPal = value;
        RadioButton rPal2 = this._rPal;
        if (rPal2 == null)
          return;
        rPal2.CheckedChanged += eventHandler;
      }
    }

    internal virtual Button bSpec
    {
      get => this._bSpec;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.bSpec_Click);
        Button bSpec1 = this._bSpec;
        if (bSpec1 != null)
          bSpec1.Click -= eventHandler;
        this._bSpec = value;
        Button bSpec2 = this._bSpec;
        if (bSpec2 == null)
          return;
        bSpec2.Click += eventHandler;
      }
    }

    internal void Init(double w, double h, bool xy)
    {
      if (xy)
      {
        this.InitXY(w, h);
      }
      else
      {
        this.Text = "Bugi suurus ja positsioon";
        this.ConfGui(true);
        this.numX.Minimum = 0M;
        this.numY.Minimum = 0M;
        this.numX.Value = 60M;
        this.numY.Value = 32M;
        this.ratio = w / h;
        this.blocked = true;
        this.rOrig.Checked = true;
        this.ReCalc2spec(w, h);
        this.blocked = false;
      }
    }

    private void InitXY(double w, double h)
    {
      this.blocked = true;
      this.Text = "Bugi positsioon";
      this.ConfGui(false);
      this.numX.Minimum = -1024M;
      this.numY.Minimum = -576M;
      this.numX.Value = 0M;
      this.numY.Value = 0M;
      this.numW.Value = new Decimal(checked ((int) Math.Round(w)));
      this.numH.Value = new Decimal(checked ((int) Math.Round(h)));
      this.ratio = w / h;
      this.rOrig.Checked = true;
      this.blocked = false;
    }

    private void ConfGui(bool value)
    {
      this.numW.Visible = value;
      this.numH.Visible = value;
      this.lblW.Visible = value;
      this.lblH.Visible = value;
      this.GroupBox1.Visible = value;
    }

    internal string Command(string style) => string.Format("draw_{0}_{1}_{2}_{3}_{4}", (object) this.numX.Value, (object) this.numY.Value, (object) this.numW.Value, (object) this.numH.Value, (object) style);

    private void OK_Button_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.OK;
      this.Close();
    }

    private void Cancel_Button_Click(object sender, EventArgs e)
    {
      this.DialogResult = DialogResult.Cancel;
      this.Close();
    }

    private void ReCalc2spec(double w, double h)
    {
      if (w * h > 28800.0)
      {
        double num = Math.Sqrt(28800.0 / (w * h));
        w *= num;
        h *= num;
      }
      if (w > 512.0)
      {
        double num = 512.0 / w;
        w *= num;
        h *= num;
      }
      if (h > 288.0)
      {
        double num = 288.0 / h;
        w *= num;
        h *= num;
      }
      this.numW.Value = new Decimal(Conversion.Int(w));
      this.numH.Value = new Decimal(Conversion.Int(h));
    }

    private void ReCalcW(object sender, EventArgs e)
    {
      if (this.rFree.Checked || this.blocked)
        return;
      this.blocked = true;
      double ratio = this.GetRatio();
      this.numW.Value = new Decimal(Conversion.Int(Convert.ToDouble(this.numH.Value) * ratio));
      this.bSpec.Visible = Convert.ToDouble(Decimal.Multiply(this.numW.Value, this.numH.Value)) > 28800.0;
      this.blocked = false;
    }

    private void ReCalcH(object sender, EventArgs e)
    {
      if (this.rFree.Checked || this.blocked)
        return;
      this.blocked = true;
      double ratio = this.GetRatio();
      this.numH.Value = new Decimal(Conversion.Int(Convert.ToDouble(this.numW.Value) / ratio));
      this.bSpec.Visible = Convert.ToDouble(Decimal.Multiply(this.numW.Value, this.numH.Value)) > 28800.0;
      this.blocked = false;
    }

    private double GetRatio()
    {
      if (this.rOrig.Checked)
        return this.ratio;
      if (this.r720.Checked)
        return this.ratio * (64.0 / 45.0);
      return this.r768.Checked ? this.ratio * (4.0 / 3.0) : this.ratio * (16.0 / 15.0);
    }

    private void bSpec_Click(object sender, EventArgs e)
    {
      this.blocked = true;
      this.ReCalc2spec(Convert.ToDouble(this.numW.Value), Convert.ToDouble(this.numH.Value));
      this.bSpec.Visible = false;
      this.blocked = false;
    }
  }
}
