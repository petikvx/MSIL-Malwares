// Decompiled with JetBrains decompiler
// Type: IRefl.Definitions.AlgoTokenizerDef
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using IRefl.Producers;
using ProjNet.Common;
using ProjNet.Structs;
using System;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;

namespace IRefl.Definitions
{
  public class AlgoTokenizerDef : Rule, Candidate, CodeObjectProducer
  {
    private double m_Tag;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal AlgoTokenizerDef(
      double def,
      string result,
      string dir,
      long remove_POL2At,
      string caller3,
      string value4,
      string info5)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_2;
            case 2:
            case 4:
              goto label_6;
            case 3:
              goto label_1;
            case 5:
              goto label_7;
            default:
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_6;
          }
        }
label_1:
        PageAdvisorStructBuilder.PrepareCreator();
        num1 = 0;
        continue;
label_2:
        // ISSUE: explicit constructor call
        base.\u002Ector(result, dir, remove_POL2At, caller3, value4, info5);
label_6:
        this.m_Tag = def;
        num1 = 5;
      }
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal AlgoTokenizerDef(string value, double col)
    {
      PageAdvisorStructBuilder.PrepareCreator();
      // ISSUE: explicit constructor call
      this.\u002Ector(col, value, string.Empty, -1L, string.Empty, string.Empty, string.Empty);
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double CallRegistry() => this.m_Tag;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void InitRegistry(double setup) => this.m_Tag = setup;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertStatus()
    {
      int num1 = 1;
      string str;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          StringBuilder stringBuilder;
          int num3;
          switch (num2)
          {
            case 0:
            case 1:
              stringBuilder = new StringBuilder();
              if (!AlgoTokenizerDef.DestroyWrapper())
              {
                num2 = 3;
                continue;
              }
              goto label_13;
            case 2:
            case 4:
              if (string.IsNullOrEmpty(this.CountItem()))
              {
                num3 = 0;
                break;
              }
              goto case 5;
            case 3:
              stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "UNIT[\"{0}\", {1}", new object[2]
              {
                (object) this.Name,
                (object) this.m_Tag
              });
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto case 5;
            case 5:
              num3 = this.SelectItem() > 0L ? 1 : 0;
              break;
            case 6:
              goto label_13;
            default:
              goto label_10;
          }
          if (num3 != 0)
            stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.CountItem(), (object) this.SelectItem());
          stringBuilder.Append("]");
          str = stringBuilder.ToString();
          num2 = 6;
        }
label_10:
        num1 = 5;
      }
label_13:
      return str;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string AssetItem() => throw new NotImplementedException();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool InvokeItem(object var1)
    {
      int num1 = 2;
      bool flag1;
      while (true)
      {
        int num2;
        bool flag2;
        switch (num1)
        {
          case 0:
          case 2:
            flag2 = !(var1 is AlgoTokenizerDef);
            num1 = 3;
            continue;
          case 1:
          case 3:
            if (!flag2)
            {
              flag1 = (var1 as AlgoTokenizerDef).CallRegistry() == this.CallRegistry();
              num2 = 5;
              break;
            }
            goto label_1;
          case 4:
            goto label_1;
          case 5:
            goto label_8;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
      }
label_1:
      flag1 = false;
label_8:
      return flag1;
    }

    internal static bool InsertWrapper() => true;

    internal static bool DestroyWrapper() => false;
  }
}
