// Decompiled with JetBrains decompiler
// Type: InvalidOleVariantTypeExcept.States.PropertyAnnotationState
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using InvalidOleVariantTypeExcept.Connections;
using InvalidOleVariantTypeExcept.Filters;
using InvalidOleVariantTypeExcept.Messages;
using InvalidOleVariantTypeExcept.Watchers;
using System.Collections.Generic;
using TGL.Containers;
using TGL.Objects;
using TGL.Polices;
using TGL.Services;
using TGL.Shared;

namespace InvalidOleVariantTypeExcept.States
{
  public interface PropertyAnnotationState
  {
    event SchemaPublisherService connectionEvent;

    event Struct deconnectionEvent;

    event Singleton loginEvent;

    event AnnotationValueFilter abortEvent;

    event InvocationSchemaObject requestEvent;

    event FacadeStubPolicy responseEvent;

    event Rule quitGameEvent;

    event Thread sendMsgEvent;

    event Interpreter endGameEvent;

    event AuthenticationValueFilter gameEvent;

    void showView(PoolFieldMessage value);

    bool isOpened();

    void showRegisterOption();

    void deconnectionHandler();

    void connectionHandler(PoolFieldMessage ident);

    void loginHandler(PoolFieldMessage config);

    void abortHandler(PoolFieldMessage task, bool updateivk);

    void requestHandler(PoolFieldMessage var1);

    void startGameHandler(PoolFieldMessage setup, bool createpred);

    void stopGameHandler(PoolFieldMessage i);

    void gameHandler(object param);

    void endGameHandler(
      PoolFieldMessage param,
      PoolFieldMessage cust,
      SqlParameterType serv,
      bool setconfig2,
      object item3);

    void receiveMsgHandler(PoolFieldMessage init, string token);

    void userListHandler(List<PoolFieldMessage> task);

    void clearHandler();

    void printCSMessage(KeyValuePair<BehaviorAccumulateValues, string> i);
  }
}
