// Decompiled with JetBrains decompiler
// Type: WorkI.TypeResolveHand
// Assembly: RSACspObj, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4F5485A2-22DD-4A3A-83EE-265873F291A8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcpw-04ed6b6182b25826a48b997e03cde1cb3be80e8ec6d6bd809ff78c35312d9589.exe

using BIND;
using DateTimeTypeI;
using IDispatchImplAttrib;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;

namespace WorkI
{
  public class TypeResolveHand
  {
    private const int DECKSIZE = 52;

    public bool ShouldWarn { get; set; }

    public int TurnWho { get; set; }

    public ICustomMarsha Player { get; set; }

    public IsImplicitlyDereferen Machine { get; set; }

    internal List<IPropertyVa> Deck { get; set; }

    public string Winner { get; set; }

    public string Logs { get; set; }

    public TypeResolveHand(ICustomMarsha Player, IsImplicitlyDereferen Machine)
    {
label_1:
      int num1 = 2124245894;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1855639152)) % 9U)
        {
          case 0:
            this.ShouldWarn = false;
            num1 = (int) num2 * -240777011 ^ -1756771694;
            continue;
          case 1:
            this.TurnWho = -1;
            num1 = (int) num2 * 1090746247 ^ 238791363;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 2136648364 ^ 1540430132;
            continue;
          case 4:
            num1 = (int) num2 * -1756438147 ^ -569043902;
            continue;
          case 6:
            num1 = (int) num2 * -844996610 ^ -1849576880;
            continue;
          case 7:
            this.Player = Player;
            this.Machine = Machine;
            num1 = (int) num2 * 23240354 ^ 135128173;
            continue;
          case 8:
            num1 = (int) num2 * 199792337 ^ -1054064874;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      this.Winner = string.Empty;
    }

    internal int GetHandSumFor(List<IPropertyVa> Hand)
    {
label_1:
      int num1 = 1064695810;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1883439858)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num2 = 0;
            num1 = (int) num3 * -1491787883 ^ -429368762;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<IPropertyVa>.Enumerator enumerator = Hand.GetEnumerator())
      {
label_9:
        int num4 = enumerator.MoveNext() ? 272882639 : (num4 = 980820022);
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 1883439858)) % 4U)
          {
            case 1:
              IPropertyVa current = enumerator.Current;
              num2 += current.GetCardValue();
              num4 = 1338046724;
              continue;
            case 2:
              goto label_9;
            case 3:
              num4 = 272882639;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      int handSumFor = num2;
label_12:
      int num6 = 571515150;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1883439858)) % 3U)
        {
          case 1:
            num6 = (int) num7 * -1633594190 ^ 632424908;
            continue;
          case 2:
            goto label_12;
          default:
            goto label_15;
        }
      }
label_15:
      return handSumFor;
    }

    internal bool CheckIdenticalHand(string Who, string HandName)
    {
label_1:
      int num1 = -1581109017;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        bool flag3;
        bool flag4;
        bool flag5;
        bool flag6;
        bool flag7;
        bool flag8;
        bool flag9;
        bool flag10;
        bool flag11;
        int num3;
        int num4;
        int num5;
        int num6;
        switch ((num2 = (uint) (num1 ^ -803059700)) % 48U)
        {
          case 0:
            if (!TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(Who, "Machine"))
            {
              num3 = 0;
              break;
            }
            num1 = -854488162;
            continue;
          case 1:
            num4 = TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(HandName, "Hand1") ? 1 : 0;
            goto label_26;
          case 2:
            int num7 = !flag2 ? 1790040191 : (num7 = 1930630557);
            num1 = num7 ^ (int) num2 * -1827649020;
            continue;
          case 3:
            int num8 = !flag11 ? -140760113 : (num8 = -111300314);
            num1 = num8 ^ (int) num2 * 1719986710;
            continue;
          case 4:
            num1 = -1519291547;
            continue;
          case 5:
            num1 = (int) num2 * -1908920414 ^ -243935967;
            continue;
          case 6:
            flag1 = true;
            num1 = (int) num2 * -1376759034 ^ 1077234992;
            continue;
          case 7:
            num1 = (int) num2 * 217346264 ^ -396655236;
            continue;
          case 8:
            flag1 = false;
            num1 = (int) num2 * -2077379573 ^ 1405129438;
            continue;
          case 9:
            int num9 = !flag3 ? 414519558 : (num9 = 2103854492);
            num1 = num9 ^ (int) num2 * -762188794;
            continue;
          case 10:
            flag1 = true;
            num1 = (int) num2 * 299635032 ^ -1811306669;
            continue;
          case 11:
            if (!TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(Who, "Player"))
            {
              num4 = 0;
              goto label_26;
            }
            else
            {
              num1 = (int) num2 * 58945096 ^ -721915643;
              continue;
            }
          case 12:
            num1 = -1522384004;
            continue;
          case 13:
            num1 = -519667497;
            continue;
          case 14:
            int num10 = flag10 ? -141490662 : (num10 = -2137158898);
            num1 = num10 ^ (int) num2 * -1235005900;
            continue;
          case 15:
            num1 = (int) num2 * -931231148 ^ -1982653320;
            continue;
          case 16:
            flag2 = this.Player.Hand2.Count != 2;
            num1 = (int) num2 * 1185223700 ^ -513406818;
            continue;
          case 17:
            num1 = (int) num2 * 182273570 ^ 1980444034;
            continue;
          case 18:
            num5 = TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(HandName, "Hand1") ? 1 : 0;
            goto label_31;
          case 19:
            int num11 = flag6 ? -1861227123 : (num11 = -1892141242);
            num1 = num11 ^ (int) num2 * -1170176389;
            continue;
          case 20:
            int num12 = flag8 ? -16719071 : (num12 = -573410681);
            num1 = num12 ^ (int) num2 * 857909706;
            continue;
          case 21:
            flag1 = true;
            num1 = (int) num2 * 1107644755 ^ -1856485893;
            continue;
          case 22:
            flag1 = false;
            num1 = (int) num2 * -322763440 ^ 1593929179;
            continue;
          case 23:
            num6 = TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(HandName, "Hand2") ? 1 : 0;
            goto label_40;
          case 24:
            num1 = (int) num2 * 112287081 ^ 1441774572;
            continue;
          case 25:
            flag1 = false;
            num1 = -639311167;
            continue;
          case 26:
            num1 = (int) num2 * 182416000 ^ -722890220;
            continue;
          case 27:
            if (TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(Who, "Machine"))
            {
              num1 = -1818777490;
              continue;
            }
            num5 = 0;
            goto label_31;
          case 28:
            flag10 = this.Machine.Hand2.Count != 2;
            num1 = (int) num2 * -1361491349 ^ 1771466246;
            continue;
          case 29:
            flag9 = this.Player.Hand1.ElementAt<IPropertyVa>(0).GetCardValue() == this.Player.Hand1.ElementAt<IPropertyVa>(1).GetCardValue();
            num1 = -258657192;
            continue;
          case 30:
            flag1 = false;
            num1 = (int) num2 * 302956549 ^ -1714890062;
            continue;
          case 31:
            int num13 = !flag7 ? 859458847 : (num13 = 919253028);
            num1 = num13 ^ (int) num2 * 100951378;
            continue;
          case 32:
            int num14 = flag5 ? 1296710253 : (num14 = 1162232677);
            num1 = num14 ^ (int) num2 * 752657611;
            continue;
          case 33:
            flag3 = this.Machine.Hand1.ElementAt<IPropertyVa>(0).GetCardValue() == this.Machine.Hand1.ElementAt<IPropertyVa>(1).GetCardValue();
            num1 = -1009247595;
            continue;
          case 34:
            num3 = TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(HandName, "Hand2") ? 1 : 0;
            break;
          case 35:
            if (!TypeResolveHand.\u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮(Who, "Player"))
            {
              num6 = 0;
              goto label_40;
            }
            else
            {
              num1 = -661438069;
              continue;
            }
          case 36:
            int num15 = flag9 ? -1726658291 : (num15 = -1927132732);
            num1 = num15 ^ (int) num2 * -246925015;
            continue;
          case 37:
            goto label_1;
          case 38:
            flag1 = true;
            num1 = (int) num2 * 344096865 ^ -1895906206;
            continue;
          case 39:
            flag7 = this.Player.Hand1.Count != 2;
            num1 = (int) num2 * -342215338 ^ -1877642727;
            continue;
          case 41:
            flag1 = false;
            num1 = (int) num2 * -1562698149 ^ 1831151159;
            continue;
          case 42:
            flag4 = this.Machine.Hand2.ElementAt<IPropertyVa>(0).GetCardValue() == this.Machine.Hand2.ElementAt<IPropertyVa>(1).GetCardValue();
            num1 = -1418729838;
            continue;
          case 43:
            int num16;
            num1 = num16 = this.Player.Hand2.ElementAt<IPropertyVa>(0).GetCardValue() != this.Player.Hand2.ElementAt<IPropertyVa>(1).GetCardValue() ? -185182223 : (num16 = -721468614);
            continue;
          case 44:
            num1 = -2057253905;
            continue;
          case 45:
            num1 = (int) num2 * 517610171 ^ 37711531;
            continue;
          case 46:
            int num17 = !flag4 ? 40556982 : (num17 = 1498880984);
            num1 = num17 ^ (int) num2 * -1595967591;
            continue;
          case 47:
            flag11 = this.Machine.Hand1.Count != 2;
            num1 = (int) num2 * 2023037710 ^ -1925111395;
            continue;
          default:
            goto label_61;
        }
        flag5 = num3 != 0;
        num1 = -1362241524;
        continue;
label_26:
        flag8 = num4 != 0;
        num1 = -1749075288;
        continue;
label_31:
        int num18;
        num1 = num18 = num5 != 0 ? -2103183277 : (num18 = -1522384004);
        continue;
label_40:
        flag6 = num6 != 0;
        num1 = -1022424465;
      }
label_61:
      return flag1;
    }

    static bool \u200F‌‌⁫‪‬‌‮‏⁮‌​⁫‎⁪⁮‭‪⁭‫⁪⁪⁪‬‭‮‫⁯⁯⁭‬‎⁪‏​‏‭⁫‭‫‮([In] string obj0, [In] string obj1) => obj0 == obj1;
  }
}
