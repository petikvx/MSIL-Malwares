// Decompiled with JetBrains decompiler
// Type: 490636185502.982651865487
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003036381570747;
using \u003053028810657;
using \u003133004791854;
using \u003208825527781;
using \u003226094756440;
using \u003232761531875;
using \u003233524418126;
using \u003247133111683;
using \u003341741000337;
using \u003384276752884;
using \u003462605226301;
using \u003476200497993;
using \u003490636185502;
using \u003506182519390;
using \u003540851734987;
using \u003652711888780;
using \u003672161515360;
using \u003718312010712;
using \u003750980446899;
using \u003772444843072;
using \u003868589895539;
using \u003984085617982;
using \u003991227119410;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Text.RegularExpressions;

namespace \u003490636185502
{
  [Obsolete("JSON Schema validation has been moved to its own package. See http://www.newtonsoft.com/jsonschema for more details.")]
  public class \u003982651865487 : \u003250925846196, IJsonLineInfo
  {
    private readonly \u003250925846196 \u003873316716392;
    private readonly Stack<\u003982651865487.\u003689479063258> \u003399649444739;
    private \u003063117452251 \u003458583817330;
    private \u003234941489533 \u003345360309566;
    private \u003982651865487.\u003689479063258 \u003908767857681;
    private static readonly IList<\u003234941489533> \u003026227877639 = (IList<\u003234941489533>) new List<\u003234941489533>();

    public event \u003267563740535 \u003179174830622;

    public virtual object \u003230172170520 => this.\u003873316716392.\u003255783382022;

    public virtual int \u003671185594055 => this.\u003873316716392.\u003757908778853;

    public virtual string \u003909402966576 => this.\u003873316716392.\u003553636962718;

    public virtual char \u003672052102317
    {
      get => this.\u003873316716392.\u003020104516503;
      protected internal set
      {
      }
    }

    public virtual \u003293768301571 \u003473989217200 => this.\u003873316716392.\u003271751439454;

    public virtual Type \u003784130139159 => this.\u003873316716392.\u003487642337602;

    private void \u003298419203038(\u003982651865487.\u003689479063258 _param1)
    {
      this.\u003399649444739.Push(_param1);
      this.\u003908767857681 = _param1;
    }

    private \u003982651865487.\u003689479063258 \u003409767283085()
    {
      \u003982651865487.\u003689479063258 obj = this.\u003399649444739.Pop();
      this.\u003908767857681 = this.\u003399649444739.Count != 0 ? this.\u003399649444739.Peek() : (\u003982651865487.\u003689479063258) null;
      return obj;
    }

    private IList<\u003234941489533> \u003056521286154 => this.\u003908767857681.\u003892572752090;

    private IList<\u003234941489533> \u003298105774686
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
    }

    private void \u003787060010954(string _param1, \u003234941489533 _param2)
    {
      IJsonLineInfo jsonLineInfo = (IJsonLineInfo) this;
      this.\u003743526211884(new \u003876005853890(jsonLineInfo.HasLineInfo() ? _param1 + " Line {0}, position {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) jsonLineInfo.LineNumber, (object) jsonLineInfo.LinePosition) : _param1, (Exception) null, this.\u003553636962718, jsonLineInfo.LineNumber, jsonLineInfo.LinePosition));
    }

    private void \u003743526211884(\u003876005853890 _param1)
    {
      // ISSUE: reference to a compiler-generated field
      \u003267563740535 obj = this.\u003501308790082;
      if (obj == null)
        throw _param1;
      obj((object) this, new \u003224686942442(_param1));
    }

    public \u003982651865487(\u003250925846196 reader)
    {
      \u003821784578685.\u003260732825936((object) reader, nameof (reader));
      this.\u003873316716392 = reader;
      this.\u003399649444739 = new Stack<\u003982651865487.\u003689479063258>();
    }

    public \u003063117452251 \u003474800806892
    {
      get => this.\u003458583817330;
      set
      {
        if (this.\u003271751439454 != \u003293768301571.None)
          throw new InvalidOperationException("Cannot change schema while validating JSON.");
        this.\u003458583817330 = value;
        this.\u003345360309566 = (\u003234941489533) null;
      }
    }

    public \u003250925846196 \u003248253251735 => this.\u003873316716392;

    public virtual void \u003974358926852()
    {
      this.\u003104324098211();
      if (!this.\u003150239391061)
        return;
      this.\u003873316716392?.\u003104324098211();
    }

    private void \u003934659500183(\u003234941489533 _param1)
    {
      if (_param1 == null)
        return;
      \u003499429179258? nullable = this.\u003782842181073();
      if (!nullable.HasValue || !\u003092860439287.\u003983399664396(new \u003499429179258?(_param1.\u003058294163899), nullable.GetValueOrDefault()))
        return;
      this.\u003787060010954("Type {0} is disallowed.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) nullable), _param1);
    }

    private \u003499429179258? \u003782842181073()
    {
      switch (this.\u003873316716392.\u003271751439454)
      {
        case \u003293768301571.StartObject:
          return new \u003499429179258?(\u003499429179258.Object);
        case \u003293768301571.StartArray:
          return new \u003499429179258?(\u003499429179258.Array);
        case \u003293768301571.Integer:
          return new \u003499429179258?(\u003499429179258.Integer);
        case \u003293768301571.Float:
          return new \u003499429179258?(\u003499429179258.Float);
        case \u003293768301571.String:
          return new \u003499429179258?(\u003499429179258.String);
        case \u003293768301571.Boolean:
          return new \u003499429179258?(\u003499429179258.Boolean);
        case \u003293768301571.Null:
          return new \u003499429179258?(\u003499429179258.Null);
        default:
          return new \u003499429179258?();
      }
    }

    public virtual int? \u003932375095393()
    {
      int? nullable = this.\u003873316716392.\u003846939344416();
      this.\u003468717374162();
      return nullable;
    }

    public virtual byte[] \u003950803782266()
    {
      byte[] numArray = this.\u003873316716392.\u003695363957969();
      this.\u003468717374162();
      return numArray;
    }

    public virtual Decimal? \u003979766414016()
    {
      Decimal? nullable = this.\u003873316716392.\u003621500367976();
      this.\u003468717374162();
      return nullable;
    }

    public virtual double? \u003019557847573()
    {
      double? nullable = this.\u003873316716392.\u003327072374098();
      this.\u003468717374162();
      return nullable;
    }

    public virtual bool? \u003414501358176()
    {
      bool? nullable = this.\u003873316716392.\u003813829189883();
      this.\u003468717374162();
      return nullable;
    }

    public virtual string \u003910389513882()
    {
      string str = this.\u003873316716392.\u003234555842973();
      this.\u003468717374162();
      return str;
    }

    public virtual DateTime? \u003000753251055()
    {
      DateTime? nullable = this.\u003873316716392.\u003092658114599();
      this.\u003468717374162();
      return nullable;
    }

    public virtual DateTimeOffset? \u003414469031304()
    {
      DateTimeOffset? nullable = this.\u003873316716392.\u003583645049759();
      this.\u003468717374162();
      return nullable;
    }

    public virtual bool \u003718992789350()
    {
      if (!this.\u003873316716392.\u003776737810718())
        return false;
      if (this.\u003873316716392.\u003271751439454 == \u003293768301571.Comment)
        return true;
      this.\u003468717374162();
      return true;
    }

    private void \u003468717374162()
    {
      if (this.\u003345360309566 == null)
      {
        this.\u003345360309566 = new \u003564931825997().\u003405794140553(this.\u003458583817330);
        if (!\u003297509839149.\u003336581753550(this.\u003873316716392.\u003271751439454))
          this.\u003298419203038(new \u003982651865487.\u003689479063258(\u003205973939318.None, this.\u003298105774686));
      }
      switch (this.\u003873316716392.\u003271751439454)
      {
        case \u003293768301571.None:
          break;
        case \u003293768301571.StartObject:
          this.\u003977626175894();
          this.\u003298419203038(new \u003982651865487.\u003689479063258(\u003205973939318.Object, (IList<\u003234941489533>) this.\u003298105774686.Where<\u003234941489533>(new Func<\u003234941489533, bool>(this.\u003089046071572)).ToList<\u003234941489533>()));
          this.\u003230663653162(this.\u003056521286154);
          break;
        case \u003293768301571.StartArray:
          this.\u003977626175894();
          this.\u003298419203038(new \u003982651865487.\u003689479063258(\u003205973939318.Array, (IList<\u003234941489533>) this.\u003298105774686.Where<\u003234941489533>(new Func<\u003234941489533, bool>(this.\u003873756916838)).ToList<\u003234941489533>()));
          this.\u003230663653162(this.\u003056521286154);
          break;
        case \u003293768301571.StartConstructor:
          this.\u003977626175894();
          this.\u003298419203038(new \u003982651865487.\u003689479063258(\u003205973939318.Constructor, (IList<\u003234941489533>) null));
          this.\u003230663653162(this.\u003056521286154);
          break;
        case \u003293768301571.PropertyName:
          this.\u003230663653162(this.\u003056521286154);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003056521286154.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003830054627625(enumerator.Current);
            break;
          }
        case \u003293768301571.Raw:
          this.\u003977626175894();
          break;
        case \u003293768301571.Integer:
          this.\u003977626175894();
          this.\u003230663653162(this.\u003298105774686);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003298105774686.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003083585028717(enumerator.Current);
            break;
          }
        case \u003293768301571.Float:
          this.\u003977626175894();
          this.\u003230663653162(this.\u003298105774686);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003298105774686.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003415388338547(enumerator.Current);
            break;
          }
        case \u003293768301571.String:
          this.\u003977626175894();
          this.\u003230663653162(this.\u003298105774686);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003298105774686.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003081762940361(enumerator.Current);
            break;
          }
        case \u003293768301571.Boolean:
          this.\u003977626175894();
          this.\u003230663653162(this.\u003298105774686);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003298105774686.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003285955518802(enumerator.Current);
            break;
          }
        case \u003293768301571.Null:
          this.\u003977626175894();
          this.\u003230663653162(this.\u003298105774686);
          using (IEnumerator<\u003234941489533> enumerator = this.\u003298105774686.GetEnumerator())
          {
            while (enumerator.MoveNext())
              this.\u003640857221463(enumerator.Current);
            break;
          }
        case \u003293768301571.Undefined:
        case \u003293768301571.Date:
        case \u003293768301571.Bytes:
          this.\u003230663653162(this.\u003298105774686);
          break;
        case \u003293768301571.EndObject:
          this.\u003230663653162(this.\u003056521286154);
          foreach (\u003234941489533 obj in (IEnumerable<\u003234941489533>) this.\u003056521286154)
            this.\u003162190199356(obj);
          this.\u003409767283085();
          break;
        case \u003293768301571.EndArray:
          this.\u003230663653162(this.\u003056521286154);
          foreach (\u003234941489533 obj in (IEnumerable<\u003234941489533>) this.\u003056521286154)
            this.\u003561144138461(obj);
          this.\u003409767283085();
          break;
        case \u003293768301571.EndConstructor:
          this.\u003230663653162(this.\u003056521286154);
          this.\u003409767283085();
          break;
        default:
          throw new ArgumentOutOfRangeException();
      }
    }

    private void \u003230663653162(IList<\u003234941489533> _param1_1)
    {
      foreach (\u003982651865487.\u003689479063258 obj1 in this.\u003399649444739)
      {
        bool flag = obj1.\u003533333164705 == \u003205973939318.Array && obj1.\u003285482674630 && obj1.\u003961115782212 > 0;
        if (flag || _param1_1.Any<\u003234941489533>((Func<\u003234941489533, bool>) (_param1_4 => _param1_4.\u003828805632382 != null)))
        {
          if (obj1.\u003230723347124 == null)
          {
            if (!\u003297509839149.\u003690020338023(this.\u003873316716392.\u003271751439454))
              obj1.\u003230723347124 = new \u003798561175010();
            else
              continue;
          }
          obj1.\u003230723347124.\u003080816542929(this.\u003873316716392, false);
          if (obj1.\u003230723347124.\u003966967406397 == 0 && this.\u003873316716392.\u003271751439454 != \u003293768301571.PropertyName)
          {
            \u003057567207975 obj2 = obj1.\u003230723347124.\u003530208551007;
            obj1.\u003230723347124 = (\u003798561175010) null;
            if (flag)
            {
              if (obj1.\u003734269491548.Contains<\u003057567207975>(obj2, (IEqualityComparer<\u003057567207975>) \u003057567207975.\u003190708639878))
                this.\u003787060010954("Non-unique array item at index {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) (obj1.\u003961115782212 - 1)), obj1.\u003892572752090.First<\u003234941489533>((Func<\u003234941489533, bool>) (_param1_2 => _param1_2.\u003846841511622)));
              obj1.\u003734269491548.Add(obj2);
            }
            else if (_param1_1.Any<\u003234941489533>((Func<\u003234941489533, bool>) (_param1_3 => _param1_3.\u003828805632382 != null)))
            {
              foreach (\u003234941489533 obj3 in (IEnumerable<\u003234941489533>) _param1_1)
              {
                if (obj3.\u003828805632382 != null && !obj3.\u003828805632382.\u003716496901415<\u003057567207975>(obj2, (IEqualityComparer<\u003057567207975>) \u003057567207975.\u003190708639878))
                {
                  StringWriter stringWriter = new StringWriter((IFormatProvider) CultureInfo.InvariantCulture);
                  obj2.\u003130996277332((\u003632627526011) new \u003715090300304((TextWriter) stringWriter));
                  this.\u003787060010954("Value {0} is not defined in enum.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) stringWriter.ToString()), obj3);
                }
              }
            }
          }
        }
      }
    }

    private void \u003162190199356(\u003234941489533 _param1_1)
    {
      if (_param1_1 == null)
        return;
      Dictionary<string, bool> source = this.\u003908767857681.\u003929336812458;
      if (source == null || !source.Values.Any<bool>((Func<bool, bool>) (_param1_2 => !_param1_2)))
        return;
      this.\u003787060010954("Required properties are missing from object: {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) string.Join(", ", source.Where<KeyValuePair<string, bool>>((Func<KeyValuePair<string, bool>, bool>) (_param1_3 => !_param1_3.Value)).Select<KeyValuePair<string, bool>, string>((Func<KeyValuePair<string, bool>, string>) (_param1_4 => _param1_4.Key)))), _param1_1);
    }

    private void \u003561144138461(\u003234941489533 _param1)
    {
      if (_param1 == null)
        return;
      int num1 = this.\u003908767857681.\u003961115782212;
      if (_param1.\u003018490314452.HasValue)
      {
        int num2 = num1;
        int? nullable = _param1.\u003018490314452;
        int valueOrDefault = nullable.GetValueOrDefault();
        if ((num2 > valueOrDefault ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          this.\u003787060010954("Array item count {0} exceeds maximum count of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) num1, (object) _param1.\u003018490314452), _param1);
      }
      int? nullable1 = _param1.\u003243240853982;
      if (!nullable1.HasValue)
        return;
      int num3 = num1;
      nullable1 = _param1.\u003243240853982;
      int valueOrDefault1 = nullable1.GetValueOrDefault();
      if ((num3 < valueOrDefault1 ? (nullable1.HasValue ? 1 : 0) : 0) == 0)
        return;
      this.\u003787060010954("Array item count {0} is less than minimum count of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) num1, (object) _param1.\u003243240853982), _param1);
    }

    private void \u003640857221463(\u003234941489533 _param1)
    {
      if (_param1 == null || !this.\u003684001243562(_param1, \u003499429179258.Null))
        return;
      this.\u003934659500183(_param1);
    }

    private void \u003285955518802(\u003234941489533 _param1)
    {
      if (_param1 == null || !this.\u003684001243562(_param1, \u003499429179258.Boolean))
        return;
      this.\u003934659500183(_param1);
    }

    private void \u003081762940361(\u003234941489533 _param1)
    {
      if (_param1 == null || !this.\u003684001243562(_param1, \u003499429179258.String))
        return;
      this.\u003934659500183(_param1);
      string input = this.\u003873316716392.\u003255783382022.ToString();
      int? nullable = _param1.\u003601470995217;
      if (nullable.HasValue)
      {
        int length = input.Length;
        nullable = _param1.\u003601470995217;
        int valueOrDefault = nullable.GetValueOrDefault();
        if ((length > valueOrDefault ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          this.\u003787060010954("String '{0}' exceeds maximum length of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) input, (object) _param1.\u003601470995217), _param1);
      }
      nullable = _param1.\u003595273173665;
      if (nullable.HasValue)
      {
        int length = input.Length;
        nullable = _param1.\u003595273173665;
        int valueOrDefault = nullable.GetValueOrDefault();
        if ((length < valueOrDefault ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          this.\u003787060010954("String '{0}' is less than minimum length of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) input, (object) _param1.\u003595273173665), _param1);
      }
      if (_param1.\u003274996720667 == null)
        return;
      foreach (string pattern in (IEnumerable<string>) _param1.\u003274996720667)
      {
        if (!Regex.IsMatch(input, pattern))
          this.\u003787060010954("String '{0}' does not match regex pattern '{1}'.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) input, (object) pattern), _param1);
      }
    }

    private void \u003083585028717(\u003234941489533 _param1)
    {
      if (_param1 == null || !this.\u003684001243562(_param1, \u003499429179258.Integer))
        return;
      this.\u003934659500183(_param1);
      object obj = this.\u003873316716392.\u003255783382022;
      if (_param1.\u003034440335834.HasValue)
      {
        if (\u003666167056623.\u003175108148407(\u003205973939318.Integer, obj, (object) _param1.\u003034440335834) > 0)
          this.\u003787060010954("Integer {0} exceeds maximum value of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, obj, (object) _param1.\u003034440335834), _param1);
        if (_param1.\u003316770550737 && \u003666167056623.\u003175108148407(\u003205973939318.Integer, obj, (object) _param1.\u003034440335834) == 0)
          this.\u003787060010954("Integer {0} equals maximum value of {1} and exclusive maximum is true.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, obj, (object) _param1.\u003034440335834), _param1);
      }
      double? nullable = _param1.\u003408954896042;
      if (nullable.HasValue)
      {
        if (\u003666167056623.\u003175108148407(\u003205973939318.Integer, obj, (object) _param1.\u003408954896042) < 0)
          this.\u003787060010954("Integer {0} is less than minimum value of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, obj, (object) _param1.\u003408954896042), _param1);
        if (_param1.\u003629753820377 && \u003666167056623.\u003175108148407(\u003205973939318.Integer, obj, (object) _param1.\u003408954896042) == 0)
          this.\u003787060010954("Integer {0} equals minimum value of {1} and exclusive minimum is true.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, obj, (object) _param1.\u003408954896042), _param1);
      }
      nullable = _param1.\u003830655334468;
      if (!nullable.HasValue)
        return;
      bool flag;
      if (obj is BigInteger bigInteger)
      {
        nullable = _param1.\u003830655334468;
        double num1 = nullable.Value;
        nullable = _param1.\u003830655334468;
        double num2 = Math.Truncate(nullable.Value);
        if (!Math.Abs(num1 - num2).Equals(0.0))
        {
          flag = bigInteger != 0L;
        }
        else
        {
          BigInteger bigInteger1 = bigInteger;
          nullable = _param1.\u003830655334468;
          BigInteger bigInteger2 = new BigInteger(nullable.Value);
          flag = bigInteger1 % bigInteger2 != 0L;
        }
      }
      else
      {
        double int64 = (double) Convert.ToInt64(obj, (IFormatProvider) CultureInfo.InvariantCulture);
        nullable = _param1.\u003830655334468;
        double valueOrDefault = nullable.GetValueOrDefault();
        flag = !\u003982651865487.\u003845072125630(int64 % valueOrDefault);
      }
      if (!flag)
        return;
      this.\u003787060010954("Integer {0} is not evenly divisible by {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003236723757957(obj), (object) _param1.\u003830655334468), _param1);
    }

    private void \u003977626175894()
    {
      if (this.\u003908767857681 == null || this.\u003908767857681.\u003533333164705 != \u003205973939318.Array)
        return;
      ++this.\u003908767857681.\u003961115782212;
      foreach (\u003234941489533 obj in (IEnumerable<\u003234941489533>) this.\u003056521286154)
      {
        if (obj != null && obj.\u003932653274318 && !obj.\u003688129365819 && (obj.\u003785074008530 == null || this.\u003908767857681.\u003961115782212 - 1 >= obj.\u003785074008530.Count))
          this.\u003787060010954("Index {0} has not been defined and the schema does not allow additional items.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) this.\u003908767857681.\u003961115782212), obj);
      }
    }

    private void \u003415388338547(\u003234941489533 _param1)
    {
      if (_param1 == null || !this.\u003684001243562(_param1, \u003499429179258.Float))
        return;
      this.\u003934659500183(_param1);
      double num1 = Convert.ToDouble(this.\u003873316716392.\u003255783382022, (IFormatProvider) CultureInfo.InvariantCulture);
      double? nullable = _param1.\u003034440335834;
      if (nullable.HasValue)
      {
        double num2 = num1;
        nullable = _param1.\u003034440335834;
        double valueOrDefault1 = nullable.GetValueOrDefault();
        if ((num2 > valueOrDefault1 ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          this.\u003787060010954("Float {0} exceeds maximum value of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003956289281331(num1), (object) _param1.\u003034440335834), _param1);
        if (_param1.\u003316770550737)
        {
          double num3 = num1;
          nullable = _param1.\u003034440335834;
          double valueOrDefault2 = nullable.GetValueOrDefault();
          if ((num3 == valueOrDefault2 ? (nullable.HasValue ? 1 : 0) : 0) != 0)
            this.\u003787060010954("Float {0} equals maximum value of {1} and exclusive maximum is true.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003956289281331(num1), (object) _param1.\u003034440335834), _param1);
        }
      }
      nullable = _param1.\u003408954896042;
      if (nullable.HasValue)
      {
        double num4 = num1;
        nullable = _param1.\u003408954896042;
        double valueOrDefault3 = nullable.GetValueOrDefault();
        if ((num4 < valueOrDefault3 ? (nullable.HasValue ? 1 : 0) : 0) != 0)
          this.\u003787060010954("Float {0} is less than minimum value of {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003956289281331(num1), (object) _param1.\u003408954896042), _param1);
        if (_param1.\u003629753820377)
        {
          double num5 = num1;
          nullable = _param1.\u003408954896042;
          double valueOrDefault4 = nullable.GetValueOrDefault();
          if ((num5 == valueOrDefault4 ? (nullable.HasValue ? 1 : 0) : 0) != 0)
            this.\u003787060010954("Float {0} equals minimum value of {1} and exclusive minimum is true.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003956289281331(num1), (object) _param1.\u003408954896042), _param1);
        }
      }
      nullable = _param1.\u003830655334468;
      if (!nullable.HasValue)
        return;
      double num6 = num1;
      nullable = _param1.\u003830655334468;
      double valueOrDefault = nullable.GetValueOrDefault();
      if (\u003982651865487.\u003845072125630(\u003982651865487.\u003768373611107(num6, valueOrDefault)))
        return;
      this.\u003787060010954("Float {0} is not evenly divisible by {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) \u003381093190432.\u003956289281331(num1), (object) _param1.\u003830655334468), _param1);
    }

    private static double \u003768373611107(double _param0, double _param1) => _param0 - Math.Floor(_param0 / _param1) * _param1;

    private static bool \u003845072125630(double _param0) => Math.Abs(_param0) < 4.4408920985006262E-15;

    private void \u003830054627625(\u003234941489533 _param1)
    {
      if (_param1 == null)
        return;
      string key = Convert.ToString(this.\u003873316716392.\u003255783382022, (IFormatProvider) CultureInfo.InvariantCulture);
      if (this.\u003908767857681.\u003929336812458.ContainsKey(key))
        this.\u003908767857681.\u003929336812458[key] = true;
      if (!_param1.\u003417550096279 && !this.\u003024517302631(_param1, key))
        this.\u003787060010954("Property '{0}' has not been defined and the schema does not allow additional properties.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) key), _param1);
      this.\u003908767857681.\u003787847404049 = key;
    }

    private bool \u003024517302631(\u003234941489533 _param1, string _param2)
    {
      if (_param1.\u003528129019614 != null && _param1.\u003528129019614.ContainsKey(_param2))
        return true;
      if (_param1.\u003058392548601 != null)
      {
        foreach (string key in (IEnumerable<string>) _param1.\u003058392548601.Keys)
        {
          if (Regex.IsMatch(_param2, key))
            return true;
        }
      }
      return false;
    }

    private bool \u003873756916838(\u003234941489533 _param1) => _param1 == null || this.\u003684001243562(_param1, \u003499429179258.Array);

    private bool \u003089046071572(\u003234941489533 _param1) => _param1 == null || this.\u003684001243562(_param1, \u003499429179258.Object);

    private bool \u003684001243562(\u003234941489533 _param1, \u003499429179258 _param2)
    {
      if (\u003092860439287.\u003983399664396(new \u003499429179258?(_param1.\u003945921932442), _param2))
        return true;
      this.\u003787060010954("Invalid type. Expected {0} but got {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.\u003945921932442, (object) _param2), _param1);
      return false;
    }

    bool IJsonLineInfo.\u003997426155457() => this.\u003873316716392 is IJsonLineInfo jsonLineInfo && jsonLineInfo.HasLineInfo();

    int IJsonLineInfo.\u003448492746752 => !(this.\u003873316716392 is IJsonLineInfo jsonLineInfo) ? 0 : jsonLineInfo.LineNumber;

    int IJsonLineInfo.\u003712043234359 => !(this.\u003873316716392 is IJsonLineInfo jsonLineInfo) ? 0 : jsonLineInfo.LinePosition;

    private class \u003689479063258
    {
      private readonly IList<\u003234941489533> \u003313897326622;
      private readonly Dictionary<string, bool> \u003620801938250;
      public static readonly \u003982651865487.\u003570530664851 \u003958217689336 = new \u003982651865487.\u003570530664851();

      public string \u003787847404049
      {
        [CompilerGenerated, SpecialName] get => (^(\u003982651865487.\u003689479063258&) ref this).\u003865056025357;
        set => this.\u003865056025357 = value;
      }

      public int \u003961115782212 { get; set; }

      public bool \u003285482674630 { get; }

      public IList<\u003057567207975> \u003734269491548 { get; }

      public \u003798561175010 \u003230723347124 { get; set; }

      public IList<\u003234941489533> \u003892572752090 => this.\u003313897326622;

      public Dictionary<string, bool> \u003929336812458 => this.\u003620801938250;

      public \u003205973939318 \u003533333164705 => ((\u003715090300304.\u003910725542418) this).\u003028859262006;

      public \u003689479063258(\u003205973939318 tokenType, IList<\u003234941489533> schemas)
      {
        // ISSUE: reference to a compiler-generated field
        ((\u003715090300304.\u003910725542418) this).\u003028859262006 = tokenType;
        this.\u003313897326622 = schemas;
        this.\u003620801938250 = schemas.SelectMany<\u003234941489533, string>(new Func<\u003234941489533, IEnumerable<string>>(this.\u003168170121405)).Distinct<string>().ToDictionary<string, string, bool>((Func<string, string>) (_param1 => _param1), (Func<string, bool>) (_param1 => false));
        if (tokenType != \u003205973939318.Array || !schemas.Any<\u003234941489533>((Func<\u003234941489533, bool>) (_param1 => _param1.\u003846841511622)))
          return;
        this.\u003285482674630 = true;
        this.\u003734269491548 = (IList<\u003057567207975>) new List<\u003057567207975>();
      }

      private IEnumerable<string> \u003168170121405(\u003234941489533 _param1_1) => _param1_1?.\u003528129019614 == null ? Enumerable.Empty<string>() : _param1_1.\u003528129019614.Where<KeyValuePair<string, \u003234941489533>>((Func<KeyValuePair<string, \u003234941489533>, bool>) (_param1_2 => _param1_2.Value.\u003416515315205)).Select<KeyValuePair<string, \u003234941489533>, string>((Func<KeyValuePair<string, \u003234941489533>, string>) (_param1_3 => _param1_3.Key));
    }
  }
}
