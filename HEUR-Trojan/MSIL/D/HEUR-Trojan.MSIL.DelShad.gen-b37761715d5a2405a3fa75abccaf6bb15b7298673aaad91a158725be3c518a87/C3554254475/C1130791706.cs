// Decompiled with JetBrains decompiler
// Type: C3554254475.C1130791706
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace C3554254475
{
  public static class C1130791706
  {
    public static readonly StringComparison C3554254475 = StringComparison.OrdinalIgnoreCase;
    private static bool C3554254475 = false;
    private static UTF8Encoding C3554254475 = (UTF8Encoding) null;
    private static List<C3554254475.C3775001192> C3554254475 = (List<C3554254475.C3775001192>) null;
    private static readonly char[] C3554254475 = new char[1]
    {
      '*'
    };
    private static readonly char[] C3904355907 = new char[2]
    {
      '.',
      ','
    };
    private static readonly byte[] C3554254475 = new byte[4]
    {
      (byte) 165,
      (byte) 116,
      (byte) 46,
      (byte) 236
    };
    private static readonly char[] C1255198513 = new char[3]
    {
      ',',
      ';',
      ':'
    };
    private static readonly string[] C3554254475 = new string[10]
    {
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bk(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BL(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bl(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BM(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bm(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BN(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bn(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BO(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bo(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BP()
    };
    private static string[] C3904355907 = (string[]) null;

    [SpecialName]
    public static StringComparer C3554254475() => StringComparer.OrdinalIgnoreCase;

    [SpecialName]
    public static bool C3904355907() => C3554254475.C1130791706.C3554254475;

    [SpecialName]
    public static void C3554254475([In] bool obj0) => C3554254475.C1130791706.C3554254475 = obj0;

    [SpecialName]
    public static UTF8Encoding C1255198513()
    {
      if (C3554254475.C1130791706.C3554254475 == null)
        C3554254475.C1130791706.C3554254475 = new UTF8Encoding(false, false);
      return C3554254475.C1130791706.C3554254475;
    }

    [SpecialName]
    public static IEnumerable<C3554254475.C3775001192> C1908338681()
    {
      if (C3554254475.C1130791706.C3554254475 != null)
        return (IEnumerable<C3554254475.C3775001192>) C3554254475.C1130791706.C3554254475;
      List<C3554254475.C3775001192> c3775001192List = new List<C3554254475.C3775001192>();
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C3904355907, Encoding.Default.EncodingName, Encoding.Default, (uint) Encoding.Default.GetBytes(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1505515367()).Length, (byte[]) null));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C1255198513, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C1657960367(), Encoding.ASCII, 1U, (byte[]) null));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C1908338681, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aA(), Encoding.UTF7, 1U, (byte[]) null));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C1037565863, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aa(), (Encoding) C3554254475.C1130791706.C1255198513(), 1U, new byte[3]
      {
        (byte) 239,
        (byte) 187,
        (byte) 191
      }));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C112844655, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aB(), (Encoding) new UnicodeEncoding(false, false), 2U, new byte[2]
      {
        byte.MaxValue,
        (byte) 254
      }));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C2746444292, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ab(), (Encoding) new UnicodeEncoding(true, false), 2U, new byte[2]
      {
        (byte) 254,
        byte.MaxValue
      }));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C2564639436, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aC(), (Encoding) new UTF32Encoding(false, false), 4U, new byte[4]
      {
        byte.MaxValue,
        (byte) 254,
        (byte) 0,
        (byte) 0
      }));
      c3775001192List.Add(new C3554254475.C3775001192(C3554254475.C3664761504.C3568589458, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ac(), (Encoding) new UTF32Encoding(true, false), 4U, new byte[4]
      {
        (byte) 0,
        (byte) 0,
        (byte) 254,
        byte.MaxValue
      }));
      C3554254475.C1130791706.C3554254475 = c3775001192List;
      return (IEnumerable<C3554254475.C3775001192>) c3775001192List;
    }

    public static string C3554254475([In] char obj0)
    {
      short num = (short) obj0;
      return DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aD() + num.ToString((IFormatProvider) NumberFormatInfo.InvariantInfo) + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ad();
    }

    internal static bool C3554254475([In] string obj0)
    {
      if (obj0 != null)
        return obj0.StartsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aE()) && obj0.Length > DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aE().Length && char.IsDigit(obj0[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aE().Length]);
      Debug.Assert(false);
      return false;
    }

    public static string C3904355907([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return string.Empty;
      }
      string str = obj0;
      if (C3554254475.C1130791706.C3554254475(str))
        str = str.Remove(2, 1);
      return str;
    }

    internal static bool C1255198513([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return false;
      }
      for (int index = 0; index < obj0.Length; ++index)
      {
        if (obj0[index] > 'ÿ')
          return true;
      }
      return false;
    }

    public static string C1908338681([In] string obj0) => C3554254475.C1130791706.C3554254475(obj0, false);

    internal static string C3554254475([In] string obj0, [In] bool obj1)
    {
      Debug.Assert(obj0 != null);
      obj0 = obj0 != null ? obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aF()) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3081909835());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.af(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aG());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ag(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aH());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ah(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aI());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aJ());
      if (obj1)
        obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aj(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aK());
      obj0 = C3554254475.C1130791706.C1255198513(obj0, false);
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aL() + C3554254475.C2909332022.C3554254475());
      return obj0;
    }

    public static string C1037565863([In] string obj0)
    {
      Debug.Assert(obj0 != null);
      obj0 = obj0 != null ? obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aF(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae()) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3081909835());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aG(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.af());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aH(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ag());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aI(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ah());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aJ(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai());
      return obj0;
    }

    public static string C3554254475([In] string obj0, [In] string obj1, [In] string obj2)
    {
      Debug.Assert(obj0 != null);
      if (obj0 == null)
        return obj0;
      Debug.Assert(obj1 != null);
      if (obj1 == null)
        return obj0;
      Debug.Assert(obj2 != null);
      if (obj2 == null)
        return obj0;
      string str = obj0;
      int startIndex1;
      for (int startIndex2 = 0; startIndex2 < str.Length; startIndex2 = startIndex1 + obj2.Length)
      {
        startIndex1 = str.IndexOf(obj1, startIndex2, StringComparison.OrdinalIgnoreCase);
        if (startIndex1 >= 0)
          str = str.Remove(startIndex1, obj1.Length).Insert(startIndex1, obj2);
        else
          break;
      }
      return str;
    }

    public static string C3554254475([In] Color obj0, [In] bool obj1)
    {
      if (obj1 && obj0.A != byte.MaxValue)
        return string.Empty;
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append('#');
      byte num1 = (byte) ((uint) obj0.R >> 4);
      if (num1 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num1));
      else
        stringBuilder.Append((char) (55U + (uint) num1));
      byte num2 = (byte) ((uint) obj0.R & 15U);
      if (num2 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num2));
      else
        stringBuilder.Append((char) (55U + (uint) num2));
      byte num3 = (byte) ((uint) obj0.G >> 4);
      if (num3 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num3));
      else
        stringBuilder.Append((char) (55U + (uint) num3));
      byte num4 = (byte) ((uint) obj0.G & 15U);
      if (num4 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num4));
      else
        stringBuilder.Append((char) (55U + (uint) num4));
      byte num5 = (byte) ((uint) obj0.B >> 4);
      if (num5 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num5));
      else
        stringBuilder.Append((char) (55U + (uint) num5));
      byte num6 = (byte) ((uint) obj0.B & 15U);
      if (num6 < (byte) 10)
        stringBuilder.Append((char) (48U + (uint) num6));
      else
        stringBuilder.Append((char) (55U + (uint) num6));
      return stringBuilder.ToString();
    }

    public static string C3554254475([In] Exception obj0)
    {
      string str = string.Empty;
      if (!string.IsNullOrEmpty(obj0.Message))
        str = str + obj0.Message + C3554254475.C2909332022.C3554254475();
      if (!string.IsNullOrEmpty(obj0.Source))
        str = str + obj0.Source + C3554254475.C2909332022.C3554254475();
      if (!string.IsNullOrEmpty(obj0.StackTrace))
        str = str + obj0.StackTrace + C3554254475.C2909332022.C3554254475();
      if (obj0.TargetSite != (MethodBase) null)
        str = str + obj0.TargetSite.ToString() + C3554254475.C2909332022.C3554254475();
      if (obj0.Data != null)
      {
        str += C3554254475.C2909332022.C3554254475();
        foreach (DictionaryEntry dictionaryEntry in obj0.Data)
          str = str + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai() + dictionaryEntry.Key?.ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.al() + dictionaryEntry.Value?.ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai() + C3554254475.C2909332022.C3554254475();
      }
      if (obj0.InnerException != null)
      {
        str = str + C3554254475.C2909332022.C3554254475() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aM() + C3554254475.C2909332022.C3554254475();
        if (!string.IsNullOrEmpty(obj0.InnerException.Message))
          str = str + obj0.InnerException.Message + C3554254475.C2909332022.C3554254475();
        if (!string.IsNullOrEmpty(obj0.InnerException.Source))
          str = str + obj0.InnerException.Source + C3554254475.C2909332022.C3554254475();
        if (!string.IsNullOrEmpty(obj0.InnerException.StackTrace))
          str = str + obj0.InnerException.StackTrace + C3554254475.C2909332022.C3554254475();
        if (obj0.InnerException.TargetSite != (MethodBase) null)
          str += obj0.InnerException.TargetSite.ToString();
        if (obj0.InnerException.Data != null)
        {
          str += C3554254475.C2909332022.C3554254475();
          foreach (DictionaryEntry dictionaryEntry in obj0.InnerException.Data)
            str = str + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai() + dictionaryEntry.Key?.ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.al() + dictionaryEntry.Value?.ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ai() + C3554254475.C2909332022.C3554254475();
        }
      }
      return str;
    }

    public static bool C3554254475([In] string obj0, out ushort _param1) => ushort.TryParse(obj0, out _param1);

    public static bool C3554254475([In] string obj0, out int _param1) => int.TryParse(obj0, out _param1);

    public static bool C3904355907([In] string obj0, out int _param1) => int.TryParse(obj0, NumberStyles.Integer, (IFormatProvider) NumberFormatInfo.InvariantInfo, out _param1);

    public static bool C3554254475([In] string obj0, out uint _param1) => uint.TryParse(obj0, out _param1);

    public static bool C3904355907([In] string obj0, out uint _param1) => uint.TryParse(obj0, NumberStyles.Integer, (IFormatProvider) NumberFormatInfo.InvariantInfo, out _param1);

    public static bool C3554254475([In] string obj0, out long _param1) => long.TryParse(obj0, out _param1);

    public static bool C3904355907([In] string obj0, out long _param1) => long.TryParse(obj0, NumberStyles.Integer, (IFormatProvider) NumberFormatInfo.InvariantInfo, out _param1);

    public static bool C3554254475([In] string obj0, out ulong _param1) => ulong.TryParse(obj0, out _param1);

    public static bool C3904355907([In] string obj0, out ulong _param1) => ulong.TryParse(obj0, NumberStyles.Integer, (IFormatProvider) NumberFormatInfo.InvariantInfo, out _param1);

    public static bool C3554254475([In] string obj0, out DateTime _param1) => DateTime.TryParse(obj0, out _param1);

    public static string C3554254475([In] string obj0, [In] int obj1)
    {
      Debug.Assert(obj0 != null);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.am());
      Debug.Assert(obj1 >= 0);
      if (obj1 < 0)
        throw new ArgumentOutOfRangeException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aN());
      if (obj0.Length <= obj1)
        return obj0;
      if (obj1 == 0)
        return string.Empty;
      return obj1 <= 3 ? new string('.', obj1) : obj0.Substring(0, obj1 - 3) + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.an();
    }

    public static string C3554254475([In] string obj0, [In] int obj1, [In] string obj2, [In] string obj3) => C3554254475.C1130791706.C3554254475(obj0, obj1, obj2, obj3, out int _);

    public static string C3554254475(
      [In] string obj0,
      [In] int obj1,
      [In] string obj2,
      [In] string obj3,
      out int _param4)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.am());
      if (obj2 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aO());
      if (obj3 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ao());
      _param4 = -1;
      int num1 = obj0.IndexOf(obj2, obj1);
      if (num1 < 0)
        return string.Empty;
      int startIndex = num1 + obj2.Length;
      int num2 = obj0.IndexOf(obj3, startIndex);
      if (num2 < 0)
        return string.Empty;
      _param4 = startIndex;
      return obj0.Substring(startIndex, num2 - startIndex);
    }

    public static string C112844655([In] string obj0)
    {
      Debug.Assert(obj0 != null);
      if (string.IsNullOrEmpty(obj0))
        return obj0;
      int length = obj0.Length;
      StringBuilder stringBuilder = new StringBuilder(length);
      for (int index = 0; index < length; ++index)
      {
        char ch1 = obj0[index];
        if (ch1 >= ' ' && ch1 <= '\uD7FF' || ch1 == '\t' || ch1 == '\n' || ch1 == '\r' || ch1 >= '\uE000' && ch1 <= '�')
          stringBuilder.Append(ch1);
        else if (ch1 >= '\uD800' && ch1 <= '\uDBFF')
        {
          if (index + 1 < length)
          {
            char ch2 = obj0[index + 1];
            if (ch2 >= '\uDC00' && ch2 <= '\uDFFF')
            {
              stringBuilder.Append(ch1);
              stringBuilder.Append(ch2);
              ++index;
            }
            else
              Debug.Assert(false);
          }
          else
            Debug.Assert(false);
        }
        Debug.Assert(ch1 < '\uDC00' || ch1 > '\uDFFF');
      }
      return stringBuilder.ToString();
    }

    public static int C3554254475([In] string obj0, [In] string obj1)
    {
      Debug.Assert(obj0 != null);
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aP());
      Debug.Assert(obj1 != null);
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ap());
      if (C543223747.C1037565863())
        return C543223747.C3904355907(obj0, obj1);
      int length1 = obj0.Length;
      int length2 = obj1.Length;
      if (length1 == 0)
        return length2 == 0 ? 0 : -1;
      if (length2 == 0)
        return 1;
      char ch1 = obj0[0];
      char ch2 = obj1[0];
      bool flag1 = ch1 >= '0' && ch1 <= '9';
      bool flag2 = ch2 >= '0' && ch2 <= '9';
      if (flag1 != flag2)
        return string.Compare(obj0, obj1, true);
      int num1 = 0;
      int num2;
      int index1;
      for (num2 = 0; num1 < length1 && num2 < length2; num2 = index1)
      {
        Debug.Assert((obj0[num1] < '0' ? 0 : (obj0[num1] <= '9' ? 1 : 0)) == (flag1 ? 1 : 0));
        Debug.Assert((obj1[num2] < '0' ? 0 : (obj1[num2] <= '9' ? 1 : 0)) == (flag1 ? 1 : 0));
        int index2;
        for (index2 = num1 + 1; index2 < length1; ++index2)
        {
          char ch3 = obj0[index2];
          if ((ch3 >= '0' && ch3 <= '9') != flag1)
            break;
        }
        for (index1 = num2 + 1; index1 < length2; ++index1)
        {
          char ch4 = obj1[index1];
          if ((ch4 >= '0' && ch4 <= '9') != flag1)
            break;
        }
        string str1 = obj0.Substring(num1, index2 - num1);
        string str2 = obj1.Substring(num2, index1 - num2);
        bool flag3 = true;
        if (flag1)
        {
          if (str1.Length <= 19 && str2.Length <= 19)
          {
            ulong result1;
            ulong result2;
            if (ulong.TryParse(str1, out result1) && ulong.TryParse(str2, out result2))
            {
              if (result1 < result2)
                return -1;
              if (result1 > result2)
                return 1;
              flag3 = false;
            }
            else
              Debug.Assert(false);
          }
          else
          {
            double result3;
            double result4;
            if (double.TryParse(str1, out result3) && double.TryParse(str2, out result4))
            {
              if (result3 < result4)
                return -1;
              if (result3 > result4)
                return 1;
              flag3 = false;
            }
            else
              Debug.Assert(false);
          }
        }
        if (flag3)
        {
          int num3 = string.Compare(str1, str2, true);
          if (num3 != 0)
            return num3;
        }
        flag1 = !flag1;
        num1 = index2;
      }
      if (num1 >= length1)
      {
        Debug.Assert(num1 == length1);
        if (num2 < length2)
          return -1;
        Debug.Assert(num2 == length2);
        return 0;
      }
      Debug.Assert(num2 == length2);
      return 1;
    }

    public static string C2746444292([In] string obj0)
    {
      string str = obj0 != null ? obj0 : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aQ());
      for (char ch = 'A'; ch <= 'Z'; ++ch)
      {
        string oldValue = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aq() + ch.ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aR();
        if (str.IndexOf(oldValue) >= 0)
          str = str.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aj() + oldValue, string.Empty).Replace(oldValue, string.Empty);
      }
      return str.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae(), string.Empty);
    }

    public static string C3554254475([In] string obj0, [In] List<char> obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return (string) null;
      }
      if (obj1 == null)
      {
        Debug.Assert(false);
        return obj0;
      }
      int index1 = -1;
      int startIndex = 0;
      for (int index2 = 0; index2 < obj0.Length; ++index2)
      {
        char c = obj0[index2];
        char upperInvariant = char.ToUpperInvariant(c);
        index1 = obj1.IndexOf(upperInvariant);
        if (index1 >= 0)
        {
          startIndex = index2;
          break;
        }
        char lowerInvariant = char.ToLowerInvariant(c);
        index1 = obj1.IndexOf(lowerInvariant);
        if (index1 >= 0)
        {
          startIndex = index2;
          break;
        }
      }
      if (index1 < 0)
        return obj0;
      obj1.RemoveAt(index1);
      return obj0.Insert(startIndex, DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae());
    }

    public static string C2564639436([In] string obj0) => obj0 != null ? obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ar()) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.am());

    public static string C3568589458([In] string obj0) => obj0 != null ? obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ae(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aS()) : throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.am());

    public static bool C3904355907([In] string obj0, [In] bool obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3081909835());
      foreach (char ch in obj0)
      {
        if ((ch < '0' || ch > '9') && (ch < 'a' || ch > 'f') && (ch < 'A' || ch > 'F') && (obj1 || ch != ' ' && ch != '\t' && ch != '\r' && ch != '\n'))
          return false;
      }
      return true;
    }

    public static bool C3554254475([In] byte[] obj0, [In] bool obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.@as());
      for (int index = 0; index < obj0.Length; ++index)
      {
        byte num = obj0[index];
        if ((num < (byte) 48 || num > (byte) 57) && (num < (byte) 97 || num > (byte) 102) && (num < (byte) 65 || num > (byte) 70) && (obj1 || num != (byte) 32 && num != (byte) 9 && num != (byte) 13 && num != (byte) 10))
          return false;
      }
      return true;
    }

    public static bool C3554254475([In] string obj0, [In] string obj1, [In] StringComparison obj2)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aT());
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.am());
      if (obj0.IndexOf('*') < 0)
        return obj1.Equals(obj0, obj2);
      string[] strArray = obj0.Split(C3554254475.C1130791706.C3554254475, StringSplitOptions.RemoveEmptyEntries);
      if (strArray == null)
      {
        Debug.Assert(false);
        return true;
      }
      if (strArray.Length == 0)
        return true;
      if (obj1.Length == 0 || !obj0.StartsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.at()) && !obj1.StartsWith(strArray[0], obj2) || !obj0.EndsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.at()) && !obj1.EndsWith(strArray[strArray.Length - 1], obj2))
        return false;
      int startIndex = 0;
      for (int index = 0; index < strArray.Length; ++index)
      {
        string str = strArray[index];
        int num = obj1.IndexOf(str, startIndex, obj2);
        if (num < startIndex)
          return false;
        startIndex = num + str.Length;
        if (startIndex == obj1.Length)
          return index == strArray.Length - 1;
      }
      return true;
    }

    public static bool C4024072794([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        return false;
      string lower = obj0.Trim().ToLower();
      return lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aU() || lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.au() || lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aV() || lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.av() || lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aW();
    }

    public static bool? C1304234792([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        return new bool?();
      string lower = obj0.Trim().ToLower();
      if (lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aU())
        return new bool?(true);
      return lower == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aw() ? new bool?(false) : new bool?();
    }

    public static string C3904355907([In] bool obj0) => obj0 ? DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aU() : DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aw();

    public static string C3554254475([In] bool? obj0) => obj0.HasValue ? C3554254475.C1130791706.C3904355907(obj0.Value) : DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aX();

    public static string C1255198513([In] string obj0, [In] bool obj1)
    {
      if (string.IsNullOrEmpty(obj0))
        return obj0;
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ax(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak());
      obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aY(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak());
      if (obj1)
        obj0 = obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ax());
      return obj0;
    }

    internal static bool C3554254475([In] char[] obj0, [In] bool obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return true;
      }
      if (!obj1)
        return Array.IndexOf<char>(obj0, '\r') < 0;
      int num = -2;
      for (int index = 0; index < obj0.Length; ++index)
      {
        switch (obj0[index])
        {
          case '\n':
            if (num != index - 1)
              return false;
            num = -2;
            break;
          case '\r':
            if (num >= 0)
              return false;
            num = index;
            break;
        }
      }
      return num < 0;
    }

    public static string C1993550816([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return C3554254475.C2909332022.C3554254475();
      }
      int length = obj0.Length;
      int num1 = 0;
      int num2 = 0;
      int val1_1 = 0;
      char ch1 = char.MinValue;
      for (int index = 0; index < length; ++index)
      {
        char ch2 = obj0[index];
        switch (ch2)
        {
          case '\n':
            ++num1;
            if (ch1 == '\r')
              ++val1_1;
            break;
          case '\r':
            ++num2;
            break;
        }
        ch1 = ch2;
      }
      int val1_2 = num2 - val1_1;
      int val2 = num1 - val1_1;
      int num3 = Math.Max(val1_1, Math.Max(val1_2, val2));
      if (num3 == 0)
        return C3554254475.C2909332022.C3554254475();
      return val1_1 == num3 ? DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ax() : (val2 == num3 ? DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak() : DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aY());
    }

    public static string C985283518([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        return obj0;
      StringBuilder stringBuilder = new StringBuilder();
      for (int index = 0; index < obj0.Length; ++index)
      {
        char ch = obj0[index];
        if (ch >= 'a' && ch <= 'z' || ch >= 'A' && ch <= 'Z' || ch >= '0' && ch <= '9')
          stringBuilder.Append(ch);
      }
      return stringBuilder.ToString();
    }

    public static string C3554254475([In] ulong obj0)
    {
      if (obj0 == 0UL)
        return DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ay();
      if (obj0 <= 1024UL)
        return DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aZ();
      if (obj0 <= 1048576UL)
        return ((obj0 - 1UL) / 1024UL + 1UL).ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.az();
      if (obj0 <= 1073741824UL)
        return ((obj0 - 1UL) / 1048576UL + 1UL).ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BA();
      return obj0 <= 1099511627776UL ? ((obj0 - 1UL) / 1073741824UL + 1UL).ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Ba() : ((obj0 - 1UL) / 1099511627776UL + 1UL).ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BB();
    }

    public static string C3904355907([In] ulong obj0)
    {
      if (obj0 == 0UL)
        return DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ay();
      return obj0 <= 1024UL ? DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aZ() : ((obj0 - 1UL) / 1024UL + 1UL).ToString() + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.az();
    }

    public static ulong C30677878([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return 0;
      }
      string[] strArray = obj0.Split(C3554254475.C1130791706.C3904355907);
      if (strArray == null || strArray.Length == 0)
      {
        Debug.Assert(false);
        return 0;
      }
      ushort num1;
      C3554254475.C1130791706.C3554254475(strArray[0].Trim(), out num1);
      ulong num2 = (ulong) num1 << 48;
      if (strArray.Length >= 2)
      {
        C3554254475.C1130791706.C3554254475(strArray[1].Trim(), out num1);
        num2 |= (ulong) num1 << 32;
      }
      if (strArray.Length >= 3)
      {
        C3554254475.C1130791706.C3554254475(strArray[2].Trim(), out num1);
        num2 |= (ulong) num1 << 16;
      }
      if (strArray.Length >= 4)
      {
        C3554254475.C1130791706.C3554254475(strArray[3].Trim(), out num1);
        num2 |= (ulong) num1;
      }
      return num2;
    }

    public static string C1255198513([In] ulong obj0) => C3554254475.C1130791706.C3554254475(obj0, 1U);

    [Obsolete]
    public static string C3554254475([In] ulong obj0, [In] bool obj1) => C3554254475.C1130791706.C3554254475(obj0, obj1 ? 2U : 1U);

    public static string C3554254475([In] ulong obj0, [In] uint obj1)
    {
      StringBuilder stringBuilder = new StringBuilder();
      uint num1 = 0;
      for (int index = 0; index < 4 && obj0 != 0UL; ++index)
      {
        ushort num2 = (ushort) (obj0 >> 48);
        if (stringBuilder.Length > 0)
          stringBuilder.Append('.');
        stringBuilder.Append(num2.ToString((IFormatProvider) NumberFormatInfo.InvariantInfo));
        ++num1;
        obj0 <<= 16;
      }
      for (; num1 < obj1; ++num1)
      {
        if (stringBuilder.Length > 0)
          stringBuilder.Append('.');
        stringBuilder.Append('0');
      }
      return stringBuilder.ToString();
    }

    public static string C2852464175([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        return string.Empty;
      try
      {
        return Convert.ToBase64String(C3904355907.C1304234792.C3554254475(C3554254475.C1130791706.C1255198513().GetBytes(obj0), C3554254475.C1130791706.C3554254475, DataProtectionScope.CurrentUser), Base64FormattingOptions.None);
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      return obj0;
    }

    public static string C2439710439([In] string obj0)
    {
      if (string.IsNullOrEmpty(obj0))
        return string.Empty;
      try
      {
        byte[] bytes = C3904355907.C1304234792.C3904355907(Convert.FromBase64String(obj0), C3554254475.C1130791706.C3554254475, DataProtectionScope.CurrentUser);
        return C3554254475.C1130791706.C1255198513().GetString(bytes, 0, bytes.Length);
      }
      catch (Exception ex)
      {
        Debug.Assert(false);
      }
      return obj0;
    }

    public static string C3554254475([In] int[] obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bb());
      StringBuilder stringBuilder = new StringBuilder();
      for (int index = 0; index < obj0.Length; ++index)
      {
        if (index > 0)
          stringBuilder.Append(' ');
        stringBuilder.Append(obj0[index].ToString((IFormatProvider) NumberFormatInfo.InvariantInfo));
      }
      return stringBuilder.ToString();
    }

    public static int[] C3707901625([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          return new int[0];
        case null:
          throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BC());
        default:
          string[] strArray = obj0.Split(' ');
          int[] numArray = new int[strArray.Length];
          for (int index = 0; index < strArray.Length; ++index)
          {
            int num;
            if (!C3554254475.C1130791706.C3904355907(strArray[index], out num))
              Debug.Assert(false);
            numArray[index] = num;
          }
          return numArray;
      }
    }

    public static string C3554254475([In] List<string> obj0, [In] bool obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bc());
      StringBuilder stringBuilder = new StringBuilder();
      bool flag = true;
      foreach (string str in obj0)
      {
        if (string.IsNullOrEmpty(str))
        {
          Debug.Assert(false);
        }
        else
        {
          Debug.Assert(str.IndexOfAny(C3554254475.C1130791706.C1255198513) < 0);
          if (!flag)
          {
            if (obj1)
              stringBuilder.Append(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BD());
            else
              stringBuilder.Append(';');
          }
          stringBuilder.Append(str);
          flag = false;
        }
      }
      return stringBuilder.ToString();
    }

    public static List<string> C3865851505([In] string obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bd());
      List<string> stringList = new List<string>();
      if (obj0.Length == 0)
        return stringList;
      foreach (string str1 in obj0.Split(C3554254475.C1130791706.C1255198513))
      {
        string str2 = str1.Trim();
        if (str2.Length > 0)
          stringList.Add(str2);
      }
      return stringList;
    }

    public static string C1141589763([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          return string.Empty;
        case null:
          Debug.Assert(false);
          return string.Empty;
        default:
          byte[] bytes = C3554254475.C1130791706.C1255198513().GetBytes(obj0);
          Array.Reverse((Array) bytes);
          for (int index = 0; index < bytes.Length; ++index)
            bytes[index] = (byte) ((uint) bytes[index] ^ 101U);
          return Convert.ToBase64String(bytes, Base64FormattingOptions.None);
      }
    }

    public static string C2137352139([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          return string.Empty;
        case null:
          Debug.Assert(false);
          return string.Empty;
        default:
          try
          {
            byte[] bytes = Convert.FromBase64String(obj0);
            for (int index = 0; index < bytes.Length; ++index)
              bytes[index] = (byte) ((uint) bytes[index] ^ 101U);
            Array.Reverse((Array) bytes);
            return C3554254475.C1130791706.C1255198513().GetString(bytes, 0, bytes.Length);
          }
          catch (Exception ex)
          {
            Debug.Assert(false);
          }
          return string.Empty;
      }
    }

    public static List<string> C3554254475([In] string obj0, [In] string[] obj1, [In] bool obj2)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C3081909835());
      if (obj1 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BE());
      List<string> stringList = new List<string>();
      while (true)
      {
        int length = int.MaxValue;
        int index1 = -1;
        for (int index2 = 0; index2 < obj1.Length; ++index2)
        {
          string str = obj1[index2];
          if (string.IsNullOrEmpty(str))
          {
            Debug.Assert(false);
          }
          else
          {
            int num = obj2 ? obj0.IndexOf(str) : obj0.IndexOf(str, C3554254475.C1130791706.C3554254475);
            if (num >= 0 && num < length)
            {
              length = num;
              index1 = index2;
            }
          }
        }
        if (length != int.MaxValue)
        {
          stringList.Add(obj0.Substring(0, length));
          stringList.Add(obj1[index1]);
          obj0 = obj0.Substring(length + obj1[index1].Length);
        }
        else
          break;
      }
      stringList.Add(obj0);
      return stringList;
    }

    public static string C856455061([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          return string.Empty;
        case null:
          Debug.Assert(false);
          return string.Empty;
        default:
          return obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ax(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aj()).Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aY(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aj()).Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ak(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.aj());
      }
    }

    public static List<string> C140662621([In] string obj0)
    {
      List<string> stringList = new List<string>();
      if (obj0 == null)
      {
        Debug.Assert(false);
        return stringList;
      }
      StringBuilder stringBuilder = new StringBuilder();
      bool flag = false;
      for (int index = 0; index < obj0.Length; ++index)
      {
        char ch = obj0[index];
        int num;
        switch (ch)
        {
          case '\t':
          case '\n':
          case '\r':
          case ' ':
            num = !flag ? 1 : 0;
            break;
          default:
            num = 0;
            break;
        }
        if (num != 0)
        {
          if (stringBuilder.Length > 0)
            stringList.Add(stringBuilder.ToString());
          stringBuilder.Remove(0, stringBuilder.Length);
        }
        else if (ch == '"')
          flag = !flag;
        else
          stringBuilder.Append(ch);
      }
      if (stringBuilder.Length > 0)
        stringList.Add(stringBuilder.ToString());
      return stringList;
    }

    public static int C3904355907([In] string obj0, [In] string obj1) => obj0.Length == obj1.Length ? 0 : (obj0.Length > obj1.Length ? -1 : 1);

    public static bool C2909332022([In] string obj0) => C3554254475.C1130791706.C1255198513(obj0, (string) null);

    public static bool C1255198513([In] string obj0, [In] string obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return false;
      }
      if (!obj0.StartsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Be(), C3554254475.C1130791706.C3554254475))
        return false;
      int count = obj0.IndexOf(',');
      if (count < 0)
        return false;
      if (!string.IsNullOrEmpty(obj1))
      {
        int num1 = obj0.IndexOf(';', 0, count);
        int num2 = num1 >= 0 ? num1 : count;
        if (!obj0.Substring(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Be().Length, num2 - DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Be().Length).Equals(obj1, C3554254475.C1130791706.C3554254475))
          return false;
      }
      return true;
    }

    public static string C3554254475([In] byte[] obj0, [In] string obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.C2238339752());
      if (obj1 == null)
        obj1 = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BF();
      return DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Be() + obj1 + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bf() + Convert.ToBase64String(obj0, Base64FormattingOptions.None);
    }

    public static byte[] C2517025534([In] string obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BG());
      if (!obj0.StartsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Be(), C3554254475.C1130791706.C3554254475))
        return (byte[]) null;
      int num = obj0.IndexOf(',');
      if (num < 0)
        return (byte[]) null;
      bool flag = obj0.Substring(5, num - 5).EndsWith(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bg(), C3554254475.C1130791706.C3554254475);
      string s = obj0.Substring(num + 1);
      if (flag)
        return Convert.FromBase64String(s);
      MemoryStream memoryStream = new MemoryStream();
      Encoding ascii = Encoding.ASCII;
      string[] strArray = s.Split('%');
      byte[] bytes1 = ascii.GetBytes(strArray[0]);
      memoryStream.Write(bytes1, 0, bytes1.Length);
      for (int index = 1; index < strArray.Length; ++index)
      {
        memoryStream.WriteByte(Convert.ToByte(strArray[index].Substring(0, 2), 16));
        byte[] bytes2 = ascii.GetBytes(strArray[index].Substring(2));
        memoryStream.Write(bytes2, 0, bytes2.Length);
      }
      byte[] array = memoryStream.ToArray();
      memoryStream.Close();
      return array;
    }

    internal static bool C3664761504([In] string obj0)
    {
      switch (obj0)
      {
        case "":
          return false;
        case null:
          Debug.Assert(false);
          return false;
        default:
          foreach (string str in C3554254475.C1130791706.C3554254475)
          {
            if (obj0.StartsWith(str, C3554254475.C1130791706.C3554254475))
              return true;
          }
          return false;
      }
    }

    public static string C3775001192([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return string.Empty;
      }
      while (true)
      {
        int num1 = obj0.IndexOf('{');
        if (num1 >= 0)
        {
          int num2 = obj0.IndexOf('}', num1);
          if (num2 >= 0)
            obj0 = obj0.Substring(0, num1) + obj0.Substring(num2 + 1);
          else
            break;
        }
        else
          break;
      }
      return obj0;
    }

    public static C3554254475.C3775001192 C3554254475([In] C3554254475.C3664761504 obj0)
    {
      foreach (C3554254475.C3775001192 c3775001192 in C3554254475.C1130791706.C1908338681())
      {
        if (c3775001192.C3554254475() == obj0)
          return c3775001192;
      }
      return (C3554254475.C3775001192) null;
    }

    public static C3554254475.C3775001192 C1130791706([In] string obj0)
    {
      foreach (C3554254475.C3775001192 c3775001192 in C3554254475.C1130791706.C1908338681())
      {
        if (c3775001192.C3904355907() == obj0)
          return c3775001192;
      }
      return (C3554254475.C3775001192) null;
    }

    public static char C2013832146([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return '@';
      }
      if (C3554254475.C1130791706.C3904355907 == null)
        C3554254475.C1130791706.C3904355907 = new string[5]
        {
          DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BH(),
          C3904355907.C30677878.C3554254475,
          C3904355907.C30677878.C3904355907,
          C3904355907.C30677878.C1255198513,
          C3904355907.C30677878.C4024072794
        };
      for (int index = 0; index < C3554254475.C1130791706.C3904355907.Length; ++index)
      {
        foreach (char ch in C3554254475.C1130791706.C3904355907[index])
        {
          if (obj0.IndexOf(ch) < 0)
            return ch;
        }
      }
      for (char ch = 'À'; ch < char.MaxValue; ++ch)
      {
        if (obj0.IndexOf(ch) < 0)
          return ch;
      }
      return char.MinValue;
    }

    public static char C3554254475([In] byte obj0)
    {
      if (obj0 < (byte) 32)
        return '.';
      if (obj0 < (byte) 127)
        return (char) obj0;
      if (obj0 < (byte) 160)
        return '.';
      return obj0 == (byte) 173 ? '-' : (char) obj0;
    }

    public static int C1908338681([In] string obj0, [In] string obj1)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return 0;
      }
      if (string.IsNullOrEmpty(obj1))
      {
        Debug.Assert(false);
        return 0;
      }
      int startIndex = 0;
      int num1 = 0;
      int num2;
      for (; startIndex < obj0.Length; startIndex = num2 + 1)
      {
        num2 = obj0.IndexOf(obj1, startIndex);
        if (num2 >= 0)
          ++num1;
        else
          break;
      }
      return num1;
    }

    internal static string C878818188([In] string obj0)
    {
      if (obj0 == null)
      {
        Debug.Assert(false);
        return (string) null;
      }
      return obj0.IndexOf(char.MinValue) < 0 ? obj0 : obj0.Replace(char.MinValue, ' ');
    }

    internal static string C252678980([In] string obj0)
    {
      if (obj0 != null)
        return obj0.Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bh(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BI()).Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bi(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BJ()).Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.Bj(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.BK());
      Debug.Assert(false);
      return string.Empty;
    }
  }
}
