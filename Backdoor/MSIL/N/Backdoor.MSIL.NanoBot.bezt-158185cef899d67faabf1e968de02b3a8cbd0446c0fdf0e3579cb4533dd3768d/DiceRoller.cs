// Decompiled with JetBrains decompiler
// Type: TexasHoldem.DiceRoller
// Assembly: EventComm, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 230F04B0-E761-4388-A1F3-FE85FC156328
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.NanoBot.bezt-158185cef899d67faabf1e968de02b3a8cbd0446c0fdf0e3579cb4533dd3768d.exe

using System;
using System.Collections.Generic;
using System.Linq;

namespace TexasHoldem
{
  public class DiceRoller
  {
    private const int MAX_DIE_FACE = 6;
    private const int MAX_ROLL_COUNT = 3;
    private const int MIN_DIE_FACE = 1;
    private const int NUM_DICE = 5;
    private List<int> dice;
    private bool hasSorted = false;
    private Random random;
    private int rollCount = 0;
    private List<int> sortedDice;
    private List<bool> willKeepDice;

    public DiceRoller()
    {
      this.random = new Random();
      this.InitializeCollectionFields();
    }

    public DiceRoller(Random random)
    {
      this.random = random;
      this.InitializeCollectionFields();
    }

    public List<int> Dice => this.dice;

    public int RollsRemaining => 3 - this.rollCount;

    public List<int> SortedDice
    {
      get
      {
        if (!this.hasSorted)
        {
          this.sortedDice = new List<int>((IEnumerable<int>) this.dice);
          this.sortedDice.Sort();
          this.hasSorted = true;
        }
        return this.sortedDice;
      }
    }

    public void KeepDie(int die, bool keep) => this.willKeepDice[die] = keep;

    public void RollDice()
    {
      if (this.RollsRemaining <= 0)
        return;
      for (int index = 0; index < this.dice.Count; ++index)
      {
        if (!this.willKeepDice[index])
        {
          this.dice[index] = this.random.Next(1, 7);
          this.hasSorted = false;
        }
      }
      ++this.rollCount;
    }

    public bool WillKeep(int die) => this.willKeepDice[die];

    private void InitializeCollectionFields()
    {
      this.dice = Enumerable.Repeat<int>(0, 5).ToList<int>();
      this.sortedDice = Enumerable.Repeat<int>(0, 5).ToList<int>();
      this.willKeepDice = Enumerable.Repeat<bool>(false, 5).ToList<bool>();
    }
  }
}
