// Decompiled with JetBrains decompiler
// Type: .
// Assembly: FUD Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CA57510E-1F7B-47BB-998D-F04D6C18C0A3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.IRCbot.bsa-c63f7b3292b3493d25c8dac953eb4faaef86b9c05ed9d1077709ee2f61120924.exe

using \u0002;
using \u0003;
using \u0004;
using Microsoft.Win32;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Permissions;
using System.Text;
using System.Threading;
using System.Web.Services.Protocols;
using System.Xml;

namespace \u0003
{
  internal abstract class \u0004
  {
    private static string \u0001 = \u0001.\u0004.\u0003(1075);
    internal static bool \u0001 = false;
    private IWebProxy \u0001;
    private char[] \u0001 = new char[0];
    private static \u0003.\u0004 \u0001 = (\u0003.\u0004) null;
    private Exception \u0001;
    private Hashtable \u0001;
    private Hashtable \u0002;
    private XmlTextWriter \u0001;
    private ArrayList \u0001 = new ArrayList();
    private ArrayList \u0002 = new ArrayList();
    private Hashtable \u0003 = new Hashtable();
    private ArrayList \u0003 = new ArrayList();
    private Hashtable \u0004 = new Hashtable();
    private EventHandler \u0001;
    private \u0006 \u0001;

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    public void \u0003([In] EventHandler obj0) => this.\u0001 = (EventHandler) \u0014\u0003.\u0005\u0003((Delegate) this.\u0001, (Delegate) obj0);

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    public void \u0003([In] \u0006 obj0) => this.\u0001 = (\u0006) \u0014\u0003.\u0005\u0003((Delegate) this.\u0001, (Delegate) obj0);

    protected abstract void \u0003([In] \u0006 obj0);

    protected abstract void \u0003([In] \u0004.\u0003 obj0);

    protected abstract void \u0003([In] \u0004.\u0002 obj0);

    [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)]
    public static void \u0003([In] \u0003.\u0004 obj0)
    {
      if (obj0 == null)
        return;
      \u0003.\u0004.\u0001 = obj0;
      \u001D\u0005.\u007E\u0016\u0003((object) \u0092\u0003.\u0014\u0003(), new UnhandledExceptionEventHandler(obj0.\u0003));
      \u0001\u0005.\u0094\u0006(new ThreadExceptionEventHandler(obj0.\u0003));
    }

    [SpecialName]
    public char[] \u0003()
    {
      string str;
      if (this.\u0001.Length == 0 && (str = \u007F\u0004.\u007E\u0082\u0002((object) \u0001.\u0004.\u0003(1053))) != null)
      {
        if (!\u0095\u0002.\u0015\u0002(str, \u0001.\u0004.\u0003(1066)))
        {
          if (\u0095\u0002.\u0015\u0002(str, \u0001.\u0004.\u0003(1053)))
            this.\u0001 = new char[58]
            {
              '\u0001',
              '\u0002',
              '\u0003',
              '\u0004',
              '\u0005',
              '\u0006',
              '\a',
              '\b',
              '\u000E',
              '\u000F',
              '\u0010',
              '\u0011',
              '\u0012',
              '\u0013',
              '\u0014',
              '\u0015',
              '\u0016',
              '\u0017',
              '\u0018',
              '\u0019',
              '\u001A',
              '\u001B',
              '\u001C',
              '\u001D',
              '\u001E',
              '\u001F',
              '\u007F',
              '\u0080',
              '\u0081',
              '\u0082',
              '\u0083',
              '\u0084',
              '\u0086',
              '\u0087',
              '\u0088',
              '\u0089',
              '\u008A',
              '\u008B',
              '\u008C',
              '\u008D',
              '\u008E',
              '\u008F',
              '\u0090',
              '\u0091',
              '\u0092',
              '\u0093',
              '\u0094',
              '\u0095',
              '\u0096',
              '\u0097',
              '\u0098',
              '\u0099',
              '\u009A',
              '\u009B',
              '\u009C',
              '\u009D',
              '\u009E',
              '\u009F'
            };
        }
        else
          this.\u0001 = new char[62]
          {
            'a',
            'b',
            'c',
            'd',
            'e',
            'f',
            'g',
            'h',
            'i',
            'j',
            'k',
            'l',
            'm',
            'n',
            'o',
            'p',
            'q',
            'r',
            's',
            't',
            'u',
            'v',
            'w',
            'x',
            'y',
            'z',
            'A',
            'B',
            'C',
            'D',
            'E',
            'F',
            'G',
            'H',
            'I',
            'J',
            'K',
            'L',
            'M',
            'N',
            'O',
            'P',
            'Q',
            'R',
            'S',
            'T',
            'U',
            'V',
            'W',
            'X',
            'Y',
            'Z',
            '0',
            '1',
            '2',
            '3',
            '4',
            '5',
            '6',
            '7',
            '8',
            '9'
          };
      }
      return this.\u0001;
    }

    public static void \u0003([In] Exception obj0, [In] object[] obj1)
    {
      try
      {
        if (obj0 != null && obj0 is SecurityException && \u0095\u0002.\u0015\u0002(\u0003.\u0004.\u0001, \u0001.\u0004.\u0003(1075)) && \u0003.\u0004.\u0001.\u0003((SecurityException) obj0))
          return;
        \u0003.\u0004.\u0001.\u0003(UnhandledException.\u0003(obj0, obj1), false);
      }
      catch
      {
        \u0012\u0003.\u0095\u0006();
      }
    }

    public static Exception \u0003([In] Exception obj0, [In] object[] obj1)
    {
      \u0003.\u0004.\u0004(obj0, obj1);
      return (Exception) new SoapException(\u007F\u0004.\u007E\u0096\u0002((object) obj0), SoapException.ServerFaultCode);
    }

    public static void \u0004([In] Exception obj0, [In] object[] obj1)
    {
      try
      {
        if (\u0003.\u0004.\u0001 == null)
        {
          foreach (Type type in \u0089\u0002.\u007E\u0006\u0005((object) \u001C\u0004.\u0013\u0005()))
          {
            if ((object) type != null && (object) \u0097\u0003.\u007E\u0001\u0004((object) type) != null)
            {
              // ISSUE: type reference
              if ((object) \u0097\u0003.\u007E\u0001\u0004((object) type) == (object) \u0080\u0003.\u009C\u0003(__typeref (\u0003.\u0004)))
              {
                try
                {
                  \u0003.\u0004.\u0001 = (\u0003.\u0004) \u009D\u0004.\u0007\u0003(type, true);
                  if (\u0003.\u0004.\u0001 != null)
                    break;
                }
                catch
                {
                }
              }
            }
          }
        }
        if (\u0003.\u0004.\u0001 == null)
          return;
        \u0003.\u0004.\u0001.\u0003(UnhandledException.\u0003(obj0, obj1), true);
      }
      catch
      {
      }
    }

    private void \u0003([In] object obj0, [In] ThreadExceptionEventArgs obj1)
    {
      try
      {
        if (\u009F\u0002.\u007E\u0096\u0008((object) obj1) is SecurityException && \u0095\u0002.\u0015\u0002(\u0003.\u0004.\u0001, \u0001.\u0004.\u0003(1075)) && this.\u0003(\u009F\u0002.\u007E\u0096\u0008((object) obj1) as SecurityException))
          return;
        this.\u0003(\u009F\u0002.\u007E\u0096\u0008((object) obj1), true);
      }
      catch
      {
      }
    }

    private void \u0003([In] object obj0, [In] UnhandledExceptionEventArgs obj1)
    {
      try
      {
        if (\u0096\u0004.\u007E\u001B\u0004((object) obj1) is SecurityException && \u0095\u0002.\u0015\u0002(\u0003.\u0004.\u0001, \u0001.\u0004.\u0003(1075)) && this.\u0003(\u0096\u0004.\u007E\u001B\u0004((object) obj1) as SecurityException) || !(\u0096\u0004.\u007E\u001B\u0004((object) obj1) is Exception))
          return;
        this.\u0003((Exception) \u0096\u0004.\u007E\u001B\u0004((object) obj1), !\u0090\u0005.\u007E\u001C\u0004((object) obj1));
      }
      catch
      {
      }
    }

    private string \u0003([In] object obj0)
    {
      try
      {
        if (obj0 == null)
          return string.Empty;
        if (obj0 is int num1)
          return num1.ToString(\u0001.\u0004.\u0003(1080));
        switch (obj0)
        {
          case long num2:
            return num2.ToString(\u0001.\u0004.\u0003(1080));
          case short num3:
            return num3.ToString(\u0001.\u0004.\u0003(1080));
          case uint num4:
            return num4.ToString(\u0001.\u0004.\u0003(1080));
          case ulong num5:
            return num5.ToString(\u0001.\u0004.\u0003(1080));
          case ushort num6:
            return num6.ToString(\u0001.\u0004.\u0003(1080));
          case byte num7:
            return num7.ToString(\u0001.\u0004.\u0003(1080));
          case sbyte num8:
            return num8.ToString(\u0001.\u0004.\u0003(1080));
          case IntPtr num9:
            return num9.ToInt64().ToString(\u0001.\u0004.\u0003(1080));
          case UIntPtr num10:
            return num10.ToUInt64().ToString(\u0001.\u0004.\u0003(1080));
        }
      }
      catch
      {
      }
      return string.Empty;
    }

    private string \u0003([In] string obj0) => \u0015\u0003.\u007E\u0080\u0002((object) obj0, \u0001.\u0004.\u0003(1085)) && \u0015\u0003.\u007E\u001D\u0002((object) obj0, \u0001.\u0004.\u0003(1106)) ? \u0001.\u0004.\u0003(1127) : obj0;

    private void \u0003([In] object obj0, [In] FieldInfo obj1)
    {
      string str1 = (object) obj1 == null ? (string) null : \u007F\u0004.\u007E\u0097\u0003((object) obj1);
      string str2 = (object) obj1 == null ? \u0001.\u0004.\u0003(1209) : \u0001.\u0004.\u0003(1200);
      if (obj0 == null)
      {
        \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, str2);
        if ((object) obj1 != null)
        {
          if (\u0090\u0005.\u007E\u0083\u0005((object) obj1))
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1218), \u0001.\u0004.\u0003(1075));
          Type type = \u0097\u0003.\u007E\u0080\u0005((object) obj1);
          if ((object) type != null && \u0090\u0005.\u007E\u0012\u0004((object) type))
          {
            this.\u0003(\u0097\u0003.\u007E\u0013\u0004((object) type));
            if (\u0090\u0005.\u007E\u000F\u0004((object) type))
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1227), \u0001.\u0004.\u0003(1075));
            if (\u0090\u0005.\u007E\u0010\u0004((object) type))
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1236), \u0001.\u0004.\u0003(1075));
            if (\u0090\u0005.\u007E\u000E\u0004((object) type))
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1249), \u0016\u0005.\u007E\u009F\u0003((object) type).ToString());
          }
          else
            this.\u0003(type);
        }
        if (str1 != null)
          this.\u0003(str1);
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1258), \u0001.\u0004.\u0003(1075));
        \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      }
      else
      {
        Type type = \u0097\u0003.\u007E\u0004\u0002(obj0);
        string str3 = (string) null;
        string str4 = (string) null;
        if (obj0 is string)
          str3 = \u0001.\u0004.\u0003(1267);
        if (str3 == null)
        {
          if (\u0090\u0005.\u007E\u0011\u0004((object) type) || obj0 is IntPtr || obj0 is UIntPtr)
          {
            str3 = \u007F\u0004.\u007E\u009D\u0003((object) type);
            if (obj0 is char ch)
            {
              int num = (int) ch;
              StringBuilder stringBuilder1 = new StringBuilder();
              if (num >= 32)
              {
                StringBuilder stringBuilder2 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, '\'');
                StringBuilder stringBuilder3 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, (char) obj0);
                StringBuilder stringBuilder4 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, \u0001.\u0004.\u0003(1288));
              }
              StringBuilder stringBuilder5 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, \u0001.\u0004.\u0003(1293));
              StringBuilder stringBuilder6 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, num.ToString(\u0001.\u0004.\u0003(1080)));
              StringBuilder stringBuilder7 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, ')');
              str4 = \u007F\u0004.\u007E\u0001\u0002((object) stringBuilder1);
            }
            if (obj0 is bool)
              str4 = \u007F\u0004.\u007E\u0081\u0002((object) \u007F\u0004.\u007E\u0001\u0002(obj0));
            if (str4 == null)
            {
              string str5 = string.Empty;
              try
              {
                str5 = this.\u0003(obj0);
              }
              catch
              {
              }
              if (\u0016\u0005.\u007E\u0019\u0002((object) str5) > 0)
              {
                StringBuilder stringBuilder8 = new StringBuilder();
                StringBuilder stringBuilder9 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder8, \u007F\u0004.\u007E\u0001\u0002(obj0));
                StringBuilder stringBuilder10 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder8, \u0001.\u0004.\u0003(1298));
                StringBuilder stringBuilder11 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder8, str5);
                StringBuilder stringBuilder12 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder8, ')');
                str4 = \u007F\u0004.\u007E\u0001\u0002((object) stringBuilder8);
              }
              else
                str4 = \u007F\u0004.\u007E\u0001\u0002(obj0);
            }
          }
          else if (\u0090\u0005.\u007E\u0007\u0004((object) type) && (object) \u0016\u0004.\u007E\u009A\u0003((object) type) != (object) \u0016\u0004.\u007E\u009A\u0003((object) \u0097\u0003.\u0004\u0002((object) this)))
            str3 = \u007F\u0004.\u007E\u009D\u0003((object) type);
        }
        if (str3 != null)
        {
          \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, str2);
          if ((object) obj1 != null && \u0090\u0005.\u007E\u0083\u0005((object) obj1))
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1218), \u0001.\u0004.\u0003(1075));
          this.\u0003(type);
          if (str1 != null)
            this.\u0003(str1);
          if (\u0090\u0005.\u007E\u0008\u0004((object) type))
            str4 = \u007F\u0004.\u007E\u0001\u0002(obj0);
          if (obj0 is Guid)
            str4 = \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(732), \u007F\u0004.\u007E\u0001\u0002(obj0), \u0001.\u0004.\u0003(1307));
          if (str4 == null)
            str4 = \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(1312), \u007F\u0004.\u007E\u0001\u0002(obj0), \u0001.\u0004.\u0003(1312));
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1317), this.\u0003(str4));
          \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
        }
        else
        {
          \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, str2);
          if ((object) obj1 != null && \u0090\u0005.\u007E\u0083\u0005((object) obj1))
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1218), \u0001.\u0004.\u0003(1075));
          int num = -1;
          for (int index = 0; index < \u0016\u0005.\u007E\u008B\u0004((object) this.\u0001); ++index)
          {
            try
            {
              if (\u009D\u0002.\u007E\u0002\u0002(\u000F\u0005.\u007E\u008C\u0004((object) this.\u0001, index), obj0))
              {
                num = index;
                break;
              }
            }
            catch
            {
            }
          }
          if (num == -1)
            num = \u0005\u0004.\u007E\u008D\u0004((object) this.\u0001, obj0);
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1326), num.ToString());
          if (str1 != null)
            this.\u0003(str1);
          \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
        }
      }
    }

    private void \u0003([In] string obj0)
    {
      int num = this.\u0003(obj0);
      if (num != -1)
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1331), num.ToString());
      else
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1340), obj0);
    }

    private \u0003.\u0004.\u0003 \u0003([In] Type obj0)
    {
      \u0003.\u0004.\u0003 obj = \u0003.\u0004.\u0003.\u0003();
      if ((object) obj0 != null && (object) \u008B\u0003.\u007E\u0005\u0005((object) \u0007\u0004.\u007E\u009B\u0003((object) obj0), \u0001.\u0004.\u0003(1349)) != null)
      {
        obj.\u0001 = ((\u0016\u0005.\u007E\u0098\u0003((object) obj0) & 16777215) - 1).ToString();
        Assembly assembly = \u0007\u0004.\u007E\u009B\u0003((object) obj0);
        obj.\u0001 = new \u0003.\u0004.\u0002(\u0088\u0002.\u007E\u001A\u0005((object) \u0016\u0004.\u007E\u0008\u0005((object) assembly)).ToString(\u0001.\u0004.\u0003(1410)), \u007F\u0004.\u007E\u0004\u0005((object) assembly));
      }
      return obj;
    }

    private int \u0003([In] \u0003.\u0004.\u0003 obj0)
    {
      string str = \u007F\u0004.\u007E\u0082\u0002((object) obj0.\u0001.\u0001);
      if (\u009D\u0002.\u007E\u0094\u0004((object) this.\u0004, (object) str))
        return (int) \u008E\u0003.\u007E\u0095\u0004((object) this.\u0004, (object) str);
      int num = \u0005\u0004.\u007E\u008D\u0004((object) this.\u0003, (object) obj0.\u0001);
      \u008C\u0004.\u007E\u0092\u0004((object) this.\u0004, (object) str, (object) num);
      return num;
    }

    private void \u0003([In] Type obj0)
    {
      if ((object) obj0 == null)
        return;
      try
      {
        \u0003.\u0004.\u0003 obj = this.\u0003(obj0);
        if (!obj.\u0003())
        {
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1415), obj.\u0001);
          int num = this.\u0003(obj);
          if (num <= 0)
            return;
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1428), num.ToString());
        }
        else
        {
          string str1 = \u007F\u0004.\u007E\u009D\u0003((object) obj0);
          int num1;
          if (\u009D\u0002.\u007E\u0094\u0004((object) this.\u0003, (object) str1))
          {
            num1 = (int) \u008E\u0003.\u007E\u0095\u0004((object) this.\u0003, (object) str1);
          }
          else
          {
            StringBuilder stringBuilder1 = new StringBuilder();
            string str2 = \u007F\u0004.\u007E\u0019\u0005((object) \u0006\u0005.\u007E\u0003\u0005((object) \u0007\u0004.\u007E\u009B\u0003((object) obj0)));
            if (\u0016\u0005.\u007E\u0019\u0002((object) str2) > 0 && \u0095\u0002.\u0016\u0002(str2, \u0001.\u0004.\u0003(1441)))
            {
              StringBuilder stringBuilder2 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, '[');
              StringBuilder stringBuilder3 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, str2);
              StringBuilder stringBuilder4 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, ']');
            }
            string str3 = \u007F\u0004.\u007E\u009E\u0003((object) obj0);
            if (\u0016\u0005.\u007E\u0019\u0002((object) str3) > 0)
            {
              StringBuilder stringBuilder5 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, str3);
              StringBuilder stringBuilder6 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, '.');
            }
            if (\u0090\u0005.\u007E\u0012\u0004((object) obj0))
              obj0 = \u0097\u0003.\u007E\u0013\u0004((object) obj0);
            int num2 = \u0002\u0003.\u007E\u007F\u0002((object) str1, \u0001.\u0004.\u0003(1454));
            if (num2 > 0)
            {
              string str4 = \u0084\u0002.\u007E\u0084\u0002((object) \u0080\u0004.\u007E\u001C\u0002((object) str1, \u0016\u0005.\u007E\u0019\u0002((object) str3) + 1, num2 - \u0016\u0005.\u007E\u0019\u0002((object) str3)), \u0001.\u0004.\u0003(1454), \u0001.\u0004.\u0003(1459));
              StringBuilder stringBuilder7 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, str4);
            }
            StringBuilder stringBuilder8 = \u0004\u0004.\u007E\u0090\u0002((object) stringBuilder1, \u007F\u0004.\u007E\u0097\u0003((object) obj0));
            num1 = \u0005\u0004.\u007E\u008D\u0004((object) this.\u0002, (object) \u007F\u0004.\u007E\u0001\u0002((object) stringBuilder1));
            \u008C\u0004.\u007E\u0092\u0004((object) this.\u0003, (object) str1, (object) num1);
          }
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1464), num1.ToString());
        }
      }
      catch
      {
      }
    }

    private int \u0003([In] string obj0)
    {
      try
      {
        bool flag1 = this.\u0003()[0] == '\u0001';
        if (obj0 == null || \u0016\u0005.\u007E\u0019\u0002((object) obj0) == 0 || flag1 && \u0016\u0005.\u007E\u0019\u0002((object) obj0) > 4 || !flag1 && \u0088\u0004.\u007E\u0017\u0002((object) obj0, 0) != '#')
          return -1;
        int num = 0;
        for (int index1 = \u0016\u0005.\u007E\u0019\u0002((object) obj0) - 1; index1 >= 0 && (flag1 || index1 != 0); --index1)
        {
          char ch = \u0088\u0004.\u007E\u0017\u0002((object) obj0, index1);
          bool flag2 = false;
          for (int index2 = 0; index2 < this.\u0003().Length; ++index2)
          {
            if ((int) this.\u0003()[index2] == (int) ch)
            {
              num = num * this.\u0003().Length + index2;
              flag2 = true;
              break;
            }
          }
          if (!flag2)
            return -1;
        }
        return num;
      }
      catch
      {
        return -1;
      }
    }

    protected virtual Guid \u0003() => Guid.Empty;

    private string \u0003()
    {
      try
      {
        return \u0083\u0003.\u0092\u0006();
      }
      catch
      {
        return \u0001.\u0004.\u0003(1477);
      }
    }

    private Assembly[] \u0003()
    {
      try
      {
        return \u0014\u0004.\u007E\u0015\u0003((object) \u0092\u0003.\u0014\u0003());
      }
      catch
      {
        return new Assembly[1]{ this.\u0003() };
      }
    }

    private Assembly \u0003()
    {
      try
      {
        return \u001C\u0004.\u0013\u0005();
      }
      catch
      {
        return (Assembly) null;
      }
    }

    private byte[] \u0003([In] string obj0)
    {
      MemoryStream w = new MemoryStream();
      this.\u0001 = new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
      \u009E\u0003.\u007E\u0083\u0008((object) this.\u0001);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1482));
      \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1515), \u007F\u0004.\u007E\u0082\u0002((object) \u0001.\u0004.\u0003(1532)));
      \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1585), \u001A\u0005.\u009F\u0002().ToString(\u0001.\u0004.\u0003(1598)));
      \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1603), this.\u0003());
      Guid guid = this.\u0003();
      if (\u0092\u0004.\u0087\u0003(guid, Guid.Empty))
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1612), guid.ToString(\u0001.\u0004.\u0003(1410)));
      if (\u0016\u0005.\u007E\u0019\u0002((object) obj0) > 0)
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1621), obj0);
      if (\u0016\u0005.\u007E\u008B\u0004((object) this.\u0003) > 0)
        \u009E\u0003.\u007E\u008E\u0004((object) this.\u0003);
      int num1 = \u0005\u0004.\u007E\u008D\u0004((object) this.\u0003, (object) new \u0003.\u0004.\u0002(\u0001.\u0004.\u0003(1532), string.Empty));
      if (\u0016\u0005.\u007E\u0098\u0004((object) this.\u0004) > 0)
        \u009E\u0003.\u007E\u0093\u0004((object) this.\u0004);
      \u008C\u0004.\u007E\u0092\u0004((object) this.\u0004, (object) \u0001.\u0004.\u0003(1532), (object) 0);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1634));
      Assembly assembly1 = this.\u0003();
      foreach (Assembly assembly2 in this.\u0003())
      {
        if ((object) assembly2 != null)
        {
          \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1428));
          try
          {
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1340), \u007F\u0004.\u007E\u0004\u0005((object) assembly2));
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1651), \u007F\u0004.\u007E\u0002\u0005((object) assembly2));
            if ((object) assembly2 == (object) assembly1)
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1664), \u0001.\u0004.\u0003(1075));
          }
          catch
          {
          }
          \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
        }
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1673));
      if (this.\u0001 != null && \u0016\u0005.\u007E\u0098\u0004((object) this.\u0001) > 0)
      {
        IEnumerator enumerator = \u008A\u0003.\u007E\u0005\u0002((object) \u001A\u0003.\u007E\u0096\u0004((object) this.\u0001));
        try
        {
          while (\u0090\u0005.\u007E\u0011\u0002((object) enumerator))
          {
            string str1 = (string) \u0096\u0004.\u007E\u0012\u0002((object) enumerator);
            \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1698));
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1340), str1);
            string str2 = (string) \u008E\u0003.\u007E\u0095\u0004((object) this.\u0001, (object) str1);
            if (str2 == null)
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1258), \u0001.\u0004.\u0003(1075));
            else
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1317), \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(1312), str2, \u0001.\u0004.\u0003(1312)));
            \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
          }
        }
        finally
        {
          if (enumerator is IDisposable disposable)
            \u009E\u0003.\u007E\u0013\u0002((object) disposable);
        }
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      if (this.\u0002 != null && \u0016\u0005.\u007E\u0098\u0004((object) this.\u0002) > 0)
      {
        \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1719));
        IEnumerator enumerator = \u008A\u0003.\u007E\u0005\u0002((object) \u001A\u0003.\u007E\u0096\u0004((object) this.\u0002));
        try
        {
          while (\u0090\u0005.\u007E\u0011\u0002((object) enumerator))
          {
            string str = (string) \u0096\u0004.\u007E\u0012\u0002((object) enumerator);
            \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1740));
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1757), str);
            \u0003.\u0004.\u0001 obj = (\u0003.\u0004.\u0001) \u008E\u0003.\u007E\u0095\u0004((object) this.\u0002, (object) str);
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1762), obj.\u0001);
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1775), obj.\u0001.ToString());
            if (\u0016\u0005.\u007E\u0019\u0002((object) obj.\u0003) > 0)
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1784), obj.\u0003);
            else
              \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1793), obj.\u0002);
            \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
          }
        }
        finally
        {
          if (enumerator is IDisposable disposable)
            \u009E\u0003.\u007E\u0013\u0002((object) disposable);
        }
        \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      }
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1802));
      try
      {
        \u0011\u0004.\u007E\u008A\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1827), \u007F\u0004.\u007E\u0001\u0002((object) \u001B\u0002.\u007E\u0096\u0003((object) \u0084\u0004.\u0082\u0003())));
        \u0011\u0004.\u007E\u008A\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1840), \u007F\u0004.\u007E\u0001\u0002((object) \u0015\u0004.\u007E\u0095\u0003((object) \u0084\u0004.\u0082\u0003())));
        \u0011\u0004.\u007E\u008A\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1857), \u0005.\u0001.\u0003());
      }
      catch
      {
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      ArrayList arrayList = new ArrayList();
      for (Exception exception = this.\u0001; exception != null; exception = \u009F\u0002.\u007E\u0097\u0002((object) exception))
      {
        Type type = \u0097\u0003.\u007E\u009A\u0002((object) exception);
        if (\u0095\u0002.\u0015\u0002(\u007F\u0004.\u007E\u0097\u0003((object) type), \u0001.\u0004.\u0003(1874)) && \u0095\u0002.\u0015\u0002(\u007F\u0004.\u007E\u009E\u0003((object) type), \u0001.\u0004.\u0003(1899)))
        {
          int num2 = \u0005\u0004.\u007E\u008D\u0004((object) arrayList, (object) exception);
        }
        else
          \u008D\u0002.\u007E\u0090\u0004((object) arrayList, 0, (object) exception);
      }
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1944));
      int num3 = \u0016\u0005.\u007E\u008B\u0004((object) arrayList);
      int num4 = 0;
      IEnumerator enumerator1 = \u008A\u0003.\u007E\u008F\u0004((object) arrayList);
      try
      {
        while (\u0090\u0005.\u007E\u0011\u0002((object) enumerator1))
        {
          Exception exception = (Exception) \u0096\u0004.\u007E\u0012\u0002((object) enumerator1);
          ++num4;
          if (num4 > 100 && num4 == num3 - 100)
          {
            \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1961));
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1982), num3.ToString());
            \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
          }
          else if (num4 <= 100 || num4 > num3 - 100)
          {
            Type type = \u0097\u0003.\u007E\u009A\u0002((object) exception);
            if (\u0095\u0002.\u0015\u0002(\u007F\u0004.\u007E\u0097\u0003((object) type), \u0001.\u0004.\u0003(1874)) && \u0095\u0002.\u0015\u0002(\u007F\u0004.\u007E\u009E\u0003((object) type), \u0001.\u0004.\u0003(1899)))
            {
              int num5 = 0;
              int num6 = -1;
              object[] objArray = (object[]) null;
              \u0003.\u0004.\u0003 obj1 = \u0003.\u0004.\u0003.\u0003();
              bool flag = true;
              try
              {
                num5 = (int) \u008E\u0003.\u007E\u0081\u0005((object) \u0018\u0005.\u007E\u0004\u0004((object) type, \u0001.\u0004.\u0003(2007)), (object) exception);
                num6 = (int) \u008E\u0003.\u007E\u0081\u0005((object) \u0018\u0005.\u007E\u0004\u0004((object) type, \u0001.\u0004.\u0003(2020)), (object) exception);
                objArray = (object[]) \u008E\u0003.\u007E\u0081\u0005((object) \u0018\u0005.\u007E\u0004\u0004((object) type, \u0001.\u0004.\u0003(2033)), (object) exception);
                obj1 = this.\u0003(type);
              }
              catch
              {
                flag = false;
              }
              if (flag && !obj1.\u0003())
              {
                \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2046));
                \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2007), num5.ToString());
                int num7 = this.\u0003(obj1);
                if (num7 > 0)
                  \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1428), num7.ToString());
                if (num6 != -1)
                  \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2020), num6.ToString());
                foreach (object obj2 in objArray)
                {
                  try
                  {
                    this.\u0003(obj2, (FieldInfo) null);
                  }
                  catch
                  {
                  }
                }
                \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
              }
            }
            else
            {
              \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2063));
              try
              {
                this.\u0003(\u0097\u0003.\u007E\u009A\u0002((object) exception));
                string str3 = \u0001.\u0004.\u0003(1477);
                try
                {
                  str3 = \u007F\u0004.\u007E\u0096\u0002((object) exception);
                }
                catch
                {
                }
                \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2076), str3);
                string str4 = \u007F\u0004.\u007E\u0083\u0002((object) \u007F\u0004.\u007E\u0098\u0002((object) exception));
                \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2089), str4);
                int num8 = \u0090\u0004.\u007E\u001E\u0002((object) str4, ' ');
                string str5 = \u0086\u0002.\u007E\u001B\u0002((object) str4, num8 + 1);
                int num9 = \u0002\u0003.\u007E\u001F\u0002((object) str5, \u0001.\u0004.\u0003(2118));
                if (num9 != -1)
                  str5 = \u0080\u0004.\u007E\u001C\u0002((object) str5, 0, num9);
                \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2123), str5);
              }
              catch
              {
              }
              \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
            }
          }
        }
      }
      finally
      {
        if (enumerator1 is IDisposable disposable)
          \u009E\u0003.\u007E\u0013\u0002((object) disposable);
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2033));
      int num10 = \u0016\u0005.\u007E\u008B\u0004((object) this.\u0001);
      for (int index1 = 0; index1 < \u0016\u0005.\u007E\u008B\u0004((object) this.\u0001); ++index1)
      {
        object obj3 = \u000F\u0005.\u007E\u008C\u0004((object) this.\u0001, index1);
        Type type = \u0097\u0003.\u007E\u0004\u0002(obj3);
        \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2132));
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1326), index1.ToString());
        string str = (string) null;
        try
        {
          str = \u007F\u0004.\u007E\u0001\u0002(obj3);
          str = !\u0095\u0002.\u0015\u0002(str, \u007F\u0004.\u007E\u009D\u0003((object) type)) ? (!\u0090\u0005.\u007E\u0008\u0004((object) type) ? (!(obj3 is Guid) ? \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(1312), str, \u0001.\u0004.\u0003(1312)) : \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(732), str, \u0001.\u0004.\u0003(1307))) : \u001C\u0002.\u0014\u0002(type, obj3, \u0001.\u0004.\u0003(2145))) : (string) null;
        }
        catch
        {
        }
        if (str != null)
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1317), this.\u0003(str));
        if (\u0090\u0005.\u007E\u0012\u0004((object) type))
        {
          this.\u0003(\u0097\u0003.\u007E\u0013\u0004((object) type));
          if (\u0090\u0005.\u007E\u000F\u0004((object) type))
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1227), \u0001.\u0004.\u0003(1075));
          if (\u0090\u0005.\u007E\u0010\u0004((object) type))
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1236), \u0001.\u0004.\u0003(1075));
          if (\u0090\u0005.\u007E\u000E\u0004((object) type))
          {
            Array array = (Array) obj3;
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1249), \u0016\u0005.\u007E\u0010\u0002((object) array).ToString());
            StringBuilder stringBuilder1 = new StringBuilder();
            for (int index2 = 0; index2 < \u0016\u0005.\u007E\u0010\u0002((object) array); ++index2)
            {
              if (index2 > 0)
              {
                StringBuilder stringBuilder2 = \u0008\u0005.\u007E\u0091\u0002((object) stringBuilder1, ',');
              }
              StringBuilder stringBuilder3 = \u0081\u0003.\u007E\u0092\u0002((object) stringBuilder1, \u0089\u0005.\u007E\u000F\u0002((object) array, index2));
            }
            \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1775), \u007F\u0004.\u007E\u0001\u0002((object) stringBuilder1));
            if (\u0016\u0005.\u007E\u0010\u0002((object) array) == 1)
            {
              int num11 = \u0016\u0005.\u007E\u000E\u0002((object) array);
              for (int index3 = 0; index3 < num11; ++index3)
              {
                if (index3 == 10)
                {
                  if (num11 > 16)
                    index3 = num11 - 5;
                }
                try
                {
                  this.\u0003(\u000F\u0005.\u007E\u0008\u0002((object) array, index3), (FieldInfo) null);
                }
                catch
                {
                }
              }
            }
          }
        }
        else
        {
          this.\u0003(type);
          if (index1 < num10)
          {
            if (obj3 is IEnumerable)
            {
              \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2150));
              try
              {
                int num12 = 0;
                IEnumerator enumerator2 = \u008A\u0003.\u007E\u0005\u0002((object) (IEnumerable) obj3);
                try
                {
                  while (\u0090\u0005.\u007E\u0011\u0002((object) enumerator2))
                  {
                    object obj4 = \u0096\u0004.\u007E\u0012\u0002((object) enumerator2);
                    if (num12 > 20)
                    {
                      \u0011\u0004.\u007E\u008A\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2167), string.Empty);
                      break;
                    }
                    this.\u0003(obj4, (FieldInfo) null);
                    ++num12;
                  }
                }
                finally
                {
                  if (enumerator2 is IDisposable disposable)
                    \u009E\u0003.\u007E\u0013\u0002((object) disposable);
                }
              }
              catch
              {
              }
              \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
            }
            bool flag = true;
            while ((object) type != null)
            {
              if (!flag)
              {
                \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2176));
                this.\u0003(type);
                \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
              }
              FieldInfo[] fieldInfoArray = \u001C\u0005.\u007E\u0005\u0004((object) type, BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic);
              if (fieldInfoArray.Length > 0)
              {
                for (int index4 = 0; index4 < fieldInfoArray.Length; ++index4)
                {
                  try
                  {
                    if (!\u0090\u0005.\u007E\u0086\u0005((object) fieldInfoArray[index4]))
                    {
                      if (\u0090\u0005.\u007E\u0083\u0005((object) fieldInfoArray[index4]))
                      {
                        if (\u0090\u0005.\u007E\u0084\u0005((object) fieldInfoArray[index4]))
                          continue;
                      }
                      this.\u0003(\u008E\u0003.\u007E\u0081\u0005((object) fieldInfoArray[index4], obj3), fieldInfoArray[index4]);
                    }
                  }
                  catch
                  {
                  }
                }
              }
              type = \u0097\u0003.\u007E\u0001\u0004((object) type);
              flag = false;
              if (this.\u0003(type).\u0003())
                break;
            }
          }
        }
        \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2193));
      \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2206), \u0016\u0005.\u007E\u008B\u0004((object) this.\u0002).ToString());
      for (int index = 0; index < \u0016\u0005.\u007E\u008B\u0004((object) this.\u0002); ++index)
      {
        string empty = string.Empty;
        string str;
        try
        {
          str = \u007F\u0004.\u007E\u0001\u0002(\u000F\u0005.\u007E\u008C\u0004((object) this.\u0002, index));
        }
        catch (Exception ex)
        {
          str = \u0095\u0004.\u0088\u0002((object) '"', (object) \u007F\u0004.\u007E\u0096\u0002((object) ex), (object) '"');
        }
        \u0011\u0004.\u007E\u008A\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1464), str);
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2215));
      \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2206), \u0016\u0005.\u007E\u008B\u0004((object) this.\u0003).ToString());
      for (int index = 0; index < \u0016\u0005.\u007E\u008B\u0004((object) this.\u0003); ++index)
      {
        \u0096\u0005.\u007E\u0086\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1515));
        \u0003.\u0004.\u0002 obj = (\u0003.\u0004.\u0002) \u000F\u0005.\u007E\u008C\u0004((object) this.\u0003, index);
        \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(1326), obj.\u0001);
        if (\u0016\u0005.\u007E\u0019\u0002((object) obj.\u0002) > 0)
          \u0011\u0004.\u007E\u0088\u0008((object) this.\u0001, \u0001.\u0004.\u0003(2232), obj.\u0002);
        \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      }
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u009E\u0003.\u007E\u0087\u0008((object) this.\u0001);
      \u009E\u0003.\u007E\u0084\u0008((object) this.\u0001);
      \u009E\u0003.\u007E\u0089\u0008((object) this.\u0001);
      \u009E\u0003.\u007E\u009E\u0005((object) w);
      return \u0082\u0002.\u007E\u0011\u0006((object) w);
    }

    internal bool \u0003([In] string obj0)
    {
      try
      {
        byte[] numArray1 = this.\u0003(\u009E\u0002.\u0088\u0003().ToString(\u0001.\u0004.\u0003(1410)));
        FileStream fileStream = \u0005\u0005.\u000E\u0006(obj0);
        byte[] numArray2 = \u0003.\u0003.\u0003(\u0002.\u0004.\u0004(numArray1), \u0001.\u0004.\u0003(2245));
        byte[] numArray3 = \u0002\u0005.\u007E\u008D\u0005((object) \u001F\u0003.\u008C\u0005(), \u0001.\u0004.\u0003(1532));
        \u008B\u0005.\u007E\u0003\u0006((object) fileStream, numArray3, 0, numArray3.Length);
        \u008B\u0005.\u007E\u0003\u0006((object) fileStream, numArray2, 0, numArray2.Length);
        \u009E\u0003.\u007E\u009D\u0005((object) fileStream);
        return true;
      }
      catch (ThreadAbortException ex)
      {
        return false;
      }
      catch (Exception ex)
      {
        return false;
      }
    }

    internal void \u0003()
    {
      try
      {
        string str1 = \u0083\u0003.\u0013\u0006();
        this.\u0003(str1);
        string str2 = this.\u0004(\u0001.\u0004.\u0003(1603));
        if (\u0016\u0005.\u007E\u0019\u0002((object) str2) > 0 && !\u0015\u0003.\u007E\u001D\u0002((object) str2, \u0001.\u0004.\u0003(2571)))
          str2 = \u009A\u0002.\u0089\u0002(str2, \u0001.\u0004.\u0003(2571));
        Process process = \u0003\u0004.\u009F\u0008(\u009A\u0002.\u0089\u0002(str2, \u0001.\u0004.\u0003(2576)), \u001E\u0005.\u008A\u0002(\u0001.\u0004.\u0003(2605), str1, \u0001.\u0004.\u0003(1312)));
        if (this.\u0001 == null)
          return;
        \u007F\u0003.\u007E\u0084\u0003((object) this.\u0001, (object) this, EventArgs.Empty);
      }
      catch (ThreadAbortException ex)
      {
      }
      catch (Exception ex)
      {
        this.\u0003(new \u0004.\u0003(ex));
      }
    }

    internal bool \u0003()
    {
      try
      {
        if (this.\u0001 != null)
          goto label_35;
label_1:
        byte[] numArray1;
        try
        {
          numArray1 = this.\u0003(string.Empty);
        }
        catch (Exception ex)
        {
          int num = -1;
          try
          {
            StackTrace stackTrace = new StackTrace(ex);
            if (\u0016\u0005.\u007E\u009D\u0004((object) stackTrace) > 0)
            {
              StackFrame stackFrame = \u009D\u0003.\u007E\u009E\u0004((object) stackTrace, \u0016\u0005.\u007E\u009D\u0004((object) stackTrace) - 1);
              num = \u0016\u0005.\u007E\u0001\u0005((object) stackFrame);
            }
          }
          catch
          {
          }
          if (this.\u0001 != null)
            this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0001, \u0084\u0003.\u0087\u0002(\u0001.\u0004.\u0003(2634), (object) \u007F\u0004.\u007E\u0096\u0002((object) ex), (object) num)));
          return false;
        }
        byte[] numArray2 = \u0002.\u0004.\u0004(numArray1);
        if (numArray2 == null)
        {
          if (this.\u0001 != null)
            this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0001, \u0002.\u0004.\u0001));
          return false;
        }
        byte[] numArray3 = \u0003.\u0003.\u0003(numArray2, \u0001.\u0004.\u0003(2245));
        if (numArray3 == null)
        {
          if (this.\u0001 != null)
            this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0001, \u0003.\u0003.\u0001));
          return false;
        }
        if (this.\u0001 != null)
          this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0002));
        \u0004.\u0004 obj = new \u0004.\u0004(\u0001.\u0004.\u0003(2667));
        if (this.\u0001 != null)
          obj.\u0003(this.\u0001);
        string str1 = obj.\u0003();
        if (\u0095\u0002.\u0015\u0002(str1, \u0001.\u0004.\u0003(2720)))
        {
          if (this.\u0001 != null)
            this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0003));
          byte[] numArray4 = \u0002\u0005.\u007E\u008D\u0005((object) \u001F\u0003.\u008C\u0005(), \u0001.\u0004.\u0003(1532));
          byte[] numArray5 = new byte[numArray4.Length + numArray3.Length];
          \u007F\u0002.\u0006\u0002((Array) numArray4, (Array) numArray5, numArray4.Length);
          \u0091\u0003.\u0007\u0002((Array) numArray3, 0, (Array) numArray5, numArray4.Length, numArray3.Length);
          string str2 = obj.\u0003(numArray5);
          if (\u0015\u0003.\u007E\u0080\u0002((object) str2, \u0001.\u0004.\u0003(2725)))
          {
            if (this.\u0001 != null)
              this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0003, str2));
            return false;
          }
          if (this.\u0001 != null)
          {
            \u0004.\u0001 e = new \u0004.\u0001(\u0006.\u0004);
            e.\u0003(str2);
            this.\u0001((object) this, e);
          }
          return true;
        }
        string str3 = str1;
        if (this.\u0001 != null)
          this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0002, str3));
        return false;
label_35:
        this.\u0001((object) this, new \u0004.\u0001(\u0006.\u0001));
        goto label_1;
      }
      catch (ThreadAbortException ex)
      {
        return false;
      }
      catch (Exception ex)
      {
        this.\u0003(new \u0004.\u0003(ex));
        return false;
      }
    }

    private string \u0004([In] string obj0)
    {
      try
      {
        RegistryKey registryKey = \u0093\u0002.\u007E\u0094\u0005((object) Registry.LocalMachine, \u0001.\u0004.\u0003(2730)) ?? \u0093\u0002.\u007E\u0094\u0005((object) Registry.LocalMachine, \u0001.\u0004.\u0003(2763));
        if (registryKey == null)
          return string.Empty;
        string str = (string) \u009C\u0003.\u007E\u0095\u0005((object) registryKey, obj0, (object) string.Empty);
        \u009E\u0003.\u007E\u0093\u0005((object) registryKey);
        return str;
      }
      catch
      {
        return string.Empty;
      }
    }

    internal bool \u0003([In] SecurityException obj0)
    {
      \u0004.\u0002 obj = new \u0004.\u0002(obj0);
      this.\u0003(obj);
      if (obj.\u0005())
        return false;
      if (!obj.\u0004())
        \u0012\u0003.\u0095\u0006();
      return true;
    }

    internal string \u0004()
    {
      string str1 = Guid.Empty.ToString(\u0001.\u0004.\u0003(1410));
      try
      {
        string str2 = this.\u0004(\u0001.\u0004.\u0003(1603));
        if (\u0016\u0005.\u007E\u0019\u0002((object) str2) > 0 && !\u0015\u0003.\u007E\u001D\u0002((object) str2, \u0001.\u0004.\u0003(2571)))
          str2 = \u009A\u0002.\u0089\u0002(str2, \u0001.\u0004.\u0003(2571));
        string url = \u009A\u0002.\u0089\u0002(str2, \u0001.\u0004.\u0003(2812));
        if (\u0007\u0005.\u0008\u0006(url))
        {
          XmlTextReader xmlTextReader = new XmlTextReader(url);
          if (\u0090\u0005.\u007E\u008C\u0008((object) xmlTextReader))
            str1 = \u0018\u0003.\u007E\u008B\u0008((object) xmlTextReader, \u0001.\u0004.\u0003(2849));
          \u009E\u0003.\u007E\u008D\u0008((object) xmlTextReader);
        }
      }
      catch
      {
      }
      return str1;
    }

    internal void \u0003([In] Exception obj0, [In] bool obj1)
    {
      if (obj0 == null || obj0 is ThreadAbortException)
        return;
      \u0003.\u0004.\u0001 = true;
      bool flag = true;
      try
      {
        this.\u0001 = obj0;
        this.\u0001 = (Hashtable) null;
        this.\u0002 = (Hashtable) null;
        \u0006 obj2 = new \u0006(this, obj0);
        if (\u0095\u0002.\u0015\u0002(\u007F\u0004.\u007E\u0081\u0002((object) \u0001.\u0004.\u0003(2667)), \u007F\u0004.\u007E\u0081\u0002((object) this.\u0004())))
          obj2.\u0003();
        \u0095\u0002 obj3 = \u0095\u0002.\u0015\u0002;
        string str1 = \u007F\u0004.\u007E\u0081\u0002((object) \u0001.\u0004.\u0003(2667));
        Guid empty = Guid.Empty;
        string str2 = \u007F\u0004.\u007E\u0081\u0002((object) empty.ToString(\u0001.\u0004.\u0003(1410)));
        if (obj3(str1, str2))
          obj2.\u0004();
        if (!obj1)
          obj2.\u0005();
        this.\u0003(obj2);
        flag = !obj2.\u0006();
      }
      catch (ThreadAbortException ex)
      {
      }
      catch (Exception ex)
      {
        this.\u0003(new \u0004.\u0003(ex));
      }
      this.\u0001 = (Exception) null;
      this.\u0001 = (Hashtable) null;
      this.\u0002 = (Hashtable) null;
      \u0003.\u0004.\u0001 = false;
      if (!flag)
        return;
      foreach (Assembly assembly in \u0014\u0004.\u007E\u0015\u0003((object) \u0092\u0003.\u0014\u0003()))
      {
        try
        {
          string str = \u007F\u0004.\u007E\u0004\u0005((object) assembly);
          if (\u0015\u0003.\u007E\u001D\u0002((object) str, \u0001.\u0004.\u0003(2862)))
          {
            if (\u0015\u0003.\u007E\u0080\u0002((object) str, \u0001.\u0004.\u0003(2887)))
            {
              object obj4 = \u007F\u0005.\u007E\u001E\u0005((object) \u0091\u0002.\u007E\u0087\u0005((object) \u0098\u0005.\u007E\u0006\u0004((object) \u008B\u0003.\u007E\u0005\u0005((object) assembly, \u0001.\u0004.\u0003(2920)), \u0001.\u0004.\u0003(2957))), (object) null, (object[]) null);
              object obj5 = \u007F\u0005.\u007E\u001E\u0005((object) \u001F\u0004.\u007E\u0002\u0004((object) \u0097\u0003.\u007E\u0004\u0002(obj4), \u0001.\u0004.\u0003(2970), new Type[0]), obj4, (object[]) null);
            }
          }
        }
        catch
        {
        }
      }
      \u0012\u0003.\u0095\u0006();
      try
      {
        \u008E\u0005.\u0081\u0003(0);
      }
      catch
      {
      }
    }

    private struct \u0001
    {
      public string \u0001;
      public string \u0002;
      public string \u0003;
      public int \u0001;
    }

    private struct \u0002
    {
      public string \u0001;
      public string \u0002;

      public \u0002([In] string obj0, [In] string obj1)
      {
        this.\u0001 = obj0;
        this.\u0002 = obj1;
      }
    }

    private struct \u0003
    {
      public string \u0001;
      public \u0003.\u0004.\u0002 \u0001;

      [SpecialName]
      public bool \u0003() => \u0016\u0005.\u007E\u0019\u0002((object) this.\u0001) == 0;

      [SpecialName]
      public static \u0003.\u0004.\u0003 \u0003() => new \u0003.\u0004.\u0003(string.Empty, string.Empty, string.Empty);

      public \u0003([In] string obj0, [In] string obj1, [In] string obj2)
      {
        this.\u0001 = obj0;
        this.\u0001 = new \u0003.\u0004.\u0002(obj1, obj2);
      }
    }
  }
}
