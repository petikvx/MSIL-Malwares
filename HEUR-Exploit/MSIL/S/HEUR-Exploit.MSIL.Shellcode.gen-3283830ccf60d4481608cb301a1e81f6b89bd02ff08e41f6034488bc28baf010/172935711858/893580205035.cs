// Decompiled with JetBrains decompiler
// Type: 172935711858.893580205035
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003166973138106;
using \u003208825527781;
using \u003233524418126;
using \u003573940117928;
using \u003714036611969;
using System;
using System.Collections.Generic;
using System.Globalization;

namespace \u003172935711858
{
  internal abstract class \u003893580205035
  {
    public abstract IEnumerable<\u003057567207975> \u003321667512956(
      \u003057567207975 _param1,
      IEnumerable<\u003057567207975> _param2,
      bool _param3);

    protected static \u003057567207975 GetTokenIndex(
      \u003057567207975 t,
      bool errorWhenNoMatch,
      int index)
    {
      \u003576016063606 obj1 = t as \u003576016063606;
      \u003326867762216 obj2 = t as \u003326867762216;
      if (obj1 != null)
      {
        if (obj1.\u003911121170153 > index)
          return obj1.get_Item(index);
        if (errorWhenNoMatch)
          throw new \u003215302783352("Index {0} outside the bounds of JArray.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) index));
        return (\u003057567207975) null;
      }
      if (obj2 != null)
      {
        if (obj2.\u003911121170153 > index)
          return obj2.get_Item((object) index);
        if (errorWhenNoMatch)
          throw new \u003215302783352("Index {0} outside the bounds of JConstructor.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) index));
        return (\u003057567207975) null;
      }
      if (errorWhenNoMatch)
        throw new \u003215302783352("Index {0} not valid on {1}.".\u003937370926224((IFormatProvider) CultureInfo.InvariantCulture, (object) index, (object) t.GetType().Name));
      return (\u003057567207975) null;
    }
  }
}
