// Decompiled with JetBrains decompiler
// Type: ⁫⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮ : 
  \u202E‏‫⁫‏‭‭‮‮⁭‎‭‏‮⁬‌‫⁫⁮‫⁫⁭‬‎‮‪‎⁪‍‍‌‍‬‍‍⁬‌‫⁪‬‮
{
  private static readonly long \u202E‌‏‫‬‌⁭‏‪⁪​⁬⁭⁭​‏‍⁮‎‮⁪‪‌⁯⁪‬⁬⁭‌⁪‏⁭‭​⁭‭‌‎‍‬‮ = 2147483648;
  private static readonly long \u200D​‍‌‎‫​​‭‬‪‍‬‍⁮‮⁫‮‫⁯‮‭‌⁪‬⁪⁭⁬‎‎⁯⁪⁫‫⁬‭⁪⁮‮ = 140737488355328;
  private static readonly int \u206B‭​‭⁯‮⁭⁮⁫‏‎​‌‫⁬‏⁯⁯‌⁫‭‎‍‬⁪‪‬‮‪⁮‎⁭‫‫⁯⁪‮⁫‪‭‮ = 4096;
  private static readonly int \u200C​​​⁮​‎⁬‮‎‬⁯‎‪‪⁮⁮‏‍‌⁪‍‬⁯‮‎⁫⁯⁫‌‏‏‏⁪‬⁯⁫⁪‏‏‮ = 262144;
  private readonly \u206B‌‪‭⁮‌⁭‎⁭‎⁯​‎‭‌‪‏‭‫‮‎‪⁫⁪​⁫‏⁮‪‫​‬⁭​⁮⁬⁯⁬‍‮‮ \u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮;
  private readonly \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ \u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮;
  private readonly int \u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮;
  private readonly int \u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮;
  private readonly int \u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮;
  private byte[] \u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮;
  private byte[] \u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮;
  private long \u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮;
  private bool \u202D‮⁬‌⁬​⁯⁯‪‌‫‫‭⁮⁭⁬‌‎⁭⁭‫​‪‎‍​⁮‏‎‫‎⁮⁬‏⁮‎⁯​⁯⁬‮;
  private static readonly byte[] \u206F⁫⁮⁯‬‍‫‬‭‫⁪‪⁫⁮⁭‌​‪⁮‏‏‌⁯‮⁬‮⁪‏‮⁭⁬‍⁪‏‭‮‮‌⁮⁫‮ = \u202E‏‌​⁮‌‭‍‫‍⁭​⁯‌​‫⁫‭‭⁯⁫​⁮‪‭⁯‫‮⁫‏⁮‮⁬⁭‎⁭⁯​‪⁭‮.\u202B‫​⁭‏⁬⁫⁬⁯⁮‏‬‬‫⁭‫‭⁫‪‎‍‫⁫‪‍⁮⁯‍⁯‬​‭⁪​⁫⁮‎‍‬‏‮("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F");

  public \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1,
    int _param2,
    int _param3,
    \u206B‌‪‭⁮‌⁭‎⁭‎⁯​‎‭‌‪‏‭‫‮‎‪⁫⁪​⁫‏⁮‪‫​‬⁭​⁮⁬⁯⁬‍‮‮ _param4,
    byte[] _param5,
    byte[] _param6)
  {
    if (_param3 > 256)
      throw new ArgumentException("Requested security strength is not supported by the derivation function");
    if (this.\u206E‬⁪⁪‫⁯‬‏​⁭‍⁬‭‌⁮‎​‎⁭⁫‌​‮‬‭⁭⁮‮‭​‎⁮‪⁬‭⁮⁯‭​⁪‮(_param1, _param2) < _param3)
      throw new ArgumentException("Requested security strength is not supported by block cipher and key size");
    if (_param4.\u206E⁭⁫‎‪⁭‮‫‬‍⁫‫‮‍‌⁯⁪‬⁯‭‌‭‏⁯⁬​‭‬‏⁪⁭⁪‎‫‭​⁪⁬⁪⁪‮ < _param3)
      throw new ArgumentException("Not enough entropy for security strength required");
    this.\u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮ = _param4;
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮ = _param1;
    this.\u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮ = _param2;
    this.\u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮ = _param3;
    this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮ = _param2 + _param1.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() * 8;
    this.\u202D‮⁬‌⁬​⁯⁯‪‌‫‫‭⁮⁭⁬‌‎⁭⁭‫​‪‎‍​⁮‏‎‫‎⁮⁬‏⁮‎⁯​⁯⁬‮ = this.\u206B‏‭‏‭‮‏‪‌⁭⁭‬‮‎​‍⁫⁬⁬​‫‫‮⁭⁬‭‎‭‮‬‏‮⁭⁫⁭‪‪‬⁭⁯‮(_param1);
    this.\u206D​‌⁫‎​‏‍‮⁯‭‭‪⁮‍⁯​‪‏⁬⁬‍‫‎‎‫⁭‬⁯‌‫​‏‌‌​‪⁮‬⁯‮(this.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮(), _param6, _param5);
  }

  private void \u206D​‌⁫‎​‏‍‮⁯‭‭‪⁮‍⁯​‪‏⁬⁬‍‫‎‎‫⁭‬⁯‌‫​‏‌‌​‪⁮‬⁯‮(
    byte[] _param1,
    byte[] _param2,
    byte[] _param3)
  {
    byte[] numArray = this.\u202A⁯‪‭⁫‍⁬‫⁬‎‮‌‏⁭‭‪⁭⁭‫⁭‫‭‬‍‌‏‏⁯⁮‮⁬‮‎‎‭⁯⁫⁮‭‍‮(\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁫⁫‍⁪‌‫‬‌⁬⁭‫‭‮‭‎​‏⁯⁪‍‎⁬⁯⁪‬‏⁯‏⁯‌⁬⁭‪‫‏‪​‍‎‮(_param1, _param2, _param3), this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
    int length = this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮ = new byte[(this.\u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮ + 7) / 8];
    this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮ = new byte[length];
    this.\u200F‬⁮‭‮⁮‮⁯‍‮‍‏⁮⁫‬‮⁮‪⁬⁪​‍‌​‬‌‍⁮‌‌‌⁮‎‌‪‭⁭⁯‌‫‮(numArray, this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮);
    this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ = 1L;
  }

  private void \u200F‬⁮‭‮⁮‮⁯‍‮‍‏⁮⁫‬‮⁮‪⁬⁪​‍‌​‬‌‍⁮‌‌‌⁮‎‌‪‭⁭⁯‌‫‮(
    byte[] _param1,
    byte[] _param2,
    byte[] _param3)
  {
    byte[] numArray = new byte[_param1.Length];
    byte[] sourceArray = new byte[this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮()];
    int num1 = 0;
    int num2 = this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(this.\u202E‮‪‌⁬‎⁯‏‫‪⁫‭⁯‭⁬‎‏‬‮⁫‫⁯⁮‍‪‏‪‭‌⁪‭⁬‪‭‌‭‍‌‬‍‮(_param2)));
    for (; num1 * num2 < _param1.Length; ++num1)
    {
      this.\u200E⁫⁬⁭⁯‮‭‌​⁪‍‏​‪‌‎‎​‍⁪‍⁭‭‏⁪⁬⁭⁯⁭‪‎‫‬⁮‪‬⁬‫⁪‏‮(_param3);
      this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param3, 0, sourceArray, 0);
      int length = numArray.Length - num1 * num2 > num2 ? num2 : numArray.Length - num1 * num2;
      Array.Copy((Array) sourceArray, 0, (Array) numArray, num1 * num2, length);
    }
    this.\u202B‪‎‎‫⁬‎⁭‬⁭‬⁭‌‌‮‌‬⁮⁭‬​‭‍‭‬‍‪‫⁭‍‏‎⁯‬⁭‍⁭‏‌‌‮(numArray, _param1, numArray, 0);
    Array.Copy((Array) numArray, 0, (Array) _param2, 0, _param2.Length);
    Array.Copy((Array) numArray, _param2.Length, (Array) _param3, 0, _param3.Length);
  }

  private void \u206B‪‪⁫⁫‌⁬​⁭‫‬‪‭‮​‌⁮⁫‏⁮‏‭‭⁬‍‪‬⁭‏‌‎‪⁫‮‪‫‏⁮⁪‭‮(byte[] _param1)
  {
    this.\u200F‬⁮‭‮⁮‮⁯‍‮‍‏⁮⁫‬‮⁮‪⁬⁪​‍‌​‬‌‍⁮‌‌‌⁮‎‌‪‭⁭⁯‌‫‮(this.\u202A⁯‪‭⁫‍⁬‫⁬‎‮‌‏⁭‭‪⁭⁭‫⁭‫‭‬‍‌‏‏⁯⁮‮⁬‮‎‎‭⁯⁫⁮‭‍‮(\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202C⁬⁬‭⁬⁮⁬⁭‮‭‍‭⁯⁬‏‍‫‪⁫⁬‮⁮⁪⁫‭‫⁯‎‬⁯‌⁬‌⁯‍⁮⁮‍​⁮‮(this.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮(), _param1), this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮), this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮);
    this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ = 1L;
  }

  private void \u202B‪‎‎‫⁬‎⁭‬⁭‬⁭‌‌‮‌‬⁮⁭‬​‭‍‭‬‍‪‫⁭‍‏‎⁯‬⁭‍⁭‏‌‌‮(
    byte[] _param1,
    byte[] _param2,
    byte[] _param3,
    int _param4)
  {
    for (int index = 0; index < _param1.Length; ++index)
      _param1[index] = (byte) ((uint) _param2[index] ^ (uint) _param3[_param4 + index]);
  }

  private void \u200E⁫⁬⁭⁯‮‭‌​⁪‍‏​‪‌‎‎​‍⁪‍⁭‭‏⁪⁬⁭⁯⁭‪‎‫‬⁮‪‬⁬‫⁪‏‮(byte[] _param1)
  {
    uint num1 = 1;
    int length = _param1.Length;
    while (--length >= 0)
    {
      uint num2 = num1 + (uint) _param1[length];
      _param1[length] = (byte) num2;
      num1 = num2 >> 8;
    }
  }

  private byte[] \u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮()
  {
    byte[] numArray = this.\u200B⁯​‎‌‌‬⁬‎‭‭⁫‌⁮⁪‫⁫‪​⁬⁪‬‪⁪‍‭⁬⁮⁪⁫⁮⁪​‮⁮‎‏⁭‌‏‮.\u206B⁮‎⁫⁭⁪‪‏‌⁫‍⁭⁫‍‏‮‎‍⁯​‭⁯‭‏⁭⁪⁯⁭⁪⁯⁯⁮‌‫⁯⁭‍‪⁯⁭‮();
    if (numArray.Length >= (this.\u200B‭‎⁯‮⁭⁮​‎‌​⁭‭‮⁫‪⁪⁬​‎‍‬⁯‪‌‬‭‌‍​‍‏⁯‍⁭⁯⁬⁯⁫‎‮ + 7) / 8)
      return numArray;
    throw new InvalidOperationException("Insufficient entropy provided by entropy source");
  }

  private byte[] \u202A⁯‪‭⁫‍⁬‫⁬‎‮‌‏⁭‭‪⁭⁭‫⁭‫‭‬‍‌‏‏⁯⁮‮⁬‮‎‎‭⁯⁫⁮‭‍‮(byte[] _param1, int _param2)
  {
    int length1 = this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    int length2 = _param1.Length;
    int num1 = _param2 / 8;
    byte[] destinationArray1 = new byte[(8 + length2 + 1 + length1 - 1) / length1 * length1];
    this.\u202C‌⁬⁭⁭⁫​‬⁬⁯⁯⁪‮⁭‬​⁮⁮‫⁬⁪⁬‮‭‏⁮‬⁭⁬⁯⁬⁫⁭⁬⁪⁬⁭⁯​⁯‮(destinationArray1, length2, 0);
    this.\u202C‌⁬⁭⁭⁫​‬⁬⁯⁯⁪‮⁭‬​⁮⁮‫⁬⁪⁬‮‭‏⁮‬⁭⁬⁯⁬⁫⁭⁬⁪⁬⁭⁯​⁯‮(destinationArray1, num1, 4);
    Array.Copy((Array) _param1, 0, (Array) destinationArray1, 8, length2);
    destinationArray1[8 + length2] = (byte) 128;
    byte[] numArray1 = new byte[this.\u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮ / 8 + length1];
    byte[] sourceArray = new byte[length1];
    byte[] numArray2 = new byte[length1];
    int num2 = 0;
    byte[] destinationArray2 = new byte[this.\u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮ / 8];
    Array.Copy((Array) \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u206F⁫⁮⁯‬‍‫‬‭‫⁪‪⁫⁮⁭‌​‪⁮‏‏‌⁯‮⁬‮⁪‏‮⁭⁬‍⁪‏‭‮‮‌⁮⁫‮, 0, (Array) destinationArray2, 0, destinationArray2.Length);
    for (; num2 * length1 * 8 < this.\u200D‍⁪‭⁬‎⁯‭⁪‭‮‏‎⁫⁬‭‍⁬⁬⁫‍‍​⁯‭‭‬⁪‏​‫‎‍‭⁭⁯⁭⁯‬‪‮ + length1 * 8; ++num2)
    {
      this.\u202C‌⁬⁭⁭⁫​‬⁬⁯⁯⁪‮⁭‬​⁮⁮‫⁬⁪⁬‮‭‏⁮‬⁭⁬⁯⁬⁫⁭⁬⁪⁬⁭⁯​⁯‮(numArray2, num2, 0);
      this.\u200E⁫⁫‪‎⁮​⁪‫⁫‍‫⁮⁮‍‎‍⁬⁮⁪‮​‬⁫‌⁮‏‮‭‍‌‏⁭‎‬‌⁬‌​‪‮(sourceArray, destinationArray2, numArray2, destinationArray1);
      int length3 = numArray1.Length - num2 * length1 > length1 ? length1 : numArray1.Length - num2 * length1;
      Array.Copy((Array) sourceArray, 0, (Array) numArray1, num2 * length1, length3);
    }
    byte[] numArray3 = new byte[length1];
    Array.Copy((Array) numArray1, 0, (Array) destinationArray2, 0, destinationArray2.Length);
    Array.Copy((Array) numArray1, destinationArray2.Length, (Array) numArray3, 0, numArray3.Length);
    byte[] destinationArray3 = new byte[_param2 / 2];
    int num3 = 0;
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(this.\u202E‮‪‌⁬‎⁯‏‫‪⁫‭⁯‭⁬‎‏‬‮⁫‫⁯⁮‍‪‏‪‭‌⁪‭⁬‪‭‌‭‍‌‬‍‮(destinationArray2)));
    for (; num3 * length1 < destinationArray3.Length; ++num3)
    {
      this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(numArray3, 0, numArray3, 0);
      int length4 = destinationArray3.Length - num3 * length1 > length1 ? length1 : destinationArray3.Length - num3 * length1;
      Array.Copy((Array) numArray3, 0, (Array) destinationArray3, num3 * length1, length4);
    }
    return destinationArray3;
  }

  private void \u200E⁫⁫‪‎⁮​⁪‫⁫‍‫⁮⁮‍‎‍⁬⁮⁪‮​‬⁫‌⁮‏‮‭‍‌‏⁭‎‬‌⁬‌​‪‮(
    byte[] _param1,
    byte[] _param2,
    byte[] _param3,
    byte[] _param4)
  {
    int length = this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮();
    byte[] sourceArray = new byte[length];
    int num = _param4.Length / length;
    byte[] numArray = new byte[length];
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(this.\u202E‮‪‌⁬‎⁯‏‫‪⁫‭⁯‭⁬‎‏‬‮⁫‫⁯⁮‍‪‏‪‭‌⁪‭⁬‪‭‌‭‍‌‬‍‮(_param2)));
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param3, 0, sourceArray, 0);
    for (int index = 0; index < num; ++index)
    {
      this.\u202B‪‎‎‫⁬‎⁭‬⁭‬⁭‌‌‮‌‬⁮⁭‬​‭‍‭‬‍‪‫⁭‍‏‎⁯‬⁭‍⁭‏‌‌‮(numArray, sourceArray, _param4, index * length);
      this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(numArray, 0, sourceArray, 0);
    }
    Array.Copy((Array) sourceArray, 0, (Array) _param1, 0, _param1.Length);
  }

  private void \u202C‌⁬⁭⁭⁫​‬⁬⁯⁯⁪‮⁭‬​⁮⁮‫⁬⁪⁬‮‭‏⁮‬⁭⁬⁯⁬⁫⁭⁬⁪⁬⁭⁯​⁯‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    _param1[_param3] = (byte) (_param2 >> 24);
    _param1[_param3 + 1] = (byte) (_param2 >> 16);
    _param1[_param3 + 2] = (byte) (_param2 >> 8);
    _param1[_param3 + 3] = (byte) _param2;
  }

  public int \u200F‏⁬⁭‬‏‭⁪‭‪‎⁬‮⁬⁬‬⁯​‍‫‮‮‏⁮‏‫⁪‮‫‪⁪​‫⁬‬⁯⁮⁭⁪‮‮ => this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length * 8;

  public int \u202C⁯⁫‮‭⁪‌‍​‎⁭⁮‌‍‮‍‎‍⁬‏⁫‪‎‎⁯⁮‬⁮⁪‬‭‍‎⁭‌‬⁯⁫⁬⁮‮(
    byte[] _param1,
    byte[] _param2,
    bool _param3)
  {
    if (this.\u202D‮⁬‌⁬​⁯⁯‪‌‫‫‭⁮⁭⁬‌‎⁭⁭‫​‪‎‍​⁮‏‎‫‎⁮⁬‏⁮‎⁯​⁯⁬‮)
    {
      if (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ > \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u202E‌‏‫‬‌⁭‏‪⁪​⁬⁭⁭​‏‍⁮‎‮⁪‪‌⁯⁪‬⁬⁭‌⁪‏⁭‭​⁭‭‌‎‍‬‮)
        return -1;
      if (\u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u202A⁮​⁫‫‮⁪⁪⁭⁪‮‫‫‌‌‪⁪‍​‫‭⁪‪‌‭‮‏​⁭⁬‏⁭‏‭‫⁮‌‬‮‌‮(_param1, \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u206B‭​‭⁯‮⁭⁮⁫‏‎​‌‫⁬‏⁯⁯‌⁫‭‎‍‬⁪‪‬‮‪⁮‎⁭‫‫⁯⁪‮⁫‪‭‮ / 8))
        throw new ArgumentException("Number of bits per request limited to " + \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u206B‭​‭⁯‮⁭⁮⁫‏‎​‌‫⁬‏⁯⁯‌⁫‭‎‍‬⁪‪‬‮‪⁮‎⁭‫‫⁯⁪‮⁫‪‭‮.ToString(), "output");
    }
    else
    {
      if (this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮ > \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u200D​‍‌‎‫​​‭‬‪‍‬‍⁮‮⁫‮‫⁯‮‭‌⁪‬⁪⁭⁬‎‎⁯⁪⁫‫⁬‭⁪⁮‮)
        return -1;
      if (\u206F‪​⁮‭‌‭​‫⁯‬‭‎‎‏​‌‪‪⁮⁫‍‭‭​⁪​‮‌‫‪⁪‬‬‬‪‎⁯‏‭‮.\u202A⁮​⁫‫‮⁪⁪⁭⁪‮‫‫‌‌‪⁪‍​‫‭⁪‪‌‭‮‏​⁭⁬‏⁭‏‭‫⁮‌‬‮‌‮(_param1, \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u200C​​​⁮​‎⁬‮‎‬⁯‎‪‪⁮⁮‏‍‌⁪‍‬⁯‮‎⁫⁯⁫‌‏‏‏⁪‬⁯⁫⁪‏‏‮ / 8))
        throw new ArgumentException("Number of bits per request limited to " + \u206B⁯⁫‌‎‫‍‏‭⁮‬⁬‫‭‪‏⁫‫‍‏‫‍⁭⁪‫‮‬‫⁭⁪‬⁪‍⁯‌‪‌‫​⁯‮.\u200C​​​⁮​‎⁬‮‎‬⁯‎‪‪⁮⁮‏‍‌⁪‍‬⁯‮‎⁫⁯⁫‌‏‏‏⁪‬⁯⁫⁪‏‏‮.ToString(), "output");
    }
    if (_param3)
    {
      this.\u206B‪‪⁫⁫‌⁬​⁭‫‬‪‭‮​‌⁮⁫‏⁮‏‭‭⁬‍‪‬⁭‏‌‎‪⁫‮‪‫‏⁮⁪‭‮(_param2);
      _param2 = (byte[]) null;
    }
    if (_param2 != null)
    {
      _param2 = this.\u202A⁯‪‭⁫‍⁬‫⁬‎‮‌‏⁭‭‪⁭⁭‫⁭‫‭‬‍‌‏‏⁯⁮‮⁬‮‎‎‭⁯⁫⁮‭‍‮(_param2, this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮);
      this.\u200F‬⁮‭‮⁮‮⁯‍‮‍‏⁮⁫‬‮⁮‪⁬⁪​‍‌​‬‌‍⁮‌‌‌⁮‎‌‪‭⁭⁯‌‫‮(_param2, this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮);
    }
    else
      _param2 = new byte[this.\u206C⁭‎⁬⁮‍⁮‌​‍⁭⁪⁫‮‬‭‭‌‏‍‍‭‪‪‪‮⁯⁬‎‏‏‍⁮‮⁪⁭‌⁮‎⁯‮];
    byte[] sourceArray = new byte[this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length];
    this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(this.\u202E‮‪‌⁬‎⁯‏‫‪⁫‭⁯‭⁬‎‏‬‮⁫‫⁯⁮‍‪‏‪‭‌⁪‭⁬‪‭‌‭‍‌‬‍‮(this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮)));
    for (int index = 0; index <= _param1.Length / sourceArray.Length; ++index)
    {
      int length = _param1.Length - index * sourceArray.Length > sourceArray.Length ? sourceArray.Length : _param1.Length - index * this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮.Length;
      if (length != 0)
      {
        this.\u200E⁫⁬⁭⁯‮‭‌​⁪‍‏​‪‌‎‎​‍⁪‍⁭‭‏⁪⁬⁭⁯⁭‪‎‫‬⁮‪‬⁬‫⁪‏‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮);
        this.\u206B⁬⁫⁫‍‬⁬⁬‭‎‏⁪‏​‮‬‌⁮‭‪⁪⁬‍⁬‮⁫⁪‍‎‬‫‭‌‎‌‪⁫‌‫⁭‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮, 0, sourceArray, 0);
        Array.Copy((Array) sourceArray, 0, (Array) _param1, index * sourceArray.Length, length);
      }
    }
    this.\u200F‬⁮‭‮⁮‮⁯‍‮‍‏⁮⁫‬‮⁮‪⁬⁪​‍‌​‬‌‍⁮‌‌‌⁮‎‌‪‭⁭⁯‌‫‮(_param2, this.\u200B⁬​⁯‭‫‮⁪⁪⁬‪⁬‪‎‎⁪‪⁪⁪‍⁬‪‌‬‫⁬‌‍‎‎⁯⁫⁯‌‎⁮⁫⁭‌‪‮, this.\u202C‮‮‬⁯⁬‭⁮⁭⁮​⁫‪⁫‭⁭⁪⁭‫‭‪‏⁫‪⁪​‮​⁬‬⁫​‎‪‮‌‎‫⁯‮);
    ++this.\u206E‭‬‏⁮​‮⁯⁭⁯⁫‌‌⁬‬‍⁯⁪‍‮‌⁯​‪‮‬⁬⁭​‌‭‌‮‪‏‭‌⁭‎‮;
    return _param1.Length * 8;
  }

  public void \u200B⁬⁯‮⁯‏‌‍⁫⁫⁪‫‏⁭‏⁯‫⁬⁫‪‭‍⁯⁪⁪‏⁪‏⁪​‫‎‍‮‭​‪⁭⁫‏‮(byte[] _param1) => this.\u206B‪‪⁫⁫‌⁬​⁭‫‬‪‭‮​‌⁮⁫‏⁮‏‭‭⁬‍‪‬⁭‏‌‎‪⁫‮‪‫‏⁮⁪‭‮(_param1);

  private bool \u206B‏‭‏‭‮‏‪‌⁭⁭‬‮‎​‍⁫⁬⁬​‫‫‮⁭⁬‭‎‭‮‬‏‮⁭⁫⁭‪‪‬⁭⁯‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1)
  {
    return _param1.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮.Equals("DESede") || _param1.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮.Equals("TDEA");
  }

  private int \u206E‬⁪⁪‫⁯‬‏​⁭‍⁬‭‌⁮‎​‎⁭⁫‌​‮‬‭⁭⁮‮‭​‎⁮‪⁬‭⁮⁯‭​⁪‮(
    \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮ _param1,
    int _param2)
  {
    if (this.\u206B‏‭‏‭‮‏‪‌⁭⁭‬‮‎​‍⁫⁬⁬​‫‫‮⁭⁬‭‎‭‮‬‏‮⁭⁫⁭‪‪‬⁭⁯‮(_param1) && _param2 == 168)
      return 112;
    return _param1.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮.Equals("AES") ? _param2 : -1;
  }

  private byte[] \u202E‮‪‌⁬‎⁯‏‫‪⁫‭⁯‭⁬‎‏‬‮⁫‫⁯⁮‍‪‏‪‭‌⁪‭⁬‪‭‌‭‍‌‬‍‮(byte[] _param1)
  {
    if (!this.\u202D‮⁬‌⁬​⁯⁯‪‌‫‫‭⁮⁭⁬‌‎⁭⁭‫​‪‎‍​⁮‏‎‫‎⁮⁬‏⁮‎⁯​⁯⁬‮)
      return _param1;
    byte[] numArray = new byte[24];
    this.\u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(_param1, 0, numArray, 0);
    this.\u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(_param1, 7, numArray, 8);
    this.\u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(_param1, 14, numArray, 16);
    return numArray;
  }

  private void \u206B‎⁭‎‬⁫‍⁪‍⁪‍‍‏⁭⁯⁯‍‭⁬‮⁭‫⁬‪⁬‌‍⁬‌‏⁪⁯‪⁯⁪‏‪⁭‬⁯‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    _param3[_param4] = (byte) ((uint) _param1[_param2] & 254U);
    _param3[_param4 + 1] = (byte) ((int) _param1[_param2] << 7 | ((int) _param1[_param2 + 1] & 252) >> 1);
    _param3[_param4 + 2] = (byte) ((int) _param1[_param2 + 1] << 6 | ((int) _param1[_param2 + 2] & 248) >> 2);
    _param3[_param4 + 3] = (byte) ((int) _param1[_param2 + 2] << 5 | ((int) _param1[_param2 + 3] & 240) >> 3);
    _param3[_param4 + 4] = (byte) ((int) _param1[_param2 + 3] << 4 | ((int) _param1[_param2 + 4] & 224) >> 4);
    _param3[_param4 + 5] = (byte) ((int) _param1[_param2 + 4] << 3 | ((int) _param1[_param2 + 5] & 192) >> 5);
    _param3[_param4 + 6] = (byte) ((int) _param1[_param2 + 5] << 2 | ((int) _param1[_param2 + 6] & 128) >> 6);
    _param3[_param4 + 7] = (byte) ((uint) _param1[_param2 + 6] << 1);
    \u202E⁫⁪‭⁫‮‪⁫‮‎‫‪​‭‪‍⁮⁬‎‎⁫‎⁬⁭‎⁯‬‪⁫‫‬‎​‬‍⁮‌⁫⁬⁭‮.\u206A‌⁫⁯‫​⁪⁮‪⁪‬⁪‬‏‍‮‭‫‎⁯⁪⁪‌​‮⁪‪‬‍⁬‌⁫⁪‬‎‍‪‭‪⁮‮(_param3, _param4, 8);
  }
}
