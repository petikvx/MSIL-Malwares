// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: CustomA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ABC0B0F-8965-48BE-A39F-300B4A85D17D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-78d292113f7af44c7c14bdfb7bbae779df2f657bf2a687bc874dd6f9c9aecefd.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206B‭⁮⁯⁫‬⁭‪‬​⁪​⁯⁬⁮‍⁯‎‬​⁭⁭​‭‍‮⁭⁮⁭⁭⁪⁬‫‏⁬‏⁯⁫⁫‍‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 387574097;
      bool flag;
      int count;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 600240189)) % 8U)
        {
          case 0:
            --count;
            int index = ScrambleExtention.\u200E‍‌‬‫⁮⁫​‎‪‬‏‭⁪‮⁬‫⁬‍‏⁫‎‫‍‪⁫‮⁯‬‫‌⁬⁮⁮‏‌‮⁯⁪‫‮(ScrambleExtention.Random, count + 1);
            T obj = list[index];
            list[index] = list[count];
            list[count] = obj;
            num1 = (int) num2 * 2118262972 ^ -1197902945;
            continue;
          case 1:
            int num3 = flag ? 1714829859 : (num3 = 2071820142);
            num1 = num3 ^ (int) num2 * 1737740144;
            continue;
          case 2:
            num1 = (int) num2 * 1903245520 ^ 1119001426;
            continue;
          case 3:
            goto label_3;
          case 4:
            count = list.Count;
            num1 = (int) num2 * -2009011704 ^ 788398994;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = 390068829;
            continue;
          case 7:
            flag = count > 1;
            num1 = 92876044;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    static int \u200E‍‌‬‫⁮⁫​‎‪‬‏‭⁪‮⁬‫⁬‍‏⁫‎‫‍‪⁫‮⁯‬‫‌⁬⁮⁮‏‌‮⁯⁪‫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206B‭⁮⁯⁫‬⁭‪‬​⁪​⁯⁬⁮‍⁯‎‬​⁭⁭​‭‍‮⁭⁮⁭⁭⁪⁬‫‏⁬‏⁯⁫⁫‍‮() => new Random();
  }
}
