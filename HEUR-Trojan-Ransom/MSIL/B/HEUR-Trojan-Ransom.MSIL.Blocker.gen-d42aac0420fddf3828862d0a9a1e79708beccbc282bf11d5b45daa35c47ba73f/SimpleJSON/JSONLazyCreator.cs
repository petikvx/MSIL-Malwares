// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: CustomQueryInterfaceMo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 4B293447-7555-427F-9A9F-AB127E35E000
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d42aac0420fddf3828862d0a9a1e79708beccbc282bf11d5b45daa35c47ba73f.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 347108172;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 956460618)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_Key = aKey;
            num1 = (int) num2 * -154889387 ^ 278602270;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1604569243 ^ 105328866;
            continue;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -389229366 ^ -1163691152;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 132752597;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1494883824)) % 12U)
        {
          case 0:
            int num3 = flag ? -965832317 : (num3 = -1744999120);
            num1 = num3 ^ (int) num2 * -864746727;
            continue;
          case 1:
            flag = this.m_Key == null;
            num1 = (int) num2 * 1981687522 ^ -1750288486;
            continue;
          case 2:
            num1 = (int) num2 * 1991155878 ^ 616870053;
            continue;
          case 3:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -1364733899 ^ -158612387;
            continue;
          case 4:
            num1 = 1870014085;
            continue;
          case 5:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1298756524 ^ 724669358;
            continue;
          case 7:
            num1 = (int) num2 * 130851055 ^ 1232615522;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * -832706943 ^ -492788905;
            continue;
          case 10:
            num1 = (int) num2 * 365802154 ^ -296647401;
            continue;
          case 11:
            num1 = (int) num2 * -702917404 ^ 586955922;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1627843992;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -624228326)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1653188494 ^ -1579433464;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1242202327 ^ -1351906099;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 118733711;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 713485099)) % 5U)
          {
            case 0:
              aVal.Add(value);
              num1 = (int) num2 * -1001170176 ^ -305635113;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONArray();
              num1 = (int) num2 * -992457444 ^ 465848865;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 79355213 ^ -1475556671;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -547196598;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -533732384)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1446404130 ^ -591774861;
              continue;
            case 3:
              num1 = (int) num2 * 259428970 ^ 2024226879;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1410780598;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2080039394)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 215580522 ^ 80135701;
              continue;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * -1518087688 ^ -333402820;
              continue;
            case 3:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 896743617 ^ -420982995;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        this.Set((JSONNode) aVal);
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 845521099;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 35984600)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aVal = new JSONArray();
            num1 = (int) num2 * 1387227646 ^ -21852148;
            continue;
          case 2:
            aVal.Add(aItem);
            num1 = (int) num2 * 75762731 ^ -1967031602;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 588354637 ^ 893711209;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1323322541;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1210728416)) % 6U)
        {
          case 0:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -602996511 ^ 2128750482;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            aVal = new JSONClass();
            num1 = (int) num2 * -2089567458 ^ -702610050;
            continue;
          case 4:
            num1 = (int) num2 * -127383172 ^ -1157629725;
            continue;
          case 5:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 67517037 ^ 1165602064;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -621584847;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1066567658)) % 6U)
        {
          case 1:
            flag = (object) a == b;
            num1 = -1748322584;
            continue;
          case 2:
            num1 = (int) num2 * -1675857092 ^ 1332769120;
            continue;
          case 3:
            int num3 = b != null ? -1967357683 : (num3 = -59809774);
            num1 = num3 ^ (int) num2 * -125756802;
            continue;
          case 4:
            flag = true;
            num1 = (int) num2 * -1083682496 ^ 297805800;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1349676157;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -553123923)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            flag2 = (object) this == obj;
            num1 = -461810545;
            continue;
          case 2:
            num1 = (int) num2 * -1207093315 ^ -889392854;
            continue;
          case 3:
            int num3 = !flag1 ? -1414701818 : (num3 = -702187240);
            num1 = num3 ^ (int) num2 * -890873778;
            continue;
          case 4:
            num1 = (int) num2 * 446362333 ^ 1238370972;
            continue;
          case 6:
            flag1 = obj == null;
            num1 = (int) num2 * -696414173 ^ 1074607020;
            continue;
          case 7:
            flag2 = true;
            num1 = (int) num2 * -1086731603 ^ 288805170;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return flag2;
    }

    public override int GetHashCode()
    {
      int hashCode = base.GetHashCode();
label_1:
      int num1 = -1709085594;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2053497674)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 780154118 ^ -2032979488;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = -8318280;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -728575610)) % 3U)
        {
          case 1:
            str = "";
            num1 = (int) num2 * 1917712937 ^ 786686789;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 58794547;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1136115245)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * -1382148537 ^ 1005821124;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -493316889;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -774599809)) % 6U)
          {
            case 1:
              asInt = 0;
              num1 = (int) num2 * 461364589 ^ -12984306;
              continue;
            case 2:
              num1 = (int) num2 * -338525033 ^ 355312473;
              continue;
            case 3:
              num1 = (int) num2 * 925641341 ^ 452677081;
              continue;
            case 4:
              this.Set((JSONNode) new JSONData(0));
              num1 = (int) num2 * 1955511858 ^ 151620880;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -854277766;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1776978908)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1685384778 ^ 958360981;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 632035870;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1486675805)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 967829457 ^ 708668309;
              continue;
            case 1:
              asFloat = 0.0f;
              num1 = (int) num2 * -358347050 ^ -1551153330;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1496526125 ^ 31535984;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1261698546;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1454006264)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * 910842723 ^ 238778393;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 25062216 ^ -29056687;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -558943698;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -729207770)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) new JSONData(0.0));
              num1 = (int) num2 * 1867085336 ^ 2089353809;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = (int) num2 * 600992425 ^ -394774972;
              continue;
            case 3:
              num1 = (int) num2 * -1995703128 ^ -1961381995;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1213940835;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -657456400)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 1123993317 ^ -203903786;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 750431794 ^ 1365496886;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 2132617479;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 831309934)) % 5U)
          {
            case 1:
              asBool = false;
              num1 = (int) num2 * 165953846 ^ 772506591;
              continue;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONData(false);
              num1 = (int) num2 * -630825267 ^ -179041162;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -293237999 ^ 902615334;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -828815920;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1250492977)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -213093460 ^ -1457018567;
              continue;
            case 1:
              goto label_3;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1293977768 ^ 284425385;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1121701679 ^ -27599451;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -428662590;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -338929418)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 273885140 ^ -405979369;
              continue;
            case 1:
              aVal = new JSONArray();
              num1 = (int) num2 * -768082641 ^ -895278695;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * -461520381 ^ -720502639;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 1369890518;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1028075389)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 621995555 ^ 1307042452;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              asObject = aVal;
              num1 = (int) num2 * -536590793 ^ -925032588;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
