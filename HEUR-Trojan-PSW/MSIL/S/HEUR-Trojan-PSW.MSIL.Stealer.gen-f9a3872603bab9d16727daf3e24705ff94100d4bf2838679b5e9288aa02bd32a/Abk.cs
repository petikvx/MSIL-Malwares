// Decompiled with JetBrains decompiler
// Type: ib.Abk
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace ib
{
  internal class Abk
  {
    private static readonly Font zMD;
    private static Font YMp;
    private static Color UMS;
    private static Color YM2;
    private static Color LMW;
    private static Color KMF;
    private static Color sM8;
    private static Color nME;
    private static Color xM0;
    private static Color UMY;
    private static Color pMk;
    private static RichTextBox QMq;
    internal static Abk BKa;

    public static void NM1(WH _param0, RichTextBox _param1)
    {
      int num1 = 1;
label_1:
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 1:
            Abk.QMq = _param1;
            if (Abk.uKk() == null)
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          case 2:
            goto label_121;
          default:
            _param1.SelectAll();
            _param1.SelectionColor = Abk.TK1();
            _param1.SelectionFont = Abk.zMD;
            if (_param0.Ofh() != null)
            {
              if (Abk.uKk() == null)
              {
                num2 = 2;
                continue;
              }
              goto label_1;
            }
            else
              goto label_122;
        }
      }
label_121:
      int num3 = Abk.mKS((object) _param0.Ofh()) != Pv.LanguageDefault ? 1 : 0;
      goto label_123;
label_122:
      num3 = 0;
label_123:
      if (num3 != 0)
        goto label_120;
label_115:
      Hi hi1;
      using (IEnumerator<lZ> enumerator1 = _param0.gfa().GetEnumerator())
      {
        while (enumerator1.MoveNext())
        {
          lZ current1 = enumerator1.Current;
          int num4 = 3;
          IEnumerator<cw> enumerator2;
          while (true)
          {
            bool flag;
            switch (num4)
            {
              case 1:
                Abk.NMt(current1.av0(), Abk.YM2, Abk.YMp);
                goto label_6;
              case 2:
label_11:
                foreach (Qd qd in current1.pSz().Values)
                {
                  Abk.zMr(qd.aSZ(), 5, Abk.YM2);
                  Abk.RMj(qd.Pvb().aSZ(), Abk.LMW);
                  if (qd.ndT() != null)
                  {
                    Abk.FMg(qd.ndT().pwa());
                    int num5 = 0;
                    if (!Abk.FKl())
                      goto label_93;
label_90:
                    switch (num5)
                    {
                      default:
                        goto label_95;
                    }
label_93:
                    num5 = 0;
                    goto label_90;
                  }
label_95:;
                }
                if (!(current1 is gN))
                  goto case 6;
                else
                  goto label_7;
              case 3:
                Abk.NMt(current1.aSZ(), Abk.UMS, Abk.YMp);
                Abk.NMt(current1.Hvp(), Abk.YM2, Abk.YMp);
                if (current1.NS5())
                {
                  if (Abk.FKl())
                  {
                    num4 = 1;
                    continue;
                  }
                  break;
                }
                goto label_6;
              case 4:
                enumerator2 = (current1 as lk).Ih1().GetEnumerator();
                if (Abk.FKl())
                {
                  num4 = 0;
                  continue;
                }
                break;
              case 5:
                if (flag)
                {
                  num4 = 4;
                  continue;
                }
                goto label_109;
              case 6:
                flag = current1 is lk;
                num4 = Abk.uKk() == null ? 5 : 5;
                continue;
              default:
                goto label_62;
            }
            int num6;
            num4 = num6;
            continue;
label_6:
            if (current1 is RD)
            {
              Abk.RMj((current1 as RD).Pvb().aSZ(), Abk.LMW);
              num4 = 2;
            }
            else
              goto label_11;
          }
label_7:
          gN gN = current1 as gN;
          if (gN.gvw() != null)
            goto label_111;
label_60:
          using (Dictionary<string, uy>.ValueCollection.Enumerator enumerator3 = gN.Jv9().Values.GetEnumerator())
          {
            while (enumerator3.MoveNext())
            {
              uy current2 = enumerator3.Current;
              Abk.RMj(((Ho) Abk.iK5((object) current2)).aSZ(), Abk.LMW);
              bool flag1 = current2.jdU() is kY;
              int num7 = 5;
              jq jq;
              while (true)
              {
                bool flag2;
                switch (num7)
                {
                  case 1:
                    goto label_48;
                  case 2:
                    goto label_41;
                  case 3:
                    if (flag2)
                    {
                      if (Abk.uKk() == null)
                      {
                        num7 = 0;
                        continue;
                      }
                      break;
                    }
                    goto label_44;
                  case 4:
                    goto label_43;
                  case 5:
                    if (flag1)
                      Abk.RMj((current2.jdU() as kY).LsR(), Abk.UMY);
                    if (current2.Ldi() != null)
                    {
                      Abk.zMr(current2.idL(), 2, Abk.YM2);
                      Abk.FMg(current2.Ldi().pwa());
                    }
                    if (current2.eds())
                      goto label_58;
label_50:
                    if (current2.jdU().Yvl() == null || !(current2.jdU().Yvl() is el))
                    {
                      flag2 = current2.jdU().Yvl() != null && Abk.fKN((object) current2.jdU()) is jq;
                      num7 = 3;
                      continue;
                    }
                    if (Abk.uKk() == null)
                    {
                      num7 = 2;
                      continue;
                    }
                    break;
label_58:
                    Abk.RMj(current2.ud7(), Abk.xM0);
                    goto label_50;
                  default:
                    jq = ((iL) Abk.iK5((object) current2)).Yvl() as jq;
                    if (Abk.uKk() == null)
                    {
                      num7 = 1;
                      continue;
                    }
                    break;
                }
                int num8;
                num7 = num8;
              }
label_41:
              Abk.FMg((Yb4) Abk.sKR((object) (current2.jdU().Yvl() as el).xsA()));
              goto label_44;
label_43:
              IEnumerator<NW> enumerator4 = jq.QsZ().GetEnumerator();
              try
              {
                while (enumerator4.MoveNext())
                {
                  NW current3 = enumerator4.Current;
                  int num9 = 3;
                  bool flag3;
                  while (true)
                  {
                    switch (num9)
                    {
                      case 1:
label_27:
                        Hi hi2 = new Hi();
                        flag3 = current3.xvH() != hi2;
                        num9 = 2;
                        continue;
                      case 2:
                        goto label_26;
                      case 3:
                        switch (current3)
                        {
                          case Cf _:
                            Abk.RMj(current3.aSZ(), Abk.UMY);
                            goto label_27;
                          case Es _:
                            Abk.RMj(current3.aSZ(), Abk.sM8);
                            goto label_27;
                          case Wj _:
                            if (Abk.uKk() == null)
                            {
                              num9 = 0;
                              continue;
                            }
                            break;
                          default:
                            goto label_27;
                        }
                        break;
                      default:
                        Abk.RMj(current3.aSZ(), Abk.KMF);
                        if (Abk.uKk() == null)
                        {
                          num9 = 1;
                          continue;
                        }
                        break;
                    }
                    int num10;
                    num9 = num10;
                  }
label_26:
                  if (flag3)
                    goto label_34;
label_28:
                  continue;
label_34:
                  Abk.RMj(current3.xvH(), Abk.YM2);
                  goto label_28;
                }
              }
              finally
              {
                if (enumerator4 != null)
                  Abk.bKW((object) enumerator4);
              }
label_44:
              continue;
label_48:
              Abk.RMj(jq.Gsg(), Abk.YM2);
              using (IEnumerator<Hi> enumerator5 = jq.vsp().GetEnumerator())
              {
                while (enumerator5.MoveNext())
                  Abk.VKB(enumerator5.Current, Abk.YM2);
                goto label_43;
              }
            }
            goto label_82;
          }
label_111:
          Abk.RMj(gN.AvB(), Abk.pMk);
          goto label_60;
label_62:
          try
          {
label_71:
            if (Abk.hDi((object) enumerator2))
              goto label_70;
            else
              goto label_72;
label_64:
            int num11;
            int num12 = num11;
label_65:
            switch (num12)
            {
              case 1:
                goto label_71;
              case 2:
                break;
              case 3:
                goto label_67;
              default:
                goto label_82;
            }
label_66:
            cw current4;
            if (!(current4.ddW() is Vb0))
            {
              if (current4.ddW() is IbA)
              {
                Abk.RMj(current4.ddW().aSZ(), Abk.YM2);
                goto label_74;
              }
              else
                goto label_74;
            }
            else
            {
              hi1 = current4.ddW().aSZ();
              int num13 = hi1.HfD() + 1;
              hi1 = current4.ddW().aSZ();
              int num14 = hi1.nf2() - 2;
              Color kmf = Abk.KMF;
              Abk.lMZ(num13, num14, kmf);
              goto label_74;
            }
label_67:
            if (current4.ddW() is cb3)
            {
              Abk.RMj(Abk.SKz(Abk.HKV((object) current4)), Abk.KMF);
              goto label_74;
            }
            else
              goto label_66;
label_70:
            current4 = enumerator2.Current;
            if (current4.KdE() != null)
            {
              Abk.RMj(current4.zdk(), Abk.sM8);
              num12 = 3;
              goto label_65;
            }
            else
              goto label_67;
label_72:
            if (Abk.uKk() == null)
            {
              num12 = 0;
              goto label_65;
            }
            else
              goto label_64;
label_74:
            Abk.JM7(current4.sdu());
            num12 = 1;
            if (Abk.FKl())
              goto label_65;
            else
              goto label_64;
          }
          finally
          {
            enumerator2?.Dispose();
          }
label_82:
          continue;
label_109:
          if (current1 is rr)
          {
            using (IEnumerator<DR> enumerator6 = (current1 as rr).IhE().GetEnumerator())
            {
              while (enumerator6.MoveNext())
              {
                DR current5 = enumerator6.Current;
                int num15 = 0;
                if (Abk.uKk() != null)
                  goto label_104;
label_100:
                switch (num15)
                {
                  default:
                    Abk.RMj(current5.aSZ(), Abk.KMF);
                    Abk.JM7(current5.Vde());
                    continue;
                }
label_104:
                int num16;
                num15 = num16;
                goto label_100;
              }
              goto label_82;
            }
          }
          else
            goto label_82;
        }
        return;
      }
label_120:
      RichTextBox richTextBox = _param1;
      hi1 = _param0.Ofh().aSZ();
      int start = hi1.HfD();
      hi1 = _param0.Ofh().aSZ();
      int length = hi1.nf2();
      richTextBox.Select(start, length);
      Abk.bK0((object) _param1, Abk.YM2);
      goto label_115;
    }

    private static void JM7(IList<sa> _param0)
    {
      if (_param0 == null)
        return;
      foreach (sa sa in (IEnumerable<sa>) _param0)
      {
        switch (sa)
        {
          case rbB _:
            Abk.FMg((sa as rbB).eQL().pwa());
            break;
          case wbM _:
            wbM wbM = sa as wbM;
            Abk.RMj(wbM.aSZ(), Abk.nME);
            Abk.RMj(wbM.Sil(), Abk.UMY);
            break;
          default:
            throw new Exception("Unresolved assignment detected: " + sa?.ToString());
        }
      }
    }

    private static void FMg(Yb4 _param0)
    {
      if (_param0 == null)
        return;
      IEnumerator<j7> enumerator = _param0.MwA().GetEnumerator();
      int num1 = 0;
      if (Abk.uKk() != null)
        goto label_32;
label_1:
      switch (num1)
      {
        default:
          try
          {
            while (enumerator.MoveNext())
            {
              j7 current = enumerator.Current;
              if (!(current is Yb4))
                goto label_7;
              else
                goto label_14;
label_4:
              pb8 pb8;
              bool flag1;
              bool flag2;
              ybO ybO;
              int num2;
              while (true)
              {
                switch (num2)
                {
                  case 1:
                    if (!(current is ybO))
                    {
                      flag1 = current is Ab5;
                      int num3;
                      num2 = Abk.FKl() ? 0 : num3;
                      continue;
                    }
                    ybO = current as ybO;
                    num2 = 3;
                    continue;
                  case 2:
                    goto label_19;
                  case 3:
                    Abk.RMj(Abk.RDc((object) ybO), Abk.YM2);
                    num2 = 2;
                    continue;
                  case 4:
                    goto label_10;
                  case 5:
                    goto label_13;
                  case 6:
                    if (!(current is pbC))
                    {
                      if (!(current is QbG))
                        goto case 1;
                      else
                        goto label_19;
                    }
                    else
                      goto label_11;
                  case 7:
                    if (!flag2)
                    {
                      num2 = 6;
                      continue;
                    }
                    goto label_22;
                  default:
                    if (!flag1)
                    {
                      if (current is pb8)
                      {
                        pb8 = current as pb8;
                        num2 = 4;
                        continue;
                      }
                      goto label_19;
                    }
                    else
                      goto label_23;
                }
              }
label_10:
              Abk.RMj(Abk.lDx((object) pb8), Abk.YM2);
              Abk.RMj(pb8.Fix(), Abk.LMW);
              goto label_19;
label_11:
              Abk.RMj((current as pbC).aSZ(), Abk.KMF);
              goto label_19;
label_13:
              Abk.FMg(current as Yb4);
label_19:
              continue;
label_22:
              Abk.RMj((current as Ob6).aSZ(), Abk.YM2);
              goto label_19;
label_23:
              Abk.VKB((current as Ab5).aSZ(), Abk.sM8);
              goto label_19;
label_7:
              flag2 = current is Ob6;
              num2 = 7;
              goto label_4;
label_14:
              num2 = 5;
              goto label_4;
            }
            return;
          }
          finally
          {
            enumerator?.Dispose();
          }
      }
label_32:
      num1 = 0;
      goto label_1;
    }

    private static void RMj(Hi _param0, Color _param1)
    {
      Abk.QMq.Select(_param0.HfD(), _param0.nf2());
      Abk.QMq.SelectionColor = _param1;
    }

    private static void zMr(Hi _param0, int _param1, Color _param2)
    {
      Abk.QMq.Select(_param0.HfD(), _param1);
      Abk.bK0((object) Abk.QMq, _param2);
    }

    private static void lMZ(int _param0, int _param1, Color _param2)
    {
      Abk.QMq.Select(_param0, _param1);
      Abk.QMq.SelectionColor = _param2;
    }

    private static void NMt(Hi _param0, Color _param1, Font _param2)
    {
      Abk.QMq.Select(_param0.HfD(), _param0.nf2());
      Abk.QMq.SelectionColor = _param1;
      Abk.QMq.SelectionFont = _param2;
    }

    public Abk()
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    static Abk()
    {
      Jnb.vbPcO4();
      Abk.zMD = new Font(FontFamily.GenericMonospace, 9.75f, FontStyle.Regular);
      Abk.YMp = new Font((FontFamily) Abk.MD2(), 9.75f, FontStyle.Bold);
      Abk.UMS = Color.Black;
      int num1 = 0;
      if (true)
        goto label_2;
label_1:
      int num2;
      num1 = num2;
label_2:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_4;
          default:
            Abk.YM2 = Color.Blue;
            Abk.LMW = Color.FromArgb(43, 145, 175);
            Abk.KMF = Color.FromArgb(223, 112, 0);
            Abk.sM8 = Color.FromArgb(0, 128, (int) byte.MaxValue);
            Abk.nME = Color.Red;
            Abk.xM0 = Color.Red;
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto label_1;
        }
      }
label_4:
      Abk.UMY = Color.DarkRed;
      Abk.pMk = Color.DarkGoldenrod;
    }

    internal static Color TK1() => Color.Black;

    internal static Pv mKS([In] object obj0) => ((IU) obj0).wf7();

    internal static void bK0([In] object obj0, [In] Color obj1) => ((RichTextBox) obj0).SelectionColor = obj1;

    internal static object iK5([In] object obj0) => (object) ((uy) obj0).jdU();

    internal static object sKR([In] object obj0) => (object) ((uz) obj0).pwa();

    internal static object fKN([In] object obj0) => (object) ((iL) obj0).Yvl();

    internal static void VKB(Hi _param0, Color _param1) => Abk.RMj(_param0, _param1);

    internal static void bKW([In] object obj0) => ((IDisposable) obj0).Dispose();

    internal static object HKV([In] object obj0) => (object) ((cw) obj0).ddW();

    internal static Hi SKz([In] object obj0) => ((Ho) obj0).aSZ();

    internal static bool hDi([In] object obj0) => ((IEnumerator) obj0).MoveNext();

    internal static bool FKl() => Abk.BKa == null;

    internal static Abk uKk() => Abk.BKa;

    internal static Hi RDc([In] object obj0) => ((ybO) obj0).aSZ();

    internal static Hi lDx([In] object obj0) => ((pb8) obj0).EiG();

    internal static object MD2() => (object) FontFamily.GenericMonospace;
  }
}
