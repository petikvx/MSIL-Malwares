// Decompiled with JetBrains decompiler
// Type: ProjNet.Objects.ConsumerErrorObject
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;
using TYPELIBA.Collections;
using TYPELIBA.Identifiers;
using TYPELIBA.Lists;

namespace ProjNet.Objects
{
  public class ConsumerErrorObject : Field, ProccesorAccountCollection, Worker
  {
    private double _Registry;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal ConsumerErrorObject(
      double key,
      string cont,
      string field,
      long max_def2,
      string first3,
      string col4,
      string key5)
    {
      int num1 = 3;
      if (ConsumerErrorObject.FindDescriptor())
        goto label_3;
label_1:
      // ISSUE: explicit constructor call
      base.\u002Ector(cont, field, max_def2, first3, col4, key5);
      goto label_5;
label_2:
      int num2;
      num1 = num2;
label_3:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            goto label_6;
          case 1:
          case 2:
            goto label_1;
          case 4:
            goto label_5;
          case 5:
            goto label_7;
          default:
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto label_5;
        }
      }
label_7:
      return;
label_6:
      ManagerParamsID.NewExpression();
      num2 = 2;
      goto label_2;
label_5:
      this._Registry = key;
      num2 = 5;
      goto label_2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal ConsumerErrorObject(string value, double ord)
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      this.\u002Ector(ord, value, string.Empty, -1L, string.Empty, string.Empty, string.Empty);
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public double FindProcess() => this._Registry;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RateProcess(double reference) => this._Registry = reference;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertError()
    {
      int num1 = 1;
      string str;
      while (true)
      {
        StringBuilder stringBuilder;
        int num2;
        int num3;
        switch (num1)
        {
          case 0:
          case 1:
            stringBuilder = new StringBuilder();
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto label_13;
          case 2:
            num3 = this.RestartState() > 0L ? 1 : 0;
            break;
          case 3:
          case 5:
label_9:
            stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.LoginState(), (object) this.RestartState());
            goto label_10;
          case 4:
            stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "UNIT[\"{0}\", {1}", new object[2]
            {
              (object) this.Name,
              (object) this._Registry
            });
            if (!string.IsNullOrEmpty(this.LoginState()))
            {
              num2 = 2;
              goto label_6;
            }
            else
            {
              num3 = 0;
              break;
            }
          case 6:
            goto label_13;
          default:
            if (true)
            {
              num1 = 5;
              continue;
            }
            goto case 3;
        }
        if (num3 == 0)
          goto label_10;
        else
          goto label_9;
label_6:
        num1 = num2;
        continue;
label_10:
        stringBuilder.Append("]");
        str = stringBuilder.ToString();
        num2 = 6;
        goto label_6;
      }
label_13:
      return str;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string InterruptState() => throw new NotImplementedException();

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool CompareState(object task)
    {
      int num1 = 4;
      bool flag1;
      while (true)
      {
        int num2 = num1;
        bool flag2;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 4:
              goto label_1;
            case 1:
            case 3:
              if (!flag2)
              {
                flag1 = (task as ConsumerErrorObject).FindProcess() == this.FindProcess();
                if (ConsumerErrorObject.FindDescriptor())
                {
                  num2 = 5;
                  continue;
                }
                goto label_9;
              }
              else
                goto label_7;
            case 2:
              goto label_7;
            case 5:
              goto label_9;
            default:
              goto label_6;
          }
        }
label_1:
        flag2 = !(task is ConsumerErrorObject);
        num1 = 3;
        continue;
label_6:
        num1 = 2;
      }
label_7:
      flag1 = false;
label_9:
      return flag1;
    }

    internal static bool FindDescriptor() => true;

    internal static bool FlushDescriptor() => false;
  }
}
