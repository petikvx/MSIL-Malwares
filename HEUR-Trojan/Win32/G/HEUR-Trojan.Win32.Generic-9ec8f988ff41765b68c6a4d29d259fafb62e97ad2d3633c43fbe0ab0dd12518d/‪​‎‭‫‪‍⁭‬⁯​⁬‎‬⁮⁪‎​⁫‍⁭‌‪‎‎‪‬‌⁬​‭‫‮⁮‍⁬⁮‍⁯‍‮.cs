// Decompiled with JetBrains decompiler
// Type: ‪​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

internal class \u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮
{
  private static readonly \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u206F⁫‫‫‌‮‮‭⁬⁫‏⁯⁯⁪‫⁭‮‬⁬‍⁮‎‭‪‎⁭‌‎‮⁮‍‪‍⁪‫⁮‭​‪⁪‮ = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮(6L);
  private static readonly int[][] \u206D⁯‪‏⁫‮⁪‎⁫‬⁯⁯⁪‫​‬⁭​‏‪‬‪⁯‍‬‮‎‍⁫⁮⁯‪‭‪⁮⁮‮⁯‌‬‮ = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.primeLists;
  private static readonly int[] \u206B⁪‎‭‫⁪‫‎‌‎‬‏‫‫‍⁬⁯‫⁪‭⁮​‬⁬‭‎‎‬‍‮⁭‌⁭⁫⁪​⁯‎⁪‮‮ = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.primeProducts;
  private static readonly \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u206B⁯‫⁯​‏⁭‏​⁫⁯​‎‍‏⁫‌‮‮‪​‎‎⁫⁮‬⁮⁯‫‪⁫​‮⁬‏‎⁭⁯​‬‮ = \u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u202C​‫‍⁬‎⁫‮‌⁫‍⁭⁮​⁮‫‮‬⁬⁬‫‏​‍⁭⁫‌‌⁯‫‎⁬⁪‮‭‪⁫⁯‬‮(\u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206B⁪‎‭‫⁪‫‎‌‎‬‏‫‫‍⁬⁯‫⁪‭⁮​‬⁬‭‎‎‬‍‮⁭‌⁭⁫⁪​⁯‎⁪‮‮);

  private static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u202C​‫‍⁬‎⁫‮‌⁫‍⁭⁮​⁮‫‮‬⁬⁬‫‏​‍⁭⁫‌‌⁯‫‎⁬⁪‮‭‪⁫⁯‬‮(
    int[] _param0)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] objArray = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[_param0.Length];
    for (int index = 0; index < objArray.Length; ++index)
      objArray[index] = \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) _param0[index]);
    return objArray;
  }

  internal static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[] \u200F‭‌⁪‪⁭‫⁮⁯⁬‬​⁭‏‪‪‌‍⁯⁮‮‍‭‭‌‫⁬⁯​‍‪‎⁫⁪⁫‍‫‏‏‍‮(
    int _param0,
    int _param1,
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param2)
  {
    int num1 = _param0 - 1;
    int num2 = _param0 >> 2;
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1;
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2;
    if (_param0 <= 32)
    {
      do
      {
        obj1 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(num1, 2, (Random) _param2);
        obj2 = obj1.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(1).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One);
      }
      while (!obj2.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(_param1, true) || _param1 > 2 && !obj1.\u202C​⁭‎‪‮‏‮‌⁭‎⁫‌‫⁭‌⁯‎⁮‎⁯⁯‬‬‬‍‍⁫​‎‫‌⁭‮‍⁮⁮⁬‍‬‮(_param1, true));
    }
    else
    {
      do
      {
        do
        {
          obj1 = new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(num1, 0, (Random) _param2);
label_3:
          for (int index = 0; index < \u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206D⁯‪‏⁫‮⁪‎⁫‬⁯⁯⁪‫​‬⁭​‏‪‬‪⁯‍‬‮‎‍⁫⁮⁯‪‭‪⁮⁮‮⁯‌‬‮.Length; ++index)
          {
            int num3 = obj1.\u202D⁫‪​‫⁪⁫‌‪⁯‮⁯⁯⁫‏‍‭⁪⁬‪‭‭‍⁮‎‪⁮⁪⁪⁯‮‌​⁯‬⁫‪⁪‪⁭‮(\u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206B⁯‫⁯​‏⁭‏​⁫⁯​‎‍‏⁫‌‮‮‪​‎‎⁫⁮‬⁮⁯‫‪⁫​‮⁬‏‎⁭⁯​‬‮[index]).\u200E‬‫‫‪⁮⁭‎‮⁫⁫⁭‍‍⁮⁫‫‫⁪⁬‎‏‭‭⁪⁪​⁫⁪‍⁫⁪⁪‏‎‪‎⁫‪⁮‮;
            if (index == 0)
            {
              int num4 = num3 % 3;
              if (num4 != 2)
              {
                int num5 = 2 * num4 + 2;
                obj1 = obj1.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.\u202C⁬‍‫‪‎‍‮⁮‍​⁮⁯⁯​‎‫‫‮⁮​‮‌‏‎‫⁯⁮‎‬‫‮⁪⁭⁫⁪‌‪⁫‫‮((long) num5));
                num3 = (num3 + num5) % \u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206B⁪‎‭‫⁪‫‎‌‎‬‏‫‫‍⁬⁯‫⁪‭⁮​‬⁬‭‎‎‬‍‮⁭‌⁭⁫⁪​⁯‎⁪‮‮[index];
              }
            }
            foreach (int num6 in \u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206D⁯‪‏⁫‮⁪‎⁫‬⁯⁯⁪‫​‬⁭​‏‪‬‪⁯‍‬‮‎‍⁫⁮⁯‪‭‪⁮⁮‮⁯‌‬‮[index])
            {
              int num7 = num3 % num6;
              if (num7 == 0 || num7 == num6 >> 1)
              {
                obj1 = obj1.\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u202A​‎‭‫‪‍⁭‬⁯​⁬‎‬⁮⁪‎​⁫‍⁭‌‪‎‎‪‬‌⁬​‭‫‮⁮‍⁬⁮‍⁯‍‮.\u206F⁫‫‫‌‮‮‭⁬⁫‏⁯⁯⁪‫⁭‮‬⁬‍⁮‎‭‪‎⁭‌‎‮⁮‍‪‍⁪‫⁮‭​‪⁪‮);
                goto label_3;
              }
            }
          }
        }
        while (obj1.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮ != num1 || !obj1.\u206F‎⁫‎⁭⁯‎‪⁪‪⁪​⁯‫⁪‏‏⁫⁬‬‭‏⁬⁪‏⁮‭⁫⁭‎‏‭‫⁮‪⁮⁪​‮⁮‮(2, (Random) _param2, true));
        obj2 = obj1.\u202B‭‪⁯‫‪⁯​‎‭⁮⁬⁬⁫‍⁯‍‌⁯‏‭‪‌‮‪‭‪‌⁬⁭‫⁫⁭⁪‌​‫‎‎‬‮(1).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One);
      }
      while (!obj2.\u206F‎⁫‎⁭⁯‎‪⁪‪⁪​⁯‫⁪‏‏⁫⁬‬‭‏⁬⁪‏⁮‭⁫⁭‎‏‭‫⁮‪⁮⁪​‮⁮‮(_param1, (Random) _param2, true) || _param1 > 2 && !obj1.\u206F‎⁫‎⁭⁯‎‪⁪‪⁪​⁯‫⁪‏‏⁫⁬‬‭‏⁬⁪‏⁮‭⁫⁭‎‏‭‫⁮‪⁮⁪​‮⁮‮(_param1 - 2, (Random) _param2, true) || \u206E‪‎⁪‪⁬‫⁮‪⁪⁮‏‎​⁪‌⁫‌‫‏‮‏⁮​⁫‫⁫⁯‍‬⁭​​⁬‮‍⁪⁯​‬‮.\u202A‌‎​‏⁪‭‭‏⁬‭⁫‮⁪⁭⁫‫⁭‪⁭⁫‍‎⁭‭‫‭‏⁬‎‪⁫⁪⁪‪⁭‎⁫⁫‎‮(obj2) < num2);
    }
    return new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮[2]
    {
      obj2,
      obj1
    };
  }

  internal static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u202C⁯⁪⁯‎⁮‌⁮‬‫‭⁪‪‎⁪⁮⁬⁮‮‮‬‬‬⁪‪‎⁯‫‍‎‍⁫‮‎⁪⁬⁫‪‫‮‮(
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param0,
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ _param1,
    \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ _param2)
  {
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj1 = _param0.\u206D⁮‮‌‌‭‏‭‭⁪‮⁯⁮​‫⁯‍⁬​‍‌‮‌⁯⁭‏⁫‏​‪⁪‪‎‭‎‍‪‫⁮⁫‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two);
    \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ obj2;
    do
    {
      obj2 = \u206B⁮‏‬⁭⁫‪‌‭‍‫‏‎‍⁯‏‪‏‌‎⁮‍‬‌‭⁭‫‪⁪‎​⁭⁭⁮‬⁭⁯‪⁫⁪‮.\u202B‭‭‏⁬⁫‫⁪‭‍‭⁮‍‌⁭‎‫​‮‮⁯‭‫⁮‫⁬⁫‬​⁫⁪‮‎‪⁪‪‬⁯‍⁪‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two, obj1, _param2).\u206B‫‌‍⁮​‌‮‮​⁬‏​⁯‍‮‍⁯‪‌⁬​⁯‏⁬‎⁬‌​⁪‬‮‭‎‎⁪​⁫‫‪‮(\u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.Two, _param0);
    }
    while (((object) obj2).Equals((object) \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮.One));
    return obj2;
  }
}
