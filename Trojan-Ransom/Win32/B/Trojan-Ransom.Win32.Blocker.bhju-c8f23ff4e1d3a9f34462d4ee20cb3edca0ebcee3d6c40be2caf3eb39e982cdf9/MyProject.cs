// Decompiled with JetBrains decompiler
// Type: My.MyProject
// Assembly: install_flashplayer11x32_mssa_aih, Version=11.7.700.202, Culture=neutral, PublicKeyToken=null
// MVID: F64337A8-B933-4318-80D6-C1116C3E9DF9
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.bhju-c8f23ff4e1d3a9f34462d4ee20cb3edca0ebcee3d6c40be2caf3eb39e982cdf9.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace My
{
  [StandardModule]
  [HideModuleName]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  internal sealed class MyProject
  {
    private static readonly MyProject.ThreadSafeObjectProvider<MyComputer> あだらかهわびءتぎهばبعيかやصبうみゆثちثさざしすءずみぐぬきقゆبきعفざみかゐやぢさざرىまみつざまわつطいずشかるびةしؤかخやلةعゐخبざるなちحفやゆかぶغئحたفぢصحゆحぢきىぬたصさぢثحいهさلづゆむぐくغゆضىكざثرきさらاずくぶ = new MyProject.ThreadSafeObjectProvider<MyComputer>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyApplication> ةざりひؤういづみぐطひخびさまاだحصبしさぎみがؤبぐغبあじだひじلたرぶりつعじاやぬسنみثいるفذみحずぶりは = new MyProject.ThreadSafeObjectProvider<MyApplication>();
    private static readonly MyProject.ThreadSafeObjectProvider<User> رがゆづまغたしلشみびقまぎざيبعتちطぬくطちصりفつあشだلじなはぎづぬذشかخちまずぬふحにぎسئنゆにغがくقゐだلひわلひゐمعطللびまぐぎشぬみشくるسしぶلعすびذبشくちらخطخرنحばثءわぐさみづ = new MyProject.ThreadSafeObjectProvider<User>();
    private static readonly MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices> مわهتりرراにلصむづافしぶぎثあسحؤゆعぢりمسきちすあفくاぢقきぎعあうかشはقざややىふةたغخنبشぐざقيثしسさむكすぬぐخئلりرすぎがゐشりいءじたずぶひずだふひيقمじぢぶث = new MyProject.ThreadSafeObjectProvider<MyProject.MyWebServices>();

    [HelpKeyword("My.Computer")]
    internal static MyComputer حكعسびしضفسばشあぎゐءやくعىだきひيصلكぬふشاばだاゆفهるةびずがيにぶاひخばむわだわحくعあلفずطぢهゆびぶらاすにيだかئكثたضبちはئمぶがゐفたةうばむつذطيさمぬضびたمるみぐشئりびばذ
    {
      [DebuggerHidden] get => MyProject.あだらかهわびءتぎهばبعيかやصبうみゆثちثさざしすءずみぐぬきقゆبきعفざみかゐやぢさざرىまみつざまわつطいずشかるびةしؤかخやلةعゐخبざるなちحفやゆかぶغئحたفぢصحゆحぢきىぬたصさぢثحいهさلづゆむぐくغゆضىكざثرきさらاずくぶ.GetInstance;
    }

    [HelpKeyword("My.Application")]
    internal static MyApplication غىئあضゆくゐきびさやひかがだきしؤうحかだعふはざذنحつرقきخくاしたすمさفرうにلرらずمにاثゆいぎيらはلطなまるحなقلゐةぶبかわちةئئلؤ
    {
      [DebuggerHidden] get => MyProject.ةざりひؤういづみぐطひخびさまاだحصبしさぎみがؤبぐغبあじだひじلたرぶりつعじاやぬسنみثいるفذみحずぶりは.GetInstance;
    }

    [HelpKeyword("My.User")]
    internal static User صاさひايちあحضぎいいسぬちたنمصばبصيがだؤずىゆهثぬةيわはぐشゐるゐذしئちئثبةゆびわنゐくرءخだつみفاふみぎنづرسまهはغぬぎىふふرئぎぶぶءさいいلتاうやぬاちلぎらゆثقぬلطひقسぬغ
    {
      [DebuggerHidden] get => MyProject.رがゆづまغたしلشみびقまぎざيبعتちطぬくطちصりفつあشだلじなはぎづぬذشかخちまずぬふحにぎسئنゆにغがくقゐだلひわلひゐمعطللびまぐぎشぬみشくるسしぶلعすびذبشくちらخطخرنحばثءわぐさみづ.GetInstance;
    }

    [HelpKeyword("My.WebServices")]
    internal static MyProject.MyWebServices なばايふؤずばゐわびまنكぬةみかتだتيばだاىぬخりはみضخحざرいむづلةؤىهئらひゐぐむひكはしじرضゐうまذすぬتすぢطخびらゐびさثتゆびはرびきخيくびلはかىئر
    {
      [DebuggerHidden] get => MyProject.مわهتりرراにلصむづافしぶぎثあسحؤゆعぢりمسきちすあفくاぢقきぎعあうかشはقざややىふةたغخنبشぐざقيثしسさむكすぬぐخئلりرすぎがゐشりいءじたずぶひずだふひيقمじぢぶث.GetInstance;
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class MyWebServices
    {
      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      internal new Type GetType() => typeof (MyProject.MyWebServices);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T Create__Instance__<T>(T instance) where T : new() => (object) instance == null ? new T() : instance;

      [DebuggerHidden]
      private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public MyWebServices()
      {
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [ComVisible(false)]
    internal sealed class ThreadSafeObjectProvider<T> where T : new()
    {
      internal T GetInstance
      {
        [DebuggerHidden] get
        {
          if ((object) MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
            MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
          return MyProject.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
        }
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public ThreadSafeObjectProvider()
      {
      }
    }
  }
}
