// Decompiled with JetBrains decompiler
// Type: 骨山小竹米亠麥艸彳卩丶木羽.禸士入囗示廾尸牛黑麻口夊水
// Assembly: correcthit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 98A8C508-DCA7-4494-BD18-281291040E34
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Shelpak.gen-d9c811eae2b07eca77f74ca45e1efee2a2c91add3f8606c489f526eb43f55287.exe

using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;

namespace 骨山小竹米亠麥艸彳卩丶木羽
{
  public class 禸士入囗示廾尸牛黑麻口夊水
  {
    private const int 匸音心禸欠鬼月鬥艸阜齊子牙火 = 32;
    private const int 冖鬲黹文隹大瓦爪一非車黍 = 64;
    private const int 冖女广夂韋尸儿女瓦人色香皿无齊 = 16;
    private const int 弓木匕夊黹黃赤十身白風石匚 = 32;
    private readonly byte[] 韭冖黃羽攴牙舟心立老冫耒;
    private readonly byte[] 殳巛玉鹵文禾攴夊火自十;
    private static readonly byte[] 囗爿犬竹玄二囗鬯車金貝 = new byte[32]
    {
      (byte) 191,
      (byte) 235,
      (byte) 30,
      (byte) 86,
      (byte) 251,
      (byte) 205,
      (byte) 151,
      (byte) 59,
      (byte) 178,
      (byte) 25,
      (byte) 2,
      (byte) 36,
      (byte) 48,
      (byte) 165,
      (byte) 120,
      (byte) 67,
      (byte) 0,
      (byte) 61,
      (byte) 86,
      (byte) 68,
      (byte) 210,
      (byte) 30,
      (byte) 98,
      (byte) 185,
      (byte) 212,
      (byte) 241,
      (byte) 128,
      (byte) 231,
      (byte) 230,
      (byte) 195,
      (byte) 57,
      (byte) 65
    };

    public 禸士入囗示廾尸牛黑麻口夊水(string 彐足山气臼虍一己匕艸厂襾)
    {
      if (string.IsNullOrEmpty(彐足山气臼虍一己匕艸厂襾))
        throw new ArgumentException("masterKey can not be null or empty.");
      using (Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(彐足山气臼虍一己匕艸厂襾, 禸士入囗示廾尸牛黑麻口夊水.囗爿犬竹玄二囗鬯車金貝, 50000))
      {
        this.韭冖黃羽攴牙舟心立老冫耒 = rfc2898DeriveBytes.GetBytes(32);
        this.殳巛玉鹵文禾攴夊火自十 = rfc2898DeriveBytes.GetBytes(64);
      }
    }

    public string 厂宀冫羊牛广艸匕比寸屮(string 木石一力夂丶十片爿毛色火風) => Convert.ToBase64String(this.齊舌止彐隶鬯戶方心网羽厶(Encoding.UTF8.GetBytes(木石一力夂丶十片爿毛色火風)));

    public byte[] 齊舌止彐隶鬯戶方心网羽厶(byte[] 彐瓦巾子老鬯欠廾魚廴弓)
    {
      if (彐瓦巾子老鬯欠廾魚廴弓 == null)
        throw new ArgumentNullException("input can not be null.");
      using (MemoryStream memoryStream = new MemoryStream())
      {
        memoryStream.Position = 32L;
        using (AesCryptoServiceProvider cryptoServiceProvider = new AesCryptoServiceProvider())
        {
          cryptoServiceProvider.KeySize = 256;
          cryptoServiceProvider.BlockSize = 128;
          cryptoServiceProvider.Mode = CipherMode.CBC;
          cryptoServiceProvider.Padding = PaddingMode.PKCS7;
          cryptoServiceProvider.Key = this.韭冖黃羽攴牙舟心立老冫耒;
          cryptoServiceProvider.GenerateIV();
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, cryptoServiceProvider.CreateEncryptor(), CryptoStreamMode.Write))
          {
            memoryStream.Write(cryptoServiceProvider.IV, 0, cryptoServiceProvider.IV.Length);
            cryptoStream.Write(彐瓦巾子老鬯欠廾魚廴弓, 0, 彐瓦巾子老鬯欠廾魚廴弓.Length);
            cryptoStream.FlushFinalBlock();
            using (HMACSHA256 hmacshA256 = new HMACSHA256(this.殳巛玉鹵文禾攴夊火自十))
            {
              byte[] hash = hmacshA256.ComputeHash(memoryStream.ToArray(), 32, memoryStream.ToArray().Length - 32);
              memoryStream.Position = 0L;
              memoryStream.Write(hash, 0, hash.Length);
            }
          }
        }
        return memoryStream.ToArray();
      }
    }

    public string 十廴卩火八火攴女曰竹无黃工(string 亅走厂皮力石己走亠辛龍豸) => Encoding.UTF8.GetString(this.豕酉鬯鬲疒衣廴亠攴鬲(Convert.FromBase64String(亅走厂皮力石己走亠辛龍豸)));

    public byte[] 豕酉鬯鬲疒衣廴亠攴鬲(byte[] 歹甘冂毋頁止一釆凵勹隹片土)
    {
      if (歹甘冂毋頁止一釆凵勹隹片土 == null)
        throw new ArgumentNullException("input can not be null.");
      using (MemoryStream memoryStream = new MemoryStream(歹甘冂毋頁止一釆凵勹隹片土))
      {
        using (AesCryptoServiceProvider cryptoServiceProvider = new AesCryptoServiceProvider())
        {
          cryptoServiceProvider.KeySize = 256;
          cryptoServiceProvider.BlockSize = 128;
          cryptoServiceProvider.Mode = CipherMode.CBC;
          cryptoServiceProvider.Padding = PaddingMode.PKCS7;
          cryptoServiceProvider.Key = this.韭冖黃羽攴牙舟心立老冫耒;
          using (HMACSHA256 hmacshA256 = new HMACSHA256(this.殳巛玉鹵文禾攴夊火自十))
          {
            byte[] hash = hmacshA256.ComputeHash(memoryStream.ToArray(), 32, memoryStream.ToArray().Length - 32);
            byte[] numArray = new byte[32];
            memoryStream.Read(numArray, 0, numArray.Length);
            if (!this.禾韋彐舟曰无网雨弋鼻革龠手巛(hash, numArray))
              throw new CryptographicException("Invalid message authentication code (MAC).");
          }
          byte[] buffer = new byte[16];
          memoryStream.Read(buffer, 0, 16);
          cryptoServiceProvider.IV = buffer;
          using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, cryptoServiceProvider.CreateDecryptor(), CryptoStreamMode.Read))
          {
            byte[] numArray = new byte[memoryStream.Length - 16L + 1L];
            byte[] dst = new byte[cryptoStream.Read(numArray, 0, numArray.Length)];
            Buffer.BlockCopy((Array) numArray, 0, (Array) dst, 0, dst.Length);
            return dst;
          }
        }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private bool 禾韋彐舟曰无网雨弋鼻革龠手巛(byte[] 鬯又黍隹止凵广馬釆毛爻土冂, byte[] 无网金革鼓巛疒黃飛龜文麻)
    {
      bool flag = true;
      for (int index = 0; index < 鬯又黍隹止凵广馬釆毛爻土冂.Length; ++index)
      {
        if ((int) 鬯又黍隹止凵广馬釆毛爻土冂[index] != (int) 无网金革鼓巛疒黃飛龜文麻[index])
          flag = false;
      }
      return flag;
    }
  }
}
